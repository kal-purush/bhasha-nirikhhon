{
    "identifiers": [
        "print_function",
        "argparse",
        "copy",
        "errno",
        "os",
        "platform",
        "sys",
        "platform",
        "system",
        "system",
        "system",
        "IS_WINDOWS",
        "PATH_TO_ADD_SUFFIX",
        "extend",
        "os",
        "path",
        "join",
        "IS_DARWIN",
        "os",
        "path",
        "join",
        "PATH_TO_ADD_SUFFIX",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "environ",
        "env_var_subfolders",
        "copy",
        "copy",
        "environ",
        "key",
        "sorted",
        "env_var_subfolders",
        "keys",
        "env_var_subfolders",
        "key",
        "isinstance",
        "subfolders",
        "subfolders",
        "_rollback_env_variable",
        "unmodified_environ",
        "key",
        "subfolders",
        "value",
        "value",
        "lines",
        "append",
        "assignment",
        "key",
        "value",
        "lines",
        "lines",
        "insert",
        "comment",
        "lines",
        "environ",
        "name",
        "subfolders",
        "environ",
        "name",
        "name",
        "environ",
        "path",
        "path",
        "value",
        "split",
        "os",
        "pathsep",
        "path",
        "subfolder",
        "subfolders",
        "subfolder",
        "subfolder",
        "startswith",
        "os",
        "path",
        "sep",
        "os",
        "path",
        "altsep",
        "subfolder",
        "startswith",
        "os",
        "path",
        "altsep",
        "subfolder",
        "subfolder",
        "endswith",
        "os",
        "path",
        "sep",
        "os",
        "path",
        "altsep",
        "subfolder",
        "endswith",
        "os",
        "path",
        "altsep",
        "subfolder",
        "ws_path",
        "_get_workspaces",
        "environ",
        "include_fuerte",
        "include_non_existing",
        "os",
        "path",
        "join",
        "ws_path",
        "subfolder",
        "subfolder",
        "ws_path",
        "env_path",
        "env_paths",
        "env_path",
        "env_path",
        "env_path",
        "os",
        "path",
        "sep",
        "os",
        "path",
        "altsep",
        "env_path",
        "env_path_clean",
        "path_to_find",
        "env_path",
        "path_to_remove",
        "env_paths",
        "remove",
        "path_to_remove",
        "os",
        "pathsep",
        "join",
        "env_paths",
        "new_value",
        "value_modified",
        "environ",
        "include_fuerte",
        "include_non_existing",
        "environ",
        "env_name",
        "env_name",
        "environ",
        "path",
        "path",
        "value",
        "split",
        "os",
        "pathsep",
        "path",
        "path",
        "path",
        "paths",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "path",
        "CATKIN_MARKER_FILE",
        "include_fuerte",
        "path",
        "startswith",
        "include_non_existing",
        "os",
        "path",
        "exists",
        "path",
        "workspaces",
        "environ",
        "env_var_subfolders",
        "workspaces",
        "lines",
        "append",
        "comment",
        "path",
        "path",
        "workspaces",
        "split",
        "os",
        "pathsep",
        "path",
        "_prefix_env_variable",
        "environ",
        "paths",
        "lines",
        "append",
        "prepend",
        "environ",
        "prefix",
        "key",
        "sorted",
        "key",
        "key",
        "env_var_subfolders",
        "keys",
        "key",
        "env_var_subfolders",
        "key",
        "_prefix_env_variable",
        "environ",
        "key",
        "paths",
        "subfolder",
        "lines",
        "append",
        "prepend",
        "environ",
        "key",
        "prefix",
        "lines",
        "environ",
        "name",
        "paths",
        "subfolders",
        "environ",
        "name",
        "name",
        "environ",
        "path",
        "path",
        "value",
        "split",
        "os",
        "pathsep",
        "path",
        "path",
        "paths",
        "isinstance",
        "subfolders",
        "subfolders",
        "subfolder",
        "subfolders",
        "path",
        "subfolder",
        "os",
        "path",
        "join",
        "path_tmp",
        "subfolder",
        "os",
        "path",
        "exists",
        "path_tmp",
        "path_tmp",
        "environ_paths",
        "path_tmp",
        "checked_paths",
        "checked_paths",
        "append",
        "path_tmp",
        "os",
        "pathsep",
        "join",
        "checked_paths",
        "prefix_str",
        "environ_paths",
        "prefix_str",
        "os",
        "pathsep",
        "prefix_str",
        "key",
        "value",
        "IS_WINDOWS",
        "key",
        "value",
        "key",
        "value",
        "msg",
        "IS_WINDOWS",
        "msg",
        "msg",
        "environ",
        "key",
        "prefix",
        "key",
        "environ",
        "environ",
        "key",
        "assignment",
        "key",
        "prefix",
        "IS_WINDOWS",
        "key",
        "prefix",
        "key",
        "key",
        "prefix",
        "key",
        "environ",
        "cmake_prefix_path",
        "lines",
        "append",
        "comment",
        "IS_WINDOWS",
        "environ",
        "IS_WINDOWS",
        "environ",
        "environ",
        "path",
        "path",
        "cmake_prefix_path",
        "split",
        "os",
        "pathsep",
        "path",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "path",
        "CATKIN_MARKER_FILE",
        "workspace",
        "reversed",
        "workspaces",
        "os",
        "path",
        "join",
        "workspace",
        "os",
        "path",
        "isdir",
        "env_hook_dir",
        "filename",
        "sorted",
        "os",
        "listdir",
        "env_hook_dir",
        "filename",
        "endswith",
        "generic_env_hook_ext",
        "filename",
        "generic_env_hooks_by_filename",
        "generic_env_hooks",
        "index",
        "generic_env_hooks_by_filename",
        "filename",
        "generic_env_hooks",
        "pop",
        "i",
        "generic_env_hooks_workspace",
        "pop",
        "i",
        "generic_env_hooks",
        "append",
        "os",
        "path",
        "join",
        "env_hook_dir",
        "filename",
        "generic_env_hooks_workspace",
        "append",
        "workspace",
        "generic_env_hooks",
        "specific_env_hook_ext",
        "filename",
        "endswith",
        "specific_env_hook_ext",
        "filename",
        "specific_env_hooks_by_filename",
        "specific_env_hooks",
        "index",
        "specific_env_hooks_by_filename",
        "filename",
        "specific_env_hooks",
        "pop",
        "i",
        "specific_env_hooks_workspace",
        "pop",
        "i",
        "specific_env_hooks",
        "append",
        "os",
        "path",
        "join",
        "env_hook_dir",
        "filename",
        "specific_env_hooks_workspace",
        "append",
        "workspace",
        "specific_env_hooks",
        "generic_env_hooks",
        "specific_env_hooks",
        "generic_env_hooks_workspace",
        "specific_env_hooks_workspace",
        "len",
        "env_hooks",
        "lines",
        "append",
        "assignment",
        "count",
        "i",
        "count",
        "lines",
        "append",
        "assignment",
        "i",
        "env_hooks",
        "i",
        "lines",
        "append",
        "assignment",
        "i",
        "env_hooks_workspace",
        "i",
        "lines",
        "args",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_known_args",
        "args",
        "args",
        "_parse_arguments",
        "e",
        "e",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "args",
        "local",
        "split",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "sep",
        "base_path",
        "replace",
        "os",
        "path",
        "sep",
        "base_path",
        "CMAKE_PREFIX_PATH",
        "CMAKE_PREFIX_PATH",
        "insert",
        "base_path",
        "os",
        "pathsep",
        "join",
        "CMAKE_PREFIX_PATH",
        "os",
        "environ",
        "args",
        "extend",
        "lines",
        "rollback_env_variables",
        "environ",
        "ENV_VAR_SUBFOLDERS",
        "lines",
        "prepend_env_variables",
        "environ",
        "ENV_VAR_SUBFOLDERS",
        "CMAKE_PREFIX_PATH",
        "lines",
        "find_env_hooks",
        "environ",
        "CMAKE_PREFIX_PATH",
        "join",
        "lines",
        "sys",
        "stdout",
        "flush",
        "IOError",
        "e",
        "e",
        "errno",
        "errno",
        "EPIPE",
        "e",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "sys",
        "exit"
    ],
    "literals": [
        "'.catkin'",
        "'Darwin'",
        "'Windows'",
        "'bin'",
        "'lib'",
        "'lib'",
        "'x86_64-linux-gnu'",
        "'CMAKE_PREFIX_PATH'",
        "''",
        "'LD_LIBRARY_PATH'",
        "'DYLD_LIBRARY_PATH'",
        "'lib'",
        "'lib'",
        "'x86_64-linux-gnu'",
        "'PATH'",
        "'PKG_CONFIG_PATH'",
        "'lib'",
        "'pkgconfig'",
        "'lib'",
        "'x86_64-linux-gnu'",
        "'pkgconfig'",
        "'PYTHONPATH'",
        "'lib/python3/dist-packages'",
        "'reset environment variables by unrolling modifications based on all workspaces in CMAKE_PREFIX_PATH'",
        "''",
        "'CMAKE_PREFIX_PATH'",
        "''",
        "'/opt/ros/fuerte'",
        "'prepend folders of workspaces to environment variables'",
        "'CMAKE_PREFIX_PATH'",
        "''",
        "'CMAKE_PREFIX_PATH'",
        "'CMAKE_PREFIX_PATH'",
        "''",
        "''",
        "'export %s=\"%s\"'",
        "'set %s=%s'",
        "'# %s'",
        "'REM %s'",
        "'export %s=\"%s$%s\"'",
        "'set %s=%s%%%s%%'",
        "'found environment hooks in workspaces'",
        "'bat'",
        "'sh'",
        "'CATKIN_SHELL'",
        "'CATKIN_SHELL'",
        "'CATKIN_SHELL'",
        "'etc'",
        "'catkin'",
        "'profile.d'",
        "'.%s'",
        "'.%s'",
        "'_CATKIN_ENVIRONMENT_HOOKS_COUNT'",
        "'_CATKIN_ENVIRONMENT_HOOKS_%d'",
        "'_CATKIN_ENVIRONMENT_HOOKS_%d_WORKSPACE'",
        "'Generates code blocks for the setup.SHELL script.'",
        "'--extend'",
        "'store_true'",
        "'Skip unsetting previous environment variables to extend context'",
        "'--local'",
        "'store_true'",
        "'Only consider this prefix path and ignore other prefix path in the environment'",
        "'__main__'",
        "r'/home/shubh/catkin_ws/devel;/opt/ros/noetic'",
        "';'",
        "'/'",
        "'/'",
        "'\\n'"
    ],
    "variables": [
        "CATKIN_MARKER_FILE",
        "system",
        "IS_DARWIN",
        "IS_WINDOWS",
        "PATH_TO_ADD_SUFFIX",
        "ENV_VAR_SUBFOLDERS",
        "lines",
        "unmodified_environ",
        "subfolders",
        "subfolders",
        "value",
        "environ",
        "key",
        "value",
        "env_paths",
        "value_modified",
        "subfolder",
        "subfolder",
        "path_to_find",
        "path_to_remove",
        "env_path_clean",
        "path_to_remove",
        "value_modified",
        "new_value",
        "env_name",
        "value",
        "paths",
        "workspaces",
        "lines",
        "paths",
        "prefix",
        "subfolder",
        "prefix",
        "value",
        "environ_paths",
        "checked_paths",
        "subfolders",
        "path_tmp",
        "path_tmp",
        "prefix_str",
        "lines",
        "generic_env_hooks",
        "generic_env_hooks_workspace",
        "specific_env_hooks",
        "specific_env_hooks_workspace",
        "generic_env_hooks_by_filename",
        "specific_env_hooks_by_filename",
        "generic_env_hook_ext",
        "specific_env_hook_ext",
        "workspaces",
        "env_hook_dir",
        "i",
        "generic_env_hooks_by_filename",
        "filename",
        "i",
        "specific_env_hooks_by_filename",
        "filename",
        "env_hooks",
        "env_hooks_workspace",
        "count",
        "parser",
        "args",
        "CMAKE_PREFIX_PATH",
        "CMAKE_PREFIX_PATH",
        "base_path",
        "base_path",
        "CMAKE_PREFIX_PATH",
        "environ",
        "lines"
    ],
    "comments": [
        "!/usr/bin/python3",
        "-*- coding: utf-8 -*-",
        "Software License Agreement (BSD License)",
        "",
        "Copyright (c) 2012, Willow Garage, Inc.",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions",
        "are met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "copyright notice, this list of conditions and the following",
        "disclaimer in the documentation and/or other materials provided",
        "with the distribution.",
        "contributors may be used to endorse or promote products derived",
        "from this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS",
        "FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE",
        "COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,",
        "INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,",
        "BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;",
        "LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",
        "CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",
        "LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN",
        "ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",
        "POSSIBILITY OF SUCH DAMAGE.",
        "while catkin recommends putting dll's into bin, 3rd party packages often put dll's into lib",
        "since Windows finds dll's via the PATH variable, prepend it with path to lib",
        "subfolder of workspace prepended to CMAKE_PREFIX_PATH",
        "get all cmake prefix paths",
        "remove non-workspace paths",
        "skip nonexistent paths",
        "exclude any path already in env and any path we already added",
        "remove non-workspace paths",
        "remove previous env hook with same name if present",
        "append env hook",
        "remove previous env hook with same name if present",
        "append env hook",
        "environment at generation time",
        "don't consider any other prefix path than this one",
        "prepend current workspace if not already part of CPP",
        "CMAKE_PREFIX_PATH uses forward slash on all platforms, but __file__ is platform dependent",
        "base_path on Windows contains backward slashes, need to be converted to forward slashes before comparison",
        "need to explicitly flush the output",
        "and catch potential \"broken pipe\" if stdout is not writable",
        "which can happen when piping the output to a file but the disk is full"
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above",
        "* Neither the name of Willow Garage, Inc. nor the names of its",
        "\"\"\"This file generates shell code for the setup.SHELL scripts to set environment variables.\"\"\"",
        "\"\"\"\n    Generate shell code to reset environment variables.\n\n    by unrolling modifications based on all workspaces in CMAKE_PREFIX_PATH.\n    This does not cover modifications performed by environment hooks.\n    \"\"\"",
        "\"\"\"\n    For each catkin workspace in CMAKE_PREFIX_PATH remove the first entry from env[NAME] matching workspace + subfolder.\n\n    :param subfolders: list of str '' or subfoldername that may start with '/'\n    :returns: the updated value of the environment variable.\n    \"\"\"",
        "\"\"\"\n    Based on CMAKE_PREFIX_PATH return all catkin workspaces.\n\n    :param include_fuerte: The flag if paths starting with '/opt/ros/fuerte' should be considered workspaces, ``bool``\n    \"\"\"",
        "\"\"\"Generate shell code to prepend environment variables for the all workspaces.\"\"\"",
        "\"\"\"\n    Return the prefix to prepend to the environment variable NAME.\n\n    Adding any path in NEW_PATHS_STR without creating duplicate or empty items.\n    \"\"\"",
        "\"\"\"Generate shell code with found environment hooks for the all workspaces.\"\"\""
    ],
    "functions": [
        "rollback_env_variables",
        "_rollback_env_variable",
        "_get_workspaces",
        "prepend_env_variables",
        "_prefix_env_variable",
        "assignment",
        "comment",
        "prepend",
        "find_env_hooks",
        "_parse_arguments"
    ],
    "classes": []
}