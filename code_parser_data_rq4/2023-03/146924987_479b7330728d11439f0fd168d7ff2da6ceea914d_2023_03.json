{
    "identifiers": [
        "com",
        "linkedin",
        "avroutil1",
        "compatibility",
        "com",
        "linkedin",
        "avroutil1",
        "testcommon",
        "TestUtil",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "org",
        "apache",
        "avro",
        "Schema",
        "org",
        "testng",
        "Assert",
        "org",
        "testng",
        "annotations",
        "DataProvider",
        "org",
        "testng",
        "annotations",
        "Test",
        "DataProvider",
        "Test",
        "dataProvider",
        "originalAvscFile",
        "resultAvscFile",
        "inheritNamespace",
        "nameSpace",
        "originalAvsc",
        "TestUtil",
        "load",
        "originalAvscFile",
        "originalSchema",
        "Schema",
        "parse",
        "originalAvsc",
        "newSchema",
        "AvroCompatibilityHelper",
        "newSchema",
        "originalSchema",
        "setNamespace",
        "nameSpace",
        "setInheritNamespace",
        "inheritNamespace",
        "build",
        "validateSchema",
        "originalSchema",
        "newSchema",
        "nameSpace",
        "inheritNamespace",
        "newAvsc",
        "AvroCompatibilityHelper",
        "toAvsc",
        "newSchema",
        "AvscGenerationConfig",
        "CORRECT_PRETTY",
        "targetAvsc",
        "TestUtil",
        "load",
        "resultAvscFile",
        "Assert",
        "assertEquals",
        "newAvsc",
        "targetAvsc",
        "originalSchema",
        "newSchema",
        "parentNameSpace",
        "inheritNamespace",
        "level",
        "originalSchema",
        "newSchema",
        "Assert",
        "assertNotNull",
        "originalSchema",
        "Assert",
        "assertNotNull",
        "newSchema",
        "Assert",
        "assertEquals",
        "newSchema",
        "getType",
        "originalSchema",
        "getType",
        "originalSchema",
        "getType",
        "FIXED",
        "Assert",
        "assertEquals",
        "newSchema",
        "getName",
        "originalSchema",
        "getName",
        "Assert",
        "assertEquals",
        "newSchema",
        "getDoc",
        "originalSchema",
        "getDoc",
        "inheritNamespace",
        "Optional",
        "ofNullable",
        "originalSchema",
        "getNamespace",
        "orElse",
        "parentNameSpace",
        "originalSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "getFixedSize",
        "originalSchema",
        "getFixedSize",
        "ENUM",
        "Assert",
        "assertEquals",
        "newSchema",
        "getName",
        "originalSchema",
        "getName",
        "Assert",
        "assertEquals",
        "newSchema",
        "getDoc",
        "originalSchema",
        "getDoc",
        "inheritNamespace",
        "Optional",
        "ofNullable",
        "originalSchema",
        "getNamespace",
        "orElse",
        "parentNameSpace",
        "originalSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "getEnumSymbols",
        "originalSchema",
        "getEnumSymbols",
        "RECORD",
        "Assert",
        "assertEquals",
        "newSchema",
        "getName",
        "originalSchema",
        "getName",
        "Assert",
        "assertEquals",
        "newSchema",
        "getDoc",
        "originalSchema",
        "getDoc",
        "inheritNamespace",
        "level",
        "Optional",
        "ofNullable",
        "originalSchema",
        "getNamespace",
        "orElse",
        "parentNameSpace",
        "originalSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "getNamespace",
        "Assert",
        "assertEquals",
        "newSchema",
        "isError",
        "originalSchema",
        "isError",
        "validateFields",
        "originalSchema",
        "getFields",
        "newSchema",
        "getFields",
        "parentNameSpace",
        "inheritNamespace",
        "level",
        "ARRAY",
        "validateSchema",
        "originalSchema",
        "getElementType",
        "newSchema",
        "getElementType",
        "parentNameSpace",
        "inheritNamespace",
        "level",
        "MAP",
        "validateSchema",
        "originalSchema",
        "getValueType",
        "newSchema",
        "getValueType",
        "parentNameSpace",
        "inheritNamespace",
        "level",
        "UNION",
        "validateSchemas",
        "originalSchema",
        "getTypes",
        "newSchema",
        "getTypes",
        "parentNameSpace",
        "inheritNamespace",
        "level",
        "originalFields",
        "newFields",
        "parentNamespace",
        "inheritNamespace",
        "level",
        "originalFields",
        "newFields",
        "Assert",
        "assertNotNull",
        "originalFields",
        "Assert",
        "assertNotNull",
        "newFields",
        "Assert",
        "assertEquals",
        "originalFields",
        "size",
        "newFields",
        "size",
        "i",
        "i",
        "originalFields",
        "size",
        "i",
        "validateSchema",
        "originalFields",
        "get",
        "i",
        "schema",
        "newFields",
        "get",
        "i",
        "schema",
        "parentNamespace",
        "inheritNamespace",
        "level",
        "originalSchemas",
        "newSchemas",
        "parentNamespace",
        "inheritNamespace",
        "level",
        "originalSchemas",
        "newSchemas",
        "Assert",
        "assertNotNull",
        "originalSchemas",
        "Assert",
        "assertNotNull",
        "newSchemas",
        "Assert",
        "assertEquals",
        "originalSchemas",
        "size",
        "newSchemas",
        "size",
        "i",
        "i",
        "originalSchemas",
        "size",
        "i",
        "validateSchema",
        "originalSchemas",
        "get",
        "i",
        "newSchemas",
        "get",
        "i",
        "parentNamespace",
        "inheritNamespace",
        "level"
    ],
    "literals": [
        "\"allavro/ComplexRecord.avsc\"",
        "\"allavro/ComplexRecordInherit.avsc\"",
        "\"allavro/ComplexRecordInnerNamespace.avsc\"",
        "\"allavro/ComplexRecordInnerNamespaceInherit.avsc\"",
        "\"allavro/ComplexRecord.avsc\"",
        "\"allavro/ComplexRecordNoInherit.avsc\"",
        "\"allavro/ComplexRecordInnerNamespace.avsc\"",
        "\"allavro/ComplexRecordInnerNamespaceNoInherit.avsc\"",
        "\"TestSchemeBuildWithNamespaceInheritProvider\"",
        "\"TopNamespace\""
    ],
    "variables": [],
    "comments": [
        "build new schema and add namespace at top level"
    ],
    "docstrings": [
        "* Copyright 2023 LinkedIn Corp.\n * Licensed under the BSD 2-Clause License (the \"License\").\n * See License in the project root for license information."
    ],
    "functions": [
        "TestSchemeBuildWithNamespaceInheritProvider",
        "testSchemaBuilderWithNamespaceInherit",
        "validateSchema",
        "validateFields",
        "validateSchemas"
    ],
    "classes": [
        "SchemaBuilderNamespaceInheritTest"
    ]
}