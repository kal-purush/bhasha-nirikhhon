{
    "identifiers": [
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "physical",
        "memory",
        "execute",
        "stream",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "physical",
        "exception",
        "PhysicalException",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "physical",
        "memory",
        "execute",
        "utils",
        "RowUtils",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "data",
        "Value",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "data",
        "read",
        "Header",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "data",
        "read",
        "Row",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "data",
        "read",
        "RowStream",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "system",
        "utils",
        "ValueUtils",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "shared",
        "MarkJoin",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "thrift",
        "DataType",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "utils",
        "Pair",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "physical",
        "memory",
        "execute",
        "utils",
        "FilterUtils",
        "getJoinPathFromFilter",
        "cn",
        "edu",
        "tsinghua",
        "iginx",
        "engine",
        "physical",
        "memory",
        "execute",
        "utils",
        "RowUtils",
        "constructNewHead",
        "markJoin",
        "streamBHashMap",
        "cache",
        "header",
        "hasInitialized",
        "joinPathA",
        "needTypeCast",
        "markJoin",
        "streamA",
        "streamB",
        "streamA",
        "streamB",
        "markJoin",
        "markJoin",
        "streamBHashMap",
        "cache",
        "header",
        "constructNewHead",
        "streamA",
        "getHeader",
        "markJoin",
        "getMarkColumn",
        "joinPath",
        "getJoinPathFromFilter",
        "markJoin",
        "getFilter",
        "streamA",
        "getHeader",
        "streamB",
        "getHeader",
        "joinPathA",
        "joinPath",
        "k",
        "joinPathB",
        "joinPath",
        "v",
        "dataType1",
        "streamA",
        "getHeader",
        "getField",
        "streamA",
        "getHeader",
        "indexOf",
        "joinPathA",
        "getType",
        "dataType2",
        "streamB",
        "getHeader",
        "getField",
        "streamB",
        "getHeader",
        "indexOf",
        "joinPathB",
        "getType",
        "ValueUtils",
        "isNumericType",
        "dataType1",
        "ValueUtils",
        "isNumericType",
        "dataType2",
        "needTypeCast",
        "streamB",
        "hasNext",
        "rowB",
        "streamB",
        "next",
        "value",
        "rowB",
        "getAsValue",
        "joinPathB",
        "value",
        "needTypeCast",
        "value",
        "ValueUtils",
        "transformToDouble",
        "value",
        "hash",
        "value",
        "getDataType",
        "DataType",
        "BINARY",
        "hash",
        "Arrays",
        "hashCode",
        "value",
        "getBinaryV",
        "hash",
        "value",
        "getValue",
        "hashCode",
        "rows",
        "streamBHashMap",
        "getOrDefault",
        "hash",
        "rows",
        "add",
        "rowB",
        "streamBHashMap",
        "putIfAbsent",
        "hash",
        "rows",
        "hasInitialized",
        "Override",
        "hasInitialized",
        "initialize",
        "header",
        "Override",
        "hasInitialized",
        "initialize",
        "cache",
        "isEmpty",
        "streamA",
        "hasNext",
        "tryMatch",
        "cache",
        "isEmpty",
        "rowA",
        "streamA",
        "next",
        "value",
        "rowA",
        "getAsValue",
        "joinPathA",
        "value",
        "needTypeCast",
        "value",
        "ValueUtils",
        "transformToDouble",
        "value",
        "hash",
        "value",
        "getDataType",
        "DataType",
        "BINARY",
        "hash",
        "Arrays",
        "hashCode",
        "value",
        "getBinaryV",
        "hash",
        "value",
        "getValue",
        "hashCode",
        "streamBHashMap",
        "containsKey",
        "hash",
        "returnRow",
        "RowUtils",
        "constructNewRowWithMark",
        "header",
        "rowA",
        "markJoin",
        "isAntiJoin",
        "cache",
        "add",
        "returnRow",
        "unmatchedRow",
        "RowUtils",
        "constructNewRowWithMark",
        "header",
        "rowA",
        "markJoin",
        "isAntiJoin",
        "cache",
        "add",
        "unmatchedRow",
        "Override",
        "hasNext",
        "cache",
        "pollFirst"
    ],
    "literals": [
        "\"row stream doesn't have more data!\""
    ],
    "variables": [
        "markJoin",
        "streamBHashMap",
        "cache",
        "header",
        "joinPathA",
        "hash",
        "hash"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "HashMarkJoinLazyStream",
        "initialize",
        "Header",
        "getHeader",
        "hasNext",
        "tryMatch",
        "Row",
        "next"
    ],
    "classes": [
        "HashMarkJoinLazyStream"
    ]
}