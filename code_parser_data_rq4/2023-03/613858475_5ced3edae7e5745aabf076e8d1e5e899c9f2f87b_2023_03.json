{
    "identifiers": [
        "element",
        "element",
        "element",
        "sidebar",
        "sidebar",
        "errorMsg",
        "sidebar",
        "errorMsg",
        "sidebar",
        "errorMsg",
        "sidebar",
        "errorMsg",
        "errorMsg",
        "errorText",
        "errorMsg",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "errorMsg",
        "sidebar",
        "contData",
        "contData",
        "sidebar",
        "contData",
        "sidebar",
        "contData",
        "autoclose",
        "sidebar",
        "sidebar",
        "errorMsg",
        "sidebar",
        "openElData",
        "sidebar",
        "openElData",
        "sidebar",
        "sidebar",
        "sidebar",
        "errorMsg",
        "sidebar",
        "closeElData",
        "sidebar",
        "closeElData",
        "errorMsg",
        "errorText",
        "errorMsg",
        "text",
        "msgArray",
        "text",
        "text",
        "msgArray",
        "msg",
        "errorCounter",
        "text",
        "errorCounter",
        "msg",
        "text",
        "node",
        "sidebarInfo",
        "node",
        "sidebarInfo",
        "node",
        "sidebarInfo",
        "node",
        "el",
        "sidebarInfo",
        "el",
        "el",
        "sidebarInfo",
        "el",
        "el",
        "sidebarInfo",
        "el",
        "node",
        "sidebarInfo",
        "autoClose",
        "sidebarInfo",
        "autoClose",
        "sidebarInfo",
        "sidebarInfo",
        "sidebar",
        "force",
        "force",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "clickedElement",
        "sidebar",
        "sidebar",
        "sidebar",
        "sidebar",
        "setTimeout",
        "that",
        "that",
        "sidebar",
        "sidebar",
        "sidebar",
        "evt",
        "evt",
        "evt",
        "testbar",
        "testbar",
        "sidebar",
        "testbar",
        "sidebar",
        "sidebar",
        "clicked",
        "sidebar",
        "clicked",
        "openIcon",
        "clicked",
        "closeIcon",
        "sidebar",
        "sidebarClicked",
        "sidebar"
    ],
    "literals": [
        "\"\"",
        "\"undefined\"",
        "\"Configuration error when adding a toggle sidebar:\"",
        "\"object\"",
        "\"addSidebar function requires an JS object.\"",
        "\"undefined\"",
        "\"An sidebar node (container) was not specified.\"",
        "\"undefined\"",
        "\"An activation CSS class was not specified.\"",
        "\"undefined\"",
        "\"An opener (activate) node was not specified.\"",
        "\"undefined\"",
        "\"ToggleSidebar-\"",
        "'An sidebar name was not specified. \"'",
        "'\" will be used instead '",
        "\"object\"",
        "\"Especified sidebar HTML node container is not valid or not found\"",
        "\"true\"",
        "\"object\"",
        "\"Especified open sidebar node is not valid or not found\"",
        "\"open\"",
        "\"undefined\"",
        "\"object\"",
        "\"Especified close sidebar node is not valid or not found\"",
        "\"close\"",
        "\"\\n\"",
        "\"\\n\"",
        "\". \"",
        "\"\\n\"",
        "\"body\"",
        "\"[data-sidebar-container]\"",
        "\"[data-sidebar-action]\"",
        "\"open\"",
        "\"close\"",
        "\"true\"",
        "\"click\"",
        "\"click\"",
        "\"click\"",
        "'\\nNo sidebar specified with \"data-sidebar\" attributes in HTML or an JS object.\\n'",
        "\"click\"",
        "\"click\"",
        "\"click\"",
        "\"click\"",
        "\"[data-sidebar=\"",
        "\"]\"",
        "\"click\""
    ],
    "variables": [
        "errorText",
        "errorMsg",
        "autoclose",
        "contData",
        "openElData",
        "closeElData",
        "errorCounter",
        "sidebarInfo",
        "autoClose",
        "clickedElement",
        "clicked",
        "sidebar",
        "closeIcon",
        "openIcon",
        "sidebarClicked"
    ],
    "comments": [
        "Generating bind actions to listener functionality",
        "verifying constructor element or initializing sidebars functionality",
        "function to add a sidebar. This adds to HTML nodes sidebar data- attributes",
        "verifying errors",
        "if function param is not and object",
        "if container HTML node was not specified",
        "if container activation class name was not specified",
        "if HTML open node was not specified",
        "throw error (finalize executuion) if any error was found",
        "if not sidebar name was specified a sidebar name will be created with current timestamp",
        "set the autoclose to true (close when click out container) when no close node was",
        "specified. If autoClose attribute is in function param object it will be used. Default is false",
        "verifying container and open nodes exists",
        "setting the HTML container node data- attributes in function parameter object",
        "setting the HTML open node data- attributes in function parameter object",
        "if close node was specified in function parameter object",
        "throw error (finalize executuion) if any error was found",
        "Function to show an error in console and end execution of JS script",
        "Plugin initialization reading sidebar data- attributes",
        "Getting HTML body tag",
        "sidebar containers",
        "sidebar action buttons (open and close)",
        "getting and setting sidebars relative data (name, activation class,",
        "autoclose, openStatus) and action nodes",
        "function to close sidebar. If force parameter is not true or present a",
        "body listener is added to run sidebarBodyListener function",
        "(this.bodyActionHandler) on next user click. The only action to",
        "close sidebar is remove the sidebar activation CSS class in body HTML tag",
        "removing body listener",
        "removing activation class",
        "remove saidebar open status",
        "adding event listener to sidebar open node",
        "adding listener to body. This will compare the next user clicked node",
        "function to create listeners on sidebars open nodes",
        "console warning if plugins was not initlialized (init()) or sidebar added",
        "removing any possible event listener relative to ToggleSidebar in",
        "HTML body tag or sidebars open nodes",
        "function to open sidebars",
        "The real action to open a sidebar is adding to body the activation CSS class",
        "stop event propagation to avoid double click actions",
        "clicked element",
        "removing open listener to add later a close function to",
        "sidebar open node",
        "adding sidebar activation class to HTML body node",
        "Timeout to add the close functionality in open node",
        "if any sidebar is opened for any reason and is not the",
        "clicked open sidebar node relative sidebar node, foreced sidebar",
        "close command is triggered to avoid showing double sidebar",
        "function to listen any click and compare if click will trigger",
        "the close sidebar action",
        "stop event propagation to avoid double click actions",
        "clicked element",
        "searching the first sidebar with openStatus = true.",
        "Any other sidebar was closed in openSidebar function",
        "getting close node",
        "getting open node",
        "getting sidebar container node",
        "comparing clicked element with open, close or inside sidebar",
        "removing body event listener in body (this helps avoid double listener)",
        "forcing sidebar close",
        "USE EXAMPLE\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\n\tconst sidebar = new ToggleSidebar();\n\n\tsidebar.addSidebar({\n\t\tname: \"login-sidebar\",\n\t\tactivationClass: \"show-login\",\n\t\tautoClose: true,\n\t\tcloseSidebarNode: document.querySelector(\"#login-container .icon-close\"),\n\t\tcontainerNode: document.getElementById(\"login-container\"),\n\t\topenSidebarNode: document.querySelector(\"#login-button\"),\n\t});\n});"
    ],
    "docstrings": [],
    "functions": [
        "addSidebar",
        "die",
        "init",
        "closeSidebar",
        "execute",
        "openSidebar",
        "sidebarBodyListener"
    ],
    "classes": [
        "ToggleSidebar"
    ]
}