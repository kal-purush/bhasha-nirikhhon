{
    "identifiers": [
        "Lab",
        "EF",
        "Entities",
        "Lab",
        "EF",
        "Logic",
        "Collections",
        "Generic",
        "Linq",
        "Security",
        "Cryptography",
        "X509Certificates",
        "Text",
        "Threading",
        "Tasks",
        "LAB",
        "EF",
        "UI",
        "args",
        "EmployeesLogic",
        "WriteLine",
        "employees",
        "employeesLogic",
        "GetAll",
        "WriteLine",
        "employees",
        "FirstName",
        "employees",
        "LastName",
        "employees",
        "EmployeeID",
        "WriteLine",
        "WriteLine",
        "CategoriesLogic",
        "categories",
        "categoriesLogic",
        "GetAll",
        "WriteLine",
        "categories",
        "CategoryName",
        "categories",
        "Description",
        "categories",
        "CategoryID",
        "WriteLine",
        "WriteLine",
        "WriteLine",
        "WriteLine",
        "WriteLine",
        "WriteLine",
        "Int32",
        "Parse",
        "ReadLine",
        "operacion",
        "WriteLine",
        "ReadLine",
        "WriteLine",
        "ReadLine",
        "employeesLogic",
        "Add",
        "Employees",
        "FirstName",
        "addNombre",
        "LastName",
        "addApellido",
        "WriteLine",
        "Int32",
        "Parse",
        "ReadLine",
        "employeesLogic",
        "Delete",
        "deleteId",
        "WriteLine",
        "ReadLine",
        "WriteLine",
        "ReadLine",
        "WriteLine",
        "Int32",
        "Parse",
        "ReadLine",
        "employeesLogic",
        "Update",
        "Employees",
        "FirstName",
        "updateNombre",
        "LastName",
        "updateApellido",
        "EmployeeID",
        "updateID",
        "operacion",
        "operacion",
        "WriteLine",
        "ReadLine"
    ],
    "literals": [
        "\"Lista de Empleados:\"",
        "\"\"",
        "\"Lista de Categorias:\"",
        "\"\"",
        "\"Operaciones sobre lista de Empleados\"",
        "\"Eliga la operacion que desea realizar:\"",
        "\"1 - Agregar:\"",
        "\"2 - Borrar:\"",
        "\"3 - Modificar:\"",
        "\"Ingrese Nombre\"",
        "\"Ingrese Apellido\"",
        "\"Ingrese ID del Empleado que desea eliminar\"",
        "\"Ingrese Nombre nuevo\"",
        "\"Ingrese Apellido nuevo\"",
        "\"Ingrese ID del empleado que desea modificar\"",
        "\"Por favor ingrese un numero de las opciones\""
    ],
    "variables": [
        "EmployeesLogic",
        "employeesLogic",
        "CategoriesLogic",
        "categoriesLogic",
        "operacion",
        "addNombre",
        "addApellido",
        "deleteId",
        "updateNombre",
        "updateApellido",
        "updateID"
    ],
    "comments": [
        "ProductsLogic productsLogic = new ProductsLogic();",
        "foreach(Products product in productsLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{product.ProductName} - {product.UnitPrice}\");",
        "}",
        "RegionLogic regionLogic = new RegionLogic();",
        "foreach(var item in regionLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{item.RegionID} - {item.RegionDescription}\");",
        "}",
        "regionLogic.Add(new Region",
        "{",
        "RegionID = 10,",
        "RegionDescription = \"Sarasa\"",
        "});",
        "regionLogic.Delete(10);",
        "foreach(var item in regionLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{item.RegionID} - {item.RegionDescription}\");",
        "}",
        "regionLogic.Update(new Region",
        "{",
        "RegionID = 10,",
        "RegionDescription = \"Nueva Descripcion\"",
        "});",
        "foreach(var item in regionLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{item.RegionID} - {item.RegionDescription}\");",
        "}",
        "employeesLogic.Add(new Employees",
        "{",
        "LastName = \"Zambuto\",",
        "FirstName = \"Agustina\"",
        "});",
        "foreach (var employees in employeesLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{employees.FirstName} - {employees.EmployeeID}\");",
        "}",
        "employeesLogic.Delete(12);",
        "foreach (var employees in employeesLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{employees.FirstName} - {employees.EmployeeID}\");",
        "}",
        "employeesLogic.Update(new Employees",
        "{",
        "EmployeeID = 10,",
        "FirstName = \"Gonzalo\"",
        "});",
        "foreach (var employees in employeesLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{employees.FirstName} - {employees.EmployeeID}\");",
        "}",
        "CategoriesLogic categoriesLogic = new CategoriesLogic();",
        "categoriesLogic.Add(new Categories",
        "{",
        "CategoryName = \"Prueba\"",
        "});",
        "foreach( var categories in categoriesLogic.GetAll())",
        "{",
        "Console.WriteLine(categories.CategoryName);",
        "}",
        "Practica final",
        "Console.WriteLine(\"Eliga una opcion\");",
        "Console.WriteLine(\"1 - Lista Empleados\");",
        "Console.WriteLine(\"2 - Lista Categorias\");",
        "int eleccionLista = Int32.Parse(Console.ReadLine());",
        "if(eleccionLista == 1 )",
        "{",
        "Console.WriteLine(\"Eliga la operacion que desea realizar:\");",
        "Console.WriteLine(\"1 - Listar:\");",
        "Console.WriteLine(\"2 - Agregar:\");",
        "Console.WriteLine(\"3 - Borrar:\");",
        "Console.WriteLine(\"4 - Modificar:\");",
        "int operacion = Int32.Parse(Console.ReadLine());",
        "switch (operacion)",
        "{",
        "case 1:",
        "foreach (var employees in employeesLogic.GetAll())",
        "{",
        "Console.WriteLine($\"{employees.FirstName} - {employees.EmployeeID}\");",
        "}",
        "break;",
        "case 2:",
        "Console.WriteLine(\"Eliga Nombre Empleado\");",
        "employeesLogic.Add(new Employees",
        "{",
        "FirstName = Console.ReadLine()",
        "});",
        "break;",
        "case 3:",
        "Console.WriteLine(\"Operacion3\");",
        "break;",
        "case 4:",
        "Console.WriteLine(\"Operacion4\");",
        "break;",
        "}",
        "}",
        "else if(eleccionLista == 2)",
        "{",
        "Console.WriteLine(\"Opcion 2\");",
        "}",
        "else",
        "{",
        "eleccionLista = 1;",
        "Console.WriteLine(\"Por defecto le asignamos la opcion 1\");",
        "Console.WriteLine($\"{eleccionLista}\");",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "Main"
    ],
    "classes": [
        "Program"
    ]
}