{
    "identifiers": [
        "vscode",
        "path",
        "fileExists",
        "filePath",
        "vscode",
        "vscode",
        "filePath",
        "getWorkspaceRoot",
        "filePath",
        "vscode",
        "filePath",
        "path",
        "filePath",
        "getAvailableSecrets",
        "filePath",
        "getWorkspaceRoot",
        "filePath",
        "path",
        "workspaceRoot",
        "fileExists",
        "envFilePath",
        "vscode",
        "vscode",
        "envFilePath",
        "Buffer",
        "envContent",
        "envText",
        "line",
        "line",
        "line",
        "line",
        "line",
        "error",
        "error",
        "addNewSecret",
        "key",
        "value",
        "filePath",
        "key",
        "value",
        "getWorkspaceRoot",
        "filePath",
        "path",
        "workspaceRoot",
        "fileExists",
        "envFilePath",
        "vscode",
        "vscode",
        "envFilePath",
        "envContent",
        "Buffer",
        "existingEnvContent",
        "existingSecrets",
        "envContent",
        "line",
        "line",
        "line",
        "line",
        "line",
        "existingSecrets",
        "key",
        "envContent",
        "envLines",
        "line",
        "line",
        "key",
        "key",
        "value",
        "line",
        "envContent",
        "updatedEnvLines",
        "envContent",
        "envContent",
        "envContent",
        "envContent",
        "envContent",
        "key",
        "value",
        "existingSecrets",
        "key",
        "vscode",
        "vscode",
        "envFilePath",
        "Buffer",
        "envContent",
        "vscode",
        "key",
        "existingSecrets",
        "error",
        "error",
        "error",
        "getSecrets",
        "filePath",
        "getWorkspaceRoot",
        "filePath",
        "path",
        "workspaceRoot",
        "fileExists",
        "envFilePath",
        "vscode",
        "vscode",
        "envFilePath",
        "Buffer",
        "envContent",
        "envText",
        "line",
        "line",
        "line",
        "line",
        "line",
        "firstEqualIndex",
        "line",
        "firstEqualIndex",
        "line",
        "firstEqualIndex",
        "secrets",
        "key",
        "value",
        "secrets",
        "error",
        "error"
    ],
    "literals": [
        "\"vscode\"",
        "\"path\"",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "'.env'",
        "'utf8'",
        "'\\n'",
        "'#'",
        "'='",
        "\"Error getting available secrets:\"",
        "string",
        "string",
        "string",
        "string",
        "\"Key and value are required\"",
        "'.env'",
        "''",
        "string",
        "'utf8'",
        "'\\n'",
        "'#'",
        "'='",
        "'\\n'",
        "${key}=",
        "${key}=${value}",
        "'\\n'",
        "'\\n'",
        "''",
        "${key}=${value}\\n",
        "'utf8'",
        "Secret \"${key}\" was successfully added to .env file",
        "\"Error adding new secret:\"",
        "string",
        "string",
        "string",
        "'.env'",
        "string",
        "string",
        "'utf8'",
        "'\\n'",
        "'#'",
        "'='",
        "\"Error getting secrets:\""
    ],
    "variables": [
        "fileExists",
        "getWorkspaceRoot",
        "getAvailableSecrets",
        "workspaceRoot",
        "envFilePath",
        "envContent",
        "envText",
        "addNewSecret",
        "workspaceRoot",
        "envFilePath",
        "envContent",
        "existingSecrets",
        "existingEnvContent",
        "envLines",
        "updatedEnvLines",
        "getSecrets",
        "workspaceRoot",
        "envFilePath",
        "secrets",
        "envContent",
        "envText",
        "firstEqualIndex",
        "key",
        "value"
    ],
    "comments": [
        "Parse .env file to extract keys",
        "Read existing .env file if it exists",
        "Parse existing secrets",
        "Parse .env file to extract key-value pairs"
    ],
    "docstrings": [
        "* Checks if a file exists",
        "* Get the workspace root directory or the directory of the active file",
        "* Get all available secret keys from .env file",
        "* Add or update a secret in the .env file",
        "* Get all secrets as key-value pairs from the .env file"
    ],
    "functions": [],
    "classes": []
}