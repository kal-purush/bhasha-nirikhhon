{
    "identifiers": [
        "web3",
        "Web3",
        "web3",
        "providers",
        "rpc",
        "HTTPProvider",
        "web3",
        "middleware",
        "ExtraDataToPOAMiddleware",
        "datetime",
        "datetime",
        "json",
        "pandas",
        "pd",
        "chain",
        "chain",
        "chain",
        "chain",
        "Web3",
        "Web3",
        "HTTPProvider",
        "api_url",
        "w3",
        "middleware_onion",
        "inject",
        "ExtraDataToPOAMiddleware",
        "layer",
        "w3",
        "chain",
        "contract_info",
        "open",
        "contract_info",
        "f",
        "json",
        "load",
        "f",
        "e",
        "e",
        "contracts",
        "chain",
        "chain",
        "contract_info",
        "chain",
        "chain"
    ],
    "literals": [
        "'source'",
        "f\"https://api.avax-test.network/ext/bc/C/rpc\"",
        "'destination'",
        "f\"https://data-seed-prebsc-1-s1.binance.org:8545/\"",
        "'source'",
        "'destination'",
        "'r'",
        "f\"Failed to read contract info\\nPlease contact your instructor\\n{e}\"",
        "\"contract_info.json\"",
        "'source'",
        "'destination'",
        "f\"Invalid chain: {chain}\""
    ],
    "variables": [
        "api_url",
        "api_url",
        "w3",
        "contracts"
    ],
    "comments": [
        "Necessary for POA chains",
        "The source contract chain is avax",
        "AVAX C-chain testnet",
        "The destination contract chain is bsc",
        "BSC testnet",
        "inject the poa compatibility middleware to the innermost layer",
        "This is different from Bridge IV where chain was \"avax\" or \"bsc\"",
        "YOUR CODE HERE"
    ],
    "docstrings": [
        "\"\"\"\n        Load the contract_info file into a dictionary\n        This function is used by the autograder and will likely be useful to you\n    \"\"\"",
        "\"\"\"\n        chain - (string) should be either \"source\" or \"destination\"\n        Scan the last 5 blocks of the source and destination chains\n        Look for 'Deposit' events on the source chain and 'Unwrap' events on the destination chain\n        When Deposit events are found on the source chain, call the 'wrap' function the destination chain\n        When Unwrap events are found on the destination chain, call the 'withdraw' function on the source chain\n    \"\"\""
    ],
    "functions": [
        "connect_to",
        "get_contract_info",
        "scan_blocks"
    ],
    "classes": []
}