{
    "identifiers": [
        "streamlit",
        "st",
        "cv2",
        "numpy",
        "np",
        "uuid",
        "logging",
        "ultralytics",
        "YOLO",
        "ultralytics",
        "nn",
        "tasks",
        "DetectionModel",
        "pathlib",
        "Path",
        "PIL",
        "Image",
        "pandas",
        "pd",
        "torch",
        "os",
        "matplotlib",
        "pyplot",
        "plt",
        "io",
        "base64",
        "b64encode",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "st",
        "markdown",
        "unsafe_allow_html",
        "Path",
        "RESULTS_DIR",
        "mkdir",
        "exist_ok",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "torch",
        "cuda",
        "is_available",
        "cuda_available",
        "logger",
        "warning",
        "st",
        "warning",
        "torch",
        "cuda",
        "device_count",
        "torch",
        "cuda",
        "get_device_name",
        "cuda_device_count",
        "torch",
        "version",
        "cuda",
        "hasattr",
        "torch",
        "version",
        "logger",
        "info",
        "cuda_available",
        "cuda_device_count",
        "cuda_device_name",
        "cuda_version",
        "st",
        "info",
        "cuda_device_count",
        "cuda_device_name",
        "cuda_version",
        "e",
        "logger",
        "error",
        "e",
        "st",
        "warning",
        "e",
        "label",
        "label",
        "lower",
        "x",
        "lower",
        "x",
        "fruits",
        "label",
        "lower",
        "x",
        "lower",
        "x",
        "beverages",
        "label",
        "lower",
        "x",
        "lower",
        "x",
        "snacks",
        "label",
        "lower",
        "x",
        "lower",
        "x",
        "dairy",
        "classes_file",
        "os",
        "path",
        "exists",
        "classes_file",
        "open",
        "classes_file",
        "f",
        "cls",
        "default_classes",
        "f",
        "write",
        "cls",
        "logger",
        "info",
        "classes_file",
        "len",
        "default_classes",
        "default_classes",
        "open",
        "classes_file",
        "f",
        "line",
        "strip",
        "line",
        "f",
        "readlines",
        "line",
        "strip",
        "logger",
        "info",
        "len",
        "classes",
        "classes_file",
        "classes",
        "e",
        "logger",
        "error",
        "classes_file",
        "e",
        "st",
        "error",
        "e",
        "model_paths",
        "conf_thres",
        "models",
        "class_names",
        "model_path",
        "model_paths",
        "os",
        "path",
        "exists",
        "model_path",
        "st",
        "error",
        "model_path",
        "logger",
        "error",
        "model_path",
        "torch",
        "serialization",
        "add_safe_globals",
        "DetectionModel",
        "model_path",
        "model_paths",
        "YOLO",
        "model_path",
        "conf_thres",
        "model",
        "model_class_files",
        "get",
        "model_path",
        "load_classes",
        "class_file",
        "logger",
        "info",
        "model_path",
        "conf_thres",
        "class_file",
        "e",
        "logger",
        "error",
        "e",
        "st",
        "error",
        "e",
        "img",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2LAB",
        "cv2",
        "split",
        "lab",
        "cv2",
        "createCLAHE",
        "clipLimit",
        "tileGridSize",
        "clahe",
        "apply",
        "l",
        "cv2",
        "merge",
        "l",
        "a",
        "b",
        "cv2",
        "cvtColor",
        "lab",
        "cv2",
        "COLOR_LAB2BGR",
        "np",
        "array",
        "cv2",
        "filter2D",
        "img",
        "kernel",
        "logger",
        "info",
        "img",
        "e",
        "logger",
        "error",
        "e",
        "img",
        "frame",
        "boxes",
        "confidences",
        "class_ids",
        "selected_model",
        "frame",
        "shape",
        "min",
        "img_height",
        "img_width",
        "max",
        "min_dimension",
        "max",
        "min_dimension",
        "max",
        "min_dimension",
        "class_names",
        "get",
        "selected_model",
        "i",
        "box",
        "boxes",
        "box",
        "confidences",
        "i",
        "class_ids",
        "i",
        "label_idx",
        "len",
        "model_classes",
        "logger",
        "warning",
        "label_idx",
        "selected_model",
        "model_classes",
        "label_idx",
        "categorize_product",
        "label",
        "cv2",
        "rectangle",
        "frame",
        "x1",
        "shadow_offset",
        "y1",
        "shadow_offset",
        "x2",
        "shadow_offset",
        "y2",
        "shadow_offset",
        "box_thickness",
        "cv2",
        "rectangle",
        "frame",
        "x1",
        "y1",
        "x2",
        "y2",
        "color",
        "box_thickness",
        "label",
        "conf",
        "cv2",
        "getTextSize",
        "text",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "font_scale",
        "cv2",
        "rectangle",
        "frame",
        "x1",
        "y1",
        "text_size",
        "x1",
        "text_size",
        "y1",
        "color",
        "cv2",
        "rectangle",
        "frame",
        "x1",
        "shadow_offset",
        "y1",
        "text_size",
        "shadow_offset",
        "x1",
        "text_size",
        "shadow_offset",
        "y1",
        "shadow_offset",
        "cv2",
        "putText",
        "frame",
        "text",
        "x1",
        "y1",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "font_scale",
        "cv2",
        "putText",
        "frame",
        "text",
        "x1",
        "y1",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "font_scale",
        "detected_objects",
        "append",
        "label",
        "round",
        "conf",
        "x1",
        "y1",
        "x2",
        "y2",
        "category",
        "logger",
        "info",
        "len",
        "detected_objects",
        "frame",
        "detected_objects",
        "image_data",
        "selected_model",
        "conf_thres",
        "models",
        "class_names",
        "models",
        "selected_model",
        "models",
        "logger",
        "info",
        "init_models",
        "ValueError",
        "isinstance",
        "image_data",
        "np",
        "ndarray",
        "image_data",
        "np",
        "frombuffer",
        "image_data",
        "np",
        "uint8",
        "cv2",
        "imdecode",
        "nparr",
        "cv2",
        "IMREAD_COLOR",
        "img",
        "logger",
        "error",
        "ValueError",
        "logger",
        "info",
        "img",
        "shape",
        "img",
        "shape",
        "st",
        "session_state",
        "cv2",
        "cvtColor",
        "img",
        "copy",
        "cv2",
        "COLOR_BGR2RGB",
        "preprocess_image",
        "img",
        "original_size",
        "h",
        "w",
        "max_dim",
        "h",
        "w",
        "max_dim",
        "max_dim",
        "w",
        "h",
        "max_dim",
        "new_h",
        "new_w",
        "cv2",
        "resize",
        "img",
        "process_size",
        "process_size",
        "st",
        "session_state",
        "use_cuda",
        "torch",
        "cuda",
        "is_available",
        "logger",
        "info",
        "device",
        "models",
        "selected_model",
        "to",
        "device",
        "models",
        "selected_model",
        "img_resized",
        "conf",
        "conf_thres",
        "iou",
        "augment",
        "verbose",
        "max_det",
        "device",
        "device",
        "RuntimeError",
        "e",
        "e",
        "st",
        "session_state",
        "use_cuda",
        "logger",
        "warning",
        "e",
        "st",
        "warning",
        "st",
        "session_state",
        "models",
        "selected_model",
        "to",
        "device",
        "models",
        "selected_model",
        "img_resized",
        "conf",
        "conf_thres",
        "iou",
        "augment",
        "verbose",
        "max_det",
        "device",
        "device",
        "results",
        "result",
        "boxes",
        "xyxy",
        "cpu",
        "numpy",
        "result",
        "boxes",
        "conf",
        "cpu",
        "numpy",
        "result",
        "boxes",
        "cls",
        "cpu",
        "numpy",
        "len",
        "boxes",
        "cv2",
        "dnn",
        "NMSBoxes",
        "bboxes",
        "boxes",
        "tolist",
        "scores",
        "confidences",
        "tolist",
        "score_threshold",
        "conf_thres",
        "nms_threshold",
        "len",
        "indices",
        "indices",
        "flatten",
        "boxes",
        "indices",
        "confidences",
        "indices",
        "class_ids",
        "indices",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "boxes",
        "shape",
        "original_size",
        "process_size",
        "original_size",
        "process_size",
        "boxes",
        "scale_x",
        "boxes",
        "scale_y",
        "boxes",
        "scale_x",
        "boxes",
        "scale_y",
        "draw_boxes",
        "img",
        "copy",
        "boxes",
        "confidences",
        "class_ids",
        "selected_model",
        "st",
        "session_state",
        "processed_img",
        "logger",
        "info",
        "selected_model",
        "len",
        "detected_objects",
        "device",
        "processed_img",
        "detected_objects",
        "e",
        "e",
        "e",
        "error_msg",
        "cuda_debug_msg",
        "logger",
        "error",
        "error_msg",
        "ValueError",
        "error_msg",
        "detected_objects",
        "detected_objects",
        "obj",
        "obj",
        "detected_objects",
        "pd",
        "Series",
        "categories",
        "value_counts",
        "plt",
        "figure",
        "figsize",
        "category_counts",
        "plot",
        "kind",
        "color",
        "colors",
        "get",
        "cat",
        "cat",
        "category_counts",
        "index",
        "plt",
        "title",
        "fontsize",
        "pad",
        "plt",
        "xlabel",
        "fontsize",
        "plt",
        "ylabel",
        "fontsize",
        "plt",
        "xticks",
        "rotation",
        "plt",
        "tight_layout",
        "io",
        "BytesIO",
        "plt",
        "savefig",
        "buf",
        "format",
        "buf",
        "seek",
        "plt",
        "close",
        "buf",
        "detected_objects",
        "key_prefix",
        "detected_objects",
        "detected_objects",
        "key_prefix",
        "st",
        "session_state",
        "st",
        "session_state",
        "key_prefix",
        "obj",
        "obj",
        "obj",
        "categorize_product",
        "obj",
        "obj",
        "detected_objects",
        "st",
        "session_state",
        "key_prefix",
        "st",
        "subheader",
        "i",
        "detection",
        "edited_detections",
        "st",
        "container",
        "st",
        "columns",
        "col1",
        "st",
        "text_input",
        "i",
        "value",
        "detection",
        "key",
        "key_prefix",
        "i",
        "new_label",
        "detection",
        "edited_detections",
        "i",
        "new_label",
        "edited_detections",
        "i",
        "edited_detections",
        "i",
        "categorize_product",
        "new_label",
        "col2",
        "st",
        "markdown",
        "detection",
        "detection",
        "unsafe_allow_html",
        "col3",
        "st",
        "button",
        "key",
        "key_prefix",
        "i",
        "help",
        "edited_detections",
        "pop",
        "i",
        "st",
        "session_state",
        "key_prefix",
        "edited_detections",
        "st",
        "experimental_rerun",
        "st",
        "button",
        "key",
        "key_prefix",
        "help",
        "st",
        "session_state",
        "det",
        "det",
        "det",
        "det",
        "det",
        "edited_detections",
        "st",
        "success",
        "det",
        "det",
        "det",
        "det",
        "det",
        "edited_detections",
        "pd",
        "DataFrame",
        "df_data",
        "st",
        "subheader",
        "st",
        "columns",
        "col1",
        "st",
        "markdown",
        "format",
        "len",
        "edited_detections",
        "unsafe_allow_html",
        "col2",
        "len",
        "det",
        "det",
        "edited_detections",
        "st",
        "markdown",
        "format",
        "unique_categories",
        "unsafe_allow_html",
        "col3",
        "np",
        "mean",
        "det",
        "det",
        "edited_detections",
        "edited_detections",
        "st",
        "markdown",
        "format",
        "avg_conf",
        "unsafe_allow_html",
        "st",
        "markdown",
        "df",
        "to_html",
        "escape",
        "unsafe_allow_html",
        "st",
        "subheader",
        "create_category_visualization",
        "edited_detections",
        "viz_buf",
        "st",
        "image",
        "viz_buf",
        "caption",
        "use_container_width",
        "st",
        "info",
        "edited_detections",
        "st",
        "title",
        "st",
        "markdown",
        "st",
        "session_state",
        "st",
        "session_state",
        "check_cuda_setup",
        "st",
        "session_state",
        "st",
        "sidebar",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "header",
        "st",
        "selectbox",
        "model_options",
        "key",
        "st",
        "slider",
        "min_value",
        "max_value",
        "value",
        "step",
        "key",
        "help",
        "st",
        "session_state",
        "st",
        "checkbox",
        "value",
        "st",
        "session_state",
        "use_cuda",
        "key",
        "help",
        "st",
        "header",
        "st",
        "markdown",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "session_state",
        "st",
        "spinner",
        "st",
        "session_state",
        "init_models",
        "st",
        "tabs",
        "tab1",
        "st",
        "subheader",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "selectbox",
        "resolution_options",
        "key",
        "selected_resolution",
        "st",
        "columns",
        "col1",
        "st",
        "number_input",
        "min_value",
        "max_value",
        "value",
        "step",
        "key",
        "col2",
        "st",
        "number_input",
        "min_value",
        "max_value",
        "value",
        "step",
        "key",
        "selected_resolution",
        "selected_resolution",
        "custom_width",
        "custom_height",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "camera_input",
        "key",
        "camera_input",
        "st",
        "spinner",
        "camera_input",
        "getvalue",
        "process_image",
        "img_bytes",
        "selected_model",
        "conf_thres",
        "conf_thres",
        "cv2",
        "cvtColor",
        "processed_img",
        "cv2",
        "COLOR_BGR2RGB",
        "st",
        "subheader",
        "st",
        "columns",
        "col1",
        "st",
        "session_state",
        "original_image",
        "st",
        "image",
        "st",
        "session_state",
        "original_image",
        "caption",
        "use_container_width",
        "st",
        "info",
        "col2",
        "st",
        "image",
        "processed_img_rgb",
        "caption",
        "selected_model",
        "use_container_width",
        "cv2",
        "imencode",
        "processed_img",
        "b64encode",
        "img_buf",
        "decode",
        "img_b64",
        "st",
        "markdown",
        "href",
        "unsafe_allow_html",
        "detected_objects",
        "st",
        "success",
        "len",
        "detected_objects",
        "len",
        "detected_objects",
        "st",
        "markdown",
        "unsafe_allow_html",
        "display_and_edit_detections",
        "detected_objects",
        "st",
        "markdown",
        "unsafe_allow_html",
        "uuid",
        "uuid4",
        "RESULTS_DIR",
        "filename",
        "cv2",
        "imwrite",
        "result_path",
        "processed_img",
        "st",
        "warning",
        "ValueError",
        "e",
        "st",
        "error",
        "e",
        "e",
        "st",
        "error",
        "e",
        "logger",
        "error",
        "e",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "divider",
        "st",
        "expander",
        "st",
        "markdown",
        "unsafe_allow_html",
        "tab2",
        "st",
        "subheader",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "file_uploader",
        "key",
        "uploaded_file",
        "uploaded_file",
        "size",
        "st",
        "error",
        "logger",
        "error",
        "uploaded_file",
        "read",
        "st",
        "spinner",
        "process_image",
        "img_data",
        "selected_model",
        "conf_thres",
        "conf_thres",
        "uuid",
        "uuid4",
        "RESULTS_DIR",
        "filename",
        "cv2",
        "imwrite",
        "result_path",
        "processed_img",
        "cv2",
        "cvtColor",
        "processed_img",
        "cv2",
        "COLOR_BGR2RGB",
        "st",
        "subheader",
        "st",
        "columns",
        "col1",
        "st",
        "session_state",
        "original_image",
        "st",
        "image",
        "st",
        "session_state",
        "original_image",
        "caption",
        "use_container_width",
        "st",
        "info",
        "col2",
        "st",
        "image",
        "processed_img_rgb",
        "caption",
        "selected_model",
        "use_container_width",
        "cv2",
        "imencode",
        "processed_img",
        "b64encode",
        "img_buf",
        "decode",
        "img_b64",
        "st",
        "markdown",
        "href",
        "unsafe_allow_html",
        "detected_objects",
        "st",
        "success",
        "len",
        "detected_objects",
        "len",
        "detected_objects",
        "display_and_edit_detections",
        "detected_objects",
        "st",
        "warning",
        "logger",
        "info",
        "selected_model",
        "filename",
        "ValueError",
        "e",
        "st",
        "error",
        "e",
        "e",
        "st",
        "error",
        "e",
        "logger",
        "error",
        "e",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "divider",
        "main"
    ],
    "literals": [
        "\"results\"",
        "\"280.pt\"",
        "\"classes.txt\"",
        "\"maggie.pt\"",
        "\"maggie.txt\"",
        "'corrected_detections'",
        "'processed_image'",
        "'original_image'",
        "'use_cuda'",
        "\"CUDA is not available. Falling back to CPU.\"",
        "\"CUDA is not available on this system. The app will run on CPU, which may be slower.\"",
        "\"Unknown\"",
        "'cuda'",
        "\"Unknown\"",
        "f\"CUDA Available: {cuda_available}, Device Count: {cuda_device_count}, Device Name: {cuda_device_name}, CUDA Version: {cuda_version}\"",
        "f\"CUDA Setup: {cuda_device_count} GPU(s) detected ({cuda_device_name}, CUDA Version: {cuda_version}). Running inference on GPU.\"",
        "f\"Error checking CUDA setup: {str(e)}\"",
        "f\"Error checking CUDA setup: {str(e)}. Falling back to CPU.\"",
        "\"apple\"",
        "\"banana\"",
        "\"orange\"",
        "\"fruits\"",
        "\"water bottle\"",
        "\"soda\"",
        "\"milk\"",
        "\"juice\"",
        "\"chips\"",
        "\"cookies\"",
        "\"candy\"",
        "\"snacks\"",
        "\"cereal\"",
        "\"cheese\"",
        "\"yogurt\"",
        "\"eggs\"",
        "\"Fruits\"",
        "\"badge-fruits\"",
        "\"Beverages\"",
        "\"badge-beverages\"",
        "\"Snacks\"",
        "\"badge-snacks\"",
        "\"Dairy\"",
        "\"badge-dairy\"",
        "\"Other\"",
        "\"badge-other\"",
        "\"apple\"",
        "\"banana\"",
        "\"orange\"",
        "\"water bottle\"",
        "\"soda\"",
        "\"milk\"",
        "\"bread\"",
        "\"cereal\"",
        "\"chips\"",
        "\"cookies\"",
        "\"pasta\"",
        "\"rice\"",
        "\"vegetables\"",
        "\"fruits\"",
        "\"meat\"",
        "\"cheese\"",
        "\"yogurt\"",
        "\"eggs\"",
        "\"juice\"",
        "\"candy\"",
        "\"snacks\"",
        "'w'",
        "f\"{cls}\\n\"",
        "f\"Created default classes file {classes_file} with {len(default_classes)} classes\"",
        "'r'",
        "f\"Loaded {len(classes)} classes from {classes_file}\"",
        "f\"Error loading classes file {classes_file}: {str(e)}\"",
        "f\"Failed to load classes: {str(e)}. Please ensure the classes file is accessible.\"",
        "\"product\"",
        "\"food\"",
        "\"beverage\"",
        "\"container\"",
        "\"package\"",
        "\"280.pt\"",
        "\"maggie.pt\"",
        "f\"❌ Model file {model_path} not found. Please place it in the app directory and try again.\"",
        "f\"Model file {model_path} not found\"",
        "\"classes.txt\"",
        "f\"Model {model_path} initialized with confidence threshold {conf_thres} and class file {class_file}\"",
        "f\"Failed to initialize models: {str(e)}\"",
        "f\"❌ Model initialization failed: {str(e)}. Please check the model files and try again.\"",
        "\"Image preprocessing completed: contrast adjustment and sharpening applied\"",
        "f\"Error in image preprocessing: {str(e)}\"",
        "\"unknown\"",
        "f\"Invalid class index {label_idx} for model {selected_model}, using default 'unknown'\"",
        "\"unknown\"",
        "\"Other\"",
        "\"badge-other\"",
        "f\"{label}: {conf:.2f}\"",
        "\"label\"",
        "\"confidence\"",
        "\"bbox\"",
        "\"category\"",
        "f\"Drew {len(detected_objects)} bounding boxes\"",
        "\"Models not initialized or invalid model selected, attempting to initialize\"",
        "\"Model initialization failed. Please check the model files.\"",
        "\"Failed to decode image data\"",
        "\"Invalid image data\"",
        "f\"Processing image of size {img.shape}\"",
        "\"cuda\"",
        "\"cpu\"",
        "f\"Running inference on device: {device}\"",
        "\"CUDA\"",
        "f\"CUDA error during inference: {str(e)}. Falling back to CPU.\"",
        "\"CUDA error encountered during inference. Falling back to CPU for this operation.\"",
        "\"cpu\"",
        "f\"Image processed successfully with {selected_model}, detected {len(detected_objects)} objects on {device}\"",
        "f\"Image processing error: {str(e)}.\"",
        "\"CUDA\"",
        "\"category\"",
        "\"Fruits\"",
        "\"#f87171\"",
        "\"Beverages\"",
        "\"#60a5fa\"",
        "\"Snacks\"",
        "\"#facc15\"",
        "\"Dairy\"",
        "\"#4ade80\"",
        "\"Other\"",
        "\"#9ca3af\"",
        "\"bar\"",
        "\"#9ca3af\"",
        "\"Product Category Distribution\"",
        "\"Category\"",
        "\"Count\"",
        "\"png\"",
        "f\"{key_prefix}_edited_detections\"",
        "f\"{key_prefix}_edited_detections\"",
        "\"label\"",
        "\"label\"",
        "\"confidence\"",
        "\"confidence\"",
        "\"category\"",
        "\"category\"",
        "\"category_badge\"",
        "\"label\"",
        "f\"{key_prefix}_edited_detections\"",
        "\"Edit Detected Products\"",
        "f\"Product Name {i}\"",
        "\"label\"",
        "f\"{key_prefix}_label_{i}\"",
        "\"label\"",
        "\"label\"",
        "\"category\"",
        "\"category_badge\"",
        "f'<span class=\"badge {detection[\"category_badge\"]}\">{detection[\"category\"]}</span>'",
        "\"category_badge\"",
        "\"category\"",
        "\"Delete\"",
        "f\"{key_prefix}_delete_{i}\"",
        "\"Remove this detection\"",
        "f\"{key_prefix}_edited_detections\"",
        "\"Save Corrections\"",
        "f\"{key_prefix}_save\"",
        "\"Save changes to persist throughout the session\"",
        "\"primary\"",
        "\"label\"",
        "\"label\"",
        "\"confidence\"",
        "\"confidence\"",
        "\"category\"",
        "\"category\"",
        "\"category_badge\"",
        "\"category_badge\"",
        "\"Corrections saved successfully!\"",
        "\"Product\"",
        "\"label\"",
        "\"Category\"",
        "f'<span class=\"badge {det[\"category_badge\"]}\">{det[\"category\"]}</span>'",
        "\"category_badge\"",
        "\"category\"",
        "\"Confidence\"",
        "f\"{det['confidence']*100:.1f}%\"",
        "'confidence'",
        "\"Detection Statistics\"",
        "'<div class=\"metrics-card\"><h3>Total Detections</h3><p>{}</p></div>'",
        "\"category\"",
        "'<div class=\"metrics-card\"><h3>Categories Detected</h3><p>{}</p></div>'",
        "\"confidence\"",
        "'<div class=\"metrics-card\"><h3>Avg. Confidence</h3><p>{:.1f}%</p></div>'",
        "\"Category Distribution\"",
        "\"Distribution of Detected Product Categories\"",
        "\"No detections to visualize.\"",
        "\"📦 Grocery Product Detection\"",
        "\"Identify grocery products with precision using advanced YOLO models.\"",
        "'cuda_checked'",
        "'<div class=\"sidebar\">'",
        "\"⚙️ Settings\"",
        "\"280.pt\"",
        "\"maggie.pt\"",
        "\"Select Detection Model\"",
        "\"model_select\"",
        "\"Confidence Threshold\"",
        "\"sidebar_conf\"",
        "\"Minimum confidence for detections\"",
        "\"Use GPU (CUDA)\"",
        "\"use_cuda_checkbox\"",
        "\"Uncheck to force CPU usage if CUDA issues persist.\"",
        "\"💡 Detection Tips\"",
        "'</div>'",
        "'models_initialized'",
        "\"Loading models...\"",
        "\"Camera Detection\"",
        "\"Image Upload\"",
        "\"Camera Detection\"",
        "'<div class=\"camera-section\">'",
        "\"HD (1280x720)\"",
        "\"Full HD (1920x1080)\"",
        "\"Custom\"",
        "\"Select Camera Resolution\"",
        "\"camera_resolution\"",
        "\"Custom\"",
        "\"Width (px)\"",
        "\"custom_width\"",
        "\"Height (px)\"",
        "\"custom_height\"",
        "\"HD (1280x720)\"",
        "\"Full HD (1920x1080)\"",
        "\"Capture Image\"",
        "\"camera\"",
        "\"Processing image...\"",
        "\"Image Comparison\"",
        "\"Original Image\"",
        "\"Original image not available.\"",
        "f\"Processed Image (Model: {selected_model})\"",
        "\".png\"",
        "f'<a href=\"data:image/png;base64,{img_b64}\" download=\"processed_image.png\" class=\"download-button\">Download Processed Image</a>'",
        "f\"Detected {len(detected_objects)} product{'s' if len(detected_objects) > 1 else ''}\"",
        "'s'",
        "''",
        "'<div class=\"result-container\">'",
        "\"camera\"",
        "'</div>'",
        "f\"{uuid.uuid4()}.jpg\"",
        "\"No products detected. Try adjusting the confidence threshold in the sidebar or taking a clearer photo.\"",
        "f\"{str(e)}\"",
        "f\"Error processing image: {str(e)}. Please try again or check the logs for details.\"",
        "f\"Camera processing error: {str(e)}\"",
        "'</div>'",
        "\"Camera Troubleshooting Guide\"",
        "\"Image Upload Detection\"",
        "'<div class=\"result-container\">'",
        "\"Upload an image (JPG, PNG)\"",
        "\"jpg\"",
        "\"jpeg\"",
        "\"png\"",
        "\"uploader\"",
        "\"File size exceeds 10MB limit. Please upload a smaller image.\"",
        "\"File size exceeds 10MB\"",
        "\"Processing image...\"",
        "f\"{uuid.uuid4()}.jpg\"",
        "\"Image Comparison\"",
        "\"Original Image\"",
        "\"Original image not available.\"",
        "f\"Processed Image (Model: {selected_model})\"",
        "\".png\"",
        "f'<a href=\"data:image/png;base64,{img_b64}\" download=\"processed_image.png\" class=\"download-button\">Download Processed Image</a>'",
        "f\"Detected {len(detected_objects)} product{'s' if len(detected_objects) > 1 else ''}\"",
        "'s'",
        "''",
        "\"upload\"",
        "\"No products detected. Try adjusting the confidence threshold in the sidebar or using a clearer image.\"",
        "f\"Image detection completed with {selected_model}, saved as {filename}\"",
        "f\"{str(e)}\"",
        "f\"Error processing image: {str(e)}. Please try a different image or check the logs.\"",
        "f\"Unexpected error in image upload: {str(e)}\"",
        "'</div>'",
        "\"__main__\""
    ],
    "variables": [
        "logger",
        "RESULTS_DIR",
        "models",
        "model_class_files",
        "class_names",
        "corrected_detections",
        "processed_image",
        "original_image",
        "use_cuda",
        "cuda_available",
        "cuda_device_count",
        "cuda_device_name",
        "cuda_version",
        "fruits",
        "beverages",
        "snacks",
        "dairy",
        "default_classes",
        "classes",
        "model",
        "model",
        "conf",
        "models",
        "model_path",
        "class_file",
        "class_names",
        "model_path",
        "models",
        "lab",
        "l",
        "a",
        "b",
        "clahe",
        "l",
        "lab",
        "img",
        "kernel",
        "img",
        "detected_objects",
        "img_height",
        "img_width",
        "min_dimension",
        "box_thickness",
        "font_scale",
        "shadow_offset",
        "model_classes",
        "x1",
        "y1",
        "x2",
        "y2",
        "conf",
        "label_idx",
        "label",
        "category",
        "badge_class",
        "color",
        "label",
        "category",
        "badge_class",
        "color",
        "text",
        "text_size",
        "img",
        "nparr",
        "img",
        "original_size",
        "original_image",
        "img",
        "max_dim",
        "h",
        "w",
        "new_h",
        "new_w",
        "new_w",
        "new_h",
        "process_size",
        "img_resized",
        "device",
        "results",
        "use_cuda",
        "device",
        "results",
        "result",
        "boxes",
        "confidences",
        "class_ids",
        "indices",
        "indices",
        "boxes",
        "confidences",
        "class_ids",
        "boxes",
        "confidences",
        "class_ids",
        "scale_x",
        "scale_y",
        "processed_img",
        "detected_objects",
        "processed_image",
        "cuda_debug_msg",
        "error_msg",
        "categories",
        "category_counts",
        "colors",
        "buf",
        "edited_detections",
        "col1",
        "col2",
        "col3",
        "new_label",
        "corrected_detections",
        "df_data",
        "df",
        "col1",
        "col2",
        "col3",
        "unique_categories",
        "avg_conf",
        "viz_buf",
        "use_cuda",
        "cuda_checked",
        "model_options",
        "selected_model",
        "conf_thres",
        "use_cuda",
        "models_initialized",
        "tab1",
        "tab2",
        "resolution_options",
        "selected_resolution",
        "custom_width",
        "custom_height",
        "col1",
        "col2",
        "custom_width",
        "custom_height",
        "camera_width",
        "camera_height",
        "camera_width",
        "camera_height",
        "camera_width",
        "camera_height",
        "camera_input",
        "img_bytes",
        "processed_img",
        "detected_objects",
        "processed_img_rgb",
        "col1",
        "col2",
        "_",
        "img_buf",
        "img_b64",
        "href",
        "detected_objects",
        "filename",
        "result_path",
        "uploaded_file",
        "img_data",
        "processed_img",
        "detected_objects",
        "filename",
        "result_path",
        "processed_img_rgb",
        "col1",
        "col2",
        "_",
        "img_buf",
        "img_b64",
        "href",
        "detected_objects"
    ],
    "comments": [
        "Setup logging",
        "Custom CSS for vibrant colors and improved visibility",
        "Ensure results directory exists",
        "Global model and class variables",
        "Initialize session state",
        "Function to check CUDA setup",
        "Function to categorize products and assign colors",
        "Coral Red",
        "Sky Blue",
        "Sunflower Yellow",
        "Lime Green",
        "Soft Gray",
        "Function to load class names for a specific model",
        "Function to initialize models",
        "Function to preprocess image",
        "Draw bounding boxes",
        "Process a single image with CPU fallback",
        "Ensure model is on the correct device",
        "Default IOU threshold",
        "Function to create category visualization",
        "Function to display and edit detections",
        "Streamlit app",
        "Check CUDA setup at startup",
        "Sidebar (IOU Threshold removed)",
        "Option to toggle CUDA usage",
        "Initialize models",
        "Tabs"
    ],
    "docstrings": [
        "\"\"\"\n<style>\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Inter', sans-serif;\n        margin: 0;\n        padding: 0;\n    }\n\n    .stApp {\n        background: linear-gradient(135deg, #fefce8 0%, #e0f2fe 100%);\n        width: 100vw;\n        max-width: none;\n        min-height: 100vh;\n        padding: 3rem;\n        margin: 0 auto;\n        overflow-x: hidden;\n    }\n\n    h1 {\n        font-family: 'Inter', sans-serif;\n        font-weight: 700;\n        font-size: 3.5rem;\n        color: #1f2937;\n        text-align: center;\n        margin-bottom: 2rem;\n        letter-spacing: -0.5px;\n        text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.05);\n    }\n\n    h2 {\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 2rem;\n        color: #1f2937;\n        margin-bottom: 1.5rem;\n    }\n\n    h3 {\n        font-family: 'Inter', sans-serif;\n        font-weight: 500;\n        font-size: 1.5rem;\n        color: #374151;\n        margin-bottom: 1rem;\n    }\n\n    p, .stMarkdown, .stText {\n        font-family: 'Inter', sans-serif;\n        font-weight: 400;\n        font-size: 1rem;\n        color: #4b5563;\n        line-height: 1.6;\n        margin-bottom: 1rem;\n    }\n\n    .stSelectbox label, .stSlider label, .stNumberInput label {\n        font-family: 'Inter', sans-serif;\n        font-weight: 500;\n        font-size: 1rem;\n        color: #1f2937;\n        margin-bottom: 0.5rem;\n    }\n\n    .stButton>button {\n        background: linear-gradient(to right, #0d9488, #14b8a6);\n        color: #ffffff;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 6px;\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 1rem;\n        transition: all 0.3s ease;\n        width: 100%;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .stButton>button:hover {\n        background: linear-gradient(to right, #0f766e, #0d9488);\n        color: #ffffff;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .result-container {\n        background: #ffffff;\n        border-radius: 8px;\n        padding: 2rem;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n        margin: 2rem 0;\n        border: 1px solid #e5e7eb;\n    }\n\n    .camera-section {\n        background: #ffffff;\n        border-radius: 8px;\n        padding: 2rem;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);\n        margin: 2rem 0;\n        border: 1px solid #e5e7eb;\n    }\n\n    .stTabs [role=\"tablist\"] {\n        background: #f1f5f9;\n        border-radius: 8px;\n        padding: 0.5rem;\n        display: flex;\n        gap: 1rem;\n        margin-bottom: 2rem;\n        justify-content: center;\n    }\n\n    .stTabs [role=\"tab\"] {\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 1rem;\n        color: #4b5563;\n        padding: 0.75rem 1.5rem;\n        border-radius: 6px;\n        transition: all 0.3s ease;\n    }\n\n    .stTabs [role=\"tab\"][aria-selected=\"true\"] {\n        background: #0d9488;\n        color: #ffffff;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .stTabs [role=\"tab\"]:hover {\n        background: #d1d5db;\n        color: #0d9488;\n    }\n\n    .stDataFrame {\n        border-radius: 8px;\n        overflow: hidden;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        margin: 1.5rem 0;\n    }\n\n    .stDataFrame table {\n        width: 100%;\n        border-collapse: collapse;\n        background: #ffffff;\n    }\n\n    .stDataFrame th {\n        background: linear-gradient(to right, #0d9488, #14b8a6);\n        color: #ffffff;\n        padding: 12px;\n        font-weight: 600;\n        text-align: left;\n    }\n\n    .stDataFrame td {\n        padding: 12px;\n        border-bottom: 1px solid #e5e7eb;\n        color: #1f2937;\n    }\n\n    .stExpander {\n        background: #f9fafb;\n        border-radius: 8px;\n        border: 1px solid #e5e7eb;\n        padding: 1.5rem;\n        margin: 1.5rem 0;\n    }\n\n    .stFileUploader label {\n        font-family: 'Inter', sans-serif;\n        font-weight: 500;\n        font-size: 1rem;\n        color: #1f2937;\n    }\n\n    .stImage img {\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        max-width: 100%;\n        height: auto;\n    }\n\n    .stCameraInput {\n        width: 100% !important;\n        max-width: 800px;\n        margin: 0 auto;\n    }\n\n    .stCameraInput img {\n        width: 100% !important;\n        max-height: 500px;\n        object-fit: contain;\n        border-radius: 8px;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n    }\n\n    .stSpinner {\n        color: #0d9488;\n    }\n\n    .badge {\n        display: inline-block;\n        padding: 6px 12px;\n        border-radius: 12px;\n        font-size: 0.9rem;\n        font-weight: 500;\n        margin-right: 8px;\n    }\n\n    .badge-fruits { background-color: #fef2f2; color: #f87171; }\n    .badge-beverages { background-color: #eff6ff; color: #60a5fa; }\n    .badge-snacks { background-color: #fefce8; color: #facc15; }\n    .badge-dairy { background-color: #f0fdf4; color: #4ade80; }\n    .badge-other { background-color: #f3f4f6; color: #9ca3af; }\n\n    .metrics-card {\n        background: #ffffff;\n        border-radius: 8px;\n        padding: 1.5rem;\n        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n        margin: 1rem 0;\n        border: 1px solid #e5e7eb;\n        text-align: center;\n    }\n\n    .metrics-card h3 {\n        font-family: 'Inter', sans-serif;\n        font-weight: 500;\n        font-size: 1.2rem;\n        color: #1f2937;\n        margin-bottom: 0.5rem;\n    }\n\n    .metrics-card p {\n        font-family: 'Inter', sans-serif;\n        font-weight: 700;\n        font-size: 1.8rem;\n        color: #111827;\n    }\n\n    .delete-button {\n        background: linear-gradient(to right, #f87171, #dc2626);\n        color: #ffffff;\n        border: none;\n        padding: 8px 16px;\n        border-radius: 6px;\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 0.9rem;\n        transition: all 0.3s ease;\n        cursor: pointer;\n    }\n\n    .delete-button:hover {\n        background: linear-gradient(to right, #ef4444, #b91c1c);\n        color: #ffffff;\n        transform: translateY(-1px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .save-button {\n        background: linear-gradient(to right, #4ade80, #16a34a);\n        color: #ffffff;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 6px;\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 1rem;\n        transition: all 0.3s ease;\n        width: 100%;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .save-button:hover {\n        background: linear-gradient(to right, #22c55e, #15803d);\n        color: #ffffff;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .download-button {\n        background: linear-gradient(to right, #6b7280, #4b5563);\n        color: #ffffff;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 6px;\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 1rem;\n        transition: all 0.3s ease;\n        width: 100%;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    .download-button:hover {\n        background: linear-gradient(to right, #4b5563, #374151);\n        color: #ffffff;\n        transform: translateY(-2px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    }\n\n    .instruction-box {\n        background: #f9fafb;\n        border-radius: 8px;\n        padding: 1.5rem;\n        margin: 1.5rem 0;\n        border-left: 4px solid;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n    }\n\n    .instruction-box-camera {\n        border-left-color: #0d9488;\n    }\n\n    .instruction-box-upload {\n        border-left-color: #16a34a;\n    }\n\n    .instruction-box ol {\n        padding-left: 1.5rem;\n        margin-bottom: 0;\n    }\n\n    .instruction-box li {\n        font-family: 'Inter', sans-serif;\n        font-weight: 400;\n        font-size: 1rem;\n        color: #4b5563;\n        margin-bottom: 0.75rem;\n    }\n\n    .sidebar .stSelectbox, .sidebar .stSlider {\n        margin-bottom: 1.5rem;\n    }\n\n    .sidebar h3 {\n        font-family: 'Inter', sans-serif;\n        font-weight: 600;\n        font-size: 1.3rem;\n        color: #1f2937;\n        margin-bottom: 1rem;\n    }\n\n    .sidebar p {\n        font-size: 0.95rem;\n        color: #6b7280;\n        line-height: 1.5;\n    }\n\n    @media (max-width: 768px) {\n        .stApp {\n            padding: 1.5rem;\n        }\n        h1 {\n            font-size: 2.5rem;\n        }\n        h2 {\n            font-size: 1.6rem;\n        }\n        h3 {\n            font-size: 1.3rem;\n        }\n        p, .stMarkdown, .stText {\n            font-size: 0.95rem;\n        }\n        .stButton>button, .save-button, .download-button {\n            padding: 10px 20px;\n            font-size: 0.95rem;\n        }\n        .stCameraInput img {\n            max-height: 300px;\n        }\n        .metrics-card p {\n            font-size: 1.5rem;\n        }\n        .stTabs [role=\"tablist\"] {\n            flex-direction: column;\n            gap: 0.5rem;\n        }\n        .stTabs [role=\"tab\"] {\n            padding: 0.5rem 1rem;\n            font-size: 0.95rem;\n        }\n        .stColumns > div {\n            flex-direction: column;\n            gap: 1rem;\n        }\n        .stColumns > div > div {\n            width: 100% !important;\n        }\n        .sidebar h3 {\n            font-size: 1.2rem;\n        }\n        .sidebar p {\n            font-size: 0.9rem;\n        }\n    }\n</style>\n\"\"\"",
        "\"\"\"\n        **CUDA Debugging Steps:**\n        1. Set the environment variable `CUDA_LAUNCH_BLOCKING=1` before running the app:\n           - On Linux/Mac: `export CUDA_LAUNCH_BLOCKING=1`\n           - On Windows: `set CUDA_LAUNCH_BLOCKING=1`\n        2. Enable device-side assertions by setting `TORCH_USE_CUDA_DSA=1`:\n           - On Linux/Mac: `export TORCH_USE_CUDA_DSA=1`\n           - On Windows: `set TORCH_USE_CUDA_DSA=1`\n        3. Check your CUDA setup:\n           - Ensure NVIDIA drivers are up to date.\n           - Verify PyTorch CUDA version matches your CUDA toolkit (run `print(torch.version.cuda)`).\n           - Check GPU memory usage (`nvidia-smi`) and ensure there's enough free memory.\n        4. If the issue persists, try running the app with CPU only by setting `use_cuda` to False in the app settings.\n        \"\"\"",
        "\"\"\"\n        - **Lighting**: Ensure good lighting for clear images.\n        - **Positioning**: Place items centrally and avoid overlap.\n        - **Resolution**: Higher resolutions improve accuracy but may slow processing.\n        - **Confidence**: Lower confidence for more detections.\n        \"\"\"",
        "\"\"\"\n        <div class=\"instruction-box instruction-box-camera\">\n        <h3>How to Use the Camera</h3>\n        <ol>\n            <li>Select the desired camera resolution above.</li>\n            <li>Adjust confidence threshold in the sidebar for optimal detection.</li>\n            <li>Click the \"Capture Image\" button below.</li>\n            <li>Grant camera permissions when prompted.</li>\n            <li>Position grocery items clearly in the frame.</li>\n            <li>Capture the photo to detect products automatically.</li>\n        </ol>\n        </div>\n        \"\"\"",
        "\"\"\"\n            ### Camera Not Working? Try These Steps\n            <ol>\n                <li><b>Check Permissions</b>: Ensure camera access is granted in browser settings.</li>\n                <li><b>Browser Compatibility</b>: Use Chrome, Firefox, or Safari for best support.</li>\n                <li><b>Device Camera</b>: Test your camera with another app to confirm it works.</li>\n                <li><b>Lighting</b>: Ensure adequate lighting for better detection.</li>\n                <li><b>Resolution</b>: Lower resolution if the camera is slow (e.g., HD instead of Full HD).</li>\n                <li><b>Refresh</b>: Refresh the browser to reset camera initialization.</li>\n                <li><b>Alternative</b>: Use the \"Image Upload\" tab if issues persist.</li>\n                <li><b>Logs</b>: Check browser console (F12) for error messages.</li>\n            </ol>\n            \"\"\"",
        "\"\"\"\n        <div class=\"instruction-box instruction-box-upload\">\n        <h3>How to Upload an Image</h3>\n        <ol>\n            <li>Adjust confidence threshold in the sidebar for optimal detection.</li>\n            <li>Click the \"Browse files\" button below to select an image (JPG/PNG).</li>\n            <li>Ensure the image is clear and well-lit for best results.</li>\n            <li>Upload the image to detect products automatically.</li>\n        </ol>\n        </div>\n        \"\"\""
    ],
    "functions": [
        "check_cuda_setup",
        "categorize_product",
        "load_classes",
        "init_models",
        "preprocess_image",
        "draw_boxes",
        "process_image",
        "create_category_visualization",
        "display_and_edit_detections",
        "main"
    ],
    "classes": []
}