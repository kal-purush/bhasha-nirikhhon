{
    "identifiers": [
        "json",
        "os",
        "sys",
        "warnings",
        "pathlib",
        "Path",
        "typing",
        "Any",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "axes",
        "Axes",
        "matplotlib",
        "figure",
        "Figure",
        "mpl_toolkits",
        "mplot3d",
        "Axes3D",
        "ax",
        "Axes",
        "Axes3D",
        "base_name",
        "path",
        "Path",
        "Path",
        "os",
        "environ",
        "Any",
        "Path",
        "sys",
        "argv",
        "resolve",
        "Path",
        "script_path",
        "is_file",
        "script_path",
        "script_path",
        "parent",
        "script_path",
        "parent",
        "script_path",
        "script_path",
        "parent",
        "warnings",
        "warn",
        "fallback",
        "json",
        "load",
        "open",
        "script_path",
        "json",
        "JSONDecodeError",
        "warnings",
        "warn",
        "UserWarning",
        "fallback",
        "theme_name",
        "themes",
        "all",
        "key",
        "themes",
        "theme_name",
        "key",
        "necessary_keys",
        "warnings",
        "warn",
        "UserWarning",
        "fallback",
        "themes",
        "theme_name",
        "current_theme",
        "current_theme",
        "current_theme",
        "current_theme",
        "key",
        "ax",
        "spines",
        "keys",
        "ax",
        "spines",
        "key",
        "set_color",
        "color",
        "ax",
        "xaxis",
        "label",
        "set_color",
        "color",
        "ax",
        "xaxis",
        "label",
        "set_fontsize",
        "fontsize",
        "ax",
        "yaxis",
        "label",
        "set_color",
        "color",
        "ax",
        "yaxis",
        "label",
        "set_fontsize",
        "fontsize",
        "isinstance",
        "ax",
        "Axes3D",
        "ax",
        "zaxis",
        "label",
        "set_color",
        "color",
        "ax",
        "zaxis",
        "label",
        "set_fontsize",
        "fontsize",
        "isinstance",
        "ax",
        "figure",
        "Figure",
        "ax",
        "figure",
        "set_size_inches",
        "figsize",
        "warnings",
        "warn",
        "ax",
        "get_xticklabels",
        "ax",
        "get_yticklabels",
        "isinstance",
        "ax",
        "Axes3D",
        "ticklabels",
        "ax",
        "get_zticklabels",
        "label",
        "ticklabels",
        "label",
        "set_color",
        "color",
        "label",
        "set_fontsize",
        "fontsize",
        "ax",
        "get_legend",
        "legend",
        "legend",
        "get_frame",
        "set_alpha",
        "framealpha",
        "legend",
        "get_title",
        "set_color",
        "color",
        "legend",
        "get_title",
        "set_fontsize",
        "fontsize",
        "text",
        "legend",
        "get_texts",
        "text",
        "set_fontsize",
        "fontsize",
        "text",
        "set_color",
        "color",
        "Path",
        "path",
        "base_name",
        "theme_name",
        "isinstance",
        "ax",
        "figure",
        "Figure",
        "ax",
        "figure",
        "savefig",
        "output_path",
        "format",
        "transparent",
        "warnings",
        "warn",
        "plt",
        "close"
    ],
    "literals": [
        "\".\"",
        "\"SMOKE_TEST\"",
        "\"color\"",
        "\"black\"",
        "\"figsize\"",
        "\"fontsize\"",
        "\"framealpha\"",
        "\"plotting_themes.json\"",
        "\"No themes for plotting found. A fallback theme is used.\"",
        "\"fallback\"",
        "\"plotting_themes.json\"",
        "\"The JSON containing the themes could not be loaded.\"",
        "\"A fallback theme is used.\"",
        "\"fallback\"",
        "\"color\"",
        "\"figsize\"",
        "\"fontsize\"",
        "\"framealpha\"",
        "\"Provided theme does not contain the necessary keys.\"",
        "\"Using a fallback theme instead.\"",
        "\"color\"",
        "\"figsize\"",
        "\"fontsize\"",
        "\"framealpha\"",
        "\"Could not adjust size of plot due to it not being a Figure.\"",
        "f\"{base_name}_{theme_name}.svg\"",
        "\"svg\"",
        "\"Plots could not be saved.\""
    ],
    "variables": [
        "fallback",
        "script_path",
        "script_path",
        "themes",
        "themes",
        "themes",
        "necessary_keys",
        "current_theme",
        "current_theme",
        "color",
        "figsize",
        "fontsize",
        "framealpha",
        "ticklabels",
        "legend",
        "output_path"
    ],
    "comments": [
        "Check whether we immediately return due to just running a SMOKE_TEST",
        "Define a fallback theme in case no configuration is found",
        "Try to find the plotting themes by backtracking",
        "Get the absolute path of the current script",
        "Open the file containing all the themes",
        "If we reach this point, we know that the file exists, so we try to load it.",
        "If the file is no proper json, the fallback theme is used.",
        "Get all of the values from the themes",
        "TODO This can probably be generalized and improved later on such that the",
        "keys fit the rc_params of matplotlib",
        "TODO We might want to add a generalization here",
        "Adjust the axes of the plot",
        "Adjust the size of the ax",
        "mypy thinks that ax.figure might become None, hence the explicit ignore",
        "Adjust the labels",
        "Adjust the legend if it exists",
        "mypy thinks that ax.figure might become None, hence the explicit ignore"
    ],
    "docstrings": [
        "\"\"\"Utilities for running the examples.\"\"\"",
        "\"\"\"Create plots from an Axes object and save them as a svg file.\n\n    If the ``SMOKE_TEST`` variable is set, no plots are being created and this method\n    immediately returns.\n\n    The function attempts to read the predefined themes from ``plotting_themes.json``.\n    For each theme it finds, a file ``{base_name}_{theme}.svg`` is being created.\n    If the file cannot be found, if the JSON cannot be loaded or if the JSON is not well\n    configured, a fallback theme is used.\n\n    Args:\n        ax: The Axes object containing the figure that should be plotted.\n        base_name: The base name that is used for naming the output files.\n        path: Optional path to the directory in which the plots should be saved.\n\n    Returns:\n        The ``Figure`` containing ``ax``\n    \"\"\""
    ],
    "functions": [
        "create_example_plots"
    ],
    "classes": []
}