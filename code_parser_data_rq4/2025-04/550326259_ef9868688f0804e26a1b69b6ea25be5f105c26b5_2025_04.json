{
    "identifiers": [
        "Text",
        "Json",
        "Text",
        "Json",
        "Nodes",
        "Json",
        "Logic",
        "OpenFeature",
        "Contrib",
        "Providers",
        "Flagd",
        "Resolver",
        "InProcess",
        "CustomEvaluators",
        "IRule",
        "JsonNode",
        "args",
        "Json",
        "Logic",
        "EvaluationContext",
        "context",
        "StringRule",
        "isValid",
        "args",
        "context",
        "operandA",
        "operandB",
        "Convert",
        "ToString",
        "operandA",
        "StartsWith",
        "Convert",
        "ToString",
        "operandB",
        "IRule",
        "JsonNode",
        "args",
        "Json",
        "Logic",
        "EvaluationContext",
        "context",
        "StringRule",
        "isValid",
        "args",
        "context",
        "operandA",
        "operandB",
        "operandA",
        "EndsWith",
        "operandB",
        "JsonNode",
        "args",
        "Json",
        "Logic",
        "EvaluationContext",
        "context",
        "argA",
        "argB",
        "argA",
        "argB",
        "args",
        "AsArray",
        "Count",
        "JsonLogic",
        "Apply",
        "args",
        "context",
        "JsonLogic",
        "Apply",
        "args",
        "context",
        "nodeA",
        "GetValueKind",
        "JsonValueKind",
        "nodeB",
        "GetValueKind",
        "JsonValueKind",
        "argA",
        "nodeA",
        "ToString",
        "argB",
        "nodeB",
        "ToString"
    ],
    "literals": [],
    "variables": [
        "nodeA",
        "nodeB"
    ],
    "comments": [
        "check if we have at least 2 arguments",
        "return false immediately if both operands are not strings"
    ],
    "docstrings": [],
    "functions": [
        "JsonNode",
        "Apply",
        "JsonNode",
        "Apply",
        "isValid"
    ],
    "classes": [
        "StartsWithRule",
        "EndsWithRule",
        "StringRule"
    ]
}