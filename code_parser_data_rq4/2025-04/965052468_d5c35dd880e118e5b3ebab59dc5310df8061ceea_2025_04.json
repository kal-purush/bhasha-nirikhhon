{
    "identifiers": [
        "os",
        "json",
        "numpy",
        "np",
        "pickle",
        "nltk",
        "nltk",
        "stem",
        "WordNetLemmatizer",
        "keras",
        "api",
        "models",
        "load_model",
        "flask",
        "Flask",
        "request",
        "jsonify",
        "flask_cors",
        "CORS",
        "nltk",
        "download",
        "quiet",
        "nltk",
        "download",
        "quiet",
        "Flask",
        "CORS",
        "app",
        "WordNetLemmatizer",
        "load_model",
        "open",
        "file",
        "json",
        "load",
        "file",
        "pickle",
        "load",
        "open",
        "pickle",
        "load",
        "open",
        "e",
        "e",
        "os",
        "system",
        "load_model",
        "open",
        "file",
        "json",
        "load",
        "file",
        "pickle",
        "load",
        "open",
        "pickle",
        "load",
        "open",
        "sentence",
        "nltk",
        "word_tokenize",
        "sentence",
        "lemmatizer",
        "lemmatize",
        "word",
        "lower",
        "word",
        "sentence_words",
        "sentence_words",
        "sentence",
        "clean_up_sentence",
        "sentence",
        "len",
        "words",
        "w",
        "sentence_words",
        "i",
        "word",
        "words",
        "word",
        "w",
        "np",
        "array",
        "bag",
        "sentence",
        "bag_of_words",
        "sentence",
        "model",
        "predict",
        "np",
        "array",
        "bow",
        "i",
        "r",
        "i",
        "r",
        "res",
        "r",
        "ERROR_THRESHOLD",
        "results",
        "sort",
        "key",
        "x",
        "x",
        "reverse",
        "r",
        "results",
        "return_list",
        "append",
        "classes",
        "r",
        "r",
        "return_list",
        "intents_list",
        "intents_json",
        "intents_list",
        "intents_list",
        "intents_json",
        "i",
        "list_of_intents",
        "i",
        "tag",
        "np",
        "random",
        "choice",
        "i",
        "result",
        "app",
        "route",
        "methods",
        "request",
        "json",
        "data",
        "get",
        "message",
        "jsonify",
        "predict_class",
        "message",
        "get_response",
        "ints",
        "intents",
        "jsonify",
        "response",
        "ints",
        "app",
        "route",
        "methods",
        "jsonify",
        "model",
        "app",
        "run",
        "debug",
        "host",
        "port"
    ],
    "literals": [
        "'punkt'",
        "'wordnet'",
        "'chatbot_model.h5'",
        "'intents.json'",
        "'r'",
        "'words.pkl'",
        "'rb'",
        "'classes.pkl'",
        "'rb'",
        "\"Model and data loaded successfully!\"",
        "f\"Error loading model or data: {e}\"",
        "\"Running training script...\"",
        "'python train_chatbot.py'",
        "'chatbot_model.h5'",
        "'intents.json'",
        "'r'",
        "'words.pkl'",
        "'rb'",
        "'classes.pkl'",
        "'rb'",
        "\"Model and data loaded successfully after training!\"",
        "\"intent\"",
        "\"probability\"",
        "\"I'm not sure what you mean. Could you rephrase that?\"",
        "'intent'",
        "'intents'",
        "'tag'",
        "'responses'",
        "\"I'm not sure how to respond to that.\"",
        "'/api/message'",
        "'POST'",
        "'message'",
        "''",
        "\"error\"",
        "\"No message provided\"",
        "\"response\"",
        "\"intents\"",
        "'/api/health'",
        "'GET'",
        "\"status\"",
        "\"healthy\"",
        "\"model_loaded\"",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "lemmatizer",
        "model",
        "intents",
        "words",
        "classes",
        "model",
        "intents",
        "words",
        "classes",
        "sentence_words",
        "sentence_words",
        "sentence_words",
        "bag",
        "bag",
        "i",
        "bow",
        "res",
        "ERROR_THRESHOLD",
        "results",
        "return_list",
        "tag",
        "list_of_intents",
        "result",
        "result",
        "data",
        "message",
        "ints",
        "response"
    ],
    "comments": [
        "app.py - Main Flask application",
        "Download nltk data if not already downloaded",
        "Enable CORS for all routes",
        "Initialize lemmatizer",
        "Load trained model and data",
        "Try loading again after training",
        "Filter out predictions below a threshold",
        "Sort by strength of probability",
        "Get a random response from the intent",
        "Get prediction and response"
    ],
    "docstrings": [
        "\"\"\"Tokenize and lemmatize the sentence\"\"\"",
        "\"\"\"Convert a sentence to a bag of words array\"\"\"",
        "\"\"\"Predict the class (intent) of a sentence\"\"\"",
        "\"\"\"Get a response from the model\"\"\""
    ],
    "functions": [
        "clean_up_sentence",
        "bag_of_words",
        "predict_class",
        "get_response",
        "process_message",
        "health_check"
    ],
    "classes": []
}