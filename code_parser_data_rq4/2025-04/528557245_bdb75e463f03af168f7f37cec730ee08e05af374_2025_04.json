{
    "identifiers": [
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "command",
        "com",
        "solace",
        "client",
        "sempv2",
        "ApiException",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "command",
        "semp",
        "SempApiProvider",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "command",
        "model",
        "Command",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "command",
        "model",
        "CommandResult",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "command",
        "model",
        "CommandType",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "command",
        "model",
        "JobStatus",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "command",
        "model",
        "SempCommandConstants",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "apache",
        "commons",
        "lang",
        "Validate",
        "java",
        "util",
        "com",
        "solace",
        "maas",
        "ep",
        "management",
        "agent",
        "plugin",
        "terraform",
        "manager",
        "TerraformUtils",
        "setCommandError",
        "Slf4j",
        "MSG_VPN_EMPTY_ERROR_MSG",
        "command",
        "sempApiProvider",
        "validate",
        "command",
        "sempApiProvider",
        "executeSempCommand",
        "command",
        "sempApiProvider",
        "command",
        "setResult",
        "CommandResult",
        "builder",
        "status",
        "JobStatus",
        "success",
        "logs",
        "of",
        "build",
        "e",
        "log",
        "error",
        "supportedSempCommand",
        "e",
        "setCommandError",
        "command",
        "e",
        "command",
        "sempApiProvider",
        "command",
        "sempApiProvider",
        "Validate",
        "isTrue",
        "command",
        "getCommand",
        "equals",
        "supportedSempCommand",
        "supportedSempCommand",
        "Validate",
        "isTrue",
        "command",
        "getCommandType",
        "equals",
        "CommandType",
        "semp",
        "Validate",
        "notNull",
        "sempApiProvider",
        "Validate",
        "notEmpty",
        "command",
        "getParameters",
        "Validate",
        "notNull",
        "command",
        "getParameters",
        "get",
        "SempCommandConstants",
        "SEMP_COMMAND_ENTITY_TYPE",
        "Validate",
        "notNull",
        "command",
        "getParameters",
        "get",
        "SempCommandConstants",
        "SEMP_COMMAND_DATA",
        "e",
        "entityType",
        "command",
        "e",
        "getCode",
        "e",
        "getResponseBody",
        "contains",
        "log",
        "info",
        "command",
        "command",
        "entityType",
        "e"
    ],
    "literals": [
        "\"Msg VPN must not be empty\"",
        "\"SEMP {} command not executed successfully\"",
        "\"Command must be \"",
        "\"Command type must be semp\"",
        "\"SempApiProvider must not be null\"",
        "\"Command parameters must not be empty\"",
        "\"Semp request must be against a specific \"",
        "\"semp entity type\"",
        "\"Semp request must contain data\"",
        "\"NOT_FOUND\"",
        "\"SEMP {}: tried to {} {} which did not exist (anymore)\""
    ],
    "variables": [],
    "comments": [
        "not found is not an error and is already handled in handleSempApiDeleteException",
        "all other exceptions are considered errors and are (re)-thrown to be handled here",
        "SEMP APIExceptions don't expose the response body via e.getMessage()",
        "If the entity does not exist, we don't want to consider it an error",
        "This is because of the edge case of dangling entities from previous deployment that did not get finalized",
        "SEMP does not report a 404 for entities that do not exist, so we have to check the response body",
        "NOT_FOUND is the string that SEMP returns within the response JSON, when an entity does not exist",
        "we don't want to log the content of the response body, as it may contain sensitive information",
        "we only log the entity type. The entity name is also considered sensitive information and is not logged"
    ],
    "docstrings": [],
    "functions": [
        "supportedSempCommand",
        "execute",
        "executeSempCommand",
        "validate",
        "handleSempOperationException"
    ],
    "classes": [
        "AbstractSempCommandManager"
    ]
}