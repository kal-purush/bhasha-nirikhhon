{
    "identifiers": [
        "io",
        "openbas",
        "rest",
        "finding",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "JsonNode",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "io",
        "openbas",
        "database",
        "model",
        "io",
        "openbas",
        "database",
        "repository",
        "FindingRepository",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "java",
        "util",
        "stream",
        "Collectors",
        "lombok",
        "RequiredArgsConstructor",
        "lombok",
        "java",
        "Log",
        "org",
        "springframework",
        "stereotype",
        "Component",
        "Log",
        "RequiredArgsConstructor",
        "Component",
        "findingRepository",
        "inject",
        "asset",
        "rawOutputByMode",
        "contractOutputElements",
        "findings",
        "patternCache",
        "contractOutputElements",
        "stream",
        "io",
        "openbas",
        "database",
        "model",
        "ContractOutputElement",
        "isFinding",
        "forEach",
        "contractOutputElement",
        "regex",
        "contractOutputElement",
        "getRule",
        "pattern",
        "patternCache",
        "computeIfAbsent",
        "regex",
        "r",
        "Pattern",
        "compile",
        "r",
        "Pattern",
        "MULTILINE",
        "Pattern",
        "CASE_INSENSITIVE",
        "Pattern",
        "UNICODE_CHARACTER_CLASS",
        "matcher",
        "pattern",
        "matcher",
        "rawOutputByMode",
        "matcher",
        "find",
        "finalValue",
        "buildValue",
        "contractOutputElement",
        "matcher",
        "isValid",
        "finalValue",
        "finding",
        "buildFinding",
        "inject",
        "asset",
        "contractOutputElement",
        "finalValue",
        "findings",
        "add",
        "finding",
        "findings",
        "finalValue",
        "finalValue",
        "finalValue",
        "isEmpty",
        "rawOutput",
        "mode",
        "rawOutput",
        "rawOutput",
        "isEmpty",
        "objectMapper",
        "rootNode",
        "objectMapper",
        "readTree",
        "rawOutput",
        "mode",
        "ParserMode",
        "STDOUT",
        "rootNode",
        "has",
        "rootNode",
        "get",
        "asText",
        "mode",
        "ParserMode",
        "STDERR",
        "rootNode",
        "has",
        "rootNode",
        "get",
        "asText",
        "e",
        "log",
        "log",
        "Level",
        "WARNING",
        "e",
        "getMessage",
        "e",
        "contractOutputElement",
        "matcher",
        "fieldValuesMap",
        "contractOutputElement",
        "getType",
        "fields",
        "extractedValues",
        "extractValues",
        "contractOutputElement",
        "getRegexGroups",
        "matcher",
        "fieldValuesMap",
        "put",
        "extractedValues",
        "field",
        "contractOutputElement",
        "getType",
        "fields",
        "extractedValues",
        "extractValues",
        "contractOutputElement",
        "getRegexGroups",
        "stream",
        "regexGroup",
        "field",
        "getKey",
        "equals",
        "regexGroup",
        "getField",
        "collect",
        "Collectors",
        "toSet",
        "matcher",
        "fieldValuesMap",
        "put",
        "field",
        "getKey",
        "extractedValues",
        "formatFinalValue",
        "contractOutputElement",
        "getType",
        "fieldValuesMap",
        "regexGroups",
        "matcher",
        "extractedValues",
        "regexGroup",
        "regexGroups",
        "indexes",
        "Arrays",
        "stream",
        "regexGroup",
        "getIndexValues",
        "split",
        "index",
        "index",
        "isEmpty",
        "toArray",
        "index",
        "indexes",
        "groupIndex",
        "parseInt",
        "index",
        "groupIndex",
        "matcher",
        "groupCount",
        "log",
        "log",
        "Level",
        "WARNING",
        "groupIndex",
        "extracted",
        "matcher",
        "group",
        "groupIndex",
        "extracted",
        "extracted",
        "isEmpty",
        "log",
        "log",
        "Level",
        "WARNING",
        "extracted",
        "extractedValues",
        "add",
        "extracted",
        "trim",
        "e",
        "log",
        "log",
        "Level",
        "SEVERE",
        "index",
        "e",
        "extractedValues",
        "inject",
        "asset",
        "contractOutputElement",
        "finalValue",
        "optionalFinding",
        "findingRepository",
        "findByInjectIdAndValue",
        "inject",
        "getId",
        "finalValue",
        "finding",
        "optionalFinding",
        "orElseGet",
        "newFinding",
        "newFinding",
        "setInject",
        "inject",
        "newFinding",
        "setField",
        "contractOutputElement",
        "getKey",
        "newFinding",
        "setType",
        "contractOutputElement",
        "getType",
        "newFinding",
        "setValue",
        "finalValue",
        "newFinding",
        "setName",
        "contractOutputElement",
        "getName",
        "newFinding",
        "setTags",
        "contractOutputElement",
        "getTags",
        "newFinding",
        "finding",
        "getAssets",
        "add",
        "asset",
        "finding",
        "fieldValuesMap",
        "Credentials",
        "username",
        "buildString",
        "fieldValuesMap",
        "password",
        "buildString",
        "fieldValuesMap",
        "username",
        "password",
        "PortsScan",
        "host",
        "buildString",
        "fieldValuesMap",
        "port",
        "buildString",
        "fieldValuesMap",
        "service",
        "fieldValuesMap",
        "getOrDefault",
        "of",
        "isEmpty",
        "join",
        "fieldValuesMap",
        "get",
        "host",
        "port",
        "service",
        "fieldValuesMap",
        "values",
        "stream",
        "join",
        "collect",
        "Collectors",
        "joining",
        "fieldValuesMap",
        "key",
        "join",
        "fieldValuesMap",
        "getOrDefault",
        "key",
        "of"
    ],
    "literals": [
        "\"\"",
        "\"stdout\"",
        "\"stdout\"",
        "\"stderr\"",
        "\"stderr\"",
        "\"\"",
        "\"\\\\$\"",
        "\"Skipping invalid group index: \"",
        "\"Skipping invalid extracted value\"",
        "\"Invalid regex group index: \"",
        "\"username\"",
        "\"password\"",
        "\":\"",
        "\"host\"",
        "\"port\"",
        "\"service\"",
        "\"\"",
        "\"\"",
        "\" (\"",
        "\" \"",
        "\"service\"",
        "\")\"",
        "\":\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\""
    ],
    "variables": [
        "findingRepository"
    ],
    "comments": [
        "If there are no specific fields, extract all matched groups",
        "Extract values for each defined field"
    ],
    "docstrings": [],
    "functions": [
        "computeFindingUsingRegexRules",
        "isValid",
        "extractRawOutputByMode",
        "buildValue",
        "extractValues",
        "Finding",
        "buildFinding",
        "formatFinalValue",
        "buildString"
    ],
    "classes": [
        "FindingUtils"
    ]
}