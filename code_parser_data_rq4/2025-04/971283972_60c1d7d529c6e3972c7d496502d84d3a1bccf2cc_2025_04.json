{
    "identifiers": [
        "pytest",
        "django",
        "urls",
        "reverse",
        "rest_framework",
        "test",
        "APIClient",
        "django",
        "contrib",
        "auth",
        "get_user_model",
        "courses",
        "models",
        "Course",
        "CourseContents",
        "users",
        "models",
        "Instructor",
        "User",
        "decouple",
        "config",
        "pytest",
        "mark",
        "django_db",
        "get_user_model",
        "objects",
        "create_user",
        "username",
        "password",
        "is_staff",
        "APIClient",
        "api_client",
        "force_authenticate",
        "user",
        "admin_user",
        "get_user_model",
        "objects",
        "create_user",
        "username",
        "password",
        "Instructor",
        "objects",
        "create",
        "user",
        "instructor_user",
        "designation",
        "university",
        "Course",
        "objects",
        "create",
        "title",
        "description",
        "created_by",
        "instructor",
        "duration",
        "difficulty",
        "subject",
        "CourseContents",
        "objects",
        "create",
        "course",
        "course",
        "content_type",
        "title",
        "order",
        "url",
        "api_client",
        "get",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "get",
        "reverse",
        "args",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course_content",
        "id",
        "response",
        "status_code",
        "pytest",
        "mark",
        "django_db",
        "get_user_model",
        "objects",
        "create_user",
        "username",
        "password",
        "Instructor",
        "objects",
        "create",
        "user",
        "instructor_user",
        "APIClient",
        "api_client",
        "force_authenticate",
        "user",
        "instructor_user",
        "Course",
        "objects",
        "create",
        "title",
        "description",
        "created_by",
        "instructor",
        "duration",
        "difficulty",
        "subject",
        "CourseContents",
        "objects",
        "create",
        "course",
        "course",
        "content_type",
        "title",
        "order",
        "url",
        "api_client",
        "get",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "get",
        "reverse",
        "args",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course_content",
        "id",
        "response",
        "status_code",
        "pytest",
        "mark",
        "django_db",
        "User",
        "objects",
        "create_user",
        "username",
        "password",
        "Instructor",
        "objects",
        "create",
        "user",
        "instructor_user1",
        "User",
        "objects",
        "create_user",
        "username",
        "password",
        "Instructor",
        "objects",
        "create",
        "user",
        "instructor_user2",
        "APIClient",
        "api_client",
        "force_authenticate",
        "user",
        "instructor_user1",
        "Course",
        "objects",
        "create",
        "title",
        "description",
        "created_by",
        "instructor2",
        "duration",
        "difficulty",
        "subject",
        "CourseContents",
        "objects",
        "create",
        "course",
        "course2",
        "content_type",
        "title",
        "order",
        "text_content",
        "api_client",
        "get",
        "reverse",
        "args",
        "course2",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course2",
        "id",
        "response",
        "status_code",
        "api_client",
        "get",
        "reverse",
        "args",
        "course2",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course_content2",
        "id",
        "response",
        "status_code",
        "pytest",
        "mark",
        "django_db",
        "APIClient",
        "Course",
        "objects",
        "create",
        "title",
        "description",
        "created_by",
        "duration",
        "difficulty",
        "subject",
        "api_client",
        "get",
        "course",
        "id",
        "response",
        "status_code",
        "api_client",
        "put",
        "course",
        "id",
        "response",
        "status_code"
    ],
    "literals": [
        "'admin'",
        "'password'",
        "'instructor'",
        "'password'",
        "\"Professor\"",
        "\"University A\"",
        "\"Course 1\"",
        "\"Description for Course 1\"",
        "\"beginner\"",
        "\"Subject 1\"",
        "\"video\"",
        "\"Video Content 1\"",
        "\"http://example.com\"",
        "f'/courses/{course.id}/'",
        "f'/courses/update-delete/{course.id}/'",
        "'title'",
        "'Updated Course Title'",
        "'get_course_content'",
        "f'/courses/content/update/{course_content.id}/'",
        "'title'",
        "'Updated Content Title'",
        "'instructor'",
        "'password'",
        "\"Course 1\"",
        "\"Description for Course 1\"",
        "\"beginner\"",
        "\"Subject 1\"",
        "\"video\"",
        "\"Video Content 1\"",
        "\"http://example.com\"",
        "f'/courses/{course.id}/'",
        "f'/courses/update-delete/{course.id}/'",
        "'title'",
        "'Updated Course Title'",
        "'get_course_content'",
        "f'/courses/content/update/{course_content.id}/'",
        "'title'",
        "'Updated Content Title'",
        "'instructor1'",
        "'password'",
        "'instructor2'",
        "'password'",
        "\"Course 2\"",
        "\"Description for Course 2\"",
        "\"intermediate\"",
        "\"Subject 2\"",
        "\"article\"",
        "\"Article Content 1\"",
        "\"Text content for article\"",
        "'course_detail'",
        "f'/courses/update-delete/{course2.id}/'",
        "'title'",
        "'Attempt to Update Course Title'",
        "'get_course_content'",
        "f'/courses/content/update/{course_content2.id}/'",
        "'title'",
        "'Attempt to Update Content Title'",
        "\"Course 1\"",
        "\"Description for Course 1\"",
        "\"beginner\"",
        "\"Subject 1\"",
        "f'/courses/{course.id}/'",
        "f'/courses/{course.id}/'",
        "'title'",
        "'Updated Title'"
    ],
    "variables": [
        "admin_user",
        "api_client",
        "instructor_user",
        "instructor",
        "course",
        "course_content",
        "response",
        "response",
        "response",
        "response",
        "instructor_user",
        "instructor",
        "api_client",
        "course",
        "course_content",
        "response",
        "response",
        "response",
        "response",
        "instructor_user1",
        "instructor1",
        "instructor_user2",
        "instructor2",
        "api_client",
        "course2",
        "course_content2",
        "response",
        "response",
        "response",
        "response",
        "api_client",
        "course",
        "response",
        "response"
    ],
    "comments": [
        "Test the IsAdminOrInstructorOwner permission class",
        "Create an admin user",
        "Create a course and content",
        "Admin should be able to access and modify both course and course contents",
        "Create an instructor user",
        "Create a course and content for the instructor",
        "Instructor should be able to access and modify their own course and contents",
        "Create two instructor users",
        "Force authenticate using the actual User object",
        "Trying to access another instructor's course",
        "Trying to modify another instructor's course",
        "Trying to access another instructor's content",
        "Trying to modify another instructor's content",
        "Try accessing as unauthenticated user",
        "Unauthenticated user should not be able to access the course"
    ],
    "docstrings": [],
    "functions": [
        "test_admin_permission",
        "test_instructor_permission",
        "test_instructor_cannot_access_other_instructor_course",
        "test_unauthenticated_user_cannot_access"
    ],
    "classes": []
}