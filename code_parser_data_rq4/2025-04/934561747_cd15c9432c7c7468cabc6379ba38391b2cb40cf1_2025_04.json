{
    "identifiers": [
        "Book_Handler",
        "Book_Handler",
        "book",
        "error",
        "error",
        "work_id",
        "work_id",
        "book",
        "error",
        "error",
        "sanitized_query",
        "sanitized_query",
        "sanitized_query",
        "sanitized_query",
        "search_result",
        "error",
        "error",
        "book",
        "book",
        "book",
        "display_prompt",
        "typing_prompt_sentence",
        "book",
        "search_result",
        "search_result",
        "search_result",
        "search_result",
        "book",
        "book",
        "book",
        "book",
        "_missing_field_names",
        "i",
        "_field_names",
        "i",
        "_field_names",
        "i",
        "_missing_field_names",
        "_current_field_name",
        "output_string",
        "_current_field_name",
        "output_string",
        "_current_field_name",
        "book",
        "_current_field_name",
        "book",
        "book",
        "image",
        "book",
        "book",
        "book",
        "book",
        "book",
        "book",
        "book",
        "search_result",
        "UI_Handler",
        "ui_handler"
    ],
    "literals": [
        "\"./book_handler.js\"",
        "\"#419985\"",
        "\"#E53E31\"",
        "\"search_request\"",
        "\"Sanitized Query: \"",
        "\"\"",
        "\"Custom Error: Search Prompt is empty!\"",
        "\"UI\"",
        "\"first_sentence\"",
        "${typing_prompt_sentence}<span class=\"blinking-cursor\">|</span>",
        "\"[[Search Display Results]]\"",
        "\"\"",
        "\", \"",
        "\": \"",
        "\"null (missing)\"",
        "\"<br />\"",
        "\": \"",
        "\"<br />\"",
        "'IMG'",
        "\"Parsed Book Data:\"",
        "\"Book Data (Title): \"",
        "\"title\""
    ],
    "variables": [
        "book",
        "book",
        "sanitized_query",
        "search_result",
        "display_prompt",
        "typing_prompt_sentence",
        "_field_names",
        "_missing_field_names",
        "output_string",
        "error_fields",
        "i",
        "_current_field_name",
        "image",
        "ui_handler"
    ],
    "comments": [
        "Imports",
        "Binding pointer to in-class functions => bind to event listener (button click), instead of btn_onclick (global_scope)",
        "- Alternative option: rebind ui_handler to be globally scoped with `window.ui_handler = ui_handler()` at class_instantiation",
        "this.get_random_book_data = this.get_random_book_data.bind(this); // Bind method so `this` points to existing UI_Handler instance",
        "document.getElementById(\"btn_get_random_book_call\").addEventListener(\"click\", this.get_random_book_data); // this.function.bind(null, *args) if any args",
        "",
        "this.get_search_result = this.get_search_result.bind(this)",
        "document.getElementById(\"btn_book_search\").addEventListener(\"click\", this.get_search_result)",
        "Note: Do not even save the raw_search_query before sanitizing it",
        "Get Raw Query => Sanitize Query => Validate S_Query => API_Request(S_Query)",
        "Security Note: Do not RETRIEVE book data from .innerHTML due to inspect element, only SET",
        "this.display_book_metadata(book)",
        "this.display_book_cover(book)",
        "document.getElementById(\"status_component_name\").innerHTML = \"Status - Missing the following fields: \" + error_fields;",
        "document.getElementById(\"status_component_name\").style.color = this.status_colours.RED;",
        "document.getElementById(\"status_component_name\").innerHTML = \"Status: OK\";",
        "document.getElementById(\"status_component_name\").style.color = this.status_colours.GREEN;",
        "document.getElementById(\"component_name\").innerHTML = output_string;",
        "document.getElementById(\"component_name\").appendChild(image)",
        "Display Search Result components",
        "End Class"
    ],
    "docstrings": [],
    "functions": [
        "_initialize",
        "get_random_book_data",
        "get_book_data",
        "get_search_result",
        "update_book_UI",
        "update_search_UI",
        "display_book_metadata",
        "display_book_cover",
        "development_console_logging",
        "display_search_result"
    ],
    "classes": [
        "UI_Handler"
    ]
}