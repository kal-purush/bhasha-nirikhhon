{
    "identifiers": [
        "flask",
        "Flask",
        "render_template",
        "request",
        "send_file",
        "jsonify",
        "make_response",
        "os",
        "tempfile",
        "pyzipper",
        "io",
        "webbrowser",
        "threading",
        "time",
        "shutil",
        "werkzeug",
        "utils",
        "secure_filename",
        "pdf2pdfa",
        "convert_to_pdfa",
        "Flask",
        "app",
        "config",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "files",
        "jsonify",
        "request",
        "files",
        "pdf_file",
        "filename",
        "jsonify",
        "request",
        "form",
        "get",
        "pdf_file",
        "filename",
        "lower",
        "endswith",
        "jsonify",
        "os",
        "path",
        "splitext",
        "secure_filename",
        "pdf_file",
        "filename",
        "tempfile",
        "mkdtemp",
        "os",
        "path",
        "join",
        "temp_dir",
        "pdf_file",
        "save",
        "temp_input_path",
        "os",
        "path",
        "join",
        "temp_dir",
        "original_name",
        "convert_to_pdfa",
        "temp_input_path",
        "temp_pdfa_path",
        "io",
        "BytesIO",
        "pyzipper",
        "AESZipFile",
        "zip_buffer",
        "compression",
        "pyzipper",
        "ZIP_LZMA",
        "zipf",
        "open",
        "temp_pdfa_path",
        "f",
        "f",
        "read",
        "password",
        "zipf",
        "setpassword",
        "password",
        "encode",
        "zipf",
        "setencryption",
        "pyzipper",
        "WZ_AES",
        "nbits",
        "zipf",
        "writestr",
        "original_name",
        "pdf_data",
        "zip_buffer",
        "seek",
        "make_response",
        "send_file",
        "zip_buffer",
        "as_attachment",
        "download_name",
        "original_name",
        "mimetype",
        "response",
        "set_cookie",
        "max_age",
        "response",
        "e",
        "app",
        "logger",
        "error",
        "e",
        "jsonify",
        "e",
        "locals",
        "shutil",
        "rmtree",
        "temp_dir",
        "ignore_errors",
        "time",
        "sleep",
        "webbrowser",
        "open",
        "threading",
        "target",
        "open_browser",
        "start",
        "app",
        "run",
        "debug",
        "port"
    ],
    "literals": [
        "'MAX_CONTENT_LENGTH'",
        "'/'",
        "'index.html'",
        "'/convert'",
        "'POST'",
        "'pdf_file'",
        "'status'",
        "'error'",
        "'message'",
        "'Nenhum arquivo enviado'",
        "'pdf_file'",
        "''",
        "'status'",
        "'error'",
        "'message'",
        "'Nenhum arquivo selecionado'",
        "'password'",
        "''",
        "'.pdf'",
        "'status'",
        "'error'",
        "'message'",
        "'O arquivo deve ser um PDF'",
        "\"original.pdf\"",
        "f\"{original_name}.pdf\"",
        "'w'",
        "'rb'",
        "'utf-8'",
        "f\"{original_name}.pdf\"",
        "f\"{original_name}.zip\"",
        "'application/zip'",
        "'downloadComplete'",
        "'true'",
        "f\"Erro durante processamento: {str(e)}\"",
        "'status'",
        "'error'",
        "'message'",
        "f'Erro durante a conversão: {str(e)}'",
        "'temp_dir'",
        "'http://localhost:5000'",
        "'__main__'"
    ],
    "variables": [
        "app",
        "pdf_file",
        "password",
        "original_name",
        "temp_dir",
        "temp_input_path",
        "temp_pdfa_path",
        "zip_buffer",
        "pdf_data",
        "response"
    ],
    "comments": [
        "Limite de 16MB",
        "Processamento do PDF",
        "Criação do ZIP",
        "Adiciona cookie para sinalizar conclusão"
    ],
    "docstrings": [],
    "functions": [
        "index",
        "convert",
        "open_browser"
    ],
    "classes": []
}