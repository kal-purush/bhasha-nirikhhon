{
    "identifiers": [
        "Collections",
        "Collections",
        "Generic",
        "IO",
        "Net",
        "Http",
        "Text",
        "Threading",
        "Tasks",
        "Diagnostics",
        "Newtonsoft",
        "Json",
        "UnityEngine",
        "UnityEngine",
        "Networking",
        "Debug",
        "UnityEngine",
        "Debug",
        "Serializable",
        "Serializable",
        "Serializable",
        "MonoBehaviour",
        "Header",
        "Tooltip",
        "Tooltip",
        "Tooltip",
        "Header",
        "Tooltip",
        "Header",
        "Tooltip",
        "Tooltip",
        "Header",
        "Tooltip",
        "Range",
        "Tooltip",
        "Range",
        "Header",
        "Tooltip",
        "Tooltip",
        "Header",
        "Tooltip",
        "NvidiaModel",
        "Mark",
        "Claire",
        "James",
        "Header",
        "Tooltip",
        "NvidiaModel",
        "Claire",
        "Header",
        "Tooltip",
        "Tooltip",
        "Instance",
        "Instance",
        "Destroy",
        "gameObject",
        "httpClient",
        "HttpClient",
        "tempDirectory",
        "Path",
        "Combine",
        "Application",
        "temporaryCachePath",
        "Directory",
        "Exists",
        "tempDirectory",
        "Directory",
        "CreateDirectory",
        "tempDirectory",
        "IsNullOrEmpty",
        "apiKey",
        "apiKey",
        "EnvironmentLoader",
        "GetEnvVariable",
        "IsNullOrEmpty",
        "apiKey",
        "apiKey",
        "Environment",
        "GetEnvironmentVariable",
        "Debug",
        "Log",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "IsNullOrEmpty",
        "apiKey",
        "apiKey",
        "Debug",
        "Log",
        "Debug",
        "Log",
        "IsNullOrEmpty",
        "apiKey",
        "apiKey",
        "Length",
        "IsNullOrEmpty",
        "apiKey",
        "Debug",
        "LogWarning",
        "Debug",
        "Log",
        "tempDirectory",
        "animationController",
        "animationController",
        "FindObjectOfType",
        "CSVFacialAnimationController",
        "animationController",
        "Debug",
        "LogError",
        "ttsManager",
        "ttsManager",
        "FindObjectOfType",
        "TTSManager",
        "ttsManager",
        "autoProcessTTS",
        "Debug",
        "LogWarning",
        "ttsManager",
        "autoProcessTTS",
        "StartCoroutine",
        "CheckForTTSAudio",
        "FindObjectOfType",
        "NvidiaAudio2FaceSetup",
        "setupManager",
        "StartCoroutine",
        "WaitForSetupCompletion",
        "setupManager",
        "Debug",
        "Log",
        "ttsManager",
        "autoProcessTTS",
        "StartCoroutine",
        "CheckForTTSAudio",
        "NvidiaAudio2FaceSetup",
        "setupManager",
        "Debug",
        "Log",
        "Time",
        "time",
        "setupManager",
        "IsSetupComplete",
        "Time",
        "time",
        "startTime",
        "timeout",
        "WaitForSeconds",
        "setupManager",
        "IsSetupComplete",
        "pythonExecutablePath",
        "setupManager",
        "GetPythonPath",
        "pythonScriptPath",
        "setupManager",
        "GetClientScriptPath",
        "configDirectoryPath",
        "setupManager",
        "GetConfigDirectoryPath",
        "Debug",
        "Log",
        "Debug",
        "Log",
        "pythonExecutablePath",
        "Debug",
        "Log",
        "pythonScriptPath",
        "Debug",
        "Log",
        "configDirectoryPath",
        "ttsManager",
        "autoProcessTTS",
        "StartCoroutine",
        "CheckForTTSAudio",
        "Debug",
        "LogWarning",
        "useDummyData",
        "ttsManager",
        "autoProcessTTS",
        "StartCoroutine",
        "CheckForTTSAudio",
        "ttsManager",
        "GetCurrentAudioClipFromTTS",
        "currentClip",
        "currentClip",
        "lastProcessedClip",
        "Debug",
        "Log",
        "currentClip",
        "name",
        "lastProcessedClip",
        "currentClip",
        "WaitForSeconds",
        "ProcessTTSAudioForAnimationSafe",
        "WaitForSeconds",
        "ttsManager",
        "ttsManager",
        "GetType",
        "GetMethod",
        "Reflection",
        "BindingFlags",
        "Public",
        "Reflection",
        "BindingFlags",
        "Instance",
        "method",
        "clip",
        "method",
        "Invoke",
        "ttsManager",
        "AudioClip",
        "clip",
        "clip",
        "ttsManager",
        "GetType",
        "GetField",
        "Reflection",
        "BindingFlags",
        "Public",
        "Reflection",
        "BindingFlags",
        "Instance",
        "Reflection",
        "BindingFlags",
        "NonPublic",
        "field",
        "clip",
        "field",
        "GetValue",
        "ttsManager",
        "AudioClip",
        "clip",
        "clip",
        "ttsManager",
        "GetComponent",
        "AudioSource",
        "audioSource",
        "audioSource",
        "clip",
        "audioSource",
        "clip",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "selectedModel",
        "NvidiaModel",
        "Mark",
        "NvidiaModel",
        "Claire",
        "NvidiaModel",
        "James",
        "selectedModel",
        "NvidiaModel",
        "Mark",
        "Path",
        "Combine",
        "configDirectoryPath",
        "NvidiaModel",
        "Claire",
        "Path",
        "Combine",
        "configDirectoryPath",
        "NvidiaModel",
        "James",
        "Path",
        "Combine",
        "configDirectoryPath",
        "Path",
        "Combine",
        "configDirectoryPath",
        "audioData",
        "audioData",
        "audioData",
        "Length",
        "Debug",
        "LogError",
        "IsNullOrEmpty",
        "apiKey",
        "apiKey",
        "Debug",
        "Log",
        "IsNullOrEmpty",
        "apiKey",
        "useDummyData",
        "Debug",
        "LogError",
        "Debug",
        "Log",
        "apiKey",
        "Substring",
        "Min",
        "apiKey",
        "Length",
        "Directory",
        "Exists",
        "tempDirectory",
        "Directory",
        "CreateDirectory",
        "tempDirectory",
        "tempAudioPath",
        "Path",
        "Combine",
        "tempDirectory",
        "Now",
        "Ticks",
        "File",
        "WriteAllBytes",
        "tempAudioPath",
        "audioData",
        "Debug",
        "Log",
        "tempAudioPath",
        "Now",
        "Ticks",
        "csvOutputPath",
        "Path",
        "Combine",
        "tempDirectory",
        "csvFilename",
        "useDummyData",
        "success",
        "GenerateDummyCsvFile",
        "csvOutputPath",
        "success",
        "RunPythonScriptForAnimation",
        "tempAudioPath",
        "csvOutputPath",
        "success",
        "autoLoadAnimation",
        "LoadAnimationIntoController",
        "tempAudioPath",
        "csvOutputPath",
        "success",
        "ttsManager",
        "ttsManager",
        "FindObjectOfType",
        "TTSManager",
        "ttsManager",
        "Debug",
        "LogError",
        "GetCurrentAudioClipFromTTS",
        "ttsAudioClip",
        "Debug",
        "LogError",
        "Debug",
        "Log",
        "ttsAudioClip",
        "name",
        "ttsAudioClip",
        "length",
        "ConvertAudioClipToWav",
        "ttsAudioClip",
        "audioData",
        "audioData",
        "Length",
        "Debug",
        "LogError",
        "ProcessAudioForFacialAnimation",
        "audioData",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "ex",
        "StackTrace",
        "StartCoroutine",
        "ProcessTTSAudioWithWavUtility",
        "ttsManager",
        "ttsManager",
        "FindObjectOfType",
        "TTSManager",
        "ttsManager",
        "Debug",
        "LogError",
        "GetCurrentAudioClipFromTTS",
        "ttsAudioClip",
        "Debug",
        "LogError",
        "Debug",
        "Log",
        "ttsAudioClip",
        "name",
        "ttsAudioClip",
        "length",
        "ttsAudioClip",
        "channels",
        "ttsAudioClip",
        "frequency",
        "Path",
        "Combine",
        "tempDirectory",
        "Now",
        "Ticks",
        "WavUtility",
        "FromAudioClip",
        "ttsAudioClip",
        "wavBytes",
        "wavBytes",
        "Length",
        "File",
        "WriteAllBytes",
        "tempWavPath",
        "wavBytes",
        "wavFilePath",
        "tempWavPath",
        "conversionCompleted",
        "Debug",
        "Log",
        "wavFilePath",
        "wavBytes",
        "Length",
        "Debug",
        "LogError",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "IsNullOrEmpty",
        "wavFilePath",
        "File",
        "Exists",
        "wavFilePath",
        "Debug",
        "LogError",
        "Now",
        "Ticks",
        "csvOutputPath",
        "Path",
        "Combine",
        "tempDirectory",
        "csvFilename",
        "RunPythonScriptForAnimation",
        "wavFilePath",
        "csvOutputPath",
        "task",
        "IsCompleted",
        "success",
        "task",
        "Result",
        "success",
        "autoLoadAnimation",
        "LoadAnimationIntoController",
        "wavFilePath",
        "csvOutputPath",
        "success",
        "Debug",
        "LogError",
        "AudioClip",
        "clip",
        "Run",
        "clip",
        "samples",
        "clip",
        "channels",
        "clip",
        "GetData",
        "samples",
        "Int16",
        "Int16",
        "samples",
        "Length",
        "i",
        "samples",
        "Length",
        "i",
        "intData",
        "i",
        "samples",
        "i",
        "MemoryStream",
        "BinaryWriter",
        "memoryStream",
        "writer",
        "Write",
        "writer",
        "Write",
        "intData",
        "Length",
        "writer",
        "Write",
        "writer",
        "Write",
        "writer",
        "Write",
        "writer",
        "Write",
        "writer",
        "Write",
        "clip",
        "channels",
        "writer",
        "Write",
        "clip",
        "frequency",
        "writer",
        "Write",
        "clip",
        "frequency",
        "clip",
        "channels",
        "writer",
        "Write",
        "clip",
        "channels",
        "writer",
        "Write",
        "writer",
        "Write",
        "writer",
        "Write",
        "intData",
        "Length",
        "sample",
        "intData",
        "writer",
        "Write",
        "sample",
        "Debug",
        "Log",
        "memoryStream",
        "Length",
        "memoryStream",
        "ToArray",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "outputPath",
        "Debug",
        "Log",
        "StringBuilder",
        "sb",
        "AppendLine",
        "i",
        "i",
        "i",
        "i",
        "jawValue",
        "Mathf",
        "Sin",
        "i",
        "mouthCloseValue",
        "jawValue",
        "mouthCloseValue",
        "i",
        "funnelValue",
        "Mathf",
        "Cos",
        "i",
        "i",
        "puckerValue",
        "sb",
        "AppendLine",
        "time",
        "jawValue",
        "mouthCloseValue",
        "funnelValue",
        "puckerValue",
        "File",
        "WriteAllText",
        "outputPath",
        "sb",
        "ToString",
        "Debug",
        "Log",
        "outputPath",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "audioFilePath",
        "outputCsvPath",
        "File",
        "Exists",
        "audioFilePath",
        "Debug",
        "LogError",
        "audioFilePath",
        "File",
        "Exists",
        "pythonScriptPath",
        "Debug",
        "LogError",
        "pythonScriptPath",
        "GetConfigFilePath",
        "File",
        "Exists",
        "configFilePath",
        "Debug",
        "LogError",
        "configFilePath",
        "GetFunctionId",
        "Application",
        "platform",
        "RuntimePlatform",
        "OSXEditor",
        "Application",
        "platform",
        "RuntimePlatform",
        "OSXPlayer",
        "isMacOS",
        "path",
        "commonPythonPaths",
        "File",
        "Exists",
        "path",
        "pythonPath",
        "path",
        "Debug",
        "Log",
        "pythonPath",
        "Path",
        "Combine",
        "tempDirectory",
        "Path",
        "GetDirectoryName",
        "pythonScriptPath",
        "scriptDir",
        "scriptDir",
        "pythonPath",
        "pythonPath",
        "pythonPath",
        "pythonScriptPath",
        "audioFilePath",
        "configFilePath",
        "outputCsvPath",
        "apiKey",
        "functionId",
        "pythonScriptPath",
        "audioFilePath",
        "configFilePath",
        "outputCsvPath",
        "apiKey",
        "functionId",
        "pythonScriptPath",
        "audioFilePath",
        "configFilePath",
        "outputCsvPath",
        "apiKey",
        "functionId",
        "File",
        "WriteAllText",
        "shellScriptPath",
        "scriptContent",
        "Process",
        "chmodProcess",
        "StartInfo",
        "FileName",
        "chmodProcess",
        "StartInfo",
        "Arguments",
        "shellScriptPath",
        "chmodProcess",
        "StartInfo",
        "UseShellExecute",
        "chmodProcess",
        "StartInfo",
        "CreateNoWindow",
        "chmodProcess",
        "Start",
        "chmodProcess",
        "WaitForExit",
        "Debug",
        "Log",
        "shellScriptPath",
        "ProcessStartInfo",
        "processStartInfo",
        "FileName",
        "processStartInfo",
        "Arguments",
        "shellScriptPath",
        "processStartInfo",
        "WorkingDirectory",
        "scriptDir",
        "processStartInfo",
        "UseShellExecute",
        "processStartInfo",
        "CreateNoWindow",
        "processStartInfo",
        "RedirectStandardOutput",
        "processStartInfo",
        "RedirectStandardError",
        "processStartInfo",
        "EnvironmentVariables",
        "processStartInfo",
        "EnvironmentVariables",
        "scriptDir",
        "processStartInfo",
        "EnvironmentVariables",
        "processStartInfo",
        "EnvironmentVariables",
        "ContainsKey",
        "processStartInfo",
        "EnvironmentVariables",
        "scriptDir",
        "scriptDir",
        "detailedLogging",
        "Debug",
        "Log",
        "processStartInfo",
        "FileName",
        "processStartInfo",
        "Arguments",
        "Debug",
        "Log",
        "processStartInfo",
        "WorkingDirectory",
        "Debug",
        "Log",
        "processStartInfo",
        "EnvironmentVariables",
        "Debug",
        "Log",
        "processStartInfo",
        "EnvironmentVariables",
        "Debug",
        "Log",
        "currentProcess",
        "Process",
        "currentProcess",
        "StartInfo",
        "processStartInfo",
        "StringBuilder",
        "StringBuilder",
        "currentProcess",
        "OutputDataReceived",
        "sender",
        "e",
        "IsNullOrEmpty",
        "e",
        "Data",
        "output",
        "AppendLine",
        "e",
        "Data",
        "Debug",
        "Log",
        "e",
        "Data",
        "currentProcess",
        "ErrorDataReceived",
        "sender",
        "e",
        "IsNullOrEmpty",
        "e",
        "Data",
        "error",
        "AppendLine",
        "e",
        "Data",
        "Debug",
        "LogError",
        "e",
        "Data",
        "currentProcess",
        "Start",
        "started",
        "Debug",
        "LogError",
        "Debug",
        "LogError",
        "currentProcess",
        "BeginOutputReadLine",
        "currentProcess",
        "BeginErrorReadLine",
        "Run",
        "currentProcess",
        "WaitForExit",
        "currentProcess",
        "Kill",
        "Debug",
        "LogError",
        "currentProcess",
        "ExitCode",
        "currentProcess",
        "Close",
        "currentProcess",
        "Debug",
        "Log",
        "exitCode",
        "Debug",
        "Log",
        "output",
        "exitCode",
        "Debug",
        "LogError",
        "error",
        "File",
        "Delete",
        "shellScriptPath",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "exitCode",
        "Debug",
        "LogWarning",
        "GenerateDummyCsvFile",
        "outputCsvPath",
        "File",
        "Exists",
        "outputCsvPath",
        "Debug",
        "LogWarning",
        "GenerateDummyCsvFile",
        "outputCsvPath",
        "Debug",
        "Log",
        "outputCsvPath",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "ex",
        "StackTrace",
        "Debug",
        "LogWarning",
        "GenerateDummyCsvFile",
        "outputCsvPath",
        "audioPath",
        "csvPath",
        "animationController",
        "Debug",
        "LogError",
        "File",
        "Exists",
        "audioPath",
        "File",
        "Exists",
        "csvPath",
        "Debug",
        "LogError",
        "File",
        "Exists",
        "audioPath",
        "File",
        "Exists",
        "csvPath",
        "StartCoroutine",
        "LoadAnimationCoroutine",
        "audioPath",
        "csvPath",
        "audioPath",
        "csvPath",
        "Debug",
        "Log",
        "File",
        "Exists",
        "audioPath",
        "File",
        "Exists",
        "audioPath",
        "FileInfo",
        "audioPath",
        "Length",
        "Debug",
        "Log",
        "File",
        "Exists",
        "csvPath",
        "File",
        "Exists",
        "csvPath",
        "FileInfo",
        "csvPath",
        "Length",
        "audioPath",
        "UnityWebRequestMultimedia",
        "GetAudioClip",
        "uriPath",
        "AudioType",
        "WAV",
        "www",
        "SendWebRequest",
        "www",
        "result",
        "UnityWebRequest",
        "Result",
        "Success",
        "Debug",
        "LogWarning",
        "www",
        "error",
        "www",
        "Dispose",
        "www",
        "UnityWebRequestMultimedia",
        "GetAudioClip",
        "uriPath",
        "AudioType",
        "MPEG",
        "www",
        "SendWebRequest",
        "www",
        "result",
        "UnityWebRequest",
        "Result",
        "Success",
        "clip",
        "DownloadHandlerAudioClip",
        "GetContent",
        "www",
        "audioLoaded",
        "clip",
        "Debug",
        "Log",
        "clip",
        "name",
        "clip",
        "length",
        "clip",
        "channels",
        "Debug",
        "LogError",
        "www",
        "error",
        "www",
        "Dispose",
        "AudioType",
        "AudioType",
        "AudioType",
        "OGGVORBIS",
        "AudioType",
        "MPEG",
        "AudioType",
        "WAV",
        "AudioType",
        "audioType",
        "audioTypes",
        "Debug",
        "Log",
        "audioType",
        "www",
        "UnityWebRequestMultimedia",
        "GetAudioClip",
        "uriPath",
        "audioType",
        "www",
        "SendWebRequest",
        "www",
        "result",
        "UnityWebRequest",
        "Result",
        "Success",
        "clip",
        "DownloadHandlerAudioClip",
        "GetContent",
        "www",
        "audioLoaded",
        "clip",
        "Debug",
        "Log",
        "audioType",
        "clip",
        "name",
        "clip",
        "length",
        "www",
        "Dispose",
        "www",
        "www",
        "Dispose",
        "audioLoaded",
        "clip",
        "Debug",
        "Log",
        "animationController",
        "audioClip",
        "clip",
        "TextAsset",
        "File",
        "ReadAllText",
        "csvPath",
        "animationController",
        "animationCSV",
        "csvAsset",
        "animationController",
        "playbackSpeed",
        "animationPlaybackSpeed",
        "animationController",
        "animationScale",
        "animationStrength",
        "animationController",
        "RestartAnimation",
        "Debug",
        "Log",
        "deleteTempFiles",
        "StartCoroutine",
        "DeleteTempFilesAfterDelay",
        "audioPath",
        "csvPath",
        "clip",
        "length",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "Debug",
        "LogError",
        "audioPath",
        "csvPath",
        "delay",
        "delay",
        "safetyBuffer",
        "Debug",
        "Log",
        "totalDelay",
        "delay",
        "safetyBuffer",
        "WaitForSeconds",
        "totalDelay",
        "animationController",
        "WaitForSeconds",
        "IsFileInUse",
        "audioPath",
        "IsFileInUse",
        "csvPath",
        "File",
        "Exists",
        "audioPath",
        "File",
        "Delete",
        "audioPath",
        "Debug",
        "Log",
        "audioPath",
        "File",
        "Exists",
        "csvPath",
        "File",
        "Delete",
        "csvPath",
        "Debug",
        "Log",
        "csvPath",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "Debug",
        "LogWarning",
        "filePath",
        "File",
        "Exists",
        "filePath",
        "FileStream",
        "filePath",
        "FileMode",
        "Open",
        "FileAccess",
        "ReadWrite",
        "FileShare",
        "currentProcess",
        "currentProcess",
        "HasExited",
        "currentProcess",
        "Kill",
        "Debug",
        "Log",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "Directory",
        "Exists",
        "tempDirectory",
        "Directory",
        "GetFiles",
        "tempDirectory",
        "file",
        "files",
        "File",
        "Delete",
        "file",
        "Directory",
        "Delete",
        "tempDirectory",
        "Debug",
        "Log",
        "tempDirectory",
        "ex",
        "Debug",
        "LogWarning",
        "ex",
        "Message",
        "currentProcess",
        "currentProcess",
        "HasExited",
        "currentProcess",
        "Kill",
        "Debug",
        "Log",
        "currentProcess",
        "ex",
        "Debug",
        "LogError",
        "ex",
        "Message",
        "Debug",
        "Log"
    ],
    "literals": [
        "\"Local Python Script Configuration\"",
        "\"Path to the Python script\"",
        "\"/Users/zhenzhenqin/Documents/NEU/Research/facial-animation/Audio2Face-3D-Samples/scripts/audio2face_3d_api_client/nim_a2f_3d_client.py\"",
        "\"Path to the config directory\"",
        "\"/Users/zhenzhenqin/Documents/NEU/Research/facial-animation/Audio2Face-3D-Samples/scripts/audio2face_3d_api_client/config\"",
        "\"Path to Python executable\"",
        "\"python\"",
        "\"NVIDIA API Configuration\"",
        "\"Your NVIDIA API key\"",
        "\"\"",
        "\"Output Settings\"",
        "\"Whether to automatically load the animation after generating it\"",
        "\"Whether to delete temporary files after use\"",
        "\"Animation Settings\"",
        "\"Playback speed multiplier for the animation\"",
        "\"Scale factor for animation strength\"",
        "\"Component References\"",
        "\"Reference to the CSVFacialAnimationController\"",
        "\"Reference to the TTSManager (optional)\"",
        "\"Auto Processing Settings\"",
        "\"Whether to automatically generate facial animation when TTS is generated\"",
        "\"NVIDIA Model Settings\"",
        "\"Select which model to use for facial animation\"",
        "\"Debug Options\"",
        "\"Generate a dummy CSV file for testing without API calls\"",
        "\"Show detailed debug logs\"",
        "\"\"",
        "\"Audio2Face_Temp\"",
        "\"NVIDIA_API_KEY\"",
        "\"NVIDIA_API_KEY\"",
        "\"Tried loading API key directly from System.Environment\"",
        "\"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\"",
        "\"Using hardcoded API key as fallback\"",
        "\"empty\"",
        "\"No NVIDIA API key found. Please set it in the inspector or as an environment variable.\"",
        "\"No CSVFacialAnimationController found in the scene. Animations won't be applied.\"",
        "\"No TTSManager found in the scene, but autoProcessTTS is enabled. Auto-processing will not work.\"",
        "\"No NvidiaAudio2FaceSetup found. Using existing Python settings if available.\"",
        "\"Waiting for NVIDIA Audio2Face setup to complete...\"",
        "\"NVIDIA Audio2Face setup timed out or failed. Using dummy data for animations.\"",
        "\"GetCurrentAudioClip\"",
        "\"audioClip\"",
        "\"b85c53f3-5d18-4edf-8b12-875a400eb798\"",
        "\"a05a5522-3059-4dfd-90e4-4bc1699ae9d4\"",
        "\"52f51a79-324c-4dbe-90ad-798ab665ad64\"",
        "\"a05a5522-3059-4dfd-90e4-4bc1699ae9d4\"",
        "\"config_mark.yml\"",
        "\"config_claire.yml\"",
        "\"config_james.yml\"",
        "\"config_claire.yml\"",
        "\"Cannot process audio: Audio data is null or empty!\"",
        "\"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\"",
        "\"Using hardcoded API key in ProcessAudioForFacialAnimation\"",
        "\"Cannot process audio: No NVIDIA API key provided!\"",
        "\"Cannot process TTS audio: No TTSManager found in the scene!\"",
        "\"Cannot process TTS audio: No audio clip available from TTSManager!\"",
        "\"Failed to convert TTS audio clip to WAV format!\"",
        "\"Cannot process TTS audio: No TTSManager found in the scene!\"",
        "\"Cannot process TTS audio: No audio clip available from TTSManager!\"",
        "\"Failed to convert AudioClip to WAV bytes\"",
        "\"Failed to create WAV file from TTS audio!\"",
        "\"Failed to process TTS audio for facial animation\"",
        "\"Generating dummy CSV file for testing\"",
        "\"timeCode,blendShapes.JawOpen,blendShapes.MouthClose,blendShapes.MouthFunnel,blendShapes.MouthPucker\"",
        "\"/usr/bin/python3\"",
        "\"/usr/local/bin/python3\"",
        "\"/opt/homebrew/bin/python3\"",
        "\"/usr/bin/python\"",
        "\"/usr/local/bin/python\"",
        "\"/opt/homebrew/bin/python\"",
        "\"run_a2f.sh\"",
        "\"chmod\"",
        "\"/bin/bash\"",
        "\"PATH\"",
        "\"PATH\"",
        "\"PYTHONPATH\"",
        "\"PYTHONPATH\"",
        "\"PYTHONPATH\"",
        "\"PATH\"",
        "\"PYTHONPATH\"",
        "\"Starting shell script for Audio2Face processing...\"",
        "\"Failed to start the process\"",
        "\"Failed to start the process\"",
        "\"Process took too long and was terminated\"",
        "\"Script failed. Falling back to dummy data generation.\"",
        "\"Script completed but did not create the output CSV file. Generating dummy data as fallback.\"",
        "\"Exception occurred. Falling back to dummy data generation.\"",
        "\"Can't load animation: No CSVFacialAnimationController reference\"",
        "\"file://\"",
        "\"Successfully loaded audio clip for animation\"",
        "\"Animation started with newly generated data\"",
        "\"Failed to load audio clip for animation\"",
        "\"Files still in use, skipping deletion\"",
        "\"Terminated running Python process\"",
        "\"Terminated running Python process\"",
        "\"No active process to cancel\""
    ],
    "variables": [
        "id",
        "status",
        "result_url",
        "message",
        "NvidiaResult",
        "result",
        "csv_url",
        "animation_data",
        "error",
        "message",
        "Audio2FaceManager",
        "Instance",
        "pythonScriptPath",
        "configDirectoryPath",
        "pythonExecutablePath",
        "apiKey",
        "autoLoadAnimation",
        "deleteTempFiles",
        "animationPlaybackSpeed",
        "animationStrength",
        "CSVFacialAnimationController",
        "animationController",
        "TTSManager",
        "ttsManager",
        "autoProcessTTS",
        "NvidiaModel",
        "selectedModel",
        "useDummyData",
        "detailedLogging",
        "tempAudioPath",
        "csvOutputPath",
        "HttpClient",
        "httpClient",
        "tempDirectory",
        "currentJobId",
        "pollInterval",
        "Process",
        "currentProcess",
        "NvidiaAudio2FaceSetup",
        "setupManager",
        "startTime",
        "timeout",
        "AudioClip",
        "lastProcessedClip",
        "AudioClip",
        "currentClip",
        "AudioClip",
        "clip",
        "method",
        "field",
        "AudioSource",
        "audioSource",
        "csvFilename",
        "success",
        "AudioClip",
        "ttsAudioClip",
        "audioData",
        "AudioClip",
        "ttsAudioClip",
        "tempWavPath",
        "wavFilePath",
        "conversionCompleted",
        "wavBytes",
        "csvFilename",
        "success",
        "task",
        "samples",
        "intData",
        "i",
        "MemoryStream",
        "memoryStream",
        "BinaryWriter",
        "writer",
        "StringBuilder",
        "sb",
        "i",
        "time",
        "jawValue",
        "mouthCloseValue",
        "funnelValue",
        "puckerValue",
        "configFilePath",
        "functionId",
        "pythonPath",
        "pythonExecutablePath",
        "isMacOS",
        "commonPythonPaths",
        "shellScriptPath",
        "scriptDir",
        "scriptContent",
        "Process",
        "chmodProcess",
        "ProcessStartInfo",
        "processStartInfo",
        "StringBuilder",
        "output",
        "StringBuilder",
        "error",
        "started",
        "exitCode",
        "audioLoaded",
        "AudioClip",
        "clip",
        "uriPath",
        "UnityWebRequest",
        "www",
        "audioTypes",
        "TextAsset",
        "csvAsset",
        "safetyBuffer",
        "totalDelay",
        "isAnimationPlaying",
        "FileStream",
        "fs",
        "files"
    ],
    "comments": [
        "Create classes for JSON responses",
        "Define the enum outside of the field declaration",
        "Private state variables",
        "For tracking API job status",
        "seconds between status checks",
        "Singleton pattern",
        "Initialize HTTP client",
        "Setup temp directory",
        "Create the temporary directory if it doesn't exist",
        "Load API key from environment if not set",
        "First try to get it from the EnvironmentLoader",
        "If that didn't work, try System.Environment directly",
        "If still empty, try the hardcoded value from your .env file",
        "Find the animation controller if not assigned",
        "Find the TTS manager if not assigned",
        "Subscribe to TTS events if available and auto-processing is enabled",
        "We'll use a coroutine to periodically check for TTS audio",
        "Check if the NVIDIA setup has been completed",
        "Wait for the setup to complete before starting TTS monitoring",
        "No setup manager, proceed with default settings",
        "Subscribe to TTS events if available and auto-processing is enabled",
        "We'll use a coroutine to periodically check for TTS audio",
        "Wait for NVIDIA setup to be complete before proceeding",
        "Wait for the setup to be initialized",
        "2 minute timeout",
        "Update paths from the setup manager",
        "Now we can proceed with TTS audio monitoring",
        "We'll use a coroutine to periodically check for TTS audio",
        "Fall back to dummy data",
        "Still start the TTS monitoring, but it will use dummy data",
        "Coroutine to periodically check for new TTS audio",
        "If we have a new clip that we haven't processed yet",
        "Wait a short time to ensure the clip is fully generated",
        "Process this clip for facial animation using the safe method",
        "Check every half second",
        "Gets the current audio clip from the TTSManager using various methods",
        "</summary>",
        "Try to get the clip using reflection",
        "Try GetCurrentAudioClip method",
        "Try audioClip field",
        "Try to get from audioSource component",
        "Function to get the correct function ID based on the selected model",
        "Default to Claire",
        "Function to get the correct config file based on the selected model",
        "Default to Claire",
        "Process audio data to generate facial animation through local Python script",
        "</summary>",
        "<param name=\"audioData\">The raw audio data bytes</param>",
        "<returns>True if processing was successful</returns>",
        "Double-check API key availability",
        "Try one more time to load the API key as a fallback",
        "Make sure temp directory exists",
        "Save the audio to a temporary file for processing",
        "Generate a unique name for the CSV output",
        "Use dummy data if specified (for testing without API)",
        "Call local Python script to generate animation",
        "Load the generated animation into the controller",
        "Integration method to use TTS audio directly from TTSManager",
        "</summary>",
        "<returns>True if processing was successful</returns>",
        "Find the TTSManager component if it exists in the scene",
        "Get the audio clip from TTSManager",
        "Convert AudioClip to WAV byte array",
        "Process the audio data",
        "Modified method to safely process TTS audio for facial animation using WavUtility",
        "This version avoids threading issues with AudioClip.GetData",
        "</summary>",
        "Coroutine for processing TTS audio using WavUtility",
        "This approach avoids threading issues with AudioClip.GetData",
        "</summary>",
        "Check for TTSManager",
        "Get the audio clip from TTSManager",
        "Generate a temporary WAV file path",
        "Use FromAudioClip to save the AudioClip as a WAV file",
        "Save the bytes to the file",
        "Check if the file was created successfully",
        "Generate a unique name for the CSV output",
        "Call local Python script to generate animation, passing the WAV file path",
        "Wait for processing to complete",
        "Load the generated animation into the controller",
        "Converts an AudioClip to WAV format byte array",
        "</summary>",
        "Get raw audio data from the clip",
        "Convert to 16-bit PCM",
        "Write WAV header",
        "PCM format",
        "Byte rate",
        "Block align",
        "Bits per sample",
        "Write sample data",
        "Creates a dummy CSV file for testing without the API",
        "</summary>",
        "Create a simple CSV with basic animation data",
        "Header row",
        "Generate 60 frames of dummy animation data (2 seconds at 30fps)",
        "Time in seconds",
        "Create a simple talking pattern",
        "Write to file",
        "Runs the local Python script to generate facial animation from audio file",
        "</summary>",
        "Since we're seeing \"python: command not found\", let's use a different approach",
        "First, try to find the python executable on the system",
        "Common Python paths on macOS",
        "Check if any of these paths exist",
        "Create a shell script that uses the absolute path to Python",
        "Create a more robust shell script",
        "Make the script executable",
        "Create process info to run the shell script",
        "Set working directory to script directory",
        "Add environment variables",
        "Start the process",
        "Set up event handlers for output and error",
        "Always log output for debugging",
        "Start the process and begin reading output",
        "Wait for the process to complete asynchronously",
        "3-minute timeout",
        "Ignore kill errors",
        "Check the exit code",
        "Log all output and error for debugging",
        "Clean up shell script",
        "If the script failed, fall back to dummy data",
        "Check if the output CSV file was created",
        "If the CSV doesn't exist, create a dummy one as a fallback",
        "Fall back to dummy data in case of exception",
        "Loads the generated animation and audio into the facial animation controller",
        "</summary>",
        "Coroutine to load animation safely without try/catch around yield statements",
        "</summary>",
        "Create a state tracker for the coroutine",
        "Log file existence and size for debugging",
        "First try WAV format",
        "If WAV format fails, try MPEG format",
        "Process the result after the yield is complete",
        "Try other common audio formats as a last resort",
        "Continue with loading the animation if the audio was loaded successfully",
        "Load the CSV file as a TextAsset",
        "Set animation playback speed",
        "Adjust to frames per second",
        "Set animation scale",
        "Restart the animation with new data",
        "Delete temporary files after loading if enabled, after animation is complete",
        "Coroutine to delete temporary files after a delay",
        "</summary>",
        "Add a safety buffer to ensure playback and animation are fully complete",
        "5 seconds safety buffer",
        "Wait until animation is finished playing",
        "Check if animation controller is still using the animation",
        "Use the public method to check if animation is playing",
        "Safely call RestartAnimation which implies animation was stopped",
        "We'll wait a bit more before deleting",
        "Double-check that the files still exist and aren't being used by other processes",
        "Delete the temporary files",
        "Check if a file is currently in use",
        "</summary>",
        "Try to open the file exclusively",
        "File is not in use",
        "File is in use",
        "Some other error occurred, assume not in use",
        "Clean up temporary files on destruction",
        "</summary>",
        "Cancel any running process",
        "Clean up temporary directory if it exists",
        "Cancel the current job if it's still processing",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Awake",
        "Start",
        "IEnumerator",
        "WaitForSetupCompletion",
        "IEnumerator",
        "CheckForTTSAudio",
        "AudioClip",
        "GetCurrentAudioClipFromTTS",
        "GetFunctionId",
        "GetConfigFilePath",
        "ProcessAudioForFacialAnimation",
        "ProcessTTSAudioForFacialAnimation",
        "ProcessTTSAudioForAnimationSafe",
        "IEnumerator",
        "ProcessTTSAudioWithWavUtility",
        "ConvertAudioClipToWav",
        "GenerateDummyCsvFile",
        "RunPythonScriptForAnimation",
        "LoadAnimationIntoController",
        "IEnumerator",
        "LoadAnimationCoroutine",
        "IEnumerator",
        "DeleteTempFilesAfterDelay",
        "IsFileInUse",
        "OnDestroy",
        "CancelCurrentJob"
    ],
    "classes": [
        "NvidiaApiResponse",
        "NvidiaResult",
        "NvidiaErrorResponse",
        "Audio2FaceManager"
    ]
}