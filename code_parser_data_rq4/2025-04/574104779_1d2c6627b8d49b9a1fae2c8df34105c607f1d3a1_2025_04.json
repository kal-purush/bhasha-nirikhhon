{
    "identifiers": [
        "serializeCookie",
        "hasHeaderShorthand",
        "isNotEmpty",
        "StatusMap",
        "Context",
        "ElysiaAdapter",
        "handleFile",
        "response",
        "response",
        "size",
        "size",
        "Headers",
        "size",
        "size",
        "hasHeaderShorthand",
        "setHeaders",
        "setHeaders",
        "key",
        "setHeaders",
        "key",
        "value",
        "Response",
        "response",
        "setHeaders",
        "isNotEmpty",
        "Response",
        "response",
        "size",
        "size",
        "Response",
        "response",
        "size",
        "size",
        "Response",
        "response",
        "parseSetCookies",
        "headers",
        "setCookie",
        "headers",
        "headers",
        "headers",
        "i",
        "setCookie",
        "i",
        "setCookie",
        "i",
        "headers",
        "setCookie",
        "i",
        "index",
        "setCookie",
        "i",
        "index",
        "headers",
        "responseToSetHeaders",
        "response",
        "response",
        "hasHeaderShorthand",
        "response",
        "response",
        "key",
        "key",
        "value",
        "response",
        "response",
        "hasHeaderShorthand",
        "response",
        "response",
        "key",
        "key",
        "key",
        "value",
        "response",
        "request",
        "response",
        "request",
        "createStreamHandler",
        "generator",
        "request",
        "generator",
        "init",
        "init",
        "init",
        "init",
        "mapResponse",
        "init",
        "request",
        "mapCompactResponse",
        "init",
        "request",
        "Response",
        "ReadableStream",
        "controller",
        "request",
        "end",
        "controller",
        "init",
        "init",
        "init",
        "controller",
        "Buffer",
        "init",
        "controller",
        "Buffer",
        "init",
        "controller",
        "Buffer",
        "init",
        "chunk",
        "generator",
        "end",
        "chunk",
        "chunk",
        "chunk",
        "controller",
        "Buffer",
        "chunk",
        "controller",
        "Buffer",
        "chunk",
        "controller",
        "Buffer",
        "chunk",
        "resolve",
        "setTimeout",
        "resolve",
        "controller",
        "streamResponse",
        "response",
        "response",
        "body",
        "body",
        "TextDecoder",
        "reader",
        "done",
        "decoder",
        "value",
        "reader",
        "handleSet",
        "StatusMap",
        "isNotEmpty",
        "serializeCookie",
        "cookie",
        "cookie",
        "parseSetCookies",
        "Headers",
        "createResponseHandler",
        "handler",
        "createStreamHandler",
        "handler",
        "response",
        "request",
        "Headers",
        "key",
        "key",
        "isCookieSet",
        "isCookieSet",
        "cookie",
        "response",
        "cookie",
        "response",
        "key",
        "key",
        "key",
        "response",
        "key",
        "key",
        "response",
        "response",
        "response",
        "response",
        "value",
        "Response",
        "value",
        "response",
        "newResponse",
        "newResponse",
        "handleStream",
        "streamResponse",
        "newResponse",
        "responseToSetHeaders",
        "newResponse",
        "request",
        "newResponse",
        "response",
        "response",
        "handleStream",
        "streamResponse",
        "response",
        "responseToSetHeaders",
        "response",
        "request",
        "response"
    ],
    "literals": [
        "'../cookies'",
        "'../utils'",
        "'../context'",
        "'./types'",
        "'set'",
        "string",
        "'accept-ranges'",
        "'bytes'",
        "'content-range'",
        "bytes 0-${size - 1}/${size}",
        "'transfer-encoding'",
        "'chunked'",
        "'accept-ranges'",
        "'bytes'",
        "'content-range'",
        "bytes 0-${size - 1}/${size}",
        "'transfer-encoding'",
        "'chunked'",
        "'accept-ranges'",
        "'bytes'",
        "'content-range'",
        "bytes 0-${size - 1}/${size}",
        "'transfer-encoding'",
        "'chunked'",
        "string",
        "'set-cookie'",
        "'='",
        "'set-cookie'",
        "${setCookie[i].slice(0, index)}=${\n\t\t\t\tsetCookie[i].slice(index + 1) || ''\n\t\t\t}",
        "''",
        "'set'",
        "'content-encoding'",
        "'content-encoding'",
        "'content-encoding'",
        "'content-encoding'",
        "'content-encoding'",
        "'set'",
        "'set'",
        "'transfer-encoding'",
        "'transfer-encoding'",
        "'chunked'",
        "'content-type'",
        "'content-type'",
        "'text/event-stream; charset=utf-8'",
        "'content-type'",
        "'text/event-stream; charset=utf-8'",
        "'transfer-encoding'",
        "'chunked'",
        "'abort'",
        "'object'",
        "'object'",
        "'set'",
        "'string'",
        "'set-cookie'",
        "'set-cookie'",
        "'set-cookie'",
        "'set-cookie'",
        "'set'",
        "'set-cookie'",
        "'set-cookie'",
        "''",
        "'content-length'",
        "'transfer-encoding'",
        "'chunked'",
        "'content-length'",
        "'transfer-encoding'",
        "'chunked'"
    ],
    "variables": [
        "handleFile",
        "size",
        "setHeaders",
        "key",
        "value",
        "parseSetCookies",
        "i",
        "index",
        "responseToSetHeaders",
        "key",
        "value",
        "key",
        "value",
        "createStreamHandler",
        "init",
        "end",
        "body",
        "reader",
        "decoder",
        "handleSet",
        "cookie",
        "createResponseHandler",
        "handleStream",
        "isCookieSet",
        "newResponse"
    ],
    "comments": [
        "@ts-expect-error",
        "? `content-encoding` prevent response streaming",
        "@ts-expect-error",
        "? `content-encoding` prevent response streaming",
        "? `content-encoding` prevent response streaming",
        "nothing",
        "@ts-expect-error this is a valid operation",
        "@ts-expect-error this is a valid operation",
        "@ts-expect-error this is a valid operation",
        "@ts-expect-error this is a valid operation",
        "@ts-expect-error this is a valid operation",
        "@ts-expect-error this is a valid operation",
        "Wait for the next event loop",
        "Otherwise the data will be mixed up",
        "nothing"
    ],
    "docstrings": [],
    "functions": [
        "start"
    ],
    "classes": []
}