{
    "identifiers": [
        "maxOfTwoNumbers",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "maxOfTwoNumbers",
        "isAdult",
        "x",
        "x",
        "isAdult",
        "isCharAVowel",
        "vowel",
        "vowel",
        "vowel",
        "vowel",
        "vowel",
        "vowel",
        "isCharAVowel",
        "generateEmail",
        "name",
        "domain",
        "name",
        "domain",
        "generateEmail"
    ],
    "literals": [
        "'Exercise 1 Result:'",
        "Adult",
        "Minor",
        "'Exercise 2 Result:'",
        "a",
        "e",
        "i",
        "o",
        "u",
        "true",
        "false",
        "'Exercise 3 Result:'",
        "\"a\"",
        "${name}@${domain}",
        "'Exercise 4 Result:'",
        "\"donovancampbell\"",
        "\"gmail.com\""
    ],
    "variables": [
        "maxOfTwoNumbers",
        "isAdult",
        "isCharAVowel",
        "generateEmail"
    ],
    "comments": [
        "Exercise 1: maxOfTwoNumbers()\n\nIn this exercise, create a function named maxOfTwoNumbers. \nIt should take two numbers as inputs and return the larger number. \nIf they're equal, return either one.\n\nExercise 1 has been completed for you:",
        "Exercise 2: isAdult()\n\nWrite a function named isAdult. It should take an age (number) \nand return 'Adult' if the age is 18 or over and 'Minor' otherwise.\n\nExample: isAdult(21) should return 'Adult'.\n\nComplete the exercise in the space below:",
        "Exercise 3: isCharAVowel()\n\nWrite a function named isCharAVowel that takes a single character as \nan argument. It should return true if the character is a vowel and \nfalse otherwise. For the purposes of this exercise, the character \ny should not be considered a vowel.\n\nExample: isCharAVowel('a') should return true.\n\nComplete the exercise in the space below:",
        "Exercise 4: generateEmail()\n\nCreate a function named generateEmail. It should take two strings: \na name and a domain. It should return a simple email address.\n\nExample: generateEmail('johnsmith', 'example.com') \nshould return 'johnsmith@example.com'.\n\nComplete the exercise in the space below:"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}