{
    "identifiers": [
        "DeepKeyTokenMap",
        "SingleToken",
        "TokenTypes",
        "setProperty",
        "flatten",
        "nested",
        "keyPath",
        "nested",
        "acc",
        "val",
        "val",
        "val",
        "acc",
        "keyPath",
        "key",
        "leaf",
        "leaf",
        "leaf",
        "acc",
        "flatten",
        "val",
        "keyPath",
        "key",
        "acc",
        "acc",
        "flattened",
        "acc",
        "flatTokensToMap",
        "tokens",
        "tokens",
        "acc",
        "token",
        "acc",
        "token",
        "token",
        "acc",
        "flatTokensRestoreToMap",
        "tokens",
        "tokens",
        "token",
        "rest",
        "setProperty",
        "returning",
        "name",
        "rest",
        "returning",
        "key",
        "convertW3CToStudio",
        "obj",
        "obj",
        "acc",
        "value",
        "value",
        "value",
        "value",
        "newValue",
        "val",
        "acc",
        "key",
        "newValue",
        "acc",
        "key",
        "convertW3CToStudio",
        "value",
        "acc"
    ],
    "literals": [
        "'@tokens-studio/types'",
        "'dot-prop'",
        "string",
        "'value'",
        "string",
        "string",
        "'undefined'",
        "'.'",
        "string",
        "string",
        "string",
        "string",
        "'$value'",
        "'$type'"
    ],
    "variables": [
        "flatten",
        "key",
        "val",
        "leaf",
        "flattened",
        "flatTokensToMap",
        "flatTokensRestoreToMap",
        "returning",
        "token",
        "convertW3CToStudio",
        "key",
        "value",
        "val",
        "newValue"
    ],
    "comments": [
        "Check if leaf node",
        "else continue recursing",
        "@ts-ignore"
    ],
    "docstrings": [
        "* Name of the token",
        "* Expression that represents the value of the token, botentially jsons stringified",
        "* The type of the token",
        "* Optional description of the token",
        "* Takes in a nested object of tokens and returns a flattened array of tokens\n * @param nested\n * @param keyPath Optional key path to prefix the name of the token\n * @returns",
        "* Takes in an array of tokens and returns a map of tokens.\n * This only works if the tokens are flat, meaning they do not have nested tokens\n * @param tokens\n * @returns",
        "* Takes an array of tokens and returns a map of tokens. This does result in nested tokens\n * @param tokens\n * @returns"
    ],
    "functions": [],
    "classes": []
}