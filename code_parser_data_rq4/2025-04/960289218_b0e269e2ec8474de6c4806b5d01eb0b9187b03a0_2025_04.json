{
    "identifiers": [
        "jinja2",
        "Environment",
        "FileSystemLoader",
        "model",
        "Project",
        "Risk",
        "Budget",
        "Objective",
        "ProjectDescription",
        "ProjectDescriptionSection",
        "BudgetSection",
        "ObjectiveSection",
        "RiskSection",
        "markdown",
        "markdown",
        "extensions",
        "extra",
        "ExtraExtension",
        "fastapi",
        "FastAPI",
        "Form",
        "UploadFile",
        "File",
        "fastapi",
        "responses",
        "HTMLResponse",
        "fastapi",
        "middleware",
        "cors",
        "CORSMiddleware",
        "typing",
        "Optional",
        "ProjectDescription",
        "project",
        "ProjectDescriptionSection",
        "project_name",
        "content",
        "start_date",
        "end_date",
        "stakeholders",
        "budget",
        "BudgetSection",
        "budget",
        "Budget",
        "name",
        "amount",
        "Budget",
        "name",
        "amount",
        "Budget",
        "name",
        "amount",
        "content",
        "objectives",
        "ObjectiveSection",
        "objectives",
        "Objective",
        "name",
        "start_date",
        "end_date",
        "Objective",
        "name",
        "start_date",
        "end_date",
        "Objective",
        "name",
        "start_date",
        "end_date",
        "content",
        "risks",
        "RiskSection",
        "risks",
        "Risk",
        "name",
        "impact",
        "likelihood",
        "Risk",
        "name",
        "impact",
        "likelihood",
        "Risk",
        "name",
        "impact",
        "likelihood",
        "content",
        "FastAPI",
        "app",
        "add_middleware",
        "CORSMiddleware",
        "allow_origins",
        "allow_methods",
        "allow_headers",
        "FileSystemLoader",
        "Environment",
        "loader",
        "file_loader",
        "env",
        "get_template",
        "template",
        "FileSystemLoader",
        "Environment",
        "loader",
        "file_loader",
        "env",
        "get_template",
        "template",
        "open",
        "file",
        "file",
        "read",
        "html",
        "load_project_template",
        "template",
        "instructions",
        "project",
        "ProjectDescription",
        "load_result_template",
        "load_project_template",
        "project_template",
        "render",
        "project",
        "model_dump",
        "markdown",
        "markdown",
        "markdown_text",
        "extensions",
        "output_format",
        "html_text",
        "replace",
        "replace",
        "html_template",
        "render",
        "html_content",
        "html_text",
        "markdown_text",
        "load_result_template",
        "markdown",
        "markdown",
        "markdown_text",
        "extensions",
        "output_format",
        "html_template",
        "render",
        "html_content",
        "html_text",
        "app",
        "get",
        "response_class",
        "HTMLResponse",
        "load_index",
        "app",
        "post",
        "response_class",
        "HTMLResponse",
        "files",
        "Optional",
        "UploadFile",
        "File",
        "files",
        "HTMLResponse",
        "content",
        "render_project_description",
        "example_project"
    ],
    "literals": [
        "\"Ny togbane ml. Samsø og Læsø\"",
        "\"Dette er et eksempel på en projektbeskrivelse.\"",
        "\"2023-01-01\"",
        "\"2023-12-31\"",
        "\"Jens Jensen\"",
        "\"Peter Petersen\"",
        "\"Læsø Togstation\"",
        "\"Samsø Togstation\"",
        "\"Skinner\"",
        "\"Dette er en oversigt over projektets budget.\"",
        "\"Opført station på Samsø\"",
        "\"2023-01-01\"",
        "\"2023-06-30\"",
        "\"Opført station på Læsø\"",
        "\"2023-01-01\"",
        "\"2023-06-30\"",
        "\"Udbyg skinner mellem Læsø og Samsø\"",
        "\"2023-06-30\"",
        "\"2024-01-01\"",
        "\"Dette er en oversigt over projektets mål og tidslinje.\"",
        "\"Forsinkelse af Samsø station\"",
        "\"Forsinkelse af Læsø station\"",
        "\"Forsinkelse af skinner\"",
        "\"Dette er en oversigt over projektets risici.\"",
        "\"*\"",
        "\"*\"",
        "\"*\"",
        "\"data/skabelon\"",
        "\"skabelon.md\"",
        "\"app/html\"",
        "\"result.html\"",
        "\"app/html/index.html\"",
        "\"r\"",
        "\"extra\"",
        "\"html5\"",
        "'<code class=\"language-mermaid\">'",
        "'<div class=\"mermaid\">'",
        "\"</code>\"",
        "\"</div>\"",
        "\"extra\"",
        "\"html5\"",
        "\"/\"",
        "\"/generate\""
    ],
    "variables": [
        "example_project",
        "app",
        "file_loader",
        "env",
        "template",
        "file_loader",
        "env",
        "template",
        "html",
        "template",
        "html_template",
        "project_template",
        "markdown_text",
        "html_text",
        "html_text",
        "html_template",
        "html_text"
    ],
    "comments": [
        "Example project",
        "See model/Project.py for the model definitions",
        "",
        "",
        "Render the markdown template with the project data",
        "Replace Mermaid code blocks with divs for rendering",
        "You need to implement the logic to handle the uploaded files and headings",
        "Example: Render the example project description",
        "if __name__ == \"__main__\":",
        "import uvicorn",
        "uvicorn.run(app, host=\"0.0.0.0\", port=8000)"
    ],
    "docstrings": [
        "\"\"\"\n    Loads the skabelon.md file from the data/skabelon directory.\n    Returns:\n        str: The content of the skabelon.md file.\n    \"\"\"",
        "\"\"\"\n    Loads the result.html file from the app/html directory.\n    Returns:\n        str: The content of the result.html file.\n    \"\"\"",
        "\"\"\"\n    Loads the index.html file from the app/html directory.\n    Returns:\n        str: The content of the index.html file.\n    \"\"\"",
        "\"\"\"\n    Loads the instructions for each chapter from the template file.\n    Returns:\n        dict: A dictionary of instructions where the key is the chapter name and the value is the instruction text.\n    \"\"\"",
        "\"\"\"\n    Renders the project description as HTML using the provided Pydantic model.\n\n    Args:\n        project (ProjectDescription): The project description model.\n    Returns:\n        str: The rendered HTML content.\n    \"\"\"",
        "\"\"\"\n    Renders markdown text to HTML. Use this function to render any markdown content.\n\n    Args:\n        markdown_text (str): The markdown text to render.\n    Returns:\n        str: The rendered HTML content.\n    \"\"\"",
        "\"\"\"\n    Handles form submission to generate a new project description.\n    Args:\n        headings (List[str]): Selected headings from the form.\n        files (List[UploadFile]): Uploaded files.\n    Returns:\n        HTMLResponse: Rendered project description.\n    \"\"\""
    ],
    "functions": [
        "load_project_template",
        "load_result_template",
        "load_index",
        "load_instructions",
        "render_project_description",
        "render_markdown_to_html",
        "html_landing",
        "generate_project"
    ],
    "classes": []
}