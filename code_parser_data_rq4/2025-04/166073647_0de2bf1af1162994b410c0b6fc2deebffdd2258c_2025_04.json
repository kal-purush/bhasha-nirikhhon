{
    "identifiers": [
        "s32x",
        "sh2",
        "drc",
        "omegadrive",
        "util",
        "BufferUtil",
        "omegadrive",
        "util",
        "Size",
        "java",
        "util",
        "java",
        "util",
        "hardcodePollers",
        "w",
        "bpd",
        "w",
        "bpd",
        "memLoadPos",
        "bpd",
        "memLoadTargetSize",
        "Size",
        "BYTE",
        "bpd",
        "memLoadOpcode",
        "bpd",
        "words",
        "bpd",
        "memLoadPos",
        "bpd",
        "cmpPos",
        "bpd",
        "cmpOpcode",
        "bpd",
        "words",
        "bpd",
        "cmpPos",
        "bpd",
        "branchPos",
        "bpd",
        "branchOpcode",
        "bpd",
        "words",
        "bpd",
        "branchPos",
        "hardcodePollers",
        "put",
        "BufferUtil",
        "hashCode",
        "bpd",
        "words",
        "bpd",
        "words",
        "length",
        "bpd",
        "w",
        "bpd",
        "w",
        "bpd",
        "memLoadPos",
        "bpd",
        "memLoadTargetSize",
        "Size",
        "WORD",
        "bpd",
        "memLoadOpcode",
        "bpd",
        "words",
        "bpd",
        "memLoadPos",
        "bpd",
        "cmpPos",
        "bpd",
        "cmpOpcode",
        "bpd",
        "words",
        "bpd",
        "cmpPos",
        "bpd",
        "branchPos",
        "bpd",
        "branchOpcode",
        "bpd",
        "words",
        "bpd",
        "branchPos",
        "hardcodePollers",
        "put",
        "BufferUtil",
        "hashCode",
        "bpd",
        "words",
        "bpd",
        "words",
        "length",
        "bpd",
        "src",
        "dest",
        "dest",
        "memLoadPos",
        "src",
        "memLoadPos",
        "dest",
        "memLoadTargetSize",
        "src",
        "memLoadTargetSize",
        "dest",
        "memLoadOpcode",
        "src",
        "memLoadOpcode",
        "dest",
        "cmpPos",
        "src",
        "cmpPos",
        "dest",
        "cmpOpcode",
        "src",
        "cmpOpcode",
        "dest",
        "branchPos",
        "src",
        "branchPos",
        "dest",
        "branchOpcode",
        "src",
        "branchOpcode",
        "dest",
        "branchPc",
        "dest",
        "pc",
        "dest",
        "branchPos",
        "dest",
        "isPoller"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Federico Berti\n * <p>\n * Copyright 2025",
        "* Doom Fusion V2\n         * 2025-04-03 16:33:07.320 ERROR [XF_V2.32x)] Sh2DrcBlockOptimizer: SLAVE Poll ignored at PC 600260a: 603ffa8 NONE\n         *  0600260a\t471b\ttas.b @R7\n         *  0000260c\t0829\tmovt R8\n         *  0000260e\t2888\ttst R8, R8\n         *  00002610\t8dfb\tbt/s H'0000260a\n         *  00002612\t51f2\tmov.l @(2, R15), R1",
        "* Doom Fusion V2\n         *  2025-02-06 22:58:33.445 ERROR [XF_V2.32x)] Sh2DrcBlockOptimizer: MASTER Poll ignored at PC 201215a: 603f190 NONE\n         *   0201215a\t6b81\tmov.w @R8, R11\n         *   0001215c\t2bb8\ttst R11, R11\n         *   0001215e\t8ffc\tbf/s H'0001215a\n         *   00012160\t5cfb\tmov.l @(11, R15), R12",
        "* SRB2 32XN\n         * 2024-12-24 23:36:34.012 ERROR [X_v0.1.32x] Sh2DrcBlockOptimizer: MASTER Poll ignored at PC 20190e8: 603bf3a NONE\n         * 020190e8\t6031\tmov.w @R3, R0\n         * 000190ea\t6121\tmov.w @R2, R1\n         * 000190ec\t611d\textu.w R1, R1\n         * 000190ee\tc901\tand H'01, R0\n         * 000190f0\t3010\tcmp/eq R1, R0\n         * 000190f2\t8bf9\tbf H'000190e8\n         * <p>\n         * 2024-12-24 23:39:33.693 ERROR [X_v0.1.32x] Sh2DrcBlockOptimizer: MASTER Poll ignored at PC 2016e40: 2603bf2c NONE\n         * 02016e40\t6642\tmov.l @R4, R6\n         * 00016e42\t6163\tmov R6, R1\n         * 00016e44\t3178\tsub R7, R1\n         * 00016e46\t31a3\tcmp/ge R10, R1\n         * 00016e48\t8ffa\tbf/s H'00016e40\n         * 00016e4a\te363\tmov H'63, R3"
    ],
    "functions": [
        "copyData"
    ],
    "classes": [
        "HardcodePoller"
    ]
}