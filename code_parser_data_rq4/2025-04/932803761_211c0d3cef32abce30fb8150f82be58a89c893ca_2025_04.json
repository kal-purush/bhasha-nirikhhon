{
    "identifiers": [
        "uk",
        "ac",
        "bangor",
        "cs",
        "cambria",
        "AcademiGymraeg",
        "util",
        "org",
        "springframework",
        "security",
        "core",
        "Authentication",
        "org",
        "springframework",
        "security",
        "core",
        "context",
        "SecurityContextHolder",
        "org",
        "springframework",
        "stereotype",
        "Service",
        "uk",
        "ac",
        "bangor",
        "cs",
        "cambria",
        "AcademiGymraeg",
        "model",
        "User",
        "uk",
        "ac",
        "bangor",
        "cs",
        "cambria",
        "AcademiGymraeg",
        "repo",
        "UserRepository",
        "Service",
        "userRepository",
        "userRepository",
        "userRepository",
        "userRepository",
        "authentication",
        "SecurityContextHolder",
        "getContext",
        "getAuthentication",
        "authentication",
        "authentication",
        "isAuthenticated",
        "username",
        "authentication",
        "getName",
        "user",
        "userRepository",
        "findByEmailAddress",
        "username",
        "orElse",
        "user",
        "user",
        "getUserId",
        "authentication",
        "SecurityContextHolder",
        "getContext",
        "getAuthentication",
        "authentication",
        "authentication",
        "isAuthenticated",
        "username",
        "authentication",
        "getName",
        "user",
        "userRepository",
        "findByEmailAddress",
        "username",
        "orElse",
        "user",
        "user",
        "getForename",
        "authentication",
        "SecurityContextHolder",
        "getContext",
        "getAuthentication",
        "authentication",
        "authentication",
        "isAuthenticated",
        "username",
        "authentication",
        "getName",
        "user",
        "userRepository",
        "findByEmailAddress",
        "username",
        "orElse",
        "user",
        "user",
        "getUsername",
        "authentication",
        "SecurityContextHolder",
        "getContext",
        "getAuthentication",
        "authentication",
        "authentication",
        "isAuthenticated",
        "username",
        "authentication",
        "getName",
        "user",
        "userRepository",
        "findByEmailAddress",
        "username",
        "orElse",
        "user",
        "user",
        "isAdmin",
        "authentication",
        "SecurityContextHolder",
        "getContext",
        "getAuthentication",
        "authentication",
        "authentication",
        "isAuthenticated",
        "username",
        "authentication",
        "getName",
        "user",
        "userRepository",
        "findByEmailAddress",
        "username",
        "orElse",
        "user",
        "user",
        "isInstructor"
    ],
    "literals": [
        "\"Unknown User\""
    ],
    "variables": [
        "userRepository"
    ],
    "comments": [
        "Create service to identify which user is currently logged in",
        "Get the logged in user's ID",
        "Return null if no user is logged in",
        "Get the logged in user's forename",
        "Default value if no user is logged in",
        "Get the logged in user's email address",
        "Return null if no user is logged in",
        "Check if the logged in user is an administrator",
        "Default to false if no user is logged in",
        "Check if the logged in user is an instructor",
        "Default to false if no user is logged in"
    ],
    "docstrings": [
        "* @author grs22lkc"
    ],
    "functions": [
        "UserService",
        "getLoggedInUserId",
        "getLoggedInUserForename",
        "getLoggedInUserEmail",
        "isLoggedInUserAdmin",
        "isLoggedInUserInstructor"
    ],
    "classes": [
        "UserService"
    ]
}