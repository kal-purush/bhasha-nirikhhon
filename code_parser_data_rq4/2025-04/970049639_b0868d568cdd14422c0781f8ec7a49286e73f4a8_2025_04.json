{
    "identifiers": [
        "os",
        "streamlit",
        "st",
        "dotenv",
        "load_dotenv",
        "src",
        "utils",
        "config",
        "PAGE_TITLE",
        "PAGE_ICON",
        "PAGE_LAYOUT",
        "SIDEBAR_STATE",
        "DATA_DIR",
        "src",
        "utils",
        "styles",
        "CUSTOM_CSS",
        "src",
        "utils",
        "api_validator",
        "validate_api_key",
        "src",
        "components",
        "header",
        "render_header",
        "src",
        "components",
        "sidebar",
        "render_sidebar",
        "src",
        "components",
        "main_content",
        "render_input_section",
        "display_response",
        "display_history",
        "src",
        "components",
        "api_key_form",
        "render_api_key_form",
        "src",
        "data_handlers",
        "document_loader",
        "load_documents",
        "process_documents",
        "create_vectorstore",
        "load_vectorstore",
        "reset_vectorstore",
        "src",
        "models",
        "llm_chain",
        "create_retrieval_chain_with_vectorstore",
        "st",
        "set_page_config",
        "page_title",
        "PAGE_TITLE",
        "page_icon",
        "PAGE_ICON",
        "layout",
        "PAGE_LAYOUT",
        "initial_sidebar_state",
        "SIDEBAR_STATE",
        "st",
        "markdown",
        "CUSTOM_CSS",
        "unsafe_allow_html",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "load_dotenv",
        "os",
        "getenv",
        "api_key",
        "st",
        "session_state",
        "api_key_valid",
        "validate_api_key",
        "api_key",
        "is_valid",
        "st",
        "error",
        "error_message",
        "os",
        "environ",
        "pop",
        "api_key",
        "st",
        "session_state",
        "api_key_valid",
        "render_api_key_form",
        "api_key_provided",
        "st",
        "session_state",
        "st",
        "rerun",
        "st",
        "session_state",
        "render_header",
        "render_sidebar",
        "reset_index",
        "reset_vectorstore",
        "st",
        "session_state",
        "pop",
        "st",
        "rerun",
        "render_input_section",
        "clear_button",
        "st",
        "rerun",
        "st",
        "session_state",
        "load_vectorstore",
        "vectorstore",
        "st",
        "info",
        "load_documents",
        "DATA_DIR",
        "docs",
        "st",
        "warning",
        "DATA_DIR",
        "process_documents",
        "docs",
        "create_vectorstore",
        "documents",
        "save_local",
        "vectorstore",
        "st",
        "session_state",
        "vectorstore",
        "st",
        "warning",
        "langchain",
        "docstore",
        "Document",
        "langchain_community",
        "vectorstores",
        "FAISS",
        "langchain_huggingface",
        "HuggingFaceEmbeddings",
        "Document",
        "page_content",
        "HuggingFaceEmbeddings",
        "model_name",
        "model_kwargs",
        "FAISS",
        "from_documents",
        "documents",
        "simple_docs",
        "embedding",
        "simple_embeddings",
        "st",
        "session_state",
        "simple_vectorstore",
        "st",
        "info",
        "e2",
        "st",
        "error",
        "e2",
        "st",
        "error",
        "e",
        "st",
        "error",
        "e",
        "st",
        "info",
        "langchain",
        "docstore",
        "Document",
        "langchain_community",
        "vectorstores",
        "FAISS",
        "langchain_huggingface",
        "HuggingFaceEmbeddings",
        "Document",
        "page_content",
        "HuggingFaceEmbeddings",
        "model_name",
        "model_kwargs",
        "FAISS",
        "from_documents",
        "documents",
        "simple_docs",
        "embedding",
        "simple_embeddings",
        "st",
        "session_state",
        "simple_vectorstore",
        "st",
        "info",
        "e2",
        "st",
        "error",
        "e2",
        "st",
        "error",
        "submit_button",
        "input_text",
        "st",
        "session_state",
        "st",
        "spinner",
        "create_retrieval_chain_with_vectorstore",
        "st",
        "session_state",
        "vectorstore",
        "retrieval_chain",
        "invoke",
        "input_text",
        "response",
        "response",
        "find",
        "len",
        "response",
        "find",
        "action_start",
        "response",
        "action_start",
        "action_end",
        "strip",
        "response",
        "st",
        "session_state",
        "history",
        "append",
        "input_text",
        "action_type",
        "display_response",
        "response",
        "ValueError",
        "e",
        "st",
        "error",
        "e",
        "st",
        "session_state",
        "st",
        "button",
        "on_click",
        "st",
        "rerun",
        "e",
        "st",
        "error",
        "e",
        "display_history",
        "st",
        "session_state",
        "history",
        "main"
    ],
    "literals": [
        "'history'",
        "'api_key_valid'",
        "\"GOOGLE_API_KEY\"",
        "f\"Invalid API key in environment: {error_message}\"",
        "\"GOOGLE_API_KEY\"",
        "'vectorstore'",
        "'vectorstore'",
        "f\"Attempting to load documents\"",
        "f\"No documents found in {DATA_DIR}. Please check the path.\"",
        "\"Could not create a proper vector database. Using a simplified version for testing.\"",
        "\"This is a test document for healthcare database requests.\"",
        "\"all-MiniLM-L6-v2\"",
        "'device'",
        "'cpu'",
        "\"Using simplified vector database for basic functionality.\"",
        "f\"Could not create even a simplified vector database: {str(e2)}\"",
        "\"The application cannot function without a vector database.\"",
        "f\"Error setting up the document database: {str(e)}\"",
        "\"Attempting to use a simplified version for testing.\"",
        "\"This is a test document for healthcare database requests.\"",
        "\"all-MiniLM-L6-v2\"",
        "'device'",
        "'cpu'",
        "\"Using simplified vector database for basic functionality.\"",
        "f\"Could not create even a simplified vector database: {str(e2)}\"",
        "\"The application cannot function without a vector database.\"",
        "'vectorstore'",
        "\"Processing your request...\"",
        "\"input\"",
        "\"Unknown\"",
        "\"Action Type:\"",
        "'answer'",
        "'answer'",
        "\"Action Type:\"",
        "\"Action Type:\"",
        "'answer'",
        "\"\\n\"",
        "'answer'",
        "\"ERROR:\"",
        "'answer'",
        "\"Error\"",
        "f\"API Key Error: {str(e)}\"",
        "\"Re-enter API Key\"",
        "f\"An error occurred: {str(e)}\"",
        "\"__main__\""
    ],
    "variables": [
        "history",
        "api_key_valid",
        "api_key",
        "is_valid",
        "error_message",
        "api_key",
        "api_key_provided",
        "api_key_valid",
        "api_key_valid",
        "reset_index",
        "input_text",
        "submit_button",
        "clear_button",
        "vectorstore",
        "docs",
        "documents",
        "vectorstore",
        "vectorstore",
        "simple_docs",
        "simple_embeddings",
        "simple_vectorstore",
        "vectorstore",
        "simple_docs",
        "simple_embeddings",
        "simple_vectorstore",
        "vectorstore",
        "retrieval_chain",
        "response",
        "action_type",
        "action_start",
        "action_end",
        "action_type",
        "action_type",
        "api_key_valid"
    ],
    "comments": [
        "Import components and utilities",
        "Configure the page first (needs to be at the top)",
        "Apply custom CSS",
        "Initialize session state for history and API key status",
        "Load environment variables",
        "Check if API key is available and valid",
        "If we have an API key in the environment, validate it",
        "If the API key is invalid, clear it and show the form",
        "Clear the environment variable to prevent reusing the invalid key",
        "If API key is not available or invalid, and not already validated in this session",
        "Show the API key form and get the result",
        "If the API key was provided and validated, mark it as valid for this session",
        "Rerun the app to use the new API key",
        "If API key is still not provided or invalid, don't proceed with the rest of the app",
        "If we get here, we have a valid API key",
        "Render the header",
        "Render the sidebar and get reset_index button state",
        "Reset vector index if requested",
        "Render the input section",
        "Clear input and response if clear button is clicked",
        "Check if we have a cached vectorstore in session state",
        "Try to load from disk first",
        "If not available, create a new one",
        "Store in session state",
        "If we couldn't create a vectorstore, create a simple mock one for testing",
        "Import necessary modules for creating a mock vectorstore",
        "Create a simple document",
        "Try to create a simple vectorstore",
        "Try to create a simple mock vectorstore as a fallback",
        "Create a simple document",
        "Create a simple vectorstore",
        "Process the request when the button is clicked",
        "Create the retrieval chain",
        "Process the request",
        "Extract action type for history",
        "Add to history",
        "Display the response",
        "Handle API key errors",
        "Reset API key validation status to force re-entry",
        "Handle other errors",
        "Display history"
    ],
    "docstrings": [
        "\"\"\"\nHealthcare Database Request Assistant\n\nThis application helps healthcare professionals process database-level service requests\nthat cannot be handled through the user interface.\n\nAuthor: Raja\nDate: April 2025\n\"\"\"",
        "\"\"\"\n    Main function to run the Healthcare Database Request Assistant.\n    \"\"\""
    ],
    "functions": [
        "main"
    ],
    "classes": []
}