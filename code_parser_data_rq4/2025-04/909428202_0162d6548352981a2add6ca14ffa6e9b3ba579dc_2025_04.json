{
    "identifiers": [
        "imutils",
        "cv2",
        "accumWeight",
        "deltaThresh",
        "minArea",
        "imutils",
        "is_cv2",
        "accumWeight",
        "deltaThresh",
        "minArea",
        "image",
        "avg",
        "image",
        "astype",
        "locs",
        "cv2",
        "accumulateWeighted",
        "image",
        "avg",
        "accumWeight",
        "cv2",
        "absdiff",
        "image",
        "cv2",
        "convertScaleAbs",
        "avg",
        "cv2",
        "threshold",
        "frameDelta",
        "deltaThresh",
        "cv2",
        "THRESH_BINARY",
        "cv2",
        "dilate",
        "thresh",
        "iterations",
        "cv2",
        "findContours",
        "thresh",
        "cv2",
        "RETR_EXTERNAL",
        "cv2",
        "CHAIN_APPROX_SIMPLE",
        "cnts",
        "isv2",
        "cnts",
        "c",
        "cnts",
        "cv2",
        "contourArea",
        "c",
        "minArea",
        "locs",
        "append",
        "c",
        "locs"
    ],
    "literals": [
        "\"float\""
    ],
    "variables": [
        "isv2",
        "accumWeight",
        "deltaThresh",
        "minArea",
        "avg",
        "locs",
        "avg",
        "frameDelta",
        "thresh",
        "thresh",
        "cnts",
        "cnts"
    ],
    "comments": [
        "import the necessary packages",
        "determine the OpenCV version, followed by storing the",
        "the frame accumulation weight, the fixed threshold for",
        "the delta image, and finally the minimum area required",
        "for \"motion\" to be reported",
        "initialize the average image for motion detection",
        "initialize the list of locations containing motion",
        "if the average image is None, initialize it",
        "otherwise, accumulate the weighted average between",
        "the current frame and the previous frames, then compute",
        "the pixel-wise differences between the current frame",
        "and running average",
        "threshold the delta image and apply a series of dilations",
        "to help fill in holes",
        "find contours in the thresholded image, taking care to",
        "use the appropriate version of OpenCV",
        "# loop over the contours",
        "only add the contour to the locations list if it",
        "exceeds the minimum area",
        "for c in cnts:",
        "if c is not None and len(c) >= 5 and cv2.contourArea(c) > self.minArea:",
        "locs.append(c)",
        "return the set of locations"
    ],
    "docstrings": [],
    "functions": [
        "update"
    ],
    "classes": [
        "BasicMotionDetector"
    ]
}