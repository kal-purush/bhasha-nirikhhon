{
    "identifiers": [
        "os",
        "sys",
        "json",
        "logging",
        "glob",
        "argparse",
        "numpy",
        "np",
        "pathlib",
        "Path",
        "typing",
        "Dict",
        "Optional",
        "tqdm",
        "tqdm",
        "torch",
        "sentence_transformers",
        "SentenceTransformer",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "format",
        "handlers",
        "logging",
        "FileHandler",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "logging",
        "getLogger",
        "config",
        "Dict",
        "config",
        "config",
        "update",
        "config",
        "config",
        "config",
        "get",
        "os",
        "makedirs",
        "config",
        "exist_ok",
        "logger",
        "info",
        "config",
        "logger",
        "info",
        "config",
        "SentenceTransformer",
        "config",
        "torch",
        "device",
        "torch",
        "cuda",
        "is_available",
        "model",
        "to",
        "device",
        "logger",
        "info",
        "device",
        "model",
        "get_sentence_embedding_dimension",
        "logger",
        "info",
        "embedding_dim",
        "file_path",
        "Optional",
        "Dict",
        "logger",
        "info",
        "file_path",
        "open",
        "file_path",
        "encoding",
        "f",
        "json",
        "load",
        "f",
        "get",
        "chunks",
        "logger",
        "warning",
        "file_path",
        "chunk",
        "chunk",
        "chunks",
        "logger",
        "info",
        "len",
        "texts",
        "texts",
        "logger",
        "info",
        "sum",
        "len",
        "t",
        "t",
        "texts",
        "len",
        "texts",
        "logger",
        "info",
        "texts",
        "config",
        "i",
        "len",
        "texts",
        "batch_size",
        "texts",
        "i",
        "i",
        "batch_size",
        "model",
        "encode",
        "batch_texts",
        "convert_to_tensor",
        "all_embeddings",
        "extend",
        "batch_embeddings",
        "cpu",
        "numpy",
        "tolist",
        "i",
        "chunk",
        "chunks",
        "all_embeddings",
        "i",
        "all_embeddings",
        "np",
        "array",
        "all_embeddings",
        "logger",
        "info",
        "emb_array",
        "shape",
        "logger",
        "info",
        "emb_array",
        "min",
        "emb_array",
        "max",
        "emb_array",
        "mean",
        "chunks",
        "e",
        "logger",
        "error",
        "file_path",
        "e",
        "exc_info",
        "Dict",
        "output_path",
        "open",
        "output_path",
        "encoding",
        "f",
        "json",
        "dump",
        "f",
        "ensure_ascii",
        "logger",
        "info",
        "output_path",
        "output_path",
        "e",
        "logger",
        "error",
        "output_path",
        "e",
        "input_dir",
        "output_dir",
        "Optional",
        "limit",
        "Optional",
        "output_dir",
        "config",
        "config",
        "get",
        "os",
        "makedirs",
        "output_dir",
        "exist_ok",
        "sorted",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "input_dir",
        "limit",
        "files",
        "limit",
        "logger",
        "info",
        "len",
        "files",
        "file_path",
        "tqdm",
        "files",
        "desc",
        "generate_embeddings_for_file",
        "file_path",
        "doc_with_embeddings",
        "config",
        "get",
        "os",
        "path",
        "join",
        "output_dir",
        "os",
        "path",
        "basename",
        "file_path",
        "save_document",
        "doc_with_embeddings",
        "output_path",
        "output_files",
        "append",
        "output_path",
        "output_files",
        "append",
        "doc_with_embeddings",
        "get",
        "e",
        "logger",
        "error",
        "file_path",
        "e",
        "exc_info",
        "logger",
        "info",
        "len",
        "output_files",
        "output_files",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "parse_args",
        "args",
        "debug",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logger",
        "debug",
        "args",
        "model",
        "args",
        "batch_size",
        "args",
        "output",
        "args",
        "no_save",
        "EmbeddingGenerator",
        "config",
        "generator",
        "process_directory",
        "args",
        "input",
        "args",
        "output",
        "args",
        "limit",
        "logger",
        "info",
        "len",
        "processed_files",
        "processed_files",
        "main"
    ],
    "literals": [
        "'%(asctime)s - %(levelname)s - %(message)s'",
        "\"pubmed_embedding.log\"",
        "\"pubmed_embedding\"",
        "\"model_name\"",
        "\"pritamdeka/S-PubMedBERT-MS-MARCO\"",
        "\"batch_size\"",
        "\"output_dir\"",
        "\"./processed_with_embeddings\"",
        "\"no_save\"",
        "\"output_dir\"",
        "\"no_save\"",
        "\"output_dir\"",
        "f\"Output directory: {self.config['output_dir']}\"",
        "'output_dir'",
        "f\"Loading embedding model: {self.config['model_name']}\"",
        "'model_name'",
        "\"model_name\"",
        "\"cuda\"",
        "\"cpu\"",
        "f\"Using device: {self.device}\"",
        "f\"Embedding dimension: {self.embedding_dim}\"",
        "f\"Generating embeddings for {file_path}\"",
        "'r'",
        "'utf-8'",
        "'chunks'",
        "f\"No chunks found in {file_path}\"",
        "'text'",
        "f\"Found {len(texts)} chunks to embed\"",
        "f\"Average chunk length: {sum(len(t) for t in texts) / len(texts):.1f} characters\"",
        "f\"First chunk sample: {texts[0][:100]}...\"",
        "\"batch_size\"",
        "'embedding'",
        "f\"Embedding shape: {emb_array.shape}\"",
        "f\"Embedding stats: min={emb_array.min():.4f}, max={emb_array.max():.4f}, mean={emb_array.mean():.4f}\"",
        "'chunks'",
        "f\"Error generating embeddings for {file_path}: {str(e)}\"",
        "'w'",
        "'utf-8'",
        "f\"Saved document with embeddings to {output_path}\"",
        "f\"Error saving document to {output_path}: {str(e)}\"",
        "\"\"",
        "\"output_dir\"",
        "\"no_save\"",
        "\"*.json\"",
        "f\"Found {len(files)} files to process for embeddings\"",
        "\"Generating embeddings\"",
        "\"no_save\"",
        "\"document_id\"",
        "\"unknown\"",
        "f\"Error processing {file_path}: {str(e)}\"",
        "f\"Successfully processed {len(output_files)} files for embeddings\"",
        "\"Generate embeddings for PubMed chunks\"",
        "\"--input\"",
        "\"-i\"",
        "\"Directory containing processed JSON files\"",
        "\"--output\"",
        "\"-o\"",
        "\"./processed_with_embeddings\"",
        "\"Output directory for files with embeddings\"",
        "\"--limit\"",
        "\"-l\"",
        "\"Limit the number of files to process\"",
        "\"--model\"",
        "\"-m\"",
        "\"pritamdeka/S-PubMedBERT-MS-MARCO\"",
        "\"Sentence transformer model to use\"",
        "\"--batch-size\"",
        "\"-b\"",
        "\"Batch size for embedding generation\"",
        "\"--no-save\"",
        "\"store_true\"",
        "\"Don't save intermediate files\"",
        "\"--debug\"",
        "\"store_true\"",
        "\"Enable debug logging\"",
        "\"Debug logging enabled\"",
        "\"model_name\"",
        "\"batch_size\"",
        "\"output_dir\"",
        "\"no_save\"",
        "f\"Generated embeddings for {len(processed_files)} files\"",
        "\"__main__\""
    ],
    "variables": [
        "logger",
        "config",
        "model",
        "device",
        "embedding_dim",
        "chunks",
        "texts",
        "all_embeddings",
        "batch_size",
        "batch_texts",
        "batch_embeddings",
        "chunk",
        "emb_array",
        "output_dir",
        "files",
        "files",
        "output_files",
        "doc_with_embeddings",
        "output_path",
        "parser",
        "args",
        "config",
        "generator",
        "processed_files"
    ],
    "comments": [
        "Configure logging",
        "Create output directory if needed",
        "Load the embedding model",
        "Enable GPU if available",
        "Get embedding dimension for verification",
        "Load the processed document",
        "Extract chunks",
        "Prepare text for embedding",
        "Log some stats about the chunks",
        "Generate embeddings in batches",
        "Generate embeddings",
        "Convert to list for JSON serialization",
        "Add embeddings to chunks",
        "Log embedding info",
        "Update the document",
        "Set up output directory",
        "Get all JSON files",
        "Process each file",
        "Generate embeddings",
        "Save to output directory",
        "If not saving, just track the document ID",
        "Configure logging level",
        "Create config from arguments",
        "Create generator and process files"
    ],
    "docstrings": [
        "\"\"\"\nEmbedding Generator Script - Second step in PubMed processing pipeline\n\nThis script generates vector embeddings for PubMed text chunks using\nsentence transformers.\n\nUsage:\n    python 2_embedding_generator.py --input /path/to/processed --output /path/to/embeddings [--limit 20] [--model model_name]\n\"\"\"",
        "\"\"\"Initialize the embedding generator with the specified model.\"\"\"",
        "\"\"\"Generate embeddings for all chunks in a processed file.\"\"\"",
        "\"\"\"Save the document with embeddings.\"\"\"",
        "\"\"\"Process all JSON files in the input directory and add embeddings.\"\"\"",
        "\"\"\"Parse command line arguments.\"\"\"",
        "\"\"\"Main function to run the embedding generator.\"\"\""
    ],
    "functions": [
        "generate_embeddings_for_file",
        "save_document",
        "process_directory",
        "parse_args",
        "main"
    ],
    "classes": [
        "EmbeddingGenerator"
    ]
}