{
    "identifiers": [
        "canvas",
        "canvas",
        "innerWidth",
        "canvas",
        "innerHeight",
        "x",
        "y",
        "fontSize",
        "canvasHeight",
        "x",
        "y",
        "fontSize",
        "canvasHeight",
        "context",
        "context",
        "context",
        "canvasWidth",
        "canvasHeight",
        "canvasHeight",
        "canvasWidth",
        "i",
        "i",
        "i",
        "i",
        "Effect",
        "canvas",
        "canvas",
        "ctx",
        "effect",
        "effect",
        "symbol",
        "symbol",
        "ctx",
        "requestAnimationFrame",
        "animate",
        "animate"
    ],
    "literals": [
        "'canvas1'",
        "'2d'",
        "'アァカサタナハマヤャラワガザダバパイィキシチニヒミリヰギジヂビピウゥクスツヌフムユュルグズブヅプエェケセテネヘメレヱゲゼデベペオォコソトノホモヨョロヲゴゾドボポヴッン0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'",
        "''",
        "'#0aff0a'",
        "'px monospace'"
    ],
    "variables": [
        "canvas",
        "ctx",
        "i",
        "effect"
    ],
    "comments": [
        "will create and manage individual symbols",
        "the currently active symbol from         \"this.characters\"",
        "this methord will randomized the characters and dwaw in the canvas at a specific position",
        "will manage the entire effect( ALL THE SYMBOLS AT ONCE )",
        "an array to contain all the symbol objects",
        "the \"#\" is to make the custom methord initialize private ( privet methords can not be called directly from outside ) [oops - Abstraction]",
        "the new keyword will find the class of name Symbol and trigger its constructor",
        "will run 60 times per second",
        "monospace occupy same amount of horizontal space"
    ],
    "docstrings": [],
    "functions": [
        "draw",
        "animate"
    ],
    "classes": [
        "Effect"
    ]
}