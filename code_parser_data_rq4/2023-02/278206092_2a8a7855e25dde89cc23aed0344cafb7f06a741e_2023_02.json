{
    "identifiers": [
        "SuperLinq",
        "TSource",
        "TSource",
        "Func",
        "condition",
        "TSource",
        "source",
        "Guard",
        "IsNotNull",
        "condition",
        "Guard",
        "IsNotNull",
        "source",
        "Core",
        "condition",
        "source",
        "TSource",
        "Core",
        "Func",
        "condition",
        "TSource",
        "source",
        "source",
        "Memoize",
        "condition",
        "item",
        "memo",
        "item"
    ],
    "literals": [],
    "variables": [
        "memo"
    ],
    "comments": [
        "Generates an enumerable sequence by repeating a source sequence as long as the given loop condition holds.",
        "</summary>",
        "<typeparam name=\"TSource\">Source sequence element type.</typeparam>",
        "<param name=\"condition\">Loop condition.</param>",
        "<param name=\"source\">Sequence to repeat while the condition evaluates true.</param>",
        "<returns>Sequence generated by repeating the given sequence while the condition evaluates to true.</returns>",
        "<exception cref=\"ArgumentNullException\"><paramref name=\"condition\"/> or <paramref name=\"source\"/> is <see",
        "langword=\"null\"/>.</exception>",
        "<remarks>",
        "<para>",
        "<paramref name=\"condition\"/> is evaluated lazily, once at the start of each loop of <paramref name=\"source\"/>.",
        "</para>",
        "<para>",
        "<paramref name=\"source\"/> is cached via <see cref=\"Memoize{TSource}(IEnumerable{TSource}, bool)\"/>, so that it",
        "is only iterated once during the first loop. Successive loops will enumerate the cache instead of <paramref",
        "name=\"source\"/>.",
        "</para>",
        "</remarks>"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "While"
    ],
    "classes": [
        "SuperEnumerable"
    ]
}