{
    "identifiers": [
        "require",
        "getNamedAccounts",
        "network",
        "ethers",
        "deployer",
        "basicNft",
        "basicMintTx",
        "basicNft",
        "ethers",
        "ethers",
        "deployer",
        "dynamicSvgNft",
        "highValue",
        "dynamicSvgNftMintTx",
        "dynamicSvgNft",
        "ethers",
        "deployer",
        "randomIpfsNft",
        "randomIpfsNft",
        "mintFee",
        "randomIpfsNftMintTx",
        "resolve",
        "reject",
        "setTimeout",
        "reject",
        "randomIpfsNft",
        "randomIpfsNft",
        "resolve",
        "chainId",
        "randomIpfsNftMintTxReceipt",
        "ethers",
        "deployer",
        "vrfCoordinatorV2Mock",
        "requestId",
        "randomIpfsNft"
    ],
    "literals": [
        "\"hardhat\"",
        "\"BasicNFT\"",
        "Basic NFT index 0 tokenURI: ${await basicNft.tokenURI(0)}",
        "\"4000\"",
        "\"DynamicSvgNft\"",
        "Dynamic SVG NFT index 0 tokenURI: ${await dynamicSvgNft.tokenURI(0)}",
        "\"RandomIpfsNft\"",
        "\"Timeout: 'NFTMinted' event did not fire\"",
        "\"NftMinted\"",
        "Random IPFS NFT index 0 tokenURI: ${await randomIpfsNft.tokenURI(0)}",
        "\"VRFCoordinatorV2Mock\"",
        "\"all\"",
        "\"mint\""
    ],
    "variables": [
        "chainId",
        "basicNft",
        "basicMintTx",
        "highValue",
        "dynamicSvgNft",
        "dynamicSvgNftMintTx",
        "randomIpfsNft",
        "mintFee",
        "randomIpfsNftMintTx",
        "randomIpfsNftMintTxReceipt",
        "requestId",
        "vrfCoordinatorV2Mock"
    ],
    "comments": [
        "Basic NFT",
        "Dynamic SVG  NFT",
        "Random IPFS NFT",
        "Need to listen for response",
        "5 minute timeout time",
        "setup listener for our event"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}