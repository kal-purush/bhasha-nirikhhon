{
    "identifiers": [
        "ucar",
        "nc2",
        "util",
        "cache",
        "com",
        "google",
        "common",
        "truth",
        "Truth",
        "assertThat",
        "org",
        "junit",
        "Assert",
        "fail",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "AfterClass",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "experimental",
        "categories",
        "Category",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "ucar",
        "nc2",
        "dataset",
        "DatasetUrl",
        "ucar",
        "nc2",
        "dataset",
        "NetcdfDatasets",
        "ucar",
        "nc2",
        "util",
        "CancelTask",
        "java",
        "io",
        "java",
        "lang",
        "invoke",
        "MethodHandles",
        "java",
        "util",
        "ucar",
        "unidata",
        "util",
        "test",
        "category",
        "NeedsUcarNetwork",
        "ucar",
        "unidata",
        "util",
        "test",
        "category",
        "NeedsExternalResource",
        "Category",
        "logger",
        "LoggerFactory",
        "getLogger",
        "MethodHandles",
        "lookup",
        "lookupClass",
        "cache",
        "factory",
        "COMMON_G16_KEY",
        "NCAR_PROFILE_NAME",
        "NCAR_G16_S3_URI",
        "NCAR_PROFILE_NAME",
        "COMMON_G16_KEY",
        "BeforeClass",
        "cache",
        "AfterClass",
        "cache",
        "clearCache",
        "location",
        "buffer_size",
        "cancelTask",
        "iospMessage",
        "NetcdfDatasets",
        "openFile",
        "location",
        "buffer_size",
        "cancelTask",
        "iospMessage",
        "count",
        "s3url",
        "cache",
        "durl",
        "DatasetUrl",
        "create",
        "s3url",
        "cache",
        "acquire",
        "factory",
        "durl",
        "count",
        "e",
        "fail",
        "s3url",
        "Test",
        "Category",
        "loadFileIntoCache",
        "NCAR_G16_S3_URI",
        "cache",
        "assertThat",
        "cache",
        "hits",
        "get",
        "isEqualTo",
        "assertThat",
        "cache",
        "miss",
        "get",
        "isEqualTo",
        "cache",
        "showCache",
        "cache",
        "getCache",
        "assertThat",
        "values",
        "size",
        "isEqualTo",
        "count",
        "key",
        "keySet",
        "elem",
        "get",
        "key",
        "assertThat",
        "elem",
        "size",
        "isEqualTo",
        "saveCount",
        "count",
        "loadFileIntoCache",
        "NCAR_G16_S3_URI",
        "cache",
        "cache",
        "getCache",
        "cache",
        "showCache",
        "assertThat",
        "cache",
        "hits",
        "get",
        "isEqualTo",
        "assertThat",
        "cache",
        "miss",
        "get",
        "isEqualTo",
        "assertThat",
        "values",
        "size",
        "isEqualTo",
        "saveCount",
        "key",
        "keySet",
        "elem",
        "get",
        "key",
        "assertThat",
        "elem",
        "size",
        "isEqualTo",
        "checkAllSame",
        "elem",
        "cache",
        "clearCache",
        "loadFileIntoCache",
        "NCAR_G16_S3_URI",
        "cache",
        "assertThat",
        "cache",
        "hits",
        "get",
        "isEqualTo",
        "assertThat",
        "cache",
        "miss",
        "get",
        "isEqualTo",
        "cache",
        "getCache",
        "files",
        "key",
        "keySet",
        "elem",
        "get",
        "key",
        "assertThat",
        "elem",
        "size",
        "isEqualTo",
        "file",
        "elem",
        "files",
        "add",
        "file",
        "ncfile",
        "ncfile",
        "files",
        "ncfile",
        "close",
        "loadFileIntoCache",
        "NCAR_G16_S3_URI",
        "cache",
        "assertThat",
        "cache",
        "hits",
        "get",
        "isEqualTo",
        "assertThat",
        "cache",
        "miss",
        "get",
        "isEqualTo",
        "first",
        "file",
        "assertThat",
        "file",
        "isLocked",
        "get",
        "isTrue",
        "assertThat",
        "file",
        "countAccessed",
        "isEqualTo",
        "assertThat",
        "file",
        "lastAccessed",
        "isNotEqualTo",
        "first",
        "first",
        "file",
        "assertThat",
        "first",
        "ncfile",
        "getLocation",
        "isEqualTo",
        "file",
        "ncfile",
        "getLocation",
        "assertThat",
        "first",
        "lastAccessed",
        "isLessThan",
        "file",
        "lastAccessed"
    ],
    "literals": [
        "\"ABI-L1b-RadC/2017/242/00/OR_ABI-L1b-RadC-M3C01_G16_s20172420002168_e20172420004540_c20172420004583.nc\"",
        "\"stratus-profile\"",
        "\"cdms3://\"",
        "\"@stratus.ucar.edu/unidata-netcdf-zarr-testing?netcdf-java/test/\"",
        "\" *** failed on \""
    ],
    "variables": [
        "cache"
    ],
    "comments": [
        "Taken from TestS3Read",
        "generally not available",
        "count cache size",
        "load same file again - should be added to the list, rather than creating a new elem",
        "The file is currently locked, so no cache hit.",
        "problem",
        "Verify that cache hits actually happen.",
        "Load up the file and then close tthem (thus, unlocking it).",
        "Then load it up again.",
        "Since file is now unlocked, loading it up should result in a hit.",
        "close all",
        "Need to do it this way instead of directly closing them",
        "because closing the files changes the iterations",
        "countAccessed not incremented until its closed, so == 0"
    ],
    "docstrings": [
        "* Copyright (c) 1998-2022 University Corporation for Atmospheric Research/Unidata\n * See LICENSE for license information.",
        "Test FileCache."
    ],
    "functions": [
        "setUp",
        "tearDown",
        "FileCacheable",
        "open",
        "loadFileIntoCache",
        "testS3NetcdfFileCache",
        "checkAllSame"
    ],
    "classes": [
        "TestS3NetcdfFileCache",
        "MyFileFactory"
    ]
}