{
    "identifiers": [
        "sys",
        "gi",
        "logging",
        "gettext",
        "gettext",
        "_",
        "gi",
        "require_version",
        "gi",
        "require_version",
        "gi",
        "require_version",
        "gi",
        "repository",
        "Gtk",
        "GLib",
        "Gio",
        "Adw",
        "vanilla_prime_utility",
        "windows",
        "main_window",
        "PrimeUtilityWindow",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "Adw",
        "Application",
        "application_id",
        "flags",
        "Gio",
        "ApplicationFlags",
        "HANDLES_COMMAND_LINE",
        "create_action",
        "quit",
        "__register_arguments",
        "add_main_option",
        "ord",
        "GLib",
        "OptionFlags",
        "NONE",
        "GLib",
        "OptionArg",
        "NONE",
        "command",
        "command",
        "get_options_dict",
        "commands",
        "contains",
        "do_activate",
        "props",
        "active_window",
        "win",
        "PrimeUtilityWindow",
        "application",
        "embedded",
        "__embedded",
        "win",
        "present",
        "name",
        "callback",
        "shortcuts",
        "Gio",
        "SimpleAction",
        "name",
        "action",
        "connect",
        "callback",
        "add_action",
        "action",
        "shortcuts",
        "set_accels_for_action",
        "name",
        "shortcuts",
        "version",
        "PrimeUtilityApplication",
        "app",
        "run",
        "sys",
        "argv"
    ],
    "literals": [
        "'Gtk'",
        "'4.0'",
        "'Adw'",
        "'1'",
        "'Vte'",
        "'3.91'",
        "'org.vanillaos.PrimeUtility'",
        "'quit'",
        "'<primary>q'",
        "\"embedded\"",
        "\"e\"",
        "\"Embedded mode\"",
        "\"embedded\"",
        "\"activate\"",
        "f\"app.{name}\""
    ],
    "variables": [
        "__embedded",
        "commands",
        "__embedded",
        "win",
        "win",
        "action",
        "app"
    ],
    "comments": [
        "main.py",
        "",
        "Copyright 2023 Mirko Brombin",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "",
        "SPDX-License-Identifier: GPL-3.0-or-later"
    ],
    "docstrings": [
        "\"\"\"The main application singleton class.\"\"\"",
        "\"\"\"Register command line arguments.\"\"\"",
        "\"\"\"Handle command line arguments.\n\n        We only have one command line option, --embedded, which\n        indicates that the application is embedded in another\n        application.\n        \"\"\"",
        "\"\"\"Called when the application is activated.\n\n        We raise the application's main window, creating it if\n        necessary.\n        \"\"\"",
        "\"\"\"Add an application action.\n\n        Args:\n            name: the name of the action\n            callback: the function to be called when the action is\n              activated\n            shortcuts: an optional list of accelerators\n        \"\"\"",
        "\"\"\"The application's entry point.\"\"\""
    ],
    "functions": [
        "__register_arguments",
        "do_command_line",
        "do_activate",
        "create_action",
        "main"
    ],
    "classes": [
        "PrimeUtilityApplication"
    ]
}