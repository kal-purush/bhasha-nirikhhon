{
    "identifiers": [
        "hudson",
        "model",
        "org",
        "hamcrest",
        "CoreMatchers",
        "equalTo",
        "org",
        "hamcrest",
        "MatcherAssert",
        "assertThat",
        "org",
        "hamcrest",
        "Matchers",
        "containsInAnyOrder",
        "org",
        "hamcrest",
        "Matchers",
        "hasSize",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertFalse",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "com",
        "gargoylesoftware",
        "htmlunit",
        "Page",
        "com",
        "gargoylesoftware",
        "htmlunit",
        "UnexpectedPage",
        "hudson",
        "FilePath",
        "hudson",
        "Launcher",
        "hudson",
        "slaves",
        "WorkspaceList",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "OutputStream",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "ZipEntry",
        "java",
        "util",
        "ZipFile",
        "org",
        "apache",
        "commons",
        "io",
        "IOUtils",
        "org",
        "junit",
        "Rule",
        "org",
        "junit",
        "Test",
        "org",
        "jvnet",
        "hudson",
        "test",
        "Issue",
        "org",
        "jvnet",
        "hudson",
        "test",
        "JenkinsRule",
        "org",
        "jvnet",
        "hudson",
        "test",
        "TestBuilder",
        "Rule",
        "j",
        "page",
        "file",
        "File",
        "createTempFile",
        "file",
        "page",
        "getInputStream",
        "os",
        "Files",
        "newOutputStream",
        "file",
        "toPath",
        "IOUtils",
        "copy",
        "os",
        "file",
        "zipPage",
        "result",
        "zipfile",
        "readzip",
        "zipfile",
        "download",
        "zipPage",
        "readzip",
        "zipfile",
        "result",
        "readzip",
        "stream",
        "ZipEntry",
        "getName",
        "collect",
        "Collectors",
        "toList",
        "readzip",
        "readzip",
        "close",
        "zipfile",
        "zipfile",
        "result",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "p",
        "getBuildersList",
        "add",
        "Override",
        "build",
        "launcher",
        "listener",
        "ws",
        "build",
        "getWorkspace",
        "ws",
        "child",
        "mkdirs",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mkdirs",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "text",
        "j",
        "createWebClient",
        "goTo",
        "p",
        "getName",
        "asNormalizedText",
        "assertTrue",
        "text",
        "text",
        "contains",
        "assertFalse",
        "text",
        "text",
        "contains",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "ws",
        "p",
        "getSomeWorkspace",
        "anotherDir",
        "ws",
        "child",
        "anotherDir",
        "mkdirs",
        "anotherDir",
        "child",
        "mkdirs",
        "mainTmp",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mainTmp",
        "mkdirs",
        "anotherTmp",
        "WorkspaceList",
        "tempDir",
        "anotherDir",
        "child",
        "anotherTmp",
        "mkdirs",
        "ws",
        "child",
        "touch",
        "ws",
        "child",
        "touch",
        "mainTmp",
        "child",
        "touch",
        "anotherTmp",
        "child",
        "touch",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "text",
        "j",
        "createWebClient",
        "goTo",
        "p",
        "getName",
        "asNormalizedText",
        "assertTrue",
        "text",
        "text",
        "contains",
        "assertTrue",
        "text",
        "text",
        "contains",
        "assertFalse",
        "text",
        "text",
        "contains",
        "assertFalse",
        "text",
        "text",
        "contains",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "p",
        "getBuildersList",
        "add",
        "Override",
        "build",
        "launcher",
        "listener",
        "ws",
        "build",
        "getWorkspace",
        "folder",
        "ws",
        "child",
        "folder",
        "mkdirs",
        "folder",
        "child",
        "touch",
        "mainTmp",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mainTmp",
        "mkdirs",
        "mainTmp",
        "child",
        "touch",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "wc",
        "j",
        "createWebClient",
        "wc",
        "getOptions",
        "setThrowExceptionOnFailingStatusCode",
        "page",
        "wc",
        "goTo",
        "p",
        "getUrl",
        "assertThat",
        "page",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_OK",
        "page",
        "wc",
        "goTo",
        "p",
        "getUrl",
        "assertThat",
        "page",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_OK",
        "page",
        "wc",
        "goTo",
        "p",
        "getUrl",
        "assertThat",
        "page",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_NOT_FOUND",
        "page",
        "wc",
        "goTo",
        "p",
        "getUrl",
        "assertThat",
        "page",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_NOT_FOUND",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "p",
        "getBuildersList",
        "add",
        "Override",
        "build",
        "launcher",
        "listener",
        "ws",
        "build",
        "getWorkspace",
        "ws",
        "child",
        "mkdirs",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mkdirs",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "text",
        "j",
        "createWebClient",
        "goTo",
        "p",
        "getName",
        "getWebResponse",
        "getContentAsString",
        "assertTrue",
        "text",
        "text",
        "contains",
        "assertFalse",
        "text",
        "text",
        "contains",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "p",
        "getBuildersList",
        "add",
        "Override",
        "build",
        "launcher",
        "listener",
        "ws",
        "build",
        "getWorkspace",
        "anotherDir",
        "ws",
        "child",
        "anotherDir",
        "mkdirs",
        "anotherDir",
        "child",
        "mkdirs",
        "mainTmp",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mainTmp",
        "mkdirs",
        "anotherTmp",
        "WorkspaceList",
        "tempDir",
        "anotherDir",
        "child",
        "anotherTmp",
        "mkdirs",
        "ws",
        "child",
        "touch",
        "ws",
        "child",
        "touch",
        "mainTmp",
        "child",
        "touch",
        "anotherTmp",
        "child",
        "touch",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "wc",
        "j",
        "createWebClient",
        "wc",
        "getOptions",
        "setThrowExceptionOnFailingStatusCode",
        "zipPage",
        "wc",
        "goTo",
        "p",
        "getName",
        "p",
        "getName",
        "assertThat",
        "zipPage",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_OK",
        "entryNames",
        "getListOfEntriesInDownloadedZip",
        "zipPage",
        "assertThat",
        "entryNames",
        "hasSize",
        "assertThat",
        "entryNames",
        "containsInAnyOrder",
        "zipPage",
        "wc",
        "goTo",
        "p",
        "getName",
        "p",
        "getName",
        "assertThat",
        "zipPage",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_OK",
        "entryNames",
        "getListOfEntriesInDownloadedZip",
        "zipPage",
        "assertThat",
        "entryNames",
        "hasSize",
        "assertThat",
        "entryNames",
        "containsInAnyOrder",
        "Test",
        "Issue",
        "p",
        "j",
        "createFreeStyleProject",
        "p",
        "getBuildersList",
        "add",
        "Override",
        "build",
        "launcher",
        "listener",
        "ws",
        "build",
        "getWorkspace",
        "anotherDir",
        "ws",
        "child",
        "anotherDir",
        "mkdirs",
        "anotherDir",
        "child",
        "mkdirs",
        "mainTmp",
        "WorkspaceList",
        "tempDir",
        "ws",
        "child",
        "mainTmp",
        "mkdirs",
        "anotherTmp",
        "WorkspaceList",
        "tempDir",
        "anotherDir",
        "child",
        "anotherTmp",
        "mkdirs",
        "ws",
        "child",
        "touch",
        "ws",
        "child",
        "touch",
        "mainTmp",
        "child",
        "touch",
        "anotherTmp",
        "child",
        "touch",
        "assertEquals",
        "Result",
        "SUCCESS",
        "p",
        "scheduleBuild2",
        "get",
        "getResult",
        "wc",
        "j",
        "createWebClient",
        "wc",
        "getOptions",
        "setThrowExceptionOnFailingStatusCode",
        "zipPage",
        "wc",
        "goTo",
        "p",
        "getName",
        "assertThat",
        "zipPage",
        "getWebResponse",
        "getStatusCode",
        "equalTo",
        "HttpURLConnection",
        "HTTP_OK",
        "entryNames",
        "getListOfEntriesInDownloadedZip",
        "zipPage",
        "assertThat",
        "entryNames",
        "hasSize",
        "assertThat",
        "entryNames",
        "containsInAnyOrder"
    ],
    "literals": [
        "\"DirectoryBrowserSupport\"",
        "\"zipDownload\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"subdir\"",
        "\"job/\"",
        "\"/ws/\"",
        "\"anotherDir\"",
        "\"subdir\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"insideDir\"",
        "\"subDir\"",
        "\"insideDir\"",
        "\"anotherDir/one.txt\"",
        "\"anotherDir/insideDir/two.txt\"",
        "\"three.txt\"",
        "\"four.txt\"",
        "\"job/\"",
        "\"/ws/**/*.txt\"",
        "\"one.txt\"",
        "\"two.txt\"",
        "\"three.txt\"",
        "\"four.txt\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"one.txt\"",
        "\"subDir\"",
        "\"two.txt\"",
        "\"ws/anotherDir/\"",
        "\"ws/anotherDir/one.txt\"",
        "\"ws/subdir@tmp/\"",
        "\"ws/subdir@tmp/two.txt\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"subdir\"",
        "\"job/\"",
        "\"/ws/*plain*\"",
        "\"text/plain\"",
        "\"anotherDir\"",
        "\"subdir\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"insideDir\"",
        "\"subDir\"",
        "\"insideDir\"",
        "\"anotherDir/one.txt\"",
        "\"anotherDir/insideDir/two.txt\"",
        "\"three.txt\"",
        "\"four.txt\"",
        "\"job/\"",
        "\"/ws/*zip*/\"",
        "\"test0/anotherDir/one.txt\"",
        "\"test0/anotherDir/insideDir/two.txt\"",
        "\"job/\"",
        "\"/ws/anotherDir/*zip*/\"",
        "\"anotherDir/one.txt\"",
        "\"anotherDir/insideDir/two.txt\"",
        "\"SECURITY-1807\"",
        "\"anotherDir\"",
        "\"insideDir\"",
        "\"subDir\"",
        "\"insideDir\"",
        "\"anotherDir/one.txt\"",
        "\"anotherDir/insideDir/two.txt\"",
        "\"three.txt\"",
        "\"four.txt\"",
        "\"job/\"",
        "\"/ws/**/*.txt/*zip*/glob.zip\"",
        "\"anotherDir/one.txt\"",
        "\"anotherDir/insideDir/two.txt\""
    ],
    "variables": [
        "result"
    ],
    "comments": [
        "http://localhost:54407/jenkins/job/test0/ws/**/*.txt/*zip*/glob.zip"
    ],
    "docstrings": [
        "* The MIT License\n *\n * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.",
        "* @author Kohsuke Kawaguchi"
    ],
    "functions": [
        "File",
        "download",
        "getListOfEntriesInDownloadedZip",
        "tmpNotListed",
        "perform",
        "tmpNotListedWithGlob",
        "noDirectAccessToTmp",
        "perform",
        "tmpNotListedInPlain",
        "perform",
        "tmpNotListedInZipWithoutGlob",
        "perform",
        "tmpNotListedInZipWithGlob",
        "perform"
    ],
    "classes": [
        "DirectoryBrowserSupportSEC1807Test"
    ]
}