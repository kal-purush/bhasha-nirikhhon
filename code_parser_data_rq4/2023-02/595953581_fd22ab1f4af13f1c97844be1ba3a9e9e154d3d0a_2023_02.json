{
    "identifiers": [
        "googlemock",
        "test",
        "gmock_test_utils",
        "gmock_test_utils",
        "GetTestExecutablePath",
        "PROGRAM_PATH",
        "PROGRAM_PATH",
        "PROGRAM_PATH",
        "gmock_test_utils",
        "environ",
        "gmock_test_utils",
        "SetEnvVar",
        "SetEnvVar",
        "gmock_test_utils",
        "PREMATURE_EXIT_FILE_ENV_VAR",
        "gmock_test_utils",
        "TestCase",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_EXPECT_CALL",
        "env",
        "environ",
        "exit_code",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_ON_CALL",
        "env",
        "environ",
        "exit_code",
        "assertEquals",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_EXPECT_CALL",
        "env",
        "environ",
        "exit_code",
        "assertEquals",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_ON_CALL",
        "env",
        "environ",
        "exit_code",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_EXPECT_CALL",
        "env",
        "environ",
        "exit_code",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_ON_CALL",
        "env",
        "environ",
        "exit_code",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_WITH_EXPECT_CALL",
        "env",
        "environ",
        "exit_code",
        "assertNotEqual",
        "gmock_test_utils",
        "Subprocess",
        "TEST_MULTIPLE_LEAKS",
        "env",
        "environ",
        "exit_code",
        "gmock_test_utils",
        "Main"
    ],
    "literals": [
        "'gmock_leak_test_'",
        "'--gtest_filter=*ExpectCall*'",
        "'--gtest_filter=*OnCall*'",
        "'--gtest_filter=*MultipleLeaked*'",
        "'--gmock_catch_leaked_mocks=0'",
        "'--gmock_catch_leaked_mocks=0'",
        "'--gmock_catch_leaked_mocks'",
        "'--gmock_catch_leaked_mocks'",
        "'--gmock_catch_leaked_mocks=1'",
        "'--gmock_catch_leaked_mocks'",
        "'__main__'"
    ],
    "variables": [
        "PROGRAM_PATH",
        "TEST_WITH_EXPECT_CALL",
        "TEST_WITH_ON_CALL",
        "TEST_MULTIPLE_LEAKS",
        "environ",
        "SetEnvVar"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "Copyright 2009, Google Inc.",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are",
        "met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "copyright notice, this list of conditions and the following disclaimer",
        "in the documentation and/or other materials provided with the",
        "distribution.",
        "contributors may be used to endorse or promote products derived from",
        "this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
        "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
        "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
        "DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
        "THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
        "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "Tests in this file run a Google-Test-based test program and expect it",
        "to terminate prematurely.  Therefore they are incompatible with",
        "the premature-exit-file protocol by design.  Unset the",
        "premature-exit filepath to prevent Google Test from creating",
        "the file."
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above",
        "* Neither the name of Google Inc. nor the names of its",
        "\"\"\"Tests that leaked mock objects can be caught be Google Mock.\"\"\""
    ],
    "functions": [
        "testCatchesLeakedMockByDefault",
        "testDoesNotCatchLeakedMockWhenDisabled",
        "testCatchesLeakedMockWhenEnabled",
        "testCatchesLeakedMockWhenEnabledWithExplictFlagValue",
        "testCatchesMultipleLeakedMocks"
    ],
    "classes": [
        "GMockLeakTest"
    ]
}