{
    "identifiers": [
        "argparse",
        "json",
        "pathlib",
        "Path",
        "tempfile",
        "TemporaryDirectory",
        "typing",
        "Optional",
        "Tuple",
        "torch",
        "huggingface_hub",
        "create_repo",
        "get_hf_file_metadata",
        "hf_hub_download",
        "hf_hub_url",
        "repo_type_and_id_from_hf_id",
        "upload_folder",
        "huggingface_hub",
        "utils",
        "EntryNotFoundError",
        "ImportError",
        "factory",
        "create_model_from_pretrained",
        "get_model_config",
        "get_tokenizer",
        "tokenizer",
        "HFTokenizer",
        "model",
        "config_path",
        "model_config",
        "Optional",
        "model",
        "visual",
        "image_mean",
        "model",
        "visual",
        "image_std",
        "model_config",
        "preprocess_cfg",
        "config_path",
        "open",
        "f",
        "json",
        "dump",
        "hf_config",
        "f",
        "indent",
        "model",
        "tokenizer",
        "HFTokenizer",
        "model_config",
        "save_directory",
        "weights_filename",
        "config_filename",
        "Path",
        "save_directory",
        "save_directory",
        "mkdir",
        "exist_ok",
        "parents",
        "save_directory",
        "weights_filename",
        "torch",
        "save",
        "model",
        "state_dict",
        "weights_path",
        "tokenizer",
        "save_pretrained",
        "save_directory",
        "save_directory",
        "config_filename",
        "save_config_for_hf",
        "model",
        "config_path",
        "model_config",
        "model_config",
        "model",
        "tokenizer",
        "model_config",
        "Optional",
        "repo_id",
        "commit_message",
        "token",
        "Optional",
        "revision",
        "Optional",
        "create_pr",
        "model_card",
        "Optional",
        "isinstance",
        "tokenizer",
        "HFTokenizer",
        "HFTokenizer",
        "create_repo",
        "repo_id",
        "token",
        "token",
        "exist_ok",
        "repo_type_and_id_from_hf_id",
        "repo_url",
        "repo_owner",
        "repo_name",
        "get_hf_file_metadata",
        "hf_hub_url",
        "repo_id",
        "repo_id",
        "filename",
        "revision",
        "revision",
        "EntryNotFoundError",
        "TemporaryDirectory",
        "tmpdir",
        "save_for_hf",
        "model",
        "tokenizer",
        "tokenizer",
        "model_config",
        "model_config",
        "save_directory",
        "tmpdir",
        "has_readme",
        "model_card",
        "repo_id",
        "split",
        "Path",
        "tmpdir",
        "generate_readme",
        "model_card",
        "model_name",
        "readme_path",
        "write_text",
        "readme_text",
        "upload_folder",
        "repo_id",
        "repo_id",
        "folder_path",
        "tmpdir",
        "revision",
        "revision",
        "create_pr",
        "create_pr",
        "commit_message",
        "commit_message",
        "model_name",
        "pretrained",
        "repo_id",
        "image_mean",
        "Optional",
        "Tuple",
        "image_std",
        "Optional",
        "Tuple",
        "commit_message",
        "token",
        "Optional",
        "revision",
        "Optional",
        "create_pr",
        "model_card",
        "Optional",
        "create_model_from_pretrained",
        "model_name",
        "pretrained",
        "pretrained",
        "image_mean",
        "image_mean",
        "image_std",
        "image_std",
        "get_model_config",
        "model_name",
        "model_config",
        "get_tokenizer",
        "model_name",
        "push_to_hf_hub",
        "model",
        "model",
        "tokenizer",
        "tokenizer",
        "model_config",
        "model_config",
        "repo_id",
        "repo_id",
        "commit_message",
        "commit_message",
        "token",
        "token",
        "revision",
        "revision",
        "create_pr",
        "create_pr",
        "model_card",
        "model_card",
        "model_card",
        "model_name",
        "readme_text",
        "readme_text",
        "readme_text",
        "model_card",
        "get",
        "model_card",
        "model_card",
        "readme_text",
        "readme_text",
        "model_card",
        "lower",
        "readme_text",
        "readme_text",
        "model_name",
        "model_card",
        "readme_text",
        "model_card",
        "model_card",
        "readme_text",
        "k",
        "v",
        "model_card",
        "items",
        "isinstance",
        "v",
        "readme_text",
        "k",
        "vi",
        "v",
        "readme_text",
        "vi",
        "isinstance",
        "v",
        "readme_text",
        "k",
        "ki",
        "vi",
        "v",
        "items",
        "readme_text",
        "ki",
        "vi",
        "readme_text",
        "k",
        "v",
        "model_card",
        "readme_text",
        "readme_text",
        "model_card",
        "readme_text",
        "model_card",
        "readme_text",
        "readme_text",
        "model_card",
        "readme_text",
        "model_card",
        "readme_text",
        "isinstance",
        "model_card",
        "model_card",
        "model_card",
        "c",
        "citations",
        "readme_text",
        "c",
        "readme_text",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "metavar",
        "help",
        "parser",
        "parse_args",
        "args",
        "model",
        "args",
        "pretrained",
        "args",
        "repo_id",
        "push_pretrained_to_hf_hub",
        "args",
        "model",
        "args",
        "pretrained",
        "args",
        "repo_id",
        "image_mean",
        "args",
        "image_mean",
        "image_std",
        "args",
        "image_std",
        "args",
        "model"
    ],
    "literals": [
        "'mean'",
        "'std'",
        "'model_cfg'",
        "'preprocess_cfg'",
        "'w'",
        "'open_clip_pytorch_model.bin'",
        "'open_clip_config.json'",
        "'Add model'",
        "'openai/clip-vit-large-patch14'",
        "f\"{repo_owner}/{repo_name}\"",
        "\"README.md\"",
        "'/'",
        "\"README.md\"",
        "'Add model'",
        "\"---\\n\"",
        "\"tags:\\n- zero-shot-image-classification\\n- clip\\n\"",
        "\"library_tag: open_clip\\n\"",
        "f\"license: {model_card.get('license', 'mit')}\\n\"",
        "'license'",
        "'mit'",
        "'details'",
        "'Dataset'",
        "'details'",
        "'datasets:\\n'",
        "f\"- {model_card['details']['Dataset'].lower()}\\n\"",
        "'details'",
        "'Dataset'",
        "\"---\\n\"",
        "f\"# Model card for {model_name}\\n\"",
        "'description'",
        "f\"\\n{model_card['description']}\\n\"",
        "'description'",
        "'details'",
        "f\"\\n## Model Details\\n\"",
        "'details'",
        "f\"- **{k}:**\\n\"",
        "f\"  - {vi}\\n\"",
        "f\"- **{k}:**\\n\"",
        "f\"  - {ki}: {vi}\\n\"",
        "f\"- **{k}:** {v}\\n\"",
        "'usage'",
        "f\"\\n## Model Usage\\n\"",
        "'usage'",
        "'\\n'",
        "'comparison'",
        "f\"\\n## Model Comparison\\n\"",
        "'comparison'",
        "'\\n'",
        "'citation'",
        "f\"\\n## Citation\\n\"",
        "'citation'",
        "'citation'",
        "'citation'",
        "f\"```bibtex\\n{c}\\n```\\n\"",
        "\"__main__\"",
        "\"Push to Hugging Face Hub\"",
        "\"--model\"",
        "\"Name of the model to use.\"",
        "\"--pretrained\"",
        "\"Use a pretrained CLIP model weights with the specified tag or file path.\"",
        "\"--repo-id\"",
        "\"Destination HF Hub repo-id ie 'organization/model_id'.\"",
        "'--image-mean'",
        "'+'",
        "'MEAN'",
        "'Override default image mean value of dataset'",
        "'--image-std'",
        "'+'",
        "'STD'",
        "'Override default image std deviation of of dataset'",
        "f'Saving model {args.model} with pretrained weights {args.pretrained} to Hugging Face Hub at {args.repo_id}'",
        "f'{args.model} saved.'"
    ],
    "variables": [
        "_has_hf_hub",
        "_has_hf_hub",
        "preprocess_cfg",
        "hf_config",
        "save_directory",
        "weights_path",
        "config_path",
        "tokenizer",
        "repo_url",
        "_",
        "repo_owner",
        "repo_name",
        "repo_id",
        "has_readme",
        "has_readme",
        "model_card",
        "model_name",
        "readme_path",
        "readme_text",
        "model",
        "preprocess_eval",
        "model_config",
        "tokenizer",
        "readme_text",
        "citations",
        "citations",
        "parser",
        "args"
    ],
    "comments": [
        "default CLIP tokenizers use https://huggingface.co/openai/clip-vit-large-patch14",
        "Create repo if it doesn't exist yet",
        "Infer complete repo_id from repo_url",
        "Can be different from the input `repo_id` if repo_owner was implicit",
        "Check if README file already exist in repo",
        "Dump model and push to Hub",
        "Save model weights and config.",
        "Add readme if it does not exist",
        "Upload model and return",
        "FIXME add support to pass model_card json / template from file via cmd line",
        "override image mean/std if trained w/ non defaults"
    ],
    "docstrings": [],
    "functions": [
        "save_config_for_hf",
        "save_for_hf",
        "push_to_hf_hub",
        "push_pretrained_to_hf_hub",
        "generate_readme"
    ],
    "classes": []
}