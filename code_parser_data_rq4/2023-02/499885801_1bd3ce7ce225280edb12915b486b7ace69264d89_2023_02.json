{
    "identifiers": [
        "annotations",
        "inspect",
        "getfullargspec",
        "json",
        "pprint",
        "re",
        "typing",
        "Optional",
        "pydantic",
        "BaseModel",
        "Field",
        "StrictStr",
        "ValidationError",
        "conint",
        "conlist",
        "constr",
        "validator",
        "typing",
        "Any",
        "pydantic",
        "StrictStr",
        "Field",
        "BaseModel",
        "Optional",
        "conlist",
        "conint",
        "strict",
        "le",
        "ge",
        "max_items",
        "min_items",
        "Field",
        "description",
        "Optional",
        "conlist",
        "conint",
        "strict",
        "le",
        "ge",
        "max_items",
        "min_items",
        "Field",
        "description",
        "Optional",
        "constr",
        "strict",
        "max_length",
        "min_length",
        "Field",
        "description",
        "Any",
        "Field",
        "ANYOFCOLOR_ANY_OF_SCHEMAS",
        "validator",
        "cls",
        "v",
        "cls",
        "v",
        "v",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "v",
        "v",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "v",
        "v",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "error_messages",
        "ValueError",
        "join",
        "error_messages",
        "v",
        "classmethod",
        "cls",
        "json_str",
        "AnyOfColor",
        "cls",
        "json",
        "loads",
        "json_str",
        "instance",
        "anyof_schema_1_validator",
        "instance",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "json",
        "loads",
        "json_str",
        "instance",
        "anyof_schema_2_validator",
        "instance",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "json",
        "loads",
        "json_str",
        "instance",
        "anyof_schema_3_validator",
        "instance",
        "ValidationError",
        "e",
        "error_messages",
        "append",
        "e",
        "error_messages",
        "ValueError",
        "join",
        "error_messages",
        "instance",
        "actual_instance",
        "actual_instance",
        "to_json",
        "actual_instance",
        "actual_instance",
        "to_dict",
        "pprint",
        "pformat"
    ],
    "literals": [
        "\"List[int]\"",
        "\"str\"",
        "\"RGB three element array with values 0-255.\"",
        "\"RGBA four element array with values 0-255.\"",
        "\"Hex color string, such as #00FF00.\"",
        "'actual_instance'",
        "\"No match found when deserializing the JSON string into AnyOfColor with anyOf schemas: List[int], str. Details: \"",
        "\", \"",
        "\"No match found when deserializing the JSON string into AnyOfColor with anyOf schemas: List[int], str. Details: \"",
        "\", \"",
        "\"null\""
    ],
    "variables": [
        "ANYOFCOLOR_ANY_OF_SCHEMAS",
        "anyof_schema_1_validator",
        "anyof_schema_2_validator",
        "anyof_schema_3_validator",
        "actual_instance",
        "any_of_schemas",
        "validate_assignment",
        "instance",
        "error_messages",
        "instance",
        "anyof_schema_1_validator",
        "instance",
        "anyof_schema_2_validator",
        "instance",
        "anyof_schema_3_validator",
        "instance",
        "error_messages",
        "instance",
        "anyof_schema_1_validator",
        "instance",
        "actual_instance",
        "instance",
        "anyof_schema_2_validator",
        "instance",
        "actual_instance",
        "instance",
        "anyof_schema_3_validator",
        "instance",
        "actual_instance"
    ],
    "comments": [
        "coding: utf-8",
        "noqa: F401",
        "data type: List[int]",
        "data type: List[int]",
        "data type: str",
        "validate data type: List[int]",
        "validate data type: List[int]",
        "validate data type: str",
        "no match",
        "deserialize data into List[int]",
        "validation",
        "assign value to actual_instance",
        "deserialize data into List[int]",
        "validation",
        "assign value to actual_instance",
        "deserialize data into str",
        "validation",
        "assign value to actual_instance",
        "no match"
    ],
    "docstrings": [
        "\"\"\"\n    OpenAPI Petstore\n\n    This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \\\" \\\\  # noqa: E501\n\n    The version of the OpenAPI document: 1.0.0\n    Generated by: https://openapi-generator.tech\n\"\"\"",
        "\"\"\"NOTE: This class is auto generated by OpenAPI Generator.\n    Ref: https://openapi-generator.tech\n\n    Do not edit the class manually.\n    \"\"\"",
        "\"\"\"Returns the object represented by the json string\"\"\"",
        "\"\"\"Returns the JSON representation of the actual instance\"\"\"",
        "\"\"\"Returns the dict representation of the actual instance\"\"\"",
        "\"\"\"Returns the string representation of the actual instance\"\"\""
    ],
    "functions": [
        "actual_instance_must_validate_anyof",
        "from_json",
        "to_json",
        "to_dict",
        "to_str"
    ],
    "classes": [
        "AnyOfColor",
        "Config"
    ]
}