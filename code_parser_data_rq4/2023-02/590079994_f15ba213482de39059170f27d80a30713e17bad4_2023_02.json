{
    "identifiers": [
        "ansible",
        "module_utils",
        "basic",
        "AnsibleModule",
        "fnmatch",
        "json",
        "os",
        "yaml",
        "results",
        "ContainerConfigHashManager",
        "results",
        "args",
        "_update_hashes",
        "exit_json",
        "results",
        "path",
        "os",
        "path",
        "exists",
        "path",
        "os",
        "remove",
        "path",
        "path",
        "pattern",
        "os",
        "path",
        "exists",
        "path",
        "root",
        "dirnames",
        "filenames",
        "os",
        "walk",
        "path",
        "filename",
        "fnmatch",
        "filenames",
        "pattern",
        "configs",
        "append",
        "os",
        "path",
        "join",
        "root",
        "filename",
        "warn",
        "format",
        "path",
        "configs",
        "path",
        "os",
        "path",
        "exists",
        "path",
        "open",
        "path",
        "f",
        "f",
        "read",
        "warn",
        "format",
        "path",
        "path",
        "config",
        "open",
        "path",
        "f",
        "f",
        "write",
        "json",
        "dumps",
        "config",
        "indent",
        "encode",
        "os",
        "chmod",
        "path",
        "results",
        "config_volume",
        "config_volume",
        "os",
        "path",
        "exists",
        "hashfile",
        "_slurp",
        "hashfile",
        "strip",
        "prefix",
        "volume",
        "volume",
        "prefix",
        "rstrip",
        "os",
        "path",
        "sep",
        "os",
        "path",
        "join",
        "path",
        "startswith",
        "prefix",
        "os",
        "path",
        "dirname",
        "path",
        "dirname",
        "dirname",
        "base_generated",
        "path",
        "dirname",
        "fail_json",
        "msg",
        "format",
        "volume",
        "prefix",
        "config",
        "config_vol_prefix",
        "config",
        "get",
        "AttributeError",
        "fail_json",
        "msg",
        "format",
        "prefix",
        "config",
        "sorted",
        "_get_config_base",
        "prefix",
        "v",
        "split",
        "v",
        "volumes",
        "v",
        "startswith",
        "prefix",
        "_find",
        "CONTAINER_STARTUP_CONFIG",
        "config",
        "configs",
        "os",
        "path",
        "splitext",
        "os",
        "path",
        "basename",
        "config",
        "cname",
        "startswith",
        "_remove_file",
        "config",
        "json",
        "loads",
        "_slurp",
        "config",
        "_match_config_volumes",
        "startup_config_json",
        "_get_config_hash",
        "vol_path",
        "vol_path",
        "config_volumes",
        "config_hashes",
        "startup_config_json",
        "startup_config_json",
        "get",
        "config_hashes",
        "config_hashes",
        "join",
        "config_hashes",
        "config_hash",
        "old_config_hash",
        "debug",
        "format",
        "cname",
        "config_hash",
        "startup_config_json",
        "startup_config_json",
        "config_hash",
        "_update_container_config",
        "config",
        "startup_config_json",
        "AnsibleModule",
        "argument_spec",
        "yaml",
        "safe_load",
        "DOCUMENTATION",
        "supports_check_mode",
        "changed",
        "ContainerConfigHashManager",
        "results",
        "main"
    ],
    "literals": [
        "'metadata_version'",
        "'1.1'",
        "'status'",
        "'preview'",
        "'supported_by'",
        "'community'",
        "'/var/lib/edpm-config/container-startup-config'",
        "'config_vol_prefix'",
        "'*.json'",
        "'{} does not exists'",
        "'r'",
        "'{} was not found.'",
        "''",
        "'wb'",
        "'utf-8'",
        "'changed'",
        "\"%s.md5sum\"",
        "'\\n'",
        "'puppet-generated'",
        "'Could not find config base for: {} '",
        "'with prefix: {}'",
        "'volumes'",
        "'Error fetching volumes. Prefix: '",
        "'{} - Config: {}'",
        "\":\"",
        "''",
        "'hashed-'",
        "'environment'",
        "'environment'",
        "'EDPM_CONFIG_HASH'",
        "''",
        "'-'",
        "'Config change detected for {}, new hash: {}'",
        "'environment'",
        "'environment'",
        "'environment'",
        "'EDPM_CONFIG_HASH'",
        "'options'",
        "'__main__'"
    ],
    "variables": [
        "__metaclass__",
        "ANSIBLE_METADATA",
        "DOCUMENTATION",
        "EXAMPLES",
        "CONTAINER_STARTUP_CONFIG",
        "results",
        "args",
        "config_vol_prefix",
        "configs",
        "hashfile",
        "path",
        "base_generated",
        "dirname",
        "path",
        "prefix",
        "volumes",
        "configs",
        "old_config_hash",
        "cname",
        "startup_config_json",
        "config_volumes",
        "config_hashes",
        "config_hashes",
        "old_config_hash",
        "config_hash",
        "startup_config_json",
        "results"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "Copyright 2019 Red Hat, Inc.",
        "All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "parse args",
        "Set parameters",
        "Update container-startup-config with new config hashes",
        "crawl the volume's path upwards until we find the",
        "volume's base, where the hashed config file resides",
        "TODO(tkajinam): we have to check actual usage of this and update",
        "the base path.",
        "Match the mounted config volumes - we can't just use the",
        "key as e.g \"novacomute\" consumes config-data/nova",
        "Take the opportunity to cleanup old hashed files which",
        "don't exist anymore.",
        "config doesn't need an update"
    ],
    "docstrings": [
        "\"\"\"\n---\nmodule: container_config_hash\nauthor:\n  - \"Emilien Macchi (@EmilienM)\"\nversion_added: '2.9'\nshort_description: Generate config hashes for container startup configs\nnotes: []\ndescription:\n  - Generate config hashes for container startup configs\nrequirements:\n  - None\noptions:\n  check_mode:\n    description:\n      - Ansible check mode is enabled\n    type: bool\n    default: False\n  config_vol_prefix:\n    description:\n      - Config volume prefix\n    type: str\n    default: '/var/lib/config-data'\n  debug:\n    description:\n      - Enable debug\n    type: bool\n    default: False\n  step:\n    description:\n      - Step number\n    default: 6\n    type: int\n\"\"\"",
        "\"\"\"\n- name: Update config hashes for container startup configs\n  container_config_hash:\n\"\"\"",
        "\"\"\"Notes about this module.\n\n    It will generate container config hash that will be consumed by\n    the edpm-container-manage role that is using podman_container module.\n    \"\"\"",
        "\"\"\"Remove a file.\n\n        :param path: string\n        \"\"\"",
        "\"\"\"Returns a list of files in a directory.\n\n        :param path: string\n        :param pattern: string\n        :returns: list\n        \"\"\"",
        "\"\"\"Slurps a file and return its content.\n\n        :param path: string\n        :returns: string\n        \"\"\"",
        "\"\"\"Update a container config.\n\n        :param path: string\n        :param config: string\n        \"\"\"",
        "\"\"\"Returns a config hash from a config_volume.\n\n        :param config_volume: string\n        :returns: string\n        \"\"\"",
        "\"\"\"Returns a config base path for a specific volume.\n\n        :param prefix: string\n        :param volume: string\n        :returns: string\n        \"\"\"",
        "\"\"\"Return a list of volumes that match a config.\n\n        :param config: dict\n        :returns: list\n        \"\"\"",
        "\"\"\"Update container startup config with new config hashes if needed.\n        \"\"\""
    ],
    "functions": [
        "_remove_file",
        "_find",
        "_slurp",
        "_update_container_config",
        "_get_config_hash",
        "_get_config_base",
        "_match_config_volumes",
        "_update_hashes",
        "main"
    ],
    "classes": [
        "ContainerConfigHashManager"
    ]
}