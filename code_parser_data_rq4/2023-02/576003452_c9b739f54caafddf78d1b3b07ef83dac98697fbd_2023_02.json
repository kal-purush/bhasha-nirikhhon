{
    "identifiers": [
        "setTimeout",
        "testNums",
        "num",
        "num",
        "loginUser",
        "email",
        "password",
        "setTimeout",
        "loginUser",
        "user",
        "resolve",
        "reject",
        "setTimeout",
        "resolve",
        "reject",
        "promise",
        "data",
        "data",
        "e",
        "e",
        "adminLoginAirbnb",
        "email",
        "password",
        "resolve",
        "reject",
        "setTimeout",
        "password",
        "email",
        "resolve",
        "reject",
        "getRecensionsForUser",
        "email",
        "resolve",
        "reject",
        "setTimeout",
        "resolve",
        "reject",
        "email",
        "adminLoginAirbnb",
        "user",
        "user",
        "getRecensionsForUser",
        "email",
        "recensions",
        "email",
        "recensions",
        "e",
        "e",
        "e",
        "e",
        "getItem",
        "itemID",
        "resolve",
        "reject",
        "setTimeout",
        "resolve",
        "reject",
        "itemID",
        "getItemDescription",
        "item",
        "resolve",
        "reject",
        "setTimeout",
        "resolve",
        "reject",
        "getItem",
        "getItemDescription",
        "item",
        "item",
        "itemDesc",
        "error",
        "error",
        "showItem"
    ],
    "literals": [
        "Good morning",
        "Hello",
        "Good night!",
        "Started counting",
        "Stopped counting",
        "Started logging a user in",
        "'test@gmail.com'",
        "'test123'",
        "'test.testic'",
        "'Test Testic'",
        "This user is not logged in!",
        "'superadmin'",
        "Hello Admin, you have logged in with email ${email}",
        "Login credentials are wrong. Please try again!",
        "Failed while getting recensions for user with email: ${email}",
        "'admin@gmail.com'",
        "'superadmin'",
        "Recensions for ${email} are:",
        "Samsung Galaxy S22",
        "'black'",
        "'128gb'",
        "Error while fetching the data about item ${itemID}",
        "'Smart Phone'",
        "Smart Phone made by Samsung company from South Korea",
        "Error while fetching item description",
        "'dsaflj12312'"
    ],
    "variables": [
        "testNums",
        "loginUser",
        "user",
        "promise",
        "adminLoginAirbnb",
        "getRecensionsForUser",
        "email",
        "getItem",
        "getItemDescription",
        "item",
        "itemDesc"
    ],
    "comments": [
        "! 1. Sinhrono programiranje",
        "console.log(`Good morning!`);",
        "const myDailyRoutine = () => {",
        "console.log(`Work`);",
        "console.log(`Gym`);",
        "console.log(`Sleep`);",
        "}",
        "myDailyRoutine();",
        "console.log(`Good night!`);",
        "! 2. Asinhrono programiranje",
        "setInterval(); // * jos jedna asinhrona funkcija",
        "! Nije svaka funkcija koja koristi neku call-back funkciju asinhrona!",
        "Primer:",
        "zamislite da smo poslali zahtev nekom serveru umesto ovog setTimeout-a",
        "! undefined",
        "Promise moze biti u 3 stanja:",
        "1. PENDING (stanje cekanja)",
        "2. RESOLVED (uspesno razresen)",
        "3. REJECTED (odbaceno stanje)",
        "! then block hvata vrednost (sabskrajbuje se na vrednost) uspesno razresenog promise-a (rezultata asinhrone operacije)",
        "! catch block hvata gresku koju vraca kao svoj rezultat asinhrona operacija",
        ".finally  // ! finally metoda se poziva bez obzira da li je promise razresen uspesno ili neuspesno (dakle u oba slucaja)",
        "Realni primer:",
        "console.log(user);",
        "! Ovako moze nastati PROMISE HELL -> kada previse ugnjezdenih THEN poziva postoji"
    ],
    "docstrings": [
        "* primer: map, forEach, filter, reduce, itd...",
        "* 1. nacin --> CALL BACK funkcija",
        "* 2. nacin --> Promise je objekat koji ili vraca rezultat uspesno izvrsene asinhrone operacije ili rezultat neuspesne operacije.",
        "* 3. ASYNC - AWAIT",
        "* Ove dve reci su rezervisane reci i koriste se u pisanju asinhronog koda na \"sinhroni nacin\""
    ],
    "functions": [
        "showItem"
    ],
    "classes": []
}