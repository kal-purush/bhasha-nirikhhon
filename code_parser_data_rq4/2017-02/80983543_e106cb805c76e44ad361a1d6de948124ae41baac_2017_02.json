{
    "identifiers": [
        "print_function",
        "icinga2_api",
        "api",
        "json",
        "boto3",
        "id",
        "region",
        "boto3",
        "client",
        "region_name",
        "region",
        "client",
        "get_waiter",
        "waiter",
        "wait",
        "DryRun",
        "InstanceIds",
        "id",
        "boto3",
        "resource",
        "region_name",
        "region",
        "ec2",
        "Instance",
        "id",
        "instance",
        "private_ip_address",
        "context",
        "json",
        "loads",
        "api",
        "Api",
        "message",
        "format",
        "message",
        "get_ec2_ip",
        "message",
        "message",
        "obj",
        "create",
        "uri",
        "data",
        "json",
        "dumps",
        "output",
        "indent",
        "message",
        "format",
        "message",
        "obj",
        "uri",
        "data",
        "json",
        "dumps",
        "output",
        "indent"
    ],
    "literals": [
        "'Loading function'",
        "'ec2'",
        "'instance_running'",
        "\"waiting for ec2 instance state to become 'running'...\"",
        "'ec2 instance state is running'",
        "'ec2'",
        "'Records'",
        "'Sns'",
        "'Message'",
        "'Event'",
        "'autoscaling:EC2_INSTANCE_LAUNCH'",
        "'/v1/objects/hosts/{}'",
        "'EC2InstanceId'",
        "\"templates\"",
        "\"generic-host\"",
        "\"attrs\"",
        "\"address\"",
        "'EC2InstanceId'",
        "'Details'",
        "'Availability Zone'",
        "\"vars.os\"",
        "\"Linux\"",
        "'response'",
        "'data'",
        "'Event'",
        "'autoscaling:EC2_INSTANCE_TERMINATE'",
        "'/v1/objects/hosts/{}'",
        "'EC2InstanceId'",
        "'cascade'",
        "'response'",
        "'data'"
    ],
    "variables": [
        "client",
        "waiter",
        "ec2",
        "instance",
        "message",
        "obj",
        "uri",
        "data",
        "output",
        "uri",
        "data",
        "output"
    ],
    "comments": [
        "!/usr/bin/env python"
    ],
    "docstrings": [
        "\"\"\" \nQuick and dirty program to add and delete AWS autoscaled nodes in Icinga2.\n\nSetup:\n1.Create a AWS lambda function with 'AWSLambdaBasicExecutionRole' and 'AmazonEC2Re\nadOnlyAccess' role\n2.Add api.yml file in same level as this file. With following content\ndefault:\n  host: 52.x.x.x\n  port: 5665\n  user: root\n  password: icinga\n  timeout: 5\n  verbose: false\n  verify: false\n3.For packaging AWS lambda function follow this doc \nhttp://docs.aws.amazon.com/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html\n4.Create a SNS trigger for lambda from autoscaling group\n\"\"\""
    ],
    "functions": [
        "get_ec2_ip",
        "lambda_handler"
    ],
    "classes": []
}