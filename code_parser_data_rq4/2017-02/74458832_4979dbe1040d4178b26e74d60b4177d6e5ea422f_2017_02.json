{
    "identifiers": [
        "unittest",
        "len",
        "_elements",
        "len",
        "_elements",
        "len",
        "_elements",
        "IndexError",
        "_elements",
        "pop",
        "item",
        "item",
        "item",
        "ValueError",
        "item",
        "_elements",
        "append",
        "item",
        "len",
        "_elements",
        "IndexError",
        "_elements",
        "_elements",
        "unittest",
        "TestCase",
        "FastBoolStack",
        "assertEqual",
        "s",
        "size",
        "s",
        "push",
        "assertEqual",
        "s",
        "size",
        "s",
        "pop",
        "assertEqual",
        "s",
        "size",
        "FastBoolStack",
        "assertTrue",
        "s",
        "is_empty",
        "s",
        "push",
        "assertFalse",
        "s",
        "is_empty",
        "FastBoolStack",
        "assertRaises",
        "IndexError",
        "s",
        "peek",
        "FastBoolStack",
        "s",
        "push",
        "assertEqual",
        "s",
        "peek",
        "assertEqual",
        "s",
        "peek",
        "assertEqual",
        "s",
        "size",
        "FastBoolStack",
        "assertRaises",
        "IndexError",
        "s",
        "pop",
        "FastBoolStack",
        "assertRaises",
        "IndexError",
        "s",
        "pop",
        "s",
        "push",
        "assertEqual",
        "s",
        "pop",
        "assertEqual",
        "s",
        "size",
        "FastBoolStack",
        "assertRaises",
        "IndexError",
        "s",
        "pop",
        "s",
        "push",
        "s",
        "push",
        "assertEqual",
        "s",
        "pop",
        "assertEqual",
        "s",
        "size",
        "assertEqual",
        "s",
        "pop",
        "assertEqual",
        "s",
        "size",
        "assertRaises",
        "IndexError",
        "s",
        "pop",
        "FastBoolStack",
        "assertRaises",
        "ValueError",
        "s",
        "push",
        "FastBoolStack",
        "assertEqual",
        "s",
        "size",
        "s",
        "push",
        "assertEqual",
        "s",
        "size",
        "assertEqual",
        "s",
        "peek",
        "s",
        "push",
        "assertEqual",
        "s",
        "size",
        "assertEqual",
        "s",
        "peek",
        "s",
        "push",
        "assertEqual",
        "s",
        "size",
        "assertEqual",
        "s",
        "peek",
        "FastBoolStack",
        "s",
        "push",
        "s",
        "push",
        "assertTrue",
        "s",
        "assertTrue",
        "s",
        "assertTrue",
        "s",
        "unittest",
        "TestCase",
        "FastBoolStack",
        "assertEqual",
        "s",
        "true_count",
        "FastBoolStack",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "FastBoolStack",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "push",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "pop",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "pop",
        "assertEqual",
        "s",
        "true_count",
        "s",
        "pop",
        "assertEqual",
        "s",
        "true_count",
        "assertRaises",
        "IndexError",
        "s",
        "pop"
    ],
    "literals": [
        "\"Stack is empty!\"",
        "\"Invalid object! Expected a bool, found instead \"",
        "\"Stack is empty!\"",
        "\"FastBoolStack:  \"",
        "\" elements=\"",
        "\"TODO IMPLEMENT ME !\"",
        "\"evil string\"",
        "'True'",
        "'False'",
        "'FastBoolStack'"
    ],
    "variables": [
        "_elements",
        "item",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s"
    ],
    "comments": [
        "testing peek is not changing the stack"
    ],
    "docstrings": [
        "\"\"\" A faster bool stack. \"\"\"",
        "\"\"\" Creates a FastBoolStack\n                    \n        \"\"\"",
        "\"\"\" Removes the element at the top of the stack and returns it.\n            \n            If the stack is empty, raises an IndexError\n        \"\"\"",
        "\"\"\" Inserts a boolean item in the stack\n            \n            If item is not a boolean, raises a ValueError\n        \"\"\"",
        "\"\"\"\n            Returns the first element in the stack, without modifying the stack.        \n        \n            If stack is empty, raises an IndexError.\n        \"\"\"",
        "\"\"\" Return the number of elements which are True \n\n            ***   MUST EXECUTE IN O(1)  ***\n        \"\"\""
    ],
    "functions": [
        "size",
        "is_empty",
        "pop",
        "push",
        "peek",
        "__str__",
        "true_count",
        "test_size",
        "test_is_empty",
        "test_peek_empty",
        "test_peek_one",
        "test_pop_empty",
        "test_pop_one",
        "test_pop_two",
        "test_push_non_bool",
        "test_push",
        "test_str",
        "test_true_count_fast_zero",
        "test_true_count_fast_push",
        "test_true_count_fast_pushpop"
    ],
    "classes": [
        "FastBoolStack",
        "FastBoolStackTest",
        "TestTrueCount"
    ]
}