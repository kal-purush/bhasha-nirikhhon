{
    "identifiers": [
        "logging",
        "logging",
        "config",
        "ansible",
        "module_utils",
        "basic",
        "logging",
        "getLogger",
        "project_name",
        "aliases",
        "required",
        "state",
        "choices",
        "labels",
        "deployment_name",
        "aliases",
        "recreate",
        "replace",
        "replicas",
        "containers",
        "strategy",
        "choices",
        "volumes",
        "AnsibleModule",
        "arg_spec",
        "supports_check_mode",
        "check_mode",
        "_debug",
        "key",
        "arg_spec",
        "setattr",
        "key",
        "get",
        "key",
        "debug",
        "LOGGING",
        "LOGGING",
        "logging",
        "config",
        "dictConfig",
        "LOGGING",
        "OriginAPI",
        "api",
        "set_project",
        "project_name",
        "project_switch",
        "actions",
        "append",
        "project_name",
        "check_mode",
        "api",
        "create_project",
        "project_name",
        "state",
        "api",
        "get_resource",
        "deployment_name",
        "deployment",
        "_create_template",
        "actions",
        "append",
        "deployment_name",
        "check_mode",
        "api",
        "create_from_template",
        "template",
        "template",
        "deployment",
        "recreate",
        "actions",
        "append",
        "deployment_name",
        "_create_template",
        "check_mode",
        "api",
        "delete_resource",
        "deployment_name",
        "api",
        "create_from_template",
        "template",
        "template",
        "deployment",
        "replace",
        "_create_template",
        "latestVersion",
        "deployment",
        "actions",
        "append",
        "deployment_name",
        "check_mode",
        "api",
        "replace_from_template",
        "template",
        "template",
        "deployment_name",
        "replace",
        "api",
        "get_resource",
        "deployment_name",
        "state",
        "api",
        "get_resource",
        "deployment_name",
        "actions",
        "append",
        "deployment_name",
        "check_mode",
        "api",
        "delete_resource",
        "deployment_name",
        "changed",
        "check_mode",
        "actions",
        "deployments",
        "deployments",
        "exit_json",
        "results",
        "container",
        "containers",
        "container",
        "get",
        "_env_to_list",
        "container",
        "container",
        "get",
        "_port_to_container_ports",
        "container",
        "apiVersion",
        "kind",
        "metadata",
        "name",
        "deployment_name",
        "spec",
        "template",
        "metadata",
        "spec",
        "containers",
        "containers",
        "replicas",
        "replicas",
        "strategy",
        "strategy",
        "volumes",
        "template",
        "volumes",
        "labels",
        "template",
        "labels",
        "template",
        "labels",
        "template",
        "staticmethod",
        "env_variables",
        "name",
        "value",
        "env_variables",
        "items",
        "result",
        "append",
        "name",
        "name",
        "value",
        "value",
        "result",
        "staticmethod",
        "ports",
        "port",
        "ports",
        "result",
        "append",
        "containerPort",
        "port",
        "result",
        "re",
        "json",
        "target",
        "target",
        "staticmethod",
        "services",
        "service",
        "services",
        "service",
        "get",
        "service",
        "get",
        "multiple",
        "cmd",
        "data",
        "check_rc",
        "error_msg",
        "run_command",
        "cmd",
        "data",
        "data",
        "logger",
        "debug",
        "rc",
        "logger",
        "debug",
        "logger",
        "debug",
        "stdout",
        "logger",
        "debug",
        "logger",
        "debug",
        "stderr",
        "check_rc",
        "rc",
        "fail_json",
        "msg",
        "error_msg",
        "stderr",
        "stderr",
        "stdout",
        "stdout",
        "rc",
        "stdout",
        "stderr",
        "template",
        "template_path",
        "template_path",
        "logger",
        "debug",
        "template_path",
        "template_path",
        "target",
        "template_path",
        "call_api",
        "cmd",
        "check_rc",
        "error_msg",
        "error_msg",
        "stdout",
        "template",
        "logger",
        "debug",
        "json",
        "dumps",
        "template",
        "sort_keys",
        "indent",
        "separators",
        "logger",
        "debug",
        "formatted_template",
        "target",
        "call_api",
        "cmd",
        "data",
        "formatted_template",
        "check_rc",
        "error_msg",
        "stdout",
        "template",
        "template_path",
        "template_path",
        "logger",
        "debug",
        "template_path",
        "target",
        "template_path",
        "template_path",
        "call_api",
        "cmd",
        "check_rc",
        "error_msg",
        "error_msg",
        "stdout",
        "template",
        "logger",
        "debug",
        "json",
        "dumps",
        "template",
        "sort_keys",
        "indent",
        "separators",
        "logger",
        "debug",
        "formatted_template",
        "target",
        "call_api",
        "cmd",
        "data",
        "formatted_template",
        "check_rc",
        "error_msg",
        "stdout",
        "name",
        "target",
        "name",
        "logger",
        "debug",
        "cmd",
        "name",
        "call_api",
        "cmd",
        "check_rc",
        "error_msg",
        "error_msg",
        "stdout",
        "name",
        "target",
        "name",
        "logger",
        "debug",
        "cmd",
        "call_api",
        "cmd",
        "rc",
        "json",
        "loads",
        "stdout",
        "rc",
        "re",
        "search",
        "stderr",
        "name",
        "fail_json",
        "msg",
        "error_msg",
        "stderr",
        "stderr",
        "stdout",
        "stdout",
        "result",
        "context_name",
        "target",
        "context_name",
        "logger",
        "debug",
        "cmd",
        "context_name",
        "call_api",
        "cmd",
        "check_rc",
        "error_msg",
        "error_msg",
        "stdout",
        "project_name",
        "target",
        "project_name",
        "logger",
        "debug",
        "cmd",
        "call_api",
        "cmd",
        "rc",
        "re",
        "search",
        "stderr",
        "project_name",
        "fail_json",
        "msg",
        "error_msg",
        "stderr",
        "stderr",
        "stdout",
        "stdout",
        "result",
        "project_name",
        "target",
        "project_name",
        "logger",
        "debug",
        "cmd",
        "project_name",
        "call_api",
        "cmd",
        "check_rc",
        "error_msg",
        "error_msg",
        "result",
        "deployment_name",
        "target",
        "deployment_name",
        "logger",
        "debug",
        "cmd",
        "call_api",
        "cmd",
        "rc",
        "re",
        "search",
        "stderr",
        "deployment_name",
        "fail_json",
        "msg",
        "error_msg",
        "stderr",
        "stderr",
        "stdout",
        "stdout",
        "stdout",
        "DeploymentManager",
        "manager",
        "exec_module",
        "main"
    ],
    "literals": [
        "'oso_deployment'",
        "'version'",
        "'disable_existing_loggers'",
        "'handlers'",
        "'null'",
        "'level'",
        "'DEBUG'",
        "'class'",
        "'logging.NullHandler'",
        "'file'",
        "'level'",
        "'DEBUG'",
        "'class'",
        "'logging.FileHandler'",
        "'filename'",
        "'ansible-container.log'",
        "'loggers'",
        "'oso_deployment'",
        "'handlers'",
        "'file'",
        "'level'",
        "'INFO'",
        "'container'",
        "'handlers'",
        "'file'",
        "'level'",
        "'INFO'",
        "'compose'",
        "'handlers'",
        "'level'",
        "'INFO'",
        "'docker'",
        "'handlers'",
        "'level'",
        "'INFO'",
        "'str'",
        "'namespace'",
        "'str'",
        "'present'",
        "'absent'",
        "'present'",
        "'dict'",
        "'str'",
        "'name'",
        "'bool'",
        "'bool'",
        "'int'",
        "'list'",
        "'str'",
        "'Rolling'",
        "'Recreate'",
        "'Rolling'",
        "'list'",
        "'loggers'",
        "'container'",
        "'level'",
        "'DEBUG'",
        "'loggers'",
        "'oso_deployment'",
        "'level'",
        "'DEBUG'",
        "\"Create project %s\"",
        "'present'",
        "'dc'",
        "\"Create deployment %s\"",
        "\"Delete deployment %s\"",
        "'dc'",
        "'status'",
        "'status'",
        "'latestVersion'",
        "\"Update deployment %s\"",
        "'-'",
        "'_'",
        "'_deployment'",
        "'dc'",
        "'absent'",
        "'dc'",
        "\"Delete deployment %s\"",
        "'dc'",
        "'changed'",
        "'actions'",
        "'ansible_facts'",
        "'env'",
        "'env'",
        "'env'",
        "'ports'",
        "'ports'",
        "'ports'",
        "\"v1\"",
        "\"DeploymentConfig\"",
        "'spec'",
        "'template'",
        "'spec'",
        "'volumes'",
        "'metadata'",
        "'labels'",
        "'spec'",
        "'template'",
        "'metadata'",
        "'labels'",
        "\"oc\"",
        "'ports'",
        "'volumes_from'",
        "\"Received rc: %s\"",
        "\"stdout:\"",
        "\"stderr:\"",
        "\"Create from template %s\"",
        "\"Error Creating %s\"",
        "\"%s create -f %s\"",
        "\"Create from template:\"",
        "','",
        "':'",
        "\"%s create -f -\"",
        "\"Error creating from template.\"",
        "\"Replace from template %s\"",
        "\"%s replace -f %s\"",
        "\"Error replacing %s\"",
        "\"Replace from template:\"",
        "','",
        "':'",
        "\"%s replace -f -\"",
        "\"Error replacing from template\"",
        "\"%s delete %s/%s\"",
        "\"exec: %s\"",
        "\"Error deleting %s/%s\"",
        "\"%s get %s/%s -o json\"",
        "\"exec: %s\"",
        "'not found'",
        "\"Error getting %s/%s\"",
        "\"%s user-context %s\"",
        "\"exec: %s\"",
        "\"Error switching to context %s\"",
        "\"%s project %s\"",
        "\"exec: %s\"",
        "'does not exist'",
        "\"Error switching to project %s\"",
        "\"%s new-project %s\"",
        "\"exec: %s\"",
        "\"Error creating project %s\"",
        "\"%s deploy %s\"",
        "\"exec: %s\"",
        "'not found'",
        "\"Error getting deployment state %s\"",
        "'__main__'"
    ],
    "variables": [
        "DOCUMENTATION",
        "EXAMPLES",
        "RETURN",
        "logger",
        "LOGGING",
        "arg_spec",
        "project_name",
        "state",
        "labels",
        "deployment_name",
        "replace",
        "replicas",
        "containers",
        "strategy",
        "recreate",
        "volumes",
        "api",
        "check_mode",
        "debug",
        "api",
        "actions",
        "changed",
        "deployments",
        "results",
        "project_switch",
        "deployment",
        "template",
        "changed",
        "changed",
        "template",
        "template",
        "template",
        "changed",
        "deployments",
        "changed",
        "results",
        "results",
        "results",
        "container",
        "container",
        "template",
        "result",
        "result",
        "target",
        "multiple",
        "multiple",
        "multiple",
        "rc",
        "stdout",
        "stderr",
        "error_msg",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "formatted_template",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "cmd",
        "error_msg",
        "rc",
        "stdout",
        "stderr",
        "formatted_template",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "cmd",
        "error_msg",
        "rc",
        "stdout",
        "stderr",
        "result",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "result",
        "error_msg",
        "cmd",
        "error_msg",
        "rc",
        "stdout",
        "stderr",
        "result",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "result",
        "error_msg",
        "result",
        "cmd",
        "error_msg",
        "cmd",
        "rc",
        "stdout",
        "stderr",
        "error_msg",
        "manager"
    ],
    "comments": [
        "!/usr/bin/python",
        "",
        "Copyright 2016 Ansible by Red Hat",
        "",
        "This file is part of ansible-container",
        "",
        "The following will be included by `ansble-container shipit` when cloud modules are copied into the role library path."
    ],
    "docstrings": [
        "'''\n\nmodule: oso_deployment\n\nshort_description: Start, cancel or retry a deployment on a Kubernetes or OpenShift cluster.\n\ndescription:\n  - Start, cancel or retry a deployment on a Kubernetes or OpenShift cluster by setting the C(state) to I(present) or\n    I(absent).\n  - Supports check mode. Use check mode to view a list of actions the module will take.\n\noptions:\n\n'''",
        "'''\n'''",
        "'''\n'''",
        "'''\n        Inspect services and return True if the app supports multiple replica sets.\n\n        :param services: list of docker-compose service dicts\n        :return: bool\n        '''"
    ],
    "functions": [
        "exec_module",
        "_create_template",
        "_env_to_list",
        "_port_to_container_ports",
        "use_multiple_deployments",
        "call_api",
        "create_from_template",
        "replace_from_template",
        "delete_resource",
        "get_resource",
        "set_context",
        "set_project",
        "create_project",
        "get_deployment",
        "main"
    ],
    "classes": [
        "DeploymentManager",
        "OriginAPI"
    ]
}