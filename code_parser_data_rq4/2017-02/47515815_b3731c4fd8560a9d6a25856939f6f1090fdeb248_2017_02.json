{
    "identifiers": [
        "fs",
        "OutputEvent",
        "LogLevel",
        "outputEvent",
        "msg",
        "forceLog",
        "level",
        "LogLevel",
        "msg",
        "msg",
        "write",
        "msg",
        "forceLog",
        "level",
        "msg",
        "log",
        "msg",
        "LogLevel",
        "msg",
        "forceLog",
        "log",
        "msg",
        "forceLog",
        "LogLevel",
        "msg",
        "forceLog",
        "level",
        "LogLevel",
        "msg",
        "msg",
        "_pendingLogQ",
        "_pendingLogQ",
        "_logger",
        "msg",
        "level",
        "forceLog",
        "logLevel",
        "_logger",
        "_logger",
        "logLevel",
        "_pendingLogQ",
        "_pendingLogQ",
        "logQ",
        "item",
        "write",
        "item",
        "item",
        "logCallback",
        "logFilePath",
        "logToConsole",
        "_pendingLogQ",
        "_logger",
        "Logger",
        "logCallback",
        "logFilePath",
        "logToConsole",
        "logFilePath",
        "log",
        "log",
        "logFilePath",
        "d",
        "d",
        "verbose",
        "timestamp",
        "fs",
        "logLevel",
        "logLevel",
        "logLevel",
        "LogLevel",
        "fs",
        "e",
        "e",
        "LogLevel",
        "logCallback",
        "logFilePath",
        "isServer",
        "logCallback",
        "logFilePath",
        "isServer",
        "LogLevel",
        "msg",
        "level",
        "forceLog",
        "level",
        "forceLog",
        "msg",
        "level",
        "level",
        "LogLevel",
        "logFn",
        "trimLastNewline",
        "msg",
        "level",
        "LogLevel",
        "msg",
        "LogLevel",
        "level",
        "msg",
        "msg",
        "msg",
        "level",
        "msg",
        "msg",
        "msg",
        "msg",
        "endsInNewline",
        "msg",
        "msg",
        "LogOutputEvent",
        "msg",
        "level",
        "OutputEvent",
        "msg",
        "level",
        "msg",
        "level",
        "LogLevel"
    ],
    "literals": [
        "'fs'",
        "'./debugSession'",
        "string",
        "string",
        "'\\n'",
        "string",
        "string",
        "string",
        "''",
        "string",
        "Verbose logs are written to:",
        "', '",
        "string",
        "'error'",
        "Error involving log file at path: ${this._logFilePath}. Error: ${e.toString()}",
        "string",
        "string",
        "[${LogLevel[level]}] ${msg}",
        "string",
        "'[...]'",
        "'\\n'",
        "string",
        "'stderr'",
        "'console'",
        "string",
        "string",
        "''"
    ],
    "variables": [
        "_logger",
        "_pendingLogQ",
        "logQ",
        "_pendingLogQ",
        "d",
        "timestamp",
        "logFn",
        "endsInNewline"
    ],
    "comments": [
        "---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------",
        "Logger singleton",
        "[null, undefined] => string",
        "Clear out the queue of pending messages",
        "Re-init, create new global Logger",
        "The path of the log file",
        "Log info that meets minLogLevel is sent to this callback.",
        "Write steam for log file",
        "Open a log file in the specified location. Overwritten on each run.",
        "If an error, prepend with '[Error]'",
        "Truncate long messages, they can hang VS Code"
    ],
    "docstrings": [
        "* `log` adds a newline, this one doesn't",
        "* Set the logger's minimum level to log. Log messages are queued before this is\n * called the first time, because minLogLevel defaults to Error.",
        "* Manages logging, whether to console.log, file, or VS Code console.",
        "* @param forceLog - Writes to the diagnostic logging channel, even if diagnostic logging is not enabled.\n     *      (For messages that appear whether logging is enabled or not.)"
    ],
    "functions": [
        "log",
        "verbose",
        "error",
        "write",
        "setMinLogLevel",
        "init",
        "minLogLevel",
        "minLogLevel",
        "log",
        "sendLog",
        "trimLastNewline"
    ],
    "classes": [
        "Logger",
        "LogOutputEvent"
    ]
}