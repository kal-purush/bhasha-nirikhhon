{
    "identifiers": [
        "jwt",
        "Config",
        "ApiError",
        "ComparePwResult",
        "DbError",
        "ERRORS",
        "LoginResponse",
        "ProviderType",
        "Role",
        "SocoboUser",
        "CryptoUtils",
        "ErrorUtils",
        "UserService",
        "_userService",
        "_cryptoUtils",
        "isEmailLogin",
        "usernameOrEmail",
        "password",
        "resolve",
        "reject",
        "isEmailLogin",
        "usernameOrEmail",
        "user",
        "user",
        "foundUser",
        "password",
        "foundUser",
        "cr",
        "cr",
        "cr",
        "user",
        "resolve",
        "user",
        "error",
        "error",
        "ERRORS",
        "DbError",
        "ERRORS",
        "usernameOrEmail",
        "AuthService",
        "error",
        "error",
        "reject",
        "e",
        "ErrorUtils",
        "error",
        "AuthService",
        "reject",
        "e",
        "isEmailLogin",
        "usernameOrEmail",
        "password",
        "role",
        "resolve",
        "reject",
        "isEmailLogin",
        "usernameOrEmail",
        "user",
        "user",
        "errorOne",
        "errorOne",
        "ERRORS",
        "password",
        "hashedPassword",
        "hashedPassword",
        "usernameOrEmail",
        "role",
        "createdUser",
        "resolve",
        "createdUser",
        "errorTwo",
        "reject",
        "errorTwo",
        "reject",
        "errorOne",
        "isEmailLogin",
        "usernameOrEmail",
        "isEmailLogin",
        "usernameOrEmail",
        "usernameOrEmail",
        "user",
        "resolve",
        "reject",
        "user",
        "ApiError",
        "ERRORS",
        "AuthService",
        "reject",
        "e",
        "resolve",
        "user",
        "compareSuccessful",
        "foundUser",
        "resolve",
        "reject",
        "compareSuccessful",
        "ApiError",
        "ERRORS",
        "AuthService",
        "reject",
        "e",
        "resolve",
        "foundUser",
        "foundUser",
        "resolve",
        "reject",
        "foundUser",
        "foundUser",
        "foundUser",
        "jwt",
        "signingInfo",
        "process",
        "Config",
        "process",
        "Config",
        "process",
        "Config",
        "err",
        "token",
        "err",
        "ApiError",
        "ERRORS",
        "AuthService",
        "err",
        "reject",
        "e",
        "foundUser",
        "resolve",
        "LoginResponse",
        "token",
        "foundUser",
        "user",
        "resolve",
        "reject",
        "user",
        "ApiError",
        "ERRORS",
        "AuthService",
        "reject",
        "e",
        "resolve",
        "hashedPassword",
        "usernameOrEmail",
        "role",
        "resolve",
        "reject",
        "hashedPassword",
        "ApiError",
        "ERRORS",
        "AuthService",
        "reject",
        "e",
        "SocoboUser",
        "usernameOrEmail",
        "usernameOrEmail",
        "hashedPassword",
        "process",
        "Config",
        "role",
        "usernameOrEmail",
        "ProviderType",
        "ProviderType",
        "resolve",
        "user",
        "user",
        "resolve",
        "reject",
        "user",
        "result",
        "user",
        "result",
        "user",
        "resolve",
        "user",
        "error",
        "reject",
        "error"
    ],
    "literals": [
        "\"jsonwebtoken\"",
        "\"./../../config\"",
        "\"./../../models/index\"",
        "\"./../../logic/utils/index\"",
        "\"./user.service\"",
        "string",
        "string",
        "\"login(..)\"",
        "\"login()\"",
        "string",
        "string",
        "string",
        "string",
        "\"provided email or\"",
        "\"username\"",
        "\"_validateUser(..)\"",
        "\"_validateComparePasswords(..)\"",
        "\"_createLoginResult(..)\"",
        "\"register(..)\"",
        "string",
        "string",
        "\"_createNewUser(..)\"",
        "\"@\""
    ],
    "variables": [
        "e",
        "e",
        "e",
        "e",
        "signingInfo",
        "e",
        "e",
        "e",
        "user"
    ],
    "comments": [
        "workaround: DB doesn't return a real SocoboUser Object, simply a POJO",
        "maybe the rewrite of the database layer fix this problem (hopefully)",
        "create JWT"
    ],
    "docstrings": [],
    "functions": [
        "login",
        "register",
        "_getUserFromDatabase",
        "_validateUser",
        "_validateComparePasswords",
        "_createLoginResult",
        "_checkIfUserIsAlreadyRegistered",
        "_createNewUser",
        "_returnSavedUser"
    ],
    "classes": [
        "AuthService"
    ]
}