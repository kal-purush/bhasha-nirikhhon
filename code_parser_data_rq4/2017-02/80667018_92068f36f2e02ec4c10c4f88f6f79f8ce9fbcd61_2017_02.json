{
    "identifiers": [
        "ITerminal",
        "_terminal",
        "brokenBold",
        "brokenBold",
        "checkBoldBroken",
        "brokenBold",
        "start",
        "end",
        "start",
        "end",
        "MAX_REFRESH_FRAME_SKIP",
        "skipFrame",
        "start",
        "end",
        "start",
        "end",
        "i",
        "i",
        "i",
        "start",
        "start",
        "i",
        "i",
        "end",
        "end",
        "i",
        "start",
        "end",
        "start",
        "end",
        "end",
        "start",
        "parent",
        "parent",
        "width",
        "y",
        "start",
        "end",
        "end",
        "y",
        "end",
        "y",
        "row",
        "y",
        "line",
        "row",
        "line",
        "y",
        "y",
        "x",
        "x",
        "attr",
        "i",
        "i",
        "width",
        "i",
        "line",
        "i",
        "data",
        "line",
        "i",
        "ch",
        "line",
        "i",
        "ch_width",
        "line",
        "i",
        "ch_width",
        "i",
        "x",
        "data",
        "data",
        "attr",
        "attr",
        "data",
        "data",
        "bg",
        "data",
        "fg",
        "data",
        "flags",
        "data",
        "flags",
        "FLAGS",
        "brokenBold",
        "classNames",
        "fg",
        "fg",
        "flags",
        "FLAGS",
        "classNames",
        "flags",
        "FLAGS",
        "classNames",
        "flags",
        "FLAGS",
        "bg",
        "fg",
        "fg",
        "bg",
        "flags",
        "fg",
        "fg",
        "flags",
        "FLAGS",
        "classNames",
        "flags",
        "FLAGS",
        "bg",
        "bg",
        "fg",
        "fg",
        "bg",
        "classNames",
        "bg",
        "fg",
        "classNames",
        "fg",
        "classNames",
        "classNames",
        "ch_width",
        "ch",
        "ch",
        "ch",
        "ch_width",
        "attr",
        "data",
        "attr",
        "y",
        "parent",
        "start",
        "end",
        "el",
        "body",
        "el",
        "el",
        "el",
        "el",
        "body",
        "el",
        "w1",
        "w2"
    ],
    "literals": [
        "'./Interfaces'",
        "'check brokenBold: '",
        "'`end` is too large. Most likely a bad CSR.'",
        "''",
        "'</span>'",
        "'<span class=\"reverse-video terminal-cursor\">'",
        "'xterm-bold'",
        "'xterm-underline'",
        "'xterm-blink'",
        "'xterm-hidden'",
        "'xterm-bg-color-'",
        "'xterm-color-'",
        "'<span'",
        "' class=\"'",
        "' '",
        "'\"'",
        "'>'",
        "'<span class=\"xterm-wide-char\">'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "' '",
        "'&nbsp;'",
        "'</span>'",
        "'</span>'",
        "'refresh'",
        "'body'",
        "'span'",
        "'hello world'",
        "'bold'"
    ],
    "variables": [
        "MAX_REFRESH_FRAME_SKIP",
        "FLAGS",
        "brokenBold",
        "skipFrame",
        "start",
        "end",
        "i",
        "x",
        "y",
        "i",
        "line",
        "ch",
        "ch_width",
        "width",
        "data",
        "attr",
        "bg",
        "fg",
        "flags",
        "row",
        "parent",
        "focused",
        "classNames",
        "body",
        "el",
        "w1",
        "w2"
    ],
    "comments": [
        "TODO: Convert flags to number enum",
        "A queue of the rows to be refreshed",
        "Figure out whether boldness affects",
        "the character width of monospace fonts.",
        "TODO: Pull all DOM interactions into Renderer.constructor",
        "Skip MAX_REFRESH_FRAME_SKIP frames if the writeBuffer is non-empty as it",
        "will need to be immediately refreshed anyway. This saves a lot of",
        "rendering time as the viewport DOM does not need to be refreshed, no",
        "scroll events, no layouts, etc.",
        "Just do a full refresh when 5+ refreshes are queued",
        "Get start and end rows that need refreshing",
        "TODO: Use fat arrow functions for callbacks to avoid `self`",
        "If this is a big refresh, remove the terminal rows from the DOM for faster calculations",
        "Continue if the line is not available, this means a resize is currently in progress",
        "Continue if the character is not available, this means a resize is currently in progress",
        "See: XTerm*boldColors",
        "If inverse flag is on, then swap the foreground and background variables.",
        "One-line variable swap in JavaScript: http://stackoverflow.com/a/16201730",
        "Should inverse just be before the",
        "above boldColors effect instead?",
        "if bold is broken, we can't",
        "use it in the terminal."
    ],
    "docstrings": [
        "* The maximum number of refresh frames to skip when the write buffer is non-\n * empty. Note that these frames may be intermingled with frames that are\n * skipped via requestAnimationFrame's mechanism.",
        "* Flags used to render terminal text properly",
        "* Queues a refresh between two rows (inclusive), to be done on next animation\n   * frame.\n   * @param {number} start The start row.\n   * @param {number} end The end row.",
        "* Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.",
        "* Refreshes (re-renders) terminal content within two rows (inclusive)\n   *\n   * Rendering Engine:\n   *\n   * In the screen buffer, each character is stored as a an array with a character\n   * and a 32-bit integer:\n   *   - First value: a utf-16 character.\n   *   - Second value:\n   *   - Next 9 bits: background color (0-511).\n   *   - Next 9 bits: foreground color (0-511).\n   *   - Next 14 bits: a mask for misc. flags:\n   *     - 1=bold\n   *     - 2=underline\n   *     - 4=blink\n   *     - 8=inverse\n   *     - 16=invisible\n   *\n   * @param {number} start The row to start from (between 0 and terminal's height terminal - 1)\n   * @param {number} end The row to end at (between fromRow and terminal's height terminal - 1)",
        "* Weird situation: Invert flag used black foreground and white background results\n               * in invalid background color, positioned at the 256 index of the 256 terminal\n               * color map. Pin the colors manually in such a case.\n               *\n               * Source: https://github.com/sourcelair/xterm.js/issues/57"
    ],
    "functions": [
        "queueRefresh",
        "_refreshLoop",
        "_refresh",
        "checkBoldBroken"
    ],
    "classes": [
        "Renderer"
    ]
}