{
    "identifiers": [
        "dataclasses",
        "dataclass",
        "Enum",
        "auto",
        "loguru",
        "logger",
        "pandas",
        "pd",
        "logger",
        "info",
        "pd",
        "read_excel",
        "FILE_PATH",
        "sheet_name",
        "_",
        "row",
        "df",
        "iterrows",
        "row",
        "row",
        "logger",
        "info",
        "GROUP_CHANGES",
        "dataclass",
        "GROUP_CHANGES",
        "identifier",
        "KeyError",
        "MACRO_GROUPS",
        "identifier",
        "macro_group",
        "expected",
        "logger",
        "error",
        "full_name",
        "macro_group",
        "expected",
        "name",
        "surname",
        "companion_name",
        "companion_surname",
        "companion_name",
        "companion_surname",
        "Enum",
        "text",
        "text",
        "title",
        "strip",
        "text",
        "text",
        "Fields",
        "Name",
        "value",
        "format_name",
        "Fields",
        "Surname",
        "value",
        "format_name",
        "Fields",
        "Identifier",
        "value",
        "format_identifier",
        "Fields",
        "CompanionName",
        "value",
        "format_name",
        "Fields",
        "CompanionSurname",
        "value",
        "format_name",
        "file_path",
        "logger",
        "info",
        "file_path",
        "pd",
        "read_excel",
        "file_path",
        "converters",
        "CONVERTERS",
        "logger",
        "info",
        "len",
        "_df",
        "field",
        "value",
        "field",
        "Fields",
        "_",
        "row",
        "_df",
        "iterrows",
        "row",
        "col",
        "pd",
        "notna",
        "row",
        "col",
        "col",
        "col_names",
        "Student",
        "args",
        "row",
        "student",
        "full_name",
        "logger",
        "warning",
        "row",
        "student",
        "full_name",
        "student",
        "full_name",
        "student",
        "student",
        "values",
        "student",
        "companion_full_name",
        "companion_full_name",
        "companion_full_name",
        "KeyError",
        "logger",
        "error",
        "companion_full_name",
        "student",
        "full_name",
        "companion",
        "companion_full_name",
        "student",
        "full_name",
        "logger",
        "error",
        "student",
        "full_name",
        "companion_full_name",
        "companion",
        "companion_full_name",
        "student",
        "macro_group",
        "companion",
        "macro_group",
        "logger",
        "error",
        "student",
        "full_name",
        "student",
        "macro_group",
        "companion",
        "full_name",
        "companion",
        "macro_group",
        "DataBase",
        "db",
        "check_companions"
    ],
    "literals": [
        "'lab1_20221009_edit.xlsx'",
        "'A1'",
        "'B1'",
        "'A2'",
        "'B2'",
        "'Reading in group changes...'",
        "'Cambi'",
        "'Matricola'",
        "'Gruppo'",
        "f'Done: {GROUP_CHANGES}'",
        "f'Group for {self.full_name()} is {self.macro_group} instead of {expected}'",
        "f'{self.name} {self.surname}'",
        "f'{self.companion_name} {self.companion_surname}'",
        "'Nome'",
        "'Cognome'",
        "'Numero di matricola'",
        "'Email'",
        "'Macro-gruppo'",
        "'Nome compagno'",
        "'Cognome compagno'",
        "'Note'",
        "f'Reading input data from {file_path}...'",
        "f'Done, {len(_df)} row(s) found.'",
        "'Name'",
        "f'Possible name mismach: {row[\"Name\"]} vs. {student.full_name()}'",
        "\"Name\"",
        "f'Cannot find {companion_full_name} to match with {student.full_name()}'",
        "f'Companion mismatch {student.full_name()} -> {companion_full_name} -> {companion.companion_full_name()}'",
        "f'Group mismatch: {student.full_name()} {student.macro_group} <-> {companion.full_name()} {companion.macro_group}'",
        "'__main__'",
        "'lab1_20221009_edit.xlsx'"
    ],
    "variables": [
        "FILE_PATH",
        "MACRO_GROUPS",
        "GROUP_CHANGES",
        "df",
        "GROUP_CHANGES",
        "name",
        "surname",
        "identifier",
        "email",
        "macro_group",
        "companion_name",
        "companion_surname",
        "notes",
        "expected",
        "expected",
        "Name",
        "Surname",
        "Identifier",
        "Email",
        "Group",
        "CompanionName",
        "CompanionSurname",
        "Notes",
        "format_name",
        "format_identifier",
        "CONVERTERS",
        "_df",
        "col_names",
        "args",
        "student",
        "companion_full_name",
        "companion",
        "db"
    ],
    "comments": [
        "Copyright (C) 2022, luca.baldini@pi.infn.it",
        "",
        "This program is free software; you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation; either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License along",
        "with this program; if not, write to the Free Software Foundation, Inc.,",
        "51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.",
        "Simple lambda functions for reading in the cell content.",
        "Converters for the columns."
    ],
    "docstrings": [
        "\"\"\"Small class encapsulating a student.\n    \"\"\"",
        "\"\"\"Post initialization.\n        \"\"\"",
        "\"\"\"Return the full name.\n        \"\"\"",
        "\"\"\"Return the full name of the companion (if available).\n        \"\"\"",
        "\"\"\"The glorious student database.\n\n    ID\n    Start time\n    Completion time\n    Email\n    Name\n    Nome\n    Cognome\n    Numero di matricola\n    Macro-gruppo\n    Nome del/della compagno/a di gruppo (opzionale)\n    Cognome del/della compagno/a di gruppo (opzionale)\n    Eventuali note o richieste specifiche (opzionale)\n    \"\"\"",
        "\"\"\"Nested enums for the column names.\n        \"\"\"",
        "\"\"\"Constructor.\n        \"\"\"",
        "\"\"\"\n        \"\"\""
    ],
    "functions": [
        "__post_init__",
        "full_name",
        "companion_full_name",
        "check_companions"
    ],
    "classes": [
        "Student",
        "DataBase",
        "Fields"
    ]
}