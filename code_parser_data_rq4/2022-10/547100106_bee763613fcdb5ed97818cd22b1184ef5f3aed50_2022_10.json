{
    "identifiers": [
        "java",
        "io",
        "mcl",
        "bn254",
        "loadLibrary",
        "argv",
        "BN254",
        "SystemInit",
        "aa",
        "ab",
        "ba",
        "bb",
        "g1",
        "g2",
        "aa",
        "ab",
        "ba",
        "bb",
        "g1",
        "g2",
        "assertBool",
        "g1",
        "isValid",
        "assertBool",
        "g2",
        "isValid",
        "r",
        "BN254",
        "GetParamR",
        "r",
        "t",
        "g1",
        "t",
        "mul",
        "r",
        "assertBool",
        "t",
        "isZero",
        "t",
        "g2",
        "t",
        "mul",
        "r",
        "assertBool",
        "t",
        "isZero",
        "a",
        "b",
        "c",
        "a",
        "c",
        "add",
        "b",
        "Pa",
        "g1",
        "Pa",
        "mul",
        "a",
        "Pb",
        "g1",
        "Pb",
        "mul",
        "b",
        "Pc",
        "g1",
        "Pc",
        "mul",
        "c",
        "Pa",
        "add",
        "Pb",
        "assertEqual",
        "Pc",
        "e",
        "e",
        "pairing",
        "g2",
        "g1",
        "e",
        "t",
        "e",
        "t",
        "power",
        "r",
        "assertEqual",
        "t",
        "g2a",
        "g2",
        "g2a",
        "mul",
        "a",
        "ea1",
        "ea1",
        "pairing",
        "g2a",
        "g1",
        "ea2",
        "e",
        "ea2",
        "power",
        "a",
        "assertEqual",
        "ea1",
        "ea2",
        "q1",
        "g1",
        "q1",
        "mul",
        "assertBool",
        "q1",
        "isValid",
        "e1",
        "e2",
        "e1",
        "pairing",
        "g2",
        "g1",
        "e2",
        "pairing",
        "g2",
        "q1",
        "q2",
        "g1",
        "q2",
        "add",
        "q1",
        "e",
        "pairing",
        "g2",
        "q2",
        "e1",
        "mul",
        "e2",
        "assertEqual",
        "e",
        "e1",
        "e",
        "e",
        "msg",
        "b",
        "b",
        "msg",
        "msg",
        "msg",
        "lhs",
        "rhs",
        "lhs",
        "equals",
        "rhs",
        "msg",
        "msg",
        "lhs",
        "rhs"
    ],
    "literals": [
        "\"bn254_if_wrap\"",
        "\"12723517038133731887338407189719511622662176727675373276651903807414909099441\"",
        "\"4168783608814932154536427934509895782246573715297911553964171371032945126671\"",
        "\"13891744915211034074451795021214165905772212241412891944830863846330766296736\"",
        "\"7937318970632701341203597196594272556916396164729705624521405069090520231616\"",
        "\"g1=\"",
        "\"g2=\"",
        "\"g1 is on EC\"",
        "\"g2 is on twist EC\"",
        "\"r=\"",
        "\"orgder of g1 == r\"",
        "\"order of g2 == r\"",
        "\"123456789012345\"",
        "\"998752342342342342424242421\"",
        "\"check g1 * c = g1 * a + g1 * b\"",
        "\"e=\"",
        "\"order of e == r\"",
        "\"e(g2 * a, g1) = e(g2, g1)^a\"",
        "\"q1 is on EC\"",
        "\"e = e1 * e2\"",
        "\"unknown exception :\"",
        "\"OK : \"",
        "\"NG : \"",
        "\"OK : \"",
        "\"NG : \"",
        "\", lhs = \"",
        "\", rhs = \""
    ],
    "variables": [],
    "comments": [
        "scalar-multiplication sample",
        "calc e : G2 x G1 -> G3 pairing",
        "e = e(g2, g1)",
        "ea2 = e^a",
        "e1 = e(g2, g1)",
        "e2 = e(g2, q1)",
        "e = e(g2, q2)"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "assertBool",
        "assertEqual"
    ],
    "classes": [
        "BN254Test"
    ]
}