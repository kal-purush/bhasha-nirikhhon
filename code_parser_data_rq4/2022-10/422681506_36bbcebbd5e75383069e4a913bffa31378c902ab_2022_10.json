{
    "identifiers": [
        "os",
        "numpy",
        "matplotlib",
        "scipy",
        "orhelper",
        "random",
        "math",
        "num",
        "filename",
        "orhelper",
        "OpenRocketInstance",
        "instance",
        "orhelper",
        "Helper",
        "instance",
        "orh",
        "load_doc",
        "os",
        "path",
        "abspath",
        "doc",
        "getSimulation",
        "sim",
        "getOptions",
        "p",
        "num",
        "p",
        "opts",
        "setWindSpeedAverage",
        "random",
        "gauss",
        "opts",
        "setWindDirection",
        "math",
        "radians",
        "random",
        "gauss",
        "opts",
        "setWindTurbulenceIntensity",
        "orh",
        "run_simulation",
        "sim",
        "orh",
        "get_events",
        "sim",
        "events",
        "orhelper",
        "FlightEvent",
        "APOGEE",
        "events",
        "orhelper",
        "FlightEvent",
        "GROUND_HIT",
        "orh",
        "get_timeseries",
        "sim",
        "orhelper",
        "FlightDataType",
        "TYPE_TIME",
        "orhelper",
        "FlightDataType",
        "TYPE_ALTITUDE",
        "orhelper",
        "FlightDataType",
        "TYPE_POSITION_XY",
        "data",
        "tup",
        "tup",
        "data",
        "orhelper",
        "FlightDataType",
        "TYPE_TIME",
        "tup",
        "Apogeetime",
        "data",
        "orhelper",
        "FlightDataType",
        "TYPE_ALTITUDE",
        "Apogeeindex",
        "tup",
        "tup",
        "data",
        "orhelper",
        "FlightDataType",
        "TYPE_TIME",
        "tup",
        "Groundhittime",
        "data",
        "orhelper",
        "FlightDataType",
        "TYPE_POSITION_XY",
        "Enddriftindex",
        "ApogeeDrift",
        "Apogee",
        "Drift",
        "apodrift",
        "Apogee",
        "append",
        "Apogeeval",
        "apodrift",
        "Drift",
        "append",
        "Enddriftval",
        "open",
        "filename",
        "format",
        "opts",
        "getWindSpeedAverage",
        "format",
        "opts",
        "getWindDirection",
        "format",
        "Apogeeval",
        "format",
        "Enddriftval",
        "f",
        "write",
        "formattedwindspeedaverage",
        "f",
        "write",
        "formattedwinddirection",
        "f",
        "write",
        "formattedapo",
        "f",
        "write",
        "formatteddrift",
        "f",
        "write",
        "append",
        "apodrift",
        "f",
        "close",
        "numpy",
        "mean",
        "Apogee",
        "numpy",
        "std",
        "Apogee",
        "numpy",
        "mean",
        "Drift",
        "numpy",
        "std",
        "Drift",
        "len",
        "Apogee",
        "Drift",
        "Apogee",
        "Drift",
        "ApogeeDriftList",
        "open",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "vals",
        "add_simulationsapogeedrift",
        "vals",
        "print_statsapogeedrift"
    ],
    "literals": [
        "'<FILENAME>'",
        "'Simulation Number'",
        "'a'",
        "\"{:.4f}\"",
        "\"{:.4f}\"",
        "\"{:.4f}\"",
        "\"{:.4f}\"",
        "'          '",
        "'          '",
        "'          '",
        "'          '",
        "'\\n'",
        "'Rocket Apogee %3.2f m +- %3.2f m, drift %3.2f m +- %3.4f m. Based on %i simulations.'",
        "'ApogeeDriftMonteCarlo.txt'",
        "'w'",
        "'Wind Speed          '",
        "'Wind Direction          '",
        "'Apogee          '",
        "'Drift          '",
        "'\\n'",
        "'ApogeeDriftMonteCarloFine.txt'"
    ],
    "variables": [
        "Apogee",
        "Drift",
        "orh",
        "doc",
        "sim",
        "opts",
        "events",
        "Apogeetime",
        "Groundhittime",
        "data",
        "Apogeeindex",
        "Apogeeval",
        "Enddriftindex",
        "Enddriftval",
        "apodrift",
        "f",
        "formattedwindspeedaverage",
        "formattedwinddirection",
        "formattedapo",
        "formatteddrift",
        "Apogee",
        "Drift",
        "vals",
        "f"
    ],
    "comments": [
        "Copyright 2022, Ishaan Alidina.",
        "Uses orhelper, and also inspired by the MonteCarlo.py example from orhelper. This can be found at https://github.com/SilentSys/orhelper/.",
        "Requires OpenRocket-15.03 as well, as can be found here: https://openrocket.info/.",
        "Javatips.net is also very helpful: https://www.javatips.net/api/openrocket-master/core/src/net/sf/openrocket/rocketcomponent/Streamer.java.",
        "Applying principles from the orhelper pages (particularly MonteCarlo.py) in correlation with my own abilities and openrocket files produced as part of ICLR.",
        "Stack Overflow also occasionally used along with Python documentation and W3schools.",
        "Setting up I/O through Python and doing parallelisation and visualisation through MATLAB (Shrey Bohra doing).",
        "Class incorporating the apogee and drift data into one data object.",
        "Initialisation",
        "Function to add a simulation for apogee and drift calculations.",
        "Creating a new orhelper instance.",
        "Opening the OpenRocket folder (USE OWN FILE NAME)",
        "Get the simulation as necessary, 0 for first simulation in OpenRocket list of save simulations.",
        "Getting the simulation parameters.",
        "rocketparam = sim.getRocket() #Update: Getting rocket parameters from the simulation.",
        "Simulation updates.",
        "opts.setLaunchRodDirection(math.radians(random.gauss(5,10))) -> Not including, 28/06/2022, as LENNY cannot be modified",
        "Updating the parameters using a random Gaussian distribution.",
        "Included on 28/06/2022 based on launch conditions at SARA.",
        "Include Wind Direction and Turbulence.",
        "opts.setWindSpeedDeviation(0.2)",
        "Turbulence and Wind Direction deviation are dependent on each other, so only one should be used.",
        "opts.setTurbulenceIntensity(random.gauss(0.05,0.04)) --> Need to try and figure out what the listener or simulation options list is. Where can I find it? 24062022 174620",
        "Include streamer component drag coefficient worst case scenario (change to 0.3) -> Perturbation of 0.3 +- 0.05 -> Even with C_D = 1.2, 2826 m",
        "Include overall mass?",
        "streamer = orh.get_component_named(rocketparam,'Streamer (Apogee) âœ“') #Cannot modify, not in OR Java.",
        "streamer.setComponentCD(0.3 * random.gauss(1.0, 0.33))",
        "Running the simulation.",
        "Getting events and determining apogee and ground hit times.",
        "Starttime = events[orhelper.FlightEvent.LAUNCH]",
        "Helped by Akshat Tripathi for this particular application of tuples.",
        "Startdriftindex = [tup[0] for tup in enumerate(data[orhelper.FlightDataType.TYPE_TIME]) if tup[1] == Starttime][0] -> Did not need to use this, as the start drift val and index were unnecessary.",
        "Startdriftval = 0 #data[orhelper.FlightDataType.TYPE_POSITION_XY][Startdriftindex + 1]",
        "Creating the apogee drift data object to save the data.",
        "- Startdriftval)",
        "print(self.LRCstabilities,self.maxstabilities)",
        "Outputting to file for data analysis and checking.",
        "- Startdriftval)",
        "Function to output the final statistics of apogee and drift (taken and modified from orhelper/MonteCarlo.py).",
        "Class of apogee and drift data.",
        "Running the function."
    ],
    "docstrings": [],
    "functions": [
        "add_simulationsapogeedrift",
        "print_statsapogeedrift"
    ],
    "classes": [
        "ApogeeDriftList",
        "ApogeeDrift"
    ]
}