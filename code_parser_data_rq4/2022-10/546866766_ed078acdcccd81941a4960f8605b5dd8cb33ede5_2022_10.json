{
    "identifiers": [
        "turtle",
        "random",
        "turtle",
        "Screen",
        "wn",
        "bgcolor",
        "turtle",
        "Turtle",
        "bounce",
        "color",
        "bounce",
        "speed",
        "bounce",
        "shape",
        "turtle",
        "Turtle",
        "bound",
        "color",
        "bound",
        "speed",
        "bound",
        "width",
        "bound",
        "ht",
        "bound",
        "up",
        "bound",
        "bound",
        "down",
        "i",
        "bound",
        "fd",
        "bound",
        "lt",
        "bounce",
        "up",
        "bounce",
        "fd",
        "random",
        "randint",
        "bounce",
        "down",
        "bounce",
        "lt",
        "random",
        "randrange",
        "go",
        "bounce",
        "xcor",
        "bounce",
        "xcor",
        "bounce",
        "ycor",
        "bounce",
        "ycor",
        "bounce",
        "fd",
        "bounce",
        "xcor",
        "bounce",
        "xcor",
        "bounce",
        "ycor",
        "bounce",
        "ycor",
        "bounce",
        "right",
        "perfect_turn",
        "bounce",
        "fd"
    ],
    "literals": [
        "\"Black\"",
        "\"lightgreen\"",
        "\"circle\"",
        "\"White\"",
        "\"yes\"",
        "\"yes\""
    ],
    "variables": [
        "wn",
        "bounce",
        "bound",
        "go"
    ],
    "comments": [
        "Bounce.py",
        "Josh Bowen",
        "4/8/2021",
        "In the future I want to make any bounds and make it go somewhere and record",
        "where it goes and make that a part of the while loop later on...you would need",
        "a lot of and's and items from the list of postitions turtle.bound",
        "need to make a function that takes bounce.heading and some how finds",
        "the angle between it and the bounds and then returns the amount needed",
        "to make an acurate bounce... for now we will just increment by 10",
        "this needs to choose right or left somehow"
    ],
    "docstrings": [],
    "functions": [
        "perfect_turn"
    ],
    "classes": []
}