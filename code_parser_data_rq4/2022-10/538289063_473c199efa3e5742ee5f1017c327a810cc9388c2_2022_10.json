{
    "identifiers": [
        "random",
        "randint",
        "aEstrela",
        "astar",
        "genetico",
        "genetico",
        "state",
        "State",
        "todosParaTodos",
        "todosParaTodos",
        "maxRows",
        "maxColumns",
        "goal",
        "initialState",
        "maze",
        "vitimas",
        "name",
        "mesh",
        "maxRows",
        "maxColumns",
        "initialState",
        "initialState",
        "maze",
        "vitimas",
        "goal",
        "walls",
        "state",
        "state",
        "toState",
        "toState",
        "col",
        "toState",
        "row",
        "toState",
        "col",
        "maxColumns",
        "toState",
        "row",
        "maxRows",
        "len",
        "walls",
        "toState",
        "row",
        "toState",
        "col",
        "walls",
        "toState",
        "row",
        "currentState",
        "row",
        "toState",
        "col",
        "currentState",
        "col",
        "delta_row",
        "delta_col",
        "currentState",
        "row",
        "delta_row",
        "currentState",
        "col",
        "walls",
        "currentState",
        "row",
        "currentState",
        "col",
        "delta_col",
        "walls",
        "len",
        "actions",
        "actions",
        "pop",
        "State",
        "currentState",
        "row",
        "MOVIMENTS",
        "movDirection",
        "currentState",
        "col",
        "MOVIMENTS",
        "movDirection",
        "movDirection",
        "state",
        "getNextPosition",
        "result",
        "isPossibleToMove",
        "result",
        "getNextPosition",
        "result",
        "todosParaTodos",
        "maze",
        "vitimas",
        "tempoMax",
        "getCaminhos",
        "genetico",
        "caminhos",
        "vitimas",
        "tempoMax",
        "posToActions",
        "i",
        "len",
        "path",
        "path",
        "i",
        "path",
        "i",
        "path",
        "i",
        "path",
        "i",
        "chave",
        "valor",
        "MOVIMENTS",
        "items",
        "action",
        "valor",
        "actions",
        "append",
        "chave",
        "previousAction",
        "move",
        "nextMove",
        "goalPos",
        "State",
        "nextMove",
        "nextMove"
    ],
    "literals": [
        "\"N\"",
        "\"S\"",
        "\"L\"",
        "\"O\"",
        "\"NE\"",
        "\"NO\"",
        "\"SE\"",
        "\"SO\"",
        "\"N\"",
        "\"S\"",
        "\"L\"",
        "\"O\"",
        "\"NE\"",
        "\"NO\"",
        "\"SE\"",
        "\"SO\"",
        "\"N\"",
        "\"S\"",
        "\"S\"",
        "\"N\"",
        "\"L\"",
        "\"O\"",
        "\"O\"",
        "\"L\"",
        "\"NE\"",
        "\"SO\"",
        "\"NO\"",
        "\"SE\"",
        "\"SE\"",
        "\"NO\"",
        "\"SO\"",
        "\"NE\"",
        "\"none\"",
        "\"square\""
    ],
    "variables": [
        "ACTIONS",
        "MOVIMENTS",
        "ANTI_ACTIONS",
        "walls",
        "maxRows",
        "maxColumns",
        "initialState",
        "currentState",
        "maze",
        "vitimas",
        "goalPos",
        "path",
        "tempo",
        "actions",
        "currentState",
        "delta_row",
        "delta_col",
        "movDirection",
        "state",
        "result",
        "result",
        "caminhos",
        "path",
        "actions",
        "action",
        "nextMove"
    ],
    "comments": [
        "row = 0",
        "col = 0",
        "for i in walls:",
        "col = 0",
        "for j in i:",
        "if j == 1:",
        "self.walls.append((row, col))",
        "col += 1",
        "row += 1",
        "vai para fora do labirinto",
        "vai para cima de uma parede",
        "vai na diagonal? Caso sim, nao pode ter paredes acima & dir. ou acima & esq. ou abaixo & dir. ou abaixo & esq.",
        "o movimento eh na diagonal",
        "Tenta encontrar um movimento possivel dentro do tabuleiro"
    ],
    "docstrings": [
        "\"\"\"\n        Define as variaveis necessárias para a utilização do explorer plan por um unico agente.\n        \"\"\"",
        "\"\"\"Verifica se eh possivel ir da posicao atual para o estado (lin, col) considerando \n        a posicao das paredes do labirinto e movimentos na diagonal\n        @param toState: instancia da classe State - um par (lin, col) - que aqui indica a posicao futura \n        @return: True quando é possivel ir do estado atual para o estado futuro \"\"\"",
        "\"\"\" Sorteia uma direcao e calcula a posicao futura do agente \n         @return: tupla contendo a acao (direcao) e o estado futuro resultante da movimentacao \"\"\"",
        "\"\"\" Escolhe o proximo movimento de forma aleatoria. \n        Eh a acao que vai ser executada pelo agente. \n        @return: tupla contendo a acao (direcao) e uma instância da classe State que representa a posição esperada após a execução\n        \"\"\"",
        "\"\"\"\n        Método utilizado para o polimorfismo dos planos\n\n        Retorna o movimento e o estado do plano (False = nao concluido, True = Concluido)\n        \"\"\""
    ],
    "functions": [
        "setWalls",
        "updateCurrentState",
        "isPossibleToMove",
        "getNextPosition",
        "chooseAction",
        "getCaminhos",
        "selectVitimas",
        "posToActions",
        "run_valid_action",
        "run_invalid_action"
    ],
    "classes": [
        "SalvadorPlan"
    ]
}