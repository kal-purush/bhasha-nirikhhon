{
    "identifiers": [
        "pytorch_lightning",
        "pl",
        "pytorch_lightning",
        "utilities",
        "rank_zero_info",
        "torch",
        "typing",
        "Optional",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "Dataset",
        "numpy",
        "np",
        "os",
        "math",
        "h5py",
        "util",
        "pl",
        "LightningDataModule",
        "data_path",
        "batch_size",
        "num_workers",
        "data_path",
        "batch_size",
        "num_workers",
        "DataList",
        "data_path",
        "len",
        "data_list",
        "data_list",
        "SimulationDataset",
        "data_path",
        "data_list",
        "data_list",
        "computeStandardizeTransformation",
        "DataLoader",
        "sim_dataset",
        "batch_size",
        "batch_size",
        "num_workers",
        "num_workers",
        "persistent_workers",
        "shuffle",
        "DataLoader",
        "sim_dataset",
        "batch_size",
        "batch_size",
        "num_workers",
        "num_workers",
        "persistent_workers",
        "idx",
        "sim_dataset",
        "idx",
        "data_item",
        "q",
        "idx",
        "sim_dataset",
        "idx",
        "data_item",
        "x",
        "os",
        "path",
        "join",
        "sim_dataset",
        "data_path",
        "os",
        "path",
        "exists",
        "preprocessed_file",
        "gQ",
        "len",
        "sim_dataset",
        "np",
        "vstack",
        "qs",
        "np",
        "mean",
        "qs",
        "axis",
        "np",
        "std",
        "qs",
        "axis",
        "i",
        "len",
        "std_q",
        "std_q",
        "i",
        "std_q",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "save",
        "f",
        "mean_q",
        "np",
        "save",
        "f",
        "std_q",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "load",
        "f",
        "np",
        "load",
        "f",
        "os",
        "path",
        "join",
        "sim_dataset",
        "data_path",
        "os",
        "path",
        "exists",
        "preprocessed_file",
        "gX",
        "len",
        "sim_dataset",
        "np",
        "vstack",
        "xs",
        "np",
        "mean",
        "xs",
        "axis",
        "np",
        "std",
        "xs",
        "axis",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "save",
        "f",
        "mean_x",
        "np",
        "save",
        "f",
        "std_x",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "load",
        "f",
        "np",
        "load",
        "f",
        "os",
        "path",
        "join",
        "sim_dataset",
        "data_path",
        "os",
        "path",
        "exists",
        "preprocessed_file",
        "gX",
        "len",
        "sim_dataset",
        "np",
        "vstack",
        "xs",
        "np",
        "min",
        "xs",
        "axis",
        "np",
        "max",
        "xs",
        "axis",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "save",
        "f",
        "min_x",
        "np",
        "save",
        "f",
        "max_x",
        "open",
        "preprocessed_file",
        "f",
        "np",
        "load",
        "f",
        "np",
        "load",
        "f",
        "computeMeanAndStdQ",
        "computeMeanAndStdX",
        "computeMinAndMaxX",
        "mean_q",
        "std_q",
        "mean_x",
        "std_x",
        "min_x",
        "max_x",
        "torch",
        "unsqueeze",
        "sim_dataset",
        "sim_dataset",
        "shape",
        "sim_dataset",
        "shape",
        "i_dim",
        "o_dim",
        "npoints",
        "data_path",
        "data_format",
        "example_input_array",
        "Dataset",
        "data_path",
        "data_list",
        "data_list",
        "data_path",
        "len",
        "data_list",
        "idx",
        "data_list",
        "idx",
        "SimulationState",
        "filename",
        "sim_data",
        "x",
        "sim_data",
        "q",
        "sim_data",
        "t",
        "torch",
        "from_numpy",
        "x",
        "torch",
        "from_numpy",
        "q",
        "torch",
        "cat",
        "q",
        "x",
        "sim_data",
        "filename",
        "x",
        "q",
        "encoder_input",
        "time",
        "hasattr",
        "sim_data",
        "torch",
        "from_numpy",
        "sim_data",
        "faces",
        "faces",
        "data_item",
        "filename",
        "readfile",
        "input_x",
        "input_q",
        "input_t",
        "label",
        "filename",
        "readfile",
        "h5py",
        "File",
        "filename",
        "h5_file",
        "h5_file",
        "np",
        "array",
        "x",
        "T",
        "h5_file",
        "np",
        "array",
        "q",
        "T",
        "h5_file",
        "h5_file",
        "h5_file",
        "np",
        "array",
        "f_tensor_col_major",
        "T",
        "f_tensor_col_major",
        "reshape",
        "transpose",
        "h5_file",
        "h5_file",
        "faces",
        "T",
        "input_x",
        "exit",
        "input_q",
        "exit",
        "input_t",
        "exit",
        "input_x",
        "input_q",
        "input_t",
        "label",
        "filename",
        "filename",
        "filename",
        "filename",
        "os",
        "path",
        "dirname",
        "filename",
        "os",
        "umask",
        "os",
        "makedirs",
        "dirname",
        "exist_ok",
        "h5py",
        "File",
        "filename",
        "h5_file",
        "h5_file",
        "create_dataset",
        "data",
        "x",
        "T",
        "h5_file",
        "create_dataset",
        "data",
        "q",
        "T",
        "t",
        "astype",
        "np",
        "float64",
        "h5_file",
        "create_dataset",
        "data",
        "t",
        "label",
        "label",
        "reshape",
        "label",
        "astype",
        "np",
        "float64",
        "h5_file",
        "create_dataset",
        "data",
        "label",
        "hasattr",
        "os",
        "path",
        "splitext",
        "filename",
        "filename_obj",
        "ObjLoader",
        "q",
        "faces",
        "obj_loader",
        "filename_obj",
        "fileName",
        "fileName",
        "open",
        "fileName",
        "line",
        "f",
        "line",
        "line",
        "find",
        "line",
        "find",
        "index1",
        "line",
        "find",
        "index2",
        "line",
        "index1",
        "index2",
        "line",
        "index2",
        "index3",
        "line",
        "index3",
        "vertices",
        "append",
        "vertex",
        "line",
        "line",
        "replace",
        "find",
        "item",
        "count",
        "find",
        "i",
        "face",
        "append",
        "i",
        "face",
        "append",
        "i",
        "find",
        "i",
        "find",
        "i",
        "faces",
        "append",
        "face",
        "f",
        "close",
        "IOError",
        "filename",
        "open",
        "filename",
        "f",
        "write",
        "f",
        "write",
        "vertex",
        "vertices",
        "vertex",
        "vertex",
        "vertex",
        "f",
        "write",
        "line",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "face",
        "faces",
        "face",
        "face",
        "face",
        "f",
        "write",
        "line",
        "f",
        "write",
        "f",
        "close"
    ],
    "literals": [
        "\"path/to/dir\"",
        "'q'",
        "'x'",
        "'meanandstd_q.npy'",
        "'wb'",
        "'rb'",
        "'meanandstd_x.npy'",
        "'wb'",
        "'rb'",
        "'minandmax_x.npy'",
        "'wb'",
        "'rb'",
        "'mean_q'",
        "'std_q'",
        "'mean_x'",
        "'std_x'",
        "'min_x'",
        "'max_x'",
        "'encoder_input'",
        "'x'",
        "'q'",
        "'i_dim'",
        "'o_dim'",
        "'npoints'",
        "'data_path'",
        "'filename'",
        "'x'",
        "'q'",
        "'encoder_input'",
        "'time'",
        "'faces'",
        "'faces'",
        "'r'",
        "'/x'",
        "'/q'",
        "'/time'",
        "'/f_tensor'",
        "'/f_tensor'",
        "'/faces'",
        "'/faces'",
        "'must provide a x if not reading from file'",
        "'must provide a q if not reading from file'",
        "'must provide a t if not reading from file'",
        "'writng sim state: '",
        "'w'",
        "\"x\"",
        "\"q\"",
        "\"time\"",
        "\"label\"",
        "'faces'",
        "'.obj'",
        "'writng sim state obj: '",
        "\"v \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"f\"",
        "\"//\"",
        "\"/\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\".obj file not found.\"",
        "\"w\"",
        "\"g \"",
        "\"\\n\"",
        "\"v \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\\n\"",
        "\"g \"",
        "\"\\n\"",
        "\"f \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\\n\""
    ],
    "variables": [
        "data_path",
        "batch_size",
        "num_workers",
        "data_list",
        "sim_dataset",
        "data_item",
        "q",
        "data_item",
        "x",
        "preprocessed_file",
        "qs",
        "qs",
        "mean_q",
        "std_q",
        "i",
        "mean_q",
        "std_q",
        "preprocessed_file",
        "xs",
        "xs",
        "mean_x",
        "std_x",
        "mean_x",
        "std_x",
        "preprocessed_file",
        "xs",
        "xs",
        "min_x",
        "max_x",
        "min_x",
        "max_x",
        "example_input_array",
        "_",
        "i_dim",
        "npoints",
        "o_dim",
        "data_format",
        "data_list",
        "data_path",
        "filename",
        "sim_data",
        "x",
        "q",
        "time",
        "x",
        "q",
        "encoder_input",
        "data_item",
        "faces",
        "data_item",
        "filename",
        "x",
        "x",
        "q",
        "q",
        "t",
        "f_tensor_col_major",
        "f_tensor_col_major",
        "f_tensor",
        "faces",
        "faces",
        "x",
        "q",
        "t",
        "label",
        "filename",
        "dirname",
        "dset",
        "dset",
        "t",
        "dset",
        "label",
        "label",
        "dset",
        "filename_obj",
        "obj_loader",
        "obj_loader",
        "vertices",
        "obj_loader",
        "faces",
        "vertices",
        "faces",
        "f",
        "index1",
        "index2",
        "index3",
        "vertex",
        "i",
        "face",
        "i",
        "f",
        "line",
        "line"
    ],
    "comments": [
        "self.store_dataParams()",
        "process stage with zero std",
        "write",
        "write",
        "write",
        "from: https://inareous.github.io/posts/opening-obj-using-py",
        "also checkout: https://pypi.org/project/PyWavefront/",
        "",
        "",
        ""
    ],
    "docstrings": [
        "'''\nSimulation DataModule\n'''",
        "'''\nSimulation Dataset\n'''",
        "'''\nSimulation State\n'''",
        "'''\nObj Loader\n'''"
    ],
    "functions": [
        "train_dataloader",
        "test_dataloader",
        "gQ",
        "gX",
        "computeMeanAndStdQ",
        "computeMeanAndStdX",
        "computeMinAndMaxX",
        "computeStandardizeTransformation",
        "get_dataParams",
        "get_dataFormat",
        "__len__",
        "__getitem__",
        "write_to_file"
    ],
    "classes": [
        "SimulationDataModule",
        "SimulationDataset",
        "SimulationState",
        "ObjLoader"
    ]
}