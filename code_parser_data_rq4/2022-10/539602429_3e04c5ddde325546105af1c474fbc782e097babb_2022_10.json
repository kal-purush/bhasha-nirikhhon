{
    "identifiers": [
        "re",
        "typing",
        "Iterator",
        "checker",
        "stac",
        "checker",
        "node",
        "gee_classes",
        "gee_classes",
        "COLOR_NAMES",
        "stac",
        "NodeCheck",
        "classmethod",
        "cls",
        "node",
        "stac",
        "Node",
        "Iterator",
        "stac",
        "Issue",
        "SUMMARIES",
        "node",
        "stac",
        "node",
        "stac",
        "SUMMARIES",
        "isinstance",
        "summaries",
        "BANDS",
        "summaries",
        "summaries",
        "BANDS",
        "isinstance",
        "eo_bands",
        "eo_band",
        "eo_bands",
        "isinstance",
        "eo_band",
        "NAME",
        "eo_band",
        "isinstance",
        "eo_band",
        "NAME",
        "eo_band",
        "NAME",
        "eo_band",
        "eo_bands",
        "VISUALIZATIONS",
        "summaries",
        "summaries",
        "VISUALIZATIONS",
        "isinstance",
        "visualizations",
        "visualization",
        "visualizations",
        "isinstance",
        "visualization",
        "visualization",
        "IMAGE_VISUALIZATION",
        "visualization",
        "node",
        "gee_type",
        "stac",
        "GeeType",
        "IMAGE",
        "node",
        "gee_type",
        "stac",
        "GeeType",
        "IMAGE_COLLECTION",
        "cls",
        "new_issue",
        "node",
        "node",
        "gee_type",
        "IMAGE_VISUALIZATION",
        "visualization",
        "IMAGE_VISUALIZATION",
        "isinstance",
        "image_visualization",
        "cls",
        "new_issue",
        "node",
        "IMAGE_VISUALIZATION",
        "visualization",
        "get",
        "DISPLAY_NAME",
        "BAND_VIS",
        "image_visualization",
        "cls",
        "new_issue",
        "node",
        "BAND_VIS",
        "display_name",
        "image_visualization",
        "BAND_VIS",
        "isinstance",
        "band_viz",
        "cls",
        "new_issue",
        "node",
        "display_name",
        "BAND_VIS",
        "VIS_BANDS",
        "band_viz",
        "cls",
        "new_issue",
        "node",
        "display_name",
        "BAND_VIS",
        "VIS_BANDS",
        "band_viz",
        "VIS_BANDS",
        "isinstance",
        "bands",
        "cls",
        "new_issue",
        "node",
        "display_name",
        "VIS_BANDS",
        "len",
        "bands",
        "num_bands",
        "cls",
        "new_issue",
        "node",
        "band_name",
        "bands",
        "isinstance",
        "band_name",
        "cls",
        "new_issue",
        "node",
        "band_name",
        "valid_names",
        "cls",
        "new_issue",
        "node",
        "band_name",
        "BANDS",
        "band_viz",
        "get",
        "MIN",
        "len",
        "min_list",
        "min_list",
        "MIN",
        "band_viz",
        "isinstance",
        "band_viz",
        "MIN",
        "cls",
        "new_issue",
        "node",
        "VIS_BANDS",
        "min_list_size",
        "min_list_size",
        "num_bands",
        "cls",
        "new_issue",
        "node",
        "MIN",
        "cls",
        "new_issue",
        "node",
        "MIN",
        "value",
        "min_list",
        "isinstance",
        "value",
        "cls",
        "new_issue",
        "node",
        "MIN",
        "band_viz",
        "get",
        "MAX",
        "len",
        "max_list",
        "max_list",
        "MAX",
        "band_viz",
        "isinstance",
        "band_viz",
        "MAX",
        "cls",
        "new_issue",
        "node",
        "VIS_BANDS",
        "max_list_size",
        "max_list_size",
        "num_bands",
        "cls",
        "new_issue",
        "node",
        "MAX",
        "cls",
        "new_issue",
        "node",
        "MAX",
        "value",
        "max_list",
        "isinstance",
        "value",
        "cls",
        "new_issue",
        "node",
        "MAX",
        "min_list_ok",
        "max_list_ok",
        "min_list_size",
        "max_list_size",
        "cls",
        "new_issue",
        "node",
        "i",
        "min_list_size",
        "min_list",
        "i",
        "max_list",
        "i",
        "min_val",
        "max_val",
        "cls",
        "new_issue",
        "node",
        "min_val",
        "max_val",
        "GAMMA",
        "band_viz",
        "band_viz",
        "GAMMA",
        "len",
        "gamma_list",
        "isinstance",
        "gamma_list",
        "cls",
        "new_issue",
        "node",
        "GAMMA",
        "gamma_list_size",
        "cls",
        "new_issue",
        "node",
        "GAMMA",
        "gamma_list",
        "isinstance",
        "gamma",
        "cls",
        "new_issue",
        "node",
        "GAMMA",
        "gamma",
        "GAMMA_MIN",
        "gamma",
        "GAMMA_MAX",
        "cls",
        "new_issue",
        "node",
        "GAMMA",
        "GAMMA_MIN",
        "GAMMA_MAX",
        "GAIN",
        "band_viz",
        "band_viz",
        "GAIN",
        "len",
        "gain_list",
        "isinstance",
        "gain_list",
        "cls",
        "new_issue",
        "node",
        "GAIN",
        "gain_list_size",
        "cls",
        "new_issue",
        "node",
        "GAIN",
        "gain_list_size",
        "num_bands",
        "cls",
        "new_issue",
        "node",
        "GAIN",
        "gain",
        "gain_list",
        "isinstance",
        "gain",
        "cls",
        "new_issue",
        "node",
        "GAIN",
        "gain",
        "GAIN_MIN",
        "gain",
        "GAIN_MAX",
        "cls",
        "new_issue",
        "node",
        "GAIN",
        "GAIN_MIN",
        "GAIN_MAX",
        "BIAS",
        "band_viz",
        "band_viz",
        "BIAS",
        "len",
        "bias_list",
        "isinstance",
        "bias_list",
        "cls",
        "new_issue",
        "node",
        "BIAS",
        "bias_list_size",
        "cls",
        "new_issue",
        "node",
        "BIAS",
        "bias_list",
        "isinstance",
        "bias",
        "cls",
        "new_issue",
        "node",
        "BIAS",
        "PALETTE",
        "band_viz",
        "num_bands",
        "cls",
        "new_issue",
        "node",
        "PALETTE",
        "band_viz",
        "PALETTE",
        "len",
        "palette_list",
        "palette_list_size",
        "MAX_PALETTE_SIZE",
        "cls",
        "new_issue",
        "node",
        "PALETTE",
        "MAX_PALETTE_SIZE",
        "color",
        "palette_list",
        "re",
        "fullmatch",
        "color",
        "color",
        "COLOR_NAMES",
        "cls",
        "new_issue",
        "node",
        "color"
    ],
    "literals": [
        "'summaries'",
        "'gee:visualizations'",
        "'eo:bands'",
        "'display_name'",
        "'image_visualization'",
        "'name'",
        "'band_vis'",
        "'bands'",
        "'min'",
        "'max'",
        "'bias'",
        "'gamma'",
        "'gain'",
        "'palette'",
        "'visualizations_image'",
        "f'{node.gee_type} must have a {IMAGE_VISUALIZATION}'",
        "f'{IMAGE_VISUALIZATION} must be a dict'",
        "'Unknown'",
        "f'Missing {BAND_VIS} in {display_name}'",
        "f'{display_name} {BAND_VIS} must be a dict'",
        "f'{display_name} {BAND_VIS} must have {VIS_BANDS}'",
        "f'{display_name} {VIS_BANDS} must be a list'",
        "'There must be 1 or 3 bands'",
        "'band not a str'",
        "f'band {band_name} not in {BANDS}'",
        "f'{VIS_BANDS} must be a list'",
        "f'{MIN} must be length 1'",
        "f'{MIN} must be length 1 or 3'",
        "f'{MIN} values must be numbers'",
        "f'{VIS_BANDS} must be a list'",
        "f'{MAX} must be length 1'",
        "f'{MAX} must be length 1 or 3'",
        "f'{MAX} values must be numbers'",
        "'min and max lists must be the same size'",
        "f'min > max: {min_val} > {max_val}'",
        "f'{GAMMA} must be a list'",
        "f'{GAMMA} must be length 1'",
        "f'{GAMMA} value must be a number'",
        "f'{GAMMA} must be in the range of {GAMMA_MIN}..{GAMMA_MAX}'",
        "f'{GAIN} must be a list'",
        "f'{GAIN} must be length 1 or 3'",
        "f'{GAIN} must be length 1 for 1 band'",
        "f'{GAIN} value must be a number'",
        "f'{GAIN} must be in the range of {GAIN_MIN}..{GAIN_MAX}'",
        "f'{BIAS} must be a list'",
        "f'{BIAS} must be length 1'",
        "f'{BIAS} value must be a number'",
        "f'{PALETTE} can only have one band'",
        "f'{PALETTE} size should be <= {MAX_PALETTE_SIZE}'",
        "r'#?[0-9a-fA-F]{6}([0-9a-fA-F]{2})?'",
        "'color must be a 6 (or 8) character hex or '",
        "f'color name - found \"{color}\"'"
    ],
    "variables": [
        "COLOR_NAMES",
        "SUMMARIES",
        "VISUALIZATIONS",
        "BANDS",
        "DISPLAY_NAME",
        "IMAGE_VISUALIZATION",
        "NAME",
        "BAND_VIS",
        "VIS_BANDS",
        "MIN",
        "MAX",
        "BIAS",
        "GAMMA",
        "GAIN",
        "PALETTE",
        "GAMMA_MIN",
        "GAMMA_MAX",
        "GAIN_MIN",
        "GAIN_MAX",
        "BIAS_MIN",
        "BIAS_MAX",
        "MAX_PALETTE_SIZE",
        "name",
        "summaries",
        "eo_bands",
        "valid_names",
        "visualizations",
        "image_visualization",
        "display_name",
        "band_viz",
        "bands",
        "num_bands",
        "min_list",
        "min_list_size",
        "min_list_ok",
        "min_list_ok",
        "min_list_ok",
        "max_list",
        "max_list_size",
        "max_list_ok",
        "max_list_ok",
        "max_list_ok",
        "min_val",
        "max_val",
        "gamma_list",
        "gamma_list_size",
        "gamma",
        "gain_list",
        "gain_list_size",
        "bias_list",
        "bias_list_size",
        "bias",
        "palette_list",
        "palette_list_size"
    ],
    "comments": [
        "TODO(schwehr): This should be much smaller for non-categorical data.  Maybe 40",
        "Length 1 or 3",
        "TODO(schwehr): Consider refactoring this type of check.",
        "TODO(schwehr): Evaluate adding the option to have 3 bias values",
        "TODO(schwehr): Warn if more than 20 colors for non-categorical data"
    ],
    "docstrings": [
        "\"\"\"Check visualizations for images and image_collections.\n\nSTAC Catalog entries for ee.Image and ee.ImageCollection assets must have\nan image_visualization section.  The section is used to render the collection\nin the Earth Engine Explorer and to create dataset example scripts.\n\nThe requirement and components for this section:\n\n- It must contain one band_vis and nothing else\n- The band_viz has the detail on how to render images as rrggbb pixels:\n  - It must have a list of bands that is either length 1 or 3 with band name\n    strings. Band names may be reused\n  - The following fields that modify how the values in the image are used. They\n    must be specified as a list of values even if there is only one value\n    - min: The value to map to 0 for the color channel\n    - max: The value to map to 255 for the color channel\n    - gamma: The gamma correction (power law) to apply to the values\n      https://en.wikipedia.org/wiki/Gamma_correction\n    - gain: Number by which to multiply each pixel value\n    - bias: Number to add to each value (after multiplying by gain)\n    - palette: A list of CSS style strings. There may be from 1 to 250 colors.\n      CSS '#rgb' colors are not allowed, e.g. '0f0'.  A leading '#' is currently\n      allowed, but is discouraged. Each color entry is one of:\n      - 'rrggbb': 6 character hex\n      - 'rrggbbaa': 8 character hex with transparency (alpha)\n      - 'color': A supported color name, e.g. 'red'\n\nFor min, max, and gain, they can be specified with a list of one number that\napplies to all band. Alternatively for 3-band visualizations, they can be\nspecified explicitly for each band to allow for different values. For min\nand max, these lists must be the same size.\n\nvisualizations_image.py delegates to visualization.py for all the checks that\nlead up to the image_visualization section.\n\nJsonnet examples:\n\nimage_visualization: {band_vis: {bands: ['BPS']},\n\nimage_visualization: {band_vis: {bands: ['B2', 'B1', 'B7']},\n\nimage_visualization: {\n  band_vis: {\n    min: [1.2, 5.8, -9],\n    max: [1000, 500, 30]]\n    bands: ['B1', 'B2', 'B3']}}\n\nimage_visualization: {\n  band_vis: {\n    gamma: [1.2],\n    gain: [600.0],\n    bands: ['B3', 'B2', 'B1']}}\n\nimage_visualization: {\n  band_vis: {\n    gain: [0.1],\n    bias: [-1400.0],\n    bands: ['LST_Day_1km']}},\n\nimage_visualization: {\n  band_vis: {\n    palette: ['000088', 'ffffff'],\n    bands: ['NDSI']}},\n\nimage_visualization: {\n  band_vis: {\n    min: [1.0],\n    max: [60.0],\n    palette: ['red', 'orange', 'green'],\n    bands: ['rh98']}},\n\"\"\"",
        "\"\"\"Checks visualizations for images and image_collections.\"\"\""
    ],
    "functions": [
        "run"
    ],
    "classes": [
        "Check"
    ]
}