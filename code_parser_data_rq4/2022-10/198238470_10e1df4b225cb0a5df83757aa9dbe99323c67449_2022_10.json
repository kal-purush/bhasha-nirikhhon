{
    "identifiers": [
        "com",
        "mercedesbenz",
        "sechub",
        "domain",
        "scan",
        "product",
        "pds",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "mockito",
        "Mockito",
        "java",
        "io",
        "InputStream",
        "java",
        "util",
        "UUID",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "com",
        "mercedesbenz",
        "sechub",
        "adapter",
        "pds",
        "PDSAdapterConfigData",
        "com",
        "mercedesbenz",
        "sechub",
        "adapter",
        "pds",
        "PDSCodeScanConfigImpl",
        "com",
        "mercedesbenz",
        "sechub",
        "commons",
        "model",
        "ScanType",
        "com",
        "mercedesbenz",
        "sechub",
        "domain",
        "scan",
        "SecHubExecutionContext",
        "com",
        "mercedesbenz",
        "sechub",
        "domain",
        "scan",
        "product",
        "ProductExecutorData",
        "com",
        "mercedesbenz",
        "sechub",
        "sharedkernel",
        "configuration",
        "SecHubConfiguration",
        "binariesInputStream",
        "sourceInputStream",
        "configSupport",
        "contentProvider",
        "installSetup",
        "productExecutorData",
        "context",
        "configuration",
        "jobUUID",
        "BeforeEach",
        "binariesInputStream",
        "mock",
        "sourceInputStream",
        "mock",
        "configSupport",
        "mock",
        "contentProvider",
        "mock",
        "installSetup",
        "mock",
        "productExecutorData",
        "mock",
        "context",
        "mock",
        "configuration",
        "jobUUID",
        "UUID",
        "randomUUID",
        "when",
        "productExecutorData",
        "getSechubExecutionContext",
        "thenReturn",
        "context",
        "when",
        "context",
        "getConfiguration",
        "thenReturn",
        "configuration",
        "when",
        "configSupport",
        "getProductBaseURL",
        "thenReturn",
        "when",
        "configSupport",
        "getPDSProductIdentifier",
        "thenReturn",
        "when",
        "context",
        "getSechubJobUUID",
        "thenReturn",
        "jobUUID",
        "Test",
        "when",
        "contentProvider",
        "isBinaryRequired",
        "thenReturn",
        "when",
        "contentProvider",
        "getBinariesTarFileSizeOrNull",
        "thenReturn",
        "when",
        "contentProvider",
        "getBinariesTarFileUploadChecksumOrNull",
        "thenReturn",
        "strategy",
        "PDSAdapterConfigurationStrategy",
        "builder",
        "setBinariesTarFileInputStreamOrNull",
        "binariesInputStream",
        "setConfigSupport",
        "configSupport",
        "setContentProvider",
        "contentProvider",
        "setInstallSetup",
        "installSetup",
        "setProductExecutorData",
        "productExecutorData",
        "setScanType",
        "ScanType",
        "CODE_SCAN",
        "build",
        "result",
        "PDSCodeScanConfigImpl",
        "builder",
        "configure",
        "strategy",
        "setProjectId",
        "setUser",
        "setPasswordOrAPIToken",
        "build",
        "assertNotNull",
        "result",
        "pdsAdapterConfigData",
        "result",
        "getPDSAdapterConfigData",
        "assertEquals",
        "pdsAdapterConfigData",
        "getBinariesTarFileSizeInBytesOrNull",
        "assertEquals",
        "binariesInputStream",
        "pdsAdapterConfigData",
        "getBinaryTarFileInputStreamOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getBinariesTarFileChecksumOrNull",
        "assertTrue",
        "pdsAdapterConfigData",
        "isBinaryTarFileRequired",
        "assertEquals",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileInputStreamOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileSizeInBytesOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileChecksumOrNull",
        "assertFalse",
        "pdsAdapterConfigData",
        "isSourceCodeZipFileRequired",
        "Test",
        "when",
        "contentProvider",
        "isSourceRequired",
        "thenReturn",
        "when",
        "contentProvider",
        "getSourceZipFileSizeOrNull",
        "thenReturn",
        "when",
        "contentProvider",
        "getSourceZipFileUploadChecksumOrNull",
        "thenReturn",
        "strategy",
        "PDSAdapterConfigurationStrategy",
        "builder",
        "setConfigSupport",
        "configSupport",
        "setContentProvider",
        "contentProvider",
        "setInstallSetup",
        "installSetup",
        "setProductExecutorData",
        "productExecutorData",
        "setScanType",
        "ScanType",
        "CODE_SCAN",
        "setSourceCodeZipFileInputStreamOrNull",
        "sourceInputStream",
        "build",
        "result",
        "PDSCodeScanConfigImpl",
        "builder",
        "configure",
        "strategy",
        "setProjectId",
        "setUser",
        "setPasswordOrAPIToken",
        "build",
        "assertNotNull",
        "result",
        "pdsAdapterConfigData",
        "result",
        "getPDSAdapterConfigData",
        "assertEquals",
        "sourceInputStream",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileInputStreamOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileSizeInBytesOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getSourceCodeZipFileChecksumOrNull",
        "assertTrue",
        "pdsAdapterConfigData",
        "isSourceCodeZipFileRequired",
        "assertEquals",
        "pdsAdapterConfigData",
        "getBinaryTarFileInputStreamOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getBinariesTarFileChecksumOrNull",
        "assertEquals",
        "pdsAdapterConfigData",
        "getBinariesTarFileSizeInBytesOrNull",
        "assertFalse",
        "pdsAdapterConfigData",
        "isBinaryTarFileRequired"
    ],
    "literals": [
        "\"https://example.com\"",
        "\"PDS_PRODUCT1\"",
        "\"08154711\"",
        "\"checksum1\"",
        "\"p1\"",
        "\"user\"",
        "\"pwd\"",
        "\"checksum1\"",
        "\"1234\"",
        "\"checksum2\"",
        "\"p1\"",
        "\"user\"",
        "\"pwd\"",
        "\"checksum2\""
    ],
    "variables": [
        "binariesInputStream",
        "sourceInputStream",
        "configSupport",
        "contentProvider",
        "installSetup",
        "productExecutorData",
        "context",
        "configuration",
        "jobUUID"
    ],
    "comments": [
        "this is the execution of the strategy, which we want to test",
        "this is the execution of the strategy, which we want to test"
    ],
    "docstrings": [
        "@formatter:off",
        "prepare",
        "execute",
        "test",
        "@formatter:on",
        "@formatter:off",
        "prepare",
        "execute",
        "test",
        "@formatter:on"
    ],
    "functions": [
        "beforeEach",
        "builder_can_create_a_binaries_codescan_setup_by_using_providers",
        "builder_can_create_a_sources_codescan_setup_by_using_providers"
    ],
    "classes": [
        "PDSAdapterConfigurationStrategyBulderTest"
    ]
}