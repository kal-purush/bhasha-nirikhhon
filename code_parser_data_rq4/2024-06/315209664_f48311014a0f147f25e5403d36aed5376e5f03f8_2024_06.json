{
    "identifiers": [
        "gql",
        "useMutation",
        "useQuery",
        "useApp",
        "hasura",
        "CardProducts",
        "MemberShipCards",
        "useMembershipCardByAppId",
        "useApp",
        "useQuery",
        "hasura",
        "hasura",
        "gql",
        "cardData",
        "cardData",
        "card",
        "card",
        "useMembershipCardByTargetId",
        "productType",
        "targetId",
        "useQuery",
        "hasura",
        "hasura",
        "gql",
        "cardData",
        "cardData",
        "cardProduct",
        "cardProduct",
        "cardData",
        "cardData",
        "card",
        "card",
        "card",
        "card",
        "card",
        "card",
        "useProgramPlanEnrollmentCount",
        "programPlanId",
        "useQuery",
        "hasura",
        "hasura",
        "gql",
        "data",
        "loading",
        "error",
        "refetch",
        "useUpsertProgramPlan",
        "useMutation",
        "hasura",
        "hasura",
        "gql",
        "useUpsertCardProduct",
        "useMutation",
        "hasura",
        "hasura",
        "gql"
    ],
    "literals": [
        "'@apollo/client'",
        "'lodestar-app-element/src/contexts/AppContext'",
        "'../hasura'",
        "'../types/programPlan'",
        "query GetCardTitleByAppId($appId: String) {\n        card(where: { app_id: { _eq: $appId } }) {\n          title\n          id\n        }\n      }",
        "string",
        "string",
        "query GetCardByTargetId($productType: String!, $targetId: uuid!) {\n        card_product(where: { product_type: { _eq: $productType }, target: { _eq: $targetId } }) {\n          id\n          target\n          product_type\n          card_id\n          card {\n            id\n            title\n          }\n        }\n      }",
        "string",
        "''",
        "string",
        "query GET_PROGRAM_SUBSCRIPTION_PLAN_COUNT($programPlanId: uuid!) {\n        program_plan_enrollment_aggregate(where: { program_plan_id: { _eq: $programPlanId } }) {\n          aggregate {\n            count\n          }\n        }\n      }",
        "mutation UpsertMembershipPlan(\n        $programId: uuid!\n        $id: uuid!\n        $type: Int!\n        $title: String!\n        $autoRenewed: Boolean!\n        $listPrice: numeric!\n        $description: String\n        $salePrice: numeric\n        $soldAt: timestamptz\n        $discountDownPrice: numeric\n        $periodAmount: numeric\n        $periodType: String\n        $remindPeriodAmount: Int\n        $remindPeriodType: String\n        $currencyId: String\n        $publishedAt: timestamptz\n        $groupBuyingPeople: numeric\n        $isCountdownTimerVisible: Boolean\n        $isParticipantsVisible: Boolean\n      ) {\n        insert_program_plan(\n          objects: {\n            id: $id\n            type: $type\n            title: $title\n            description: $description\n            list_price: $listPrice\n            sale_price: $salePrice\n            period_amount: $periodAmount\n            period_type: $periodType\n            remind_period_amount: $remindPeriodAmount\n            remind_period_type: $remindPeriodType\n            discount_down_price: $discountDownPrice\n            sold_at: $soldAt\n            program_id: $programId\n            currency_id: $currencyId\n            auto_renewed: $autoRenewed\n            published_at: $publishedAt\n            group_buying_people: $groupBuyingPeople\n            is_countdown_timer_visible: $isCountdownTimerVisible\n            is_participants_visible: $isParticipantsVisible\n          }\n          on_conflict: {\n            constraint: program_plan_pkey\n            update_columns: [\n              type\n              title\n              description\n              list_price\n              sale_price\n              discount_down_price\n              period_amount\n              period_type\n              remind_period_amount\n              remind_period_type\n              sold_at\n              currency_id\n              auto_renewed\n              published_at\n              is_countdown_timer_visible\n              is_participants_visible\n            ]\n          }\n        ) {\n          affected_rows\n          returning {\n            id\n          }\n        }\n      }",
        "mutation UpsertCardProduct($id: uuid!, $productType: String!, $targetId: uuid!, $cardId: uuid!) {\n      insert_card_product(\n        objects: { id: $id, product_type: $productType, target: $targetId, card_id: $cardId }\n        on_conflict: { constraint: card_product_pkey, update_columns: [card_id] }\n      ) {\n        affected_rows\n        returning {\n          id\n          target\n          card_id\n        }\n      }\n    }"
    ],
    "variables": [
        "useMembershipCardByAppId",
        "appId",
        "cardData",
        "membershipCards",
        "useMembershipCardByTargetId",
        "cardData",
        "refetchMembershipCard",
        "cardTitle",
        "cardProducts",
        "useProgramPlanEnrollmentCount",
        "enrollmentCount",
        "useUpsertProgramPlan",
        "upsertProgramPlan",
        "useUpsertCardProduct",
        "upsertCardProduct"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}