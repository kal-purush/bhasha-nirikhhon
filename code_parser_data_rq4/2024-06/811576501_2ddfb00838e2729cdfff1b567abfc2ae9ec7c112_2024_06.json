{
    "identifiers": [
        "streamlit",
        "st",
        "pandas",
        "pd",
        "random",
        "st",
        "sidebar",
        "st",
        "title",
        "st",
        "markdown",
        "st",
        "markdown",
        "st",
        "markdown",
        "st",
        "title",
        "pd",
        "read_csv",
        "st",
        "container",
        "random",
        "randint",
        "len",
        "df",
        "df",
        "iloc",
        "random_index",
        "st",
        "button",
        "select_random_text",
        "st",
        "write",
        "random_text",
        "df",
        "df",
        "random_text",
        "st",
        "write",
        "st",
        "dataframe",
        "filtered_df",
        "transformers",
        "pipeline",
        "pipeline",
        "st",
        "container",
        "st",
        "text_area",
        "st",
        "button",
        "sent_pipeline",
        "example",
        "result",
        "st",
        "write",
        "label",
        "st",
        "columns",
        "col2",
        "markdown"
    ],
    "literals": [
        "'Sentiment Analysis'",
        "\"Let's you find out \\\n        what your customers **like** and **dislike**\\\n            and how you can make a product **better** for them.\"",
        "\"You can analyse **customer reviews**,\\\n        open-ended **customer survey** questions,\\\n        threads in discussions,\\\n        social media posts - As long as it's digital text.\"",
        "\"Allows to refine your marketing,\\\n         optimize product offerings or promotions, \\\n            and identify emerging trends.\"",
        "\"Customer Review Analysis\"",
        "'Reviews_clean.csv'",
        "'Text'",
        "\"1. Click to Select Random Review\"",
        "'Text'",
        "\"Customer Survey Subset:\"",
        "'Text'",
        "'Summary'",
        "'ProfileName'",
        "'UserId'",
        "\"sentiment-analysis\"",
        "\"Enter a Customer Review\"",
        "\"2. Analyze\"",
        "'label'",
        "f\"Sentiment: {label}\"",
        "'Made with ❤️ by [Alejandro](https://github.com/aleivaar94)'"
    ],
    "variables": [
        "df",
        "random_index",
        "random_text",
        "filtered_df",
        "sent_pipeline",
        "example",
        "result",
        "label",
        "col1",
        "col2",
        "col3"
    ],
    "comments": [
        "import torch",
        "from transformers import AutoTokenizer, AutoModelForSequenceClassification",
        "from scipy.special import softmax",
        "MODEL = \"cardiffnlp/twitter-roberta-base-sentiment\"",
        "tokenizer = AutoTokenizer.from_pretrained(MODEL)",
        "model = AutoModelForSequenceClassification.from_pretrained(MODEL)",
        "# Define function to apply to input example",
        "def polarity_scores_roberta(example):",
        "encoded_text = tokenizer(example, return_tensors='pt')",
        "output = model(**encoded_text)",
        "scores = output[0][0].detach().numpy()",
        "scores = softmax(scores)",
        "scores_dict = {",
        "'Negative': scores[0],",
        "'Neutral': scores[1],",
        "'Positive': scores[2]",
        "}",
        "# Find the key with the highest score",
        "highest_score_key = max(scores_dict, key=scores_dict.get)",
        "return highest_score_key",
        "Streamlit App",
        "Sidebar",
        "Function to select a random text from the DataFrame",
        "Button to trigger random selection and display",
        "Filter the DataFrame to display rows with the selected 'Text'",
        "Display the filtered DataFrame in a table"
    ],
    "docstrings": [],
    "functions": [
        "select_random_text"
    ],
    "classes": []
}