{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "ansible_collections",
        "cisco",
        "mso",
        "plugins",
        "module_utils",
        "constants",
        "TEMPLATE_TYPES",
        "collections",
        "namedtuple",
        "namedtuple",
        "namedtuple",
        "namedtuple",
        "mso_module",
        "template_type",
        "template_name",
        "template_id",
        "mso_module",
        "format",
        "templates_path",
        "template_name",
        "template_id",
        "template_id",
        "mso",
        "get_obj",
        "summaries_path",
        "templateId",
        "template_id",
        "template_summary",
        "format",
        "templates_path",
        "template_id",
        "mso",
        "query_obj",
        "template_path",
        "mso",
        "fail_json",
        "msg",
        "format",
        "template_id",
        "format",
        "template",
        "get",
        "template",
        "get",
        "template",
        "mso",
        "query_objs",
        "summaries_path",
        "template_name",
        "template_type",
        "mso",
        "fail_json",
        "msg",
        "mso",
        "get_obj",
        "summaries_path",
        "templateName",
        "template_name",
        "templateType",
        "TEMPLATE_TYPES",
        "template_type",
        "template_summary",
        "format",
        "templates_path",
        "template_summary",
        "get",
        "mso",
        "query_obj",
        "template_path",
        "template_type",
        "mso",
        "query_objs",
        "summaries_path",
        "templateType",
        "TEMPLATE_TYPES",
        "template_type",
        "mso",
        "query_objs",
        "summaries_path",
        "isinstance",
        "template",
        "key",
        "template",
        "pop",
        "key",
        "staticmethod",
        "search_list",
        "kv_list",
        "kvs",
        "item",
        "all",
        "item",
        "get",
        "kv",
        "key",
        "kv",
        "value",
        "kv",
        "kvs",
        "next",
        "Item",
        "index",
        "item",
        "index",
        "item",
        "search_list",
        "kv_match",
        "kv_list",
        "item",
        "item",
        "get",
        "kv",
        "key",
        "item",
        "search_list",
        "kv",
        "kv_list",
        "match",
        "existing",
        "template_type",
        "template",
        "isinstance",
        "template",
        "mso",
        "fail_json",
        "msg",
        "format",
        "template_name",
        "template",
        "get",
        "template_type",
        "mso",
        "fail_json",
        "msg",
        "format",
        "template_type"
    ],
    "literals": [
        "\"KVPair\"",
        "\"key value\"",
        "\"Item\"",
        "\"index details\"",
        "\"SearchQuery\"",
        "\"key kv_pairs\"",
        "\"templates\"",
        "\"{0}/summaries\"",
        "\"\"",
        "\"{0}/{1}\"",
        "\"Provided template id '{0}' does not exist. Existing templates: {1}\"",
        "\"Template '{0}' with id '{1}'\"",
        "\"templateName\"",
        "\"templateId\"",
        "\"Template type must be provided when using template name.\"",
        "\"template_type\"",
        "\"{0}/{1}\"",
        "\"templateId\"",
        "\"template_type\"",
        "\"_updateVersion\"",
        "\"version\"",
        "\"Template '{0}' not found.\"",
        "\"templateType\"",
        "\"Template type must be '{0}'.\""
    ],
    "variables": [
        "__metaclass__",
        "KVPair",
        "Item",
        "SearchQuery",
        "mso",
        "templates_path",
        "summaries_path",
        "template",
        "template_path",
        "template_name",
        "template_id",
        "template_summary",
        "template_path",
        "template",
        "template_summary",
        "template_path",
        "template",
        "template",
        "template",
        "match",
        "existing"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Copyright: (c) 2022, Akini Ross (@akinross) <akinross@cisco.com>",
        "GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)",
        "Checking if the template with id exists to avoid error: MSO Error 400: Template ID 665da24b95400f375928f195 invalid",
        "Remove unwanted keys from existing object for better output and diff compares"
    ],
    "docstrings": [
        "\"\"\"\n        Get the first matched object from a list of mso object dictionaries.\n        :param search_list: Objects to search through -> List.\n        :param kv_list: Key/value pairs that should match in the object. -> List[KVPair(Str, Str)]\n        :return: The index and details of the object. -> Item (Named Tuple)\n                 Values of provided keys of all existing objects. -> List\n        \"\"\"",
        "\"\"\"\n        Validate that attributes are set to a value that is not equal None.\n        :return: None\n        \"\"\""
    ],
    "functions": [
        "get_object_from_list",
        "kv_match",
        "validate_template"
    ],
    "classes": [
        "MSOTemplate"
    ]
}