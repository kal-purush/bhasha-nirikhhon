{
    "identifiers": [
        "Collections",
        "Generic",
        "Text",
        "RegularExpressions",
        "AltTester",
        "AltTesterUnitySDK",
        "Driver",
        "BoundType",
        "DirectChildren",
        "AnyChildren",
        "Parent",
        "SelectorType",
        "Any",
        "Name",
        "PropertyEquals",
        "Indexer",
        "FunctionType",
        "contains",
        "PropertyType",
        "id",
        "name",
        "tag",
        "layer",
        "component",
        "text",
        "selector",
        "BoundType",
        "Type",
        "Selector",
        "selector",
        "SelectorCondition",
        "selector",
        "SelectorType",
        "Selector",
        "selector",
        "Type",
        "property",
        "Enum",
        "TryParse",
        "PropertyType",
        "property",
        "parsed",
        "InvalidPathException",
        "property",
        "Join",
        "Enum",
        "GetNames",
        "PropertyType",
        "parsed",
        "functionName",
        "Enum",
        "TryParse",
        "FunctionType",
        "functionName",
        "parsed",
        "InvalidPathException",
        "functionName",
        "Join",
        "Enum",
        "GetNames",
        "FunctionType",
        "parsed",
        "SelectorCondition",
        "selector",
        "selector",
        "SelectorType",
        "Any",
        "SelectorCondition",
        "selector",
        "selector",
        "SelectorType",
        "Name",
        "Name",
        "selector",
        "SelectorCondition",
        "selector",
        "selector",
        "SelectorType",
        "PropertyEquals",
        "selector",
        "IndexOf",
        "delimiterPos",
        "InvalidPathException",
        "selector",
        "selector",
        "Substring",
        "delimiterPos",
        "Property",
        "GetPropertyType",
        "propvalue",
        "PropertyValue",
        "selector",
        "Substring",
        "delimiterPos",
        "SelectorCondition",
        "selector",
        "selector",
        "SelectorType",
        "selector",
        "IndexOf",
        "delimiterPos",
        "selector",
        "Length",
        "InvalidPathException",
        "selector",
        "delimiterPos",
        "selector",
        "IndexOf",
        "delimiterPos",
        "InvalidPathException",
        "selector",
        "selector",
        "Substring",
        "delimiterPos",
        "GetFunctionType",
        "functionName",
        "selector",
        "Substring",
        "delimiterPos",
        "selector",
        "Length",
        "delimiterPos",
        "delimiterPos",
        "condition",
        "IndexOf",
        "delimiterPos",
        "InvalidPathException",
        "selector",
        "condition",
        "Substring",
        "delimiterPos",
        "Property",
        "GetPropertyType",
        "propname",
        "PropertyValue",
        "condition",
        "Substring",
        "delimiterPos",
        "SelectorCondition",
        "selector",
        "selector",
        "SelectorType",
        "Indexer",
        "Regex",
        "Match",
        "selector",
        "Success",
        "TryParse",
        "selector",
        "index",
        "InvalidPathException",
        "selector",
        "Index",
        "index"
    ],
    "literals": [
        "\"Invalid property type '\"",
        "\"'. Expected one of: \"",
        "\",\"",
        "\"Invalid function '\"",
        "\"'. Expected one of: \"",
        "\",\"",
        "\"=\"",
        "\"Expected property selector format `@propertyName=propertyvalue` Got \"",
        "\")\"",
        "\"Expected property selector format `function(@propertyName,propertyvalue)` Got \"",
        "\"(\"",
        "\"Expected property selector format `function(@propertyName,propertyvalue)` Got \"",
        "\",\"",
        "\"Expected property selector format `function(@propertyName,propertyvalue)` Got \"",
        "\"([1-9]{1}[0-9]*|-[1-9]{1}[0-9]*|0)\"",
        "\"Expected index as a number got [\"",
        "\"]\""
    ],
    "variables": [
        "Selector",
        "BoundType",
        "Type",
        "IndexerCondition",
        "Indexer",
        "Selectors",
        "Selector",
        "SelectorType",
        "Type",
        "PropertyType",
        "parsed",
        "FunctionType",
        "parsed",
        "Name",
        "delimiterPos",
        "propvalue",
        "PropertyType",
        "Property",
        "PropertyValue",
        "delimiterPos",
        "functionName",
        "condition",
        "propname",
        "PropertyType",
        "Property",
        "PropertyValue",
        "FunctionType",
        "index",
        "Index",
        "CurrentIndexCountDown"
    ],
    "comments": [
        "Copyright(C) 2024 Altom Consulting\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program. If not, see <https://www.gnu.org/licenses/>.",
        "name",
        "[functionName(@propertyName,propertyValue)]",
        "[@propertyName=propertyValue]",
        "[n]",
        "",
        "</summary>",
        "<param name=\"selector\">@propertyName=propertyvalue</param>",
        "<returns></returns>",
        "",
        "</summary>",
        "<param name=\"selector\">functionName(@propertyName=propertyvalue)</param>",
        "<returns></returns>"
    ],
    "docstrings": [
        "*",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "BoundCondition",
        "SelectorCondition",
        "PropertyType",
        "GetPropertyType",
        "FunctionType",
        "GetFunctionType",
        "AnyCondition",
        "NameCondition",
        "PropertyEqualsCondition",
        "FunctionCondition",
        "IndexerCondition"
    ],
    "classes": [
        "BoundCondition",
        "SelectorCondition",
        "AnyCondition",
        "NameCondition",
        "PropertyEqualsCondition",
        "FunctionCondition",
        "IndexerCondition"
    ]
}