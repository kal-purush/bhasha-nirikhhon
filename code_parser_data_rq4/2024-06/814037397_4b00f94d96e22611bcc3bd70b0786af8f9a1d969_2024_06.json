{
    "identifiers": [
        "radius",
        "x",
        "y",
        "radius",
        "x",
        "radius",
        "y",
        "radius",
        "new_x",
        "new_y",
        "results",
        "results",
        "count",
        "results",
        "count",
        "x",
        "x",
        "y",
        "m",
        "results",
        "results",
        "count",
        "results",
        "count",
        "x",
        "x",
        "y",
        "m",
        "input",
        "vote_percentage",
        "results",
        "per_of_vote",
        "per_of_vote",
        "per_of_vote"
    ],
    "literals": [
        "\"yes\"",
        "\"no\"",
        "\"yes\"",
        "\"no\"",
        "\"Enter the yes, no, abstained votes one by one and then press enter:\\n \"",
        "\"proposal passes unanimously\"",
        "\"proposal passes with super majority\"",
        "\"proposal passes with simple majority\"",
        "\"proposal fails\""
    ],
    "variables": [
        "new_x",
        "new_y",
        "x",
        "y",
        "m",
        "x",
        "y",
        "m",
        "results",
        "per_of_vote"
    ],
    "comments": [
        "",
        "Q1",
        "",
        "",
        "Q2",
        "",
        "",
        "Q3",
        ""
    ],
    "docstrings": [
        "'''\n    (num, num, num) -> (num,num) or None if radius is (-)\n    When the user inputs 3 values, the function should draw a rectangle that must be a smallest axis-aligned rectangle that contains the circle.\n    '''",
        "'''\n    (str) ->float\n    precondition: 'yes' and 'no' need to be in a lower case\n    The function counts the number of \"yes\" and \"no\". With that values, it returns the percentage of 'yes' out of 'no'\n    '''",
        "'''\n    (str) ->float\n    precondition: 'yes' and 'no' need to be in a lower case\n    The function counts the number of \"yes\" and \"no\". With that values, it returns the percentage of 'yes' out of 'no'\n    '''",
        "'''\n    (none)-> none\n    The function calls the vote_percentage function. With the percentage, it prints whether the proposal passed unanimously, with super majority, with simple majority, and the proposal fails.\n    '''"
    ],
    "functions": [
        "min_enclosing_rectangle",
        "vote_percentage",
        "vote_percentage",
        "vote"
    ],
    "classes": []
}