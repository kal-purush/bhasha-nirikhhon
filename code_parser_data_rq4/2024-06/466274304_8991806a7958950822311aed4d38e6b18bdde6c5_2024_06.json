{
    "identifiers": [
        "annotations",
        "pathlib",
        "Path",
        "pydantic",
        "Field",
        "model_validator",
        "typing_extensions",
        "Self",
        "nipoppy",
        "layout",
        "DEFAULT_LAYOUT_INFO",
        "nipoppy",
        "tabular",
        "BaseTabular",
        "BaseTabularModel",
        "nipoppy",
        "tabular",
        "manifest",
        "Manifest",
        "nipoppy",
        "utils",
        "BIDS_SESSION_PREFIX",
        "BIDS_SUBJECT_PREFIX",
        "FIELD_DESCRIPTION_MAP",
        "BaseTabularModel",
        "Field",
        "title",
        "description",
        "FIELD_DESCRIPTION_MAP",
        "Field",
        "description",
        "FIELD_DESCRIPTION_MAP",
        "Field",
        "title",
        "description",
        "DEFAULT_LAYOUT_INFO",
        "dpath_raw_dicom",
        "model_validator",
        "mode",
        "Self",
        "participant_id",
        "startswith",
        "BIDS_SUBJECT_PREFIX",
        "ValueError",
        "BIDS_SUBJECT_PREFIX",
        "participant_id",
        "session",
        "startswith",
        "BIDS_SESSION_PREFIX",
        "ValueError",
        "BIDS_SESSION_PREFIX",
        "session",
        "BaseTabular",
        "col_participant_id",
        "col_session",
        "DicomDirMapModel",
        "BaseTabular",
        "_metadata",
        "classmethod",
        "cls",
        "manifest",
        "Manifest",
        "fpath_dicom_dir_map",
        "Path",
        "participant_first",
        "validate",
        "Self",
        "fpath_dicom_dir_map",
        "cls",
        "load",
        "Path",
        "fpath_dicom_dir_map",
        "validate",
        "validate",
        "participant",
        "session",
        "manifest",
        "get_participants_sessions",
        "participant_first",
        "participant",
        "session",
        "session",
        "participant",
        "data_dicom_dir_map",
        "append",
        "cls",
        "col_participant_id",
        "participant",
        "cls",
        "col_session",
        "session",
        "cls",
        "col_participant_dicom_dir",
        "participant_dicom_dir",
        "cls",
        "data",
        "data_dicom_dir_map",
        "validate",
        "dicom_dir_map",
        "validate",
        "dicom_dir_map",
        "participant",
        "session",
        "set_index",
        "index_cols",
        "loc",
        "participant",
        "session",
        "item"
    ],
    "literals": [
        "\"Participant ID\"",
        "\"participant_id\"",
        "\"session\"",
        "\"Participant's raw DICOM directory\"",
        "\"Path to the participant's raw DICOM directory, relative to the dataset's\"",
        "f\"raw DICOM directory (default: {DEFAULT_LAYOUT_INFO.dpath_raw_dicom})\"",
        "\"after\"",
        "f'Participant ID should not start with \"{BIDS_SUBJECT_PREFIX}\"'",
        "f\", got {self.participant_id}\"",
        "f'Session should start with \"{BIDS_SESSION_PREFIX}\"'",
        "f\", got {self.session}\"",
        "\"participant_id\"",
        "\"session\"",
        "\"participant_dicom_dir\"",
        "\"col_participant_id\"",
        "\"col_session\"",
        "\"col_participant_dicom_dir\"",
        "\"index_cols\"",
        "\"model\"",
        "f\"{participant}/{session}\"",
        "f\"{session}/{participant}\""
    ],
    "variables": [
        "participant_id",
        "session",
        "participant_dicom_dir",
        "col_participant_id",
        "col_session",
        "col_participant_dicom_dir",
        "index_cols",
        "model",
        "_metadata",
        "data_dicom_dir_map",
        "participant_dicom_dir",
        "participant_dicom_dir",
        "dicom_dir_map"
    ],
    "comments": [
        "column names",
        "set the model",
        "if these is a custom dicom_dir_map, use it",
        "else depends on participant_first or no"
    ],
    "docstrings": [
        "\"\"\"Classes for the DICOM directory mapping.\"\"\"",
        "\"\"\"Model for file mapping participant IDs to DICOM directories.\"\"\"",
        "\"\"\"Validate participant_id and session fields.\"\"\"",
        "\"\"\"\n    A dataset's DICOM directory mapping.\n\n    This mapping is used during DICOM reorganization and doughnut generation.\n    \"\"\"",
        "\"\"\"Load or generate a DicomDirMap instance.\n\n        Parameters\n        ----------\n        manifest : :class:`nipoppy.tabular.manifest.Manifest`\n            Manifest for generating the mapping (not used if ``fpath_dicom_dir_map``\n            is not ``None``).\n        fpath_dicom_dir_map : str | Path | None\n            Path to a custom DICOM directory mapping file. If ``None``,\n            the DICOM directory mapping will be generated from the manifest.\n        participant_first : bool\n            Whether the generated uses ``<PARTICIPANT>/<SESSION>`` order\n            (True) or ``<SESSION>/<PARTICIPANT>`` (False). Not used if\n            ``fpath_dicom_dir_map`` is not ``None``\n        validate : bool, optional\n            Whether to validate (through Pydantic) the created object,\n            by default ``True``\n\n        Returns\n        -------\n        :class:`nipoppy.tabular.dicom_dir_map.DicomDirMap`\n        \"\"\"",
        "\"\"\"Return the participant's raw DICOM directory for a given session.\n\n        Parameters\n        ----------\n        participant : str\n            Participant ID, without the BIDS prefix\n        session : str\n            Session, with the BIDS prefix\n        \"\"\""
    ],
    "functions": [
        "validate_after",
        "load_or_generate",
        "get_dicom_dir"
    ],
    "classes": [
        "DicomDirMapModel",
        "DicomDirMap"
    ]
}