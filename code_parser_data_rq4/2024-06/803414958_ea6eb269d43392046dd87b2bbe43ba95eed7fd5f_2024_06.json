{
    "identifiers": [
        "Godot",
        "Serilog",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Attack",
        "Game",
        "TurnAction",
        "Invalid",
        "Select",
        "Move",
        "Attack",
        "Vector2I",
        "Tile",
        "Vector2I",
        "Tile",
        "Vector2I",
        "Tile",
        "Vector2I",
        "Tile",
        "Team",
        "currentTeam",
        "TeamPlaying",
        "currentTeam",
        "Tile",
        "tile",
        "Vector2I",
        "cell",
        "SelectedTile",
        "tile",
        "Piece",
        "TurnAction",
        "Invalid",
        "tile",
        "Piece",
        "Team",
        "Team",
        "Blue",
        "TurnAction",
        "Invalid",
        "tile",
        "Piece",
        "Range",
        "TurnAction",
        "Invalid",
        "Log",
        "Debug",
        "SelectedTile",
        "tile",
        "TurnAction",
        "Select",
        "SelectedTile",
        "tile",
        "Piece",
        "Team",
        "Team",
        "Blue",
        "tile",
        "Piece",
        "Range",
        "TurnAction",
        "Invalid",
        "Log",
        "Debug",
        "SelectedTile",
        "tile",
        "TurnAction",
        "Select",
        "DestinationTile",
        "ValidMoves",
        "ContainsKey",
        "cell",
        "SelectedTile",
        "Position",
        "Max",
        "currentPostion",
        "X",
        "cell",
        "X",
        "Min",
        "currentPostion",
        "X",
        "cell",
        "X",
        "Max",
        "currentPostion",
        "Y",
        "cell",
        "Y",
        "Min",
        "currentPostion",
        "Y",
        "cell",
        "Y",
        "differenceX",
        "differenceY",
        "TurnAction",
        "Invalid",
        "differenceX",
        "SelectedTile",
        "Piece",
        "Range",
        "differenceY",
        "SelectedTile",
        "Piece",
        "Range",
        "TurnAction",
        "Invalid",
        "DestinationTile",
        "tile",
        "DestinationTile",
        "AddPiece",
        "SelectedTile",
        "Piece",
        "SelectedTile",
        "RemovePiece",
        "TurnAction",
        "Move",
        "DestinationTile",
        "TurnAction",
        "Move",
        "SelectedTile",
        "TurnAction",
        "Select",
        "TurnAction",
        "Invalid",
        "AttackedTile",
        "SelectedTile",
        "DestinationTile",
        "Log",
        "Debug",
        "SelectedTile",
        "AddPiece",
        "DestinationTile",
        "Piece",
        "DestinationTile",
        "RemovePiece",
        "Log",
        "Debug",
        "SelectedTile",
        "DestinationTile",
        "ValidMoves",
        "Clear",
        "ValidAttacks",
        "Clear",
        "ValidMoves",
        "Clear",
        "ValidAttacks",
        "Clear",
        "Vector2I",
        "position",
        "Tile",
        "tile",
        "ValidMoves",
        "ContainsKey",
        "position",
        "ValidMoves",
        "Add",
        "position",
        "tile",
        "Vector2I",
        "position",
        "Tile",
        "tile",
        "ValidAttacks",
        "ContainsKey",
        "position",
        "ValidAttacks",
        "Add",
        "position",
        "tile"
    ],
    "literals": [
        "\"Tile selected\"",
        "\"Tile re-selected\"",
        "\"Clearing move\"",
        "\"Clearing selected tile\""
    ],
    "variables": [
        "Tile",
        "SelectedTile",
        "Tile",
        "DestinationTile",
        "Tile",
        "AttackedTile",
        "ValidMoves",
        "ValidAttacks",
        "Team",
        "TeamPlaying",
        "currentPostion",
        "differenceX",
        "differenceY"
    ],
    "comments": [
        "We've still got a valid selection here",
        "Can't move diagonally",
        "TODO attack",
        "We can't allow attack actions to be reverted",
        "would give the player free intel"
    ],
    "docstrings": [],
    "functions": [
        "Turn",
        "TurnAction",
        "ProcessLeftClick",
        "ProcessRightClick",
        "ClearMoves",
        "ClearAttacks",
        "AddMove",
        "AddAttack"
    ],
    "classes": [
        "Turn"
    ]
}