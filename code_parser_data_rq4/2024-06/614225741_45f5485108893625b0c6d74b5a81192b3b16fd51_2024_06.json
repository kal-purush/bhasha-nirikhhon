{
    "identifiers": [
        "path",
        "promises",
        "fs",
        "getInterCss",
        "getTailwindCss",
        "synchronizedPrettier",
        "Buffer",
        "path",
        "__dirname",
        "fs",
        "path",
        "rootDir",
        "fs",
        "path",
        "rootDir",
        "getInterCss",
        "getTailwindCss",
        "cssArray",
        "convertStringToBase64",
        "joinedStrings",
        "reformatWithPrettier",
        "code",
        "synchronizedPrettier",
        "rootDir",
        "configFile",
        "synchronizedPrettier",
        "configFile",
        "options",
        "synchronizedPrettier",
        "code",
        "options",
        "renderContent",
        "base64String",
        "base64String",
        "reformatWithPrettier",
        "code",
        "path",
        "rootDir",
        "getRenderedAssets",
        "assetsList",
        "path",
        "srcAssetsDir",
        "name",
        "renderContent",
        "getBase64Content",
        "generateAssetFiles",
        "fs",
        "srcAssetsDir",
        "getRenderedAssets",
        "assets",
        "fs",
        "path",
        "content"
    ],
    "literals": [
        "'node:path'",
        "'fs'",
        "'../../src/summary-pdf/interCss'",
        "'../../src/summary-pdf/tailwindCss'",
        "'@prettier/sync'",
        "string",
        "'base64'",
        "'../../'",
        "'taxPdf'",
        "'./resources/Priznanie_komplet_tlacivo.pdf'",
        "'base64'",
        "'taxPdfFont'",
        "'./resources/LiberationSans.ttf'",
        "'base64'",
        "'summaryPdfCss'",
        "'\\n'",
        "string",
        "'Prettier config file not found'",
        "'Prettier options not found'",
        "'typescript'",
        "string",
        "/* This file is automatically generated, don't change the contents, see \"scripts/assets/\". */ \n\nexport default Buffer.from(${JSON.stringify(base64String)}, 'base64')\\n",
        "'./src/generated-assets'",
        "./${name}.ts"
    ],
    "variables": [
        "rootDir",
        "assetsList",
        "cssArray",
        "joinedStrings",
        "reformatWithPrettier",
        "configFile",
        "options",
        "renderContent",
        "code",
        "srcAssetsDir",
        "getRenderedAssets",
        "generateAssetFiles",
        "assets"
    ],
    "comments": [
        "synchronizedPrettier must be used until https://github.com/jestjs/jest/issues/14305 is solved"
    ],
    "docstrings": [
        "* This script generates base64-encoded assets from files and strings and writes them to the src/generated-assets\n * directory as TypeScript files.\n *\n * After examining multiple solutions that:\n *  - load the file as a string (file loaders in esbuild/vite/webpack, using fs directly) - for static assets,\n *  - pre-evaluate script (babel-plugin-preval, esbuild custom plugins) - for scripts that need to access the file system\n *    in their evaluation - e.g. generating Tailwind or Inter font CSS\n *\n * this no-frills approach was chosen for its simplicity and ease of use. It works in all environments (jest,\n * Next.js/Nest) or built/directly imported version of the library consistently and is as performant as other solutions."
    ],
    "functions": [
        "convertStringToBase64"
    ],
    "classes": []
}