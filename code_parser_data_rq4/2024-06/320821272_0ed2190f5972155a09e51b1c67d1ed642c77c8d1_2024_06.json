{
    "identifiers": [
        "numba",
        "njit",
        "scipy",
        "sparse",
        "coo_matrix",
        "numpy",
        "np",
        "njit",
        "cache",
        "length",
        "n_range",
        "n_range",
        "n_range",
        "length",
        "length",
        "length",
        "n_range",
        "length",
        "n_range",
        "n_range",
        "n_range",
        "njit",
        "cache",
        "txt",
        "txt",
        "strip",
        "lower",
        "njit",
        "cache",
        "_",
        "njit",
        "cache",
        "corpus",
        "preprocessor",
        "features",
        "n_range",
        "len",
        "features",
        "txt",
        "corpus",
        "tot_size",
        "number_of_factors",
        "len",
        "preprocessor",
        "txt",
        "n_range",
        "np",
        "zeros",
        "tot_size",
        "dtype",
        "np",
        "np",
        "zeros",
        "tot_size",
        "dtype",
        "np",
        "i",
        "txt",
        "corpus",
        "ptr",
        "preprocessor",
        "txt",
        "len",
        "txt",
        "start",
        "length",
        "min",
        "start",
        "n_range",
        "length",
        "n_range",
        "length",
        "txt",
        "start",
        "end",
        "current",
        "end",
        "start",
        "sub_text",
        "current",
        "factor",
        "features",
        "features",
        "factor",
        "m",
        "m",
        "m",
        "j",
        "ptr",
        "start_ptr",
        "ptr",
        "i",
        "tot_size",
        "document_indices",
        "feature_indices",
        "m",
        "njit",
        "cache",
        "corpus",
        "preprocessor",
        "features",
        "n_range",
        "len",
        "features",
        "txt",
        "corpus",
        "preprocessor",
        "txt",
        "len",
        "txt",
        "start",
        "length",
        "min",
        "start",
        "n_range",
        "length",
        "n_range",
        "length",
        "txt",
        "start",
        "end",
        "current",
        "end",
        "start",
        "sub_text",
        "current",
        "factor",
        "features",
        "m",
        "m",
        "njit",
        "cache",
        "corpus",
        "preprocessor",
        "features",
        "n_range",
        "rate",
        "seed",
        "seed",
        "np",
        "random",
        "seed",
        "seed",
        "len",
        "features",
        "txt",
        "corpus",
        "preprocessor",
        "txt",
        "len",
        "txt",
        "start",
        "length",
        "np",
        "random",
        "rand",
        "rate",
        "min",
        "start",
        "n_range",
        "length",
        "n_range",
        "length",
        "txt",
        "start",
        "end",
        "current",
        "end",
        "start",
        "sub_text",
        "current",
        "factor",
        "features",
        "m",
        "m",
        "njit",
        "cache",
        "corpus",
        "preprocessor",
        "features",
        "n_range",
        "len",
        "features",
        "txt",
        "corpus",
        "tot_size",
        "number_of_factors",
        "len",
        "preprocessor",
        "txt",
        "n_range",
        "np",
        "zeros",
        "tot_size",
        "dtype",
        "np",
        "np",
        "zeros",
        "tot_size",
        "dtype",
        "np",
        "i",
        "txt",
        "corpus",
        "ptr",
        "preprocessor",
        "txt",
        "len",
        "txt",
        "start",
        "length",
        "min",
        "start",
        "n_range",
        "length",
        "n_range",
        "length",
        "txt",
        "start",
        "end",
        "current",
        "end",
        "start",
        "sub_text",
        "current",
        "factor",
        "features",
        "features",
        "factor",
        "j",
        "ptr",
        "start_ptr",
        "ptr",
        "i",
        "feature_indices",
        "ptr",
        "document_indices",
        "ptr",
        "ptr",
        "document_indices",
        "feature_indices",
        "m"
    ],
    "literals": [
        "'a'"
    ],
    "variables": [
        "ptr",
        "m",
        "tot_size",
        "feature_indices",
        "document_indices",
        "start_ptr",
        "txt",
        "length",
        "end",
        "sub_text",
        "factor",
        "j",
        "features",
        "factor",
        "j",
        "feature_indices",
        "ptr",
        "document_indices",
        "m",
        "txt",
        "length",
        "end",
        "sub_text",
        "factor",
        "features",
        "factor",
        "m",
        "txt",
        "length",
        "end",
        "sub_text",
        "factor",
        "features",
        "factor",
        "ptr",
        "m",
        "tot_size",
        "feature_indices",
        "document_indices",
        "start_ptr",
        "txt",
        "length",
        "end",
        "sub_text",
        "factor",
        "j",
        "feature_indices",
        "ptr",
        "document_indices",
        "feature_indices",
        "document_indices"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Return the number of factors (with multiplicity) of size at most `n_range` that exist in a text of length `length`.\n    This allows to pre-allocate working memory.\n\n    Parameters\n    ----------\n    length: :py:class:`int`\n        Length of the text.\n    n_range: :py:class:`int`, optional\n        Maximal factor size. If 0, all factors are considered.\n\n    Returns\n    -------\n    int\n        The number of factors (with multiplicity).\n\n    Examples\n    --------\n    >>> l = len(\"riri\")\n    >>> number_of_factors(l)\n    10\n    >>> number_of_factors(l, n_range=2)\n    7\n    \"\"\"",
        "\"\"\"\n    Default string preprocessor: trim extra spaces and lower case from string `txt`.\n\n    Parameters\n    ----------\n    txt: :py:class:`str`\n        Text to process.\n\n    Returns\n    -------\n    :py:class:`str`\n        Processed text.\n\n    Examples\n    ---------\n    >>> default_preprocessor(\" LaTeX RuleZ    \")\n    'latex rulez'\n    \"\"\""
    ],
    "functions": [
        "number_of_factors",
        "default_preprocessor",
        "empty_features",
        "jit_fit_transform",
        "jit_fit",
        "jit_sampling_fit",
        "jit_transform"
    ],
    "classes": []
}