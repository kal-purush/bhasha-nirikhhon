{
    "identifiers": [
        "styled",
        "CSSProperties",
        "css",
        "transition",
        "StepState",
        "theme",
        "theme",
        "styled",
        "$state",
        "StepState",
        "disabled",
        "css",
        "$state",
        "StepState",
        "css",
        "$stepInactiveBackgroundColor",
        "transition",
        "$stepInactiveDotColor",
        "transition",
        "disabled",
        "css",
        "$stepInactiveHoverBackgroundColor",
        "$stepInactiveHoverDotColor",
        "$state",
        "StepState",
        "css",
        "$stepActiveBackgroundColor",
        "transition",
        "$stepActiveDotsColor",
        "$state",
        "StepState",
        "css",
        "$stepDoneBackgroundColor",
        "transition",
        "$stepDoneCheckColor",
        "disabled",
        "css",
        "$stepDoneHoverBackgroundColor",
        "$stepDoneHoverCheckColor",
        "styled",
        "$isLteS",
        "colors",
        "styled",
        "$isLteS",
        "$isLteS",
        "$isLteS",
        "styled",
        "colors"
    ],
    "literals": [
        "\"styled-components\"",
        "\"../../components/ui/styles\"",
        "\"./Step\"",
        "\"../../theme\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "\"color\"",
        "position: relative;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n\n  min-width: 6rem;\n  height: 1.25rem;\n  ${({ $state, disabled }) =>\n    $state !== StepState.Active &&\n    !disabled &&\n    css`\n      &:hover {\n        cursor: pointer;\n      }\n    `}\n\n  ${({\n    $state,\n    disabled,\n    $stepInactiveBackgroundColor,\n    $stepInactiveDotColor,\n    $stepInactiveHoverBackgroundColor,\n    $stepInactiveHoverDotColor\n  }) =>\n    $state === StepState.Inactive &&\n    css`\n      background: ${$stepInactiveBackgroundColor};\n      ${transition}\n\n      &:before {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        background: ${$stepInactiveDotColor};\n\n        ${transition}\n\n        width: 0.25rem;\n        height: 0.25rem;\n      }\n      ${!disabled &&\n      css`\n        &:hover {\n          background: ${$stepInactiveHoverBackgroundColor};\n          &:before {\n            background: ${$stepInactiveHoverDotColor};\n            width: 0.5rem;\n            height: 0.5rem;\n          }\n        }\n      `}\n\n      > div {\n        display: none;\n      }\n    `}\n\n  ${({ $state, $stepActiveBackgroundColor, $stepActiveDotsColor }) =>\n    $state === StepState.Active &&\n    css`\n      background: ${$stepActiveBackgroundColor};\n\n      &:before {\n        margin-left: -0.75rem;\n      }\n      &:after {\n        margin-left: 0.75rem;\n      }\n      > div,\n      &:before,\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        ${transition}\n        width: 0.25rem;\n        height: 0.25rem;\n        border-radius: 50%;\n        background: ${$stepActiveDotsColor};\n      }\n    `}\n\n  ${({\n    $state,\n    disabled,\n    $stepDoneBackgroundColor,\n    $stepDoneCheckColor,\n    $stepDoneHoverBackgroundColor,\n    $stepDoneHoverCheckColor\n  }) =>\n    $state === StepState.Done &&\n    css`\n      background: ${$stepDoneBackgroundColor};\n\n      &:before,\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        ${transition}\n        background: ${$stepDoneCheckColor};\n      }\n      &:before {\n        width: 0.35rem;\n        height: 0.125rem;\n        transform: translate(calc(-50% - 0.35rem), calc(-50% + 0.15rem))\n          rotate(-135deg);\n      }\n      &:after {\n        width: 0.75rem;\n        height: 0.125rem;\n        transform: translate(-50%, -50%) rotate(-45deg);\n      }\n\n      > div {\n        display: none;\n      }\n      ${!disabled &&\n      css`\n        &:hover {\n          background: ${$stepDoneHoverBackgroundColor};\n          &:before,\n          &:after {\n            background: ${$stepDoneHoverCheckColor};\n          }\n        }\n      `}\n    `}",
        "&:hover {\n        cursor: pointer;\n      }",
        "background: ${$stepInactiveBackgroundColor};\n      ${transition}\n\n      &:before {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border-radius: 50%;\n        background: ${$stepInactiveDotColor};\n\n        ${transition}\n\n        width: 0.25rem;\n        height: 0.25rem;\n      }\n      ${!disabled &&\n      css`\n        &:hover {\n          background: ${$stepInactiveHoverBackgroundColor};\n          &:before {\n            background: ${$stepInactiveHoverDotColor};\n            width: 0.5rem;\n            height: 0.5rem;\n          }\n        }\n      `}\n\n      > div {\n        display: none;\n      }",
        "&:hover {\n          background: ${$stepInactiveHoverBackgroundColor};\n          &:before {\n            background: ${$stepInactiveHoverDotColor};\n            width: 0.5rem;\n            height: 0.5rem;\n          }\n        }",
        "background: ${$stepActiveBackgroundColor};\n\n      &:before {\n        margin-left: -0.75rem;\n      }\n      &:after {\n        margin-left: 0.75rem;\n      }\n      > div,\n      &:before,\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        ${transition}\n        width: 0.25rem;\n        height: 0.25rem;\n        border-radius: 50%;\n        background: ${$stepActiveDotsColor};\n      }",
        "background: ${$stepDoneBackgroundColor};\n\n      &:before,\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        ${transition}\n        background: ${$stepDoneCheckColor};\n      }\n      &:before {\n        width: 0.35rem;\n        height: 0.125rem;\n        transform: translate(calc(-50% - 0.35rem), calc(-50% + 0.15rem))\n          rotate(-135deg);\n      }\n      &:after {\n        width: 0.75rem;\n        height: 0.125rem;\n        transform: translate(-50%, -50%) rotate(-45deg);\n      }\n\n      > div {\n        display: none;\n      }\n      ${!disabled &&\n      css`\n        &:hover {\n          background: ${$stepDoneHoverBackgroundColor};\n          &:before,\n          &:after {\n            background: ${$stepDoneHoverCheckColor};\n          }\n        }\n      `}",
        "&:hover {\n          background: ${$stepDoneHoverBackgroundColor};\n          &:before,\n          &:after {\n            background: ${$stepDoneHoverCheckColor};\n          }\n        }",
        "display: flex;\n  gap: 1rem;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: flex-start;\n  width: 100%;\n  align-items: center;\n  div div {\n    display: ${({ $isLteS }) => $isLteS && \"none\"};\n  }\n\n  p {\n    text-align: center;\n    margin: 0;\n    font-weight: 600;\n    font-size: 0.75rem;\n    line-height: 1.5;\n    color: ${colors.darkGrey};\n  }",
        "\"none\"",
        "display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  position: ${({ $isLteS }) => $isLteS && \"absolute\"};\n  left: ${({ $isLteS }) => $isLteS && \"50%\"};\n  transform: ${({ $isLteS }) => $isLteS && \"translate(-50%, 0)\"};",
        "\"absolute\"",
        "\"50%\"",
        "\"translate(-50%, 0)\"",
        "display: flex;\n  gap: 0;\n  flex-grow: 1;\n\n  flex-direction: row;\n  flex-wrap: nowrap;\n  border: 1px solid ${colors.border};\n  &:empty + p {\n    display: none;\n  }\n  &:empty {\n    display: none;\n  }"
    ],
    "variables": [
        "colors",
        "StepStyle",
        "MultiStepStyle",
        "MultiStepWrapper",
        "StepWrapper"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}