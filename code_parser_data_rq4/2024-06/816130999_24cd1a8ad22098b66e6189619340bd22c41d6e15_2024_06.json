{
    "identifiers": [
        "re",
        "os",
        "ttfw_idf",
        "ttfw_idf",
        "idf_example_test",
        "env_tag",
        "env",
        "extra_data",
        "env",
        "get_dut",
        "dut_class",
        "ttfw_idf",
        "ESP32DUT",
        "os",
        "path",
        "join",
        "dut1",
        "app",
        "binary_path",
        "os",
        "path",
        "getsize",
        "binary_file",
        "ttfw_idf",
        "log_performance",
        "format",
        "bin_size",
        "ttfw_idf",
        "check_performance",
        "bin_size",
        "dut1",
        "start_app",
        "dut1",
        "expect",
        "timeout",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "timeout",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "re",
        "compile",
        "dut1",
        "expect",
        "test_examples_protocol_esp_http_client"
    ],
    "literals": [
        "\"Example_EthKitV1\"",
        "\"esp_http_client\"",
        "\"examples/protocols/esp_http_client\"",
        "\"esp-http-client-example.bin\"",
        "\"esp_http_client_bin_size\"",
        "\"{}KB\"",
        "\"esp_http_client_bin_size\"",
        "\"Connected to AP, begin http example\"",
        "r\"HTTP GET Status = 200, content_length = (\\d)\"",
        "r\"HTTP POST Status = 200, content_length = (\\d)\"",
        "r\"HTTP PUT Status = 200, content_length = (\\d)\"",
        "r\"HTTP PATCH Status = 200, content_length = (\\d)\"",
        "r\"HTTP DELETE Status = 200, content_length = (\\d)\"",
        "r\"HTTP HEAD Status = 200, content_length = (\\d)\"",
        "r\"HTTP Basic Auth Status = 200, content_length = (\\d)\"",
        "r\"HTTP Basic Auth redirect Status = 200, content_length = (\\d)\"",
        "r\"HTTP Digest Auth Status = 200, content_length = (\\d)\"",
        "r\"HTTP Relative path redirect Status = 200, content_length = (\\d)\"",
        "r\"HTTP Absolute path redirect Status = 200, content_length = (\\d)\"",
        "r\"HTTPS Status = 200, content_length = (\\d)\"",
        "r\"HTTP redirect to HTTPS Status = 200, content_length = (\\d)\"",
        "r\"HTTP chunk encoding Status = 200, content_length = (-?\\d)\"",
        "r\"HTTP Stream reader Status = 200, content_length = (\\d)\"",
        "r\"Last esp error code: 0x8001\"",
        "\"Finish http example\"",
        "'__main__'"
    ],
    "variables": [
        "dut1",
        "binary_file",
        "bin_size"
    ],
    "comments": [
        "check and log bin size",
        "start test",
        "content-len for chunked encoding is typically -1, could be a positive length in some cases"
    ],
    "docstrings": [
        "\"\"\"\n    steps: |\n      1. join AP\n      2. Send HTTP request to httpbin.org\n    \"\"\""
    ],
    "functions": [
        "test_examples_protocol_esp_http_client"
    ],
    "classes": []
}