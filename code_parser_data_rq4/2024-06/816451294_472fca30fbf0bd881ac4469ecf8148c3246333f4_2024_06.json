{
    "identifiers": [
        "getServerSession",
        "z",
        "authOptions",
        "db",
        "eventPatchSchema",
        "z",
        "z",
        "z",
        "req",
        "context",
        "z",
        "routeContextSchema",
        "routeContextSchema",
        "context",
        "db",
        "Response",
        "Response",
        "error",
        "error",
        "z",
        "Response",
        "error",
        "Response",
        "req",
        "context",
        "z",
        "routeContextSchema",
        "routeContextSchema",
        "context",
        "getServerSession",
        "authOptions",
        "session",
        "Response",
        "verifyCurrentUserHasAccessToEvent",
        "session",
        "hasAccess",
        "Response",
        "req",
        "eventPatchSchema",
        "json",
        "db",
        "body",
        "body",
        "body",
        "body",
        "body",
        "body",
        "Response",
        "updatedEvent",
        "error",
        "error",
        "z",
        "Response",
        "error",
        "Response",
        "req",
        "context",
        "z",
        "routeContextSchema",
        "routeContextSchema",
        "context",
        "getServerSession",
        "authOptions",
        "session",
        "Response",
        "verifyCurrentUserHasAccessToEvent",
        "session",
        "hasAccess",
        "Response",
        "db",
        "Response",
        "error",
        "error",
        "z",
        "Response",
        "error",
        "Response",
        "eventId",
        "userId",
        "db",
        "eventId",
        "userId",
        "count"
    ],
    "literals": [
        "\"next-auth/next\"",
        "\"zod\"",
        "\"@/lib/auth\"",
        "\"@/lib/db\"",
        "\"@/lib/validations/event\"",
        "\"Event not found\"",
        "\"Unauthorized\"",
        "\"Unauthorized\"",
        "string",
        "string"
    ],
    "variables": [
        "routeContextSchema",
        "session",
        "hasAccess",
        "json",
        "body",
        "updatedEvent",
        "session",
        "hasAccess",
        "count"
    ],
    "comments": [
        "Define schema for route context",
        "Validate route params",
        "Fetch the event",
        "Validate route params",
        "Validate the user session",
        "Check if the user has access to this event",
        "Get and validate the request body",
        "Update the event",
        "Validate the route params",
        "Validate the user session",
        "Check if the user has access to this event",
        "Delete the event"
    ],
    "docstrings": [],
    "functions": [
        "GET",
        "PATCH",
        "DELETE",
        "verifyCurrentUserHasAccessToEvent"
    ],
    "classes": []
}