{
    "identifiers": [
        "file_name",
        "open",
        "file_name",
        "readIn",
        "line",
        "readIn",
        "line",
        "split",
        "total_set",
        "append",
        "features",
        "total_set",
        "total_set",
        "k",
        "len",
        "total_set",
        "length",
        "i",
        "k",
        "test_size",
        "training_set",
        "append",
        "total_set",
        "i",
        "i",
        "k",
        "test_size",
        "k",
        "test_size",
        "test_set",
        "append",
        "total_set",
        "i",
        "i",
        "k",
        "test_size",
        "len",
        "total_set",
        "training_set",
        "append",
        "total_set",
        "i",
        "data",
        "data",
        "total_set",
        "data",
        "k",
        "dataset",
        "k_split",
        "k",
        "dataset",
        "dataset",
        "dataset",
        "dataset",
        "dataset",
        "dataset",
        "dataset",
        "main"
    ],
    "literals": [
        "\",\"",
        "\"data/abalone.data\"",
        "\"data/car.data\"",
        "\"data/forestfires.csv\"",
        "\"data/machine.data\"",
        "\"data/segmentation.data\"",
        "\"data/winequality-red.csv\"",
        "\"data/winequality-white.csv\""
    ],
    "variables": [
        "total_set",
        "training_set",
        "test_set",
        "total_set",
        "features",
        "total_set",
        "test_size",
        "training_set",
        "test_set",
        "abalone",
        "car",
        "forest_fires",
        "machine",
        "segmentation",
        "wine_red",
        "wine_white",
        "driver"
    ],
    "comments": [
        "K-Nearest Neighbor Implementation Project",
        "Alexander Alvarez",
        "class for storing the data sets",
        "open input and output files",
        "iterate over each line in input file",
        "class containing methods for preprocessing the datasets",
        "class containing methods implementing the K-NN algorithms",
        "class for driving the program",
        "def run():",
        "main.run()"
    ],
    "docstrings": [],
    "functions": [
        "k_split",
        "remove_headers",
        "k_nearest"
    ],
    "classes": [
        "dataset",
        "pre_processing",
        "k_nearest_neighbor",
        "main"
    ]
}