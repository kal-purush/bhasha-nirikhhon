{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "IO",
        "Linq",
        "Net",
        "Http",
        "Threading",
        "Tasks",
        "EvalStr",
        "Workers",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "Extensions",
        "Logging",
        "EvalStr",
        "Controllers",
        "ApiController",
        "ControllerBase",
        "ILogger",
        "EvalStrController",
        "ILogger",
        "EvalStrController",
        "logger",
        "_logger",
        "logger",
        "Route",
        "HttpGet",
        "HttpPost",
        "HttpResponseMessage",
        "Empty",
        "StreamReader",
        "Request",
        "Body",
        "reader",
        "ReadToEndAsync",
        "_logger",
        "LogInformation",
        "body",
        "content",
        "body",
        "IsNullOrWhiteSpace",
        "content",
        "EvalStrWorker",
        "EvalStr",
        "content",
        "value",
        "errMsg",
        "_logger",
        "LogInformation",
        "value",
        "HttpResponseMessage",
        "StatusCode",
        "Net",
        "HttpStatusCode",
        "OK",
        "Content",
        "StringContent",
        "value",
        "ToString",
        "_logger",
        "LogInformation",
        "errMsg",
        "HttpResponseMessage",
        "StatusCode",
        "Net",
        "HttpStatusCode",
        "BadRequest",
        "Content",
        "StringContent",
        "errMsg",
        "HttpResponseMessage",
        "StatusCode",
        "Net",
        "HttpStatusCode",
        "BadRequest",
        "Content",
        "StringContent"
    ],
    "literals": [
        "\"evalstr\"",
        "\"Expression can't be null.\""
    ],
    "variables": [
        "_logger",
        "content",
        "reader",
        "body",
        "value",
        "errMsg"
    ],
    "comments": [
        "[Route(\"evalstr\")]",
        "[HttpPost]",
        "async public Task<HttpResponseMessage> Get(HttpRequestMessage httpRequest)",
        "{",
        "string s = await httpRequest.Content.ReadAsStringAsync();",
        "Trace.WriteLine(s);",
        "var response = new HttpResponseMessage()",
        "{",
        "Content = new StringContent(s),",
        "RequestMessage = httpRequest",
        "};",
        "return response;",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "EvalStrController",
        "Get"
    ],
    "classes": [
        "EvalStrController"
    ]
}