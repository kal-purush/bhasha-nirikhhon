{
    "identifiers": [
        "Collections",
        "Generic",
        "Reactive",
        "Linq",
        "Threading",
        "Tasks",
        "Xml",
        "Serialization",
        "NUnit",
        "Framework",
        "Obvs",
        "Kafka",
        "Configuration",
        "Obvs",
        "Serialization",
        "Obvs",
        "Serialization",
        "Json",
        "IMessage",
        "Obvs",
        "Types",
        "IMessage",
        "Obvs",
        "Kafka",
        "Tests",
        "TestFixture",
        "IMessageDeserializer",
        "ITestMessage",
        "IMessageSource",
        "ITestMessage",
        "IMessagePublisher",
        "ITestMessage",
        "ITestMessage",
        "IMessage",
        "XmlRoot",
        "ITestMessage",
        "data",
        "Data",
        "data",
        "Data",
        "SetUp",
        "KafkaConfiguration",
        "KafkaSourceConfiguration",
        "KafkaProducerConfiguration",
        "_deserializer",
        "JsonMessageDeserializer",
        "TestMessage",
        "_serializer",
        "JsonMessageSerializer",
        "PropertyFilter",
        "d",
        "PropertyProvider",
        "ITestMessage",
        "message",
        "_source",
        "MessageSource",
        "ITestMessage",
        "cfg",
        "sourceConfig",
        "topicName",
        "_deserializer",
        "PropertyFilter",
        "_publisher",
        "MessagePublisher",
        "ITestMessage",
        "cfg",
        "producerConfig",
        "topicName",
        "_serializer",
        "PropertyProvider",
        "Test",
        "Explicit",
        "TestMessage",
        "_source",
        "Messages",
        "OfType",
        "TestMessage",
        "Subscribe",
        "WriteLine",
        "message",
        "messages",
        "Add",
        "message",
        "WriteLine",
        "exception",
        "ToString",
        "TimeSpan",
        "FromSeconds",
        "WriteLine",
        "delay1",
        "Delay",
        "delay1",
        "_publisher",
        "PublishAsync",
        "TestMessage",
        "Now",
        "_publisher",
        "PublishAsync",
        "TestMessage",
        "Now",
        "_publisher",
        "PublishAsync",
        "TestMessage",
        "Now",
        "TimeSpan",
        "FromSeconds",
        "WriteLine",
        "delay2",
        "Delay",
        "delay2",
        "Assert",
        "IsNotEmpty",
        "messages",
        "Assert",
        "AreEqual",
        "messages",
        "Count",
        "Assert",
        "That",
        "messages",
        "Data",
        "StartsWith",
        "Assert",
        "That",
        "messages",
        "Data",
        "StartsWith",
        "Assert",
        "That",
        "messages",
        "Data",
        "StartsWith",
        "sub",
        "Dispose"
    ],
    "literals": [
        "\"localhost:9092\"",
        "\"test-topic-3\"",
        "\"no messages received\"",
        "\"messages received\"",
        "\"hello world\"",
        "\"incorrect message received\"",
        "\"hello world\"",
        "\"incorrect message received\"",
        "\"hello world\"",
        "\"incorrect message received\""
    ],
    "variables": [
        "_deserializer",
        "_source",
        "_publisher",
        "IMessageSerializer",
        "_serializer",
        "Data",
        "cfg",
        "sourceConfig",
        "producerConfig",
        "topicName",
        "messages",
        "sub",
        "delay1",
        "delay2"
    ],
    "comments": [
        "Steps to run local kafka broker:",
        "- Install: Docker for Windows / Docker Desktop",
        "- Clone: https://github.com/wurstmeister/kafka-docker",
        "- Edit: docker-compose-single-broker.yml",
        "- Change: KAFKA_ADVERTISED_HOST_NAME: localhost",
        "- Run: docker-compose -f \"docker-compose-single-broker.yml\" up -d --build"
    ],
    "docstrings": [],
    "functions": [
        "TestMessage",
        "TestMessage",
        "ToString",
        "SetUp",
        "TestSendAndReceiveMessage"
    ],
    "classes": [
        "TestMessageSendAndReceive",
        "TestMessage"
    ]
}