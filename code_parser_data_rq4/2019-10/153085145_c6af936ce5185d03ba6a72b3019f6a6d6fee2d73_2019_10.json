{
    "identifiers": [
        "vazkii",
        "patchouli",
        "common",
        "handler",
        "net",
        "minecraft",
        "entity",
        "player",
        "ServerPlayerEntity",
        "net",
        "minecraft",
        "resources",
        "IResourceManager",
        "net",
        "minecraft",
        "resources",
        "IResourceManagerReloadListener",
        "net",
        "minecraftforge",
        "entity",
        "player",
        "PlayerEvent",
        "net",
        "minecraftforge",
        "eventbus",
        "api",
        "EventPriority",
        "net",
        "minecraftforge",
        "eventbus",
        "api",
        "SubscribeEvent",
        "net",
        "minecraftforge",
        "fml",
        "common",
        "Mod",
        "net",
        "minecraftforge",
        "fml",
        "server",
        "FMLServerStartingEvent",
        "vazkii",
        "patchouli",
        "common",
        "Patchouli",
        "vazkii",
        "patchouli",
        "common",
        "network",
        "NetworkHandler",
        "vazkii",
        "patchouli",
        "common",
        "network",
        "message",
        "MessageReloadBookContents",
        "Mod",
        "EventBusSubscriber",
        "modid",
        "Patchouli",
        "MOD_ID",
        "SubscribeEvent",
        "priority",
        "EventPriority",
        "LOWEST",
        "evt",
        "NetworkHandler",
        "sendToPlayer",
        "evt",
        "getPlayer",
        "AdvancementSyncHandler",
        "loginSync",
        "evt",
        "getPlayer",
        "SubscribeEvent",
        "evt",
        "SuppressWarnings",
        "listener",
        "m",
        "NetworkHandler",
        "sendToAll",
        "evt",
        "getServer",
        "getResourceManager",
        "addReloadListener",
        "listener"
    ],
    "literals": [
        "\"deprecation\""
    ],
    "variables": [],
    "comments": [
        "Also reload contents when someone types /reload"
    ],
    "docstrings": [
        "We want to reload contents only when all mods are done syncing all of their \"datapack stuff\" like custom recipes\n     Because books could have custom entries that read such recipes\n     So use lowest priority and explicitly tell the client when to do it"
    ],
    "functions": [
        "playerLogin",
        "serverStart"
    ],
    "classes": [
        "ReloadContentsHandler"
    ]
}