{
    "identifiers": [
        "numpy",
        "np",
        "pytest",
        "sklearn",
        "cluster",
        "DBSCAN",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "sklearn",
        "linear_model",
        "Ridge",
        "LogisticRegression",
        "sklego",
        "common",
        "flatten",
        "sklego",
        "meta",
        "SubjectiveClassifier",
        "tests",
        "conftest",
        "general_checks",
        "classifier_checks",
        "pytest",
        "mark",
        "parametrize",
        "flatten",
        "general_checks",
        "classifier_checks",
        "test_fn",
        "test_fn",
        "SubjectiveClassifier",
        "LogisticRegression",
        "prior",
        "test_fn",
        "SubjectiveClassifier",
        "estimator",
        "pytest",
        "mark",
        "parametrize",
        "mocker",
        "classes",
        "prior",
        "cfm",
        "first_class_posterior",
        "y",
        "y_pred",
        "np",
        "array",
        "cfm",
        "mocker",
        "patch",
        "side_effect",
        "mock_confusion_matrix",
        "mocker",
        "Mock",
        "RandomForestClassifier",
        "np",
        "array",
        "classes",
        "SubjectiveClassifier",
        "mock_estimator",
        "classes",
        "prior",
        "subjective_model",
        "fit",
        "np",
        "zeros",
        "np",
        "array",
        "classes",
        "pytest",
        "approx",
        "subjective_model",
        "posterior_matrix_",
        "first_class_posterior",
        "np",
        "isclose",
        "subjective_model",
        "posterior_matrix_",
        "sum",
        "axis",
        "all",
        "pytest",
        "mark",
        "parametrize",
        "prior",
        "y",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "SubjectiveClassifier",
        "RandomForestClassifier",
        "prior",
        "fit",
        "np",
        "zeros",
        "len",
        "y",
        "np",
        "array",
        "y",
        "exc",
        "value",
        "startswith",
        "np",
        "isclose",
        "SubjectiveClassifier",
        "_to_discrete",
        "np",
        "array",
        "np",
        "array",
        "all",
        "pytest",
        "mark",
        "parametrize",
        "weights",
        "y_hats",
        "expected_probas",
        "np",
        "isclose",
        "SubjectiveClassifier",
        "_weighted_proba",
        "np",
        "array",
        "weights",
        "np",
        "array",
        "y_hats",
        "np",
        "array",
        "expected_probas",
        "atol",
        "all",
        "pytest",
        "mark",
        "parametrize",
        "mocker",
        "evidence_type",
        "expected_probas",
        "y",
        "y_pred",
        "np",
        "array",
        "mocker",
        "patch",
        "side_effect",
        "mock_confusion_matrix",
        "mocker",
        "Mock",
        "RandomForestClassifier",
        "mock_inner_estimator",
        "predict_proba",
        "np",
        "array",
        "np",
        "array",
        "SubjectiveClassifier",
        "mock_inner_estimator",
        "evidence",
        "evidence_type",
        "subjective_model",
        "fit",
        "np",
        "zeros",
        "np",
        "zeros",
        "subjective_model",
        "predict_proba",
        "np",
        "zeros",
        "posterior_probabilities",
        "shape",
        "np",
        "isclose",
        "posterior_probabilities",
        "np",
        "array",
        "expected_probas",
        "atol",
        "all",
        "pytest",
        "mark",
        "parametrize",
        "DBSCAN",
        "Ridge",
        "RandomForestClassifier",
        "RandomForestClassifier",
        "inner_estimator",
        "prior",
        "evidence",
        "expected_error_msg",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "SubjectiveClassifier",
        "inner_estimator",
        "prior",
        "evidence",
        "fit",
        "np",
        "zeros",
        "np",
        "zeros",
        "exc",
        "value",
        "startswith",
        "expected_error_msg"
    ],
    "literals": [
        "\"test_fn\"",
        "'check_classifiers_classes'",
        "'one'",
        "'two'",
        "'three'",
        "'classes, prior, cfm, first_class_posterior'",
        "'a'",
        "'b'",
        "'a'",
        "'b'",
        "'c'",
        "'sklego.meta.confusion_matrix'",
        "'prior, y'",
        "'a'",
        "'b'",
        "'a'",
        "'c'",
        "'a'",
        "'b'",
        "'Training data is inconsistent with prior'",
        "'weights,y_hats,expected_probas'",
        "'evidence_type,expected_probas'",
        "'predict_proba'",
        "'confusion_matrix'",
        "'both'",
        "'sklego.meta.confusion_matrix'",
        "'inner_estimator, prior, evidence, expected_error_msg'",
        "'a'",
        "'both'",
        "'Invalid inner estimator'",
        "'a'",
        "'predict_proba'",
        "'Invalid inner estimator'",
        "'a'",
        "'b'",
        "'confusion_matrix'",
        "'Invalid prior'",
        "'a'",
        "'b'",
        "'foo_evidence'",
        "'Invalid evidence'"
    ],
    "variables": [
        "prior",
        "prior",
        "estimator",
        "mock_estimator",
        "mock_estimator",
        "classes_",
        "subjective_model",
        "mock_inner_estimator",
        "return_value",
        "mock_inner_estimator",
        "classes_",
        "subjective_model",
        "posterior_probabilities"
    ],
    "comments": [
        "nonsensical prior to make sklearn check pass",
        "Some of the sklearn checkers generate random y data with 3 classes, so prior needs to have these classes",
        "numeric classes",
        "char classes",
        "bool classes",
        "n classes",
        "\"perfect\" confusion matrix (no FP) -> prior is ignored",
        "failure to predict class by inner estimator",
        "extremely biased, n classes",
        "biased, n classes",
        "class from train data not defined in prior",
        "different data types"
    ],
    "docstrings": [],
    "functions": [
        "test_estimator_checks_classification",
        "test_posterior_computation",
        "mock_confusion_matrix",
        "test_fit_y_data_inconsistent_with_prior_failure_conditions",
        "test_to_discrete",
        "test_weighted_proba",
        "test_predict_proba",
        "mock_confusion_matrix",
        "test_params_failure_conditions"
    ],
    "classes": []
}