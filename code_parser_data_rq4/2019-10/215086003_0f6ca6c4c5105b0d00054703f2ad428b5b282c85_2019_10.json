{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "ansible",
        "module_utils",
        "gcp_utils",
        "navigate_hash",
        "GcpSession",
        "GcpModule",
        "GcpRequest",
        "json",
        "GcpModule",
        "argument_spec",
        "fetch_list",
        "collection",
        "exit_json",
        "return_value",
        "format",
        "link",
        "GcpSession",
        "auth",
        "link",
        "return_if_object",
        "array_name",
        "response",
        "response",
        "status_code",
        "response",
        "status_code",
        "raise_for_status",
        "response",
        "response",
        "json",
        "getattr",
        "json",
        "decoder",
        "ValueError",
        "inst",
        "fail_json",
        "msg",
        "inst",
        "navigate_hash",
        "result",
        "fail_json",
        "msg",
        "navigate_hash",
        "result",
        "result",
        "main"
    ],
    "literals": [
        "'metadata_version'",
        "'1.1'",
        "'status'",
        "\"preview\"",
        "'supported_by'",
        "'community'",
        "'scopes'",
        "'scopes'",
        "'https://www.googleapis.com/auth/cloudruntimeconfig'",
        "'resources'",
        "\"https://runtimeconfig.googleapis.com/v1beta1/projects/{project}/configs\"",
        "'runtimeconfig'",
        "'configs'",
        "'JSONDecodeError'",
        "\"Invalid JSON response with error: %s\"",
        "'error'",
        "'errors'",
        "'error'",
        "'errors'",
        "\"__main__\""
    ],
    "variables": [
        "__metaclass__",
        "ANSIBLE_METADATA",
        "DOCUMENTATION",
        "EXAMPLES",
        "RETURN",
        "return_value",
        "auth",
        "result"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "",
        "Copyright (C) 2017 Google",
        "GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)",
        "----------------------------------------------------------------------------",
        "",
        "",
        "----------------------------------------------------------------------------",
        "",
        "This file is automatically generated by Magic Modules and manual",
        "changes will be clobbered when the file is regenerated.",
        "",
        "Please read more about how to change this file at",
        "https://www.github.com/GoogleCloudPlatform/magic-modules",
        "",
        "----------------------------------------------------------------------------",
        "",
        "Documentation",
        "",
        "",
        "Imports",
        "",
        "",
        "Main",
        "",
        "If not found, return nothing.",
        "If no content, return nothing."
    ],
    "docstrings": [
        "***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***",
        "'''\n---\nmodule: gcp_runtimeconfig_config_info\ndescription:\n- Gather info for GCP Config\nshort_description: Gather info for GCP Config\nversion_added: '2.10'\nauthor: Google Inc. (@googlecloudplatform)\nrequirements:\n- python >= 2.6\n- requests >= 2.18.4\n- google-auth >= 1.3.0\noptions:\n  project:\n    description:\n    - The Google Cloud Platform project to use.\n    type: str\n  auth_kind:\n    description:\n    - The type of credential used.\n    type: str\n    required: true\n    choices:\n    - application\n    - machineaccount\n    - serviceaccount\n  service_account_contents:\n    description:\n    - The contents of a Service Account JSON file, either in a dictionary or as a\n      JSON string that represents it.\n    type: jsonarg\n  service_account_file:\n    description:\n    - The path of a Service Account JSON file if serviceaccount is selected as type.\n    type: path\n  service_account_email:\n    description:\n    - An optional service account email address if machineaccount is selected and\n      the user does not wish to use the default email.\n    type: str\n  scopes:\n    description:\n    - Array of scopes to be used\n    type: list\n  env_type:\n    description:\n    - Specifies which Ansible environment you're running this module within.\n    - This should not be set unless you know what you're doing.\n    - This only alters the User Agent string for any API requests.\n    type: str\nnotes:\n- for authentication, you can set service_account_file using the C(gcp_service_account_file)\n  env variable.\n- for authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS)\n  env variable.\n- For authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL)\n  env variable.\n- For authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\n- For authentication, you can set scopes using the C(GCP_SCOPES) env variable.\n- Environment variables values will only be used if the playbook values are not set.\n- The I(service_account_email) and I(service_account_file) options are mutually exclusive.\n'''",
        "'''\n- name: get info on a config\n  gcp_runtimeconfig_config_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n'''",
        "'''\nresources:\n  description: List of resources\n  returned: always\n  type: complex\n  contains:\n    description:\n      description:\n      - The description to associate with the runtime config.\n      returned: success\n      type: str\n    name:\n      description:\n      - The name of the runtime config.\n      returned: success\n      type: str\n'''"
    ],
    "functions": [
        "main",
        "collection",
        "fetch_list",
        "return_if_object"
    ],
    "classes": []
}