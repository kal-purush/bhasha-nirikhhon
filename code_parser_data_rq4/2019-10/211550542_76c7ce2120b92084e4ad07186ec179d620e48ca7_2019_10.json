{
    "identifiers": [
        "os",
        "re",
        "sets",
        "sys",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "join",
        "DEFAULT_GMOCK_ROOT_DIR",
        "fuse_gtest_files",
        "fuse_gtest_files",
        "re",
        "compile",
        "gmock_root",
        "os",
        "path",
        "join",
        "gmock_root",
        "gmock_root",
        "gtest",
        "ValidateGTestRootDir",
        "GetGTestRootDir",
        "gmock_root",
        "gtest",
        "VerifyFileExists",
        "gmock_root",
        "GMOCK_H_SEED",
        "gtest",
        "VerifyFileExists",
        "gmock_root",
        "GMOCK_ALL_CC_SEED",
        "output_dir",
        "gtest",
        "VerifyOutputFile",
        "output_dir",
        "gtest",
        "GTEST_H_OUTPUT",
        "gtest",
        "VerifyOutputFile",
        "output_dir",
        "GMOCK_H_OUTPUT",
        "gtest",
        "VerifyOutputFile",
        "output_dir",
        "GMOCK_GTEST_ALL_CC_OUTPUT",
        "gmock_root",
        "output_dir",
        "file",
        "os",
        "path",
        "join",
        "output_dir",
        "GMOCK_H_OUTPUT",
        "sets",
        "gmock_header_path",
        "gmock_header_path",
        "processed_files",
        "processed_files",
        "add",
        "gmock_header_path",
        "line",
        "file",
        "os",
        "path",
        "join",
        "gmock_root",
        "gmock_header_path",
        "INCLUDE_GMOCK_FILE_REGEX",
        "match",
        "line",
        "m",
        "ProcessFile",
        "m",
        "group",
        "gtest",
        "INCLUDE_GTEST_FILE_REGEX",
        "match",
        "line",
        "m",
        "gtest",
        "GTEST_H_SEED",
        "processed_files",
        "processed_files",
        "add",
        "gtest",
        "GTEST_H_SEED",
        "output_file",
        "write",
        "gtest",
        "GTEST_H_OUTPUT",
        "output_file",
        "write",
        "line",
        "ProcessFile",
        "GMOCK_H_SEED",
        "output_file",
        "close",
        "gmock_root",
        "output_file",
        "sets",
        "gmock_source_file",
        "gmock_source_file",
        "processed_files",
        "processed_files",
        "add",
        "gmock_source_file",
        "line",
        "file",
        "os",
        "path",
        "join",
        "gmock_root",
        "gmock_source_file",
        "INCLUDE_GMOCK_FILE_REGEX",
        "match",
        "line",
        "m",
        "GMOCK_H_SEED",
        "processed_files",
        "processed_files",
        "add",
        "GMOCK_H_SEED",
        "output_file",
        "write",
        "GMOCK_H_OUTPUT",
        "gtest",
        "INCLUDE_GTEST_FILE_REGEX",
        "match",
        "line",
        "m",
        "gtest",
        "INCLUDE_SRC_FILE_REGEX",
        "match",
        "line",
        "m",
        "ProcessFile",
        "m",
        "group",
        "output_file",
        "write",
        "line",
        "ProcessFile",
        "GMOCK_ALL_CC_SEED",
        "gmock_root",
        "output_dir",
        "file",
        "os",
        "path",
        "join",
        "output_dir",
        "GMOCK_GTEST_ALL_CC_OUTPUT",
        "gtest",
        "FuseGTestAllCcToFile",
        "GetGTestRootDir",
        "gmock_root",
        "output_file",
        "FuseGMockAllCcToFile",
        "gmock_root",
        "output_file",
        "output_file",
        "close",
        "gmock_root",
        "output_dir",
        "ValidateGMockRootDir",
        "gmock_root",
        "ValidateOutputDir",
        "output_dir",
        "gtest",
        "FuseGTestH",
        "GetGTestRootDir",
        "gmock_root",
        "output_dir",
        "FuseGMockH",
        "gmock_root",
        "output_dir",
        "FuseGMockGTestAllCc",
        "gmock_root",
        "output_dir",
        "len",
        "sys",
        "argv",
        "argc",
        "FuseGMock",
        "DEFAULT_GMOCK_ROOT_DIR",
        "sys",
        "argv",
        "argc",
        "FuseGMock",
        "sys",
        "argv",
        "sys",
        "argv",
        "__doc__",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "'wan@google.com (Zhanyong Wan)'",
        "'..'",
        "'../googletest/scripts'",
        "r'^\\s*#\\s*include\\s*\"(gmock/.+)\"'",
        "'include/gmock/gmock.h'",
        "'src/gmock-all.cc'",
        "'gtest/gtest.h'",
        "'gmock/gmock.h'",
        "'gmock-gtest-all.cc'",
        "'../googletest'",
        "'w'",
        "'r'",
        "'include/'",
        "'#include \"%s\"\\n'",
        "'r'",
        "'#include \"%s\"\\n'",
        "'w'",
        "'__main__'"
    ],
    "variables": [
        "__author__",
        "DEFAULT_GMOCK_ROOT_DIR",
        "gtest",
        "INCLUDE_GMOCK_FILE_REGEX",
        "GMOCK_H_SEED",
        "GMOCK_ALL_CC_SEED",
        "GTEST_H_OUTPUT",
        "GMOCK_H_OUTPUT",
        "GMOCK_GTEST_ALL_CC_OUTPUT",
        "output_file",
        "processed_files",
        "m",
        "m",
        "processed_files",
        "m",
        "m",
        "m",
        "output_file",
        "argc"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "Copyright 2009, Google Inc.",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are",
        "met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "copyright notice, this list of conditions and the following disclaimer",
        "in the documentation and/or other materials provided with the",
        "distribution.",
        "contributors may be used to endorse or promote products derived from",
        "this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
        "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
        "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
        "DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
        "THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
        "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "We assume that this file is in the scripts/ directory in the Google",
        "Mock root directory.",
        "We need to call into googletest/scripts/fuse_gtest_files.py.",
        "Regex for matching '#include \"gmock/...\"'.",
        "Where to find the source seed files.",
        "Where to put the generated files.",
        "Holds all gmock headers we've processed.",
        "We don't process the same header twice.",
        "Reads each line in the given gmock header.",
        "It's '#include \"gmock/...\"' - let's process it recursively.",
        "It's '#include \"gtest/foo.h\"'.  We translate it to",
        "\"gtest/gtest.h\", regardless of what foo is, since all",
        "gtest headers are fused into gtest/gtest.h.",
        "There is no need to #include gtest.h twice.",
        "Otherwise we copy the line unchanged to the output file.",
        "We don't process the same #included file twice.",
        "Reads each line in the given gmock source file.",
        "It's '#include \"gmock/foo.h\"'.  We treat it as '#include",
        "\"gmock/gmock.h\"', as all other gmock headers are being fused",
        "into gmock.h and cannot be #included directly.",
        "There is no need to #include \"gmock/gmock.h\" more than once.",
        "It's '#include \"gtest/...\"'.",
        "There is no need to #include gtest.h as it has been",
        "#included by gtest-all.cc.",
        "It's '#include \"src/foo\"' - let's process it recursively.",
        "Otherwise we copy the line unchanged to the output file.",
        "First, fuse gtest-all.cc into gmock-gtest-all.cc.",
        "Next, append fused gmock-all.cc to gmock-gtest-all.cc.",
        "fuse_gmock_files.py OUTPUT_DIR",
        "fuse_gmock_files.py GMOCK_ROOT_DIR OUTPUT_DIR"
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above",
        "* Neither the name of Google Inc. nor the names of its",
        "\"\"\"fuse_gmock_files.py v0.1.0\nFuses Google Mock and Google Test source code into two .h files and a .cc file.\n\nSYNOPSIS\n       fuse_gmock_files.py [GMOCK_ROOT_DIR] OUTPUT_DIR\n\n       Scans GMOCK_ROOT_DIR for Google Mock and Google Test source\n       code, assuming Google Test is in the GMOCK_ROOT_DIR/../googletest\n       directory, and generates three files:\n       OUTPUT_DIR/gtest/gtest.h, OUTPUT_DIR/gmock/gmock.h, and\n       OUTPUT_DIR/gmock-gtest-all.cc.  Then you can build your tests\n       by adding OUTPUT_DIR to the include search path and linking\n       with OUTPUT_DIR/gmock-gtest-all.cc.  These three files contain\n       everything you need to use Google Mock.  Hence you can\n       \"install\" Google Mock by copying them to wherever you want.\n\n       GMOCK_ROOT_DIR can be omitted and defaults to the parent\n       directory of the directory holding this script.\n\nEXAMPLES\n       ./fuse_gmock_files.py fused_gmock\n       ./fuse_gmock_files.py path/to/unpacked/gmock fused_gmock\n\nThis tool is experimental.  In particular, it assumes that there is no\nconditional inclusion of Google Mock or Google Test headers.  Please\nreport any problems to googlemock@googlegroups.com.  You can read\nhttps://github.com/google/googletest/blob/master/googlemock/docs/cook_book.md for more\ninformation.\n\"\"\"",
        "\"\"\"Returns the root directory of Google Test.\"\"\"",
        "\"\"\"Makes sure gmock_root points to a valid gmock root directory.\n\n  The function aborts the program on failure.\n  \"\"\"",
        "\"\"\"Makes sure output_dir points to a valid output directory.\n\n  The function aborts the program on failure.\n  \"\"\"",
        "\"\"\"Scans folder gmock_root to generate gmock/gmock.h in output_dir.\"\"\"",
        "\"\"\"Processes the given gmock header file.\"\"\"",
        "\"\"\"Scans folder gmock_root to fuse gmock-all.cc into output_file.\"\"\"",
        "\"\"\"Processes the given gmock source file.\"\"\"",
        "\"\"\"Scans folder gmock_root to generate gmock-gtest-all.cc in output_dir.\"\"\"",
        "\"\"\"Fuses gtest.h, gmock.h, and gmock-gtest-all.h.\"\"\""
    ],
    "functions": [
        "GetGTestRootDir",
        "ValidateGMockRootDir",
        "ValidateOutputDir",
        "FuseGMockH",
        "ProcessFile",
        "FuseGMockAllCcToFile",
        "ProcessFile",
        "FuseGMockGTestAllCc",
        "FuseGMock",
        "main"
    ],
    "classes": []
}