{
    "identifiers": [
        "stats_clf",
        "scipy",
        "io",
        "loadmat",
        "numpy",
        "np",
        "math",
        "log",
        "e",
        "exp",
        "pi",
        "datetime",
        "datetime",
        "util",
        "print_result",
        "datetime",
        "now",
        "datetime",
        "now",
        "loadmat",
        "data",
        "data",
        "data",
        "data",
        "log",
        "val",
        "idx",
        "val",
        "np",
        "ndenumerate",
        "xTrain",
        "log",
        "val",
        "idx",
        "val",
        "np",
        "ndenumerate",
        "xTest",
        "np",
        "asarray",
        "xTrain_log",
        "xTrain_log",
        "reshape",
        "xTrain",
        "shape",
        "xTrain",
        "shape",
        "np",
        "asarray",
        "xTest_log",
        "xTest_log",
        "reshape",
        "xTest",
        "shape",
        "xTest",
        "shape",
        "np",
        "zeros",
        "xTrain",
        "shape",
        "xTrain",
        "shape",
        "np",
        "zeros",
        "xTest",
        "shape",
        "xTest",
        "shape",
        "xTrain",
        "xTest",
        "stats_clf",
        "BiBetaNB",
        "i",
        "i",
        "a",
        "a_val",
        "BiClf",
        "set_params",
        "a",
        "train_Bi",
        "append",
        "BiClf",
        "fit",
        "xTrain_bi",
        "yTrain",
        "eval_Bi",
        "append",
        "BiClf",
        "evaluate",
        "xTest_bi",
        "yTest",
        "print_result",
        "train_Bi",
        "eval_Bi",
        "a_val",
        "stats_clf",
        "GaussianNB",
        "GaClf",
        "fit",
        "xTrain_log",
        "yTrain",
        "GaClf",
        "evaluate",
        "xTest_log",
        "yTest",
        "train_Ga",
        "eval_Ga",
        "stats_clf",
        "BiLogReg",
        "i",
        "i",
        "i",
        "i",
        "lamb",
        "lamb_val",
        "LogClf",
        "set_params",
        "lamb",
        "train_Log",
        "append",
        "LogClf",
        "fit",
        "xTrain_log",
        "yTrain",
        "eval_Log",
        "append",
        "LogClf",
        "evaluate",
        "xTest_log",
        "yTest",
        "print_result",
        "train_Log",
        "eval_Log",
        "lamb_val",
        "stats_clf",
        "KNNeighbors",
        "k",
        "lamb_val",
        "knn",
        "set_params",
        "k",
        "train_knn",
        "append",
        "knn",
        "fit",
        "xTrain_log",
        "yTrain",
        "eval_knn",
        "append",
        "knn",
        "evaluate",
        "xTest_log",
        "yTest",
        "print_result",
        "train_knn",
        "eval_knn",
        "lamb_val",
        "datetime",
        "now",
        "datetime",
        "now",
        "begin"
    ],
    "literals": [
        "'Starting script at '",
        "'spamData.mat'",
        "'Xtrain'",
        "'Xtest'",
        "'ytrain'",
        "'ytest'",
        "'\\nBeta-Bionomial Classifier \\n'",
        "'\\nGaussian Classifier\\n'",
        "\"Training error and accuracy: \"",
        "'\\n'",
        "\"Test error and accuracy: \"",
        "'\\nLogistic Regression Classifier\\n'",
        "'\\nK-Nearest Neighbors Classifier\\n'",
        "'Finishes classification at '",
        "'Total runtime: '"
    ],
    "variables": [
        "begin",
        "data",
        "xTrain",
        "xTest",
        "yTrain",
        "yTest",
        "xTrain_log",
        "xTest_log",
        "xTrain_log",
        "xTrain_log",
        "xTest_log",
        "xTest_log",
        "xTrain_bi",
        "xTest_bi",
        "xTrain_bi",
        "xTest_bi",
        "BiClf",
        "train_Bi",
        "eval_Bi",
        "a_val",
        "GaClf",
        "train_Ga",
        "eval_Ga",
        "LogClf",
        "lamb_val",
        "train_Log",
        "eval_Log",
        "knn",
        "train_knn",
        "eval_knn"
    ],
    "comments": [
        "stats_clf.py must be in the same folder",
        "import matplotlib.pyplot as plt",
        "Load data and preprocess ###",
        "Assume data file is located in the same folder",
        "Training and Classification ###",
        "Beta-Bionomial Naive Bayes Classifier",
        "Values of a to be fitted to beta-bi",
        "Gaussian Naive Bayes Classifier",
        "Logistic Regression Classifier",
        "Values of parameter fitted to logistic and knn",
        "K-Nearest Neighbors Classifier",
        "Plotting code ###",
        "Uncomment the below and import matplotlib.pyplot to run.",
        "Will save images to .png files to the same current folder #",
        "f1 = plt.figure(dpi=100)",
        "ax1 = f1.subplots()",
        "ax1.plot(lamb_val,np.asarray(train_knn)[:,0])",
        "ax1.plot(lamb_val,np.asarray(eval_knn)[:,0])",
        "ax1.legend(['Training error','Evaluate error'])",
        "f2 = plt.figure(dpi=100)",
        "ax1 = f2.subplots()",
        "ax1.plot(lamb_val,np.asarray(train_Log)[:,0])",
        "ax1.plot(lamb_val,np.asarray(eval_Log)[:,0])",
        "ax1.legend(['Training error','Evaluate error'])",
        "f3 = plt.figure(dpi=100)",
        "ax1 = f3.subplots()",
        "ax1.plot(a_val,np.asarray(train_Bi)[:,0])",
        "ax1.plot(a_val,np.asarray(eval_Bi)[:,0])",
        "ax1.legend(['Training error','Evaluate error'])",
        "f1.savefig('K-Nearest Neighbors Error.png')",
        "f2.savefig('Logistics Regression Error.png')",
        "f3.savefig('Beta-Bionmial Error.png')"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}