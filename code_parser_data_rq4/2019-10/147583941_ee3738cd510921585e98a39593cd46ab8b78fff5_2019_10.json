{
    "identifiers": [
        "argparse",
        "logging",
        "slither",
        "Slither",
        "crytic_compile",
        "cryticparser",
        "slither",
        "utils",
        "erc",
        "ERCS",
        "erc",
        "ercs",
        "generic_erc_checks",
        "logging",
        "basicConfig",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "logging",
        "StreamHandler",
        "ch",
        "setLevel",
        "logging",
        "INFO",
        "logging",
        "Formatter",
        "logger",
        "addHandler",
        "ch",
        "logger",
        "handlers",
        "setFormatter",
        "formatter",
        "argparse",
        "ArgumentParser",
        "description",
        "usage",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "join",
        "ERCS",
        "keys",
        "action",
        "cryticparser",
        "init",
        "parser",
        "parser",
        "parse_args",
        "parse_args",
        "Slither",
        "args",
        "project",
        "vars",
        "args",
        "args",
        "erc",
        "upper",
        "ERCS",
        "slither",
        "get_contract_from_name",
        "args",
        "contract_name",
        "contract",
        "logger",
        "error",
        "args",
        "contract_name",
        "ERCS",
        "args",
        "erc",
        "upper",
        "generic_erc_checks",
        "contract",
        "erc",
        "erc",
        "logger",
        "error",
        "args",
        "erc",
        "main"
    ],
    "literals": [
        "\"Slither\"",
        "\"Slither-conformance\"",
        "'%(message)s'",
        "'Check the ERC 20 conformance'",
        "'slither-erc project contractName'",
        "'project'",
        "'The codebase to be tested.'",
        "'contract_name'",
        "'The name of the contract. Specify the first case contract that follow the standard. Derived contracts will be checked.'",
        "\"--erc\"",
        "f\"ERC to be tested, available {','.join(ERCS.keys())} (default ERC20)\"",
        "','",
        "\"store\"",
        "\"erc20\"",
        "f'Contract not found: {args.contract_name}'",
        "f'Incorrect ERC selected {args.erc}'",
        "'__main__'"
    ],
    "variables": [
        "logger",
        "ch",
        "formatter",
        "logger",
        "propagate",
        "parser",
        "args",
        "slither",
        "contract",
        "erc"
    ],
    "comments": [
        "Add default arguments from crytic-compile",
        "Perform slither analysis on the given filename",
        "First elem is the function, second is the event"
    ],
    "docstrings": [
        "\"\"\"\n    Parse the underlying arguments for the program.\n    :return: Returns the arguments for the program.\n    \"\"\""
    ],
    "functions": [
        "parse_args",
        "main"
    ],
    "classes": []
}