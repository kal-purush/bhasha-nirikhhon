{
    "identifiers": [
        "case_studies",
        "swan_coastal_plain",
        "CF_tensor",
        "numpy",
        "np",
        "torch",
        "case_studies",
        "swan_coastal_plain",
        "CF_tensor",
        "ClayFraction",
        "torch",
        "rand",
        "torch",
        "rand",
        "torch",
        "rand",
        "torch",
        "rand",
        "torch",
        "rand",
        "torch",
        "rand",
        "torch",
        "rand",
        "ClayFraction",
        "log_x",
        "log_y",
        "log_cf",
        "aem_x",
        "aem_y",
        "aem_resist",
        "constraint_pair",
        "tolerant_err",
        "learning_rate",
        "clay_fraction",
        "AEM_resist",
        "m_up",
        "m_low",
        "m_up",
        "m_low",
        "torch",
        "FloatTensor",
        "clay_fraction",
        "translator_function",
        "fed_out",
        "interval",
        "aem_cf",
        "size",
        "torch",
        "Size",
        "aem_cf",
        "aem_cf",
        "clay_fraction",
        "Kriging_interpolation",
        "aem_cf",
        "interpolated_cf",
        "size",
        "torch",
        "Size",
        "interpolated_var",
        "size",
        "torch",
        "Size",
        "interpolated_cf",
        "interpolated_var",
        "clay_fraction",
        "regularization_constraint",
        "clay_fraction",
        "regularization_data",
        "interpolated_cf",
        "interpolated_var",
        "clay_fraction",
        "objective_function",
        "interpolated_cf",
        "interpolated_var",
        "test_translator_function",
        "test_kriging_interpolation",
        "aem_cf",
        "test_regularisation_constraint",
        "test_regularisation_data",
        "test_objective_function"
    ],
    "literals": [
        "'translator function test passed'",
        "'Kriging interpolation dimension test passed'",
        "'reg constraint test passed'",
        "'reg data test passed'",
        "'obj function test passed'"
    ],
    "variables": [
        "log_x",
        "log_y",
        "log_cf",
        "aem_x",
        "aem_y",
        "aem_resist",
        "constraint_pair",
        "tolerant_err",
        "learning_rate",
        "clay_fraction",
        "m_up",
        "m_low",
        "fed_out",
        "interval",
        "aem_cf",
        "interpolated_cf",
        "interpolated_var",
        "aem_cf",
        "interpolated_cf",
        "interpolated_var"
    ],
    "comments": [
        "assume the constraint scale is 2*3"
    ],
    "docstrings": [
        "\"\"\"\nThe tensor version is difficult to test, so I tried to print important tensors and checked them with manual calculation \nresult. However, this can be adapted to a representation of interface. The shape/format of input tensors can be indicated \nhere.\n\"\"\""
    ],
    "functions": [
        "test_translator_function",
        "test_kriging_interpolation",
        "test_regularisation_constraint",
        "test_regularisation_data",
        "test_objective_function"
    ],
    "classes": []
}