{
    "identifiers": [
        "pip",
        "install",
        "r",
        "requirement",
        "txt",
        "logging",
        "io",
        "json",
        "warnings",
        "logging",
        "basicConfig",
        "level",
        "warnings",
        "filterwarnings",
        "o",
        "json",
        "dumps",
        "o",
        "indent",
        "sys",
        "sys",
        "executable",
        "python",
        "m",
        "pip",
        "install",
        "U",
        "rasa_core",
        "rasa_nlu",
        "spacy",
        "python",
        "m",
        "spacy",
        "download",
        "en_core_web_md",
        "python",
        "m",
        "spacy",
        "link",
        "en_core_web_md",
        "en",
        "force",
        "rasa_nlu",
        "rasa_core",
        "spacy",
        "format",
        "rasa_nlu",
        "__version__",
        "rasa_core",
        "__version__",
        "spacy",
        "load",
        "pt",
        "get",
        "qq",
        "install",
        "y",
        "graphviz",
        "libgraphviz",
        "dev",
        "pkg",
        "config",
        "req",
        "install",
        "graphviz",
        "python",
        "m",
        "pip",
        "install",
        "pygraphviz",
        "IPython",
        "core",
        "display",
        "HTML",
        "IPython",
        "display",
        "Image",
        "Image",
        "filename",
        "rasa_nlu",
        "training_data",
        "load_data",
        "rasa_nlu",
        "config",
        "RasaNLUModelConfig",
        "rasa_nlu",
        "model",
        "Trainer",
        "rasa_nlu",
        "config",
        "load_data",
        "Trainer",
        "config",
        "load",
        "trainer",
        "train",
        "training_data",
        "trainer",
        "persist",
        "fixed_model_name",
        "pprint",
        "interpreter",
        "parse",
        "rasa_core",
        "actions",
        "Action",
        "rasa_core",
        "events",
        "SlotSet",
        "IPython",
        "core",
        "display",
        "Image",
        "display",
        "requests",
        "Action",
        "dispatcher",
        "tracker",
        "domain",
        "tracker",
        "get_slot",
        "requests",
        "get",
        "format",
        "group",
        "r",
        "content",
        "decode",
        "response",
        "replace",
        "response",
        "replace",
        "dispatcher",
        "utter_message",
        "format",
        "response",
        "rasa_core",
        "policies",
        "FallbackPolicy",
        "KerasPolicy",
        "MemoizationPolicy",
        "rasa_core",
        "agent",
        "Agent",
        "FallbackPolicy",
        "fallback_action_name",
        "core_threshold",
        "nlu_threshold",
        "Agent",
        "policies",
        "MemoizationPolicy",
        "KerasPolicy",
        "fallback",
        "agent",
        "load_data",
        "agent",
        "train",
        "training_data",
        "validation_split",
        "epochs",
        "agent",
        "persist",
        "rasa_core",
        "agent",
        "Agent",
        "Agent",
        "load",
        "interpreter",
        "model_directory",
        "input",
        "a",
        "agent",
        "handle_message",
        "a",
        "response",
        "responses",
        "response"
    ],
    "literals": [
        "\"INFO\"",
        "'ignore'",
        "\"rasa_nlu: {} rasa_core: {}\"",
        "\"Loading spaCy language model...\"",
        "\"en\"",
        "\"Hello world!\"",
        "'test.png'",
        "\"nlu.md\"",
        "\"config.yml\"",
        "\"./models/nlu\"",
        "\"current\"",
        "\"I want to report my job\"",
        "\"action_retrieve_image\"",
        "'group'",
        "'http://shibe.online/api/{}?count=1&urls=true&httpsUrls=true'",
        "'[\"'",
        "\"\"",
        "'\"]'",
        "\"\"",
        "\"Here is something to cheer you up: {}\"",
        "\"utter_unclear\"",
        "'domain.yml'",
        "'stories.md'",
        "'models/dialogue'",
        "'models/dialogue'",
        "\"Your bot is ready to talk! Type your messages here or send 'stop'\"",
        "'stop'",
        "\"text\""
    ],
    "variables": [
        "python",
        "nlu_md",
        "config",
        "training_data",
        "trainer",
        "interpreter",
        "model_directory",
        "stories_md",
        "domain_yml",
        "group",
        "r",
        "response",
        "response",
        "response",
        "fallback",
        "agent",
        "training_data",
        "agent",
        "a",
        "responses"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Commented out IPython magic to ensure Python compatibility.",
        "%matplotlib inline",
        "small helper to make dict dumps a bit prettier",
        "In your environment run:",
        "as well as install a language model:",
        "loading the nlu training samples",
        "trainer to educate our pipeline",
        "train the model!",
        "store it for future use",
        "display(Image(response[0], height=550, width=520))",
        "this will catch predictions the model isn't very certain about",
        "there is a threshold for the NLU predictions as well as the action predictions",
        "loading our neatly defined training dialogues"
    ],
    "docstrings": [
        "\"\"\"HERB.ipynb\n\nAutomatically generated by Colaboratory.\n\nOriginal file is located at\n    https://colab.research.google.com/drive/1my4ucTvRJ5lav7HY5IMlxt3K71Z9fx30\n\"\"\"",
        "\"\"\"\n## intent:greet\n- hey\n- hello there\n- hi\n- hello there\n- good morning\n- good evening\n- moin\n- hey there\n- let's go\n- hey dude\n- goodmorning\n- goodevening\n- good afternoon\n## intent:complain\n-protest\n-grumble\n-moan\n-oppose\n-criticize\n-whine\n-whining\n-accuse\n-dissaprove\n-fuss\n-snivel\n-carp\n## intent:goodbye\n- cu\n- good by\n- cee you later\n- good night\n- good afternoon\n- bye\n- goodbye\n- have a nice day\n- see you around\n- bye bye\n- see you later\n\n## intent:mood_affirm\n- yes\n- indeed\n- of course\n- that sounds good\n- correct\n\n## intent:mood_deny\n- no\n- never\n- I don't think so\n- don't like that\n- no way\n- not really\n\n## intent:mood_great\n- perfect\n- very good\n- great\n- amazing\n- feeling like a king\n- wonderful\n- I am feeling very good\n- I am great\n- I am amazing\n- I am going to save the world\n- super\n- extremely good\n- so so perfect\n- so good\n- so perfect\n## intent:need_leave\n-want to get a leave[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-need a leave its urgent[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-its very important to take a leave[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-i would like to apply for a leave[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-can i get a few days off[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-can i get a vacation[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-i need a vacation[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-i am sick[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-my mother is sick[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-my father is sick[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-my grandmother is sick[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n-personal reasons[leave](https://forms.gle/Sgsp2J7B1kmYdLXe7)\n\n## intent:mood_unhappy\n- my day was horrible\n- I am sad\n- I don't feel very well\n- I am disappointed\n- super sad\n- I'm so sad\n- sad\n- very sad\n- unhappy\n- bad\n- very bad\n- awful\n- terrible\n- not so good\n- not very good\n- extremly sad\n- so saad\n- Quite bad - can I get a cute picture of a [bird](group:birds), please?\n- Really bad and only [doggo](group:shibes) pics and change that.\n- Not good. The only thing that could make me fell better is a picture of a cute [kitten](group:cats).\n- so sad. Only the picture of a [puppy](group:shibes) could make it better.\n- I am very sad. I need a [cat](group:cats) picture.\n- Extremely sad. Only the cute [doggo](group:shibes) pics can make me feel better.\n- Bad. Please show me a [bird](group:birds) pic!\n- Pretty bad to be honest. Can you show me a [puppy](group:shibes) picture to make me fell better?\n\n## intent: inform\n- A [dog](group:shibes)\n- [dog](group:shibes)\n- [bird](group:birds)\n- a [cat](group:cats)\n- [cat](group:cats)\n- a [bird](group:birds)\n- of a [dog](group:shibes)\n- of a [cat](group:cats)\n- a [bird](group:birds), please\n- a [dog](group:shibes), please\n\n## intent:review\n-Want to write a review\n-want to give a review\n-any reviews possible\n-i wanna submit about my job\n-a job review\n\"\"\"",
        "\"\"\"\nlanguage: \"en\"\n\npipeline:\n- name: \"nlp_spacy\"                   # loads the spacy language model\n- name: \"tokenizer_spacy\"             # splits the sentence into tokens\n- name: \"ner_crf\"                   # uses the pretrained spacy NER model\n- name: \"intent_featurizer_spacy\"     # transform the sentence into a vector representation\n- name: \"intent_classifier_sklearn\"   # uses the vector representation to classify using SVM\n- name: \"ner_synonyms\"                # trains the synonyms\n\"\"\"",
        "\"\"\"\n\n## happy path               <!-- name of the story - just for debugging -->\n* greet              \n  - utter_greet\n* mood_great               <!-- user utterance, in format intent[entities] -->\n  - utter_happy\n* mood_affirm\n  - utter_happy\n* mood_affirm\n  - utter_goodbye\n  \n## sad path 1               <!-- this is already the start of the next story -->\n* greet\n  - utter_greet             <!-- action the bot should execute -->\n* mood_unhappy\n  - utter_ask_picture\n* inform{\"animal\":\"dog\"}  \n  - action_retrieve_image\n  - utter_did_that_help\n* mood_affirm\n  - utter_happy\n\n## sad path 2\n* greet\n  - utter_greet\n* mood_unhappy\n  - utter_ask_picture\n* inform{\"group\":\"cat\"}\n  - action_retrieve_image\n  - utter_did_that_help\n* mood_deny\n  - utter_goodbye\n  \n## sad path 3\n* greet\n  - utter_greet\n* mood_unhappy{\"group\":\"puppy\"}\n  - action_retrieve_image\n  - utter_did_that_help\n* mood_affirm\n  - utter_happy\n  \n## strange user\n* mood_affirm\n  - utter_happy\n* mood_affirm\n  - utter_unclear\n\n## say goodbye\n* goodbye\n  - utter_goodbye\n\n## fallback\n- utter_unclear\n\n## leave\n*greet\n  -utter_greet\n*utter_need_leave\n## givereport\n*greet\n  - utter_greet\n*leave\n  -utter_ask_report\n\n\n\n\"\"\"",
        "\"\"\"\n\nintents:\n- greet\n- goodbye\n- mood_affirm\n- mood_deny\n- mood_great\n- mood_unhappy\n- inform\n- leave\n- askreport\n\nslots:\n  group:\n    type: text\n    \nentities:\n- group\n\nactions:\n- utter_greet\n- utter_did_that_help\n- utter_happy\n- utter_goodbye\n- utter_unclear\n- utter_ask_picture\n- utter_need_leave\n- utter_ask_report\n- __main__.ApiAction\n\ntemplates:\n  utter_greet:\n  - text: \"Hey! How are you?\"\n\n  utter_did_that_help:\n  - text: \"Did that help you?\"\n\n  utter_unclear:\n  - text: \"I am not sure what you are aiming for.\"\n  - text: \"do you want a leave\"\n  \n  utter_happy:\n  - text: \"Great carry on!\"\n\n  utter_goodbye:\n  - text: \"Bye\"\n  \n  utter_ask_picture:\n  - text: \"To cheer you up, I can show you a cute picture of a dog, cat or a bird. Which one do you choose?\"\n\n  utter_ask_report:\n    -text: \"GO TO THE LINK www.google.com\"\n  utter_need_leave:\n    -text: \"Submit your leave at (https://forms.gle/Sgsp2J7B1kmYdLXe7)\" \n\"\"\""
    ],
    "functions": [
        "pprint",
        "name",
        "run"
    ],
    "classes": [
        "ApiAction"
    ]
}