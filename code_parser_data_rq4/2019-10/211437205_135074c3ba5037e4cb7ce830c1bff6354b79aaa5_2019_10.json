{
    "identifiers": [
        "kivy",
        "uix",
        "widget",
        "Widget",
        "kivy",
        "uix",
        "label",
        "Label",
        "kivy",
        "uix",
        "stencilview",
        "StencilView",
        "kivy",
        "properties",
        "NumericProperty",
        "BooleanProperty",
        "BoundedNumericProperty",
        "StringProperty",
        "ListProperty",
        "ObjectProperty",
        "DictProperty",
        "AliasProperty",
        "kivy",
        "clock",
        "Clock",
        "kivy",
        "graphics",
        "Mesh",
        "Color",
        "Rectangle",
        "kivy",
        "graphics",
        "Fbo",
        "kivy",
        "graphics",
        "texture",
        "Texture",
        "kivy",
        "EventDispatcher",
        "kivy",
        "lang",
        "Builder",
        "kivy",
        "logger",
        "Logger",
        "kivy",
        "metrics",
        "math",
        "log10",
        "floor",
        "ceil",
        "Decimal",
        "numpy",
        "np",
        "ImportError",
        "e",
        "x",
        "x",
        "x",
        "x",
        "Builder",
        "load_string",
        "Label",
        "NumericProperty",
        "EventDispatcher",
        "Axis",
        "Axis",
        "Widget",
        "ObjectProperty",
        "ObjectProperty",
        "ObjectProperty",
        "ObjectProperty",
        "ObjectProperty",
        "ListProperty",
        "ListProperty",
        "ObjectProperty",
        "ObjectProperty",
        "ListProperty",
        "ListProperty",
        "ListProperty",
        "ListProperty",
        "ListProperty",
        "ListProperty",
        "ListProperty",
        "DictProperty",
        "BooleanProperty",
        "kwargs",
        "Graph",
        "kwargs",
        "canvas",
        "Fbo",
        "size",
        "size",
        "with_stencilbuffer",
        "_with_stencilbuffer",
        "_fbo",
        "Color",
        "background_color",
        "Rectangle",
        "size",
        "size",
        "Color",
        "tick_color",
        "Mesh",
        "mode",
        "Color",
        "border_color",
        "Mesh",
        "mode",
        "canvas",
        "Color",
        "Rectangle",
        "size",
        "size",
        "texture",
        "_fbo",
        "texture",
        "_mesh_rect",
        "StencilView",
        "add_widget",
        "_plot_area",
        "Clock",
        "create_trigger",
        "_redraw_all",
        "Clock",
        "create_trigger",
        "_redraw_size",
        "Clock",
        "create_trigger",
        "_update_colors",
        "bind",
        "center",
        "ts",
        "padding",
        "ts",
        "precision",
        "ts",
        "plots",
        "ts",
        "x_grid",
        "ts",
        "y_grid",
        "ts",
        "draw_border",
        "ts",
        "bind",
        "xmin",
        "t",
        "xmax",
        "t",
        "xlog",
        "t",
        "x_ticks_major",
        "t",
        "x_ticks_minor",
        "t",
        "xlabel",
        "t",
        "x_grid_label",
        "t",
        "ymin",
        "t",
        "ymax",
        "t",
        "ylog",
        "t",
        "y_ticks_major",
        "t",
        "y_ticks_minor",
        "t",
        "ylabel",
        "t",
        "y_grid_label",
        "t",
        "font_size",
        "t",
        "label_options",
        "t",
        "x_ticks_angle",
        "t",
        "bind",
        "tick_color",
        "tc",
        "background_color",
        "tc",
        "border_color",
        "tc",
        "_trigger",
        "widget",
        "widget",
        "_plot_area",
        "canvas",
        "_fbo",
        "Graph",
        "add_widget",
        "widget",
        "widget",
        "_plot_area",
        "canvas",
        "widget",
        "widget",
        "_plot_area",
        "canvas",
        "_fbo",
        "Graph",
        "remove_widget",
        "widget",
        "widget",
        "_plot_area",
        "canvas",
        "major",
        "minor",
        "log",
        "s_min",
        "s_max",
        "major",
        "s_max",
        "s_min",
        "log",
        "log10",
        "s_min",
        "log10",
        "s_max",
        "floor",
        "s_max",
        "s_min",
        "floor",
        "s_min",
        "n_decades",
        "floor",
        "s_max",
        "n_decades",
        "s_min",
        "n_decades",
        "s_max",
        "floor",
        "s_max",
        "n_decades",
        "s_max",
        "s_min",
        "n_decades",
        "floor",
        "s_max",
        "n_decades",
        "major",
        "floor",
        "n_ticks_major",
        "minor",
        "minor",
        "major",
        "minor",
        "minor",
        "n_ticks",
        "n_ticks",
        "decade_dist",
        "floor",
        "s_min",
        "ceil",
        "Decimal",
        "s_min",
        "s_min_low",
        "Decimal",
        "decade_dist",
        "decade_dist",
        "minor",
        "floor",
        "start_dec",
        "decade_dist",
        "minor",
        "start_dec",
        "s_min_low",
        "start_dec",
        "decade_dist",
        "count",
        "floor",
        "pos_dec",
        "pos_dec",
        "pos_dec_low",
        "abs",
        "diff",
        "decade_dist",
        "zero",
        "pos_dec_low",
        "log10",
        "pos_dec",
        "pos_dec_low",
        "ceil",
        "pos_dec",
        "pos_log",
        "s_max",
        "count",
        "zero",
        "diff",
        "min_pos",
        "minor",
        "count_min",
        "minor",
        "pos_log",
        "k",
        "pos_log",
        "k2",
        "count_min",
        "major",
        "minor",
        "minor",
        "floor",
        "s_max",
        "s_min",
        "tick_dist",
        "floor",
        "s_max",
        "s_min",
        "major",
        "n_ticks",
        "len",
        "points_major",
        "m",
        "n_ticks",
        "minor",
        "m",
        "minor",
        "m",
        "tick_dist",
        "s_min",
        "k2",
        "m",
        "tick_dist",
        "s_min",
        "k",
        "points_major",
        "k",
        "points_minor",
        "k2",
        "points_major",
        "points_minor",
        "_xlabel",
        "_ylabel",
        "x",
        "y",
        "width",
        "height",
        "padding",
        "padding",
        "x",
        "padding",
        "y",
        "width",
        "x",
        "height",
        "y",
        "ymin",
        "ymax",
        "xmin",
        "precision",
        "xlabel",
        "xlabel",
        "xlabel",
        "texture_update",
        "xlabel",
        "texture_size",
        "x",
        "width",
        "xlabel",
        "width",
        "padding",
        "y",
        "y_next",
        "padding",
        "xlabel",
        "height",
        "ylabel",
        "ylabel",
        "ylabel",
        "texture_update",
        "ylabel",
        "texture_size",
        "padding",
        "x",
        "ylabel",
        "width",
        "ylabel",
        "height",
        "x_next",
        "padding",
        "ylabel",
        "height",
        "_ticks_majorx",
        "_x_grid_label",
        "x_grid_label",
        "y_grid_label",
        "_ticks_majory",
        "_y_grid_label",
        "len",
        "ylabels",
        "ylabel_grid",
        "exp10",
        "ylog",
        "identity",
        "log10",
        "ylog",
        "identity",
        "ylabels",
        "precision",
        "funcexp",
        "ypoints",
        "ylabels",
        "texture_update",
        "ylabels",
        "texture_size",
        "y_next",
        "padding",
        "y1",
        "len",
        "xlabels",
        "xlabel_grid",
        "padding",
        "y1",
        "y_next",
        "y",
        "height",
        "padding",
        "y1",
        "funclog",
        "ymin",
        "yextent",
        "y_start",
        "funclog",
        "ymax",
        "ymin",
        "y_start",
        "y1",
        "y1",
        "k",
        "len",
        "ylabels",
        "ylabels",
        "k",
        "precision",
        "funcexp",
        "ypoints",
        "k",
        "ylabels",
        "k",
        "texture_update",
        "ylabels",
        "k",
        "ylabels",
        "k",
        "texture_size",
        "max",
        "y1",
        "ylabels",
        "k",
        "texture_size",
        "ylabels",
        "k",
        "x_next",
        "y_start",
        "ypoints",
        "k",
        "ymin",
        "ratio",
        "len",
        "ylabels",
        "ylabels",
        "top",
        "ylabels",
        "y",
        "x_next",
        "y1",
        "padding",
        "len",
        "xlabels",
        "xlabel_grid",
        "exp10",
        "xlog",
        "identity",
        "log10",
        "xlog",
        "identity",
        "xlabels",
        "precision",
        "funcexp",
        "xpoints",
        "xlabels",
        "texture_update",
        "x",
        "width",
        "xlabels",
        "texture_size",
        "padding",
        "x_next",
        "xlabels",
        "precision",
        "funcexp",
        "xpoints",
        "xlabels",
        "texture_update",
        "padding",
        "xlabels",
        "texture_size",
        "funclog",
        "xmin",
        "xextent",
        "x_next",
        "funclog",
        "xmax",
        "xmin",
        "k",
        "len",
        "xlabels",
        "xlabels",
        "k",
        "precision",
        "funcexp",
        "xpoints",
        "k",
        "xlabels",
        "k",
        "texture_update",
        "xlabels",
        "k",
        "xlabels",
        "k",
        "texture_size",
        "xlabels",
        "k",
        "texture_size",
        "xlabels",
        "k",
        "x_next",
        "xpoints",
        "k",
        "xmin",
        "ratio",
        "half_ts",
        "y_next",
        "xlabels",
        "k",
        "x",
        "right",
        "xlabels",
        "k",
        "right",
        "x_overlap",
        "y_next",
        "padding",
        "xlabels",
        "texture_size",
        "xlabel",
        "x_next",
        "xextent",
        "x_next",
        "xlabel",
        "width",
        "ylabel",
        "y_next",
        "yextent",
        "y_next",
        "ylabel",
        "height",
        "x_overlap",
        "k",
        "len",
        "xlabels",
        "xlabels",
        "k",
        "y_overlap",
        "k",
        "len",
        "ylabels",
        "ylabels",
        "k",
        "x_next",
        "x",
        "y_next",
        "y",
        "xextent",
        "x",
        "yextent",
        "y",
        "size",
        "_mesh_rect",
        "mesh",
        "vertices",
        "draw_border",
        "size",
        "s0",
        "s1",
        "s2",
        "s1",
        "s2",
        "s3",
        "s0",
        "s3",
        "s0",
        "s1",
        "k",
        "vert",
        "_mesh_ticks",
        "mesh",
        "vertices",
        "_ticks_majorx",
        "_ticks_majory",
        "_ticks_minorx",
        "_ticks_minory",
        "ylog",
        "xlog",
        "xmin",
        "xmax",
        "xlog",
        "log10",
        "xmin",
        "log10",
        "xmax",
        "ymin",
        "ymax",
        "ylog",
        "log10",
        "ymin",
        "log10",
        "ymax",
        "len",
        "xpoints",
        "size",
        "x_grid",
        "metrics",
        "dp",
        "size",
        "size",
        "size",
        "xmax",
        "xmin",
        "k",
        "start",
        "len",
        "xpoints",
        "start",
        "k",
        "size",
        "xpoints",
        "k",
        "start",
        "xmin",
        "ratio",
        "k",
        "size",
        "k",
        "vert",
        "k",
        "k",
        "top",
        "start",
        "len",
        "xpoints",
        "len",
        "xpoints2",
        "metrics",
        "dp",
        "size",
        "size",
        "size",
        "xmax",
        "xmin",
        "k",
        "start",
        "len",
        "xpoints2",
        "start",
        "k",
        "size",
        "xpoints2",
        "k",
        "start",
        "xmin",
        "ratio",
        "k",
        "size",
        "k",
        "vert",
        "k",
        "k",
        "top",
        "start",
        "len",
        "xpoints2",
        "len",
        "ypoints",
        "size",
        "y_grid",
        "metrics",
        "dp",
        "size",
        "size",
        "size",
        "ymax",
        "ymin",
        "k",
        "start",
        "len",
        "ypoints",
        "start",
        "k",
        "size",
        "ypoints",
        "k",
        "start",
        "ymin",
        "ratio",
        "k",
        "vert",
        "k",
        "k",
        "size",
        "k",
        "top",
        "start",
        "len",
        "ypoints",
        "len",
        "ypoints2",
        "metrics",
        "dp",
        "size",
        "size",
        "size",
        "ymax",
        "ymin",
        "k",
        "start",
        "len",
        "ypoints2",
        "start",
        "k",
        "size",
        "ypoints2",
        "k",
        "start",
        "ymin",
        "ratio",
        "k",
        "vert",
        "k",
        "k",
        "size",
        "k",
        "top",
        "vert",
        "ListProperty",
        "ListProperty",
        "axis",
        "axis",
        "xlog",
        "xmin",
        "xmax",
        "x_axis",
        "axis",
        "info",
        "info",
        "info",
        "axis",
        "axis",
        "ylog",
        "ymin",
        "ymax",
        "y_axis",
        "axis",
        "info",
        "info",
        "info",
        "xmin",
        "xmax",
        "xlog",
        "xlog",
        "xmin",
        "xmax",
        "x_axis",
        "append",
        "data",
        "data",
        "ymin",
        "ymax",
        "ylog",
        "ylog",
        "ymin",
        "ymax",
        "y_axis",
        "append",
        "data",
        "data",
        "size",
        "plot",
        "plots",
        "get_x_axis",
        "plot",
        "x_axis",
        "get_y_axis",
        "plot",
        "y_axis",
        "plot",
        "_update",
        "xlog",
        "xmin",
        "xmax",
        "ylog",
        "ymin",
        "ymax",
        "size",
        "args",
        "_mesh_ticks_color",
        "tick_color",
        "_background_color",
        "background_color",
        "_mesh_rect_color",
        "border_color",
        "args",
        "_redraw_x",
        "args",
        "_redraw_y",
        "args",
        "_mesh_ticks",
        "len",
        "xpoints_major",
        "len",
        "xpoints_minor",
        "len",
        "ypoints_major",
        "len",
        "ypoints_minor",
        "n_points",
        "k",
        "k",
        "n_points",
        "_redraw_size",
        "args",
        "font_size",
        "xlabel",
        "_xlabel",
        "xlabel",
        "Label",
        "add_widget",
        "xlabel",
        "xlabel",
        "font_size",
        "k",
        "v",
        "label_options",
        "items",
        "setattr",
        "xlabel",
        "k",
        "v",
        "_xlabel",
        "xlabel",
        "remove_widget",
        "xlabel",
        "_x_grid_label",
        "_get_ticks",
        "x_ticks_major",
        "x_ticks_minor",
        "xlog",
        "xmin",
        "xmax",
        "xpoints_major",
        "xpoints_minor",
        "x_grid_label",
        "len",
        "xpoints_major",
        "k",
        "n_labels",
        "len",
        "grids",
        "remove_widget",
        "grids",
        "k",
        "grids",
        "n_labels",
        "len",
        "grids",
        "grids",
        "extend",
        "n_labels",
        "len",
        "grids",
        "k",
        "grid_len",
        "n_labels",
        "GraphRotatedLabel",
        "font_size",
        "font_size",
        "angle",
        "x_ticks_angle",
        "label_options",
        "add_widget",
        "grids",
        "k",
        "xpoints_major",
        "xpoints_minor",
        "args",
        "font_size",
        "ylabel",
        "_ylabel",
        "ylabel",
        "GraphRotatedLabel",
        "add_widget",
        "ylabel",
        "ylabel",
        "font_size",
        "k",
        "v",
        "label_options",
        "items",
        "setattr",
        "ylabel",
        "k",
        "v",
        "_ylabel",
        "ylabel",
        "remove_widget",
        "ylabel",
        "_y_grid_label",
        "_get_ticks",
        "y_ticks_major",
        "y_ticks_minor",
        "ylog",
        "ymin",
        "ymax",
        "ypoints_major",
        "ypoints_minor",
        "y_grid_label",
        "len",
        "ypoints_major",
        "k",
        "n_labels",
        "len",
        "grids",
        "remove_widget",
        "grids",
        "k",
        "grids",
        "n_labels",
        "len",
        "grids",
        "grids",
        "extend",
        "n_labels",
        "len",
        "grids",
        "k",
        "grid_len",
        "n_labels",
        "Label",
        "font_size",
        "font_size",
        "label_options",
        "add_widget",
        "grids",
        "k",
        "ypoints_major",
        "ypoints_minor",
        "args",
        "_clear_buffer",
        "_update_labels",
        "_plot_area",
        "size",
        "size",
        "_plot_area",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "_fbo",
        "size",
        "_fbo",
        "_fbo_rect",
        "_fbo",
        "texture",
        "_fbo_rect",
        "size",
        "_fbo_rect",
        "pos",
        "_background_rect",
        "size",
        "_update_ticks",
        "size",
        "_update_plots",
        "size",
        "largs",
        "_fbo",
        "fbo",
        "bind",
        "fbo",
        "clear_buffer",
        "fbo",
        "release",
        "plot",
        "plot",
        "plots",
        "_plot_area",
        "canvas",
        "add",
        "instr",
        "plot",
        "get_drawings",
        "add",
        "instr",
        "plot",
        "bind",
        "on_clear_plot",
        "_clear_buffer",
        "plots",
        "append",
        "plot",
        "plot",
        "plot",
        "plots",
        "_plot_area",
        "canvas",
        "remove",
        "instr",
        "plot",
        "get_drawings",
        "remove",
        "instr",
        "plot",
        "unbind",
        "on_clear_plot",
        "_clear_buffer",
        "plots",
        "remove",
        "plot",
        "_clear_buffer",
        "x",
        "y",
        "x",
        "_plot_area",
        "pos",
        "y",
        "_plot_area",
        "pos",
        "adj_x",
        "_plot_area",
        "size",
        "adj_y",
        "_plot_area",
        "size",
        "x",
        "y",
        "x",
        "_plot_area",
        "pos",
        "y",
        "_plot_area",
        "pos",
        "adj_x",
        "_plot_area",
        "size",
        "adj_y",
        "_plot_area",
        "size",
        "xlog",
        "log10",
        "xmin",
        "log10",
        "xmax",
        "norm_x",
        "xmax",
        "xmin",
        "xmin",
        "norm_x",
        "xmax",
        "xmin",
        "xmin",
        "ylog",
        "log10",
        "ymin",
        "log10",
        "ymax",
        "norm_y",
        "ymax",
        "ymin",
        "ymin",
        "norm_y",
        "ymax",
        "ymin",
        "ymin",
        "conv_x",
        "conv_y",
        "NumericProperty",
        "NumericProperty",
        "BooleanProperty",
        "BoundedNumericProperty",
        "min",
        "BoundedNumericProperty",
        "min",
        "BooleanProperty",
        "BooleanProperty",
        "StringProperty",
        "NumericProperty",
        "NumericProperty",
        "BooleanProperty",
        "BoundedNumericProperty",
        "min",
        "BoundedNumericProperty",
        "min",
        "BooleanProperty",
        "BooleanProperty",
        "StringProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "StringProperty",
        "BooleanProperty",
        "ListProperty",
        "ObjectProperty",
        "ObjectProperty",
        "EventDispatcher",
        "DictProperty",
        "ListProperty",
        "ListProperty",
        "NumericProperty",
        "NumericProperty",
        "kwargs",
        "Plot",
        "kwargs",
        "Clock",
        "create_trigger",
        "draw",
        "bind",
        "ask_draw",
        "points",
        "ask_draw",
        "create_drawings",
        "log10",
        "x",
        "x",
        "log10",
        "y",
        "y",
        "funcx",
        "funcx",
        "funcx",
        "size",
        "size",
        "xmax",
        "xmin",
        "x",
        "funcx",
        "x",
        "xmin",
        "ratiox",
        "size",
        "funcy",
        "funcy",
        "funcy",
        "size",
        "size",
        "ymax",
        "ymin",
        "y",
        "funcy",
        "y",
        "ymin",
        "ratioy",
        "size",
        "x",
        "y",
        "size",
        "size",
        "xmax",
        "xmin",
        "size",
        "size",
        "ymax",
        "ymin",
        "x",
        "size",
        "ratiox",
        "xmin",
        "y",
        "size",
        "ratioy",
        "ymin",
        "x0",
        "y0",
        "x_px",
        "y_px",
        "x_px",
        "x_px",
        "y_px",
        "y_px",
        "xlog",
        "xmin",
        "xmax",
        "ylog",
        "ymin",
        "ymax",
        "size",
        "update",
        "xlog",
        "xmin",
        "xmax",
        "ylog",
        "ymin",
        "ymax",
        "size",
        "isinstance",
        "_drawings",
        "_drawings",
        "largs",
        "dispatch",
        "x_px",
        "y_px",
        "x",
        "y",
        "points",
        "x_px",
        "x",
        "y_px",
        "y",
        "largs",
        "update",
        "get_drawings",
        "Plot",
        "value",
        "hasattr",
        "_mesh",
        "value",
        "AliasProperty",
        "_mesh",
        "mode",
        "_set_mode",
        "Color",
        "color",
        "Mesh",
        "mode",
        "bind",
        "color",
        "instr",
        "value",
        "setattr",
        "_color",
        "value",
        "_color",
        "_mesh",
        "args",
        "MeshLinePlot",
        "draw",
        "args",
        "plot_mesh",
        "p",
        "p",
        "iterate_points",
        "set_mesh_size",
        "len",
        "points",
        "k",
        "x",
        "y",
        "points",
        "k",
        "x",
        "k",
        "y",
        "vert",
        "size",
        "_mesh",
        "mesh",
        "vertices",
        "mesh",
        "indices",
        "size",
        "len",
        "vert",
        "diff",
        "vert",
        "size",
        "ind",
        "size",
        "diff",
        "ind",
        "extend",
        "len",
        "ind",
        "len",
        "ind",
        "diff",
        "vert",
        "extend",
        "diff",
        "vert",
        "mesh",
        "vert",
        "ind",
        "MeshLinePlot",
        "p",
        "p",
        "iterate_points",
        "set_mesh_size",
        "len",
        "points",
        "y_px",
        "k",
        "x",
        "y",
        "iterate_points",
        "k",
        "x",
        "k",
        "y0",
        "k",
        "x",
        "k",
        "y",
        "vert",
        "Plot",
        "NumericProperty",
        "kivy",
        "graphics",
        "Line",
        "RenderContext",
        "RenderContext",
        "use_parent_modelview",
        "use_parent_projection",
        "_grc",
        "Color",
        "color",
        "Line",
        "points",
        "cap",
        "width",
        "line_width",
        "joint",
        "_grc",
        "args",
        "LinePlot",
        "draw",
        "args",
        "x",
        "y",
        "iterate_points",
        "points",
        "x",
        "y",
        "_gline",
        "points",
        "largs",
        "hasattr",
        "_gline",
        "line_width",
        "Plot",
        "kivy",
        "graphics",
        "Line",
        "RenderContext",
        "hasattr",
        "SmoothLinePlot",
        "Texture",
        "create",
        "size",
        "colorfmt",
        "tex",
        "add_reload_observer",
        "SmoothLinePlot",
        "_smooth_reload_observer",
        "tex",
        "SmoothLinePlot",
        "_smooth_reload_observer",
        "tex",
        "RenderContext",
        "fs",
        "SmoothLinePlot",
        "SMOOTH_FS",
        "use_parent_modelview",
        "use_parent_projection",
        "_grc",
        "Color",
        "color",
        "Line",
        "points",
        "cap",
        "width",
        "texture",
        "SmoothLinePlot",
        "_texture",
        "_grc",
        "staticmethod",
        "texture",
        "texture",
        "blit_buffer",
        "SmoothLinePlot",
        "GRADIENT_DATA",
        "colorfmt",
        "args",
        "SmoothLinePlot",
        "draw",
        "args",
        "x",
        "y",
        "iterate_points",
        "points",
        "x",
        "y",
        "_gline",
        "points",
        "Plot",
        "ObjectProperty",
        "ObjectProperty",
        "force_dispatch",
        "ListProperty",
        "ListProperty",
        "kwargs",
        "ContourPlot",
        "kwargs",
        "bind",
        "data",
        "ask_draw",
        "xrange",
        "ask_draw",
        "yrange",
        "ask_draw",
        "Rectangle",
        "Color",
        "bind",
        "color",
        "instr",
        "value",
        "setattr",
        "_color",
        "value",
        "_color",
        "_image",
        "args",
        "ContourPlot",
        "draw",
        "args",
        "data",
        "data",
        "shape",
        "data",
        "max",
        "data",
        "min",
        "zmax",
        "zmin",
        "np",
        "array",
        "data",
        "dtype",
        "copy",
        "np",
        "subtract",
        "buf",
        "zmin",
        "buf",
        "np",
        "multiply",
        "buf",
        "rgb_scale_factor",
        "buf",
        "np",
        "asarray",
        "buf",
        "dtype",
        "np",
        "uint8",
        "np",
        "expand_dims",
        "buf",
        "axis",
        "np",
        "concatenate",
        "buf",
        "buf",
        "buf",
        "axis",
        "np",
        "reshape",
        "buf",
        "xdim",
        "ydim",
        "np",
        "reshape",
        "buf",
        "buf",
        "size",
        "Texture",
        "create",
        "size",
        "xdim",
        "ydim",
        "colorfmt",
        "_texture",
        "blit_buffer",
        "charbuf",
        "colorfmt",
        "bufferfmt",
        "_image",
        "_texture",
        "x_px",
        "y_px",
        "x_px",
        "xrange",
        "y_px",
        "yrange",
        "x_px",
        "xrange",
        "y_px",
        "yrange",
        "bl",
        "tr",
        "bl",
        "tr",
        "bl",
        "w",
        "h",
        "Plot",
        "NumericProperty",
        "NumericProperty",
        "ObjectProperty",
        "allownone",
        "ar",
        "kw",
        "BarPlot",
        "ar",
        "kw",
        "bind",
        "bar_width",
        "ask_draw",
        "bind",
        "points",
        "update_bar_width",
        "bind",
        "graph",
        "update_bar_width",
        "ar",
        "graph",
        "len",
        "points",
        "graph",
        "xmax",
        "graph",
        "xmin",
        "len",
        "points",
        "abs",
        "graph",
        "xmax",
        "abs",
        "graph",
        "xmin",
        "abs",
        "max",
        "points",
        "abs",
        "min",
        "points",
        "points",
        "graph",
        "width",
        "graph",
        "padding",
        "point_width",
        "bar_spacing",
        "Color",
        "color",
        "Mesh",
        "bind",
        "color",
        "instr",
        "value",
        "setattr",
        "_color",
        "value",
        "_color",
        "_mesh",
        "args",
        "BarPlot",
        "draw",
        "args",
        "points",
        "len",
        "points",
        "Logger",
        "error",
        "points",
        "len",
        "points",
        "_mesh",
        "mesh",
        "vertices",
        "mesh",
        "indices",
        "len",
        "points",
        "len",
        "vert",
        "diff",
        "vert",
        "point_len",
        "ind",
        "point_len",
        "diff",
        "ind",
        "extend",
        "len",
        "ind",
        "len",
        "ind",
        "diff",
        "vert",
        "extend",
        "diff",
        "get_px_bounds",
        "x_px",
        "y_px",
        "y_px",
        "bar_width",
        "bar_width",
        "x_px",
        "bar_width",
        "bounds",
        "k",
        "point_len",
        "points",
        "k",
        "x_px",
        "p",
        "x1",
        "bar_width",
        "ymin",
        "y_px",
        "p",
        "k",
        "x1",
        "idx",
        "y2",
        "idx",
        "x1",
        "idx",
        "y1",
        "idx",
        "x2",
        "idx",
        "y1",
        "idx",
        "x1",
        "idx",
        "y2",
        "idx",
        "x2",
        "idx",
        "y2",
        "idx",
        "x2",
        "idx",
        "y1",
        "vert",
        "graph",
        "graph",
        "unbind",
        "width",
        "update_bar_width",
        "xmin",
        "update_bar_width",
        "ymin",
        "update_bar_width",
        "graph",
        "graph",
        "old_graph",
        "_unbind_graph",
        "old_graph",
        "graph",
        "graph",
        "bind",
        "width",
        "update_bar_width",
        "xmin",
        "update_bar_width",
        "ymin",
        "update_bar_width",
        "graph",
        "_unbind_graph",
        "graph",
        "MeshLinePlot",
        "args",
        "points",
        "set_mesh_size",
        "len",
        "points",
        "get_px_bounds",
        "bounds",
        "bounds",
        "y_px",
        "k",
        "y",
        "points",
        "y_px",
        "y",
        "k",
        "px_xmin",
        "k",
        "y",
        "k",
        "px_xmax",
        "k",
        "y",
        "vert",
        "MeshLinePlot",
        "args",
        "points",
        "set_mesh_size",
        "len",
        "points",
        "get_px_bounds",
        "bounds",
        "bounds",
        "x_px",
        "k",
        "x",
        "points",
        "x_px",
        "x",
        "k",
        "x",
        "k",
        "px_ymin",
        "k",
        "x",
        "k",
        "px_ymax",
        "vert",
        "itertools",
        "math",
        "sin",
        "cos",
        "pi",
        "random",
        "randrange",
        "kivy",
        "utils",
        "get_color_from_hex",
        "rgb",
        "kivy",
        "uix",
        "boxlayout",
        "BoxLayout",
        "kivy",
        "app",
        "App",
        "App",
        "BoxLayout",
        "orientation",
        "itertools",
        "cycle",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "rgb",
        "Graph",
        "xlabel",
        "ylabel",
        "x_ticks_minor",
        "x_ticks_major",
        "y_ticks_major",
        "y_grid_label",
        "x_grid_label",
        "padding",
        "xlog",
        "ylog",
        "x_grid",
        "y_grid",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "graph_theme",
        "SmoothLinePlot",
        "color",
        "next",
        "colors",
        "x",
        "sin",
        "x",
        "x",
        "graph",
        "add_plot",
        "plot",
        "MeshLinePlot",
        "color",
        "next",
        "colors",
        "x",
        "cos",
        "x",
        "x",
        "graph",
        "add_plot",
        "plot",
        "plot",
        "MeshStemPlot",
        "color",
        "next",
        "colors",
        "graph",
        "add_plot",
        "plot",
        "x",
        "x",
        "x",
        "BarPlot",
        "color",
        "next",
        "colors",
        "bar_spacing",
        "graph",
        "add_plot",
        "plot",
        "plot",
        "bind_to_graph",
        "graph",
        "x",
        "randrange",
        "x",
        "Clock",
        "schedule_interval",
        "update_points",
        "Graph",
        "xlabel",
        "ylabel",
        "x_ticks_minor",
        "x_ticks_major",
        "y_ticks_major",
        "y_grid_label",
        "x_grid_label",
        "padding",
        "xlog",
        "ylog",
        "xmin",
        "ymin",
        "graph_theme",
        "b",
        "add_widget",
        "graph",
        "np",
        "make_contour_data",
        "graph2",
        "xmin",
        "graph2",
        "xmax",
        "xbounds",
        "graph2",
        "ymin",
        "graph2",
        "ymax",
        "ybounds",
        "ContourPlot",
        "data",
        "xbounds",
        "ybounds",
        "graph2",
        "add_plot",
        "plot",
        "b",
        "add_widget",
        "graph2",
        "plot",
        "Clock",
        "schedule_interval",
        "update_contour",
        "b",
        "ts",
        "pi",
        "pi",
        "sin",
        "ts",
        "np",
        "ones",
        "npoints",
        "npoints",
        "ii",
        "ii",
        "npoints",
        "ii",
        "ii",
        "npoints",
        "ii",
        "t",
        "time",
        "jj",
        "x",
        "position",
        "sin",
        "k",
        "x",
        "omega",
        "t",
        "sin",
        "k",
        "x",
        "omega",
        "t",
        "ts",
        "max",
        "position",
        "max",
        "time",
        "data",
        "args",
        "plot",
        "x",
        "cos",
        "Clock",
        "get_time",
        "x",
        "x",
        "args",
        "contourplot",
        "data",
        "make_contour_data",
        "Clock",
        "get_time",
        "contourplot",
        "ask_draw",
        "TestApp",
        "run"
    ],
    "literals": [
        "'Graph'",
        "'Plot'",
        "'MeshLinePlot'",
        "'MeshStemPlot'",
        "'LinePlot'",
        "'SmoothLinePlot'",
        "'ContourPlot'",
        "'0.4-dev'",
        "'lines'",
        "'line_strip'",
        "''",
        "''",
        "\"log\"",
        "\"min\"",
        "\"max\"",
        "\"log\"",
        "\"min\"",
        "\"max\"",
        "\"log\"",
        "\"min\"",
        "\"max\"",
        "\"log\"",
        "\"min\"",
        "\"max\"",
        "''",
        "''",
        "'5dp'",
        "'15sp'",
        "'%g'",
        "'on_clear_plot'",
        "'xlog'",
        "'xmin'",
        "'xmax'",
        "'ylog'",
        "'ymin'",
        "'ymax'",
        "'size'",
        "\"xlog\"",
        "\"ylog\"",
        "\"size\"",
        "\"xmin\"",
        "\"xmax\"",
        "\"size\"",
        "\"ymin\"",
        "\"ymax\"",
        "\"size\"",
        "\"xmin\"",
        "\"xmax\"",
        "\"ymin\"",
        "\"ymax\"",
        "\"xmin\"",
        "\"xmin\"",
        "\"xmax\"",
        "\"xmax\"",
        "\"ymin\"",
        "\"ymin\"",
        "\"ymax\"",
        "\"ymax\"",
        "'xlog'",
        "'xmin'",
        "'xmax'",
        "'ylog'",
        "'ymin'",
        "'ymax'",
        "'size'",
        "''",
        "'on_clear_plot'",
        "'_mesh'",
        "'line_strip'",
        "\"rgba\"",
        "'none'",
        "'round'",
        "\"_gline\"",
        "b\"\\x00\\x00\\x00\\x07\\x07\\x07\\x0f\\x0f\\x0f\\x17\\x17\\x17\\x1f\\x1f\\x1f\"",
        "b\"'''///777???GGGOOOWWW___gggooowww\\x7f\\x7f\\x7f\\x87\\x87\\x87\"",
        "b\"\\x8f\\x8f\\x8f\\x97\\x97\\x97\\x9f\\x9f\\x9f\\xa7\\xa7\\xa7\\xaf\\xaf\\xaf\"",
        "b\"\\xb7\\xb7\\xb7\\xbf\\xbf\\xbf\\xc7\\xc7\\xc7\\xcf\\xcf\\xcf\\xd7\\xd7\\xd7\"",
        "b\"\\xdf\\xdf\\xdf\\xe7\\xe7\\xe7\\xef\\xef\\xef\\xf7\\xf7\\xf7\\xff\\xff\\xff\"",
        "b\"\\xf6\\xf6\\xf6\\xee\\xee\\xee\\xe6\\xe6\\xe6\\xde\\xde\\xde\\xd5\\xd5\\xd5\"",
        "b\"\\xcd\\xcd\\xcd\\xc5\\xc5\\xc5\\xbd\\xbd\\xbd\\xb4\\xb4\\xb4\\xac\\xac\\xac\"",
        "b\"\\xa4\\xa4\\xa4\\x9c\\x9c\\x9c\\x94\\x94\\x94\\x8b\\x8b\\x8b\\x83\\x83\\x83\"",
        "b\"{{{sssjjjbbbZZZRRRJJJAAA999111)))   \\x18\\x18\\x18\\x10\\x10\\x10\"",
        "b\"\\x08\\x08\\x08\\x00\\x00\\x00\"",
        "'_texture'",
        "'rgb'",
        "'none'",
        "\"rgb\"",
        "'rgba'",
        "'rgb'",
        "'rgb'",
        "'ubyte'",
        "'rgba'",
        "\"BarPlot: cannot support more than 10922 points. \"",
        "\"Ignoring extra points.\"",
        "'triangles'",
        "\"xmin\"",
        "\"lines\"",
        "\"xmin\"",
        "\"xmax\"",
        "\"lines\"",
        "\"ymin\"",
        "\"ymax\"",
        "'__main__'",
        "'vertical'",
        "'7dac9f'",
        "'dc7062'",
        "'66a8d4'",
        "'e5b060'",
        "'label_options'",
        "'color'",
        "'444444'",
        "'bold'",
        "'background_color'",
        "'f8f8f2'",
        "'tick_color'",
        "'808080'",
        "'border_color'",
        "'808080'",
        "'Cheese'",
        "'Apples'",
        "'Position (m)'",
        "'Time (s)'"
    ],
    "variables": [
        "__all__",
        "__version__",
        "np",
        "angle",
        "_trigger",
        "_trigger_size",
        "_trigger_color",
        "_xlabel",
        "_ylabel",
        "_x_grid_label",
        "_y_grid_label",
        "_mesh_ticks",
        "_mesh_rect",
        "_ticks_majorx",
        "_ticks_minorx",
        "_ticks_majory",
        "_ticks_minory",
        "tick_color",
        "background_color",
        "border_color",
        "label_options",
        "_with_stencilbuffer",
        "_fbo",
        "_background_color",
        "_background_rect",
        "_mesh_ticks_color",
        "_mesh_ticks",
        "_mesh_rect_color",
        "_mesh_rect",
        "_fbo_rect",
        "mesh",
        "mesh",
        "vertices",
        "mesh",
        "indices",
        "_plot_area",
        "t",
        "_trigger",
        "ts",
        "_trigger_size",
        "tc",
        "_trigger_color",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "s_min",
        "s_max",
        "n_decades",
        "n_ticks_major",
        "n_ticks",
        "decade_dist",
        "points_minor",
        "points_major",
        "k",
        "k2",
        "min_pos",
        "s_min_low",
        "start_dec",
        "count_min",
        "count",
        "pos_dec",
        "pos_dec_low",
        "diff",
        "zero",
        "pos_log",
        "pos_log",
        "points_major",
        "k",
        "points_minor",
        "k2",
        "tick_dist",
        "n_ticks",
        "points_major",
        "points_minor",
        "k",
        "k2",
        "points_minor",
        "k2",
        "points_major",
        "k",
        "points_major",
        "points_minor",
        "xlabel",
        "ylabel",
        "x",
        "y",
        "width",
        "height",
        "padding",
        "x_next",
        "y_next",
        "xextent",
        "yextent",
        "ymin",
        "ymax",
        "xmin",
        "precision",
        "x_overlap",
        "y_overlap",
        "xlabel",
        "text",
        "xlabel",
        "size",
        "xlabel",
        "pos",
        "ylabel",
        "text",
        "ylabel",
        "size",
        "ylabel",
        "x",
        "xpoints",
        "xlabels",
        "xlabel_grid",
        "ylabel_grid",
        "ypoints",
        "ylabels",
        "funcexp",
        "funclog",
        "text",
        "y1",
        "y_start",
        "yextent",
        "ymin",
        "ratio",
        "y1",
        "text",
        "size",
        "y1",
        "pos",
        "y_overlap",
        "funcexp",
        "funclog",
        "text",
        "xextent",
        "text",
        "x_next",
        "xmin",
        "ratio",
        "right",
        "text",
        "size",
        "half_ts",
        "pos",
        "x_overlap",
        "right",
        "xlabel",
        "x",
        "ylabel",
        "y",
        "ylabel",
        "angle",
        "text",
        "text",
        "mesh",
        "vert",
        "s0",
        "s1",
        "s2",
        "s3",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "mesh",
        "vert",
        "start",
        "xpoints",
        "ypoints",
        "xpoints2",
        "ypoints2",
        "ylog",
        "xlog",
        "xmin",
        "xmax",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "ymin",
        "ymax",
        "top",
        "ratio",
        "vert",
        "vert",
        "vert",
        "vert",
        "top",
        "ratio",
        "vert",
        "vert",
        "vert",
        "vert",
        "top",
        "ratio",
        "vert",
        "vert",
        "vert",
        "vert",
        "top",
        "ratio",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "x_axis",
        "y_axis",
        "info",
        "info",
        "data",
        "data",
        "xlog",
        "xmin",
        "xmax",
        "ylog",
        "ymin",
        "ymax",
        "rgba",
        "rgba",
        "rgba",
        "xpoints_major",
        "xpoints_minor",
        "ypoints_major",
        "ypoints_minor",
        "mesh",
        "n_points",
        "mesh",
        "vertices",
        "mesh",
        "indices",
        "font_size",
        "xlabel",
        "xlabel",
        "_xlabel",
        "xlabel",
        "font_size",
        "xlabel",
        "_xlabel",
        "grids",
        "xpoints_major",
        "xpoints_minor",
        "_ticks_majorx",
        "_ticks_minorx",
        "n_labels",
        "n_labels",
        "grid_len",
        "grids",
        "k",
        "font_size",
        "ylabel",
        "ylabel",
        "_ylabel",
        "ylabel",
        "font_size",
        "ylabel",
        "_ylabel",
        "grids",
        "ypoints_major",
        "ypoints_minor",
        "_ticks_majory",
        "_ticks_minory",
        "n_labels",
        "n_labels",
        "grid_len",
        "grids",
        "k",
        "size",
        "view_pos",
        "pos",
        "view_size",
        "size",
        "size",
        "size",
        "texture",
        "size",
        "pos",
        "size",
        "fbo",
        "add",
        "remove",
        "adj_x",
        "adj_y",
        "adj_x",
        "adj_y",
        "norm_x",
        "norm_y",
        "xmin",
        "xmax",
        "conv_x",
        "conv_x",
        "ymin",
        "ymax",
        "conv_y",
        "conv_y",
        "xmin",
        "xmax",
        "xlog",
        "x_ticks_major",
        "x_ticks_minor",
        "x_grid",
        "x_grid_label",
        "xlabel",
        "ymin",
        "ymax",
        "ylog",
        "y_ticks_major",
        "y_ticks_minor",
        "y_grid",
        "y_grid_label",
        "ylabel",
        "padding",
        "font_size",
        "x_ticks_angle",
        "precision",
        "draw_border",
        "plots",
        "view_size",
        "view_pos",
        "__events__",
        "color",
        "points",
        "x_axis",
        "y_axis",
        "ask_draw",
        "_drawings",
        "funcx",
        "size",
        "xmin",
        "xmax",
        "ratiox",
        "funcy",
        "size",
        "ymin",
        "ymax",
        "ratioy",
        "size",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "ratiox",
        "ratioy",
        "x0",
        "y0",
        "x_px",
        "y_px",
        "x_px",
        "y_px",
        "_update",
        "_get_drawings",
        "_params",
        "mode",
        "mode",
        "_color",
        "_mesh",
        "points",
        "mesh",
        "vert",
        "_",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "mesh",
        "vert",
        "ind",
        "diff",
        "mesh",
        "vertices",
        "points",
        "mesh",
        "vert",
        "_",
        "y0",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "line_width",
        "_grc",
        "_gcolor",
        "_gline",
        "points",
        "points",
        "width",
        "SMOOTH_FS",
        "GRADIENT_DATA",
        "tex",
        "SmoothLinePlot",
        "_texture",
        "_grc",
        "_gcolor",
        "_gline",
        "points",
        "points",
        "_image",
        "data",
        "xrange",
        "yrange",
        "_image",
        "_color",
        "data",
        "xdim",
        "ydim",
        "zmax",
        "zmin",
        "rgb_scale_factor",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "charbuf",
        "_texture",
        "image",
        "image",
        "texture",
        "x_px",
        "y_px",
        "bl",
        "tr",
        "image",
        "pos",
        "w",
        "h",
        "image",
        "size",
        "bar_width",
        "bar_spacing",
        "graph",
        "point_width",
        "bar_width",
        "bar_width",
        "_color",
        "_mesh",
        "points",
        "points",
        "point_len",
        "mesh",
        "mesh",
        "mode",
        "vert",
        "ind",
        "diff",
        "bounds",
        "x_px",
        "y_px",
        "ymin",
        "bar_width",
        "bar_width",
        "p",
        "x1",
        "x2",
        "y1",
        "y2",
        "idx",
        "vert",
        "idx",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "old_graph",
        "graph",
        "points",
        "mesh",
        "vert",
        "ind",
        "mesh",
        "mode",
        "bounds",
        "px_xmin",
        "px_xmax",
        "y_px",
        "y",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "points",
        "mesh",
        "vert",
        "ind",
        "mesh",
        "mode",
        "bounds",
        "px_ymin",
        "px_ymax",
        "x_px",
        "x",
        "vert",
        "vert",
        "vert",
        "vert",
        "mesh",
        "vertices",
        "b",
        "colors",
        "graph_theme",
        "graph",
        "plot",
        "plot",
        "points",
        "plot",
        "plot",
        "points",
        "plot",
        "plot",
        "plot",
        "points",
        "plot",
        "plot",
        "points",
        "graph2",
        "xbounds",
        "ybounds",
        "data",
        "plot",
        "plot",
        "data",
        "plot",
        "xrange",
        "plot",
        "yrange",
        "plot",
        "color",
        "contourplot",
        "omega",
        "k",
        "ts",
        "npoints",
        "data",
        "position",
        "time",
        "data",
        "ii",
        "jj",
        "points",
        "_",
        "_"
    ],
    "comments": [
        "triggers a full reload of graphics",
        "triggers only a repositioning of objects due to size/pos updates",
        "triggers only a update of colors, e.g. tick_color",
        "holds widget with the x-axis label",
        "holds widget with the y-axis label",
        "holds all the x-axis tick mark labels",
        "holds all the y-axis tick mark labels",
        "the mesh drawing all the ticks/grids",
        "the mesh which draws the surrounding rectangle",
        "a list of locations of major and minor ticks. The values are not",
        "but is in the axis min - max range",
        "count the decades in min - max. This is in actual decades,",
        "not logs.",
        "for the fractional part of the last decade, we need to",
        "convert the log value, x, to 10**x but need to handle",
        "differently if the last incomplete decade has a decade",
        "boundary in it",
        "this might be larger than what is needed, but we delete",
        "excess later",
        "in decade multiples, e.g. 0.1 of the decade, the distance",
        "between ticks",
        "position in points major",
        "position in points minor",
        "because each decade is missing 0.1 of the decade, if a tick",
        "falls in < min_pos skip it",
        "first real tick location. value is in fractions of decades",
        "from the start we have to use decimals here, otherwise",
        "floating point inaccuracies results in bad values",
        "number of ticks we currently have passed start",
        "this is the current position in decade that we are.",
        "e.g. -0.9 means that we're at 0.1 of the 10**ceil(-0.9)",
        "decade",
        "the same value as pos_dec but in log scale",
        "distance between each tick",
        "position in points major",
        "position in points minor",
        "set up x and y axis labels",
        "now x and y tick mark labels",
        "horizontal size of the largest tick label, to have enough room",
        "find the distance from the end that'll fit the last tick label",
        "find the distance from the start that'll fit the first tick label",
        "update the size so we can center the labels on ticks",
        "now re-center the x and y axis labels",
        "re-compute the positions of the bounding rectangle",
        "re-compute the positions of the x/y axis ticks",
        "add/remove all the required labels",
        "size a 4-tuple describing the bounding box in which we can draw",
        "graphs, it's (x0, y0, x1, y1), which correspond with the bottom left",
        "and top right corner locations, respectively",
        "gl errors otherwise",
        "most recent values of the params used to draw the plot",
        "compatibility layer",
        "flatten the list",
        "XXX This gradient data is a 64x1 RGB image, and",
        "values goes from 0 -> 255 -> 0.",
        "very first time, create a texture for the shader",
        "flatten the list",
        "Find the minimum and maximum z values",
        "Scale the z values into RGB data",
        "Duplicate into 3 dimensions (RGB) and convert to byte array",
        "The mesh only supports (2^16) - 1 indices, so...",
        "first triangle",
        "second triangle",
        "unbind from the old one",
        "bind to the new one",
        "example of a custom theme",
        "color of tick labels and titles",
        "back ground color of canvas",
        "ticks and grid",
        "border drawn around each graph",
        "for efficiency, the x range matches xmin, xmax",
        "this is the moving graph, so keep a reference",
        "This is required to fit the graph to the data extents",
        "emperically determined 'pretty' values",
        "this does not trigger an update, because we replace the",
        "values of the arry and do not change the object.",
        "However, we cannot do \"...data = make_contour_data()\" as",
        "kivy will try to check for the identity of the new and",
        "old values.  In numpy, 'nd1 == nd2' leads to an error",
        "(you have to use np.all).  Ideally, property should be patched",
        "for this."
    ],
    "docstrings": [
        "'''\nGraph\n======\n\nThe :class:`Graph` widget is a widget for displaying plots. It supports\ndrawing multiple plot with different colors on the Graph. It also supports\naxes titles, ticks, labeled ticks, grids and a log or linear representation on\nboth the x and y axis, independently.\n\nTo display a plot. First create a graph which will function as a \"canvas\" for\nthe plots. Then create plot objects e.g. MeshLinePlot and add them to the\ngraph.\n\nTo create a graph with x-axis between 0-100, y-axis between -1 to 1, x and y\nlabels of and X and Y, respectively, x major and minor ticks every 25, 5 units,\nrespectively, y major ticks every 1 units, full x and y grids and with\na red line plot containing a sin wave on this range::\n\n    from kivy.garden.graph import Graph, MeshLinePlot\n    graph = Graph(xlabel='X', ylabel='Y', x_ticks_minor=5,\n                  x_ticks_major=25, y_ticks_major=1,\n                  y_grid_label=True, x_grid_label=True, padding=5,\n                  x_grid=True, y_grid=True, xmin=-0, xmax=100, ymin=-1, ymax=1)\n    plot = MeshLinePlot(color=[1, 0, 0, 1])\n    plot.points = [(x, sin(x / 10.)) for x in range(0, 101)]\n    graph.add_plot(plot)\n\nThe MeshLinePlot plot is a particular plot which draws a set of points using\na mesh object. The points are given as a list of tuples, with each tuple\nbeing a (x, y) coordinate in the graph's units.\n\nYou can create different types of plots other than MeshLinePlot by inheriting\nfrom the Plot class and implementing the required functions. The Graph object\nprovides a \"canvas\" to which a Plot's instructions are added. The plot object\nis responsible for updating these instructions to show within the bounding\nbox of the graph the proper plot. The Graph notifies the Plot when it needs\nto be redrawn due to changes. See the MeshLinePlot class for how it is done.\n\nThe current availables plots are:\n\n    * `MeshStemPlot`\n    * `MeshLinePlot`\n    * `SmoothLinePlot` - require Kivy 1.8.1\n\n.. note::\n\n    The graph uses a stencil view to clip the plots to the graph display area.\n    As with the stencil graphics instructions, you cannot stack more than 8\n    stencil-aware widgets.\n\n'''",
        "\"\"\"\n<GraphRotatedLabel>:\n    canvas.before:\n        PushMatrix\n        Rotate:\n            angle: root.angle\n            axis: 0, 0, 1\n            origin: root.center\n    canvas.after:\n        PopMatrix\n\"\"\"",
        "'''Graph class, see module documentation for more information.\n    '''",
        "'''Color of the grid/ticks, default to 1/4. grey.\n    '''",
        "'''Color of the background, defaults to transparent\n    '''",
        "'''Color of the border, defaults to white\n    '''",
        "'''Label options that will be passed to `:class:`kivy.uix.Label`.\n    '''",
        "'''Whether :class:`Graph`'s FBO should use FrameBuffer (True) or not (False).\n\n    .. warning:: This property is internal and so should be used with care. It can break\n    some other graphic instructions used by the :class:`Graph`, for example you can have\n    problems when drawing :class:`SmoothLinePlot` plots, so use it only when you know\n    what exactly you are doing.\n\n    :data:`_with_stencilbuffer` is a :class:`~kivy.properties.BooleanProperty`, defaults\n    to True.\n    '''",
        "'''Add a new plot to this graph.\n\n        :Parameters:\n            `plot`:\n                Plot to add to this graph.\n\n        >>> graph = Graph()\n        >>> plot = MeshLinePlot(mode='line_strip', color=[1, 0, 0, 1])\n        >>> plot.points = [(x / 10., sin(x / 50.)) for x in range(-0, 101)]\n        >>> graph.add_plot(plot)\n        '''",
        "'''Remove a plot from this graph.\n\n        :Parameters:\n            `plot`:\n                Plot to remove from this graph.\n\n        >>> graph = Graph()\n        >>> plot = MeshLinePlot(mode='line_strip', color=[1, 0, 0, 1])\n        >>> plot.points = [(x / 10., sin(x / 50.)) for x in range(-0, 101)]\n        >>> graph.add_plot(plot)\n        >>> graph.remove_plot(plot)\n        '''",
        "'''Determine if the given coordinates fall inside the plot area. Use\n        `x, y = self.to_widget(x, y, relative=True)` to first convert into\n        widget coordinates if it's in window coordinates because it's assumed\n        to be given in local widget coordinates, relative to the graph's pos.\n\n        :Parameters:\n            `x, y`:\n                The coordinates to test.\n        '''",
        "'''Convert widget coords to data coords. Use\n        `x, y = self.to_widget(x, y, relative=True)` to first convert into\n        widget coordinates if it's in window coordinates because it's assumed\n        to be given in local widget coordinates, relative to the graph's pos.\n\n        :Parameters:\n            `x, y`:\n                The coordinates to convert.\n\n        If the graph has multiple axes, use :class:`Plot.unproject` instead.\n        '''",
        "'''The x-axis minimum value.\n\n    If :data:`xlog` is True, xmin must be larger than zero.\n\n    :data:`xmin` is a :class:`~kivy.properties.NumericProperty`, defaults to 0.\n    '''",
        "'''The x-axis maximum value, larger than xmin.\n\n    :data:`xmax` is a :class:`~kivy.properties.NumericProperty`, defaults to 0.\n    '''",
        "'''Determines whether the x-axis should be displayed logarithmically (True)\n    or linearly (False).\n\n    :data:`xlog` is a :class:`~kivy.properties.BooleanProperty`, defaults\n    to False.\n    '''",
        "'''Distance between major tick marks on the x-axis.\n\n    Determines the distance between the major tick marks. Major tick marks\n    start from min and re-occur at every ticks_major until :data:`xmax`.\n    If :data:`xmax` doesn't overlap with a integer multiple of ticks_major,\n    no tick will occur at :data:`xmax`. Zero indicates no tick marks.\n\n    If :data:`xlog` is true, then this indicates the distance between ticks\n    in multiples of current decade. E.g. if :data:`xmin` is 0.1 and\n    ticks_major is 0.1, it means there will be a tick at every 10th of the\n    decade, i.e. 0.1 ... 0.9, 1, 2... If it is 0.3, the ticks will occur at\n    0.1, 0.3, 0.6, 0.9, 2, 5, 8, 10. You'll notice that it went from 8 to 10\n    instead of to 20, that's so that we can say 0.5 and have ticks at every\n    half decade, e.g. 0.1, 0.5, 1, 5, 10, 50... Similarly, if ticks_major is\n    1.5, there will be ticks at 0.1, 5, 100, 5,000... Also notice, that there's\n    always a major tick at the start. Finally, if e.g. :data:`xmin` is 0.6\n    and this 0.5 there will be ticks at 0.6, 1, 5...\n\n    :data:`x_ticks_major` is a\n    :class:`~kivy.properties.BoundedNumericProperty`, defaults to 0.\n    '''",
        "'''The number of sub-intervals that divide x_ticks_major.\n\n    Determines the number of sub-intervals into which ticks_major is divided,\n    if non-zero. The actual number of minor ticks between the major ticks is\n    ticks_minor - 1. Only used if ticks_major is non-zero. If there's no major\n    tick at xmax then the number of minor ticks after the last major\n    tick will be however many ticks fit until xmax.\n\n    If self.xlog is true, then this indicates the number of intervals the\n    distance between major ticks is divided. The result is the number of\n    multiples of decades between ticks. I.e. if ticks_minor is 10, then if\n    ticks_major is 1, there will be ticks at 0.1, 0.2...0.9, 1, 2, 3... If\n    ticks_major is 0.3, ticks will occur at 0.1, 0.12, 0.15, 0.18... Finally,\n    as is common, if ticks major is 1, and ticks minor is 5, there will be\n    ticks at 0.1, 0.2, 0.4... 0.8, 1, 2...\n\n    :data:`x_ticks_minor` is a\n    :class:`~kivy.properties.BoundedNumericProperty`, defaults to 0.\n    '''",
        "'''Determines whether the x-axis has tick marks or a full grid.\n\n    If :data:`x_ticks_major` is non-zero, then if x_grid is False tick marks\n    will be displayed at every major tick. If x_grid is True, instead of ticks,\n    a vertical line will be displayed at every major tick.\n\n    :data:`x_grid` is a :class:`~kivy.properties.BooleanProperty`, defaults\n    to False.\n    '''",
        "'''Whether labels should be displayed beneath each major tick. If true,\n    each major tick will have a label containing the axis value.\n\n    :data:`x_grid_label` is a :class:`~kivy.properties.BooleanProperty`,\n    defaults to False.\n    '''",
        "'''The label for the x-axis. If not empty it is displayed in the center of\n    the axis.\n\n    :data:`xlabel` is a :class:`~kivy.properties.StringProperty`,\n    defaults to ''.\n    '''",
        "'''The y-axis minimum value.\n\n    If :data:`ylog` is True, ymin must be larger than zero.\n\n    :data:`ymin` is a :class:`~kivy.properties.NumericProperty`, defaults to 0.\n    '''",
        "'''The y-axis maximum value, larger than ymin.\n\n    :data:`ymax` is a :class:`~kivy.properties.NumericProperty`, defaults to 0.\n    '''",
        "'''Determines whether the y-axis should be displayed logarithmically (True)\n    or linearly (False).\n\n    :data:`ylog` is a :class:`~kivy.properties.BooleanProperty`, defaults\n    to False.\n    '''",
        "'''Distance between major tick marks. See :data:`x_ticks_major`.\n\n    :data:`y_ticks_major` is a\n    :class:`~kivy.properties.BoundedNumericProperty`, defaults to 0.\n    '''",
        "'''The number of sub-intervals that divide ticks_major.\n    See :data:`x_ticks_minor`.\n\n    :data:`y_ticks_minor` is a\n    :class:`~kivy.properties.BoundedNumericProperty`, defaults to 0.\n    '''",
        "'''Determines whether the y-axis has tick marks or a full grid. See\n    :data:`x_grid`.\n\n    :data:`y_grid` is a :class:`~kivy.properties.BooleanProperty`, defaults\n    to False.\n    '''",
        "'''Whether labels should be displayed beneath each major tick. If true,\n    each major tick will have a label containing the axis value.\n\n    :data:`y_grid_label` is a :class:`~kivy.properties.BooleanProperty`,\n    defaults to False.\n    '''",
        "'''The label for the y-axis. If not empty it is displayed in the center of\n    the axis.\n\n    :data:`ylabel` is a :class:`~kivy.properties.StringProperty`,\n    defaults to ''.\n    '''",
        "'''Padding distances between the labels, axes titles and graph, as\n    well between the widget and the objects near the boundaries.\n\n    :data:`padding` is a :class:`~kivy.properties.NumericProperty`, defaults\n    to 5dp.\n    '''",
        "'''Font size of the labels.\n\n    :data:`font_size` is a :class:`~kivy.properties.NumericProperty`, defaults\n    to 15sp.\n    '''",
        "'''Rotate angle of the x-axis tick marks.\n\n    :data:`x_ticks_angle` is a :class:`~kivy.properties.NumericProperty`,\n    defaults to 0.\n    '''",
        "'''Determines the numerical precision of the tick mark labels. This value\n    governs how the numbers are converted into string representation. Accepted\n    values are those listed in Python's manual in the\n    \"String Formatting Operations\" section.\n\n    :data:`precision` is a :class:`~kivy.properties.StringProperty`, defaults\n    to '%g'.\n    '''",
        "'''Whether a border is drawn around the canvas of the graph where the\n    plots are displayed.\n\n    :data:`draw_border` is a :class:`~kivy.properties.BooleanProperty`,\n    defaults to True.\n    '''",
        "'''Holds a list of all the plots in the graph. To add and remove plots\n    from the graph use :data:`add_plot` and :data:`add_plot`. Do not add\n    directly edit this list.\n\n    :data:`plots` is a :class:`~kivy.properties.ListProperty`,\n    defaults to [].\n    '''",
        "'''The size of the graph viewing area - the area where the plots are\n    displayed, excluding labels etc.\n    '''",
        "'''The pos of the graph viewing area - the area where the plots are\n    displayed, excluding labels etc. It is relative to the graph's pos.\n    '''",
        "'''Plot class, see module documentation for more information.\n\n    :Events:\n        `on_clear_plot`\n            Fired before a plot updates the display and lets the fbo know that\n            it should clear the old drawings.\n\n    ..versionadded:: 0.4\n    '''",
        "'''Color of the plot.\n    '''",
        "'''List of (x, y) points to be displayed in the plot.\n\n    The elements of points are 2-tuples, (x, y). The points are displayed\n    based on the mode setting.\n\n    :data:`points` is a :class:`~kivy.properties.ListProperty`, defaults to\n    [].\n    '''",
        "'''Index of the X axis to use, defaults to 0\n    '''",
        "'''Index of the Y axis to use, defaults to 0\n    '''",
        "\"\"\"Return a function that convert or not the X value according to plot\n        prameters\"\"\"",
        "\"\"\"Return a function that convert or not the Y value according to plot\n        prameters\"\"\"",
        "\"\"\"Return a function that convert the X value of the graph to the\n        pixel coordinate on the plot, according to the plot settings and axis\n        settings. It's relative to the graph pos.\n        \"\"\"",
        "\"\"\"Return a function that convert the Y value of the graph to the\n        pixel coordinate on the plot, according to the plot settings and axis\n        settings. The returned value is relative to the graph pos.\n        \"\"\"",
        "\"\"\"Return a function that unproject a pixel to a X/Y value on the plot\n        (works only for linear, not log yet). `x`, `y`, is relative to the\n        graph pos, so the graph's pos needs to be subtracted from x, y before\n        passing it in.\n        \"\"\"",
        "\"\"\"Returns a dict containing the pixels bounds from the plot parameters.\n         The returned values are relative to the graph pos.\n        \"\"\"",
        "'''Called by graph whenever any of the parameters\n        change. The plot should be recalculated then.\n        log, min, max indicate the axis settings.\n        size a 4-tuple describing the bounding box in which we can draw\n        graphs, it's (x0, y0, x1, y1), which correspond with the bottom left\n        and top right corner locations, respectively.\n        '''",
        "'''returns a string which is unique and is the group name given to all\n        the instructions returned by _get_drawings. Graph uses this to remove\n        these instructions when needed.\n        '''",
        "'''returns a list of canvas instructions that will be added to the\n        graph's canvas.\n        '''",
        "'''called once to create all the canvas instructions needed for the\n        plot\n        '''",
        "'''draw the plot according to the params. It dispatches on_clear_plot\n        so derived classes should call super before updating.\n        '''",
        "'''Iterate on all the points adjusted to the graph settings\n        '''",
        "'''MeshLinePlot class which displays a set of points similar to a mesh.\n    '''",
        "'''VBO Mode used for drawing the points. Can be one of: 'points',\n    'line_strip', 'line_loop', 'lines', 'triangle_strip', 'triangle_fan'.\n    See :class:`~kivy.graphics.Mesh` for more details.\n\n    Defaults to 'line_strip'.\n    '''",
        "'''MeshStemPlot uses the MeshLinePlot class to draw a stem plot. The data\n    provided is graphed from origin to the data point.\n    '''",
        "\"\"\"LinePlot draws using a standard Line object.\n    \"\"\"",
        "'''Smooth Plot class, see module documentation for more information.\n    This plot use a specific Fragment shader for a custom anti aliasing.\n    '''",
        "'''\n    $HEADER$\n\n    void main(void) {\n        float edgewidth = 0.015625 * 64.;\n        float t = texture2D(texture0, tex_coord0).r;\n        float e = smoothstep(0., edgewidth, t);\n        gl_FragColor = frag_color * vec4(1, 1, 1, e);\n    }\n    '''",
        "\"\"\"\n    ContourPlot visualizes 3 dimensional data as an intensity map image.\n    The user must first specify 'xrange' and 'yrange' (tuples of min,max) and\n    then 'data', the intensity values.\n    `data`, is a MxN matrix, where the first dimension of size M specifies the\n    `y` values, and the second dimension of size N specifies the `x` values.\n    Axis Y and X values are assumed to be linearly spaced values from\n    xrange/yrange and the dimensions of 'data', `MxN`, respectively.\n    The color values are automatically scaled to the min and max z range of the\n    data set.\n    \"\"\"",
        "'''BarPlot class which displays a bar graph.\n    '''",
        "'''HBar draw horizontal bar on all the Y points provided\n    '''",
        "'''VBar draw vertical bar on all the X points provided\n    '''"
    ],
    "functions": [
        "identity",
        "exp10",
        "add_widget",
        "remove_widget",
        "_get_ticks",
        "_update_labels",
        "_update_ticks",
        "get_x_axis",
        "get_y_axis",
        "add_x_axis",
        "add_y_axis",
        "_update_plots",
        "_update_colors",
        "_redraw_all",
        "_redraw_x",
        "_redraw_y",
        "_redraw_size",
        "_clear_buffer",
        "add_plot",
        "remove_plot",
        "collide_plot",
        "to_data",
        "funcx",
        "funcy",
        "x_px",
        "y_px",
        "unproject",
        "get_px_bounds",
        "update",
        "get_group",
        "get_drawings",
        "create_drawings",
        "draw",
        "iterate_points",
        "on_clear_plot",
        "_set_mode",
        "create_drawings",
        "draw",
        "plot_mesh",
        "set_mesh_size",
        "plot_mesh",
        "create_drawings",
        "draw",
        "on_line_width",
        "create_drawings",
        "_smooth_reload_observer",
        "draw",
        "create_drawings",
        "draw",
        "update_bar_width",
        "create_drawings",
        "draw",
        "_unbind_graph",
        "bind_to_graph",
        "unbind_from_graph",
        "plot_mesh",
        "plot_mesh",
        "build",
        "make_contour_data",
        "update_points",
        "update_contour"
    ],
    "classes": [
        "GraphRotatedLabel",
        "Axis",
        "XAxis",
        "YAxis",
        "Graph",
        "Plot",
        "MeshLinePlot",
        "MeshStemPlot",
        "LinePlot",
        "SmoothLinePlot",
        "ContourPlot",
        "BarPlot",
        "HBar",
        "VBar",
        "TestApp"
    ]
}