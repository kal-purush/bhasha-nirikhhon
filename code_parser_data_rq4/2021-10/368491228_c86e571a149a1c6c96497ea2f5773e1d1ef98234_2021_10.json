{
    "identifiers": [
        "no",
        "digdir",
        "dpi",
        "client",
        "no",
        "difi",
        "certvalidator",
        "Validator",
        "no",
        "difi",
        "certvalidator",
        "ValidatorLoader",
        "no",
        "difi",
        "certvalidator",
        "api",
        "CertificateValidationException",
        "no",
        "difi",
        "certvalidator",
        "lang",
        "ValidatorParsingException",
        "no",
        "digdir",
        "dpi",
        "client",
        "domain",
        "Mode",
        "no",
        "digdir",
        "dpi",
        "client",
        "domain",
        "RecipePath",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "security",
        "cert",
        "X509Certificate",
        "VALIDATION_OF_BUSINESS_CERTIFICATE_FAILED",
        "validator",
        "mode",
        "of",
        "mode",
        "mode",
        "of",
        "pathFromEnum",
        "mode",
        "modeString",
        "path",
        "Mode",
        "of",
        "modeString",
        "BusinessCertificateValidator",
        "pathFromEnum",
        "orElse",
        "modeString",
        "path",
        "mode",
        "mode",
        "getClass",
        "getField",
        "mode",
        "name",
        "getAnnotation",
        "value",
        "e",
        "e",
        "path",
        "inputStream",
        "getClass",
        "getResourceAsStream",
        "path",
        "validator",
        "ValidatorLoader",
        "newInstance",
        "build",
        "inputStream",
        "e",
        "e",
        "certificate",
        "validator",
        "validate",
        "certificate",
        "e",
        "VALIDATION_OF_BUSINESS_CERTIFICATE_FAILED",
        "e",
        "certificate",
        "validator",
        "validate",
        "certificate",
        "e",
        "VALIDATION_OF_BUSINESS_CERTIFICATE_FAILED",
        "e",
        "inputStream",
        "validator",
        "validate",
        "inputStream",
        "e",
        "VALIDATION_OF_BUSINESS_CERTIFICATE_FAILED",
        "e",
        "message",
        "cause",
        "message",
        "cause",
        "message",
        "cause",
        "message",
        "cause"
    ],
    "literals": [
        "\"Validation of business certificate failed!\"",
        "\"Something is terribly wrong.\"",
        "\"Unable to load certificate validator.\""
    ],
    "variables": [
        "validator"
    ],
    "comments": [],
    "docstrings": [
        "* Holds the actual certificate validator.",
        "* Use of {@link Mode} to load the certificate validator using resources part of this package.\n     *\n     * @param mode One of the modes part of this package.\n     * @return Validator for validation of business certificates.\n     * @throws BusinessCertificateValidator.LoadingException when loading of validator is unsuccessful.",
        "* Use of annotated enum to load the certificate validator. This is overloaded by #of(Mode) to allow for easy\n     * detection in IDE of the {@link Mode} enums.\n     * <p>\n     * Enums used in this method must be annotated with {@link RecipePath}.\n     *\n     * @param mode Some enum annotated with {@link RecipePath}\n     * @return Validator for validation of business certificates.\n     * @throws BusinessCertificateValidator.LoadingException when loading of validator is unsuccessful.",
        "* Loads a certificate validator by providing mode as {@link String}. When mode is not detected is the value\n     * expected to be the path to validator recipe in class path.\n     *\n     * @param modeString Mode as string.\n     * @return Validator for validation of business certificates.\n     * @throws BusinessCertificateValidator.LoadingException when loading of validator is unsuccessful.",
        "* Returns path found in {@link RecipePath} annotation on a given {@link Enum}.\n     *\n     * @param mode Some enum.\n     * @return Path from {@link RecipePath} annotation.",
        "* Loads the certificate validator by using the path to the recipe file found in class path.\n     *\n     * @param path Path to recipe file in class path.\n     * @throws BusinessCertificateValidator.LoadingException when loading of validator is unsuccessful.",
        "* Validate certificate.\n     *\n     * @param certificate Certificate as a {@link X509Certificate} object.\n     * @throws BusinessCertificateValidator.Exception validation failed.",
        "* Validate certificate.\n     *\n     * @param certificate Certificate as a byte array.\n     * @throws BusinessCertificateValidator.Exception validation failed.",
        "* Validate certificate.\n     *\n     * @param inputStream Certificate from an {@link InputStream}.\n     * @throws BusinessCertificateValidator.Exception validation failed."
    ],
    "functions": [
        "BusinessCertificateValidator",
        "of",
        "BusinessCertificateValidator",
        "of",
        "BusinessCertificateValidator",
        "of",
        "pathFromEnum",
        "BusinessCertificateValidator",
        "validate",
        "validate",
        "validate",
        "LoadingException"
    ],
    "classes": [
        "BusinessCertificateValidator",
        "LoadingException"
    ]
}