{
    "identifiers": [
        "ActionInterface",
        "CheckStepInterface",
        "checkTradingPair",
        "getTradingPairsBitquery",
        "PairInfoBitquery",
        "PairInfo",
        "primaryTokenIndex",
        "TokenInfo",
        "TokenInfoBitquery",
        "Polygon",
        "parseForceList",
        "rebuildTokenlist",
        "TokenItem",
        "toChecksum",
        "assetID",
        "logoURI",
        "config",
        "token",
        "token",
        "token",
        "token",
        "token",
        "pair",
        "pair",
        "pair",
        "convertTokenInfo",
        "pair",
        "convertTokenInfo",
        "pair",
        "now",
        "yesterday",
        "config",
        "config",
        "config",
        "parseForceList",
        "config",
        "config",
        "dateOfYesterday",
        "query",
        "date",
        "queryReplaced",
        "getTradingPairsBitquery",
        "config",
        "queryReplaced",
        "pairs",
        "x",
        "x",
        "convertPairInfo",
        "x",
        "pairInfo",
        "checkTradingPair",
        "pairInfo",
        "config",
        "config",
        "PrimaryTokens",
        "includeList",
        "filtered",
        "pairInfo",
        "err",
        "err",
        "filtered",
        "filtered",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "filtered",
        "token",
        "toChecksum",
        "token",
        "TokenItem",
        "assetID",
        "idChecksum",
        "idChecksum",
        "token",
        "token",
        "parseInt",
        "token",
        "logoURI",
        "idChecksum",
        "retrievePolygonSwapPairs",
        "tradingPairs",
        "p",
        "tokenInfoFromSubgraphToken",
        "p",
        "tokenInfoFromSubgraphToken",
        "p",
        "primaryTokenIndex",
        "p",
        "PrimaryTokens",
        "tokenItem1",
        "tokenItem0",
        "tokenItem0",
        "tmp",
        "pairs2",
        "tokenItem0",
        "tokenItem1",
        "rebuildTokenlist",
        "Polygon",
        "pairs2",
        "config",
        "generateTokenlist"
    ],
    "literals": [
        "\"../generic/interface\"",
        "\"../generic/subgraph\"",
        "\"../generic/blockchains\"",
        "\"../generic/tokenlists\"",
        "\"../generic/eth-address\"",
        "\"../generic/asset\"",
        "\"../config\"",
        "string",
        "\"WMATIC\"",
        "\"MATIC\"",
        "\"WETH\"",
        "\"USDC\"",
        "\"USDT\"",
        "\"DAI\"",
        "'?'",
        "Retrieving pairs from Polygon, limit  volume ${config.PolygonSwap_MinVol24}  txcount ${config.PolygonSwap_MinTxCount24}",
        "forceIncludeList: ${config.PolygonSwap_ForceInclude}",
        "\"$DATE$\"",
        "\"object\"",
        "\"Exception:\"",
        "\"Retrieved & filtered\"",
        "\"pairs:\"",
        "pair:  ${p.token0.symbol} -- ${p.token1.symbol} \\t USD ${Math.round(p.reserveUSD)} ${Math.round(p.volumeUSD)} ${p.txCount}",
        "\"POLYGON\"",
        "\"polygon\"",
        "\"--\"",
        "\"Polygon\"",
        "string",
        "\"Polygon\""
    ],
    "variables": [
        "PrimaryTokens",
        "now",
        "yesterday",
        "includeList",
        "query",
        "date",
        "queryReplaced",
        "pairs",
        "filtered",
        "pairInfo",
        "idChecksum",
        "tradingPairs",
        "pairs2",
        "tokenItem0",
        "tokenItem1",
        "tmp",
        "tokenItem1"
    ],
    "comments": [
        "Return the date 1,5 days ago in the form 2021-10-06",
        "Retrieve trading pairs from Polygon",
        "note: if [] is returned here for some reason, all pairs will be *removed*.  In case of error (e.g. timeout) it should throw",
        "convert",
        "reverse"
    ],
    "docstrings": [],
    "functions": [
        "convertTokenInfo",
        "convertPairInfo",
        "dateOfYesterday",
        "retrievePolygonSwapPairs",
        "tokenInfoFromSubgraphToken",
        "generateTokenlist",
        "getName",
        "getSanityChecks",
        "updateManual"
    ],
    "classes": [
        "PolygonAction"
    ]
}