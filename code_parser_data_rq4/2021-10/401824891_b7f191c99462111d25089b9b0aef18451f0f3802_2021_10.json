{
    "identifiers": [
        "json",
        "os",
        "time",
        "pathlib",
        "Path",
        "card0_manager",
        "Card0",
        "logging_settings",
        "set_logger",
        "monitors_manager",
        "Monitors",
        "xrandrmanager",
        "XrandrManager",
        "staticmethod",
        "Card0",
        "check_cable_conditions_until_it_change",
        "CABLES_CONDITIONS_FILE_PATH",
        "XrandrManager",
        "len",
        "xrandr",
        "monitors_data",
        "logger",
        "info",
        "execute_command",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "is_file",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "stat",
        "st_size",
        "position_manually",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "load",
        "file",
        "xrandr",
        "get_needed_monitors_layout_config_automatically",
        "xrandr",
        "monitors_data",
        "previously_saved_mons_pos",
        "location_of_monitors",
        "xrandr",
        "create_string_for_execute",
        "xrandr",
        "monitors_data",
        "location_of_monitors",
        "logger",
        "debug",
        "location_of_monitors",
        "logger",
        "info",
        "execute_command",
        "logger",
        "info",
        "Monitors",
        "connect_monitors_automatically",
        "xrandr",
        "monitors_data",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "dump",
        "monitors_sorted_by_size",
        "file",
        "indent",
        "xrandr",
        "create_string_for_execute",
        "xrandr",
        "monitors_data",
        "monitors_sorted_by_size",
        "logger",
        "info",
        "execute_command",
        "time",
        "sleep",
        "staticmethod",
        "Monitors",
        "XrandrManager",
        "monitors",
        "set_monitors_position_manually",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "is_file",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "stat",
        "st_size",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "dump",
        "my_monitors_position",
        "file",
        "xrandr",
        "create_string_for_execute",
        "xrandr",
        "monitors_data",
        "my_monitors_position",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "load",
        "file",
        "xrandr",
        "create_new_collections_of_mon_positions",
        "my_monitors_position",
        "previously_saved_mons_pos",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "dump",
        "new_collection_of_monitors_positions",
        "file",
        "indent",
        "xrandr",
        "create_string_for_execute",
        "xrandr",
        "monitors_data",
        "new_collection_of_monitors_positions",
        "logger",
        "info",
        "logger",
        "info",
        "execute_command",
        "mode",
        "settings",
        "logger",
        "critical",
        "mode",
        "line_break",
        "line_break",
        "line_break",
        "join",
        "settings",
        "staticmethod",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "is_file",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "stat",
        "st_size",
        "logger",
        "info",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "load",
        "file",
        "previously_saved_mons_pos",
        "logger",
        "info",
        "logger",
        "info",
        "XrandrManager",
        "create_layout_id_layout_name_dict",
        "previously_saved_mons_pos",
        "id",
        "monitors_names",
        "saved_cable_position_with_id",
        "items",
        "id",
        "monitors_names",
        "logger",
        "info",
        "input",
        "XrandrManager",
        "xrandr",
        "create_string_for_execute",
        "xrandr",
        "monitors_data",
        "saved_cable_position_with_id",
        "input_id",
        "logger",
        "info",
        "execute_command",
        "staticmethod",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "is_file",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "stat",
        "st_size",
        "logger",
        "info",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "load",
        "file",
        "XrandrManager",
        "create_layout_id_layout_name_dict",
        "saved_positions",
        "logger",
        "info",
        "id",
        "monitors_names",
        "saved_positions_with_position_id",
        "items",
        "id",
        "monitors_names",
        "staticmethod",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "is_file",
        "Path",
        "MONITORS_LAYOUTS_FILE_PATH",
        "stat",
        "st_size",
        "logger",
        "info",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "load",
        "file",
        "Monitors",
        "delete_saved_config",
        "previously_saved_mons_pos",
        "open",
        "MONITORS_LAYOUTS_FILE_PATH",
        "file",
        "json",
        "dump",
        "new_configs",
        "file",
        "logger",
        "info",
        "config",
        "config",
        "previously_saved_mons_pos",
        "config",
        "new_configs",
        "set_logger"
    ],
    "literals": [
        "'xrandr --auto'",
        "'r'",
        "f'Позиционируем мониторы согласно сохраненным ранее настройкам: {location_of_monitors}'",
        "'Config with previous monitor layouts doesnt contains current connected cables. Connecting monitors with sorting by monitors size. If you want to set monitors by yout self, use command: \"moncotrol -s\"'",
        "'w'",
        "'w'",
        "'r'",
        "'w'",
        "'Settings was saved successfully'",
        "'\\n'",
        "f'\\nСкрипт не имеет настройки: {mode}\\n\\n'",
        "f'\\nЗапустите скрит с одной из следующих настроек:{line_break}{line_break}\\n'",
        "f'{f\"{line_break}\".join(settings)}'",
        "f\"{line_break}\"",
        "'Config file empty or doesnt exist'",
        "'r'",
        "'You did not save any monitors layouts yet'",
        "'Next strings will show monitors_positions in format: {config_id: [cable_1, cable_2, etc]}\\n'",
        "f'\\n{id}: {monitors_names}'",
        "'\\n'",
        "'Write number of config, that u need rn and press Enter button'",
        "'Config file empty or doesnt exist'",
        "'r'",
        "'Next strings will show monitors_positions in format: {monitors_position_id: [cabel_1, cabel_2, etc]}'",
        "f'\\n{id}: {monitors_names}'",
        "'\\n'",
        "'Config file empty or doesnt exist: saved layouts doesnt exits'",
        "'r'",
        "'w'",
        "f'This configs was deleted successfully: {[config for config in previously_saved_mons_pos if config not in new_configs]}'",
        "'my_monitor_layout.json'",
        "'cables_conditions_from_card0.json'"
    ],
    "variables": [
        "xrandr",
        "execute_command",
        "previously_saved_mons_pos",
        "location_of_monitors",
        "execute_command",
        "monitors_sorted_by_size",
        "execute_command",
        "monitors",
        "xrandr",
        "my_monitors_position",
        "execute_command",
        "previously_saved_mons_pos",
        "new_collection_of_monitors_positions",
        "execute_command",
        "line_break",
        "previously_saved_mons_pos",
        "saved_cable_position_with_id",
        "input_id",
        "xrandr",
        "execute_command",
        "saved_positions",
        "saved_positions_with_position_id",
        "previously_saved_mons_pos",
        "new_configs",
        "logger",
        "MONITORS_LAYOUTS_FILE_PATH",
        "CABLES_CONDITIONS_FILE_PATH"
    ],
    "comments": [
        "при пустом файлу st_size возвращает 1, а не 0...",
        "os.system(execute_command)",
        "TODO: сделать проверку на существование и пустоту файла",
        "TODO: возможно, стоит сделать отдельную функцию для принта конфигов",
        "TODO: здесь должен быть logger"
    ],
    "docstrings": [],
    "functions": [
        "monitoring_activity",
        "position_manually",
        "wrong_input",
        "choose_one_of_saved_positions_of_monitors",
        "show_saved_monitors_positions",
        "delete_config"
    ],
    "classes": [
        "Launch"
    ]
}