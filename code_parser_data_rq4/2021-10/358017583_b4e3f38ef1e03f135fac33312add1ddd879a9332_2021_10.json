{
    "identifiers": [
        "logging",
        "os",
        "dataclasses",
        "asdict",
        "dllogger",
        "DLLogger",
        "wandb",
        "dllogger",
        "JSONStreamBackend",
        "StdOutBackend",
        "Verbosity",
        "transformers",
        "integrations",
        "WandbCallback",
        "logging",
        "getLogger",
        "training_args",
        "os",
        "path",
        "exists",
        "training_args",
        "output_dir",
        "os",
        "listdir",
        "training_args",
        "output_dir",
        "training_args",
        "do_train",
        "training_args",
        "overwrite_output_dir",
        "ValueError",
        "training_args",
        "output_dir",
        "os",
        "path",
        "exists",
        "training_args",
        "output_dir",
        "os",
        "makedirs",
        "training_args",
        "output_dir",
        "output_dir",
        "DLLogger",
        "init",
        "backends",
        "StdOutBackend",
        "Verbosity",
        "DEFAULT",
        "JSONStreamBackend",
        "Verbosity",
        "VERBOSE",
        "os",
        "path",
        "join",
        "output_dir",
        "DLLOGGER_FILENAME",
        "trainer",
        "data_args",
        "model_args",
        "training_args",
        "asdict",
        "data_args",
        "asdict",
        "model_args",
        "asdict",
        "training_args",
        "k",
        "v",
        "k",
        "v",
        "all_hparams",
        "items",
        "safe_json",
        "v",
        "logger",
        "info",
        "all_hparams",
        "DLLogger",
        "log",
        "step",
        "data",
        "all_hparams",
        "verbosity",
        "Verbosity",
        "DEFAULT",
        "AllHparams",
        "all_hparams",
        "callback",
        "trainer",
        "callback_handler",
        "callbacks",
        "isinstance",
        "callback",
        "WandbCallback",
        "callback",
        "setup",
        "all_hparams_aggregated",
        "trainer",
        "state",
        "trainer",
        "model",
        "reinit",
        "wandb",
        "run",
        "name",
        "DLLogger",
        "log",
        "step",
        "data",
        "wandb_run_name",
        "verbosity",
        "Verbosity",
        "DEFAULT",
        "DLLogger",
        "flush",
        "output_dir",
        "metrics",
        "prefix",
        "time_index",
        "os",
        "path",
        "join",
        "output_dir",
        "prefix",
        "open",
        "output_file",
        "writer",
        "logger",
        "info",
        "prefix",
        "time_index",
        "writer",
        "write",
        "prefix",
        "time_index",
        "key",
        "sorted",
        "metrics",
        "keys",
        "logger",
        "info",
        "key",
        "metrics",
        "key",
        "writer",
        "write",
        "key",
        "metrics",
        "key",
        "DLLogger",
        "log",
        "step",
        "time_index",
        "data",
        "metrics",
        "verbosity",
        "Verbosity",
        "VERBOSE",
        "DLLogger",
        "flush",
        "output_dir",
        "results_avg_time",
        "os",
        "path",
        "join",
        "output_dir",
        "open",
        "output_eval_file",
        "writer",
        "logger",
        "info",
        "writer",
        "write",
        "key",
        "sorted",
        "results_avg_time",
        "keys",
        "logger",
        "info",
        "key",
        "results_avg_time",
        "key",
        "writer",
        "write",
        "key",
        "results_avg_time",
        "key",
        "DLLogger",
        "log",
        "step",
        "data",
        "results_avg_time",
        "verbosity",
        "Verbosity",
        "VERBOSE",
        "DLLogger",
        "flush",
        "results_avg_time",
        "entries",
        "__dict__",
        "update",
        "entries",
        "k",
        "v",
        "k",
        "v",
        "__dict__",
        "items",
        "safe_json",
        "v",
        "result",
        "data",
        "data",
        "isinstance",
        "data",
        "isinstance",
        "data",
        "all",
        "safe_json",
        "x",
        "x",
        "data",
        "isinstance",
        "data",
        "all",
        "isinstance",
        "k",
        "safe_json",
        "v",
        "k",
        "v",
        "data",
        "items"
    ],
    "literals": [
        "\"log.json\"",
        "f\"Output directory ({training_args.output_dir}) already exists and is not empty. \"",
        "f\"Use --overwrite_output_dir to overcome.\"",
        "f\"Training, Model and Data parameters {all_hparams}\"",
        "\"PARAMETER\"",
        "\"PARAMETER\"",
        "\"wandb_run_name\"",
        "f\"{prefix}_results_over_time.txt\"",
        "\"a\"",
        "f\"***** {prefix} results (time index): {time_index})*****\"",
        "f\"\\n***** {prefix} results (time index): {time_index})*****\\n\"",
        "\"  %s = %s\"",
        "\"%s = %s\\n\"",
        "\"eval_results_avg_over_time.txt\"",
        "\"a\"",
        "\"***** Eval results (avg over time) *****\"",
        "\"\\n***** Eval results (avg over time) *****\\n\"",
        "\"  %s = %s\"",
        "\"%s = %s\\n\""
    ],
    "variables": [
        "logger",
        "DLLOGGER_FILENAME",
        "all_hparams",
        "all_hparams",
        "all_hparams_aggregated",
        "wandb_run_name",
        "output_file",
        "output_eval_file",
        "result"
    ],
    "comments": [
        "",
        "Copyright (c) 2021, NVIDIA CORPORATION.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "Creating an object with all hparams and a method to get sanitized values (like DataClass),",
        "because the setup code for WandbCallback requires a DataClass and not a dict",
        "Enforcing init of W&B  before begin_train callback (where it is originally initiated)",
        "Saving Weights & Biases run name to DLLogger",
        "Logging AOT metrics with DLLogger"
    ],
    "docstrings": [
        "\"\"\"\n    Logs to a text file metric results for each time window, in a human-readable format\n    \"\"\"",
        "\"\"\"\n    Logs to a text file the final metric results (average over time), in a human-readable format\n    \"\"\"",
        "\"\"\"\n    Used to aggregate all arguments in a single object for logging\n    \"\"\""
    ],
    "functions": [
        "creates_output_dir",
        "config_dllogger",
        "log_parameters",
        "log_metric_results",
        "log_aot_metric_results",
        "to_sanitized_dict",
        "safe_json"
    ],
    "classes": [
        "AllHparams"
    ]
}