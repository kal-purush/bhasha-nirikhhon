{
    "identifiers": [
        "pandas",
        "pd",
        "evalml",
        "evalml",
        "model_family",
        "ModelFamily",
        "evalml",
        "model_understanding",
        "calculate_permutation_importance",
        "evalml",
        "utils",
        "get_logger",
        "infer_feature_types",
        "pipeline",
        "X",
        "y",
        "importance_method",
        "max_features",
        "min_importance_threshold",
        "objective",
        "get_logger",
        "pipeline",
        "_is_fitted",
        "ValueError",
        "min_importance_threshold",
        "min_importance_threshold",
        "ValueError",
        "min_importance_threshold",
        "importance_method",
        "objective",
        "evalml",
        "automl",
        "get_default_primary_search_objective",
        "pipeline",
        "problem_type",
        "X",
        "y",
        "ValueError",
        "infer_feature_types",
        "X",
        "infer_feature_types",
        "y",
        "calculate_permutation_importance",
        "pipeline",
        "X",
        "y",
        "objective",
        "importance_method",
        "pipeline",
        "feature_importance",
        "ValueError",
        "importance_method",
        "pipeline",
        "estimator",
        "model_family",
        "ModelFamily",
        "LINEAR_MODEL",
        "importance_method",
        "get_influential_features",
        "imp_df",
        "max_features",
        "min_importance_threshold",
        "linear_importance",
        "y",
        "y",
        "y",
        "name",
        "_fill_template",
        "pipeline",
        "estimator",
        "target",
        "objective",
        "most_important_features",
        "somewhat_important_features",
        "detrimental_features",
        "logger",
        "info",
        "explanation",
        "imp_df",
        "max_features",
        "min_importance_threshold",
        "linear_importance",
        "max",
        "min_importance_threshold",
        "linear_importance",
        "imp_df",
        "abs",
        "pos_imp_df",
        "pd",
        "DataFrame",
        "imp_df",
        "imp_df",
        "imp_df",
        "imp_df",
        "pos_imp_df",
        "sum",
        "pos_imp_df",
        "min",
        "len",
        "pos_imp_df",
        "max_features",
        "pos_imp_df",
        "num_feats",
        "imp_features",
        "imp_features",
        "heavy_importance_threshold",
        "imp_features",
        "imp_features",
        "heavy_importance_threshold",
        "heavy_importance",
        "somewhat_importance",
        "somewhat_importance",
        "min_importance_threshold",
        "neg_imp_df",
        "estimator",
        "target",
        "objective",
        "most_important",
        "somewhat_important",
        "detrimental_feats",
        "objective",
        "isinstance",
        "objective",
        "evalml",
        "objectives",
        "ObjectiveBase",
        "objective",
        "name",
        "objective",
        "objective",
        "lower",
        "objective",
        "objective",
        "estimator",
        "objective_str",
        "target",
        "estimator",
        "target",
        "objective_str",
        "feature_list",
        "len",
        "feature_list",
        "i",
        "len",
        "feature_list",
        "i",
        "len",
        "feature_list",
        "text",
        "feature_list",
        "i",
        "text",
        "feature_list",
        "i",
        "text",
        "len",
        "most_important",
        "most_important",
        "len",
        "most_important",
        "heavy",
        "enumerate_features",
        "most_important",
        "len",
        "somewhat_important",
        "heavy",
        "len",
        "somewhat_important",
        "somewhat_important",
        "len",
        "somewhat_important",
        "somewhat",
        "enumerate_features",
        "somewhat_important",
        "len",
        "heavy",
        "len",
        "somewhat",
        "len",
        "detrimental_feats",
        "len",
        "detrimental_feats",
        "detrimental_feats",
        "detrimental_feats",
        "detrimental",
        "enumerate_features",
        "detrimental_feats",
        "detrimental",
        "tag",
        "beginning",
        "heavy",
        "somewhat",
        "neither",
        "detrimental"
    ],
    "literals": [
        "\"permutation\"",
        "\"auto\"",
        "f\"{__name__}.explain\"",
        "\"Pipelines must be fitted in order to run feature explanations.\"",
        "f\"The minimum importance threshold must be a percentage value in the range [0, 1), not {min_importance_threshold}.\"",
        "\"permutation\"",
        "\"auto\"",
        "\"X and y are required parameters for explaining pipelines with permutation importance.\"",
        "\"feature\"",
        "f\"Unknown importance method {importance_method}.\"",
        "\"feature\"",
        "\"importance\"",
        "\"importance\"",
        "\"feature\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"importance\"",
        "\"feature\"",
        "\"importance\"",
        "\"feature\"",
        "\"feature\"",
        "\"R2\"",
        "f\" as measured by {objective}\"",
        "\"\"",
        "f\"{estimator}: The output{objective_str}\"",
        "f\"{estimator}: The prediction of {target}{objective_str}\"",
        "\"\"",
        "\",\"",
        "f\" and {feature_list[i]}\"",
        "f\" {feature_list[i]},\"",
        "\"\"",
        "f\" is heavily influenced by {most_important[0]}\"",
        "\", and\"",
        "\"\"",
        "f\" is somewhat influenced by {somewhat_important[0]}\"",
        "\".\"",
        "\" is not strongly influenced by any single feature. Lower the `min_importance_threshold` to see more.\"",
        "\"\"",
        "f\"\\nThe feature {detrimental_feats[0]}\"",
        "\"this feature.\"",
        "f\"\\nThe features {detrimental_feats[0]}\"",
        "\"these features.\"",
        "\" detracted from model performance. We suggest removing \""
    ],
    "variables": [
        "logger",
        "objective",
        "X",
        "y",
        "imp_df",
        "objective",
        "imp_df",
        "linear_importance",
        "linear_importance",
        "most_important_features",
        "somewhat_important_features",
        "detrimental_features",
        "target",
        "explanation",
        "heavy_importance_threshold",
        "pos_imp_df",
        "pos_imp_df",
        "neg_imp_df",
        "neg_imp_df",
        "pos_imp_df",
        "pos_imp_df",
        "num_feats",
        "imp_features",
        "heavy_importance",
        "somewhat_importance",
        "objective",
        "objective",
        "objective_str",
        "beginning",
        "text",
        "text",
        "text",
        "heavy",
        "heavy",
        "heavy",
        "heavy",
        "somewhat",
        "somewhat",
        "somewhat",
        "neither",
        "neither",
        "detrimental",
        "detrimental",
        "tag",
        "detrimental",
        "detrimental",
        "tag",
        "detrimental"
    ],
    "comments": [
        "Separate negative and positive features, if situation calls",
        "Normalize the positive features to sum to 1",
        "Get the objective to a printable string",
        "Remove any title case if necessary",
        "Beginning of description",
        "Heavily influential description",
        "Somewhat influential description",
        "Neither!",
        "Detrimental Description"
    ],
    "docstrings": [
        "\"\"\"Human Readable Pipeline Explanations.\"\"\"",
        "\"\"\"Outputs a human-readable explanation of trained pipeline behavior.\n\n    Args:\n        pipeline (PipelineBase): The pipeline to explain.\n        X (pd.DataFrame): If importance_method is permutation, the holdout X data to compute importance with. Ignored otherwise.\n        y (pd.Series): The holdout y data, used to obtain the name of the target class. If importance_method is permutation, used to compute importance with.\n        importance_method (str): The method of determining feature importance. One of [\"permutation\", \"feature\"]. Defaults to \"permutation\".\n        max_features (int): The maximum number of influential features to include in an explanation. This does not affect the number of detrimental features reported. Defaults to 5.\n        min_importance_threshold (float): The minimum percent of total importance a single feature can have to be considered important. Defaults to 0.05.\n        objective (str, ObjectiveBase): If importance_method is permutation, the objective to compute importance with. Ignored otherwise, defaults to \"auto\".\n\n    Raises:\n        ValueError: if any arguments passed in are invalid or the pipeline is not fitted.\n    \"\"\"",
        "\"\"\"Finds the most influential features as well as any detrimental features from a dataframe of feature importances.\n\n    Args:\n        imp_df (pd.DataFrame): DataFrame containing feature names and associated importances.\n        max_features (int): The maximum number of features to include in an explanation. Defaults to 5.\n        min_importance_threshold (float): The minimum percent of total importance a single feature can have to be considered important. Defaults to 0.05.\n        linear_importance (bool): When True, negative feature importances are not considered detrimental. Defaults to False.\n\n    Returns:\n        (list, list, list): Lists of feature names corresponding to heavily influential, somewhat influential, and detrimental features, respectively.\n\n    \"\"\""
    ],
    "functions": [
        "readable_explanation",
        "get_influential_features",
        "_fill_template",
        "enumerate_features"
    ],
    "classes": []
}