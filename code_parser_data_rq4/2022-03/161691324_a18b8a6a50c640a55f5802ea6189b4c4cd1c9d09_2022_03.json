{
    "identifiers": [
        "key"
    ],
    "literals": [
        "\"/pet\"",
        "\"updatePet\"",
        "\"addPet\"",
        "\"/pet/findByStatus\"",
        "\"findPetsByStatus\"",
        "\"/pet/findByTags\"",
        "\"findPetsByTags\"",
        "\"/pet/{petId}\"",
        "\"getPetById\"",
        "\"updatePetWithForm\"",
        "\"deletePet\"",
        "\"/pet/{petId}/uploadImage\"",
        "\"uploadFile\"",
        "\"/store/inventory\"",
        "\"getInventory\"",
        "\"/store/order\"",
        "\"placeOrder\"",
        "\"/store/order/{orderId}\"",
        "\"getOrderById\"",
        "\"deleteOrder\"",
        "\"/user\"",
        "\"createUser\"",
        "\"/user/createWithArray\"",
        "\"createUsersWithArrayInput\"",
        "\"/user/createWithList\"",
        "\"createUsersWithListInput\"",
        "\"/user/login\"",
        "\"loginUser\"",
        "\"/user/logout\"",
        "\"logoutUser\"",
        "\"/user/{username}\"",
        "\"getUserByName\"",
        "\"updateUser\"",
        "\"deleteUser\"",
        "string",
        "\"placed\"",
        "\"approved\"",
        "\"delivered\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"schemas\"",
        "\"Category\"",
        "string",
        "string",
        "\"schemas\"",
        "\"Tag\"",
        "\"available\"",
        "\"pending\"",
        "\"sold\"",
        "string",
        "string",
        "\"application/json\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"available\"",
        "\"pending\"",
        "\"sold\"",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Pet\"",
        "string",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Pet\"",
        "\"application/x-www-form-urlencoded\"",
        "string",
        "string",
        "string",
        "\"application/json\"",
        "\"schemas\"",
        "\"ApiResponse\"",
        "\"multipart/form-data\"",
        "string",
        "string",
        "\"application/json\"",
        "string",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Order\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Order\"",
        "\"*/*\"",
        "\"schemas\"",
        "\"Order\"",
        "\"application/xml\"",
        "\"schemas\"",
        "\"Order\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"Order\"",
        "\"*/*\"",
        "\"schemas\"",
        "\"User\"",
        "\"*/*\"",
        "\"schemas\"",
        "\"User\"",
        "\"*/*\"",
        "\"schemas\"",
        "\"User\"",
        "string",
        "string",
        "\"X-Rate-Limit\"",
        "\"X-Expires-After\"",
        "string",
        "\"application/xml\"",
        "string",
        "\"application/json\"",
        "string",
        "string",
        "\"application/xml\"",
        "\"schemas\"",
        "\"User\"",
        "\"application/json\"",
        "\"schemas\"",
        "\"User\"",
        "string",
        "\"*/*\"",
        "\"schemas\"",
        "\"User\"",
        "string"
    ],
    "variables": [],
    "comments": [
        "Multiple status values can be provided with comma separated strings",
        "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "Returns a single pet",
        "Returns a map of status codes to quantities",
        "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
        "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "This can only be done by the logged in user.",
        "This can only be done by the logged in user.",
        "This can only be done by the logged in user.",
        "Format: int64",
        "Format: int64",
        "Format: int32",
        "Format: date-time",
        "Format: int64",
        "Format: int64",
        "Format: int64",
        "Format: int64",
        "@example doggie",
        "Format: int32",
        "Invalid ID supplied",
        "Pet not found",
        "Validation exception",
        "Pet object that needs to be added to the store",
        "Invalid input",
        "Pet object that needs to be added to the store",
        "Multiple status values can be provided with comma separated strings",
        "Status values that need to be considered for filter",
        "successful operation",
        "Invalid status value",
        "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
        "Tags to filter by",
        "successful operation",
        "Invalid tag value",
        "Returns a single pet",
        "ID of pet to return",
        "successful operation",
        "Invalid ID supplied",
        "Pet not found",
        "ID of pet that needs to be updated",
        "Invalid input",
        "@description Updated name of the pet",
        "@description Updated status of the pet",
        "Pet id to delete",
        "Invalid ID supplied",
        "Pet not found",
        "ID of pet to update",
        "successful operation",
        "@description Additional data to pass to server",
        "Returns a map of status codes to quantities",
        "successful operation",
        "successful operation",
        "Invalid Order",
        "order placed for purchasing the pet",
        "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
        "ID of pet that needs to be fetched",
        "successful operation",
        "Invalid ID supplied",
        "Order not found",
        "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
        "ID of the order that needs to be deleted",
        "Invalid ID supplied",
        "Order not found",
        "This can only be done by the logged in user.",
        "successful operation",
        "Created user object",
        "successful operation",
        "List of user object",
        "successful operation",
        "List of user object",
        "The user name for login",
        "The password for login in clear text",
        "successful operation",
        "calls per hour allowed by the user",
        "date in UTC when token expires",
        "Invalid username/password supplied",
        "successful operation",
        "The name that needs to be fetched. Use user1 for testing.",
        "successful operation",
        "Invalid username supplied",
        "User not found",
        "This can only be done by the logged in user.",
        "name that need to be updated",
        "Invalid user supplied",
        "User not found",
        "Updated user object",
        "This can only be done by the logged in user.",
        "The name that needs to be deleted",
        "Invalid username supplied",
        "User not found"
    ],
    "docstrings": [
        "* This file was auto-generated by openapi-typescript.\n * Do not make direct changes to the file.",
        "* @description Order Status\n       * @enum {string}",
        "* Format: int32\n       * @description User Status",
        "* @description pet status in the store\n       * @enum {string}",
        "* Format: binary\n           * @description file to upload"
    ],
    "functions": [],
    "classes": []
}