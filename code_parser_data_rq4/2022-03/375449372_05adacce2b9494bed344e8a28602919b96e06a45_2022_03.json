{
    "identifiers": [
        "com",
        "github",
        "akazver",
        "gradle",
        "plugins",
        "mapstruct",
        "org",
        "gradle",
        "api",
        "Project",
        "org",
        "gradle",
        "testfixtures",
        "ProjectBuilder",
        "org",
        "gradle",
        "testkit",
        "runner",
        "GradleRunner",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayName",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "io",
        "TempDir",
        "org",
        "junit",
        "jupiter",
        "ParameterizedTest",
        "org",
        "junit",
        "jupiter",
        "provider",
        "Arguments",
        "org",
        "junit",
        "jupiter",
        "provider",
        "MethodSource",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Supplier",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "stream",
        "Stream",
        "com",
        "github",
        "akazver",
        "gradle",
        "plugins",
        "mapstruct",
        "PluginDependency",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "assertj",
        "core",
        "api",
        "SoftAssertions",
        "assertSoftly",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertDoesNotThrow",
        "org",
        "junit",
        "jupiter",
        "provider",
        "Arguments",
        "arguments",
        "TempDir",
        "tempDirectory",
        "project",
        "BeforeEach",
        "project",
        "ProjectBuilder",
        "builder",
        "withProjectDir",
        "tempDirectory",
        "withName",
        "build",
        "Test",
        "DisplayName",
        "addBuildFile",
        "assertDoesNotThrow",
        "project",
        "getPluginManager",
        "apply",
        "assertDoesNotThrow",
        "project",
        "getPlugins",
        "getPlugin",
        "extension",
        "project",
        "getExtensions",
        "findByType",
        "assertThat",
        "extension",
        "isNotNull",
        "assertSoftly",
        "softly",
        "softly",
        "assertThat",
        "extension",
        "getSuppressGeneratorTimestamp",
        "isFalse",
        "softly",
        "assertThat",
        "extension",
        "getVerbose",
        "isFalse",
        "softly",
        "assertThat",
        "extension",
        "getSuppressGeneratorVersionInfoComment",
        "isFalse",
        "softly",
        "assertThat",
        "extension",
        "getDefaultComponentModel",
        "isEqualTo",
        "softly",
        "assertThat",
        "extension",
        "getDefaultInjectionStrategy",
        "isEqualTo",
        "softly",
        "assertThat",
        "extension",
        "getUnmappedTargetPolicy",
        "isEqualTo",
        "ParameterizedTest",
        "name",
        "MethodSource",
        "buildFile",
        "addBuildFile",
        "buildFile",
        "assertThat",
        "executeGradle",
        "contains",
        "ParameterizedTest",
        "name",
        "MethodSource",
        "buildFile",
        "whiteList",
        "blackList",
        "addBuildFile",
        "buildFile",
        "assertThat",
        "executeGradle",
        "contains",
        "whiteList",
        "doesNotContain",
        "blackList",
        "SuppressWarnings",
        "pluginParams",
        "Arrays",
        "asList",
        "pluginArgs",
        "Arrays",
        "asList",
        "Stream",
        "of",
        "arguments",
        "pluginParams",
        "arguments",
        "pluginArgs",
        "arguments",
        "Collections",
        "singletonList",
        "SuppressWarnings",
        "Stream",
        "of",
        "arguments",
        "toList",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "arguments",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "toList",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "arguments",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "toList",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "arguments",
        "toList",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "arguments",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "Collections",
        "singletonList",
        "arguments",
        "toList",
        "LOMBOK",
        "LOMBOK_MAPSTRUCT_BINDING",
        "MAPSTRUCT",
        "MAPSTRUCT_PROCESSOR",
        "MAPSTRUCT_SPRING_EXTENSIONS",
        "Collections",
        "singletonList",
        "pluginDependency",
        "Arrays",
        "stream",
        "pluginDependency",
        "PluginDependency",
        "getId",
        "collect",
        "Collectors",
        "toList",
        "args",
        "GradleRunner",
        "create",
        "withPluginClasspath",
        "withProjectDir",
        "project",
        "getProjectDir",
        "withArguments",
        "args",
        "build",
        "getOutput",
        "source",
        "targetPath",
        "project",
        "file",
        "toPath",
        "inputStream",
        "Objects",
        "requireNonNull",
        "getClass",
        "getResourceAsStream",
        "source",
        "sourceStream",
        "inputStream",
        "get",
        "Files",
        "copy",
        "sourceStream",
        "targetPath",
        "exception",
        "message",
        "format",
        "source",
        "targetPath",
        "message",
        "exception"
    ],
    "literals": [
        "\"test-project\"",
        "\"Plugin attached\"",
        "\"build-base.gradle\"",
        "\"default\"",
        "\"field\"",
        "\"WARN\"",
        "\"[{index}] Plugin configured with {0}\"",
        "\"fetchArgumentsWithConfiguration\"",
        "\"clean\"",
        "\"[{index}] Dependencies added from {0}\"",
        "\"fetchArgumentsWithDependencies\"",
        "\"dependencies\"",
        "\"unused\"",
        "\"suppressGeneratorTimestamp:true\"",
        "\"verbose:true\"",
        "\"suppressGeneratorVersionInfoComment:true\"",
        "\"defaultComponentModel:spring\"",
        "\"defaultInjectionStrategy:constructor\"",
        "\"unmappedTargetPolicy:INFO\"",
        "\"-Amapstruct.suppressGeneratorTimestamp=false\"",
        "\"-Amapstruct.verbose=false\"",
        "\"-Amapstruct.suppressGeneratorVersionInfoComment=false\"",
        "\"-Amapstruct.defaultComponentModel=default\"",
        "\"-Amapstruct.defaultInjectionStrategy=field\"",
        "\"-Amapstruct.unmappedTargetPolicy=WARN\"",
        "\"build-with-configuration.gradle\"",
        "\"build-with-java-compile.gradle\"",
        "\"build-with-java-test-compile.gradle\"",
        "\"Compiler args -> []\"",
        "\"unused\"",
        "\"build-base.gradle\"",
        "\"build-with-lombok.gradle\"",
        "\"build-with-lombok-plugin.gradle\"",
        "\"build-with-spring.gradle\"",
        "\"build-with-lombok-and-spring.gradle\"",
        "\"No blacklist for 'build-with-lombok-and-spring' variant\"",
        "\"build-with-lombok-plugin-and-spring.gradle\"",
        "\"No blacklist for 'build-with-lombok-plugin-and-spring' variant\"",
        "\"build.gradle\"",
        "\"/\"",
        "\"Can't copy %s to %s\""
    ],
    "variables": [
        "tempDirectory",
        "project",
        "pluginDependency",
        "args"
    ],
    "comments": [
        "MethodSource for pluginConfigured",
        "MethodSource for dependenciesAdded"
    ],
    "docstrings": [
        "* Tests for {@link MapstructPlugin} with Gradle execution"
    ],
    "functions": [
        "beforeEach",
        "pluginAttached",
        "pluginConfigured",
        "dependenciesAdded",
        "fetchArgumentsWithConfiguration",
        "fetchArgumentsWithDependencies",
        "toList",
        "executeGradle",
        "addBuildFile"
    ],
    "classes": [
        "MapstructPluginGradleTest"
    ]
}