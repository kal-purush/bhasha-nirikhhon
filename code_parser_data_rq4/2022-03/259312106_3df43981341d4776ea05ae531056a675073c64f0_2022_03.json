{
    "identifiers": [
        "os",
        "contextlib",
        "closing",
        "typing",
        "Optional",
        "dotenv",
        "load_dotenv",
        "mysql",
        "connector",
        "connect",
        "pandas",
        "io",
        "sql",
        "psql",
        "login",
        "password",
        "schema",
        "Optional",
        "port",
        "Optional",
        "host",
        "Optional",
        "login",
        "password",
        "schema",
        "port",
        "host",
        "args",
        "kwargs",
        "__session_variables",
        "kwargs",
        "setattr",
        "__session_variables",
        "__default_session_variables",
        "setattr",
        "__session_variables",
        "kwargs",
        "__session_variables",
        "load_dotenv",
        "DB",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "connect",
        "user",
        "db",
        "login",
        "password",
        "db",
        "password",
        "host",
        "db",
        "host",
        "port",
        "db",
        "port",
        "database",
        "db",
        "schema",
        "getattr",
        "__session_variables",
        "session_variables",
        "closing",
        "conn",
        "cursor",
        "cur",
        "k",
        "v",
        "session_variables",
        "items",
        "k",
        "v",
        "cur",
        "execute",
        "set_session",
        "conn",
        "sql",
        "parameters",
        "kwargs",
        "closing",
        "get_conn",
        "conn",
        "psql",
        "read_sql",
        "sql",
        "con",
        "conn",
        "parameters",
        "kwargs",
        "sql",
        "parameters",
        "closing",
        "get_conn",
        "conn",
        "closing",
        "conn",
        "cursor",
        "cur",
        "parameters",
        "cur",
        "execute",
        "sql",
        "parameters",
        "cur",
        "execute",
        "sql",
        "cur",
        "fetchall"
    ],
    "literals": [
        "'127.0.0.1'",
        "'session_variables'",
        "'MYSQL_LOGIN'",
        "'MYSQL_PASSWORD'",
        "'MYSQL_SCHEMA'",
        "'MYSQL_PORT'",
        "'MYSQL_HOST'",
        "'127.0.0.1'",
        "f'SET SESSION {k}={v}'"
    ],
    "variables": [
        "login",
        "password",
        "schema",
        "port",
        "host",
        "__session_variables",
        "__default_session_variables",
        "db",
        "conn",
        "session_variables",
        "set_session"
    ],
    "comments": [
        "Apply session variables if needed"
    ],
    "docstrings": [
        "\"\"\"\n        create a database connection from scratch every call to get_conn()\n        since MariaDB fails with error MySQLdb._exceptions.OperationalError: (2006, '')\n        on large queries\n        \"\"\"",
        "\"\"\"\n        Executes the sql and returns a pandas dataframe\n\n        :param sql: the sql statement to be executed (str) or a list of\n            sql statements to execute\n        :type sql: str or list\n        :param parameters: The parameters to render the SQL query with.\n        :type parameters: dict or iterable\n        :param kwargs: (optional) passed into pandas.io.sql.read_sql method\n        :type kwargs: dict\n        \"\"\"",
        "\"\"\"\n        Executes the sql and returns a set of records.\n\n        :param sql: the sql statement to be executed (str) or a list of\n            sql statements to execute\n        :type sql: str or list\n        :param parameters: The parameters to render the SQL query with.\n        :type parameters: dict or iterable\n        \"\"\""
    ],
    "functions": [
        "get_conn",
        "get_pandas_df",
        "get_records"
    ],
    "classes": [
        "DB",
        "MySqlExtendedHook"
    ]
}