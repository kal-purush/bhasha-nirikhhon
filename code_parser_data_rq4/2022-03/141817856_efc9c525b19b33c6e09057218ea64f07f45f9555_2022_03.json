{
    "identifiers": [
        "json",
        "re",
        "milc",
        "cli",
        "qmk",
        "keyboard",
        "qmk",
        "path",
        "qmk",
        "info",
        "info_json",
        "qmk",
        "json_encoders",
        "KeymapJSONEncoder",
        "qmk",
        "commands",
        "parse_configurator_json",
        "dump_lines",
        "qmk",
        "keymap",
        "generate_json",
        "list_keymaps",
        "locate_keymap",
        "parse_keymap_c",
        "keyboard",
        "list_keymaps",
        "keyboard",
        "locate_keymap",
        "keyboard",
        "keymap_path",
        "suffix",
        "parse_configurator_json",
        "keymap_path",
        "parse_keymap_c",
        "keymap_path",
        "keymap_layout",
        "via_macros",
        "f",
        "f",
        "via_macros",
        "len",
        "via_macros",
        "re",
        "compile",
        "via_macro",
        "via_macros",
        "split_regex",
        "split",
        "via_macro",
        "f",
        "f",
        "macro",
        "m",
        "macro",
        "m",
        "m",
        "m",
        "split",
        "s",
        "s",
        "strip",
        "keycodes",
        "s",
        "s",
        "replace",
        "keycodes",
        "macro_data",
        "append",
        "keycodes",
        "macro_data",
        "append",
        "m",
        "macros",
        "append",
        "macro_data",
        "macros",
        "keymap_data",
        "re",
        "compile",
        "i",
        "len",
        "keymap_data",
        "j",
        "len",
        "keymap_data",
        "i",
        "keymap_data",
        "i",
        "j",
        "macro_no",
        "match",
        "kc",
        "m",
        "keymap_data",
        "i",
        "m",
        "group",
        "keymap_data",
        "via_backup",
        "keyboard_data",
        "keymap_layout",
        "keyboard_data",
        "get",
        "keymap_layout",
        "layout_data",
        "cli",
        "log",
        "error",
        "keymap_layout",
        "cli",
        "args",
        "keyboard",
        "exit",
        "layout_data",
        "index",
        "data",
        "layout_data",
        "sorting_hat",
        "append",
        "index",
        "data",
        "sorting_hat",
        "sort",
        "key",
        "k",
        "k",
        "k",
        "row_num",
        "keyboard_data",
        "col_num",
        "keyboard_data",
        "pos",
        "len",
        "sorting_hat",
        "sorting_hat",
        "pos",
        "row_num",
        "sorting_hat",
        "pos",
        "col_num",
        "sorting_hat",
        "insert",
        "pos",
        "row_num",
        "col_num",
        "sorting_hat",
        "append",
        "row_num",
        "col_num",
        "pos",
        "layer",
        "via_backup",
        "key",
        "layer",
        "sorting_hat",
        "pos",
        "layer_data",
        "append",
        "sorting_hat",
        "pos",
        "key",
        "pos",
        "layer_data",
        "sort",
        "kc",
        "kc",
        "layer_data",
        "keymap_data",
        "append",
        "layer_data",
        "keymap_data",
        "cli",
        "argument",
        "arg_only",
        "qmk",
        "path",
        "normpath",
        "help",
        "cli",
        "argument",
        "arg_only",
        "action",
        "help",
        "cli",
        "argument",
        "qmk",
        "path",
        "FileType",
        "arg_only",
        "help",
        "cli",
        "argument",
        "qmk",
        "keyboard",
        "keyboard_folder",
        "completer",
        "qmk",
        "keyboard",
        "keyboard_completer",
        "arg_only",
        "required",
        "help",
        "cli",
        "argument",
        "arg_only",
        "help",
        "cli",
        "argument",
        "arg_only",
        "help",
        "cli",
        "subcommand",
        "cli",
        "cli",
        "args",
        "layout",
        "cli",
        "args",
        "layout",
        "_find_via_layout_macro",
        "cli",
        "args",
        "keyboard",
        "keymap_layout",
        "cli",
        "log",
        "error",
        "cli",
        "args",
        "keyboard",
        "exit",
        "cli",
        "args",
        "filename",
        "open",
        "fd",
        "json",
        "load",
        "fd",
        "info_json",
        "cli",
        "args",
        "keyboard",
        "_via_to_keymap",
        "via_backup",
        "keyboard_data",
        "keymap_layout",
        "via_backup",
        "get",
        "_convert_macros",
        "via_backup",
        "_fix_macro_keys",
        "keymap_data",
        "generate_json",
        "cli",
        "args",
        "keymap",
        "cli",
        "args",
        "keyboard",
        "keymap_layout",
        "keymap_data",
        "macro_data",
        "json",
        "dumps",
        "keymap_json",
        "cls",
        "KeymapJSONEncoder",
        "dump_lines",
        "cli",
        "args",
        "output",
        "keymap_lines",
        "cli",
        "args",
        "quiet"
    ],
    "literals": [
        "'via'",
        "'via'",
        "'.json'",
        "'layout'",
        "'layers'",
        "'layout'",
        "r'(}\\,)|(\\,{)'",
        "'},'",
        "',{'",
        "'{'",
        "'}'",
        "','",
        "' {}'",
        "'KC_'",
        "''",
        "\"action\"",
        "\"tap\"",
        "\"keycodes\"",
        "r'MACRO0?([0-9]{1,2})'",
        "f'MACRO_{m.group(1)}'",
        "'layouts'",
        "f'LAYOUT macro {keymap_layout} is not a valid one for keyboard {cli.args.keyboard}!'",
        "'layout'",
        "'matrix'",
        "'matrix_size'",
        "'rows'",
        "'matrix_size'",
        "'cols'",
        "'layers'",
        "'-o'",
        "'--output'",
        "'File to write to'",
        "'-q'",
        "'--quiet'",
        "'store_true'",
        "\"Quiet mode, only output error messages\"",
        "'filename'",
        "'r'",
        "'VIA Backup JSON file'",
        "'-kb'",
        "'--keyboard'",
        "'The keyboard\\'s name'",
        "'-km'",
        "'--keymap'",
        "'via2json'",
        "'The keymap\\'s name'",
        "'-l'",
        "'--layout'",
        "'The keymap\\'s layout'",
        "'Convert a VIA backup json to keymap.json format.'",
        "f\"Couldn't find LAYOUT macro for keyboard {cli.args.keyboard}. Please specify it with the '-l' argument.\"",
        "'r'",
        "'macros'",
        "'macros'"
    ],
    "variables": [
        "keymap_layout",
        "keymap_path",
        "keymap_layout",
        "keymap_layout",
        "via_macros",
        "split_regex",
        "macros",
        "macro",
        "macro",
        "macro_data",
        "keycodes",
        "keycodes",
        "keycodes",
        "macro_no",
        "kc",
        "m",
        "j",
        "layout_data",
        "layout_data",
        "sorting_hat",
        "pos",
        "keymap_data",
        "pos",
        "layer_data",
        "layer_data",
        "keymap_layout",
        "via_backup",
        "keyboard_data",
        "keymap_data",
        "macro_data",
        "macro_data",
        "keymap_data",
        "keymap_json",
        "keymap_lines"
    ],
    "comments": [
        "Split VIA macro to its elements",
        "Remove junk elements (None, '},' and ',{')",
        "Found keycode(s)",
        "Remove whitespaces and curly braces from around keycodes",
        "Remove the KC prefix",
        "Found text",
        "Check if passed LAYOUT is correct",
        "Find appropriate layout macro",
        "Load the VIA backup json",
        "Generate keyboard metadata",
        "Get keycode array",
        "Convert macros",
        "Replace VIA macro keys with JSON keymap ones",
        "Generate the keymap.json"
    ],
    "docstrings": [
        "\"\"\"Generate a keymap.c from a configurator export.\n\"\"\"",
        "\"\"\"Convert a VIA backup json to keymap.json format.\n\n    This command uses the `qmk.keymap` module to generate a keymap.json from a VIA backup json. The generated keymap is written to stdout, or to a file if -o is provided.\n    \"\"\""
    ],
    "functions": [
        "_find_via_layout_macro",
        "_convert_macros",
        "_fix_macro_keys",
        "_via_to_keymap",
        "via2json"
    ],
    "classes": []
}