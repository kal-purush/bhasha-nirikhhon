{
    "identifiers": [
        "Expression",
        "BoxedExpression",
        "IComputeEngine",
        "EvaluateOptions",
        "NOptions",
        "SimplifyOptions",
        "Metadata",
        "Substitution",
        "PatternMatchOption",
        "serializeJsonSymbol",
        "BoxedSymbol",
        "BoxedSymbol",
        "ce",
        "name",
        "metadata",
        "name",
        "ce",
        "segments",
        "metadata",
        "name",
        "Infinity",
        "name",
        "Infinity",
        "segment",
        "segments",
        "segment",
        "segment",
        "segment",
        "segment",
        "segment",
        "segment",
        "serializeJsonSymbol",
        "rhs",
        "options",
        "rhs",
        "rhs",
        "BoxedWildcard",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "s",
        "s",
        "s",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "s",
        "s",
        "s",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "s",
        "s",
        "s",
        "rhs",
        "rhs",
        "rhs",
        "rhs",
        "s",
        "s",
        "s",
        "rhs",
        "rhs",
        "_options",
        "_options",
        "_options"
    ],
    "literals": [
        "'../../math-json/math-json-format'",
        "'../public'",
        "'./serialize'",
        "'./boxed-symbol'",
        "string",
        "string",
        "string",
        "':'",
        "'___'",
        "'__'",
        "'>0'",
        "'positive'",
        "'<=0'",
        "'nonPositive'",
        "'<0'",
        "'negative'",
        "'>=0'",
        "'nonNegative'",
        "'=0'",
        "'zero'",
        "'!=0'",
        "'notZero'",
        "'=1'",
        "'one'",
        "'=-1'",
        "'negativeOne'",
        "'Z'",
        "'integer'",
        "'Q'",
        "'rational'",
        "'R'",
        "'real'",
        "'C'",
        "'complex'",
        "'number'",
        "'integer'",
        "'rational'",
        "'algebraic'",
        "'real'",
        "'extendedReal'",
        "'complex'",
        "'extendedComplex'",
        "'imaginary'",
        "'positive'",
        "'nonPositive'",
        "'negative'",
        "'nonNegative'",
        "'zero'",
        "'notZero'",
        "'one'",
        "'negativeOne'",
        "'infinity'",
        "'NaN'",
        "'finite'",
        "'odd'",
        "'even'",
        "'prime'",
        "'composite'",
        "string",
        "'Wildcard'",
        "'Anything'",
        "'positive'",
        "'negative'",
        "'zero'",
        "'zero'",
        "'notZero'",
        "'notZero'",
        "'zero'",
        "'one'",
        "'negativeOne'",
        "'odd'",
        "'even'",
        "'prime'",
        "'composite'",
        "'infinity'",
        "'NaN'",
        "'positive'",
        "'nonPositive'",
        "'negative'",
        "'nonNegative'",
        "'number'",
        "'integer'",
        "'rational'",
        "'algebraic'",
        "'real'",
        "'extendedReal'",
        "'complex'",
        "'imaginary'"
    ],
    "variables": [
        "segments",
        "s",
        "s",
        "s",
        "s"
    ],
    "comments": [
        "an integer",
        "an integer",
        "@todo",
        "@todo",
        "Idempotency",
        "@todo: could check additional conditions",
        "Idempotency",
        "@todo Check assumptions, use range",
        "Idempotency",
        "@todo: could check additional conditions",
        "let x = assumeSymbolValue(this._engine, this._symbol, 'Less');",
        "Idempotency",
        "@todo: could check additional conditions",
        "x > 0"
    ],
    "docstrings": [
        "* BoxedWildcard\n *\n * A boxed is a symbol that is used as a wildcard. The name of the\n * symbol begins with a `_`."
    ],
    "functions": [
        "head",
        "domain",
        "json",
        "sgn",
        "match",
        "isSame",
        "isEqual",
        "isLess",
        "isLessEqual",
        "isGreater",
        "isGreaterEqual",
        "isZero",
        "isNotZero",
        "isOne",
        "isNegativeOne",
        "isOdd",
        "isEven",
        "isPrime",
        "isComposite",
        "isInfinity",
        "isNaN",
        "isPositive",
        "isNonPositive",
        "isNegative",
        "isNonNegative",
        "isNumber",
        "isInteger",
        "isRational",
        "isAlgebraic",
        "isReal",
        "isExtendedReal",
        "isComplex",
        "isImaginary",
        "canonical",
        "simplify",
        "evaluate",
        "N"
    ],
    "classes": [
        "BoxedWildcard"
    ]
}