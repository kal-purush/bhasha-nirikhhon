{
    "identifiers": [
        "time",
        "json",
        "os",
        "sys",
        "functools",
        "partial",
        "numpy",
        "np",
        "paddle",
        "paddlenlp",
        "ppnlp",
        "paddlenlp",
        "data",
        "Pad",
        "Tuple",
        "paddlenlp",
        "utils",
        "log",
        "logger",
        "paddlenlp",
        "trainer",
        "Trainer",
        "paddlenlp",
        "trainer",
        "trainer_utils",
        "PredictionOutput",
        "sys",
        "path",
        "insert",
        "os",
        "path",
        "abspath",
        "utils",
        "Dict",
        "Trainer",
        "args",
        "eval_examples",
        "post_process_function",
        "kwargs",
        "args",
        "kwargs",
        "eval_examples",
        "post_process_function",
        "eval_dataset",
        "eval_examples",
        "ignore_keys",
        "metric_key_prefix",
        "eval_dataset",
        "eval_dataset",
        "eval_dataset",
        "get_eval_dataloader",
        "eval_dataset",
        "eval_examples",
        "eval_examples",
        "eval_examples",
        "compute_metrics",
        "evaluation_loop",
        "eval_loop",
        "eval_dataloader",
        "description",
        "prediction_loss_only",
        "compute_metrics",
        "ignore_keys",
        "ignore_keys",
        "compute_metrics",
        "post_process_function",
        "compute_metrics",
        "post_process_function",
        "eval_examples",
        "eval_dataset",
        "output",
        "predictions",
        "compute_metrics",
        "eval_preds",
        "key",
        "metrics",
        "keys",
        "key",
        "startswith",
        "metric_key_prefix",
        "metric_key_prefix",
        "key",
        "metrics",
        "pop",
        "key",
        "log",
        "metrics",
        "callback_handler",
        "on_evaluate",
        "args",
        "state",
        "control",
        "metrics",
        "metrics",
        "predict_dataset",
        "predict_examples",
        "ignore_keys",
        "metric_key_prefix",
        "get_test_dataloader",
        "predict_dataset",
        "compute_metrics",
        "evaluation_loop",
        "eval_loop",
        "predict_dataloader",
        "description",
        "prediction_loss_only",
        "compute_metrics",
        "ignore_keys",
        "ignore_keys",
        "compute_metrics",
        "post_process_function",
        "compute_metrics",
        "output",
        "post_process_function",
        "predict_examples",
        "predict_dataset",
        "output",
        "predictions",
        "compute_metrics",
        "predictions",
        "key",
        "metrics",
        "keys",
        "key",
        "startswith",
        "metric_key_prefix",
        "metric_key_prefix",
        "key",
        "metrics",
        "pop",
        "key",
        "PredictionOutput",
        "predictions",
        "predictions",
        "predictions",
        "label_ids",
        "predictions",
        "label_ids",
        "metrics",
        "metrics",
        "tokenizer",
        "args",
        "samples",
        "fn",
        "Dict",
        "Pad",
        "axis",
        "pad_val",
        "tokenizer",
        "pad_token_id",
        "Pad",
        "axis",
        "pad_val",
        "tokenizer",
        "pad_token_type_id",
        "dtype",
        "dtype",
        "fn",
        "samples",
        "train_batchify_fn",
        "paddle",
        "nn",
        "Layer",
        "CrossEntropyLossForSQuAD",
        "y",
        "label",
        "y",
        "label",
        "paddle",
        "unsqueeze",
        "start_position",
        "axis",
        "paddle",
        "unsqueeze",
        "end_position",
        "axis",
        "paddle",
        "nn",
        "functional",
        "cross_entropy",
        "input",
        "start_logits",
        "label",
        "start_position",
        "paddle",
        "nn",
        "functional",
        "cross_entropy",
        "input",
        "end_logits",
        "label",
        "end_position",
        "start_loss",
        "end_loss",
        "loss",
        "examples",
        "tokenizer",
        "args",
        "examples",
        "examples",
        "tokenizer",
        "questions",
        "contexts",
        "stride",
        "args",
        "doc_stride",
        "max_seq_len",
        "args",
        "max_seq_length",
        "tokenized_examples",
        "pop",
        "tokenized_examples",
        "pop",
        "i",
        "offsets",
        "offset_mapping",
        "tokenized_examples",
        "i",
        "input_ids",
        "index",
        "tokenizer",
        "cls_token_id",
        "tokenized_examples",
        "i",
        "sample_mapping",
        "i",
        "examples",
        "sample_index",
        "len",
        "answers",
        "tokenized_examples",
        "append",
        "cls_index",
        "tokenized_examples",
        "append",
        "cls_index",
        "answers",
        "start_char",
        "len",
        "answers",
        "sequence_ids",
        "token_start_index",
        "token_start_index",
        "len",
        "input_ids",
        "sequence_ids",
        "token_end_index",
        "token_end_index",
        "token_end_index",
        "offsets",
        "token_start_index",
        "start_char",
        "offsets",
        "token_end_index",
        "end_char",
        "tokenized_examples",
        "append",
        "cls_index",
        "tokenized_examples",
        "append",
        "cls_index",
        "token_start_index",
        "len",
        "offsets",
        "offsets",
        "token_start_index",
        "start_char",
        "token_start_index",
        "tokenized_examples",
        "append",
        "token_start_index",
        "offsets",
        "token_end_index",
        "end_char",
        "token_end_index",
        "tokenized_examples",
        "append",
        "token_end_index",
        "tokenized_examples",
        "examples",
        "tokenizer",
        "args",
        "examples",
        "examples",
        "tokenizer",
        "questions",
        "contexts",
        "stride",
        "args",
        "doc_stride",
        "max_seq_len",
        "args",
        "max_seq_length",
        "return_attention_mask",
        "tokenized_examples",
        "pop",
        "i",
        "len",
        "tokenized_examples",
        "tokenized_examples",
        "i",
        "sample_mapping",
        "i",
        "tokenized_examples",
        "append",
        "examples",
        "sample_index",
        "tokenized_examples",
        "o",
        "sequence_ids",
        "k",
        "context_index",
        "k",
        "o",
        "tokenized_examples",
        "i",
        "tokenized_examples"
    ],
    "literals": [
        "\".\"",
        "\"eval\"",
        "\"Evaluation\"",
        "f\"{metric_key_prefix}_\"",
        "f\"{metric_key_prefix}_{key}\"",
        "\"test\"",
        "\"Prediction\"",
        "\"predict\"",
        "f\"{metric_key_prefix}_\"",
        "f\"{metric_key_prefix}_{key}\"",
        "\"input_ids\"",
        "\"token_type_ids\"",
        "\"start_positions\"",
        "\"int64\"",
        "\"end_positions\"",
        "\"int64\"",
        "'context'",
        "'question'",
        "\"overflow_to_sample\"",
        "\"offset_mapping\"",
        "\"start_positions\"",
        "\"end_positions\"",
        "\"input_ids\"",
        "'token_type_ids'",
        "'answers'",
        "\"answer_start\"",
        "\"start_positions\"",
        "\"end_positions\"",
        "\"answer_start\"",
        "\"text\"",
        "\"start_positions\"",
        "\"end_positions\"",
        "\"start_positions\"",
        "\"end_positions\"",
        "'context'",
        "'question'",
        "\"overflow_to_sample\"",
        "\"example_id\"",
        "\"input_ids\"",
        "'token_type_ids'",
        "\"example_id\"",
        "\"id\"",
        "\"offset_mapping\"",
        "\"offset_mapping\""
    ],
    "variables": [
        "eval_examples",
        "post_process_function",
        "eval_dataset",
        "eval_dataloader",
        "eval_examples",
        "compute_metrics",
        "compute_metrics",
        "eval_loop",
        "output",
        "compute_metrics",
        "eval_preds",
        "metrics",
        "metrics",
        "metrics",
        "control",
        "predict_dataloader",
        "compute_metrics",
        "compute_metrics",
        "eval_loop",
        "output",
        "compute_metrics",
        "predictions",
        "metrics",
        "metrics",
        "train_batchify_fn",
        "start_logits",
        "end_logits",
        "start_position",
        "end_position",
        "start_position",
        "end_position",
        "start_loss",
        "end_loss",
        "loss",
        "contexts",
        "questions",
        "tokenized_examples",
        "sample_mapping",
        "offset_mapping",
        "tokenized_examples",
        "tokenized_examples",
        "input_ids",
        "cls_index",
        "sequence_ids",
        "sample_index",
        "answers",
        "start_char",
        "end_char",
        "token_start_index",
        "token_end_index",
        "contexts",
        "questions",
        "tokenized_examples",
        "sample_mapping",
        "tokenized_examples",
        "sequence_ids",
        "context_index",
        "sample_index",
        "i"
    ],
    "comments": [
        "Copyright 2020-present the HuggingFace Inc. team.",
        "Copyright (c) 2022 PaddlePaddle Authors. All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Temporarily disable metric computation, we will do it in the loop here.",
        "No point gathering the predictions if there are no metrics, otherwise we defer to",
        "self.args.prediction_loss_only",
        "Prefix all keys with metric_key_prefix + '_'",
        "Temporarily disable metric computation, we will do it in the loop here.",
        "No point gathering the predictions if there are no metrics, otherwise we defer to",
        "self.args.prediction_loss_only",
        "Prefix all keys with metric_key_prefix + '_'",
        "Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results",
        "in one example possible giving several features when a context is long, each of those features having a",
        "context that overlaps a bit the context of the previous feature.",
        "NOTE: Almost the same functionality as HuggingFace's prepare_train_features function. The main difference is",
        "that HugggingFace uses ArrowTable as basic data structure, while we use list of dictionary instead.",
        "Since one example might give us several features if it has a long context, we need a map from a feature to",
        "its corresponding example. This key gives us just that.",
        "The offset mappings will give us a map from token to character position in the original context. This will",
        "help us compute the start_positions and end_positions.",
        "Let's label those examples!",
        "We will label impossible answers with the index of the CLS token.",
        "Grab the sequence corresponding to that example (to know what is the context and what is the question).",
        "One example can give several spans, this is the index of the example containing this span of text.",
        "If no answers are given, set the cls_index as answer.",
        "Start/end character index of the answer in the text.",
        "Start token index of the current span in the text.",
        "End token index of the current span in the text.",
        "Detect if the answer is out of the span (in which case this feature is labeled with the CLS index).",
        "Otherwise move the token_start_index and token_end_index to the two ends of the answer.",
        "Note: we could go after the last offset if the answer is the last word (edge case).",
        "Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results",
        "in one example possible giving several features when a context is long, each of those features having a",
        "context that overlaps a bit the context of the previous feature.",
        "NOTE: Almost the same functionality as HuggingFace's prepare_train_features function. The main difference is",
        "that HugggingFace uses ArrowTable as basic data structure, while we use list of dictionary instead.",
        "Since one example might give us several features if it has a long context, we need a map from a feature to",
        "its corresponding example. This key gives us just that.",
        "For evaluation, we will need to convert our predictions to substrings of the context, so we keep the",
        "corresponding example_id and we will store the offset mappings.",
        "Grab the sequence corresponding to that example (to know what is the context and what is the question).",
        "One example can give several spans, this is the index of the example containing this span of text.",
        "Set to None the offset_mapping that are not part of the context so it's easy to determine if a token",
        "position is part of the context or not."
    ],
    "docstrings": [],
    "functions": [
        "evaluate",
        "predict",
        "qa_collator",
        "forward",
        "prepare_train_features",
        "prepare_validation_features"
    ],
    "classes": [
        "QuestionAnsweringTrainer",
        "CrossEntropyLossForSQuAD"
    ]
}