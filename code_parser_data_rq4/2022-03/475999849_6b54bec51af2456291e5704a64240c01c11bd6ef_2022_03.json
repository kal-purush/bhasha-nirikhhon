{
    "identifiers": [
        "annotations",
        "typing",
        "Callable",
        "Optional",
        "Awaitable",
        "Any",
        "Union",
        "types",
        "ModuleType",
        "inspect",
        "signature",
        "Parameter",
        "_empty",
        "shlex",
        "split",
        "itertools",
        "zip_longest",
        "importlib",
        "import_module",
        "reload",
        "voltage",
        "command",
        "command",
        "command",
        "command",
        "Command",
        "expected",
        "actual",
        "command",
        "expected",
        "actual",
        "command",
        "name",
        "expected",
        "actual",
        "given",
        "given",
        "given",
        "given",
        "given",
        "given",
        "message",
        "voltage",
        "Message",
        "command",
        "Command",
        "client",
        "voltage",
        "Client",
        "message",
        "message",
        "content",
        "message",
        "author",
        "message",
        "channel",
        "message",
        "server",
        "message",
        "channel",
        "send",
        "message",
        "reply",
        "message",
        "command",
        "client",
        "func",
        "Callable",
        "Awaitable",
        "Any",
        "name",
        "Optional",
        "description",
        "Optional",
        "aliases",
        "Optional",
        "cog",
        "Optional",
        "Cog",
        "func",
        "name",
        "func",
        "description",
        "func",
        "__doc__",
        "aliases",
        "name",
        "signature",
        "func",
        "cog",
        "func",
        "Callable",
        "CommandContext",
        "Awaitable",
        "Any",
        "func",
        "arg",
        "Parameter",
        "given",
        "context",
        "CommandContext",
        "Any",
        "arg",
        "annotation",
        "given",
        "isinstance",
        "annotation",
        "given",
        "annotation",
        "_empty",
        "annotation",
        "Any",
        "issubclass",
        "annotation",
        "given",
        "issubclass",
        "annotation",
        "given",
        "issubclass",
        "annotation",
        "given",
        "issubclass",
        "annotation",
        "voltage",
        "Member",
        "context",
        "server",
        "get_member",
        "given",
        "member",
        "MemberNotFound",
        "given",
        "member",
        "issubclass",
        "annotation",
        "voltage",
        "User",
        "context",
        "me",
        "get_user",
        "given",
        "user",
        "UserNotFound",
        "given",
        "user",
        "context",
        "CommandContext",
        "prefix",
        "len",
        "signature",
        "parameters",
        "split",
        "context",
        "content",
        "len",
        "prefix",
        "name",
        "i",
        "param",
        "arg",
        "zip_longest",
        "items",
        "given",
        "param",
        "param",
        "data",
        "kind",
        "data",
        "VAR_POSITIONAL",
        "data",
        "kind",
        "data",
        "POSITIONAL_OR_KEYWORD",
        "arg",
        "data",
        "_empty",
        "NotEnoughArgs",
        "len",
        "len",
        "args",
        "data",
        "args",
        "append",
        "convert_arg",
        "data",
        "arg",
        "context",
        "data",
        "kind",
        "data",
        "KEYWORD_ONLY",
        "i",
        "len",
        "arg",
        "data",
        "_empty",
        "NotEnoughArgs",
        "len",
        "len",
        "given",
        "convert_arg",
        "data",
        "data",
        "context",
        "convert_arg",
        "data",
        "join",
        "given",
        "i",
        "context",
        "arg",
        "data",
        "_empty",
        "NotEnoughArgs",
        "len",
        "len",
        "given",
        "data",
        "convert_arg",
        "data",
        "arg",
        "context",
        "error_handler",
        "func",
        "context",
        "args",
        "kwargs",
        "e",
        "error_handler",
        "e",
        "context",
        "func",
        "context",
        "args",
        "kwargs",
        "error_handler",
        "func",
        "context",
        "e",
        "error_handler",
        "e",
        "context",
        "func",
        "context",
        "name",
        "description",
        "Optional",
        "name",
        "description",
        "Command",
        "command",
        "Command",
        "commands",
        "append",
        "command",
        "name",
        "Optional",
        "description",
        "Optional",
        "aliases",
        "Optional",
        "func",
        "Callable",
        "Awaitable",
        "Any",
        "Command",
        "func",
        "name",
        "description",
        "aliases",
        "add_command",
        "command",
        "command",
        "decorator",
        "voltage",
        "Client",
        "prefix",
        "Union",
        "Callable",
        "voltage",
        "Message",
        "CommandsClient",
        "Awaitable",
        "Any",
        "handle_commands",
        "prefix",
        "Cog",
        "ModuleType",
        "Command",
        "Command",
        "help",
        "ctx",
        "CommandContext",
        "target",
        "Optional",
        "get_prefix",
        "ctx",
        "message",
        "prefix",
        "target",
        "voltage",
        "SendableEmbed",
        "title",
        "description",
        "prefix",
        "colour",
        "icon_url",
        "ctx",
        "me",
        "user",
        "display_avatar",
        "url",
        "media",
        "command",
        "commands",
        "values",
        "command",
        "cog",
        "text",
        "command",
        "name",
        "i",
        "cogs",
        "values",
        "text",
        "i",
        "name",
        "i",
        "description",
        "j",
        "i",
        "commands",
        "text",
        "j",
        "name",
        "embed",
        "description",
        "text",
        "ctx",
        "reply",
        "ctx",
        "author",
        "mention",
        "embed",
        "embed",
        "target",
        "commands",
        "commands",
        "target",
        "voltage",
        "SendableEmbed",
        "title",
        "command",
        "name",
        "colour",
        "icon_url",
        "ctx",
        "me",
        "user",
        "display_avatar",
        "url",
        "media",
        "name",
        "data",
        "command",
        "signature",
        "parameters",
        "items",
        "data",
        "data",
        "_empty",
        "data",
        "usage",
        "name",
        "data",
        "_empty",
        "name",
        "text",
        "prefix",
        "command",
        "name",
        "usage",
        "command",
        "aliases",
        "text",
        "prefix",
        "join",
        "command",
        "aliases",
        "command",
        "description",
        "text",
        "command",
        "description",
        "text",
        "ctx",
        "reply",
        "ctx",
        "author",
        "mention",
        "embed",
        "embed",
        "ctx",
        "reply",
        "target",
        "message",
        "voltage",
        "Message",
        "prefix",
        "Union",
        "Callable",
        "voltage",
        "Message",
        "CommandsClient",
        "Awaitable",
        "Any",
        "isinstance",
        "prefix",
        "prefix",
        "isinstance",
        "prefix",
        "p",
        "prefix",
        "message",
        "content",
        "startswith",
        "p",
        "p",
        "isinstance",
        "prefix",
        "Callable",
        "get_prefix",
        "message",
        "prefix",
        "message",
        "prefix",
        "command",
        "Command",
        "alias",
        "command",
        "aliases",
        "commands",
        "command",
        "cog",
        "Cog",
        "cogs",
        "cog",
        "name",
        "cog",
        "command",
        "cog",
        "commands",
        "add_command",
        "command",
        "path",
        "args",
        "kwargs",
        "import_module",
        "path",
        "extensions",
        "hasattr",
        "AttributeError",
        "format",
        "path",
        "add_cog",
        "setup",
        "args",
        "kwargs",
        "path",
        "extensions",
        "get",
        "path",
        "KeyError",
        "format",
        "path",
        "reload",
        "i",
        "commands",
        "commands",
        "i",
        "cog",
        "commands",
        "pop",
        "i",
        "hasattr",
        "AttributeError",
        "format",
        "path",
        "add_cog",
        "setup",
        "path",
        "extensions",
        "get",
        "path",
        "KeyError",
        "format",
        "path",
        "i",
        "commands",
        "commands",
        "i",
        "cog",
        "commands",
        "pop",
        "i",
        "cogs",
        "pop",
        "name",
        "extensions",
        "pop",
        "path",
        "name",
        "Optional",
        "description",
        "Optional",
        "aliases",
        "Optional",
        "func",
        "Callable",
        "Awaitable",
        "Any",
        "Command",
        "func",
        "name",
        "description",
        "aliases",
        "add_command",
        "command",
        "command",
        "decorator",
        "message",
        "voltage",
        "Message",
        "get_prefix",
        "message",
        "prefix",
        "message",
        "content",
        "startswith",
        "prefix",
        "message",
        "content",
        "len",
        "prefix",
        "content",
        "split",
        "command",
        "commands",
        "error_handlers",
        "commands",
        "command",
        "invoke",
        "CommandContext",
        "message",
        "commands",
        "command",
        "prefix",
        "e",
        "error_handlers",
        "e",
        "CommandContext",
        "message",
        "commands",
        "command",
        "commands",
        "command",
        "invoke",
        "CommandContext",
        "message",
        "commands",
        "command",
        "prefix",
        "CommandNotFound",
        "command"
    ],
    "literals": [
        "f\"Command {self.command} not found!\"",
        "f\"{self.command.name} expected {self.expected} args, got {self.actual}\"",
        "f\"Member {self.given} not found!\"",
        "f\"User {self.given} not found!\"",
        "'message'",
        "'content'",
        "'author'",
        "'channel'",
        "'server'",
        "'send'",
        "'reply'",
        "'delete'",
        "'command'",
        "'me'",
        "'func'",
        "'name'",
        "'description'",
        "'aliases'",
        "'error_handler'",
        "'signature'",
        "'cog'",
        "\" \"",
        "'name'",
        "'description'",
        "'commands'",
        "\"message\"",
        "\"help\"",
        "\"help\"",
        "\"Displays help for a command.\"",
        "\"h\"",
        "\"help\"",
        "\"Help\"",
        "f\"Use `{prefix}help <command>` to get help for any command!\"",
        "\"#516BF2\"",
        "\"https://i.imgur.com/puCxbsE.jpg\"",
        "\"\\n### **No Category**\\n\"",
        "f\"> {command.name}\\n\"",
        "f\"\\n### **{i.name}**\\n{i.description}\\n\"",
        "f\"\\n> {j.name}\"",
        "f\"Help for {command.name}\"",
        "\"#516BF2\"",
        "\"https://i.imgur.com/puCxbsE.jpg\"",
        "f\" = {data.default}\"",
        "\"\"",
        "f\" [{name}{default}]\"",
        "f\" <{name}>\"",
        "f\"\\n### **Usage**\\n> `{prefix}{command.name}{usage}`\"",
        "f\"\\n\\n### **Aliases**\\n> {prefix}{', '.join(command.aliases)}\"",
        "', '",
        "f\"Command {target} not found.\"",
        "\"setup\"",
        "\"Extension {} does not have a setup function.\"",
        "\"Extension {} does not exist.\"",
        "\"setup\"",
        "\"Extension {} does not have a setup function.\"",
        "\"Extension {} does not exist.\"",
        "\" \"",
        "\"command\"",
        "\"command\""
    ],
    "variables": [
        "command",
        "command",
        "expected",
        "actual",
        "given",
        "given",
        "__slots__",
        "message",
        "content",
        "author",
        "channel",
        "server",
        "send",
        "reply",
        "command",
        "me",
        "__slots__",
        "func",
        "name",
        "description",
        "aliases",
        "error_handler",
        "signature",
        "cog",
        "error_handler",
        "annotation",
        "member",
        "user",
        "given",
        "args",
        "kwargs",
        "name",
        "data",
        "arg",
        "kwargs",
        "name",
        "kwargs",
        "name",
        "arg",
        "kwargs",
        "name",
        "__slots__",
        "name",
        "description",
        "commands",
        "command",
        "listeners",
        "prefix",
        "cogs",
        "extensions",
        "commands",
        "prefix",
        "embed",
        "text",
        "command",
        "embed",
        "text",
        "usage",
        "embed",
        "description",
        "alias",
        "path",
        "command",
        "prefix",
        "content",
        "command"
    ],
    "comments": [
        "type: ignore",
        "type: ignore"
    ],
    "docstrings": [
        "\"\"\"\n    An exception that is raised when a command is not found.\n\n    Attributes\n    ----------\n    command: :class:`str`\n        The name of the command that was not found.\n    \"\"\"",
        "\"\"\"\n    An exception that is raised when not enough args are supplied.\n\n    Attributes\n    ----------\n    command: :class:`Command`\n        The command that was being called.\n    expected: :class:`int`\n        The number of args that were expected.\n    actual: :class:`int`\n        The number of args that were actually supplied.\n    \"\"\"",
        "\"\"\"\n    An exception that is raised when a member is not found.\n\n    Attributes\n    ----------\n    given: :class:`str`\n        The name of the member that was not found.\n    \"\"\"",
        "\"\"\"\n    An exception that is raised when a user is not found.\n\n    Attributes\n    ----------\n    given: :class:`str`\n        The name of the user that was not found.\n    \"\"\"",
        "\"\"\"\n    A context for a command.\n\n    Attributes\n    ----------\n    message: :class:`voltage.Message`\n        The message that invoked the command.\n    content: :class:`str`\n        The content of the message that invoked the command.\n    author: Union[:class:`voltage.User`, :class:`voltage.Member`]\n        The author of the message that invoked the command.\n    channel: :class:`voltage.Channel`\n        The channel that the command was invoked in.\n    server: :class:`voltage.Server`\n        The server that the command was invoked in.\n    command: :class:`Command`\n        The command that was invoked.\n    \"\"\"",
        "\"\"\"\n    A class representing a command.\n\n    Attributes\n    ----------\n    name: :class:`str`\n        The name of the command.\n    description: Optional[:class:`str`]\n        The description of the command.\n    aliases: Optional[List[:class:`str`]]\n        The aliases of the command.\n    \"\"\"",
        "\"\"\"\n        Sets the error handler for this command.\n\n        Parameters\n        ----------\n        func: :class:`Callable[[Exception, CommandContext], Awaitable[Any]]`\n            The function to call when an error occurs.\n        \"\"\"",
        "\"\"\"\n    A class representing a cog.\n\n    Attributes\n    ----------\n    name: :class:`str`\n        The name of the cog.\n    description: Optional[:class:`str`]\n        The description of the cog.\n    commands: List[:class:`Command`]\n        The commands in the cog.\n    \"\"\"",
        "\"\"\"\n        Adds a command to the cog.\n        \n        idk why you're doing thit but consider using the decorator for this /shrug.\n\n        Parameters\n        ----------\n        command: :class:`Command`\n            The command to add.\n        \"\"\"",
        "\"\"\"\n        A decorator for adding commands to the cog.\n\n        Parameters\n        ----------\n        name: Optional[:class:`str`]\n            The name of the command.\n        description: Optional[:class:`str`]\n            The description of the command.\n        aliases: Optional[List[:class:`str`]]\n            The aliases of the command.\n        \"\"\"",
        "\"\"\"\n    A class representing a client that uses commands.\n\n    Attributes\n    ----------\n    cogs: List[:class:`Cog`]\n        The cogs that are loaded.\n    \"\"\"",
        "\"\"\"\n        Basic help command.\n        \"\"\"",
        "\"\"\"\n        Adds a command to the client.\n\n        Parameters\n        ----------\n        command: :class:`Command`\n            The command to add.\n        \"\"\"",
        "\"\"\"\n        Adds a cog to the client.\n\n        Parameters\n        ----------\n        cog: :class:`Cog`\n            The cog to add.\n        \"\"\"",
        "\"\"\"\n        Adds an extension to the client.\n\n        Parameters\n        ----------\n        path: :class:`str`\n            The path to the extension as a python dotpath.\n        \"\"\"",
        "\"\"\"\n        Reloads an extension.\n\n        Parameters\n        ----------\n        path: :class:`str`\n            The path to the extension as a python dotpath.\n        \"\"\"",
        "\"\"\"\n        removes an extension.\n\n        Parameters\n        ----------\n        path: :class:`str`\n            The path to the extension as a python dotpath.\n        \"\"\"",
        "\"\"\"\n        A decorator for adding commands to the client.\n\n        Parameters\n        ----------\n        name: Optional[:class:`str`]\n            The name of the command.\n        description: Optional[:class:`str`]\n            The description of the command.\n        aliases: Optional[List[:class:`str`]]\n            The aliases of the command.\n        \"\"\""
    ],
    "functions": [
        "__str__",
        "__str__",
        "__str__",
        "__str__",
        "error",
        "convert_arg",
        "invoke",
        "add_command",
        "command",
        "decorator",
        "help",
        "get_prefix",
        "add_command",
        "add_cog",
        "add_extension",
        "reload_extension",
        "remove_extension",
        "command",
        "decorator",
        "handle_commands"
    ],
    "classes": [
        "CommandNotFound",
        "NotEnoughArgs",
        "MemberNotFound",
        "UserNotFound",
        "CommandContext",
        "Command",
        "Cog",
        "CommandsClient"
    ]
}