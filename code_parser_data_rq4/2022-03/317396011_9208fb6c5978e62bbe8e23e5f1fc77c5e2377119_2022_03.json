{
    "identifiers": [
        "robot_sim",
        "end_effectors",
        "suction",
        "mvfln40",
        "mvfln40",
        "suction",
        "robot_sim",
        "end_effectors",
        "gripper",
        "robotiq85_gelsight",
        "robotiq85_gelsight_pusher",
        "rtqgel",
        "robot_sim",
        "end_effectors",
        "gripper",
        "robotiq85",
        "robotiq85",
        "rtq",
        "robot_sim",
        "end_effectors",
        "gripper",
        "robotiq85_gelsight",
        "robotiq85_gelsight_pusher",
        "rtqgp",
        "modeling",
        "geometric_model",
        "gm",
        "modeling",
        "collision_model",
        "cm",
        "numpy",
        "np",
        "visualization",
        "panda",
        "world",
        "wd",
        "basis",
        "robot_math",
        "rm",
        "math",
        "grasping",
        "annotation",
        "utils",
        "gau",
        "grasping",
        "planning",
        "antipodal",
        "gpa",
        "grasping",
        "planning",
        "pushing",
        "gpp",
        "wd",
        "World",
        "cam_pos",
        "lookat_pos",
        "rtq",
        "Robotiq85",
        "cm",
        "gen_box",
        "np",
        "array",
        "box",
        "set_rgba",
        "box",
        "set_pos",
        "np",
        "array",
        "gpa",
        "plan_grasps",
        "rtq_s",
        "box",
        "angle_between_contact_normals",
        "math",
        "radians",
        "openning_direction",
        "grasp_info_list",
        "grasp_info",
        "rtq_s",
        "fix_to",
        "hnd_pos",
        "hnd_rotmat",
        "rtq_s",
        "jaw_to",
        "jaw_width",
        "rtq_s",
        "gen_meshmodel",
        "attach_to",
        "box",
        "attach_to",
        "run",
        "rtqgp",
        "Robotiq85GelsightPusher",
        "cm",
        "gen_box",
        "np",
        "array",
        "box",
        "set_rgba",
        "box",
        "set_pos",
        "np",
        "array",
        "gpp",
        "plan_pushing",
        "rtq_s",
        "box",
        "cone_angle",
        "math",
        "radians",
        "icosphere_level",
        "min_dist_between_sampled_contact_points",
        "max_samples",
        "local_rotation_interval",
        "math",
        "radians",
        "contact_offset",
        "toggle_debug",
        "push_info",
        "push_info_list",
        "push_info",
        "rtq_s",
        "copy",
        "gic",
        "fix_to",
        "hnd_pos",
        "hnd_rotmat",
        "gic",
        "gen_meshmodel",
        "attach_to",
        "box",
        "attach_to",
        "run"
    ],
    "literals": [
        "'loc_y'"
    ],
    "variables": [
        "rtq_s",
        "box",
        "grasp_info_list",
        "grasp_info",
        "jaw_width",
        "gl_jaw_center_pos",
        "gl_jaw_center_rotmat",
        "hnd_pos",
        "hnd_rotmat",
        "rtq_s",
        "box",
        "push_info_list",
        "gl_push_pos",
        "gl_push_rotmat",
        "hnd_pos",
        "hnd_rotmat",
        "gic"
    ],
    "comments": [
        "ground = gm.gen_box(np.array([2, 2, .001]))",
        "ground.set_rgba([1, 253 / 255, 219 / 255, 1])",
        "ground.attach_to(base)",
        "box_0 = cm.gen_box(np.array([.3, .3, .04]))",
        "box_0.set_rgba([153 / 255, 183 / 255, 1, .3])",
        "box_0.set_pos(np.array([0, 0, .02]))",
        "box_0.attach_to(base)",
        "suction_s = suction.MVFLN40()",
        "loc_pos_box = np.array([.1, 0, .02])",
        "loc_rotmat_box = rm.rotmat_from_euler(math.pi, 0, 0)",
        "gl_pos_box = box_0.get_pos() + box_0.get_rotmat().dot(loc_pos_box)",
        "gl_rotmat_box = box_0.get_rotmat().dot(loc_rotmat_box)",
        "suction_s.suction_to_with_scpose(gl_pos_box, gl_rotmat_box)",
        "suction_s.gen_meshmodel(rgba=[.55, .55, .55, .3]).attach_to(base)",
        "gm.gen_stick(",
        "suction_s.pos,",
        "np.array([0,0,1]),rgba=[1,0,0,.3]).attach_to(base)",
        "box.set_rotmat(rm.rotmat_from_axangle([0, 1, 0], -math.pi / 12))",
        "for grasp_info in grasp_info_list:",
        "jaw_width, gl_jaw_center_pos, gl_jaw_center_rotmat, hnd_pos, hnd_rotmat = grasp_info",
        "rtq_s.fix_to(hnd_pos, hnd_rotmat)",
        "rtq_s.jaw_to(jaw_width)",
        "rtq_s.gen_meshmodel().attach_to(base)",
        "box.set_rotmat(rm.rotmat_from_axangle([0, 1, 0], -math.pi / 12))",
        "push_info=push_info_list[70]",
        "gl_push_pos, gl_push_rotmat, hnd_pos, hnd_rotmat = push_info",
        "gic = rtq_s.copy()",
        "gic.fix_to(hnd_pos, hnd_rotmat)",
        "gic.gen_meshmodel().attach_to(base)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}