{
    "identifiers": [
        "zmq",
        "io",
        "mechanism",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "net",
        "Socket",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "concurrent",
        "CompletableFuture",
        "java",
        "util",
        "concurrent",
        "ExecutionException",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "TimeoutException",
        "java",
        "util",
        "BiFunction",
        "java",
        "util",
        "Consumer",
        "java",
        "util",
        "zmq",
        "Ctx",
        "zmq",
        "Helper",
        "zmq",
        "Msg",
        "zmq",
        "Options",
        "zmq",
        "SocketBase",
        "zmq",
        "ZMQ",
        "zmq",
        "util",
        "TestUtils",
        "org",
        "hamcrest",
        "CoreMatchers",
        "org",
        "hamcrest",
        "CoreMatchers",
        "notNullValue",
        "org",
        "hamcrest",
        "CoreMatchers",
        "nullValue",
        "org",
        "hamcrest",
        "MatcherAssert",
        "assertThat",
        "zctxt",
        "server",
        "client",
        "zapHandler",
        "host",
        "testCtx",
        "withzap",
        "tested",
        "zapProvider",
        "configurator",
        "testCtx",
        "zctxt",
        "ZMQ",
        "createContext",
        "zapFuture",
        "zapThread",
        "withzap",
        "testCtx",
        "zapHandler",
        "ZMQ",
        "socket",
        "testCtx",
        "zctxt",
        "ZMQ",
        "ZMQ_REP",
        "handler",
        "zapProvider",
        "apply",
        "testCtx",
        "zapHandler",
        "zapFuture",
        "zapThread",
        "handler",
        "start",
        "zapFuture",
        "isDone",
        "assertThat",
        "zapFuture",
        "get",
        "toString",
        "e",
        "e",
        "zapFuture",
        "complete",
        "zapThread",
        "testCtx",
        "zapHandler",
        "testCtx",
        "server",
        "ZMQ",
        "socket",
        "testCtx",
        "zctxt",
        "ZMQ",
        "ZMQ_DEALER",
        "assertThat",
        "testCtx",
        "server",
        "notNullValue",
        "testCtx",
        "client",
        "ZMQ",
        "socket",
        "testCtx",
        "zctxt",
        "ZMQ",
        "ZMQ_DEALER",
        "assertThat",
        "testCtx",
        "client",
        "notNullValue",
        "configurator",
        "run",
        "isSuccess",
        "tested",
        "apply",
        "testCtx",
        "testCtx",
        "server",
        "testCtx",
        "client",
        "isSuccess",
        "Helper",
        "bounce",
        "testCtx",
        "server",
        "testCtx",
        "client",
        "Helper",
        "expectBounceFail",
        "testCtx",
        "server",
        "testCtx",
        "client",
        "Optional",
        "ofNullable",
        "testCtx",
        "client",
        "ifPresent",
        "ZMQ",
        "closeZeroLinger",
        "Optional",
        "ofNullable",
        "testCtx",
        "server",
        "ifPresent",
        "ZMQ",
        "closeZeroLinger",
        "Optional",
        "ofNullable",
        "zapThread",
        "ifPresent",
        "t",
        "t",
        "interrupt",
        "t",
        "join",
        "e",
        "e",
        "ZMQ",
        "term",
        "testCtx",
        "zctxt",
        "zapFuture",
        "get",
        "TimeUnit",
        "SECONDS",
        "e",
        "e",
        "ctx",
        "rc",
        "timeout",
        "ZMQ",
        "setSocketOption",
        "ctx",
        "server",
        "ZMQ",
        "ZMQ_RCVTIMEO",
        "timeout",
        "rc",
        "ZMQ",
        "bind",
        "ctx",
        "server",
        "ctx",
        "host",
        "assertThat",
        "rc",
        "port",
        "TestUtils",
        "port",
        "ZMQ",
        "getSocketOptionExt",
        "ctx",
        "server",
        "ZMQ",
        "ZMQ_LAST_ENDPOINT",
        "ZMQ",
        "closeZeroLinger",
        "ctx",
        "client",
        "ctx",
        "client",
        "sock",
        "port",
        "sock",
        "getOutputStream",
        "write",
        "getBytes",
        "ZMQ",
        "CHARSET",
        "write",
        "getBytes",
        "ZMQ",
        "CHARSET",
        "msg",
        "ZMQ",
        "recv",
        "ctx",
        "server",
        "assertThat",
        "msg",
        "nullValue",
        "e",
        "e",
        "mechanism",
        "setOptions",
        "opt",
        "setOptions",
        "accept",
        "opt",
        "mechanism",
        "check",
        "opt"
    ],
    "literals": [
        "\"tcp://127.0.0.1:*\"",
        "\"127.0.0.1\"",
        "\"1\"",
        "\"8\"",
        "\"sneaky\""
    ],
    "variables": [
        "zctxt",
        "server",
        "client",
        "zapHandler",
        "zapThread",
        "rc"
    ],
    "comments": [
        "Future to hold the result of Zap handler processing",
        "true: zap allowed the connexion",
        "false: zap refused the connexion",
        "null: zap didn't do any processing",
        "zap future should not be already finished",
        "Exchange messages only if both sockets are used, some tests uses a plain socket",
        "Wait until ZAP handler terminates",
        "Optional.ofNullable(testCtx.zapHandler).ifPresent(ZMQ::closeZeroLinger);",
        "Shutdown",
        "send anonymous ZMTP/1.0 greeting",
        "send sneaky message that shouldn't be received",
        "static only class"
    ],
    "docstrings": [],
    "functions": [
        "runTest",
        "testRawSocket",
        "checkOptions",
        "MechanismTester"
    ],
    "classes": [
        "MechanismTester",
        "TestContext"
    ]
}