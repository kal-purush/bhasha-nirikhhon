{
    "identifiers": [
        "annotations",
        "typing",
        "Any",
        "Dict",
        "Optional",
        "Union",
        "pydantic",
        "parse_obj_as",
        "exceptions",
        "APIError",
        "helpers",
        "check_response",
        "encode_uri_component",
        "http_clients",
        "AsyncClient",
        "types",
        "CookieOptions",
        "LinkType",
        "Provider",
        "Session",
        "User",
        "UserAttributes",
        "determine_session_or_user_model_from_response",
        "url",
        "headers",
        "Dict",
        "cookie_options",
        "CookieOptions",
        "http_client",
        "Optional",
        "AsyncClient",
        "url",
        "headers",
        "cookie_options",
        "http_client",
        "AsyncClient",
        "AsyncGoTrueAPI",
        "exc_t",
        "exc_v",
        "exc_tb",
        "close",
        "http_client",
        "aclose",
        "attributes",
        "UserAttributes",
        "User",
        "headers",
        "attributes",
        "url",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "User",
        "parse_response",
        "response",
        "User",
        "headers",
        "url",
        "http_client",
        "get",
        "url",
        "headers",
        "headers",
        "check_response",
        "response",
        "response",
        "json",
        "get",
        "users",
        "APIError",
        "isinstance",
        "users",
        "APIError",
        "parse_obj_as",
        "User",
        "users",
        "email",
        "password",
        "redirect_to",
        "Optional",
        "data",
        "Optional",
        "Dict",
        "Any",
        "Union",
        "Session",
        "User",
        "headers",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "email",
        "password",
        "data",
        "url",
        "query_string",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "determine_session_or_user_model_from_response",
        "response",
        "SessionOrUserModel",
        "parse_response",
        "response",
        "email",
        "password",
        "redirect_to",
        "Optional",
        "Session",
        "headers",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "query_string",
        "redirect_to_encoded",
        "email",
        "password",
        "url",
        "query_string",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "Session",
        "parse_response",
        "response",
        "phone",
        "password",
        "data",
        "Optional",
        "Dict",
        "Any",
        "Union",
        "Session",
        "User",
        "headers",
        "phone",
        "password",
        "data",
        "url",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "determine_session_or_user_model_from_response",
        "response",
        "SessionOrUserModel",
        "parse_response",
        "response",
        "phone",
        "password",
        "Session",
        "phone",
        "password",
        "url",
        "headers",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "Session",
        "parse_response",
        "response",
        "email",
        "create_user",
        "redirect_to",
        "Optional",
        "headers",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "email",
        "create_user",
        "url",
        "query_string",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "check_response",
        "response",
        "phone",
        "create_user",
        "headers",
        "phone",
        "create_user",
        "url",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "check_response",
        "response",
        "phone",
        "token",
        "redirect_to",
        "Optional",
        "Union",
        "Session",
        "User",
        "headers",
        "phone",
        "token",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "url",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "determine_session_or_user_model_from_response",
        "response",
        "SessionOrUserModel",
        "parse_response",
        "response",
        "email",
        "redirect_to",
        "Optional",
        "data",
        "Optional",
        "Dict",
        "Any",
        "User",
        "headers",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "email",
        "data",
        "url",
        "query_string",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "User",
        "parse_response",
        "response",
        "email",
        "redirect_to",
        "Optional",
        "headers",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "email",
        "url",
        "query_string",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "check_response",
        "response",
        "jwt",
        "Dict",
        "headers",
        "jwt",
        "headers",
        "jwt",
        "_create_request_headers",
        "jwt",
        "jwt",
        "url",
        "http_client",
        "post",
        "url",
        "headers",
        "headers",
        "provider",
        "Provider",
        "redirect_to",
        "Optional",
        "scopes",
        "Optional",
        "encode_uri_component",
        "provider",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "url_params",
        "append",
        "redirect_to_encoded",
        "scopes",
        "url_params",
        "append",
        "encode_uri_component",
        "scopes",
        "url",
        "join",
        "url_params",
        "jwt",
        "User",
        "_create_request_headers",
        "jwt",
        "jwt",
        "url",
        "http_client",
        "get",
        "url",
        "headers",
        "headers",
        "User",
        "parse_response",
        "response",
        "jwt",
        "attributes",
        "UserAttributes",
        "User",
        "_create_request_headers",
        "jwt",
        "jwt",
        "attributes",
        "url",
        "http_client",
        "put",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "User",
        "parse_response",
        "response",
        "uid",
        "jwt",
        "_create_request_headers",
        "jwt",
        "jwt",
        "url",
        "uid",
        "http_client",
        "url",
        "headers",
        "headers",
        "check_response",
        "response",
        "refresh_token",
        "Session",
        "refresh_token",
        "url",
        "headers",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "Session",
        "parse_response",
        "response",
        "LinkType",
        "email",
        "password",
        "Optional",
        "redirect_to",
        "Optional",
        "data",
        "Optional",
        "Dict",
        "Any",
        "Union",
        "Session",
        "User",
        "headers",
        "email",
        "data",
        "password",
        "password",
        "redirect_to",
        "encode_uri_component",
        "redirect_to",
        "redirect_to_encoded",
        "url",
        "http_client",
        "post",
        "url",
        "json",
        "data",
        "headers",
        "headers",
        "determine_session_or_user_model_from_response",
        "response",
        "SessionOrUserModel",
        "parse_response",
        "response",
        "req",
        "res",
        "NotImplementedError",
        "req",
        "NotImplementedError"
    ],
    "literals": [
        "f\"{self.url}/admin/users\"",
        "f\"{self.url}/admin/users\"",
        "\"users\"",
        "\"No users found in response\"",
        "\"Expected a list of users\"",
        "\"\"",
        "f\"?redirect_to={redirect_to_encoded}\"",
        "\"email\"",
        "\"password\"",
        "\"data\"",
        "f\"{self.url}/signup{query_string}\"",
        "\"?grant_type=password\"",
        "f\"&redirect_to={redirect_to_encoded}\"",
        "\"email\"",
        "\"password\"",
        "f\"{self.url}/token{query_string}\"",
        "\"phone\"",
        "\"password\"",
        "\"data\"",
        "f\"{self.url}/signup\"",
        "\"phone\"",
        "\"password\"",
        "f\"{self.url}/token?grant_type=password\"",
        "\"\"",
        "f\"?redirect_to={redirect_to_encoded}\"",
        "\"email\"",
        "\"create_user\"",
        "f\"{self.url}/magiclink{query_string}\"",
        "\"phone\"",
        "\"create_user\"",
        "f\"{self.url}/otp\"",
        "\"phone\"",
        "\"token\"",
        "\"type\"",
        "\"sms\"",
        "\"redirect_to\"",
        "f\"{self.url}/verify\"",
        "\"\"",
        "f\"?redirect_to={redirect_to_encoded}\"",
        "\"email\"",
        "\"data\"",
        "f\"{self.url}/invite{query_string}\"",
        "\"\"",
        "f\"?redirect_to={redirect_to_encoded}\"",
        "\"email\"",
        "f\"{self.url}/recover{query_string}\"",
        "\"Authorization\"",
        "f\"Bearer {jwt}\"",
        "f\"{self.url}/logout\"",
        "f\"provider={encode_uri_component(provider)}\"",
        "f\"redirect_to={redirect_to_encoded}\"",
        "f\"scopes={encode_uri_component(scopes)}\"",
        "f\"{self.url}/authorize?{'&'.join(url_params)}\"",
        "'&'",
        "f\"{self.url}/user\"",
        "f\"{self.url}/user\"",
        "f\"{self.url}/admin/users/{uid}\"",
        "\"refresh_token\"",
        "f\"{self.url}/token?grant_type=refresh_token\"",
        "\"type\"",
        "\"email\"",
        "\"data\"",
        "\"password\"",
        "\"redirect_to\"",
        "f\"{self.url}/admin/generate_link\"",
        "\"set_auth_cookie not implemented.\"",
        "\"get_user_by_cookie not implemented.\""
    ],
    "variables": [
        "url",
        "headers",
        "cookie_options",
        "http_client",
        "headers",
        "data",
        "url",
        "response",
        "headers",
        "url",
        "response",
        "users",
        "headers",
        "query_string",
        "redirect_to_encoded",
        "query_string",
        "data",
        "url",
        "response",
        "SessionOrUserModel",
        "headers",
        "query_string",
        "redirect_to_encoded",
        "data",
        "url",
        "response",
        "headers",
        "data",
        "url",
        "response",
        "SessionOrUserModel",
        "data",
        "url",
        "headers",
        "response",
        "headers",
        "query_string",
        "redirect_to_encoded",
        "query_string",
        "data",
        "url",
        "response",
        "headers",
        "data",
        "url",
        "response",
        "headers",
        "data",
        "redirect_to_encoded",
        "data",
        "url",
        "response",
        "SessionOrUserModel",
        "headers",
        "query_string",
        "redirect_to_encoded",
        "query_string",
        "data",
        "url",
        "response",
        "headers",
        "query_string",
        "redirect_to_encoded",
        "query_string",
        "data",
        "url",
        "response",
        "headers",
        "headers",
        "url",
        "url_params",
        "redirect_to_encoded",
        "headers",
        "url",
        "response",
        "headers",
        "data",
        "url",
        "response",
        "headers",
        "url",
        "response",
        "data",
        "url",
        "headers",
        "response",
        "headers",
        "data",
        "data",
        "redirect_to_encoded",
        "data",
        "url",
        "response",
        "SessionOrUserModel"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Initialise API class.\"\"\"",
        "\"\"\"Creates a new user.\n\n        This function should only be called on a server.\n        Never expose your `service_role` key in the browser.\n\n        Parameters\n        ----------\n        attributes: UserAttributes\n            The data you want to create the user with.\n\n        Returns\n        -------\n        response : User\n            The created user\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Get a list of users.\n\n        This function should only be called on a server.\n        Never expose your `service_role` key in the browser.\n\n        Returns\n        -------\n        response : List[User]\n            A list of users\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Creates a new user using their email address.\n\n        Parameters\n        ----------\n        email : str\n            The email address of the user.\n        password : str\n            The password of the user.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n        data : Optional[Dict[str, Any]]\n            Optional user metadata.\n\n        Returns\n        -------\n        response : Union[Session, User]\n            A logged-in session if the server has \"autoconfirm\" ON\n            A user if the server has \"autoconfirm\" OFF\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Logs in an existing user using their email address.\n\n        Parameters\n        ----------\n        email : str\n            The email address of the user.\n        password : str\n            The password of the user.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n\n        Returns\n        -------\n        response : Session\n            A logged-in session\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Signs up a new user using their phone number and a password.\n\n        Parameters\n        ----------\n        phone : str\n            The phone number of the user.\n        password : str\n            The password of the user.\n        data : Optional[Dict[str, Any]]\n            Optional user metadata.\n\n        Returns\n        -------\n        response : Union[Session, User]\n            A logged-in session if the server has \"autoconfirm\" ON\n            A user if the server has \"autoconfirm\" OFF\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Logs in an existing user using their phone number and password.\n\n        Parameters\n        ----------\n        phone : str\n            The phone number of the user.\n        password : str\n            The password of the user.\n\n        Returns\n        -------\n        response : Session\n            A logged-in session\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Sends a magic login link to an email address.\n\n        Parameters\n        ----------\n        email : str\n            The email address of the user.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n\n        Parameters\n        ----------\n        phone : str\n            The user's phone number WITH international prefix\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Send User supplied Mobile OTP to be verified\n\n        Parameters\n        ----------\n        phone : str\n            The user's phone number WITH international prefix\n        token : str\n            Token that user was sent to their mobile phone\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n\n        Returns\n        -------\n        response : Union[Session, User]\n            A logged-in session if the server has \"autoconfirm\" ON\n            A user if the server has \"autoconfirm\" OFF\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Sends an invite link to an email address.\n\n        Parameters\n        ----------\n        email : str\n            The email address of the user.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n        data : Optional[Dict[str, Any]]\n            Optional user metadata.\n\n        Returns\n        -------\n        response : User\n            A user\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Sends a reset request to an email address.\n\n        Parameters\n        ----------\n        email : str\n            The email address of the user.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Create temporary object.\n\n        Create a temporary object with all configured headers and adds the\n        Authorization token to be used on request methods.\n\n        Parameters\n        ----------\n        jwt : str\n            A valid, logged-in JWT.\n\n        Returns\n        -------\n        headers : dict of str\n            The headers required for a successful request statement with the\n            supabase backend.\n        \"\"\"",
        "\"\"\"Removes a logged-in session.\n\n        Parameters\n        ----------\n        jwt : str\n            A valid, logged-in JWT.\n        \"\"\"",
        "\"\"\"Generates the relevant login URL for a third-party provider.\n\n        Parameters\n        ----------\n        provider : Provider\n            One of the providers supported by GoTrue.\n        redirect_to : Optional[str]\n            A URL or mobile address to send the user to after they are confirmed.\n        scopes : Optional[str]\n            A space-separated list of scopes granted to the OAuth application.\n\n        Returns\n        -------\n        url : str\n            The URL to redirect the user to.\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Gets the user details.\n\n        Parameters\n        ----------\n        jwt : str\n            A valid, logged-in JWT.\n\n        Returns\n        -------\n        response : User\n            A user\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"\n        Updates the user data.\n\n        Parameters\n        ----------\n        jwt : str\n            A valid, logged-in JWT.\n        attributes : UserAttributes\n            The data you want to update.\n\n        Returns\n        -------\n        response : User\n            A user\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Delete a user. Requires a `service_role` key.\n\n        This function should only be called on a server.\n        Never expose your `service_role` key in the browser.\n\n        Parameters\n        ----------\n        uid : str\n            The user uid you want to remove.\n        jwt : str\n            A valid, logged-in JWT.\n\n        Returns\n        -------\n        response : User\n            A user\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Generates a new JWT.\n\n        Parameters\n        ----------\n        refresh_token : str\n            A valid refresh token that was returned on login.\n\n        Returns\n        -------\n        response : Session\n            A session\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"\n        Generates links to be sent via email or other.\n\n        Parameters\n        ----------\n        type : LinkType\n            The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n        email : str\n            The user's email.\n        password : Optional[str]\n            User password. For signup only.\n        redirect_to : Optional[str]\n            The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n        data : Optional[Dict[str, Any]]\n            Optional user metadata. For signup only.\n\n        Returns\n        -------\n        response : Union[Session, User]\n            A logged-in session if the server has \"autoconfirm\" ON\n            A user if the server has \"autoconfirm\" OFF\n\n        Raises\n        ------\n        APIError\n            If an error occurs.\n        \"\"\"",
        "\"\"\"Stub for parity with JS api.\"\"\"",
        "\"\"\"Stub for parity with JS api.\"\"\""
    ],
    "functions": [
        "__aenter__",
        "__aexit__",
        "close",
        "create_user",
        "list_users",
        "sign_up_with_email",
        "sign_in_with_email",
        "sign_up_with_phone",
        "sign_in_with_phone",
        "send_magic_link_email",
        "send_mobile_otp",
        "verify_mobile_otp",
        "invite_user_by_email",
        "reset_password_for_email",
        "_create_request_headers",
        "sign_out",
        "get_url_for_provider",
        "get_user",
        "update_user",
        "delete_user",
        "refresh_access_token",
        "generate_link",
        "set_auth_cookie",
        "get_user_by_cookie"
    ],
    "classes": [
        "AsyncGoTrueAPI"
    ]
}