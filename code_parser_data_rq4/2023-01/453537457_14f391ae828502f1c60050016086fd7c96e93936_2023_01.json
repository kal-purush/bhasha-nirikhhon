{
    "identifiers": [
        "existsSync",
        "readFileSync",
        "builtinModules",
        "join",
        "Plugin",
        "parseFile",
        "file",
        "readFileSync",
        "file",
        "options",
        "join",
        "process",
        "options",
        "_config",
        "_env",
        "existsSync",
        "optionsResolved",
        "optionsResolved",
        "parseFile",
        "optionsResolved",
        "optionsResolved",
        "dependencies",
        "dep",
        "dep",
        "externalDeps",
        "depMatcher",
        "optionsResolved",
        "devDependencies",
        "dep",
        "dep",
        "externalDeps",
        "depMatcher",
        "optionsResolved",
        "builtinModules",
        "builtinModule",
        "builtinModule",
        "externalDeps",
        "builtinMatcher",
        "optionsResolved",
        "optionalDependencies",
        "dep",
        "dep",
        "externalDeps",
        "depMatcher",
        "optionsResolved",
        "peerDependencies",
        "dep",
        "dep",
        "externalDeps",
        "depMatcher",
        "externalDeps"
    ],
    "literals": [
        "'node:fs'",
        "'node:module'",
        "'node:path'",
        "'vite'",
        "string",
        "string",
        "'package.json'",
        "'vite-plugin-externalize-deps'",
        "[vite-plugin-externalize-deps] The file specified for useFile (${optionsResolved.useFile}) does not exist.",
        "^${dep}(?:/.+)?$",
        "^${dep}(?:/.+)?$",
        "^(?:node:)?${builtinModule}$",
        "^${dep}(?:/.+)?$",
        "^${dep}(?:/.+)?$"
    ],
    "variables": [
        "parseFile",
        "optionsResolved",
        "externalDeps",
        "depMatcher",
        "depMatcher",
        "builtinMatcher",
        "depMatcher",
        "depMatcher"
    ],
    "comments": [
        "User options take priority.",
        "eslint-disable-next-line @typescript-eslint/no-unsafe-assignment",
        "eslint-disable-next-line @typescript-eslint/no-unsafe-argument",
        "eslint-disable-next-line @typescript-eslint/no-unsafe-argument",
        "eslint-disable-next-line @typescript-eslint/no-unsafe-argument",
        "eslint-disable-next-line @typescript-eslint/no-unsafe-argument"
    ],
    "docstrings": [],
    "functions": [
        "externalize"
    ],
    "classes": []
}