{
    "identifiers": [
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "junit",
        "framework",
        "TestCase",
        "assertEquals",
        "junit",
        "framework",
        "TestCase",
        "assertNotNull",
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "ComicBookMetadataAdaptor",
        "CHANGED_COMIC_MARKER",
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "ComicBookMetadataAdaptor",
        "MISSING_ISSUE_NUMBER",
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "ComicBookMetadataAdaptor",
        "MISSING_VOLUME",
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "ComicBookMetadataAdaptor",
        "NO_COVER_DATE",
        "org",
        "comixedproject",
        "adaptors",
        "comicbooks",
        "ComicBookMetadataAdaptor",
        "UNNAMED_SERIES",
        "java",
        "util",
        "java",
        "util",
        "org",
        "comixedproject",
        "model",
        "comicbooks",
        "ComicBook",
        "org",
        "comixedproject",
        "model",
        "comicbooks",
        "ComicDetail",
        "org",
        "comixedproject",
        "model",
        "comicbooks",
        "ComicState",
        "org",
        "comixedproject",
        "model",
        "comicbooks",
        "ComicTag",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "junit",
        "MockitoJUnitRunner",
        "RunWith",
        "TEST_COVER_DATE",
        "TEST_SERIES_NAME",
        "TEST_VOLUME",
        "TEST_ISSUE_NUMBER",
        "InjectMocks",
        "adaptor",
        "Mock",
        "comicBook",
        "Mock",
        "comicDetail",
        "Mock",
        "comicTags",
        "Before",
        "Mockito",
        "when",
        "comicDetail",
        "getCoverDate",
        "thenReturn",
        "TEST_COVER_DATE",
        "Mockito",
        "when",
        "comicDetail",
        "getSeries",
        "thenReturn",
        "TEST_SERIES_NAME",
        "Mockito",
        "when",
        "comicDetail",
        "getVolume",
        "thenReturn",
        "TEST_VOLUME",
        "Mockito",
        "when",
        "comicDetail",
        "getIssueNumber",
        "thenReturn",
        "TEST_ISSUE_NUMBER",
        "Test",
        "Mockito",
        "when",
        "comicBook",
        "getComicDetail",
        "thenReturn",
        "comicDetail",
        "Mockito",
        "when",
        "comicDetail",
        "getTags",
        "thenReturn",
        "comicTags",
        "adaptor",
        "clear",
        "comicBook",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setPublisher",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setSeries",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setVolume",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setIssueNumber",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setCoverDate",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setTitle",
        "Mockito",
        "verify",
        "comicDetail",
        "Mockito",
        "times",
        "setDescription",
        "Mockito",
        "verify",
        "comicTags",
        "Mockito",
        "times",
        "clear",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getCoverDate",
        "thenReturn",
        "Mockito",
        "when",
        "comicDetail",
        "getSeries",
        "thenReturn",
        "Mockito",
        "when",
        "comicDetail",
        "getVolume",
        "thenReturn",
        "Mockito",
        "when",
        "comicDetail",
        "getIssueNumber",
        "thenReturn",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "UNNAMED_SERIES",
        "MISSING_VOLUME",
        "MISSING_ISSUE_NUMBER",
        "NO_COVER_DATE",
        "result",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getCoverDate",
        "thenReturn",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "TEST_SERIES_NAME",
        "TEST_VOLUME",
        "TEST_ISSUE_NUMBER",
        "NO_COVER_DATE",
        "result",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getSeries",
        "thenReturn",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "UNNAMED_SERIES",
        "TEST_VOLUME",
        "TEST_ISSUE_NUMBER",
        "adaptor",
        "coverDateFormat",
        "format",
        "TEST_COVER_DATE",
        "result",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getVolume",
        "thenReturn",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "TEST_SERIES_NAME",
        "MISSING_VOLUME",
        "TEST_ISSUE_NUMBER",
        "adaptor",
        "coverDateFormat",
        "format",
        "TEST_COVER_DATE",
        "result",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getIssueNumber",
        "thenReturn",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "TEST_SERIES_NAME",
        "TEST_VOLUME",
        "MISSING_ISSUE_NUMBER",
        "adaptor",
        "coverDateFormat",
        "format",
        "TEST_COVER_DATE",
        "result",
        "Test",
        "Mockito",
        "when",
        "comicDetail",
        "getComicState",
        "thenReturn",
        "ComicState",
        "CHANGED",
        "result",
        "adaptor",
        "getDisplayableTitle",
        "comicDetail",
        "assertNotNull",
        "result",
        "assertEquals",
        "format",
        "TEST_SERIES_NAME",
        "TEST_VOLUME",
        "TEST_ISSUE_NUMBER",
        "adaptor",
        "coverDateFormat",
        "format",
        "TEST_COVER_DATE",
        "CHANGED_COMIC_MARKER",
        "result"
    ],
    "literals": [
        "\"The Series Name\"",
        "\"2023\"",
        "\"23.1\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"%s v%s #%s (%s)\"",
        "\"%s v%s #%s (%s)\"",
        "\"%s v%s #%s (%s)\"",
        "\"%s v%s #%s (%s)\"",
        "\"%s v%s #%s (%s)\"",
        "\"%s v%s #%s (%s) %s\""
    ],
    "variables": [
        "adaptor",
        "comicBook",
        "comicDetail",
        "comicTags"
    ],
    "comments": [],
    "docstrings": [
        "* ComiXed - A digital comicBook book library management application.\n * Copyright (C) 2021, The ComiXed Project.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses>"
    ],
    "functions": [
        "setUp",
        "testClear",
        "testGetDisplayableTitleNoMetadata",
        "testGetDisplayableTitleNoCoverDate",
        "testGetDisplayableTitleNoSeries",
        "testGetDisplayableTitleNoVolume",
        "testGetDisplayableTitleNoIssueNumber",
        "testGetDisplayableTitleWhenMetadataIsChanged"
    ],
    "classes": [
        "ComicBookMetadataAdaptorTest"
    ]
}