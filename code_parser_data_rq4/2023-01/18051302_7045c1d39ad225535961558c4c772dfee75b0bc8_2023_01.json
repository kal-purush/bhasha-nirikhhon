{
    "identifiers": [
        "org",
        "myrobotlab",
        "service",
        "java",
        "util",
        "org",
        "myrobotlab",
        "framework",
        "Service",
        "org",
        "myrobotlab",
        "kinematics",
        "Point",
        "org",
        "myrobotlab",
        "logging",
        "Level",
        "org",
        "myrobotlab",
        "logging",
        "LoggerFactory",
        "org",
        "myrobotlab",
        "logging",
        "LoggingFactory",
        "org",
        "myrobotlab",
        "net",
        "WsClient",
        "org",
        "myrobotlab",
        "service",
        "config",
        "LeapMotion2Config",
        "org",
        "myrobotlab",
        "service",
        "data",
        "LeapData",
        "org",
        "myrobotlab",
        "service",
        "interfaces",
        "LeapDataListener",
        "org",
        "myrobotlab",
        "service",
        "interfaces",
        "LeapDataPublisher",
        "org",
        "myrobotlab",
        "service",
        "interfaces",
        "PointPublisher",
        "org",
        "myrobotlab",
        "service",
        "interfaces",
        "RemoteMessageHandler",
        "org",
        "slf4j",
        "Logger",
        "serialVersionUID",
        "log",
        "LoggerFactory",
        "getLogger",
        "poller",
        "lastLeapData",
        "numFrames",
        "n",
        "id",
        "n",
        "id",
        "poller",
        "service",
        "addListener",
        "service",
        "getName",
        "service",
        "addListener",
        "service",
        "getName",
        "log",
        "info",
        "Override",
        "data",
        "data",
        "Override",
        "data",
        "data",
        "data",
        "data",
        "Override",
        "poller",
        "stop",
        "releaseService",
        "Override",
        "startService",
        "c",
        "config",
        "c",
        "tracking",
        "startTracking",
        "poller",
        "start",
        "poller",
        "stop",
        "Override",
        "points",
        "points",
        "s",
        "addListener",
        "s",
        "getName",
        "service",
        "websocket",
        "service",
        "service",
        "service",
        "websocket",
        "close",
        "e",
        "service",
        "error",
        "e",
        "websocket",
        "c",
        "config",
        "websocket",
        "connect",
        "service",
        "c",
        "websocketUrl",
        "e",
        "service",
        "error",
        "e",
        "args",
        "LoggingFactory",
        "init",
        "Level",
        "DEBUG",
        "Runtime",
        "start",
        "e",
        "log",
        "error",
        "e",
        "Override",
        "uuid",
        "data",
        "invoke",
        "data"
    ],
    "literals": [
        "\"publishFrame\"",
        "\"onFrame\"",
        "\"publishLeapData\"",
        "\"onLeapData\"",
        "\"controller.policyFlags()\"",
        "\"publishPoints\"",
        "\"onPoints\"",
        "\"leap\"",
        "\"LeapMotion2\"",
        "\"main threw\"",
        "\"publishLeapDataJson\""
    ],
    "variables": [
        "poller",
        "service",
        "websocket"
    ],
    "comments": [
        "FIXME - make POJO or don't compute other useful values .. etc.",
        "TODO fill in a LeapData ! :)",
        "TODO - reflect on a public heard method - if doesn't exist error ?",
        "private transient AsyncHttpClient client;",
        "leap.startService();",
        "Runtime.start(\"webgui\", \"WebGui\");",
        "Runtime.start(\"intro\", \"Intro\");",
        "Runtime.start(\"i01\", \"InMoov2\");",
        "Have the sample listener receive events from the controller",
        "Remove the sample listener when done"
    ],
    "docstrings": [],
    "functions": [
        "LeapMotion2",
        "addFrameListener",
        "addLeapDataListener",
        "checkPolicy",
        "LeapData",
        "onLeapData",
        "LeapData",
        "publishLeapData",
        "publishLeapDataJson",
        "releaseService",
        "startService",
        "startTracking",
        "stopTracking",
        "publishPoints",
        "addPointsListener",
        "LeapWsListener",
        "stop",
        "start",
        "main",
        "onRemoteMessage"
    ],
    "classes": [
        "LeapMotion2",
        "LeapWsListener"
    ]
}