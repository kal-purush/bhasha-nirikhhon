{
    "identifiers": [
        "TransactionReceipt",
        "TransactionResponse",
        "getNetworkByHolographId",
        "TransactionDescription",
        "BigNumber",
        "create2address",
        "decodeDeploymentConfig",
        "DeploymentConfig",
        "UpdateBridgedContract",
        "UpdateBridgedERC20",
        "UpdateBridgedERC721",
        "sha3",
        "storageSlot",
        "toAscii",
        "NetworkMonitor",
        "BridgeInArgs",
        "BridgeInErc721Args",
        "BridgeOutErc20Args",
        "decodeBridgeInErc721Args",
        "decodeBridgeOutErc20Args",
        "networkMonitor",
        "transaction",
        "network",
        "tags",
        "updateBridgedContract",
        "updateBridgedERC20",
        "updateBridgedERC721",
        "networkMonitor",
        "transaction",
        "receipt",
        "transaction",
        "receipt",
        "networkMonitor",
        "network",
        "tags",
        "networkMonitor",
        "receipt",
        "networkMonitor",
        "operatorJobPayloadData",
        "operatorJobPayloadData",
        "operatorJobPayloadData",
        "operatorJobPayloadData",
        "operatorJobHash",
        "networkMonitor",
        "network",
        "tags",
        "sha3",
        "operatorJobPayload",
        "operatorJobHash",
        "networkMonitor",
        "network",
        "tags",
        "networkMonitor",
        "operatorJobPayload",
        "bridgeTransaction",
        "bridgeTransaction",
        "getNetworkByHolographId",
        "bridgeIn",
        "bridgeIn",
        "bridgeIn",
        "holographableContractAddress",
        "networkMonitor",
        "decodeDeploymentConfig",
        "bridgeInPayload",
        "create2address",
        "deploymentConfig",
        "networkMonitor",
        "networkMonitor",
        "network",
        "direction",
        "tags",
        "updateBridgedContract",
        "direction",
        "transaction",
        "network",
        "contractAddress",
        "deploymentConfig",
        "tags",
        "networkMonitor",
        "network",
        "holographableContractAddress",
        "storageSlot",
        "toAscii",
        "slot",
        "contractType",
        "decodeBridgeOutErc20Args",
        "bridgeInPayload",
        "networkMonitor",
        "receipt",
        "holographableContractAddress",
        "erc20TransferEvent",
        "networkMonitor",
        "network",
        "transaction",
        "tags",
        "networkMonitor",
        "network",
        "direction",
        "tags",
        "updateBridgedERC20",
        "transaction",
        "network",
        "erc20BeamInfo",
        "tags",
        "contractType",
        "decodeBridgeInErc721Args",
        "bridgeInPayload",
        "networkMonitor",
        "network",
        "direction",
        "tags",
        "updateBridgedERC721",
        "direction",
        "transaction",
        "network",
        "fromNetwork",
        "toNetwork",
        "contractType",
        "holographableContractAddress",
        "erc721BeamInfo",
        "erc721BeamInfo",
        "BigNumber",
        "erc721BeamInfo",
        "operatorJobHash",
        "tags",
        "networkMonitor",
        "network",
        "transaction",
        "tags",
        "networkMonitor",
        "network",
        "transaction",
        "tags",
        "networkMonitor",
        "network",
        "bridgeTransaction",
        "bridgeTransaction",
        "networkMonitor",
        "network",
        "tags",
        "handleAvailableOperatorJobEvent"
    ],
    "literals": [
        "'@ethersproject/abstract-provider'",
        "'@holographxyz/networks'",
        "'@ethersproject/abi'",
        "'ethers'",
        "'../../../utils/contract-deployment'",
        "'../../../types/indexer'",
        "'../../../utils/utils'",
        "'../../../utils/network-monitor'",
        "'../../../utils/bridge'",
        "string",
        "string",
        "Could not get receipt for ${transaction.hash}",
        "Checking for job hash",
        "No AvailableOperatorJob event found",
        "'The hashed operatorJobPayload does not equal operatorJobHash!'",
        "Decoding bridgeInRequest",
        "'bridgeInRequest'",
        "string",
        "string",
        "string",
        "string",
        "'msg'",
        "Calling updateBridgedContract with direction ${direction}",
        "string",
        "'eip1967.Holograph.contractType'",
        "string",
        "'HolographERC20'",
        "Bridge erc20 transfer event not found for ${transaction.hash}",
        "'msg'",
        "Calling updateBridgedERC20 with direction ${direction}",
        "'HolographERC721'",
        "'msg'",
        "Calling updateBridgedERC721 with direction ${direction}",
        "Found a valid bridgeInRequest for ${transaction.hash}",
        "Unknown bridgeIn function executed for ${transaction.hash}",
        "Bridge-In transaction type: ${bridgeTransaction.name} -->> ${bridgeTransaction.args}",
        "Transaction failed, ignoring it"
    ],
    "variables": [
        "receipt",
        "operatorJobPayloadData",
        "operatorJobHash",
        "operatorJobPayload",
        "bridgeTransaction",
        "bridgeIn",
        "fromNetwork",
        "toNetwork",
        "network",
        "bridgeInPayload",
        "holographableContractAddress",
        "deploymentConfig",
        "contractAddress",
        "direction",
        "slot",
        "contractType",
        "erc20BeamInfo",
        "erc20TransferEvent",
        "direction",
        "erc721BeamInfo",
        "direction"
    ],
    "comments": [
        "Check that operatorJobPayload and operatorJobHash are the same",
        "Bridge out contract deployment",
        "Bridge out ERC20 token",
        "We do not currently capture bridge events for ERC",
        "Bridge in ERC721 token"
    ],
    "docstrings": [],
    "functions": [
        "handleAvailableOperatorJobEvent"
    ],
    "classes": []
}