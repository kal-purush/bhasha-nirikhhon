{
    "identifiers": [
        "time",
        "datetime",
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "serial",
        "re",
        "serial",
        "Serial",
        "PORT",
        "timeout",
        "serialport",
        "serialport",
        "serial",
        "Serial",
        "PORT",
        "timeout",
        "serialport",
        "name",
        "time",
        "sleep",
        "serialport",
        "readline",
        "serialport",
        "readline",
        "line",
        "line",
        "replace",
        "strip",
        "split",
        "len",
        "vals",
        "i",
        "i",
        "vals",
        "ValueError",
        "ValueError",
        "vals",
        "input",
        "os",
        "path",
        "exists",
        "filename",
        "os",
        "mkdir",
        "filename",
        "j",
        "filename",
        "filename",
        "format",
        "j",
        "pd",
        "DataFrame",
        "data",
        "columns",
        "header",
        "df",
        "to_csv",
        "file_name",
        "index",
        "j",
        "get_imu_data",
        "dataholder",
        "data",
        "append",
        "dataholder",
        "dataholder",
        "dataCollecting",
        "saveData"
    ],
    "literals": [
        "\"COM8\"",
        "\"Opened\"",
        "'utf-8'",
        "\"Uni:\"",
        "\"\"",
        "','",
        "\"\\Type the Folder and Filename: \"",
        "'/'",
        "\"deltaTime\"",
        "\"Acc_X\"",
        "\"Acc_Y\"",
        "\"Acc_Z\"",
        "\"Gyro_X\"",
        "\"Gyro_Y\"",
        "\"Gyro_Z\"",
        "\"/\"",
        "'{0:03d}'",
        "\".csv\""
    ],
    "variables": [
        "PORT",
        "HISTORY_SIZE",
        "INTERVAL",
        "serialport",
        "serialport",
        "serialport",
        "line",
        "vals",
        "vals",
        "j",
        "filename",
        "header",
        "file_name",
        "df",
        "data",
        "dataholder",
        "dataCollecting",
        "dataholder",
        "dataCollecting",
        "data",
        "dataCollecting"
    ],
    "comments": [
        "CaptureData.py",
        "Description: Recieved Data from ESP32 Micro via the AGRB-Training-Data-Capture.ino file. Save data stream as csv files",
        "Written by: Nate Damen",
        "Created on June 17th 2020",
        "Updated on June 18th 2020",
        "PORT = \"/dev/ttyUSB0\"",
        "How many sensor samples we want to store",
        "Pause re-sampling the sensor and drawing for INTERVAL seconds",
        "open serial port",
        "check which port was really used",
        "Flush input",
        "Poll the serial port",
        "print(line)",
        "if not \"Uni:\" in line:",
        "return None",
        "print(vals)",
        "print(vals)",
        "df['deltaTime']=df.apply(lambda row: row.currentTime - row.startTime ,axis=1)",
        "serialport.flush()",
        "print(dataholder[0])"
    ],
    "docstrings": [],
    "functions": [
        "get_imu_data",
        "saveData"
    ],
    "classes": []
}