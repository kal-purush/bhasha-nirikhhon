{
    "identifiers": [
        "Context",
        "getContext",
        "createContext",
        "executeTransaction",
        "toAmount",
        "createWallet",
        "BN",
        "ethUtil",
        "expectThrow",
        "advanceTimeAndBlockAsync",
        "sign",
        "SignatureType",
        "contract",
        "before",
        "defaultCtx",
        "getContext",
        "ctx",
        "createContext",
        "defaultCtx",
        "describe",
        "it",
        "ctx",
        "createWallet",
        "ctx",
        "owner",
        "ethUtil",
        "sign",
        "owner",
        "hash",
        "ctx",
        "wallet",
        "walletContract",
        "hash",
        "sig",
        "MAGICVALUE",
        "isValid",
        "it",
        "ctx",
        "createWallet",
        "ctx",
        "owner",
        "ethUtil",
        "sign",
        "owner",
        "hash",
        "ctx",
        "ctx",
        "wallet",
        "ctx",
        "wallet",
        "guardians",
        "ctx",
        "wallet",
        "walletContract",
        "hash",
        "sig",
        "FAILEDVALUE",
        "isValidBefore",
        "advanceTimeAndBlockAsync",
        "defaultLockPeriod",
        "walletContract",
        "hash",
        "sig",
        "MAGICVALUE",
        "isValidAfter"
    ],
    "literals": [
        "\"./helpers/TestUtils\"",
        "\"bn.js\"",
        "\"ethereumjs-util\"",
        "\"../util/expectThrow\"",
        "\"../util/TimeTravel\"",
        "\"./helpers/Signature\"",
        "\"ERC1271Module\"",
        "\"0x20c13b0b\"",
        "\"0x00000000\"",
        "\"Wallet\"",
        "\"should be able to verify a signature signed by wallet owner\"",
        "\"1234\"",
        "\"signature verify failed.\"",
        "\"should not able to verify a signature when wallet is locked\"",
        "\"1234\"",
        "\"wallet needs to be locked\"",
        "\"verification should be failed, but succeeded.\"",
        "\"signature verify failed.\""
    ],
    "variables": [
        "defaultCtx",
        "ctx",
        "MAGICVALUE",
        "FAILEDVALUE",
        "owner",
        "hash",
        "sig",
        "walletContract",
        "isValid",
        "owner",
        "hash",
        "sig",
        "defaultLockPeriod",
        "walletContract",
        "isValidBefore",
        "isValidAfter"
    ],
    "comments": [
        "convert wallet to a ERC1271 module then it can invoke the isValidSignature method",
        "lock wallet:",
        "unlock",
        "verify agian:"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}