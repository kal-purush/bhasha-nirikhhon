{
    "identifiers": [
        "typing",
        "Type",
        "Optional",
        "abc",
        "abstractmethod",
        "gemd",
        "enumeration",
        "base_enumeration",
        "BaseEnumeration",
        "citrine",
        "_serialization",
        "serializable",
        "Serializable",
        "citrine",
        "_serialization",
        "polymorphic_serializable",
        "PolymorphicSerializable",
        "citrine",
        "_serialization",
        "properties",
        "BaseEnumeration",
        "BaseEnumeration",
        "PolymorphicSerializable",
        "abstractmethod",
        "other",
        "all",
        "__getattribute__",
        "key",
        "other",
        "__getattribute__",
        "key",
        "key",
        "_attrs",
        "AttributeError",
        "classmethod",
        "cls",
        "data",
        "Type",
        "Serializable",
        "data",
        "ValueError",
        "Type",
        "Serializable",
        "IdentityColumn",
        "MeanColumn",
        "StdDevColumn",
        "QuantileColumn",
        "OriginalUnitsColumn",
        "MostLikelyCategoryColumn",
        "MostLikelyProbabilityColumn",
        "FlatCompositionColumn",
        "ComponentQuantityColumn",
        "NthBiggestComponentNameColumn",
        "NthBiggestComponentQuantityColumn",
        "MolecularStructureColumn",
        "next",
        "x",
        "x",
        "types",
        "x",
        "typ",
        "data",
        "res",
        "ValueError",
        "format",
        "data",
        "res",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "Optional",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "target_units",
        "Optional",
        "data_source",
        "target_units",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "Optional",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "target_units",
        "Optional",
        "data_source",
        "target_units",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "properties",
        "Optional",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "quantile",
        "target_units",
        "Optional",
        "data_source",
        "quantile",
        "target_units",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "data_source",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "data_source",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "data_source",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "Enumeration",
        "CompositionSortOrder",
        "properties",
        "deserializable",
        "data_source",
        "sort_order",
        "CompositionSortOrder",
        "data_source",
        "sort_order",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "properties",
        "Optional",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "component_name",
        "normalize",
        "Optional",
        "data_source",
        "component_name",
        "normalize",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "n",
        "data_source",
        "n",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "properties",
        "Optional",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "n",
        "normalize",
        "Optional",
        "data_source",
        "n",
        "normalize",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "deserializable",
        "data_source",
        "data_source",
        "Serializable",
        "Column",
        "properties",
        "properties",
        "Enumeration",
        "ChemicalDisplayFormat",
        "properties",
        "deserializable",
        "data_source",
        "format",
        "ChemicalDisplayFormat",
        "data_source",
        "format"
    ],
    "literals": [
        "\"alphabetical\"",
        "\"quantity\"",
        "\"smiles\"",
        "\"inchi\"",
        "'Column'",
        "\"type\"",
        "\"Can only get types from dicts with a 'type' key\"",
        "\"type\"",
        "\"Unrecognized type: {}\"",
        "\"type\"",
        "'MeanColumn'",
        "'data_source'",
        "\"target_units\"",
        "'type'",
        "\"mean_column\"",
        "\"data_source\"",
        "\"target_units\"",
        "\"typ\"",
        "\"StdDevColumn\"",
        "'data_source'",
        "\"target_units\"",
        "'type'",
        "\"std_dev_column\"",
        "\"data_source\"",
        "\"target_units\"",
        "\"typ\"",
        "\"QuantileColumn\"",
        "'data_source'",
        "\"quantile\"",
        "\"target_units\"",
        "'type'",
        "\"quantile_column\"",
        "\"data_source\"",
        "\"quantile\"",
        "\"target_units\"",
        "\"typ\"",
        "\"OriginalUnitsColumn\"",
        "'data_source'",
        "'type'",
        "\"original_units_column\"",
        "\"data_source\"",
        "\"typ\"",
        "\"MostLikelyCategoryColumn\"",
        "'data_source'",
        "'type'",
        "\"most_likely_category_column\"",
        "\"data_source\"",
        "\"typ\"",
        "\"MostLikelyProbabilityColumn\"",
        "'data_source'",
        "'type'",
        "\"most_likely_probability_column\"",
        "\"data_source\"",
        "\"typ\"",
        "\"FlatCompositionColumn\"",
        "'data_source'",
        "'sort_order'",
        "'type'",
        "\"flat_composition_column\"",
        "\"data_source\"",
        "\"sort_order\"",
        "\"typ\"",
        "\"ComponentQuantityColumn\"",
        "'data_source'",
        "\"component_name\"",
        "\"normalize\"",
        "'type'",
        "\"component_quantity_column\"",
        "\"data_source\"",
        "\"component_name\"",
        "\"normalize\"",
        "\"typ\"",
        "\"NthBiggestComponentNameColumn\"",
        "'data_source'",
        "\"n\"",
        "'type'",
        "\"biggest_component_name_column\"",
        "\"data_source\"",
        "\"n\"",
        "\"typ\"",
        "\"NthBiggestComponentQuantityColumn\"",
        "'data_source'",
        "\"n\"",
        "\"normalize\"",
        "'type'",
        "\"biggest_component_quantity_column\"",
        "\"data_source\"",
        "\"n\"",
        "\"normalize\"",
        "\"typ\"",
        "'IdentityColumn'",
        "'data_source'",
        "'type'",
        "\"identity_column\"",
        "\"data_source\"",
        "\"typ\"",
        "'MolecularStructureColumn'",
        "'data_source'",
        "'format'",
        "'type'",
        "\"molecular_structure_column\"",
        "\"data_source\"",
        "\"format\"",
        "\"typ\""
    ],
    "variables": [
        "ALPHABETICAL",
        "QUANTITY",
        "SMILES",
        "INCHI",
        "types",
        "res",
        "data_source",
        "target_units",
        "typ",
        "data_source",
        "target_units",
        "data_source",
        "target_units",
        "typ",
        "data_source",
        "target_units",
        "data_source",
        "quantile",
        "target_units",
        "typ",
        "data_source",
        "quantile",
        "target_units",
        "data_source",
        "typ",
        "data_source",
        "data_source",
        "typ",
        "data_source",
        "data_source",
        "typ",
        "data_source",
        "data_source",
        "sort_order",
        "typ",
        "data_source",
        "sort_order",
        "data_source",
        "component_name",
        "normalize",
        "typ",
        "data_source",
        "component_name",
        "normalize",
        "data_source",
        "n",
        "typ",
        "data_source",
        "n",
        "data_source",
        "n",
        "normalize",
        "typ",
        "data_source",
        "n",
        "normalize",
        "data_source",
        "typ",
        "data_source",
        "data_source",
        "format",
        "typ",
        "data_source",
        "format"
    ],
    "comments": [
        "noqa: F401",
        "pragma: no cover"
    ],
    "docstrings": [
        "\"\"\"Column definitions for GEM Tables.\"\"\"",
        "\"\"\"[ALPHA] Order to use when sorting the components in a composition.\n\n    * ALPHABETICAL is alpha-numeric order by the component name\n    * QUANTITY is ordered from the largest to smallest quantity, with ties broken alphabetically\n    \"\"\"",
        "\"\"\"[ALPHA] Format to use when rendering a molecular structure.\n\n    * SMILES Simplified molecular-input line-entry system\n    * INCHI International Chemical Identifier\n    \"\"\"",
        "\"\"\"[ALPHA] A column in the GEM Table, defined as some operation on a variable.\n\n    Abstract type that returns the proper type given a serialized dict.\n    \"\"\"",
        "\"\"\"Return the subtype.\"\"\"",
        "\"\"\"[ALPHA] Column containing the mean of a real-valued variable.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    target_units: optional[str]\n        units to convert the real variable into\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing the standard deviation of a real-valued variable.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    target_units: optional[str]\n        units to convert the real variable into\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing a quantile of the variable.\n\n    The column is populated with the quantile function of the distribution evaluated at \"quantile\".\n    For example, for a uniform distribution parameterized by a lower and upper bound, the value\n    in the column would be:\n        lower + (upper - lower) * quantile\n    while for a normal distribution parameterized by a mean and stddev, the value would be:\n        mean + stddev * sqrt(2) * inverse error function (2 * quantile - 1)\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    quantile: float\n        the quantile to use for the column, defined between 0.0 and 1.0\n    target_units: optional[str]\n        units to convert the real variable into\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing the units as entered in the source data.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing the most likely category.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing the probability of the most likely category.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column that flattens the composition into a string of names and quantities.\n\n    The numeric formatting tries to be human readable. For example, if all of the quantities\n    are round numbers like {\"spam\": 4.0, \"eggs\": 1.0} then the result omit the decimal points like\n    \"(spam)4(eggs)1\" (if sort_order is by quantity).\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    sort_order: CompositionSortOrder\n        order with which to sort the components when generating the flat string\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column that extracts the quantity of a given component.\n\n    If the component is not present in the composition, then the value in the column will be 0.0.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    component_name: str\n        name of the component from which to extract the quantity\n    normalize: Optional[bool]\n        whether to normalize the quantity by the sum of all component amounts. Default is false\n\n    \"\"\"",
        "\"\"\"[ALPHA] Name of the Nth biggest component.\n\n    If there are not N components in the composition, then this column will be empty.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    n: int\n        index of the component name to extract, starting with 1 for the biggest\n\n    \"\"\"",
        "\"\"\"[ALPHA] Quantity of the Nth biggest component.\n\n    If there are not N components in the composition, then this column will be empty.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    n: int\n        index of the component quantity to extract, starting with 1 for the biggest\n    normalize: Optional[bool]\n        whether to normalize the quantity by the sum of all component amounts. Default is false\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing the value of a string-valued variable.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n\n    \"\"\"",
        "\"\"\"[ALPHA] Column containing a representation of a molecular structure.\n\n    Parameters\n    ----------\n    data_source: str\n        name of the variable to use when populating the column\n    format: ChemicalDisplayFormat\n        the format in which to display the molecular structure\n\n    \"\"\""
    ],
    "functions": [
        "_attrs",
        "__eq__",
        "get_type",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs",
        "_attrs"
    ],
    "classes": [
        "CompositionSortOrder",
        "ChemicalDisplayFormat",
        "Column",
        "MeanColumn",
        "StdDevColumn",
        "QuantileColumn",
        "OriginalUnitsColumn",
        "MostLikelyCategoryColumn",
        "MostLikelyProbabilityColumn",
        "FlatCompositionColumn",
        "ComponentQuantityColumn",
        "NthBiggestComponentNameColumn",
        "NthBiggestComponentQuantityColumn",
        "IdentityColumn",
        "MolecularStructureColumn"
    ]
}