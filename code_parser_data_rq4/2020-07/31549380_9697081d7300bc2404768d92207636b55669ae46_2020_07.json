{
    "identifiers": [
        "flags",
        "Command",
        "NoPortsDefinedError",
        "InvalidPortMappingError",
        "ExpectedError",
        "cf",
        "getBalenaSdk",
        "stripIndent",
        "getOnlineTargetUuid",
        "_",
        "tunnelConnectionToDevice",
        "createServer",
        "Server",
        "Socket",
        "Bluebird",
        "tryAsInteger",
        "IArg",
        "Command",
        "stripIndent",
        "x",
        "tryAsInteger",
        "x",
        "flags",
        "flags",
        "cf",
        "TunnelCmd",
        "Logger",
        "getBalenaSdk",
        "logConnection",
        "fromHost",
        "fromPort",
        "localAddress",
        "localPort",
        "deviceAddress",
        "devicePort",
        "err",
        "fromHost",
        "fromPort",
        "localAddress",
        "localPort",
        "deviceAddress",
        "devicePort",
        "err",
        "logger",
        "logMessage",
        "err",
        "logger",
        "logMessage",
        "options",
        "NoPortsDefinedError",
        "getOnlineTargetUuid",
        "sdk",
        "sdk",
        "uuid",
        "logger",
        "device",
        "_",
        "options",
        "mapping",
        "mapping",
        "tunnelConnectionToDevice",
        "device",
        "remotePort",
        "sdk",
        "handler",
        "createServer",
        "client",
        "handler",
        "client",
        "logConnection",
        "client",
        "client",
        "client",
        "client",
        "device",
        "remotePort",
        "err",
        "logConnection",
        "client",
        "client",
        "client",
        "client",
        "device",
        "remotePort",
        "err",
        "server",
        "Bluebird",
        "resolve",
        "reject",
        "server",
        "reject",
        "server",
        "localPort",
        "localAddress",
        "resolve",
        "server",
        "logger",
        "localAddress",
        "localPort",
        "device",
        "remotePort",
        "err",
        "logger",
        "localAddress",
        "localPort",
        "device",
        "remotePort",
        "err",
        "localListeners",
        "results",
        "ExpectedError",
        "logger",
        "portMapping",
        "portMapping",
        "parseInt",
        "mappingElements",
        "mappingElements",
        "mappingElements",
        "localPort",
        "parseInt",
        "mappingElements",
        "localAddress",
        "mappingElements",
        "mappingElements",
        "localAddress",
        "mappingElements",
        "localPort",
        "parseInt",
        "mappingElements",
        "mappingElements",
        "InvalidPortMappingError",
        "portMapping",
        "remotePort",
        "localPort",
        "InvalidPortMappingError",
        "portMapping",
        "port",
        "port",
        "port",
        "MAX_PORT_VALUE"
    ],
    "literals": [
        "'@oclif/command'",
        "'../command'",
        "'../errors'",
        "'../utils/common-flags'",
        "'../utils/lazy'",
        "'../utils/patterns'",
        "'lodash'",
        "'../utils/tunnel'",
        "'net'",
        "'bluebird'",
        "'../utils/validation'",
        "'@oclif/parser/lib/args'",
        "string",
        "string",
        "Tunnel local ports to your balenaOS device.\n\n\t\tUse this command to open local ports which tunnel to listening ports on your balenaOS device.\n\n\t\tFor example, you could open port 8080 on your local machine to connect to your managed balenaOS\n\t\tdevice running a web server listening on port 3000.\n\n\t\tPort mappings are specified in the format: <remotePort>[:[localIP:]localPort]\n\t\tlocalIP defaults to 'localhost', and localPort defaults to the specified remotePort value.\n\n\t\tYou can tunnel multiple ports at any given time.\n\n\t\tNote: Port mappings must come after the deviceOrApplication parameter, as per examples.",
        "'# map remote port 22222 to localhost:22222'",
        "'$ balena tunnel myApp -p 22222'",
        "''",
        "'# map remote port 22222 to localhost:222'",
        "'$ balena tunnel 2ead211 -p 22222:222'",
        "''",
        "'# map remote port 22222 to any address on your host machine, port 22222'",
        "'$ balena tunnel 1546690 -p 22222:0.0.0.0'",
        "''",
        "'# map remote port 22222 to any address on your host machine, port 222'",
        "'$ balena tunnel myApp -p 22222:0.0.0.0:222'",
        "''",
        "'# multiple port tunnels can be specified at any one time'",
        "'$ balena tunnel myApp -p 8080:3000 -p 8081:9000'",
        "'deviceOrApplication'",
        "'device uuid or application name/id'",
        "'tunnel <deviceOrApplication>'",
        "'port mapping in the format <remotePort>[:[localIP:]localPort]'",
        "'p'",
        "'../utils/logger'",
        "string",
        "string",
        "string",
        "${fromHost}:${fromPort} => ${localAddress}:${localPort} ===> ${deviceAddress}:${devicePort}",
        "${logMessage} :: ${err.message}",
        "Opening a tunnel to ${device.uuid}...",
        "''",
        "''",
        "''",
        "''",
        "'error'",
        "- tunnelling ${localAddress}:${localPort} to ${device.uuid}:${remotePort}",
        "- not tunnelling ${localAddress}:${localPort} to ${\n\t\t\t\t\t\t\t\tdevice.uuid\n\t\t\t\t\t\t\t}:${remotePort}, failed ${JSON.stringify(err.message)}",
        "'No ports are valid for tunnelling'",
        "'Waiting for connections...'",
        "string",
        "':'",
        "'localhost'"
    ],
    "variables": [
        "options",
        "Logger",
        "logger",
        "sdk",
        "logConnection",
        "logMessage",
        "uuid",
        "device",
        "localListeners",
        "results",
        "mappingElements",
        "localAddress",
        "remotePort",
        "localPort",
        "remotePort",
        "MAX_PORT_VALUE"
    ],
    "comments": [
        "First element is always remotePort",
        "[1] could be localAddress or localPort",
        "[1] is localAddress, [2] is localPort",
        "Validate results"
    ],
    "docstrings": [
        "* @license\n * Copyright 2016-2020 Balena Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Parse a port mapping specification string in the format:\n\t *  <remotePort>[:[localIP:]localPort]\n\t * @param portMapping"
    ],
    "functions": [
        "run",
        "parsePortMapping",
        "isValidPort"
    ],
    "classes": [
        "TunnelCmd"
    ]
}