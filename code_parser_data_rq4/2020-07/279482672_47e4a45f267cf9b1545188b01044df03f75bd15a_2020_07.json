{
    "identifiers": [
        "pymodbus",
        "client",
        "sync",
        "ModbusSerialClient",
        "pymodbus",
        "payload",
        "BinaryPayloadDecoder",
        "pymodbus",
        "constants",
        "Endian",
        "pymodbus",
        "client",
        "sync",
        "ModbusTcpClient",
        "pymodbus",
        "compat",
        "iteritems",
        "paho",
        "mqtt",
        "client",
        "mqtt",
        "time",
        "tkinter",
        "Tk",
        "Frame",
        "root",
        "topFrame",
        "pack",
        "Button",
        "topFrame",
        "text",
        "command",
        "mqttClient",
        "button1",
        "pack",
        "side",
        "LEFT",
        "Button",
        "topFrame",
        "text",
        "command",
        "Exit_",
        "button3",
        "pack",
        "side",
        "LEFT",
        "root",
        "mainloop",
        "exit",
        "mqtt",
        "Client",
        "client",
        "connect",
        "host",
        "connect",
        "client",
        "publish",
        "funcC",
        "time",
        "sleep",
        "client",
        "connect",
        "host",
        "ModbusSerialClient",
        "method",
        "port",
        "baudrate",
        "timeout",
        "parity",
        "stopbits",
        "bytesize",
        "client",
        "connect",
        "x",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "client",
        "read_input_registers",
        "address",
        "ad1",
        "count",
        "unit",
        "result2",
        "registers",
        "result1",
        "registers",
        "AttributeError",
        "connect",
        "r",
        "pack",
        "r",
        "r",
        "unpack",
        "b",
        "ans",
        "list_A",
        "append",
        "ans",
        "x",
        "x",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "list_A",
        "allans",
        "client",
        "close",
        "allans",
        "main"
    ],
    "literals": [
        "\"Send\"",
        "\"Exit\"",
        "\"siamgreenergy.com\"",
        "\"Connecting to broker\"",
        "\"wlegat/wl002\"",
        "'rtu'",
        "'COM3'",
        "'N'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'0.00'",
        "'nan'",
        "'HH'",
        "'f'",
        "'%.2f'",
        "'x = '",
        "'V = '",
        "', '",
        "'I = '",
        "', '",
        "'W = '",
        "', '",
        "'PF = '",
        "', '",
        "'Hz = '",
        "', '",
        "'IAE kWh = '",
        "', '",
        "'EAE kWh = '",
        "', '",
        "'TAE kWh = '",
        "'allans: '",
        "'Cannot connect to the Modbus Server/Slave'"
    ],
    "variables": [
        "root",
        "topFrame",
        "button1",
        "button3",
        "host",
        "port",
        "client",
        "funcC",
        "client",
        "x",
        "list_A",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "ans",
        "ad1",
        "result1",
        "result2",
        "r",
        "b",
        "ans",
        "ans",
        "allans"
    ],
    "comments": [
        "button2 = Button(topFrame, text=\"Stop\",command=Stop_)",
        "button2.pack(side=LEFT)",
        "n = int(input((\"Refresh time(s): \"))) # input time to refresh",
        "print(\"Refresh every \", n,\" second.\")",
        "time to refresh",
        "while True: # loop for sending infomation.",
        "funcC = connect()",
        "client.publish(\"wlegat/wl002\",funcC)",
        "time.sleep(n)       # time to refresh",
        "client.connect(host)",
        "ad1=int(input(\"address1: \")) # Address input normal",
        "1 Voltage",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "7 Current",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "13 Active power",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "31 Power factor",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "71 Frequency",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "73",
        "[Uint32/2, Uint32/1]",
        "75 Import active energy",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]",
        "343 Total active energy",
        "Uint32/1",
        "Uint32/2",
        "[Uint32/2, Uint32/1]"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "Exit_",
        "mqttClient",
        "connect"
    ],
    "classes": []
}