{
    "identifiers": [
        "com",
        "scan4kids",
        "project",
        "com",
        "scan4kids",
        "project",
        "daos",
        "AlbumsRepository",
        "com",
        "scan4kids",
        "project",
        "daos",
        "PhotosRepository",
        "com",
        "scan4kids",
        "project",
        "daos",
        "UsersRepository",
        "com",
        "scan4kids",
        "project",
        "models",
        "Album",
        "com",
        "scan4kids",
        "project",
        "models",
        "Photo",
        "com",
        "scan4kids",
        "project",
        "models",
        "User",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "AutoConfigureMockMvc",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "mock",
        "web",
        "MockHttpSession",
        "org",
        "springframework",
        "security",
        "crypto",
        "password",
        "PasswordEncoder",
        "org",
        "springframework",
        "test",
        "context",
        "junit4",
        "SpringRunner",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "javax",
        "servlet",
        "http",
        "HttpSession",
        "org",
        "hamcrest",
        "Matchers",
        "containsString",
        "org",
        "junit",
        "Assert",
        "assertNotNull",
        "org",
        "springframework",
        "security",
        "test",
        "web",
        "servlet",
        "request",
        "SecurityMockMvcRequestPostProcessors",
        "csrf",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "post",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "redirectedUrl",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "RunWith",
        "SpringBootTest",
        "classes",
        "AutoConfigureMockMvc",
        "testUser",
        "testAlbum",
        "httpSession",
        "Autowired",
        "mvc",
        "Autowired",
        "usersDao",
        "Autowired",
        "albumsDao",
        "Autowired",
        "photosDao",
        "Autowired",
        "passwordEncoder",
        "Before",
        "testUser",
        "usersDao",
        "findByUsername",
        "testUser",
        "newUser",
        "newUser",
        "setUsername",
        "newUser",
        "setPassword",
        "passwordEncoder",
        "encode",
        "newUser",
        "setPasswordToConfirm",
        "passwordEncoder",
        "encode",
        "newUser",
        "setEmail",
        "testUser",
        "usersDao",
        "save",
        "newUser",
        "httpSession",
        "mvc",
        "perform",
        "post",
        "csrf",
        "param",
        "param",
        "andExpect",
        "status",
        "HttpStatus",
        "FOUND",
        "value",
        "andExpect",
        "redirectedUrl",
        "andReturn",
        "getRequest",
        "getSession",
        "Test",
        "assertNotNull",
        "mvc",
        "Test",
        "assertNotNull",
        "httpSession",
        "Test",
        "setup",
        "contextLoads",
        "testIfUserSessionIsActive",
        "testAlbum",
        "albumsDao",
        "findByTitle",
        "testAlbum",
        "newAlbum",
        "newAlbum",
        "setTitle",
        "newAlbum",
        "setDescription",
        "testAlbum",
        "albumsDao",
        "save",
        "newAlbum",
        "someLink",
        "mvc",
        "perform",
        "post",
        "testAlbum",
        "getId",
        "csrf",
        "session",
        "httpSession",
        "param",
        "param",
        "someLink",
        "andExpect",
        "status",
        "is3xxRedirection"
    ],
    "literals": [
        "\"testUser\"",
        "\"testUser\"",
        "\"pass\"",
        "\"pass\"",
        "\"testUser@codeup.com\"",
        "\"/login\"",
        "\"username\"",
        "\"testUser\"",
        "\"password\"",
        "\"pass\"",
        "\"/dashboard\"",
        "\"testAlbumTitle\"",
        "\"testAlbumTitle\"",
        "\"testAlbumDesc\"",
        "\"https://images.pexels.com/photos/761295/pexels-photo-761295.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"",
        "\"/albums/\"",
        "\"/photos/create\"",
        "\"description\"",
        "\"genericDescription\"",
        "\"link\""
    ],
    "variables": [
        "testUser",
        "testAlbum",
        "httpSession",
        "mvc",
        "usersDao",
        "albumsDao",
        "photosDao",
        "passwordEncoder"
    ],
    "comments": [
        "Creates the test user if it does not exist",
        "Throws a POST request to /login and expect a redirection to the dashboard page after being logged in",
        "sanity test, to make sure the MVC bean is working",
        "make sure the returned the user session is active and not null",
        "check to see if there's an existing album",
        "if not, create an album",
        "Create a photo. make a POST request to /albums/{albumid}/photos/create and expect a redirection",
        "add all the required parameters to the request"
    ],
    "docstrings": [],
    "functions": [
        "setup",
        "contextLoads",
        "testIfUserSessionIsActive",
        "testCreatePhoto"
    ],
    "classes": [
        "PhotosIntegrationTests"
    ]
}