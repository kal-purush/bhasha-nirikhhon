{
    "identifiers": [
        "me",
        "RockinChaos",
        "itemjoin",
        "listeners",
        "org",
        "bukkit",
        "Material",
        "org",
        "bukkit",
        "entity",
        "Entity",
        "org",
        "bukkit",
        "entity",
        "Player",
        "org",
        "bukkit",
        "EventHandler",
        "org",
        "bukkit",
        "Listener",
        "org",
        "bukkit",
        "entity",
        "EntityPickupItemEvent",
        "org",
        "bukkit",
        "inventory",
        "InventoryAction",
        "org",
        "bukkit",
        "inventory",
        "InventoryClickEvent",
        "org",
        "bukkit",
        "inventory",
        "ItemStack",
        "me",
        "RockinChaos",
        "itemjoin",
        "handlers",
        "ItemHandler",
        "me",
        "RockinChaos",
        "itemjoin",
        "handlers",
        "PlayerHandler",
        "me",
        "RockinChaos",
        "itemjoin",
        "item",
        "ItemMap",
        "me",
        "RockinChaos",
        "itemjoin",
        "item",
        "ItemUtilities",
        "EventHandler",
        "ignoreCancelled",
        "player",
        "getWhoClicked",
        "getCurrentItem",
        "getCursor",
        "getCurrentItem",
        "getType",
        "Material",
        "AIR",
        "getCursor",
        "getType",
        "Material",
        "AIR",
        "itemMap",
        "ItemUtilities",
        "getUtilities",
        "getItemMap",
        "getCursor",
        "player",
        "getWorld",
        "itemMap",
        "itemMap",
        "isSimilar",
        "getCurrentItem",
        "ItemUtilities",
        "getUtilities",
        "isAllowed",
        "player",
        "getCursor",
        "setCancelled",
        "ItemHandler",
        "getItem",
        "stackItems",
        "player",
        "getCursor",
        "getCurrentItem",
        "getAction",
        "equals",
        "InventoryAction",
        "MOVE_TO_OTHER_INVENTORY",
        "getCurrentItem",
        "getCurrentItem",
        "getType",
        "Material",
        "AIR",
        "ItemUtilities",
        "getUtilities",
        "isAllowed",
        "player",
        "getCurrentItem",
        "itemMap",
        "ItemUtilities",
        "getUtilities",
        "getItemMap",
        "getCurrentItem",
        "player",
        "getWorld",
        "setCancelled",
        "REMAINING_STACK_SIZE",
        "getCurrentItem",
        "getAmount",
        "itemMap",
        "getSlot",
        "getView",
        "getType",
        "name",
        "equalsIgnoreCase",
        "i",
        "i",
        "i",
        "itemMap",
        "isSimilar",
        "player",
        "getInventory",
        "getItem",
        "i",
        "REMAINING_STACK_SIZE",
        "ItemHandler",
        "getItem",
        "stackItems",
        "player",
        "getCurrentItem",
        "player",
        "getInventory",
        "getItem",
        "i",
        "getSlot",
        "REMAINING_STACK_SIZE",
        "itemMap",
        "getView",
        "getType",
        "name",
        "equalsIgnoreCase",
        "i",
        "i",
        "i",
        "itemMap",
        "isSimilar",
        "player",
        "getInventory",
        "getItem",
        "i",
        "REMAINING_STACK_SIZE",
        "ItemHandler",
        "getItem",
        "stackItems",
        "player",
        "getCurrentItem",
        "player",
        "getInventory",
        "getItem",
        "i",
        "getSlot",
        "REMAINING_STACK_SIZE",
        "REMAINING_STACK_SIZE",
        "setCancelled",
        "PlayerHandler",
        "getPlayer",
        "updateInventory",
        "player",
        "EventHandler",
        "ignoreCancelled",
        "entity",
        "getEntity",
        "item1",
        "getItem",
        "getItemStack",
        "entity",
        "item1",
        "item1",
        "getType",
        "Material",
        "AIR",
        "ItemUtilities",
        "getUtilities",
        "isAllowed",
        "getEntity",
        "item1",
        "player",
        "getEntity",
        "itemMap",
        "ItemUtilities",
        "getUtilities",
        "getItemMap",
        "item1",
        "player",
        "getWorld",
        "REMAINING_STACK_SIZE",
        "item1",
        "getAmount",
        "setCancelled",
        "i",
        "i",
        "i",
        "itemMap",
        "itemMap",
        "isSimilar",
        "player",
        "getInventory",
        "getItem",
        "i",
        "REMAINING_STACK_SIZE",
        "ItemHandler",
        "getItem",
        "stackItems",
        "player",
        "item1",
        "player",
        "getInventory",
        "getItem",
        "i",
        "REMAINING_STACK_SIZE",
        "REMAINING_STACK_SIZE",
        "setCancelled",
        "getItem",
        "remove",
        "PlayerHandler",
        "getPlayer",
        "updateInventory",
        "player"
    ],
    "literals": [
        "\"stackable\"",
        "\"stackable\"",
        "\"CRAFTING\"",
        "\"CRAFTING\"",
        "\"stackable\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* ItemJoin\n * Copyright (C) CraftationGaming <https://www.craftationgaming.com/>\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "* Stacks custom items with the Stackable itemflag defined.\n\t* \n\t* @param event - InventoryClickEvent",
        "* Stacks custom items with the Stackable itemflag defined.\n\t* \n\t* @param event - EntityPickupItemEvent"
    ],
    "functions": [
        "onClickStackable",
        "onPickupStackable"
    ],
    "classes": [
        "Stackable"
    ]
}