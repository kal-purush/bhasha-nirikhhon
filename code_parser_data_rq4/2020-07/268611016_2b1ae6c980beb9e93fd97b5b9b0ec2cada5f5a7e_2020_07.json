{
    "identifiers": [
        "os",
        "io",
        "requests",
        "glob",
        "zipfile",
        "shutil",
        "pathlib",
        "Path",
        "info_file_path",
        "Path",
        "resolve",
        "parent",
        "parent",
        "as_posix",
        "os",
        "path",
        "join",
        "torchani_dir",
        "os",
        "path",
        "expanduser",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "resource_path",
        "info_file_path",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "local_dir",
        "info_file_path",
        "local_dir",
        "info_file_path",
        "SUPPORTED_INFO_FILES",
        "format",
        "repo_name",
        "tag_name",
        "format",
        "repo_name",
        "tag_name",
        "requests",
        "get",
        "url",
        "zipfile",
        "ZipFile",
        "io",
        "BytesIO",
        "resource_res",
        "content",
        "resource_zip",
        "extractall",
        "resource_path",
        "PermissionError",
        "resource_zip",
        "extractall",
        "local_dir",
        "local_dir",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "resource_path",
        "extracted_name",
        "f",
        "files",
        "shutil",
        "move",
        "f",
        "resource_path",
        "shutil",
        "shutil",
        "rmtree",
        "os",
        "path",
        "join",
        "resource_path",
        "extracted_name",
        "ValueError",
        "format",
        "info_file_path",
        "resource_path",
        "local_dir",
        "SUPPORTED_INFO_FILES",
        "_get_resources",
        "resource_path",
        "info_file_path",
        "resource_path",
        "info_file",
        "open",
        "os",
        "path",
        "join",
        "resource_path",
        "info_file",
        "f",
        "x",
        "strip",
        "x",
        "f",
        "readlines",
        "lines",
        "os",
        "path",
        "join",
        "resource_path",
        "const_file_path",
        "os",
        "path",
        "join",
        "resource_path",
        "sae_file_path",
        "os",
        "path",
        "join",
        "resource_path",
        "ensemble_prefix_path",
        "ensemble_size",
        "const_file",
        "sae_file",
        "ensemble_prefix",
        "ensemble_size"
    ],
    "literals": [
        "'parse_neurochem_resources'",
        "'ani-1ccx_8x.info'",
        "'ani-1x_8x.info'",
        "'ani-2x_8x.info'",
        "'resources/'",
        "'~/.local/torchani/'",
        "\"ani-model-zoo\"",
        "\"ani-2x\"",
        "'{}-{}'",
        "\"https://github.com/aiqm/{}/archive/{}.zip\"",
        "'Downloading ANI model parameters ...'",
        "\"resources\"",
        "\"*\"",
        "'File {0} could not be found either in {1} or {2}\\n'",
        "'It is also not one of the supported builtin info files:'",
        "' {3}'"
    ],
    "variables": [
        "__all__",
        "SUPPORTED_INFO_FILES",
        "torchani_dir",
        "resource_path",
        "local_dir",
        "resource_path",
        "repo_name",
        "tag_name",
        "extracted_name",
        "url",
        "resource_res",
        "resource_zip",
        "resource_path",
        "files",
        "lines",
        "const_file_path",
        "sae_file_path",
        "ensemble_prefix_path",
        "ensemble_size",
        "const_file",
        "sae_file",
        "ensemble_prefix",
        "ensemble_size"
    ],
    "comments": [
        "No action needed if the info file can be located in the default path",
        "if the info file is not located in the default path, ~/.local/torchani",
        "is tried as an alternative",
        "if all else fails files are downloaded and extracted ONLY if a",
        "correct info file path is passed, otherwise an error is raised",
        "const_file: Path to the file with the builtin constants.",
        "sae_file: Path to the file with the Self Atomic Energies.",
        "ensemble_prefix: Prefix of the neurochem resource directories."
    ],
    "docstrings": [],
    "functions": [
        "parse_neurochem_resources",
        "_get_resources"
    ],
    "classes": []
}