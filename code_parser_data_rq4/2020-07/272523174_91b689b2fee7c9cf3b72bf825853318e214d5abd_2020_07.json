{
    "identifiers": [
        "request",
        "agent",
        "INestApplication",
        "Test",
        "AppService",
        "AppController",
        "AppModule",
        "AgentGovernance",
        "Logger",
        "describe",
        "delayFunc",
        "ms",
        "resolve",
        "setTimeout",
        "resolve",
        "ms",
        "beforeAll",
        "issuerApiKey",
        "holderApiKey",
        "it",
        "issuerApiKey",
        "issuerDid",
        "request",
        "hostUrl",
        "data",
        "res",
        "expect",
        "res",
        "issuerAdminPort",
        "res",
        "issuerId",
        "res",
        "it",
        "holderApiKey",
        "holderDid",
        "request",
        "hostUrl",
        "data",
        "res",
        "expect",
        "res",
        "holderAdminPort",
        "res",
        "holderId",
        "res",
        "it",
        "delayFunc",
        "issuerAdminPort",
        "request",
        "agentUrl",
        "issuerApiKey",
        "res",
        "expect",
        "res",
        "expect",
        "res",
        "invitation",
        "res",
        "issuerConnectionId",
        "res",
        "Logger",
        "issuerConnectionId",
        "it",
        "delayFunc",
        "holderAdminPort",
        "request",
        "agentUrl",
        "holderApiKey",
        "invitation",
        "res",
        "expect",
        "res",
        "expect",
        "res",
        "holderConnectionId",
        "res",
        "Logger",
        "holderConnectionId",
        "it",
        "delayFunc",
        "issuerAdminPort",
        "request",
        "agentUrl",
        "issuerApiKey",
        "res",
        "expect",
        "res",
        "res",
        "conn",
        "conn",
        "issuerConnectionId",
        "found",
        "expect",
        "conn",
        "expect",
        "found",
        "it",
        "holderAdminPort",
        "request",
        "agentUrl",
        "holderApiKey",
        "res",
        "expect",
        "res",
        "res",
        "conn",
        "conn",
        "holderConnectionId",
        "found",
        "expect",
        "conn",
        "expect",
        "found",
        "it",
        "issuerId",
        "request",
        "hostUrl",
        "data",
        "it",
        "holderId",
        "request",
        "hostUrl",
        "data"
    ],
    "literals": [
        "'supertest'",
        "\"@nestjs/common\"",
        "\"@nestjs/testing\"",
        "\"../src/app/app.service\"",
        "\"../src/app/app.controller\"",
        "'../src/app/app.module'",
        "'../src/controller/agent.governance'",
        "\"protocol-common/logger\"",
        "'Create Connections using policies (e2e)'",
        "'http://localhost:3010'",
        "'Th7MpTaRZVRYnPiabds81Y'",
        "'XTv4YCzYj8jqZgL1wVMGGL'",
        "'adminApiKey'",
        "'adminApiKey'",
        "'Spin up agent 1 (issuer)'",
        "'issuerAgent'",
        "'walletId11'",
        "'walletId11'",
        "'000000000000000000000000Steward1'",
        "'/v1/manager'",
        "'Spin up agent 2 (holder)'",
        "'holderAgent'",
        "'walletId22'",
        "'walletId22'",
        "'000000000000000000000000000ncra1'",
        "'/v1/manager'",
        "'Create connection invite to holder from issuer'",
        "http://localhost:${issuerAdminPort}",
        "'/connections/create-invitation'",
        "'x-api-key'",
        "issuer created connection_id ${issuerConnectionId}",
        "'Holder receives to connection invite'",
        "http://localhost:${holderAdminPort}",
        "'/connections/receive-invitation'",
        "'x-api-key'",
        "holder created connection_id ${holderConnectionId}",
        "'List Issuer connections'",
        "http://localhost:${issuerAdminPort}",
        "/connections",
        "'x-api-key'",
        "'response'",
        "'List Holder connections'",
        "http://localhost:${holderAdminPort}",
        "/connections",
        "'x-api-key'",
        "'active'",
        "'Spin down agent 1'",
        "'/v1/manager'",
        "'Spin down agent 2'",
        "'/v1/manager'"
    ],
    "variables": [
        "app",
        "issuerAdminPort",
        "issuerId",
        "issuerApiKey",
        "holderAdminPort",
        "holderId",
        "holderApiKey",
        "invitation",
        "issuerConnectionId",
        "holderConnectionId",
        "hostUrl",
        "issuerDid",
        "holderDid",
        "delayFunc",
        "data",
        "data",
        "agentUrl",
        "agentUrl",
        "agentUrl",
        "found",
        "agentUrl",
        "found",
        "data",
        "data"
    ],
    "comments": [
        "Integration test to show the gammit of the exchange of messages between\n    agents for connection, credential and proof protocols\n\n    Required: manually start aries agency prior to running tests\n    run `docker-compose up` in the aries-guardianship-agency directory",
        "gonna wait here to let the system catch up since since spawning agents",
        "also creates connections",
        "wait 15 sec"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}