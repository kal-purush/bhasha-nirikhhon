{
    "identifiers": [
        "os",
        "json",
        "time",
        "strftime",
        "sys",
        "hbaselines",
        "utils",
        "misc",
        "ensure_dir",
        "hbaselines",
        "utils",
        "train",
        "parse_options",
        "get_hyperparameters",
        "hbaselines",
        "algorithms",
        "OffPolicyRLAlgorithm",
        "env",
        "policy",
        "hp",
        "steps",
        "dir_name",
        "evaluate",
        "seed",
        "eval_interval",
        "log_interval",
        "save_interval",
        "initial_exploration_steps",
        "env",
        "evaluate",
        "OffPolicyRLAlgorithm",
        "policy",
        "policy",
        "env",
        "env",
        "eval_env",
        "eval_env",
        "hp",
        "alg",
        "learn",
        "total_steps",
        "steps",
        "log_dir",
        "dir_name",
        "log_interval",
        "log_interval",
        "eval_interval",
        "eval_interval",
        "save_interval",
        "save_interval",
        "initial_exploration_steps",
        "initial_exploration_steps",
        "seed",
        "seed",
        "args",
        "base_dir",
        "i",
        "args",
        "n_training",
        "args",
        "seed",
        "i",
        "strftime",
        "os",
        "path",
        "join",
        "base_dir",
        "format",
        "args",
        "env_name",
        "now",
        "ensure_dir",
        "dir_name",
        "args",
        "alg",
        "hbaselines",
        "multiagent",
        "h_td3",
        "MultiGoalConditionedPolicy",
        "args",
        "alg",
        "hbaselines",
        "multiagent",
        "h_sac",
        "MultiGoalConditionedPolicy",
        "ValueError",
        "format",
        "args",
        "alg",
        "get_hyperparameters",
        "args",
        "MultiGoalConditionedPolicy",
        "hp",
        "copy",
        "seed",
        "args",
        "env_name",
        "args",
        "alg",
        "now",
        "open",
        "os",
        "path",
        "join",
        "dir_name",
        "f",
        "json",
        "dump",
        "params_with_extra",
        "f",
        "sort_keys",
        "indent",
        "run_exp",
        "env",
        "args",
        "env_name",
        "policy",
        "MultiGoalConditionedPolicy",
        "hp",
        "hp",
        "steps",
        "args",
        "total_steps",
        "dir_name",
        "dir_name",
        "evaluate",
        "args",
        "evaluate",
        "seed",
        "seed",
        "eval_interval",
        "args",
        "eval_interval",
        "log_interval",
        "args",
        "log_interval",
        "save_interval",
        "args",
        "save_interval",
        "initial_exploration_steps",
        "args",
        "initial_exploration_steps",
        "main",
        "parse_options",
        "description",
        "example_usage",
        "EXAMPLE_USAGE",
        "args",
        "sys",
        "argv"
    ],
    "literals": [
        "'python run_multi_hrl.py \"multiagent-ring-v0\" --total_steps 1e6'",
        "\"%Y-%m-%d-%H:%M:%S\"",
        "'{}/{}'",
        "\"TD3\"",
        "\"SAC\"",
        "\"Unknown algorithm: {}\"",
        "'seed'",
        "'env_name'",
        "'policy_name'",
        "\"MultiGoalConditionedPolicy\"",
        "'algorithm'",
        "'date/time'",
        "'hyperparameters.json'",
        "'w'",
        "'__main__'",
        "'Test the performance of multi-agent goal-conditioned '",
        "'hierarchical models on various environments.'",
        "'data/multi-goal-conditioned'"
    ],
    "variables": [
        "EXAMPLE_USAGE",
        "eval_env",
        "alg",
        "seed",
        "now",
        "dir_name",
        "hp",
        "params_with_extra",
        "params_with_extra",
        "params_with_extra",
        "params_with_extra",
        "params_with_extra",
        "params_with_extra"
    ],
    "comments": [
        "perform training",
        "value of the next seed",
        "The time when the current experiment started.",
        "Create a save directory folder (if it doesn't exist).",
        "Get the policy class.",
        "Get the hyperparameters.",
        "add the seed for logging purposes",
        "Add the hyperparameters to the folder."
    ],
    "docstrings": [
        "\"\"\"A runner script for multi-agent goal-conditioned hierarchical models.\"\"\"",
        "\"\"\"Run a single training procedure.\n\n    Parameters\n    ----------\n    env : str or gym.Env\n        the training/testing environment\n    policy : type [ hbaselines.base_policies.ActorCriticPolicy ]\n        the policy class to use\n    hp : dict\n        additional algorithm hyper-parameters\n    steps : int\n        total number of training steps\n    dir_name : str\n        the location the results files are meant to be stored\n    evaluate : bool\n        whether to include an evaluation environment\n    seed : int\n        specified the random seed for numpy, tensorflow, and random\n    eval_interval : int\n        number of simulation steps in the training environment before an\n        evaluation is performed\n    log_interval : int\n        the number of training steps before logging training results\n    save_interval : int\n        number of simulation steps in the training environment before the model\n        is saved\n    initial_exploration_steps : int\n        number of timesteps that the policy is run before training to\n        initialize the replay buffer with samples\n    \"\"\"",
        "\"\"\"Execute multiple training operations.\"\"\""
    ],
    "functions": [
        "run_exp",
        "main"
    ],
    "classes": []
}