{
    "identifiers": [
        "require",
        "parseExpression",
        "data",
        "firstExpression",
        "reverseExpression",
        "data",
        "secondExpression",
        "doCalculation",
        "secondExpression",
        "solveExpression",
        "data",
        "data",
        "data",
        "rhsMap",
        "operators",
        "data",
        "data",
        "rhsMap",
        "data",
        "data",
        "data",
        "data",
        "lhsMap",
        "operators",
        "data",
        "data",
        "data",
        "lhsMap",
        "operators",
        "data",
        "data",
        "data",
        "lhsMap",
        "data",
        "getRhs",
        "data",
        "getLhs",
        "data",
        "key",
        "lhs",
        "arrayOperators",
        "key",
        "array",
        "lhs",
        "key",
        "array",
        "key",
        "rhsKey",
        "lhs",
        "key",
        "arrayOperators",
        "rhsKey",
        "i",
        "lhs",
        "key",
        "rhsKey",
        "i",
        "i",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "array",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "rhsKey",
        "array",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "key",
        "rhs",
        "arrayOperators",
        "key",
        "array",
        "key",
        "array",
        "rhs",
        "key",
        "array",
        "data",
        "getRhs",
        "data",
        "getLhs",
        "data",
        "key",
        "rhs",
        "arrayOperators",
        "key",
        "array",
        "key",
        "array",
        "array",
        "rhs",
        "key",
        "key",
        "lhs",
        "arrayOperators",
        "key",
        "array",
        "oppositeOperators",
        "key",
        "array",
        "lhs",
        "key",
        "array",
        "rhsKey",
        "lhs",
        "key",
        "arrayOperators",
        "rhsKey",
        "i",
        "lhs",
        "key",
        "rhsKey",
        "i",
        "i",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "oppositeOperators",
        "rhsKey",
        "array",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "lhs",
        "key",
        "rhsKey",
        "array",
        "array",
        "array",
        "a",
        "a",
        "checkOpearator",
        "a",
        "result",
        "operationArray",
        "operationArray",
        "i",
        "operationArray",
        "i",
        "doOperation",
        "operationArray",
        "operationArray",
        "i",
        "operationArray",
        "operationArray",
        "i",
        "operationArray",
        "operationArray",
        "i",
        "operationArray",
        "result",
        "operationArray",
        "operationArray",
        "operand1",
        "opearand2",
        "arrayOperators",
        "operand1",
        "opearand2",
        "arrayOperators",
        "operand1",
        "opearand2",
        "arrayOperators",
        "operand1",
        "opearand2",
        "arrayOperators",
        "operand1",
        "opearand2"
    ],
    "literals": [
        "'./data.json'",
        "\"add\"",
        "\"+\"",
        "\"subtract\"",
        "\"-\"",
        "\"multiply\"",
        "\"*\"",
        "\"divide\"",
        "\"/\"",
        "\"equal\"",
        "\"=\"",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\"",
        "\"=\"",
        "\"+\"",
        "\"-\"",
        "\"-\"",
        "\"+\"",
        "\"*\"",
        "\"/\"",
        "\"/\"",
        "\"*\"",
        "\",\"",
        "\"\"",
        "\",\"",
        "\"\"",
        "\"Answer: \"",
        "\"rhs\"",
        "\"(\"",
        "\")\"",
        "\"(\"",
        "\")\"",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\"",
        "'number'",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\""
    ],
    "variables": [
        "data",
        "operators",
        "arrayOperators",
        "oppositeOperators",
        "firstExpression",
        "secondExpression",
        "solveExpression",
        "rhsMap",
        "lhsMap",
        "array",
        "rhs",
        "lhs",
        "i",
        "array",
        "rhs",
        "lhs",
        "i",
        "checkOpearator",
        "operationArray",
        "i",
        "result"
    ],
    "comments": [
        "1st Expression",
        "2nd Expression",
        "Result",
        "Functions"
    ],
    "docstrings": [],
    "functions": [
        "getRhs",
        "getLhs",
        "parseExpression",
        "reverseExpression",
        "doCalculation",
        "result",
        "doOperation"
    ],
    "classes": []
}