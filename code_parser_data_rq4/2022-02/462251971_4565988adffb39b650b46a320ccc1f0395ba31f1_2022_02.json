{
    "identifiers": [
        "argparse",
        "sys",
        "numpy",
        "np",
        "datetime",
        "date",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sys",
        "path",
        "append",
        "intervals",
        "PICI_deep_ensemble",
        "deep_ensemble_prediction",
        "PICI_bootstrapped_deep_ensemble",
        "PICI_concrete_dropout",
        "PI_QD_ensemble",
        "CI_naive_bootstrap",
        "utils",
        "load_data",
        "target_simulation",
        "gen_new_targets",
        "create_true_function_and_variance",
        "create_true_function_and_variance_NN",
        "neural_networks",
        "gen_deep_ensemble",
        "gen_extra_deep_ensemble",
        "gen_QD_ensemble",
        "DropoutNetwork",
        "gen_bootstrap_ensemble",
        "metrics",
        "Interval_metrics",
        "klepto",
        "archives",
        "dir_archive",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "required",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "np",
        "array",
        "args",
        "n_hidden",
        "args",
        "n_ensembles",
        "args",
        "dir",
        "args",
        "alphas",
        "args",
        "N_simulations",
        "args",
        "distribution",
        "args",
        "retrain_fraction",
        "args",
        "simulation_method",
        "args",
        "number_of_epochs",
        "data_directory",
        "data_directory",
        "load_data",
        "data_directory",
        "simulation_method",
        "create_true_function_and_variance",
        "X",
        "Y",
        "simulation_method",
        "create_true_function_and_variance_NN",
        "X",
        "Y",
        "train_test_split",
        "X",
        "Y",
        "test_size",
        "random_state",
        "len",
        "X_test",
        "Interval_metrics",
        "N_simulations",
        "alphas",
        "N_test",
        "Interval_metrics",
        "N_simulations",
        "alphas",
        "N_test",
        "Interval_metrics",
        "N_simulations",
        "alphas",
        "N_test",
        "Interval_metrics",
        "N_simulations",
        "alphas",
        "N_test",
        "Interval_metrics",
        "N_simulations",
        "alphas",
        "N_test",
        "np",
        "zeros",
        "N_simulations",
        "N_test",
        "np",
        "zeros",
        "N_simulations",
        "N_test",
        "np",
        "random",
        "seed",
        "np",
        "np",
        "round",
        "n_epochs",
        "retrain_fraction",
        "i",
        "N_simulations",
        "i",
        "N_simulations",
        "gen_new_targets",
        "X_train",
        "f",
        "var_true",
        "dist",
        "distribution",
        "gen_new_targets",
        "X_test",
        "f",
        "var_true",
        "dist",
        "distribution",
        "f",
        "X_test",
        "np",
        "sqrt",
        "var_true",
        "X_test",
        "gen_deep_ensemble",
        "X_train",
        "Y_train_new",
        "M",
        "n_hidden",
        "n_epochs",
        "n_epochs",
        "save_epoch",
        "save_epoch",
        "verbose",
        "gen_extra_deep_ensemble",
        "X_train",
        "deep_networks",
        "retrain_epochs",
        "n_epochs",
        "save_epoch",
        "gen_bootstrap_ensemble",
        "X_train",
        "Y_train",
        "M",
        "n_hidden",
        "n_epochs",
        "n_epochs",
        "DropoutNetwork",
        "X_train",
        "Y_train_new",
        "n_hidden",
        "n_epochs",
        "n_epochs",
        "verbose",
        "alpha",
        "alphas",
        "QD_ens",
        "append",
        "gen_QD_ensemble",
        "X_train",
        "Y_train_new",
        "M",
        "n_hidden",
        "alpha",
        "n_epochs",
        "n_epochs",
        "verbose",
        "deep_networks",
        "f",
        "X_test",
        "f_test",
        "extra_deep_networks",
        "f",
        "X_test",
        "deep_networks",
        "f",
        "X_test",
        "DE_metrics",
        "update_bias",
        "deep_ensemble_prediction",
        "deep_networks",
        "X_test",
        "f_test",
        "simulation",
        "i",
        "DE_metrics",
        "update_error",
        "deep_ensemble_prediction",
        "deep_networks",
        "X_test",
        "Y_test",
        "simulation",
        "i",
        "NB_metrics",
        "update_error",
        "deep_ensemble_prediction",
        "naive_bootstrap_networks",
        "X_test",
        "Y_test",
        "simulation",
        "i",
        "Dropout_metrics",
        "update_error",
        "concrete_dropout_model",
        "f",
        "X_test",
        "Y_test",
        "simulation",
        "i",
        "j",
        "alpha",
        "alphas",
        "PICI_concrete_dropout",
        "concrete_dropout_model",
        "X_test",
        "alpha",
        "PICI_deep_ensemble",
        "deep_networks",
        "X_test",
        "alpha",
        "PICI_bootstrapped_deep_ensemble",
        "deep_networks",
        "extra_deep_networks",
        "X_test",
        "alpha",
        "PI_QD_ensemble",
        "QD_ens",
        "j",
        "X_test",
        "CI_naive_bootstrap",
        "naive_bootstrap_networks",
        "X_test",
        "alpha",
        "BDE_metrics",
        "update_CI",
        "CI_BDE",
        "f_test",
        "simulation",
        "i",
        "alpha",
        "j",
        "BDE_metrics",
        "update_PI",
        "PI_BDE",
        "f_test",
        "sigma_test",
        "distribution",
        "distribution",
        "simulation",
        "i",
        "alpha",
        "j",
        "DE_metrics",
        "update_CI",
        "CI_DE",
        "f_test",
        "simulation",
        "i",
        "alpha",
        "j",
        "DE_metrics",
        "update_PI",
        "PI_DE",
        "f_test",
        "sigma_test",
        "distribution",
        "distribution",
        "simulation",
        "i",
        "alpha",
        "j",
        "Dropout_metrics",
        "update_CI",
        "CI_CD",
        "f_test",
        "simulation",
        "i",
        "alpha",
        "j",
        "Dropout_metrics",
        "update_PI",
        "PI_CD",
        "f_test",
        "sigma_test",
        "distribution",
        "distribution",
        "simulation",
        "i",
        "alpha",
        "j",
        "QD_metrics",
        "update_PI",
        "PI_QD",
        "f_test",
        "sigma_test",
        "distribution",
        "distribution",
        "simulation",
        "i",
        "alpha",
        "j",
        "NB_metrics",
        "update_CI",
        "CI_NB",
        "f_test",
        "simulation",
        "i",
        "alpha",
        "j",
        "metric",
        "eval",
        "metric",
        "metric",
        "metrics_list",
        "dir_archive",
        "_METRICS_LOCATION",
        "metrics",
        "serialized",
        "results",
        "dump",
        "open",
        "_RESULTS_LOG",
        "myfile",
        "myfile",
        "write",
        "data_directory",
        "M",
        "alphas",
        "N_simulations",
        "distribution",
        "retrain_fraction",
        "simulation_method",
        "myfile",
        "write",
        "n_epochs",
        "myfile",
        "write",
        "date",
        "today",
        "myfile",
        "write",
        "myfile",
        "write",
        "DE_metrics",
        "Brier_score",
        "myfile",
        "write",
        "BDE_metrics",
        "Brier_score",
        "myfile",
        "write",
        "Dropout_metrics",
        "Brier_score",
        "myfile",
        "write",
        "QD_metrics",
        "Brier_score",
        "myfile",
        "write",
        "myfile",
        "write",
        "myfile",
        "write",
        "DE_metrics",
        "Brier_score",
        "myfile",
        "write",
        "BDE_metrics",
        "Brier_score",
        "myfile",
        "write",
        "Dropout_metrics",
        "Brier_score",
        "myfile",
        "write",
        "NB_metrics",
        "Brier_score",
        "myfile",
        "write",
        "myfile",
        "write",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "DE_metrics",
        "PI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "BDE_metrics",
        "PI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "Dropout_metrics",
        "PI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "QD_metrics",
        "PI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "myfile",
        "write",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "DE_metrics",
        "CI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "BDE_metrics",
        "CI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "Dropout_metrics",
        "CI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "np",
        "mean",
        "np",
        "mean",
        "NB_metrics",
        "CI_width",
        "axis",
        "axis",
        "myfile",
        "write",
        "myfile",
        "write",
        "myfile",
        "write",
        "DE_metrics",
        "RMSE",
        "myfile",
        "write",
        "Dropout_metrics",
        "RMSE",
        "myfile",
        "write",
        "NB_metrics",
        "RMSE",
        "myfile",
        "write",
        "myfile",
        "write",
        "myfile",
        "write",
        "np",
        "mean",
        "DE_metrics",
        "bias",
        "myfile",
        "write"
    ],
    "literals": [
        "'/Users/laurens/OneDrive/Onedrivedocs/PhD/Code/2020/Bootstrapped-Deep-Ensembles'",
        "'-d'",
        "'--dir'",
        "\"name of directory of dataset\"",
        "'-M'",
        "'--n_ensembles'",
        "\"Number of ensembles used\"",
        "'-hid'",
        "'--n_hidden'",
        "'+'",
        "\"Number hidden units per layer\"",
        "'-a'",
        "'--alphas'",
        "'+'",
        "\"Chosen confidence levels\"",
        "'-N'",
        "'--N_simulations'",
        "'Number of simulations'",
        "'-dist'",
        "'--distribution'",
        "'Distribution to simulate data from'",
        "'-ne'",
        "'--number_of_epochs'",
        "'Number of training epochs'",
        "'-rf'",
        "'--retrain_fraction'",
        "'Fraction of epochs that training is repeated'",
        "'-sm'",
        "'--simulation_method'",
        "'RF'",
        "'The base model to simulate targets with'",
        "\"./Results/\"",
        "\"/resultslog2.txt\"",
        "\"./Results/\"",
        "\"/raw_results/PICIdata\"",
        "'RF'",
        "'NN'",
        "f'Simulation {i + 1}/{N_simulations}'",
        "'BDE_metrics'",
        "'DE_metrics'",
        "'Dropout_metrics'",
        "'QD_metrics'",
        "'NB_metrics'",
        "'alphas'",
        "'error_fhati_f'",
        "'error_fhathati_fhati'",
        "\"a\"",
        "f'{data_directory} M = {M},  alphas =  {alphas}, N_simulations = {N_simulations}, dist = {distribution},'",
        "f' retrain_fraction={retrain_fraction}, simulation_method={simulation_method} \\n'",
        "f'Epochs={n_epochs}\\n'",
        "'\\n'",
        "'BRIER SCORES PREDICTION INTERVALS \\n'",
        "f' Deep Ensembles              = {DE_metrics.Brier_score(\"PI\")} \\n'",
        "\"PI\"",
        "f' Bootstrapped Deep Ensembles = {BDE_metrics.Brier_score(\"PI\")}  \\n'",
        "\"PI\"",
        "f' Concrete Dropout            = {Dropout_metrics.Brier_score(\"PI\")}  \\n'",
        "\"PI\"",
        "f' Quality Driven Ensemble     = {QD_metrics.Brier_score(\"PI\")}  \\n'",
        "\"PI\"",
        "'\\n'",
        "'BRIER SCORES CONFIDENCE INTERVALS \\n'",
        "f' Deep Ensembles              = {DE_metrics.Brier_score(\"CI\")} \\n'",
        "\"CI\"",
        "f' Bootstrapped Deep Ensembles = {BDE_metrics.Brier_score(\"CI\")}  \\n'",
        "\"CI\"",
        "f' Concrete Dropout            = {Dropout_metrics.Brier_score(\"CI\")}  \\n'",
        "\"CI\"",
        "f' Naive Bootstrap             = {NB_metrics.Brier_score(\"CI\")}  \\n'",
        "\"CI\"",
        "'\\n'",
        "'WIDTHS PREDICTION INTERVALS \\n'",
        "f' Deep Ensembles              = {np.mean(np.mean(DE_metrics.PI_width, axis=0), axis=1)}  \\n'",
        "f' Bootstrapped Deep Ensembles = {np.mean(np.mean(BDE_metrics.PI_width, axis=0), axis=1)}  \\n'",
        "f' Concrete Dropout            = {np.mean(np.mean(Dropout_metrics.PI_width, axis=0), axis=1)}  \\n'",
        "f' Quality Driven Ensemble     = {np.mean(np.mean(QD_metrics.PI_width, axis=0), axis=1)}  \\n'",
        "'\\n'",
        "'WIDTHS CONFIDENCE INTERVALS \\n'",
        "f' Deep Ensembles              = {np.mean(np.mean(DE_metrics.CI_width, axis=0), axis=1)}  \\n'",
        "f' Bootstrapped Deep Ensembles = {np.mean(np.mean(BDE_metrics.CI_width, axis=0), axis=1)}  \\n'",
        "f' Concrete Dropout            = {np.mean(np.mean(Dropout_metrics.CI_width, axis=0), axis=1)}  \\n'",
        "f' Naive Bootstrap             = {np.mean(np.mean(NB_metrics.CI_width, axis=0), axis=1)}  \\n'",
        "'\\n'",
        "'RMSE \\n'",
        "f' (Bootstrapped) Deep Ensembles = {DE_metrics.RMSE()}  \\n'",
        "f' Concrete Dropout = {Dropout_metrics.RMSE()}  \\n'",
        "f' Naive Bootstrap = {NB_metrics.RMSE()}  \\n'",
        "'\\n'",
        "'BIAS \\n'",
        "f' (Bootstrapped) Deep Ensembles = {np.mean(DE_metrics.bias)}  \\n'",
        "'----- \\n'"
    ],
    "variables": [
        "parser",
        "args",
        "n_hidden",
        "M",
        "data_directory",
        "alphas",
        "N_simulations",
        "distribution",
        "retrain_fraction",
        "simulation_method",
        "n_epochs",
        "_RESULTS_LOG",
        "_METRICS_LOCATION",
        "X",
        "Y",
        "f",
        "var_true",
        "f",
        "var_true",
        "X_train",
        "X_test",
        "Y_train",
        "Y_test",
        "N_test",
        "BDE_metrics",
        "DE_metrics",
        "Dropout_metrics",
        "QD_metrics",
        "NB_metrics",
        "error_fhati_f",
        "error_fhathati_fhati",
        "save_epoch",
        "Y_train_new",
        "Y_test",
        "f_test",
        "sigma_test",
        "deep_networks",
        "extra_deep_networks",
        "naive_bootstrap_networks",
        "concrete_dropout_model",
        "QD_ens",
        "error_fhati_f",
        "i",
        "error_fhathati_fhati",
        "i",
        "PI_CD",
        "CI_CD",
        "PI_DE",
        "CI_DE",
        "PI_BDE",
        "CI_BDE",
        "PI_QD",
        "CI_NB",
        "metrics_list",
        "metrics",
        "results"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "Create a data-generating function",
        "Run the N simulations",
        "Simulate new data",
        "Train a Deep Ensemble and Bootstrapped Deep ensemble",
        "Train a Concrete Dropout network",
        "Train Quality-driven Ensemble for each alpha",
        "Calculate the relevant metrics",
        "Creating all the intervals",
        "Checking all the intervals",
        "%% Collect the metrics in a single dictionary and save them.",
        "Write relevant metrics to a text file"
    ],
    "docstrings": [
        "\"\"\"\nThe architecture using the UCI datasets is based on\nthe code by Yarin Gal that he used for his article Dropout as a Bayesian Approximation.\nHe, in turn, based his code on the code by Jose Miguel Hernandez-Lobato.\n\n@author: Laurens Sluijterman\n\"\"\""
    ],
    "functions": [],
    "classes": []
}