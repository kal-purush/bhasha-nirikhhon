{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "Management",
        "Automation",
        "Reflection",
        "Runtime",
        "Loader",
        "Test",
        "Isolated",
        "Init",
        "AssemblyLoadContext",
        "dependencyDirPath",
        "isCollectible",
        "_dependencyDirPath",
        "dependencyDirPath",
        "AssemblyName",
        "assemblyName",
        "Path",
        "Combine",
        "_dependencyDirPath",
        "assemblyName",
        "Name",
        "File",
        "Exists",
        "assemblyPath",
        "LoadFromAssemblyPath",
        "assemblyPath",
        "IModuleAssemblyInitializer",
        "IModuleAssemblyCleanup",
        "Path",
        "Combine",
        "Path",
        "GetDirectoryName",
        "Init",
        "Assembly",
        "Location",
        "s_context",
        "CustomLoadContext",
        "dependencyDirPath",
        "s_moduleAssemblies",
        "StringComparer",
        "OrdinalIgnoreCase",
        "AssemblyLoadContext",
        "Default",
        "Resolving",
        "ResolveAlcEngine",
        "PSModuleInfo",
        "psModuleInfo",
        "AssemblyLoadContext",
        "Default",
        "Resolving",
        "ResolveAlcEngine",
        "AssemblyLoadContext",
        "defaultAlc",
        "AssemblyName",
        "assemblyToResolve",
        "s_moduleAssemblies",
        "Contains",
        "assemblyToResolve",
        "Name",
        "s_context",
        "LoadFromAssemblyName",
        "assemblyToResolve"
    ],
    "literals": [
        "\"MyCustomALC\"",
        "\"Dependencies\"",
        "\"Test.Isolated.Nested\"",
        "\"Test.Isolated.Root\""
    ],
    "variables": [
        "_dependencyDirPath",
        "assemblyPath",
        "CustomLoadContext",
        "s_context",
        "s_moduleAssemblies",
        "dependencyDirPath"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation.",
        "Licensed under the MIT License.",
        "We do the simple logic here of looking for an assembly of the given name",
        "in the configured dependency directory.",
        "The ALC must use inherited methods to load assemblies.",
        "Assembly.Load*() won't work here.",
        "For other assemblies, return null to allow other resolutions to continue.",
        "Add the Resolving event handler here.",
        "Remove the Resolving event handler here.",
        "We only want to resolve our module assemblies here.",
        "This is where the nested module 'Test.Isolated.Nested.dll' and the root module 'Test.Isolated.Root.dll'",
        "gets loaded into our custom ALC and then passed through into PowerShell's ALC.",
        "Let the resolution chain continue for other assemblies."
    ],
    "docstrings": [],
    "functions": [
        "CustomLoadContext",
        "Assembly",
        "Load",
        "Init",
        "OnImport",
        "OnRemove",
        "Assembly",
        "ResolveAlcEngine"
    ],
    "classes": [
        "CustomLoadContext",
        "Init"
    ]
}