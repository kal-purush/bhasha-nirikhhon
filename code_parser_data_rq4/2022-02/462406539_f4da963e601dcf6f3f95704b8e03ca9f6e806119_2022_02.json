{
    "identifiers": [
        "getDataLayer",
        "addEventContext",
        "log",
        "key",
        "model",
        "message",
        "sendEventToAdapter",
        "model",
        "message",
        "adapter",
        "log",
        "id",
        "adapterFunc",
        "model",
        "message",
        "e",
        "log",
        "e",
        "attachAdapters",
        "adapters",
        "log",
        "getDataLayer",
        "listener",
        "model",
        "message",
        "log",
        "model",
        "message",
        "addEventContext",
        "message",
        "adapters",
        "adapter",
        "sendEventToAdapter",
        "model",
        "modifiedMessage",
        "adapter",
        "dataLayer",
        "adapterLoaded",
        "adapters",
        "adapters",
        "a",
        "a",
        "id",
        "log",
        "id",
        "ids",
        "ids",
        "i",
        "i",
        "id",
        "ids",
        "attachAdapters",
        "adapters",
        "registerAdapters",
        "adapters",
        "adapterLoaded",
        "adapters",
        "adapters",
        "a",
        "a",
        "hasLoaded",
        "log",
        "attachAdapters",
        "adapters",
        "adapters",
        "a",
        "a",
        "log"
    ],
    "literals": [
        "\"@google/data-layer-helper\"",
        "\"../core\"",
        "\"../helpers/addEventContext\"",
        "\"../log\"",
        "string",
        "string",
        "string",
        "string",
        "Sending event to ${id}",
        "Creating listener",
        "\"Processing event {model, message}\"",
        "${id} adapter has loaded",
        "\"All adapters have already loaded\"",
        "\"Adapter connection setup, ready to load adapters\""
    ],
    "variables": [
        "sendEventToAdapter",
        "adapter",
        "attachAdapters",
        "dataLayer",
        "listener",
        "modifiedMessage",
        "adapterLoaded",
        "ids",
        "registerAdapters",
        "hasLoaded"
    ],
    "comments": [
        "A unique id that is used to know if the adapter has loaded e.g. `Tealium`",
        "We need to handle any exceptions here and just log them, if we don't then the",
        "datalayer legit just shuts down and assumes it's in a weird state",
        "Add event context (parent components etc)",
        "Attach the helper to a global so we can use it else where (e.g. in tests)",
        "Exit early if we've already created the data layer helper",
        "Remove the adapter from our list of unloaded adapters",
        "Check if all the events have loaded",
        "If they have we can then setup the data layer helper",
        "Register our adapter loaded function",
        "Check if the adapters have already loaded",
        "If they have then we can start the data layer listener without waiting for the",
        "adapter to call `adapterLoaded`. We set `adapterLoaded` to a no-op to prevent",
        "errors from the adapter trying to call it",
        "Register our adapters"
    ],
    "docstrings": [
        "* This takes in an array of Adapter instances which after waiting for the adapters to load,\n * it will then send events through to the adapters.\n *\n * We've made the assumption that adapters will be waiting for third party services to load\n * and that we'll need to track them loading/not loading before we start the stream of events."
    ],
    "functions": [],
    "classes": []
}