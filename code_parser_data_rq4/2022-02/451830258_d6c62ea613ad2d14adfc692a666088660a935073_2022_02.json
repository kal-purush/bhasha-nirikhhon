{
    "identifiers": [
        "u128",
        "TypeRegistry",
        "PalletBalancesAccountData",
        "IApiFactory",
        "ApiFactory",
        "IAstarApi",
        "StatsService",
        "u128",
        "TypeRegistry",
        "addresses",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "u128",
        "TypeRegistry",
        "describe",
        "beforeEach",
        "apiFactory",
        "ApiFactory",
        "apiFactory",
        "jest",
        "AstarApiMock",
        "it",
        "StatsService",
        "apiFactory",
        "service",
        "expect",
        "result",
        "it",
        "StatsService",
        "apiFactory",
        "service",
        "expect",
        "result"
    ],
    "literals": [
        "'@polkadot/types'",
        "'@polkadot/types/create'",
        "'@polkadot/types/lookup'",
        "'../../src/client/ApiFactory'",
        "'../../src/client/AstarApi'",
        "'../../src/services/StatsService'",
        "'100000000000000000000'",
        "string",
        "'10000000000000000000'",
        "'1000000000000000000'",
        "'1000000000000000000'",
        "'1000000000000000000'",
        "'5000000000000000000'",
        "'1000000000000000000'",
        "'1000000000000000000'",
        "'1000000000000000000'",
        "'getTokeStats'",
        "'calculates circulating supply'",
        "''",
        "'returns valid total supply'",
        "''"
    ],
    "variables": [
        "apiFactory",
        "service",
        "result",
        "service",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "* Astar Polkadot API mock.",
        "* Mocks balances for accounts that holds tokens not in circulation\n     * @param addresses to exclude for calculation, not used in the mock implementation\n     * @returns Mocked accounts balances.",
        "* Tests are writen adhering to AAA (Arange, Act, Assert) pattern."
    ],
    "functions": [
        "getTotalSupply",
        "getBalances",
        "getChainDecimals"
    ],
    "classes": [
        "AstarApiMock"
    ]
}