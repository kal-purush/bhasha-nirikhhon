{
    "identifiers": [
        "require",
        "nums",
        "target",
        "nums",
        "pre",
        "number",
        "index",
        "pre",
        "pre",
        "pre",
        "number",
        "target",
        "pre",
        "number",
        "pre",
        "nums",
        "index",
        "twoAdjacentNumbers",
        "nums",
        "target",
        "nums",
        "target",
        "i",
        "nums",
        "i",
        "obj",
        "nums",
        "i",
        "obj",
        "nums",
        "i",
        "i",
        "obj",
        "target",
        "nums",
        "i",
        "i",
        "twoNumbersSum",
        "nums",
        "target",
        "c",
        "s",
        "s",
        "c",
        "s",
        "c",
        "s",
        "c",
        "maxCount",
        "s",
        "maxCount",
        "s",
        "s",
        "s",
        "s",
        "c",
        "c",
        "maxCount",
        "s",
        "s",
        "maxCount",
        "lengthOfLongestSubstring",
        "nums",
        "c",
        "nums",
        "arr",
        "arr",
        "c",
        "arr",
        "c",
        "arr",
        "c",
        "arraySum",
        "arr",
        "sum",
        "number",
        "sum",
        "number",
        "maxSum",
        "arraySum",
        "maxSum",
        "arraySum",
        "arr",
        "arr",
        "arr",
        "c",
        "arr",
        "arr",
        "c",
        "arraySum",
        "arr",
        "sum",
        "number",
        "sum",
        "number",
        "maxSum",
        "arraySum",
        "arraySum",
        "maxSum",
        "maximumUniqueSubarray",
        "nums",
        "myArray",
        "mySet",
        "myMap",
        "myMap"
    ],
    "literals": [
        "'./data'",
        "''",
        "''",
        "\"pwwkew\"",
        "'name'",
        "'shira'",
        "'lastName'",
        "'hachmon'",
        "'a'",
        "'b'"
    ],
    "variables": [
        "nums",
        "target",
        "twoAdjacentNumbers",
        "twoNumbersSum",
        "obj",
        "i",
        "lengthOfLongestSubstring",
        "maxCount",
        "s",
        "maximumUniqueSubarray",
        "maxSum",
        "arr",
        "arraySum",
        "myArray",
        "mySet",
        "setConvertToArray",
        "myMap"
    ],
    "comments": [
        "Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.",
        "Two adjacent numbers",
        "Two numbers from an array",
        "If the index is gt or e to 0, and not undefine..",
        "Get the longest substring lenght with distinct numbers",
        "Another option",
        "var lengthOfLongestSubstring = function(s) {",
        "var last = {};",
        "var start = 0;",
        "var longest = 0;",
        "s = s.split(''); // Each char into array",
        "s.forEach((item, index) => {",
        "if(last[item] >= start)",
        "start = last[item] + 1;",
        "longest = Math.max(longest, index-start+1);",
        "last[item] = index;",
        "});",
        "return longest;",
        "};",
        "Give the max sum of unique sub arrays.",
        "var maximumUniqueSubarray = function(N) {",
        "let a = new Int8Array(10001), sum = max = 0, len = N.length",
        "for (let l = 0, r = 0; r < len; r++) {",
        "a[N[r]]++, sum += N[r]",
        "while (a[N[r]] > 1) a[N[l]]--, sum -= N[l++]",
        "max = sum > max ? sum : max",
        "}",
        "return max",
        "};",
        "Set",
        "Set {1,2,3,4,5,6}",
        "Gives an array from the set. [1,2,3,4,5,6]"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}