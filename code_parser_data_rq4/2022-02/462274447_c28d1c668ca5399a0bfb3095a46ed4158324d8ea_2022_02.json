{
    "identifiers": [
        "network",
        "time",
        "utime",
        "ntptime",
        "util",
        "create_mqtt_client",
        "get_telemetry_topic",
        "get_c2d_topic",
        "parse_connection",
        "sas_token_generator",
        "GenerateAzureSasToken",
        "json",
        "water_sensor",
        "WaterFlowSensor",
        "end",
        "network",
        "WLAN",
        "network",
        "STA_IF",
        "sta_if",
        "active",
        "sta_if",
        "connect",
        "sta_if",
        "isconnected",
        "end",
        "time",
        "sleep",
        "ntptime",
        "settime",
        "time",
        "localtime",
        "parse_connection",
        "connection_str",
        "dict_keys",
        "get",
        "SHARED_ACCESS_KEY",
        "dict_keys",
        "get",
        "SHARED_ACCESS_KEY_NAME",
        "dict_keys",
        "get",
        "GATEWAY_HOST_NAME",
        "dict_keys",
        "get",
        "HOST_NAME",
        "dict_keys",
        "get",
        "DEVICE_ID",
        "dict_keys",
        "get",
        "MODULE_ID",
        "hostname",
        "device_id",
        "time",
        "time",
        "GenerateAzureSasToken",
        "hostname",
        "shared_access_key",
        "expiry_timestamp",
        "policy_name",
        "password",
        "create_mqtt_client",
        "client_id",
        "device_id",
        "hostname",
        "hostname",
        "username",
        "username",
        "password",
        "password",
        "port",
        "keepalive",
        "ssl",
        "mqtt_client",
        "reconnect",
        "topic",
        "message_receive",
        "message_receive",
        "get_c2d_topic",
        "device_id",
        "mqtt_client",
        "set_callback",
        "callback_handler",
        "mqtt_client",
        "subscribe",
        "topic",
        "subscribe_topic",
        "get_telemetry_topic",
        "device_id",
        "WaterFlowSensor",
        "WaterFlowSensor",
        "WaterFlowSensor",
        "water_sensor",
        "water_sensors",
        "water_sensor",
        "read",
        "water_sensor",
        "tag",
        "tag",
        "rate",
        "volume",
        "mqtt_client",
        "publish",
        "topic",
        "topic",
        "msg",
        "json",
        "dumps",
        "rate",
        "volume",
        "tag",
        "time",
        "sleep"
    ],
    "literals": [
        "\"Connecting to WiFi\"",
        "\"\"",
        "'Wokwi-GUEST'",
        "''",
        "\".\"",
        "\"\"",
        "\" Successfully connected!\"",
        "'3.ph.pool.ntp.org'",
        "\"Local time after synchronization: %s\"",
        "\"HostName\"",
        "\"SharedAccessKeyName\"",
        "\"SharedAccessKey\"",
        "\"SharedAccessSignature\"",
        "\"DeviceId\"",
        "\"ModuleId\"",
        "\"GatewayHostName\"",
        "\"<connection-str>\"",
        "'/'",
        "\"iothubowner\"",
        "\"SAS Token: %s\"",
        "\"Connecting to MQTT Server...\"",
        "\"Received message\"",
        "\"Publishing topics...\"",
        "\"sensor-a\"",
        "\"sensor-b\"",
        "\"sensor-c\"",
        "\"%s = %d L/hr, %f L\"",
        "'flowRate'",
        "'volume'",
        "'tag'"
    ],
    "variables": [
        "sta_if",
        "ntptime",
        "host",
        "HOST_NAME",
        "SHARED_ACCESS_KEY_NAME",
        "SHARED_ACCESS_KEY",
        "SHARED_ACCESS_SIGNATURE",
        "DEVICE_ID",
        "MODULE_ID",
        "GATEWAY_HOST_NAME",
        "connection_str",
        "dict_keys",
        "shared_access_key",
        "shared_access_key_name",
        "gateway_hostname",
        "hostname",
        "device_id",
        "module_id",
        "username",
        "expiry_timestamp",
        "password",
        "mqtt_client",
        "subscribe_topic",
        "topic",
        "water_sensors",
        "rate",
        "volume",
        "tag"
    ],
    "comments": [
        "Parse the connection string into constituent parts",
        "Create username following the below format '<HOSTNAME>/<DEVICE_ID>'",
        "Since Jan 1, 2000 + UNIX Epoch",
        "Create UMQTT ROBUST or UMQTT SIMPLE CLIENT",
        "Send telemetry"
    ],
    "docstrings": [],
    "functions": [
        "callback_handler"
    ],
    "classes": []
}