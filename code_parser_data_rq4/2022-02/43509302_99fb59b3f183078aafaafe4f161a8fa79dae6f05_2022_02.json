{
    "identifiers": [
        "scapy",
        "packet",
        "Packet",
        "scapy",
        "fields",
        "BitField",
        "BitFieldLenField",
        "ByteEnumField",
        "ByteField",
        "ConditionalField",
        "FieldLenField",
        "IntField",
        "LenField",
        "LongField",
        "PacketField",
        "PacketListField",
        "StrLenField",
        "X3BytesField",
        "Packet",
        "LongField",
        "IntField",
        "IntField",
        "IntField",
        "Packet",
        "IntField",
        "ByteField",
        "X3BytesField",
        "IntField",
        "IntField",
        "IntField",
        "IntField",
        "Packet",
        "ByteEnumField",
        "_sdes_chunk_types",
        "FieldLenField",
        "fmt",
        "length_of",
        "StrLenField",
        "length_from",
        "pkt",
        "pkt",
        "length",
        "p",
        "p",
        "Packet",
        "IntField",
        "PacketListField",
        "pkt_cls",
        "SDESItem",
        "Packet",
        "BitField",
        "BitField",
        "BitFieldLenField",
        "count_of",
        "ByteEnumField",
        "_rtcp_packet_types",
        "LenField",
        "fmt",
        "ConditionalField",
        "IntField",
        "pkt",
        "pkt",
        "packet_type",
        "ConditionalField",
        "PacketField",
        "SenderInfo",
        "SenderInfo",
        "pkt",
        "pkt",
        "packet_type",
        "ConditionalField",
        "PacketListField",
        "pkt_cls",
        "ReceptionReport",
        "count_from",
        "pkt",
        "pkt",
        "count",
        "pkt",
        "pkt",
        "packet_type",
        "ConditionalField",
        "PacketListField",
        "pkt_cls",
        "SDESChunk",
        "count_from",
        "pkt",
        "pkt",
        "count",
        "pkt",
        "pkt",
        "packet_type",
        "pkt",
        "pay",
        "pkt",
        "pay",
        "length",
        "pkt",
        "pack",
        "len",
        "pkt",
        "pkt",
        "pkt"
    ],
    "literals": [
        "'Sender report'",
        "'Receiver report'",
        "'Source description'",
        "'BYE'",
        "'APP'",
        "\"Sender info\"",
        "'ntp_timestamp'",
        "'rtp_timestamp'",
        "'sender_packet_count'",
        "'sender_octet_count'",
        "\"Reception report\"",
        "'sourcesync'",
        "'fraction_lost'",
        "'cumulative_lost'",
        "'highest_seqnum_recv'",
        "'interarrival_jitter'",
        "'last_SR_timestamp'",
        "'delay_since_last_SR'",
        "\"END\"",
        "\"CNAME\"",
        "\"NAME\"",
        "\"EMAIL\"",
        "\"PHONE\"",
        "\"LOC\"",
        "\"TOOL\"",
        "\"NOTE\"",
        "\"PRIV\"",
        "\"SDES item\"",
        "'chunk_type'",
        "'length'",
        "'!b'",
        "'value'",
        "'value'",
        "\"\"",
        "\"SDES chunk\"",
        "'sourcesync'",
        "'items'",
        "\"RTCP\"",
        "'version'",
        "'padding'",
        "'count'",
        "'report_blocks'",
        "'packet_type'",
        "'length'",
        "'!h'",
        "'sourcesync'",
        "'sender_info'",
        "'report_blocks'",
        "'sdes_chunks'",
        "\"!h\""
    ],
    "variables": [
        "_rtcp_packet_types",
        "name",
        "fields_desc",
        "name",
        "fields_desc",
        "_sdes_chunk_types",
        "name",
        "fields_desc",
        "name",
        "fields_desc",
        "name",
        "fields_desc",
        "pkt"
    ],
    "comments": [
        "This file is part of Scapy",
        "See http://www.secdev.org/projects/scapy for more information",
        "Copyright (C) Pavel Oborin <oborin.p@gmail.com>",
        "This program is published under a GPLv2 license",
        "RFC 3550",
        "scapy.contrib.description = Real-Time Transport Control Protocol",
        "scapy.contrib.status = loads",
        "HEADER",
        "SR/RR",
        "SDES"
    ],
    "docstrings": [
        "\"\"\"\nRTCP (rfc 3550)\n\nUse bind_layers(UDP, RTCP, dport=...) to start using it\n\"\"\""
    ],
    "functions": [
        "extract_padding",
        "post_build"
    ],
    "classes": [
        "SenderInfo",
        "ReceptionReport",
        "SDESItem",
        "SDESChunk",
        "RTCP"
    ]
}