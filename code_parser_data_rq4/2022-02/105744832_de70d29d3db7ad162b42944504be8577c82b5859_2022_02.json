{
    "identifiers": [
        "Security",
        "Cryptography",
        "X509Certificates",
        "Duende",
        "IdentityServer",
        "Rsk",
        "AspNetCore",
        "Authentication",
        "Saml2p",
        "Rsk",
        "Saml",
        "DuendeIdentityServer",
        "DynamicProviders",
        "Serilog",
        "DuendeDynamicProviders",
        "WebApplicationBuilder",
        "builder",
        "builder",
        "Services",
        "AddRazorPages",
        "builder",
        "Services",
        "AddIdentityServer",
        "options",
        "Events",
        "RaiseErrorEvents",
        "options",
        "Events",
        "RaiseInformationEvents",
        "options",
        "Events",
        "RaiseFailureEvents",
        "options",
        "Events",
        "RaiseSuccessEvents",
        "options",
        "EmitStaticAudienceClaim",
        "AddTestUsers",
        "TestUsers",
        "Users",
        "isBuilder",
        "AddInMemoryIdentityResources",
        "Config",
        "IdentityResources",
        "isBuilder",
        "AddInMemoryApiScopes",
        "Config",
        "ApiScopes",
        "isBuilder",
        "AddInMemoryClients",
        "Config",
        "Clients",
        "isBuilder",
        "AddSamlDynamicProvider",
        "options",
        "Licensee",
        "options",
        "LicenseKey",
        "AddInMemoryIdentityProviders",
        "SamlDynamicIdentityProvider",
        "SamlDynamicIdentityProvider",
        "SamlAuthenticationOptions",
        "Saml2pAuthenticationOptions",
        "IdentityProviderOptions",
        "IdpOptions",
        "EntityId",
        "SigningCertificates",
        "X509Certificate2",
        "SingleSignOnEndpoint",
        "SamlEndpoint",
        "SamlBindingTypes",
        "HttpRedirect",
        "SingleLogoutEndpoint",
        "SamlEndpoint",
        "SamlBindingTypes",
        "HttpRedirect",
        "ServiceProviderOptions",
        "SpOptions",
        "EntityId",
        "MetadataPath",
        "SignAuthenticationRequests",
        "NameIdClaimType",
        "CallbackPath",
        "SignInScheme",
        "IdentityServerConstants",
        "ExternalCookieAuthenticationScheme",
        "Scheme",
        "DisplayName",
        "Enabled",
        "builder",
        "Services",
        "AddAuthentication",
        "builder",
        "Build",
        "WebApplication",
        "app",
        "app",
        "UseSerilogRequestLogging",
        "app",
        "UseDeveloperExceptionPage",
        "app",
        "UseStaticFiles",
        "app",
        "UseRouting",
        "app",
        "UseIdentityServer",
        "app",
        "UseAuthorization",
        "app",
        "MapRazorPages",
        "RequireAuthorization",
        "app"
    ],
    "literals": [
        "\"your DEMO Licensee\"",
        "\"your DEMO LicenseKey\"",
        "\"https://localhost:5000\"",
        "\"idsrv3test.cer\"",
        "\"https://localhost:5000/saml/sso\"",
        "\"https://localhost:5000/saml/slo\"",
        "\"https://localhost:5004/saml\"",
        "\"/federation/saml/metadata\"",
        "\"sub\"",
        "\"/federation/saml/signin-saml\"",
        "\"saml\"",
        "\"saml\""
    ],
    "variables": [
        "isBuilder"
    ],
    "comments": [
        "see https://docs.duendesoftware.com/identityserver/v6/fundamentals/resources/",
        "in-memory, code config",
        "SP configuration - dynamic providers",
        "unstorable/reusable data, such as license information and events. This will override the data stored",
        "Use EntityFramework store for storing identity providers",
        ".AddIdentityProviderStore<SamlIdentityProviderStore>();",
        "use in memory store for storing identity providers",
        "The IdP you want to integrate with",
        "Details about yourself (the SP)",
        "OPTIONAL - use if you want to sign your auth requests",
        "Duende prefixes \"/federation/{scheme}\" to all paths"
    ],
    "docstrings": [],
    "functions": [
        "WebApplication",
        "ConfigureServices",
        "WebApplication",
        "ConfigurePipeline"
    ],
    "classes": [
        "HostingExtensions"
    ]
}