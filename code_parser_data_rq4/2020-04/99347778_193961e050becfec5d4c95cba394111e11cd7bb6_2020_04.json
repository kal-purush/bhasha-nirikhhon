{
    "identifiers": [
        "numpy",
        "np",
        "scipy",
        "io",
        "netcdf",
        "scipy",
        "constants",
        "elementary_charge",
        "raysect",
        "core",
        "math",
        "Discrete2DMesh",
        "cherab",
        "core",
        "math",
        "mappers",
        "AxisymmetricMapper",
        "cherab",
        "core",
        "atomic",
        "elements",
        "hydrogen",
        "deuterium",
        "helium",
        "beryllium",
        "carbon",
        "nitrogen",
        "oxygen",
        "neon",
        "argon",
        "krypton",
        "xenon",
        "cherab",
        "solps",
        "mesh_geometry",
        "SOLPSMesh",
        "cherab",
        "solps",
        "solps_plasma",
        "SOLPSSimulation",
        "elementary_charge",
        "deuterium",
        "carbon",
        "helium",
        "nitrogen",
        "neon",
        "argon",
        "argon",
        "krypton",
        "xenon",
        "balance_filename",
        "netcdf",
        "netcdf_file",
        "balance_filename",
        "fhandle",
        "variables",
        "data",
        "copy",
        "fhandle",
        "variables",
        "data",
        "copy",
        "fhandle",
        "variables",
        "data",
        "copy",
        "np",
        "moveaxis",
        "cr_x",
        "np",
        "moveaxis",
        "cr_z",
        "SOLPSMesh",
        "cr_x",
        "cr_z",
        "vol",
        "SOLPSSimulation",
        "mesh",
        "fhandle",
        "variables",
        "data",
        "copy",
        "Q",
        "fhandle",
        "variables",
        "data",
        "copy",
        "len",
        "fhandle",
        "variables",
        "data",
        "i",
        "n_species",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "fhandle",
        "variables",
        "data",
        "i",
        "_popular_species",
        "zn",
        "am",
        "sim",
        "species_list",
        "append",
        "species",
        "symbol",
        "charge",
        "fhandle",
        "variables",
        "data",
        "copy",
        "np",
        "moveaxis",
        "tmp",
        "tmp",
        "np",
        "ones",
        "mesh",
        "num_tris",
        "AxisymmetricMapper",
        "Discrete2DMesh",
        "mesh",
        "vertex_coords",
        "mesh",
        "triangles",
        "inside_outside_data",
        "limit",
        "inside_outside",
        "sim",
        "species_list",
        "index",
        "ValueError",
        "fhandle",
        "variables",
        "keys",
        "D0_indx",
        "np",
        "shape",
        "sim",
        "species_density",
        "D0_indx",
        "np",
        "shape",
        "fhandle",
        "variables",
        "data",
        "sim",
        "species_density",
        "fhandle",
        "variables",
        "data",
        "b2_len",
        "eirene_len",
        "eirene_run",
        "fhandle",
        "variables",
        "data",
        "copy",
        "vol",
        "fhandle",
        "variables",
        "keys",
        "np",
        "sum",
        "fhandle",
        "variables",
        "data",
        "axis",
        "vol",
        "fhandle",
        "variables",
        "keys",
        "np",
        "sum",
        "fhandle",
        "variables",
        "data",
        "axis",
        "Q",
        "vol",
        "b2_ploss",
        "eirene_ecoolrate",
        "eirene_potential_loss",
        "np",
        "sum",
        "fhandle",
        "variables",
        "data",
        "axis",
        "vol",
        "np",
        "sum",
        "fhandle",
        "variables",
        "data",
        "axis",
        "vol",
        "Q",
        "potential_loss",
        "b2_ploss",
        "fhandle",
        "close",
        "sim"
    ],
    "literals": [
        "'r'",
        "'crx'",
        "'cry'",
        "'vol'",
        "'te'",
        "'ne'",
        "'am'",
        "'species'",
        "b'D'",
        "'species'",
        "b'C'",
        "'species'",
        "b'N'",
        "'species'",
        "b'N'",
        "'species'",
        "b'e'",
        "'species'",
        "b'A'",
        "'species'",
        "b'r'",
        "'am'",
        "'za'",
        "'na'",
        "'D0'",
        "'dab2'",
        "'dab2'",
        "'dab2'",
        "'b2stel_she_bal'",
        "'eirene_mc_eael_she_bal'",
        "'eirene_mc_eael_she_bal'",
        "'eirene_mc_papl_sna_bal'",
        "'eirene_mc_papl_sna_bal'",
        "'b2stel_she_bal'",
        "'b2stel_sna_ion_bal'"
    ],
    "variables": [
        "Q",
        "_popular_species",
        "fhandle",
        "cr_x",
        "cr_z",
        "vol",
        "cr_x",
        "cr_z",
        "mesh",
        "sim",
        "sim",
        "_electron_temperature",
        "sim",
        "_electron_density",
        "sim",
        "_species_list",
        "n_species",
        "zn",
        "zn",
        "zn",
        "zn",
        "zn",
        "am",
        "charge",
        "species",
        "tmp",
        "tmp",
        "sim",
        "_species_density",
        "inside_outside_data",
        "inside_outside",
        "sim",
        "_inside_mesh",
        "D0_indx",
        "D0_indx",
        "b2_len",
        "eirene_len",
        "D0_indx",
        "eirene_run",
        "eirene_run",
        "b2_ploss",
        "eirene_ecoolrate",
        "eirene_potential_loss",
        "sim",
        "_total_rad",
        "b2_ploss",
        "potential_loss",
        "sim",
        "_total_rad"
    ],
    "comments": [
        "Copyright 2016-2018 Euratom",
        "Copyright 2016-2018 United Kingdom Atomic Energy Authority",
        "Copyright 2016-2018 Centro de Investigaciones Energéticas, Medioambientales y Tecnológicas",
        "",
        "Licensed under the EUPL, Version 1.1 or – as soon they will be approved by the",
        "European Commission - subsequent versions of the EUPL (the \"Licence\");",
        "You may not use this work except in compliance with the Licence.",
        "You may obtain a copy of the Licence at:",
        "",
        "https://joinup.ec.europa.eu/software/page/eupl5",
        "",
        "Unless required by applicable law or agreed to in writing, software distributed",
        "under the Licence is distributed on an \"AS IS\" basis, WITHOUT WARRANTIES OR",
        "CONDITIONS OF ANY KIND, either express or implied.",
        "",
        "See the Licence for the specific language governing permissions and limitations",
        "under the Licence.",
        "key is nuclear charge Z and atomic mass AMU",
        "Open the file",
        "Load SOLPS mesh geometry",
        "Re-arrange the array dimensions in the way CHERAB expects...",
        "Create the SOLPS mesh",
        "TODO: add code to load SOLPS velocities and magnetic field from files",
        "Load electron species",
        "",
        "Load each plasma species in simulation #",
        "",
        "Extract the nuclear charge",
        "Atomic mass",
        "Ionisation/charge",
        "If we only need to populate species_list, there is probably a faster way to do this...",
        "Make Mesh Interpolator function for inside/outside mesh test.",
        "Load the neutrals data",
        "Replace the deuterium neutrals density (from the fluid neutrals model by default) with",
        "the values calculated by EIRENE - do the same for other neutrals?",
        "Calculate the total radiated power",
        "Total radiated power from B2, not including neutrals",
        "Electron energy loss due to interactions with neutrals",
        "Ionisation rate from EIRENE, needed to calculate the energy loss to overcome the ionisation potential of atoms",
        "This will be negative (energy sink); multiply by -1",
        "Total radiated power from B2, not including neutrals",
        "Save total radiated power to the simulation object"
    ],
    "docstrings": [
        "\"\"\"\n    Load a SOLPS simulation from SOLPS balance.nc output files.\n    \"\"\""
    ],
    "functions": [
        "load_solps_from_balance"
    ],
    "classes": []
}