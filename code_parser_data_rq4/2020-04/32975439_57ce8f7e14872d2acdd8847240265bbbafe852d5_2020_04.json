{
    "identifiers": [
        "org",
        "apache",
        "hadoop",
        "hdfs",
        "server",
        "namenode",
        "io",
        "hops",
        "metadata",
        "HdfsStorageFactory",
        "io",
        "hops",
        "transaction",
        "handler",
        "HDFSOperationType",
        "io",
        "hops",
        "transaction",
        "handler",
        "HopsTransactionalRequestHandler",
        "io",
        "hops",
        "transaction",
        "handler",
        "RequestHandler",
        "io",
        "hops",
        "transaction",
        "handler",
        "TransactionalRequestHandler",
        "io",
        "hops",
        "transaction",
        "TransactionLocks",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "apache",
        "hadoop",
        "conf",
        "Configuration",
        "org",
        "apache",
        "hadoop",
        "hdfs",
        "HdfsConfiguration",
        "org",
        "apache",
        "log4j",
        "Level",
        "org",
        "apache",
        "log4j",
        "Logger",
        "org",
        "junit",
        "Test",
        "java",
        "io",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "org",
        "junit",
        "Assert",
        "fail",
        "LOG",
        "LogFactory",
        "getLog",
        "Logger",
        "getRootLogger",
        "setLevel",
        "Level",
        "ERROR",
        "Logger",
        "getLogger",
        "setLevel",
        "Level",
        "DEBUG",
        "Logger",
        "getLogger",
        "setLevel",
        "Level",
        "TRACE",
        "Logger",
        "getLogger",
        "setLevel",
        "Level",
        "TRACE",
        "Test",
        "conf",
        "HdfsStorageFactory",
        "reset",
        "HdfsStorageFactory",
        "setConfiguration",
        "conf",
        "txHandler",
        "HDFSOperationType",
        "TEST",
        "Override",
        "Override",
        "Override",
        "locks",
        "txHandler",
        "handle",
        "fail",
        "e",
        "e",
        "getMessage",
        "compareToIgnoreCase",
        "txHandler",
        "HDFSOperationType",
        "TEST",
        "Override",
        "Override",
        "Override",
        "locks",
        "txHandler",
        "handle",
        "fail",
        "e",
        "e",
        "getMessage",
        "compareToIgnoreCase",
        "txHandler",
        "HDFSOperationType",
        "TEST",
        "Override",
        "Override",
        "Override",
        "locks",
        "txHandler",
        "handle",
        "fail",
        "e",
        "e",
        "getMessage",
        "compareToIgnoreCase"
    ],
    "literals": [
        "\"Test\"",
        "\"Test\"",
        "\"Test\"",
        "\"Test\"",
        "\"Test\"",
        "\"Test\""
    ],
    "variables": [],
    "comments": [
        "Exception in setup phase",
        "Exception in perform phase",
        "Exception in lock phase"
    ],
    "docstrings": [
        "* Copyright (C) 2019 hops.io.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "TestSuppressTransientExceptions",
        "setUp",
        "performTask",
        "acquireLock",
        "setUp",
        "performTask",
        "acquireLock",
        "setUp",
        "performTask",
        "acquireLock"
    ],
    "classes": [
        "TestRunTimeExceptionInTxReqHandler"
    ]
}