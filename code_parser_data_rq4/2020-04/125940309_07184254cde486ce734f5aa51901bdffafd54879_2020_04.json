{
    "identifiers": [
        "typing",
        "Dict",
        "Optional",
        "numpy",
        "np",
        "openfermion",
        "utils",
        "wedge",
        "openfermion",
        "ops",
        "InteractionRDM",
        "openfermioncirq",
        "experiments",
        "hfvqe",
        "util",
        "ccu",
        "openfermioncirq",
        "experiments",
        "hfvqe",
        "objective",
        "generate_hamiltonian",
        "i",
        "j",
        "i",
        "j",
        "rho",
        "np",
        "ndarray",
        "sigma",
        "np",
        "ndarray",
        "np",
        "linalg",
        "norm",
        "rho",
        "sigma",
        "results_dict",
        "Dict",
        "return_variance",
        "Optional",
        "results_dict",
        "len",
        "qubits",
        "np",
        "zeros",
        "num_qubits",
        "num_qubits",
        "circuit_idx",
        "permutation",
        "results_dict",
        "pair_idx",
        "num_qubits",
        "pair_idx",
        "results_dict",
        "circuit_idx",
        "results_dict",
        "circuit_idx",
        "qubits",
        "pair_idx",
        "pair_idx",
        "permutation",
        "pair_idx",
        "pair_idx",
        "opdm",
        "qA",
        "qB",
        "np",
        "mean",
        "data",
        "q1",
        "data",
        "q0",
        "axis",
        "opdm",
        "qB",
        "qA",
        "np",
        "mean",
        "data",
        "q1",
        "data",
        "q0",
        "axis",
        "return_variance",
        "qubits",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "qubits",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "results_dict",
        "circuit_idx",
        "np",
        "zeros",
        "len",
        "even_pairs",
        "len",
        "even_pairs",
        "dtype",
        "ridx",
        "q0_a",
        "q1_a",
        "even_pairs",
        "cidx",
        "q0_b",
        "q1_b",
        "even_pairs",
        "qid_a",
        "coeff_a",
        "q0_a",
        "q1_a",
        "qid_b",
        "coeff_b",
        "q0_b",
        "q1_b",
        "even_cov_mat",
        "ridx",
        "cidx",
        "coeff_a",
        "coeff_b",
        "data",
        "qid_a",
        "qid_b",
        "cov",
        "to_numpy",
        "even_cov_mat",
        "ridx",
        "cidx",
        "len",
        "data",
        "q0_a",
        "variance_dict",
        "even_cov_mat",
        "np",
        "linalg",
        "eigh",
        "even_cov_mat",
        "len",
        "data",
        "q0_a",
        "np",
        "alltrue",
        "w",
        "ValueError",
        "format",
        "circuit_idx",
        "results_dict",
        "circuit_idx",
        "np",
        "zeros",
        "len",
        "odd_pairs",
        "len",
        "odd_pairs",
        "dtype",
        "ridx",
        "q0_a",
        "q1_a",
        "odd_pairs",
        "cidx",
        "q0_b",
        "q1_b",
        "odd_pairs",
        "qid_a",
        "coeff_a",
        "q0_a",
        "q1_a",
        "qid_b",
        "coeff_b",
        "q0_b",
        "q1_b",
        "odd_cov_mat",
        "ridx",
        "cidx",
        "coeff_a",
        "coeff_b",
        "data",
        "qid_a",
        "qid_b",
        "cov",
        "to_numpy",
        "odd_cov_mat",
        "ridx",
        "cidx",
        "len",
        "data",
        "q0_a",
        "variance_dict",
        "odd_cov_mat",
        "np",
        "linalg",
        "eigh",
        "odd_cov_mat",
        "len",
        "data",
        "q0_a",
        "np",
        "alltrue",
        "w",
        "ValueError",
        "format",
        "circuit_idx",
        "np",
        "alltrue",
        "w",
        "circuit_idx",
        "qubit_idx",
        "q",
        "qubits",
        "results_dict",
        "circuit_idx",
        "q",
        "np",
        "mean",
        "data",
        "axis",
        "return_variance",
        "variance_dict",
        "results_dict",
        "circuit_idx",
        "qubits",
        "cov",
        "to_numpy",
        "len",
        "data",
        "return_variance",
        "opdm",
        "variance_dict",
        "opdm",
        "opdm",
        "np",
        "ndarray",
        "num_samples",
        "opdm",
        "shape",
        "ccu",
        "generate_permutations",
        "num_qubits",
        "i",
        "j",
        "p",
        "q",
        "opdm",
        "i",
        "q",
        "kdelta",
        "j",
        "p",
        "opdm",
        "i",
        "q",
        "opdm",
        "p",
        "j",
        "circuit_idx",
        "permutation",
        "qubit_permutations",
        "permutation",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "permutation",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "np",
        "zeros",
        "len",
        "e_real_pairs",
        "len",
        "e_real_pairs",
        "dtype",
        "ridx",
        "i",
        "j",
        "e_real_pairs",
        "cidx",
        "p",
        "q",
        "e_real_pairs",
        "cov_func",
        "i",
        "j",
        "p",
        "q",
        "cov_func",
        "i",
        "j",
        "q",
        "p",
        "cov_func",
        "j",
        "i",
        "p",
        "q",
        "cov_func",
        "j",
        "i",
        "q",
        "p",
        "np",
        "linalg",
        "eigh",
        "even_cov_mat",
        "np",
        "alltrue",
        "w",
        "ValueError",
        "format",
        "circuit_idx",
        "variance_dict",
        "even_cov_mat",
        "num_samples",
        "np",
        "zeros",
        "len",
        "o_real_pairs",
        "len",
        "o_real_pairs",
        "dtype",
        "ridx",
        "i",
        "j",
        "o_real_pairs",
        "cidx",
        "p",
        "q",
        "o_real_pairs",
        "cov_func",
        "i",
        "j",
        "p",
        "q",
        "cov_func",
        "i",
        "j",
        "q",
        "p",
        "cov_func",
        "j",
        "i",
        "p",
        "q",
        "cov_func",
        "j",
        "i",
        "q",
        "p",
        "np",
        "linalg",
        "eigh",
        "odd_cov_mat",
        "np",
        "alltrue",
        "w",
        "ValueError",
        "format",
        "circuit_idx",
        "variance_dict",
        "odd_cov_mat",
        "num_samples",
        "circuit_idx",
        "np",
        "zeros",
        "num_qubits",
        "num_qubits",
        "dtype",
        "ridx",
        "i",
        "num_qubits",
        "cidx",
        "p",
        "num_qubits",
        "cov_func",
        "i",
        "i",
        "p",
        "p",
        "np",
        "linalg",
        "eigh",
        "z_cov_mat",
        "np",
        "alltrue",
        "w",
        "ValueError",
        "format",
        "circuit_idx",
        "variance_dict",
        "z_cov_mat",
        "num_samples",
        "variance_dict",
        "opdm",
        "np",
        "ndarray",
        "var_dict",
        "Dict",
        "np",
        "ndarray",
        "opdm",
        "shape",
        "ccu",
        "generate_permutations",
        "num_qubits",
        "np",
        "zeros_like",
        "opdm",
        "circuit_idx",
        "permutation",
        "qubit_permutations",
        "permutation",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "permutation",
        "idx",
        "idx",
        "idx",
        "np",
        "arange",
        "num_qubits",
        "opdm",
        "pp",
        "pp",
        "pp",
        "e_real_pairs",
        "np",
        "random",
        "multivariate_normal",
        "mean",
        "even_means",
        "cov",
        "var_dict",
        "circuit_idx",
        "idx",
        "pp0",
        "pp1",
        "e_real_pairs",
        "opdm_terms",
        "idx",
        "opdm_terms",
        "idx",
        "opdm",
        "pp",
        "pp",
        "pp",
        "o_real_pairs",
        "np",
        "random",
        "multivariate_normal",
        "mean",
        "odd_means",
        "cov",
        "var_dict",
        "circuit_idx",
        "idx",
        "pp0",
        "pp1",
        "o_real_pairs",
        "opdm_terms",
        "idx",
        "opdm_terms",
        "idx",
        "circuit_idx",
        "np",
        "random",
        "multivariate_normal",
        "mean",
        "np",
        "diagonal",
        "opdm",
        "cov",
        "var_dict",
        "circuit_idx",
        "np",
        "diag_indices_from",
        "new_opdm",
        "opdm_diagonal",
        "new_opdm",
        "opdm",
        "constant",
        "one_body_tensor",
        "two_body_tensor",
        "np",
        "kron",
        "opdm",
        "np",
        "eye",
        "wedge",
        "spin_opdm",
        "spin_opdm",
        "generate_hamiltonian",
        "constant",
        "constant",
        "one_body_integrals",
        "one_body_tensor",
        "two_body_integrals",
        "two_body_tensor",
        "InteractionRDM",
        "spin_opdm",
        "spin_tpdm",
        "rdms",
        "expectation",
        "molecular_hamiltonian",
        "real",
        "rho",
        "np",
        "ndarray",
        "threshold",
        "Optional",
        "np",
        "ndarray",
        "np",
        "infty",
        "rho",
        "copy",
        "error",
        "threshold",
        "new_rho",
        "new_rho",
        "new_rho",
        "new_rho",
        "new_rho",
        "np",
        "linalg",
        "norm",
        "new_rho",
        "new_rho",
        "new_rho",
        "new_rho",
        "target_unitary",
        "np",
        "ndarray",
        "omega",
        "measured_opdm",
        "np",
        "ndarray",
        "target_unitary",
        "conj",
        "T",
        "measured_opdm",
        "target_unitary",
        "i",
        "measured_opdm",
        "shape",
        "fidelity_witness_val",
        "undone_opdm",
        "i",
        "i",
        "omega",
        "i",
        "omega",
        "i",
        "undone_opdm",
        "i",
        "i",
        "fidelity_witness_val",
        "target_unitary",
        "np",
        "ndarray",
        "measured_opdm",
        "np",
        "ndarray",
        "np",
        "linalg",
        "eigh",
        "measured_opdm",
        "np",
        "where",
        "np",
        "isclose",
        "w",
        "v",
        "eig_of_one_idx",
        "abs",
        "np",
        "linalg",
        "det",
        "target_unitary",
        "len",
        "eig_of_one_idx",
        "conj",
        "T",
        "occupied_eigvects"
    ],
    "literals": [
        "'qubits'",
        "'xy_even'",
        "'xy_odd'",
        "'z'",
        "'qubit_permutations'",
        "'xy_even'",
        "'xy_odd'",
        "'xy_even'",
        "'xy_even'",
        "\"covariance matrix for xy_even:{} not postiive semidefinite\"",
        "'xy_odd'",
        "'xy_odd'",
        "\"covariance matrix for xy_odd:{} not postiive semidefinite\"",
        "'z'",
        "'z'",
        "'z'",
        "'xy_even'",
        "'xy_odd'",
        "'z'",
        "\"covariance matrix for xy_even:{} not postiive semidefinite\"",
        "'xy_even'",
        "\"covariance matrix for xy_odd:{} not postiive semidefinite\"",
        "'xy_odd'",
        "\"covariance matrix for z:{} not postiive semidefinite\"",
        "'z'",
        "'xy_even'",
        "'xy_odd'",
        "'z'"
    ],
    "variables": [
        "qubits",
        "num_qubits",
        "opdm",
        "variance_dict",
        "data",
        "data",
        "q0",
        "q1",
        "qA",
        "qB",
        "even_pairs",
        "odd_pairs",
        "data",
        "even_cov_mat",
        "circuit_idx",
        "w",
        "_",
        "data",
        "odd_cov_mat",
        "circuit_idx",
        "w",
        "_",
        "data",
        "opdm",
        "qubit_idx",
        "qubit_idx",
        "circuit_idx",
        "num_qubits",
        "qubit_permutations",
        "variance_dict",
        "e_real_pairs",
        "o_real_pairs",
        "even_cov_mat",
        "even_cov_mat",
        "ridx",
        "cidx",
        "w",
        "_",
        "circuit_idx",
        "odd_cov_mat",
        "odd_cov_mat",
        "ridx",
        "cidx",
        "w",
        "_",
        "circuit_idx",
        "z_cov_mat",
        "z_cov_mat",
        "ridx",
        "cidx",
        "w",
        "_",
        "circuit_idx",
        "num_qubits",
        "qubit_permutations",
        "new_opdm",
        "e_real_pairs",
        "o_real_pairs",
        "even_means",
        "opdm_terms",
        "new_opdm",
        "pp0",
        "pp1",
        "new_opdm",
        "pp1",
        "pp0",
        "odd_means",
        "opdm_terms",
        "new_opdm",
        "pp0",
        "pp1",
        "new_opdm",
        "pp1",
        "pp0",
        "opdm_diagonal",
        "new_opdm",
        "spin_opdm",
        "spin_tpdm",
        "molecular_hamiltonian",
        "rdms",
        "error",
        "new_rho",
        "new_rho",
        "error",
        "undone_opdm",
        "fidelity_witness_val",
        "w",
        "v",
        "eig_of_one_idx",
        "occupied_eigvects"
    ],
    "comments": [
        "pylint: disable=C",
        "testpragma: no cover",
        "get covariance matrices",
        "get Cov(qid_a, qid_b)",
        "Cov-mat is symmetric so only need upper right val",
        "divide covariance by number of samples",
        "because CLT converges to N(mu, sigma**2 / n_samples)",
        "No re-ordering",
        "testpragma: no cover",
        "0.25 comes from the fact that we estimate 0.5 (i^ j + j^ i)",
        "testpragma: no cover",
        "get all the even and odd pairs",
        "resample_diagonal_terms",
        "because fill_diagonal documentat seems out of date."
    ],
    "docstrings": [
        "\"\"\"\n    kronecker delta function\n    \"\"\"",
        "\"\"\"\n    Compute the trace distance between two matrices\n\n    :param rho: matrix 1\n    :param sigma: matrix 2\n    :return: a floating point number greater than 0.\n    \"\"\"",
        "\"\"\"\n    Take experimental results and compute the 1-RDM\n\n    :param results_dict: Results dictionary generated from\n                         OpdmFunctional._calculate_data\n    :param return_variance: Optional return covariances of the opdm\n    \"\"\"",
        "\"\"\"\n    Covariance generation from the opdm is from a Gaussian state\n\n    :param opdm: 1-RDM\n    :param num_samples:  number of samples to estimate the 1-RDM\n    :return: dictionary of covariances\n    \"\"\"",
        "\"\"\"\n    Resample an 1-RDM assuming Gaussian statistics\n\n    :param opdm: mean-values\n    :param var_dict: dictionary of covariances indexed by circuit and\n                     permutation\n    :param fixed_trace_psd_projection: Boolean for if fixed trace positive\n                                       projection should be applied\n    :return:\n    \"\"\"",
        "\"\"\"\n    Evaluate the energy of an opdm assuming the 2-RDM is opdm ^ opdm\n\n    :param opdm: single spin-component of the full spin-orbital opdm.\n    :param constant: constant shift to the Hamiltonian. Commonly this is the\n                     nuclear repulsion energy.\n    :param one_body_tensor: spatial one-body integrals\n    :param two_body_tensor: spatial two-body integrals\n    :return:\n    \"\"\"",
        "\"\"\"\n    Implementation of McWeeny purification\n\n    :param rho: density to purifiy.\n    :param threshold: stop when ||P**2 - P|| falls below this value.\n    :return: purified density matrix.\n    \"\"\"",
        "\"\"\"\n    Calculate the fidelity witness. This is a lower bound to the true fidelity\n\n    :param target_unitary: unitary representing the intended basis change.\n    :param omega: List of integers corresponding to the initial computational\n                  basis state.\n    :param measured_opdm: opdm to build the witness from.\n    :return: floating point number less than 1.  This can be negative!\n    \"\"\"",
        "\"\"\"\n    Computes the fidelity between an idempotent 1-RDM and the target unitary\n\n    :param target_unitary: unitary representing basis transformation.\n    :param measured_opdm: purified opdm.\n    \"\"\""
    ],
    "functions": [
        "kdelta",
        "trace_distance",
        "compute_opdm",
        "covariance_construction_from_opdm",
        "cov_func",
        "resample_opdm",
        "energy_from_opdm",
        "mcweeny_purification",
        "fidelity_witness",
        "fidelity"
    ],
    "classes": []
}