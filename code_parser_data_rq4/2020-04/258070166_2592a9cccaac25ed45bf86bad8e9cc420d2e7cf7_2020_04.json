{
    "identifiers": [
        "coolpuppy",
        "coolpuppy",
        "__version__",
        "coolpuppy",
        "normCis",
        "load_array_with_header",
        "get_enrichment",
        "get_min_max",
        "numpy",
        "np",
        "matplotlib",
        "matplotlib",
        "use",
        "matplotlib",
        "colors",
        "LogNorm",
        "Normalize",
        "matplotlib",
        "ticker",
        "FormatStrFormatter",
        "mpl_toolkits",
        "axes_grid1",
        "ImageGrid",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "mpl",
        "matplotlib",
        "font_manager",
        "font_manager",
        "itertools",
        "product",
        "argparse",
        "argparse",
        "ArgumentParser",
        "formatter_class",
        "argparse",
        "ArgumentDefaultsHelpFormatter",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "choices",
        "help",
        "parser",
        "add_argument",
        "required",
        "choices",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "action",
        "version",
        "__version__",
        "parser",
        "mpl",
        "rcParams",
        "mpl",
        "rcParams",
        "parse_args_plotpuppy",
        "parser",
        "parse_args",
        "load_array_with_header",
        "f",
        "f",
        "args",
        "pileup_files",
        "args",
        "norm_corners",
        "normCis",
        "pup",
        "pup",
        "pups",
        "len",
        "pups",
        "args",
        "n_cols",
        "auto_rows_cols",
        "n",
        "args",
        "n_cols",
        "n",
        "round",
        "n",
        "args",
        "n_cols",
        "args",
        "n_cols",
        "args",
        "n_cols",
        "args",
        "col_names",
        "args",
        "col_names",
        "strip",
        "split",
        "args",
        "row_names",
        "args",
        "row_names",
        "strip",
        "split",
        "args",
        "col_names",
        "n_cols",
        "len",
        "args",
        "col_names",
        "ValueError",
        "n_cols",
        "len",
        "args",
        "col_names",
        "n_cols",
        "len",
        "args",
        "col_names",
        "args",
        "row_names",
        "n_rows",
        "len",
        "args",
        "row_names",
        "ValueError",
        "args",
        "enrichment",
        "args",
        "enrichment",
        "ValueError",
        "plt",
        "figure",
        "dpi",
        "args",
        "dpi",
        "figsize",
        "max",
        "n_cols",
        "max",
        "n_rows",
        "ImageGrid",
        "f",
        "share_all",
        "nrows_ncols",
        "n_rows",
        "n_cols",
        "axes_pad",
        "add_all",
        "label_mode",
        "cbar_location",
        "cbar_mode",
        "args",
        "cbar_mode",
        "cbar_size",
        "cbar_pad",
        "np",
        "array",
        "grid",
        "reshape",
        "n_rows",
        "n_cols",
        "args",
        "scale",
        "LogNorm",
        "args",
        "symmetric",
        "Normalize",
        "n_rows",
        "n_cols",
        "i",
        "n_grid",
        "len",
        "pups",
        "np",
        "empty",
        "n_rows",
        "n_cols",
        "dtype",
        "i",
        "pup",
        "pups",
        "extra",
        "pup",
        "pupsarray",
        "reshape",
        "n_rows",
        "n_cols",
        "args",
        "cbar_mode",
        "get_min_max",
        "pups",
        "args",
        "vmin",
        "args",
        "vmax",
        "sym",
        "sym",
        "args",
        "cbar_mode",
        "get_min_max",
        "row",
        "args",
        "vmin",
        "args",
        "vmax",
        "sym",
        "sym",
        "row",
        "pups",
        "args",
        "cbar_mode",
        "np",
        "asarray",
        "grid",
        "cbar_axes",
        "reshape",
        "n_rows",
        "n_cols",
        "i",
        "n_rows",
        "args",
        "cbar_mode",
        "colorscales",
        "i",
        "j",
        "n_cols",
        "pups",
        "i",
        "j",
        "args",
        "cbar_mode",
        "np",
        "nanmin",
        "pups",
        "i",
        "j",
        "np",
        "nanmax",
        "pups",
        "i",
        "j",
        "axarr",
        "i",
        "j",
        "ax",
        "imshow",
        "pups",
        "i",
        "j",
        "interpolation",
        "norm",
        "norm",
        "vmax",
        "vmax",
        "vmin",
        "vmin",
        "cmap",
        "args",
        "cmap",
        "extent",
        "ax",
        "set_xticks",
        "ax",
        "set_yticks",
        "args",
        "enrichment",
        "round",
        "get_enrichment",
        "pups",
        "i",
        "j",
        "args",
        "enrichment",
        "ax",
        "text",
        "s",
        "enr",
        "y",
        "x",
        "ha",
        "va",
        "size",
        "transform",
        "ax",
        "transAxes",
        "args",
        "cbar_mode",
        "cbs",
        "append",
        "plt",
        "colorbar",
        "m",
        "cax",
        "grid",
        "cbar_axes",
        "i",
        "j",
        "axarr",
        "i",
        "j",
        "axis",
        "grid",
        "cbar_axes",
        "i",
        "j",
        "axis",
        "args",
        "cbar_mode",
        "cbs",
        "append",
        "plt",
        "colorbar",
        "m",
        "cax",
        "grid",
        "cbar_axes",
        "i",
        "args",
        "col_names",
        "i",
        "name",
        "args",
        "col_names",
        "axarr",
        "i",
        "set_xlabel",
        "name",
        "args",
        "row_names",
        "i",
        "name",
        "args",
        "row_names",
        "axarr",
        "i",
        "set_ylabel",
        "name",
        "args",
        "cbar_mode",
        "cbs",
        "append",
        "plt",
        "colorbar",
        "m",
        "cax",
        "grid",
        "cbar_axes",
        "plt",
        "savefig",
        "args",
        "output",
        "bbox_inches"
    ],
    "literals": [
        "\"Agg\"",
        "\"--cmap\"",
        "\"coolwarm\"",
        "\"--symmetric\"",
        "\"--vmin\"",
        "\"--vmax\"",
        "\"--scale\"",
        "\"log\"",
        "\"linear\"",
        "\"log\"",
        "\"--cbar_mode\"",
        "\"single\"",
        "\"single\"",
        "\"edge\"",
        "\"each\"",
        "\"--n_cols\"",
        "\"--col_names\"",
        "\"--row_names\"",
        "\"--norm_corners\"",
        "\"--enrichment\"",
        "\"--dpi\"",
        "\"--output\"",
        "\"-o\"",
        "\"pup.pdf\"",
        "\"pileup_files\"",
        "\"*\"",
        "\"-v\"",
        "\"--version\"",
        "\"version\"",
        "\"svg.fonttype\"",
        "u\"none\"",
        "\"pdf.fonttype\"",
        "'data'",
        "\", \"",
        "\",\"",
        "\", \"",
        "\",\"",
        "f\"\"\"Number of column names is not equal to number of\n                columns! You specified {n_cols} columns and {len(args.col_names)}\n                column names\"\"\"",
        "\"L\"",
        "\"right\"",
        "\"5%\"",
        "\"3%\"",
        "\"log\"",
        "\"single\"",
        "\"edge\"",
        "\"each\"",
        "\"edge\"",
        "\"each\"",
        "\"none\"",
        "\"left\"",
        "\"top\"",
        "\"x-small\"",
        "\"each\"",
        "\"off\"",
        "\"off\"",
        "\"edge\"",
        "\"single\"",
        "\"tight\""
    ],
    "variables": [
        "parser",
        "parser",
        "args",
        "pups",
        "pups",
        "n",
        "n_rows",
        "n_cols",
        "n_rows",
        "n_cols",
        "n_cols",
        "n_rows",
        "args",
        "col_names",
        "args",
        "row_names",
        "f",
        "grid",
        "axarr",
        "sym",
        "norm",
        "sym",
        "norm",
        "n_grid",
        "extra",
        "pupsarray",
        "pupsarray",
        "i",
        "pups",
        "vmin",
        "vmax",
        "colorscales",
        "grid",
        "cbar_axes",
        "cbs",
        "vmin",
        "vmax",
        "vmin",
        "vmax",
        "ax",
        "m",
        "enr"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "parser.add_argument(\"--n_rows\", type=int, default=0,",
        "required=False,",
        "help=\"\"\"How many rows to use for plotting the data\"\"\")",
        "similar to subplot(111)",
        "direction='column',",
        "f, axarr = plt.subplots(n_rows, n_cols, sharex=True, sharey=True,# similar to subplot(111)",
        "figsize=(max(3.5, n_cols+0.5), max(3, n_rows)),",
        "dpi=300, squeeze=False,",
        "constrained_layout=True",
        ")",
        "n = i*n_cols+(j%n_cols)",
        ", format=FormatStrFormatter('%.2f'))",
        "plt.setp(cbs, ticks=mpl.ticker.LogLocator())",
        "if sym:",
        "cb.ax.yaxis.set_ticks([vmin, 1, vmax])"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Mon Mar 23 14:05:06 2020\n\n@author: ilya\n\"\"\"",
        "\"\"\"Colourmap to use\n                (see https://matplotlib.org/users/colormaps.html)\"\"\"",
        "\"\"\"Whether to make colormap symmetric around 1, if log scale\"\"\"",
        "\"\"\"Value for the lowest colour\"\"\"",
        "\"\"\"Value for the highest colour\"\"\"",
        "\"\"\"Whether to use linear or log scaling for mapping colours\"\"\"",
        "\"\"\"Whether to show a single colorbar, one per row or one for each subplot\n             \"\"\"",
        "\"\"\"How many columns to use for plotting the data.\n                If 0, automatically make the figure as square as possible\"\"\"",
        "\"\"\"A comma separated list of column names\"\"\"",
        "\"\"\"A comma separated list of row names\"\"\"",
        "\"\"\"Whether to normalize pileups by their top left and bottom right corners.\n                0 for no normalization, positive number to define the size of the corner\n                squares whose values are averaged\"\"\"",
        "\"\"\"Whether to show the level of enrichment in the central pixels.\n                0 to not show, odd positive number to define the size of the central\n                square whose values are averaged\"\"\"",
        "\"\"\"DPI of the output plot. Try increasing if heatmaps look blurry\"\"\"",
        "\"\"\"Where to save the plot\"\"\"",
        "\"\"\"All files to plot\"\"\"",
        "\"\"\"Number of row names is not equal to number of\n                         rows!\"\"\"",
        "\"\"\"Side of the square to calculate enrichment has\n                         to be an odd number\"\"\""
    ],
    "functions": [
        "parse_args_plotpuppy",
        "main"
    ],
    "classes": []
}