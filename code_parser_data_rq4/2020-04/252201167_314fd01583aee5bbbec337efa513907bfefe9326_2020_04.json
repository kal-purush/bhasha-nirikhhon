{
    "identifiers": [
        "keras",
        "backend",
        "K",
        "inception_v4",
        "numpy",
        "np",
        "cv2",
        "os",
        "sklearn",
        "metrics",
        "f1_score",
        "ClasificarDiaNoche",
        "diaONoche",
        "probarDia",
        "FuncionesPreprocesamiento",
        "miCLAHE",
        "imclahe",
        "miWBsimple",
        "miWBgrayworld",
        "miWB_LB",
        "CrearSubsetEquilibrado",
        "sacarPaths",
        "image",
        "central_fraction",
        "central_fraction",
        "central_fraction",
        "ValueError",
        "central_fraction",
        "image",
        "image",
        "shape",
        "img_shape",
        "central_fraction",
        "np",
        "divide",
        "img_shape",
        "fraction_offset",
        "np",
        "divide",
        "img_shape",
        "fraction_offset",
        "img_shape",
        "bbox_h_start",
        "img_shape",
        "bbox_w_start",
        "image",
        "bbox_h_start",
        "bbox_h_start",
        "bbox_h_size",
        "bbox_w_start",
        "bbox_w_start",
        "bbox_w_size",
        "image",
        "img_path",
        "np",
        "asarray",
        "img_path",
        "central_crop",
        "im",
        "cv2",
        "resize",
        "im",
        "inception_v4",
        "preprocess_input",
        "im",
        "K",
        "image_data_format",
        "np",
        "transpose",
        "im",
        "im",
        "reshape",
        "im",
        "reshape",
        "im",
        "inception_v4",
        "create_model",
        "weights",
        "include_top",
        "diaONoche",
        "sacarPaths",
        "np",
        "empty",
        "len",
        "subset",
        "i",
        "subset",
        "path_carpet",
        "i",
        "probarDia",
        "path_completo",
        "clasDia",
        "cv2",
        "imread",
        "path_completo",
        "hora",
        "miWB_LB",
        "img_or",
        "imclahe",
        "img_or",
        "get_processed_image",
        "im_efec",
        "model",
        "predict",
        "img",
        "classes",
        "np",
        "argmax",
        "preds",
        "preds",
        "np",
        "argmax",
        "preds",
        "classes",
        "np",
        "argmax",
        "preds",
        "cont",
        "f1_score",
        "subset",
        "preds_final",
        "average"
    ],
    "literals": [
        "'central_fraction must be within (0, 1]'",
        "\"channels_first\"",
        "\"__main__\"",
        "'imagenet'",
        "'/Users/johngonzalez/Desktop/Trabajos JF/Documents/U/Octavo Semestre/Vision Artificial/Proyecto/iwildcam-2019-fgvc6/train.csv'",
        "'/Users/johngonzalez/Desktop/Trabajos JF/Documents/U/Octavo Semestre/Vision Artificial/Proyecto/iwildcam-2019-fgvc6/train_images/'",
        "'/Users/johngonzalez/Desktop/Trabajos JF/Documents/U/Octavo Semestre/Vision Artificial/Proyecto/iwildcam-2019-fgvc6/train_images/'",
        "\"Class is: \"",
        "\"Certainty is: \"",
        "'macro'"
    ],
    "variables": [
        "img_shape",
        "depth",
        "fraction_offset",
        "bbox_h_start",
        "bbox_w_start",
        "bbox_h_size",
        "bbox_w_size",
        "image",
        "im",
        "im",
        "im",
        "im",
        "im",
        "im",
        "im",
        "model",
        "clasDia",
        "subset",
        "preds_final",
        "cont",
        "path_carpet",
        "path_completo",
        "hora",
        "classes",
        "img_or",
        "im_efec",
        "im_efec",
        "img",
        "preds",
        "preds_final",
        "cont",
        "f1_fin"
    ],
    "comments": [
        "If you want to use a GPU set its index here",
        "os.environ['CUDA_VISIBLE_DEVICES'] = ''",
        "This function comes from Google's ImageNet Preprocessing Script",
        "Load image and convert from BGR to RGB",
        "(cv2.imread(img_path))[:,:,::-1]",
        "Create model and load pre-trained weights",
        "Sacar Subset",
        "subset = sacarPaths('/Users/johngonzalez/Desktop/Trabajos JF/Documents/U/Octavo Semestre/Vision Artificial/Proyecto/iwildcam-2019-fgvc6/train.csv',",
        "'/Users/johngonzalez/Desktop/Trabajos JF/Documents/U/Octavo Semestre/Vision Artificial/Proyecto/iwildcam-2019-fgvc6/train_images/')",
        "Day 'N' Night",
        "Open Class labels dictionary. (human readable label given ID)",
        "classes = eval(open('validation_utils/class_names.txt', 'r').read())",
        "Preprocesamiento",
        "De dia",
        "Load test image!",
        "Run prediction on test image"
    ],
    "docstrings": [
        "'''\nCopyright 2017 TensorFlow Authors and Kent Sommer\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n'''",
        "\"\"\"Crop the central region of the image.\n\tRemove the outer parts of an image but retain the central region of the image\n\talong each dimension. If we specify central_fraction = 0.5, this function\n\treturns the region marked with \"X\" in the below diagram.\n\t   --------\n\t  |        |\n\t  |  XXXX  |\n\t  |  XXXX  |\n\t  |        |   where \"X\" is the central 50% of the image.\n\t   --------\n\tArgs:\n\timage: 3-D array of shape [height, width, depth]\n\tcentral_fraction: float (0, 1], fraction of size to crop\n\tRaises:\n\tValueError: if central_crop_fraction is not within (0, 1].\n\tReturns:\n\t3-D array\n\t\"\"\""
    ],
    "functions": [
        "central_crop",
        "get_processed_image"
    ],
    "classes": []
}