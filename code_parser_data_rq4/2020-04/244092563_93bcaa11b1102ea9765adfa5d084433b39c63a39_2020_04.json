{
    "identifiers": [
        "IO",
        "Security",
        "Cryptography",
        "Text",
        "CommonLib",
        "Encoding",
        "Unicode",
        "GetBytes",
        "plainText",
        "password",
        "Encoding",
        "Unicode",
        "GetBytes",
        "plainText",
        "Aes",
        "Create",
        "Rfc2898DeriveBytes",
        "password",
        "salt",
        "pbkdf2",
        "GetBytes",
        "pbkdf2",
        "GetBytes",
        "aes",
        "Key",
        "aesKey",
        "aes",
        "IV",
        "aesIV",
        "MemoryStream",
        "CryptoStream",
        "ms",
        "aes",
        "CreateEncryptor",
        "CryptoStreamMode",
        "Write",
        "cs",
        "Write",
        "plainBytes",
        "plainBytes",
        "Length",
        "Convert",
        "ToBase64String",
        "ms",
        "ToArray",
        "cryptoText",
        "password",
        "Convert",
        "FromBase64String",
        "cryptoText",
        "Replace",
        "Aes",
        "Create",
        "Rfc2898DeriveBytes",
        "password",
        "salt",
        "pbkdf2",
        "GetBytes",
        "pbkdf2",
        "GetBytes",
        "aes",
        "Key",
        "aesKey",
        "aes",
        "IV",
        "aesIV",
        "MemoryStream",
        "CryptoStream",
        "ms",
        "aes",
        "CreateDecryptor",
        "CryptoStreamMode",
        "Write",
        "cs",
        "Write",
        "cryptoBytes",
        "cryptoBytes",
        "Length",
        "Encoding",
        "Unicode",
        "GetString",
        "ms",
        "ToArray",
        "ms",
        "Close",
        "DecryptedStr"
    ],
    "literals": [
        "\"salts@@\"",
        "\" \"",
        "\"+\""
    ],
    "variables": [
        "salt",
        "plainBytes",
        "aes",
        "pbkdf2",
        "aesKey",
        "aesIV",
        "ms",
        "cs",
        "cryptoBytes",
        "aes",
        "pbkdf2",
        "aesKey",
        "aesIV",
        "ms",
        "cs",
        "DecryptedStr"
    ],
    "comments": [
        "generating keys ,IV",
        "generating keys ,IV",
        "var ms = new MemoryStream(cryptoBytes, 0, cryptoBytes.Length, true);"
    ],
    "docstrings": [],
    "functions": [
        "Encrypt",
        "Decrypt"
    ],
    "classes": [
        "SecurityCipher"
    ]
}