{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "absl",
        "flags",
        "argparse_flags",
        "argv",
        "argparse_flags",
        "ArgumentParser",
        "prog",
        "description",
        "define_flags",
        "parser",
        "parser",
        "parse_args",
        "argv",
        "parser",
        "parser",
        "add_subparsers",
        "parser",
        "add_argument",
        "help",
        "DEFAULT_ORIGIN",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "subparsers",
        "add_parser",
        "help",
        "upload",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_UPLOAD",
        "upload",
        "add_argument",
        "metavar",
        "help",
        "upload",
        "add_argument",
        "help",
        "upload",
        "add_argument",
        "help",
        "upload",
        "add_argument",
        "nargs",
        "help",
        "subparsers",
        "add_parser",
        "help",
        "update_metadata",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_UPDATE_METADATA",
        "update_metadata",
        "add_argument",
        "metavar",
        "help",
        "update_metadata",
        "add_argument",
        "help",
        "update_metadata",
        "add_argument",
        "help",
        "subparsers",
        "add_parser",
        "help",
        "inherited_absl_flags",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_DELETE",
        "add_argument",
        "metavar",
        "help",
        "subparsers",
        "add_parser",
        "help",
        "list_parser",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_LIST",
        "subparsers",
        "add_parser",
        "help",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_EXPORT",
        "add_argument",
        "metavar",
        "help",
        "subparsers",
        "add_parser",
        "help",
        "auth_parser",
        "set_defaults",
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_AUTH",
        "auth_parser",
        "add_subparsers",
        "auth_subparsers",
        "add_parser",
        "help",
        "auth_revoke",
        "set_defaults",
        "AUTH_SUBCOMMAND_FLAG",
        "AUTH_SUBCOMMAND_KEY_REVOKE"
    ],
    "literals": [
        "\"_uploader__subcommand\"",
        "\"UPLOAD\"",
        "\"DELETE\"",
        "\"LIST\"",
        "\"EXPORT\"",
        "\"UPDATEMETADATA\"",
        "\"AUTH\"",
        "\"_uploader__subcommand_auth\"",
        "\"REVOKE\"",
        "\"https://tensorboard.dev\"",
        "\"uploader\"",
        "\"Upload your TensorBoard experiments to TensorBoard.dev\"",
        "\"--origin\"",
        "\"\"",
        "\"Experimental. Origin for TensorBoard.dev service to which \"",
        "\"to connect. If not set, defaults to %r.\"",
        "\"--api_endpoint\"",
        "\"\"",
        "\"Experimental. Direct URL for the API server accepting \"",
        "\"write requests. If set, will skip initial server handshake \"",
        "\"unless `--origin` is also set.\"",
        "\"--grpc_creds_type\"",
        "\"ssl\"",
        "\"local\"",
        "\"ssl\"",
        "\"ssl_dev\"",
        "\"The type of credentials to use for the gRPC client\"",
        "\"--auth_force_console\"",
        "\"store_true\"",
        "\"Set to true to force authentication flow to use the \"",
        "\"--console rather than a browser redirect to localhost.\"",
        "\"upload\"",
        "\"upload an experiment to TensorBoard.dev\"",
        "\"--logdir\"",
        "\"PATH\"",
        "\"Directory containing the logs to process\"",
        "\"--name\"",
        "\"Title of the experiment.  Max 100 characters.\"",
        "\"--description\"",
        "\"Experiment description. Markdown format.  Max 600 characters.\"",
        "\"--plugins\"",
        "\"*\"",
        "\"List of plugins for which data should be uploaded. If \"",
        "\"unspecified then data will be uploaded for all plugins supported by \"",
        "\"the server.\"",
        "\"update-metadata\"",
        "\"change the name, description, or other user \"",
        "\"metadata associated with an experiment.\"",
        "\"--experiment_id\"",
        "\"EXPERIMENT_ID\"",
        "\"ID of the experiment on which to modify the metadata.\"",
        "\"--name\"",
        "\"Title of the experiment.  Max 100 characters.\"",
        "\"--description\"",
        "\"Experiment description. Markdown format.  Max 600 characters.\"",
        "\"delete\"",
        "\"permanently delete an experiment\"",
        "\"--experiment_id\"",
        "\"EXPERIMENT_ID\"",
        "\"ID of an experiment to delete permanently\"",
        "\"list\"",
        "\"list previously uploaded experiments\"",
        "\"export\"",
        "\"download all your experiment data\"",
        "\"--outdir\"",
        "\"OUTPUT_PATH\"",
        "\"Directory into which to download all experiment data; \"",
        "\"must not yet exist\"",
        "\"auth\"",
        "\"log in, log out\"",
        "\"revoke\"",
        "\"revoke all existing credentials and log out\""
    ],
    "variables": [
        "SUBCOMMAND_FLAG",
        "SUBCOMMAND_KEY_UPLOAD",
        "SUBCOMMAND_KEY_DELETE",
        "SUBCOMMAND_KEY_LIST",
        "SUBCOMMAND_KEY_EXPORT",
        "SUBCOMMAND_KEY_UPDATE_METADATA",
        "SUBCOMMAND_KEY_AUTH",
        "AUTH_SUBCOMMAND_FLAG",
        "AUTH_SUBCOMMAND_KEY_REVOKE",
        "DEFAULT_ORIGIN",
        "parser",
        "subparsers",
        "upload",
        "update_metadata",
        "list_parser",
        "auth_parser",
        "auth_subparsers",
        "auth_revoke"
    ],
    "comments": [
        "Copyright 2020 The TensorFlow Authors. All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "==============================================================================",
        "We would really like to call this next flag `--experiment` rather",
        "than `--experiment_id`, but this is broken inside Google due to a",
        "long-standing Python bug: <https://bugs.python.org/issue14365>",
        "(Some Google-internal dependencies define `--experimental_*` flags.)",
        "This isn't exactly a principled fix, but it gets the job done."
    ],
    "docstrings": [
        "\"\"\"Flags parser for TensorBoard.dev uploader.\"\"\"",
        "\"\"\"Parse flags for TensorBoard.dev uploader.\n\n    Exits if flag values are invalid.\n\n    Args:\n      argv: CLI arguments, as with `sys.argv`, where the first argument is taken\n        to be the name of the program being executed.\n    \"\"\"",
        "\"\"\"Configures flags on the provided argument parser.\n\n    Integration point for `tensorboard.program`'s subcommand system.\n\n    Args:\n      parser: An `argparse.ArgumentParser` to be mutated.\n    \"\"\""
    ],
    "functions": [
        "parse_flags",
        "define_flags"
    ],
    "classes": []
}