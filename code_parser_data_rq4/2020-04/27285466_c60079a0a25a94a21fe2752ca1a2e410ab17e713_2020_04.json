{
    "identifiers": [
        "com",
        "github",
        "davidmoten",
        "rx",
        "operators",
        "java",
        "util",
        "Arrays",
        "asList",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "CountDownLatch",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicInteger",
        "java",
        "util",
        "regex",
        "Pattern",
        "org",
        "junit",
        "Test",
        "com",
        "github",
        "davidmoten",
        "rx",
        "Transformers",
        "rx",
        "Observable",
        "rx",
        "Subscriber",
        "rx",
        "observers",
        "AssertableSubscriber",
        "rx",
        "observers",
        "TestSubscriber",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithPattern",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "empty",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "empty",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "check",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "checkWithBackpressure",
        "o",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "compose",
        "Transformers",
        "split",
        "ts",
        "TestSubscriber",
        "create",
        "o",
        "subscribe",
        "ts",
        "ts",
        "requestMore",
        "ts",
        "assertValues",
        "ts",
        "requestMore",
        "ts",
        "assertValues",
        "ts",
        "requestMore",
        "ts",
        "assertValues",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "o",
        "Observable",
        "just",
        "expected",
        "asList",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "Test",
        "expected",
        "Observable",
        "just",
        "compose",
        "Transformers",
        "split",
        "Test",
        "expected",
        "Observable",
        "just",
        "compose",
        "Transformers",
        "split",
        "Test",
        "Observable",
        "empty",
        "compose",
        "Transformers",
        "split",
        "test",
        "assertNoValues",
        "assertCompleted",
        "o",
        "expected",
        "o",
        "compose",
        "Transformers",
        "split",
        "subscribe",
        "createBackpressureSubscriber",
        "assertEquals",
        "expected",
        "o",
        "expected",
        "o",
        "compose",
        "Transformers",
        "split",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "o",
        "expected",
        "o",
        "compose",
        "Transformers",
        "split",
        "Pattern",
        "compile",
        "toList",
        "toBlocking",
        "single",
        "assertEquals",
        "expected",
        "latch",
        "Override",
        "request",
        "Override",
        "latch",
        "countDown",
        "Override",
        "e",
        "e",
        "printStackTrace",
        "e",
        "Override",
        "s",
        "add",
        "s",
        "request"
    ],
    "literals": [
        "\"boo:an\"",
        "\"d:you\"",
        "\"boo\"",
        "\"and\"",
        "\"you\"",
        "\"boo:an\"",
        "\"d:you\"",
        "\"boo\"",
        "\"and\"",
        "\"you\"",
        "\"boo:an\"",
        "\"d:you\"",
        "\"boo\"",
        "\"and\"",
        "\"you\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"abc\"",
        "\"abc\"",
        "\"abc\"",
        "\"abc\"",
        "\":\"",
        "\"\"",
        "\"\"",
        "\":\"",
        "\"\"",
        "\"\"",
        "\"::boo:an\"",
        "\"d:::you::\"",
        "\"\"",
        "\"\"",
        "\"boo\"",
        "\"and\"",
        "\"\"",
        "\"\"",
        "\"you\"",
        "\"\"",
        "\"\"",
        "\"::boo:an\"",
        "\"d:::you::\"",
        "\"\"",
        "\"\"",
        "\"boo\"",
        "\"and\"",
        "\"\"",
        "\"\"",
        "\"you\"",
        "\"\"",
        "\"\"",
        "\"hello\"",
        "\"there\"",
        "\":how\"",
        "\"hellothere\"",
        "\"how\"",
        "\"boo:an\"",
        "\"d:you\"",
        "\":\"",
        "\"boo\"",
        "\"boo\"",
        "\"and\"",
        "\"boo\"",
        "\"and\"",
        "\"you\"",
        "\"boo:an\"",
        "\"d:you\"",
        "\"bo\"",
        "\"an\"",
        "\"yo\"",
        "\":\"",
        "\"bothersom\"",
        "\"e:an\"",
        "\"d:you\"",
        "\"bo\"",
        "\"an\"",
        "\"yo\"",
        "\":\"",
        "\"bother\"",
        "\"som\"",
        "\"e:an\"",
        "\"d:you\"",
        "\"bo\"",
        "\"an\"",
        "\"yo\"",
        "\":\"",
        "\"bother\"",
        "\"som\"",
        "\"e:an\"",
        "\"d:you are \"",
        "\"  something else wh\"",
        "\"at a long description\"",
        "\"bo\"",
        "\"an\"",
        "\"yo\"",
        "\":\"",
        "\"bother\"",
        "\"bo\"",
        "\":\"",
        "\"bot\"",
        "\"her\"",
        "\"bo\"",
        "\":\"",
        "\"abc\"",
        "\":\"",
        "\"abc\"",
        "\":\"",
        "\":\"",
        "\":\"",
        "\":\"",
        "\":\""
    ],
    "variables": [],
    "comments": [
        "",
        "",
        "with limit tests",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
    ],
    "docstrings": [],
    "functions": [
        "testNormal",
        "testWithPattern",
        "testNormalWithBackpressure",
        "testEmptyProducesNothing",
        "testEmptyProducesNothingWithBackpressure",
        "testBlankProducesSingleBlank",
        "testBlankProducesBlankWithBackpressure",
        "testNoSeparatorProducesSingle",
        "testNoSeparatorProducesSingleWithBackpressure",
        "testSeparatorOnlyProducesTwoBlanks",
        "testSeparatorOnlyProducesTwoBlanksWithBackpressure",
        "testEmptyItemsAtEndEmitted",
        "testEmptyItemsAtEndEmittedWithBackpressure",
        "testSplitOperatorDoesNotStallDueToInsufficientUpstreamRequests",
        "testBackpressureOneByOneWithBufferEmissions",
        "testLimitHonouredOnAllItemsIncludingLast",
        "testLimitWhenLongItemSpreadAcrossItems",
        "testLimitWhenLongItemSpreadAcrossMoreItems",
        "testLimitWhenLongItemSpreadAcrossMoreItemsAndFinalItemSpreadAcrossMany",
        "testLimitOnOneLongItem",
        "testLimitOnOneLongItemSpread",
        "testLimitThrowsOnNegativeMaxPatternLength",
        "testLimitThrowsOnNegativeMaxItemLength",
        "testLimitOnEmptyStream",
        "checkWithBackpressure",
        "check",
        "checkWithPattern",
        "createBackpressureSubscriber",
        "onStart",
        "onCompleted",
        "onError",
        "onNext"
    ],
    "classes": [
        "StringSplitWithLimitTest"
    ]
}