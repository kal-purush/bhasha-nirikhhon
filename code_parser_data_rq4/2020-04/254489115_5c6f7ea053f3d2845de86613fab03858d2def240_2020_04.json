{
    "identifiers": [
        "multiloan",
        "utils",
        "pay_loan",
        "money_amount",
        "compint",
        "warnings",
        "warn",
        "pandas",
        "pd",
        "numpy",
        "np",
        "principal",
        "rate",
        "payment",
        "n",
        "t",
        "stop",
        "principal",
        "rate",
        "payment",
        "n",
        "t",
        "stop",
        "reset",
        "principal",
        "property",
        "balances",
        "amount",
        "amount",
        "payment",
        "pay_loan",
        "amount",
        "balance",
        "rate",
        "n",
        "t",
        "stop",
        "balances",
        "balances",
        "payments",
        "payments",
        "sum",
        "payments",
        "len",
        "payments",
        "amount",
        "amount",
        "payment",
        "balances",
        "compint",
        "prev_balance",
        "rate",
        "n",
        "t",
        "curr_balance",
        "amount",
        "amount",
        "curr_balance",
        "curr_balance",
        "curr_pay",
        "payments",
        "append",
        "curr_pay",
        "balances",
        "append",
        "new_amount",
        "totalpay",
        "curr_pay",
        "n_payments",
        "money_amount",
        "principal",
        "money_amount",
        "balance",
        "money_amount",
        "payment",
        "money_amount",
        "totalpay",
        "n_payments",
        "rep",
        "Loans",
        "payment",
        "Loans",
        "Loans",
        "payment",
        "get_loan_table",
        "loan_df",
        "reset",
        "loan_df",
        "sort_values",
        "ascending",
        "index",
        "loan",
        "principal",
        "loan",
        "rate",
        "loan",
        "pament",
        "loan",
        "Loans",
        "pd",
        "DataFrame",
        "data",
        "columns",
        "table",
        "loan_df",
        "payment",
        "sum",
        "property",
        "balances",
        "loan",
        "Loan",
        "payrange",
        "isinstance",
        "loan",
        "t",
        "t",
        "Loan",
        "MultiLoan",
        "payrange",
        "amt",
        "payrange",
        "loan",
        "reset",
        "loan",
        "pay_remaining",
        "amt",
        "AssertionError",
        "warn",
        "amounts",
        "append",
        "amt",
        "loan",
        "totalpay",
        "loan",
        "n_payments",
        "totals",
        "append",
        "totalpay",
        "payments",
        "append",
        "n_payments",
        "np",
        "append",
        "np",
        "diff",
        "totals",
        "totals",
        "amounts",
        "totals",
        "payments",
        "pct_changes",
        "pd",
        "DataFrame",
        "pr",
        "tp",
        "pc",
        "np",
        "pr",
        "tp",
        "pc",
        "np",
        "amounts",
        "totals",
        "pct_changes",
        "payments",
        "columns",
        "min",
        "payrange",
        "max",
        "payrange",
        "rep"
    ],
    "literals": [
        "f\"\"\"\\\nOriginal principal: {money_amount(self.principal)}\nCurrent balance: {money_amount(self.balance)}\nPayment amount: {money_amount(self.payment)}\nTotal amount paid: {money_amount(self.totalpay)}\nNumber of payments: {self.n_payments}\"\"\"",
        "'rate'",
        "'principal'",
        "'rate'",
        "'payment'",
        "'\"loan\" must either be a `Loan` or `MulitLoan` object'",
        "'A payment amount was skipped because it surpassed stop criteria'",
        "'amount'",
        "'total'",
        "'pct_change'",
        "'n_payments'",
        "f'Payrange(low={min(self.payrange)}, high={max(self.payrange)})'"
    ],
    "variables": [
        "principal",
        "rate",
        "payment",
        "n",
        "t",
        "stop",
        "payments",
        "balances",
        "totalpay",
        "n_payments",
        "amount",
        "balances",
        "payments",
        "totalpay",
        "n_payments",
        "amount",
        "prev_balance",
        "curr_balance",
        "curr_pay",
        "curr_pay",
        "new_amount",
        "rep",
        "Loans",
        "_loan_dict",
        "payment",
        "loan_df",
        "loan_df",
        "rate_order",
        "data",
        "table",
        "payments",
        "balances",
        "totalpay",
        "n_payments",
        "payrange",
        "amounts",
        "totals",
        "payments",
        "totalpay",
        "n_payments",
        "pct_changes",
        "amounts",
        "totals",
        "payments",
        "pct_change",
        "df",
        "rep"
    ],
    "comments": [
        "Initialize",
        "Calculate balance since last payment",
        "Balance after accruing interest",
        "Apply payment",
        "Otherwise, pay remaining",
        "Save",
        "Initialize",
        "Order loans by rate",
        "Check Loan input",
        "Get balances at each payrange level",
        "Reset loan",
        "Payoff entirely with current amount",
        "Calculate percent change in total pays",
        "Save"
    ],
    "docstrings": [
        "\"\"\"Define loan classes\"\"\"",
        "\"\"\"\n    Object containing information and data for a single loan.\n    Default settings are for an annual rate, compounding daily, with monthly payments\n\n    Parameters\n    ----------\n    principal: Loan balance\n    rate: Interest rate for payment period\n    payment: Payment per period\n    n: Number of times interest compounds in pay period\n    t: Payment frequency within rate compounding period\n    stop: Stop criteria to avoid infinite calculation (default 1 million)\n\n    Example: Annual interest rate of .05, compounding daily, paying monthly\n\n    rate = .05\n    n = 365 (compounding each day)\n    t = 1/12 (Paying monthly, so a frequency of 1/12 per year)\n\n    Functions\n    -------\n    pay_remaining(amount): Pay the remaining balance on loan, using `payment` as default or provide a custom `amount`\n    pay_one(amount): Make a single payment using `payment` as default or provide a custom `amount`\n    reset(): Reset payment history\n\n    Properties\n    ----------\n    payments: A list of payments made on this loan\n    balances: A list of balances after accruing interest and applying payments for each pay period\n    totalpay: The total amount paid on this loan (ie. sum(payments))\n    n_payments: The number of payments on this loan (ie. len(payments) - 1, to account for initial empty payment)\n    \"\"\"",
        "\"\"\"\n        Reset payment loan payment history\n        \"\"\"",
        "\"\"\"\n        Payment schedule for paying off remaining balance\n        amount: `loan.payment` if none provided, else `amount` if provided\n        \"\"\"",
        "\"\"\"\n        Make a single payment to this loan after accruing interest for the payment period\n        Default payment is set loan `payment`\n        \"\"\"",
        "\"\"\"\n    A collection of loans. Pays off loans in order of interest rates while satisfying the minimum necessary payment\n    for each loan.\n\n    Assumes the same pay period for each loan\n    \"\"\"",
        "\"\"\"\n        Payment schedule for multiple Loans\n        :param Loans: an array of Loan objects\n        :param payment: Payment to contribute to all loans per pay period\n        \"\"\"",
        "\"\"\"Create a table with principals, rate, and minimum for each loan\"\"\"",
        "\"\"\"\n        Reset payment loan payment history\n        \"\"\"",
        "\"\"\"\n    Total payment associated with a range of loan payment values\n\n    Calculate the total cost of paying off a loan for a range (from `low` to `high`) of period payments\n    Addresses the question: \"How much will I ultimately pay if I make a contribution of $X each pay period?\"\n\n    Parameters\n    ----------\n    loan: Either a single Loan or a MultiLoan\n    payrange: A list of payment amounts\n\n    Example:\n    payrange = [100, 200, 300] will calculate the total cost of a loan at each of these monthly payments\n\n    Properties\n    ----------\n    amounts: Amount of recurring payments assessed (exluces payment amounts that don't satisfy stop criteria)\n    totals: A list of total amount paid at each level of `payrange`\n    payments: A list of the number of payments at each level of `payrange`\n    pct_change: A list of first difference percent change in `totals`\n    df: A Pandas DataFrame of the above data\n    \"\"\""
    ],
    "functions": [
        "reset",
        "balance",
        "pay_remaining",
        "pay_one",
        "__repr__",
        "get_loan_table",
        "reset",
        "balance",
        "__repr__"
    ],
    "classes": [
        "Loan",
        "MultiLoan",
        "Payrange"
    ]
}