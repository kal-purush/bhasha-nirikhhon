{
    "identifiers": [
        "org",
        "jboss",
        "arquillian",
        "testenricher",
        "cdi",
        "java",
        "lang",
        "reflect",
        "Method",
        "java",
        "util",
        "logging",
        "Logger",
        "jakarta",
        "enterprise",
        "context",
        "spi",
        "CreationalContext",
        "jakarta",
        "enterprise",
        "inject",
        "spi",
        "BeanManager",
        "jakarta",
        "enterprise",
        "inject",
        "spi",
        "InjectionTarget",
        "org",
        "jboss",
        "arquillian",
        "core",
        "api",
        "Instance",
        "org",
        "jboss",
        "arquillian",
        "core",
        "api",
        "InstanceProducer",
        "org",
        "jboss",
        "arquillian",
        "core",
        "api",
        "annotation",
        "Inject",
        "org",
        "jboss",
        "arquillian",
        "test",
        "spi",
        "TestEnricher",
        "org",
        "jboss",
        "arquillian",
        "test",
        "spi",
        "annotation",
        "TestScoped",
        "ANNOTATION_NAME",
        "log",
        "Logger",
        "getLogger",
        "getName",
        "Inject",
        "beanManagerInst",
        "SuppressWarnings",
        "Inject",
        "TestScoped",
        "creationalContextProducer",
        "beanManagerInst",
        "get",
        "SuppressWarnings",
        "cc",
        "creationalContextProducer",
        "get",
        "cc",
        "cc",
        "getBeanManager",
        "createCreationalContext",
        "creationalContextProducer",
        "cc",
        "cc",
        "testCase",
        "SecurityActions",
        "isClassPresent",
        "ANNOTATION_NAME",
        "injectClass",
        "testCase",
        "method",
        "values",
        "method",
        "getParameterTypes",
        "length",
        "SecurityActions",
        "isClassPresent",
        "ANNOTATION_NAME",
        "beanManager",
        "getBeanManager",
        "beanManager",
        "values",
        "parameterTypes",
        "method",
        "getParameterTypes",
        "i",
        "i",
        "parameterTypes",
        "length",
        "i",
        "values",
        "i",
        "getInstanceByType",
        "beanManager",
        "i",
        "method",
        "e",
        "log",
        "fine",
        "parameterTypes",
        "i",
        "e",
        "getMessage",
        "values",
        "SuppressWarnings",
        "manager",
        "position",
        "method",
        "cc",
        "getCreationalContext",
        "manager",
        "getInjectableReference",
        "method",
        "position",
        "manager",
        "cc",
        "testCase",
        "beanManager",
        "getBeanManager",
        "beanManager",
        "injectNonContextualInstance",
        "beanManager",
        "testCase",
        "log",
        "fine",
        "e",
        "e",
        "SuppressWarnings",
        "manager",
        "instance",
        "creationalContext",
        "getCreationalContext",
        "injectionTarget",
        "manager",
        "createInjectionTarget",
        "manager",
        "createAnnotatedType",
        "instance",
        "getClass",
        "injectionTarget",
        "inject",
        "instance",
        "creationalContext"
    ],
    "literals": [
        "\"jakarta.inject.Inject\"",
        "\"rawtypes\"",
        "\"unchecked\"",
        "\"CDIEnricher tried to lookup method parameter of type \"",
        "\" but caught exception: \"",
        "\"unchecked\"",
        "\"BeanManager cannot be located in context. Either you are using an archive with no beans.xml or the BeanManager has not been produced.\"",
        "\"Could not inject members\"",
        "\"unchecked\""
    ],
    "variables": [
        "beanManagerInst",
        "creationalContextProducer"
    ],
    "comments": [
        "keep it raw, core does not like generics to much",
        "Better would be to raise an exception if @Inject is present in class and BeanManager cannot be found"
    ],
    "docstrings": [
        "* JBoss, Home of Professional Open Source\n * Copyright 2020 Red Hat Inc. and/or its affiliates and other contributors\n * by the @authors tag. See the copyright.txt in the distribution for a\n * full listing of individual contributors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Enricher that provide JSR-299 CDI class and method argument injection.\n *\n * @author <a href=\"mailto:aslak@conduct.no\">Aslak Knutsen</a>\n * @version $Revision: $",
        "* @return the beanManagerInst",
        "(non-Javadoc)\n     * @see org.jboss.arquillian.spi.TestEnricher#enrich(org.jboss.arquillian.spi.Context, java.lang.Object)",
        "(non-Javadoc)\n     * @see org.jboss.arquillian.spi.TestEnricher#resolve(org.jboss.arquillian.spi.Context, java.lang.reflect.Method)"
    ],
    "functions": [
        "BeanManager",
        "getBeanManager",
        "getCreationalContext",
        "enrich",
        "resolve",
        "T",
        "getInstanceByType",
        "injectClass",
        "injectNonContextualInstance"
    ],
    "classes": [
        "CDIInjectionEnricher"
    ]
}