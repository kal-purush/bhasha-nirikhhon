{
    "identifiers": [
        "java",
        "util",
        "Iterator",
        "matcher",
        "b",
        "b",
        "other",
        "predicate",
        "predicate",
        "predicate",
        "inclusive",
        "predicate",
        "inclusive",
        "predicate",
        "initial",
        "inclusive",
        "predicate",
        "initial",
        "inclusive",
        "predicate",
        "predicate",
        "initial",
        "otherwise",
        "b",
        "otherwise",
        "prefix",
        "middle",
        "suffix",
        "otherwise",
        "supplier",
        "tree",
        "supplier",
        "supplier",
        "supplier",
        "localTree",
        "tree",
        "localTree",
        "tree",
        "localTree",
        "supplier",
        "get",
        "tree",
        "localTree",
        "supplier",
        "localTree",
        "tree",
        "localTree",
        "matcher",
        "getTree",
        "match",
        "matcher",
        "getTree",
        "measure",
        "b",
        "getTree",
        "addFirst",
        "b",
        "b",
        "getTree",
        "addLast",
        "b",
        "other",
        "getTree",
        "concat",
        "other",
        "getTree",
        "isEmpty",
        "getTree",
        "first",
        "getTree",
        "last",
        "getTree",
        "removeFirst",
        "getTree",
        "removeLast",
        "predicate",
        "getTree",
        "takeUntil",
        "predicate",
        "predicate",
        "getTree",
        "dropUntil",
        "predicate",
        "predicate",
        "inclusive",
        "getTree",
        "takeUntil",
        "predicate",
        "inclusive",
        "predicate",
        "inclusive",
        "getTree",
        "dropUntil",
        "predicate",
        "inclusive",
        "predicate",
        "initial",
        "inclusive",
        "getTree",
        "splitLeft",
        "predicate",
        "initial",
        "inclusive",
        "predicate",
        "initial",
        "inclusive",
        "getTree",
        "splitRight",
        "predicate",
        "initial",
        "inclusive",
        "predicate",
        "getTree",
        "split",
        "predicate",
        "predicate",
        "initial",
        "getTree",
        "splitTree",
        "predicate",
        "initial",
        "getTree",
        "iterator"
    ],
    "literals": [],
    "variables": [
        "supplier",
        "tree"
    ],
    "comments": [
        "calculates the longest prefix of the tree for which is true//",
        "calculates the longest prefix of the tree for which is true//",
        "splits tree into two halves, first half is longest prefix for which predicate.apply(tree.measure()) is true//",
        "return pair that has the prefix and suffix",
        "the supplier interface represents the function that doesn't take in the argument//",
        "returns local tree//",
        "searches for expressions in different locations//",
        "product of the number value//",
        "insert number at the beginning of a LinkedList//",
        "insert number at the end of the LinkedList",
        "returns the string with the value of the string passed into the method//",
        "this checks if the string is empty or not and can either return as true or false depending on that//",
        "returns the first number of a tree set//",
        "returns the last number of the tree set//",
        "removes the first number from the LinkedList",
        "removes the last number from the LinkedList//",
        "the rest has been explained above and is really the same stuff//"
    ],
    "docstrings": [
        "* measure the tree\n     * @return measure of the tree"
    ],
    "functions": [
        "fingerTree",
        "C",
        "match",
        "A",
        "measure",
        "addFirst",
        "addLast",
        "concat",
        "isEmpty",
        "B",
        "first",
        "B",
        "last",
        "removeFirst",
        "removeLast",
        "takeUntil",
        "dropUntil",
        "takeUntil",
        "dropUntil",
        "splitLeft",
        "splitRight",
        "split",
        "splitTree",
        "iterator",
        "C",
        "empty",
        "C",
        "single",
        "C",
        "deep",
        "C",
        "otherwise",
        "FingerTree",
        "getTree",
        "C",
        "match",
        "A",
        "measure",
        "addFirst",
        "addLast",
        "concat",
        "isEmpty",
        "B",
        "first",
        "B",
        "last",
        "removeFirst",
        "removeLast",
        "takeUntil",
        "dropUntil",
        "takeUntil",
        "dropUntil",
        "splitLeft",
        "splitRight",
        "split",
        "splitTree",
        "iterator"
    ],
    "classes": [
        "fingerTree",
        "Matcher"
    ]
}