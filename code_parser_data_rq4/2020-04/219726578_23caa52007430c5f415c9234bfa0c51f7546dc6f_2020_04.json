{
    "identifiers": [
        "com",
        "artipie",
        "rpm",
        "meta",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "OutputStream",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "javax",
        "xml",
        "QName",
        "javax",
        "xml",
        "stream",
        "XMLEventFactory",
        "javax",
        "xml",
        "stream",
        "XMLEventReader",
        "javax",
        "xml",
        "stream",
        "XMLEventWriter",
        "javax",
        "xml",
        "stream",
        "XMLInputFactory",
        "javax",
        "xml",
        "stream",
        "XMLOutputFactory",
        "javax",
        "xml",
        "stream",
        "XMLStreamException",
        "javax",
        "xml",
        "stream",
        "events",
        "XMLEvent",
        "SuppressWarnings",
        "source",
        "target",
        "source",
        "target",
        "source",
        "source",
        "target",
        "target",
        "checksums",
        "Files",
        "newInputStream",
        "source",
        "Files",
        "newOutputStream",
        "target",
        "reader",
        "XMLInputFactory",
        "newInstance",
        "createXMLEventReader",
        "writer",
        "XMLOutputFactory",
        "newInstance",
        "createXMLEventWriter",
        "events",
        "XMLEventFactory",
        "newFactory",
        "writer",
        "add",
        "reader",
        "nextEvent",
        "writer",
        "add",
        "events",
        "createSpace",
        "writer",
        "add",
        "reader",
        "nextEvent",
        "writer",
        "add",
        "reader",
        "nextEvent",
        "XmlPrimaryMaid",
        "processPackages",
        "checksums",
        "reader",
        "writer",
        "writer",
        "add",
        "events",
        "createSpace",
        "writer",
        "add",
        "events",
        "createEndElement",
        "Collections",
        "emptyIterator",
        "ex",
        "ex",
        "checksums",
        "reader",
        "writer",
        "pckg",
        "valid",
        "reader",
        "hasNext",
        "reader",
        "nextEvent",
        "XmlPrimaryMaid",
        "isTag",
        "pckg",
        "clear",
        "pckg",
        "add",
        "XmlPrimaryMaid",
        "isTag",
        "reader",
        "nextEvent",
        "pckg",
        "add",
        "valid",
        "isCharacters",
        "checksums",
        "contains",
        "asCharacters",
        "getData",
        "isEndElement",
        "asEndElement",
        "getName",
        "getLocalPart",
        "equals",
        "valid",
        "item",
        "pckg",
        "writer",
        "add",
        "item",
        "tag",
        "isStartElement",
        "asStartElement",
        "getName",
        "getLocalPart",
        "equals",
        "tag"
    ],
    "literals": [
        "\"PMD.AvoidDuplicateLiterals\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"metadata\"",
        "\"package\"",
        "\"checksum\"",
        "\"package\""
    ],
    "variables": [
        "source",
        "target",
        "event"
    ],
    "comments": [],
    "docstrings": [
        "* The MIT License (MIT)\n *\n * Copyright (c) 2020 artipie.com\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.",
        "* Maid for primary.xml.\n * @since 0.8",
        "* Source, what to clear.",
        "* Where to write clean data.",
        "* Ctor.\n     * @param source What to clear\n     * @param target Where to write",
        "* Clears records about packages by given checksums (checksums).\n     * @param checksums What to clear\n     * @throws IOException When smth wrong",
        "* Processes packages.\n     * @param checksums Checksums to skip\n     * @param reader Where to read from\n     * @param writer Where to write\n     * @throws XMLStreamException If fails",
        "* Checks event.\n     * @param event Event\n     * @param tag Xml tag\n     * @return True is this event is given xml tag"
    ],
    "functions": [
        "XmlPrimaryMaid",
        "clean",
        "processPackages",
        "isTag"
    ],
    "classes": [
        "XmlPrimaryMaid"
    ]
}