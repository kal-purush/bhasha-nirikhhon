{
    "identifiers": [
        "argparse",
        "csv",
        "x",
        "format",
        "x",
        "x",
        "x",
        "args",
        "args",
        "debug",
        "open",
        "args",
        "csv",
        "csv_file",
        "csv",
        "DictReader",
        "csv_file",
        "delimiter",
        "join",
        "row",
        "csv_reader",
        "row",
        "pop",
        "row",
        "pop",
        "cluster",
        "values_for",
        "cluster",
        "row",
        "formatted",
        "row",
        "formatted",
        "row",
        "row_num",
        "DEBUG",
        "formatted",
        "args",
        "p_value_cutoff",
        "formatted",
        "row",
        "row",
        "args",
        "p_value_cutoff",
        "row",
        "row",
        "values_for",
        "cluster",
        "row",
        "DEBUG",
        "p_value_threshold_and_value",
        "DEBUG",
        "p_value_threshold_and_value",
        "DEBUG",
        "output_string",
        "cluster",
        "sorted",
        "values_for",
        "key",
        "row_num",
        "sorted",
        "values_for",
        "cluster",
        "key",
        "x",
        "values_for",
        "cluster",
        "x",
        "values_for",
        "cluster",
        "row_num",
        "cluster",
        "z",
        "formatted",
        "z",
        "formatted",
        "z",
        "row_num",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "dest",
        "action",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "main",
        "args"
    ],
    "literals": [
        "\"{:.2f}\"",
        "'p'",
        "','",
        "\",\"",
        "'cluster'",
        "'feature'",
        "'p'",
        "'fold.change'",
        "'original_row_num'",
        "''",
        "'cluster'",
        "f\"{cluster},{row['feature']},{formatted(row['p'])},{formatted(row['fold.change'])},{row_num}\"",
        "'feature'",
        "'p'",
        "'fold.change'",
        "f\"{formatted(args.p_value_cutoff)} ({formatted(row['p'])})\"",
        "'p'",
        "'p'",
        "'p'",
        "'p'",
        "'fold.change'",
        "'fold.change'",
        "f\"p_value less than {p_value_threshold_and_value}\"",
        "f\"p_value equal or greater than {p_value_threshold_and_value}\"",
        "f'values for \"row_name, p_value, fold_change, cluster, feature\" are \"{output_string}\"'",
        "'p'",
        "f\"{cluster},{z['feature']},{formatted(z['p'])},{formatted(z['fold.change'])},{row_num}\"",
        "'feature'",
        "'p'",
        "'fold.change'",
        "'__main__'",
        "'Filter list by p_value'",
        "'csv'",
        "'Name of csv flie'",
        "'--debug'",
        "'debug'",
        "'store_true'",
        "'--p_value_column'",
        "'3'",
        "'Column containing p_values to filter by'",
        "'--p_value_cutoff'",
        "'Default p_value threshold'"
    ],
    "variables": [
        "DEBUG",
        "csv_reader",
        "values_for",
        "row_num",
        "cluster",
        "values_for",
        "cluster",
        "output_string",
        "p_value_threshold_and_value",
        "row",
        "row",
        "row_num",
        "z",
        "parser",
        "args"
    ],
    "comments": [
        "!/bin/env python3",
        "command line interface (making this a modulino)"
    ],
    "docstrings": [],
    "functions": [
        "formatted",
        "sort_by_p",
        "main"
    ],
    "classes": []
}