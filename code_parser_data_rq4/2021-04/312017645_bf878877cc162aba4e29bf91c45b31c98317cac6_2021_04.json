{
    "identifiers": [
        "os",
        "unittest",
        "vtk",
        "qt",
        "ctk",
        "slicer",
        "slicer",
        "ScriptedLoadableModule",
        "logging",
        "sys",
        "numpy",
        "np",
        "h5py",
        "slicer",
        "util",
        "pip_install",
        "h5py",
        "ScriptedLoadableModule",
        "parent",
        "ScriptedLoadableModule",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "helpText",
        "getDefaultModuleDocumentationLink",
        "parent",
        "ScriptedLoadableModuleWidget",
        "ScriptedLoadableModuleWidget",
        "setup",
        "ctk",
        "ctkCollapsibleButton",
        "layout",
        "addWidget",
        "parametersCollapsibleButton",
        "qt",
        "QFormLayout",
        "parametersCollapsibleButton",
        "ctk",
        "ctkDirectoryButton",
        "parametersFormLayout",
        "addRow",
        "atlasDirectoryButton",
        "qt",
        "QComboBox",
        "parametersFormLayout",
        "addRow",
        "atlasComboBox",
        "qt",
        "QPushButton",
        "importButton",
        "importButton",
        "parametersFormLayout",
        "addRow",
        "importButton",
        "importButton",
        "connect",
        "onImportButton",
        "atlasDirectoryButton",
        "directoryChanged",
        "connect",
        "onAtlasDirectoryChanged",
        "layout",
        "addStretch",
        "os",
        "path",
        "split",
        "open",
        "os",
        "path",
        "join",
        "modulePath",
        "f",
        "f",
        "readlines",
        "atlasDirectoryButton",
        "directory",
        "os",
        "path",
        "isdir",
        "directory",
        "directory",
        "atlasComboBox",
        "clear",
        "atlasComboBox",
        "addItems",
        "ImportAtlasLogic",
        "getValidAtlases",
        "directory",
        "os",
        "path",
        "split",
        "directory",
        "os",
        "path",
        "split",
        "parentDir",
        "parentDirName",
        "atlasComboBox",
        "setCurrentText",
        "atlasDirectoryButton",
        "os",
        "path",
        "join",
        "parentDirName",
        "dirName",
        "importButton",
        "atlasComboBox",
        "itemText",
        "os",
        "path",
        "split",
        "open",
        "os",
        "path",
        "join",
        "modulePath",
        "f",
        "f",
        "write",
        "directory",
        "ImportAtlasLogic",
        "os",
        "path",
        "join",
        "atlasDirectoryButton",
        "directory",
        "atlasComboBox",
        "currentText",
        "logic",
        "run",
        "atlasPath",
        "ScriptedLoadableModuleLogic",
        "directory",
        "sorted",
        "os",
        "listdir",
        "directory",
        "atlas",
        "atlases",
        "atlas",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "directory",
        "atlas",
        "validAtlases",
        "append",
        "atlas",
        "validAtlases",
        "atlasFile",
        "atlasFile",
        "column",
        "atlases",
        "row_number",
        "len",
        "column",
        "sys",
        "version_info",
        "row_data",
        "append",
        "join",
        "unichr",
        "atlases",
        "column",
        "row_number",
        "row_data",
        "append",
        "join",
        "chr",
        "atlases",
        "column",
        "row_number",
        "names",
        "append",
        "row_data",
        "names",
        "vertices",
        "faces",
        "vtk",
        "vtkPoints",
        "v",
        "vertices",
        "points",
        "InsertNextPoint",
        "v",
        "vtk",
        "vtkCellArray",
        "f",
        "faces",
        "vtk",
        "vtkTriangle",
        "j",
        "triangle",
        "GetPointIds",
        "SetId",
        "j",
        "f",
        "j",
        "triangles",
        "InsertNextCell",
        "triangle",
        "vtk",
        "vtkPolyData",
        "pd",
        "SetPoints",
        "points",
        "pd",
        "SetPolys",
        "triangles",
        "pd",
        "polydata",
        "name",
        "color",
        "slicer",
        "mrmlScene",
        "AddNewNodeByClass",
        "name",
        "modelNode",
        "SetAndObservePolyData",
        "polydata",
        "modelNode",
        "CreateDefaultDisplayNodes",
        "modelNode",
        "GetDisplayNode",
        "SetColor",
        "color",
        "modelNode",
        "GetDisplayNode",
        "SetVisibility2D",
        "modelNode",
        "GetDisplayNode",
        "SetBackfaceCulling",
        "modelNode",
        "GetDisplayNode",
        "SetOpacity",
        "modelNode",
        "GetDisplayNode",
        "SetVisibility",
        "modelNode",
        "folderID",
        "color",
        "slicer",
        "mrmlScene",
        "GetSubjectHierarchyNode",
        "slicer",
        "vtkMRMLFolderDisplayNode",
        "displayNode",
        "SetName",
        "shNode",
        "GetItemName",
        "folderID",
        "displayNode",
        "SetHideFromEditors",
        "displayNode",
        "SetAttribute",
        "displayNode",
        "SetColor",
        "color",
        "shNode",
        "GetScene",
        "AddNode",
        "displayNode",
        "shNode",
        "SetItemDataNode",
        "folderID",
        "displayNode",
        "shNode",
        "ItemModified",
        "folderID",
        "atlasPath",
        "qt",
        "QApplication",
        "setOverrideCursor",
        "qt",
        "Qt",
        "WaitCursor",
        "qt",
        "QApplication",
        "processEvents",
        "slicer",
        "mrmlScene",
        "GetSubjectHierarchyNode",
        "shNode",
        "CreateFolderItem",
        "shNode",
        "GetSceneItemID",
        "os",
        "path",
        "split",
        "atlasPath",
        "createFolderDisplayNode",
        "folderID",
        "shNode",
        "SetItemAttribute",
        "folderID",
        "h5py",
        "File",
        "os",
        "path",
        "join",
        "atlasPath",
        "atlasFile",
        "atlasFile",
        "atlasFile",
        "atlasFile",
        "transpose",
        "np",
        "array",
        "getAtlasNames",
        "atlasFile",
        "atlasFile",
        "atlasFile",
        "atlasFile",
        "showIndexRef",
        "squeeze",
        "np",
        "array",
        "len",
        "names",
        "index",
        "len",
        "names",
        "os",
        "path",
        "splitext",
        "os",
        "path",
        "splitext",
        "names",
        "index",
        "colormap",
        "colors",
        "index",
        "types",
        "index",
        "shNode",
        "CreateFolderItem",
        "folderID",
        "structureName",
        "createFolderDisplayNode",
        "subFolderID",
        "structureColor",
        "shNode",
        "SetItemDisplayVisibility",
        "subFolderID",
        "index",
        "showIndex",
        "shNode",
        "SetItemExpanded",
        "subFolderID",
        "shNode",
        "SetItemAttribute",
        "subFolderID",
        "structureName",
        "folderID",
        "sideIndex",
        "sideName",
        "len",
        "subName",
        "subName",
        "roi",
        "sideIndex",
        "index",
        "atlasFile",
        "fv",
        "transpose",
        "fv",
        "transpose",
        "createPolyData",
        "vertices",
        "faces",
        "createModel",
        "structurePolyData",
        "sideName",
        "structureColor",
        "modelNode",
        "GetDisplayNode",
        "SetVisibility",
        "index",
        "showIndex",
        "shNode",
        "SetItemParent",
        "shNode",
        "GetItemChildWithName",
        "shNode",
        "GetSceneItemID",
        "sideName",
        "subFolderID",
        "shNode",
        "SetItemAttribute",
        "shNode",
        "GetItemByDataNode",
        "modelNode",
        "qt",
        "QApplication",
        "setOverrideCursor",
        "qt",
        "QCursor",
        "qt",
        "Qt",
        "ArrowCursor",
        "folderID",
        "ScriptedLoadableModuleTest",
        "slicer",
        "mrmlScene",
        "Clear",
        "setUp",
        "test_ImportAtlas1",
        "delayDisplay",
        "delayDisplay"
    ],
    "literals": [
        "'h5py'",
        "\"ImportAtlas\"",
        "\"Netstim\"",
        "\"John Doe (AnyWare Corp.)\"",
        "\"Parameters\"",
        "\"Directory: \"",
        "\"Atlas: \"",
        "\"Import\"",
        "\"Import atlas.\"",
        "'clicked(bool)'",
        "'Resources'",
        "'previousDirectory.txt'",
        "'r'",
        "'.'",
        "'MNI_ICBM_2009b_NLIN_ASYM'",
        "'DISTAL Minimal (Ewert 2017)'",
        "'[...]'",
        "''",
        "'Resources'",
        "'previousDirectory.txt'",
        "'w'",
        "'.'",
        "'atlas_index.mat'",
        "'atlases'",
        "'names'",
        "''",
        "''",
        "'vtkMRMLModelNode'",
        "'SubjectHierarchy.Folder'",
        "\"1\"",
        "'atlas'",
        "'1'",
        "'atlas_index.mat'",
        "'r'",
        "'atlases'",
        "'roi'",
        "'atlases'",
        "'colors'",
        "'atlases'",
        "'colormap'",
        "'atlases'",
        "'types'",
        "'atlases'",
        "'presets'",
        "'show'",
        "'rh'",
        "'lh'",
        "'atlas'",
        "'1'",
        "'fv'",
        "'vertices'",
        "'faces'",
        "'atlas'",
        "'1'",
        "\"Starting the test\"",
        "'Test passed!'"
    ],
    "variables": [
        "title",
        "categories",
        "dependencies",
        "contributors",
        "helpText",
        "acknowledgementText",
        "parametersCollapsibleButton",
        "parametersCollapsibleButton",
        "text",
        "parametersFormLayout",
        "atlasDirectoryButton",
        "atlasComboBox",
        "importButton",
        "toolTip",
        "enabled",
        "modulePath",
        "directory",
        "directory",
        "parentDir",
        "dirName",
        "parentDirName",
        "text",
        "enabled",
        "modulePath",
        "logic",
        "atlasPath",
        "validAtlases",
        "atlases",
        "names",
        "atlases",
        "row_data",
        "points",
        "triangles",
        "triangle",
        "pd",
        "modelNode",
        "shNode",
        "displayNode",
        "shNode",
        "folderID",
        "roi",
        "colors",
        "colormap",
        "colormap",
        "names",
        "types",
        "showIndexRef",
        "showIndex",
        "showIndex",
        "structureName",
        "structureColor",
        "subName",
        "subFolderID",
        "subName",
        "subFolderID",
        "fv",
        "vertices",
        "faces",
        "structurePolyData",
        "modelNode"
    ],
    "comments": [
        "",
        "ImportAtlas",
        "",
        "TODO make this more human readable by adding spaces",
        "replace with \"Firstname Lastname (Organization)\"",
        "replace with organization, grant and thanks.",
        "",
        "ImportAtlasWidget",
        "",
        "Instantiate and connect widgets ...",
        "",
        "Parameters Area",
        "",
        "Layout within the dummy collapsible button",
        "",
        "atlases directory",
        "",
        "",
        "atlas combo box",
        "",
        "",
        "Import Button",
        "",
        "connections",
        "self.inputSelector.connect(\"currentNodeChanged(vtkMRMLNode*)\", self.onSelect)",
        "self.outputSelector.connect(\"currentNodeChanged(vtkMRMLNode*)\", self.onSelect)",
        "Add vertical spacer",
        "Refresh dir",
        "remove atlases",
        "add new dirs if valid lead paths",
        "if MNI use DISTAL as default",
        "change text so its no so large",
        "enable import button if available atlases",
        "save for future",
        "",
        "ImportAtlasLogic",
        "",
        "fix 1based matlab index",
        "hide by default",
        "from qSlicerSubjectHierarchyFolderPlugin.cxx",
        "get .mat data",
        "colormap not present",
        "-1 to fix index base",
        "for each structure",
        "get faces and vertices data",
        "create polydata",
        "add model node",
        "add as child to parent",
        "",
        "first, get some data",
        "",
        "import SampleData",
        "SampleData.downloadFromURL(",
        "nodeNames='FA',",
        "fileNames='FA.nrrd',",
        "uris='http://slicer.kitware.com/midas3/download?items=5767')",
        "self.delayDisplay('Finished with download and loading')",
        "",
        "volumeNode = slicer.util.getNode(pattern=\"FA\")",
        "logic = ImportAtlasLogic()",
        "self.assertIsNotNone( logic.hasImageData(volumeNode) )"
    ],
    "docstrings": [
        "\"\"\"Uses ScriptedLoadableModule base class, available at:\n  https://github.com/Slicer/Slicer/blob/master/Base/Python/slicer/ScriptedLoadableModule.py\n  \"\"\"",
        "\"\"\"\nThis is an example of scripted loadable module bundled in an extension.\nIt performs a simple thresholding on the input volume and optionally captures a screenshot.\n\"\"\"",
        "\"\"\"\nThis file was originally developed by Jean-Christophe Fillion-Robin, Kitware Inc.\nand Steve Pieper, Isomics, Inc. and was partially funded by NIH grant 3P41RR013218-12S1.\n\"\"\"",
        "\"\"\"Uses ScriptedLoadableModuleWidget base class, available at:\n  https://github.com/Slicer/Slicer/blob/master/Base/Python/slicer/ScriptedLoadableModule.py\n  \"\"\"",
        "\"\"\"This class should implement all the actual\n  computation done by your module.  The interface\n  should be such that other python code can import\n  this class and make use of the functionality without\n  requiring an instance of the Widget.\n  Uses ScriptedLoadableModuleLogic base class, available at:\n  https://github.com/Slicer/Slicer/blob/master/Base/Python/slicer/ScriptedLoadableModule.py\n  \"\"\"",
        "\"\"\"\n    Get names from atlas.mat. This is a bit different from the others\n    \"\"\"",
        "\"\"\"\n     Generate vtk polydata from vertices and faces\n    \"\"\"",
        "\"\"\"\n    create model node with polydata, color, name and set default view mode\n    \"\"\"",
        "\"\"\"\n    Run the actual algorithm\n    \"\"\"",
        "\"\"\"\n  This is the test case for your scripted module.\n  Uses ScriptedLoadableModuleTest base class, available at:\n  https://github.com/Slicer/Slicer/blob/master/Base/Python/slicer/ScriptedLoadableModule.py\n  \"\"\"",
        "\"\"\" Do whatever is needed to reset the state - typically a scene clear will be enough.\n    \"\"\"",
        "\"\"\"Run as few or as many tests as needed here.\n    \"\"\"",
        "\"\"\" Ideally you should have several levels of tests.  At the lowest level\n    tests should exercise the functionality of the logic with different inputs\n    (both valid and invalid).  At higher levels your tests should emulate the\n    way the user would interact with your code and confirm that it still works\n    the way you intended.\n    One of the most important features of the tests is that it should alert other\n    developers when their changes will have an impact on the behavior of your\n    module.  For example, if a developer removes a feature that you depend on,\n    your test should break so they know that the feature is needed.\n    \"\"\""
    ],
    "functions": [
        "setup",
        "cleanup",
        "onAtlasDirectoryChanged",
        "onImportButton",
        "getValidAtlases",
        "getAtlasNames",
        "createPolyData",
        "createModel",
        "createFolderDisplayNode",
        "run",
        "setUp",
        "runTest",
        "test_ImportAtlas1"
    ],
    "classes": [
        "ImportAtlas",
        "ImportAtlasWidget",
        "ImportAtlasLogic",
        "ImportAtlasTest"
    ]
}