{
    "identifiers": [
        "cron",
        "docker_queue",
        "Docker",
        "jwt",
        "JwtServerPayload",
        "docker_cron",
        "cron",
        "process",
        "parseInt",
        "process",
        "process",
        "Docker",
        "process",
        "process",
        "Docker",
        "docker",
        "existing_containers",
        "max_container_num",
        "max_container_num",
        "existing_containers",
        "docker_queue",
        "max_container_num",
        "available_num",
        "available_num",
        "i",
        "available_num",
        "i",
        "docker_queue",
        "docker",
        "existing_networks",
        "elem",
        "elem",
        "queue_front",
        "docker",
        "queue_front",
        "err",
        "err",
        "docker",
        "containerList",
        "containerInfo",
        "containerInfo",
        "queue_front",
        "containerInfo",
        "queue_front",
        "containerRunning",
        "containerRunning",
        "jwt",
        "queue_front",
        "queue_front",
        "queue_front",
        "process",
        "process",
        "docker",
        "process",
        "queue_front",
        "queue_front",
        "queue_front",
        "process",
        "url",
        "serverToken",
        "container_server",
        "err",
        "err",
        "docker",
        "queue_front",
        "network",
        "Docker",
        "netInfo",
        "docker",
        "process",
        "queue_front",
        "queue_front",
        "queue_front",
        "queue_front",
        "roomIp",
        "process",
        "container_client",
        "err",
        "err",
        "err",
        "err",
        "docker_cron"
    ],
    "literals": [
        "\"node-cron\"",
        "\"..\"",
        "\"dockerode\"",
        "\"jsonwebtoken\"",
        "\"../routes/contest\"",
        "string",
        "string",
        "string",
        "*/${process.env.QUEUE_CHECK_TIME} * * * * *",
        "string",
        "\"remote\"",
        "\"队列容量:\"",
        "\"等待:\"",
        "THUAI4_room_${queue_front.room_id}",
        "THUAI4_room_${queue_front.room_id}",
        "/THUAI4_room_server_${queue_front?.room_id}",
        "/THUAI4_room_client_${queue_front?.room_id}",
        "\"10m\"",
        "\"production\"",
        "\"https://api.eesast.com/contest\"",
        "\"http:127.0.0.1:28888/contest\"",
        "THUAI4_room_server_${queue_front.room_id}",
        "THUAI4_room_${queue_front.room_id}",
        "/data/thuai4_playback/${queue_front.room_id}/:/usr/local/mnt",
        "string",
        "\"2\"",
        "\"4\"",
        "${url}",
        "${serverToken}",
        "THUAI4_room_${queue_front.room_id}",
        "\"/\"",
        "THUAI4_room_client_${queue_front.room_id}",
        "THUAI4_room_${queue_front.room_id}",
        "/data/thuai4/${queue_front.team_id_1}/player:/usr/local/mnt/player1",
        "/data/thuai4/${queue_front.team_id_2}/player:/usr/local/mnt/player2",
        "${roomIp}",
        "string",
        "\"all ok\"",
        "\"running\""
    ],
    "variables": [
        "docker_cron",
        "max_container_num",
        "docker",
        "existing_containers",
        "available_num",
        "i",
        "queue_front",
        "existing_networks",
        "containerRunning",
        "containerList",
        "serverToken",
        "url",
        "container_server",
        "network",
        "netInfo",
        "roomIp",
        "container_client"
    ],
    "comments": [
        "cron.schedule(\"*/10 * * * * *\", async () => {",
        "const docker =",
        "process.env.DOCKER === \"remote\"",
        "? new Docker({",
        "host: process.env.DOCKER_URL,",
        "port: process.env.DOCKER_PORT,",
        "})",
        ": new Docker();",
        "await docker.pruneNetworks({",
        "filters:'{\"until\":\"5m\"}'",
        "});",
        "});",
        "上面这个本来打算实现自动删除一定时间的network的，但是不知为何 filter 怎么也用不好，所以目前只能使用 crontab 来做。求大佬来帮忙想办法orz",
        "TODO:路径待定！"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}