{
    "identifiers": [
        "Collections",
        "Generic",
        "Collections",
        "Immutable",
        "Linq",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Syntax",
        "MongoDB",
        "Client",
        "Bson",
        "Generators",
        "SyntaxGenerator",
        "Diagnostics",
        "SF",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "SyntaxFactory",
        "MongoDB",
        "Client",
        "Bson",
        "Generators",
        "SyntaxGenerator",
        "Generator",
        "MemberContext",
        "ctx",
        "ITypeSymbol",
        "typeSymbol",
        "ctx",
        "NameSym",
        "Name",
        "typeSymbol",
        "Name",
        "typeSymbol",
        "INamedTypeSymbol",
        "name",
        "name",
        "arg",
        "TypeArguments",
        "name",
        "arg",
        "Name",
        "NullableAnnotation",
        "NullableAnnotation",
        "Annotated",
        "IsValueType",
        "TypeArguments",
        "INamedTypeSymbol",
        "TypeArguments",
        "INamedTypeSymbol",
        "TypeArguments",
        "IsEmpty",
        "Identifier",
        "name",
        "ISymbol",
        "nameSym",
        "ITypeSymbol",
        "typeSymbol",
        "nameSym",
        "Name",
        "typeSymbol",
        "Name",
        "typeSymbol",
        "INamedTypeSymbol",
        "name",
        "name",
        "arg",
        "TypeArguments",
        "name",
        "arg",
        "Name",
        "NullableAnnotation",
        "NullableAnnotation",
        "Annotated",
        "IsValueType",
        "TypeArguments",
        "INamedTypeSymbol",
        "TypeArguments",
        "INamedTypeSymbol",
        "TypeArguments",
        "IsEmpty",
        "Identifier",
        "name",
        "MethodDeclarationSyntax",
        "ContextCore",
        "ctx",
        "MethodDeclarationSyntax",
        "member",
        "ctx",
        "Members",
        "IsDictionaryCollection",
        "member",
        "TypeSym",
        "member",
        "TypeSym",
        "INamedTypeSymbol",
        "methods",
        "Add",
        "ReadDictionaryMethod",
        "member",
        "member",
        "TypeSym",
        "member",
        "TypeSym",
        "INamedTypeSymbol",
        "methods",
        "Add",
        "ReadDictionaryMethod",
        "member",
        "TypeArguments",
        "INamedTypeSymbol",
        "IsListCollection",
        "methods",
        "ToArray",
        "MethodDeclarationSyntax",
        "ContextCore",
        "ctx",
        "MethodDeclarationSyntax",
        "member",
        "ctx",
        "Members",
        "IsDictionaryCollection",
        "member",
        "TypeSym",
        "member",
        "TypeSym",
        "INamedTypeSymbol",
        "methods",
        "Add",
        "WriteDictionaryMethod",
        "member",
        "member",
        "TypeSym",
        "member",
        "TypeSym",
        "INamedTypeSymbol",
        "methods",
        "Add",
        "WriteDictionaryMethod",
        "member",
        "TypeArguments",
        "INamedTypeSymbol",
        "IsDictionaryCollection",
        "methods",
        "ToArray",
        "MemberContext",
        "ctx",
        "ITypeSymbol",
        "SyntaxToken",
        "readTarget",
        "SyntaxToken",
        "bsonType",
        "SyntaxToken",
        "outMessage",
        "ImmutableList",
        "StatementSyntax",
        "Builder",
        "builder",
        "operation",
        "tempVar",
        "ReadOperation",
        "ctx",
        "Root",
        "ctx",
        "NameSym",
        "BsonReaderToken",
        "TypedVariableDeclarationExpr",
        "TypeFullName",
        "readTarget",
        "bsonType",
        "operation",
        "builder",
        "IfNotReturnFalseElse",
        "condition",
        "operation",
        "@else",
        "Block",
        "InvocationExprStatement",
        "outMessage",
        "CollectionAddToken",
        "Argument",
        "Identifier",
        "Argument",
        "tempVar",
        "tempVar",
        "IdentifierName",
        "readTarget",
        "ContinueStatement",
        "ITypeSymbol",
        "typeSym",
        "ISymbol",
        "nameSym",
        "SyntaxToken",
        "readTarget",
        "SyntaxToken",
        "outMessage",
        "ImmutableList",
        "StatementSyntax",
        "Builder",
        "builder",
        "IsBsonSerializable",
        "typeSym",
        "callType",
        "typeSym",
        "outArgType",
        "typeSym",
        "IsBsonExtensionSerializable",
        "nameSym",
        "typeSym",
        "extSym",
        "callType",
        "extSym",
        "outArgType",
        "typeSym",
        "callType",
        "outArgType",
        "InvocationExpr",
        "IdentifierName",
        "callType",
        "ToString",
        "TryParseBsonToken",
        "RefArgument",
        "BsonReaderToken",
        "OutArgument",
        "TypedVariableDeclarationExpr",
        "TypeFullName",
        "outArgType",
        "readTarget",
        "builder",
        "IfNotReturnFalseElse",
        "condition",
        "operation",
        "@else",
        "Block",
        "InvocationExprStatement",
        "outMessage",
        "CollectionAddToken",
        "Argument",
        "Identifier",
        "Argument",
        "readTarget",
        "ContinueStatement",
        "MemberContext",
        "ctx",
        "ITypeSymbol",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "INamedTypeSymbol",
        "TypeArguments",
        "ExtractTypeFromNullableIfNeed",
        "typeArg",
        "ImmutableList",
        "CreateBuilder",
        "StatementSyntax",
        "TryGenerateSimpleReadOpereation1",
        "ctx",
        "trueTypeArg",
        "tempArrayRead",
        "bsonTypeToken",
        "tempArray",
        "builder",
        "RETURN",
        "TryGenerateTryParseBsonArrayOperation1",
        "trueTypeArg",
        "ctx",
        "NameSym",
        "tempArrayRead",
        "tempArray",
        "builder",
        "RETURN",
        "TryGetEnumReadOperation",
        "tempArrayRead",
        "ctx",
        "NameSym",
        "trueTypeArg",
        "enumOp",
        "builder",
        "IfNotReturnFalseElse",
        "enumOp",
        "Expr",
        "Block",
        "InvocationExpr",
        "tempArray",
        "CollectionAddToken",
        "Argument",
        "Identifier",
        "Argument",
        "enumOp",
        "TempExpr",
        "RETURN",
        "GeneratorDiagnostics",
        "ReportUnsuporterTypeError",
        "ctx",
        "NameSym",
        "trueTypeArg",
        "RETURN",
        "SF",
        "MethodDeclaration",
        "attributeLists",
        "modifiers",
        "SyntaxTokenList",
        "PrivateKeyword",
        "StaticKeyword",
        "explicitInterfaceSpecifier",
        "returnType",
        "BoolPredefinedType",
        "identifier",
        "ReadDictionaryMethodName",
        "ctx",
        "NameSym",
        "parameterList",
        "ParameterList",
        "RefParameter",
        "BsonReaderType",
        "BsonReaderToken",
        "OutParameter",
        "IdentifierName",
        "ToString",
        "outMessage",
        "body",
        "constraintClauses",
        "expressionBody",
        "typeParameterList",
        "semicolonToken",
        "WithBody",
        "Block",
        "SimpleAssignExprStatement",
        "outMessage",
        "DefaultLiteralExpr",
        "VarLocalDeclarationStatement",
        "tempArray",
        "ObjectCreation",
        "TypeFullName",
        "System_Collections_Generic_Dictionary_K_V",
        "Construct",
        "System_String",
        "typeArg",
        "IfNotReturnFalse",
        "TryGetInt32",
        "IntVariableDeclarationExpr",
        "docLenToken",
        "VarLocalDeclarationStatement",
        "unreadedToken",
        "BinaryExprPlus",
        "ReaderRemainingExpr",
        "SizeOfInt32Expr",
        "SF",
        "WhileStatement",
        "condition",
        "BinaryExprLessThan",
        "BinaryExprMinus",
        "IdentifierName",
        "unreadedToken",
        "ReaderRemainingExpr",
        "BinaryExprMinus",
        "IdentifierName",
        "docLenToken",
        "NumericLiteralExpr",
        "statement",
        "Block",
        "IfNotReturnFalse",
        "TryGetByte",
        "VarVariableDeclarationExpr",
        "bsonTypeToken",
        "IfNotReturnFalse",
        "TryGetCString",
        "VarVariableDeclarationExpr",
        "bsonNameToken",
        "IfStatement",
        "condition",
        "BinaryExprEqualsEquals",
        "bsonTypeToken",
        "NumericLiteralExpr",
        "statement",
        "Block",
        "InvocationExprStatement",
        "tempArray",
        "CollectionAddToken",
        "Argument",
        "bsonNameToken",
        "Argument",
        "DefaultLiteralExpr",
        "ContinueStatement",
        "builder",
        "ToArray",
        "IfNotReturnFalse",
        "TryGetByte",
        "VarVariableDeclarationExpr",
        "endMarkerToken",
        "IfStatement",
        "BinaryExprNotEquals",
        "endMarkerToken",
        "NumericLiteralExpr",
        "Block",
        "Statement",
        "SerializerEndMarkerException",
        "ctx",
        "Root",
        "Declaration",
        "IdentifierName",
        "endMarkerToken",
        "SimpleAssignExprStatement",
        "IdentifierName",
        "outMessage",
        "tempArray",
        "ReturnTrueStatement",
        "MemberContext",
        "ctx",
        "ITypeSymbol",
        "ExtractTypeFromNullableIfNeed",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "Identifier",
        "trueType",
        "INamedTypeSymbol",
        "TypeArguments",
        "ImmutableList",
        "CreateBuilder",
        "StatementSyntax",
        "typeArg",
        "IsReferenceType",
        "writeOperation",
        "IfStatement",
        "condition",
        "BinaryExprEqualsEquals",
        "valueToken",
        "NullLiteralExpr",
        "statement",
        "Block",
        "WriteBsonNull",
        "keyToken",
        "@else",
        "Block",
        "WriteOperation",
        "ctx",
        "keyToken",
        "ctx",
        "NameSym",
        "typeArg",
        "BsonWriterToken",
        "IdentifierName",
        "valueToken",
        "typeArg",
        "NullableAnnotation",
        "NullableAnnotation",
        "Annotated",
        "typeArg",
        "IsValueType",
        "WriteOperation",
        "ctx",
        "keyToken",
        "ctx",
        "NameSym",
        "typeArg",
        "BsonWriterToken",
        "SimpleMemberAccess",
        "valueToken",
        "NullableValueToken",
        "writeOperation",
        "IfStatement",
        "condition",
        "BinaryExprEqualsEquals",
        "SimpleMemberAccess",
        "valueToken",
        "NullableHasValueToken",
        "FalseLiteralExpr",
        "statement",
        "Block",
        "WriteBsonNull",
        "keyToken",
        "@else",
        "Block",
        "operation",
        "writeOperation",
        "AddRange",
        "WriteOperation",
        "ctx",
        "keyToken",
        "ctx",
        "NameSym",
        "typeArg",
        "BsonWriterToken",
        "IdentifierName",
        "valueToken",
        "SF",
        "MethodDeclaration",
        "attributeLists",
        "modifiers",
        "SyntaxTokenList",
        "PrivateKeyword",
        "StaticKeyword",
        "explicitInterfaceSpecifier",
        "returnType",
        "VoidPredefinedType",
        "identifier",
        "WriteDictionaryMethodName",
        "ctx",
        "trueType",
        "parameterList",
        "ParameterList",
        "RefParameter",
        "BsonWriterType",
        "BsonWriterToken",
        "Parameter",
        "TypeFullName",
        "trueType",
        "collection",
        "body",
        "constraintClauses",
        "expressionBody",
        "typeParameterList",
        "semicolonToken",
        "WithBody",
        "Block",
        "VarLocalDeclarationStatement",
        "checkpoint",
        "WriterWrittenExpr",
        "VarLocalDeclarationStatement",
        "reserved",
        "WriterReserve",
        "ForEachVariableStatement",
        "variable",
        "VarValueTupleDeclarationExpr",
        "keyToken",
        "valueToken",
        "expression",
        "IdentifierName",
        "collection",
        "body",
        "Block",
        "writeOperation",
        "WriteByteStatement",
        "VarLocalDeclarationStatement",
        "docLength",
        "BinaryExprMinus",
        "WriterWrittenExpr",
        "IdentifierName",
        "checkpoint",
        "Statement",
        "ReservedWrite",
        "reserved",
        "docLength",
        "Statement",
        "WriterCommitExpr"
    ],
    "literals": [
        "\"arrayBsonName\"",
        "\"arrayBsonName\"",
        "\"arrayDocLength\"",
        "\"arrayUnreaded\"",
        "\"arrayEndMarker\"",
        "\"arrayBsonType\"",
        "\"arrayBsonName\"",
        "\"array\"",
        "\"temp\"",
        "\"internalArray\"",
        "\"arrayBsonName\"",
        "\"checkpoint\"",
        "\"reserved\"",
        "\"docLength\"",
        "\"collection\"",
        "\"key\"",
        "\"value\""
    ],
    "variables": [
        "name",
        "name",
        "methods",
        "methods",
        "ITypeSymbol",
        "callType",
        "ITypeSymbol",
        "outArgType",
        "operation",
        "docLenToken",
        "unreadedToken",
        "endMarkerToken",
        "bsonTypeToken",
        "bsonNameToken",
        "outMessage",
        "tempArrayRead",
        "tempArray",
        "typeArg",
        "trueTypeArg",
        "builder",
        "ITypeSymbol",
        "trueType",
        "checkpoint",
        "reserved",
        "docLength",
        "collection",
        "keyToken",
        "valueToken",
        "typeArg",
        "writeOperation",
        "operation"
    ],
    "comments": [
        "TODO: fix it normal",
        "if (type is null || type.TypeArguments.IsEmpty)",
        "ITypeSymbol trueType = ExtractTypeFromNullableIfNeed(type);"
    ],
    "docstrings": [],
    "functions": [
        "SyntaxToken",
        "WriteDictionaryMethodName",
        "SyntaxToken",
        "ReadDictionaryMethodName",
        "GenerateDictionaryArrayMethods",
        "GenerateWriteDictionaryMethods",
        "TryGenerateSimpleReadOpereation1",
        "TryGenerateTryParseBsonArrayOperation1",
        "MethodDeclarationSyntax",
        "ReadDictionaryMethod",
        "MethodDeclarationSyntax",
        "WriteDictionaryMethod"
    ],
    "classes": [
        "SerializerGenerator"
    ]
}