{
    "identifiers": [
        "SubscriptionDefinition",
        "ReferredObjectDefinition",
        "MetadataKeys",
        "isObject",
        "listener",
        "args",
        "listener",
        "args",
        "value",
        "value",
        "isObject",
        "value",
        "value",
        "value",
        "value",
        "Subscribe",
        "once",
        "once",
        "emitterCls",
        "emitterCls",
        "target",
        "_",
        "descriptor",
        "MetadataKeys",
        "target",
        "MetadataKeys",
        "target",
        "component",
        "service",
        "emitterCls",
        "target",
        "emitterCls",
        "prop",
        "emitterCls",
        "isEventEmitterLike",
        "prop",
        "MetadataKeys",
        "subscriptions",
        "prop",
        "descriptor",
        "once",
        "once",
        "MetadataKeys",
        "subscriptions",
        "emitterCls",
        "emitterCls",
        "emitterCls",
        "isEventEmitterLike",
        "emitterCls",
        "MetadataKeys",
        "subscriptions",
        "descriptor",
        "once",
        "once",
        "MetadataKeys",
        "subscriptions",
        "target",
        "_",
        "descriptor",
        "isEventEmitterLike",
        "target",
        "MetadataKeys",
        "subscriptions",
        "target",
        "descriptor",
        "once",
        "once",
        "MetadataKeys",
        "subscriptions"
    ],
    "literals": [
        "'../types'",
        "'@augu/utils'",
        "string",
        "string",
        "'on'",
        "'function'",
        "'function'",
        "'function'",
        "string",
        "string",
        "'string'",
        "'Missing property name to find'",
        "'function'",
        "Event emitter was not in property ${emitterCls}.",
        "'Event emitter didn\\'t match the criteria.'",
        "'boolean'",
        "'function'",
        "'Event emitter class wasn\\'t a Function (which it should be!)'",
        "'object'",
        "'Event emitter class shouldn\\'t be instances of that class or the prototype wasn\\'t a object'",
        "'Event emitter didn\\'t match the criteria.'",
        "'boolean'",
        "'The target prototype must be a event emitter'",
        "'boolean'"
    ],
    "variables": [
        "component",
        "service",
        "prop",
        "subscriptions",
        "subscriptions",
        "subscriptions"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2021 August\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.",
        "* Represents a object that is structured like a event emitter",
        "* Marks this method as a Subscription, a method to run from the target class\n * @param event The event to use\n * @param once If the method should be called with `.once` instead of `.on`",
        "* Marks this method as a Subscription, a method to run from it's [emitterCls] or the\n * property to infer of the event emitter.\n *\n * @param event The event name to use\n * @param once If the method should be using `.once` instead of `.on`\n * @param emitterCls The event emitter class, this can be omitted if\n * the superclass is an [[EventEmitterLike]] object or a string of the\n * property to use for the emitter class if the target class is a Component\n * or Service."
    ],
    "functions": [
        "isEventEmitterLike",
        "Subscribe"
    ],
    "classes": []
}