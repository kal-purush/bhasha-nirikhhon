{
    "identifiers": [
        "io",
        "micronaut",
        "context",
        "io",
        "micronaut",
        "core",
        "annotation",
        "AnnotationMetadata",
        "io",
        "micronaut",
        "core",
        "annotation",
        "Internal",
        "io",
        "micronaut",
        "core",
        "annotation",
        "io",
        "micronaut",
        "core",
        "Argument",
        "io",
        "micronaut",
        "inject",
        "BeanDefinition",
        "io",
        "micronaut",
        "inject",
        "ConstructorInjectionPoint",
        "Internal",
        "declaringBean",
        "declaringType",
        "fieldType",
        "field",
        "annotationMetadata",
        "declaringBean",
        "declaringType",
        "fieldType",
        "field",
        "annotationMetadata",
        "Argument",
        "ZERO_ARGUMENTS",
        "Override",
        "Argument",
        "ZERO_ARGUMENTS",
        "Override",
        "args"
    ],
    "literals": [
        "\"Use BeanFactory.instantiate(..) instead\""
    ],
    "variables": [
        "args"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2017-2021 original authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Represents an injection point for a bean produced from a field.\n *\n * @param <T> The field type\n * @author Graeme Rocher\n * @since 3.0",
        "* @param declaringBean      The declaring bean\n     * @param declaringType      The declaring type\n     * @param fieldType          The field type\n     * @param field              The name of the field\n     * @param annotationMetadata The annotation metadata"
    ],
    "functions": [
        "DefaultFieldConstructorInjectionPoint",
        "getArguments",
        "T",
        "invoke"
    ],
    "classes": [
        "DefaultFieldConstructorInjectionPoint"
    ]
}