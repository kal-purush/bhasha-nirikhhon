{
    "identifiers": [
        "annotations",
        "logging",
        "collections",
        "defaultdict",
        "typing",
        "Dict",
        "Optional",
        "TYPE_CHECKING",
        "Type",
        "dcs",
        "unittype",
        "UnitType",
        "VehicleType",
        "game",
        "theater",
        "ControlPoint",
        "SupplyRoute",
        "db",
        "PRICES",
        "transfers",
        "RoadTransferOrder",
        "TYPE_CHECKING",
        "game",
        "Game",
        "destination",
        "ControlPoint",
        "destination",
        "Dict",
        "Type",
        "UnitType",
        "defaultdict",
        "destination",
        "units",
        "Dict",
        "Type",
        "UnitType",
        "k",
        "v",
        "units",
        "items",
        "units",
        "k",
        "v",
        "units",
        "Dict",
        "Type",
        "UnitType",
        "k",
        "v",
        "units",
        "items",
        "units",
        "k",
        "v",
        "game",
        "Game",
        "refund",
        "game",
        "units",
        "defaultdict",
        "game",
        "Game",
        "units",
        "Dict",
        "Type",
        "UnitType",
        "unit_type",
        "count",
        "units",
        "items",
        "PRICES",
        "unit_type",
        "KeyError",
        "logging",
        "error",
        "unit_type",
        "id",
        "logging",
        "info",
        "count",
        "unit_type",
        "id",
        "destination",
        "name",
        "game",
        "adjust_budget",
        "price",
        "count",
        "player",
        "destination",
        "captured",
        "unit_type",
        "Type",
        "UnitType",
        "units",
        "get",
        "unit_type",
        "pending_units",
        "pending_units",
        "unit_type",
        "Type",
        "UnitType",
        "destination",
        "total_units_of_type",
        "unit_type",
        "pending_orders",
        "unit_type",
        "current_units",
        "game",
        "Game",
        "find_ground_unit_source",
        "game",
        "Dict",
        "Type",
        "UnitType",
        "Dict",
        "Type",
        "VehicleType",
        "Dict",
        "Type",
        "UnitType",
        "unit_type",
        "count",
        "units",
        "items",
        "destination",
        "captured",
        "unit_type",
        "id",
        "issubclass",
        "unit_type",
        "VehicleType",
        "destination",
        "ground_unit_source",
        "ground_unit_source",
        "units_needing_transfer",
        "destination",
        "bought_units",
        "count",
        "count",
        "ground",
        "ground_unit_source",
        "game",
        "message",
        "coalition",
        "name",
        "count",
        "source",
        "count",
        "game",
        "message",
        "coalition",
        "name",
        "count",
        "source",
        "defaultdict",
        "destination",
        "commision_units",
        "bought_units",
        "destination",
        "commit_losses",
        "sold_units",
        "ground_unit_source",
        "game",
        "message",
        "destination",
        "name",
        "refund",
        "game",
        "units_needing_transfer",
        "units_needing_transfer",
        "ground_unit_source",
        "commision_units",
        "units_needing_transfer",
        "game",
        "transfers",
        "new_transfer",
        "RoadTransferOrder",
        "ground_unit_source",
        "destination",
        "destination",
        "captured",
        "units_needing_transfer",
        "game",
        "Game",
        "Optional",
        "ControlPoint",
        "game",
        "turn",
        "destination",
        "destination",
        "can_recruit_ground_units",
        "game",
        "destination",
        "SupplyRoute",
        "for_control_point",
        "destination",
        "control_point",
        "supply_route",
        "control_point",
        "can_recruit_ground_units",
        "game",
        "sources",
        "append",
        "control_point",
        "sources",
        "len",
        "sources",
        "sources",
        "sources",
        "len",
        "supply_route",
        "shortest_path_between",
        "destination",
        "closest",
        "source",
        "sources",
        "len",
        "supply_route",
        "shortest_path_between",
        "destination",
        "source",
        "new_distance",
        "distance",
        "source",
        "new_distance",
        "closest"
    ],
    "literals": [
        "f\"Pending delivery to {self.destination}\"",
        "f\"Could not refund {unit_type.id}, price unknown\"",
        "f\"Refunding {count} {unit_type.id} at {self.destination.name}\"",
        "\"Ally\"",
        "\"Enemy\"",
        "f\"{coalition} reinforcements: {name} x {count} at {source}\"",
        "f\"{coalition} sold: {name} x {-count} at {source}\"",
        "f\"{self.destination.name} lost its source for ground unit \"",
        "\"reinforcements. Refunding purchase price.\""
    ],
    "variables": [
        "destination",
        "units",
        "units",
        "price",
        "pending_units",
        "pending_units",
        "current_units",
        "ground_unit_source",
        "bought_units",
        "units_needing_transfer",
        "sold_units",
        "coalition",
        "name",
        "source",
        "d",
        "ground",
        "source",
        "d",
        "ground",
        "d",
        "unit_type",
        "sold_units",
        "unit_type",
        "units",
        "supply_route",
        "sources",
        "closest",
        "distance",
        "new_distance",
        "closest",
        "distance"
    ],
    "comments": [
        "Maps unit type to order quantity.",
        "The destination dict will be set appropriately even if we have no",
        "source, and we'll refund later, buto nly emit the message when we're",
        "actually completing the purchase.",
        "This is running *after* the turn counter has been incremented, so this is the",
        "reaction to turn 0. On turn zero we allow units to be recruited anywhere for",
        "delivery on turn 1 so that turn 1 always starts with units on the front line.",
        "Fast path if the destination is a valid source.",
        "Fast path to skip the distance calculation if we have only one option."
    ],
    "docstrings": [],
    "functions": [
        "__str__",
        "order",
        "sell",
        "refund_all",
        "refund",
        "pending_orders",
        "available_next_turn",
        "process",
        "find_ground_unit_source"
    ],
    "classes": [
        "PendingUnitDeliveries"
    ]
}