{
    "identifiers": [
        "preorder",
        "inorder",
        "preorder",
        "inorder",
        "preorder",
        "length",
        "inorder",
        "length",
        "inorderIndex",
        "i",
        "i",
        "inorder",
        "length",
        "i",
        "inorderIndex",
        "put",
        "inorder",
        "i",
        "i",
        "buildMyTree",
        "preorder",
        "preorder",
        "length",
        "inorder",
        "inorder",
        "length",
        "inorderIndex",
        "preorder",
        "preLeft",
        "preRight",
        "inorder",
        "inLeft",
        "inRight",
        "inorderIndex",
        "preLeft",
        "preRight",
        "root",
        "preorder",
        "preLeft",
        "index",
        "inorderIndex",
        "get",
        "root",
        "val",
        "root",
        "left",
        "buildMyTree",
        "preorder",
        "preLeft",
        "preLeft",
        "index",
        "inLeft",
        "inorder",
        "inLeft",
        "index",
        "inorderIndex",
        "root",
        "right",
        "buildMyTree",
        "preorder",
        "preLeft",
        "index",
        "inLeft",
        "preRight",
        "inorder",
        "index",
        "inRight",
        "inorderIndex",
        "root"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "@lc code=start",
        "@lc code=end"
    ],
    "docstrings": [
        "* @lc app=leetcode id=105 lang=java\n *\n * [105] Construct Binary Tree from Preorder and Inorder Traversal",
        "* Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }"
    ],
    "functions": [
        "TreeNode",
        "buildTree",
        "TreeNode",
        "buildMyTree"
    ],
    "classes": [
        "Solution"
    ]
}