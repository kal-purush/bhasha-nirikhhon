{
    "identifiers": [
        "warnings",
        "collections",
        "namedtuple",
        "conan",
        "tools",
        "gnu",
        "get_cross_building_settings",
        "_get_cross_building_settings",
        "conans",
        "errors",
        "ConanException",
        "conanfile",
        "self_os",
        "self_arch",
        "skip_x64_x86",
        "settings",
        "conanfile",
        "settings",
        "ConanException",
        "conans",
        "model",
        "conan_file",
        "ConanFile",
        "conanfile",
        "isinstance",
        "conanfile",
        "ConanFile",
        "_cross_building",
        "settings",
        "conanfile",
        "self_os",
        "self_os",
        "self_arch",
        "self_arch",
        "skip_x64_x86",
        "skip_x64_x86",
        "settings",
        "warnings",
        "warn",
        "conanfile",
        "_get_cross_building_settings",
        "conanfile",
        "self_os",
        "self_arch",
        "namedtuple",
        "settings",
        "_get_cross_building_settings",
        "conanfile",
        "self_os",
        "self_arch",
        "ret",
        "skip_x64_x86",
        "host_os",
        "build_os",
        "host_os",
        "host_arch",
        "build_arch",
        "host_arch",
        "build_arch",
        "host_arch",
        "build_arch",
        "host_arch",
        "host_os",
        "build_os",
        "host_os",
        "host_arch",
        "build_arch",
        "host_arch"
    ],
    "literals": [
        "\"Do not set both arguments, 'conanfile' and 'settings',\"",
        "\" to call cross_building function\"",
        "\"Argument 'settings' has been deprecated, use 'conanfile' instead\"",
        "'_ConanFile'",
        "'settings'",
        "\"x86_64\"",
        "\"x86\"",
        "\"sparcv9\"",
        "\"sparc\"",
        "\"ppc64\"",
        "\"ppc32\""
    ],
    "variables": [
        "ret",
        "conanfile",
        "ret",
        "build_os",
        "build_arch",
        "host_os",
        "host_arch"
    ],
    "comments": [
        "Handle input arguments (backwards compatibility with 'settings' as first argument)",
        "TODO: This can be promoted to a decorator pattern for tools if we adopt 'conanfile' as the",
        "first argument for all of them.",
        "TODO: If Conan is using 'profile_build' here we don't have any information about it,",
        "we are falling back to the old behavior (which is probably wrong here)"
    ],
    "docstrings": [],
    "functions": [
        "_cross_building"
    ],
    "classes": []
}