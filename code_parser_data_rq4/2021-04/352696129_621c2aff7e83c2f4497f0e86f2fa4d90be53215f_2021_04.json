{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "electron",
        "electron",
        "electron",
        "require",
        "require",
        "mainWindow",
        "BrowserWindow",
        "mainWindow",
        "mainWindow",
        "isDev",
        "path",
        "__dirname",
        "mainWindow",
        "mainWindow",
        "app",
        "createWindow",
        "Menu",
        "template",
        "Menu",
        "menu",
        "app",
        "process",
        "app",
        "app",
        "mainWindow",
        "createWindow",
        "ipcMain",
        "arg",
        "arg",
        "openFolderDialog",
        "getDuration",
        "filePath",
        "resolve",
        "reject",
        "mp3Duration",
        "filePath",
        "err",
        "duration",
        "duration",
        "resolve",
        "duration",
        "duration",
        "reject",
        "err",
        "reject",
        "err",
        "durationPromise",
        "getTags",
        "track",
        "resolve",
        "reject",
        "NodeID3",
        "filePath",
        "err",
        "tags",
        "err",
        "reject",
        "err",
        "tags",
        "Buffer",
        "tags",
        "track",
        "resolve",
        "track",
        "reject",
        "tagsPromise",
        "createSongObject",
        "data",
        "data",
        "file",
        "promises",
        "resolve",
        "reject",
        "getDuration",
        "file",
        "duration",
        "file",
        "data",
        "getTags",
        "data",
        "data",
        "resolve",
        "data",
        "err",
        "reject",
        "promises",
        "convertSong",
        "filesArray",
        "filesArray",
        "file",
        "promises",
        "resolve",
        "reject",
        "fs",
        "file",
        "err",
        "data",
        "err",
        "reject",
        "err",
        "resolve",
        "dataurl",
        "file",
        "promises",
        "getAllFiles",
        "filePath",
        "resolve",
        "reject",
        "fs",
        "filePath",
        "err",
        "files",
        "err",
        "reject",
        "err",
        "files",
        "file",
        "path",
        "file",
        "filesArray",
        "filePath",
        "file",
        "resolve",
        "filesArray",
        "filesPromise",
        "dialog",
        "mainWindow",
        "result",
        "result",
        "getAllFiles",
        "result",
        "filesArray",
        "filesArray",
        "convertSong",
        "filesArray",
        "data",
        "createSongObject",
        "data",
        "data",
        "data",
        "err"
    ],
    "literals": [
        "\"electron\"",
        "\"fs\"",
        "\"path\"",
        "\"dataurl\"",
        "\"mp3-duration\"",
        "\"node-id3\"",
        "\"electron-is-dev\"",
        "\"electron\"",
        "\"http://localhost:3000\"",
        "file://${path.join(__dirname, \"../build/index.html\")}",
        "\"../build/index.html\"",
        "\"closed\"",
        "\"ready\"",
        "\"window-all-closed\"",
        "\"darwin\"",
        "\"activate\"",
        "\"modal-file-content\"",
        "\"Duration mp3 to img error\"",
        "\"Fuck\"",
        "\"base64\"",
        "\"When image file converted to mp3 error\"",
        "\"Shit\"",
        "\"FUCK\"",
        "\"audio/mp3\"",
        "\".mp3\"",
        "\"/\"",
        "\"Open Directory\"",
        "\"openDirectory\"",
        "\"filePaths\"",
        "\"filePaths\"",
        "\"Crossed Convert song\"",
        "\"done everything\"",
        "\"modal-file-results\"",
        "\"Error\""
    ],
    "variables": [
        "electron",
        "fs",
        "path",
        "dataurl",
        "mp3Duration",
        "NodeID3",
        "app",
        "BrowserWindow",
        "Menu",
        "isDev",
        "mainWindow",
        "template",
        "menu",
        "getDuration",
        "durationPromise",
        "getTags",
        "track",
        "tagsPromise",
        "imageBuffer",
        "tags",
        "createSongObject",
        "promises",
        "convertSong",
        "promises",
        "getAllFiles",
        "filesArray",
        "filesPromise"
    ],
    "comments": [
        "const template = [",
        "{",
        "label: \"Sound Control\",",
        "submenu: [",
        "{",
        "label: \"Select Song\",",
        "click: function () {",
        "openFolderDialog();",
        "},",
        "},",
        "],",
        "},",
        "];",
        "console.log(tags);",
        "console.log(tags.image.imageBuffer);",
        "let songObjectArray = [];",
        "const songObjectPromise = new Promise((resolve, reject) => {",
        "data.forEach((file) => {",
        "getDuration(file.filePath)",
        ".then((duration) => {",
        "return Object.assign(file, { duration });",
        "})",
        ".then((data) => {",
        "return getTags(data);",
        "})",
        ".then((finalMusic) => {",
        "songObjectArray.push(finalMusic);",
        "});",
        "});",
        "resolve(songObjectArray);",
        "});",
        "return songObjectPromise;",
        "return getDuration(data.filePath)",
        ".then((duration) => {",
        "return Object.assign(data, { duration });",
        "})",
        ".then((data) => {",
        "// console.log(data.duration);",
        "return getTags(data);",
        "});",
        "let musicFiles = [];",
        "console.log(file);",
        "const songPromise = new Promise((resolve, reject) => {",
        "filesArray.forEach((file) => {",
        "fs.readFile(file, (err, data) => {",
        "if (err) {",
        "console.log(\"Error convertSong\");",
        "reject(err);",
        "}",
        "musicFiles.push({",
        "music: dataurl.convert({ data, mimetype: \"audio/mp3\" }),",
        "filePath: file,",
        "});",
        "resolve({",
        "music: dataurl.convert({ data, mimetype: \"audio/mp3\" }),",
        "filePath: filePath,",
        "});",
        "});",
        "});",
        "resolve(musicFiles);",
        "});",
        "console.log(\"Filenames with the .txt extension:\");",
        "console.log(file);",
        "return convertSong(result[\"filePaths\"][0]);",
        "console.log(data[1].filePath);",
        "console.log(data[0].filePath);",
        "event.sender.send(\"modal-file-results\", data);",
        "ipcMain.send(\"modal-file-results\", data);",
        "console.log(data[0].title);",
        "console.log(data[1].title);"
    ],
    "docstrings": [],
    "functions": [
        "createWindow",
        "openFolderDialog"
    ],
    "classes": []
}