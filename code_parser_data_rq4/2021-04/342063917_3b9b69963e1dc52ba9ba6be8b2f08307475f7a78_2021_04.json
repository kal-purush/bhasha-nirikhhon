{
    "identifiers": [
        "prova1estruturadedadosavancada",
        "root",
        "alturaArv",
        "qtd_node",
        "novo",
        "root",
        "root",
        "novo",
        "root",
        "setProfundidade",
        "node",
        "node",
        "nodeSonRight",
        "node",
        "nodeSonLeft",
        "novo",
        "Father",
        "Father",
        "getDado",
        "root",
        "getDado",
        "Father",
        "nodeSonLeft",
        "root",
        "setNodeSonLeft",
        "novo",
        "novo",
        "setFather",
        "Father",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "insertNaEsquerda",
        "novo",
        "Father",
        "nodeSonLeft",
        "Father",
        "nodeSonLeft",
        "Father",
        "setNodeSonLeft",
        "novo",
        "novo",
        "setFather",
        "Father",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "insertNaEsquerda",
        "novo",
        "Father",
        "nodeSonLeft",
        "novo",
        "Father",
        "Father",
        "getDado",
        "root",
        "getDado",
        "Father",
        "nodeSonRight",
        "root",
        "setNodeSonRight",
        "novo",
        "novo",
        "setFather",
        "Father",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "insertNaDireita",
        "novo",
        "Father",
        "nodeSonRight",
        "Father",
        "nodeSonRight",
        "Father",
        "setNodeSonRight",
        "novo",
        "novo",
        "setFather",
        "Father",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "alturaArv",
        "novo",
        "getProfundidade",
        "novo",
        "setProfundidade",
        "Father",
        "getProfundidade",
        "insertNaDireita",
        "novo",
        "Father",
        "nodeSonRight",
        "novo",
        "root",
        "insertRoot",
        "novo",
        "qtd_node",
        "insert",
        "novo",
        "root",
        "novo",
        "Father",
        "novo",
        "getDado",
        "Father",
        "getDado",
        "Father",
        "getNodeSonLeft",
        "insertNaEsquerda",
        "novo",
        "Father",
        "qtd_node",
        "insert",
        "novo",
        "Father",
        "getNodeSonLeft",
        "Father",
        "getNodeSonRight",
        "insertNaDireita",
        "novo",
        "Father",
        "qtd_node",
        "insert",
        "novo",
        "Father",
        "getNodeSonRight",
        "x",
        "node",
        "node",
        "getDado",
        "x",
        "node",
        "node",
        "nodeSonLeft",
        "p",
        "procurarNo",
        "x",
        "node",
        "nodeSonLeft",
        "p",
        "p",
        "node",
        "nodeSonRight",
        "p",
        "procurarNo",
        "x",
        "node",
        "nodeSonRight",
        "p",
        "p",
        "x",
        "node",
        "procurarNo",
        "x",
        "root",
        "node",
        "next",
        "nextSemFilhos",
        "node",
        "root",
        "node",
        "root",
        "next",
        "node",
        "Father",
        "nodeSonLeft",
        "node",
        "node",
        "Father",
        "nodeSonLeft",
        "next",
        "node",
        "Father",
        "nodeSonRight",
        "next",
        "next",
        "Father",
        "nodeSonLeft",
        "next",
        "next",
        "Father",
        "nodeSonLeft",
        "next",
        "Father",
        "nodeSonRight",
        "next",
        "Father",
        "node",
        "Father",
        "next",
        "nodeSonRight",
        "node",
        "nodeSonRight",
        "next",
        "nodeSonLeft",
        "node",
        "nodeSonLeft",
        "node",
        "nodeSonRight",
        "node",
        "nodeSonRight",
        "Father",
        "next",
        "node",
        "nodeSonLeft",
        "node",
        "nodeSonLeft",
        "Father",
        "next",
        "node",
        "Father",
        "node",
        "nodeSonRight",
        "node",
        "nodeSonLeft",
        "node",
        "node",
        "nodeSonLeft",
        "nextSemFilhos",
        "node",
        "nodeSonLeft",
        "node",
        "nodeSonRight",
        "nextSemFilhos",
        "node",
        "nodeSonRight",
        "node",
        "printInOrdem",
        "root",
        "root",
        "root",
        "nodeSonLeft",
        "printInOrdem",
        "root",
        "nodeSonLeft",
        "root",
        "getDado",
        "root",
        "nodeSonRight",
        "printInOrdem",
        "root",
        "nodeSonRight",
        "printPosOrdem",
        "root",
        "root",
        "root",
        "nodeSonLeft",
        "printPosOrdem",
        "root",
        "nodeSonLeft",
        "root",
        "nodeSonRight",
        "printPosOrdem",
        "root",
        "nodeSonRight",
        "root",
        "getDado",
        "printPreOrdem",
        "root",
        "root",
        "root",
        "getDado",
        "root",
        "nodeSonLeft",
        "printPreOrdem",
        "root",
        "nodeSonLeft",
        "root",
        "nodeSonRight",
        "printPreOrdem",
        "root",
        "nodeSonRight",
        "printMenores",
        "root",
        "nodeSonLeft",
        "root",
        "root",
        "nodeSonLeft",
        "printMenores",
        "root",
        "nodeSonLeft",
        "root",
        "getDado",
        "root",
        "nodeSonRight",
        "printMenores",
        "root",
        "nodeSonRight",
        "printFatherAndSonOld",
        "root",
        "root",
        "root",
        "nodeSonLeft",
        "printFatherAndSonOld",
        "root",
        "nodeSonLeft",
        "root",
        "nodeSonRight",
        "printFatherAndSonOld",
        "root",
        "nodeSonRight",
        "nodeLeaf",
        "root",
        "root",
        "nodeSonRight",
        "root",
        "getDado",
        "root",
        "getNodeSonLeft",
        "getDado",
        "root",
        "getDado",
        "root",
        "getNodeSonRight",
        "getDado",
        "qtd_node",
        "root"
    ],
    "literals": [
        "\"100 foi inserido como raíz.\"",
        "\"[\"",
        "\"]\"",
        "\"[\"",
        "\"]\"",
        "\"[\"",
        "\"]\"",
        "\"[\"",
        "\"]\"",
        "\"Pai: [\"",
        "\"]\"",
        "\" Filho de Maior Valor: [\"",
        "\"]\"",
        "\"Pai: [\"",
        "\"]\"",
        "\" Filho de Maior Valor: [\"",
        "\"]\""
    ],
    "variables": [
        "root",
        "alturaArv",
        "qtd_node"
    ],
    "comments": [
        "raíz",
        "altura da árvore",
        "inserindo na direita",
        "procurando e removendo o nó escolhido na classe Main",
        "Procura o nó e o mais próximo para subir",
        "Se já nó a ser removido for raiz, raiz será o próximo",
        "Se não, mudar conexão do Father de nó para o próximo",
        "Remover conexão do Father de próximo com próximo",
        "Copiar conexões de Father para próximo",
        "Altera conexões dos Filhos de nó",
        "Remover conxeões de nó",
        "procura e remove-FIM",
        "Menores valores da Árvore binária de busca",
        "Métodos que buscam e exibem Fathers e Filhos com maior valor"
    ],
    "docstrings": [],
    "functions": [
        "insertRoot",
        "nodeLeaf",
        "insertNaEsquerda",
        "insertNaDireita",
        "insert",
        "insert",
        "Node",
        "procurarNo",
        "removeNo",
        "Node",
        "nextSemFilhos",
        "printInOrdem",
        "printInOrdem",
        "printPosOrdem",
        "printPosOrdem",
        "printPreOrdem",
        "printPreOrdem",
        "printMenores",
        "printMenores",
        "printFatherAndSonOld",
        "printFatherAndSonOld",
        "getQtd_node",
        "Node",
        "getRoot"
    ],
    "classes": [
        "ArvBinaria"
    ]
}