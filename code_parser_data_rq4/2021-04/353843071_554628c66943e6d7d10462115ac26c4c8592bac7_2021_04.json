{
    "identifiers": [
        "datetime",
        "datetime",
        "gc",
        "logging",
        "multiprocessing",
        "Manager",
        "Pool",
        "os",
        "pathlib",
        "Path",
        "urllib",
        "parse",
        "urlparse",
        "pandas",
        "pd",
        "pyarrow",
        "pa",
        "pytz",
        "s3fs",
        "s3access",
        "normalize",
        "deserialize_file",
        "s3access",
        "parquet",
        "write_dataset",
        "s3access",
        "schema",
        "create_schema",
        "object_name",
        "datetime",
        "strptime",
        "object_name",
        "src",
        "hour",
        "timezone",
        "fs",
        "src",
        "startswith",
        "urlparse",
        "src",
        "f",
        "timezone",
        "localize",
        "parse_time",
        "os",
        "path",
        "basename",
        "f",
        "f",
        "fs",
        "glob",
        "format",
        "u",
        "netloc",
        "u",
        "path",
        "hour",
        "f",
        "as_posix",
        "timezone",
        "localize",
        "parse_time",
        "os",
        "path",
        "basename",
        "f",
        "f",
        "Path",
        "src",
        "rglob",
        "pd",
        "DataFrame",
        "files",
        "root",
        "endpoint_url",
        "endpoint_region",
        "s3_acl",
        "root",
        "startswith",
        "s3fs",
        "S3FileSystem",
        "anon",
        "client_kwargs",
        "endpoint_url",
        "endpoint_region",
        "s3_additional_kwargs",
        "s3_acl",
        "src",
        "dst",
        "files",
        "timezone",
        "logger",
        "schema",
        "input_file_system",
        "outputFileSystem",
        "cpu_count",
        "timeout",
        "Manager",
        "manager",
        "logger",
        "info",
        "Pool",
        "processes",
        "cpu_count",
        "f",
        "files",
        "itertuples",
        "pool",
        "apply_async",
        "deserialize_file",
        "args",
        "f",
        "path",
        "input_file_system",
        "results",
        "result",
        "pool",
        "close",
        "logger",
        "info",
        "i",
        "len",
        "results",
        "items",
        "extend",
        "results",
        "i",
        "get",
        "timeout",
        "timeout",
        "err",
        "logger",
        "info",
        "files",
        "i",
        "err",
        "logger",
        "info",
        "len",
        "items",
        "gc",
        "collect",
        "pd",
        "DataFrame",
        "items",
        "logger",
        "info",
        "format",
        "len",
        "items",
        "dst",
        "gc",
        "collect",
        "write_dataset",
        "pa",
        "Table",
        "from_pandas",
        "df",
        "schema",
        "schema",
        "preserve_index",
        "dst",
        "compression",
        "partition_cols",
        "partition_filename_cb",
        "x",
        "join",
        "y",
        "y",
        "x",
        "row_group_cols",
        "fs",
        "outputFileSystem",
        "cpu_count",
        "cpu_count",
        "makedirs",
        "dst",
        "startswith",
        "timeout",
        "timeout",
        "logger",
        "info",
        "format",
        "dst",
        "os",
        "cpu_count",
        "pytz",
        "timezone",
        "datetime",
        "now",
        "utc",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "logging",
        "StreamHandler",
        "ch",
        "setLevel",
        "logging",
        "INFO",
        "logger",
        "addHandler",
        "ch",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "logger",
        "info",
        "format",
        "now",
        "logger",
        "info",
        "format",
        "cpu_count",
        "logger",
        "info",
        "format",
        "src",
        "logger",
        "info",
        "format",
        "dst",
        "logger",
        "info",
        "format",
        "hour",
        "logger",
        "info",
        "format",
        "timeout",
        "src",
        "len",
        "src",
        "format",
        "dst",
        "len",
        "dst",
        "format",
        "hour",
        "len",
        "hour",
        "format",
        "src",
        "len",
        "src",
        "src",
        "create_file_system",
        "src",
        "input_s3_endpoint",
        "input_s3_region",
        "input_s3_acl",
        "create_file_system",
        "dst",
        "output_s3_endpoint",
        "output_s3_region",
        "output_s3_acl",
        "create_schema",
        "create_files_index",
        "src",
        "hour",
        "utc",
        "input_file_system",
        "len",
        "all_files",
        "format",
        "src",
        "logger",
        "info",
        "all_files",
        "dst",
        "startswith",
        "os",
        "makedirs",
        "dst",
        "exist_ok",
        "aggregate_range",
        "src",
        "dst",
        "all_files",
        "utc",
        "logger",
        "schema",
        "input_file_system",
        "output_file_system",
        "cpu_count",
        "timeout",
        "main"
    ],
    "literals": [
        "\"%Y-%m-%d-%H-%M-%S\"",
        "\"s3://\"",
        "\"path\"",
        "\"dt\"",
        "\"{}{}/{}*\"",
        "\"path\"",
        "\"dt\"",
        "\"*\"",
        "\"s3://\"",
        "\"endpoint_url\"",
        "\"region_name\"",
        "\"ACL\"",
        "\"Deserializing data in files\"",
        "\"Waiting for deserialization to complete\"",
        "\"Error deserializing\"",
        "\"path\"",
        "\"Deserialization complete\"",
        "\"Serializing {} items to {}\"",
        "\"SNAPPY\"",
        "\"bucket_name\"",
        "\"operation\"",
        "\"year\"",
        "\"month\"",
        "\"day\"",
        "\"hour\"",
        "\"-\"",
        "\".parquet\"",
        "\"requester\"",
        "\"remoteip_int\"",
        "\"is_assumed_role\"",
        "\"is_user\"",
        "\"s3://\"",
        "\"Done serializing items to {}\"",
        "\"UTC\"",
        "\"SRC\"",
        "\"DST\"",
        "\"HOUR\"",
        "\"INPUT_S3_ACL\"",
        "\"INPUT_S3_ENDPOINT\"",
        "\"INPUT_S3_REGION\"",
        "\"OUTPUT_S3_ACL\"",
        "\"OUTPUT_S3_ENDPOINT\"",
        "\"OUTPUT_S3_REGION\"",
        "\"TIMEOUT\"",
        "\"300\"",
        "\"now: {}\"",
        "\"cpu_count: {}\"",
        "\"src: {}\"",
        "\"dst: {}\"",
        "\"hour: {}\"",
        "\"timeout: {}\"",
        "\"{} is missing\"",
        "\"src\"",
        "\"{} is missing\"",
        "\"dst\"",
        "\"{} is missing\"",
        "\"hour\"",
        "\"/\"",
        "\"/\"",
        "\"no source files found within folder {}\"",
        "\"s3://\"",
        "\"__main__\""
    ],
    "variables": [
        "files",
        "u",
        "files",
        "files",
        "items",
        "results",
        "pool",
        "result",
        "df",
        "items",
        "cpu_count",
        "utc",
        "now",
        "logger",
        "ch",
        "src",
        "dst",
        "hour",
        "input_s3_acl",
        "input_s3_endpoint",
        "input_s3_region",
        "output_s3_acl",
        "output_s3_endpoint",
        "output_s3_region",
        "timeout",
        "src",
        "input_file_system",
        "output_file_system",
        "schema",
        "all_files"
    ],
    "comments": [
        "! /usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "noqa: F841",
        "",
        "CPU Count",
        "",
        "",
        "Now",
        "",
        "",
        "Setup Logging",
        "",
        "",
        "Settings",
        "",
        "",
        "Initialize File Systems",
        "",
        "",
        "Load Schema",
        ""
    ],
    "docstrings": [
        "\"\"\"\n    :param str src: The filesystem, s3 or local\n    :param str hour: The hour being targetted in the format YYYY-MM-DD-HH\n    :param str timezone: The timezone from pytz\n    :param str fs:  The filesystem\n    :return: A Data Frame with the set of files including path and datetime\n    \"\"\""
    ],
    "functions": [
        "parse_time",
        "create_files_index",
        "create_file_system",
        "aggregate_range",
        "main"
    ],
    "classes": []
}