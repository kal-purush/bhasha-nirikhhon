{
    "identifiers": [
        "vrae",
        "vrae",
        "VRAE",
        "vrae",
        "utils",
        "numpy",
        "np",
        "torch",
        "pandas",
        "pd",
        "plotly",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "TensorDataset",
        "sklearn",
        "preprocessing",
        "MinMaxScaler",
        "StandardScaler",
        "sklearn",
        "model_selection",
        "train_test_split",
        "pd",
        "read_pickle",
        "data",
        "y",
        "input_window",
        "output_window",
        "stride",
        "num_features",
        "data",
        "shape",
        "y",
        "shape",
        "L",
        "input_window",
        "output_window",
        "stride",
        "np",
        "zeros",
        "input_window",
        "num_samples",
        "num_features",
        "ff",
        "np",
        "arange",
        "num_features",
        "ii",
        "np",
        "arange",
        "num_samples",
        "ii",
        "start_x",
        "input_window",
        "y",
        "start_x",
        "end_x",
        "ff",
        "X",
        "pandas",
        "pd",
        "tensorflow",
        "keras",
        "tensorflow",
        "keras",
        "layers",
        "matplotlib",
        "pyplot",
        "plt",
        "values",
        "time_steps",
        "TIME_STEPS",
        "i",
        "len",
        "values",
        "time_steps",
        "output",
        "append",
        "values",
        "i",
        "i",
        "time_steps",
        "np",
        "stack",
        "output",
        "create_sequences",
        "data",
        "x_train",
        "shape",
        "keras",
        "Sequential",
        "layers",
        "Input",
        "shape",
        "x_train",
        "shape",
        "x_train",
        "shape",
        "layers",
        "Conv1D",
        "filters",
        "kernel_size",
        "padding",
        "strides",
        "activation",
        "layers",
        "Dropout",
        "rate",
        "layers",
        "Conv1D",
        "filters",
        "kernel_size",
        "padding",
        "strides",
        "activation",
        "layers",
        "Conv1DTranspose",
        "filters",
        "kernel_size",
        "padding",
        "strides",
        "activation",
        "layers",
        "Dropout",
        "rate",
        "layers",
        "Conv1DTranspose",
        "filters",
        "kernel_size",
        "padding",
        "strides",
        "activation",
        "layers",
        "Conv1DTranspose",
        "filters",
        "kernel_size",
        "padding",
        "model",
        "compile",
        "optimizer",
        "keras",
        "optimizers",
        "Adam",
        "learning_rate",
        "loss",
        "model",
        "summary",
        "model",
        "fit",
        "x_train",
        "x_train",
        "epochs",
        "batch_size",
        "validation_split",
        "callbacks",
        "keras",
        "callbacks",
        "EarlyStopping",
        "monitor",
        "patience",
        "mode"
    ],
    "literals": [
        "'./model_dir'",
        "'Adam'",
        "'MSELoss'",
        "'LSTM'",
        "\"./walk_data.pkl\"",
        "\"Training input shape: \"",
        "\"same\"",
        "\"relu\"",
        "\"same\"",
        "\"relu\"",
        "\"same\"",
        "\"relu\"",
        "\"same\"",
        "\"relu\"",
        "\"same\"",
        "\"mse\"",
        "\"val_loss\"",
        "\"min\""
    ],
    "variables": [
        "dload",
        "hidden_size",
        "hidden_layer_depth",
        "latent_length",
        "batch_size",
        "learning_rate",
        "n_epochs",
        "dropout_rate",
        "optimizer",
        "cuda",
        "print_every",
        "clip",
        "max_grad_norm",
        "loss",
        "block",
        "data",
        "data",
        "L",
        "num_samples",
        "X",
        "start_x",
        "end_x",
        "X",
        "ii",
        "ff",
        "TIME_STEPS",
        "output",
        "x_train",
        "model",
        "history"
    ],
    "comments": [
        "options: ADAM, SGD",
        "options: True, False",
        "options: True, False",
        "options: SmoothL1Loss, MSELoss",
        "options: LSTM, GRU",
        "",
        "Y = np.zeros([output_window, num_samples, num_features])",
        "stride * ii",
        "start_y = stride * ii + input_window",
        "end_y = start_y + output_window",
        "Y[:, ii, ff] = y[start_y:end_y, ff]",
        ", Y",
        "X = windowed_dataset(np.array(data))",
        "X = X.reshape(-1,5,59)",
        "vrae = VRAE(sequence_length=5,",
        "number_of_features = 59,",
        "hidden_size = hidden_size,",
        "hidden_layer_depth = hidden_layer_depth,",
        "latent_length = latent_length,",
        "batch_size = batch_size,",
        "learning_rate = learning_rate,",
        "n_epochs = n_epochs,",
        "dropout_rate = dropout_rate,",
        "optimizer = optimizer,",
        "cuda = cuda,",
        "print_every=print_every,",
        "clip=clip,",
        "max_grad_norm=max_grad_norm,",
        "loss = loss,",
        "block = block,",
        "dload = dload)",
        "",
        "vrae.fit(X)",
        "Generated training sequences for use in the model."
    ],
    "docstrings": [
        "'''\n    create a windowed dataset\n\n    : param y:                time series feature (array)\n    : param input_window:     number of y samples to give model\n    : param output_window:    number of future y samples to predict\n    : param stide:            spacing between windows\n    : param num_features:     number of features (i.e., 1 for us, but we could have multiple features)\n    : return X, Y:            arrays with correct dimensions for LSTM\n    :                         (i.e., [input/output window size # examples, # features])\n    '''"
    ],
    "functions": [
        "windowed_dataset",
        "create_sequences"
    ],
    "classes": []
}