{
    "identifiers": [
        "require",
        "require",
        "callback",
        "db",
        "err",
        "results",
        "err",
        "callback",
        "results",
        "data",
        "callback",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "db",
        "query",
        "values",
        "err",
        "results",
        "err",
        "err",
        "callback",
        "results",
        "id",
        "callback",
        "db",
        "id",
        "err",
        "results",
        "err",
        "err",
        "callback",
        "results",
        "data",
        "callback",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "db",
        "query",
        "values",
        "err",
        "results",
        "err",
        "err",
        "callback",
        "id",
        "callback",
        "db",
        "id",
        "err",
        "results",
        "err",
        "err",
        "callback",
        "callback",
        "db",
        "err",
        "results",
        "err",
        "callback",
        "results"
    ],
    "literals": [
        "\"../../lib/utilities\"",
        "\"../../config/db\"",
        "SELECT * \n        FROM members\n        ORDER BY name ASC",
        "\"Database Error\"",
        "INSERT INTO members (\n                name,\n                avatar_url,\n                email,\n                ocupation,\n                origin,\n                blood,\n                height,\n                weight,\n                captain_id\n            )   VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9)\n            RETURNING id",
        "Database error! ${err}",
        "SELECT members.*, captains.name AS captain_name\n                FROM members \n                LEFT JOIN captains ON (members.captain_id = captains.id)\n                WHERE members.id = $1",
        "Database Error!${err}",
        "UPDATE members SET \n            avatar_url=($1),\n            name=($2),\n            email=($3),\n            ocupation=($4),\n            origin=($5),\n            blood=($6),\n            height=($7),\n            weight=($8),\n            captain_id=($9)\n        WHERE id = $10",
        "Database error! ${err}",
        "DELETE FROM members WHERE id = $1",
        "Database error! ${err}",
        "SELECT name, id FROM captains",
        "'Database Error!'"
    ],
    "variables": [
        "db",
        "query",
        "values",
        "query",
        "values"
    ],
    "comments": [
        "seleciona todos os instrutores",
        "`SELECT * FROM members`, pegando todos os campos daquela tabela no banco de dados",
        "enviando os dados como parametro",
        "criando novo (post)",
        "fazendo a query usando template string com a função de inserir dados, tabela já criada",
        "assim que ele rodar e cadastrar no banco ele irá me retornar um id",
        "criando array que será utilizado para substituir o splaceholders, \"$1, $2, $3, $4, $5, $6\"",
        "somente captain pois no njk já esta chamando captain.id",
        "callback function",
        "'filtrando'  //\"PEGA TUDO DE MEMBERS* E DO CAPTAIN EU QUERO SÓ O NAME, sendo captain_name\"",
        "NUNCA ESQUECA QUE SEU UPDATE PRECISA TER UM WHERE",
        "Não precisanddo devolver nada pois no members ele já enviará os dados do req.body",
        "se tudo deu certo..."
    ],
    "docstrings": [],
    "functions": [
        "all",
        "create",
        "find",
        "update",
        "captainsSelectOptions"
    ],
    "classes": []
}