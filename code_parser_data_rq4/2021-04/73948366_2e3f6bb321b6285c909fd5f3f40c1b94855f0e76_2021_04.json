{
    "identifiers": [
        "com",
        "yahoo",
        "athenz",
        "common",
        "server",
        "paramstore",
        "com",
        "amazonaws",
        "util",
        "EC2MetadataUtils",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "software",
        "amazon",
        "awssdk",
        "regions",
        "Region",
        "software",
        "amazon",
        "awssdk",
        "services",
        "ssm",
        "SsmClient",
        "software",
        "amazon",
        "awssdk",
        "services",
        "ssm",
        "model",
        "java",
        "lang",
        "invoke",
        "MethodHandles",
        "java",
        "time",
        "Instant",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "concurrent",
        "ScheduledExecutorService",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "locks",
        "StampedLock",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "MethodHandles",
        "lookup",
        "lookupClass",
        "PROP_RELOAD_PARAMS_PERIOD",
        "RELOAD_PARAMS_SECONDS_DEFAULT",
        "PROP_PARAMETER_STORE_PARAM_PREFIX_LIST",
        "parameterPrefixArray",
        "ssmClient",
        "parameterMap",
        "parameterPrefixArray",
        "loadParamPrefixes",
        "ssmClient",
        "initClient",
        "reloadParameters",
        "startReloadParamsTask",
        "prefixProp",
        "getProperty",
        "PROP_PARAMETER_STORE_PARAM_PREFIX_LIST",
        "prefixProp",
        "prefixProp",
        "split",
        "region",
        "EC2MetadataUtils",
        "getInstanceInfo",
        "getRegion",
        "SsmClient",
        "builder",
        "region",
        "Region",
        "of",
        "region",
        "build",
        "e",
        "LOG",
        "error",
        "e",
        "getMessage",
        "e",
        "ssmClient",
        "executor",
        "Executors",
        "newSingleThreadScheduledExecutor",
        "periodBetweenExecutions",
        "parseLong",
        "getProperty",
        "PROP_RELOAD_PARAMS_PERIOD",
        "RELOAD_PARAMS_SECONDS_DEFAULT",
        "executor",
        "scheduleAtFixedRate",
        "reloadParameters",
        "periodBetweenExecutions",
        "periodBetweenExecutions",
        "TimeUnit",
        "SECONDS",
        "ssmClient",
        "LOG",
        "error",
        "getParameterList",
        "storeParameters",
        "e",
        "LOG",
        "error",
        "e",
        "getMessage",
        "e",
        "param",
        "shouldFetchParam",
        "param",
        "paramName",
        "param",
        "name",
        "req",
        "GetParameterRequest",
        "builder",
        "name",
        "paramName",
        "withDecryption",
        "build",
        "res",
        "ssmClient",
        "getParameter",
        "req",
        "paramValue",
        "res",
        "parameter",
        "value",
        "paramLastModified",
        "res",
        "parameter",
        "lastModifiedDate",
        "writeParameter",
        "paramName",
        "paramValue",
        "paramLastModified",
        "LOG",
        "info",
        "paramName",
        "paramValue",
        "paramLastModified",
        "param",
        "readParameter",
        "param",
        "name",
        "readParameter",
        "param",
        "name",
        "lastModifiedDate",
        "isBefore",
        "param",
        "lastModifiedDate",
        "request",
        "parameterPrefixArray",
        "request",
        "DescribeParametersRequest",
        "builder",
        "filters",
        "ParametersFilter",
        "builder",
        "key",
        "values",
        "parameterPrefixArray",
        "build",
        "build",
        "request",
        "DescribeParametersRequest",
        "builder",
        "build",
        "result",
        "ssmClient",
        "describeParameters",
        "request",
        "result",
        "parameters",
        "Override",
        "param",
        "get",
        "param",
        "Override",
        "param",
        "defaultValue",
        "paramHolder",
        "readParameter",
        "param",
        "paramHolder",
        "defaultValue",
        "paramHolder",
        "value",
        "paramName",
        "paramValue",
        "paramLastModified",
        "stamp",
        "writeLock",
        "parameterMap",
        "put",
        "paramName",
        "paramValue",
        "paramLastModified",
        "unlockWrite",
        "stamp",
        "key",
        "stamp",
        "tryOptimisticRead",
        "value",
        "parameterMap",
        "get",
        "key",
        "validate",
        "stamp",
        "stamp",
        "readLock",
        "parameterMap",
        "get",
        "key",
        "unlock",
        "stamp",
        "value",
        "value",
        "lastModifiedDate",
        "value",
        "value",
        "lastModifiedDate",
        "lastModifiedDate",
        "value",
        "lastModifiedDate"
    ],
    "literals": [
        "\"athenz.common.server.paramstore.reload_period\"",
        "\"60\"",
        "\"athenz.common.server.paramstore.prefix_list\"",
        "\",\"",
        "\"Failed to init aws ssm client. error: {}, {}\"",
        "\"Cannot reload AWS Parameters store, ssm client is null\"",
        "\"Failed to reload AWS Parameters store. error: {}, {}\"",
        "\"AWSParameterStoreSyncer update map, name: [{}], value: [{}], modification time: [{}]\"",
        "\"Name\""
    ],
    "variables": [
        "parameterPrefixArray",
        "ssmClient",
        "request",
        "value",
        "lastModifiedDate"
    ],
    "comments": [
        "comma separated list of prefixes to be loaded from parameter store",
        "Since this is a single-writer and multiple-reader,",
        "use StampedLock because it is lock-free for readers in most cases.",
        "do not initiate reloadParameters task if ssm client is null"
    ],
    "docstrings": [
        "*\n *  * Copyright The Athenz Authors\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *     http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *",
        "* Periodically (configurable) loads all AWS Parameters Store and store it in memory.\n * Provides api to retrieve the parameters.\n *\n * Required permissions: ssm:GetParameters, ssm:DescribeParameters"
    ],
    "functions": [
        "AWSParameterStoreSyncer",
        "loadParamPrefixes",
        "SsmClient",
        "initClient",
        "startReloadParamsTask",
        "reloadParameters",
        "storeParameters",
        "shouldFetchParam",
        "getParameterList",
        "get",
        "get",
        "writeParameter",
        "ParameterHolder",
        "readParameter",
        "ParameterHolder"
    ],
    "classes": [
        "AWSParameterStoreSyncer",
        "ParameterHolder"
    ]
}