{
    "identifiers": [
        "ctypes",
        "size",
        "size",
        "size",
        "ctypes",
        "py_object",
        "size",
        "PyArrayType",
        "clear",
        "_size",
        "index",
        "index",
        "_size",
        "IndexError",
        "_elements",
        "index",
        "index",
        "value",
        "index",
        "_size",
        "IndexError",
        "_elements",
        "value",
        "value",
        "i",
        "len",
        "_elements",
        "value",
        "_ArrayIterator",
        "_elements",
        "index",
        "_size",
        "index",
        "to_return",
        "to_print",
        "_size",
        "to_return",
        "to_print",
        "the_array",
        "the_array",
        "_cur_index",
        "len",
        "_array_ref",
        "_array_ref",
        "_cur_index",
        "_cur_index",
        "entry",
        "StopIteration",
        "num_rows",
        "num_cols",
        "num_rows",
        "i",
        "num_rows",
        "rows",
        "num_cols",
        "len",
        "rows",
        "len",
        "rows",
        "value",
        "row",
        "rows",
        "row",
        "clear",
        "value",
        "index_tuple",
        "len",
        "index_tuple",
        "index_tuple",
        "index_tuple",
        "row",
        "num_rows",
        "col",
        "num_cols",
        "IndexError",
        "rows",
        "row",
        "array_1d",
        "col",
        "index_tuple",
        "value",
        "len",
        "index_tuple",
        "index_tuple",
        "index_tuple",
        "row",
        "num_rows",
        "col",
        "num_cols",
        "IndexError",
        "rows",
        "row",
        "value",
        "row",
        "rows",
        "st1",
        "row",
        "st1",
        "_make_array",
        "_capacity",
        "_size",
        "index",
        "index",
        "_size",
        "IndexError",
        "_elements",
        "index",
        "value",
        "_size",
        "_capacity",
        "_resize",
        "_capacity",
        "_elements",
        "_size",
        "value",
        "_size",
        "capacity",
        "_make_array",
        "capacity",
        "k",
        "_size",
        "_elements",
        "k",
        "new_elements",
        "capacity",
        "size",
        "size",
        "index",
        "value",
        "_size",
        "_capacity",
        "_resize",
        "_capacity",
        "i",
        "_size",
        "index",
        "_elements",
        "_elements",
        "i",
        "_elements",
        "value",
        "_size",
        "value",
        "i",
        "_size",
        "_elements",
        "i",
        "value",
        "j",
        "i",
        "_size",
        "_elements",
        "_elements",
        "j",
        "_elements",
        "_size",
        "_size",
        "ValueError"
    ],
    "literals": [
        "\"Array size must be > 0\"",
        "'Invalid index'",
        "'Invalid index'",
        "\"(\"",
        "\",\"",
        "\")\"",
        "\"Invalid number of array subscripts.\"",
        "'Invalid index'",
        "\"Invalid number of array subscripts.\"",
        "'Invalid index'",
        "\"\"",
        "\"\\n\"",
        "'Invalid index'",
        "\"Value not found\""
    ],
    "variables": [
        "_size",
        "PyArrayType",
        "_elements",
        "index",
        "i",
        "to_return",
        "to_print",
        "to_return",
        "to_print",
        "_array_ref",
        "_cur_index",
        "entry",
        "rows",
        "i",
        "row",
        "col",
        "array_1d",
        "row",
        "col",
        "array_1d",
        "array_1d",
        "col",
        "st1",
        "_size",
        "_capacity",
        "_elements",
        "new_elements",
        "new_elements",
        "k",
        "_elements",
        "_capacity",
        "i",
        "index",
        "j"
    ],
    "comments": [
        "Create the array structure using the ctypes module.",
        "Initialize each element.",
        "Creates a 1D array to store an array reference for each row.",
        "Creates the 1D arrays for each row of the 2D array.",
        "return str( [str(row) for row in self.rows])",
        "actual number of elements",
        "default array capacity",
        "low-level array",
        "not enough room",
        "so double capacity",
        "new (bigger) array",
        "Makes a copy of elements",
        "use the bigger array",
        "We double a capacity if needed",
        "Shifts rightmost elements",
        "Store newest element",
        "found a match!",
        "Shifts others elements to fill gap",
        "helps garbage collection",
        "we have one less item",
        "exit immediately",
        "only reached if no match"
    ],
    "docstrings": [
        "\"\"\"\n    Implements the Array ADT using array capabilities of the ctypes module.\n    \"\"\"",
        "\"\"\"\n        Creates an array with size elements.\n\n        :param size: size of array.\n        \"\"\"",
        "\"\"\"\n        Returns the size of the array.\n\n        :return: the size of the array. \n        \"\"\"",
        "\"\"\"\n        Gets the value of the element.\n\n        :param index: the index of element.\n        :return: value of the element.\n        \"\"\"",
        "\"\"\"\n        Puts the value in the array element at index position.\n\n        :param index: the index element.\n        :param value: the value of element.\n        \"\"\"",
        "\"\"\"\n        Clears the array by setting each element to the given value.\n\n        :param value: the value of element.\n        \"\"\"",
        "\"\"\"\n        Returns the array's iterator for traversing the elements.\n\n        :return: the array's iterator for traversing the elements. \n        \"\"\"",
        "\"\"\"\n        Converts structure to a string.\n\n        :return: converted structure.\n        \"\"\"",
        "\"\"\"\n    An iterator for the Array ADT.\n    \"\"\"",
        "\"\"\"\n    Implementation of the Array2D ADT using an array of arrays.\n    \"\"\"",
        "\"\"\"\n        Creates a 2D array of size num_rows x num_cols.        \n        :param num_rows: number of rows.\n        :param num_cols: number of columns.\n        \"\"\"",
        "\"\"\"\n        Returns the number of rows in the 2D array.\n\n        :return: \n        \"\"\"",
        "\"\"\"\n        Returns the number of columns in the 2D array.\n\n        :return: the number of columns in the 2D array.\n        \"\"\"",
        "\"\"\"\n        Clears the array by setting every element to the given value.\n\n        :param value: value to be set.\n        \"\"\"",
        "\"\"\"\n        Gets the contents of the element at position [i, j]\n\n        :param index_tuple: the index of position. \n        :return: the value.\n        \"\"\"",
        "\"\"\"\n        Sets the contents of the element at position [i,j] to value.\n\n        :param index_tuple: the index of position.\n        :param value: the value to be set.\n        \"\"\"",
        "\"\"\"\n    A dynamic array class a simplified Python list.\n    \"\"\"",
        "\"\"\"\n        Creates an empty array.\n        \"\"\"",
        "\"\"\"\n        Returns the number of elements in the array.\n\n        :return: the number of elements in the array. \n        \"\"\"",
        "\"\"\"\n        Gets the value of the element by index.\n\n        :param index: the index of element.\n        :return: the value of the element.\n        \"\"\"",
        "\"\"\"\n        Puts the value in the end of the array.\n\n        :param value: the value of element.\n        \"\"\"",
        "\"\"\"\n        Resize internal array to new capacity.\n                \n        :param capacity: new capacity of array.\n        \"\"\"",
        "\"\"\"\n        Return new array.\n        \n        :param size: size of array.\n        :return: array.\n        \"\"\"",
        "\"\"\"\n        Inserts value at index, shifting subsequent values rightward.        \n\n        :param index: the index.\n        :param value: the value that need to be inserted. \n        \"\"\"",
        "\"\"\"\n        Removes first occurrence of value.\n        \n        :param value: the value that need to be removed.\n        \"\"\""
    ],
    "functions": [
        "__len__",
        "__getitem__",
        "__setitem__",
        "clear",
        "__iter__",
        "__str__",
        "__iter__",
        "__next__",
        "num_rows",
        "num_cols",
        "clear",
        "__getitem__",
        "__setitem__",
        "__str__",
        "__len__",
        "__getitem__",
        "append",
        "_resize",
        "_make_array",
        "insert",
        "remove"
    ],
    "classes": [
        "_ArrayIterator",
        "Array2D",
        "DynamicArray"
    ]
}