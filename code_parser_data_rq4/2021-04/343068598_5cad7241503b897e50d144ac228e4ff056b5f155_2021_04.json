{
    "identifiers": [
        "unittest",
        "test",
        "utils",
        "unittest",
        "TestCase",
        "assertEqual",
        "exec_ok",
        "assertEqual",
        "exec_ok",
        "assertEqual",
        "exec_ok",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ok",
        "assertEqual",
        "exec_ko",
        "assertEqual",
        "exec_ko"
    ],
    "literals": [
        "'19'",
        "\"'hello'\"",
        "'3'",
        "\"line 2:16 Name clash between input and output streams\"",
        "\"line 7:12 Deadlock detected\"",
        "\"line 3:16 Cannot read from output within function\"",
        "\"line 3:16 Cannot write to input within function\"",
        "\"line 5:12 Cannot write to output of another function\"",
        "\"line 5:12 Cannot read from input to another function\"",
        "'3.75'",
        "\"line 5:20 Cannot write to input within function\"",
        "\"line 5:20 Cannot read from output within function\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "'''\n            f = <i> (n) <o>  {\n                n + << i >> o;\n            };\n            fc = f(18);\n            1 >> fc<i>;\n            << fc<o>\n        '''",
        "'''\n            f = (s) <out> {\n                s >> out;\n            };\n            fc = f('hello');\n            << fc<out>\n        '''",
        "'''\n            f = (n) <out> {\n                n + 1 >> out;\n            };\n            fc = f(1);\n            g = () <out> {\n                << fc<out> + 1 >> out;\n            };\n            << g()<out>\n        '''",
        "'''\n            f = <a> () <a> { 1; }\n        '''",
        "'''\n            f = (s) <out> {\n                s >> out;\n            };\n            fc = f('hello');\n            << fc<out>;\n            << fc<out>\n        '''",
        "'''\n            f = <in> () <out> {\n                << out;\n            };\n            f()\n        '''",
        "'''\n            f = <in> () <out> {\n                1 >> in;\n            };\n            f()\n        '''",
        "'''\n            f = <in> () <out> {\n                1 >> out;\n            };\n            1 >> f()<out>\n        '''",
        "'''\n            f = <in> () <out> {\n                1 >> out;\n            };\n            << f()<in>\n        '''",
        "'''\n            f = <in> (n) <out> {\n                g = <in> (n) <out> {\n                    << in * n >> out;\n                };\n                gc = g(n + 1);\n                << in + n >> gc<in>;\n                << gc<out> >> out;\n            };\n            fc = f(0.5);\n            2 >> fc<in>;\n            << fc<out>\n        '''",
        "'''\n            f = <in> (n) <out> {\n                g = <in> (n) <out> {\n                    1 >> out;\n                    1 >> in;\n                };\n                g(n + 1);\n            };\n            f(1)\n        '''",
        "'''\n            f = <in> (n) <out> {\n                g = <in> (n) <out> {\n                    1 >> out;\n                    << out;\n                };\n                g(n + 1);\n            };\n            f(1)\n        '''"
    ],
    "functions": [
        "test_stream_io",
        "test_stream_out",
        "test_connect_fns",
        "test_name_clash",
        "test_read_too_much",
        "test_read_illegal_rw",
        "test_nested"
    ],
    "classes": [
        "TestStream"
    ]
}