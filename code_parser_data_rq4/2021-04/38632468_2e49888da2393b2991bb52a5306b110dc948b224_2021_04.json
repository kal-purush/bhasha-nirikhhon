{
    "identifiers": [
        "NETSTANDARD2_1",
        "Diagnostics",
        "CodeAnalysis",
        "Threading",
        "Tasks",
        "GraphQL",
        "Types",
        "GraphQL",
        "Types",
        "Relay",
        "GraphQL",
        "Builders",
        "TSourceType",
        "TReturnType",
        "FieldType",
        "Arguments",
        "Find",
        "Type",
        "StringGraphType",
        "FieldType",
        "Arguments",
        "Find",
        "Type",
        "IntGraphType",
        "FieldType",
        "GetMetadata",
        "ConnectionBuilder",
        "TSourceType",
        "PAGE_SIZE_METADATA_KEY",
        "FieldType",
        "WithMetadata",
        "ConnectionBuilder",
        "TSourceType",
        "PAGE_SIZE_METADATA_KEY",
        "value",
        "FieldType",
        "fieldType",
        "FieldType",
        "fieldType",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TNodeType",
        "name",
        "TNodeType",
        "IGraphType",
        "Create",
        "TNodeType",
        "EdgeType",
        "TNodeType",
        "name",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TNodeType",
        "TEdgeType",
        "name",
        "TNodeType",
        "IGraphType",
        "TEdgeType",
        "EdgeType",
        "TNodeType",
        "Create",
        "TNodeType",
        "TEdgeType",
        "ConnectionType",
        "TNodeType",
        "TEdgeType",
        "name",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TNodeType",
        "TEdgeType",
        "TConnectionType",
        "name",
        "TNodeType",
        "IGraphType",
        "TEdgeType",
        "EdgeType",
        "TNodeType",
        "TConnectionType",
        "ConnectionType",
        "TNodeType",
        "TEdgeType",
        "FieldType",
        "Name",
        "name",
        "Type",
        "TConnectionType",
        "Arguments",
        "QueryArguments",
        "QueryArgument",
        "StringGraphType",
        "Name",
        "Description",
        "QueryArgument",
        "IntGraphType",
        "Name",
        "Description",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "fieldType",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "IsBidirectional",
        "Argument",
        "StringGraphType",
        "Argument",
        "IntGraphType",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "name",
        "FieldType",
        "Name",
        "name",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "description",
        "FieldType",
        "Description",
        "description",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "deprecationReason",
        "FieldType",
        "DeprecationReason",
        "deprecationReason",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "pageSize",
        "PageSizeFromMeatadata",
        "pageSize",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TArgumentGraphType",
        "name",
        "Action",
        "QueryArgument",
        "configure",
        "TArgumentGraphType",
        "IGraphType",
        "QueryArgument",
        "TArgumentGraphType",
        "Name",
        "name",
        "configure",
        "Invoke",
        "arg",
        "FieldType",
        "Arguments",
        "Add",
        "arg",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TArgumentGraphType",
        "name",
        "description",
        "Action",
        "QueryArgument",
        "configure",
        "TArgumentGraphType",
        "IGraphType",
        "Argument",
        "TArgumentGraphType",
        "name",
        "arg",
        "Description",
        "description",
        "configure",
        "Invoke",
        "arg",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "TArgumentGraphType",
        "TArgumentType",
        "name",
        "description",
        "NETSTANDARD2_1",
        "AllowNull",
        "TArgumentType",
        "defaultValue",
        "Action",
        "QueryArgument",
        "configure",
        "TArgumentGraphType",
        "IGraphType",
        "Argument",
        "TArgumentGraphType",
        "name",
        "arg",
        "Description",
        "description",
        "arg",
        "DefaultValue",
        "defaultValue",
        "configure",
        "Invoke",
        "arg",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "Action",
        "FieldType",
        "configure",
        "configure",
        "FieldType",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "name",
        "FieldType",
        "ApplyDirective",
        "name",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "name",
        "argumentName",
        "argumentValue",
        "FieldType",
        "ApplyDirective",
        "name",
        "argumentName",
        "argumentValue",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "name",
        "Action",
        "AppliedDirective",
        "configure",
        "FieldType",
        "ApplyDirective",
        "name",
        "configure",
        "ConnectionBuilder",
        "TSourceType",
        "TNewReturnType",
        "TNewReturnType",
        "ConnectionBuilder",
        "TSourceType",
        "TNewReturnType",
        "FieldType",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "Func",
        "IResolveConnectionContext",
        "TSourceType",
        "TReturnType",
        "resolver",
        "FieldType",
        "Resolver",
        "Resolvers",
        "FuncFieldResolver",
        "TReturnType",
        "ResolveConnectionContext",
        "TSourceType",
        "context",
        "IsBidirectional",
        "PageSizeFromMeatadata",
        "CheckForErrors",
        "connectionContext",
        "resolver",
        "connectionContext",
        "ConnectionBuilder",
        "TSourceType",
        "TReturnType",
        "Func",
        "IResolveConnectionContext",
        "TSourceType",
        "TReturnType",
        "resolver",
        "FieldType",
        "Resolver",
        "Resolvers",
        "AsyncFieldResolver",
        "TReturnType",
        "ResolveConnectionContext",
        "TSourceType",
        "context",
        "IsBidirectional",
        "PageSizeFromMeatadata",
        "CheckForErrors",
        "connectionContext",
        "resolver",
        "connectionContext",
        "IResolveConnectionContext",
        "TSourceType",
        "context",
        "context",
        "First",
        "HasValue",
        "context",
        "Last",
        "HasValue",
        "ArgumentException",
        "context",
        "IsUnidirectional",
        "context",
        "Last",
        "HasValue",
        "ArgumentException"
    ],
    "literals": [
        "\"before\"",
        "\"last\"",
        "\"default\"",
        "\"default\"",
        "\"default\"",
        "\"after\"",
        "\"Only return edges after the specified cursor.\"",
        "\"first\"",
        "\"Specifies the maximum number of edges to return, starting after the cursor specified by 'after', or the first number of edges if 'after' is not specified.\"",
        "\"before\"",
        "\"Only return edges prior to the specified cursor.\"",
        "\"last\"",
        "\"Specifies the maximum number of edges to return, starting prior to the cursor specified by 'before', or the last number of edges if 'before' is not specified.\"",
        "\"Cannot specify both `first` and `last`.\"",
        "\"Cannot use `last` with unidirectional connections.\""
    ],
    "variables": [
        "IsBidirectional",
        "PageSizeFromMeatadata",
        "FieldType",
        "FieldType",
        "fieldType",
        "arg",
        "connectionContext",
        "connectionContext"
    ],
    "comments": [
        "Builds a connection field for graphs that have the specified source and return type.",
        "</summary>",
        "Returns the generated field.",
        "</summary>",
        "Returns a builder for new connection field for the specified node type.",
        "The edge type is <see cref=\"EdgeType{TNodeType}\">EdgeType</see>&lt;<typeparamref name=\"TNodeType\"/>&gt;.",
        "The connection type is <see cref=\"ConnectionType{TNodeType, TEdgeType}\">ConnectionType</see>&lt;<typeparamref name=\"TNodeType\"/>, <see cref=\"EdgeType{TNodeType}\">EdgeType</see>&lt;<typeparamref name=\"TNodeType\"/>&gt;&gt;.",
        "</summary>",
        "<typeparam name=\"TNodeType\">The graph type of the connection's node.</typeparam>",
        "Returns a builder for new connection field for the specified node and edge type.",
        "The connection type is <see cref=\"ConnectionType{TNodeType, TEdgeType}\">ConnectionType</see>&lt;<typeparamref name=\"TNodeType\"/>, <typeparamref name=\"TEdgeType\"/>&gt;",
        "</summary>",
        "<typeparam name=\"TNodeType\">The graph type of the connection's node.</typeparam>",
        "<typeparam name=\"TEdgeType\">The graph type of the connection's edge. Must derive from <see cref=\"EdgeType{TNodeType}\">EdgeType</see>&lt;<typeparamref name=\"TNodeType\"/>&gt;.</typeparam>",
        "Returns a builder for new connection field for the specified node, edge and connection type.",
        "</summary>",
        "<typeparam name=\"TNodeType\">The graph type of the connection's node.</typeparam>",
        "<typeparam name=\"TEdgeType\">The graph type of the connection's edge. Must derive from <see cref=\"EdgeType{TNodeType}\">EdgeType</see>&lt;<typeparamref name=\"TNodeType\"/>&gt;.</typeparam>",
        "<typeparam name=\"TConnectionType\">The graph type of the connection. Must derive from <see cref=\"ConnectionType{TNodeType, TEdgeType}\">ConnectionType</see>&lt;<typeparamref name=\"TNodeType\"/>, <typeparamref name=\"TEdgeType\"/>&gt;.</typeparam>",
        "Configure the connection to be bi-directional.",
        "</summary>",
        "<inheritdoc cref=\"FieldBuilder{TSourceType, TReturnType}.Name(string)\"/>",
        "<inheritdoc cref=\"FieldBuilder{TSourceType, TReturnType}.Description(string)\"/>",
        "<inheritdoc cref=\"FieldBuilder{TSourceType, TReturnType}.DeprecationReason(string)\"/>",
        "Sets the default page size or clears (if null) the default page size, so all records are returned by default.",
        "</summary>",
        "Adds an argument to the connection field.",
        "</summary>",
        "<typeparam name=\"TArgumentGraphType\">The graph type of the argument.</typeparam>",
        "<param name=\"name\">The name of the argument.</param>",
        "<param name=\"configure\">A delegate to further configure the argument.</param>",
        "Adds an argument to the connection field.",
        "</summary>",
        "<typeparam name=\"TArgumentGraphType\">The graph type of the argument.</typeparam>",
        "<param name=\"name\">The name of the argument.</param>",
        "<param name=\"description\">The description of the argument.</param>",
        "<param name=\"configure\">A delegate to further configure the argument.</param>",
        "Adds an argument to the connection field.",
        "</summary>",
        "<typeparam name=\"TArgumentGraphType\">The graph type of the argument.</typeparam>",
        "<typeparam name=\"TArgumentType\">The type of the argument value.</typeparam>",
        "<param name=\"name\">The name of the argument.</param>",
        "<param name=\"description\">The description of the argument.</param>",
        "<param name=\"defaultValue\">The default value of the argument.</param>",
        "<param name=\"configure\">A delegate to further configure the argument.</param>",
        "Runs a configuration delegate for the connection field.",
        "</summary>",
        "Apply directive to connection field without specifying arguments. If the directive",
        "declaration has arguments, then their default values (if any) will be used.",
        "</summary>",
        "<param name=\"name\">Directive name.</param>",
        "Apply directive to connection field specifying one argument. If the directive",
        "declaration has other arguments, then their default values (if any) will be used.",
        "</summary>",
        "<param name=\"name\">Directive name.</param>",
        "<param name=\"argumentName\">Argument name.</param>",
        "<param name=\"argumentValue\">Argument value.</param>",
        "Apply directive to connection field specifying configuration delegate.",
        "</summary>",
        "<param name=\"name\">Directive name.</param>",
        "<param name=\"configure\">Configuration delegate.</param>",
        "Sets the return type of the field.",
        "</summary>",
        "<typeparam name=\"TNewReturnType\">The type of the return value of the resolver.</typeparam>",
        "Sets the resolver method for the connection field.",
        "</summary>",
        "Sets the resolver method for the connection field.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ConnectionBuilder",
        "Create",
        "Create",
        "Create",
        "Bidirectional",
        "Name",
        "Description",
        "DeprecationReason",
        "PageSize",
        "Argument",
        "Argument",
        "Argument",
        "Configure",
        "Directive",
        "Directive",
        "Directive",
        "Returns",
        "Resolve",
        "ResolveAsync",
        "CheckForErrors"
    ],
    "classes": [
        "ConnectionBuilder"
    ]
}