{
    "identifiers": [
        "nltk",
        "classify",
        "util",
        "nltk",
        "classify",
        "NaiveBayesClassifier",
        "nltk",
        "corpus",
        "names",
        "word",
        "letter",
        "letter",
        "word",
        "word_feats",
        "pos",
        "pos",
        "positive_vocab",
        "word_feats",
        "neg",
        "neg",
        "negative_vocab",
        "word_feats",
        "neu",
        "neu",
        "neutral_vocab",
        "negative_features",
        "positive_features",
        "neutral_features",
        "NaiveBayesClassifier",
        "train",
        "train_set",
        "input",
        "query_sentence",
        "lower",
        "query_sentence",
        "split",
        "word",
        "words",
        "classifier",
        "classify",
        "word_feats",
        "word",
        "classResult",
        "neg",
        "classResult",
        "pos",
        "classResult",
        "neu",
        "pos",
        "len",
        "words",
        "neu",
        "len",
        "words",
        "neg",
        "len",
        "words"
    ],
    "literals": [
        "'awesome'",
        "'outstanding'",
        "'fantastic'",
        "'terrific'",
        "'good'",
        "'nice'",
        "'great'",
        "'super'",
        "'superb'",
        "':)'",
        "'bad'",
        "'terrible'",
        "'useless'",
        "'hate'",
        "'pathetic'",
        "'worst'",
        "':('",
        "'movie'",
        "'the'",
        "'sound'",
        "'was'",
        "'is'",
        "'actors'",
        "'did'",
        "'know'",
        "'words'",
        "'not'",
        "'pos'",
        "'neg'",
        "'neu'",
        "\"sentence: \"",
        "' '",
        "'neg'",
        "'pos'",
        "'neu'",
        "'Positive: '",
        "'Neutral: '",
        "'Negative: '"
    ],
    "variables": [
        "positive_vocab",
        "negative_vocab",
        "neutral_vocab",
        "positive_features",
        "negative_features",
        "neutral_features",
        "train_set",
        "classifier",
        "neg",
        "pos",
        "neu",
        "query_sentence",
        "query_sentence",
        "words",
        "classResult",
        "neg",
        "pos",
        "neu"
    ],
    "comments": [
        "Return positive, neutral and negative sentiment scores for a given sentence based on the defined vocabulary",
        "Feature extraction method",
        "Define vocabulary",
        "Classify training set vocabulary",
        "Train using Naive Bayes Classifier",
        "Predict"
    ],
    "docstrings": [],
    "functions": [
        "word_feats"
    ],
    "classes": []
}