{
    "identifiers": [
        "division",
        "copy",
        "functools",
        "revision_data",
        "weight_fn",
        "weight_fn",
        "default_weights",
        "len",
        "revision_data",
        "weight_fn",
        "i",
        "num_revisions",
        "i",
        "num_revisions",
        "i",
        "num_revisions",
        "weighted_sum",
        "sum",
        "value",
        "weights",
        "i",
        "value",
        "revision_data",
        "i",
        "values",
        "sum_of_weights",
        "weights",
        "i",
        "len",
        "revision_data",
        "i",
        "values",
        "weighted_sum",
        "sum_of_weights",
        "num_revisions",
        "v",
        "datum",
        "revision_data",
        "v",
        "datum",
        "values",
        "sum",
        "pow",
        "d",
        "weighted_avg",
        "d",
        "all_data",
        "len",
        "all_data",
        "len",
        "all_data",
        "weighted_avg",
        "len",
        "all_data",
        "variance",
        "i",
        "n",
        "i",
        "n",
        "i",
        "n",
        "n",
        "i",
        "n",
        "w1",
        "w2",
        "weight_fn",
        "w1",
        "w2",
        "analyze",
        "w1",
        "weight_fn",
        "analyze",
        "w2",
        "weight_fn",
        "s2",
        "s1",
        "delta_s",
        "s1",
        "s2",
        "delta_s",
        "s1",
        "s1",
        "s2",
        "s2",
        "functools",
        "total_ordering",
        "push_timestamp",
        "push_id",
        "values",
        "push_timestamp",
        "push_id",
        "copy",
        "copy",
        "values",
        "o",
        "push_timestamp",
        "o",
        "push_timestamp",
        "o",
        "push_timestamp",
        "o",
        "push_timestamp",
        "join",
        "value",
        "value",
        "values",
        "push_timestamp",
        "push_id",
        "values_str",
        "t",
        "change_detected",
        "data",
        "min_back_window",
        "max_back_window",
        "fore_window",
        "t_threshold",
        "sorted",
        "data",
        "i",
        "len",
        "data",
        "data",
        "i",
        "i",
        "di",
        "amount_prev_data",
        "max_back_window",
        "prev_indice",
        "i",
        "prev_indice",
        "min",
        "max",
        "last_seen_regression",
        "min_back_window",
        "max_back_window",
        "jw",
        "append",
        "data",
        "prev_indice",
        "di",
        "amount_prev_data",
        "len",
        "jw",
        "values",
        "prev_indice",
        "i",
        "di",
        "amount_next_data",
        "fore_window",
        "next_indice",
        "len",
        "data",
        "kw",
        "append",
        "data",
        "next_indice",
        "di",
        "amount_next_data",
        "len",
        "kw",
        "values",
        "next_indice",
        "analyze",
        "jw",
        "analyze",
        "kw",
        "abs",
        "calc_t",
        "jw",
        "kw",
        "linear_weights",
        "di",
        "t",
        "t_threshold",
        "last_seen_regression",
        "i",
        "len",
        "data",
        "data",
        "i",
        "di",
        "amount_prev_data",
        "min_back_window",
        "di",
        "amount_next_data",
        "fore_window",
        "di",
        "t",
        "t_threshold",
        "data",
        "i",
        "prev",
        "t",
        "di",
        "t",
        "i",
        "len",
        "data",
        "data",
        "i",
        "next",
        "t",
        "di",
        "t",
        "data"
    ],
    "literals": [
        "\"avg\"",
        "\"n\"",
        "\"variance\"",
        "'avg'",
        "'avg'",
        "'variance'",
        "'variance'",
        "'inf'",
        "'variance'",
        "'n'",
        "'variance'",
        "'n'",
        "'[ %s ]'",
        "', '",
        "'%.3f'",
        "\"<%s: %s, %s, %.3f, %s>\""
    ],
    "variables": [
        "weight_fn",
        "num_revisions",
        "weights",
        "weighted_sum",
        "sum_of_weights",
        "weighted_avg",
        "all_data",
        "variance",
        "s1",
        "s2",
        "delta_s",
        "push_timestamp",
        "push_id",
        "values",
        "t",
        "change_detected",
        "values_str",
        "data",
        "last_seen_regression",
        "di",
        "jw",
        "di",
        "amount_prev_data",
        "prev_indice",
        "kw",
        "di",
        "amount_next_data",
        "next_indice",
        "di",
        "historical_stats",
        "di",
        "forward_stats",
        "di",
        "t",
        "last_seen_regression",
        "di",
        "prev",
        "next",
        "di",
        "change_detected"
    ],
    "comments": [
        "from: https://github.com/mozilla/treeherder/blob/master/treeherder/perfalert/perfalert/__init__.py",
        "get a weighted average for the full set of data -- this is complicated",
        "by the fact that we might have multiple data points from each revision",
        "which we would want to weight equally -- do this by creating a set of",
        "weights only for each bucket containing (potentially) multiple results",
        "for each value",
        "now that we have a weighted average, we can calculate the variance of the",
        "whole series",
        "Date code was pushed",
        "What revision this data is for (usually, but not guaranteed",
        "to be increasing with push_timestamp)",
        "data values associated with this revision",
        "t-test score",
        "Whether a perf regression or improvement was found",
        "Use T-Tests",
        "Analyze test data using T-Tests, comparing data[i-j:i] to data[i:i+k]",
        "keep on getting previous data until we've either got at least 12",
        "data points *or* we've hit the maximum back window",
        "accumulate present + future data until we've got at least 12 values",
        "add additional historical data points next time if we",
        "haven't detected a likely regression",
        "Now that the t-test scores are calculated, go back through the data to",
        "find where changes most likely happened.",
        "if we don't have enough data yet, skip for now (until more comes",
        "in)",
        "Check the adjacent points",
        "next may or may not exist if it's the last in the series",
        "This datapoint has a t value higher than the threshold and higher",
        "than either neighbor.  Mark it as the cause of a regression."
    ],
    "docstrings": [
        "\"\"\"Returns the average and sample variance (s**2) of a list of floats.\n\n    `weight_fn` is a function that takes a list index and a window width, and\n    returns a weight that is used to calculate a weighted average.  For example,\n    see `default_weights` or `linear_weights` below.  If no function is passed,\n    `default_weights` is used and the average will be uniformly weighted.\n    \"\"\"",
        "\"\"\"A window function that weights all points uniformly.\"\"\"",
        "\"\"\"A window function that falls off arithmetically.\n\n    This is used to calculate a weighted moving average (WMA) that gives higher\n    weight to changes near the point being analyzed, and smooth out changes at\n    the opposite edge of the moving window.  See bug 879903 for details.\n    \"\"\"",
        "\"\"\"Perform a Students t-test on the two sets of revision data.\n\n    See the analyze() function for a description of the `weight_fn` argument.\n    \"\"\"",
        "'''\n    This class represents a specific revision and the set of values for it\n    '''"
    ],
    "functions": [
        "analyze",
        "default_weights",
        "linear_weights",
        "calc_t",
        "__eq__",
        "__lt__",
        "__repr__",
        "detect_changes"
    ],
    "classes": [
        "RevisionDatum"
    ]
}