{
    "identifiers": [
        "path",
        "arrayType",
        "BOOLEAN",
        "booleanLiteral",
        "INTEGER",
        "NULL",
        "NUMBER",
        "numberLiteral",
        "objectType",
        "referenceType",
        "STRING",
        "stringLiteral",
        "TypeKind",
        "unionType",
        "parseFilePath",
        "generateJsonSchema",
        "jsonTypeSchema",
        "path",
        "__dirname",
        "describe",
        "test",
        "parseFilePath",
        "EXAMPLE_PATH",
        "expect",
        "generateJsonSchema",
        "api",
        "expect",
        "generateJsonSchema",
        "api",
        "describe",
        "test",
        "expect",
        "jsonTypeSchema",
        "NULL",
        "test",
        "expect",
        "jsonTypeSchema",
        "BOOLEAN",
        "test",
        "expect",
        "jsonTypeSchema",
        "booleanLiteral",
        "expect",
        "jsonTypeSchema",
        "booleanLiteral",
        "test",
        "expect",
        "jsonTypeSchema",
        "STRING",
        "test",
        "expect",
        "jsonTypeSchema",
        "stringLiteral",
        "test",
        "expect",
        "jsonTypeSchema",
        "NUMBER",
        "test",
        "expect",
        "jsonTypeSchema",
        "numberLiteral",
        "expect",
        "jsonTypeSchema",
        "numberLiteral",
        "test",
        "expect",
        "jsonTypeSchema",
        "INTEGER",
        "test",
        "expect",
        "jsonTypeSchema",
        "numberLiteral",
        "expect",
        "jsonTypeSchema",
        "numberLiteral",
        "expect",
        "jsonTypeSchema",
        "numberLiteral",
        "test",
        "expect",
        "jsonTypeSchema",
        "objectType",
        "expect",
        "jsonTypeSchema",
        "objectType",
        "NUMBER",
        "expect",
        "jsonTypeSchema",
        "objectType",
        "NUMBER",
        "STRING",
        "BOOLEAN",
        "test",
        "expect",
        "jsonTypeSchema",
        "arrayType",
        "STRING",
        "test",
        "expect",
        "jsonTypeSchema",
        "unionType",
        "STRING",
        "NUMBER",
        "BOOLEAN",
        "test",
        "expect",
        "jsonTypeSchema",
        "referenceType",
        "TypeKind"
    ],
    "literals": [
        "\"path\"",
        "\"../../models/types\"",
        "\"../../parsers/parser\"",
        "\"./json-schema\"",
        "\"..\"",
        "\"..\"",
        "\"test\"",
        "\"examples\"",
        "\"contract.ts\"",
        "\"JSON Schema generator\"",
        "\"produces valid code\"",
        "\".\"",
        "\"@airtasker/spotnext\"",
        "\"./libnext/src/lib\"",
        "\"json\"",
        "\"json\"",
        "\"yaml\"",
        "\"yaml\"",
        "\"generates type validator\"",
        "\"null\"",
        "Object {\n  \"type\": \"null\",\n}",
        "\"boolean\"",
        "Object {\n  \"type\": \"boolean\",\n}",
        "\"boolean literal\"",
        "Object {\n  \"const\": true,\n  \"type\": \"boolean\",\n}",
        "Object {\n  \"const\": false,\n  \"type\": \"boolean\",\n}",
        "\"string\"",
        "Object {\n  \"type\": \"string\",\n}",
        "\"string literal\"",
        "\"some literal\"",
        "Object {\n  \"const\": \"some literal\",\n  \"type\": \"string\",\n}",
        "\"number\"",
        "Object {\n  \"type\": \"number\",\n}",
        "\"number literal\"",
        "Object {\n  \"const\": 1.5,\n  \"type\": \"number\",\n}",
        "Object {\n  \"const\": -23.1,\n  \"type\": \"number\",\n}",
        "\"integer\"",
        "Object {\n  \"type\": \"integer\",\n}",
        "\"number literal\"",
        "Object {\n  \"const\": 0,\n  \"type\": \"integer\",\n}",
        "Object {\n  \"const\": 123,\n  \"type\": \"integer\",\n}",
        "Object {\n  \"const\": -1000,\n  \"type\": \"integer\",\n}",
        "\"object\"",
        "Object {\n  \"properties\": Object {},\n  \"required\": Array [],\n  \"type\": \"object\",\n}",
        "\"singleField\"",
        "Object {\n  \"properties\": Object {\n    \"singleField\": Object {\n      \"type\": \"number\",\n    },\n  },\n  \"required\": Array [\n    \"singleField\",\n  ],\n  \"type\": \"object\",\n}",
        "\"field1\"",
        "\"field2\"",
        "\"field3\"",
        "Object {\n  \"properties\": Object {\n    \"field1\": Object {\n      \"type\": \"number\",\n    },\n    \"field2\": Object {\n      \"type\": \"string\",\n    },\n    \"field3\": Object {\n      \"type\": \"boolean\",\n    },\n  },\n  \"required\": Array [\n    \"field1\",\n    \"field2\",\n  ],\n  \"type\": \"object\",\n}",
        "\"array\"",
        "Object {\n  \"items\": Object {\n    \"type\": \"string\",\n  },\n  \"type\": \"array\",\n}",
        "\"union\"",
        "Object {\n  \"oneOf\": Array [\n    Object {\n      \"type\": \"string\",\n    },\n    Object {\n      \"type\": \"number\",\n    },\n    Object {\n      \"type\": \"boolean\",\n    },\n  ],\n}",
        "\"type reference\"",
        "\"OtherType\"",
        "\"location\"",
        "Object {\n  \"$ref\": \"#/definitions/OtherType\",\n}"
    ],
    "variables": [
        "EXAMPLE_PATH",
        "api"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}