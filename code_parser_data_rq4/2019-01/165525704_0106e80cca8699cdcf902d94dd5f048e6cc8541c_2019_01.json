{
    "identifiers": [
        "os",
        "cv2",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "sys",
        "sys",
        "path",
        "append",
        "utils",
        "label_map_util",
        "utils",
        "visualization_utils",
        "vis_util",
        "os",
        "getcwd",
        "os",
        "path",
        "join",
        "CWD_PATH",
        "MODEL_NAME",
        "os",
        "path",
        "join",
        "CWD_PATH",
        "os",
        "path",
        "join",
        "CWD_PATH",
        "IMAGE_NAME",
        "label_map_util",
        "load_labelmap",
        "PATH_TO_LABELS",
        "label_map_util",
        "convert_label_map_to_categories",
        "label_map",
        "max_num_classes",
        "NUM_CLASSES",
        "use_display_name",
        "label_map_util",
        "create_category_index",
        "categories",
        "tf",
        "Graph",
        "detection_graph",
        "as_default",
        "tf",
        "GraphDef",
        "tf",
        "gfile",
        "GFile",
        "PATH_TO_CKPT",
        "fid",
        "fid",
        "read",
        "od_graph_def",
        "ParseFromString",
        "serialized_graph",
        "tf",
        "import_graph_def",
        "od_graph_def",
        "name",
        "tf",
        "Session",
        "graph",
        "detection_graph",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "cv2",
        "imread",
        "PATH_TO_IMAGE",
        "np",
        "expand_dims",
        "image",
        "axis",
        "sess",
        "run",
        "detection_boxes",
        "detection_scores",
        "detection_classes",
        "num_detections",
        "feed_dict",
        "image_tensor",
        "image_expanded",
        "vis_util",
        "visualize_boxes_and_labels_on_image_array",
        "image",
        "np",
        "squeeze",
        "boxes",
        "np",
        "squeeze",
        "classes",
        "astype",
        "np",
        "int32",
        "np",
        "squeeze",
        "scores",
        "category_index",
        "use_normalized_coordinates",
        "line_thickness",
        "min_score_thresh",
        "cv2",
        "imshow",
        "image",
        "cv2",
        "waitKey",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "\"..\"",
        "'inference_graph'",
        "'test.jpg'",
        "'frozen_inference_graph.pb'",
        "'training'",
        "'labelmap.pbtxt'",
        "'rb'",
        "''",
        "'image_tensor:0'",
        "'detection_boxes:0'",
        "'detection_scores:0'",
        "'detection_classes:0'",
        "'num_detections:0'",
        "'Object detector'"
    ],
    "variables": [
        "MODEL_NAME",
        "IMAGE_NAME",
        "CWD_PATH",
        "PATH_TO_CKPT",
        "PATH_TO_LABELS",
        "PATH_TO_IMAGE",
        "NUM_CLASSES",
        "label_map",
        "categories",
        "category_index",
        "detection_graph",
        "od_graph_def",
        "serialized_graph",
        "sess",
        "image_tensor",
        "detection_boxes",
        "detection_scores",
        "detection_classes",
        "num_detections",
        "image",
        "image_expanded",
        "boxes",
        "scores",
        "classes",
        "num"
    ],
    "comments": [
        "Import packages",
        "This is needed since the notebook is stored in the object_detection folder.",
        "Import utilites",
        "Name of the directory containing the object detection module we're using",
        "Grab path to current working directory",
        "Path to frozen detection graph .pb file, which contains the model that is used",
        "for object detection.",
        "Path to label map file",
        "Path to image",
        "Number of classes the object detector can identify",
        "Load the label map.",
        "Label maps map indices to category names, so that when our convolution",
        "network predicts `5`, we know that this corresponds to `king`.",
        "Here we use internal utility functions, but anything that returns a",
        "dictionary mapping integers to appropriate string labels would be fine",
        "Load the Tensorflow model into memory.",
        "Define input and output tensors (i.e. data) for the object detection classifier",
        "Input tensor is the image",
        "Output tensors are the detection boxes, scores, and classes",
        "Each box represents a part of the image where a particular object was detected",
        "Each score represents level of confidence for each of the objects.",
        "The score is shown on the result image, together with the class label.",
        "Number of objects detected",
        "Load image using OpenCV and",
        "expand image dimensions to have shape: [1, None, None, 3]",
        "i.e. a single-column array, where each item in the column has the pixel RGB value",
        "Perform the actual detection by running the model with the image as input",
        "Draw the results of the detection (aka 'visulaize the results')",
        "All the results have been drawn on image. Now display the image.",
        "Press any key to close the image",
        "Clean up"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}