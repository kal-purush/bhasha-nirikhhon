{
    "identifiers": [
        "com",
        "ccsi",
        "leetcode5",
        "java",
        "util",
        "args",
        "s1",
        "s2",
        "checkInclusion1",
        "s1",
        "s2",
        "s1",
        "s2",
        "s1",
        "length",
        "s2",
        "length",
        "c",
        "s1",
        "toCharArray",
        "put",
        "c",
        "getOrDefault",
        "c",
        "start",
        "start",
        "s1",
        "length",
        "s2",
        "length",
        "temp",
        "s2",
        "substring",
        "start",
        "start",
        "s1",
        "length",
        "c",
        "toCharArray",
        "temp",
        "containsKey",
        "c",
        "temp",
        "put",
        "c",
        "temp",
        "get",
        "c",
        "temp",
        "get",
        "c",
        "temp",
        "remove",
        "c",
        "temp",
        "isEmpty",
        "start",
        "s1",
        "s2",
        "len1",
        "s1",
        "length",
        "len2",
        "s2",
        "length",
        "len1",
        "len2",
        "count",
        "i",
        "i",
        "len1",
        "i",
        "count",
        "s1",
        "charAt",
        "i",
        "count",
        "s2",
        "charAt",
        "i",
        "allCountZero",
        "count",
        "i",
        "len1",
        "i",
        "len2",
        "i",
        "count",
        "s2",
        "charAt",
        "i",
        "count",
        "s2",
        "charAt",
        "i",
        "len1",
        "allCountZero",
        "count",
        "count",
        "i",
        "i",
        "i",
        "count",
        "i"
    ],
    "literals": [
        "\"ab\"",
        "\"eidboaoo\""
    ],
    "variables": [],
    "comments": [
        "method1 hashMap",
        "method2 因为都是小写字母，那么用数组更简洁,滑动窗的应用。比前面的应该更快一些",
        "s1的长度要是小于s2的长度，显然不可能",
        "value就是出现的次数",
        "s1中出现的字符，频率++",
        "s2中出现的字符，频率--",
        "如果count里面所有的都是0，那么这段字符是可以的",
        "否则就从len1开始看s2",
        "每进一个字符，该字符频率次数--",
        "同时，因为要保证这个移动窗口大小是一致的，那么必定要吐出最前面那个字符，其频率要++；",
        "一旦发现窗口内，count里面的所有的都是0，那么找到了，否则就一直找下去",
        "一直到最后一个字符也每返回true，那么就是找不到，返回false。"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "checkInclusion",
        "checkInclusion1",
        "allCountZero"
    ],
    "classes": [
        "LC567PermutationInString"
    ]
}