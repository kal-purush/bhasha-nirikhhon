{
    "identifiers": [
        "com",
        "google",
        "gson",
        "typeadapters",
        "com",
        "google",
        "gson",
        "JsonParseException",
        "com",
        "google",
        "gson",
        "TypeAdapter",
        "com",
        "google",
        "gson",
        "stream",
        "JsonReader",
        "com",
        "google",
        "gson",
        "stream",
        "JsonWriter",
        "java",
        "io",
        "java",
        "text",
        "ParseException",
        "java",
        "text",
        "ParsePosition",
        "java",
        "util",
        "UTC_TIME_ZONE",
        "TimeZone",
        "getTimeZone",
        "Override",
        "date",
        "date",
        "nullValue",
        "value",
        "format",
        "date",
        "UTC_TIME_ZONE",
        "value",
        "value",
        "Override",
        "peek",
        "NULL",
        "nextNull",
        "date",
        "nextString",
        "parse",
        "date",
        "e",
        "e",
        "GMT_ID",
        "date",
        "millis",
        "tz",
        "calendar",
        "tz",
        "Locale",
        "US",
        "calendar",
        "setTime",
        "date",
        "capacity",
        "length",
        "capacity",
        "millis",
        "length",
        "capacity",
        "tz",
        "getRawOffset",
        "length",
        "length",
        "formatted",
        "capacity",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "YEAR",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "MONTH",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "DAY_OF_MONTH",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "HOUR_OF_DAY",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "MINUTE",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "SECOND",
        "length",
        "millis",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "calendar",
        "get",
        "Calendar",
        "MILLISECOND",
        "length",
        "offset",
        "tz",
        "getOffset",
        "calendar",
        "getTimeInMillis",
        "offset",
        "hours",
        "abs",
        "offset",
        "minutes",
        "abs",
        "offset",
        "formatted",
        "append",
        "offset",
        "padInt",
        "formatted",
        "hours",
        "length",
        "formatted",
        "append",
        "padInt",
        "formatted",
        "minutes",
        "length",
        "formatted",
        "append",
        "formatted",
        "toString",
        "buffer",
        "value",
        "length",
        "strValue",
        "toString",
        "value",
        "i",
        "length",
        "strValue",
        "length",
        "i",
        "i",
        "buffer",
        "append",
        "buffer",
        "append",
        "strValue",
        "date",
        "pos",
        "fail",
        "offset",
        "pos",
        "getIndex",
        "year",
        "parseInt",
        "date",
        "offset",
        "offset",
        "checkOffset",
        "date",
        "offset",
        "offset",
        "month",
        "parseInt",
        "date",
        "offset",
        "offset",
        "checkOffset",
        "date",
        "offset",
        "offset",
        "day",
        "parseInt",
        "date",
        "offset",
        "offset",
        "hour",
        "minutes",
        "seconds",
        "milliseconds",
        "checkOffset",
        "date",
        "offset",
        "hour",
        "parseInt",
        "date",
        "offset",
        "offset",
        "checkOffset",
        "date",
        "offset",
        "offset",
        "minutes",
        "parseInt",
        "date",
        "offset",
        "offset",
        "checkOffset",
        "date",
        "offset",
        "offset",
        "date",
        "length",
        "offset",
        "c",
        "date",
        "charAt",
        "offset",
        "c",
        "c",
        "c",
        "seconds",
        "parseInt",
        "date",
        "offset",
        "offset",
        "checkOffset",
        "date",
        "offset",
        "milliseconds",
        "parseInt",
        "date",
        "offset",
        "offset",
        "timezoneId",
        "date",
        "length",
        "offset",
        "timezoneIndicator",
        "date",
        "charAt",
        "offset",
        "timezoneIndicator",
        "timezoneIndicator",
        "timezoneOffset",
        "date",
        "substring",
        "offset",
        "timezoneId",
        "GMT_ID",
        "timezoneOffset",
        "offset",
        "timezoneOffset",
        "length",
        "timezoneIndicator",
        "timezoneId",
        "GMT_ID",
        "offset",
        "timezoneIndicator",
        "timezone",
        "TimeZone",
        "getTimeZone",
        "timezoneId",
        "timezone",
        "getID",
        "equals",
        "timezoneId",
        "calendar",
        "timezone",
        "calendar",
        "setLenient",
        "calendar",
        "Calendar",
        "YEAR",
        "year",
        "calendar",
        "Calendar",
        "MONTH",
        "month",
        "calendar",
        "Calendar",
        "DAY_OF_MONTH",
        "day",
        "calendar",
        "Calendar",
        "HOUR_OF_DAY",
        "hour",
        "calendar",
        "Calendar",
        "MINUTE",
        "minutes",
        "calendar",
        "Calendar",
        "SECOND",
        "seconds",
        "calendar",
        "Calendar",
        "MILLISECOND",
        "milliseconds",
        "pos",
        "setIndex",
        "offset",
        "calendar",
        "getTime",
        "e",
        "fail",
        "e",
        "e",
        "fail",
        "e",
        "e",
        "fail",
        "e",
        "input",
        "date",
        "date",
        "input",
        "fail",
        "getMessage",
        "pos",
        "getIndex",
        "value",
        "offset",
        "expected",
        "offset",
        "value",
        "length",
        "value",
        "charAt",
        "offset",
        "expected",
        "value",
        "beginIndex",
        "endIndex",
        "beginIndex",
        "endIndex",
        "value",
        "length",
        "beginIndex",
        "endIndex",
        "value",
        "i",
        "beginIndex",
        "result",
        "digit",
        "i",
        "endIndex",
        "digit",
        "digit",
        "value",
        "charAt",
        "i",
        "digit",
        "value",
        "result",
        "digit",
        "i",
        "endIndex",
        "digit",
        "digit",
        "value",
        "charAt",
        "i",
        "digit",
        "value",
        "result",
        "result",
        "digit",
        "result"
    ],
    "literals": [
        "\"UTC\"",
        "\"GMT\"",
        "\"yyyy-MM-ddThh:mm:ss\"",
        "\".sss\"",
        "\"Z\"",
        "\"+hh:mm\"",
        "\"yyyy\"",
        "\"MM\"",
        "\"dd\"",
        "\"hh\"",
        "\"mm\"",
        "\"ss\"",
        "\"sss\"",
        "\"hh\"",
        "\"mm\"",
        "\"No time zone indicator\"",
        "\"Invalid time zone indicator \"",
        "\"'\"",
        "\"'\"",
        "\"Failed to parse date [\"",
        "\"]: \"",
        "\"Invalid number: \"",
        "\"Invalid number: \""
    ],
    "variables": [
        "timezoneId",
        "digit"
    ],
    "comments": [
        "Instead of using iso8601Format.parse(value), we use Jackson's date parsing",
        "This is because Android doesn't support XXX because it is JDK 1.6",
        "Date parsing code from Jackson databind ISO8601Utils.java",
        "https://github.com/FasterXML/jackson-databind/blob/master/src/main/java/com/fasterxml/jackson/databind/util/ISO8601Utils.java",
        "estimate capacity of buffer as close as we can (yeah, that's pedantic ;)",
        "extract year",
        "extract month",
        "extract day",
        "default time value",
        "always use 0 otherwise returned date will include millis of current time",
        "extract hours, minutes, seconds and milliseconds",
        "second and milliseconds can be optional",
        "milliseconds can be optional in the format",
        "extract timezone",
        "If we get a ParseException it'll already have the right message/offset.",
        "Other exception types can convert here.",
        "use same logic as in Integer.parseInt() but less generic we're not supporting negative values"
    ],
    "docstrings": [
        "* Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Format date into yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]\n     *\n     * @param date   the date to format\n     * @param millis true to include millis precision otherwise false\n     * @param tz     timezone to use for the formatting (GMT will produce 'Z')\n     * @return the date formatted as yyyy-MM-ddThh:mm:ss[.sss][Z|[+-]hh:mm]",
        "* Zero pad a number to a specified length\n     *\n     * @param buffer buffer to use for padding\n     * @param value  the integer value to pad if necessary.\n     * @param length the length of the string we should zero pad",
        "* Parse a date from ISO-8601 formatted string. It expects a format\n     * [yyyy-MM-dd|yyyyMMdd][T(hh:mm[:ss[.sss]]|hhmm[ss[.sss]])]?[Z|[+-]hh:mm]]\n     *\n     * @param date ISO string to parse in the appropriate format.\n     * @param pos  The position to start parsing from, updated to where parsing stopped.\n     * @return the parsed date\n     * @throws ParseException if the date is not in the appropriate format",
        "* Check if the expected character exist at the given offset in the value.\n     *\n     * @param value    the string to check at the specified offset\n     * @param offset   the offset to look for the expected character\n     * @param expected the expected character\n     * @return true if the expected character exist at the given offset",
        "* Parse an integer located between 2 given offsets in a string\n     *\n     * @param value      the string to parse\n     * @param beginIndex the start index for the integer in the string\n     * @param endIndex   the end index for the integer in the string\n     * @return the int\n     * @throws NumberFormatException if the value is not a number"
    ],
    "functions": [
        "write",
        "read",
        "format",
        "padInt",
        "parse",
        "checkOffset",
        "parseInt"
    ],
    "classes": [
        "UtcDateTypeAdapter"
    ]
}