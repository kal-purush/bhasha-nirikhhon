{
    "identifiers": [
        "pl",
        "put",
        "poznan",
        "networkanalyzer",
        "service",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "MockitoAnnotations",
        "pl",
        "put",
        "poznan",
        "networkanalyzer",
        "model",
        "Connection",
        "pl",
        "put",
        "poznan",
        "networkanalyzer",
        "model",
        "Node",
        "pl",
        "put",
        "poznan",
        "networkanalyzer",
        "model",
        "Path",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "org",
        "junit",
        "Assert",
        "TYP",
        "NAME",
        "Mock",
        "nodeService",
        "Mock",
        "connectionService",
        "netAnalService",
        "nodeList",
        "connectionList",
        "Before",
        "MockitoAnnotations",
        "initMocks",
        "connectionList",
        "add",
        "connectionList",
        "add",
        "connectionList",
        "add",
        "connectionList",
        "add",
        "connectionList",
        "add",
        "Mockito",
        "when",
        "connectionService",
        "getAllConnections",
        "thenReturn",
        "connectionList",
        "i",
        "i",
        "i",
        "nodeList",
        "add",
        "i",
        "TYP",
        "NAME",
        "i",
        "i",
        "i",
        "setIO",
        "connectionList",
        "get",
        "i",
        "Mockito",
        "when",
        "nodeService",
        "getAllNodes",
        "thenReturn",
        "nodeList",
        "netAnalService",
        "connectionService",
        "nodeService",
        "Test",
        "Mockito",
        "when",
        "connectionService",
        "getConnectionByNodes",
        "thenReturn",
        "connectionList",
        "get",
        "Mockito",
        "when",
        "connectionService",
        "getConnectionByNodes",
        "thenReturn",
        "connectionList",
        "get",
        "Mockito",
        "when",
        "connectionService",
        "getConnectionByNodes",
        "thenReturn",
        "connectionList",
        "get",
        "Mockito",
        "when",
        "connectionService",
        "getConnectionByNodes",
        "thenReturn",
        "connectionList",
        "get",
        "Mockito",
        "when",
        "connectionService",
        "getConnectionByNodes",
        "thenReturn",
        "connectionList",
        "get",
        "i",
        "i",
        "i",
        "Mockito",
        "when",
        "nodeService",
        "getOneNode",
        "i",
        "thenReturn",
        "nodeList",
        "get",
        "i",
        "givenPath",
        "netAnalService",
        "BFSPath",
        "expectedPath",
        "expectedPath",
        "add",
        "expectedPath",
        "add",
        "expectedPath",
        "add",
        "assertEquals",
        "expectedPath",
        "givenPath",
        "connection",
        "outNode",
        "connection",
        "getFrom",
        "inNode",
        "connection",
        "getTo",
        "node",
        "nodeList",
        "node",
        "getId",
        "equals",
        "outNode",
        "node",
        "addOutgoing",
        "connection",
        "getTo",
        "node",
        "getId",
        "equals",
        "inNode",
        "node",
        "addIncoming",
        "connection",
        "getFrom"
    ],
    "literals": [
        "\"EXAMPLE_TYPE\"",
        "\"EXAMPLE_NAME\"",
        "\"BFS\""
    ],
    "variables": [
        "nodeService",
        "connectionService",
        "netAnalService"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setUp",
        "bfsTest_bfsType",
        "setIO"
    ],
    "classes": [
        "NetAnalServiceTest"
    ]
}