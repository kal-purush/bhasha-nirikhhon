{
    "identifiers": [
        "require",
        "require",
        "require",
        "app",
        "app",
        "app",
        "app",
        "process",
        "fs",
        "REDIS_PASSWORD",
        "fs",
        "process",
        "app",
        "Redis",
        "process",
        "process",
        "REDIS_PASSWORD",
        "app",
        "err",
        "app",
        "app",
        "app",
        "app",
        "err",
        "app",
        "err",
        "err",
        "app",
        "err",
        "app",
        "app",
        "err",
        "app",
        "app",
        "err",
        "app",
        "e",
        "util",
        "e"
    ],
    "literals": [
        "'fs'",
        "'ioredis'",
        "'util'",
        "'/etc/redis/redis-password'",
        "'/etc/redis/redis-password'",
        "'-'",
        "'_'",
        "'_FECACHE_MASTER_SERVICE_HOST'",
        "'_FECACHE_MASTER_SERVICE_PORT'",
        "'connect'",
        "'connected'",
        "'error'",
        "'REDIS ERROR: '",
        "'ready'",
        "'ready'",
        "'end'",
        "'disconnected'",
        "'reconnecting'",
        "'reconnecting'",
        "'Unable to read the REDIS credentials file.'"
    ],
    "variables": [
        "fs",
        "Redis",
        "util",
        "REDIS_PASSWORD"
    ],
    "comments": [
        "const nodes = [];\n      nodes.push({ \n        host: process.env[namespace + '_FECACHE_MASTER_SERVICE_HOST'], \n        port: Number.parseInt(process.env[namespace +'_FECACHE_MASTER_SERVICE_PORT'])\n      });\n      nodes.push({ \n        host: process.env[namespace + '_FECACHE_SLAVE_SERVICE_HOST'], \n        port: Number.parseInt(process.env[namespace +'_FECACHE_SLAVE_SERVICE_PORT'])\n      });\n      \n      app.cache = new Redis.Cluster(nodes, {\n        scaleReads: 'all', // all, slave,\n        slotsRefreshTimeout: 5000,\n        slotsRefreshInterval: 10000,\n        redisOptions: {\n          password: REDIS_PASSWORD\n        }\n      });"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}