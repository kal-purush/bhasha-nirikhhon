{
    "identifiers": [
        "time",
        "pandas",
        "pd",
        "numpy",
        "np",
        "input",
        "lower",
        "city",
        "cities",
        "input",
        "lower",
        "month",
        "months",
        "input",
        "lower",
        "day",
        "day_of_week",
        "city",
        "month",
        "day",
        "city",
        "month",
        "day",
        "pd",
        "read_csv",
        "CITY_DATA",
        "city",
        "pd",
        "to_datetime",
        "df",
        "df",
        "dt",
        "month",
        "df",
        "dt",
        "weekday_name",
        "month",
        "months",
        "index",
        "month",
        "df",
        "df",
        "month",
        "day",
        "df",
        "df",
        "day",
        "title",
        "df",
        "df",
        "time",
        "time",
        "df",
        "mode",
        "format",
        "common_month",
        "df",
        "mode",
        "format",
        "common_day_of_week",
        "df",
        "dt",
        "hour",
        "mode",
        "format",
        "common_hour",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "df",
        "mode",
        "format",
        "common_start_station",
        "df",
        "mode",
        "format",
        "common_end_station",
        "df",
        "groupby",
        "size",
        "reset_index",
        "name",
        "combination",
        "loc",
        "combination",
        "combination",
        "max",
        "format",
        "ct",
        "iloc",
        "ct",
        "iloc",
        "ct",
        "iloc",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "np",
        "sum",
        "df",
        "format",
        "total_travel",
        "np",
        "mean",
        "df",
        "format",
        "mean_travel",
        "time",
        "time",
        "start_time",
        "df",
        "time",
        "time",
        "df",
        "value_counts",
        "format",
        "user_types",
        "format",
        "user_types",
        "df",
        "value_counts",
        "format",
        "gender",
        "format",
        "gender",
        "KeyError",
        "e",
        "format",
        "e",
        "df",
        "min",
        "format",
        "early_birth",
        "df",
        "max",
        "format",
        "recent_birth",
        "df",
        "groupby",
        "count",
        "reset_index",
        "name",
        "births",
        "loc",
        "births",
        "births",
        "max",
        "format",
        "cb",
        "iloc",
        "cb",
        "iloc",
        "KeyError",
        "e",
        "format",
        "e",
        "time",
        "time",
        "start_time",
        "df",
        "df",
        "drop",
        "axis",
        "input",
        "view_data",
        "lower",
        "format",
        "df",
        "iloc",
        "idxa",
        "idxb",
        "idxa",
        "idxb",
        "input",
        "get_filters",
        "load_data",
        "city",
        "month",
        "day",
        "time_stats",
        "df",
        "station_stats",
        "df",
        "trip_duration_stats",
        "df",
        "user_stats",
        "df",
        "display_raw_data",
        "df",
        "input",
        "restart",
        "lower",
        "main"
    ],
    "literals": [
        "'chicago'",
        "'chicago.csv'",
        "'new york city'",
        "'new_york_city.csv'",
        "'washington'",
        "'washington.csv'",
        "'Hello! Let\\'s explore some US bikeshare data!'",
        "'chicago'",
        "'new york city'",
        "'washington'",
        "'\\nWould you like to see data from Chicago, New York City, or Washington?\\n'",
        "'\\nERROR: Please enter a valid city!'",
        "'all'",
        "'january'",
        "'february'",
        "'march'",
        "'april'",
        "'may'",
        "'june'",
        "'\\nFilter by January, February, March, April, May, June, or All?\\n'",
        "'\\nERROR: Please enter a valid month!'",
        "'all'",
        "'monday'",
        "'tuesday'",
        "'wednesday'",
        "'thursday'",
        "'friday'",
        "'saturday'",
        "'sunday'",
        "'\\nFilter by Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday, or All?\\n'",
        "'\\nERROR: Please enter a valid day of the week!'",
        "'-'",
        "'Start Time'",
        "'Start Time'",
        "'Month'",
        "'Start Time'",
        "'Day of Week'",
        "'Start Time'",
        "'all'",
        "'january'",
        "'february'",
        "'march'",
        "'april'",
        "'may'",
        "'june'",
        "'Month'",
        "'all'",
        "'Day of Week'",
        "'\\nCalculating The Most Frequent Times of Travel...\\n'",
        "'Month'",
        "'Most popular month: {}'",
        "'Day of Week'",
        "'Most popular day: {}'",
        "'Start Time'",
        "'Most popular start hour: {}'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating The Most Popular Stations and Trip...\\n'",
        "'Start Station'",
        "'Start station: {}'",
        "'End Station'",
        "'End station: {}'",
        "'Start Station'",
        "'End Station'",
        "'Count'",
        "'Count'",
        "'Count'",
        "'Most popular trip: {} >> {}, taken {} time(s)'",
        "'Start Station'",
        "'End Station'",
        "'Count'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating Trip Duration...\\n'",
        "'Trip Duration'",
        "'Total travel time (seconds): {}'",
        "'Trip Duration'",
        "'Average travel time (seconds): {}'",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'\\nCalculating User Stats...\\n'",
        "'User Type'",
        "'Subscribers: {}'",
        "'Subscriber'",
        "'Customers: {}'",
        "'Customer'",
        "'Gender'",
        "'Male users: {}'",
        "'Male'",
        "'Female users: {}'",
        "'Female'",
        "\"{} column doesn't exist in this dataset!\"",
        "'Birth Year'",
        "'Earliest birth year: {}'",
        "'Birth Year'",
        "'Recent birth year: {}'",
        "'Birth Year'",
        "'Birth Year'",
        "'Count'",
        "'Count'",
        "'Count'",
        "'Most common birth year: {}, {} birth(s)'",
        "'Birth Year'",
        "'Count'",
        "\"{} column doesn't exist in this dataset!\"",
        "\"\\nThis took %s seconds.\"",
        "'-'",
        "'Month'",
        "'Day of Week'",
        "'\\nWould you like to view the raw data? Enter yes or no.\\n'",
        "'yes'",
        "'\\n{}'",
        "'-'",
        "'\\nView next five lines? Enter yes or no.\\n'",
        "'-'",
        "'\\nWould you like to restart? Enter yes or no.\\n'",
        "'yes'",
        "\"__main__\""
    ],
    "variables": [
        "CITY_DATA",
        "cities",
        "city",
        "months",
        "month",
        "day_of_week",
        "day",
        "df",
        "df",
        "df",
        "df",
        "months",
        "month",
        "df",
        "df",
        "start_time",
        "common_month",
        "common_day_of_week",
        "common_hour",
        "start_time",
        "common_start_station",
        "common_end_station",
        "combination",
        "ct",
        "start_time",
        "total_travel",
        "mean_travel",
        "start_time",
        "user_types",
        "gender",
        "early_birth",
        "recent_birth",
        "births",
        "cb",
        "idxa",
        "idxb",
        "df",
        "view_data",
        "view_data",
        "city",
        "month",
        "day",
        "df",
        "restart"
    ],
    "comments": [
        "gets user input for city (chicago, new york city, washington)",
        "gets user input for month (all, january, february, ... , june)",
        "gets user input for day of week (all, monday, tuesday, ... sunday)",
        "load data file into a dataframe",
        "convert the Start Time column to datetime",
        "extract month and day of week from Start Time to create new columns",
        "filter by month if applicable",
        "use the index of the months list to get the corresponding int",
        "filter by month to create the new dataframe",
        "filter by day of week if applicable",
        "filter by day of week to create the new dataframe",
        "displays the most common month",
        "displays the most common day of week",
        "displays the most common start hour",
        "displays most commonly used start station",
        "displays most commonly used end station",
        "displays combinations of start station and end station trip",
        "dataframe ct (abbv. common trip) holds row where the count of the combination equals the max of trips",
        "displays most frequent combination and amount of times trip was taken",
        "displays total travel time in seconds",
        "displays mean travel time in seconds",
        "displays counts of user types",
        "this block is fully executed if 'Gender' column exists",
        "displays counts of gender",
        "this block is fully executed if 'Birth Year' column exists",
        "displays earliest and most recent birth year",
        "creates dataframe with only the birth year and the amount of times the given birth year appears",
        "dataframe cb (abbv. common birth) holds the row where the count of the births equals the most births in a single year",
        "displays most common birth year and the amount of births that occurred in that year",
        "removes the added columns from load_data function in order to present original dataframe",
        "displays lines of dataframe within given indices"
    ],
    "docstrings": [
        "\"\"\"\n    Asks user to specify a city, month, and day to analyze.\n\n    Returns:\n        (str) city - name of the city to analyze\n        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n    \"\"\"",
        "\"\"\"\n    Loads data for the specified city and filters by month and day if applicable.\n\n    Args:\n        (str) city - name of the city to analyze\n        (str) month - name of the month to filter by, or \"all\" to apply no month filter\n        (str) day - name of the day of week to filter by, or \"all\" to apply no day filter\n    Returns:\n        df - Pandas DataFrame containing city data filtered by month and day\n    \"\"\"",
        "\"\"\"Displays statistics on the most frequent times of travel.\"\"\"",
        "\"\"\"Displays statistics on the most popular stations and trip.\"\"\"",
        "\"\"\"Displays statistics on the total and average trip duration.\"\"\"",
        "\"\"\"Displays statistics on bikeshare users.\"\"\"",
        "\"\"\"Asks user to view raw data, displays five lines of data at a time.\"\"\""
    ],
    "functions": [
        "get_filters",
        "load_data",
        "time_stats",
        "station_stats",
        "trip_duration_stats",
        "user_stats",
        "display_raw_data",
        "main"
    ],
    "classes": []
}