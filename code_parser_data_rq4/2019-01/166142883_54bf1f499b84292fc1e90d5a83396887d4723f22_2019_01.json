{
    "identifiers": [
        "chalk",
        "shell",
        "child",
        "fs",
        "shell",
        "shell",
        "readParams",
        "downloadRepo",
        "repoUrl",
        "repoName",
        "targetBranch",
        "hasDependency",
        "repoName",
        "installPackages",
        "repoName",
        "isLernaRepo",
        "getTargetDirectories",
        "repoName",
        "isLernaRepo",
        "targetDir",
        "targetDirs",
        "tslint",
        "targetDir",
        "targetDir",
        "resultSummary",
        "repoName",
        "process",
        "args",
        "shell",
        "chalk",
        "args",
        "args",
        "args",
        "args",
        "repoUrl",
        "repoName",
        "targetBranch",
        "shell",
        "shell",
        "child",
        "repoName",
        "repoUrl",
        "targetBranch",
        "child",
        "repoName",
        "repoName",
        "path",
        "dependency",
        "shell",
        "shell",
        "path",
        "fs",
        "shell",
        "chalk",
        "path",
        "shell",
        "packageJson",
        "packageJson",
        "dependency",
        "packageJson",
        "packageJson",
        "dependency",
        "shell",
        "originPath",
        "inDevDependencies",
        "inDependencies",
        "repoName",
        "lernaRepo",
        "shell",
        "repoName",
        "lernaRepo",
        "child",
        "child",
        "shell",
        "repoName",
        "lernaRepo",
        "lernaRepo",
        "targetDir",
        "shell",
        "repoName",
        "name",
        "repoName",
        "name",
        "targetDir",
        "repoName",
        "repoName",
        "targetDir",
        "path",
        "name",
        "shell",
        "hasDependency",
        "path",
        "shell",
        "chalk",
        "name",
        "shell",
        "originPath",
        "name",
        "hasDependency",
        "path",
        "shell",
        "chalk",
        "name",
        "shell",
        "originPath",
        "name",
        "shell",
        "path",
        "shell",
        "chalk",
        "shell",
        "child",
        "originPath",
        "originPath",
        "name",
        "shell",
        "originPath",
        "repoName",
        "shell",
        "file",
        "resultFiles",
        "shell",
        "file",
        "summaries",
        "file",
        "shell",
        "file",
        "result",
        "rulename",
        "error",
        "result",
        "errorMap",
        "error",
        "errorMap",
        "error",
        "errorMap",
        "error",
        "errorMap",
        "error",
        "summaries",
        "file",
        "total",
        "errorMap",
        "shell",
        "summaries",
        "repoName",
        "testTslint"
    ],
    "literals": [
        "\"chalk\"",
        "\"shelljs\"",
        "\"child_process\"",
        "\"fs\"",
        "\"-rf\"",
        "\".results\"",
        ".results",
        "./.archive/${repoName}",
        "\"lerna\"",
        "expected 3 arguments but got ${args.length}",
        "string",
        "string",
        "string",
        "\"-rf\"",
        ".archive",
        ".archive",
        "git archive -v --format=zip --output=.archive/${repoName}.zip --remote=${repoUrl} ${targetBranch}",
        "\"utf8\"",
        "\"inherit\"",
        "unzip ./.archive/${repoName}.zip -d ./.archive/${repoName}",
        "\"utf8\"",
        "\"inherit\"",
        "string",
        "string",
        "\"./package.json\"",
        "${path} is not node based repository",
        "./package.json",
        "string",
        "./.archive/${repoName}",
        "lerna bootstrap",
        "\"utf8\"",
        "\"inherit\"",
        "yarn install",
        "\"utf8\"",
        "\"inherit\"",
        "../../",
        "string",
        "string",
        "string",
        "./.archive/${repoName}/packages/",
        "\",\"",
        "./.archive/${repoName}/packages/${name}",
        "./.archive/${repoName}",
        "string",
        "string",
        "\"typescript\"",
        "${name} does not have typescript dependencies",
        "${originPath}/.results/${name}.json",
        "\"tslint\"",
        "${name} does not have tslint dependencies",
        "${originPath}/.results/${name}.json",
        "linting: ${shell.pwd()}",
        "npx tslint --project . --config ${originPath}/packages/tslint/tslint.json -o ${originPath}/.results/${name}.json -t json --force",
        "\"utf8\"",
        "\"inherit\"",
        "string",
        "./.results/",
        "\",\"",
        "./.results/${file}",
        "\".json\"",
        "\"\"",
        "\"Not lintable repository\"",
        "string",
        "./.results/${file}",
        "string",
        "\".json\"",
        "\"\"",
        "./.results/${repoName}.json"
    ],
    "variables": [
        "isLernaRepo",
        "targetDirs",
        "args",
        "originPath",
        "packageJson",
        "inDevDependencies",
        "inDependencies",
        "targetDir",
        "originPath",
        "resultFiles",
        "summaries",
        "result",
        "total",
        "errorMap"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "testTslint",
        "readParams",
        "downloadRepo",
        "hasDependency",
        "installPackages",
        "getTargetDirectories",
        "tslint",
        "resultSummary"
    ],
    "classes": []
}