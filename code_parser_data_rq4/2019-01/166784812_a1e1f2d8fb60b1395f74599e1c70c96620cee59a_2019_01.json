{
    "identifiers": [
        "absolute_import",
        "octoprint",
        "plugin",
        "serial",
        "binascii",
        "threading",
        "time",
        "RPi",
        "GPIO",
        "GPIO",
        "time",
        "sleep",
        "octoprint",
        "plugin",
        "SettingsPlugin",
        "octoprint",
        "plugin",
        "AssetPlugin",
        "octoprint",
        "plugin",
        "TemplatePlugin",
        "octoprint",
        "plugin",
        "StartupPlugin",
        "octoprint",
        "plugin",
        "ShutdownPlugin",
        "comport",
        "baudrate",
        "baudrateOpt",
        "userCommand1",
        "userCommand2",
        "userCommand3",
        "userCommand4",
        "userCommand5",
        "userCommand6",
        "userKeyMode1",
        "userKeyMode2",
        "userKeyMode3",
        "userKeyMode4",
        "userKeyMode5",
        "userKeyMode6",
        "userCommands",
        "userKeyModes",
        "userKeyModeOptions",
        "comport",
        "_settings",
        "get",
        "baudrate",
        "_settings",
        "get",
        "baudrateOpt",
        "_settings",
        "get",
        "userCommands",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "userKeyModes",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "_settings",
        "get",
        "custom_bindings",
        "data",
        "octoprint",
        "plugin",
        "SettingsPlugin",
        "on_settings_save",
        "data",
        "stop_com_thread",
        "start_com_thread",
        "js",
        "css",
        "less",
        "Octokeys",
        "displayName",
        "displayVersion",
        "_plugin_version",
        "user",
        "repo",
        "current",
        "_plugin_version",
        "pip",
        "start_com_thread",
        "GPIO",
        "setmode",
        "GPIO",
        "BCM",
        "get_config_vars",
        "SerialThread",
        "conf",
        "comthread",
        "interrupt",
        "comthread",
        "join",
        "_logger",
        "info",
        "GPIO",
        "cleanup",
        "comthread",
        "comthread",
        "interrupt",
        "_printer",
        "_logger",
        "__plugin_implementation__",
        "OctokeysPlugin",
        "__plugin_hooks__",
        "__plugin_implementation__",
        "get_update_information",
        "callbackClass",
        "config",
        "callbackClass",
        "config",
        "config",
        "config",
        "config",
        "serial",
        "Serial",
        "portname",
        "baudrate",
        "baudrate",
        "timeout",
        "interrupt",
        "callbackClass",
        "getLogger",
        "error",
        "portname",
        "callbackClass",
        "getLogger",
        "info",
        "start",
        "cbClass",
        "getLogger",
        "info",
        "interrupted",
        "port",
        "read",
        "msgParsingState",
        "readbyte",
        "bytesRead",
        "append",
        "ord",
        "readbyte",
        "msgParsingState",
        "countBytesRead",
        "msgParsingState",
        "ord",
        "readbyte",
        "bytesRead",
        "append",
        "ord",
        "readbyte",
        "msgParsingState",
        "countBytesRead",
        "msgParsingState",
        "ord",
        "readbyte",
        "bytesRead",
        "append",
        "ord",
        "readbyte",
        "msgParsingState",
        "countBytesRead",
        "telegramLength",
        "msgParsingState",
        "msgParsingState",
        "bytesRead",
        "append",
        "ord",
        "readbyte",
        "payload",
        "append",
        "ord",
        "readbyte",
        "countBytesRead",
        "countBytesRead",
        "telegramLength",
        "msgParsingState",
        "msgParsingState",
        "ord",
        "readbyte",
        "countBytesRead",
        "msgParsingState",
        "msgParsingState",
        "crc32",
        "ord",
        "readbyte",
        "countBytesRead",
        "msgParsingState",
        "msgParsingState",
        "crc32",
        "ord",
        "readbyte",
        "countBytesRead",
        "msgParsingState",
        "msgParsingState",
        "crc32",
        "ord",
        "readbyte",
        "countBytesRead",
        "msgParsingState",
        "binascii",
        "crc32",
        "bytesRead",
        "crc32",
        "crc32",
        "performActions",
        "command",
        "payload",
        "sendNack",
        "port",
        "close",
        "cmd",
        "payload",
        "cmd",
        "cmd",
        "resendLastMessage",
        "cmd",
        "sendAck",
        "payload",
        "getPrinterObject",
        "is_printing",
        "getPrinterObject",
        "pause_print",
        "sendCommandWithPayload",
        "sendCommandWithPayload",
        "getPrinterObject",
        "is_paused",
        "getPrinterObject",
        "resume_print",
        "sendCommandWithPayload",
        "sendCommandWithPayload",
        "getPrinterObject",
        "start_print",
        "sendCommandWithPayload",
        "sendCommandWithPayload",
        "payload",
        "getPrinterObject",
        "cancel_print",
        "sendCommandWithPayload",
        "sendCommandWithPayload",
        "payload",
        "performUserCommandByID",
        "payload",
        "performUserCommandByID",
        "payload",
        "performUserCommandByID",
        "payload",
        "performUserCommandByID",
        "payload",
        "performUserCommandByID",
        "payload",
        "performUserCommandByID",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "payload",
        "cmd",
        "cbClass",
        "_logger",
        "info",
        "cmd",
        "port",
        "write",
        "ackResponse",
        "port",
        "write",
        "nackResponse",
        "cmd",
        "payload",
        "payloadLength",
        "message",
        "append",
        "message",
        "append",
        "payloadLength",
        "message",
        "append",
        "cmd",
        "message",
        "payload",
        "message",
        "binascii",
        "crc32",
        "message",
        "append",
        "crc32",
        "message",
        "append",
        "crc32",
        "message",
        "append",
        "crc32",
        "message",
        "append",
        "crc32",
        "message",
        "port",
        "write",
        "lastMessage",
        "port",
        "write",
        "lastMessage",
        "cbClass",
        "getPrinterObject",
        "ubid",
        "cbClass",
        "_logger",
        "info",
        "ubid",
        "cbClass",
        "_logger",
        "info",
        "userCommands",
        "ubid",
        "cbClass",
        "_logger",
        "info",
        "userKeyModes",
        "ubid",
        "userCommands",
        "ubid",
        "userKeyModes",
        "ubid",
        "getPrinterObject",
        "commands",
        "userCommands",
        "ubid",
        "userKeyModes",
        "ubid",
        "getPrinterObject",
        "script",
        "userCommands",
        "ubid",
        "userKeyModes",
        "ubid",
        "GPIO",
        "setup",
        "userCommands",
        "ubid",
        "GPIO",
        "OUT",
        "GPIO",
        "output",
        "userCommands",
        "ubid",
        "GPIO",
        "input",
        "userCommands",
        "ubid"
    ],
    "literals": [
        "\"COM3\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"OFF\"",
        "\"GCODE\"",
        "\"SCRIPT\"",
        "\"ACTION\"",
        "\"comport\"",
        "\"baudrate\"",
        "\"baudrateOpt\"",
        "\"userCommand1\"",
        "\"userCommand2\"",
        "\"userCommand3\"",
        "\"userCommand4\"",
        "\"userCommand5\"",
        "\"userCommand6\"",
        "\"userKeyMode1\"",
        "\"userKeyMode2\"",
        "\"userKeyMode3\"",
        "\"userKeyMode4\"",
        "\"userKeyMode5\"",
        "\"userKeyMode6\"",
        "\"settings\"",
        "\"js/OctoKeys.js\"",
        "\"css/OctoKeys.css\"",
        "\"less/OctoKeys.less\"",
        "\"OctoKeys Plugin\"",
        "\"github_release\"",
        "\"pkElectronics\"",
        "\"OctoPrint-Octokeys\"",
        "\"https://github.com/pkElectronics/OctoPrint-Octoremote/archive/{target_version}.zip\"",
        "\"on shutdown\"",
        "\"OctoKeys Plugin\"",
        "\"octoprint.plugin.softwareupdate.check_config\"",
        "\"\"",
        "\"comport\"",
        "\"baudrate\"",
        "\"userCommands\"",
        "\"userKeyModes\"",
        "\"Octokeys, could not open comport:\"",
        "\"Octokeys Comthread started\"",
        "\"Thread started\"",
        "'\\x80'",
        "\"\"",
        "\"KR\"",
        "\"\"",
        "\"\"",
        "\"User Command %s\"",
        "\"\"",
        "\"GCODE\"",
        "\"SCRIPT\"",
        "\"ACTION\""
    ],
    "variables": [
        "conf",
        "comthread",
        "interrupted",
        "__plugin_name__",
        "__plugin_implementation__",
        "__plugin_hooks__",
        "ackResponse",
        "nackResponse",
        "portname",
        "baudrate",
        "interrupted",
        "msgParsingState",
        "bytesRead",
        "payload",
        "countBytesRead",
        "ackPending",
        "cbClass",
        "portname",
        "baudrate",
        "userCommands",
        "userKeyModes",
        "port",
        "daemon",
        "readbyte",
        "telegramLength",
        "command",
        "crc32",
        "crc32",
        "msgParsingState",
        "crc32",
        "countBytesRead",
        "bytesRead",
        "payload",
        "telegramLength",
        "command",
        "interrupted",
        "ackPending",
        "stuff",
        "stuff",
        "stuff",
        "message",
        "message",
        "crc32",
        "lastMessage",
        "ackPending"
    ],
    "comments": [
        "coding=utf-8",
        "~~ SettingsPlugin mixin",
        "0 -> OFF, 1 -> GCODE, 2 -> Script, 3 -> Action",
        "dict(type=\"navbar\", custom_bindings=False),",
        "restart the thread",
        "~~ AssetPlugin mixin",
        "Define your plugin's asset files to automatically include in the",
        "core UI here.",
        "~~ Softwareupdate hook",
        "Define the configuration for your plugin to use with the Software Update",
        "Plugin here. See https://github.com/foosel/OctoPrint/wiki/Plugin:-Software-Update",
        "for details.",
        "version check: github repository",
        "Здесь должна быть ссылка на репозиторий с для обновления плагина сейчас все ссылки не корректны",
        "update method: pip",
        "self.comthread.start()",
        "Other stuff below",
        "",
        "",
        "serial.tools.list_ports listet alle comports auf",
        "If you want your plugin to be registered within OctoPrint under a different name than what you defined in setup.py",
        "(\"OctoPrint-PluginSkeleton\"), you may define that here. Same goes for the other metadata derived from setup.py that",
        "can be overwritten via __plugin_xyz__ control properties. See the documentation for that.",
        "Fixed responses",
        "263264C3",
        "BF3B3579",
        "comport parameters",
        "thread parameters",
        "msg parser vars",
        "self.sendCommandWithPayload(0x20, [self.movementIndex], 1) Изначальное включение светодиодов при запуске",
        "self.sendCommandWithPayload(0x20, [self.toolIndex + 4], 1) Команда управления светодиодами, состояние светодиодов, кол-во байт данных",
        "А вот тут мы разбираем принятый пакет",
        "я использую следующие кнопки: PLAY_PAUSE 0x11, STOP 0x12, USER1 0x13, USER2 0x14, HEAT1 0x21, HEAT2 0x22, LITE 0x23, POWER 0x24",
        "key pressed",
        "PLAY_PAUSE",
        "Включим красный диодик если остановились и выключим зелёный",
        "Включим зелёный диодик если печатаем и выключим красный",
        "Включим зелёный диодик если печатаем и выключим красный",
        "STOP",
        "Включим красный диодик если остановились и выключим зелёный",
        "USER1",
        "USER2",
        "HEAT1",
        "HEAT2",
        "LITE",
        "POWER",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "Кнопка не реализована аппаратно",
        "key released",
        "key longpress",
        "self.cbClass._logger.info(\"KL\")",
        "self.cbClass._logger.info(\"FAIL\")",
        "По идее этот код должен повторно настроить пин на выход и инвертировать его стостояние"
    ],
    "docstrings": [],
    "functions": [
        "get_settings_defaults",
        "get_config_vars",
        "get_template_configs",
        "on_settings_save",
        "get_assets",
        "get_update_information",
        "on_after_startup",
        "start_com_thread",
        "stop_com_thread",
        "on_shutdown",
        "getPrinterObject",
        "getLogger",
        "__plugin_load__",
        "run",
        "interrupt",
        "performActions",
        "sendAck",
        "sendNack",
        "sendCommandWithPayload",
        "resendLastMessage",
        "getPrinterObject",
        "performUserCommandByID"
    ],
    "classes": [
        "OctokeysPlugin",
        "SerialThread"
    ]
}