{
    "identifiers": [
        "exports",
        "exports",
        "lYearDays",
        "y",
        "i",
        "i",
        "i",
        "sum",
        "calendar",
        "y",
        "i",
        "sum",
        "calendar",
        "y",
        "leapMonth",
        "y",
        "calendar",
        "y",
        "leapDays",
        "y",
        "calendar",
        "y",
        "calendar",
        "y",
        "monthDays",
        "y",
        "m",
        "m",
        "m",
        "calendar",
        "y",
        "m",
        "solarDays",
        "y",
        "m",
        "m",
        "m",
        "m",
        "ms",
        "y",
        "y",
        "y",
        "calendar",
        "ms",
        "toGanZhiYear",
        "lYear",
        "lYear",
        "lYear",
        "ganKey",
        "ganKey",
        "zhiKey",
        "zhiKey",
        "calendar",
        "ganKey",
        "calendar",
        "zhiKey",
        "toAstro",
        "cMonth",
        "cDay",
        "s",
        "cMonth",
        "cDay",
        "arr",
        "cMonth",
        "toGanZhi",
        "offset",
        "calendar",
        "offset",
        "calendar",
        "offset",
        "getTerm",
        "y",
        "n",
        "y",
        "y",
        "n",
        "n",
        "calendar",
        "y",
        "parseInt",
        "_table",
        "parseInt",
        "_table",
        "parseInt",
        "_table",
        "parseInt",
        "_table",
        "parseInt",
        "_table",
        "parseInt",
        "_table",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "_info",
        "parseInt",
        "_calday",
        "n",
        "toChinaMonth",
        "m",
        "m",
        "m",
        "calendar",
        "m",
        "s",
        "s",
        "toChinaDay",
        "d",
        "d",
        "s",
        "s",
        "s",
        "s",
        "calendar",
        "d",
        "s",
        "calendar",
        "d",
        "s",
        "getAnimal",
        "y",
        "calendar",
        "y",
        "solar2lunar",
        "y",
        "m",
        "d",
        "y",
        "y",
        "y",
        "m",
        "d",
        "y",
        "y",
        "parseInt",
        "m",
        "d",
        "objDate",
        "objDate",
        "objDate",
        "objDate",
        "objDate",
        "objDate",
        "i",
        "i",
        "offset",
        "i",
        "temp",
        "calendar",
        "i",
        "offset",
        "temp",
        "offset",
        "offset",
        "temp",
        "i",
        "isTodayObj",
        "y",
        "isTodayObj",
        "m",
        "isTodayObj",
        "d",
        "isToday",
        "objDate",
        "calendar",
        "nWeek",
        "nWeek",
        "nWeek",
        "calendar",
        "i",
        "i",
        "i",
        "offset",
        "i",
        "leap",
        "i",
        "leap",
        "isLeap",
        "i",
        "isLeap",
        "temp",
        "calendar",
        "year",
        "temp",
        "calendar",
        "year",
        "i",
        "isLeap",
        "i",
        "leap",
        "isLeap",
        "offset",
        "temp",
        "offset",
        "leap",
        "i",
        "leap",
        "isLeap",
        "isLeap",
        "isLeap",
        "i",
        "offset",
        "offset",
        "temp",
        "i",
        "offset",
        "m",
        "calendar",
        "year",
        "calendar",
        "y",
        "m",
        "calendar",
        "y",
        "m",
        "calendar",
        "y",
        "m",
        "d",
        "firstNode",
        "gzM",
        "calendar",
        "y",
        "m",
        "firstNode",
        "d",
        "isTerm",
        "Term",
        "calendar",
        "m",
        "secondNode",
        "d",
        "isTerm",
        "Term",
        "calendar",
        "m",
        "y",
        "sm",
        "calendar",
        "dayCyclical",
        "d",
        "calendar",
        "m",
        "d",
        "year",
        "month",
        "day",
        "calendar",
        "year",
        "isLeap",
        "calendar",
        "month",
        "calendar",
        "day",
        "y",
        "m",
        "d",
        "gzY",
        "gzM",
        "gzD",
        "isToday",
        "isLeap",
        "nWeek",
        "cWeek",
        "isTerm",
        "Term",
        "astro",
        "lunar2solar",
        "y",
        "m",
        "d",
        "isLeapMonth",
        "isLeapMonth",
        "calendar",
        "y",
        "calendar",
        "y",
        "isLeapMonth",
        "leapMonth",
        "m",
        "y",
        "m",
        "d",
        "y",
        "m",
        "d",
        "calendar",
        "y",
        "m",
        "isLeapMonth",
        "_day",
        "calendar",
        "y",
        "m",
        "y",
        "y",
        "d",
        "_day",
        "i",
        "y",
        "i",
        "offset",
        "calendar",
        "i",
        "i",
        "m",
        "i",
        "leap",
        "calendar",
        "y",
        "isAdd",
        "leap",
        "i",
        "leap",
        "offset",
        "calendar",
        "y",
        "isAdd",
        "offset",
        "calendar",
        "y",
        "i",
        "isLeapMonth",
        "offset",
        "day",
        "offset",
        "d",
        "stmap",
        "calObj",
        "calObj",
        "calObj",
        "exports",
        "calender"
    ],
    "literals": [
        "\"use strict\"",
        "\"__esModule\"",
        "\"__esModule\"",
        "\"\\u7532\"",
        "\"\\u4E59\"",
        "\"\\u4E19\"",
        "\"\\u4E01\"",
        "\"\\u620A\"",
        "\"\\u5DF1\"",
        "\"\\u5E9A\"",
        "\"\\u8F9B\"",
        "\"\\u58EC\"",
        "\"\\u7678\"",
        "\"\\u5B50\"",
        "\"\\u4E11\"",
        "\"\\u5BC5\"",
        "\"\\u536F\"",
        "\"\\u8FB0\"",
        "\"\\u5DF3\"",
        "\"\\u5348\"",
        "\"\\u672A\"",
        "\"\\u7533\"",
        "\"\\u9149\"",
        "\"\\u620C\"",
        "\"\\u4EA5\"",
        "\"\\u9F20\"",
        "\"\\u725B\"",
        "\"\\u864E\"",
        "\"\\u5154\"",
        "\"\\u9F99\"",
        "\"\\u86C7\"",
        "\"\\u9A6C\"",
        "\"\\u7F8A\"",
        "\"\\u7334\"",
        "\"\\u9E21\"",
        "\"\\u72D7\"",
        "\"\\u732A\"",
        "\"\\u5C0F\\u5BD2\"",
        "\"\\u5927\\u5BD2\"",
        "\"\\u7ACB\\u6625\"",
        "\"\\u96E8\\u6C34\"",
        "\"\\u60CA\\u86F0\"",
        "\"\\u6625\\u5206\"",
        "\"\\u6E05\\u660E\"",
        "\"\\u8C37\\u96E8\"",
        "\"\\u7ACB\\u590F\"",
        "\"\\u5C0F\\u6EE1\"",
        "\"\\u8292\\u79CD\"",
        "\"\\u590F\\u81F3\"",
        "\"\\u5C0F\\u6691\"",
        "\"\\u5927\\u6691\"",
        "\"\\u7ACB\\u79CB\"",
        "\"\\u5904\\u6691\"",
        "\"\\u767D\\u9732\"",
        "\"\\u79CB\\u5206\"",
        "\"\\u5BD2\\u9732\"",
        "\"\\u971C\\u964D\"",
        "\"\\u7ACB\\u51AC\"",
        "\"\\u5C0F\\u96EA\"",
        "\"\\u5927\\u96EA\"",
        "\"\\u51AC\\u81F3\"",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c3598082c95f8c965cc920f'",
        "'97bd0b06bdb0722c965ce1cfcc920f'",
        "'b027097bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c359801ec95f8c965cc920f'",
        "'97bd0b06bdb0722c965ce1cfcc920f'",
        "'b027097bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c359801ec95f8c965cc920f'",
        "'97bd0b06bdb0722c965ce1cfcc920f'",
        "'b027097bd097c36b0b6fc9274c91aa'",
        "'9778397bd19801ec9210c965cc920e'",
        "'97b6b97bd19801ec95f8c965cc920f'",
        "'97bd09801d98082c95f8e1cfcc920f'",
        "'97bd097bd097c36b0b6fc9210c8dc2'",
        "'9778397bd197c36c9210c9274c91aa'",
        "'97b6b97bd19801ec95f8c965cc920e'",
        "'97bd09801d98082c95f8e1cfcc920f'",
        "'97bd097bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36c9210c9274c91aa'",
        "'97b6b97bd19801ec95f8c965cc920e'",
        "'97bcf97c3598082c95f8e1cfcc920f'",
        "'97bd097bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36c9210c9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c3598082c95f8c965cc920f'",
        "'97bd097bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c3598082c95f8c965cc920f'",
        "'97bd097bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c359801ec95f8c965cc920f'",
        "'97bd097bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c359801ec95f8c965cc920f'",
        "'97bd097bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf97c359801ec95f8c965cc920f'",
        "'97bd097bd07f595b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd19801ec9210c9274c920e'",
        "'97b6b97bd19801ec95f8c965cc920f'",
        "'97bd07f5307f595b0b0bc920fb0722'",
        "'7f0e397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36c9210c9274c920e'",
        "'97b6b97bd19801ec95f8c965cc920f'",
        "'97bd07f5307f595b0b0bc920fb0722'",
        "'7f0e397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36c9210c9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bd07f1487f595b0b0bc920fb0722'",
        "'7f0e397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf7f1487f595b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf7f1487f595b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf7f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c965cc920e'",
        "'97bcf7f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b97bd19801ec9210c9274c920e'",
        "'97bcf7f0e47f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'9778397bd097c36b0b6fc9210c91aa'",
        "'97b6b97bd197c36c9210c9274c920e'",
        "'97bcf7f0e47f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'9778397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36c9210c9274c920e'",
        "'97b6b7f0e47f531b0723b0b6fb0722'",
        "'7f0e37f5307f595b0b0bc920fb0722'",
        "'7f0e397bd097c36b0b6fc9210c8dc2'",
        "'9778397bd097c36b0b70c9274c91aa'",
        "'97b6b7f0e47f531b0723b0b6fb0721'",
        "'7f0e37f1487f595b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc9210c8dc2'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f595b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'9778397bd097c36b0b6fc9274c91aa'",
        "'97b6b7f0e47f531b0723b0787b0721'",
        "'7f0e27f0e47f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'9778397bd097c36b0b6fc9210c91aa'",
        "'97b6b7f0e47f149b0723b0787b0721'",
        "'7f0e27f0e47f531b0723b0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'9778397bd097c36b0b6fc9210c8dc2'",
        "'977837f0e37f149b0723b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0722'",
        "'7f0e37f5307f595b0b0bc920fb0722'",
        "'7f0e397bd097c35b0b6fc9210c8dc2'",
        "'977837f0e37f14998082b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e37f1487f595b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc9210c8dc2'",
        "'977837f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'977837f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd097c35b0b6fc920fb0722'",
        "'977837f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'977837f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'977837f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f149b0723b0787b0721'",
        "'7f0e27f0e47f531b0b0bb0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'977837f0e37f14998082b0723b06bd'",
        "'7f07e7f0e37f149b0723b0787b0721'",
        "'7f0e27f0e47f531b0723b0b6fb0722'",
        "'7f0e397bd07f595b0b0bc920fb0722'",
        "'977837f0e37f14898082b0723b02d5'",
        "'7ec967f0e37f14998082b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0722'",
        "'7f0e37f1487f595b0b0bb0b6fb0722'",
        "'7f0e37f0e37f14898082b0723b02d5'",
        "'7ec967f0e37f14998082b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0722'",
        "'7f0e37f1487f531b0b0bb0b6fb0722'",
        "'7f0e37f0e37f14898082b0723b02d5'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e37f1487f531b0b0bb0b6fb0722'",
        "'7f0e37f0e37f14898082b072297c35'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e37f0e37f14898082b072297c35'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e37f0e366aa89801eb072297c35'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f149b0723b0787b0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "'7f0e37f0e366aa89801eb072297c35'",
        "'7ec967f0e37f14998082b0723b06bd'",
        "'7f07e7f0e47f149b0723b0787b0721'",
        "'7f0e27f0e47f531b0723b0b6fb0722'",
        "'7f0e37f0e366aa89801eb072297c35'",
        "'7ec967f0e37f14998082b0723b06bd'",
        "'7f07e7f0e37f14998083b0787b0721'",
        "'7f0e27f0e47f531b0723b0b6fb0722'",
        "'7f0e37f0e366aa89801eb072297c35'",
        "'7ec967f0e37f14898082b0723b02d5'",
        "'7f07e7f0e37f14998082b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0722'",
        "'7f0e36665b66aa89801e9808297c35'",
        "'665f67f0e37f14898082b0723b02d5'",
        "'7ec967f0e37f14998082b0787b0721'",
        "'7f07e7f0e47f531b0723b0b6fb0722'",
        "'7f0e36665b66a449801e9808297c35'",
        "'665f67f0e37f14898082b0723b02d5'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e36665b66a449801e9808297c35'",
        "'665f67f0e37f14898082b072297c35'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e26665b66a449801e9808297c35'",
        "'665f67f0e37f1489801eb072297c35'",
        "'7ec967f0e37f14998082b0787b06bd'",
        "'7f07e7f0e47f531b0723b0b6fb0721'",
        "'7f0e27f1487f531b0b0bb0b6fb0722'",
        "\"\\u65E5\"",
        "\"\\u4E00\"",
        "\"\\u4E8C\"",
        "\"\\u4E09\"",
        "\"\\u56DB\"",
        "\"\\u4E94\"",
        "\"\\u516D\"",
        "\"\\u4E03\"",
        "\"\\u516B\"",
        "\"\\u4E5D\"",
        "\"\\u5341\"",
        "\"\\u521D\"",
        "\"\\u5341\"",
        "\"\\u5EFF\"",
        "\"\\u5345\"",
        "\"\\u6B63\"",
        "\"\\u4E8C\"",
        "\"\\u4E09\"",
        "\"\\u56DB\"",
        "\"\\u4E94\"",
        "\"\\u516D\"",
        "\"\\u4E03\"",
        "\"\\u516B\"",
        "\"\\u4E5D\"",
        "\"\\u5341\"",
        "\"\\u51AC\"",
        "\"\\u814A\"",
        "\"\\u9B54\\u7FAF\\u6C34\\u74F6\\u53CC\\u9C7C\\u767D\\u7F8A\\u91D1\\u725B\\u53CC\\u5B50\\u5DE8\\u87F9\\u72EE\\u5B50\\u5904\\u5973\\u5929\\u79E4\\u5929\\u874E\\u5C04\\u624B\\u9B54\\u7FAF\"",
        "\"\\u5EA7\"",
        "'0x'",
        "'0x'",
        "'0x'",
        "'0x'",
        "'0x'",
        "'0x'",
        "\"\\u6708\"",
        "\"\\u521D\\u5341\"",
        "\"\\u4E8C\\u5341\"",
        "\"\\u4E09\\u5341\"",
        "'lYear'",
        "'lMonth'",
        "'lDay'",
        "'Animal'",
        "'IMonthCn'",
        "\"\\u95F0\"",
        "''",
        "'IDayCn'",
        "'cYear'",
        "'cMonth'",
        "'cDay'",
        "'gzYear'",
        "'gzMonth'",
        "'gzDay'",
        "'isToday'",
        "'isLeap'",
        "'nWeek'",
        "'ncWeek'",
        "\"\\u661F\\u671F\"",
        "'isTerm'",
        "'Term'",
        "'astro'"
    ],
    "variables": [
        "calender",
        "i",
        "sum",
        "ms",
        "ganKey",
        "zhiKey",
        "s",
        "arr",
        "_table",
        "_info",
        "_calday",
        "s",
        "s",
        "objDate",
        "objDate",
        "i",
        "leap",
        "temp",
        "y",
        "m",
        "d",
        "offset",
        "isTodayObj",
        "isToday",
        "nWeek",
        "cWeek",
        "year",
        "i",
        "leap",
        "isLeap",
        "month",
        "i",
        "day",
        "sm",
        "gzY",
        "firstNode",
        "secondNode",
        "gzM",
        "isTerm",
        "Term",
        "dayCyclical",
        "gzD",
        "astro",
        "isLeapMonth",
        "leapOffset",
        "leapMonth",
        "leapDay",
        "day",
        "_day",
        "day",
        "offset",
        "i",
        "leap",
        "isAdd",
        "i",
        "stmap",
        "calObj",
        "cY",
        "cM",
        "cD"
    ],
    "comments": [
        "1900-1909",
        "1910-1919",
        "1920-1929",
        "1930-1939",
        "1940-1949",
        "1950-1959",
        "1960-1969",
        "1970-1979",
        "1980-1989",
        "1990-1999",
        "2000-2009",
        "2010-2019",
        "2020-2029",
        "2030-2039",
        "2040-2049",
        "Add By JJonline@JJonline.Cn*",
        "2050-2059",
        "2060-2069",
        "2070-2079",
        "2080-2089",
        "2090-2099",
        "2100",
        "闰字编码 \\u95f0",
        "月份参数从1至12，参数错误返回-1",
        "若参数错误 返回-1",
        "2月份的闰平规律测算后确认返回28或29",
        "如果余数为0则为最后一个天干",
        "如果余数为0则为最后一个地支",
        "座",
        "月 => \\u6708",
        "若参数错误 返回-1",
        "加上月字",
        "日 => \\u65e5",
        "参数区间1900.1.31~2100.12.31",
        "年份限定、上限",
        "undefined转换为数字变为NaN",
        "公历传参最下限",
        "未传参  获得当天",
        "修正ymd参数",
        "是否今天",
        "星期几",
        "数字表示周几顺应天朝周一开始的惯例",
        "农历年",
        "闰哪个月",
        "效验闰月",
        "闰月",
        "计算农历闰月天数",
        "计算农历普通月天数",
        "解除闰月",
        "闰月导致数组下标重叠取反",
        "农历月",
        "农历日",
        "天干地支处理",
        "当月的两个节气",
        "bugfix-2017-7-24 11:03:38 use lunar Year Param `y` Not `year`",
        "返回当月「节」为几日开始",
        "返回当月「节」为几日开始",
        "依据12节气修正干支月",
        "传入的日期的节气与否",
        "日柱 当月一日与 1900/1/1 相差天数",
        "该日期所属的星座",
        "参数区间1900.1.31~2100.12.1",
        "传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同",
        "超出了最大极限值",
        "bugFix 2016-9-25",
        "if month is leap, _day use leapDays method",
        "参数合法性效验",
        "计算农历的时间差",
        "处理闰月",
        "转换闰月农历 需补充该年闰月的前一个月的时差",
        "1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)",
        "return calendar.solar2lunar(cY, cM, cD);"
    ],
    "docstrings": [
        "* 农历1900-2100的润大小信息表\n   * @Array Of Property\n   * @return Hex",
        "* 公历每个月份的天数普通表\n   * @Array Of Property\n   * @return Number",
        "* 天干地支之天干速查表\n   * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\n   * @return Cn string",
        "* 天干地支之地支速查表\n   * @Array Of Property\n   * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\n   * @return Cn string",
        "* 天干地支之地支速查表<=>生肖\n   * @Array Of Property\n   * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\n   * @return Cn string",
        "* 24节气速查表\n   * @Array Of Property\n   * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\n   * @return Cn string",
        "* 1900-2100各年的24节气日期速查表\n   * @Array Of Property\n   * @return 0x string For splice",
        "* 数字转中文速查表\n   * @Array Of Property\n   * @trans ['日','一','二','三','四','五','六','七','八','九','十']\n   * @return Cn string",
        "* 日期转农历称呼速查表\n   * @Array Of Property\n   * @trans ['初','十','廿','卅']\n   * @return Cn string",
        "* 月份转农历称呼速查表\n   * @Array Of Property\n   * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\n   * @return Cn string",
        "* 返回农历y年一整年的总天数\n   * @param lunar Year\n   * @return Number\n   * @eg:var count = calendar.lYearDays(1987) ;//count=387",
        "* 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n   * @param lunar Year\n   * @return Number (0-12)\n   * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6",
        "* 返回农历y年闰月的天数 若该年没有闰月则返回0\n   * @param lunar Year\n   * @return Number (0、29、30)\n   * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29",
        "* 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\n   * @param lunar Year\n   * @return Number (-1、29、30)\n   * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29",
        "* 返回公历(!)y年m月的天数\n   * @param solar Year\n   * @return Number (-1、28、29、30、31)\n   * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30",
        "* 农历年份转换为干支纪年\n   * @param  lYear 农历年的年份数\n   * @return Cn string",
        "* 公历月、日判断所属星座\n   * @param  cMonth [description]\n   * @param  cDay [description]\n   * @return Cn string",
        "* 传入offset偏移量返回干支\n   * @param offset 相对甲子的偏移量\n   * @return Cn string",
        "* 传入公历(!)y年获得该年第n个节气的公历日期\n   * @param y公历年(1900-2100)；n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\n   * @return day Number\n   * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春",
        "* 传入农历数字月份返回汉语通俗表示法\n   * @param lunar month\n   * @return Cn string\n   * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'",
        "* 传入农历日期数字返回汉字表示法\n   * @param lunar day\n   * @return Cn string\n   * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'",
        "* 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\n   * @param y year\n   * @return Cn string\n   * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'",
        "* 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\n   * @param y  solar year\n   * @param m  solar month\n   * @param d  solar day\n   * @return JSON object\n   * @eg:console.log(calendar.solar2lunar(1987,11,01));",
        "* 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\n   * @param y  lunar year\n   * @param m  lunar month\n   * @param d  lunar day\n   * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\n   * @return JSON object\n   * @eg:console.log(calendar.lunar2solar(1987,9,10));"
    ],
    "functions": [],
    "classes": []
}