{
    "identifiers": [
        "numpy",
        "np",
        "math",
        "m",
        "torch",
        "torch",
        "autograd",
        "torch",
        "optim",
        "optim",
        "torch",
        "nn",
        "nn",
        "torch",
        "nn",
        "functional",
        "F",
        "qiskit",
        "qiskit",
        "qiskit",
        "assemble",
        "Aer",
        "qiskit",
        "visualization",
        "qiskit",
        "circuit",
        "Parameter",
        "qiskit",
        "QuantumCircuit",
        "qiskit",
        "providers",
        "aer",
        "AerSimulator",
        "torch",
        "optim",
        "optim",
        "tqdm",
        "trange",
        "matplotlib",
        "pyplot",
        "plt",
        "collections",
        "abc",
        "functools",
        "os",
        "qiskit",
        "providers",
        "aer",
        "noise",
        "amplitude_damping_error",
        "qiskit",
        "providers",
        "aer",
        "noise",
        "NoiseModel",
        "qiskit",
        "IBMQ",
        "transpile",
        "nq",
        "nl",
        "noise",
        "shots",
        "nq",
        "nl",
        "shots",
        "NoiseModel",
        "noise",
        "amplitude_damping_error",
        "gamma",
        "noise_model",
        "add_all_qubit_quantum_error",
        "error",
        "AerSimulator",
        "noise_model",
        "noise_model",
        "k",
        "Parameter",
        "format",
        "k",
        "k",
        "nq",
        "k",
        "Parameter",
        "format",
        "k",
        "k",
        "nq",
        "nl",
        "QuantumRegister",
        "nq",
        "ClassicalRegister",
        "nq",
        "QuantumCircuit",
        "q",
        "c",
        "i",
        "nq",
        "qc",
        "ry",
        "imput",
        "i",
        "q",
        "i",
        "i",
        "nl",
        "j",
        "nq",
        "qc",
        "ry",
        "theta",
        "i",
        "nq",
        "j",
        "q",
        "j",
        "j",
        "nq",
        "qc",
        "cx",
        "q",
        "j",
        "q",
        "j",
        "qc",
        "measure",
        "q",
        "c",
        "nc",
        "np",
        "array",
        "np",
        "array",
        "i",
        "nc",
        "np",
        "kron",
        "d",
        "d1",
        "d",
        "imput",
        "theta",
        "imput",
        "reshape",
        "nq",
        "imput",
        "k",
        "imput",
        "k",
        "item",
        "k",
        "nq",
        "theta",
        "reshape",
        "nq",
        "nl",
        "theta",
        "k",
        "theta",
        "k",
        "item",
        "k",
        "nq",
        "nl",
        "update",
        "params1",
        "transpile",
        "qc",
        "backend",
        "assemble",
        "transpiled_circ",
        "shots",
        "shot",
        "parameter_binds",
        "backend",
        "run",
        "qobj",
        "job",
        "result",
        "get_counts",
        "torch",
        "zeros",
        "nq",
        "i",
        "re",
        "prob",
        "i",
        "re",
        "i",
        "shot",
        "E",
        "nq",
        "i",
        "nq",
        "soma",
        "H",
        "i",
        "prob",
        "i",
        "soma",
        "reshape",
        "staticmethod",
        "imput",
        "theta",
        "quantumcircuit",
        "sigma",
        "m",
        "pi",
        "quantumcircuit",
        "quantumcircuit",
        "run",
        "imput",
        "theta",
        "quantumcircuit",
        "nq",
        "quantumcircuit",
        "nl",
        "sigma",
        "save_for_backward",
        "result",
        "imput",
        "theta",
        "result",
        "staticmethod",
        "grad_output",
        "saved_tensors",
        "theta1",
        "reshape",
        "n_qubit",
        "layer",
        "sigma",
        "np",
        "log10",
        "n_qubit",
        "layer",
        "torch",
        "distributions",
        "multivariate_normal",
        "MultivariateNormal",
        "theta1",
        "torch",
        "eye",
        "len",
        "theta1",
        "sigma",
        "theta1",
        "reshape",
        "len",
        "theta1",
        "k",
        "l",
        "mm1",
        "sample",
        "reshape",
        "n_qubit",
        "layer",
        "quantumcircuit",
        "run",
        "imput1",
        "xi1",
        "w1",
        "xi1",
        "quantumcircuit",
        "run",
        "imput1",
        "xi11",
        "xi1",
        "w1",
        "soma1",
        "d0",
        "d1",
        "dd",
        "soma1",
        "l",
        "sigma",
        "media1",
        "torch",
        "matmul",
        "media1",
        "grad_output",
        "T",
        "result",
        "reshape",
        "n_qubit",
        "layer",
        "result",
        "staticmethod",
        "imput",
        "theta",
        "quantumcircuit",
        "quantumcircuit",
        "quantumcircuit",
        "run",
        "imput",
        "theta",
        "exp_value",
        "quantumcircuit",
        "nq",
        "quantumcircuit",
        "nl",
        "save_for_backward",
        "result",
        "imput",
        "theta",
        "result",
        "staticmethod",
        "grad_output",
        "saved_tensors",
        "theta1",
        "torch",
        "Tensor",
        "k",
        "len",
        "theta1",
        "input_numbers",
        "detach",
        "clone",
        "shift_right",
        "k",
        "m",
        "pi",
        "input_numbers",
        "detach",
        "clone",
        "shift_left",
        "k",
        "m",
        "pi",
        "quantumcircuit",
        "run",
        "imput1",
        "shift_right",
        "quantumcircuit",
        "run",
        "imput1",
        "shift_left",
        "expectation_right",
        "expectation_left",
        "torch",
        "cat",
        "gradients",
        "gradient",
        "gradients",
        "grad_output",
        "T",
        "nn",
        "Module",
        "n_qubit",
        "n_layer",
        "noise",
        "shots",
        "model1",
        "QuantumClass",
        "n_qubit",
        "n_layer",
        "noise",
        "noise",
        "shots",
        "shots",
        "torch",
        "nn",
        "Parameter",
        "torch",
        "FloatTensor",
        "n_qubit",
        "n_layer",
        "uniform_",
        "m",
        "pi",
        "m",
        "pi",
        "input",
        "TorchCircuit",
        "apply",
        "input",
        "alfa",
        "quantum_circuit",
        "nn",
        "Module",
        "n_qubit",
        "n_layer",
        "NN",
        "noise",
        "shots",
        "sigma",
        "m",
        "pi",
        "Qlayer",
        "QuantumClass",
        "n_qubit",
        "n_layer",
        "noise",
        "noise",
        "shots",
        "shots",
        "NN",
        "sigma",
        "input",
        "alfa",
        "NN",
        "TorchCircuit",
        "apply",
        "input",
        "alfa",
        "quantum_circuit",
        "NN",
        "TorchCircuit_NES",
        "apply",
        "input",
        "alfa",
        "quantum_circuit",
        "sigma",
        "nn",
        "Module",
        "nq",
        "nl",
        "NN",
        "d_LSTM",
        "sigma",
        "m",
        "pi",
        "noise",
        "model2",
        "nq",
        "nl",
        "Qlayer",
        "nq",
        "nl",
        "NN",
        "sigma",
        "sigma",
        "noise",
        "noise",
        "d_LSTM",
        "nn",
        "LSTMCell",
        "nq",
        "nl",
        "torch",
        "nn",
        "Parameter",
        "torch",
        "FloatTensor",
        "uniform_",
        "m",
        "pi",
        "m",
        "pi",
        "torch",
        "nn",
        "Parameter",
        "torch",
        "FloatTensor",
        "nq",
        "nl",
        "uniform_",
        "m",
        "pi",
        "m",
        "pi",
        "torch",
        "nn",
        "Parameter",
        "torch",
        "FloatTensor",
        "nq",
        "nl",
        "uniform_",
        "m",
        "pi",
        "m",
        "pi",
        "x",
        "lstm",
        "init_loss",
        "init_hx",
        "init_cx",
        "new_Param",
        "reshape",
        "nq",
        "nl",
        "qlayer",
        "x",
        "Param",
        "soma",
        "new_Loss",
        "i",
        "dn",
        "lstm",
        "new_Loss",
        "reshape",
        "hx",
        "new_Param",
        "new_Param",
        "reshape",
        "nq",
        "nl",
        "qlayer",
        "x",
        "Param",
        "soma",
        "new_Loss",
        "soma",
        "dn",
        "model",
        "nq",
        "nl",
        "lr",
        "epochs",
        "optim_name",
        "Nmodel",
        "sigma",
        "optim",
        "SGD",
        "model",
        "parameters",
        "lr",
        "lr",
        "trange",
        "epochs",
        "torch",
        "ones",
        "nq",
        "m",
        "pi",
        "n",
        "tp",
        "tp",
        "set_description",
        "Nmodel",
        "nq",
        "nl",
        "optim_name",
        "lr",
        "sigma",
        "optimizer",
        "zero_grad",
        "model",
        "x",
        "l",
        "backward",
        "optimizer",
        "step",
        "data_hist",
        "append",
        "l",
        "item",
        "np",
        "array",
        "data_hist",
        "Noise",
        "format",
        "Noise",
        "nq",
        "NQ",
        "nl",
        "NL",
        "os",
        "path",
        "exists",
        "format",
        "nq",
        "nl",
        "Noise",
        "os",
        "mkdir",
        "format",
        "nq",
        "nl",
        "Noise",
        "lr",
        "LR",
        "i",
        "N_model",
        "model1",
        "nq",
        "nl",
        "noise",
        "Noise",
        "train",
        "net",
        "nq",
        "nl",
        "lr",
        "epochs",
        "i",
        "classica",
        "append",
        "y",
        "np",
        "savetxt",
        "format",
        "nq",
        "nl",
        "Noise",
        "lr",
        "classica",
        "classica",
        "i",
        "N_model",
        "model2",
        "nq",
        "nl",
        "n_LSTM",
        "noise",
        "Noise",
        "train",
        "net",
        "nq",
        "nl",
        "lr",
        "epochs",
        "i",
        "hibrido_1",
        "append",
        "z",
        "np",
        "savetxt",
        "format",
        "nq",
        "nl",
        "Noise",
        "lr",
        "hibrido_1",
        "hibrido_1",
        "sigma",
        "SIGMA",
        "i",
        "N_model",
        "model2",
        "nq",
        "nl",
        "n_LSTM",
        "sigma",
        "m",
        "pi",
        "sigma",
        "noise",
        "Noise",
        "train",
        "net",
        "nq",
        "nl",
        "lr",
        "epochs",
        "i",
        "sigma",
        "hibrido_2",
        "append",
        "z1",
        "np",
        "savetxt",
        "format",
        "nq",
        "nl",
        "Noise",
        "lr",
        "sigma",
        "hibrido_2",
        "hibrido_2"
    ],
    "literals": [
        "'u1'",
        "'u2'",
        "'u3'",
        "'imput{}'",
        "'theta{}'",
        "f\" Model: {Nmodel+1} nq:{nq} nl:{nl} {optim_name} lr: {lr} sigma: pi/{sigma}   \"",
        "'--------------------------------------- Noise = {} ------------------------------'",
        "'./data_nq_{}_nl_{}_noise_{}'",
        "'./data_nq_{}_nl_{}_noise_{}'",
        "'GRAD'",
        "'./data_nq_{}_nl_{}_noise_{}/grad_lr_{}.txt'",
        "''",
        "''",
        "''",
        "'LL'",
        "'./data_nq_{}_nl_{}_noise_{}/lstm_grad_lr_{}.txt'",
        "''",
        "''",
        "''",
        "'LLES'",
        "'./data_nq_{}_nl_{}_noise_{}/lstm_es_lr_{}_sigma_pi_{}.txt'",
        "''",
        "''",
        "''"
    ],
    "variables": [
        "nq",
        "nl",
        "shot",
        "noise_model",
        "gamma",
        "error",
        "backend",
        "imput",
        "theta",
        "q",
        "c",
        "qc",
        "d1",
        "d",
        "d",
        "imput",
        "theta",
        "params1",
        "transpiled_circ",
        "qobj",
        "job",
        "re",
        "prob",
        "H",
        "soma",
        "quantumcircuit",
        "result",
        "n_qubit",
        "layer",
        "sigma",
        "forward_tensor",
        "imput1",
        "theta1",
        "theta1",
        "sigma",
        "l",
        "media1",
        "soma1",
        "mm1",
        "w1",
        "xi1",
        "d0",
        "xi11",
        "d1",
        "dd",
        "media1",
        "media1",
        "result",
        "result",
        "quantumcircuit",
        "exp_value",
        "result",
        "nq",
        "nl",
        "forward_tensor",
        "imput1",
        "theta1",
        "input_numbers",
        "gradients",
        "shift_right",
        "shift_right",
        "k",
        "shift_left",
        "shift_left",
        "k",
        "expectation_right",
        "expectation_left",
        "gradient",
        "gradients",
        "quantum_circuit",
        "alfa",
        "quantum_circuit",
        "NN",
        "sigma",
        "nq",
        "nl",
        "qlayer",
        "dn",
        "lstm",
        "init_loss",
        "init_hx",
        "init_cx",
        "soma",
        "hx",
        "new_Param",
        "Param",
        "new_Loss",
        "hx",
        "new_Param",
        "Param",
        "new_Loss",
        "optimizer",
        "data_hist",
        "tp",
        "x",
        "l",
        "NQ",
        "NL",
        "epochs",
        "N_model",
        "n_LSTM",
        "LR",
        "SIGMA",
        "classica",
        "net",
        "y",
        "hibrido_1",
        "net",
        "z",
        "hibrido_2",
        "net",
        "z1"
    ],
    "comments": [
        "Perform a noise simulation",
        "Taxa de amortecimento",
        "Criando o erro de amortecimento de amplitude para um qubit",
        "Adicionando o erro ao modelo de ruído para todos os gates u1, u2, u3",
        "",
        "",
        "derivada parametros da rede ############",
        "",
        "",
        "",
        "",
        "",
        "GRAD #################",
        "LL #################",
        "LLES #################"
    ],
    "docstrings": [],
    "functions": [
        "E",
        "run",
        "forward",
        "backward",
        "forward",
        "backward",
        "forward",
        "forward",
        "forward",
        "train"
    ],
    "classes": [
        "QuantumClass",
        "TorchCircuit_NES",
        "TorchCircuit",
        "model1",
        "Qlayer",
        "model2"
    ]
}