{
    "identifiers": [
        "AutoMapper",
        "Moq",
        "Xunit",
        "Threading",
        "Tasks",
        "WebApi",
        "DataAccessLayer",
        "Models",
        "WebApi",
        "DataAccessLayer",
        "Repositories",
        "Interfaces",
        "WebApi",
        "ServiceLayer",
        "DTOs",
        "WebApi",
        "ServiceLayer",
        "WebApiTestProject",
        "ServiceLayerTests",
        "Mock",
        "IBookRepository",
        "Mock",
        "IMapper",
        "_mockRepo",
        "Mock",
        "IBookRepository",
        "_mockMapper",
        "Mock",
        "IMapper",
        "_service",
        "BookService",
        "_mockRepo",
        "_mockMapper",
        "Fact",
        "Book",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "BookDto",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "_mockRepo",
        "Setup",
        "x",
        "GetBookByIdAsync",
        "ReturnsAsync",
        "book",
        "_mockMapper",
        "Setup",
        "x",
        "BookDto",
        "book",
        "Returns",
        "bookDto",
        "_service",
        "GetBookByIdAsync",
        "Assert",
        "NotNull",
        "result",
        "Assert",
        "Equal",
        "result",
        "Title",
        "_mockRepo",
        "Verify",
        "x",
        "GetBookByIdAsync",
        "Times",
        "Once",
        "Fact",
        "Review",
        "Review",
        "Id",
        "UserId",
        "BookId",
        "Rating",
        "ReviewText",
        "ReviewDto",
        "ReviewDto",
        "Id",
        "UserId",
        "BookId",
        "Rating",
        "ReviewText",
        "_mockRepo",
        "Setup",
        "x",
        "GetReviewsByBookId",
        "ReturnsAsync",
        "reviews",
        "_mockMapper",
        "Setup",
        "x",
        "ReviewDto",
        "reviews",
        "Returns",
        "reviewDtos",
        "_service",
        "GetReviewsByBookId",
        "Assert",
        "NotNull",
        "result",
        "Assert",
        "Single",
        "result",
        "_mockRepo",
        "Verify",
        "x",
        "GetReviewsByBookId",
        "Times",
        "Once",
        "Fact",
        "AddBookDto",
        "Title",
        "Author",
        "PublicationYear",
        "Book",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "BookDto",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "_mockMapper",
        "Setup",
        "m",
        "Book",
        "addBookDto",
        "Returns",
        "book",
        "_mockMapper",
        "Setup",
        "m",
        "BookDto",
        "book",
        "Returns",
        "bookDto",
        "_mockRepo",
        "Setup",
        "r",
        "AddBookAsync",
        "book",
        "Returns",
        "CompletedTask",
        "_service",
        "AddBookAsync",
        "addBookDto",
        "Assert",
        "NotNull",
        "result",
        "Assert",
        "Equal",
        "result",
        "Title",
        "Fact",
        "Book",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "UpdateBookDto",
        "Title",
        "Author",
        "PublicationYear",
        "BookDto",
        "Id",
        "Title",
        "Author",
        "PublicationYear",
        "_mockRepo",
        "Setup",
        "x",
        "GetBookByIdAsync",
        "ReturnsAsync",
        "book",
        "_mockRepo",
        "Setup",
        "x",
        "UpdateBookAsync",
        "book",
        "Returns",
        "CompletedTask",
        "_mockMapper",
        "Setup",
        "x",
        "updateBookDto",
        "book",
        "Returns",
        "book",
        "_mockMapper",
        "Setup",
        "x",
        "BookDto",
        "book",
        "Returns",
        "updatedBookDto",
        "_service",
        "UpdateBookAsync",
        "updateBookDto",
        "Assert",
        "NotNull",
        "result",
        "Assert",
        "Equal",
        "result",
        "Title",
        "_mockRepo",
        "Verify",
        "x",
        "UpdateBookAsync",
        "book",
        "Times",
        "Once",
        "Fact",
        "_mockRepo",
        "Setup",
        "x",
        "DeleteBookAsync",
        "ReturnsAsync",
        "_service",
        "DeleteBookAsync",
        "Assert",
        "result",
        "_mockRepo",
        "Verify",
        "x",
        "DeleteBookAsync",
        "Times",
        "Once"
    ],
    "literals": [
        "\"Sample Book\"",
        "\"Author\"",
        "\"Sample Book\"",
        "\"Author\"",
        "\"Sample Book\"",
        "\"Great!\"",
        "\"1\"",
        "\"Great!\"",
        "\"New Book\"",
        "\"New Author\"",
        "\"New Book\"",
        "\"New Author\"",
        "\"New Book\"",
        "\"New Author\"",
        "\"New Book\"",
        "\"Old Title\"",
        "\"Author\"",
        "\"Updated Title\"",
        "\"Author\"",
        "\"Updated Title\"",
        "\"Author\"",
        "\"Updated Title\""
    ],
    "variables": [
        "_mockRepo",
        "_mockMapper",
        "BookService",
        "_service",
        "book",
        "bookDto",
        "result",
        "reviews",
        "reviewDtos",
        "result",
        "addBookDto",
        "book",
        "bookDto",
        "result",
        "book",
        "updateBookDto",
        "updatedBookDto",
        "result",
        "result"
    ],
    "comments": [
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "BookServiceTest",
        "GetBookByIdAsync_ReturnsBookDto_WhenBookExists",
        "GetReviewsByBookId_ReturnsReviewDtos_WhenReviewsExist",
        "AddBookAsync_ReturnsBookDto_WhenBookIsAdded",
        "UpdateBookAsync_ReturnsUpdatedBookDto_WhenBookExists",
        "DeleteBookAsync_ReturnsTrue_WhenBookDeleted"
    ],
    "classes": [
        "BookServiceTest"
    ]
}