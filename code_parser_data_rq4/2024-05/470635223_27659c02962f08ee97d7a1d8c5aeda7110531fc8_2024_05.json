{
    "identifiers": [
        "Linq",
        "Newtonsoft",
        "Json",
        "Linq",
        "Xrpl",
        "BinaryCodec",
        "Binary",
        "Xrpl",
        "BinaryCodec",
        "Util",
        "Xrpl",
        "BinaryCodec",
        "Types",
        "BytesList",
        "Put",
        "Buffer",
        "ToBytes",
        "ToHex",
        "Buffer",
        "Buffer",
        "BytesList",
        "ToBytesSink",
        "bl",
        "bl",
        "ToBytes",
        "ToHex",
        "ToHex",
        "SerializedType",
        "other",
        "CompareTo",
        "other",
        "other",
        "CompareTo",
        "other",
        "other",
        "CompareTo",
        "other",
        "other",
        "CompareTo",
        "other",
        "other",
        "CompareTo",
        "other",
        "other",
        "ToString",
        "other",
        "ToString",
        "ISerializedType",
        "IBytesSink",
        "sink",
        "ISerializedType",
        "st",
        "BytesList",
        "st",
        "ToBytes",
        "BytesHex",
        "ISerializedType",
        "st",
        "BytesList",
        "st",
        "ToBytes",
        "RawList",
        "Aggregate",
        "a",
        "b",
        "a",
        "B16",
        "Encode",
        "b"
    ],
    "literals": [
        "\"\""
    ],
    "variables": [
        "Buffer",
        "bl",
        "BytesList",
        "BytesList"
    ],
    "comments": [
        "public SerializedType(byte[] buffer)",
        "{",
        "this.Buffer = buffer ?? new byte[0];",
        "}",
        "public static SerializedType FromParser(BinaryParser parser, int? hint = null)",
        "{",
        "throw new Exception(\"fromParser not implemented\");",
        "//return FromParser(parser, hint);",
        "}",
        "public static SerializedType From(SerializedType value)",
        "{",
        "throw new Exception(\"from not implemented\");",
        "//return From(value);",
        "}",
        "public Comparable(byte[] bytes) : base(bytes) {}",
        "<param name=\"sink\"> bytes Sink container</param>",
        "<param name=\"st\">Serialized type</param>",
        "<returns></returns>"
    ],
    "docstrings": [
        "<summary> to bytes Sink </summary>",
        "<summary> Get the JSON representation of this type </summary>",
        "<summary> extension for ISerializedType </summary>",
        "<summary> object to hex string </summary>"
    ],
    "functions": [
        "ToBytesSink",
        "ToHex",
        "ToBytes",
        "ToJson",
        "ToString",
        "Lt",
        "Eq",
        "Gt",
        "Gte",
        "Lte",
        "CompareTo",
        "ToBytes",
        "JToken",
        "ToJson",
        "ToHex",
        "ToDebuggedHex"
    ],
    "classes": [
        "SerializedType",
        "StExtensions"
    ]
}