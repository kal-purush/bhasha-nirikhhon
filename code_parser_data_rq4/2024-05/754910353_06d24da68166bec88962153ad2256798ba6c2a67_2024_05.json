{
    "identifiers": [
        "globalAxios",
        "AxiosInstance",
        "isAxiosError",
        "dayjs",
        "userAgentParser",
        "delay",
        "TypesGen",
        "getMissingParameters",
        "oldBuildParameters",
        "TypesGen",
        "newBuildParameters",
        "TypesGen",
        "templateParameters",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "templateParameters",
        "p",
        "p",
        "p",
        "p",
        "isMutableAndRequired",
        "isImmutable",
        "requiredParameters",
        "p",
        "parameter",
        "requiredParameters",
        "newBuildParameters",
        "p",
        "p",
        "parameter",
        "buildParameter",
        "buildParameter",
        "oldBuildParameters",
        "p",
        "p",
        "parameter",
        "buildParameter",
        "missingParameters",
        "parameter",
        "templateParameters",
        "templateParameter",
        "templateParameter",
        "newBuildParameters",
        "p",
        "p",
        "templateParameter",
        "buildParameter",
        "buildParameter",
        "oldBuildParameters",
        "p",
        "p",
        "templateParameter",
        "buildParameter",
        "templateParameter",
        "option",
        "option",
        "buildParameter",
        "matchingOption",
        "missingParameters",
        "templateParameter",
        "missingParameters",
        "watchAgentMetadata",
        "agentId",
        "EventSource",
        "location",
        "location",
        "agentId",
        "watchWorkspace",
        "workspaceId",
        "EventSource",
        "location",
        "location",
        "workspaceId",
        "getURLWithSearchParams",
        "basePath",
        "options",
        "options",
        "basePath",
        "URLSearchParams",
        "options",
        "keys",
        "key",
        "options",
        "key",
        "value",
        "value",
        "searchParams",
        "key",
        "value",
        "searchParams",
        "searchString",
        "basePath",
        "searchString",
        "basePath",
        "withDefaultFeatures",
        "fs",
        "TypesGen",
        "TypesGen",
        "feature",
        "TypesGen",
        "fs",
        "feature",
        "fs",
        "feature",
        "fs",
        "TypesGen",
        "log",
        "TypesGen",
        "error",
        "watchBuildLogsByTemplateVersionId",
        "versionId",
        "URLSearchParams",
        "after",
        "searchParams",
        "after",
        "location",
        "WebSocket",
        "proto",
        "location",
        "versionId",
        "searchParams",
        "socket",
        "socket",
        "onMessage",
        "TypesGen",
        "socket",
        "onError",
        "socket",
        "socket",
        "onDone",
        "socket",
        "watchWorkspaceAgentLogs",
        "agentId",
        "userAgentParser",
        "navigator",
        "location",
        "WebSocket",
        "proto",
        "location",
        "agentId",
        "after",
        "noCompression",
        "socket",
        "socket",
        "TypesGen",
        "onMessage",
        "logs",
        "socket",
        "onError",
        "socket",
        "onDone",
        "socket",
        "logs",
        "TypesGen",
        "error",
        "log",
        "TypesGen",
        "error",
        "watchBuildLogsByBuildId",
        "buildId",
        "URLSearchParams",
        "after",
        "searchParams",
        "after",
        "location",
        "WebSocket",
        "proto",
        "location",
        "buildId",
        "searchParams",
        "socket",
        "socket",
        "onMessage",
        "TypesGen",
        "socket",
        "onError",
        "socket",
        "socket",
        "onDone",
        "socket",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "parameters",
        "TypesGen",
        "versionId",
        "parameters",
        "versionId",
        "axios",
        "email",
        "password",
        "TypesGen",
        "TypesGen",
        "payload",
        "BASE_CONTENT_TYPE_JSON",
        "response",
        "request",
        "TypesGen",
        "TypesGen",
        "request",
        "response",
        "TypesGen",
        "response",
        "templateID",
        "TypesGen",
        "templateID",
        "response",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "response",
        "keyId",
        "keyId",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "response",
        "options",
        "TypesGen",
        "signal",
        "TypesGen",
        "getURLWithSearchParams",
        "options",
        "TypesGen",
        "url",
        "response",
        "organizationId",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "response",
        "TypesGen",
        "TypesGen",
        "response",
        "templateId",
        "TypesGen",
        "TypesGen",
        "templateId",
        "response",
        "organizationId",
        "options",
        "TypesGen",
        "options",
        "options",
        "TypesGen",
        "organizationId",
        "response",
        "organizationId",
        "name",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "name",
        "response",
        "versionId",
        "TypesGen",
        "TypesGen",
        "versionId",
        "response",
        "versionId",
        "TypesGen",
        "TypesGen",
        "versionId",
        "response",
        "versionId",
        "TypesGen",
        "TypesGen",
        "versionId",
        "response",
        "templateId",
        "TypesGen",
        "TypesGen",
        "templateId",
        "response",
        "organizationId",
        "templateName",
        "versionName",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "templateName",
        "versionName",
        "response",
        "organizationId",
        "templateName",
        "versionName",
        "TypesGen",
        "organizationId",
        "templateName",
        "versionName",
        "response",
        "error",
        "isAxiosError",
        "error",
        "error",
        "error",
        "is404",
        "error",
        "organizationId",
        "data",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "data",
        "response",
        "versionId",
        "TypesGen",
        "versionId",
        "response",
        "versionId",
        "TypesGen",
        "versionId",
        "response",
        "organizationId",
        "data",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "data",
        "response",
        "templateId",
        "data",
        "TypesGen",
        "TypesGen",
        "templateId",
        "data",
        "response",
        "templateVersionId",
        "data",
        "TypesGen",
        "TypesGen",
        "templateVersionId",
        "data",
        "response",
        "templateVersionId",
        "TypesGen",
        "templateVersionId",
        "response",
        "templateVersionId",
        "TypesGen",
        "templateVersionId",
        "response",
        "templateId",
        "data",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "templateId",
        "data",
        "response",
        "response",
        "templateId",
        "TypesGen",
        "TypesGen",
        "templateId",
        "response",
        "workspaceId",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "workspaceId",
        "response",
        "options",
        "TypesGen",
        "TypesGen",
        "getURLWithSearchParams",
        "options",
        "TypesGen",
        "url",
        "response",
        "username",
        "workspaceName",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "username",
        "workspaceName",
        "response",
        "username",
        "workspaceName",
        "buildNumber",
        "TypesGen",
        "TypesGen",
        "username",
        "workspaceName",
        "buildNumber",
        "response",
        "build",
        "TypesGen",
        "TypesGen",
        "res",
        "reject",
        "TypesGen",
        "status",
        "latestJobInfo",
        "status",
        "build",
        "build",
        "build",
        "latestJobInfo",
        "job",
        "latestJobInfo",
        "reject",
        "latestJobInfo",
        "delay",
        "res",
        "latestJobInfo",
        "workspaceId",
        "data",
        "TypesGen",
        "TypesGen",
        "workspaceId",
        "data",
        "response",
        "workspaceId",
        "templateVersionId",
        "logLevel",
        "TypesGen",
        "buildParameters",
        "TypesGen",
        "workspaceId",
        "templateVersionId",
        "logLevel",
        "buildParameters",
        "workspaceId",
        "logLevel",
        "TypesGen",
        "workspaceId",
        "logLevel",
        "workspaceId",
        "options",
        "workspaceId",
        "options",
        "workspaceBuildId",
        "TypesGen",
        "TypesGen",
        "workspaceBuildId",
        "response",
        "workspaceId",
        "dormant",
        "TypesGen",
        "TypesGen",
        "workspaceId",
        "data",
        "response",
        "workspaceId",
        "automaticUpdates",
        "TypesGen",
        "TypesGen",
        "automaticUpdates",
        "workspaceId",
        "req",
        "response",
        "workspace",
        "stopBuild",
        "awaitedStopBuild",
        "workspace",
        "workspace",
        "buildParameters",
        "startBuild",
        "templateVersionId",
        "TypesGen",
        "TypesGen",
        "templateVersionId",
        "response",
        "user",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "user",
        "response",
        "organizationId",
        "userId",
        "workspace",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "userId",
        "workspace",
        "response",
        "workspaceId",
        "data",
        "TypesGen",
        "workspaceId",
        "data",
        "TypesGen",
        "response",
        "TypesGen",
        "response",
        "workspaceID",
        "autostart",
        "TypesGen",
        "autostart",
        "workspaceID",
        "payload",
        "BASE_CONTENT_TYPE_JSON",
        "workspaceID",
        "ttl",
        "TypesGen",
        "ttl",
        "workspaceID",
        "payload",
        "BASE_CONTENT_TYPE_JSON",
        "userId",
        "data",
        "TypesGen",
        "TypesGen",
        "userId",
        "data",
        "response",
        "userId",
        "data",
        "TypesGen",
        "TypesGen",
        "userId",
        "data",
        "response",
        "userId",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "userId",
        "TypesGen",
        "data",
        "TypesGen",
        "TypesGen",
        "userId",
        "data",
        "response",
        "userId",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "userId",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "userId",
        "TypesGen",
        "userId",
        "error",
        "isAxiosError",
        "error",
        "error",
        "error",
        "req",
        "TypesGen",
        "TypesGen",
        "req",
        "response",
        "userId",
        "TypesGen",
        "updatePassword",
        "TypesGen",
        "userId",
        "updatePassword",
        "TypesGen",
        "TypesGen",
        "response",
        "roles",
        "TypesGen",
        "userId",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "userId",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "userId",
        "TypesGen",
        "TypesGen",
        "userId",
        "response",
        "workspaceId",
        "req",
        "TypesGen",
        "TypesGen",
        "getURLWithSearchParams",
        "workspaceId",
        "req",
        "response",
        "buildId",
        "before",
        "TypesGen",
        "TypesGen",
        "buildId",
        "before",
        "response",
        "agentID",
        "TypesGen",
        "TypesGen",
        "agentID",
        "response",
        "workspaceId",
        "newDeadline",
        "dayjs",
        "workspaceId",
        "newDeadline",
        "TypesGen",
        "TypesGen",
        "response",
        "ex",
        "isAxiosError",
        "ex",
        "ex",
        "withDefaultFeatures",
        "ex",
        "TypesGen",
        "TypesGen",
        "response",
        "error",
        "isAxiosError",
        "error",
        "error",
        "error",
        "TypesGen",
        "response",
        "error",
        "isAxiosError",
        "error",
        "error",
        "error",
        "provider",
        "TypesGen",
        "provider",
        "res",
        "provider",
        "TypesGen",
        "provider",
        "resp",
        "provider",
        "req",
        "TypesGen",
        "provider",
        "req",
        "resp",
        "TypesGen",
        "resp",
        "provider",
        "provider",
        "resp",
        "TypesGen",
        "TypesGen",
        "URLSearchParams",
        "resp",
        "id",
        "TypesGen",
        "id",
        "resp",
        "data",
        "TypesGen",
        "TypesGen",
        "data",
        "response",
        "id",
        "data",
        "TypesGen",
        "TypesGen",
        "id",
        "data",
        "response",
        "id",
        "id",
        "id",
        "TypesGen",
        "id",
        "resp",
        "id",
        "TypesGen",
        "id",
        "resp",
        "appId",
        "secretId",
        "appId",
        "secretId",
        "appId",
        "appId",
        "options",
        "TypesGen",
        "TypesGen",
        "getURLWithSearchParams",
        "options",
        "url",
        "response",
        "templateId",
        "TypesGen",
        "templateId",
        "response",
        "offset",
        "TypesGen",
        "offset",
        "response",
        "templateId",
        "options",
        "TypesGen",
        "TypesGen",
        "getURLWithSearchParams",
        "templateId",
        "options",
        "url",
        "response",
        "templateId",
        "TypesGen",
        "templateId",
        "response",
        "templateId",
        "data",
        "TypesGen",
        "templateId",
        "data",
        "response",
        "TypesGen",
        "response",
        "organizationId",
        "TypesGen",
        "organizationId",
        "response",
        "organizationId",
        "data",
        "TypesGen",
        "TypesGen",
        "organizationId",
        "data",
        "response",
        "groupId",
        "TypesGen",
        "groupId",
        "response",
        "groupId",
        "data",
        "TypesGen",
        "TypesGen",
        "groupId",
        "data",
        "response",
        "groupId",
        "userId",
        "groupId",
        "userId",
        "groupId",
        "userId",
        "groupId",
        "userId",
        "groupId",
        "groupId",
        "username",
        "TypesGen",
        "encodeURIComponent",
        "username",
        "response",
        "agentID",
        "TypesGen",
        "agentID",
        "response",
        "workspaceID",
        "TypesGen",
        "workspaceID",
        "response",
        "workspaceID",
        "req",
        "TypesGen",
        "TypesGen",
        "workspaceID",
        "req",
        "response",
        "workspaceID",
        "req",
        "TypesGen",
        "TypesGen",
        "workspaceID",
        "req",
        "response",
        "TypesGen",
        "response",
        "TypesGen",
        "response",
        "TypesGen",
        "response",
        "TypesGen",
        "response",
        "fileId",
        "fileId",
        "response",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "response",
        "b",
        "TypesGen",
        "TypesGen",
        "b",
        "response",
        "TypesGen",
        "response",
        "ex",
        "isAxiosError",
        "ex",
        "ex",
        "ex",
        "b",
        "TypesGen",
        "TypesGen",
        "b",
        "response",
        "organizationId",
        "TypesGen",
        "organizationId",
        "response",
        "file",
        "TypesGen",
        "file",
        "response",
        "versionId",
        "TypesGen",
        "TypesGen",
        "versionId",
        "response",
        "workspace",
        "TypesGen",
        "TypesGen",
        "workspace",
        "workspace",
        "template",
        "workspaceBuildId",
        "TypesGen",
        "TypesGen",
        "TypesGen",
        "workspaceBuildId",
        "response",
        "response",
        "data",
        "TypesGen",
        "TypesGen",
        "data",
        "response",
        "licenseId",
        "licenseId",
        "workspace",
        "TypesGen",
        "templateVersionId",
        "newBuildParameters",
        "TypesGen",
        "TypesGen",
        "workspace",
        "templateVersionId",
        "getMissingParameters",
        "currentBuildParameters",
        "newBuildParameters",
        "templateParameters",
        "missingParameters",
        "MissingBuildParameters",
        "missingParameters",
        "templateVersionId",
        "workspace",
        "templateVersionId",
        "newBuildParameters",
        "workspace",
        "TypesGen",
        "newBuildParameters",
        "TypesGen",
        "TypesGen",
        "workspace",
        "workspace",
        "template",
        "activeVersionId",
        "getMissingParameters",
        "oldBuildParameters",
        "newBuildParameters",
        "templateParameters",
        "missingParameters",
        "MissingBuildParameters",
        "missingParameters",
        "activeVersionId",
        "workspace",
        "activeVersionId",
        "newBuildParameters",
        "workspaceId",
        "TypesGen",
        "workspaceId",
        "response",
        "TypesGen",
        "TypesGen",
        "response",
        "workspace",
        "TypesGen",
        "workspace",
        "latestBuild",
        "latestBuild",
        "filters",
        "TypesGen",
        "URLSearchParams",
        "filters",
        "response",
        "filters",
        "TypesGen",
        "URLSearchParams",
        "filters",
        "response",
        "TypesGen",
        "URLSearchParams",
        "searchParams",
        "response",
        "force",
        "URLSearchParams",
        "force",
        "TypesGen",
        "response",
        "TypesGen",
        "TypesGen",
        "res",
        "data",
        "TypesGen",
        "TypesGen",
        "data",
        "response",
        "workspaceID",
        "workspaceID",
        "workspaceID",
        "workspaceID",
        "options",
        "URLSearchParams",
        "options",
        "options",
        "TypesGen",
        "searchParams",
        "res",
        "error",
        "isAxiosError",
        "error",
        "error",
        "error",
        "globalAxios",
        "instance",
        "status",
        "status",
        "status",
        "status",
        "tokenMetadataElement",
        "tokenMetadataElement",
        "metadataIsAvailable",
        "process",
        "instance",
        "csrfToken",
        "instance",
        "csrfToken",
        "tokenMetadataElement",
        "csrfToken",
        "instance",
        "tokenMetadataElement",
        "process",
        "instance",
        "token",
        "host",
        "ApiMethods",
        "getConfiguredAxiosInstance",
        "scopedAxiosInstance",
        "csrfToken",
        "token",
        "token",
        "host",
        "host",
        "Api"
    ],
    "literals": [
        "'axios'",
        "'dayjs'",
        "'ua-parser-js'",
        "'../utils/delay'",
        "'./typesGenerated'",
        "string",
        "${location.protocol}//${location.host}/api/v2/workspaceagents/${agentId}/watch-metadata",
        "string",
        "${location.protocol}//${location.host}/api/v2/workspaces/${workspaceId}/watch",
        "string",
        "string",
        "''",
        "${basePath}?${searchString}",
        "'features'",
        "'features'",
        "'not_entitled'",
        "'features'",
        "string",
        "'true'",
        "'after'",
        "'https:'",
        "'wss:'",
        "'ws:'",
        "${proto}//${\n      location.host\n    }/api/v2/templateversions/${versionId}/logs?${searchParams.toString()}",
        "'blob'",
        "'message'",
        "'error'",
        "'Connection for logs failed.'",
        "'close'",
        "string",
        "'Safari'",
        "'&no_compression'",
        "''",
        "'https:'",
        "'wss:'",
        "'ws:'",
        "${proto}//${location.host}/api/v2/workspaceagents/${agentId}/logs?follow&after=${after}${noCompression}",
        "'blob'",
        "'message'",
        "'error'",
        "'socket errored'",
        "'close'",
        "string",
        "'true'",
        "'after'",
        "'https:'",
        "'wss:'",
        "'ws:'",
        "${proto}//${\n      location.host\n    }/api/v2/workspacebuilds/${buildId}/logs?${searchParams.toString()}",
        "'blob'",
        "'message'",
        "'error'",
        "'Connection for logs failed.'",
        "'close'",
        "'Content-Type'",
        "'application/json'",
        "string",
        "'log_level'",
        "'orphan'",
        "string",
        "string",
        "string",
        "'claims'",
        "string",
        "string",
        "string",
        "string",
        "'day'",
        "'week'",
        "string",
        "string",
        "string",
        "string",
        "'Missing build parameters.'",
        "string",
        "string",
        "'/api/v2/users/login'",
        "'/api/v2/users/me/convert-login'",
        "'/api/v2/users/logout'",
        "'/api/v2/users/me'",
        "string",
        "/api/v2/users/me/autofill-parameters?template_id=${templateID}",
        "'/api/v2/users/authmethods'",
        "'/api/v2/users/me/login-type'",
        "/api/v2/authcheck",
        "'/api/v2/users/me/keys'",
        "/api/v2/users/me/keys/tokens",
        "string",
        "/api/v2/users/me/keys/${keyId}",
        "/api/v2/users/me/keys/tokens",
        "'/api/v2/users/me/keys/tokens/tokenconfig'",
        "'/api/v2/users'",
        "string",
        "/api/v2/organizations/${organizationId}",
        "'/api/v2/users/me/organizations'",
        "string",
        "/api/v2/templates/${templateId}",
        "string",
        "string",
        "string",
        "/api/v2/organizations/${organizationId}/templates",
        "string",
        "string",
        "/api/v2/organizations/${organizationId}/templates/${name}",
        "string",
        "/api/v2/templateversions/${versionId}",
        "string",
        "/api/v2/templateversions/${versionId}/resources",
        "string",
        "/api/v2/templateversions/${versionId}/variables",
        "string",
        "/api/v2/templates/${templateId}/versions",
        "string",
        "string",
        "string",
        "/api/v2/organizations/${organizationId}/templates/${templateName}/versions/${versionName}",
        "string",
        "string",
        "string",
        "/api/v2/organizations/${organizationId}/templates/${templateName}/versions/${versionName}/previous",
        "string",
        "/api/v2/organizations/${organizationId}/templateversions",
        "string",
        "/api/v2/templateversions/${versionId}/external-auth",
        "string",
        "/api/v2/templateversions/${versionId}/rich-parameters",
        "string",
        "/api/v2/organizations/${organizationId}/templates",
        "string",
        "/api/v2/templates/${templateId}/versions",
        "string",
        "/api/v2/templateversions/${templateVersionId}",
        "string",
        "/api/v2/templateversions/${templateVersionId}/archive",
        "string",
        "/api/v2/templateversions/${templateVersionId}/unarchive",
        "string",
        "/api/v2/templates/${templateId}",
        "string",
        "/api/v2/templates/${templateId}",
        "string",
        "/api/v2/workspaces/${workspaceId}",
        "'/api/v2/workspaces'",
        "'me'",
        "string",
        "/api/v2/users/${username}/workspace/${workspaceName}",
        "'me'",
        "string",
        "/api/v2/users/${username}/workspace/${workspaceName}/builds/${buildNumber}",
        "'succeeded'",
        "'canceled'",
        "'failed'",
        "string",
        "/api/v2/workspaces/${workspaceId}/builds",
        "string",
        "string",
        "'start'",
        "string",
        "'stop'",
        "string",
        "'delete'",
        "'id'",
        "/api/v2/workspacebuilds/${workspaceBuildId}/cancel",
        "string",
        "/api/v2/workspaces/${workspaceId}/dormant",
        "string",
        "/api/v2/workspaces/${workspaceId}/autoupdates",
        "'canceled'",
        "'id'",
        "/api/v2/templateversions/${templateVersionId}/cancel",
        "'/api/v2/users'",
        "string",
        "'me'",
        "/api/v2/organizations/${organizationId}/members/${userId}/workspaces",
        "string",
        "/api/v2/workspaces/${workspaceId}",
        "'/api/v2/buildinfo'",
        "'/api/v2/updatecheck'",
        "string",
        "/api/v2/workspaces/${workspaceID}/autostart",
        "string",
        "/api/v2/workspaces/${workspaceID}/ttl",
        "string",
        "/api/v2/users/${userId}/profile",
        "string",
        "/api/v2/users/${userId}/appearance",
        "'id'",
        "/api/v2/users/${userId}/quiet-hours",
        "'id'",
        "/api/v2/users/${userId}/quiet-hours",
        "'id'",
        "/api/v2/users/${userId}/status/activate",
        "'id'",
        "/api/v2/users/${userId}/status/suspend",
        "'id'",
        "/api/v2/users/${userId}",
        "'/api/v2/users/first'",
        "/api/v2/users/first",
        "'id'",
        "/api/v2/users/${userId}/password",
        "/api/v2/users/roles",
        "'name'",
        "'id'",
        "/api/v2/users/${userId}/roles",
        "'me'",
        "/api/v2/users/${userId}/gitsshkey",
        "'me'",
        "/api/v2/users/${userId}/gitsshkey",
        "string",
        "/api/v2/workspaces/${workspaceId}/builds",
        "string",
        "/api/v2/workspacebuilds/${buildId}/logs?before=${before.getTime()}",
        "string",
        "/api/v2/workspaceagents/${agentID}/logs",
        "string",
        "/api/v2/workspaces/${workspaceId}/extend",
        "'/api/v2/licenses/refresh-entitlements'",
        "'/api/v2/entitlements'",
        "''",
        "'/api/v2/experiments'",
        "'/api/v2/experiments/available'",
        "string",
        "/api/v2/external-auth/${provider}",
        "string",
        "/api/v2/external-auth/${provider}/device",
        "string",
        "/api/v2/external-auth/${provider}/device",
        "/api/v2/external-auth",
        "string",
        "string",
        "/api/v2/external-auth/${provider}",
        "''",
        "/api/v2/oauth2-provider/apps?${params}",
        "string",
        "/api/v2/oauth2-provider/apps/${id}",
        "/api/v2/oauth2-provider/apps",
        "string",
        "/api/v2/oauth2-provider/apps/${id}",
        "string",
        "/api/v2/oauth2-provider/apps/${id}",
        "string",
        "/api/v2/oauth2-provider/apps/${id}/secrets",
        "string",
        "/api/v2/oauth2-provider/apps/${id}/secrets",
        "string",
        "string",
        "/api/v2/oauth2-provider/apps/${appId}/secrets/${secretId}",
        "string",
        "/oauth2/tokens?client_id=${appId}",
        "'/api/v2/audit'",
        "string",
        "/api/v2/templates/${templateId}/daus",
        "/api/v2/insights/daus?tz_offset=${offset}",
        "string",
        "/api/v2/templates/${templateId}/acl/available",
        "string",
        "/api/v2/templates/${templateId}/acl",
        "string",
        "string",
        "/api/v2/templates/${templateId}/acl",
        "/api/v2/applications/host",
        "string",
        "/api/v2/organizations/${organizationId}/groups",
        "string",
        "/api/v2/organizations/${organizationId}/groups",
        "string",
        "/api/v2/groups/${groupId}",
        "string",
        "/api/v2/groups/${groupId}",
        "string",
        "string",
        "''",
        "string",
        "string",
        "''",
        "''",
        "string",
        "/api/v2/groups/${groupId}",
        "string",
        "/api/v2/workspace-quota/${encodeURIComponent(username)}",
        "string",
        "/api/v2/workspaceagents/${agentID}/listening-ports",
        "string",
        "/api/v2/workspaces/${workspaceID}/port-share",
        "string",
        "/api/v2/workspaces/${workspaceID}/port-share",
        "string",
        "/api/v2/workspaces/${workspaceID}/port-share",
        "/api/v2/deployment/ssh",
        "/api/v2/deployment/config",
        "/api/v2/deployment/stats",
        "/api/v2/replicas",
        "string",
        "/api/v2/files/${fileId}",
        "'arraybuffer'",
        "/api/v2/regions",
        "/api/v2/workspaceproxies",
        "/api/v2/workspaceproxies",
        "/api/v2/appearance",
        "''",
        "''",
        "/api/v2/appearance",
        "string",
        "/api/v2/organizations/${organizationId}/templates/examples",
        "'/api/v2/files'",
        "'Content-Type'",
        "'application/x-tar'",
        "string",
        "/api/v2/templateversions/${versionId}/logs",
        "'id'",
        "/api/v2/workspacebuilds/${workspaceBuildId}/parameters",
        "/api/v2/licenses",
        "/api/v2/licenses",
        "/api/v2/licenses/${licenseId}",
        "string",
        "'start'",
        "'start'",
        "string",
        "/api/v2/workspaces/${workspaceId}/resolve-autostart",
        "'/api/v2/applications/reconnecting-pty-signed-token'",
        "/api/v2/insights/user-latency?${params}",
        "/api/v2/insights/user-activity?${params}",
        "/api/v2/insights/templates?${searchParams}",
        "/api/v2/debug/health?${params}",
        "/api/v2/debug/health/settings",
        "/api/v2/debug/health/settings",
        "string",
        "/api/v2/workspaces/${workspaceID}/favorite",
        "string",
        "/api/v2/workspaces/${workspaceID}/favorite",
        "/api/v2/integrations/jfrog/xray-scan?${searchParams}",
        "'KNKvagCBEHZK7ihe2t7fj6VeJ0UyTDco1yVUJE8N06oNqxLu5Zx1vRxZbgfC0mJJgeGkVjgs08mgPbcWPBkZ1A=='",
        "'undefined'",
        "'meta[property=\"csrf-token\"]'",
        "'content'",
        "'development'",
        "'X-CSRF-TOKEN'",
        "'X-CSRF-TOKEN'",
        "'content'",
        "'X-CSRF-TOKEN'",
        "'content'",
        "''",
        "'CSRF token not found'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Coder-Session-Token'",
        "string"
    ],
    "variables": [
        "getMissingParameters",
        "missingParameters",
        "requiredParameters",
        "isMutableAndRequired",
        "isImmutable",
        "buildParameter",
        "buildParameter",
        "matchingOption",
        "watchAgentMetadata",
        "watchWorkspace",
        "getURLWithSearchParams",
        "searchParams",
        "keys",
        "value",
        "searchString",
        "withDefaultFeatures",
        "watchBuildLogsByTemplateVersionId",
        "searchParams",
        "proto",
        "socket",
        "watchWorkspaceAgentLogs",
        "noCompression",
        "proto",
        "socket",
        "logs",
        "watchBuildLogsByBuildId",
        "searchParams",
        "proto",
        "socket",
        "BASE_CONTENT_TYPE_JSON",
        "payload",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "url",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "is404",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "url",
        "response",
        "response",
        "response",
        "latestJobInfo",
        "response",
        "response",
        "data",
        "response",
        "req",
        "response",
        "stopBuild",
        "awaitedStopBuild",
        "startBuild",
        "response",
        "response",
        "response",
        "response",
        "response",
        "payload",
        "payload",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "res",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp",
        "response",
        "response",
        "resp",
        "resp",
        "url",
        "response",
        "response",
        "response",
        "url",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "response",
        "template",
        "response",
        "response",
        "response",
        "currentBuildParameters",
        "templateParameters",
        "missingParameters",
        "template",
        "oldBuildParameters",
        "activeVersionId",
        "templateParameters",
        "missingParameters",
        "response",
        "response",
        "latestBuild",
        "templateVersionRichParameters",
        "buildParameters",
        "response",
        "response",
        "searchParams",
        "response",
        "response",
        "res",
        "response",
        "searchParams",
        "res",
        "csrfToken",
        "tokenMetadataElement",
        "instance",
        "metadataIsAvailable",
        "scopedAxiosInstance",
        "API"
    ],
    "comments": [
        "It is mutable and required. Mutable values can be changed after so we",
        "don't need to ask them if they are not required.",
        "Is immutable, so we can check if it is its first time on the build",
        "Check if there is a new value",
        "If not, get the old one",
        "If there is a value from the new or old one, it is not missed",
        "Check if parameter \"options\" changed and we can't use old build parameters.",
        "Check if there is a new value",
        "If not, get the old one",
        "withDefaultFeatures sets all unspecified features to not_entitled and",
        "disabled.",
        "Skip fields that are already filled.",
        "When the socket closes, logs have finished streaming!",
        "WebSocket compression in Safari (confirmed in 16.5) is broken when",
        "the server sends large messages. The following error is seen:",
        "",
        "WebSocket connection to 'wss://.../logs?follow&after=0' failed: The operation couldn’t be completed. Protocol error",
        "",
        "When the socket closes, logs have finished streaming!",
        "This is the base header that is used for several requests. This is defined as",
        "a readonly value, but only copies of it should be passed into the API calls,",
        "because Axios is able to mutate the headers",
        "Just want to check if it isn't undefined. If it has",
        "a boolean value, convert it to a string and include",
        "it as a param.",
        "Defined as separate variable to avoid wonky Prettier formatting because",
        "the type definition is so long",
        "When there is no previous version, like the first version of a",
        "template, the API returns 404 so in this case we can safely return",
        "undefined",
        "On 304 response there is no data payload.",
        "eslint-disable-next-line no-loop-func -- Not great, but should be harmless",
        "If the restart is canceled halfway through, make sure we bail",
        "API definition:",
        "https://github.com/coder/coder/blob/db665e7261f3c24a272ccec48233a3e276878239/coderd/users.go#L33-L53",
        "If it is success, it is true",
        "If it returns a 404, it is false",
        "Default to user's local timezone.",
        "As /api/v2/insights/daus only accepts whole-number values for tz_offset",
        "we truncate the tz offset down to the closest hour.",
        "getDeploymentSSHConfig is used by the VSCode-Extension.",
        "Steps to change the workspace version\n   * - Get the latest template to access the latest active version\n   * - Get the current build parameters\n   * - Get the template parameters\n   * - Update the build parameters and check if there are missed parameters for\n   *   the new version\n   *   - If there are missing parameters raise an error\n   * - Create a build with the version and updated build parameters",
        "Steps to update the workspace\n   * - Get the latest template to access the latest active version\n   * - Get the current build parameters\n   * - Get the template parameters\n   * - Update the build parameters and check if there are missed parameters for\n   *   the newest version\n   *   - If there are missing parameters raise an error\n   * - Create a build with the latest version and updated build parameters",
        "react-query library does not allow undefined to be returned as a",
        "query result",
        "This is a hard coded CSRF token/cookie pair for local development. In prod,",
        "the GoLang webserver generates a random cookie with a new token for each",
        "document request. For local development, we don't use the Go webserver for",
        "static files, so this is the 'hack' to make local development work with",
        "remote apis. The CSRF cookie for this token is \"JXm9hOUdZctWt0ZZGAy9xiS/gxMKYOThdxjjMnMUyn4=\"",
        "Always attach CSRF token to all requests. In puppeteer the document is",
        "undefined. In those cases, just do nothing.",
        "Adds 304 for the default axios validateStatus function",
        "https://github.com/axios/axios#handling-errors Check status here",
        "https://httpstatusdogs.com/",
        "Development mode uses a hard-coded CSRF token",
        "Do not write error logs if we are in a FE unit test.",
        "eslint-disable-next-line no-console -- Function should never run in vendored version of SDK",
        "Other non-API methods defined here to make it a little easier to find them.",
        "As with ApiMethods, all public methods should be defined with arrow",
        "function syntax to ensure they can be passed around the React UI without",
        "losing/detaching their `this` context!"
    ],
    "docstrings": [
        "* @file Coder is starting to import the Coder API file into more and more\n * external projects, as a \"pseudo-SDK\". We are not at a stage where we are\n * ready to commit to maintaining a public SDK, but we need equivalent\n * functionality in other places.\n *\n * Message somebody from Team Blueberry if you need more context, but so far,\n * these projects are importing the file:\n *\n * - The Coder VS Code extension\n *   @see {@link https://github.com/coder/vscode-coder}\n * - The Coder Backstage plugin\n *   @see {@link https://github.com/coder/backstage-plugins}\n *\n * It is important that this file not do any aliased imports, or else the other\n * consumers could break (particularly for platforms that limit how much you can\n * touch their configuration files, like Backstage). Relative imports are still\n * safe, though.\n *\n * For example, `utils/delay` must be imported using `../utils/delay` instead.",
        "*\n * @param agentId\n * @returns An EventSource that emits agent metadata event objects\n * (ServerSentEvent)",
        "* @returns {EventSource} An EventSource that emits workspace event objects\n * (ServerSentEvent)",
        "* This is the container for all API methods. It's split off to make it more\n * clear where API methods should go, but it is eventually merged into the Api\n * class with a more flat hierarchy\n *\n * All public methods should be defined as arrow functions to ensure that they\n * can be passed around the React UI without losing their `this` context.\n *\n * This is one of the few cases where you have to worry about the difference\n * between traditional methods and arrow function properties. Arrow functions\n * disable JS's dynamic scope, and force all `this` references to resolve via\n * lexical scope."
    ],
    "functions": [
        "getConfiguredAxiosInstance"
    ],
    "classes": [
        "MissingBuildParameters",
        "ApiMethods",
        "Api"
    ]
}