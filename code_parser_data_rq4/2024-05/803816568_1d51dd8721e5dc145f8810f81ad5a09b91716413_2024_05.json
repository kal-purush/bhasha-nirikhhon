{
    "identifiers": [
        "Security",
        "Security",
        "Cryptography",
        "X509Certificates",
        "Collections",
        "Generic",
        "Management",
        "Automation",
        "Management",
        "Automation",
        "Runspaces",
        "Threading",
        "Tasks",
        "Microsoft",
        "Identity",
        "Client",
        "PSMSAL",
        "Cmdlet",
        "VerbsCommon",
        "Get",
        "DefaultParameterSetName",
        "OutputType",
        "Microsoft",
        "Identity",
        "Client",
        "AuthenticationResult",
        "PSCmdlet",
        "Parameter",
        "Mandatory",
        "ValueFromPipeline",
        "ValueFromPipelineByPropertyName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ValidateSet",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ParameterSetName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ParameterSetName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ParameterSetName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ParameterSetName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "ParameterSetName",
        "Parameter",
        "ValueFromPipelineByPropertyName",
        "WriteVerbose",
        "WriteVerbose",
        "ParameterSetName",
        "ParameterSetName",
        "StartsWith",
        "WriteVerbose",
        "PublicClientApplicationBuilder",
        "Create",
        "ClientId",
        "IsNullOrEmpty",
        "Authority",
        "WriteVerbose",
        "Authority",
        "ClientApplicationBuilder",
        "WithAuthority",
        "Microsoft",
        "Identity",
        "Client",
        "AadAuthorityAudience",
        "AzureAdMyOrg",
        "ClientApplicationBuilder",
        "WithAuthority",
        "Microsoft",
        "Identity",
        "Client",
        "AadAuthorityAudience",
        "AzureAdMultipleOrgs",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithRedirectUri",
        "RedirectUri",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithTenantId",
        "TenantId",
        "ClientApplicationBuilder",
        "Build",
        "ParameterSetName",
        "WriteVerbose",
        "Token",
        "ClientApplication",
        "AcquireTokenByUsernamePassword",
        "ScopeLists",
        "Credential",
        "UserName",
        "Credential",
        "Password",
        "ExecuteAsync",
        "Result",
        "ParameterSetName",
        "WriteVerbose",
        "Token",
        "ClientApplication",
        "AcquireTokenWithDeviceCode",
        "ScopeLists",
        "WriteLine",
        "deviceCodeResult",
        "Message",
        "FromResult",
        "ExecuteAsync",
        "Result",
        "ParameterSetName",
        "WriteVerbose",
        "Token",
        "ClientApplication",
        "AcquireTokenInteractive",
        "ScopeLists",
        "ExecuteAsync",
        "Result",
        "WriteVerbose",
        "ConfidentialClientApplicationBuilder",
        "Create",
        "ClientId",
        "IsNullOrEmpty",
        "Authority",
        "WriteVerbose",
        "Authority",
        "ClientApplicationBuilder",
        "WithAuthority",
        "Microsoft",
        "Identity",
        "Client",
        "AadAuthorityAudience",
        "AzureAdMyOrg",
        "ClientApplicationBuilder",
        "WithAuthority",
        "Microsoft",
        "Identity",
        "Client",
        "AadAuthorityAudience",
        "AzureAdMultipleOrgs",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithRedirectUri",
        "RedirectUri",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithTenantId",
        "TenantId",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithCertificate",
        "Certificate",
        "MyInvocation",
        "BoundParameters",
        "ContainsKey",
        "WriteVerbose",
        "ClientApplicationBuilder",
        "WithClientSecret",
        "Secret",
        "ClientApplicationBuilder",
        "Build",
        "ParameterSetName",
        "WriteVerbose",
        "Token",
        "ClientApplication",
        "AcquireTokenForClient",
        "ScopeLists",
        "ExecuteAsync",
        "Result",
        "ParameterSetName",
        "WriteVerbose",
        "Token",
        "ClientApplication",
        "AcquireTokenForClient",
        "ScopeLists",
        "ExecuteAsync",
        "Result",
        "AsSecureString",
        "WriteVerbose",
        "SecureString",
        "ForEach",
        "Token",
        "AccessToken",
        "ToCharArray",
        "AccessToken",
        "AppendChar",
        "AccessToken",
        "MakeReadOnly",
        "WriteObject",
        "AccessToken",
        "WriteObject",
        "Token",
        "WriteVerbose"
    ],
    "literals": [
        "\"PSMSALToken\"",
        "\"Public\"",
        "\"https://login.microsoftonline.com/common/oauth2/nativeclient\"",
        "\"AzureAdMyOrg\"",
        "\"AzureAdMultipleOrgs\"",
        "\"AzureAdMultipleOrgs\"",
        "\"https://graph.microsoft.com/.default\"",
        "\"Public-AcquireTokenByUsernamePassword\"",
        "\"Public-AcquireTokenWithDeviceCode\"",
        "\"Public-AcquireTokenInteractive\"",
        "\"Confidential-WithCertificate\"",
        "\"Confidential-WithSecret\"",
        "\"Begin!\"",
        "\"Public-\"",
        "\"Public application buider\"",
        "\"WithAuthority\"",
        "\"AzureAdMyOrg\"",
        "\"AzureAdMultipleOrgs\"",
        "\"RedirectUri\"",
        "\"WithRedirectUri\"",
        "\"TenantId\"",
        "\"WithTenantId\"",
        "\"Public-AcquireTokenByUsernamePassword\"",
        "\"AcquireTokenByUsernamePassword\"",
        "\"Public-AcquireTokenWithDeviceCode\"",
        "\"AcquireTokenWithDeviceCode\"",
        "\"Public-AcquireTokenInteractive\"",
        "\"AcquireTokenInteractive\"",
        "\"Confidential application buider\"",
        "\"WithAuthority\"",
        "\"AzureAdMyOrg\"",
        "\"AzureAdMultipleOrgs\"",
        "\"RedirectUri\"",
        "\"WithRedirectUri\"",
        "\"TenantId\"",
        "\"WithTenantId\"",
        "\"Certificate\"",
        "\"WithCertificate\"",
        "\"Secret\"",
        "\"WithClientSecret\"",
        "\"Confidential-WithCertificate\"",
        "\"AcquireTokenForClient-WithCertificate\"",
        "\"Confidential-WithClientSecret\"",
        "\"AcquireTokenForClient-WithClientSecret\"",
        "\"AsSecureString\"",
        "\"End!\""
    ],
    "variables": [
        "ClientId",
        "TenantId",
        "RedirectUri",
        "Authority",
        "Scopes",
        "PSCredential",
        "Credential",
        "SwitchParameter",
        "DeviceCode",
        "SwitchParameter",
        "Interactive",
        "X509Certificate2",
        "Certificate",
        "Secret",
        "SwitchParameter",
        "AsSecureString",
        "AuthenticationResult",
        "Token",
        "ClientApplicationBuilder",
        "IPublicClientApplication",
        "ClientApplication",
        "ScopeLists",
        "Scopes",
        "ClientApplicationBuilder",
        "IConfidentialClientApplication",
        "ClientApplication",
        "ScopeLists",
        "Scopes",
        "SecureString",
        "AccessToken"
    ],
    "comments": [
        "<para type=\"synopsis\">Generate token via MSAL library.</para>",
        "<para type=\"description\">PowerShell module to generate authentication tokens in Entra ID.</para>",
        "</summary>",
        "<example>",
        "<code>",
        "<para>Get token by user credential.</para>",
        "",
        "$Credential = Get-Credential",
        "$Token = Get-PSMSALToken -ClientId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx -Credential $Credential -Authority AzureAdMultipleOrgs",
        "</code>",
        "</example>",
        "<example>",
        "<code>",
        "<para>Get token by DeviceCode.</para>",
        "",
        "$Token = Get-PSMSALToken -ClientId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx -DeviceCode",
        "</code>",
        "</example>",
        "<example>",
        "<code>",
        "<para>Get token by interactive logon.</para>",
        "",
        "$Token = Get-PSMSALToken -ClientId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx -Interactive",
        "</code>",
        "</example>",
        "<example>",
        "<code>",
        "<para>Get token by certificate.</para>",
        "",
        "$Certificate = Get-PfxCertificate -FilePath /Users/mgajda/cert.pfx",
        "$Token = Get-PSMSALToken -ClientId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx -Certificate $Certificate",
        "</code>",
        "</example>",
        "<example>",
        "<code>",
        "<para>Get token by secret.</para>",
        "",
        "$Token = Get-PSMSALToken -ClientId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx -Secret xyz",
        "</code>",
        "</example>",
        "This method gets called once for each cmdlet in the pipeline when the pipeline starts executing",
        "This method will be called for each input received from the pipeline to this cmdlet; if no input is received, this method is not called",
        "Initialize result",
        "Public application",
        "Create application builder",
        "Set Authority",
        "if(this.MyInvocation.BoundParameters.ContainsKey(\"Authority\"))",
        "Set RedirectUri",
        "Set TenantId",
        "Build application",
        "Set Scopes",
        "AcquireTokenByUsernamePassword",
        "AcquireTokenWithDeviceCode",
        "AcquireTokenInteractive",
        "Set Authority",
        "if(this.MyInvocation.BoundParameters.ContainsKey(\"Authority\"))",
        "Set RedirectUri",
        "Set TenantId",
        "Set Certificate",
        "Set Secret",
        "Build application",
        "Set Scopes",
        "AcquireTokenForClient - WithCertificate",
        "AcquireTokenForClient - WithClientSecret",
        "Return token",
        "This method will be called once at the end of pipeline execution; if no input is received, this method is not called"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "BeginProcessing",
        "ProcessRecord",
        "EndProcessing"
    ],
    "classes": [
        "GetPSMSALTokenCmdletCommand"
    ]
}