{
    "identifiers": [
        "annotations",
        "typing",
        "Any",
        "pytest",
        "pettingzoo",
        "classic",
        "tictactoe",
        "board",
        "TTT_GAME_NOT_OVER",
        "TTT_PLAYER1_WIN",
        "TTT_PLAYER2_WIN",
        "TTT_TIE",
        "Board",
        "TTT_PLAYER2_WIN",
        "TTT_TIE",
        "TTT_PLAYER1_WIN",
        "pytest",
        "mark",
        "parametrize",
        "agent1_win",
        "agent2_win",
        "tie",
        "values",
        "Any",
        "values",
        "values",
        "Board",
        "i",
        "agent",
        "pos",
        "board_layout",
        "values",
        "i",
        "max_step",
        "board",
        "play_turn",
        "agent",
        "pos",
        "board_layout",
        "board",
        "squares",
        "board",
        "game_status",
        "status",
        "TTT_GAME_NOT_OVER",
        "i",
        "max_step",
        "status",
        "expected_winner",
        "line",
        "winning_lines",
        "Board",
        "line",
        "board",
        "game_status",
        "TTT_PLAYER1_WIN",
        "Board",
        "outside_space",
        "pytest",
        "raises",
        "AssertionError",
        "match",
        "board",
        "play_turn",
        "outside_space",
        "unknown_agent",
        "pytest",
        "raises",
        "AssertionError",
        "match",
        "board",
        "play_turn",
        "unknown_agent",
        "board",
        "play_turn",
        "agent",
        "pytest",
        "raises",
        "AssertionError",
        "match",
        "board",
        "play_turn",
        "agent"
    ],
    "literals": [
        "\"moves\"",
        "\"max_step\"",
        "\"winner\"",
        "\"moves\"",
        "\"max_step\"",
        "\"winner\"",
        "\"moves\"",
        "\"max_step\"",
        "\"winner\"",
        "\"values\"",
        "\"winner\"",
        "\"max_step\"",
        "\"moves\"",
        "\"max step exceed in tictactoe game\"",
        "\"wrong tictactoe layout after move\"",
        "\"tictactoe game ended on wrong step\"",
        "\"wrong winner in tictactoe board test\"",
        "\"Bad win check in TicTacToe\"",
        "\"Invalid move location\"",
        "\"Invalid agent\"",
        "\"Location is not empty\""
    ],
    "variables": [
        "agent2_win",
        "tie",
        "agent1_win",
        "expected_winner",
        "max_step",
        "board",
        "status",
        "winning_lines",
        "board",
        "board",
        "squares",
        "board"
    ],
    "comments": [
        "type: ignore",
        "Note: mapping of moves to board positions are:",
        "0 3 6",
        "1 4 7",
        "2 5 8",
        "agent_id, position, board after move",
        "agent 2 wins here",
        "should not get past here",
        "should be tie",
        "agent 1 should win here",
        "these are the winning lines for player 1. Note that moves",
        "for player 2 are included to make it a legal board.",
        "vertical(x3), horizontal(x3), diagonal(x2)",
        "1) move out of bounds should be rejected",
        "2) move by unknown agent should be rejected",
        "3) move in occupied space by either agent should be rejected",
        "this is fine",
        "repeating move is not valid"
    ],
    "docstrings": [
        "\"\"\"Test cases for TicTacToe board.\"\"\"",
        "\"\"\"Test that TicTacToe games go as expected.\"\"\"",
        "\"\"\"Test that winning board configurations actually win.\"\"\"",
        "\"\"\"Test that illegal TicTacToe moves are rejected.\"\"\""
    ],
    "functions": [
        "test_tictactoe_board_games",
        "test_tictactoe_winning_boards",
        "test_tictactoe_bad_move"
    ],
    "classes": []
}