{
    "identifiers": [
        "numpy",
        "np",
        "numpy",
        "linalg",
        "matplotlib",
        "pyplot",
        "plt",
        "scipy",
        "linalg",
        "lu_factor",
        "scipy",
        "linalg",
        "lu_solve",
        "math",
        "math",
        "sys",
        "scipy",
        "linalg",
        "sp",
        "time",
        "epaisseur",
        "dx",
        "epaisseur",
        "dx",
        "np",
        "zeros",
        "Nx",
        "i",
        "Nx",
        "i",
        "dx",
        "x",
        "lbda",
        "rho",
        "cp",
        "epaisseur",
        "dx",
        "temps",
        "epaisseur",
        "dx",
        "np",
        "zeros",
        "Nx",
        "Nx",
        "lbda",
        "rho",
        "cp",
        "x_axe_mono",
        "epaisseur",
        "dx",
        "T0",
        "temp",
        "temp",
        "temp",
        "Nx",
        "i",
        "len",
        "Dx",
        "j",
        "j",
        "teta0",
        "teta0",
        "j",
        "np",
        "pi",
        "summ",
        "Cn",
        "np",
        "sin",
        "j",
        "np",
        "pi",
        "i",
        "dx",
        "epaisseur",
        "np",
        "exp",
        "j",
        "np",
        "pi",
        "epaisseur",
        "alpha",
        "temps",
        "temp",
        "i",
        "dx",
        "temp",
        "Nx",
        "temp",
        "epaisseur",
        "temp",
        "Nx",
        "temp",
        "summ",
        "temp"
    ],
    "literals": [
        "\"==============Solution analytique===================\""
    ],
    "variables": [
        "Nx",
        "x",
        "x",
        "i",
        "Nx",
        "temp",
        "temp",
        "temp",
        "alpha",
        "Dx",
        "T0",
        "teta0",
        "summ",
        "Cn",
        "summ",
        "temp",
        "i"
    ],
    "comments": [
        "Dt = np.zeros((Nt))",
        "for i in range(Nt):",
        "Dt[i] = i*dt",
        "summ = 1/n*(np.exp(-(n*np.pi/(2*epaisseur)*alpha*temps)))*np.sin(n*np.pi*i*dx/(2*epaisseur))",
        "n=n+2"
    ],
    "docstrings": [],
    "functions": [
        "x_axe_mono",
        "anal_sol"
    ],
    "classes": []
}