{
    "identifiers": [
        "buildDocumentation",
        "documentationToMarkdown",
        "fs",
        "path",
        "fs",
        "outputFile",
        "fs",
        "outputFile",
        "docsDirectories",
        "docsDirectory",
        "fs",
        "docsDirectory",
        "err",
        "files",
        "err",
        "err",
        "path",
        "docsDirectory",
        "path",
        "docsDirectory",
        "files",
        "file",
        "path",
        "docsDirectory",
        "file",
        "filePaths",
        "filePath",
        "buildDocumentation",
        "filePaths",
        "documentationToMarkdown",
        "directoryDocumentation",
        "directoryContents",
        "directoryTitle",
        "directoryMarkdown",
        "fs",
        "outputFile",
        "directoryContents"
    ],
    "literals": [
        "'tsdoc-markdown'",
        "'fs'",
        "'node:path'",
        "'src/helpers/sidekick'",
        "'src/directives'",
        "'src/utils'",
        "'documentation.md'",
        "'# Documentation\\n'",
        "'Error reading directory:'",
        "string",
        "'/'",
        "string",
        "<details><summary>${directoryTitle}</summary>\\n\\n${directoryMarkdown}\\n\\n</details>\\n\\n",
        "''",
        "'a'"
    ],
    "variables": [
        "docsDirectories",
        "outputFile",
        "directoryContents",
        "directoryTitle",
        "filePaths",
        "filePath",
        "directoryDocumentation",
        "directoryMarkdown"
    ],
    "comments": [
        "Source directories",
        "Output file",
        "If the output file already exists, clear its content",
        "Read all files from the source directory",
        "Create an array to hold the content of each directory",
        "Get the title of the directory",
        "Create an array to hold the paths of the files",
        "Build documentation for every file in the directory",
        "Generate the markdown for every file in the directory",
        "Add the wrapped markup to the array",
        "Write the combined content to the output file"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}