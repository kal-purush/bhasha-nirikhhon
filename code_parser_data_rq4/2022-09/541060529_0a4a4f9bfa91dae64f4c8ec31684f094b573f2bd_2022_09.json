{
    "identifiers": [
        "IS_DESKTOP",
        "navigator",
        "hwConcurrency",
        "hwConcurrency",
        "minCount",
        "IS_MOBILE",
        "IS_HEADER",
        "Stage",
        "Stage",
        "trailsStage",
        "mainStage",
        "fscreen",
        "fscreen",
        "fullscreenEnabled",
        "isFullscreen",
        "fscreen",
        "fscreen",
        "fscreen",
        "store",
        "isFullscreen",
        "prevState",
        "listener",
        "listener",
        "prevState",
        "isFullscreen",
        "IS_HIGH_END_DEVICE",
        "QUALITY_HIGH",
        "QUALITY_NORMAL",
        "IS_DESKTOP",
        "IS_HEADER",
        "SKY_LIGHT_NORMAL",
        "IS_HEADER",
        "getDefaultScaleFactor",
        "nextState",
        "nextState",
        "prevState",
        "listener",
        "listener",
        "listener",
        "localStorage",
        "serializedData",
        "serializedData",
        "schemaVersion",
        "config",
        "data",
        "config",
        "data",
        "config",
        "data",
        "config",
        "data",
        "config",
        "data",
        "config",
        "data",
        "config",
        "data",
        "schemaVersion",
        "localStorage",
        "localStorage",
        "size",
        "sizeRaw",
        "sizeRaw",
        "e",
        "e",
        "parseInt",
        "size",
        "sizeInt",
        "sizeInt",
        "sizeInt",
        "localStorage",
        "config",
        "config",
        "config",
        "config",
        "IS_HEADER",
        "store",
        "toggle",
        "store",
        "toggle",
        "newValue",
        "toggle",
        "newValue",
        "paused",
        "paused",
        "newValue",
        "store",
        "newValue",
        "toggle",
        "toggle",
        "store",
        "toggle",
        "store",
        "store",
        "toggle",
        "toggle",
        "store",
        "toggle",
        "store",
        "store",
        "nextConfig",
        "nextConfig",
        "nextConfig",
        "getConfigFromDOM",
        "store",
        "store",
        "nextConfig",
        "configDidUpdate",
        "store",
        "quality",
        "qualitySelector",
        "isLowQuality",
        "quality",
        "QUALITY_LOW",
        "isNormalQuality",
        "quality",
        "QUALITY_NORMAL",
        "isHighQuality",
        "quality",
        "QUALITY_HIGH",
        "skyLightingSelector",
        "SKY_LIGHT_NONE",
        "appNodes",
        "Spark",
        "quality",
        "QUALITY_HIGH",
        "isRunning",
        "state",
        "store",
        "state",
        "state",
        "soundEnabledSelector",
        "state",
        "store",
        "state",
        "canPlaySoundSelector",
        "state",
        "store",
        "isRunning",
        "state",
        "soundEnabledSelector",
        "state",
        "qualitySelector",
        "store",
        "shellNameSelector",
        "store",
        "shellSizeSelector",
        "store",
        "finaleSelector",
        "store",
        "skyLightingSelector",
        "store",
        "scaleFactorSelector",
        "store",
        "appNodes",
        "key",
        "appNodes",
        "key",
        "appNodes",
        "key",
        "fullscreenEnabled",
        "appNodes",
        "state",
        "state",
        "soundEnabledSelector",
        "appNodes",
        "pauseBtnIcon",
        "appNodes",
        "pauseBtnIcon",
        "appNodes",
        "soundBtnIcon",
        "appNodes",
        "soundBtnIcon",
        "appNodes",
        "state",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "appNodes",
        "state",
        "state",
        "helpContent",
        "state",
        "appNodes",
        "header",
        "appNodes",
        "body",
        "store",
        "renderApp",
        "state",
        "prevState",
        "canPlaySoundSelector",
        "state",
        "canPlaySoundSelector",
        "prevState",
        "canPlaySound",
        "canPlaySoundPrev",
        "canPlaySound",
        "soundManager",
        "soundManager",
        "store",
        "handleStateChange",
        "appNodes",
        "appNodes",
        "appNodes",
        "appNodes",
        "appNodes",
        "appNodes",
        "appNodes",
        "appNodes",
        "parseFloat",
        "appNodes",
        "updateConfigNoEvent",
        "updateConfig",
        "appNodes",
        "updateConfigNoEvent",
        "appNodes",
        "updateConfigNoEvent",
        "appNodes",
        "updateConfigNoEvent",
        "appNodes",
        "setTimeout",
        "updateConfig",
        "appNodes",
        "setTimeout",
        "updateConfig",
        "appNodes",
        "updateConfigNoEvent",
        "appNodes",
        "setTimeout",
        "updateConfig",
        "appNodes",
        "setTimeout",
        "updateConfig",
        "appNodes",
        "setTimeout",
        "toggleFullscreen",
        "appNodes",
        "updateConfig",
        "handleResize",
        "nodeKeyToHelpKey",
        "nodeKey",
        "nodeKeyToHelpKey",
        "nodeKey",
        "appNodes",
        "nodeKey",
        "store",
        "helpKey",
        "appNodes",
        "store",
        "appNodes",
        "store",
        "COLOR",
        "COLOR_NAMES",
        "colorName",
        "COLOR",
        "colorName",
        "COLOR_CODES",
        "INVISIBLE",
        "COLOR_CODES_W_INVIS",
        "obj",
        "code",
        "i",
        "obj",
        "code",
        "i",
        "obj",
        "COLOR_CODES",
        "hex",
        "COLOR_TUPLES",
        "hex",
        "parseInt",
        "hex",
        "parseInt",
        "hex",
        "parseInt",
        "hex",
        "COLOR_CODES",
        "COLOR_CODES",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "randomColorSimple",
        "limitWhite",
        "color",
        "COLOR",
        "color",
        "randomColorSimple",
        "notSame",
        "color",
        "lastColor",
        "color",
        "randomColorSimple",
        "notColor",
        "color",
        "notColor",
        "color",
        "randomColorSimple",
        "lastColor",
        "color",
        "color",
        "COLOR",
        "COLOR",
        "shellColor",
        "shellColor",
        "COLOR",
        "shellColor",
        "COLOR",
        "randomColor",
        "shellColor",
        "whiteOrGold",
        "crysanthemumShell",
        "size",
        "singleColor",
        "randomColor",
        "randomColor",
        "randomColor",
        "singleColor",
        "pistil",
        "makePistilColor",
        "color",
        "singleColor",
        "color",
        "COLOR",
        "pistilColor",
        "randomColor",
        "color",
        "pistil",
        "color",
        "COLOR",
        "glitter",
        "isLowQuality",
        "starDensity",
        "isHighQuality",
        "starDensity",
        "size",
        "size",
        "size",
        "glitter",
        "whiteOrGold",
        "ghostShell",
        "size",
        "crysanthemumShell",
        "size",
        "shell",
        "randomColor",
        "COLOR",
        "shell",
        "pistil",
        "makePistilColor",
        "ghostColor",
        "shell",
        "INVISIBLE",
        "shell",
        "ghostColor",
        "shell",
        "shell",
        "strobeShell",
        "size",
        "randomColor",
        "size",
        "size",
        "size",
        "COLOR",
        "COLOR",
        "makePistilColor",
        "color",
        "palmShell",
        "size",
        "randomColor",
        "size",
        "size",
        "thick",
        "size",
        "thick",
        "ringShell",
        "size",
        "randomColor",
        "size",
        "size",
        "size",
        "PI_2",
        "size",
        "makePistilColor",
        "color",
        "pistil",
        "color",
        "COLOR",
        "COLOR",
        "COLOR",
        "crossetteShell",
        "size",
        "randomColor",
        "size",
        "size",
        "size",
        "makePistilColor",
        "color",
        "floralShell",
        "size",
        "size",
        "size",
        "size",
        "randomColor",
        "randomColor",
        "randomColor",
        "fallingLeavesShell",
        "size",
        "size",
        "INVISIBLE",
        "size",
        "size",
        "COLOR",
        "willowShell",
        "size",
        "size",
        "size",
        "size",
        "COLOR",
        "INVISIBLE",
        "crackleShell",
        "size",
        "COLOR",
        "randomColor",
        "size",
        "size",
        "isLowQuality",
        "size",
        "COLOR",
        "makePistilColor",
        "color",
        "horsetailShell",
        "size",
        "randomColor",
        "size",
        "size",
        "size",
        "whiteOrGold",
        "color",
        "color",
        "COLOR",
        "shellNames",
        "shellNames",
        "size",
        "IS_HEADER",
        "randomFastShell",
        "size",
        "shellTypes",
        "randomShellName",
        "size",
        "size",
        "shellTypes",
        "shellNameSelector",
        "size",
        "shellNameSelector",
        "isRandom",
        "randomShellName",
        "shellNameSelector",
        "isRandom",
        "fastShellBlacklist",
        "shellName",
        "shellName",
        "randomShellName",
        "shellTypes",
        "shellName",
        "randomShell",
        "crackleShell",
        "crossetteShell",
        "crysanthemumShell",
        "fallingLeavesShell",
        "floralShell",
        "ghostShell",
        "horsetailShell",
        "palmShell",
        "ringShell",
        "strobeShell",
        "willowShell",
        "shellTypes",
        "appNodes",
        "node",
        "options",
        "node",
        "options",
        "acc",
        "opt",
        "acc",
        "opt",
        "opt",
        "shellNames",
        "opt",
        "options",
        "opt",
        "opt",
        "appNodes",
        "options",
        "options",
        "opt",
        "i",
        "options",
        "i",
        "opt",
        "appNodes",
        "options",
        "setOptionsForSelect",
        "appNodes",
        "QUALITY_LOW",
        "QUALITY_NORMAL",
        "QUALITY_HIGH",
        "setOptionsForSelect",
        "appNodes",
        "SKY_LIGHT_NONE",
        "SKY_LIGHT_DIM",
        "SKY_LIGHT_NORMAL",
        "setOptionsForSelect",
        "appNodes",
        "value",
        "value",
        "value",
        "togglePause",
        "renderApp",
        "store",
        "configDidUpdate",
        "position",
        "edge",
        "position",
        "edge",
        "position",
        "position",
        "fitShellPositionInBoundsH",
        "fitShellPositionInBoundsV",
        "shellSizeSelector",
        "baseSize",
        "maxVariance",
        "baseSize",
        "variance",
        "maxVariance",
        "variance",
        "maxVariance",
        "height",
        "centerOffset",
        "centerOffset",
        "fitShellPositionInBoundsH",
        "x",
        "fitShellPositionInBoundsV",
        "height",
        "Shell",
        "shellFromConfig",
        "shellSizeSelector",
        "mainStage",
        "mainStage",
        "shell",
        "w",
        "getRandomShellPositionH",
        "h",
        "getRandomShellPositionV",
        "getRandomShellSize",
        "Shell",
        "shellFromConfig",
        "size",
        "shell",
        "size",
        "size",
        "shell",
        "shell",
        "extraDelay",
        "extraDelay",
        "randomFastShell",
        "getRandomShellSize",
        "Shell",
        "shellType",
        "size",
        "shell",
        "size",
        "size",
        "shell",
        "extraDelay",
        "getRandomShellSize",
        "getRandomShellSize",
        "Shell",
        "shellFromConfig",
        "size1",
        "Shell",
        "shellFromConfig",
        "size2",
        "shell1",
        "leftOffset",
        "size1",
        "setTimeout",
        "shell2",
        "rightOffset",
        "size2",
        "shell1",
        "shell2",
        "shell1",
        "shell2",
        "extraDelay",
        "extraDelay",
        "randomFastShell",
        "shellSizeSelector",
        "baseSize",
        "Shell",
        "shellType",
        "baseSize",
        "shell1",
        "offset",
        "setTimeout",
        "Shell",
        "shellType",
        "smallSize",
        "shell2",
        "offset",
        "leftDelay",
        "setTimeout",
        "Shell",
        "shellType",
        "smallSize",
        "shell3",
        "offset",
        "rightDelay",
        "IS_DESKTOP",
        "shellSizeSelector",
        "largeSize",
        "crysanthemumShell",
        "ringShell",
        "x",
        "useSpecial",
        "shellNameSelector",
        "isRandom",
        "useSpecial",
        "randomSpecialShell",
        "randomMainShell",
        "shellTypes",
        "shellNameSelector",
        "Shell",
        "shellType",
        "useSpecial",
        "largeSize",
        "smallSize",
        "x",
        "x",
        "x",
        "shell",
        "x",
        "useSpecial",
        "height",
        "count",
        "barrageCountHalf",
        "count",
        "barrageCountHalf",
        "setTimeout",
        "launchShell",
        "delay",
        "count",
        "barrageCountHalf",
        "setTimeout",
        "launchShell",
        "offset",
        "delay",
        "setTimeout",
        "launchShell",
        "offset",
        "delay",
        "delayOffset",
        "count",
        "delay",
        "barrageCountHalf",
        "seqSmallBarrage",
        "IS_DESKTOP",
        "IS_DESKTOP",
        "shellSizeSelector",
        "crysanthemumShell",
        "ringShell",
        "randomFastShell",
        "x",
        "useSpecial",
        "shellNameSelector",
        "isRandom",
        "useSpecial",
        "randomSpecialShell",
        "randomMainShell",
        "shellTypes",
        "shellNameSelector",
        "Shell",
        "shellType",
        "shellSize",
        "x",
        "PI_HALF",
        "shell",
        "x",
        "height",
        "count",
        "barrageCount",
        "count",
        "launchShell",
        "count",
        "count",
        "barrageCount",
        "count",
        "specialIndex",
        "setTimeout",
        "launchShell",
        "offset",
        "useSpecial",
        "delay",
        "setTimeout",
        "launchShell",
        "offset",
        "useSpecial",
        "delay",
        "delayOffset",
        "count",
        "delay",
        "barrageCount",
        "seqSmallBarrage",
        "seqSmallBarrage",
        "seqRandomShell",
        "seqTwoRandom",
        "seqTriple",
        "seqPyramid",
        "seqSmallBarrage",
        "isFirstSeq",
        "isFirstSeq",
        "IS_HEADER",
        "seqTwoRandom",
        "Shell",
        "crysanthemumShell",
        "shellSizeSelector",
        "shell",
        "finaleSelector",
        "seqRandomFastShell",
        "currentFinaleCount",
        "finaleCount",
        "currentFinaleCount",
        "currentFinaleCount",
        "rand",
        "seqSmallBarrage",
        "seqSmallBarrage",
        "seqSmallBarrage",
        "rand",
        "seqPyramid",
        "rand",
        "IS_HEADER",
        "seqRandomShell",
        "rand",
        "seqTwoRandom",
        "rand",
        "seqTriple",
        "activePointerCount",
        "btnSize",
        "btnSize",
        "togglePause",
        "mainStage",
        "btnSize",
        "mainStage",
        "btnSize",
        "toggleSound",
        "mainStage",
        "btnSize",
        "toggleMenu",
        "isRunning",
        "updateSpeedFromEvent",
        "isUpdatingSpeed",
        "launchShellFromConfig",
        "activePointerCount",
        "isUpdatingSpeed",
        "isRunning",
        "isUpdatingSpeed",
        "updateSpeedFromEvent",
        "togglePause",
        "toggleMenu",
        "toggleMenu",
        "mainStage",
        "handlePointerStart",
        "mainStage",
        "handlePointerEnd",
        "mainStage",
        "handlePointerMove",
        "handleKeydown",
        "w",
        "MAX_WIDTH",
        "w",
        "h",
        "h",
        "MAX_HEIGHT",
        "appNodes",
        "containerW",
        "appNodes",
        "containerH",
        "stages",
        "stage",
        "stage",
        "containerW",
        "containerH",
        "scaleFactorSelector",
        "stageW",
        "containerW",
        "scaleFactor",
        "stageH",
        "containerH",
        "scaleFactor",
        "handleResize",
        "handleResize",
        "isUpdatingSpeed",
        "mainStage",
        "edge",
        "mainStage",
        "edge",
        "simSpeed",
        "newSpeed",
        "speedBarOpacity",
        "timeStep",
        "lag",
        "currentFrame",
        "isUpdatingSpeed",
        "speedBarOpacity",
        "lag",
        "speedBarOpacity",
        "speedBarOpacity",
        "store",
        "autoLaunchTime",
        "timeStep",
        "autoLaunchTime",
        "autoLaunchTime",
        "startSequence",
        "frameTime",
        "lag",
        "isRunning",
        "frameTime",
        "simSpeed",
        "simSpeed",
        "lag",
        "updateGlobals",
        "timeStep",
        "lag",
        "Star",
        "speed",
        "Star",
        "speed",
        "Spark",
        "speed",
        "timeStep",
        "GRAVITY",
        "COLOR_CODES_W_INVIS",
        "color",
        "Star",
        "color",
        "stars",
        "i",
        "i",
        "i",
        "stars",
        "i",
        "star",
        "currentFrame",
        "star",
        "currentFrame",
        "star",
        "timeStep",
        "star",
        "stars",
        "i",
        "Star",
        "star",
        "star",
        "star",
        "burnRate",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "speed",
        "star",
        "star",
        "speed",
        "star",
        "star",
        "starDrag",
        "star",
        "starDrag",
        "star",
        "starDragHeavy",
        "star",
        "starDragHeavy",
        "star",
        "gAcc",
        "star",
        "star",
        "star",
        "speed",
        "star",
        "star",
        "star",
        "speed",
        "star",
        "star",
        "star",
        "speed",
        "star",
        "star",
        "timeStep",
        "star",
        "star",
        "star",
        "star",
        "burnRateInverse",
        "Spark",
        "star",
        "star",
        "star",
        "PI_2",
        "star",
        "burnRate",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "stars",
        "i",
        "Star",
        "star",
        "star",
        "star",
        "INVISIBLE",
        "star",
        "star",
        "star",
        "star",
        "star",
        "Spark",
        "color",
        "sparks",
        "i",
        "i",
        "i",
        "sparks",
        "i",
        "spark",
        "timeStep",
        "spark",
        "sparks",
        "i",
        "Spark",
        "spark",
        "spark",
        "spark",
        "spark",
        "spark",
        "spark",
        "spark",
        "speed",
        "spark",
        "spark",
        "speed",
        "spark",
        "sparkDrag",
        "spark",
        "sparkDrag",
        "spark",
        "gAcc",
        "render",
        "speed",
        "speed",
        "trailsStage",
        "mainStage",
        "skyLightingSelector",
        "SKY_LIGHT_NONE",
        "colorSky",
        "speed",
        "scaleFactorSelector",
        "trailsCtx",
        "dpr",
        "scaleFactor",
        "dpr",
        "scaleFactor",
        "mainCtx",
        "dpr",
        "scaleFactor",
        "dpr",
        "scaleFactor",
        "trailsCtx",
        "trailsCtx",
        "store",
        "speed",
        "trailsCtx",
        "width",
        "height",
        "mainCtx",
        "width",
        "height",
        "BurstFlash",
        "BurstFlash",
        "trailsCtx",
        "bf",
        "bf",
        "bf",
        "bf",
        "bf",
        "burstGradient",
        "burstGradient",
        "burstGradient",
        "burstGradient",
        "trailsCtx",
        "burstGradient",
        "trailsCtx",
        "bf",
        "bf",
        "bf",
        "bf",
        "bf",
        "bf",
        "BurstFlash",
        "bf",
        "trailsCtx",
        "trailsCtx",
        "Star",
        "trailsCtx",
        "isLowQuality",
        "mainCtx",
        "mainCtx",
        "mainCtx",
        "COLOR_CODES",
        "color",
        "Star",
        "color",
        "trailsCtx",
        "color",
        "trailsCtx",
        "stars",
        "star",
        "star",
        "trailsCtx",
        "star",
        "star",
        "trailsCtx",
        "star",
        "star",
        "mainCtx",
        "star",
        "star",
        "mainCtx",
        "star",
        "star",
        "star",
        "star",
        "trailsCtx",
        "mainCtx",
        "trailsCtx",
        "Spark",
        "trailsCtx",
        "COLOR_CODES",
        "color",
        "Spark",
        "color",
        "trailsCtx",
        "color",
        "trailsCtx",
        "sparks",
        "spark",
        "trailsCtx",
        "spark",
        "spark",
        "trailsCtx",
        "spark",
        "spark",
        "trailsCtx",
        "speedBarOpacity",
        "mainCtx",
        "speedBarOpacity",
        "mainCtx",
        "COLOR",
        "mainCtx",
        "height",
        "speedBarHeight",
        "width",
        "simSpeed",
        "speedBarHeight",
        "mainCtx",
        "trailsCtx",
        "mainCtx",
        "speed",
        "skyLightingSelector",
        "targetSkyColor",
        "targetSkyColor",
        "targetSkyColor",
        "COLOR_CODES",
        "color",
        "COLOR_TUPLES",
        "color",
        "Star",
        "color",
        "totalStarCount",
        "count",
        "targetSkyColor",
        "count",
        "targetSkyColor",
        "count",
        "targetSkyColor",
        "count",
        "totalStarCount",
        "maxStarCount",
        "targetSkyColor",
        "targetSkyColor",
        "targetSkyColor",
        "targetSkyColor",
        "targetSkyColor",
        "maxColorComponent",
        "maxSkySaturation",
        "intensity",
        "targetSkyColor",
        "targetSkyColor",
        "maxColorComponent",
        "maxSkySaturation",
        "intensity",
        "targetSkyColor",
        "targetSkyColor",
        "maxColorComponent",
        "maxSkySaturation",
        "intensity",
        "currentSkyColor",
        "targetSkyColor",
        "currentSkyColor",
        "colorChange",
        "speed",
        "currentSkyColor",
        "targetSkyColor",
        "currentSkyColor",
        "colorChange",
        "speed",
        "currentSkyColor",
        "targetSkyColor",
        "currentSkyColor",
        "colorChange",
        "speed",
        "appNodes",
        "currentSkyColor",
        "currentSkyColor",
        "currentSkyColor",
        "mainStage",
        "update",
        "start",
        "arcLength",
        "count",
        "randomness",
        "particleFactory",
        "arcLength",
        "count",
        "start",
        "arcLength",
        "angleDelta",
        "end",
        "start",
        "angle",
        "end",
        "angle",
        "angle",
        "angleDelta",
        "particleFactory",
        "angle",
        "angleDelta",
        "randomness",
        "angle",
        "end",
        "angle",
        "angle",
        "angleDelta",
        "particleFactory",
        "angle",
        "angleDelta",
        "randomness",
        "count",
        "particleFactory",
        "startAngle",
        "arcLength",
        "PI_2",
        "count",
        "R",
        "C",
        "i",
        "C_HALF",
        "i",
        "i",
        "C_HALF",
        "PI_HALF",
        "ringAngle",
        "C",
        "ringSize",
        "partsPerFullRing",
        "arcLength",
        "PI_2",
        "PI_2",
        "partsPerFullRing",
        "angleInc",
        "startAngle",
        "angleInc",
        "i",
        "partsPerArc",
        "i",
        "maxRandomAngleOffset",
        "angleInc",
        "i",
        "angleOffset",
        "randomAngleOffset",
        "particleFactory",
        "angle",
        "ringSize",
        "star",
        "PI_HALF",
        "createParticleArc",
        "startAngle",
        "PI_2",
        "angle",
        "Star",
        "star",
        "star",
        "star",
        "angle",
        "star",
        "quality",
        "createBurst",
        "count",
        "angle",
        "speedMult",
        "Star",
        "star",
        "star",
        "star",
        "angle",
        "speedMult",
        "star",
        "star",
        "BurstFlash",
        "star",
        "star",
        "soundManager",
        "star",
        "createBurst",
        "angle",
        "speedMult",
        "Star",
        "star",
        "star",
        "INVISIBLE",
        "angle",
        "speedMult",
        "star",
        "star",
        "newStar",
        "COLOR",
        "newStar",
        "quality",
        "newStar",
        "newStar",
        "newStar",
        "BurstFlash",
        "star",
        "star",
        "soundManager",
        "star",
        "isHighQuality",
        "createParticleArc",
        "PI_2",
        "count",
        "angle",
        "Spark",
        "star",
        "star",
        "COLOR",
        "angle",
        "options",
        "options",
        "options",
        "options",
        "randomColor",
        "options",
        "options",
        "scaledSize",
        "scaledSize",
        "density",
        "position",
        "launchHeight",
        "height",
        "height",
        "minHeightPercent",
        "position",
        "width",
        "hpad",
        "hpad",
        "minHeight",
        "launchHeight",
        "minHeight",
        "vpad",
        "launchY",
        "burstY",
        "launchDistance",
        "Star",
        "launchX",
        "launchY",
        "COLOR",
        "launchVelocity",
        "launchVelocity",
        "comet",
        "comet",
        "MyMath",
        "comet",
        "quality",
        "isHighQuality",
        "comet",
        "comet",
        "comet",
        "comet",
        "quality",
        "comet",
        "comet",
        "INVISIBLE",
        "comet",
        "COLOR",
        "comet",
        "INVISIBLE",
        "comet",
        "comet",
        "comet",
        "comet",
        "comet",
        "soundManager",
        "x",
        "y",
        "onDeath",
        "star",
        "playedDeathSound",
        "soundManager",
        "playedDeathSound",
        "crossetteEffect",
        "star",
        "onDeath",
        "star",
        "playedDeathSound",
        "soundManager",
        "playedDeathSound",
        "crackleEffect",
        "star",
        "onDeath",
        "floralEffect",
        "onDeath",
        "fallingLeavesEffect",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkSpeed",
        "isHighQuality",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "sparkFreq",
        "sparkFreq",
        "quality",
        "starFactory",
        "angle",
        "speedMult",
        "Star",
        "x",
        "y",
        "color",
        "randomColor",
        "angle",
        "speedMult",
        "speed",
        "standardInitialSpeed",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "star",
        "onDeath",
        "star",
        "sparkFreq",
        "star",
        "sparkSpeed",
        "star",
        "sparkLife",
        "star",
        "sparkLifeVariation",
        "star",
        "star",
        "star",
        "color",
        "color",
        "createParticleArc",
        "PI_2",
        "angle",
        "angle",
        "speed",
        "ringSquash",
        "angle",
        "speed",
        "MyMath",
        "initSpeedX",
        "initSpeedY",
        "MyMath",
        "initSpeedX",
        "initSpeedY",
        "ringStartAngle",
        "Star",
        "x",
        "y",
        "color",
        "newAngle",
        "newSpeed",
        "star",
        "sparkFreq",
        "star",
        "sparkSpeed",
        "star",
        "sparkLife",
        "star",
        "sparkLifeVariation",
        "star",
        "star",
        "star",
        "createBurst",
        "starFactory",
        "start",
        "color",
        "createBurst",
        "starFactory",
        "start",
        "arc",
        "color",
        "createBurst",
        "starFactory",
        "start2",
        "arc",
        "color",
        "createBurst",
        "starFactory",
        "color",
        "createBurst",
        "starFactory",
        "Shell",
        "COLOR",
        "COLOR",
        "COLOR",
        "innerShell",
        "x",
        "y",
        "Shell",
        "COLOR",
        "innerShell",
        "x",
        "y",
        "BurstFlash",
        "x",
        "y",
        "maxDiff",
        "shellSizeSelector",
        "sizeDifferenceFromMaxSize",
        "maxDiff",
        "soundManager",
        "soundScale",
        "x",
        "y",
        "radius",
        "instance",
        "x",
        "instance",
        "y",
        "instance",
        "radius",
        "instance",
        "instance",
        "instance",
        "instance",
        "COLOR_CODES_W_INVIS",
        "color",
        "collection",
        "color",
        "collection",
        "createParticleCollection",
        "x",
        "y",
        "color",
        "angle",
        "speed",
        "life",
        "speedOffX",
        "speedOffY",
        "instance",
        "instance",
        "instance",
        "x",
        "instance",
        "y",
        "instance",
        "x",
        "instance",
        "y",
        "instance",
        "color",
        "instance",
        "angle",
        "speed",
        "speedOffX",
        "instance",
        "angle",
        "speed",
        "speedOffY",
        "instance",
        "life",
        "instance",
        "life",
        "instance",
        "PI_2",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "color",
        "instance",
        "instance",
        "instance",
        "color",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "createParticleCollection",
        "x",
        "y",
        "color",
        "angle",
        "speed",
        "life",
        "instance",
        "x",
        "instance",
        "y",
        "instance",
        "x",
        "instance",
        "y",
        "instance",
        "color",
        "instance",
        "angle",
        "speed",
        "instance",
        "angle",
        "speed",
        "instance",
        "life",
        "color",
        "instance",
        "instance",
        "instance",
        "instance",
        "response",
        "response",
        "response",
        "response",
        "response",
        "customError",
        "response",
        "customError",
        "types",
        "fileNames",
        "fileName",
        "fileName",
        "fetch",
        "fileURL",
        "checkStatus",
        "response",
        "response",
        "data",
        "resolve",
        "data",
        "resolve",
        "filePromises",
        "promise",
        "allFilePromises",
        "promise",
        "filePromises",
        "buffers",
        "source",
        "buffers",
        "allFilePromises",
        "setTimeout",
        "scale",
        "scale",
        "MyMath",
        "scale",
        "canPlaySoundSelector",
        "simSpeed",
        "now",
        "now",
        "source",
        "source",
        "MyMath",
        "source",
        "source",
        "initialVolume",
        "scale",
        "initialPlaybackRate",
        "scale",
        "gainNode",
        "scaledVolume",
        "MyMath",
        "source",
        "bufferSource",
        "scaledPlaybackRate",
        "bufferSource",
        "buffer",
        "bufferSource",
        "gainNode",
        "gainNode",
        "bufferSource",
        "status",
        "status",
        "IS_HEADER",
        "init",
        "setLoadingStatus",
        "setTimeout",
        "soundManager",
        "init",
        "reason",
        "init",
        "reason"
    ],
    "literals": [
        "'use strict'",
        "'#ff0043'",
        "'#14fc56'",
        "'#1e7fff'",
        "'#e60aff'",
        "'#ffbf36'",
        "'#ffffff'",
        "'_INVISIBLE_'",
        "'trails-canvas'",
        "'main-canvas'",
        "'fullscreenchange'",
        "'Random'",
        "'3'",
        "'1.2'",
        "'2'",
        "''",
        "'cm_fireworks_data'",
        "'1.1'",
        "'1.2'",
        "'version switch should be exhaustive'",
        "Loaded config (schema version ${schemaVersion})",
        "'schemaVersion'",
        "'1'",
        "'configSize'",
        "'string'",
        "'Recovered from error parsing saved config:'",
        "'cm_fireworks_data'",
        "'1.2'",
        "'boolean'",
        "'boolean'",
        "'boolean'",
        "'#000'",
        "'Shell Type'",
        "'The type of firework that will be launched. Select \"Random\" for a nice assortment!'",
        "'Shell Size'",
        "'The size of the fireworks. Modeled after real firework shell sizes, larger shells have bigger bursts with more stars, and sometimes more complex effects. However, larger shells also require more processing power and may cause lag.'",
        "'Quality'",
        "'Overall graphics quality. If the animation is not running smoothly, try lowering the quality. High quality greatly increases the amount of sparks rendered and may cause lag.'",
        "'Sky Lighting'",
        "'Illuminates the background as fireworks explode. If the background looks too bright on your screen, try setting it to \"Dim\" or \"None\".'",
        "'Scale'",
        "'Allows scaling the size of all fireworks, essentially moving you closer or farther away. For larger shell sizes, it can be convenient to decrease the scale a bit, especially on phones or tablets.'",
        "'Auto Fire'",
        "'Launches sequences of fireworks automatically. Sit back and enjoy the show, or disable to have full control.'",
        "'Finale Mode'",
        "'Launches intense bursts of fireworks. May cause lag. Requires \"Auto Fire\" to be enabled.'",
        "'Hide Controls'",
        "'Hides the translucent controls along the top of the screen. Useful for screenshots, or just a more seamless experience. While hidden, you can still tap the top-right corner to re-open this menu.'",
        "'Fullscreen'",
        "'Toggles fullscreen mode.'",
        "'Open Shutter'",
        "'Experimental effect that preserves long streaks of light, similar to leaving a camera shutter open.'",
        "'shellType'",
        "'shellSize'",
        "'quality'",
        "'skyLighting'",
        "'scaleFactor'",
        "'autoLaunch'",
        "'finaleMode'",
        "'hideControls'",
        "'fullscreen'",
        "'longExposure'",
        "'.stage-container'",
        "'.canvas-container'",
        "'.controls'",
        "'.menu'",
        "'.menu__inner-wrap'",
        "'.pause-btn'",
        "'.pause-btn use'",
        "'.sound-btn'",
        "'.sound-btn use'",
        "'.shell-type'",
        "'.shell-type-label'",
        "'.shell-size'",
        "'.shell-size-label'",
        "'.quality-ui'",
        "'.quality-ui-label'",
        "'.sky-lighting'",
        "'.sky-lighting-label'",
        "'.scaleFactor'",
        "'.scaleFactor-label'",
        "'.auto-launch'",
        "'.auto-launch-label'",
        "'.form-option--finale-mode'",
        "'.finale-mode'",
        "'.finale-mode-label'",
        "'.hide-controls'",
        "'.hide-controls-label'",
        "'.form-option--fullscreen'",
        "'.fullscreen'",
        "'.fullscreen-label'",
        "'.long-exposure'",
        "'.long-exposure-label'",
        "'.help-modal'",
        "'.help-modal__overlay'",
        "'.help-modal__header'",
        "'.help-modal__body'",
        "'.help-modal__close-btn'",
        "'remove'",
        "#icon-${state.paused ? 'play' : 'pause'}",
        "'play'",
        "'pause'",
        "#icon-sound-${soundEnabledSelector() ? 'on' : 'off'}",
        "'on'",
        "'off'",
        "'href'",
        "'xlink:href'",
        "'href'",
        "'xlink:href'",
        "'hide'",
        "'blur'",
        "'hide'",
        "'active'",
        "'input'",
        "'input'",
        "'input'",
        "'click'",
        "'click'",
        "'input'",
        "'click'",
        "'click'",
        "'click'",
        "'input'",
        "'click'",
        "'click'",
        "'click'",
        "'light'",
        "''",
        "''",
        "'light'",
        "'thick'",
        "'heavy'",
        "'light'",
        "''",
        "'random'",
        "'medium'",
        "'willow'",
        "'light'",
        "'medium'",
        "'Crysanthemum'",
        "'Falling Leaves'",
        "'Floral'",
        "'Willow'",
        "'Random'",
        "'Random'",
        "'Crackle'",
        "'Crossette'",
        "'Crysanthemum'",
        "'Falling Leaves'",
        "'Floral'",
        "'Ghost'",
        "'Horse Tail'",
        "'Palm'",
        "'Ring'",
        "'Strobe'",
        "'Willow'",
        "'.loading-init'",
        "'remove'",
        "<option value=\"${opt.value}\">${opt.label}</option>",
        "''",
        "''",
        "<option value=\"${opt}\">${opt}</option>",
        "''",
        "'3\"'",
        "'4\"'",
        "'6\"'",
        "'8\"'",
        "'12\"'",
        "'16\"'",
        "<option value=\"${i}\">${opt}</option>",
        "'Low'",
        "'Normal'",
        "'High'",
        "'None'",
        "'Dim'",
        "'Normal'",
        "${value*100}%",
        "'Random'",
        "'Random'",
        "'pointerstart'",
        "'pointerend'",
        "'pointermove'",
        "'keydown'",
        "'px'",
        "'px'",
        "'resize'",
        "'source-over'",
        "rgba(0, 0, 0, ${store.state.config.longExposure ? 0.0025 : 0.175 * speed})",
        "'rgba(255, 255, 255, 1)'",
        "'rgba(255, 160, 20, 0.2)'",
        "'rgba(255, 140, 20, 0.11)'",
        "'rgba(255, 120, 20, 0)'",
        "'lighten'",
        "'square'",
        "'round'",
        "'#fff'",
        "'butt'",
        "rgb(${currentSkyColor.r | 0}, ${currentSkyColor.g | 0}, ${currentSkyColor.b | 0})",
        "'ticker'",
        "'burstSmall'",
        "'burstSmall'",
        "'string'",
        "'random'",
        "'willow'",
        "'lift'",
        "'crackleSmall'",
        "'crackle'",
        "'light'",
        "'medium'",
        "'heavy'",
        "'thick'",
        "'streamer'",
        "'willow'",
        "'string'",
        "'random'",
        "'Invalid shell color. Expected string or array of strings, but got: '",
        "'light'",
        "'streamer'",
        "'burst'",
        "'https://s3-us-west-2.amazonaws.com/s.cdpn.io/329180/'",
        "'lift1.mp3'",
        "'lift2.mp3'",
        "'lift3.mp3'",
        "'burst1.mp3'",
        "'burst2.mp3'",
        "'burst-sm-1.mp3'",
        "'burst-sm-2.mp3'",
        "'crackle1.mp3'",
        "'crackle-sm-1.mp3'",
        "'lift'",
        "'burstSmall'",
        "Sound of type \"${type}\" doesn't exist.",
        "'.loading-init__status'",
        "'Lighting Fuses'"
    ],
    "variables": [
        "IS_MOBILE",
        "IS_DESKTOP",
        "IS_HEADER",
        "IS_HIGH_END_DEVICE",
        "hwConcurrency",
        "minCount",
        "MAX_WIDTH",
        "MAX_HEIGHT",
        "GRAVITY",
        "simSpeed",
        "stageW",
        "stageH",
        "quality",
        "isLowQuality",
        "isNormalQuality",
        "isHighQuality",
        "QUALITY_LOW",
        "QUALITY_NORMAL",
        "QUALITY_HIGH",
        "SKY_LIGHT_NONE",
        "SKY_LIGHT_DIM",
        "SKY_LIGHT_NORMAL",
        "COLOR",
        "INVISIBLE",
        "PI_2",
        "PI_HALF",
        "trailsStage",
        "mainStage",
        "stages",
        "store",
        "prevState",
        "serializedData",
        "config",
        "size",
        "sizeRaw",
        "sizeInt",
        "config",
        "paused",
        "newValue",
        "config",
        "isRunning",
        "soundEnabledSelector",
        "canPlaySoundSelector",
        "qualitySelector",
        "shellNameSelector",
        "shellSizeSelector",
        "finaleSelector",
        "skyLightingSelector",
        "scaleFactorSelector",
        "helpContent",
        "nodeKeyToHelpKey",
        "appNodes",
        "pauseBtnIcon",
        "soundBtnIcon",
        "canPlaySound",
        "canPlaySoundPrev",
        "updateConfigNoEvent",
        "helpKey",
        "COLOR_NAMES",
        "COLOR_CODES",
        "COLOR_CODES_W_INVIS",
        "COLOR_CODE_INDEXES",
        "COLOR_TUPLES",
        "lastColor",
        "notSame",
        "notColor",
        "limitWhite",
        "color",
        "crysanthemumShell",
        "glitter",
        "singleColor",
        "color",
        "pistil",
        "pistilColor",
        "secondColor",
        "streamers",
        "starDensity",
        "ghostShell",
        "shell",
        "ghostColor",
        "pistil",
        "pistilColor",
        "strobeShell",
        "color",
        "palmShell",
        "color",
        "thick",
        "ringShell",
        "color",
        "pistil",
        "crossetteShell",
        "color",
        "floralShell",
        "fallingLeavesShell",
        "willowShell",
        "crackleShell",
        "color",
        "horsetailShell",
        "color",
        "fastShellBlacklist",
        "isRandom",
        "shellName",
        "shellTypes",
        "shellNames",
        "options",
        "edge",
        "baseSize",
        "maxVariance",
        "variance",
        "size",
        "height",
        "centerOffset",
        "x",
        "shell",
        "w",
        "h",
        "size",
        "shell",
        "extraDelay",
        "shellType",
        "size",
        "shell",
        "extraDelay",
        "size1",
        "size2",
        "shell1",
        "shell2",
        "leftOffset",
        "rightOffset",
        "extraDelay",
        "shellType",
        "baseSize",
        "smallSize",
        "offset",
        "shell1",
        "leftDelay",
        "rightDelay",
        "offset",
        "shell2",
        "offset",
        "shell3",
        "barrageCountHalf",
        "largeSize",
        "smallSize",
        "randomMainShell",
        "randomSpecialShell",
        "randomShell",
        "isRandom",
        "shellType",
        "shell",
        "height",
        "count",
        "delay",
        "offset",
        "delayOffset",
        "barrageCount",
        "specialIndex",
        "shellSize",
        "randomMainShell",
        "randomSpecialShell",
        "isRandom",
        "shellType",
        "shell",
        "height",
        "count",
        "delay",
        "offset",
        "delayOffset",
        "useSpecial",
        "sequences",
        "isFirstSeq",
        "finaleCount",
        "currentFinaleCount",
        "shell",
        "rand",
        "activePointerCount",
        "isUpdatingSpeed",
        "btnSize",
        "w",
        "h",
        "containerW",
        "containerH",
        "scaleFactor",
        "currentFrame",
        "speedBarOpacity",
        "autoLaunchTime",
        "edge",
        "newSpeed",
        "width",
        "stageW",
        "height",
        "stageH",
        "timeStep",
        "speed",
        "starDrag",
        "starDragHeavy",
        "sparkDrag",
        "gAcc",
        "stars",
        "i",
        "star",
        "burnRate",
        "burnRateInverse",
        "sparks",
        "i",
        "spark",
        "mainStage",
        "width",
        "stageW",
        "height",
        "stageH",
        "trailsCtx",
        "mainCtx",
        "scaleFactor",
        "bf",
        "burstGradient",
        "stars",
        "sparks",
        "speedBarHeight",
        "currentSkyColor",
        "targetSkyColor",
        "maxSkySaturation",
        "maxStarCount",
        "totalStarCount",
        "count",
        "intensity",
        "maxColorComponent",
        "colorChange",
        "angleDelta",
        "end",
        "angle",
        "start",
        "angle",
        "start",
        "R",
        "C",
        "C_HALF",
        "i",
        "ringAngle",
        "ringSize",
        "partsPerFullRing",
        "partsPerArc",
        "angleInc",
        "angleOffset",
        "maxRandomAngleOffset",
        "i",
        "randomAngleOffset",
        "angle",
        "startAngle",
        "count",
        "newStar",
        "count",
        "density",
        "scaledSize",
        "width",
        "stageW",
        "height",
        "stageH",
        "hpad",
        "vpad",
        "minHeightPercent",
        "minHeight",
        "launchX",
        "launchY",
        "height",
        "burstY",
        "launchDistance",
        "launchVelocity",
        "comet",
        "speed",
        "color",
        "onDeath",
        "sparkFreq",
        "sparkSpeed",
        "sparkLife",
        "sparkLifeVariation",
        "playedDeathSound",
        "firstStar",
        "starFactory",
        "standardInitialSpeed",
        "star",
        "ringStartAngle",
        "ringSquash",
        "initSpeedX",
        "initSpeedY",
        "newSpeed",
        "newAngle",
        "star",
        "start",
        "start2",
        "arc",
        "innerShell",
        "innerShell",
        "maxDiff",
        "sizeDifferenceFromMaxSize",
        "soundScale",
        "BurstFlash",
        "instance",
        "collection",
        "Star",
        "instance",
        "Spark",
        "instance",
        "soundManager",
        "allFilePromises",
        "customError",
        "types",
        "source",
        "source",
        "filePromises",
        "fileURL",
        "promise",
        "now",
        "source",
        "initialVolume",
        "initialPlaybackRate",
        "scaledVolume",
        "scaledPlaybackRate",
        "gainNode",
        "buffer",
        "bufferSource"
    ],
    "comments": [
        "This is a prime example of what starts out as a simple project",
        "and snowballs way beyond its intended size. It's a little clunky",
        "reading/working on this single file, but here it is anyways :)",
        "Detect high end devices. This will be a moving target.",
        "Large screens indicate a full size computer, which often have hyper threading these days.",
        "So a quad core desktop machine has 8 cores. We'll place a higher min threshold there.",
        "Prevent canvases from getting too large on ridiculous screen sizes.",
        "8K - can restrict this if needed",
        "Acceleration in px/s",
        "Width/height values that take scale into account.",
        "USE THESE FOR DRAWING POSITIONS",
        "All quality globals will be overwritten and updated via `configDidUpdate`.",
        "Special invisible color (not rendered, and therefore not in COLOR map)",
        "Stage.disableHighDPI = true;",
        "Fullscreen helpers, using Fscreen for prefixes.",
        "Note that fullscreen state is synced to store, and the store should be the source",
        "of truth for whether the app is in fullscreen mode or not.",
        "Attempt to toggle fullscreen mode.",
        "Sync fullscreen changes with store. An event listener is necessary because the user can",
        "toggle fullscreen mode directly through the browser, and we want to react to that.",
        "Simple state container; the source of truth.",
        "will be unpaused in init()",
        "Note that config values used for <select>s must be strings, unless manually converting values to strings",
        "at render time, and parsing on change.",
        "will be mirrored to a global variable named `quality` in `configDidUpdate`, for perf.",
        "Desktop default",
        "Profile header default (doesn't need to be an int)",
        "Mobile default",
        "Load / persist select state to localStorage",
        "Mutates state because `store.load()` should only be called once immediately after store is created, before any subscriptions.",
        "Deprecated data format. Checked with care (it's not namespaced).",
        "Attempt to parse data, ignoring if there is an error.",
        "Only restore validated values",
        "Actions",
        "---------",
        "Map config to various properties & apply side effects",
        "Selectors",
        "-----------",
        "Whether user has enabled sound.",
        "Whether any sounds are allowed, taking into account multiple factors.",
        "Convert quality to number.",
        "Convert shell size to number.",
        "Help Content",
        "Render app UI / keep in sync with state",
        "Help UI",
        "Convert appNodes selectors to dom nodes",
        "Remove fullscreen control if not supported.",
        "First render is called in init()",
        "Perform side effects on state changes",
        "Store value as number.",
        "Changing scaleFactor requires triggering resize handling code as well.",
        "Constant derivations",
        "Invisible stars need an indentifier, even through they won't be rendered - physics still apply.",
        "Map of color codes to their index in the array. Useful for quickly determining if a color has already been updated in a loop.",
        "Tuples is a map keys by color codes (hex) with values of { r, g, b } tuples (still just objects).",
        "Get a random color.",
        "Get a random color, with some customization options available.",
        "limit the amount of white chosen randomly",
        "Shell helpers",
        "Unique shell types",
        "Extend crysanthemum shell",
        "Ghost effect can be fast, so extend star life",
        "Ensure we always have a single color other than white",
        "Always use streamers, and sometimes a pistil",
        "Ghost effect - transition from invisible to chosen color",
        "We don't want glitter to be spewed by invisible stars, and we don't currently",
        "have a way to transition glitter state. So we'll disable it.",
        "return Object.assign({}, defaultShell, config);",
        "favor gold",
        "Add strobe effect to white horsetails, to make them more interesting",
        "Special selection for codepen header.",
        "Normal operation",
        "Get a random shell, not including processing intensive varients",
        "Note this is only random when \"Random\" shell is selected in config.",
        "Also, this does not create the shell, only returns the factory function.",
        "Remove loading state",
        "Populate dropdowns",
        "shell type",
        "shell size",
        "0.9 is mobile default",
        "Begin simulation",
        "initial render",
        "Apply initial config",
        "Launches a shell from a user pointer event, based on state.config",
        "Sequences",
        "-----------",
        "(cos(x*5π+0.5π)+1)/2 is a custom wave bounded by 0 and 1 used to set varying launch heights",
        "P",
        "O",
        "Esc",
        "Account for window resize and custom scale changes.",
        "Try to adopt screen size, heeding maximum sizes specified",
        "On small screens, use full device height",
        "Account for scale",
        "Compute initial dimensions",
        "Dynamic globals",
        "On phones it's hard to hit the edge pixels in order to set speed at 0 or 1, so some padding is provided to make that easier.",
        "show speed bar after an update",
        "If we updated the speed, return true",
        "Return false if the speed wasn't updated",
        "Extracted function to keep `update()` optimized",
        "Always try to fade out speed bar",
        "half a second",
        "auto launch shells",
        "Stars",
        "Only update each star once per frame. Since color can change, it's possible a star could update twice without this, leading to a \"jump\".",
        "Apply air drag if star isn't \"heavy\". The heavy property is used for the shell comets.",
        "Handle star transitions",
        "Strobes in the following pattern: on:off:off:on:off:off in increments of `strobeFreq` ms.",
        "Sparks",
        "Account for high DPI screens, and custom scale factor.",
        "Draw queued burst flashes",
        "These must also be drawn using source-over due to Safari. Seems rendering the gradients using lighten draws large black boxes instead.",
        "Thankfully, these burst flashes look pretty much the same either way.",
        "Remaining drawing on trails canvas will use 'lighten' blend mode",
        "Draw stars",
        "Draw sparks",
        "Render speed bar if visible",
        "Draw colored overlay based on combined brightness of stars (light up the sky!)",
        "Note: this is applied to the canvas container's background-color, so it's behind the particles",
        "The maximum r, g, or b value that will be used (255 would represent no maximum)",
        "How many stars are required in total to reach maximum sky brightness",
        "Initialize sky as black",
        "Add each known color to sky, multiplied by particle count of that color. This will put RGB values wildly out of bounds, but we'll scale them back later.",
        "Also add up total star count.",
        "Clamp intensity at 1.0, and map to a custom non-linear curve. This allows few stars to perceivably light up the sky, while more stars continue to increase the brightness but at a lesser rate. This is more inline with humans' non-linear brightness perception.",
        "Figure out which color component has the highest value, so we can scale them without affecting the ratios.",
        "Prevent 0 from being used, so we don't divide by zero in the next step.",
        "Scale all color components to a max of `maxSkySaturation`, and apply intensity.",
        "Animate changes to color to smooth out transitions.",
        "Helper used to semi-randomly spread particles over an arc",
        "Values are flexible - `start` and `arcLength` can be negative, and `randomness` is simply a multiplier for random addition.",
        "Sometimes there is an extra particle at the end, too close to the start. Subtracting half the angleDelta ensures that is skipped.",
        "Would be nice to fix this a better way.",
        "Optimization: `angle=angle+angleDelta` vs. angle+=angleDelta",
        "V8 deoptimises with let compound assignment",
        "Assuming sphere with surface area of `count`, calculate various",
        "properties of said sphere (unit is stars).",
        "Radius",
        "Circumference",
        "Half Circumference",
        "Make a series of rings, sizing them as if they were spaced evenly",
        "along the curved surface of a sphere.",
        "Each particle needs a bit of randomness to improve appearance.",
        "Various star effects.",
        "These are designed to be attached to a star's `onDeath` event.",
        "Crossette breaks star into four same-color pieces which branch in a cross-like shape.",
        "Flower is like a mini shell",
        "Queue burst flash render",
        "Floral burst with willow stars",
        "Queue burst flash render",
        "Crackle pops into a small cloud of golden sparks.",
        "apply near cubic falloff to speed (places more particles towards outside)",
        "Set default starCount if needed, will be based on shell size and scale exponentially, like a sphere's surface area.",
        "Distance from sides of screen to keep shells.",
        "Distance from top of screen to keep shell bursts.",
        "Minimum burst height, as a percentage of stage height",
        "Minimum burst height in px",
        "Using a custom power curve to approximate Vi needed to reach launchDistance under gravity and air drag.",
        "Magic numbers came from testing.",
        "Hang time is derived linearly from Vi; exact number came from testing",
        "making comet \"heavy\" limits air drag",
        "comet spark trail",
        "Randomly make comet \"burn out\" a bit early.",
        "This is disabled for horsetail shells, due to their very short airtime.",
        "Set burst speed so overall burst grows to set size. This specific formula was derived from testing, and is affected by simulated air drag.",
        "Some death effects, like crackle, play a sound, but should only be played once.",
        "Apply quality to spark count",
        "Star factory for primary burst, pistils, and streamers.",
        "For non-horsetail shells, compute an initial vertical speed to add to star burst.",
        "The magic number comes from testing what looks best. The ideal is that all shell",
        "bursts appear visually centered for the majority of the star life (excl. willows etc.)",
        "add minor variation to star life",
        "How many milliseconds between switch of strobe state \"tick\". Note that the strobe pattern",
        "is on:off:off, so this is the \"on\" duration, while the \"off\" duration is twice as long.",
        "falsey value creates random color in starFactory",
        "Rings have positional randomness, but are rotated randomly",
        "Create a ring, squashed horizontally",
        "Rotate ring",
        "apply near cubic falloff to speed (places more particles towards outside)",
        "speed,",
        "add minor variation to star life",
        "Normal burst",
        "Not creating a full arc automatically reduces star count.",
        "Queue burst flash render",
        "Play sound, but only for \"original\" shell, the one that was launched.",
        "We don't want multiple sounds from pistil or streamer \"sub-shells\".",
        "This can be detected by the presence of a comet.",
        "Scale explosion sound based on current shell size and selected (max) shell size.",
        "Shooting selected shell size will always sound the same no matter the selected size,",
        "but when smaller shells are auto-fired, they will sound smaller. It doesn't sound great",
        "when a value too small is given though, so instead of basing it on proportions, we just",
        "look at the difference in size and map it to a range known to sound good.",
        "Helper to generate objects for storing active particles.",
        "Particles are stored in arrays keyed by color (code, not name) for improved rendering performance.",
        "Star properties (WIP)",
        "-----------------------",
        "transitionTime - how close to end of life that star transition happens",
        "Visual properties",
        "Star particles will be keyed by color",
        "ms between spark emissions",
        "Public method for cleaning up and returning an instance back to the pool.",
        "Call onDeath handler if available (and pass it current star instance)",
        "Clean up",
        "Add back to the pool.",
        "Visual properties",
        "set in `configDidUpdate()`",
        "Star particles will be keyed by color",
        "Public method for cleaning up and returning an instance back to the pool.",
        "Add back to the pool.",
        "Promise will resolve with decoded audio buffer.",
        "Play a sound with no volume for iOS. This 'unlocks' the audio context when the user first enables sound.",
        "Chrome mobile requires interaction before starting audio context.",
        "The sound toggle button is triggered on 'touchstart', which doesn't seem to count as a full",
        "interaction to Chrome. I guess it needs a click? At any rate if the first thing the user does",
        "is enable audio, it doesn't work. Using a setTimeout allows the first interaction to be registered.",
        "Perhaps a better solution is to track whether the user has interacted, and if not but they try enabling",
        "sound, show a tooltip that they should tap again to enable sound.",
        "Private property used to throttle small burst sounds.",
        "Ensure `scale` is within valid range.",
        "Disallow starting new sounds if sound is disabled, app is running in slow motion, or paused.",
        "Slow motion check has some wiggle room in case user doesn't finish dragging the speed bar",
        "Throttle small bursts, since floral/falling leaves shells have a lot of them.",
        "Volume descreases with scale.",
        "Playback rate increases with scale. For this, we map the scale of 0-1 to a scale of 2-1.",
        "So at a scale of 1, sound plays normally, but as scale approaches 0 speed approaches double.",
        "Kick things off.",
        "CodePen profile header doesn't need audio, just initialize.",
        "Allow status to render, then preload assets and start app.",
        "Codepen preview doesn't like to load the audio, so just init to fix the preview for now.",
        "setLoadingStatus('Error Loading Audio');"
    ],
    "docstrings": [
        "* Helper used to create a spherical burst of particles.\n *\n * @param  {Number} count               The desired number of stars/particles. This value is a suggestion, and the\n *                                      created burst may have more particles. The current algorithm can't perfectly\n *                                      distribute a specific number of points evenly on a sphere's surface.\n * @param  {Function} particleFactory   Called once per star/particle generated. Passed two arguments:\n *                                        `angle`: The direction of the star/particle.\n *                                        `speed`: A multipler for the particle speed, from 0.0 to 1.0.\n * @param  {Number} startAngle=0        For segmented bursts, you can generate only a partial arc of particles. This\n *                                      allows setting the starting arc angle (radians).\n * @param  {Number} arcLength=TAU       The length of the arc (radians). Defaults to a full circle.\n *\n * @return {void}              Returns nothing; it's up to `particleFactory` to use the given data.",
        "* Shell can be constructed with options:\n *\n * spreadSize:      Size of the burst.\n * starCount: Number of stars to create. This is optional, and will be set to a reasonable quantity for size if omitted.\n * starLife:\n * starLifeVariation:\n * color:\n * glitterColor:\n * glitter: One of: 'light', 'medium', 'heavy', 'streamer', 'willow'\n * pistil:\n * pistilColor:\n * streamers:\n * crossette:\n * floral:\n * crackle:",
        "* Play a sound of `type`. Will randomly pick a file associated with type, and play it at the specified volume\n\t * and play speed, with a bit of random variance in play speed. This is all based on `sources` config.\n\t *\n\t * @param  {string} type - The type of sound to play.\n\t * @param  {?number} scale=1 - Value between 0 and 1 (values outside range will be clamped). Scales less than one\n\t *                             descrease volume and increase playback speed. This is because large explosions are\n\t *                             louder, deeper, and reverberate longer than small explosions.\n\t *                             Note that a scale of 0 will mute the sound.",
        "*all* the way back."
    ],
    "functions": [
        "getDefaultScaleFactor",
        "fullscreenEnabled",
        "isFullscreen",
        "toggleFullscreen",
        "_dispatch",
        "setState",
        "subscribe",
        "load",
        "persist",
        "togglePause",
        "toggleSound",
        "toggleMenu",
        "updateConfig",
        "configDidUpdate",
        "renderApp",
        "handleStateChange",
        "getConfigFromDOM",
        "randomColorSimple",
        "randomColor",
        "whiteOrGold",
        "makePistilColor",
        "randomShellName",
        "randomShell",
        "shellFromConfig",
        "randomFastShell",
        "init",
        "setOptionsForSelect",
        "fitShellPositionInBoundsH",
        "fitShellPositionInBoundsV",
        "getRandomShellPositionH",
        "getRandomShellPositionV",
        "getRandomShellSize",
        "launchShellFromConfig",
        "seqRandomShell",
        "seqRandomFastShell",
        "seqTwoRandom",
        "seqTriple",
        "seqPyramid",
        "launchShell",
        "seqSmallBarrage",
        "launchShell",
        "startSequence",
        "handlePointerStart",
        "handlePointerEnd",
        "handlePointerMove",
        "handleKeydown",
        "handleResize",
        "updateSpeedFromEvent",
        "updateGlobals",
        "update",
        "render",
        "colorSky",
        "createParticleArc",
        "createBurst",
        "crossetteEffect",
        "floralEffect",
        "fallingLeavesEffect",
        "crackleEffect",
        "launch",
        "burst",
        "_new",
        "add",
        "returnInstance",
        "createParticleCollection",
        "_new",
        "add",
        "returnInstance",
        "_new",
        "add",
        "returnInstance",
        "preload",
        "checkStatus",
        "pauseAll",
        "resumeAll",
        "playSound",
        "setLoadingStatus"
    ],
    "classes": [
        "Shell"
    ]
}