{
    "identifiers": [
        "jp",
        "co",
        "example",
        "ecommerce_b",
        "service",
        "org",
        "junit",
        "Assert",
        "assertNotNull",
        "org",
        "junit",
        "Assert",
        "fail",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertTrue",
        "java",
        "sql",
        "Timestamp",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "org",
        "junit",
        "jupiter",
        "api",
        "AfterAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "AfterEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayName",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "jdbc",
        "core",
        "BeanPropertyRowMapper",
        "org",
        "springframework",
        "jdbc",
        "core",
        "RowMapper",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "MapSqlParameterSource",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "NamedParameterJdbcTemplate",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "SqlParameterSource",
        "org",
        "springframework",
        "jdbc",
        "datasource",
        "SingleConnectionDataSource",
        "jp",
        "co",
        "example",
        "ecommerce_b",
        "domain",
        "Favorite",
        "SpringBootTest",
        "Autowired",
        "service",
        "FAVORITE_ROW_MAPPER",
        "BeforeAll",
        "singleConnectionDataSource",
        "template",
        "singleConnectionDataSource",
        "sql",
        "template",
        "update",
        "sql",
        "AfterAll",
        "BeforeEach",
        "AfterEach",
        "Test",
        "DisplayName",
        "insertFavorite",
        "insertFavorite",
        "setUserId",
        "insertFavorite",
        "setItemId",
        "nowDate",
        "currentTimeMillis",
        "insertFavorite",
        "setFavoriteDate",
        "nowDate",
        "service",
        "insertFavorite",
        "insertFavorite",
        "singleConnectionDataSource",
        "template",
        "singleConnectionDataSource",
        "sql",
        "favorite",
        "template",
        "queryForObject",
        "sql",
        "FAVORITE_ROW_MAPPER",
        "assertNotNull",
        "favorite",
        "format",
        "format",
        "format",
        "nowDate",
        "str2",
        "format",
        "format",
        "favorite",
        "getFavoriteDate",
        "assertEquals",
        "insertFavorite",
        "getUserId",
        "favorite",
        "getUserId",
        "assertEquals",
        "insertFavorite",
        "getItemId",
        "favorite",
        "getItemId",
        "assertEquals",
        "str2",
        "Test",
        "DisplayName",
        "singleConnectionDataSource",
        "template",
        "singleConnectionDataSource",
        "insertSql",
        "template",
        "update",
        "insertSql",
        "sql",
        "favorite",
        "template",
        "queryForObject",
        "sql",
        "FAVORITE_ROW_MAPPER",
        "assertNotNull",
        "favorite",
        "format",
        "format",
        "format",
        "favorite",
        "getFavoriteDate",
        "findFavorite",
        "service",
        "findByUserIdItemId",
        "favorite",
        "getUserId",
        "favorite",
        "getItemId",
        "str2",
        "format",
        "format",
        "findFavorite",
        "getFavoriteDate",
        "assertEquals",
        "favorite",
        "getUserId",
        "findFavorite",
        "getUserId",
        "assertEquals",
        "favorite",
        "getItemId",
        "findFavorite",
        "getItemId",
        "assertEquals",
        "str2",
        "Test",
        "DisplayName",
        "singleConnectionDataSource",
        "template",
        "singleConnectionDataSource",
        "insertSql",
        "param",
        "template",
        "update",
        "insertSql",
        "param",
        "sql",
        "insertFavoriteList",
        "template",
        "query",
        "sql",
        "param",
        "FAVORITE_ROW_MAPPER",
        "assertNotNull",
        "insertFavoriteList",
        "executionDataCount",
        "insertFavoriteList",
        "size",
        "favoriteList",
        "service",
        "favoriteAll",
        "insertFavoriteList",
        "get",
        "getUserId",
        "assertEquals",
        "executionDataCount",
        "favoriteList",
        "size",
        "Test",
        "DisplayName",
        "singleConnectionDataSource",
        "template",
        "singleConnectionDataSource",
        "insertSql",
        "param",
        "template",
        "update",
        "insertSql",
        "param",
        "sql",
        "favorite",
        "template",
        "queryForObject",
        "sql",
        "param",
        "FAVORITE_ROW_MAPPER",
        "assertNotNull",
        "favorite",
        "getNumberOfDataSql",
        "deleteBeforeCount",
        "template",
        "queryForObject",
        "getNumberOfDataSql",
        "param",
        "service",
        "favorite",
        "getUserId",
        "favorite",
        "getItemId",
        "template",
        "queryForObject",
        "sql",
        "FAVORITE_ROW_MAPPER",
        "fail",
        "e",
        "assertTrue",
        "deleteAfterCount",
        "template",
        "queryForObject",
        "getNumberOfDataSql",
        "param",
        "assertEquals",
        "deleteBeforeCount",
        "deleteAfterCount"
    ],
    "literals": [
        "\"jdbc:postgresql://localhost:5432/ec_exam_test\"",
        "\"postgres\"",
        "\"postgres\"",
        "\"DELETE FROM favorites\"",
        "\"商品をお気に入り登録するテスト\"",
        "\"jdbc:postgresql://localhost:5432/ec_exam_test\"",
        "\"postgres\"",
        "\"postgres\"",
        "\"SELECT * FROM favorites WHERE user_id = 1 AND item_id = 1;\"",
        "\"yyyy-MM-dd\"",
        "\"UserIdとItemIdからお気に入り登録情報を取得する\"",
        "\"jdbc:postgresql://localhost:5432/ec_exam_test\"",
        "\"postgres\"",
        "\"postgres\"",
        "\"INSERT INTO favorites(id, user_id, item_id, favorite_date)\"",
        "\" VALUES('2', '2', '2', '2022-07-26')\"",
        "\"SELECT * FROM favorites WHERE user_id = 2 AND item_id = 2;\"",
        "\"yyyy-MM-dd\"",
        "\"ユーザーのお気に入りリストを取得するテスト\"",
        "\"jdbc:postgresql://localhost:5432/ec_exam_test\"",
        "\"postgres\"",
        "\"postgres\"",
        "\"INSERT INTO favorites(id, user_id, item_id, favorite_date)\"",
        "\" VALUES('3', '3', '3', '2022-07-26')\"",
        "\" ,('4', '3', '4', '2022-07-26')\"",
        "\"SELECT * FROM favorites WHERE user_id = 3;\"",
        "\"お気に入りリストから削除するテスト\"",
        "\"jdbc:postgresql://localhost:5432/ec_exam_test\"",
        "\"postgres\"",
        "\"postgres\"",
        "\"INSERT INTO favorites(id, user_id, item_id, favorite_date)\"",
        "\" VALUES('5', '5', '5', '2022-07-26')\"",
        "\"SELECT * FROM favorites WHERE user_id = 5 AND item_id = 5;\"",
        "\"SELECT COUNT(*) FROM favorites WHERE user_id = 5 AND item_id = 5\"",
        "\"失敗です\"",
        "\"成功です\""
    ],
    "variables": [
        "service"
    ],
    "comments": [
        "テスト用のデータをinsert",
        "insertFavorite.setId(1);",
        "現在の時刻データを代入",
        "insert実行",
        "正常にinsertできたかsqlを発行して確認",
        "日付の型をTimeStampからStringに変換",
        "指定した文字列形式を代入",
        "formatで指定した形式に変換",
        "System.out.println(str);",
        "取得データも同様に変換しておく",
        "取得した情報をassertで確認",
        "テスト用のデータをinsert",
        "正常にinsertできたかsqlを発行して確認",
        "ここで情報を取得しておく",
        "日付の型をTimeStampからStringに変換",
        "指定した文字列形式を代入",
        "DBから取得した日付データをformatで指定した形式に変換",
        "UserIdとItemIdからお気に入り情報を取得する",
        "DBから取得した日付データをformatで指定した形式に変換",
        "取得した情報をassertで確認",
        "テスト用のデータを複数件insert",
        "正常にinsertできたかsqlを発行して確認",
        "ここで情報を取得しておく",
        "データ数を取得",
        "favoriteAll()を実行(Listで情報取得)",
        "データ数が一致しているか確認",
        "テスト用のデータをinsert",
        "正常にinsertできたかsqlを発行して確認(※1)",
        "ここで情報を取得しておく",
        "削除前のデータ数を取得",
        "deleteの実行",
        "deleteできたか確認（※1を再度実行しデータがないはずなのでcatchさせる）",
        "delete後のデータの数を算出",
        "deleteの確認テスト"
    ],
    "docstrings": [],
    "functions": [
        "setUpBeforeClass",
        "tearDownAfterClass",
        "setUp",
        "tearDown",
        "testInsert",
        "testFavoriteItemByUserId",
        "testFavoriteAll",
        "testDelete"
    ],
    "classes": [
        "FavoriteServiceTest"
    ]
}