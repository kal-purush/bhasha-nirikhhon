{
    "identifiers": [
        "bodyParser",
        "express",
        "Router",
        "Request",
        "Response",
        "filterImageFromURL",
        "deleteLocalFiles",
        "validURL",
        "express",
        "process",
        "app",
        "bodyParser",
        "app",
        "req",
        "res",
        "req",
        "image_url",
        "res",
        "validURL",
        "image_url",
        "res",
        "filterImageFromURL",
        "image_url",
        "res",
        "file_path",
        "err",
        "err",
        "err",
        "res",
        "err",
        "deleteLocalFiles",
        "file_path",
        "e",
        "file_path",
        "app",
        "req",
        "res",
        "res",
        "app",
        "port",
        "port"
    ],
    "literals": [
        "'body-parser'",
        "'express'",
        "'./util/util'",
        "\"/filteredimage\"",
        "image_url is required",
        "not a valid URL",
        "error : ${err}",
        "\"error removing \"",
        "\"/\"",
        "\"try GET /filteredimage?image_url={{}}\"",
        "server running http://localhost:${ port }",
        "press CTRL+C to stop server"
    ],
    "variables": [
        "app",
        "port",
        "file_path"
    ],
    "comments": [
        "Init the Express application",
        "Set the network port",
        "Use the body parser middleware for post requests",
        "res.status(200)",
        ".sendFile(file_path);",
        "@TODO1 IMPLEMENT A RESTFUL ENDPOINT",
        "GET /filteredimage?image_url={{URL}}",
        "endpoint to filter an image from a public url.",
        "IT SHOULD",
        "1",
        "1. validate the image_url query",
        "2. call filterImageFromURL(image_url) to filter the image",
        "3. send the resulting file in the response",
        "4. deletes any files on the server on finish of the response",
        "QUERY PARAMATERS",
        "image_url: URL of a publicly accessible image",
        "RETURNS",
        "the filtered image file [!!TIP res.sendFile(filteredpath); might be useful]",
        "! END @TODO1",
        "Root Endpoint",
        "Displays a simple message to the user",
        "Start the Server"
    ],
    "docstrings": [
        "**************************************************************************"
    ],
    "functions": [],
    "classes": []
}