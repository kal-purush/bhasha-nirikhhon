{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "yaml",
        "os",
        "pathlib",
        "Path",
        "otoole",
        "read_strategies",
        "ReadExcel",
        "otoole",
        "write_strategies",
        "WriteDatafile",
        "subprocess",
        "time",
        "importlib",
        "resources",
        "resources",
        "time",
        "strftime",
        "economy",
        "years",
        "scenario",
        "open",
        "f",
        "yaml",
        "safe_load",
        "f",
        "key",
        "value",
        "data_config",
        "items",
        "data_config",
        "key",
        "k",
        "v",
        "new_dict",
        "items",
        "k",
        "v",
        "_name",
        "x",
        "y",
        "y",
        "x",
        "y",
        "keep_dict",
        "items",
        "economy",
        "pd",
        "read_excel",
        "sheet_name",
        "k",
        "_dict",
        "k",
        "k",
        "keep_list",
        "key",
        "value",
        "__dict",
        "items",
        "__dict",
        "key",
        "__df",
        "columns",
        "__df",
        "__df",
        "scenario",
        "drop",
        "axis",
        "___df",
        "loc",
        "___df",
        "____df",
        "__df",
        "key",
        "value",
        "filtered_data",
        "items",
        "filtered_data",
        "key",
        "__df",
        "columns",
        "__df",
        "__df",
        "subset_of_economies",
        "___df",
        "loc",
        "___df",
        "____df",
        "__df",
        "key",
        "value",
        "filtered_data",
        "items",
        "filtered_data",
        "key",
        "key",
        "__df",
        "__df",
        "subset_of_economies",
        "___df",
        "loc",
        "___df",
        "____df",
        "__df",
        "key",
        "value",
        "filtered_data",
        "items",
        "filtered_data",
        "key",
        "__df",
        "columns",
        "__df",
        "drop",
        "axis",
        "___df",
        "loc",
        "___df",
        "____df",
        "key",
        "value",
        "filtered_data",
        "items",
        "filtered_data",
        "key",
        "__df",
        "columns",
        "__df",
        "drop",
        "axis",
        "___df",
        "loc",
        "___df",
        "____df",
        "k",
        "filtered_data",
        "k",
        "k",
        "keep_list",
        "list_of_dicts",
        "append",
        "__dict",
        "format",
        "economy",
        "os",
        "mkdir",
        "OSError",
        "os",
        "mkdir",
        "format",
        "economy",
        "OSError",
        "list_of_dicts",
        "key",
        "a_dict",
        "keys",
        "_dict",
        "list_of_dicts",
        "_dict",
        "key",
        "list_of_dfs",
        "append",
        "_df",
        "pd",
        "concat",
        "list_of_dfs",
        "_dfs",
        "drop_duplicates",
        "_dfs",
        "format",
        "economy",
        "pd",
        "ExcelWriter",
        "format",
        "tmp_directory",
        "economy",
        "writer",
        "k",
        "v",
        "combined_data",
        "items",
        "v",
        "to_excel",
        "writer",
        "sheet_name",
        "k",
        "index",
        "merge_cells",
        "format",
        "economy",
        "config_dict",
        "format",
        "tmp_directory",
        "economy",
        "ReadExcel",
        "WriteDatafile",
        "reader",
        "read",
        "_path",
        "open",
        "f",
        "yaml",
        "safe_load",
        "f",
        "key",
        "value",
        "contents",
        "items",
        "data",
        "key",
        "contents",
        "key",
        "contents",
        "key",
        "_df",
        "query",
        "_df2",
        "_df",
        "contents",
        "key",
        "key",
        "_df",
        "query",
        "_df2",
        "_df",
        "_df",
        "format",
        "tmp_directory",
        "economy",
        "writer",
        "write",
        "filtered_data2",
        "output_file",
        "default_values",
        "format",
        "economy",
        "os",
        "mkdir",
        "tmp_directory",
        "OSError",
        "open",
        "t",
        "t",
        "read",
        "open",
        "format",
        "tmp_directory",
        "economy",
        "f",
        "write",
        "model_text",
        "f",
        "close",
        "open",
        "format",
        "tmp_directory",
        "economy",
        "file",
        "file",
        "read",
        "filedata",
        "replace",
        "format",
        "tmp_directory",
        "open",
        "format",
        "tmp_directory",
        "economy",
        "file",
        "file",
        "write",
        "filedata",
        "subprocess",
        "run",
        "shell",
        "format",
        "economy",
        "economy",
        "os",
        "path",
        "join",
        "parent_directory",
        "child_directory",
        "os",
        "mkdir",
        "path",
        "OSError",
        "open",
        "f",
        "yaml",
        "safe_load",
        "f",
        "key",
        "value",
        "contents_var",
        "items",
        "contents_var",
        "key",
        "format",
        "tmp_directory",
        "key",
        "pd",
        "read_csv",
        "fpath",
        "reset_index",
        "drop",
        "_df",
        "k",
        "v",
        "k",
        "v",
        "results_df",
        "items",
        "v",
        "empty",
        "key",
        "value",
        "results_dfs",
        "items",
        "contents_var",
        "key",
        "results_dfs",
        "key",
        "indices",
        "ele",
        "ele",
        "indices",
        "ele",
        "unwanted_members",
        "pd",
        "pivot_table",
        "_df",
        "index",
        "_indices",
        "columns",
        "values",
        "aggfunc",
        "np",
        "sum",
        "df",
        "loc",
        "df",
        "df",
        "indices",
        "contents_var",
        "key",
        "ele",
        "ele",
        "indices",
        "ele",
        "unwanted_members",
        "pd",
        "pivot_table",
        "_df",
        "index",
        "_indices",
        "columns",
        "values",
        "df",
        "loc",
        "df",
        "df",
        "contents_var",
        "key",
        "ele",
        "ele",
        "indices",
        "ele",
        "unwanted_members",
        "pd",
        "pivot_table",
        "_df",
        "index",
        "_indices",
        "columns",
        "values",
        "df",
        "loc",
        "df",
        "df",
        "contents_var",
        "key",
        "ele",
        "ele",
        "indices",
        "ele",
        "unwanted_members",
        "pd",
        "pivot_table",
        "_df",
        "index",
        "_indices",
        "columns",
        "values",
        "df",
        "_result_tables",
        "key",
        "fillna",
        "k",
        "v",
        "k",
        "v",
        "_result_tables",
        "items",
        "v",
        "empty",
        "scenario",
        "lower",
        "results_tables",
        "pd",
        "ExcelWriter",
        "format",
        "economy",
        "economy",
        "scenario",
        "model_start",
        "writer",
        "k",
        "v",
        "results_tables",
        "items",
        "v",
        "to_excel",
        "writer",
        "sheet_name",
        "k",
        "merge_cells"
    ],
    "literals": [
        "\"%Y-%m-%d-%H%M%S\"",
        "'01_AUS'",
        "'Reference'",
        "'economy'",
        "'years'",
        "'scenario'",
        "'data_config.yml'",
        "'short'",
        "'None'",
        "\"../data/data-sheet-power.xlsx\"",
        "'SCENARIO'",
        "'SCENARIO'",
        "'SCENARIO'",
        "'REGION'",
        "'REGION'",
        "'REGION'",
        "'VALUE'",
        "'UNITS'",
        "'UNITS'",
        "'NOTES'",
        "'NOTES'",
        "'../tmp/{}'",
        "'../tmp'",
        "'../tmp/{}'",
        "'../tmp/{}'",
        "'./{}/combined_data_{}.xlsx'",
        "'./tmp/{}'",
        "'years'",
        "'../{}/combined_data_{}.xlsx'",
        "'data_config.yml'",
        "'type'",
        "'param'",
        "'YEAR'",
        "'indices'",
        "'YEAR < @subset_of_years+1'",
        "'type'",
        "'set'",
        "'YEAR'",
        "'VALUE < @subset_of_years+1'",
        "'../{}/datafile_from_python_{}.txt'",
        "'tmp/{}'",
        "'../osemosys_fast.txt'",
        "'../{}/model_{}.txt'",
        "'w'",
        "'%s\\n'",
        "'../{}/model_{}.txt'",
        "'r'",
        "\"param ResultsPath, symbolic default 'results';\"",
        "\"param ResultsPath, symbolic default '../{}';\"",
        "'../{}/model_{}.txt'",
        "'w'",
        "\"glpsol -d ../tmp/01_AUS/datafile_from_python_01_AUS.txt -m ../tmp/01_AUS/model_01_AUS.txt\"",
        "'tmp/{}'",
        "\"../results/\"",
        "'results_config.yml'",
        "'type'",
        "'var'",
        "'../{}/'",
        "'.csv'",
        "'indices'",
        "'TIMESLICE'",
        "'YEAR'",
        "'VALUE'",
        "'YEAR'",
        "'VALUE'",
        "'TIMESLICE'",
        "'type'",
        "'var'",
        "'YEAR'",
        "'VALUE'",
        "'YEAR'",
        "'VALUE'",
        "'type'",
        "'param'",
        "'YEAR'",
        "'VALUE'",
        "'YEAR'",
        "'VALUE'",
        "'type'",
        "'equ'",
        "'YEAR'",
        "'VALUE'",
        "'YEAR'",
        "'VALUE'",
        "'../results/{}/{}_results_{}_{}.xlsx'"
    ],
    "variables": [
        "model_start",
        "economy",
        "scenario",
        "years",
        "config_dict",
        "config_dict",
        "config_dict",
        "config_dict",
        "data_config",
        "keep_dict",
        "new_dict",
        "_name",
        "keep_dict",
        "key",
        "keep_list",
        "subset_of_economies",
        "_dict",
        "__dict",
        "filtered_data",
        "list_of_dicts",
        "__df",
        "___df",
        "____df",
        "filtered_data",
        "key",
        "filtered_data",
        "key",
        "__df",
        "___df",
        "____df",
        "filtered_data",
        "key",
        "filtered_data",
        "key",
        "__df",
        "___df",
        "____df",
        "filtered_data",
        "key",
        "filtered_data",
        "key",
        "__df",
        "___df",
        "____df",
        "filtered_data",
        "key",
        "__df",
        "___df",
        "____df",
        "filtered_data",
        "key",
        "__dict",
        "tmp_directory",
        "combined_data",
        "a_dict",
        "list_of_dfs",
        "_df",
        "_dfs",
        "_dfs",
        "combined_data",
        "key",
        "tmp_directory",
        "tmp_directory",
        "subset_of_years",
        "_path",
        "reader",
        "writer",
        "data",
        "default_values",
        "contents",
        "filtered_data2",
        "_df",
        "_df2",
        "filtered_data2",
        "key",
        "filtered_data2",
        "key",
        "_df2",
        "filtered_data2",
        "key",
        "filtered_data2",
        "key",
        "filtered_data2",
        "key",
        "output_file",
        "tmp_directory",
        "model_text",
        "f",
        "filedata",
        "filedata",
        "tmp_directory",
        "parent_directory",
        "child_directory",
        "path",
        "contents_var",
        "results_df",
        "fpath",
        "_df",
        "results_df",
        "key",
        "results_dfs",
        "results_dfs",
        "_result_tables",
        "indices",
        "_df",
        "unwanted_members",
        "_indices",
        "df",
        "df",
        "_result_tables",
        "key",
        "unwanted_members",
        "_indices",
        "df",
        "df",
        "_result_tables",
        "key",
        "unwanted_members",
        "_indices",
        "df",
        "df",
        "_result_tables",
        "key",
        "unwanted_members",
        "_indices",
        "df",
        "_result_tables",
        "key",
        "_result_tables",
        "key",
        "results_tables",
        "scenario"
    ],
    "comments": [
        "import click",
        "import glob",
        "import shutil",
        "model run inputs",
        "load the data",
        "load and filter",
        "creates dict of dataframes",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "return list_of_dicts",
        "combine datasets",
        "print (\"Creation of the directory %s failed\" % path)",
        "print (\"Creation of the directory failed\")",
        "write inputs",
        "use otoole",
        "prepare using otoole",
        "edit data (the dict of dataframes)",
        "print('parameters with YEAR are.. {}'.format(key))",
        "print('parameters without YEAR are.. {}'.format(key))",
        "print('sets are.. {}'.format(key))",
        "solve the model",
        "path = \"./tmp/\"",
        "update OSeMOSYS model file with the tmp directory for results",
        "print (\"Creation of the directory %s failed\" % path)",
        "making a copy of the model file in the tmp directory so it can be modified",
        "f = f.replace(\"param ResultsPath, symbolic default 'tmp';\",\"param ResultsPath, symbolic default '{}';\".format(tmp_directory))",
        "Read in the file",
        "Replace the target string",
        "Write the file out again",
        "subprocess.run(\"glpsol -d {}/datafile_from_python_{}.txt -m {}/model_{}.txt\".format(tmp_directory,economy,tmp_directory,economy),shell=True)",
        "process results",
        "print (\"Creation of the directory %s failed\" % path)",
        "with resources.open_text('aperc_osemosys','results_config.yml') as open_file:",
        "contents_var = yaml.load(open_file, Loader=yaml.FullLoader)",
        "print(fpath)",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "remove rows if all are zero",
        "df = df.loc[(df != 0).any(1)] # remove rows if all are zero",
        "write results"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}