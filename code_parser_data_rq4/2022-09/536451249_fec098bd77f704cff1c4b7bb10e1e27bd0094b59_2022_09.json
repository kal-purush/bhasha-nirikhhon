{
    "identifiers": [
        "i",
        "number",
        "i",
        "number",
        "i",
        "e",
        "input",
        "currentString",
        "currentString",
        "resultDisplayed",
        "input",
        "e",
        "resultDisplayed",
        "lastChar",
        "lastChar",
        "lastChar",
        "lastChar",
        "resultDisplayed",
        "input",
        "e",
        "resultDisplayed",
        "input",
        "input",
        "e",
        "i",
        "i",
        "i",
        "e",
        "input",
        "currentString",
        "currentString",
        "lastChar",
        "lastChar",
        "lastChar",
        "lastChar",
        "currentString",
        "currentString",
        "e",
        "input",
        "newString",
        "currentString",
        "input",
        "e",
        "result",
        "input",
        "inputString",
        "inputString",
        "inputString",
        "operators",
        "numbers",
        "operators",
        "divide",
        "numbers",
        "divide",
        "numbers",
        "divide",
        "numbers",
        "divide",
        "operators",
        "divide",
        "divide",
        "operators",
        "operators",
        "multiply",
        "numbers",
        "multiply",
        "numbers",
        "multiply",
        "numbers",
        "multiply",
        "operators",
        "multiply",
        "multiply",
        "operators",
        "operators",
        "subtract",
        "numbers",
        "subtract",
        "numbers",
        "subtract",
        "numbers",
        "subtract",
        "operators",
        "subtract",
        "subtract",
        "operators",
        "operators",
        "add",
        "numbers",
        "add",
        "parseFloat",
        "numbers",
        "add",
        "parseFloat",
        "numbers",
        "add",
        "operators",
        "add",
        "add",
        "operators",
        "input",
        "numbers",
        "resultDisplayed",
        "clear",
        "input"
    ],
    "literals": [
        "\"use strict\"",
        "'input'",
        "'.numbers div'",
        "'.operators div'",
        "'result'",
        "'clear'",
        "\"click\"",
        "\"+\"",
        "\"-\"",
        "\"×\"",
        "\"÷\"",
        "\"\"",
        "\"click\"",
        "\"+\"",
        "\"-\"",
        "\"×\"",
        "\"÷\"",
        "\"enter a number first\"",
        "\"click\"",
        "\"\"",
        "\"\"",
        "\"----------------------------\"",
        "\"÷\"",
        "\"÷\"",
        "\"×\"",
        "\"×\"",
        "\"-\"",
        "\"-\"",
        "\"+\"",
        "\"+\"",
        "\"click\"",
        "\"\""
    ],
    "variables": [
        "input",
        "number",
        "result",
        "clear",
        "resultDisplayed",
        "i",
        "currentString",
        "lastChar",
        "i",
        "currentString",
        "lastChar",
        "newString",
        "inputString",
        "numbers",
        "operators",
        "divide",
        "multiply",
        "subtract",
        "add"
    ],
    "comments": [
        "input/output button",
        "number buttons",
        "operator buttons",
        "equal button",
        "clear button",
        "flag to keep an eye on what output is displayed",
        "adding click handlers to number buttons",
        "storing current input string and its last character in variables - used later",
        "if result is not diplayed, just keep adding",
        "if result is currently displayed and user pressed an operator",
        "we need to keep on adding to the string for next operation",
        "if result is currently displayed and user pressed a number",
        "we need clear the input string and add the new input to start the new opration",
        "adding click handlers to number buttons",
        "storing current input string and its last character in variables - used later",
        "if last character entered is an operator, replace it with the currently pressed one",
        "if first key pressed is an opearator, don't do anything",
        "else just add the operator pressed to the input",
        "on click of 'equal' button",
        "this is the string that we will be processing eg. -10+26+33-56*34/23",
        "forming an array of numbers. eg for above string it will be: numbers = [\"10\", \"26\", \"33\", \"56\", \"34\", \"23\"]",
        "forming an array of operators. for above string it will be: operators = [\"+\", \"+\", \"-\", \"*\", \"/\"]",
        "first we replace all the numbers and dot with empty string and then split",
        "now we are looping through the array and doing one operation at a time.",
        "first divide, then multiply, then subtraction and then addition",
        "as we move we are alterning the original numbers and operators array",
        "the final element remaining in the array will be the output",
        "using parseFloat is necessary, otherwise it will result in string concatenation :)",
        "displaying the output",
        "turning flag if result is displayed",
        "clearing the input on press of clear"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}