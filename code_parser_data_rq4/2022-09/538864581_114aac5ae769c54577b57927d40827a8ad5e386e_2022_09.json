{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "optim",
        "torch",
        "autograd",
        "Variable",
        "torchvision",
        "transforms",
        "datasets",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "torchvision",
        "utils",
        "save_image",
        "os",
        "matplotlib",
        "pyplot",
        "plt",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "datasets",
        "MNIST",
        "root",
        "train",
        "transform",
        "data_tf",
        "download",
        "DataLoader",
        "train_dataset",
        "shuffle",
        "batch_size",
        "batch_size",
        "drop_last",
        "train_loader",
        "x",
        "x",
        "x",
        "clamp",
        "x",
        "view",
        "x",
        "size",
        "x",
        "nn",
        "Module",
        "autoencoder",
        "nn",
        "Sequential",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "Sequential",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "nn",
        "Tanh",
        "x",
        "encoder",
        "x",
        "decoder",
        "encode",
        "encode",
        "decode",
        "autoencoder",
        "get_data",
        "nn",
        "MSELoss",
        "optim",
        "Adam",
        "model",
        "parameters",
        "lr",
        "lr",
        "weight_decay",
        "weight_decay",
        "torch",
        "cuda",
        "is_available",
        "model",
        "cuda",
        "epoch",
        "epoches",
        "epoch",
        "epoches",
        "epoches",
        "param_group",
        "optimizier",
        "param_groups",
        "param_group",
        "img",
        "_",
        "train_data",
        "img",
        "view",
        "img",
        "size",
        "Variable",
        "img",
        "cuda",
        "model",
        "img",
        "criterion",
        "output",
        "img",
        "optimizier",
        "zero_grad",
        "loss",
        "backward",
        "optimizier",
        "step",
        "epoch",
        "loss",
        "data",
        "param_group",
        "optimizier",
        "param_groups",
        "param_group",
        "epoch",
        "format",
        "epoch",
        "loss",
        "data",
        "to_img",
        "output",
        "cpu",
        "data",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "save_image",
        "pic",
        "format",
        "epoch",
        "torch",
        "save",
        "model",
        "torch",
        "load",
        "Variable",
        "torch",
        "FloatTensor",
        "cuda",
        "model",
        "decoder",
        "code",
        "to_img",
        "decode",
        "squeeze",
        "decode_img",
        "data",
        "cpu",
        "save_image",
        "decode_img"
    ],
    "literals": [
        "'./data'",
        "\"__main__\"",
        "'lr'",
        "\"epoch=\"",
        "'lr'",
        "\"epoch: {}, loss is {}\"",
        "'./simple_autoencoder'",
        "'./simple_autoencoder'",
        "'./simple_autoencoder/image_{}.png'",
        "'./basic_autoencoder.pth'",
        "'./basic_autoencoder.pth'",
        "\"./simple_autoencoder/basic_reconstruction.png\""
    ],
    "variables": [
        "data_tf",
        "train_dataset",
        "train_loader",
        "x",
        "x",
        "x",
        "encoder",
        "decoder",
        "encode",
        "decode",
        "batch_size",
        "lr",
        "weight_decay",
        "epoches",
        "model",
        "train_data",
        "criterion",
        "optimizier",
        "img",
        "img",
        "_",
        "output",
        "loss",
        "pic",
        "model",
        "code",
        "decode",
        "decode_img",
        "decode_img"
    ],
    "comments": [
        "加载数据集",
        "将像素点转换到[-1, 1]之间，使得输入变成一个比较对称的分布，训练容易收敛",
        "超参数设置",
        "x = Variable(torch.randn(1, 28*28))",
        "encode, decode = model(x)",
        "print(encode.shape)",
        "forward",
        "backward",
        "plt.imshow(decode_img.astype('uint8'), cmap='gray')",
        "plt.show()"
    ],
    "docstrings": [],
    "functions": [
        "get_data",
        "to_img",
        "forward"
    ],
    "classes": [
        "autoencoder"
    ]
}