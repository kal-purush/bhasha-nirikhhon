{
    "identifiers": [
        "com",
        "exasol",
        "errorreporting",
        "UNDEFINED_PARAMETER",
        "ParameterDefinition",
        "builder",
        "build",
        "name",
        "value",
        "description",
        "builder",
        "name",
        "builder",
        "name",
        "value",
        "builder",
        "value",
        "description",
        "builder",
        "description",
        "name",
        "name",
        "name",
        "value",
        "description",
        "name",
        "value",
        "description",
        "Override",
        "hasValue",
        "value",
        "toString",
        "name",
        "value",
        "description",
        "name",
        "name",
        "name",
        "value",
        "value",
        "value",
        "description",
        "description",
        "description"
    ],
    "literals": [
        "\"undefined parameter\"",
        "\"<null>\""
    ],
    "variables": [
        "name",
        "value",
        "description",
        "name",
        "value",
        "description"
    ],
    "comments": [],
    "docstrings": [
        "* The class models an error code parameter.",
        "Replacement Parameter in case a parameter is missing its name",
        "* Create a builder for an error code {@link ParameterDefinition}.\n     *\n     * @param name name of the parameter\n     * @return parameter builder",
        "* Get the parameter name.\n     *\n     * @return name of the parameter",
        "* Get the parameter value.\n     *\n     * @return value assigned to the parameter",
        "* Get the parameter description.\n     *\n     * @return description of the parameter",
        "* Check if the parameter has a name.\n     *\n     * @return {@code true} if the name is set.",
        "* Check if the value is set.\n     *\n     * @return {@code true} if the value is set.",
        "* Check if the description is set.\n     *\n     * @return {@code true} if the description is set",
        "* Builder for an error code {@link ParameterDefinition}.",
        "* Set the parameter value.\n         *\n         * @param value value of the parameter\n         * @return self for fluent programming",
        "* Set the parameter description.\n         *\n         * @param description description of the parameter\n         * @return self for fluent programming",
        "* Build the {@link ParameterDefinition}.\n         *\n         * @return new {@link ParameterDefinition}"
    ],
    "functions": [
        "ParameterDefinition",
        "builder",
        "getName",
        "getValue",
        "getDescription",
        "hasName",
        "hasValue",
        "hasDescription",
        "toString",
        "Builder",
        "Builder",
        "value",
        "Builder",
        "description",
        "ParameterDefinition",
        "build"
    ],
    "classes": [
        "ParameterDefinition",
        "Builder"
    ]
}