{
    "identifiers": [
        "Newtonsoft",
        "Json",
        "Linq",
        "Collections",
        "Generic",
        "Diagnostics",
        "IO",
        "Linq",
        "Net",
        "Net",
        "Cache",
        "Security",
        "Cryptography",
        "Text",
        "Threading",
        "Tasks",
        "PadOracle",
        "Properties",
        "Settings",
        "Default",
        "hostName",
        "Properties",
        "Settings",
        "Default",
        "blockSize",
        "host",
        "path",
        "Now",
        "FrequencyTrial",
        "UTF8Encoding",
        "UTF8",
        "GetBytes",
        "charfreq",
        "CopyTo",
        "trial",
        "charfreq",
        "Length",
        "i",
        "i",
        "charfreq",
        "Contains",
        "i",
        "trial",
        "jx",
        "i",
        "Debug",
        "Assert",
        "jx",
        "trial",
        "args",
        "FetchCode",
        "CheckCode",
        "byCipher",
        "byCipher",
        "Length",
        "byCipher",
        "Length",
        "byCipher",
        "Length",
        "blocksize",
        "nBlock",
        "nBlocks",
        "nBlock",
        "thisPlainBlock",
        "MutateBlock",
        "nBlock",
        "nBlock",
        "nBlocks",
        "thisPlainBlock",
        "CopyTo",
        "plainBlock",
        "nBlock",
        "blocksize",
        "WriteLine",
        "nBlock",
        "nBlocks",
        "BitConverter",
        "ToString",
        "thisPlainBlock",
        "blocksize",
        "nBlock",
        "nBlocks",
        "nTake",
        "blocksize",
        "thisPlainBlock",
        "blocksize",
        "txtPlainBlock",
        "UTF8Encoding",
        "UTF8",
        "GetString",
        "thisPlainBlock",
        "nTake",
        "WriteLine",
        "nBlock",
        "nBlocks",
        "txtPlainBlock",
        "byCipher",
        "Length",
        "clearLength",
        "clearLength",
        "plainBlock",
        "byCipher",
        "Length",
        "txtPlainBlock",
        "UTF8Encoding",
        "UTF8",
        "GetString",
        "plainBlock",
        "clearLength",
        "WriteLine",
        "txtPlainBlock",
        "WriteLine",
        "WriteLine",
        "Now",
        "startTime",
        "TotalSeconds",
        "WriteLine",
        "seconds",
        "totalTries",
        "seconds",
        "WriteLine",
        "totalTries",
        "totalTries",
        "byCipher",
        "Length",
        "WriteLine",
        "mostTries",
        "worstChar",
        "nBlock",
        "isLastBlock",
        "Get2CipherBlocks",
        "nBlock",
        "testBlock",
        "Clone",
        "blocksize",
        "blocksize",
        "isLastBlock",
        "trialValues",
        "trial1",
        "blocksize",
        "j",
        "j",
        "padCount",
        "blocksize",
        "j",
        "isLastBlock",
        "padCount",
        "padCount",
        "plainText",
        "blocksize",
        "trialValues",
        "trial2",
        "blocksize",
        "k",
        "j",
        "k",
        "mutatedBlock",
        "k",
        "intermediate",
        "k",
        "padCount",
        "tries",
        "mutatedBlock",
        "j",
        "trialValue",
        "trialValues",
        "byTarget",
        "trialValue",
        "padCount",
        "mutatedBlock",
        "j",
        "i",
        "totalTries",
        "tries",
        "CheckCode",
        "mutatedBlock",
        "blocksize",
        "intermediate",
        "j",
        "i",
        "padCount",
        "plainText",
        "j",
        "intermediate",
        "j",
        "testBlock",
        "j",
        "ch",
        "Encoding",
        "UTF8",
        "GetString",
        "plainText",
        "j",
        "ch",
        "ch",
        "ch",
        "WriteLine",
        "j",
        "plainText",
        "j",
        "ch",
        "tries",
        "testBlock",
        "j",
        "testBlock",
        "j",
        "blocksize",
        "i",
        "intermediate",
        "j",
        "tries",
        "mostTries",
        "mostTries",
        "tries",
        "worstChar",
        "Encoding",
        "UTF8",
        "GetChars",
        "plainText",
        "j",
        "plainText",
        "nBlock",
        "nBlock",
        "byIV",
        "Concat",
        "byCipher",
        "Take",
        "blocksize",
        "ToArray",
        "byCipher",
        "Skip",
        "nBlock",
        "blocksize",
        "Take",
        "blocksize",
        "ToArray",
        "WebRequest",
        "CreateHttp",
        "host",
        "path",
        "wc",
        "KeepAlive",
        "wc",
        "GetResponse",
        "respText",
        "StreamReader",
        "wr",
        "GetResponseStream",
        "ReadToEnd",
        "JObject",
        "Parse",
        "respText",
        "b64Cipher",
        "job",
        "b64Vector",
        "job",
        "byCipher",
        "Convert",
        "FromBase64String",
        "b64Cipher",
        "byIV",
        "Convert",
        "FromBase64String",
        "b64Vector",
        "urlIV",
        "WebUtility",
        "UrlEncode",
        "b64Vector",
        "urlCipher",
        "WebUtility",
        "UrlEncode",
        "b64Cipher",
        "byCheck",
        "offset",
        "len",
        "WebUtility",
        "UrlEncode",
        "Convert",
        "ToBase64String",
        "byCheck",
        "offset",
        "len",
        "urlCheck",
        "Equals",
        "urlCipher",
        "urlIV",
        "WebUtility",
        "UrlEncode",
        "Convert",
        "ToBase64String",
        "byIV",
        "blocksize",
        "offset",
        "blocksize",
        "urlIV",
        "WebUtility",
        "UrlEncode",
        "Convert",
        "ToBase64String",
        "byCheck",
        "offset",
        "blocksize",
        "WebRequest",
        "CreateHttp",
        "Format",
        "reqFormat",
        "urlCheck",
        "urlIV",
        "wc",
        "KeepAlive",
        "retryCount",
        "wr",
        "wc",
        "GetResponse",
        "WebException",
        "x",
        "x",
        "Status",
        "WebExceptionStatus",
        "ProtocolError",
        "WriteLine",
        "x",
        "Status",
        "retryCount",
        "retryCount"
    ],
    "literals": [
        "\"encrypted\"",
        "\"etaonishrlducmwyfgpbvkjxqzETAONISHRLDUCMWYFGPBVKJXQZ,. -'_?:()!0123456789\\n\\r\"",
        "\"Statistics:\"",
        "\"?\"",
        "\"ciphertext\"",
        "\"iv\"",
        "\"Bugger - errors too much for retry.\""
    ],
    "variables": [
        "host",
        "path",
        "b64Cipher",
        "b64Vector",
        "byCipher",
        "byIV",
        "blocksize",
        "urlIV",
        "urlCipher",
        "reqFormat",
        "totalTries",
        "mostTries",
        "worstChar",
        "startTime",
        "trial1",
        "trial2",
        "charfreq",
        "trial",
        "jx",
        "i",
        "plainBlock",
        "txtPlainBlock",
        "nBlocks",
        "thisPlainBlock",
        "nBlock",
        "nTake",
        "blocksize",
        "clearLength",
        "seconds",
        "testBlock",
        "mutatedBlock",
        "intermediate",
        "plainText",
        "padCount",
        "tries",
        "trialValues",
        "trial2",
        "j",
        "k",
        "byTarget",
        "i",
        "ch",
        "HttpWebRequest",
        "wc",
        "respText",
        "wr",
        "JObject",
        "job",
        "retryCount",
        "urlCheck",
        "isOriginal",
        "wc",
        "WebResponse",
        "wr"
    ],
    "comments": [
        "Statistics",
        "Special case trial code for padding. Padding must be one of these bytes,",
        "so while we're looking at the last block, we don't need to scan all 256 chars.",
        "By putting the 0x01 at the end, we avoid a special case in decrypting the last block.",
        "Characters are in English frequency.",
        "Regular trial code for the message body - use letter frequencies to reduce unsuccessful requests.",
        "A fun optimisation would be to improve on this. Some capital letters are more likely than lower case.",
        "Some punctuation and spaces are more likely than many letters.",
        "If you decode a capital, the previous letter (next to be decoded) is likely to be a space. And",
        "the one before that is likely to be punctuation. And then lower case.",
        "Character before a space is punctuation or lower case.",
        "Fill in the rest of the bytes, in case there's a character we didn't think of.",
        "We got all the bytes exactly once, yes?",
        "Verify code works.",
        "Building up the plaintext",
        "I used to go from last block to first, to show handling the special case of existing padding",
        "But the message reads better if we go forward.",
        "Save it for later output",
        "Output potential plaintext block.",
        "If last block, take only the first few characters - don't show the padding.",
        "Output the whole thing plus statistics",
        "Get blocks C[N-1] & C[N] - nBlock is N-1.",
        "We'll modify this one to match padding bytes.",
        "Frequency trial.",
        "Padding end bytes.",
        "Working backwards through the block.",
        "Optimise by choosing the right trial frequency set - we could just iterate 0-255.",
        "Frequency trial.",
        "Set the end of the mutated block to the padding count we're currently trying.",
        "Working forwards through the trial set.",
        "Statistics",
        "Does this trial value result in a correct padding?",
        "Output",
        "Statistics",
        "Stop on success.",
        "Return a byte array containing two blocks - C[N] & C[N-1]",
        "Decode from base64 to bytes",
        "Fortunately, a 200 is \"message is padded correctly\", a 500 is \"padding error\"",
        "In some environments, you have to dig deeper to distinguish the two.",
        "Timing can also be used - it takes time to generate the padding exception.",
        "We don't do anything here - just knowing that we didn't hit an exception is good",
        "The string is accepted.",
        "This is Protocol Error, which means padding error. For this site.",
        "Some other kind of error - did we get disconnected? Let's retry..."
    ],
    "docstrings": [],
    "functions": [
        "FrequencyTrial",
        "Main",
        "MutateBlock",
        "Get2CipherBlocks",
        "FetchCode",
        "CheckCode"
    ],
    "classes": [
        "Program"
    ]
}