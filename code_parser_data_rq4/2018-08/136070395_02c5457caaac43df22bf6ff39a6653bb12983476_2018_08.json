{
    "identifiers": [
        "UnityEngine",
        "Collections",
        "Collections",
        "Generic",
        "MonoBehaviour",
        "Color",
        "red",
        "Color",
        "yellow",
        "m_SpectrumSize",
        "m_SpectrumSize",
        "m_SpectrumLeft",
        "m_SpectrumSize",
        "m_SpectrumRight",
        "m_SpectrumSize",
        "AudioSettings",
        "outputSampleRate",
        "m_SpectrumFreqStep",
        "nyquistFreq",
        "m_SpectrumSize",
        "Mathf",
        "Pow",
        "nyquistFreq",
        "m_FreqCrossover",
        "Length",
        "m_FreqCrossover",
        "hzMultiplier",
        "i",
        "m_FreqCrossover",
        "Length",
        "i",
        "m_FreqCrossover",
        "i",
        "m_FreqCrossover",
        "i",
        "hzMultiplier",
        "m_VScale",
        "m_BarTexture",
        "Texture2D",
        "width",
        "i",
        "width",
        "i",
        "m_BarTexture",
        "SetPixel",
        "i",
        "Color",
        "Lerp",
        "m_StartColor",
        "m_EndColor",
        "i",
        "m_VScale",
        "m_BarTexture",
        "wrapMode",
        "TextureWrapMode",
        "Clamp",
        "m_BarTexture",
        "Apply",
        "Utils",
        "Log",
        "Format",
        "AudioSettings",
        "outputSampleRate",
        "m_SpectrumSize",
        "m_FreqCrossover",
        "Length",
        "m_SpectrumFreqStep",
        "i",
        "m_SpectrumSize",
        "i",
        "spectrumFreq",
        "m_SpectrumFreqStep",
        "spectrumFreq",
        "m_FreqCrossover",
        "freqBand",
        "i",
        "m_SpectrumSize",
        "Utils",
        "Log",
        "Format",
        "freqBand",
        "i",
        "spectrumFreq",
        "m_FreqCrossover",
        "freqBand",
        "freqBand",
        "m_FreqCrossover",
        "Length",
        "UnityEngine",
        "Profiling",
        "Profiler",
        "BeginSample",
        "m_UseListener",
        "AudioListener",
        "GetSpectrumData",
        "m_SpectrumLeft",
        "FFTWindow",
        "Rectangular",
        "AudioListener",
        "GetSpectrumData",
        "m_SpectrumRight",
        "FFTWindow",
        "Rectangular",
        "m_AudioSource",
        "m_AudioSource",
        "GetSpectrumData",
        "m_SpectrumLeft",
        "FFTWindow",
        "Rectangular",
        "UnityEngine",
        "Profiling",
        "Profiler",
        "EndSample",
        "i",
        "m_SpectrumSize",
        "i",
        "maxValue",
        "Mathf",
        "Max",
        "maxValue",
        "m_SpectrumLeft",
        "i",
        "maxValue",
        "Mathf",
        "Max",
        "maxValue",
        "m_SpectrumRight",
        "i",
        "spectrumFreq",
        "m_SpectrumFreqStep",
        "spectrumFreq",
        "m_FreqCrossover",
        "freqBand",
        "i",
        "m_SpectrumSize",
        "Mathf",
        "Log10",
        "maxValue",
        "Mathf",
        "Clamp01",
        "dBFS",
        "m_dBRange",
        "SpectrumValues",
        "freqBand",
        "value",
        "DebugDraw",
        "Screen",
        "width",
        "m_FreqCrossover",
        "Length",
        "barWidth",
        "freqBand",
        "barWidth",
        "InvertedDebugDraw",
        "Vector2",
        "centre_x",
        "Screen",
        "height",
        "value",
        "m_VScale",
        "Vector2",
        "centre_x",
        "Screen",
        "height",
        "Vector2",
        "centre_x",
        "Vector2",
        "centre_x",
        "value",
        "m_VScale",
        "maxValue",
        "freqBand",
        "freqBand",
        "m_FreqCrossover",
        "Length",
        "freqBand",
        "SpectrumValues",
        "Length"
    ],
    "literals": [
        "\"outputSampleRate={0} spectrumSize={1} numFreqBands={2} freqStep={3}Hz\"",
        "\"freqBand {0}: i={1} {2:0.00}Hz (crossover {3:0}Hz)\"",
        "\"OnGUI 1\""
    ],
    "variables": [
        "DebugDraw",
        "InvertedDebugDraw",
        "m_HScale",
        "m_VScale",
        "m_dBRange",
        "Color",
        "m_StartColor",
        "Color",
        "m_EndColor",
        "m_UseListener",
        "AudioSource",
        "m_AudioSource",
        "m_SpectrumSize",
        "SpectrumValues",
        "m_BandRatio",
        "m_FreqCrossoverLowestFreq",
        "m_NumFreqCrossoverValues",
        "m_FreqCrossover",
        "Texture2D",
        "m_BarTexture",
        "m_SpectrumFreqStep",
        "m_SpectrumLeft",
        "m_SpectrumRight",
        "MatchCrossoverValuesAmountWithSurfaceStrands",
        "nyquistFreq",
        "hzMultiplier",
        "i",
        "width",
        "i",
        "spectrumFreq",
        "freqBand",
        "i",
        "spectrumFreq",
        "freqBand",
        "barWidth",
        "m_HScale",
        "maxValue",
        "i",
        "dBFS",
        "value",
        "centre_x",
        "Vector2",
        "bottom",
        "Vector2",
        "top",
        "Vector2",
        "bottom",
        "Vector2",
        "top"
    ],
    "comments": [
        "must be power of 2 in range 64 to 8192",
        "public int m_NumFreqBands = 30;",
        "1.25f;",
        "= new float[]{ 30, 63, 125, 250, 500, 1000, 2000, 4000, 8000, 16000 };",
        "left audio channel",
        "right audio channel",
        "These arrays represent normalised amplitudes of each frequency band from 0Hz to the nyquist rate",
        "true;",
        "left audio channel",
        "right audio channel",
        "if (LEDSurfaceColorsHandler.Instance != null && MatchCrossoverValuesAmountWithSurfaceStrands)",
        "if (LEDSurfaceColorsHandler.Instance != null && MatchCrossoverValuesAmountWithSurfaceStrands)",
        "{",
        "m_NumFreqCrossoverValues = LEDSurfaceColorsHandler.NumSurfaceStrands;",
        "m_FreqCrossover = new float[m_NumFreqCrossoverValues];",
        "m_FreqCrossover[0] = m_FreqCrossoverLowestFreq;",
        "for (int i = 1; i < m_FreqCrossover.Length; i++)",
        "{",
        "m_FreqCrossover[i] = m_FreqCrossover[i - 1] * m_BandRatio;",
        "}",
        "}",
        "SpectrumValues = new float[m_NumFreqCrossoverValues];",
        "SpectrumValues = new float[m_FreqCrossover.Length];",
        "automatic generation of crossover frequencies",
        "prepare texture for bar graph",
        "debug",
        "m_FreqCrossover[0] = m_FreqCrossoverLowestFreq;",
        "for (int i = 1; i < m_FreqCrossover.Length; i++)",
        "{",
        "m_FreqCrossover[i] = m_FreqCrossover[i - 1] * m_BandRatio;",
        "}",
        "GuiHelper.SetOrigin(GuiHelper.Origin.BottomLeft);",
        "float accumValue = 0.0f;",
        "int accumCount = 0;",
        "float average = 0.0f;",
        "float power = 0.0f;",
        "accumValue += m_SpectrumLeft[i];",
        "accumValue += m_SpectrumRight[i];",
        "accumCount += 2;",
        "if (m_SpectrumLeft[i] > 0.0001f) // arbitrary cut-off to filter out noise",
        "{",
        "average += m_SpectrumLeft[i] * spectrumFreq;",
        "power += m_SpectrumLeft[i];",
        "}",
        "if (m_SpectrumRight[i] > 0.0001f) // arbitrary cut-off to filter out noise",
        "{",
        "average += m_SpectrumRight[i] * spectrumFreq;",
        "power += m_SpectrumRight[i];",
        "}",
        "decibels relative to full scale",
        "range -infinity -> 0",
        "clamp to desired dB range for bar graph",
        "range 0.0 -> 1.0",
        "GuiHelper.DrawLine(bottom, top, m_BarTexture, barWidth);",
        "GuiHelper.DrawLine(bottom, top, m_BarTexture, barWidth);",
        "reset for next frequency band",
        "accumValue = 0.0f;",
        "accumCount = 0;",
        "find dominant frequency",
        "float dominantHz = (power > 0.0001f) ? (average / power) : 0.0f;",
        "Utils.Log(dominantHz.ToString(\"0\"));"
    ],
    "docstrings": [],
    "functions": [
        "Start",
        "OnGUI"
    ],
    "classes": [
        "DimAudioSpectrumGraph"
    ]
}