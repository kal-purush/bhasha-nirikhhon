{
    "identifiers": [
        "os",
        "os",
        "path",
        "join",
        "split",
        "functools",
        "pytest",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "animation",
        "FileMovieWriter",
        "matplotlib",
        "testing",
        "compare",
        "compare_images",
        "matplotlib",
        "testing",
        "decorators",
        "remove_ticks_and_titles",
        "matplotlib",
        "testing",
        "exceptions",
        "ImageComparisonFailure",
        "FileMovieWriter",
        "args",
        "extra_args",
        "kwargs",
        "args",
        "extra_args",
        "kwargs",
        "fig",
        "dpi",
        "frame_prefix",
        "setup",
        "fig",
        "dpi",
        "frame_prefix",
        "clear_temp",
        "temp_prefix",
        "frame_format",
        "outfile",
        "split",
        "savefig_kwargs",
        "_frame_sink",
        "myframesink",
        "fig",
        "savefig",
        "myframesink",
        "format",
        "frame_format",
        "dpi",
        "dpi",
        "savefig_kwargs",
        "_frame_sink",
        "close",
        "anim",
        "expected",
        "format_",
        "nframes",
        "tol",
        "split",
        "join",
        "expected",
        "split",
        "join",
        "expected",
        "os",
        "path",
        "exists",
        "out_dir",
        "os",
        "makedirs",
        "out_dir",
        "anim",
        "save",
        "os",
        "path",
        "join",
        "out_dir",
        "filename",
        "format_",
        "writer",
        "BunchOFiles",
        "i",
        "nframes",
        "filename",
        "i",
        "format_",
        "os",
        "path",
        "join",
        "base_dir",
        "image_name",
        "os",
        "path",
        "join",
        "out_dir",
        "image_name",
        "compare_images",
        "expected_name",
        "actual_name",
        "tol",
        "in_decorator",
        "os",
        "path",
        "exists",
        "expected_name",
        "ImageComparisonFailure",
        "expected_name",
        "err",
        "key",
        "os",
        "path",
        "relpath",
        "err",
        "key",
        "ImageComparisonFailure",
        "err",
        "baseline_images",
        "nframes",
        "format",
        "tol",
        "remove_text",
        "func",
        "functools",
        "wraps",
        "func",
        "args",
        "kwargs",
        "func",
        "args",
        "kwargs",
        "remove_text",
        "plt",
        "get_fignums",
        "plt",
        "figure",
        "fignum",
        "remove_ticks_and_titles",
        "fig",
        "compare_animation",
        "anim",
        "baseline_images",
        "format",
        "nframes",
        "tol",
        "plt",
        "close",
        "wrapper",
        "decorator"
    ],
    "literals": [
        "'png'",
        "'jpeg'",
        "'bmp'",
        "'svg'",
        "'pdf'",
        "'%s%%d.%s'",
        "'.'",
        "'tests'",
        "'baseline_images'",
        "'tests'",
        "'output_images'",
        "'%s%d%s'",
        "'image does not exist: %s'",
        "\"actual\"",
        "\"expected\"",
        "'images not close (RMS %(rms).3f):\\n\\t%(actual)s\\n'",
        "'\\t%(expected)s '",
        "'.png'",
        "'all'"
    ],
    "variables": [
        "supported_formats",
        "fname_format_str",
        "base_dir",
        "filename",
        "out_dir",
        "image_name",
        "expected_name",
        "actual_name",
        "err",
        "err",
        "key",
        "anim",
        "fignum",
        "fig"
    ],
    "comments": [
        "extra_args aren't used but we need to stop None from being passed",
        "Tell the figure to save its data to the sink, using the",
        "frame format and dpi.",
        "generate images from the animation"
    ],
    "docstrings": [
        "\"\"\"\n    Exports an animation to a series of images.\n\n    called like:\n    ``anim.save('name.format', writer=BunchOFiles())``\n    which produces a series of files named ``name{num}.format``\n    \"\"\"",
        "'''\n        Grab the image information from the figure and save as a movie frame.\n        All keyword arguments in savefig_kwargs are passed on to the 'savefig'\n        command that saves the figure.\n        '''"
    ],
    "functions": [
        "setup",
        "grab_frame",
        "finish",
        "compare_animation",
        "animation_compare",
        "decorator",
        "wrapper"
    ],
    "classes": [
        "BunchOFiles"
    ]
}