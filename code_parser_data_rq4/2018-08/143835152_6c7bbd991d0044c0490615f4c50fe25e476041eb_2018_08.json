{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "seaborn",
        "sns",
        "sklearn",
        "metrics",
        "tensorflow",
        "examples",
        "tutorials",
        "mnist",
        "input_data",
        "random",
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "scipy",
        "sklearn",
        "itertools",
        "keras",
        "scipy",
        "interpolate",
        "interp1d",
        "scipy",
        "stats",
        "zscore",
        "keras",
        "utils",
        "np_utils",
        "to_categorical",
        "statistics",
        "mean",
        "stdev",
        "data",
        "data",
        "copy",
        "i",
        "dataOut",
        "shape",
        "std",
        "append",
        "np",
        "std",
        "dataOut",
        "ddof",
        "j",
        "dataOut",
        "shape",
        "mean",
        "append",
        "np",
        "mean",
        "dataOut",
        "k",
        "dataOut",
        "shape",
        "itertools",
        "chain",
        "std",
        "itertools",
        "chains",
        "mean",
        "i",
        "data",
        "shape",
        "dataOut",
        "i",
        "mean",
        "i",
        "std",
        "i",
        "np",
        "isnan",
        "dataOut",
        "dataOut",
        "data",
        "length",
        "np",
        "zeros",
        "length",
        "data",
        "shape",
        "i",
        "data",
        "shape",
        "data",
        "i",
        "np",
        "linspace",
        "data",
        "shape",
        "np",
        "linspace",
        "length",
        "interp1d",
        "x",
        "temp",
        "x_new",
        "new_data",
        "new_dataOut",
        "path1",
        "pd",
        "read_csv",
        "path1",
        "data",
        "as_matrix",
        "data",
        "drop",
        "data",
        "columns",
        "len",
        "data",
        "columns",
        "axis",
        "inplace",
        "zscore",
        "data",
        "interp_data",
        "n_data",
        "n_data_100",
        "n_data_100",
        "os",
        "getcwd",
        "cwd",
        "np",
        "zeros",
        "subject",
        "subjects",
        "pathBase",
        "subject",
        "os",
        "listdir",
        "pathSub",
        "movementName",
        "movementNames",
        "s",
        "s",
        "files",
        "s",
        "startswith",
        "movementName",
        "subFiles",
        "sort",
        "k",
        "len",
        "subFiles",
        "subject",
        "movementName",
        "subFiles",
        "k",
        "pathSub",
        "subFiles",
        "i",
        "load_data",
        "dataPath",
        "train_data2",
        "i",
        "j",
        "j",
        "i",
        "plt",
        "figure",
        "plt",
        "plot",
        "train_data2",
        "train_data2",
        "reshape",
        "train_data2",
        "train_data2",
        "train_data_out",
        "input",
        "name",
        "in_size",
        "out_size",
        "activation",
        "tf",
        "variable_scope",
        "name",
        "reuse",
        "tf",
        "get_variable",
        "shape",
        "in_size",
        "out_size",
        "initializer",
        "tf",
        "random_normal_initializer",
        "mean",
        "stddev",
        "tf",
        "get_variable",
        "shape",
        "out_size",
        "initializer",
        "tf",
        "constant_initializer",
        "tf",
        "add",
        "tf",
        "matmul",
        "input",
        "w",
        "b",
        "activation",
        "tf",
        "nn",
        "relu",
        "l",
        "activation",
        "tf",
        "nn",
        "sigmoid",
        "l",
        "activation",
        "tf",
        "nn",
        "tanh",
        "l",
        "l",
        "l",
        "l",
        "y",
        "y_",
        "learning_rate",
        "tf",
        "Variable",
        "learning_rate",
        "trainable",
        "tf",
        "reduce_mean",
        "tf",
        "nn",
        "sigmoid_cross_entropy_with_logits",
        "labels",
        "y",
        "logits",
        "y_",
        "name",
        "tf",
        "train",
        "AdamOptimizer",
        "learning_rate",
        "learning_rate",
        "name",
        "minimize",
        "loss",
        "tf",
        "equal",
        "tf",
        "cast",
        "tf",
        "argmax",
        "y_",
        "tf",
        "int32",
        "tf",
        "cast",
        "tf",
        "argmax",
        "y",
        "tf",
        "int32",
        "tf",
        "reduce_mean",
        "tf",
        "cast",
        "correct",
        "tf",
        "float32",
        "name",
        "tf",
        "summary",
        "FileWriter",
        "writer",
        "add_graph",
        "graph",
        "sess",
        "graph",
        "loss",
        "accuracy",
        "optimizer",
        "writer",
        "cm",
        "accuracy",
        "plt",
        "figure",
        "figsize",
        "sns",
        "heatmap",
        "cm",
        "annot",
        "fmt",
        "linewidths",
        "square",
        "cmap",
        "plt",
        "ylabel",
        "plt",
        "xlabel",
        "format",
        "accuracy",
        "plt",
        "title",
        "all_sample_title",
        "size",
        "train_data_out",
        "test_data_out",
        "np",
        "array",
        "one_hots_train",
        "np",
        "array",
        "one_hots_train",
        "np",
        "array",
        "train_x",
        "np",
        "array",
        "test_x",
        "one_hots_test",
        "one_hots_test",
        "i",
        "argmax",
        "i",
        "len",
        "one_hots_test",
        "len",
        "np",
        "unique",
        "number_test",
        "train_x",
        "shape",
        "train_x",
        "shape",
        "tf",
        "reset_default_graph",
        "tf",
        "Session",
        "tf",
        "variable_scope",
        "tf",
        "get_variable_scope",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "height",
        "width",
        "name",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "n_label",
        "name",
        "tf",
        "layers",
        "conv2d",
        "inputs",
        "x",
        "kernel_size",
        "strides",
        "filters",
        "padding",
        "activation",
        "tf",
        "nn",
        "relu",
        "name",
        "c1",
        "tf",
        "layers",
        "max_pooling2d",
        "inputs",
        "c1",
        "pool_size",
        "strides",
        "padding",
        "c1",
        "tf",
        "layers",
        "conv2d",
        "inputs",
        "c1",
        "kernel_size",
        "strides",
        "filters",
        "padding",
        "activation",
        "tf",
        "nn",
        "relu",
        "name",
        "c2",
        "tf",
        "layers",
        "max_pooling2d",
        "inputs",
        "c2",
        "pool_size",
        "strides",
        "padding",
        "c2",
        "c2",
        "get_shape",
        "as_list",
        "tf",
        "reshape",
        "c2",
        "size",
        "size",
        "size",
        "name",
        "l1",
        "dense",
        "input",
        "l1",
        "name",
        "in_size",
        "l1",
        "get_shape",
        "as_list",
        "out_size",
        "n_label",
        "activation",
        "tf",
        "nn",
        "softmax",
        "l2",
        "name",
        "y_",
        "scope",
        "y",
        "y_",
        "learning_rate",
        "sess",
        "run",
        "tf",
        "global_variables_initializer",
        "x",
        "train_x",
        "y",
        "one_hots_train",
        "e",
        "epoch",
        "sess",
        "run",
        "optimizer",
        "loss",
        "accuracy",
        "feed_dict",
        "train_data",
        "loss_history",
        "append",
        "l",
        "acc_history",
        "append",
        "acc",
        "e",
        "l",
        "acc",
        "plt",
        "figure",
        "plt",
        "plot",
        "acc_history",
        "plt",
        "figure",
        "plt",
        "plot",
        "loss_history",
        "x",
        "test_x",
        "y",
        "one_hots_test",
        "sess",
        "run",
        "loss",
        "accuracy",
        "feed_dict",
        "test_data",
        "l",
        "acc",
        "y_",
        "eval",
        "feed_dict",
        "test_data",
        "session",
        "sess",
        "predictions",
        "predictions",
        "max",
        "axis",
        "keepdims",
        "astype",
        "predictions_int",
        "i",
        "argmax",
        "i",
        "predictions_int",
        "shape",
        "metrics",
        "confusion_matrix",
        "number_test",
        "predictions_numbers",
        "cm",
        "confusion_matrix",
        "cm",
        "cm",
        "accuracy",
        "acc",
        "cm",
        "cm",
        "sum",
        "axis",
        "confusion_matrix",
        "cm",
        "cmN",
        "accuracy",
        "acc",
        "plt",
        "savefig"
    ],
    "literals": [
        "'n_data_100 shape'",
        "'akira'",
        "'kk'",
        "'hagane'",
        "'a'",
        "'b'",
        "'c'",
        "'d'",
        "'e'",
        "'\\\\akira_motion\\\\'",
        "'\\\\'",
        "'_'",
        "'file name'",
        "'data'",
        "'done'",
        "'train'",
        "\"relu\"",
        "\"w\"",
        "\"b\"",
        "\"relu\"",
        "\"sigmoid\"",
        "\"tanh\"",
        "\"loss\"",
        "\"optimizer\"",
        "\"accuracy\"",
        "'./Tensorboard/'",
        "\".3f\"",
        "'Blues_r'",
        "'True label'",
        "'Predicted label'",
        "'Accuracy Score: {0}'",
        "'X'",
        "'Y'",
        "'SAME'",
        "'Conv_1'",
        "'SAME'",
        "'SAME'",
        "'Conv_2'",
        "'SAME'",
        "'reshape_to_fully'",
        "\"output_layers\"",
        "'None'",
        "'softmax'",
        "\"Epoch \"",
        "\" - Loss: \"",
        "\" - \"",
        "\"Test - Loss: \"",
        "\" - \""
    ],
    "variables": [
        "n_sample_train",
        "n_sample_test",
        "std",
        "mean",
        "dataOut",
        "std",
        "mean",
        "dataOut",
        "i",
        "dataOut",
        "new_dataOut",
        "temp",
        "x",
        "x_new",
        "new_data",
        "new_dataOut",
        "i",
        "data",
        "n_data",
        "n_data_100",
        "subjects",
        "movementNames",
        "cwd",
        "pathBase",
        "train_data2",
        "i",
        "j",
        "pathSub",
        "files",
        "subFiles",
        "dataPath",
        "train_data2",
        "i",
        "j",
        "j",
        "i",
        "train_data2",
        "train_data_out",
        "test_data_out",
        "w",
        "b",
        "l",
        "l",
        "l",
        "l",
        "l",
        "learning_rate",
        "loss",
        "optimizer",
        "correct",
        "accuracy",
        "writer",
        "all_sample_title",
        "train_x",
        "one_hots_train",
        "test_x",
        "one_hots_test",
        "one_hots_train",
        "one_hots_test",
        "train_x",
        "test_x",
        "one_hots_test",
        "number_test",
        "n_label",
        "height",
        "width",
        "sess",
        "x",
        "y",
        "c1",
        "c1",
        "c2",
        "c2",
        "size",
        "l1",
        "l2",
        "y_",
        "loss",
        "accuracy",
        "optimizer",
        "writer",
        "loss_history",
        "acc_history",
        "epoch",
        "train_data",
        "_",
        "l",
        "acc",
        "test_data",
        "l",
        "acc",
        "predictions",
        "predictions_int",
        "predictions_numbers",
        "cm",
        "cmN"
    ],
    "comments": [
        "add",
        "from keras.models import to_categorical",
        "data[:, i] to data.iloc[:,i]",
        "error",
        "table to csv",
        "drop first column",
        "print(data.shape, 'data shape')",
        "nomalize_data to zscore",
        "print(n_data.shape, 'n_data shape')",
        "error",
        "movementNames = ['a','b']",
        "filename?",
        "subjects, movements, length, features",
        "train_data2 = np.zeros((3, 25, 100, 6))  # subjects, movements, length, features",
        "print(train_data2[0,0,:,0], '1')",
        "print(train_data2[0, 0, :], '2')",
        "",
        "def get_MNIST_data():",
        "mnist = input_data.read_data_sets('./Data', one_hot=True)",
        "train_x, one_hots_train = mnist.train.next_batch(n_sample_train)",
        "test_x, one_hots_test = mnist.train.next_batch(n_sample_test)",
        "train_x = train_x.reshape(-1, 28, 28)",
        "test_x = test_x.reshape(-1, 28, 28)",
        "train_x = train_x[:, :, :, np.newaxis]",
        "test_x = test_x[:, :, :, np.newaxis]",
        "return train_x, one_hots_train, test_x, one_hots_test",
        "def plot_MNIST(x, one_hot):",
        "row = 4",
        "column = 4",
        "p = random.sample(range(1, 100), row * column)",
        "plt.figure()",
        "for i in range(row * column):",
        "image = x[p[i]].reshape(28, 28)",
        "plt.subplot(row, column, i + 1)",
        "plt.imshow(image, cmap='gray')",
        "plt.title('label = {}'.format(np.argmax(one_hot[p[i]]).astype(int)))",
        "plt.axis('off')",
        "plt.subplots_adjust(left=0.05, bottom=0.05, right=0.95, top=0.95,",
        "wspace=0.05, hspace=0.3)",
        "plt.show()",
        "Learning rate",
        "Loss function",
        "Optimizer",
        "Evaluate the model",
        "Tensorboard",
        "run this command in the terminal to launch tensorboard:",
        "tensorboard --logdir=./Tensorboard/",
        "train_x, one_hots_train, test_x, one_hots_test = get_MNIST_data()",
        "plot_MNIST(x=train_x, one_hot=one_hots_train)",
        "Number of class",
        "Session and context manager",
        "Placeholders",
        "Convolutional Neural network",
        "Reshape to a fully connected layers",
        "Softmax layer",
        "Scope",
        "Initialize the Neural Network",
        "Train the Neural Network",
        "Test the trained Neural Network",
        "Confusion matrix"
    ],
    "docstrings": [],
    "functions": [
        "normalize_data",
        "interp_data",
        "load_data",
        "dense",
        "scope",
        "confusion_matrix"
    ],
    "classes": []
}