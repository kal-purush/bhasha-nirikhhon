{
    "identifiers": [
        "qz",
        "utils",
        "com",
        "ibm",
        "icu",
        "charset",
        "CharsetEncoderICU",
        "com",
        "ibm",
        "icu",
        "charset",
        "CharsetProviderICU",
        "com",
        "ibm",
        "icu",
        "text",
        "ArabicShaping",
        "com",
        "ibm",
        "icu",
        "text",
        "ArabicShapingException",
        "com",
        "ibm",
        "icu",
        "text",
        "Bidi",
        "java",
        "nio",
        "ByteBuffer",
        "java",
        "nio",
        "CharBuffer",
        "java",
        "nio",
        "charset",
        "CharacterCodingException",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "nio",
        "charset",
        "CoderResult",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "escp_or_text",
        "allAscii",
        "i",
        "i",
        "escp_or_text",
        "length",
        "i",
        "ch",
        "escp_or_text",
        "codePointAt",
        "i",
        "ch",
        "allAscii",
        "allAscii",
        "escp_or_text",
        "getBytes",
        "StandardCharsets",
        "ISO_8859_1",
        "para",
        "para",
        "setPara",
        "escp_or_text",
        "Bidi",
        "LEVEL_DEFAULT_LTR",
        "data",
        "para",
        "writeReordered",
        "Bidi",
        "DO_MIRRORING",
        "convertVisualOrderedToIBM864",
        "data",
        "ArabicShaping",
        "LETTERS_SHAPE",
        "ArabicShaping",
        "TEXT_DIRECTION_VISUAL_LTR",
        "ArabicShaping",
        "LENGTH_GROW_SHRINK",
        "shaped",
        "shape",
        "icu",
        "cs",
        "icu",
        "charsetForName",
        "icuc",
        "cs",
        "newEncoder",
        "icuc",
        "setFallbackUsed",
        "output",
        "ByteBuffer",
        "allocate",
        "shaped",
        "length",
        "inp",
        "CharBuffer",
        "wrap",
        "shaped",
        "res",
        "icuc",
        "encode",
        "inp",
        "output",
        "res",
        "isError",
        "res",
        "throwException",
        "length",
        "output",
        "position",
        "all",
        "output",
        "array",
        "length",
        "arraycopy",
        "all",
        "length"
    ],
    "literals": [
        "\"IBM864\""
    ],
    "variables": [],
    "comments": [
        "https://wiki.sei.cmu.edu/confluence/display/java/STR01-J.+Do+not+assume+that+a+Java+char+fully+represents+a+Unicode+code+point",
        "we use 'ISO-8859-1' that will map bytes as it is",
        "Layout the characters from logical order to visual ordering",
        "We shape the characters to map it to Unicode in FExx range",
        "Note that the output of Bidi is VISUAL_LTR, so we need the flag: ArabicShaping.TEXT_DIRECTION_VISUAL_LTR)",
        "then we need to convert it to IBM864 using ICU Encoder",
        "We need to use fallback for some character forms that can not be found"
    ],
    "docstrings": [
        "* Created by Yohanes Nugroho on 7/10/2018.",
        "* This is the simplest and most reliable method:\n     * If all characters on input string does not contain any Arabic letters then return it as it is,\n     * otherwise do special Arabic text conversion\n     * <p>\n     * To send data to printer, we need to split the commands from the text, eg:<br/>\n     * {@code var data = ['\\x1b\\x41\\x42', \"Arabic text to print\", '\\x1b\\x42x53', \"Other texts\"]}\n     *\n     * @param escp_or_text a String that contains only ESC/P code or only text\n     * @return encoded bytes",
        "* Shape a visual ordered Arabic string and then encode it in IBM864 encoding\n     *\n     * @param str input string\n     * @return encoded bytes"
    ],
    "functions": [
        "convertToIBM864",
        "convertVisualOrderedToIBM864"
    ],
    "classes": [
        "ArabicConversionUtilities"
    ]
}