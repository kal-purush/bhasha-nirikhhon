{
    "identifiers": [
        "com",
        "zsmartsystems",
        "zigbee",
        "sniffer",
        "java",
        "util",
        "Arrays",
        "buffer",
        "length",
        "channelId",
        "deviceId",
        "lqi",
        "lqiMode",
        "sequence",
        "timestamp",
        "protocolVersion",
        "data",
        "msb0baseTime",
        "msb1baseTime",
        "length",
        "length",
        "length",
        "channelId",
        "channelId",
        "channelId",
        "deviceId",
        "deviceId",
        "deviceId",
        "lqi",
        "lqi",
        "lqi",
        "lqiMode",
        "lqiMode",
        "lqiMode",
        "seqNum",
        "sequence",
        "seqNum",
        "timestamp",
        "timestamp",
        "timestamp",
        "data",
        "data",
        "data",
        "protocolVersion",
        "protocolVersion",
        "protocolVersion",
        "val",
        "buffer",
        "length",
        "val",
        "val",
        "buffer",
        "length",
        "val",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "buffer",
        "length",
        "val",
        "valArray",
        "valByte",
        "valArray",
        "buffer",
        "length",
        "valByte",
        "serializeInt8",
        "serializeInt8",
        "serializeInt8",
        "serializeInt8",
        "serializeInt8",
        "channelId",
        "serializeInt16",
        "deviceId",
        "serializeBoolean",
        "lqiMode",
        "serializeInt8",
        "lqi",
        "serializeLong",
        "toNtpTime",
        "currentTimeMillis",
        "serializeInt32",
        "sequence",
        "length",
        "serializeInt8",
        "data",
        "length",
        "serializeData",
        "data",
        "Arrays",
        "copyOfRange",
        "buffer",
        "length",
        "time",
        "useBase1",
        "time",
        "msb0baseTime",
        "baseTime",
        "useBase1",
        "baseTime",
        "time",
        "msb1baseTime",
        "baseTime",
        "time",
        "msb0baseTime",
        "seconds",
        "baseTime",
        "fraction",
        "baseTime",
        "useBase1",
        "seconds",
        "seconds",
        "fraction",
        "Override",
        "builder",
        "builder",
        "append",
        "builder",
        "append",
        "format",
        "sequence",
        "builder",
        "append",
        "builder",
        "append",
        "lqi",
        "builder",
        "append",
        "first",
        "val",
        "data",
        "first",
        "builder",
        "append",
        "first",
        "builder",
        "append",
        "format",
        "val",
        "builder",
        "append",
        "builder",
        "toString"
    ],
    "literals": [
        "\"WiresharkZepFrame [sequence=\"",
        "\"%08X\"",
        "\", lqi=\"",
        "\", data={\"",
        "\"%02X\"",
        "\"}]\""
    ],
    "variables": [
        "channelId",
        "lqi",
        "sequence",
        "timestamp",
        "type",
        "protocolVersion",
        "data",
        "baseTime"
    ],
    "comments": [
        "Version",
        "Type",
        "Reserved bytes",
        "time < Feb-2036",
        "dates <= Feb-2036",
        "if base0 needed for dates >= Feb-2036",
        "set high-order bit if msb1baseTime 1900 used"
    ],
    "docstrings": [
        "* Copyright (c) 2016-2018 by the respective copyright holders.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html",
        "* A class to encapsulate the ZigBee Encapsulation Protocol for Wireshark\n *\n * See https://www.wireshark.org/docs/dfref/z/zep.html\n * <p>\n * ZEP Packets must be received in the following format:\n * <table>\n * <tr>\n * <td>UDP Header</td>\n * <td>ZEP Header</td>\n * <td>IEEE 802.15.4 Packet</td>\n * </tr>\n * <tr>\n * <td>8 bytes</td>\n * <td>16/32 bytes</td>\n * <td><= 127 bytes</td>\n * </tr>\n * </table>\n *\n * <p>\n * ZEP v1 Header will have the following format:\n * <table>\n * <tr>\n * <td>Preamble</td>\n * <td>Version</td>\n * <td>Channel ID</td>\n * <td>Device ID</td>\n * <td>CRC/LQI Mode</td>\n * <td>LQI Val</td>\n * <td>Reserved</td>\n * <td>Length</td>\n * <td>\n * </tr>\n * <tr>\n * <td>2 bytes</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>2 bytes</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>7 bytes</td>\n * <td>1 byte</td>\n * </tr>\n * </table>\n *\n * <p>\n * ZEP v2 Header will have the following format (if type=1/Data):\n * <table>\n * <tr>\n * <td>Preamble</td>\n * <td>Version</td>\n * <td>Type</td>\n * <td>Channel ID</td>\n * <td>Device ID</td>\n * <td>CRC/LQI Mode</td>\n * <td>LQI Val</td>\n * <td>NTP Timestamp</td>\n * <td>Sequence#</td>\n * <td>Reserved</td>\n * <td>Length</td>\n * </tr>\n * <tr>\n * <td>2 bytes</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>2 bytes</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>8 bytes</td>\n * <td>4 bytes</td>\n * <td>10 bytes</td>\n * <td>1 byte</td>\n * </tr>\n * </table>\n *\n * <p>\n * ZEP v2 Header will have the following format (if type=2/Ack):\n * <table>\n * <tr>\n * <td>Preamble</td>\n * <td>Version</td>\n * <td>Type</td>\n * <td>Sequence#</td>\n * </tr>\n * <tr>\n * <td>2 bytes</td>\n * <td>1 byte</td>\n * <td>1 byte</td>\n * <td>4 bytes</td>\n * </tr>\n * </tr>\n * </table>\n *\n * @author Chris Jackson\n *",
        "* baseline NTP time if bit-0=0 -> 7-Feb-2036 @ 06:28:16 UTC",
        "* baseline NTP time if bit-0=1 -> 1-Jan-1900 @ 01:00:00 UTC",
        "* @param length the length to set",
        "* @param channelId the channelId to set",
        "* @param deviceId the deviceId to set",
        "* @param lqi the lqi to set",
        "* @param lqiMode the lqiMode to set",
        "* @param seqNum the sequence to set",
        "* @param timestamp the timestamp to set",
        "* @param type the type to set",
        "* @param protocolVersion the protocolVersion to set",
        "*\n     * Converts Java time to 64-bit NTP time representation.\n     *\n     * @param time Java time\n     * @return NTP timestamp representation of Java time value.",
        "* (non-Javadoc)\n     *\n     * @see java.lang.Object#toString()"
    ],
    "functions": [
        "WiresharkZepFrame",
        "setLength",
        "setChannelId",
        "setDeviceId",
        "setLqi",
        "setLqiMode",
        "setSequence",
        "setTimestamp",
        "setType",
        "setData",
        "setProtocolVersion",
        "serializeBoolean",
        "serializeInt8",
        "serializeInt16",
        "serializeInt32",
        "serializeLong",
        "serializeData",
        "getBuffer",
        "toNtpTime",
        "toString"
    ],
    "classes": [
        "WiresharkZepFrame"
    ]
}