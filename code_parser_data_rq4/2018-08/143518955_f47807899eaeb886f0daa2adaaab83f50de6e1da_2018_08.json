{
    "identifiers": [
        "yml",
        "fs",
        "req",
        "getLogger",
        "Request",
        "Ressource",
        "Response",
        "ParameterInfo",
        "UseReference",
        "ExecutionStatisticResult",
        "SwaggerRunner",
        "p_swaggerfilepath",
        "getLogger",
        "p_swaggerfilepath",
        "p_file",
        "p_file",
        "doc",
        "yml",
        "fs",
        "p_file",
        "e",
        "e",
        "doc",
        "doc",
        "host",
        "host",
        "doc",
        "doc",
        "doc",
        "i",
        "paths",
        "i",
        "paths",
        "i",
        "doc",
        "path",
        "scheme",
        "host",
        "path",
        "pathcontent",
        "url",
        "pathrequests",
        "obj1",
        "obj1",
        "obj1",
        "obj1",
        "obj1",
        "Ressource",
        "path",
        "pathrequests",
        "p_pathcontent",
        "p_url",
        "p_pathcontent",
        "j",
        "methods",
        "j",
        "methods",
        "j",
        "p_pathcontent",
        "method",
        "content",
        "content",
        "parameters",
        "parameters",
        "examples",
        "examples",
        "examples",
        "p_url",
        "method",
        "pathrequests",
        "Request",
        "method",
        "p_url",
        "e",
        "examples",
        "e",
        "examples",
        "e",
        "Request",
        "example",
        "methods",
        "j",
        "p_url",
        "request",
        "example",
        "example",
        "u",
        "example",
        "u",
        "example",
        "u",
        "UseReference",
        "refcontent",
        "useRef",
        "refcontent",
        "refcontent",
        "useRef",
        "refcontent",
        "refcontent",
        "useRef",
        "refcontent",
        "request",
        "useRef",
        "k",
        "parameters",
        "k",
        "parameters",
        "k",
        "example",
        "parameter",
        "parameterValue",
        "parameter",
        "parameterValue",
        "newParameterValue",
        "parameterValue",
        "parameterValue",
        "resulttype",
        "parameterValue",
        "refIndex",
        "request",
        "refIndex",
        "request",
        "refIndex",
        "useId",
        "newParameterValue",
        "newParameterValue",
        "parameterValue",
        "newParameterValue",
        "parameterValue",
        "parameterValue",
        "parameterValue",
        "parameterValue",
        "parameterValue",
        "ParameterInfo",
        "parameter",
        "parameter",
        "parameterValue",
        "resulttype",
        "parameterdescription",
        "resulttype",
        "request",
        "parameterdescription",
        "request",
        "pathrequests",
        "request",
        "pathrequests",
        "parameterinfo",
        "request",
        "initialResolution",
        "parameterinfo",
        "initialResolution",
        "request",
        "request",
        "parameterinfo",
        "request",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "extractedPath",
        "cachePath",
        "p",
        "cachePath",
        "p",
        "obj",
        "obj",
        "cachePath",
        "p",
        "exception",
        "exception",
        "obj",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "extractedPath",
        "obj",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "extractedPath",
        "obj",
        "parameterinfo",
        "request",
        "request",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "bodyvalue",
        "eval",
        "bodyvalue",
        "request",
        "jsonValidString",
        "bodyvalue",
        "arraycontent",
        "bodyvalue",
        "request",
        "arraycontent",
        "request",
        "bodyvalue",
        "parameterinfo",
        "request",
        "request",
        "request",
        "parameterinfo",
        "parameterinfo",
        "request",
        "request",
        "parameterinfo",
        "parameterinfo",
        "parameterinfo",
        "request",
        "parameterinfo",
        "parameterinfo",
        "request",
        "fulfill",
        "reject",
        "i",
        "i",
        "i",
        "i",
        "ressource",
        "i",
        "fulfill",
        "e",
        "reject",
        "e",
        "useRefs",
        "fulfill",
        "reject",
        "i",
        "useRefs",
        "i",
        "useRefs",
        "i",
        "useRef",
        "req",
        "reject",
        "ressource",
        "fulfill",
        "err",
        "err",
        "ressource",
        "fulfill",
        "reject",
        "ressource",
        "ressource",
        "ressource",
        "fulfill",
        "j",
        "ressource",
        "j",
        "ressource",
        "j",
        "ressource",
        "request",
        "err",
        "err",
        "error",
        "reject",
        "error",
        "error",
        "ressource",
        "ressource",
        "fulfill",
        "ressourcepath",
        "myRequest",
        "fulfill",
        "reject",
        "req",
        "ressourcepath",
        "myRequest",
        "myRequest",
        "req",
        "fulfill",
        "myRequest",
        "myRequest",
        "myRequest",
        "myRequest",
        "p",
        "myRequest",
        "p",
        "myRequest",
        "p",
        "myRequest",
        "param",
        "myRequest",
        "myRequest",
        "responseObj",
        "myRequest",
        "myRequest",
        "myRequest",
        "responseObj",
        "responseObj",
        "responseObj",
        "myRequest",
        "responseObj",
        "myRequest",
        "responseObj",
        "responseObj",
        "responseObj",
        "responseObj",
        "responseObj",
        "ressourcepath",
        "myRequest",
        "myRequest",
        "responseObj",
        "fulfill",
        "err",
        "err",
        "reject",
        "err",
        "reject",
        "myRequest",
        "myRequest",
        "myRequest",
        "fulfill",
        "reject",
        "myRequest",
        "myRequest",
        "myRequest",
        "options",
        "myRequest",
        "options",
        "myRequest",
        "myRequest",
        "options",
        "myRequest",
        "options",
        "req",
        "options",
        "err",
        "res",
        "body",
        "err",
        "reject",
        "err",
        "Response",
        "res",
        "res",
        "body",
        "fulfill",
        "responseObj",
        "exception",
        "reject",
        "exception",
        "path",
        "i",
        "i",
        "i",
        "ressource",
        "path",
        "ressource",
        "p_ressourcepath",
        "p_request_name",
        "p_request_method",
        "responseobject",
        "p_ressourcepath",
        "p_request_name",
        "p_request_method",
        "entry",
        "entry",
        "entry",
        "responseobject",
        "p_ressourcepath",
        "p_request_name",
        "p_request_method",
        "p_ressourcepath",
        "p_request_name",
        "p_request_method",
        "entry",
        "p_ressourcepath",
        "p_ressourcepath",
        "p_ressourcepath",
        "p_ressourcepath",
        "p_ressourcepath",
        "p_user",
        "p_password",
        "p_user",
        "p_password",
        "ExecutionStatisticResult",
        "responseResult",
        "responseResult",
        "result",
        "responseResult",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result"
    ],
    "literals": [
        "\"js-yaml\"",
        "\"fs\"",
        "\"request\"",
        "'log4js'",
        "'./objects/request'",
        "'./objects/ressource'",
        "'./objects/response'",
        "'./objects/parameterinfo'",
        "'./objects/useReference'",
        "'./objects/executionstatistic'",
        "\"./openAPI/SwaggerRunner\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'debug'",
        "string",
        "''",
        "''",
        "\"Load swagger file: \"",
        "'utf8'",
        "\"://\"",
        "'post'",
        "'put'",
        "'patch'",
        "'get'",
        "string",
        "'x-examples'",
        "\"No exammple found for path url: '\"",
        "\"' : method:  \"",
        "\"unknown\"",
        "\"Example for Parameter not set: \"",
        "'attribute'",
        "string",
        "'$cache.'",
        "'use'",
        "'type'",
        "'type'",
        "\".\"",
        "'attribute'",
        "\"Attrubute Path: \"",
        "'value'",
        "'value'",
        "\"$cache\"",
        "\"$cache.\"",
        "\"\"",
        "\",\"",
        "\"More then one referenced Parameter is not implemented yet\"",
        "string",
        "'.'",
        "\"Exception while resolving of cache value: \"",
        "\"Value loaded from cache: \"",
        "\"array\"",
        "\"[\"",
        "\"]\"",
        "\"path\"",
        "\"{\"",
        "\"}\"",
        "\"body\"",
        "'{'",
        "\"(\"",
        "\")\"",
        "'['",
        "'['",
        "''",
        "']'",
        "''",
        "\"query\"",
        "\"?\"",
        "\"&\"",
        "\"=\"",
        "\"/?\"",
        "\"=\"",
        "\"header\"",
        "\"------------- \"",
        "\" -----------------\"",
        "\"------------- \"",
        "\" -----------------\"",
        "\"Ressource not found!\"",
        "\"Execute requests of ressource: \"",
        "\"Ressource already executed! \"",
        "string",
        "\"Execute  \"",
        "\"Request already executed! \"",
        "\"Execute Use References\"",
        "\"Execute Use References finalized\"",
        "\"put\"",
        "\"post\"",
        "\"Expected result: \"",
        "\", actual result: \"",
        "\"Result: \"",
        "\"Result: \"",
        "\"- can not execute '\"",
        "\"' request, request is invalid: \"",
        "\"Send request to url: \"",
        "\"Sending request failed: \"",
        "string",
        "string",
        "string",
        "string",
        "${p_ressourcepath}:${p_request_name}:${p_request_method}",
        "\"Mark Request as Executed: \"",
        "string",
        "string",
        "string",
        "${p_ressourcepath}:${p_request_name}:${p_request_method}",
        "string",
        "\"markRessourceAsExecuted: \"",
        "string",
        "string",
        "string",
        "\"--------------------------------------------\"",
        "\"Total passed: \"",
        "\"Total failed: \"",
        "\"Invalid Executions: \"",
        "\"--------------------------------------------\""
    ],
    "variables": [
        "doc",
        "host",
        "scheme",
        "paths",
        "i",
        "path",
        "pathcontent",
        "url",
        "pathrequests",
        "methods",
        "pathrequests",
        "j",
        "method",
        "content",
        "examples",
        "parameters",
        "e",
        "example",
        "request",
        "u",
        "refcontent",
        "useRef",
        "k",
        "parameter",
        "parameterValue",
        "resulttype",
        "newParameterValue",
        "useId",
        "refIndex",
        "parameterdescription",
        "extractedPath",
        "cachePath",
        "obj",
        "p",
        "bodyvalue",
        "jsonValidString",
        "arraycontent",
        "i",
        "ressource",
        "i",
        "useRef",
        "ressource",
        "j",
        "request",
        "p",
        "param",
        "options",
        "responseObj",
        "i",
        "ressource",
        "entry",
        "entry",
        "result",
        "result"
    ],
    "comments": [
        "todo: configuration der Logger abschlie�en -> Video Server Projekt -> mit Andy vor Ort",
        "sort by pathrequests",
        "references",
        "todo: check and set request invalid state only for required parameters",
        "request.valid = false;",
        "find the right use reference",
        "cache is not ready yet, resolve values later",
        "try catch",
        "check ressource is already executed",
        "check request is already executed",
        "check reference and trigger the execution",
        "replace cached parameters here!",
        "let responseObj = await",
        "public getAllRessources() {",
        "return this.ressources;",
        "}",
        "public findRequestsByPathAndMethod(p_path: string, p_method: string): Request[] {",
        "let ressource = this.findRessourceByPath(p_path);",
        "let requests: Request[] = [];",
        "if (ressource == undefined) {",
        "return requests;",
        "}",
        "for (let i = 0; i < ressource.requests.length; i++) {",
        "let request = ressource.requests[i];",
        "",
        "if (request.method == p_method) {",
        "requests.push(request);",
        "}",
        "}",
        "return requests;",
        "}",
        "public findRequestByPathAndExampleName(p_path: string, p_method: string, p_examplename: string): Request {",
        "let ressource = this.findRessourceByPath(p_path);",
        "let request: Request;",
        "if (ressource == undefined) {",
        "return undefined;",
        "}",
        "for (let i = 0; i < ressource.requests.length; i++) {",
        "let request = ressource.requests[i];",
        "if (request.name == p_examplename) {",
        "return request;",
        "}",
        "}",
        "return undefined;",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "loadRessourcesFromSwaggerFile",
        "resolveRessourceRequests",
        "setRequestValues",
        "Execute",
        "executeAllRessources",
        "checkAndExecuteUseReferences",
        "executeRessource",
        "executeRequest",
        "sendRequest",
        "findRessourceByPath",
        "markRequestAsExecuted",
        "IsRequestListedAsExecuted",
        "markRessourceAsExecuted",
        "IsRessourceListedAsExecuted",
        "setCommunicationAuth",
        "getTotalResult",
        "printTotalResult"
    ],
    "classes": [
        "SwaggerAPITester"
    ]
}