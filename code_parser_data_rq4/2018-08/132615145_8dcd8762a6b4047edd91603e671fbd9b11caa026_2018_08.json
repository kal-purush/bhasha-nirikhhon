{
    "identifiers": [
        "requests",
        "json",
        "keyring",
        "snowflake",
        "connector",
        "datetime",
        "datetime",
        "timedelta",
        "os",
        "difflib",
        "SequenceMatcher",
        "logging",
        "a",
        "b",
        "SequenceMatcher",
        "a",
        "b",
        "ratio",
        "logging",
        "basicConfig",
        "filename",
        "level",
        "logging",
        "INFO",
        "keyring",
        "get_password",
        "os",
        "environ",
        "snowflake",
        "connector",
        "connect",
        "user",
        "USER",
        "password",
        "PASSWORD",
        "account",
        "ACCOUNT",
        "warehouse",
        "WAREHOUSE",
        "database",
        "DATABASE",
        "schema",
        "SCHEMA",
        "cnx",
        "execute_string",
        "sql",
        "cursor",
        "cursor_list",
        "cursor",
        "days",
        "datetime",
        "today",
        "timedelta",
        "days",
        "days",
        "strftime",
        "today",
        "today",
        "cnx",
        "cursor",
        "execute",
        "sql",
        "args",
        "requests",
        "get",
        "token",
        "today",
        "today",
        "limit",
        "json",
        "loads",
        "r",
        "text",
        "each",
        "response_native",
        "insert_counter",
        "each",
        "each",
        "each",
        "each",
        "each",
        "each",
        "each",
        "each",
        "store",
        "storeArray",
        "store",
        "upper",
        "strip",
        "each",
        "upper",
        "strip",
        "cleanStore",
        "replace",
        "cleanEuclidStore",
        "replace",
        "similar",
        "cleanStore",
        "cleanEuclidStore",
        "cleanEuclidStore",
        "store",
        "insert_counter",
        "insert_array",
        "append",
        "email_address",
        "age",
        "last_visit",
        "last_visit_time",
        "likelihood",
        "visit_location",
        "visitor_id",
        "duration",
        "store_name",
        "insert_array",
        "cnx",
        "cursor",
        "executemany",
        "sql",
        "args",
        "insert_array",
        "insert_counter",
        "insert_array",
        "cnx",
        "cursor",
        "executemany",
        "sql",
        "args",
        "insert_array",
        "cnx",
        "close"
    ],
    "literals": [
        "'C:/python36/scripts/logs/snowflake_python_connector.log'",
        "'PYTHON_SERVICE'",
        "\"Snowflake\"",
        "\"PYTHON_SERVICE\"",
        "'lillypulitzer'",
        "'STITCH_TEST'",
        "'staging'",
        "'Python_production'",
        "'f4c42670-ece4-47ee-b13f-e849e45dd701'",
        "'TZ'",
        "'GMT'",
        "'%Y-%m-%d %H:%M:%S.%f'",
        "\"SELECT * FROM STAGING.DB2_PROD2.STORENORMALIZED where district_name <> 'ECOMMERCE' AND \"",
        "\"district_name <> 'DISTRIBUTION CENTER' order by store_name\"",
        "'%Y-%m-%d'",
        "\"**** \"",
        "\" ****\"",
        "\"DELETE FROM STAGING.EUCLID.VISITORS WHERE LAST_VISIT_DATE = %s\"",
        "\"\"",
        "'https://metrics-api.euclidelements.com/v1/segmentation/session-details/preview?hierarchy-path=All&euclid-enabled-only=true&token='",
        "'&earliest-date='",
        "'&latest-date='",
        "'&columns=visit-date%2Cemail-address%2Cage%2Clast-visit-date%2Cvisit-location%2Clast-visit-time-of-day%2Clikelihood-of-visit-next-30-days%2Cvisitor-id%2Cduration%2Cage%2Cvisitor-id&limit='",
        "'email_address'",
        "'duration'",
        "'age'",
        "'visit_date'",
        "'last_visit_time_of_day'",
        "'likelihood_of_visit_next_30_days'",
        "'visitor_id'",
        "'visit_location'",
        "'visit_location'",
        "'TOWN CENTER'",
        "''",
        "'TOWN CENTER'",
        "''",
        "\"match : \"",
        "\"INSERT INTO STAGING.EUCLID.VISITORS VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)\"",
        "\"INSERT INTO STAGING.EUCLID.VISITORS VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)\""
    ],
    "variables": [
        "USER",
        "PASSWORD",
        "ACCOUNT",
        "WAREHOUSE",
        "DATABASE",
        "SCHEMA",
        "token",
        "limit",
        "pattern",
        "days",
        "cnx",
        "sql",
        "cursor_list",
        "storeArray",
        "today",
        "sql",
        "args",
        "response_native",
        "r",
        "response_native",
        "insert_counter",
        "insert_array",
        "email_address",
        "duration",
        "age",
        "last_visit",
        "last_visit_time",
        "likelihood",
        "visitor_id",
        "store_name",
        "cleanStore",
        "cleanEuclidStore",
        "cleanStore",
        "cleanEuclidStore",
        "visit_location",
        "sql",
        "args",
        "insert_counter",
        "sql",
        "args",
        "insert_counter"
    ],
    "comments": [
        "function to compare two strings through pattern matching",
        "this creates a log file for the script",
        "euclid api token",
        "limit the euclid api to 3000 entries max",
        "set days to how many days in the past to retrieve. 1 day is the default (yesterday)",
        "open connection to Snowflake instance",
        "read stores into an array",
        "main processing",
        "set the target date, delete any rows for that date just in case the job is being re-run",
        "get today's date, but subtract one day for yesterday",
        "delete any existing rows from a previous run",
        "this allows the job to be re-run if it fails for any reason",
        "Get all Euclid visit via their API",
        "Provide yesterday's date for both start and end",
        "We are only fetching a single days worth",
        "process each json entry",
        "iterate through stores, matching euclid store name to Lilly master store name",
        "Established similarity metric of .55 or higher to match the store",
        "create array of 500 inserts",
        "finished processing, grab last group of records and insert. close the connection to Snowflake"
    ],
    "docstrings": [],
    "functions": [
        "similar"
    ],
    "classes": []
}