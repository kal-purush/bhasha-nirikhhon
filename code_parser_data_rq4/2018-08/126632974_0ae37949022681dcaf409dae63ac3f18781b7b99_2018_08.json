{
    "identifiers": [
        "Collections",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Lesson_18",
        "args",
        "arrayList",
        "Add",
        "arrayList",
        "Add",
        "arrayList",
        "Add",
        "arrayList",
        "Add",
        "Add",
        "AddRange",
        "WriteLine",
        "PrintList",
        "WriteLine",
        "WriteLine",
        "listElement",
        "Remove",
        "WriteLine",
        "PrintList",
        "RemoveAt",
        "WriteLine",
        "PrintList",
        "RemoveAll",
        "c",
        "WriteLine",
        "PrintList",
        "Foo",
        "Bar",
        "WriteLine",
        "WriteLine",
        "Foo",
        "Bar",
        "WriteLine",
        "CheckIfString",
        "CheckIfString",
        "IGenericInterface",
        "ValidGeneric",
        "CheckIfStringConstraint",
        "ValidGeneric",
        "Account",
        "IBank",
        "Account",
        "Bank",
        "Account",
        "ordinaryBank",
        "DoOperation",
        "account",
        "DepositAccount",
        "IBank",
        "DepositAccount",
        "depositBank",
        "DoOperation",
        "depositAcc",
        "WriteLine",
        "ReadKey",
        "Range",
        "ToArray",
        "i",
        "i",
        "_result",
        "AddLast",
        "LinkedListNode",
        "i",
        "_result",
        "T",
        "T",
        "StringBuilder",
        "elem",
        "sb",
        "AppendFormat",
        "elem",
        "WriteLine",
        "sb",
        "ToString",
        "T",
        "T",
        "T",
        "parameter",
        "WriteLine",
        "T",
        "IGenericInterface",
        "T",
        "T",
        "T",
        "IList",
        "T",
        "T",
        "arg",
        "T",
        "T",
        "parameter",
        "T",
        "T",
        "IList",
        "T",
        "WriteLine",
        "T",
        "ValidGeneric",
        "IList",
        "ValidGeneric",
        "ValidGeneric",
        "index",
        "NotImplementedException",
        "NotImplementedException",
        "NotImplementedException",
        "NotImplementedException",
        "ValidGeneric",
        "item",
        "NotImplementedException",
        "NotImplementedException",
        "ValidGeneric",
        "item",
        "NotImplementedException",
        "ValidGeneric",
        "array",
        "arrayIndex",
        "NotImplementedException",
        "IEnumerator",
        "ValidGeneric",
        "NotImplementedException",
        "ValidGeneric",
        "item",
        "NotImplementedException",
        "index",
        "ValidGeneric",
        "item",
        "NotImplementedException",
        "ValidGeneric",
        "item",
        "NotImplementedException",
        "index",
        "NotImplementedException",
        "NotImplementedException",
        "NonValidGeneric",
        "i",
        "_index",
        "i",
        "Random",
        "rnd",
        "Next",
        "WriteLine",
        "sum",
        "Account",
        "IBank",
        "T",
        "T",
        "Account",
        "T",
        "account",
        "T",
        "IBank",
        "T",
        "T",
        "Account",
        "T",
        "account",
        "account",
        "DoTransfer"
    ],
    "literals": [
        "\"string\"",
        "\"Лист из элементов\"",
        "\"Можно обращаться по индексу как в обычном массиве\"",
        "\"Убрали 4 из листа\"",
        "\"Убрали элемент по нулевому индексу\"",
        "\"Убрали все элементы больше 5\"",
        "\"А теперь выведем на экран наше статическое поле\"",
        "\"Дженерики в методах\"",
        "\"this is string\"",
        "\"{0} \"",
        "\"Клиент положил на счет {0} долларов\""
    ],
    "variables": [
        "arrayList",
        "arrayListElement",
        "listElement",
        "validGeneric",
        "Account",
        "account",
        "ordinaryBank",
        "DepositAccount",
        "depositAcc",
        "depositBank",
        "ordinaryBank",
        "_result",
        "i",
        "sb",
        "Bar",
        "Count",
        "IsReadOnly",
        "_index",
        "Random",
        "rnd",
        "sum"
    ],
    "comments": [
        "normal array",
        "int[] arr_1 = new int[5];",
        "int[] arr_2 = new int[] {1,2,3,4,5};",
        "int[] giant_Array = GetGiantArray();",
        "int el_1 = giant_Array[0];",
        "int el_2 = giant_Array[126547];",
        "int el_3 = giant_Array[9999996];",
        "Linked list",
        "LinkedList<int> linkedList = GetGiantLinkedList();",
        "var found = linkedList.Find(9999999);",
        "linkedList.AddLast(new LinkedListNode<int>(100000001));",
        "ArrayList",
        "int sum = 0;",
        "foreach (var el in arrayList)",
        "{",
        "sum += (int) el;",
        "}",
        "Generic List",
        "Generics generates classes per each instance",
        "Generics in methods",
        "Constraints",
        "IGenericInterface<NonValidGeneric> nonValidGeneric = null; // не скомпилится",
        "IGenericInterface<AnotherNonValidGeneric> anotherNonValidGeneric = null; // тоже не скомпилится",
        "CheckIfStringConstraint(new NonValidGeneric()); // не скомпилится",
        "CheckIfStringConstraint(new AnotherNonValidGeneric(12)); // и это тоже",
        "Ковариантность",
        "IBank<DepositAccount> depositBank = new Bank();",
        "depositBank.DoOperation();",
        "IBank<Account> ordinaryBank = depositBank;",
        "ordinaryBank.DoOperation();",
        "Контрвариантнось",
        "Вспомогательны метод генерящий огромный массив",
        "Вспомогательный метод генерящий огромный связный список",
        "Вспомогательный метод для печати листов",
        "Класс для теста подтверждающего что дженерики создают отдельный класс на каждый тип",
        "Простой дженерик метод проверяющий что переданный объект строка",
        "Дженерик интерфейс с констрейнтами",
        "Версия простого дженерик метода с констрейнтами",
        "Класс-болванка подходящая под констрейнт",
        "Структура-болванка не подходящая под констрейнт",
        "Класс-болванка не подходящая под констрейнт",
        "Просто заготовки для примеров на ко/контрвариантность",
        "Ковариантность",
        "interface IBank<out T> where T : Account",
        "{",
        "T DoOperation();",
        "}",
        "class Bank : IBank<DepositAccount>",
        "{",
        "public DepositAccount DoOperation()",
        "{",
        "DepositAccount acc = new DepositAccount();",
        "acc.DoTransfer();",
        "return acc;",
        "}",
        "}",
        "Контрвариантность"
    ],
    "docstrings": [],
    "functions": [
        "Main",
        "GetGiantArray",
        "GetGiantLinkedList",
        "PrintList",
        "CheckIfString",
        "Bar",
        "CheckIfStringConstraint",
        "Add",
        "Clear",
        "Contains",
        "CopyTo",
        "GetEnumerator",
        "IndexOf",
        "Insert",
        "Remove",
        "RemoveAt",
        "IEnumerator",
        "GetEnumerator",
        "AnotherNonValidGeneric",
        "DoTransfer",
        "DoOperation",
        "DoOperation"
    ],
    "classes": [
        "Program",
        "Foo",
        "ValidGeneric",
        "AnotherNonValidGeneric",
        "Account",
        "DepositAccount",
        "Bank"
    ]
}