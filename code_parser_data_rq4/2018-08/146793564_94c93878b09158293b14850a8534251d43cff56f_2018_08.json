{
    "identifiers": [
        "ast",
        "datetime",
        "json",
        "os",
        "re",
        "flask",
        "Flask",
        "flash",
        "jsonify",
        "redirect",
        "render_template",
        "request",
        "session",
        "flask_session",
        "Session",
        "cs50",
        "SQL",
        "eprint",
        "helpers",
        "lookup",
        "lookup_details",
        "tempfile",
        "mkdtemp",
        "werkzeug",
        "exceptions",
        "default_exceptions",
        "werkzeug",
        "security",
        "check_password_hash",
        "generate_password_hash",
        "passlib",
        "context",
        "CryptContext",
        "pprint",
        "pprint",
        "yelpapi",
        "YelpAPI",
        "Flask",
        "app",
        "config",
        "app",
        "config",
        "mkdtemp",
        "app",
        "config",
        "app",
        "config",
        "Session",
        "app",
        "SQL",
        "YelpAPI",
        "api_key",
        "app",
        "after_request",
        "response",
        "response",
        "headers",
        "response",
        "headers",
        "response",
        "headers",
        "response",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "args",
        "get",
        "geo",
        "RuntimeError",
        "lookup",
        "geo",
        "jsonify",
        "articles",
        "app",
        "route",
        "methods",
        "request",
        "args",
        "get",
        "q",
        "RuntimeError",
        "db",
        "execute",
        "q",
        "q",
        "jsonify",
        "places",
        "app",
        "route",
        "methods",
        "request",
        "get_json",
        "location",
        "location",
        "location",
        "db",
        "execute",
        "location",
        "str_location",
        "len",
        "location_businesses",
        "location_businesses",
        "ast",
        "literal_eval",
        "location_businesses",
        "db",
        "execute",
        "location",
        "str_location",
        "len",
        "business_details",
        "eprint",
        "lookup_details",
        "str_location",
        "location_businesses",
        "yelp_api",
        "search_query",
        "categories",
        "latitude",
        "location",
        "longitude",
        "location",
        "radius",
        "sort_by",
        "response",
        "location_businesses",
        "db",
        "execute",
        "location",
        "str_location",
        "businesses",
        "str_location_businesses",
        "db",
        "execute",
        "location",
        "str_location",
        "len",
        "location_businesses",
        "location_businesses",
        "ast",
        "literal_eval",
        "location_businesses",
        "db",
        "execute",
        "location",
        "str_location",
        "len",
        "business_details",
        "eprint",
        "lookup_details",
        "str_location",
        "location_businesses",
        "app",
        "route",
        "methods",
        "request",
        "args",
        "get",
        "location",
        "RuntimeError",
        "json",
        "loads",
        "location",
        "location",
        "eprint",
        "location",
        "db",
        "execute",
        "location",
        "location",
        "len",
        "business_details",
        "eprint",
        "jsonify",
        "business_details",
        "RuntimeError",
        "app",
        "route",
        "request",
        "args",
        "get",
        "RuntimeError",
        "request",
        "args",
        "get",
        "RuntimeError",
        "re",
        "search",
        "request",
        "args",
        "get",
        "RuntimeError",
        "re",
        "search",
        "request",
        "args",
        "get",
        "RuntimeError",
        "request",
        "args",
        "get",
        "split",
        "request",
        "args",
        "get",
        "split",
        "sw_lng",
        "ne_lng",
        "db",
        "execute",
        "sw_lat",
        "sw_lat",
        "ne_lat",
        "ne_lat",
        "sw_lng",
        "sw_lng",
        "ne_lng",
        "ne_lng",
        "db",
        "execute",
        "sw_lat",
        "sw_lat",
        "ne_lat",
        "ne_lat",
        "sw_lng",
        "sw_lng",
        "ne_lng",
        "ne_lng",
        "jsonify",
        "rows"
    ],
    "literals": [
        "\"JSONIFY_PRETTYPRINT_REGULAR\"",
        "\"SESSION_FILE_DIR\"",
        "\"SESSION_PERMANENT\"",
        "\"SESSION_TYPE\"",
        "\"filesystem\"",
        "\"sqlite:///decide.db\"",
        "\"JPSD1KTG7J2HiXxo4r63wcWAqxMmj0lElhIOl-43xT4HYcEM4WiCbStLOG96HDtIeQMF6eSZF0AXntwxRTEhsCuSF2pY2zNF_rZmVF7JfB3iBe6EDVLf0oW30M1xW3Yx\"",
        "\"Cache-Control\"",
        "\"no-cache, no-store, must-revalidate\"",
        "\"Expires\"",
        "\"Pragma\"",
        "\"no-cache\"",
        "\"/\"",
        "\"index.html\"",
        "\"/articles\"",
        "\"GET\"",
        "\"POST\"",
        "\"geo\"",
        "\"missing geo\"",
        "\"/search\"",
        "\"GET\"",
        "\"POST\"",
        "\"q\"",
        "\"*\"",
        "\"missing q\"",
        "\"SELECT * FROM v_places WHERE v_places MATCH :q\"",
        "\"/location\"",
        "\"POST\"",
        "\"latitude\"",
        "\"latitude\"",
        "\"longitude\"",
        "\"longitude\"",
        "\"SELECT * FROM location_businesses WHERE location = :location\"",
        "\"businesses\"",
        "\"SELECT * FROM businesses WHERE location = :location\"",
        "\"we have details for location\"",
        "\"\"",
        "\"\"",
        "'restaurants'",
        "\"latitude\"",
        "\"longitude\"",
        "'rating'",
        "\"businesses\"",
        "\"INSERT INTO location_businesses (location, businesses) VALUES (:location, :businesses)\"",
        "\"SELECT * FROM location_businesses WHERE location = :location\"",
        "\"businesses\"",
        "\"SELECT * FROM businesses WHERE location = :location\"",
        "\"we have details for location\"",
        "\"\"",
        "\"\"",
        "\"/businesses\"",
        "\"GET\"",
        "\"location\"",
        "\"missing location parameter\"",
        "\"SELECT * FROM businesses WHERE location = :location\"",
        "\"we have details for location\"",
        "\"missing location businesses\"",
        "\"/update\"",
        "\"sw\"",
        "\"missing sw\"",
        "\"ne\"",
        "\"missing ne\"",
        "\"^-?\\d+(?:\\.\\d+)?,-?\\d+(?:\\.\\d+)?$\"",
        "\"sw\"",
        "\"invalid sw\"",
        "\"^-?\\d+(?:\\.\\d+)?,-?\\d+(?:\\.\\d+)?$\"",
        "\"ne\"",
        "\"invalid ne\"",
        "\"sw\"",
        "\",\"",
        "\"ne\"",
        "\",\""
    ],
    "variables": [
        "app",
        "db",
        "api_key",
        "yelp_api",
        "geo",
        "articles",
        "q",
        "places",
        "location",
        "location",
        "str_location",
        "location_businesses",
        "location_businesses",
        "location_businesses",
        "business_details",
        "business_details",
        "response",
        "location_businesses",
        "str_location_businesses",
        "location_businesses",
        "location_businesses",
        "location_businesses",
        "business_details",
        "business_details",
        "location",
        "location",
        "location",
        "business_details",
        "sw_lat",
        "sw_lng",
        "ne_lat",
        "ne_lng",
        "rows",
        "rows"
    ],
    "comments": [
        "Configure application",
        "Configure session to use filesystem (instead of signed cookies)",
        "Configure CS50 Library to use SQLite database",
        "Configure Yelp API key. https://www.yelp.com/developers/v3/manage_app",
        "Ensure responses aren't cached",
        "Ensure parameters are present",
        "Look up articles for geo",
        "Ensure parameters are present",
        "Look up places for q",
        "convert location dictionary to string",
        "query database for location",
        "if location is in database, no need to look up businesses in this location on yelp",
        "location must already be in database",
        "if business details are in database, no need to look up on yelp",
        "The server successfully processed the request and is not returning any content",
        "lookup location details and return results to the front end",
        "The server successfully processed the request and is not returning any content",
        "look up businesses for this location",
        "call yelp api for businesses in this location",
        "add businesses for this location to the database",
        "query database for location",
        "if location is in database, no need to look up businesses in this location on yelp",
        "location must already be in database",
        "if business details are in database, no need to look up on yelp",
        "The server successfully processed the request and is not returning any content",
        "lookup location details and return results to the front end",
        "The server successfully processed the request and is not returning any content",
        "Ensure parameters are present",
        "location = str(location)",
        "Look up places for q",
        "if business details are in database, no need to look up on yelp",
        "success",
        "we need location businesses",
        "Ensure parameters are present",
        "Ensure parameters are in lat,lng format",
        "Explode southwest corner into two variables",
        "Explode northeast corner into two variables",
        "Find 10 cities within view, pseudorandomly chosen if more within view",
        "Doesn't cross the antimeridian",
        "Crosses the antimeridian",
        "Output places as JSON"
    ],
    "docstrings": [
        "\"\"\"Render map\"\"\"",
        "\"\"\"Look up articles for geo\"\"\"",
        "\"\"\"Search for places that match query\"\"\"",
        "\"\"\"Get current location of user and store businesses for that location\"\"\"",
        "\"\"\"Get business details for location\"\"\"",
        "\"\"\"Find up to 10 places within view\"\"\"",
        "\"\"\"SELECT * FROM places\n                          WHERE :sw_lat <= latitude AND latitude <= :ne_lat AND (:sw_lng <= longitude AND longitude <= :ne_lng)\n                          GROUP BY country_code, place_name, admin_code1\n                          ORDER BY RANDOM()\n                          LIMIT 10\"\"\"",
        "\"\"\"SELECT * FROM places\n                          WHERE :sw_lat <= latitude AND latitude <= :ne_lat AND (:sw_lng <= longitude OR longitude <= :ne_lng)\n                          GROUP BY country_code, place_name, admin_code1\n                          ORDER BY RANDOM()\n                          LIMIT 10\"\"\""
    ],
    "functions": [
        "after_request",
        "index",
        "articles",
        "search",
        "location",
        "businesses",
        "update"
    ],
    "classes": []
}