{
    "identifiers": [
        "pandas_datareader",
        "data",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "datetime",
        "dt",
        "urllib",
        "request",
        "json",
        "os",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "tensorflow",
        "examples",
        "tutorials",
        "mnist",
        "input_data",
        "tf",
        "reset_default_graph",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "batch_size",
        "layer_sizes",
        "name",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "batch_size",
        "layer_sizes",
        "name",
        "idx",
        "lid",
        "layer_ids",
        "tf",
        "variable_scope",
        "lid",
        "tf",
        "get_variable",
        "shape",
        "layer_sizes",
        "idx",
        "layer_sizes",
        "idx",
        "initializer",
        "tf",
        "truncated_normal_initializer",
        "stddev",
        "tf",
        "get_variable",
        "shape",
        "layer_sizes",
        "idx",
        "initializer",
        "tf",
        "random_uniform_initializer",
        "predictions",
        "labels",
        "np",
        "sum",
        "np",
        "argmax",
        "predictions",
        "axis",
        "np",
        "argmax",
        "labels",
        "axis",
        "labels",
        "shape",
        "train_inputs",
        "lid",
        "layer_ids",
        "tf",
        "variable_scope",
        "lid",
        "reuse",
        "tf",
        "get_variable",
        "tf",
        "get_variable",
        "lid",
        "tf",
        "nn",
        "relu",
        "tf",
        "matmul",
        "h",
        "w",
        "b",
        "name",
        "lid",
        "tf",
        "nn",
        "xw_plus_b",
        "h",
        "w",
        "b",
        "name",
        "lid",
        "tf",
        "nn",
        "softmax",
        "h",
        "name",
        "tf",
        "reduce_mean",
        "tf",
        "nn",
        "softmax_cross_entropy_with_logits_v2",
        "labels",
        "train_labels",
        "logits",
        "h",
        "name",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "name",
        "tf",
        "train",
        "MomentumOptimizer",
        "tf_learning_rate",
        "momentum",
        "optimizer",
        "compute_gradients",
        "tf_loss",
        "optimizer",
        "minimize",
        "tf_loss",
        "tf",
        "name_scope",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "name",
        "tf",
        "summary",
        "scalar",
        "tf_loss_ph",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "name",
        "tf",
        "summary",
        "scalar",
        "tf_accuracy_ph",
        "g",
        "v",
        "grads_and_vars",
        "v",
        "name",
        "v",
        "name",
        "tf",
        "name_scope",
        "tf",
        "sqrt",
        "tf",
        "reduce_mean",
        "g",
        "tf",
        "summary",
        "scalar",
        "tf_last_grad_norm",
        "tf",
        "summary",
        "merge",
        "tf_loss_summary",
        "tf_accuracy_summary",
        "tf",
        "ConfigProto",
        "allow_soft_placement",
        "config",
        "gpu_options",
        "config",
        "gpu_options",
        "tf",
        "InteractiveSession",
        "config",
        "config",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "os",
        "mkdir",
        "os",
        "path",
        "join",
        "tf",
        "summary",
        "FileWriter",
        "os",
        "path",
        "join",
        "session",
        "graph",
        "tf",
        "global_variables_initializer",
        "run",
        "input_data",
        "read_data_sets",
        "one_hot",
        "epoch",
        "n_epochs",
        "i",
        "n_train",
        "batch_size",
        "mnist_data",
        "train",
        "next_batch",
        "batch_size",
        "i",
        "session",
        "run",
        "tf_loss",
        "tf_loss_minimize",
        "tf_gradnorm_summary",
        "feed_dict",
        "train_inputs",
        "batch",
        "reshape",
        "batch_size",
        "image_size",
        "image_size",
        "train_labels",
        "batch",
        "tf_learning_rate",
        "summ_writer",
        "add_summary",
        "gn_summ",
        "epoch",
        "session",
        "run",
        "tf_loss",
        "tf_loss_minimize",
        "feed_dict",
        "train_inputs",
        "batch",
        "reshape",
        "batch_size",
        "image_size",
        "image_size",
        "train_labels",
        "batch",
        "tf_learning_rate",
        "loss_per_epoch",
        "append",
        "l",
        "epoch",
        "np",
        "mean",
        "loss_per_epoch",
        "np",
        "mean",
        "loss_per_epoch",
        "i",
        "n_valid",
        "batch_size",
        "mnist_data",
        "validation",
        "next_batch",
        "batch_size",
        "session",
        "run",
        "tf_predictions",
        "feed_dict",
        "train_inputs",
        "valid_images",
        "reshape",
        "batch_size",
        "image_size",
        "image_size",
        "valid_accuracy_per_epoch",
        "append",
        "accuracy",
        "valid_batch_predictions",
        "valid_labels",
        "np",
        "mean",
        "valid_accuracy_per_epoch",
        "epoch",
        "np",
        "mean",
        "valid_accuracy_per_epoch",
        "i",
        "n_test",
        "batch_size",
        "mnist_data",
        "test",
        "next_batch",
        "batch_size",
        "session",
        "run",
        "tf_predictions",
        "feed_dict",
        "train_inputs",
        "test_images",
        "reshape",
        "batch_size",
        "image_size",
        "image_size",
        "accuracy_per_epoch",
        "append",
        "accuracy",
        "test_batch_predictions",
        "test_labels",
        "epoch",
        "np",
        "mean",
        "accuracy_per_epoch",
        "np",
        "mean",
        "accuracy_per_epoch",
        "session",
        "run",
        "performance_summaries",
        "feed_dict",
        "tf_loss_ph",
        "avg_loss",
        "tf_accuracy_ph",
        "avg_test_accuracy",
        "summ_writer",
        "add_summary",
        "summ",
        "epoch",
        "session",
        "close"
    ],
    "literals": [
        "'hidden1'",
        "'hidden2'",
        "'hidden3'",
        "'hidden4'",
        "'hidden5'",
        "'out'",
        "'train_inputs'",
        "'train_labels'",
        "'weights'",
        "'bias'",
        "'weights'",
        "'bias'",
        "'out'",
        "'_output'",
        "'_output'",
        "'predictions'",
        "'loss'",
        "'learning_rate'",
        "'performance'",
        "'loss_summary'",
        "'loss'",
        "'accuracy_summary'",
        "'accuracy'",
        "'hidden5'",
        "'weights'",
        "'gradients'",
        "'grad_norm'",
        "'summaries'",
        "'summaries'",
        "'summaries'",
        "'first'",
        "'summaries'",
        "'first'",
        "'summaries'",
        "'first'",
        "'MNIST_data'",
        "'Average loss in epoch %d: %.5f'",
        "'\\tAverage Valid Accuracy in epoch %d: %.5f'",
        "'\\tAverage Test Accuracy in epoch %d: %.5f\\n'"
    ],
    "variables": [
        "batch_size",
        "layer_ids",
        "layer_sizes",
        "train_inputs",
        "train_labels",
        "w",
        "b",
        "h",
        "w",
        "b",
        "h",
        "h",
        "tf_predictions",
        "tf_loss",
        "tf_learning_rate",
        "optimizer",
        "grads_and_vars",
        "tf_loss_minimize",
        "tf_loss_ph",
        "tf_loss_summary",
        "tf_accuracy_ph",
        "tf_accuracy_summary",
        "tf_last_grad_norm",
        "tf_gradnorm_summary",
        "performance_summaries",
        "image_size",
        "n_channels",
        "n_classes",
        "n_train",
        "n_valid",
        "n_test",
        "n_epochs",
        "config",
        "allow_growth",
        "per_process_gpu_memory_fraction",
        "session",
        "summ_writer",
        "accuracy_per_epoch",
        "mnist_data",
        "loss_per_epoch",
        "batch",
        "l",
        "_",
        "gn_summ",
        "l",
        "_",
        "avg_loss",
        "valid_accuracy_per_epoch",
        "valid_images",
        "valid_labels",
        "valid_batch_predictions",
        "mean_v_acc",
        "accuracy_per_epoch",
        "test_images",
        "test_labels",
        "test_batch_predictions",
        "avg_test_accuracy",
        "summ"
    ],
    "comments": [
        "This code has been tested with TensorFlow 1.6",
        "Inputs and Labels",
        "Weight and Bias definitions",
        "Calculating Logits",
        "Calculating Loss",
        "Optimizer",
        "Name scope allows you to group various summaries together",
        "Summaries having the same name_scope will be displayed on the same row",
        "Summaries need to be displayed",
        "Whenever you need to record the loss, feed the mean loss to this placeholder",
        "Create a scalar summary object for the loss so it can be displayed",
        "Whenever you need to record the loss, feed the mean test accuracy to this placeholder",
        "Create a scalar summary object for the accuracy so it can be displayed",
        "Gradient norm summary",
        "Merge all summaries together",
        "making sure Tensorflow doesn't overflow the GPU",
        "=================================== Training for one step ========================================",
        "Get one batch of training data",
        "Only for the first epoch, get the summary data",
        "Otherwise, it can clutter the visualization",
        "Optimize with training data",
        "====================== Calculate the Validation Accuracy ==========================",
        "===================== Calculate the Test Accuracy ===============================",
        "Execute the summaries defined above",
        "Write the obtained summaries to the file, so it can be displayed in the TensorBoard"
    ],
    "docstrings": [
        "'''\n    Accuracy of a given set of predictions of size (N x n_classes) and\n    labels of size (N x n_classes)\n    '''"
    ],
    "functions": [
        "accuracy"
    ],
    "classes": []
}