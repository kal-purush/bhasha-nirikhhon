{
    "identifiers": [
        "APIGatewayProxyEvent",
        "APIGatewayProxyResult",
        "Handler",
        "formatJSONResponse",
        "middyfy",
        "BadRequest",
        "Forbidden",
        "MethodNotAllowed",
        "passport",
        "BasicStrategy",
        "UserAccessToken",
        "toBasicAuthToken",
        "decrypt",
        "datestr",
        "auth",
        "passport",
        "BasicStrategy",
        "userid",
        "accesstoken",
        "done",
        "userid",
        "done",
        "BadRequest",
        "decrypt",
        "accesstoken",
        "user",
        "done",
        "user",
        "userid",
        "done",
        "Forbidden",
        "done",
        "user",
        "MethodNotAllowed",
        "username",
        "BadRequest",
        "userid",
        "BadRequest",
        "formatJSONResponse",
        "toBasicAuthToken",
        "username",
        "userid",
        "datestr",
        "middyfy",
        "auth"
    ],
    "literals": [
        "\"aws-lambda\"",
        "'@libs/api-gateway'",
        "'@libs/lambda'",
        "'http-errors'",
        "'passport'",
        "'passport-http'",
        "'../../libs/user'",
        "'../../libs/utils/datestr'",
        "'basic'",
        "'basic access token is missing user id'",
        "'POST'",
        "'only POST accepted for this endpoint'",
        "'username'",
        "string",
        "\"missing required query param 'username'\"",
        "'userid'",
        "string",
        "\"missing required query param 'userid'\"",
        "'auth-token'"
    ],
    "variables": [
        "auth",
        "user",
        "username",
        "userid",
        "main"
    ],
    "comments": [],
    "docstrings": [
        "* NOTE: we are NOT using Basic auth in a standard way.\n * The norm for HTTP Basic would be a token in format base64(username:password)\n * Here, we're expecting tokens in format base64(userid:accesstoken)"
    ],
    "functions": [],
    "classes": []
}