{
    "identifiers": [
        "MangoClient",
        "Connection",
        "Keypair",
        "PublicKey",
        "Transaction",
        "Config",
        "getSpotMarketByBaseSymbol",
        "getTokenBySymbol",
        "fs",
        "os",
        "getFeeRates",
        "getFeeTier",
        "Market",
        "makeCancelAllSpotOrdersInstruction",
        "makeCreateSpotOpenOrdersInstruction",
        "makePlaceSpotOrder2Instruction",
        "BN",
        "MangoGroup",
        "MangoAccount",
        "Payer",
        "nativeToUi",
        "ZERO_BN",
        "QUOTE_INDEX",
        "main",
        "process",
        "Config",
        "config",
        "MANGO_GROUP",
        "mangoGroupConfig",
        "MANGO_GROUP",
        "Connection",
        "Config",
        "mangoGroupConfig",
        "MangoClient",
        "connection",
        "mangoGroupConfig",
        "mangoClient",
        "mangoGroupConfig",
        "mangoGroup",
        "connection",
        "mangoGroup",
        "connection",
        "Keypair",
        "Uint8Array",
        "fs",
        "KEYPAIR_PATH",
        "os",
        "mangoClient",
        "PublicKey",
        "MANGO_ACCOUNT",
        "mangoGroup",
        "getSpotMarketByBaseSymbol",
        "mangoGroupConfig",
        "MARKET",
        "spotMarketConfig",
        "getTokenBySymbol",
        "mangoGroupConfig",
        "spotMarketConfig",
        "mangoGroup",
        "mangoCache",
        "mangoGroup",
        "token",
        "mangoGroup",
        "token",
        "mangoGroup",
        "connection",
        "mangoCache",
        "tokenPrice",
        "mangoGroup",
        "mangoCache",
        "mangoGroup",
        "token",
        "mangoGroup",
        "token",
        "Market",
        "connection",
        "spotMarketConfig",
        "mangoGroupConfig",
        "mangoGroup",
        "spotMarket",
        "mangoAccount",
        "spotMarketIndex",
        "BN",
        "spotMarketIndex",
        "PublicKey",
        "mangoAccount",
        "spotMarketIndexBN",
        "Buffer",
        "Buffer",
        "mangoClient",
        "makeCreateSpotOpenOrdersInstruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "payer",
        "mangoGroup",
        "openOrdersPk",
        "spotMarket",
        "mangoGroup",
        "connection",
        "Transaction",
        "latestBlockhash",
        "payer",
        "tx",
        "createSpotOpenOrdersInstruction",
        "tx",
        "payer",
        "mangoClient",
        "tx",
        "latestBlockhash",
        "response",
        "error",
        "error",
        "mangoAccount",
        "connection",
        "mangoGroup",
        "quote",
        "connection",
        "Transaction",
        "latestBlockhash",
        "payer",
        "tokenPrice",
        "tokenPrice",
        "spread",
        "tokenPrice",
        "spread",
        "cancelAllSpotOrdersInstruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "spotMarket",
        "payer",
        "createSpotOrder2Instruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "spotMarket",
        "payer",
        "bidPrice",
        "createSpotOrder2Instruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "spotMarket",
        "payer",
        "askPrice",
        "tx",
        "instructions",
        "tx",
        "payer",
        "mangoClient",
        "tx",
        "latestBlockhash",
        "resp",
        "error",
        "error",
        "setInterval",
        "quote",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "spotMarket",
        "owner",
        "limit",
        "owner",
        "mangoGroup",
        "spotMarket",
        "mangoGroup",
        "marketIndex",
        "mangoGroup",
        "QUOTE_INDEX",
        "baseRootBank",
        "quoteRootBank",
        "baseRootBank",
        "mangoClient",
        "quoteRootBank",
        "mangoClient",
        "mangoGroup",
        "spotMarket",
        "PublicKey",
        "spotMarket",
        "spotMarket",
        "Buffer",
        "spotMarket",
        "makeCancelAllSpotOrdersInstruction",
        "mangoClient",
        "mangoGroup",
        "mangoGroup",
        "mangoAccount",
        "owner",
        "baseRootBank",
        "baseNodeBanks",
        "baseNodeBanks",
        "quoteRootBank",
        "quoteNodeBanks",
        "quoteNodeBanks",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "mangoAccount",
        "spotMarketIndex",
        "mangoGroup",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "dexSigner",
        "mangoGroup",
        "BN",
        "limit",
        "instruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "spotMarket",
        "owner",
        "side",
        "price",
        "size",
        "orderType",
        "clientOrderId",
        "useMsrmVault",
        "owner",
        "spotMarket",
        "price",
        "spotMarket",
        "size",
        "getFeeTier",
        "nativeToUi",
        "getFeeRates",
        "feeTier",
        "BN",
        "spotMarket",
        "rates",
        "spotMarket",
        "size",
        "spotMarket",
        "price",
        "maxBaseQuantity",
        "ZERO_BN",
        "limitPrice",
        "ZERO_BN",
        "mangoGroup",
        "spotMarket",
        "mangoGroup",
        "a",
        "a",
        "mangoGroup",
        "mangoClient",
        "useMsrmVault",
        "feeVault",
        "mangoGroup",
        "useMsrmVault",
        "feeVault",
        "mangoGroup",
        "mangoClient",
        "mangoGroup",
        "feeVault",
        "totalMsrm",
        "totalMsrm",
        "mangoGroup",
        "mangoGroup",
        "mangoGroup",
        "spotMarketIndex",
        "baseRootBank",
        "mangoGroup",
        "QUOTE_INDEX",
        "quoteRootBank",
        "baseRootBank",
        "baseNodeBank",
        "quoteRootBank",
        "quoteNodeBank",
        "mangoAccount",
        "mangoAccount",
        "mangoAccount",
        "index",
        "index",
        "spotMarketIndex",
        "openOrdersAccount",
        "index",
        "spotMarketIndex",
        "PublicKey",
        "spotMarket",
        "spotMarket",
        "Buffer",
        "spotMarket",
        "makePlaceSpotOrder2Instruction",
        "mangoClient",
        "mangoGroup",
        "mangoAccount",
        "owner",
        "mangoGroup",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "spotMarket",
        "baseRootBank",
        "baseNodeBank",
        "baseNodeBank",
        "quoteRootBank",
        "quoteNodeBank",
        "quoteNodeBank",
        "mangoGroup",
        "dexSigner",
        "feeVault",
        "openOrdersKeys",
        "side",
        "limitPrice",
        "maxBaseQuantity",
        "maxQuoteQuantity",
        "selfTradeBehavior",
        "orderType",
        "clientOrderId",
        "BN",
        "placeOrderInstruction",
        "main"
    ],
    "literals": [
        "\"../client\"",
        "\"@solana/web3.js\"",
        "\"../config\"",
        "\"fs\"",
        "\"os\"",
        "\"@project-serum/serum\"",
        "\"../instruction\"",
        "\"bn.js\"",
        "'lodash'",
        "\"../MangoGroup\"",
        "\"../MangoAccount\"",
        "\"../utils/types\"",
        "\"../utils/utils\"",
        "\"../layout\"",
        "'devnet.2'",
        "Couldn't find group by name ${MANGO_GROUP}",
        "'processed'",
        "'/.config/solana/id.json'",
        "'utf-8'",
        "'Open orders account not found, creating one...'",
        "'le'",
        "'OpenOrders'",
        "'utf-8'",
        "'finalized'",
        "'create_open_orders_account::response'",
        "'create_open_orders_account::error'",
        "'Created open orders account!'",
        "'finalized'",
        "'buy'",
        "'limit'",
        "'sell'",
        "'limit'",
        "'quote::response'",
        "'quote::error'",
        "\"A root bank is null\"",
        "'_decoded'",
        "'le'",
        "'_decoded'",
        "'_decoded'",
        "'_decoded'",
        "'buy'",
        "'sell'",
        "'limit'",
        "'ioc'",
        "'postOnly'",
        "'_decoded'",
        "'size too small'",
        "'invalid price'",
        "'decrementTake'",
        "'Invalid or missing banks'",
        "'_decoded'",
        "'le'",
        "'_decoded'",
        "'_decoded'",
        "'_decoded'",
        "'_decoded'",
        "'_decoded'",
        "'_decoded'"
    ],
    "variables": [
        "main",
        "config",
        "mangoGroupConfig",
        "connection",
        "mangoClient",
        "mangoGroup",
        "mangoCache",
        "rootBanks",
        "payer",
        "mangoAccount",
        "spotMarketConfig",
        "token",
        "tokenPrice",
        "spotMarket",
        "spotMarketIndex",
        "spotMarketIndexBN",
        "openOrdersPk",
        "createSpotOpenOrdersInstruction",
        "latestBlockhash",
        "tx",
        "response",
        "quote",
        "latestBlockhash",
        "tx",
        "spread",
        "bidPrice",
        "askPrice",
        "instructions",
        "resp",
        "marketIndex",
        "baseRootBank",
        "quoteRootBank",
        "baseNodeBanks",
        "quoteNodeBanks",
        "spotMarketIndex",
        "dexSigner",
        "instruction",
        "limitPrice",
        "maxBaseQuantity",
        "feeTier",
        "rates",
        "maxQuoteQuantity",
        "selfTradeBehavior",
        "spotMarketIndex",
        "feeVault",
        "totalMsrm",
        "baseRootBank",
        "baseNodeBank",
        "quoteRootBank",
        "quoteNodeBank",
        "openOrdersKeys",
        "openOrdersAccount",
        "index",
        "openOrdersAccount",
        "index",
        "dexSigner",
        "placeOrderInstruction"
    ],
    "comments": [
        "Example command:\nKEYPAIR_PATH=~/.config/solana/id.json MANGO_GROUP=devnet.2 MANGO_ACCOUNT=YOUR_MANGO_ACCOUNT MARKET=MNGO yarn ts-node src/scripts/serumExampleMarketMaker.ts\n\nThis is a simple market maker bot that quotes on Serum markets supported by Mango.\nIt showcases the instructions needed to create limit orders and cancel them, all\nin one transaction.\n\nPrerequisites:\n- A Solana account with some SOL deposited to cover transaction fees\n- A Mango account with some collateral deposited\n- Your wallet keypair saved as a JSON file\n\nIn devnet:\n\nYou'll need to airdrop SOL to your account. First generate a keypair if you haven't already,\nby installing the Solana CLI tools as per https://docs.solana.com/cli/install-solana-cli-tools\nand then generating a keypair using `solana-keygen new`.\n\nAirdrop some SOL to it using `solana airdrop -v --url devnet 1` - deposit some of it as\ncollateral through the UI at https://devnet.mango.markets/\n\nFinally execute the example command. You should see the orders quoted by the bot in the UI's orderbook.\n\nIn mainnet:\n\nIf you've got the prerequisites covered already, run the example command changing MANGO_GROUP\n\n\nMeta learning resources:\n\nA technical introduction to the Serum DEX: https://docs.google.com/document/d/1isGJES4jzQutI0GtQGuqtrBUqeHxl_xJNXdtOv4SdII\nAt the time of writing, all but information regarding the \"Request Queue\" is valid (the Request Queue doesn't exist anymore)\n\nVery simple market making bot for perps, which served as a model for this spot market maker:\nhttps://github.com/blockworks-foundation/mango-client-v3/blob/main/src/scripts/benchmarkOrders.ts",
        "Unlike in perp markets, where orders require only a Mango account, Serum\n        markets supported by Mango require an \"open orders\" account to serve as\n        an intermediary. One open orders account is needed for each spot market.",
        "^ The newly created open orders account isn't immediately visible in",
        "the already fetched Mango account, hence it needs to be reloaded",
        "^ Solana validators use this hash to determine when a transaction",
        "might be considered \"too old\" and should be discarded, which is",
        "why we send the most recent one each time.",
        "It's important to batch instructions in one transaction - this way we get",
        "atomicity (if one instruction fails, the whole transaction is rolled back),",
        "save on SOL costs and speed up quoting, since we don't need to make one",
        "blockchain-client roundtrip per instruction.",
        "@ts-ignore",
        "@ts-ignore",
        "TODO implement srm vault fee discount",
        "const feeTier = getFeeTier(0, nativeToUi(mangoGroup.nativeSrm || 0, SRM_DECIMALS));",
        "Only pass in open orders if in margin basket or current market index, and",
        "the only writable account should be OpenOrders for current market index"
    ],
    "docstrings": [],
    "functions": [
        "cancelAllSpotOrdersInstruction",
        "createSpotOrder2Instruction"
    ],
    "classes": []
}