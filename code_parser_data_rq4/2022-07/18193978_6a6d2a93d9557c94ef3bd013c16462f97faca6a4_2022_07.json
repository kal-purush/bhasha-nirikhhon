{
    "identifiers": [
        "process",
        "EventEmitter",
        "stream",
        "Readable",
        "ReadableStream",
        "test",
        "delay",
        "pEvent",
        "Handler",
        "got",
        "slowDataStream",
        "GlobalClock",
        "ExtendedHttpTestServer",
        "withServer",
        "withServerAndFakeTimers",
        "globalThis",
        "prepareServer",
        "server",
        "clock",
        "EventEmitter",
        "resolve",
        "reject",
        "server",
        "request",
        "response",
        "emitter",
        "request",
        "resolve",
        "response",
        "reject",
        "pEvent",
        "request",
        "response",
        "server",
        "_request",
        "response",
        "response",
        "server",
        "response",
        "emitter",
        "clock",
        "resolve",
        "downloadHandler",
        "clock",
        "_request",
        "response",
        "response",
        "response",
        "stream",
        "slowDataStream",
        "clock",
        "response",
        "response",
        "test",
        "withServerAndFakeTimers",
        "t",
        "server",
        "got",
        "clock",
        "prepareServer",
        "server",
        "clock",
        "AbortController",
        "got",
        "controller",
        "t",
        "emitter",
        "controller",
        "t",
        "gotPromise",
        "t",
        "promise",
        "test",
        "withServer",
        "t",
        "server",
        "got",
        "server",
        "AbortController",
        "got",
        "controller",
        "process",
        "controller",
        "computedValue",
        "t",
        "gotPromise",
        "delay",
        "test",
        "withServerAndFakeTimers",
        "t",
        "server",
        "got",
        "clock",
        "prepareServer",
        "server",
        "clock",
        "AbortController",
        "ReadableStream",
        "body",
        "got",
        "controller",
        "emitter",
        "controller",
        "body",
        "t",
        "gotPromise",
        "t",
        "promise",
        "test",
        "withServerAndFakeTimers",
        "t",
        "server",
        "got",
        "clock",
        "prepareServer",
        "server",
        "clock",
        "AbortController",
        "ReadableStream",
        "body",
        "got",
        "controller",
        "emitter",
        "controller",
        "body",
        "t",
        "gotPromise",
        "t",
        "promise",
        "test",
        "withServerAndFakeTimers",
        "t",
        "server",
        "got",
        "clock",
        "AbortController",
        "resolve",
        "reject",
        "server",
        "_request",
        "response",
        "response",
        "reject",
        "response",
        "clock",
        "resolve",
        "got",
        "controller",
        "controller",
        "t",
        "gotPromise",
        "t",
        "promise",
        "test",
        "t",
        "AbortController",
        "got",
        "controller",
        "p",
        "error",
        "controller",
        "error",
        "controller",
        "t",
        "recover",
        "test",
        "t",
        "AbortController",
        "got",
        "controller",
        "p",
        "error",
        "error",
        "error",
        "controller",
        "t",
        "recover",
        "test",
        "withServer",
        "t",
        "server",
        "got",
        "server",
        "downloadHandler",
        "AbortController",
        "got",
        "controller",
        "setTimeout",
        "controller",
        "t",
        "promise",
        "test",
        "withServer",
        "t",
        "server",
        "got",
        "server",
        "_request",
        "response",
        "response",
        "response",
        "got",
        "AbortController",
        "got",
        "controller",
        "controller",
        "t",
        "promise"
    ],
    "literals": [
        "'process'",
        "'events'",
        "'stream'",
        "'ava'",
        "'delay'",
        "'p-event'",
        "'express'",
        "'../source/index.js'",
        "'./helpers/slow-data-stream.js'",
        "'./helpers/types.js'",
        "'./helpers/create-http-test-server.js'",
        "'./helpers/with-server.js'",
        "'/abort'",
        "'connection'",
        "'aborted'",
        "'finish'",
        "'Request finished instead of aborting.'",
        "'end'",
        "'/redirect'",
        "${server.url}/abort",
        "'sentRedirect'",
        "'transfer-encoding'",
        "'chunked'",
        "'does not retry after abort'",
        "'redirect'",
        "'Makes a new try after abort'",
        "'sentRedirect'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'Request finished instead of aborting.'",
        "'abort request timeouts'",
        "'/'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'aborts in-progress request'",
        "'1'",
        "'abort'",
        "'connection'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'Request finished instead of aborting.'",
        "'aborts in-progress request with timeout'",
        "'1'",
        "'abort'",
        "'connection'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'Request finished instead of aborting.'",
        "'abort immediately'",
        "'/abort'",
        "'finish'",
        "'Request finished instead of aborting.'",
        "'abort'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'Request finished instead of aborting.'",
        "'recover from abort using abortable promise attribute'",
        "'http://example.com'",
        "'recover from abort using error instance'",
        "'http://example.com'",
        "'This operation was aborted.'",
        "'throws on incomplete (aborted) response'",
        "'/'",
        "''",
        "'ERR_ABORTED'",
        "'This operation was aborted.'",
        "'throws when aborting cached request'",
        "'/'",
        "'Cache-Control'",
        "'public, max-age=60'",
        "'ERR_ABORTED'",
        "'This operation was aborted.'"
    ],
    "variables": [
        "prepareServer",
        "emitter",
        "promise",
        "downloadHandler",
        "controller",
        "gotPromise",
        "controller",
        "gotPromise",
        "controller",
        "body",
        "gotPromise",
        "controller",
        "body",
        "gotPromise",
        "controller",
        "promise",
        "gotPromise",
        "controller",
        "p",
        "recover",
        "controller",
        "p",
        "recover",
        "controller",
        "promise",
        "cache",
        "controller",
        "promise"
    ],
    "comments": [
        "Node.js 15.0.0 throws AND emits `aborted`",
        "Wait for unhandled errors",
        "Wait for the connection to be established before canceling",
        "Wait for the connection to be established before canceling",
        "We won't get an abort or even a connection",
        "We assume no request within 1000ms equals a (client side) aborted request",
        "Abort before connection started",
        "TODO: Use `fakeTimers` here"
    ],
    "docstrings": [],
    "functions": [
        "calculateDelay",
        "calculateDelay",
        "read",
        "read"
    ],
    "classes": []
}