{
    "identifiers": [
        "sqlite3",
        "csv",
        "re",
        "sys",
        "getopt",
        "os",
        "path",
        "exists",
        "pandas",
        "pd",
        "json",
        "argparse",
        "qwikidata",
        "linked_data_interface",
        "get_entity_dict_from_api",
        "filename",
        "exists",
        "filename",
        "open",
        "filename",
        "newline",
        "f",
        "csv",
        "reader",
        "f",
        "reader",
        "d",
        "input",
        "data",
        "i",
        "entry",
        "input",
        "entry",
        "entry",
        "i",
        "entry",
        "entry",
        "combineStIdx",
        "i",
        "combineStIdx",
        "combineEndIdx",
        "j",
        "combineStIdx",
        "combineEndIdx",
        "combinedStr",
        "input",
        "j",
        "j",
        "combineEndIdx",
        "combinedStr",
        "data",
        "d",
        "combinedStr",
        "data",
        "d",
        "combineStIdx",
        "data",
        "d",
        "combineEndIdx",
        "data",
        "input_entry",
        "cur",
        "cur",
        "execute",
        "table_name",
        "tables",
        "table_name",
        "table_names",
        "append",
        "table_name",
        "len",
        "input_entry",
        "input_entry",
        "table_name",
        "table_names",
        "process_entry",
        "table_name",
        "cur",
        "execute",
        "getColCmd",
        "fetchall",
        "len",
        "columns",
        "len",
        "input_entry",
        "process_entry",
        "col",
        "columns",
        "col",
        "input_entry",
        "i",
        "strip",
        "col",
        "userval",
        "userval",
        "isdigit",
        "table_name",
        "accept_null",
        "keys",
        "col",
        "accept_null",
        "table_name",
        "can_accept_null",
        "userval",
        "col",
        "find",
        "col",
        "find",
        "col",
        "find",
        "start",
        "col",
        "start",
        "end",
        "len",
        "userval",
        "text_len_limit",
        "process_entry",
        "table_name",
        "value_constraints",
        "keys",
        "col",
        "value_constraints",
        "table_name",
        "keys",
        "userval",
        "value_constraints",
        "table_name",
        "col",
        "userColVals",
        "append",
        "userval",
        "i",
        "table_name",
        "userColVals",
        "process_entry",
        "cur",
        "cur",
        "execute",
        "table_name",
        "tables",
        "table_name",
        "table_names",
        "append",
        "table_name",
        "table_names",
        "table_accept",
        "input",
        "table_name",
        "table_names",
        "table_name",
        "cur",
        "execute",
        "getColCmd",
        "fetchall",
        "col",
        "columns",
        "col",
        "userval_accept",
        "col",
        "col",
        "table_name",
        "value_constraints",
        "keys",
        "col",
        "value_constraints",
        "table_name",
        "keys",
        "value_constraints",
        "table_name",
        "col",
        "entry",
        "valConstrSet",
        "valConstr",
        "entry",
        "valConstr",
        "table_name",
        "default_value",
        "keys",
        "col",
        "default_value",
        "table_name",
        "keys",
        "default_value",
        "table_name",
        "col",
        "table_name",
        "accept_null",
        "keys",
        "col",
        "accept_null",
        "table_name",
        "collValCmd",
        "valConstr",
        "defaultConstr",
        "nullConstr",
        "input",
        "collValCmd",
        "col",
        "userval",
        "isdigit",
        "can_accept_null",
        "userval",
        "col",
        "find",
        "col",
        "find",
        "col",
        "find",
        "start",
        "col",
        "start",
        "end",
        "len",
        "userval",
        "text_len_limit",
        "userval_accept",
        "len",
        "valConstrSet",
        "userval",
        "valConstrSet",
        "userval_accept",
        "userColVals",
        "append",
        "userval",
        "table_name",
        "userColVals",
        "cur",
        "table_name",
        "column_name",
        "value",
        "column_name",
        "table_name",
        "column_name",
        "value",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "table_name",
        "userColVals",
        "cur",
        "table_name",
        "cur",
        "execute",
        "getColCmd",
        "fetchall",
        "table_name",
        "table_name",
        "len",
        "check_for_entry_in_table",
        "cur",
        "table_name",
        "columns",
        "userColVals",
        "table_name",
        "len",
        "check_for_entry_in_table",
        "cur",
        "userColVals",
        "table_name",
        "table_name",
        "table_name",
        "cur",
        "execute",
        "getIdQuery",
        "answer",
        "fetchall",
        "table_name",
        "table_name",
        "userColVals",
        "maxEntityTypeId",
        "userColVals",
        "userColVals",
        "maxEntityTypeId",
        "userColVals",
        "userColVals",
        "maxEntityTypeId",
        "userColVals",
        "add_to_table",
        "table_name",
        "userColVals",
        "table_name",
        "userColVals",
        "lower",
        "table_name",
        "userColVals",
        "cur",
        "len",
        "userColVals",
        "table_name",
        "cur",
        "execute",
        "getIdQuery",
        "answer",
        "fetchall",
        "table_name",
        "myId",
        "colVal",
        "userColVals",
        "colVal",
        "isdigit",
        "colVal",
        "sqlquery",
        "colVal",
        "sqlquery",
        "colVal",
        "count",
        "list_len",
        "sqlquery",
        "count",
        "sqlquery",
        "sqlquery",
        "cur",
        "execute",
        "sqlquery",
        "cur",
        "my_entity_name",
        "my_entity_name",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "replace",
        "json",
        "loads",
        "result",
        "result_dict",
        "keys",
        "result_dict",
        "get_entity_dict_from_api",
        "my_qid",
        "java_dict",
        "keys",
        "java_dict",
        "keys",
        "x",
        "java_dict",
        "x",
        "keys",
        "gen_mentions",
        "append",
        "x",
        "json",
        "decoder",
        "JSONDecodeError",
        "gen_mentions",
        "cur",
        "gen_mentions",
        "entity_id",
        "entity_type_id",
        "val",
        "gen_mentions",
        "val",
        "entity_type_id",
        "entity_id",
        "val",
        "check_if_duplicate",
        "userColVals",
        "cur",
        "add_to_table",
        "insert_into_table",
        "userColVals",
        "cur",
        "val",
        "mode",
        "batch_filename",
        "cur",
        "testExec",
        "mode",
        "mode",
        "mode",
        "get_input_batch",
        "batch_filename",
        "len",
        "batch_data",
        "num_entries",
        "testExec",
        "returnString",
        "i",
        "num_entries",
        "mode",
        "get_input_cmdline",
        "cur",
        "check_input_batch",
        "batch_data",
        "i",
        "cur",
        "process_entry",
        "alter_case_format",
        "table_name",
        "userColVals",
        "check_if_duplicate",
        "table_name",
        "userColVals",
        "cur",
        "add_to_table",
        "testExec",
        "returnString",
        "i",
        "insert_into_table",
        "table_name",
        "userColVals",
        "cur",
        "i",
        "table_name",
        "userColVals",
        "generate_mentions_wiki",
        "cur",
        "my_entity_name",
        "len",
        "gen_mentions",
        "gen_mentions",
        "append",
        "my_entity_name",
        "upper",
        "len",
        "gen_mentions",
        "my_entity_name",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "result",
        "enter_mentions_to_table",
        "cur",
        "gen_mentions",
        "entity_id",
        "entity_type_id",
        "testExec",
        "returnString",
        "i",
        "i",
        "testExec",
        "returnString",
        "i",
        "i",
        "returnString",
        "table_name",
        "cur",
        "entities_to_remove",
        "d",
        "entities_to_remove",
        "keys",
        "entities_to_remove",
        "d",
        "table_name",
        "d",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "d",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "external_link_ref",
        "split",
        "entities_to_remove",
        "d",
        "table_name",
        "d",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "external_link",
        "split",
        "d",
        "entity_type_id",
        "entity_type_id_ref",
        "COTS",
        "COTS_ref",
        "Legacy",
        "Legacy_ref",
        "ContainerImage",
        "ContainerImage_ref",
        "OpenSource",
        "OpenSource_ref",
        "d",
        "entities_to_remove",
        "d",
        "link",
        "el_items",
        "link",
        "elr_items",
        "matching_external_links",
        "len",
        "external_link",
        "len",
        "external_link_ref",
        "table_name",
        "external_link",
        "entities_to_remove",
        "d",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "d",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "entities_to_remove",
        "table_name",
        "cur",
        "execute",
        "sqlquery",
        "x",
        "x",
        "answer",
        "fetchall",
        "os",
        "entities_to_remove",
        "keys",
        "os",
        "all_os",
        "entities_to_remove",
        "os",
        "table_name",
        "os",
        "table_name",
        "entities_to_remove",
        "os",
        "os",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "entities_to_remove",
        "cur",
        "execute",
        "table_name",
        "x",
        "x",
        "cols",
        "c",
        "columns",
        "c",
        "avoid_columns",
        "en",
        "entities_to_remove",
        "keys",
        "entities_to_remove",
        "en",
        "table_name",
        "c",
        "c",
        "en",
        "table_name",
        "c",
        "entities_to_remove",
        "en",
        "c",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "entities_to_remove",
        "entity_types",
        "en",
        "entities_to_remove",
        "keys",
        "entities_to_remove",
        "en",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "entities_to_remove",
        "en",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "en",
        "entity_type_id",
        "entity_type_id_ref",
        "en",
        "entities_to_remove",
        "en",
        "table_name",
        "entity_type_id_ref",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "entities_to_remove",
        "entity_types",
        "en",
        "entities_to_remove",
        "keys",
        "entities_to_remove",
        "en",
        "table_name",
        "en",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "entities_to_remove",
        "en",
        "table_name",
        "entities_to_remove",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "entities_to_remove",
        "en",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "en",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "result",
        "en",
        "entity_parent_type_id",
        "entity_parent_type_id_ref",
        "en",
        "entities_to_remove",
        "en",
        "table_name",
        "entity_parent_type_id_ref",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "entity_child_type_id",
        "entity_child_type_id_ref",
        "en",
        "entities_to_remove",
        "en",
        "table_name",
        "entity_child_type_id_ref",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "cur",
        "entities_to_remove",
        "en",
        "entities_to_remove",
        "keys",
        "entities_to_remove",
        "en",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "answer",
        "fetchall",
        "table_name",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "table_name",
        "entities_to_remove",
        "en",
        "en",
        "cur",
        "execute",
        "sqlquery",
        "data",
        "cur",
        "cur",
        "execute",
        "sqlquery",
        "x",
        "answer",
        "fetchall",
        "entity_names",
        "append",
        "x",
        "entity_ids",
        "append",
        "x",
        "d",
        "data",
        "len",
        "d",
        "d",
        "entity_names",
        "entity_names",
        "index",
        "d",
        "entity_ids",
        "ind",
        "d",
        "isnumeric",
        "d",
        "entity_ids",
        "d",
        "d",
        "d",
        "entity_names",
        "d",
        "entity_names",
        "entity_names",
        "index",
        "d",
        "entity_names",
        "index",
        "d",
        "entity_ids",
        "ind0",
        "entity_ids",
        "ind1",
        "d",
        "isnumeric",
        "d",
        "entity_ids",
        "d",
        "isnumeric",
        "d",
        "entity_ids",
        "d",
        "d",
        "d",
        "d",
        "entities_to_remove",
        "cur",
        "cur",
        "execute",
        "sqlquery",
        "x",
        "answer",
        "fetchall",
        "x",
        "x",
        "entity_types",
        "del_file",
        "cur",
        "table_names",
        "open",
        "del_file",
        "newline",
        "f",
        "csv",
        "reader",
        "f",
        "reader",
        "t",
        "table_names",
        "d",
        "data",
        "d",
        "data_tables",
        "d",
        "d",
        "data_tables",
        "d",
        "append",
        "d",
        "len",
        "data_tables",
        "remove_lines_from_entity_mentions",
        "cur",
        "data_tables",
        "len",
        "data_tables",
        "fetch_ids",
        "data_tables",
        "cur",
        "table_name",
        "table_names",
        "table_name",
        "remove_from_entities",
        "cur",
        "entities_to_remove",
        "table_name",
        "table_name",
        "remove_from_baseos_images",
        "table_name",
        "cur",
        "entities_to_remove",
        "table_name",
        "table_name",
        "table_name",
        "remove_from_images",
        "table_name",
        "cur",
        "entities_to_remove",
        "get_entity_types",
        "cur",
        "table_name",
        "remove_from_entity_mentions",
        "table_name",
        "cur",
        "entities_to_remove",
        "entity_types",
        "table_name",
        "remove_from_entity_relations",
        "table_name",
        "cur",
        "entities_to_remove",
        "entity_types",
        "table_name",
        "remove_from_entity_versions",
        "table_name",
        "cur",
        "entities_to_remove",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "dest",
        "help",
        "required",
        "parser",
        "add_argument",
        "dest",
        "help",
        "required",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "parse_args",
        "parser",
        "args",
        "mode",
        "args",
        "batch_file",
        "args",
        "db_file",
        "args",
        "del_file",
        "mode",
        "mode",
        "sys",
        "exit",
        "mode",
        "exists",
        "batch_filename",
        "batch_filename",
        "sys",
        "exit",
        "exists",
        "db_file",
        "db_file",
        "sys",
        "exit",
        "del_file",
        "exists",
        "del_file",
        "db_file",
        "sys",
        "exit",
        "sqlite3",
        "connect",
        "db_file",
        "conn",
        "cursor",
        "cur",
        "execute",
        "table_name",
        "tables",
        "table_name",
        "table_names",
        "append",
        "table_name",
        "del_file",
        "delete_from_kg",
        "del_file",
        "cur",
        "table_names",
        "insert_to_kg",
        "mode",
        "batch_filename",
        "cur",
        "conn",
        "commit",
        "conn",
        "close",
        "main"
    ],
    "literals": [
        "\"entities\"",
        "\"COTS\"",
        "\"Y\"",
        "\"N\"",
        "\"Legacy\"",
        "\"Y\"",
        "\"N\"",
        "\"ContainerImage\"",
        "\"Y\"",
        "\"N\"",
        "\"OpenSource\"",
        "\"Y\"",
        "\"N\"",
        "\"entity_mentions\"",
        "\"source\"",
        "\"others\"",
        "\"also_known_as\"",
        "\"rediects_transclusions\"",
        "\"entity_versions\"",
        "\"opensource\"",
        "\"True\"",
        "\"False\"",
        "\"entities\"",
        "\"COTS\"",
        "\"N\"",
        "\"Legacy\"",
        "\"N\"",
        "\"ContainerImage\"",
        "\"N\"",
        "\"OpenSource\"",
        "\"N\"",
        "\"external_link\"",
        "\"{}\"",
        "\"operator_images\"",
        "\"OS\"",
        "\"lang\"",
        "\"lib\"",
        "\"app\"",
        "\"app_server\"",
        "\"plugin\"",
        "\"runlib\"",
        "\"runtime\"",
        "\"openshift_images\"",
        "\"OS\"",
        "\"lang\"",
        "\"lib\"",
        "\"app\"",
        "\"app_server\"",
        "\"plugin\"",
        "\"runlib\"",
        "\"runtime\"",
        "\"docker_images\"",
        "\"OS\"",
        "\"lang\"",
        "\"lib\"",
        "\"app\"",
        "\"app_server\"",
        "\"plugin\"",
        "\"runlib\"",
        "\"runtime\"",
        "\"docker_environment_variables\"",
        "\"Required\"",
        "\"Default_Values\"",
        "\"docker_baseos_images\"",
        "\"OpenShift_Correspondent_Image_URL\"",
        "\"OpenShiftStatus\"",
        "\"Notes\"",
        "\"openshift_baseos_images\"",
        "\"Notes\"",
        "\"OpenShiftStatus\"",
        "\"DockerImageType\"",
        "\"entity_versions\"",
        "\"release_date\"",
        "\"end_date\"",
        "''",
        "\"{\"",
        "\"}\"",
        "\"}\"",
        "\"{\"",
        "\"\"",
        "\",\"",
        "\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "\"sqlite_sequence\"",
        "\"\"",
        "\"PRAGMA table_info('\"",
        "\"') \"",
        "\"id\"",
        "\"integer\"",
        "\"\"",
        "\"NULL\"",
        "\"NULL\"",
        "'TEXT('",
        "'TEXT('",
        "')'",
        "\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "\"sqlite_sequence\"",
        "\"Tables in the database:\"",
        "\"\"",
        "\"Enter the table name of your choice:\"",
        "\"Unknown table -- please re-enter\"",
        "\"PRAGMA table_info('\"",
        "\"') \"",
        "\"id\"",
        "\"Enter the value for column: \"",
        "\" (type: \"",
        "\"\"",
        "\" accepted values: [ \"",
        "\" \"",
        "\"]\"",
        "\"\"",
        "\" to skip enter \"",
        "\"\"",
        "\" to skip enter NULL\"",
        "\")\"",
        "\"integer\"",
        "\"NULL\"",
        "\"Type not integer/NULL -- please re-enter\"",
        "\"Type not integer -- please re-enter\"",
        "'TEXT('",
        "'TEXT('",
        "')'",
        "\"Text exceeds length -- please re-enter\"",
        "\"Not a valid entry for column -- please re-enter\"",
        "\"SELECT \"",
        "\" FROM \"",
        "\" WHERE \"",
        "\" = \\\"\"",
        "\"\\\"\"",
        "\"PRAGMA table_info('\"",
        "\"') \"",
        "\"entity_relations\"",
        "\"entity_versions\"",
        "\"entities\"",
        "\"entity_mentions\"",
        "\"entity_mention_name\"",
        "\"entities\"",
        "\"entity_mentions\"",
        "\"entity_relations\"",
        "\"SELECT max(id) FROM entity_types\"",
        "\"entities\"",
        "\"entity_mentions\"",
        "\"entities\"",
        "\"SELECT max(id) FROM \"",
        "\"INSERT INTO \"",
        "\" values (\"",
        "\",\"",
        "\"NULL\"",
        "\"'\"",
        "\"'\"",
        "\",\"",
        "\")\"",
        "\"\"",
        "\"SELECT external_link FROM entities WHERE entity_name\"",
        "\" = \\\"\"",
        "\"\\\"\"",
        "\"'\"",
        "'\"'",
        "\"qid\"",
        "\"qid\"",
        "\"aliases\"",
        "\"en\"",
        "\"aliases\"",
        "\"aliases\"",
        "\"en\"",
        "\"value\"",
        "\"value\"",
        "\"also_known_as\"",
        "\"entity_mentions\"",
        "\"entity_mentions\"",
        "\"Mention \"",
        "\" inserted to table..\"",
        "\"batch\"",
        "\"interactive\"",
        "'Mode is either batch or interactive'",
        "\"\"",
        "\"batch\"",
        "\"No entries to process\"",
        "\"No entries to process\"",
        "\"\"",
        "\"interactive\"",
        "\"Entry \"",
        "\" inserted to table..\"",
        "\"Entry \"",
        "\" inserted to table..\"",
        "\"entities\"",
        "\"others\"",
        "\"SELECT id,entity_type_id FROM entities WHERE entity_name\"",
        "\" = \\\"\"",
        "\"\\\"\"",
        "\"Entry \"",
        "\" is a duplicate and skipped..\"",
        "\"Entry \"",
        "\" is a duplicate and skipped..\"",
        "\"Entry \"",
        "\" cannot be processed..\"",
        "\"Entry \"",
        "\" cannot be processed..\"",
        "'NA'",
        "f\"DELETE FROM {table_name} WHERE Id='{d}'\"",
        "f\"SELECT entity_type_id,external_link,COTS,Legacy,ContainerImage,OpenSource FROM {table_name} WHERE Id='{entities_to_remove[d]}'\"",
        "' '",
        "f'Invalid Id {entities_to_remove[d]}'",
        "f\"SELECT entity_type_id,external_link,COTS,Legacy,ContainerImage,OpenSource FROM {table_name} WHERE Id='{d}'\"",
        "' '",
        "f'Invalid Id {d}'",
        "f'Values for {d} and {entities_to_remove[d]} in ENTITIES table are different'",
        "f''' UPDATE {table_name}\n                                             SET external_link=\"{external_link}\"\n                                             WHERE Id=\"{entities_to_remove[d]}\"'''",
        "f\"DELETE FROM {table_name} WHERE Id='{d}'\"",
        "f\"SELECT OS FROM '{table_name}'\"",
        "'NA'",
        "f\"DELETE FROM {table_name} WHERE OS='{os}'\"",
        "f''' UPDATE {table_name}\n                                SET OS=\"{entities_to_remove[os]}\"\n                                WHERE OS=\"{os}\"'''",
        "f\"SELECT name FROM PRAGMA_TABLE_INFO('{table_name}');\"",
        "'id'",
        "'container_name'",
        "'Docker_URL'",
        "'Notes'",
        "'CertOfImageAndPublisher'",
        "'OpenShift_Correspondent_Image_URL'",
        "'DockerImageType'",
        "'Operator_Correspondent_Image_URL'",
        "'NA'",
        "f''' UPDATE {table_name}\n                                    SET {c}=NULL\n                                    WHERE {c}=\"{en}\"'''",
        "f''' UPDATE {table_name}\n                                       SET {c}=\"{entities_to_remove[en]}\"\n                                       WHERE {c}=\"{en}\"'''",
        "'NA'",
        "f\"DELETE FROM {table_name} WHERE entity_id='{en}'\"",
        "f\"SELECT entity_type_id FROM {table_name} WHERE entity_id='{entities_to_remove[en]}'\"",
        "f'Invalid Id {entities_to_remove[en]}'",
        "f\"SELECT entity_type_id FROM {table_name} WHERE entity_id='{en}'\"",
        "f'Invalid Id {en}'",
        "f'entity_type_id for {en} and {entities_to_remove[en]} in entity_mentions table are different'",
        "f''' UPDATE {table_name}\n                                   SET entity_type_id=\"{entity_type_id_ref}\"\n                                   WHERE entity_id=\"{en}\"'''",
        "f''' UPDATE {table_name}\n                                SET entity_id=\"{entities_to_remove[en]}\"\n                                WHERE entity_id=\"{en}\"'''",
        "'NA'",
        "f\"DELETE FROM {table_name} WHERE entity_parent_id='{en}' OR entity_child_id='{en}'\"",
        "f\"SELECT entity_parent_type_id FROM {table_name} WHERE entity_parent_id='{entities_to_remove[en]}'\"",
        "f'Invalid parent Id {entities_to_remove[en]}'",
        "f\"SELECT entity_child_type_id FROM {table_name} WHERE entity_child_id='{entities_to_remove[en]}'\"",
        "f'Invalid child Id {entities_to_remove[en]}'",
        "f\"SELECT entity_parent_type_id FROM {table_name} WHERE entity_parent_id='{en}'\"",
        "f'Invalid parent Id {en}'",
        "f\"SELECT entity_child_type_id FROM {table_name} WHERE entity_child_id='{en}'\"",
        "f'Invalid child Id {en}'",
        "f'entity_parent_type_id for {en} and {entities_to_remove[en]} in entity_relations table are different'",
        "f''' UPDATE {table_name}\n                                   SET entity_parent_type_id=\"{entity_parent_type_id_ref}\"\n                                   WHERE entity_parent_id=\"{en}\"'''",
        "f'entity_child_type_id for {en} and {entities_to_remove[en]} in entity_relations table are different'",
        "f''' UPDATE {table_name}\n                                   SET entity_child_type_id=\"{entity_child_type_id_ref}\"\n                                   WHERE entity_child_id=\"{en}\"'''",
        "f''' UPDATE {table_name}\n                               SET entity_parent_id=\"{entities_to_remove[en]}\"\n                               WHERE entity_parent_id=\"{en}\"'''",
        "f''' UPDATE {table_name}\n                               SET entity_child_id=\"{entities_to_remove[en]}\"\n                               WHERE entity_child_id=\"{en}\"'''",
        "f\"DELETE FROM {table_name} WHERE entity_parent_id==entity_child_id\"",
        "'NA'",
        "f\"DELETE FROM {table_name} WHERE entity_id='{en}'\"",
        "f\"SELECT 1 FROM {table_name} WHERE entity_id='{entities_to_remove[en]}'\"",
        "f\"DELETE FROM {table_name} WHERE entity_id='{en}'\"",
        "f''' UPDATE {table_name}\n                                   SET entity_id=\"{entities_to_remove[en]}\"\n                                   WHERE entity_id=\"{en}\"'''",
        "f\"SELECT id,entity_name FROM 'entities'\"",
        "'NA'",
        "'NA'",
        "f'Entity {d[0]} not found in KB. Will be skipped'",
        "f'Entity {d[0]} or {d[1]} not found in KB. Will be skipped'",
        "f\"SELECT id,entity_type_id FROM 'entities'\"",
        "''",
        "f'Error unrecognized table name: {d[0]}. Entry {d} will be skipped'",
        "'entity_mentions'",
        "'entity_mentions'",
        "'entity_mentions'",
        "'entities'",
        "'entities'",
        "'entities'",
        "'entities'",
        "'docker_baseos_images'",
        "'openshift_baseos_images'",
        "'docker_images'",
        "'openshift_images'",
        "'operator_images'",
        "'entity_mentions'",
        "'entity_relations'",
        "'entity_versions'",
        "\"modify KB by adding or deleting entities\"",
        "\"-m\"",
        "\"mode\"",
        "\"mode: interactive or batch\"",
        "\"-d\"",
        "\"db_file\"",
        "\"database file (.db) path\"",
        "\"-b\"",
        "\"batch_file\"",
        "\"\"",
        "\"batch file (.txt) path\"",
        "\"-r\"",
        "\"del_file\"",
        "\"\"",
        "\"entities to delete/replace list file (.csv) path\"",
        "\"batch\"",
        "\"interactive\"",
        "\"mode -mode should be batch or interactive\"",
        "\"batch\"",
        "\"batch_file -\"",
        "\"- does not exist\"",
        "\"db_file -\"",
        "\"- does not exist\"",
        "\"\"",
        "\"del_file -\"",
        "\"- does not exist\"",
        "\"SELECT name FROM sqlite_master WHERE type='table';\"",
        "\"sqlite_sequence\"",
        "\"\"",
        "\"__main__\""
    ],
    "variables": [
        "value_constraints",
        "default_value",
        "accept_null",
        "data",
        "reader",
        "data",
        "combineStIdx",
        "combineEndIdx",
        "combineStIdx",
        "combineEndIdx",
        "combinedStr",
        "combineStIdx",
        "data",
        "d",
        "tables",
        "table_names",
        "table_name",
        "userColVals",
        "process_entry",
        "process_entry",
        "table_name",
        "process_entry",
        "getColCmd",
        "columns",
        "process_entry",
        "i",
        "userval",
        "userval",
        "can_accept_null",
        "can_accept_null",
        "process_entry",
        "start",
        "end",
        "text_len_limit",
        "process_entry",
        "process_entry",
        "i",
        "tables",
        "table_names",
        "table_accept",
        "table_name",
        "table_name",
        "table_accept",
        "getColCmd",
        "columns",
        "userColVals",
        "userval_accept",
        "collValCmd",
        "valConstrSet",
        "valConstr",
        "valConstrSet",
        "valConstr",
        "valConstr",
        "valConstr",
        "defaultConstr",
        "defaultConstr",
        "nullConstr",
        "can_accept_null",
        "can_accept_null",
        "nullConstr",
        "collValCmd",
        "userval",
        "userval_accept",
        "userval_accept",
        "start",
        "end",
        "text_len_limit",
        "userval_accept",
        "userval_accept",
        "userval_accept",
        "sqlquery",
        "answer",
        "getColCmd",
        "columns",
        "add_to_table",
        "add_to_table",
        "add_to_table",
        "getIdQuery",
        "answer",
        "maxEntityTypeId",
        "add_to_table",
        "add_to_table",
        "userColVals",
        "count",
        "list_len",
        "getIdQuery",
        "answer",
        "myId",
        "sqlquery",
        "gen_mentions",
        "my_qid",
        "sqlquery",
        "answer",
        "result",
        "result",
        "result_dict",
        "my_qid",
        "java_dict",
        "userColVals",
        "add_to_table",
        "num_entries",
        "batch_data",
        "returnString",
        "batch_data",
        "num_entries",
        "table_name",
        "userColVals",
        "process_entry",
        "table_name",
        "userColVals",
        "table_name",
        "userColVals",
        "process_entry",
        "add_to_table",
        "my_entity_name",
        "gen_mentions",
        "sqlquery",
        "answer",
        "result",
        "entity_id",
        "entity_type_id",
        "sqlquery",
        "sqlquery",
        "answer",
        "result",
        "entity_type_id_ref",
        "external_link_ref",
        "COTS_ref",
        "Legacy_ref",
        "ContainerImage_ref",
        "OpenSource_ref",
        "elr_items",
        "sqlquery",
        "answer",
        "result",
        "entity_type_id",
        "external_link",
        "COTS",
        "Legacy",
        "ContainerImage",
        "OpenSource",
        "el_items",
        "matching_external_links",
        "matching_external_links",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "answer",
        "all_os",
        "sqlquery",
        "sqlquery",
        "cols",
        "columns",
        "avoid_columns",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "answer",
        "result",
        "entity_type_id_ref",
        "sqlquery",
        "answer",
        "result",
        "entity_type_id",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "answer",
        "result",
        "entity_parent_type_id_ref",
        "sqlquery",
        "answer",
        "result",
        "entity_child_type_id_ref",
        "sqlquery",
        "answer",
        "result",
        "entity_parent_type_id",
        "sqlquery",
        "answer",
        "result",
        "entity_child_type_id",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "sqlquery",
        "answer",
        "result",
        "sqlquery",
        "sqlquery",
        "entities_to_remove",
        "sqlquery",
        "answer",
        "entity_names",
        "entity_ids",
        "ind",
        "entities_to_remove",
        "entities_to_remove",
        "ind0",
        "ind1",
        "entities_to_remove",
        "entities_to_remove",
        "entity_types",
        "sqlquery",
        "answer",
        "entity_types",
        "reader",
        "data",
        "data_tables",
        "data_tables",
        "t",
        "entities_to_remove",
        "entity_types",
        "parser",
        "args",
        "mode",
        "batch_filename",
        "db_file",
        "del_file",
        "conn",
        "cur",
        "tables",
        "table_names"
    ],
    "comments": [
        "print(data)",
        "print(table_names)",
        "print(table_name, len(columns), len(input_entry))",
        "id is not present in input..",
        "print(\"Column name:\",col[1],\"Type:\",col[2])",
        "print(process_entry)",
        "print(\"Column name:\",col[1],\"Type:\",col[2])",
        "print(table_name,column_name)",
        "check for duplicates -- which is table based:",
        "print(sqlquery)",
        "print(result)",
        "print(result_dict)",
        "main function",
        "print(table_name, userColVals)",
        "autogenerate mentions..",
        "generate a entity mention with just upper case if not found in wiki.",
        "print(sqlquery)",
        "print(entity_id,entity_type_id)",
        "edit entities table",
        "loop over entities to remove/replace",
        "only delete",
        "replace as needed",
        "entity to be used as replacement",
        "entity to be replaced",
        "check if the entities pair has the same type_id, COTS, Legacy, ContainerImage and Opensource values",
        "since they are supposed to represent the same entity, they should be consistent",
        "continue",
        "check if the external links correspond. If not, use the longest one (which is supposed to contain more information)",
        "remove row",
        "remove entities from baseos images tables",
        "NOTE: potentially add check for entity type before invoking this function? must be OS",
        "entity to delete, remove row",
        "entity to replace",
        "remove entities from images tables",
        "get table columns names",
        "loop over columns to edit entries",
        "entity to delete, replace with NULL values",
        "entity to replace",
        "remove from entity mentions table",
        "loop over entities to remove/replace",
        "entity to delete, remove row",
        "replace as needed",
        "entity to be used as replacement",
        "entity to replace",
        "check if the entities pair has the same type_id",
        "since they are supposed to represent the same entity, they should be consistent",
        "update row",
        "remove from entity relations table",
        "entity to delete, remove row",
        "replace as needed",
        "entity to be used as replacement",
        "entity to be replaced",
        "check if the entities pair has the same type_id",
        "since they are supposed to represent the same entity, they should be consistent",
        "update row",
        "remove duplicates if they were created as a result of replacement",
        "remove from entity versions table",
        "entity to delete, remove row",
        "entity to replace",
        "convert entity names to entity ids",
        "fetch entity names and IDs from the entities table",
        "loop over list of entities to delete/replace and look for them in the existing entities table",
        "entity to delete",
        "entity to replace",
        "get a dict of enitity_type for each entity",
        "main delete/replace entities function",
        "read entries to delete/replace from the del_file",
        "separate data to remove by table",
        "remove mentions",
        "remove entities",
        "convert entity names to a list of entity ids",
        "loop over tables and remove/replace entities",
        "input argument parser",
        "parse inputs",
        "check inputs",
        "initiate connection to db file",
        "get table names",
        "execute changes to KB",
        "commit changes and close connection"
    ],
    "docstrings": [
        "\"\"\"\n         get the batch input from a csv file\n         args:\n             filename: CSV file with all the input data\n\n         returns: dictionary of the data to be inserted into KB\n    \"\"\"",
        "\"\"\"\n         set of validation checks (format, type, length etc.) before inserting into KB\n         args:\n             input_entry: CSV file with all the input data\n             cur: cursor pointer to the KB database\n         returns: dictionary of the data to be inserted into KB\n    \"\"\"",
        "\"\"\"\n         To receive an input from the command line for interactive mode\n         args:\n             cur: cursor pointer to the KB database\n         returns: the tablename and the list of values for the various fields\n    \"\"\"",
        "\"\"\"\n         Constructs the insert query for adding values into teh database\n         args:\n             table_name: table name\n             userColVals: column values to be inserted\n             cur: cursor pointer to the KB database\n         returns: dictionary of the data to be inserted into KB\n    \"\"\"",
        "\"\"\"\n         generate mentions from wikidata when a new entity is added to the entity table\n         args:\n             cur: cursor pointer to the KB database\n             my_entity_name: new entity thats added to the KB\n\n         returns: newly generated mentions from wikiata\n    \"\"\"",
        "\"\"\"\n         add the newly generated mentions generated from wikidata\n         args:\n             cur: cursor pointer to the KB database\n             my_entity_name: new entity thats added to the KB\n\n         returns: newly generated mentions from wikiata\n    \"\"\"",
        "\"\"\"\n         Main function that gets the mode from the user and processes the inputs based on it\n         args:\n             mode: interactive or batch\n             batch_filename: CSV file for batch processing\n             cur: cursor pointer to the KB database\n         returns: none\n    \"\"\"",
        "\"\"\"\n       remove or replace entities from the entities table\n       args:\n           table_name: str, name of table to edit ('entities')\n           cur: cursor pointer to the KB database\n           entities_to_remove: list of entity IDs to remove/replace\n\n       returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n       remove or replace entities (assuming they are OS) from baseos_images tables (dockerhub, openshift)\n       args:\n           table_name: str, name of table to edit\n           cur: cursor pointer to the KB database\n           entities_to_remove: list of entity IDs to remove/replace\n\n       returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n       remove or replace entities from images tables (dockerhub, openshift, operator)\n       args:\n           table_name: str, name of table to edit\n           cur: cursor pointer to the KB database\n           entities_to_remove: list of entity IDs to remove/replace\n\n       returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n       remove or replace entities from entity_mentions tables\n       args:\n           table_name: str, name of table to edit\n           cur: cursor pointer to the KB database\n           entities_to_remove: list of entity IDs to remove/replace\n\n       returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n         remove or replace entities from entity_relations table\n         args:\n             table_name: str, name of table to edit\n             cur: cursor pointer to the KB database\n             entities_to_remove: list of entity IDs to remove/replace\n\n         returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n        remove or replace entities from entity_versions table\n        args:\n            table_name: str, name of table to edit\n            cur: cursor pointer to the KB database\n            entities_to_remove: list of entity IDs to remove/replace\n\n        returns: nothing, all operations are done on the db connection\n    \"\"\"",
        "\"\"\"\n        Convert entity names to entity IDs\n        args:\n            data: list of entity names (or entity names pairs)\n            cur: cursor pointer to the KB database\n\n        returns: entities_to_remove - dict with entity IDs to remove as keys() and replacement IDs or 'NA' as values()\n    \"\"\"",
        "\"\"\"\n        List entity type for each entity\n        args:\n            cur: cursor pointer to the KB database\n\n        returns: entity_types - dict with entity IDs as keys() and entity types as values()\n    \"\"\"",
        "\"\"\"\n        Remove/Replace entities from the KB\n        args:\n            del_file: string with the path of the file containing the list of entities to delete/replace\n            cur: cursor pointer to the KB database\n            table_names: list of table names in the KB\n\n        returns: nothing, all operations are done on the db connection\n    \"\"\""
    ],
    "functions": [
        "get_input_batch",
        "check_input_batch",
        "get_input_cmdline",
        "check_for_entry_in_table",
        "check_if_duplicate",
        "alter_case_format",
        "insert_into_table",
        "generate_mentions_wiki",
        "enter_mentions_to_table",
        "insert_to_kg",
        "remove_from_entities",
        "remove_from_baseos_images",
        "remove_from_images",
        "remove_from_entity_mentions",
        "remove_from_entity_relations",
        "remove_from_entity_versions",
        "fetch_ids",
        "get_entity_types",
        "delete_from_kg",
        "parser",
        "main"
    ],
    "classes": []
}