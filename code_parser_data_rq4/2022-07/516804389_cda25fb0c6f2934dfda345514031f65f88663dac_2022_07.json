{
    "identifiers": [
        "numpy",
        "np",
        "my_list",
        "my_list",
        "np",
        "array",
        "my_list",
        "arr",
        "arr",
        "np",
        "arange",
        "a",
        "np",
        "arange",
        "a",
        "np",
        "zeros",
        "np",
        "ones",
        "np",
        "random",
        "randint",
        "np",
        "random",
        "randint",
        "np",
        "linspace",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randint",
        "arr",
        "max",
        "arr",
        "min",
        "arr",
        "mean",
        "arr",
        "argmax",
        "arr",
        "argmin",
        "arr",
        "reshape",
        "np",
        "arange",
        "reshape",
        "mat",
        "mat",
        "mat",
        "mat",
        "mat"
    ],
    "literals": [],
    "variables": [
        "my_list",
        "arr",
        "a",
        "a",
        "arr",
        "mat"
    ],
    "comments": [
        "plotly and dash crash course in NumPy",
        "import numpy",
        "convert a list into an array",
        "create a list",
        "use np.array to convert to a NumPy array for plotly and dash",
        "use the arange function for numpy arrays (similar to range() function)",
        "add a step size of 2",
        "create a 5 x 5 array of 0's (floating point)",
        "create a 10 x 10 array of 1's (floating point)",
        "create random numbers",
        "will return a random number between supplied range",
        "create a 5 x 5 array of random numbers",
        "create a linear spaced array",
        "returns 101 spaced numbers between 0 and 10",
        "set seed to the random number generator",
        "investigate values of an array",
        "max value",
        "min value",
        "mean value",
        "index value of the maximum value",
        "index value of the minimum value",
        "reshape an array",
        "indexing [row, column]",
        "to grab 52",
        "to grab column 2",
        "returns a boolean",
        "use this boolean to filter the data"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}