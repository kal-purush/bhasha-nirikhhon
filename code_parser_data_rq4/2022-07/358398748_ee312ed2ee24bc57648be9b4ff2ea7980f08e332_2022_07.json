{
    "identifiers": [
        "logging",
        "saltext",
        "vmware",
        "utils",
        "vmc_constants",
        "saltext",
        "vmware",
        "utils",
        "vmc_request",
        "saltext",
        "vmware",
        "utils",
        "vmc_templates",
        "logging",
        "getLogger",
        "__virtualname__",
        "hostname",
        "refresh_key",
        "org_id",
        "expand_profile",
        "include_group_ids_in_roles",
        "page_limit",
        "page_start",
        "service_definition_id",
        "verify_ssl",
        "cert",
        "log",
        "info",
        "org_id",
        "vmc_request",
        "set_base_url",
        "hostname",
        "format",
        "base_url",
        "api_base_url",
        "org_id",
        "org_id",
        "expand_profile",
        "allowed_kwargs",
        "append",
        "include_group_ids_in_roles",
        "allowed_kwargs",
        "append",
        "vmc_request",
        "_filter_kwargs",
        "allowed_kwargs",
        "allowed_kwargs",
        "expandProfile",
        "expand_profile",
        "includeGroupIdsInRoles",
        "include_group_ids_in_roles",
        "serviceDefinitionId",
        "service_definition_id",
        "pageStart",
        "page_start",
        "pageLimit",
        "page_limit",
        "vmc_request",
        "call_api",
        "method",
        "vmc_constants",
        "GET_REQUEST_METHOD",
        "url",
        "api_url",
        "refresh_key",
        "refresh_key",
        "authorization_host",
        "hostname",
        "description",
        "verify_ssl",
        "verify_ssl",
        "cert",
        "cert",
        "hostname",
        "refresh_key",
        "org_id",
        "user_search_term",
        "expand_profile",
        "include_group_ids_in_roles",
        "verify_ssl",
        "cert",
        "log",
        "info",
        "org_id",
        "vmc_request",
        "set_base_url",
        "hostname",
        "format",
        "base_url",
        "api_base_url",
        "org_id",
        "org_id",
        "expand_profile",
        "allowed_kwargs",
        "append",
        "include_group_ids_in_roles",
        "allowed_kwargs",
        "append",
        "vmc_request",
        "_filter_kwargs",
        "allowed_kwargs",
        "allowed_kwargs",
        "userSearchTerm",
        "user_search_term",
        "expandProfile",
        "expand_profile",
        "includeGroupIdsInRoles",
        "include_group_ids_in_roles",
        "vmc_request",
        "call_api",
        "method",
        "vmc_constants",
        "GET_REQUEST_METHOD",
        "url",
        "api_url",
        "refresh_key",
        "refresh_key",
        "authorization_host",
        "hostname",
        "description",
        "verify_ssl",
        "verify_ssl",
        "cert",
        "cert",
        "hostname",
        "refresh_key",
        "org_id",
        "user_names",
        "organization_roles",
        "skip_notify",
        "custom_roles",
        "service_roles",
        "skip_notify_registration",
        "invited_by",
        "custom_groups_ids",
        "verify_ssl",
        "cert",
        "log",
        "info",
        "org_id",
        "vmc_request",
        "set_base_url",
        "hostname",
        "format",
        "base_url",
        "api_base_url",
        "org_id",
        "org_id",
        "user_names",
        "skip_notify",
        "organization_roles",
        "custom_roles",
        "service_roles",
        "skip_notify_registration",
        "invited_by",
        "custom_groups_ids",
        "vmc_request",
        "_filter_kwargs",
        "allowed_kwargs",
        "allowed_dict",
        "keys",
        "allowed_dict",
        "vmc_request",
        "create_payload_for_request",
        "vmc_templates",
        "add_org_users",
        "req_data",
        "vmc_request",
        "call_api",
        "method",
        "vmc_constants",
        "POST_REQUEST_METHOD",
        "url",
        "api_url",
        "refresh_key",
        "refresh_key",
        "authorization_host",
        "hostname",
        "description",
        "responsebody_applicable",
        "data",
        "request_data",
        "verify_ssl",
        "verify_ssl",
        "cert",
        "cert",
        "hostname",
        "refresh_key",
        "org_id",
        "user_ids",
        "notify_users",
        "verify_ssl",
        "cert",
        "log",
        "info",
        "org_id",
        "vmc_request",
        "set_base_url",
        "hostname",
        "format",
        "base_url",
        "api_base_url",
        "org_id",
        "org_id",
        "user_ids",
        "notify_users",
        "vmc_request",
        "_filter_kwargs",
        "allowed_kwargs",
        "allowed_dict",
        "keys",
        "allowed_dict",
        "vmc_request",
        "create_payload_for_request",
        "vmc_templates",
        "remove_org_users",
        "req_data",
        "vmc_request",
        "call_api",
        "method",
        "vmc_constants",
        "DELETE_REQUEST_METHOD",
        "url",
        "api_url",
        "refresh_key",
        "refresh_key",
        "authorization_host",
        "hostname",
        "description",
        "data",
        "request_data",
        "verify_ssl",
        "verify_ssl",
        "cert",
        "cert"
    ],
    "literals": [
        "\"vmc_org_users\"",
        "\"list_\"",
        "\"list\"",
        "\"Retrieving Org users for the organization %s\"",
        "\"{base_url}csp/gateway/am/api/v2/orgs/{org_id}/users\"",
        "\"serviceDefinitionId\"",
        "\"pageStart\"",
        "\"pageLimit\"",
        "\"expandProfile\"",
        "\"includeGroupIdsInRoles\"",
        "\"vmc_org_users.list\"",
        "\"Searching for Org users in the  org %s\"",
        "\"{base_url}csp/gateway/am/api/orgs/{org_id}/users/search\"",
        "\"userSearchTerm\"",
        "\"expandProfile\"",
        "\"includeGroupIdsInRoles\"",
        "\"vmc_org_users.search\"",
        "\"Adding a user in the org %s\"",
        "\"{base_url}csp/gateway/am/api/orgs/{org_id}/invitations\"",
        "\"usernames\"",
        "\"skipNotify\"",
        "\"organizationRoles\"",
        "\"customRoles\"",
        "\"serviceRolesDtos\"",
        "\"skipNotifyRegistration\"",
        "\"invitedBy\"",
        "\"customGroupsIds\"",
        "\"vmc_org_users.invite\"",
        "\"Removing a user in the org %s\"",
        "\"{base_url}csp/gateway/am/api/v2/orgs/{org_id}/users\"",
        "\"ids\"",
        "\"notifyUsers\"",
        "\"vmc_org_users.remove\""
    ],
    "variables": [
        "log",
        "__virtualname__",
        "__func_alias__",
        "api_base_url",
        "api_url",
        "allowed_kwargs",
        "api_base_url",
        "api_url",
        "allowed_kwargs",
        "api_base_url",
        "api_url",
        "allowed_dict",
        "req_data",
        "request_data",
        "api_base_url",
        "api_url",
        "allowed_dict",
        "req_data",
        "request_data"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nSalt execution module for VMC org users.\nProvides methods to get, add and remove user within a org.\n\"\"\"",
        "\"\"\"\n    Returns list of users for the given organization.\n\n    Please refer the `Get Org Users documentation <https://developer.vmware.com/apis/csp/csp-iam/latest/csp/gateway/am/api/v2/orgs/orgId/users/get/>`_ to get insight of functionality and input parameters\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt <minion id> vmc_org_users.list hostname=console.cloud.vmware.com org_id=org_id  ...\n\n    hostname\n        The host name of CSP.\n\n    refresh_key\n        API Token of the user which is used to get the Access Token required for VMC operations.\n\n    org_id\n        The ID of organization for which user list is retrieved.\n\n    expand_profile\n        (Optional) A boolean value to indicate if the response should be expanded with the user profile.\n\n    include_group_ids_in_roles\n        (Optional) A boolean value to indicate if the inherited roles in the response should indicate group information.\n\n    page_limit: Integer\n        (Optional) Maximum number of users to return in response.\n\n    page_start: Integer\n        (Optional) Specifies the index that the set of results will begin with.\n\n    service_definition_id\n        (Optional) Service definition ID used to filter users having access to the service.\n\n    verify_ssl\n        (Optional) Option to enable/disable SSL verification. Enabled by default.\n        If set to False, the certificate validation is skipped.\n\n    cert\n        (Optional) Path to the SSL client certificate file to connect to VMC Cloud Console.\n        The certificate can be retrieved from browser.\n\n    \"\"\"",
        "\"\"\"\n    Search users in organization having username, firstName, lastName or email which \"contains\" search term.\n    e.g. search for \"test\" will return test@vmware.com if test@vmware.com is part of the organization.\n    Search results limited to first 20 results. Please refine the search term for accurate results.\n    Organization members will receive basic user information.\n    Organization owners and Service Owners (for organizations that have access to the service) will additionally\n    receive role details of the users.\n\n    Please refer the `Search Org Users documentation <https://developer.vmware.com/apis/csp/csp-iam/latest/csp/gateway/am/api/orgs/orgId/users/search/get/>`_ to get insight of functionality and input parameters\n\n    CLI Example:\n\n    .. code-block:: bash\n\n        salt <minion id> vmc_org_users.search hostname=console.cloud.vmware.com org_id=org_id  ...\n\n    hostname\n        The host name of CSP.\n\n    refresh_key\n        API Token of the user which is used to get the Access Token required for VMC operations.\n\n    org_id\n        The ID of organization for which user list is retrieved.\n\n    user_search_term\n        The string to be searched within email or firstName or lastName or username.\n\n    expand_profile\n        (Optional) A boolean value to indicate if the response should be expanded with the user profile.\n\n    include_group_ids_in_roles\n        (Optional) A boolean value to indicate if the inherited roles in the response should indicate group information.\n\n    verify_ssl\n        (Optional) Option to enable/disable SSL verification. Enabled by default.\n        If set to False, the certificate validation is skipped.\n\n    cert\n        (Optional) Path to the SSL client certificate file to connect to VMC Cloud Console.\n        The certificate can be retrieved from browser.\n\n    \"\"\"",
        "\"\"\"\n    Invite users to the given organization.\n\n    Please refer the `Organization User Invitation documentation <https://developer.vmware.com/apis/csp/csp-iam/latest/csp/gateway/am/api/orgs/orgId/invitations/post/>`_ to get insight of functionality and input parameters\n\n    CLI Example:\n\n      .. code-block:: bash\n\n          salt <minion id> vmc_org_users.invite hostname=console.cloud.vmware.com org_id=org_id  ...\n\n    hostname\n          The host name of CSP.\n\n    refresh_key\n          API Token of the user which is used to get the Access Token required for VMC operations.\n\n    org_id\n          The ID of organization to which the user should be invited.\n\n    user_names\n        List of Usernames (e-mails) of users to be invited to the organization.\n\n    organization_roles\n        List of unique organization roles assigned to user.\n        Its mandatory while sending invitation to user.\n\n        BaseRoleBinding defines the base binding properties of the role.\n\n        'name': String\n            The name of the role.\n\n        'createdDate': (String) (Optional)\n            The timestamp the role was created at (measured in number of seconds since 1/1/1970 UTC).\n\n        'expiresAt': (Integer As Int64) (Optional)\n            The timestamp the role expires at (measured in number of seconds since 1/1/1970 UTC). Example:3609941597\n\n        'lastUpdatedBy': (String) (Optional)\n            Last Updated time of the role.\n\n        'lastUpdatedDate': (String) (Optional)\n            The timestamp the role was updated at (measured in number of seconds since 1/1/1970 UTC).\n\n        'membershipType': (String) (Optional)\n            Membership type of the member in the organization.\n            DIRECT: if the member roles were assigned directly.\n            GROUP: if the member roles were assigned through custom or enterprise group.\n            Possible values are: DIRECT , GROUP , NESTED\n\n        'createdBy': (String) (Optional)\n            The Creator of the role.\n\n        'resource': (String) (Optional)\n            The resource in which the role is scoped to. The resource will be embedded in the Access Token\n            \"perms\" claim, as part of the role.\n\n    skip_notify\n        (Optional) Indicates if the notification have to be skipped.\n\n    custom_roles\n        (Optional) List of custom role bindings which defines the binding properties of the custom role.\n        Custom role binding is a json object which can contain the below fields.\n\n        'name': String\n            The name of the role.\n\n        'createdDate': (String) (Optional)\n            The timestamp the role was created at (measured in number of seconds since 1/1/1970 UTC).\n\n        'expiresAt': (Integer As Int64) (Optional)\n            The timestamp the role expires at (measured in number of seconds since 1/1/1970 UTC). Example:3609941597\n\n        'lastUpdatedBy': (String) (Optional)\n            Last Updated time of the role.\n\n        'lastUpdatedDate': (String) (Optional)\n            The timestamp the role was updated at (measured in number of seconds since 1/1/1970 UTC).\n\n        'membershipType': (String) (Optional)\n            Membership type of the member in the organization.\n            DIRECT: if the member roles were assigned directly.\n            GROUP: if the member roles were assigned through custom or enterprise group.\n            Possible values are: DIRECT , GROUP , NESTED\n\n        'createdBy': (String) (Optional)\n            The Creator of the role.\n\n        'resource': (String) (Optional)\n            The resource in which the role is scoped to. The resource will be embedded in the Access Token\n            \"perms\" claim, as part of the role.\n\n    service_roles\n        (Optional) List of service roles to attach to a user.\n        Below fields defines the properties of service roles.\n\n        'serviceDefinitionLink': (String) (Optional)\n            The link to the service definition.\n\n        'serviceRoles': (Optional)\n            List of services role bindings which defines the binding properties of the service role.\n            Service role binding is a json object which can contain the below fields.\n\n            'name': (String)\n                The name of the role.\n\n            'createdDate': (String) (Optional)\n                The timestamp the role was created at (measured in number of seconds since 1/1/1970 UTC).\n\n            'expiresAt': (Integer As Int64) (Optional)\n                The timestamp the role expires at (measured in number of seconds since 1/1/1970 UTC). Example:3609941597\n\n            'lastUpdatedBy': (String) (Optional)\n                Last Updated time of the role.\n\n            'lastUpdatedDate': (String) (Optional)\n                The timestamp the role was updated at (measured in number of seconds since 1/1/1970 UTC).\n\n            'membershipType': (String) (Optional)\n                Membership type of the member in the organization.\n                DIRECT: if the member roles were assigned directly.\n                GROUP: if the member roles were assigned through custom or enterprise group.\n                Possible values are: DIRECT , GROUP , NESTED\n\n            'createdBy': (String) (Optional)\n                The Creator of the role.\n\n            'resource': (String) (Optional)\n                The resource in which the role is scoped to. The resource will be embedded in the Access Token\n                \"perms\" claim, as part of the role.\n\n    skip_notify_registration\n        (Optional) Prevent sending mails to users that do not yet have a CSP profile.\n\n    invited_by\n        (Optional) Indicates the actual user who is inviting.\n\n    custom_groups_ids\n        (Optional) List of unique IDs of Custom Groups. Can have a maximum of 15 custom group IDs.\n\n    verify_ssl\n       (Optional) Option to enable/disable SSL verification. Enabled by default.\n       If set to False, the certificate validation is skipped.\n\n    cert\n       (Optional) Path to the SSL client certificate file to connect to VMC Cloud Console.\n       The certificate can be retrieved from browser.\n\n    Example values:\n\n        .. code::\n\n            {\n                \"skip_notify\": true,\n                \"custom_roles\": [\n                    {\n                        \"name\": \"string\",\n                        \"resource\": \"string\",\n                        \"expiresAt\": 3609941597\n                    }\n                ],\n                \"service_roles\": [\n                    {\n                        \"serviceRoles\": [\n                            {\n                                \"name\": \"vmc-user:full\",\n                                \"resource\": None,\n                                \"expiresAt\":  None\n                            },\n                            {\n                                \"name\": \"nsx:cloud_admin\",\n                                \"resource\": None\n                                \"expiresAt\": None\n                            },\n                            {\n                                \"name\": \"nsx:cloud_auditor\",\n                                \"resource\": None\n                                \"expiresAt\": None\n                            }\n                        ],\n                        \"serviceDefinitionLink\": \"/csp/gateway/slc/api/definitions/paid/tcq4LTfyZ_-UPdPAJIi2LhnvxmE_\"\n                    }\n                ],\n                \"skip_notify_registration\": true,\n                \"organization_roles\": [\n                    {\n                        \"name\": \"org_member\",\n                        \"resource\": None,\n                        \"expiresAt\": 3609941597\n                    }\n                ],\n                \"invited_by\": \"string\",\n                \"user_names\": [\n                    \"test@vmware.com\"\n                ],\n                \"custom_groups_ids\": [\n                    \"string\"\n                ]\n            }\n\n        CLI Example:\n\n          .. code-block:: bash\n\n              salt <minion id> vmc_org_users.invite hostname=console.cloud.vmware.com org_id=\"1234\" refresh_key=\"J05AftDxW\" user_names='[\"abc@example.com\"]' organization_roles='[{\"name\": \"org_member\"},{\"name\": \"developer\"}]' service_roles='[{\"serviceDefinitionLink\": \"/csp/gateway/slc/api/definitions/paid/tcq4LTfyZ_-UPdPAJIi2LhnvxmE_\", \"serviceRoles\": [{\"name\": \"vmc-user:full\"}, {\"name\": \"nsx:cloud_admin\"}]}]' verify_ssl=false\n\n    \"\"\"",
        "\"\"\"\n     Remove users from organization by user ids.\n     User ids will be of the format : e.g. vmware.com:820e7ca5-4024-407e-8db4-f552d5d03403.\n     Pay attention: in case of partial success the caller must read the response to see which users have not been removed successfully\n\n    Please refer the `remove users from org documentation <https://developer.vmware.com/apis/csp/csp-iam/latest/csp/gateway/am/api/v2/orgs/orgId/users/delete/>`_ to get insight of functionality and input parameters\n\n     CLI Example:\n\n    .. code-block:: bash\n\n        salt <minion id> vmc_org_users.remove hostname=console.cloud.vmware.com org_id=org_id  ...\n\n    hostname\n        The host name of CSP.\n\n    refresh_key\n        API Token of the user which is used to get the Access Token required for VMC operations.\n\n    org_id\n        The ID of organization from which the users should be removed.\n\n    user_ids\n        List of unique IDs of the users to be removed from the organization. Can have a maximum of 20 user IDs.\n\n    notify_users\n        (Optional) Indicates whether the users need to notify through email. Default value is true.\n\n    verify_ssl\n        (Optional) Option to enable/disable SSL verification. Enabled by default.\n        If set to False, the certificate validation is skipped.\n\n    cert\n        (Optional) Path to the SSL client certificate file to connect to VMC Cloud Console.\n        The certificate can be retrieved from browser.\n\n    For example:\n\n        .. code::\n\n            {\n                \"user_ids\": [\n                    \"vmware.com:7109c7a3-fcef-452d-998e-3fab161bc0d6\"\n                ],\n                \"notify_users\": False\n            }\n\n    \"\"\""
    ],
    "functions": [
        "__virtual__",
        "list_",
        "search",
        "invite",
        "remove"
    ],
    "classes": []
}