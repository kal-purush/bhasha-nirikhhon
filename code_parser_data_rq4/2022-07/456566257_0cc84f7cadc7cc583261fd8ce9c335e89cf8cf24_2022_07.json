{
    "identifiers": [
        "neo4j",
        "GraphDatabase",
        "cmd",
        "os",
        "sys",
        "random",
        "pickle",
        "math",
        "itertools",
        "collections",
        "defaultdict",
        "uuid",
        "time",
        "prompt",
        "input",
        "prompt",
        "prompt",
        "input",
        "prompt",
        "temp",
        "temp",
        "temp",
        "temp",
        "cmd",
        "Cmd",
        "Messages",
        "time",
        "time",
        "open",
        "f",
        "pickle",
        "load",
        "f",
        "open",
        "f",
        "pickle",
        "load",
        "f",
        "cmd",
        "Cmd",
        "m",
        "title",
        "do_help",
        "cmd",
        "Cmd",
        "cmdloop",
        "KeyboardInterrupt",
        "driver",
        "driver",
        "close",
        "KeyboardInterrupt",
        "args",
        "format",
        "url",
        "format",
        "username",
        "format",
        "password",
        "format",
        "use_encryption",
        "m",
        "input_default",
        "url",
        "m",
        "input_default",
        "username",
        "m",
        "input_default",
        "password",
        "m",
        "input_yesno",
        "use_encryption",
        "format",
        "url",
        "format",
        "username",
        "format",
        "password",
        "format",
        "use_encryption",
        "test_db_conn",
        "args",
        "args",
        "passed",
        "passed",
        "ValueError",
        "m",
        "input_default",
        "num_nodes",
        "args",
        "args",
        "passed",
        "passed",
        "ValueError",
        "m",
        "input_default",
        "avg_conn",
        "args",
        "args",
        "passed",
        "passed",
        "ValueError",
        "m",
        "input_default",
        "avg_vulnerable",
        "args",
        "args",
        "passed",
        "passed",
        "upper",
        "ValueError",
        "m",
        "input_default",
        "domain",
        "upper",
        "format",
        "domain",
        "args",
        "KeyboardInterrupt",
        "args",
        "test_db_conn",
        "args",
        "connected",
        "driver",
        "d",
        "session",
        "num",
        "session",
        "run",
        "r",
        "result",
        "r",
        "constraint",
        "session",
        "run",
        "session",
        "run",
        "format",
        "constraint",
        "index",
        "session",
        "run",
        "index",
        "get",
        "session",
        "run",
        "format",
        "index",
        "session",
        "run",
        "format",
        "index",
        "session",
        "run",
        "session",
        "run",
        "session",
        "close",
        "driver",
        "driver",
        "close",
        "GraphDatabase",
        "driver",
        "url",
        "auth",
        "username",
        "password",
        "encrypted",
        "use_encryption",
        "args",
        "generate_data",
        "args",
        "test_db_conn",
        "do_cleardb",
        "generate_data",
        "iterable",
        "size",
        "iter",
        "iterable",
        "itertools",
        "islice",
        "it",
        "size",
        "item",
        "item",
        "itertools",
        "islice",
        "it",
        "size",
        "random",
        "randint",
        "choice",
        "random",
        "randint",
        "current_time",
        "variation",
        "choice",
        "connected",
        "i",
        "len",
        "user_partitions",
        "user_weighted_parts",
        "user_partitions",
        "i",
        "user_partitions_weight",
        "i",
        "user_partitions",
        "i",
        "len",
        "computer_partitions",
        "comp_weighted_parts",
        "computer_partitions",
        "i",
        "comp_partitions_weight",
        "i",
        "driver",
        "session",
        "name",
        "name",
        "domain",
        "relative_id",
        "base_sid",
        "relative_id",
        "security_id",
        "domain",
        "security_id",
        "format",
        "num_nodes",
        "session",
        "run",
        "base_statement",
        "sid",
        "cs",
        "gname",
        "cn",
        "session",
        "run",
        "base_statement",
        "sid",
        "cs",
        "gname",
        "cn",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cs",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cs",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cws",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cs",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cs",
        "session",
        "run",
        "base_statement",
        "gname",
        "cn",
        "sid",
        "cs",
        "session",
        "run",
        "domain",
        "domain",
        "uuid",
        "uuid4",
        "uuid",
        "uuid4",
        "uuid",
        "uuid4",
        "session",
        "run",
        "base_statement",
        "gpo",
        "cn",
        "guid",
        "ddp",
        "session",
        "run",
        "base_statement",
        "gpo",
        "cn",
        "guid",
        "ddp",
        "session",
        "run",
        "ou",
        "cn",
        "guid",
        "dcou",
        "format",
        "domain",
        "session",
        "run",
        "gpo",
        "gpo_name",
        "domain",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "guid",
        "dcou",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "guid",
        "dcou",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "format",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "gname",
        "group_name",
        "i",
        "num_nodes",
        "random",
        "choice",
        "user_weighted_parts",
        "format",
        "dept",
        "i",
        "domain",
        "group_name",
        "groups",
        "groups",
        "append",
        "group_name",
        "cs",
        "ridcount",
        "ridcount",
        "props",
        "append",
        "group_name",
        "sid",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "dept",
        "computer_partitions",
        "format",
        "dept",
        "domain",
        "group_name",
        "cgroups",
        "cgroups",
        "append",
        "group_name",
        "cs",
        "ridcount",
        "ridcount",
        "props",
        "append",
        "group_name",
        "sid",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "i",
        "num_nodes",
        "random",
        "choice",
        "comp_weighted_parts",
        "format",
        "dept",
        "domain",
        "format",
        "i",
        "domain",
        "computers",
        "append",
        "comp_name",
        "random",
        "choice",
        "os_list",
        "props",
        "append",
        "cs",
        "ridcount",
        "comp_name",
        "os",
        "enabled",
        "ridcount",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "state",
        "states",
        "cn",
        "state",
        "cn",
        "cs",
        "ridcount",
        "session",
        "run",
        "sid",
        "sid",
        "name",
        "comp_name",
        "gname",
        "group_name",
        "session",
        "run",
        "sid",
        "sid",
        "dcou",
        "dcou",
        "session",
        "run",
        "sid",
        "sid",
        "gname",
        "cn",
        "session",
        "run",
        "sid",
        "sid",
        "gname",
        "cn",
        "used_states",
        "format",
        "avg_conn",
        "src_comp",
        "computers",
        "random",
        "sample",
        "computers",
        "k",
        "min",
        "random",
        "randint",
        "avg_conn",
        "num_nodes",
        "src_comp",
        "dests",
        "dests",
        "remove",
        "src_comp",
        "src_names",
        "append",
        "src_comp",
        "dest_names",
        "append",
        "dests",
        "len",
        "src_names",
        "session",
        "run",
        "srcnames",
        "src_names",
        "destnamelist",
        "dest_names",
        "session",
        "run",
        "srcnames",
        "src_names",
        "destnamelist",
        "dest_names",
        "format",
        "avg_vulnerable",
        "random",
        "sample",
        "computers",
        "k",
        "min",
        "random",
        "randint",
        "avg_vulnerable",
        "num_nodes",
        "vulnerable_host",
        "vulnerable_hosts",
        "random",
        "sample",
        "cves",
        "k",
        "random",
        "randint",
        "len",
        "cves",
        "session",
        "run",
        "host",
        "vulnerable_host",
        "cves",
        "host_cves",
        "time",
        "time",
        "format",
        "domain",
        "i",
        "num_nodes",
        "random",
        "choice",
        "first_names",
        "random",
        "choice",
        "last_names",
        "format",
        "first",
        "last",
        "i",
        "domain",
        "upper",
        "user_name",
        "format",
        "first",
        "last",
        "i",
        "upper",
        "users",
        "append",
        "user_name",
        "format",
        "first",
        "last",
        "generate_timestamp",
        "generate_timestamp",
        "ridcount",
        "cs",
        "ridcount",
        "props",
        "append",
        "objectsid",
        "dispname",
        "user_name",
        "enabled",
        "pwdlastset",
        "lastlogon",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "session",
        "run",
        "id",
        "cs",
        "random",
        "randint",
        "dapctint",
        "math",
        "ceil",
        "num_nodes",
        "dapct",
        "min",
        "danum",
        "format",
        "danum",
        "dapctint",
        "random",
        "sample",
        "users",
        "danum",
        "da",
        "das",
        "session",
        "run",
        "name",
        "da",
        "gname",
        "cn",
        "round",
        "math",
        "log10",
        "num_nodes",
        "group",
        "groups",
        "random",
        "randrange",
        "random",
        "randrange",
        "max_nest",
        "group",
        "x",
        "x",
        "groups",
        "dept",
        "x",
        "num_nest",
        "len",
        "dpt_groups",
        "random",
        "randrange",
        "len",
        "dpt_groups",
        "random",
        "sample",
        "dpt_groups",
        "num_nest",
        "g",
        "to_nest",
        "g",
        "group",
        "props",
        "append",
        "group",
        "g",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "math",
        "log10",
        "num_nodes",
        "math",
        "pow",
        "a",
        "math",
        "floor",
        "a",
        "a",
        "a",
        "math",
        "ceil",
        "math",
        "log10",
        "num_nodes",
        "format",
        "num_groups_base",
        "variance",
        "user",
        "users",
        "random",
        "choice",
        "user_weighted_parts",
        "dept",
        "it_users",
        "append",
        "user",
        "x",
        "x",
        "groups",
        "dept",
        "x",
        "num_groups_base",
        "random",
        "randrange",
        "variance",
        "sample",
        "len",
        "possible_groups",
        "math",
        "floor",
        "len",
        "possible_groups",
        "sample",
        "random",
        "sample",
        "possible_groups",
        "sample",
        "group",
        "to_add",
        "props",
        "append",
        "user",
        "group",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "it_users",
        "das",
        "it_users",
        "x",
        "x",
        "groups",
        "x",
        "random",
        "shuffle",
        "it_groups",
        "random",
        "sample",
        "it_groups",
        "math",
        "floor",
        "len",
        "computers",
        "x",
        "x",
        "it_groups",
        "x",
        "super_groups",
        "len",
        "it_groups",
        "math",
        "ceil",
        "total_it_groups",
        "math",
        "ceil",
        "total_it_groups",
        "math",
        "ceil",
        "total_it_groups",
        "math",
        "ceil",
        "total_it_groups",
        "dista",
        "distb",
        "distc",
        "distd",
        "x",
        "total_it_groups",
        "it_groups",
        "x",
        "distribution_list",
        "x",
        "random",
        "sample",
        "computers",
        "dist",
        "a",
        "to_add",
        "props",
        "append",
        "g",
        "a",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "x",
        "super_groups",
        "a",
        "random",
        "sample",
        "computers",
        "super_group_num",
        "props",
        "append",
        "x",
        "a",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "math",
        "floor",
        "len",
        "computers",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "it_users",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "it_users",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "it_groups",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "it_groups",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "it_users",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "i",
        "count",
        "random",
        "choice",
        "computers",
        "random",
        "choice",
        "computers",
        "comp",
        "user",
        "props",
        "append",
        "user",
        "comp",
        "session",
        "run",
        "props",
        "props",
        "math",
        "ceil",
        "math",
        "log10",
        "num_nodes",
        "user",
        "users",
        "random",
        "randrange",
        "max_sessions_per_user",
        "user",
        "das",
        "max",
        "num_sessions",
        "num_sessions",
        "c",
        "random",
        "sample",
        "computers",
        "num_sessions",
        "props",
        "append",
        "user",
        "c",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "format",
        "domain",
        "x",
        "computers",
        "props",
        "append",
        "x",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "x",
        "users",
        "props",
        "append",
        "x",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "x",
        "groups",
        "props",
        "append",
        "x",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "session",
        "run",
        "props",
        "props",
        "gname",
        "group_name",
        "computers",
        "random",
        "shuffle",
        "temp_comps",
        "math",
        "ceil",
        "num_nodes",
        "split_seq",
        "temp_comps",
        "split_num",
        "i",
        "states",
        "i",
        "split_comps",
        "i",
        "format",
        "state",
        "domain",
        "uuid",
        "uuid4",
        "guid",
        "c",
        "ou_comps",
        "props",
        "append",
        "c",
        "guid",
        "ouname",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "users",
        "random",
        "shuffle",
        "temp_users",
        "split_seq",
        "temp_users",
        "split_num",
        "i",
        "states",
        "i",
        "split_users",
        "i",
        "format",
        "state",
        "domain",
        "uuid",
        "uuid4",
        "guid",
        "c",
        "ou_users",
        "props",
        "append",
        "c",
        "guid",
        "ouname",
        "len",
        "props",
        "session",
        "run",
        "props",
        "props",
        "session",
        "run",
        "props",
        "props",
        "x",
        "ou_guid_map",
        "keys",
        "ou_guid_map",
        "x",
        "props",
        "append",
        "guid",
        "session",
        "run",
        "props",
        "props",
        "domain",
        "domain",
        "i",
        "format",
        "i",
        "domain",
        "uuid",
        "uuid4",
        "session",
        "run",
        "gponame",
        "gpo_name",
        "guid",
        "guid",
        "gpos",
        "append",
        "gpo_name",
        "ou_guid_map",
        "keys",
        "g",
        "gpos",
        "random",
        "randint",
        "random",
        "sample",
        "ou_names",
        "num_links",
        "l",
        "linked_ous",
        "ou_guid_map",
        "l",
        "session",
        "run",
        "gponame",
        "g",
        "guid",
        "guid",
        "random",
        "randint",
        "random",
        "sample",
        "ou_names",
        "num_links",
        "l",
        "linked_ous",
        "ou_guid_map",
        "l",
        "session",
        "run",
        "gponame",
        "domain",
        "guid",
        "guid",
        "gpos",
        "append",
        "format",
        "domain",
        "gpos",
        "append",
        "format",
        "domain",
        "round",
        "len",
        "it_groups",
        "format",
        "num_acl_principals",
        "random",
        "sample",
        "it_groups",
        "num_acl_principals",
        "it_users",
        "it_groups",
        "i",
        "acl_groups",
        "random",
        "choice",
        "acl_list",
        "ace",
        "ace",
        "ace",
        "ace",
        "ace",
        "random",
        "choice",
        "all_principals",
        "random",
        "choice",
        "gpos",
        "session",
        "run",
        "ace_string",
        "group",
        "i",
        "principal",
        "p",
        "session",
        "run",
        "ace_string",
        "group",
        "i",
        "principal",
        "p2",
        "ace",
        "random",
        "choice",
        "it_groups",
        "session",
        "run",
        "ace_string",
        "group",
        "i",
        "principal",
        "p",
        "ace",
        "random",
        "choice",
        "all_principals",
        "random",
        "choice",
        "computers",
        "session",
        "run",
        "target",
        "targ",
        "principal",
        "p",
        "random",
        "choice",
        "it_users",
        "session",
        "run",
        "ace_string",
        "group",
        "i",
        "principal",
        "p",
        "random",
        "randint",
        "min",
        "i",
        "len",
        "it_users",
        "user",
        "random",
        "sample",
        "it_users",
        "i",
        "session",
        "run",
        "user",
        "user",
        "random",
        "randint",
        "min",
        "i",
        "len",
        "computers",
        "session",
        "run",
        "user",
        "user",
        "session",
        "run",
        "session",
        "run",
        "session",
        "run",
        "domain",
        "domain",
        "session",
        "run",
        "domain",
        "domain",
        "session",
        "close",
        "MainMenu",
        "cmdloop",
        "KeyboardInterrupt",
        "sys",
        "exit"
    ],
    "literals": [
        "\"================================================================\"",
        "\"BloodHound Sample Database Creator\"",
        "\"================================================================\"",
        "\"%s [%s] \"",
        "\" \"",
        "\"Y\"",
        "\"y\"",
        "\"/\"",
        "\"n\"",
        "\"N\"",
        "\" \"",
        "\"y\"",
        "\"Y\"",
        "\"n\"",
        "\"N\"",
        "\"bolt://localhost:7687\"",
        "\"neo4j\"",
        "\"neo4jj\"",
        "\"TESTLAB.LOCAL\"",
        "\"S-1-5-21-883232822-274137685-4173207997\"",
        "'first.pkl'",
        "'rb'",
        "'last.pkl'",
        "'rb'",
        "\"\"",
        "\"Configure database connection parameters\"",
        "\"Test connection to the database and verify credentials\"",
        "\"Set base number of nodes to generate (default 500)\"",
        "\"Set domain name (default 'TESTLAB.LOCAL')\"",
        "\"Clear the database and set constraints\"",
        "\"Generate random data\"",
        "\"Connect to the database, clear the db, set the schema, and generate random data\"",
        "\"Set the average number of nodes each node will have network access to\"",
        "\"Set the average number of vulnerable hosts\"",
        "\"Exits the database creator\"",
        "\"Current Settings:\"",
        "\"DB Url: {}\"",
        "\"DB Username: {}\"",
        "\"DB Password: {}\"",
        "\"Use encryption: {}\"",
        "\"\"",
        "\"Enter DB URL\"",
        "\"Enter DB Username\"",
        "\"Enter DB Password\"",
        "\"Use encryption?\"",
        "\"\"",
        "\"New Settings:\"",
        "\"DB Url: {}\"",
        "\"DB Username: {}\"",
        "\"DB Password: {}\"",
        "\"Use encryption: {}\"",
        "\"\"",
        "\"Testing DB Connection\"",
        "\"\"",
        "\"Number of nodes of each type to generate\"",
        "\"\"",
        "\"Average number of network connnected nodes per node\"",
        "\"\"",
        "\"Average number of vulnerable hosts\"",
        "\"\"",
        "\"Domain\"",
        "\"\"",
        "\"New Settings:\"",
        "\"Domain: {}\"",
        "\"Not connected to database. Use connect first\"",
        "\"Clearing Database\"",
        "\"MATCH (n) WITH n LIMIT 10000 DETACH DELETE n RETURN count(n)\"",
        "'count(n)'",
        "\"Resetting Schema\"",
        "\"CALL db.constraints\"",
        "\"DROP {}\"",
        "'description'",
        "\"CALL db.indexes\"",
        "'description'",
        "\"DROP {}\"",
        "'description'",
        "\"DROP INDEX {}\"",
        "'name'",
        "\"CREATE CONSTRAINT id_constraint ON (c:Base) ASSERT c.objectid IS UNIQUE\"",
        "\"CREATE INDEX name_index FOR (n:Base) ON (n.name)\"",
        "\"DB Cleared and Schema Set\"",
        "\"Database Connection Successful!\"",
        "\"Database Connection Failed. Check your settings.\"",
        "\"a\"",
        "\"Not connected to database. Use connect first\"",
        "\"WA\"",
        "\"MD\"",
        "\"AL\"",
        "\"IN\"",
        "\"NV\"",
        "\"VA\"",
        "\"CA\"",
        "\"NY\"",
        "\"TX\"",
        "\"FL\"",
        "\"IT\"",
        "\"HR\"",
        "\"MARKETING\"",
        "\"OPERATIONS\"",
        "\"BUSINESS\"",
        "\"APPS_IT\"",
        "\"APPS_HR\"",
        "\"APPS_MARKETING\"",
        "\"APPS_BUSINESS\"",
        "\"APPS_OPERATIONS\"",
        "\"Windows Server 2003\"",
        "\"Windows Server 2008\"",
        "\"Windows 7\"",
        "\"Windows 10\"",
        "\"Windows XP\"",
        "\"Windows Server 2012\"",
        "\"Windows Server 2008\"",
        "f\"{name}@{self.domain}\"",
        "f\"{self.base_sid}-{str(relative_id)}\"",
        "f\"{self.domain}-{str(security_id)}\"",
        "\"Starting data generation with nodes={}\"",
        "\"Populating Standard Nodes\"",
        "\"MERGE (n:Base {name: $gname}) SET n:Group, n.objectid=$sid\"",
        "f\"{base_statement},n.highvalue=true\"",
        "\"DOMAIN ADMINS\"",
        "\"DOMAIN COMPUTERS\"",
        "\"DOMAIN USERS\"",
        "f\"{base_statement},n.highvalue=true\"",
        "\"DOMAIN CONTROLLERS\"",
        "f\"{base_statement},n.highvalue=true\"",
        "\"ENTERPRISE DOMAIN CONTROLLERS\"",
        "\"S-1-5-9\"",
        "\"ENTERPRISE READ-ONLY DOMAIN CONTROLLERS\"",
        "f\"{base_statement},n.highvalue=true\"",
        "\"ADMINISTRATORS\"",
        "f\"{base_statement},n.highvalue=true\"",
        "\"ENTERPRISE ADMINS\"",
        "\"MERGE (n:Base {name:$domain}) SET n:Domain, n.highvalue=true\"",
        "\"MERGE (n:Base {name:$gpo, objectid:$guid}) SET n:GPO\"",
        "\"DEFAULT DOMAIN POLICY\"",
        "\"DEFAULT DOMAIN CONTROLLERS POLICY\"",
        "\"MERGE (n:Base {name:$ou, objectid:$guid, blocksInheritance: false}) SET n:OU\"",
        "\"DOMAIN CONTROLLERS\"",
        "\"Adding Standard Edges\"",
        "\"DEFAULT DOMAIN POLICY@{}\"",
        "'MERGE (n:GPO {name:$gpo}) MERGE (m:Domain {name:$domain}) MERGE (n)-[:GpLink {isacl:false, enforced:toBoolean(false)}]->(m)'",
        "'MERGE (n:Domain {name:$domain}) MERGE (m:OU {objectid:$guid}) MERGE (n)-[:Contains {isacl:false}]->(m)'",
        "\"DEFAULT DOMAIN CONTROLLERS POLICY@{}\"",
        "'MERGE (n:GPO {name:\"DEFAULT DOMAIN CONTROLLERS POLICY@$domain\"}) MERGE (m:OU {objectid:$guid}) MERGE (n)-[:GpLink {isacl:false, enforced:toBoolean(false)}]->(m)'",
        "\"ENTERPRISE ADMINS@{}\"",
        "'MERGE (n:Domain {name:$domain}) MERGE (m:Group {name:$gname}) MERGE (m)-[:GenericAll {isacl:true}]->(n)'",
        "\"ADMINISTRATORS@{}\"",
        "'MERGE (n:Domain {name:$domain}) MERGE (m:Group {name:$gname}) MERGE (m)-[:Owns {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:WriteOwner {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:WriteDacl {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:DCSync {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChanges {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChangesAll {isacl:true}]->(n)'",
        "\"DOMAIN ADMINS@{}\"",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:WriteOwner {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:WriteDacl {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:DCSync {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChanges {isacl:true}]->(n)'",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChangesAll {isacl:true}]->(n)'",
        "\"ENTERPRISE DOMAIN CONTROLLERS@{}\"",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChanges {isacl:true}]->(n)'",
        "\"ENTERPRISE READ-ONLY DOMAIN CONTROLLERS@{}\"",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChanges {isacl:true}]->(n)'",
        "\"DOMAIN CONTROLLERS@{}\"",
        "'MERGE (n:Domain {name:$domain}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:GetChangesAll {isacl:true}]->(n)'",
        "\"Generating User Group Nodes\"",
        "\"{}{:05d}@{}\"",
        "'name'",
        "'id'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:Group, n.name=prop.name'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:Group, n.name=prop.name'",
        "\"Generating Computer Group Nodes\"",
        "\"{}@{}\"",
        "'name'",
        "'id'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:Group, n.name=prop.name'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:Group, n.name=prop.name'",
        "\"Generating Computer Nodes\"",
        "\"{}@{}\"",
        "\"COMP{:05d}.{}\"",
        "'id'",
        "'props'",
        "'name'",
        "'operatingsystem'",
        "'enabled'",
        "'UNWIND $props as prop MERGE (n:Base {objectid: prop.id}) SET n:Computer, n += prop.props WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"Creating Domain Controllers\"",
        "f\"{state}LABDC\"",
        "\"DOMAIN CONTROLLERS\"",
        "'MERGE (n:Base {objectid:$sid}) SET n:Computer,n.name=$name WITH n MATCH (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "'MATCH (n:Computer {objectid:$sid}) WITH n MATCH (m:OU {objectid:$dcou}) WITH n,m MERGE (m)-[:Contains]->(n)'",
        "'MATCH (n:Computer {objectid:$sid}) WITH n MATCH (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"ENTERPRISE DOMAIN CONTROLLERS\"",
        "'MERGE (n:Computer {objectid:$sid}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (m)-[:AdminTo]->(n)'",
        "\"DOMAIN ADMINS\"",
        "\"Generating network access with average of {}\"",
        "'WITH $srcnames AS srcnames,$destnamelist AS destnamelist UNWIND srcnames AS srcname WITH srcnames,srcname,destnamelist,reduce(ix = -1, i IN RANGE(0,SIZE(srcnames)-1) | CASE srcnames[i] WHEN srcname THEN i ELSE ix END) AS six  MATCH (src {name:srcname}) MATCH (dst:Computer) WHERE dst.name IN destnamelist[six] MERGE (src)-[:Open]->(dst)'",
        "'WITH $srcnames AS srcnames,$destnamelist AS destnamelist UNWIND srcnames AS srcname WITH srcnames,srcname,destnamelist,reduce(ix = -1, i IN RANGE(0,SIZE(srcnames)-1) | CASE srcnames[i] WHEN srcname THEN i ELSE ix END) AS six  MATCH (src {name:srcname}) MATCH (dst:Computer) WHERE dst.name IN destnamelist[six] MERGE (src)-[:Open]->(dst)'",
        "\"Generating vulnerable hosts with average of {}\"",
        "'CVE-2010-0022'",
        "'CVE-2017-0144'",
        "'CVE-2008-4114'",
        "'CVE-2017-0146'",
        "'CVE-2017-0147'",
        "'CVE-2017-0143'",
        "'CVE-2017-0145'",
        "'CVE-2010-0020'",
        "'CVE-2008-4835'",
        "'CVE-2017-0148'",
        "'CVE-2010-0231'",
        "'CVE-2010-0021'",
        "'CVE-2008-4834'",
        "'CVE-2008-4250'",
        "'MATCH (c:Computer {name: $host}) SET c.is_vulnerable = true, c.cves = $cves'",
        "\"Generating User Nodes\"",
        "\"DOMAIN USERS@{}\"",
        "\"{}{}{:05d}@{}\"",
        "\"{} {}\"",
        "'id'",
        "'props'",
        "'displayname'",
        "'name'",
        "'enabled'",
        "'pwdlastset'",
        "'lastlogon'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:User, n += prop.props WITH n MATCH (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:User, n += prop.props WITH n MATCH (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"Adding Domain Admins to Local Admins of Computers\"",
        "'MATCH (n:Computer) MATCH (m:Group {objectid: $id}) MERGE (m)-[:AdminTo]->(n)'",
        "\"Creating {} Domain Admins ({}% of users capped at 30)\"",
        "'MERGE (n:User {name:$name}) WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"DOMAIN ADMINS\"",
        "\"Applying random group nesting\"",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Group {name:prop.a}) WITH n,prop MERGE (m:Group {name:prop.b}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "'UNWIND $props AS prop MERGE (n:Group {name:prop.a}) WITH n,prop MERGE (m:Group {name:prop.b}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"Adding users to groups\"",
        "\"Calculated {} groups per user with a variance of - {}\"",
        "\"IT\"",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:User {name:prop.a}) WITH n,prop MERGE (m:Group {name:prop.b}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "'UNWIND $props AS prop MERGE (n:User {name:prop.a}) WITH n,prop MERGE (m:Group {name:prop.b}) WITH n,m MERGE (n)-[:MemberOf]->(m)'",
        "\"Adding local admin rights\"",
        "\"IT\"",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Group {name:prop.a}) WITH n,prop MERGE (m:Computer {name:prop.b}) WITH n,m MERGE (n)-[:AdminTo]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Group {name:prop.a}) WITH n,prop MERGE (m:Computer {name:prop.b}) WITH n,m MERGE (n)-[:AdminTo]->(m)'",
        "'UNWIND $props AS prop MERGE (n:Group {name:prop.a}) WITH n,prop MERGE (m:Computer {name:prop.b}) WITH n,m MERGE (n)-[:AdminTo]->(m)'",
        "\"Adding RDP/ExecuteDCOM/AllowedToDelegateTo\"",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:User {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:CanRDP]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:User {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:ExecuteDCOM]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Group {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:CanRDP]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Group {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:ExecuteDCOM]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:User {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:AllowedToDelegate]->(m)'",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:Computer {name: prop.a}) MERGE (m:Computer {name: prop.b}) MERGE (n)-[r:AllowedToDelegate]->(m)'",
        "\"Adding sessions\"",
        "'a'",
        "'b'",
        "'UNWIND $props AS prop MERGE (n:User {name:prop.a}) WITH n,prop MERGE (m:Computer {name:prop.b}) WITH n,m MERGE (m)-[:HasSession]->(n)'",
        "'UNWIND $props AS prop MERGE (n:User {name:prop.a}) WITH n,prop MERGE (m:Computer {name:prop.b}) WITH n,m MERGE (m)-[:HasSession]->(n)'",
        "\"Adding Domain Admin ACEs\"",
        "\"DOMAIN ADMINS@{}\"",
        "'name'",
        "'UNWIND $props as prop MATCH (n:Computer {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "'UNWIND $props as prop MATCH (n:Computer {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "'name'",
        "'UNWIND $props as prop MATCH (n:User {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "'UNWIND $props as prop MATCH (n:User {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "'name'",
        "'UNWIND $props as prop MATCH (n:Group {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "'UNWIND $props as prop MATCH (n:Group {name:prop.name}) WITH n MATCH (m:Group {name:$gname}) WITH m,n MERGE (m)-[r:GenericAll {isacl:true}]->(n)'",
        "\"Creating OUs\"",
        "\"{}_COMPUTERS@{}\"",
        "'compname'",
        "'ouguid'",
        "'ouname'",
        "'UNWIND $props as prop MERGE (n:Computer {name:prop.compname}) WITH n,prop MERGE (m:Base {objectid:prop.ouguid, name:prop.ouname, blocksInheritance: false}) SET m:OU WITH n,m,prop MERGE (m)-[:Contains]->(n)'",
        "'UNWIND $props as prop MERGE (n:Computer {name:prop.compname}) WITH n,prop MERGE (m:Base {objectid:prop.ouguid, name:prop.ouname, blocksInheritance: false}) SET m:OU WITH n,m,prop MERGE (m)-[:Contains]->(n)'",
        "\"{}_USERS@{}\"",
        "'username'",
        "'ouguid'",
        "'ouname'",
        "'UNWIND $props as prop MERGE (n:User {name:prop.username}) WITH n,prop MERGE (m:Base {objectid:prop.ouguid, name:prop.ouname, blocksInheritance: false}) SET m:OU WITH n,m,prop MERGE (m)-[:Contains]->(n)'",
        "'UNWIND $props as prop MERGE (n:User {name:prop.username}) WITH n,prop MERGE (m:Base {objectid:prop.ouguid, name:prop.ouname, blocksInheritance: false}) SET m:OU WITH n,m,prop MERGE (m)-[:Contains]->(n)'",
        "'b'",
        "'UNWIND $props as prop MERGE (n:OU {objectid:prop.b}) WITH n MERGE (m:Domain {name:$domain}) WITH n,m MERGE (m)-[:Contains]->(n)'",
        "\"Creating GPOs\"",
        "\"GPO_{}@{}\"",
        "\"MERGE (n:Base {name:$gponame}) SET n:GPO, n.objectid=$guid\"",
        "\"MERGE (n:GPO {name:$gponame}) WITH n MERGE (m:OU {objectid:$guid}) WITH n,m MERGE (n)-[r:GpLink]->(m)\"",
        "\"MERGE (n:Domain {name:$gponame}) WITH n MERGE (m:OU {objectid:$guid}) WITH n,m MERGE (n)-[r:GpLink]->(m)\"",
        "\"DEFAULT DOMAIN POLICY@{}\"",
        "\"DEFAULT DOMAIN CONTROLLER POLICY@{}\"",
        "\"GenericAll\"",
        "\"GenericWrite\"",
        "\"WriteOwner\"",
        "\"WriteDacl\"",
        "\"AddMember\"",
        "\"ForceChangePassword\"",
        "\"ReadLAPSPassword\"",
        "\"Adding outbound ACLs to {} objects\"",
        "'[r:'",
        "'{isacl:true}]'",
        "\"GenericAll\"",
        "'GenericWrite'",
        "'WriteOwner'",
        "'WriteDacl'",
        "'MERGE (n:Group {name:$group}) MERGE (m {name:$principal}) MERGE (n)-'",
        "'->(m)'",
        "'MERGE (n:Group {name:$group}) MERGE (m:GPO {name:$principal}) MERGE (n)-'",
        "'->(m)'",
        "'AddMember'",
        "'MERGE (n:Group {name:$group}) MERGE (m:Group {name:$principal}) MERGE (n)-'",
        "'->(m)'",
        "'ReadLAPSPassword'",
        "'MERGE (n {name:$principal}) MERGE (m:Computer {name:$target}) MERGE (n)-[r:ReadLAPSPassword]->(m)'",
        "'MERGE (n:Group {name:$group}) MERGE (m:User {name:$principal}) MERGE (n)-'",
        "'->(m)'",
        "\"Marking some users as Kerberoastable\"",
        "'MATCH (n:User {name:$user}) SET n.hasspn=true'",
        "\"Adding unconstrained delegation to a few computers\"",
        "'MATCH (n:Computer {name:$user}) SET n.unconstrainteddelegation=true'",
        "'MATCH (n:User) SET n.owned=false'",
        "'MATCH (n:Computer) SET n.owned=false'",
        "'MATCH (n) SET n.domain=$domain'",
        "\"Connecting all hosts to the DCs\"",
        "'MATCH (dc:Computer)-[:MemberOf]->(:Group {name:\"DOMAIN CONTROLLERS@$domain\"}) MATCH (c:Computer) WHERE c <> dc WITH c,dc MERGE (c)-[:Open]->(dc)'",
        "\"Closing session...\"",
        "\"Database Generation Finished!\"",
        "'__main__'",
        "\"Exiting\""
    ],
    "variables": [
        "temp",
        "m",
        "url",
        "username",
        "password",
        "use_encryption",
        "driver",
        "connected",
        "num_nodes",
        "avg_conn",
        "avg_vulnerable",
        "domain",
        "current_time",
        "base_sid",
        "first_names",
        "last_names",
        "url",
        "username",
        "password",
        "use_encryption",
        "passed",
        "num_nodes",
        "num_nodes",
        "passed",
        "avg_conn",
        "avg_conn",
        "passed",
        "avg_vulnerable",
        "avg_vulnerable",
        "passed",
        "domain",
        "domain",
        "d",
        "session",
        "num",
        "result",
        "num",
        "connected",
        "driver",
        "connected",
        "connected",
        "it",
        "item",
        "item",
        "choice",
        "variation",
        "computers",
        "groups",
        "users",
        "gpos",
        "ou_guid_map",
        "used_states",
        "states",
        "user_partitions",
        "user_partitions_weight",
        "user_weighted_parts",
        "computer_partitions",
        "comp_partitions_weight",
        "comp_weighted_parts",
        "os_list",
        "session",
        "base_statement",
        "ddp",
        "ddcp",
        "dcou",
        "base_statement",
        "gpo_name",
        "gpo_name",
        "group_name",
        "group_name",
        "group_name",
        "group_name",
        "group_name",
        "group_name",
        "ridcount",
        "props",
        "dept",
        "group_name",
        "sid",
        "props",
        "props",
        "cgroups",
        "group_name",
        "sid",
        "props",
        "props",
        "dept",
        "group_name",
        "comp_name",
        "os",
        "enabled",
        "props",
        "comp_name",
        "group_name",
        "sid",
        "used_states",
        "src_names",
        "dest_names",
        "dests",
        "res",
        "src_names",
        "dest_names",
        "cves",
        "vulnerable_hosts",
        "host_cves",
        "current_time",
        "group_name",
        "props",
        "first",
        "last",
        "user_name",
        "user_name",
        "dispname",
        "enabled",
        "pwdlastset",
        "lastlogon",
        "objectsid",
        "props",
        "dapctint",
        "dapct",
        "danum",
        "danum",
        "das",
        "max_nest",
        "props",
        "num_nest",
        "dept",
        "dpt_groups",
        "num_nest",
        "to_nest",
        "props",
        "props",
        "a",
        "a",
        "a",
        "a",
        "num_groups_base",
        "variance",
        "it_users",
        "dept",
        "possible_groups",
        "sample",
        "sample",
        "to_add",
        "props",
        "it_users",
        "it_users",
        "it_groups",
        "super_groups",
        "super_group_num",
        "it_groups",
        "total_it_groups",
        "dista",
        "distb",
        "distc",
        "distd",
        "distribution_list",
        "props",
        "g",
        "dist",
        "to_add",
        "props",
        "props",
        "count",
        "props",
        "comp",
        "user",
        "props",
        "comp",
        "user",
        "props",
        "comp",
        "user",
        "props",
        "comp",
        "user",
        "props",
        "comp",
        "user",
        "props",
        "comp",
        "user",
        "max_sessions_per_user",
        "props",
        "num_sessions",
        "num_sessions",
        "props",
        "group_name",
        "props",
        "props",
        "props",
        "props",
        "temp_comps",
        "split_num",
        "split_comps",
        "props",
        "state",
        "ou_comps",
        "ouname",
        "guid",
        "ou_guid_map",
        "ouname",
        "props",
        "temp_users",
        "split_users",
        "props",
        "state",
        "ou_users",
        "ouname",
        "guid",
        "ou_guid_map",
        "ouname",
        "props",
        "props",
        "guid",
        "gpo_name",
        "guid",
        "ou_names",
        "num_links",
        "linked_ous",
        "guid",
        "num_links",
        "linked_ous",
        "guid",
        "acl_list",
        "num_acl_principals",
        "acl_groups",
        "all_principals",
        "props",
        "ace",
        "ace_string",
        "p",
        "p2",
        "p",
        "p",
        "targ",
        "p",
        "i",
        "i",
        "i",
        "i"
    ],
    "comments": [
        "Requirements - pip install neo4j-driver",
        "This script is used to create randomized sample databases.",
        "Commands",
        "dbconfig - Set the credentials and URL for the database you're connecting too",
        "connect - Connects to the database using supplied credentials",
        "setnodes - Set the number of nodes to generate (defaults to 500, this is a safe number!)",
        "setdomain - Set the domain name",
        "cleardb - Clears the database and sets the schema properly",
        "generate - Generates random data in the database",
        "clear_and_generate - Connects to the database, clears the DB, sets the schema, and generates random data",
        "Default GPOs",
        "Ent Admins -> Domain Node",
        "Administrators -> Domain Node",
        "Domain Admins -> Domain Node",
        "DC Groups -> Domain Node",
        "group_name = \"DOMAIN COMPUTERS@{}\".format(self.domain)",
        "session.run(",
        "'UNWIND $props as prop MERGE (n:Base {objectid:prop.id}) SET n:Computer, n += prop.props WITH n MERGE (m:Group {name:$gname}) WITH n,m MERGE (n)-[:MemberOf]->(m)',",
        "props=props, gname=group_name)",
        "print(\"Creating network connections between groups\")",
        "open_network_access = [(\"APPS_IT\", \"OPERATIONS\"), (\"APPS_IT\",\"HR\"),(\"APPS_IT\",\"MARKETING\"),(\"APPS_IT\",\"BUSINESS\"),(\"IT\",\"APPS_IT\"),",
        "(\"APPS_IT\", \"APPS_HR\"), (\"APPS_IT\", \"APPS_MARKETING\"), (\"APPS_IT\", \"APPS_BUSINESS\"),",
        "(\"APPS_IT\", \"APPS_OPERATIONS\"),(\"HR\", \"APPS_HR\"), (\"OPERATIONS\", \"APPS_OPERATIONS\"),",
        "(\"MARKETING\", \"APPS_MARKETING\"),(\"BUSINESS\", \"APPS_BUSINESS\")]",
        "# (\"APPS_IT\",\"APPS_IT\"),(\"APPS_BUSINESS\", \"APPS_BUSINESS\"),(\"APPS_OPERATIONS\", \"APPS_OPERATIONS\"),",
        "# (\"APPS_HR\", \"APPS_HR\"),(\"APPS_MARKETING\", \"APPS_MARKETING\")]",
        "",
        "",
        "for access in open_network_access:",
        "source_group = access[0] + '@' + self.domain",
        "dest_group = access[1] + '@' + self.domain",
        "",
        "result = session.run('MATCH (g1:Group {name:$source_group}) WITH g1 MATCH (g2:Group {name:$dest_group}) WITH g1,g2 MERGE (g1)-[:Open]-(g2)',source_group=source_group,dest_group=dest_group)",
        "print(\"Creating open edges between hosts that are members of connected groups\")",
        "session.run('MATCH (c1:Computer)-[:MemberOf]->(g1:Group) MATCH (c2:Computer)-[:MemberOf]->(g2:Group) WHERE c1 <> c2 WITH c1,c2,g1,g2 MATCH (c1)-[:MemberOf]->(g1)-[:Open]->(g2)<-[:MemberOf]-(c2) MERGE (c1)-[:Open]->(c2)')"
    ],
    "docstrings": [],
    "functions": [
        "title",
        "input_default",
        "input_yesno",
        "cmdloop",
        "help_dbconfig",
        "help_connect",
        "help_setnodes",
        "help_setdomain",
        "help_cleardb",
        "help_generate",
        "help_clear_and_generate",
        "help_setavgcon",
        "help_setavgvulnerable",
        "help_exit",
        "do_dbconfig",
        "do_setnodes",
        "do_setavgcon",
        "do_setavgvulnerable",
        "do_setdomain",
        "do_exit",
        "do_connect",
        "do_cleardb",
        "test_db_conn",
        "do_generate",
        "do_clear_and_generate",
        "split_seq",
        "generate_timestamp",
        "generate_data",
        "cn",
        "cs",
        "cws"
    ],
    "classes": [
        "Messages",
        "MainMenu"
    ]
}