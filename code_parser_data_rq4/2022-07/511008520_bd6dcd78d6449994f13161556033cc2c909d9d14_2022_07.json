{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "nn",
        "functional",
        "F",
        "utils",
        "weight_reduce_loss",
        "pred",
        "target",
        "weight",
        "gamma",
        "alpha",
        "reduction",
        "num_clas",
        "avg_factor",
        "pred",
        "sigmoid",
        "F",
        "one_hot",
        "target",
        "num_classes",
        "num_clas",
        "target",
        "type_as",
        "pred",
        "pred_sigmoid",
        "target",
        "pred_sigmoid",
        "target",
        "alpha",
        "target",
        "alpha",
        "target",
        "pt",
        "pow",
        "gamma",
        "F",
        "binary_cross_entropy_with_logits",
        "pred",
        "target",
        "reduction",
        "focal_weight",
        "weight_reduce_loss",
        "loss",
        "weight",
        "reduction",
        "avg_factor",
        "loss",
        "ctx",
        "input",
        "target",
        "gamma",
        "alpha",
        "weight",
        "reduction",
        "input",
        "dim",
        "target",
        "dim",
        "input",
        "size",
        "target",
        "size",
        "weight",
        "input",
        "new_empty",
        "weight",
        "dim",
        "input",
        "size",
        "weight",
        "size",
        "reduction",
        "ctx",
        "reduction_dict",
        "keys",
        "gamma",
        "alpha",
        "ctx",
        "reduction_dict",
        "reduction",
        "input",
        "new_zeros",
        "input",
        "size",
        "ctx",
        "reduction",
        "ctx",
        "reduction_dict",
        "output",
        "sum",
        "input",
        "size",
        "ctx",
        "reduction",
        "ctx",
        "reduction_dict",
        "output",
        "sum",
        "ctx",
        "save_for_backward",
        "input",
        "target",
        "weight",
        "output",
        "nn",
        "Module",
        "use_sigmoid",
        "gamma",
        "alpha",
        "reduction",
        "loss_weight",
        "FocalLoss",
        "use_sigmoid",
        "use_sigmoid",
        "gamma",
        "alpha",
        "reduction",
        "loss_weight",
        "pred",
        "target",
        "num_clas",
        "weight",
        "avg_factor",
        "reduction_override",
        "reduction_override",
        "reduction_override",
        "reduction_override",
        "reduction",
        "use_sigmoid",
        "loss_weight",
        "py_sigmoid_focal_loss",
        "pred",
        "target",
        "weight",
        "gamma",
        "gamma",
        "alpha",
        "alpha",
        "reduction",
        "reduction",
        "avg_factor",
        "avg_factor",
        "num_clas",
        "num_clas",
        "NotImplementedError",
        "loss_cls"
    ],
    "literals": [
        "'mean'",
        "'none'",
        "'mean'",
        "'none'",
        "'mean'",
        "'sum'",
        "'mean'",
        "'sum'",
        "'mean'",
        "'Only sigmoid focal loss supported now.'",
        "'none'",
        "'mean'",
        "'sum'"
    ],
    "variables": [
        "pred_sigmoid",
        "target",
        "target",
        "pt",
        "focal_weight",
        "loss",
        "loss",
        "weight",
        "ctx",
        "reduction_dict",
        "ctx",
        "gamma",
        "ctx",
        "alpha",
        "ctx",
        "reduction",
        "output",
        "output",
        "output",
        "use_sigmoid",
        "gamma",
        "alpha",
        "reduction",
        "loss_weight",
        "reduction",
        "loss_cls"
    ],
    "comments": [
        "from modules.sigmoid_focal_loss import sigmoid_focal_loss as _sigmoid_focal_loss",
        "from mmcv.ops import sigmoid_focal_loss as _sigmoid_focal_loss",
        "from . import sigmoid_focal_loss2 as _sigmoid_focal_loss",
        "from torchvision.ops.focal_loss import sigmoid_focal_loss",
        "sigmoid二分类",
        "assert isinstance(",
        "target, (torch.Tensor, torch.LongTensor, torch.cuda.LongTensor))",
        "ext_module.sigmoid_focal_loss_forward(",
        "input, target, weight, output, gamma=ctx.gamma, alpha=ctx.alpha)",
        "print(weight,self.gamma,self.alpha,reduction,avg_factor)"
    ],
    "docstrings": [
        "'''\n        print(pred.shape)\n      \n        print(target.shape)\n        print(target)\n        print(target.nonzero())\n        idx = target.nonzero()\n        print(target[idx])\n        '''"
    ],
    "functions": [
        "py_sigmoid_focal_loss",
        "_sigmoid_focal_loss",
        "forward"
    ],
    "classes": [
        "FocalLoss"
    ]
}