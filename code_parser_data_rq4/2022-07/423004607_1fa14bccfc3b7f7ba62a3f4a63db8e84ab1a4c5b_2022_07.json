{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "__dirname",
        "joinValues",
        "valuesList",
        "valuesList",
        "valuesList",
        "value",
        "size",
        "value",
        "value",
        "entry",
        "index",
        "index",
        "size",
        "row",
        "entry",
        "index",
        "size",
        "row",
        "entry",
        "size",
        "valuesList",
        "valuesList",
        "entry",
        "index",
        "index",
        "size",
        "row",
        "entry",
        "index",
        "size",
        "row",
        "entry",
        "row",
        "joinKeys",
        "keysList",
        "keysList",
        "keysList",
        "entry",
        "index",
        "index",
        "size",
        "row",
        "entry",
        "index",
        "size",
        "row",
        "entry",
        "row",
        "formatArray",
        "ar",
        "ar",
        "convertToCSV",
        "submission",
        "generalHeaders",
        "submission",
        "csv",
        "joinKeys",
        "submission",
        "additionalString",
        "joinValues",
        "submission",
        "csv",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "submission",
        "csv",
        "additionalString",
        "additionalString",
        "submission",
        "entry",
        "csv",
        "entry",
        "listedAnimalHeaders",
        "entry",
        "input",
        "input",
        "formattedInput",
        "formattedInput",
        "temp",
        "formattedGps",
        "temp",
        "formattedInput",
        "formatArray",
        "formattedGps",
        "formattedInput",
        "band",
        "codesAr",
        "band",
        "band",
        "band",
        "formattedInput",
        "formatArray",
        "formattedInput",
        "formattedInput",
        "formattedInput",
        "formattedInput",
        "formatArray",
        "codesAr",
        "formattedInput",
        "formatArray",
        "formattedInput",
        "csv",
        "joinValues",
        "formattedInput",
        "csv",
        "entry",
        "entry",
        "csv",
        "nonListedHeaders",
        "submission",
        "addSpecie",
        "csv",
        "addSpecie",
        "addSpecie",
        "addSpecie",
        "csv",
        "submission",
        "submission",
        "predator",
        "predatorHeaders",
        "predator",
        "predatorCount",
        "predator",
        "csv",
        "predatorHeaders",
        "csv",
        "predatorCount",
        "submission",
        "csv",
        "humanHeaders",
        "csv",
        "csv",
        "getSegmentNames",
        "segmentService",
        "segment",
        "segment",
        "segments",
        "getSegmentRow",
        "submissions",
        "getSegmentNames",
        "segments",
        "segment",
        "segment",
        "submissions",
        "submission",
        "submission",
        "segmentDictionary",
        "segmentDictionary",
        "submission",
        "segmentString",
        "joinKeys",
        "segmentDictionary",
        "segmentString",
        "joinValues",
        "segmentDictionary",
        "segmentString",
        "createCSV",
        "data",
        "id",
        "fs",
        "reportsDirectory",
        "id",
        "data",
        "err",
        "err",
        "router",
        "req",
        "res",
        "req",
        "startDate",
        "startDate",
        "endDate",
        "endDate",
        "monitorLogService",
        "startDate",
        "endDate",
        "reports",
        "res",
        "startDate",
        "endDate",
        "getSegmentRow",
        "reports",
        "reports",
        "report",
        "convertToCSV",
        "report",
        "csvData",
        "segStr",
        "disclaimer",
        "createCSV",
        "csvData",
        "report",
        "AdmZip",
        "fs",
        "reportsDirectory",
        "file",
        "reportsDirectory",
        "file",
        "res",
        "startDate",
        "endDate",
        "res",
        "zipFileContents",
        "err",
        "err",
        "res",
        "err",
        "fs",
        "reportsDirectory",
        "file",
        "fs",
        "reportsDirectory",
        "file",
        "err",
        "err",
        "err",
        "router"
    ],
    "literals": [
        "'express'",
        "'fs'",
        "'adm-zip'",
        "'../services/monitorLog.service'",
        "'../services/section.segment.service'",
        "'Surveyor Name'",
        "'Survey Segment'",
        "'Date'",
        "'Survey Start Time'",
        "'Survey End Time'",
        "'Temperature (F)'",
        "'Cloud Cover (%)'",
        "'Precipitation'",
        "'Wind (Speed/Direction)'",
        "'Tides(ft)'",
        "'Overall Habitat Type'",
        "'Habitat Width (ft)'",
        "'Partners'",
        "'Map #'",
        "'Adults'",
        "'Fledges'",
        "'Chicks'",
        "'Time'",
        "'Habitat Description'",
        "'GPS'",
        "'Cross Street/Towers'",
        "'# of Male Adults'",
        "'# of Male Fledges'",
        "'# of Male Chicks'",
        "'# of Female Adults'",
        "'# of Female Fledges'",
        "'# of Female Chicks'",
        "'Nest & Eggs'",
        "'Behaviors Observed'",
        "'Banding Code'",
        "'Accuracy Confidence'",
        "'Additional Notes'",
        "'Species'",
        "'Total'",
        "'Notes'",
        "'Beach Activity'",
        "'Water Activity'",
        "'Airborne Activity'",
        "'[Speeding] Motorized Vehicles'",
        "'[Non-Speeding] Motorized Vehicles'",
        "'[Off Leash] Domestic Animals'",
        "'[On Leash] Domestic Animals'",
        "'Outreach'",
        "'Other Notes'",
        "'OC Habitats strives to survey as many of the segments as possible each month. Some segments may not have been surveyed due to volunteer cancellation (due to illness, weather, or some other reason). Some segments are regularly not getting surveyed due to access issues (parking or land structures).  Some segments get more attention than others since we are aware the SNPL use these segments more often or there are issues with these segments that need more regular attention. '",
        "${__dirname}\\\\..\\\\reports",
        "''",
        "${entry}\\r\\n",
        "${entry},",
        "${entry}\\r\\n",
        "${entry},",
        "''",
        "${entry}\\r\\n",
        "${entry},",
        "\"${ar}\"",
        "General Information\\r\\n${generalHeaders.join(',')}",
        "','",
        "''",
        "\\r\\n${submission.submitter.firstName} ${submission.submitter.lastName},${\n    submission.segment.segmentId\n  },${new Date(submission.date).toDateString()},${submission.startTime},${submission.endTime},${\n    submission.temperature\n  },${submission.cloudCover},${submission.precipitation},${submission.windSpeed} ${\n    submission.windDirection\n  },${submission.tides},${submission.habitatType},${\n    submission.habitatWidth\n  },\"${submission.sessionPartners.toString()}\"",
        ",${additionalString}\\r\\n\\r\\n",
        "''",
        "${entry.species.name}\\r\\n${listedAnimalHeaders.join(',')}\\r\\n",
        "','",
        "''",
        "''",
        "\\r\\nInjured ${entry.species.name}\\r\\n${entry.injuredCount}\\r\\n\\r\\n",
        "Non-Listed Species\\r\\n${nonListedHeaders.join(',')}\\r\\n",
        "','",
        "${addSpecie.species.name},${addSpecie.count},${addSpecie.notes}\\r\\n",
        "\\r\\nInjured Terrestrial Wildlife\\r\\n${submission.additionalSpecies.injuredCount}\\r\\n",
        "\\r\\n${predatorHeaders},Other predators(s)\\r\\n",
        "${predatorCount},${submission.predatorOthers || ''}\\r\\n",
        "''",
        "\\r\\nHuman Activity\\r\\n${humanHeaders.join(',')}",
        "','",
        "'\\r\\n\\r\\nSegment Totals\\r\\n'",
        "''",
        "${reportsDirectory}\\\\report-${id}.csv",
        "'wx'",
        "'ERR writing csv'",
        "'/report'",
        "Reports from ${startDate} to  ${endDate} doesn't exist",
        "${segStr}\\r\\n${disclaimer}",
        "${reportsDirectory}\\\\${file}",
        "'Content-Disposition'",
        "attachment; filename=\"${new Date(\n          startDate,\n        ).toLocaleDateString()}_${new Date(endDate).toLocaleDateString()}_reports.zip\"",
        "'Content-Type'",
        "'application/zip'",
        "${reportsDirectory}\\\\${file}"
    ],
    "variables": [
        "express",
        "fs",
        "AdmZip",
        "monitorLogService",
        "segmentService",
        "router",
        "generalHeaders",
        "listedAnimalHeaders",
        "nonListedHeaders",
        "humanHeaders",
        "disclaimer",
        "reportsDirectory",
        "joinValues",
        "row",
        "size",
        "joinKeys",
        "row",
        "size",
        "formatArray",
        "convertToCSV",
        "csv",
        "additionalString",
        "formattedInput",
        "formattedGps",
        "temp",
        "codesAr",
        "predatorHeaders",
        "predatorCount",
        "getSegmentNames",
        "segments",
        "getSegmentRow",
        "segmentString",
        "segments",
        "segmentDictionary",
        "createCSV",
        "reports",
        "segStr",
        "csvData",
        "zipFileContents"
    ],
    "comments": [
        "eslint-disable no-underscore-dangle",
        "const convertToPascal = (text) => {",
        "return text.replace(/((?<!^)[A-Z](?![A-Z]))(?=\\S)/g, ' $1').replace(/^./, (s) => s.toUpperCase());",
        "};",
        "const size = Object.values(valuesList).length;",
        "let size;",
        "if (Array.isArray(keysList)) {",
        "keysList.forEach((key) => {",
        "size = Object.keys(key).length;",
        "Object.keys(key).forEach((entry, index) => {",
        "if (index === size - 2) row += `${entry}\\r\\n`;",
        "else if (index !== size - 1) {",
        "row += `${entry},`;",
        "}",
        "});",
        "});",
        "} else {",
        "}",
        "Append General Information Headers",
        "Append Additional General Information Headers",
        "Append General Information Fields",
        "Append ADDITIONAL General Information Fields",
        "Append Listed Species, Header, and Fields",
        "Append Non Listed Species Title, Headers, and Fields",
        "// Append Predator Title + Headers",
        "Append Human Activity Title + Headers",
        "// Append Additional Human Activity Headers",
        "if (submission.humanActivityAdditionalFieldValues) {",
        "csv += joinKeys(submission.humanActivityAdditionalFieldValues.toJSON());",
        "additionalString = joinValues(submission.humanActivityAdditionalFieldValues.toJSON());",
        "}",
        "// Append Human Activity Fields",
        "csv += '\\r\\n';",
        "csv += joinValues(submission.humanActivityEntries.toJSON());",
        "// Append Additional Human Activity Fields",
        "csv += additionalString;",
        "res.status(200).send('good');"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}