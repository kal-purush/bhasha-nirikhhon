{
    "identifiers": [
        "csv",
        "os",
        "turtle",
        "clear",
        "os",
        "path",
        "join",
        "path",
        "os",
        "path",
        "join",
        "path",
        "open",
        "file_to_load",
        "election_data",
        "csv",
        "reader",
        "election_data",
        "next",
        "reader",
        "row",
        "reader",
        "total_votes",
        "row",
        "row",
        "candidate_name",
        "candidate_options",
        "candidate_options",
        "append",
        "candidate_name",
        "candidate_votes",
        "candidate_name",
        "county_name",
        "county_list",
        "county_list",
        "append",
        "county_name",
        "county_votes",
        "county_name",
        "open",
        "file_to_save",
        "txt_file",
        "total_votes",
        "election_results",
        "end",
        "txt_file",
        "write",
        "election_results",
        "county",
        "county_list",
        "county_votes",
        "get",
        "county",
        "county_vote",
        "total_votes",
        "county",
        "county_vote_percentage",
        "county_vote",
        "county_results",
        "txt_file",
        "write",
        "county_results",
        "county_vote",
        "largest_county_turnout_count",
        "county_vote_percentage",
        "largest_county_percentage",
        "county_vote",
        "county_vote_percentage",
        "county",
        "largest_county_turnout",
        "winning_county_print",
        "txt_file",
        "write",
        "winning_county_print",
        "candidate_name",
        "candidate_votes",
        "candidate_votes",
        "get",
        "candidate_name",
        "votes",
        "total_votes",
        "candidate_name",
        "vote_percentage",
        "votes",
        "candidate_results",
        "txt_file",
        "write",
        "candidate_results",
        "votes",
        "winning_count",
        "vote_percentage",
        "winning_percentage",
        "votes",
        "candidate_name",
        "vote_percentage",
        "winning_candidate",
        "winning_count",
        "winning_percentage",
        "winning_candidate_summary",
        "txt_file",
        "write",
        "winning_candidate_summary"
    ],
    "literals": [
        "'C:\\\\Users\\\\zheng\\\\OneDrive\\\\Desktop\\\\C3'",
        "\"Resources\"",
        "\"election_results.csv\"",
        "\"analysis\"",
        "\"election_analysis.txt\"",
        "\"\"",
        "\"\"",
        "\"w\"",
        "f\"\\nElection Results\\n\"",
        "f\"-------------------------\\n\"",
        "f\"Total Votes: {total_votes:,}\\n\"",
        "f\"-------------------------\\n\\n\"",
        "f\"County Votes:\\n\"",
        "\"\"",
        "f\"{county}: {county_vote_percentage:.1f}% ({county_vote:,})\\n\"",
        "f\"-------------------------\\n\"",
        "f\"Largest County Turnout: {largest_county_turnout}\\n\"",
        "f\"-------------------------\\n\"",
        "f\"{candidate_name}: {vote_percentage:.1f}% ({votes:,})\\n\"",
        "f\"-------------------------\\n\"",
        "f\"Winner: {winning_candidate}\\n\"",
        "f\"Winning Vote Count: {winning_count:,}\\n\"",
        "f\"Winning Percentage: {winning_percentage:.1f}%\\n\"",
        "f\"-------------------------\\n\""
    ],
    "variables": [
        "path",
        "file_to_load",
        "file_to_save",
        "total_votes",
        "candidate_options",
        "candidate_votes",
        "county_list",
        "county_votes",
        "winning_candidate",
        "winning_count",
        "winning_percentage",
        "largest_county_turnout",
        "largest_county_turnout_count",
        "largest_county_percentage",
        "reader",
        "header",
        "total_votes",
        "candidate_name",
        "county_name",
        "candidate_votes",
        "candidate_name",
        "county_votes",
        "county_name",
        "election_results",
        "county_vote",
        "county_vote_percentage",
        "county_results",
        "largest_county_turnout_count",
        "largest_county_percentage",
        "largest_county_turnout",
        "winning_county_print",
        "votes",
        "vote_percentage",
        "candidate_results",
        "winning_count",
        "winning_candidate",
        "winning_percentage",
        "winning_candidate_summary"
    ],
    "comments": [
        "-*- coding: UTF-8 -*-",
        "Add our dependencies.",
        "Add a variable to load a file from a path.",
        "Add a variable to save the file to a path.",
        "Initialize a total vote counter.",
        "Candidate Options and candidate votes.",
        "1: Create a county list and county votes dictionary.",
        "Track the winning candidate, vote count and percentage",
        "2: Track the largest county and county voter turnout.",
        "'C:\\\\Users\\\\zheng\\\\OneDrive\\\\Desktop\\\\C3\\\\Resources\\\\election_results.csv'",
        "Read the csv and convert it into a list of dictionaries",
        "Read the header",
        "For each row in the CSV file.",
        "Add to the total vote count",
        "Get the candidate name from each row.",
        "3: Extract the county name from each row.",
        "If the candidate does not match any existing candidate add it to",
        "the candidate list",
        "Add the candidate name to the candidate list.",
        "And begin tracking that candidate's voter count.",
        "Add a vote to that candidate's count",
        "4a: Write an if statement that checks that the",
        "county does not match any existing county in the county list.",
        "4b: Add the existing county to the list of counties.",
        "4c: Begin tracking the county's vote count.",
        "5: Add a vote to that county's vote count.",
        "Save the results to our text file.",
        "'C:\\\\Users\\\\zheng\\\\OneDrive\\\\Desktop\\\\C3\\\\analysis\\\\election_analysis.txt'",
        "Print the final vote count (to terminal)",
        "6a: Write a for loop to get the county from the county dictionary.",
        "6b: Retrieve the county vote count.",
        "6c: Calculate the percentage of votes for the county.",
        "6d: Print the county results to the terminal.",
        "6e: Save the county votes to a text file.",
        "6f: Write an if statement to determine the winning county and get its vote count.",
        "True",
        "7: Print the county with the largest turnout to the terminal.",
        "8: Save the county with the largest turnout to a text file.",
        "Save the final candidate vote count to the text file.",
        "Retrieve vote count and percentage",
        "Print each candidate's voter count and percentage to the",
        "terminal.",
        "Save the candidate results to our text file.",
        "Determine winning vote count, winning percentage, and candidate.",
        "Print the winning candidate (to terminal)",
        "Save the winning candidate's name to the text file"
    ],
    "docstrings": [
        "\"\"\"PyPoll Homework Challenge Solution.\"\"\""
    ],
    "functions": [],
    "classes": []
}