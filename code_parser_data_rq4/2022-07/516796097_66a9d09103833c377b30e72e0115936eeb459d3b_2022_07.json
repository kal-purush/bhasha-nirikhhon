{
    "identifiers": [
        "sys",
        "time",
        "threading",
        "multiprocessing",
        "cv2",
        "pygrabber",
        "dshow_graph",
        "FilterGraph",
        "argparse",
        "sounddevice",
        "sd",
        "numpy",
        "numpy",
        "camera",
        "camera",
        "release",
        "cv2",
        "destroyAllWindows",
        "FilterGraph",
        "graph",
        "get_input_devices",
        "index",
        "ValueError",
        "e",
        "e",
        "cv2",
        "VideoCapture",
        "device",
        "cv2",
        "VideoCapture",
        "device",
        "vid",
        "cv2",
        "CAP_PROP_FOURCC",
        "cv2",
        "VideoWriter_fourcc",
        "vid",
        "cv2",
        "CAP_PROP_FRAME_WIDTH",
        "vid",
        "cv2",
        "CAP_PROP_FRAME_HEIGHT",
        "vid",
        "cv2",
        "CAP_PROP_SATURATION",
        "vid",
        "text",
        "text",
        "ValueError",
        "text",
        "argparse",
        "ArgumentParser",
        "add_help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_known_args",
        "args",
        "list_devices",
        "sd",
        "query_devices",
        "parser",
        "exit",
        "argparse",
        "ArgumentParser",
        "description",
        "__doc__",
        "formatter_class",
        "argparse",
        "RawDescriptionHelpFormatter",
        "parents",
        "parser",
        "parser",
        "add_argument",
        "int_or_str",
        "help",
        "parser",
        "add_argument",
        "int_or_str",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "remaining",
        "indata",
        "outdata",
        "frames",
        "time",
        "status",
        "status",
        "status",
        "indata",
        "sd",
        "Stream",
        "device",
        "args",
        "output_device",
        "samplerate",
        "args",
        "samplerate",
        "blocksize",
        "args",
        "blocksize",
        "dtype",
        "args",
        "dtype",
        "latency",
        "args",
        "latency",
        "channels",
        "args",
        "channels",
        "callback",
        "callback",
        "open",
        "input",
        "s",
        "KeyboardInterrupt",
        "parser",
        "exit",
        "e",
        "parser",
        "exit",
        "e",
        "e",
        "audio",
        "grab_devices",
        "camera",
        "isOpened",
        "camera_loaded",
        "quit",
        "camera_loaded",
        "camera",
        "read",
        "cv2",
        "namedWindow",
        "cv2",
        "WINDOW_FULLSCREEN",
        "cv2",
        "imshow",
        "frame",
        "cv2",
        "waitKey",
        "audio",
        "terminate",
        "clear_cam",
        "camera",
        "multiprocessing",
        "Process",
        "target",
        "audio",
        "x",
        "start",
        "time",
        "sleep",
        "video",
        "x"
    ],
    "literals": [
        "\"USB Video\"",
        "'M'",
        "'J'",
        "'P'",
        "'G'",
        "\"Starting audio...\"",
        "'-l'",
        "'--list-devices'",
        "'store_true'",
        "'show list of audio devices and exit'",
        "'-i'",
        "'--input-device'",
        "'input device (numeric ID or substring)'",
        "'-o'",
        "'--output-device'",
        "'output device (numeric ID or substring)'",
        "'-c'",
        "'--channels'",
        "'number of channels'",
        "'--dtype'",
        "'audio data type'",
        "'--samplerate'",
        "'sampling rate'",
        "'--blocksize'",
        "'block size'",
        "'--latency'",
        "'latency in seconds'",
        "\"Audio playing!\"",
        "''",
        "': '",
        "\"Starting video...\"",
        "\"Error opening video stream or file\"",
        "\"Video playing!\"",
        "f\"Bane's HDMI + Audio Display\"",
        "f\"Bane's HDMI + Audio Display\"",
        "'__main__'"
    ],
    "variables": [
        "graph",
        "device",
        "vid",
        "vid",
        "parser",
        "args",
        "remaining",
        "parser",
        "args",
        "outdata",
        "sys",
        "stdin",
        "s",
        "camera",
        "camera_loaded",
        "ret",
        "frame",
        "x"
    ],
    "comments": [
        "Make sure NumPy is loaded before it is used in the callback",
        "avoid \"imported but unused\" message (W0611)",
        "print(graph.get_input_devices())  # list of camera device",
        "vid = cv2.VideoCapture(device + cv2.CAP_DSHOW)",
        "depends on fourcc available camera",
        "vid.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)",
        "vid.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)",
        "vid.set(cv2.CAP_PROP_FPS, 60)",
        "print(sd.query_devices())",
        "While we definitely totally 100% have a camera feed",
        "frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)",
        "# contrast = 1",
        "# brightness = 100",
        "# frame[:, :, 2] = 20",
        "# print(frame[:, :, 1])",
        "frame = cv2.cvtColor(frame, cv2.COLOR_HSV2BGR)",
        "cv2.normalize(frame, frame, 0, 255, cv2.NORM_MINMAX)",
        "cv2.resizeWindow(f\"Bane's HDMI + Audio Display\", 1920, 1080)",
        "If Esc is pressed, break the loop",
        "Clear and release the camera"
    ],
    "docstrings": [
        "\"\"\"Helper function for argument parsing.\"\"\""
    ],
    "functions": [
        "clear_cam",
        "grab_devices",
        "audio",
        "int_or_str",
        "callback",
        "video"
    ],
    "classes": []
}