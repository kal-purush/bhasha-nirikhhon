{
    "identifiers": [
        "sys",
        "packaging",
        "version",
        "elftools",
        "elftools",
        "elf",
        "elffile",
        "ELFFile",
        "elftools",
        "elf",
        "sections",
        "SymbolTableSection",
        "version",
        "parse",
        "elftools",
        "__version__",
        "version",
        "parse",
        "sys",
        "exit",
        "elf",
        "sym",
        "elf",
        "sym",
        "elf",
        "symbol_data",
        "sym",
        "offset",
        "elf",
        "native_struct_format",
        "unpack",
        "format",
        "data",
        "offset",
        "offset",
        "size",
        "_Symbol",
        "elf",
        "sym",
        "elf",
        "sym",
        "_data_native_read",
        "elf",
        "ld_consts",
        "property",
        "flags",
        "elf",
        "ld_consts",
        "_Symbol",
        "elf",
        "sym",
        "elf",
        "sym",
        "elf",
        "little_endian",
        "format",
        "format",
        "len",
        "data",
        "unpack",
        "format",
        "data",
        "idx",
        "val",
        "_ordinals",
        "val",
        "DEVICE_HANDLE_SEP",
        "_ordinals_split",
        "append",
        "_ordinals",
        "prev",
        "idx",
        "idx",
        "_ordinals_split",
        "append",
        "_ordinals",
        "prev",
        "property",
        "_ordinals",
        "property",
        "_ordinals_split",
        "_Symbol",
        "elf",
        "sym",
        "elf",
        "sym",
        "elf",
        "ld_consts",
        "_data_native_read",
        "ordinal_offset",
        "elf",
        "ld_consts",
        "elf",
        "ld_consts",
        "_data_native_read",
        "pm_offset",
        "property",
        "ordinals",
        "self_ordinal",
        "kernel",
        "edt",
        "device_start_symbol",
        "ELFFile",
        "open",
        "kernel",
        "edt",
        "_symbols_find_value",
        "device_start_symbol",
        "Device",
        "required_ld_consts",
        "DevicePM",
        "required_ld_consts",
        "_device_parse_and_link",
        "property",
        "elf",
        "little_endian",
        "property",
        "little_endian",
        "elf",
        "elfclass",
        "format",
        "format",
        "format",
        "size",
        "sym",
        "sym",
        "entry",
        "st_value",
        "sym",
        "entry",
        "st_size",
        "section",
        "elf",
        "iter_sections",
        "section",
        "start",
        "section",
        "start",
        "addr",
        "addr",
        "len",
        "end",
        "addr",
        "section",
        "section",
        "data",
        "offset",
        "offset",
        "len",
        "names",
        "section",
        "elf",
        "iter_sections",
        "isinstance",
        "section",
        "SymbolTableSection",
        "sym",
        "section",
        "iter_symbols",
        "sym",
        "name",
        "names",
        "sym",
        "name",
        "sym",
        "entry",
        "st_value",
        "symbols",
        "prefix",
        "cb",
        "section",
        "elf",
        "iter_sections",
        "isinstance",
        "section",
        "SymbolTableSection",
        "sym",
        "section",
        "iter_symbols",
        "sym",
        "entry",
        "st_info",
        "sym",
        "name",
        "startswith",
        "prefix",
        "cb",
        "sym",
        "devices",
        "edt",
        "dep_ord2node",
        "ord",
        "dev",
        "devices",
        "items",
        "edt",
        "dep_ord2node",
        "ord",
        "n",
        "depends_on",
        "len",
        "deps",
        "deps",
        "pop",
        "dn",
        "dep_ordinal",
        "devices",
        "dev",
        "devs_depends_on",
        "add",
        "devices",
        "dn",
        "dep_ordinal",
        "dn",
        "root",
        "ddn",
        "dn",
        "depends_on",
        "deps",
        "add",
        "ddn",
        "n",
        "required_by",
        "len",
        "sups",
        "sups",
        "pop",
        "sn",
        "dep_ordinal",
        "devices",
        "dev",
        "devs_supports",
        "add",
        "devices",
        "sn",
        "dep_ordinal",
        "ssn",
        "sn",
        "required_by",
        "sups",
        "add",
        "ssn",
        "devices",
        "dev",
        "devices",
        "values",
        "dev",
        "ordinals",
        "ordinals",
        "inj",
        "injected",
        "inj",
        "devices",
        "dev",
        "devs_depends_on_injected",
        "add",
        "devices",
        "inj",
        "sym",
        "sym",
        "entry",
        "st_value",
        "DevicePM",
        "sym",
        "_object_find_named",
        "_on_pm",
        "sym",
        "sym",
        "entry",
        "st_value",
        "DeviceOrdinals",
        "sym",
        "_object_find_named",
        "_on_ordinal",
        "sym",
        "devices",
        "append",
        "Device",
        "sym",
        "_object_find_named",
        "_on_device",
        "sorted",
        "devices",
        "key",
        "k",
        "k",
        "sym",
        "entry",
        "st_value",
        "idx",
        "dev",
        "devices",
        "idx",
        "dev",
        "devices",
        "dev",
        "obj_pm",
        "pm_structs",
        "pm_structs",
        "dev",
        "obj_pm",
        "dev",
        "obj_ordinals",
        "ordinal_arrays",
        "ordinal_arrays",
        "dev",
        "obj_ordinals",
        "dev",
        "ordinal",
        "DeviceOrdinals",
        "DEVICE_HANDLE_NULL",
        "edt",
        "dep_ord2node",
        "dev",
        "ordinal",
        "d",
        "ordinal",
        "d",
        "d",
        "devices",
        "d",
        "edt_node",
        "_link_devices",
        "devices_by_ord",
        "_link_injected",
        "devices_by_ord"
    ],
    "literals": [
        "'0.24'",
        "\"pyelftools is out of date, need version 0.24 or later\"",
        "\"_PM_DEVICE_STRUCT_FLAGS_OFFSET\"",
        "\"_PM_DEVICE_FLAG_PD\"",
        "'_PM_DEVICE_STRUCT_FLAGS_OFFSET'",
        "\"_PM_DEVICE_FLAG_PD\"",
        "\"<\"",
        "\">\"",
        "\"{:d}h\"",
        "\"_DEVICE_STRUCT_HANDLES_OFFSET\"",
        "\"_DEVICE_STRUCT_PM_OFFSET\"",
        "'_DEVICE_STRUCT_HANDLES_OFFSET'",
        "'_DEVICE_STRUCT_PM_OFFSET'",
        "'_DEVICE_STRUCT_PM_OFFSET'",
        "\"rb\"",
        "\"<\"",
        "\">\"",
        "\"I\"",
        "\"Q\"",
        "'sh_addr'",
        "'sh_size'",
        "'sh_addr'",
        "'STT_OBJECT'",
        "'__pm_device_'",
        "'__devicehdl_'",
        "'__device_'"
    ],
    "variables": [
        "elf",
        "sym",
        "data",
        "format",
        "size",
        "required_ld_consts",
        "flags",
        "DEVICE_HANDLE_SEP",
        "DEVICE_HANDLE_ENDS",
        "DEVICE_HANDLE_NULL",
        "format",
        "_ordinals",
        "_ordinals_split",
        "prev",
        "prev",
        "required_ld_consts",
        "edt_node",
        "handle",
        "ordinals",
        "pm",
        "devs_depends_on",
        "devs_depends_on_injected",
        "devs_supports",
        "ordinal_offset",
        "obj_ordinals",
        "obj_pm",
        "pm_offset",
        "obj_pm",
        "elf",
        "edt",
        "devices",
        "ld_consts",
        "format",
        "size",
        "size",
        "addr",
        "len",
        "start",
        "end",
        "offset",
        "symbols",
        "symbols",
        "root",
        "n",
        "deps",
        "dn",
        "sups",
        "sn",
        "injected",
        "pm_structs",
        "pm_structs",
        "ordinal_arrays",
        "ordinal_arrays",
        "devices",
        "dev",
        "handle",
        "dev",
        "pm",
        "dev",
        "ordinals",
        "dev",
        "edt_node",
        "devices_by_ord"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "",
        "Copyright (c) 2022, CSIRO",
        "",
        "SPDX-License-Identifier: Apache-2.0",
        "Split ordinals on DEVICE_HANDLE_SEP",
        "Devicetree dependencies, injected dependencies, supported devices",
        "Point to the handles instance associated with the device;",
        "assigned by correlating the device struct handles pointer",
        "value with the addr of a Handles instance.",
        "Compute the dependency graph induced from the full graph restricted to the",
        "the nodes that exist in the application.  Note that the edges in the",
        "induced graph correspond to paths in the full graph.",
        "this is used",
        "forward the dependency up one level",
        "forward the support down one level",
        "Find all PM structs",
        "Find all ordinal arrays",
        "Find all device structs",
        "Sort the device array by address for handle calculation",
        "Assign handles to the devices",
        "Link devices structs with PM and ordinals",
        "Create mapping of ordinals to devices",
        "Link devices to each other based on the EDT tree",
        "Link injected devices to each other"
    ],
    "docstrings": [
        "\"\"\"\n    Parent class for objects derived from an elf symbol.\n    \"\"\"",
        "\"\"\"\n    Represents information about device PM capabilities.\n    \"\"\"",
        "\"\"\"\n    Represents information about device dependencies.\n    \"\"\"",
        "\"\"\"\n    Represents information about a device object and its references to other objects.\n    \"\"\"",
        "\"\"\"\n    Represents information about devices in an elf file.\n    \"\"\"",
        "\"\"\"\n        True if the elf file is for a little-endian architecture.\n        \"\"\"",
        "\"\"\"\n        Get the struct format specifier and byte size of the native machine type.\n        \"\"\"",
        "\"\"\"\n        Retrieve the raw bytes associated with a symbol from the elf file.\n        \"\"\""
    ],
    "functions": [
        "_data_native_read",
        "is_power_domain",
        "self_ordinal",
        "ordinals",
        "ordinal",
        "little_endian",
        "native_struct_format",
        "symbol_data",
        "_symbols_find_value",
        "_object_find_named",
        "_link_devices",
        "_link_injected",
        "_device_parse_and_link",
        "_on_pm",
        "_on_ordinal",
        "_on_device"
    ],
    "classes": [
        "_Symbol",
        "DevicePM",
        "DeviceOrdinals",
        "Device",
        "ZephyrElf"
    ]
}