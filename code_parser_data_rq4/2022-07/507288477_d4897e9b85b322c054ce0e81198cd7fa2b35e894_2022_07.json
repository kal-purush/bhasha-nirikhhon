{
    "identifiers": [
        "pytest",
        "django",
        "contrib",
        "auth",
        "models",
        "User",
        "django",
        "urls",
        "reverse",
        "rest_framework",
        "status",
        "django",
        "test",
        "client",
        "Client",
        "rest_framework",
        "test",
        "APITestCase",
        "random",
        "src",
        "dealership",
        "models",
        "Location",
        "src",
        "dealership",
        "serializers",
        "LocationSerializer",
        "pytest",
        "fixture",
        "Location",
        "objects",
        "create",
        "country",
        "city",
        "street",
        "home",
        "pytest",
        "mark",
        "django_db",
        "APITestCase",
        "classmethod",
        "cls",
        "User",
        "objects",
        "create_superuser",
        "username",
        "password",
        "client",
        "login",
        "username",
        "password",
        "reverse",
        "client",
        "get",
        "url",
        "response",
        "status_code",
        "status",
        "HTTP_200_OK",
        "pytest",
        "mark",
        "usefixtures",
        "reverse",
        "LocationSerializer",
        "Location",
        "objects",
        "all",
        "first",
        "data",
        "data",
        "client",
        "post",
        "url",
        "data",
        "data",
        "status",
        "response",
        "status_code",
        "status",
        "HTTP_201_CREATED",
        "response",
        "data",
        "data"
    ],
    "literals": [
        "'BMW'",
        "'asd'",
        "'RED'",
        "'testuser'",
        "'12345'",
        "'testuser'",
        "'12345'",
        "'locations-list'",
        "'test_data'",
        "'locations-list'",
        "'json'"
    ],
    "variables": [
        "cls",
        "user",
        "url",
        "response",
        "url",
        "data",
        "response"
    ],
    "comments": [
        "@pytest.mark.usefixtures()"
    ],
    "docstrings": [
        "\"\"\"Поднимает временные данные.\"\"\"",
        "\"\"\"GET запрос к списку машин.\"\"\"",
        "\"\"\"POST запрос к списку машин.\"\"\""
    ],
    "functions": [
        "test_data",
        "setUpTestData",
        "setUp",
        "test_get_cars_list",
        "test_post_cars_list"
    ],
    "classes": [
        "TestCars"
    ]
}