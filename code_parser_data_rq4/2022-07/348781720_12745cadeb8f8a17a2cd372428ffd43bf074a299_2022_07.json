{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Reflection",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Xunit",
        "OneOf",
        "SourceGenerator",
        "AnalyzerTests",
        "Fact",
        "AssertCorrectSourceCodeIsGeneratedWithNoDiagnostics",
        "Empty",
        "expectedCode",
        "Fact",
        "AssertCorrectSourceCodeIsGeneratedWithNoDiagnostics",
        "input",
        "expectedCode",
        "Fact",
        "AssertDiagnosticErrorIsReturned",
        "input",
        "GeneratorDiagnosticDescriptors",
        "TopLevelError",
        "Id",
        "Fact",
        "AssertDiagnosticErrorIsReturned",
        "input",
        "GeneratorDiagnosticDescriptors",
        "ClassIsNotPublic",
        "Id",
        "Fact",
        "AssertDiagnosticErrorIsReturned",
        "input",
        "GeneratorDiagnosticDescriptors",
        "ObjectIsOneOfType",
        "Id",
        "Fact",
        "AssertDiagnosticErrorIsReturned",
        "input",
        "GeneratorDiagnosticDescriptors",
        "WrongBaseType",
        "Id",
        "Fact",
        "AssertDiagnosticErrorIsReturned",
        "input",
        "GeneratorDiagnosticDescriptors",
        "UserDefinedConversionsToOrFromAnInterfaceAreNotAllowed",
        "Id",
        "inputSource",
        "expectedCode",
        "generatedFileName",
        "expectedCompilationFileCount",
        "CSharpSyntaxTree",
        "ParseText",
        "expectedCode",
        "CreateCompilation",
        "inputSource",
        "CSharpGeneratorDriver",
        "Create",
        "OneOfGenerator",
        "driver",
        "RunGeneratorsAndUpdateCompilation",
        "inputCompilation",
        "outputCompilation",
        "diagnostics",
        "Assert",
        "diagnostics",
        "IsEmpty",
        "Assert",
        "Equal",
        "expectedCompilationFileCount",
        "outputCompilation",
        "SyntaxTrees",
        "Count",
        "Assert",
        "Empty",
        "outputCompilation",
        "GetDiagnostics",
        "outputCompilation",
        "SyntaxTrees",
        "Single",
        "e",
        "FilePath",
        "Contains",
        "generatedFileName",
        "Assert",
        "parsedAttribute",
        "IsEquivalentTo",
        "compiledAttribute",
        "Assert",
        "outputCompilation",
        "GetDiagnostics",
        "IsEmpty",
        "inputSource",
        "diagnosticId",
        "CreateCompilation",
        "inputSource",
        "CSharpGeneratorDriver",
        "Create",
        "OneOfGenerator",
        "driver",
        "RunGeneratorsAndUpdateCompilation",
        "inputCompilation",
        "_",
        "diagnostics",
        "Assert",
        "Contains",
        "diagnostics",
        "d",
        "Id",
        "diagnosticId",
        "d",
        "Severity",
        "DiagnosticSeverity",
        "source",
        "MetadataReference",
        "MetadataReference",
        "CreateFromFile",
        "Binder",
        "GetTypeInfo",
        "Assembly",
        "Location",
        "MetadataReference",
        "CreateFromFile",
        "OneOfBase",
        "GetTypeInfo",
        "Assembly",
        "Location",
        "MetadataReference",
        "CreateFromFile",
        "AppDomain",
        "CurrentDomain",
        "GetAssemblies",
        "Single",
        "a",
        "GetName",
        "Name",
        "Location",
        "assembly",
        "Assembly",
        "GetEntryAssembly",
        "GetReferencedAssemblies",
        "references",
        "Add",
        "MetadataReference",
        "CreateFromFile",
        "Assembly",
        "Load",
        "assembly",
        "Location",
        "CSharpCompilation",
        "Create",
        "CSharpSyntaxTree",
        "ParseText",
        "source",
        "references",
        "CSharpCompilationOptions",
        "OutputKind",
        "DynamicallyLinkedLibrary"
    ],
    "literals": [
        "\"GenerateOneOfAttribute.g.cs\"",
        "\"Foo_StringOrNumber.g.cs\"",
        "\"netstandard\"",
        "\"compilation\""
    ],
    "variables": [
        "expectedCode",
        "input",
        "expectedCode",
        "input",
        "input",
        "input",
        "input",
        "input",
        "parsedAttribute",
        "inputCompilation",
        "GeneratorDriver",
        "driver",
        "compiledAttribute",
        "inputCompilation",
        "GeneratorDriver",
        "driver",
        "references"
    ],
    "comments": [
        "https://github.com/dotnet/roslyn/issues/49498#issuecomment-734452762"
    ],
    "docstrings": [],
    "functions": [
        "GenerateOneOfAttribute",
        "StringOrNumber",
        "Class_Must_Be_Top_Level",
        "Class_Must_Be_Public",
        "Cannot_Use_Generator_With_Object_type",
        "Class_Must_Be_Derived_From_OneOfBase",
        "User_Defined_Conversions_To_Or_From_An_Interface_Are_Not_Allowed",
        "AssertCorrectSourceCodeIsGeneratedWithNoDiagnostics",
        "AssertDiagnosticErrorIsReturned",
        "Compilation",
        "CreateCompilation"
    ],
    "classes": [
        "AnalyzerTests"
    ]
}