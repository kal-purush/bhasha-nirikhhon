{
    "identifiers": [
        "time",
        "os",
        "sys",
        "argparse",
        "pprint",
        "copy",
        "datetime",
        "numpy",
        "np",
        "torch",
        "torch",
        "nn",
        "concurrent",
        "futures",
        "futures",
        "act_group",
        "ActGroup",
        "BRActGroup",
        "create",
        "create_envs",
        "create_threads",
        "eval",
        "evaluate",
        "common_utils",
        "rela",
        "r2d2",
        "utils",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "nargs",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "parse_args",
        "args",
        "method",
        "args",
        "mode",
        "args",
        "torch",
        "backends",
        "cudnn",
        "parse_args",
        "os",
        "path",
        "exists",
        "args",
        "save_dir",
        "os",
        "makedirs",
        "args",
        "save_dir",
        "os",
        "path",
        "join",
        "args",
        "save_dir",
        "common_utils",
        "Logger",
        "logger_path",
        "common_utils",
        "TopkSaver",
        "args",
        "save_dir",
        "common_utils",
        "set_all_seeds",
        "args",
        "seed",
        "pprint",
        "pprint",
        "vars",
        "args",
        "utils",
        "generate_explore_eps",
        "args",
        "act_base_eps",
        "args",
        "act_eps_alpha",
        "args",
        "num_t",
        "np",
        "mean",
        "explore_eps",
        "explore_eps",
        "np",
        "mean",
        "explore_eps",
        "args",
        "boltzmann_act",
        "utils",
        "generate_log_uniform",
        "args",
        "max_t",
        "args",
        "min_t",
        "args",
        "num_t",
        "b",
        "b",
        "boltzmann_beta",
        "join",
        "b",
        "b",
        "boltzmann_beta",
        "np",
        "mean",
        "boltzmann_beta",
        "create_envs",
        "args",
        "num_thread",
        "args",
        "num_game_per_thread",
        "args",
        "seed",
        "args",
        "num_player",
        "args",
        "train_bomb",
        "args",
        "max_len",
        "r2d2",
        "R2D2Agent",
        "args",
        "method",
        "args",
        "multi_step",
        "args",
        "gamma",
        "args",
        "eta",
        "args",
        "train_device",
        "games",
        "feature_size",
        "args",
        "sad",
        "args",
        "rnn_hid_dim",
        "games",
        "num_action",
        "args",
        "net",
        "args",
        "num_lstm_layer",
        "args",
        "boltzmann_act",
        "agent",
        "sync_target_with_online",
        "args",
        "load_model",
        "args",
        "load_model",
        "args",
        "load_model",
        "utils",
        "load_weight",
        "agent",
        "online_net",
        "args",
        "load_model",
        "args",
        "train_device",
        "args",
        "clone_bot",
        "args",
        "clone_bot",
        "utils",
        "load_supervised_agent",
        "args",
        "clone_bot",
        "args",
        "train_device",
        "agent",
        "to",
        "args",
        "train_device",
        "torch",
        "optim",
        "Adam",
        "agent",
        "online_net",
        "parameters",
        "lr",
        "args",
        "lr",
        "eps",
        "args",
        "eps",
        "agent",
        "agent",
        "clone",
        "args",
        "train_device",
        "rela",
        "RNNPrioritizedReplay",
        "args",
        "replay_buffer_size",
        "args",
        "seed",
        "args",
        "priority_exponent",
        "args",
        "priority_weight",
        "args",
        "prefetch",
        "args",
        "coop_sync_freq",
        "futures",
        "ThreadPoolExecutor",
        "max_workers",
        "common_utils",
        "ModelCkpt",
        "args",
        "save_dir",
        "datetime",
        "datetime",
        "now",
        "save_ckpt",
        "prefix",
        "utils",
        "save_intermediate_model",
        "agent",
        "online_net",
        "state_dict",
        "save_ckpt",
        "args",
        "coop_agents",
        "coop_pth",
        "args",
        "coop_agents",
        "coop_ckpts",
        "append",
        "common_utils",
        "ModelCkpt",
        "coop_pth",
        "utils",
        "load_coop_agents",
        "coop_ckpts",
        "device",
        "args",
        "act_device",
        "agent",
        "args",
        "seed",
        "args",
        "num_thread",
        "args",
        "num_game_per_thread",
        "args",
        "num_player",
        "explore_eps",
        "boltzmann_t",
        "args",
        "method",
        "args",
        "sad",
        "args",
        "shuffle_color",
        "args",
        "hide_action",
        "replay_buffer",
        "args",
        "multi_step",
        "args",
        "max_len",
        "args",
        "gamma",
        "BRActGroup",
        "coop_agents",
        "args",
        "mode",
        "args",
        "mode",
        "coop_agents",
        "coop_agents",
        "act_group_cls",
        "act_group_args",
        "create_threads",
        "args",
        "num_thread",
        "args",
        "num_game_per_thread",
        "act_group",
        "actors",
        "games",
        "act_group",
        "start",
        "context",
        "start",
        "replay_buffer",
        "size",
        "args",
        "burn_in_frames",
        "replay_buffer",
        "size",
        "time",
        "sleep",
        "common_utils",
        "MultiCounter",
        "args",
        "save_dir",
        "utils",
        "Tachometer",
        "common_utils",
        "Stopwatch",
        "epoch",
        "args",
        "num_epoch",
        "epoch",
        "common_utils",
        "get_mem_usage",
        "tachometer",
        "start",
        "stat",
        "reset",
        "stopwatch",
        "reset",
        "batch_idx",
        "args",
        "epoch_len",
        "batch_idx",
        "epoch",
        "args",
        "epoch_len",
        "num_update",
        "args",
        "num_update_between_sync",
        "agent",
        "sync_target_with_online",
        "num_update",
        "args",
        "actor_sync_freq",
        "act_group",
        "update_model",
        "agent",
        "args",
        "coop_sync_freq",
        "num_update",
        "args",
        "coop_sync_freq",
        "num_update",
        "save_future",
        "save_future",
        "done",
        "sync_pool",
        "submit",
        "utils",
        "save_intermediate_model",
        "copy",
        "deepcopy",
        "agent",
        "online_net",
        "state_dict",
        "save_ckpt",
        "coop_agents",
        "coop_future",
        "coop_future",
        "done",
        "sync_pool",
        "submit",
        "utils",
        "update_intermediate_coop_agents",
        "coop_ckpts",
        "act_group",
        "num_update",
        "torch",
        "cuda",
        "synchronize",
        "stopwatch",
        "time",
        "replay_buffer",
        "sample",
        "args",
        "batchsize",
        "args",
        "train_device",
        "stopwatch",
        "time",
        "agent",
        "loss",
        "batch",
        "args",
        "aux_weight",
        "stat",
        "clone_bot",
        "args",
        "clone_weight",
        "agent",
        "behavior_clone_loss",
        "online_q",
        "batch",
        "args",
        "clone_t",
        "clone_bot",
        "stat",
        "loss",
        "bc_loss",
        "args",
        "clone_weight",
        "loss",
        "weight",
        "mean",
        "loss",
        "backward",
        "torch",
        "cuda",
        "synchronize",
        "stopwatch",
        "time",
        "torch",
        "nn",
        "utils",
        "clip_grad_norm_",
        "agent",
        "online_net",
        "parameters",
        "args",
        "grad_clip",
        "optim",
        "step",
        "optim",
        "zero_grad",
        "torch",
        "cuda",
        "synchronize",
        "stopwatch",
        "time",
        "replay_buffer",
        "update_priority",
        "priority",
        "stopwatch",
        "time",
        "stat",
        "feed",
        "loss",
        "detach",
        "item",
        "stat",
        "feed",
        "g_norm",
        "stat",
        "feed",
        "batch",
        "obs",
        "mean",
        "args",
        "num_player",
        "args",
        "method",
        "epoch",
        "tachometer",
        "lap",
        "replay_buffer",
        "args",
        "epoch_len",
        "args",
        "batchsize",
        "count_factor",
        "stopwatch",
        "summary",
        "stat",
        "summary",
        "epoch",
        "epoch",
        "eval_agent",
        "load_state_dict",
        "agent",
        "state_dict",
        "eval_agent",
        "_",
        "args",
        "num_player",
        "coop_agents",
        "utils",
        "load_coop_agents",
        "coop_ckpts",
        "overwrites",
        "device",
        "args",
        "train_device",
        "np",
        "random",
        "choice",
        "len",
        "coop_eval_agents",
        "args",
        "num_player",
        "replace",
        "eval_agent",
        "idx",
        "eval_idxs",
        "eval_agents",
        "append",
        "coop_eval_agents",
        "idx",
        "_",
        "evaluate",
        "eval_agents",
        "eval_seed",
        "args",
        "eval_bomb",
        "args",
        "sad",
        "args",
        "hide_action",
        "epoch",
        "epoch",
        "epoch",
        "saver",
        "save",
        "agent",
        "online_net",
        "state_dict",
        "score",
        "force_save_name",
        "force_save_name",
        "epoch",
        "score",
        "perfect",
        "model_saved",
        "clone_bot",
        "_",
        "evaluate",
        "clone_bot",
        "eval_agent",
        "_",
        "args",
        "num_player",
        "eval_seed",
        "args",
        "eval_bomb",
        "args",
        "sad",
        "args",
        "hide_action",
        "np",
        "mean",
        "score"
    ],
    "literals": [
        "\"train dqn on hanabi\"",
        "\"--save_dir\"",
        "\"exps/exp1\"",
        "\"--method\"",
        "\"vdn\"",
        "\"--mode\"",
        "\"selfplay\"",
        "\"--shuffle_color\"",
        "\"--aux_weight\"",
        "\"--boltzmann_act\"",
        "\"--min_t\"",
        "\"--max_t\"",
        "\"--num_t\"",
        "\"--hide_action\"",
        "\"--num_fict_sample\"",
        "\"--coop_agents\"",
        "\"+\"",
        "\"--coop_sync_freq\"",
        "\"--load_model\"",
        "\"\"",
        "\"--clone_bot\"",
        "\"\"",
        "\"behavior clone loss\"",
        "\"--clone_weight\"",
        "\"--clone_t\"",
        "\"--seed\"",
        "\"--gamma\"",
        "\"discount factor\"",
        "\"--eta\"",
        "\"eta for aggregate priority\"",
        "\"--train_bomb\"",
        "\"--eval_bomb\"",
        "\"--sad\"",
        "\"--num_player\"",
        "\"--lr\"",
        "\"Learning rate\"",
        "\"--eps\"",
        "\"Adam epsilon\"",
        "\"--grad_clip\"",
        "\"max grad norm\"",
        "\"--num_lstm_layer\"",
        "\"--rnn_hid_dim\"",
        "\"--net\"",
        "\"publ-lstm\"",
        "\"publ-lstm/ffwd/lstm\"",
        "\"--train_device\"",
        "\"cuda:0\"",
        "\"--batchsize\"",
        "\"--num_epoch\"",
        "\"--epoch_len\"",
        "\"--num_update_between_sync\"",
        "\"--multi_step\"",
        "\"--burn_in_frames\"",
        "\"--replay_buffer_size\"",
        "\"--priority_exponent\"",
        "\"alpha in p-replay\"",
        "\"--priority_weight\"",
        "\"beta in p-replay\"",
        "\"--max_len\"",
        "\"max seq len\"",
        "\"--prefetch\"",
        "\"#prefetch batch\"",
        "\"--num_thread\"",
        "\"#thread_loop\"",
        "\"--num_game_per_thread\"",
        "\"--act_base_eps\"",
        "\"--act_eps_alpha\"",
        "\"--act_device\"",
        "\"cuda:1\"",
        "\"--actor_sync_freq\"",
        "\"iql\"",
        "\"br\"",
        "\"klr\"",
        "\"__main__\"",
        "\"train.log\"",
        "\"explore eps:\"",
        "\"avg explore eps:\"",
        "\"boltzmann beta:\"",
        "\", \"",
        "\"%.2f\"",
        "\"avg boltzmann beta:\"",
        "\"no boltzmann\"",
        "\"vdn\"",
        "\"None\"",
        "\"*****loading pretrained model*****\"",
        "\"*****done*****\"",
        "\"None\"",
        "\"vdn\"",
        "\"boltzmann_act\"",
        "f\"{datetime.datetime.now()}, save the initial model to ckpt: {save_ckpt.prefix}\"",
        "\"cpu\"",
        "\"devices\"",
        "\"agent\"",
        "\"seed\"",
        "\"num_thread\"",
        "\"num_game_per_thread\"",
        "\"num_player\"",
        "\"explore_eps\"",
        "\"boltzmann_t\"",
        "\"method\"",
        "\"sad\"",
        "\"shuffle_color\"",
        "\"hide_action\"",
        "\"trinary\"",
        "\"replay_buffer\"",
        "\"multi_step\"",
        "\"max_len\"",
        "\"gamma\"",
        "\"klr\"",
        "\"klr\"",
        "\"Going to make BR act group for KLR level 1\"",
        "\"coop_agents\"",
        "\"warming up replay buffer:\"",
        "\"Success, Done\"",
        "\"=======================\"",
        "\"num_acts\"",
        "\"num_buffer\"",
        "\"beginning of epoch: \"",
        "f\">>>step {num_update}, sync models\"",
        "f\"<<<step {num_update}, sync done\"",
        "\"sync and updating\"",
        "\"sample data\"",
        "\"forward & backward\"",
        "\"update model\"",
        "\"updating priority\"",
        "\"loss\"",
        "\"grad_norm\"",
        "\"boltzmann_t\"",
        "\"temperature\"",
        "\"vdn\"",
        "\"EPOCH: %d\"",
        "\"vdn\"",
        "\"boltzmann_act\"",
        "\"model_epoch%d\"",
        "\"epoch %d, eval score: %.4f, perfect: %.2f, model saved: %s\"",
        "f\"clone bot score: {np.mean(score)}\"",
        "\"==========\""
    ],
    "variables": [
        "parser",
        "args",
        "benchmark",
        "args",
        "logger_path",
        "sys",
        "stdout",
        "saver",
        "explore_eps",
        "expected_eps",
        "boltzmann_beta",
        "boltzmann_t",
        "boltzmann_t",
        "games",
        "agent",
        "clone_bot",
        "clone_bot",
        "agent",
        "optim",
        "eval_agent",
        "replay_buffer",
        "sync_pool",
        "save_future",
        "coop_future",
        "save_ckpt",
        "coop_agents",
        "coop_eval_agents",
        "coop_ckpts",
        "coop_agents",
        "act_group_args",
        "act_group_cls",
        "act_group_args",
        "act_group",
        "context",
        "threads",
        "frame_stat",
        "frame_stat",
        "frame_stat",
        "stat",
        "tachometer",
        "stopwatch",
        "num_update",
        "save_future",
        "coop_future",
        "batch",
        "weight",
        "loss",
        "priority",
        "online_q",
        "bc_loss",
        "loss",
        "loss",
        "g_norm",
        "count_factor",
        "eval_seed",
        "eval_agents",
        "coop_eval_agents",
        "eval_idxs",
        "eval_agents",
        "score",
        "perfect",
        "force_save_name",
        "force_save_name",
        "model_saved",
        "score",
        "perfect"
    ],
    "comments": [
        "Copyright (c) Facebook, Inc. and its affiliates.",
        "All rights reserved.",
        "",
        "This source code is licensed under the license found in the",
        "LICENSE file in the root directory of this source tree.",
        "",
        "All rights reserved.",
        "",
        "This source code is licensed under the license found in the",
        "LICENSE file in the root directory of this source tree.",
        "",
        "optimization/training settings",
        "DQN settings",
        "replay buffer settings",
        "thread setting",
        "actor setting",
        "uniform priority",
        "off belief not supported for best response",
        "use clone bot for additional bc loss",
        "trinary, 3 bits for aux task",
        "explore eps",
        "explore eps"
    ],
    "docstrings": [],
    "functions": [
        "parse_args"
    ],
    "classes": []
}