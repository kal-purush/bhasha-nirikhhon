{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "Reflection",
        "Runtime",
        "InteropServices",
        "Text",
        "IniParser",
        "Assembly",
        "GetExecutingAssembly",
        "GetName",
        "Name",
        "DllImport",
        "CharSet",
        "CharSet",
        "Unicode",
        "section",
        "key",
        "value",
        "filePath",
        "DllImport",
        "CharSet",
        "CharSet",
        "Unicode",
        "section",
        "key",
        "_default",
        "StringBuilder",
        "output",
        "size",
        "filePath",
        "DllImport",
        "CharSet",
        "CharSet",
        "Unicode",
        "section",
        "returnBuffe",
        "size",
        "fileName",
        "iniPath",
        "File",
        "Exists",
        "iniPath",
        "m_EXE",
        "m_filePath",
        "FileInfo",
        "iniPath",
        "m_EXE",
        "FullName",
        "ToString",
        "m_filePath",
        "FileInfo",
        "iniPath",
        "m_EXE",
        "FullName",
        "ToString",
        "key",
        "section",
        "StringBuilder",
        "GetPrivateProfileString",
        "section",
        "m_EXE",
        "key",
        "output",
        "m_filePath",
        "output",
        "ToString",
        "key",
        "section",
        "StringBuilder",
        "GetPrivateProfileString",
        "section",
        "m_EXE",
        "key",
        "output",
        "m_filePath",
        "Int32",
        "Parse",
        "output",
        "ToString",
        "key",
        "section",
        "StringBuilder",
        "GetPrivateProfileString",
        "section",
        "m_EXE",
        "key",
        "output",
        "m_filePath",
        "output",
        "ToString",
        "Split",
        "Int32",
        "Parse",
        "strings",
        "Int32",
        "Parse",
        "strings",
        "key",
        "value",
        "section",
        "WritePrivateProfileString",
        "section",
        "m_EXE",
        "key",
        "value",
        "m_filePath",
        "key",
        "section",
        "Write",
        "key",
        "section",
        "m_EXE",
        "section",
        "Write",
        "section",
        "m_EXE",
        "key",
        "section",
        "Read",
        "key",
        "section",
        "Length",
        "message",
        "key",
        "section",
        "WritePrivateProfileString",
        "section",
        "m_EXE",
        "key",
        "message",
        "m_filePath",
        "section",
        "GetPrivateProfileSection",
        "section",
        "m_EXE",
        "buffer",
        "m_filePath",
        "Encoding",
        "Unicode",
        "GetString",
        "buffer",
        "Trim",
        "Split",
        "s",
        "temp",
        "output",
        "Add",
        "s",
        "output"
    ],
    "literals": [
        "\"kernel32\"",
        "\"kernel32\"",
        "\"kernel32\"",
        "\".ini\"",
        "\".ini\"",
        "\".ini\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\";\"",
        "\"\""
    ],
    "variables": [
        "m_filePath",
        "m_EXE",
        "output",
        "output",
        "output",
        "strings",
        "buffer",
        "temp",
        "output"
    ],
    "comments": [
        "https://stackoverflow.com/questions/217902/reading-writing-an-ini-file",
        "This class is used to read / write a .ini configuration file. The file will contain the following:",
        "Fronend config: Size and location sof controls. Color and image settings for custom images.",
        "Backend config: Detected platforms will be checked and updated each time the program is executed.",
        "</summary>",
        "file path",
        "file name",
        "Constructor: Open .ini file. If file doesn't exist, create new and set default settings. Update installed platforms",
        "</summary>",
        "<param name=\"iniPath\">File name/path. If null, create in .exe directory with name of .exe file</param>",
        "Read key and return value",
        "</summary>",
        "<param name=\"key\">Target key</param>",
        "<param name=\"section\">Section to look in. If null, it will look in default section [GLC]</param>",
        "<returns>Value as a string</returns>",
        "Read key and return value",
        "</summary>",
        "<param name=\"key\">Target key</param>",
        "<param name=\"section\">ection to look in. If null, it will look in default section [GLC]</param>",
        "<returns>Value as an int</returns>",
        "Read key and return values.",
        "</summary>",
        "<param name=\"key\">Target key</param>",
        "<param name=\"section\">Section to look in. If null, it will look in default section [GLC]</param>",
        "<returns>Values an an array of strings</returns>",
        "Write to .ini file",
        "</summary>",
        "<param name=\"key\">Key to add/append</param>",
        "<param name=\"value\">Value to add/append</param>",
        "<param name=\"section\">Section to write in. If null, it will write in the default section [GLC]</param>",
        "Delete key from .ini file",
        "</summary>",
        "<param name=\"key\">Key to delete</param>",
        "<param name=\"section\">Section to look in. If null, it will look in default section [GLC]</param>",
        "Delete section from .ini file",
        "</summary>",
        "<param name=\"section\">Section to delete. If null, it will delete the default section [GLC]</param>",
        "TO update icon sizes to match any resolution",
        "Check if key exists",
        "</summary>",
        "<param name=\"key\">Target key</param>",
        "<param name=\"section\">Section to look in. If null, it will look in default section [GLC]</param>",
        "<returns>Boolean. True if key exists</returns>",
        "Insert a comment into the specified file section",
        "</summary>",
        "<param name=\"message\">Comment message</param>",
        "<param name=\"key\">Key associated with the comment</param>",
        "<param name=\"section\">Section associated with the comment</param>",
        "Read and return section block",
        "</summary>",
        "<param name=\"section\">Section to read. If null, default section will be read [GLC]</param>",
        "<returns>List of values in the section</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "WritePrivateProfileString",
        "GetPrivateProfileString",
        "GetPrivateProfileSection",
        "CIniParser",
        "Read",
        "ReadAsNumber",
        "ReadAsArray",
        "Write",
        "DeleteKey",
        "DeleteSection",
        "KeyExists",
        "WriteComment",
        "ReadSection"
    ],
    "classes": [
        "CIniParser"
    ]
}