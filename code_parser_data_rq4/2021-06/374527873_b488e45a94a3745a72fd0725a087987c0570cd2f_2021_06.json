{
    "identifiers": [
        "sys",
        "len",
        "sys",
        "argv",
        "sys",
        "exit",
        "open",
        "sys",
        "argv",
        "f",
        "readline",
        "graph",
        "line",
        "f",
        "line",
        "split",
        "graph",
        "append",
        "row_nodes",
        "nodes_in_next_layer",
        "inputfilename",
        "nodes_in_next_layer",
        "graph",
        "i",
        "grid_size",
        "j",
        "grid_size",
        "row",
        "append",
        "visited",
        "append",
        "row",
        "step_size",
        "curr_path",
        "append",
        "start",
        "visited",
        "start",
        "start",
        "append",
        "step_size",
        "len",
        "curr_path",
        "curr_path",
        "pop",
        "graph",
        "r",
        "r",
        "get_destinations",
        "r",
        "r",
        "graph",
        "visited",
        "curr_path",
        "parents",
        "nodes_left_in_layer",
        "nodes_left_in_layer",
        "nodes_in_next_layer",
        "move_count",
        "reached_goal",
        "move_count",
        "r",
        "r",
        "r",
        "i",
        "move_count",
        "final_path",
        "insert",
        "curr_node",
        "parents",
        "curr_node",
        "final_path",
        "insert",
        "start",
        "i",
        "move_count",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "final_path",
        "i",
        "directional_path",
        "append",
        "final_path",
        "i",
        "directional_path",
        "node",
        "step_size",
        "graph",
        "visited",
        "curr_path",
        "parents",
        "nodes_in_next_layer",
        "graph",
        "node",
        "node",
        "split",
        "directions",
        "step_size",
        "directions",
        "step_size",
        "direction",
        "directions",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "direction",
        "node",
        "node",
        "step_size",
        "step_size",
        "direction",
        "node",
        "node",
        "step_size",
        "step_size",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "step_size",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "step_size",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "step_size",
        "direction",
        "node",
        "step_size",
        "node",
        "step_size",
        "step_size",
        "step_size",
        "destination",
        "destination",
        "grid_size",
        "destination",
        "destination",
        "grid_size",
        "step_size",
        "visited",
        "destination",
        "destination",
        "curr_path",
        "append",
        "destination",
        "node",
        "visited",
        "destination",
        "destination",
        "append",
        "step_size",
        "nodes_in_next_layer",
        "solve_maze",
        "sys",
        "argv",
        "solve_maze",
        "sys",
        "argv"
    ],
    "literals": [
        "\"Usage: python3 Alice.py <inputfilename>\"",
        "\"G\"",
        "\"S\"",
        "\"N\"",
        "\"E\"",
        "\"W\"",
        "\"SE\"",
        "\"SW\"",
        "\"NE\"",
        "\"NW\"",
        "\"-\"",
        "\"N\"",
        "\"S\"",
        "\"E\"",
        "\"W\"",
        "\"NW\"",
        "\"NE\"",
        "\"SW\"",
        "\"SE\"",
        "'__main__'"
    ],
    "variables": [
        "f",
        "grid_size",
        "graph",
        "row_nodes",
        "nodes_in_next_layer",
        "nodes_left_in_layer",
        "move_count",
        "curr_path",
        "parents",
        "reached_goal",
        "visited",
        "row",
        "step_size",
        "start",
        "r",
        "reached_goal",
        "nodes_left_in_layer",
        "nodes_left_in_layer",
        "nodes_in_next_layer",
        "move_count",
        "final_path",
        "curr_node",
        "curr_node",
        "directional_path",
        "directions",
        "step_size",
        "step_size",
        "destination",
        "destination",
        "destination",
        "destination",
        "destination",
        "destination",
        "destination",
        "destination",
        "destination",
        "parents",
        "destination",
        "nodes_in_next_layer"
    ],
    "comments": [
        "Here is how you open a file whose name is given as the first argument",
        "Read in size of grid.",
        "Initialize a matrix to keep track of visited nodes with step sizes.",
        "print(parents[curr_node])",
        "print(visited)",
        "Press the green button in the gutter to run the script.",
        "See PyCharm help at https://www.jetbrains.com/help/pycharm/"
    ],
    "docstrings": [],
    "functions": [
        "solve_maze",
        "get_destinations"
    ],
    "classes": []
}