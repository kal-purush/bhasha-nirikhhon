{
    "identifiers": [
        "os",
        "argparse",
        "concurrent",
        "futures",
        "os",
        "re",
        "sys",
        "boto3",
        "botocore",
        "tqdm",
        "filepath",
        "os",
        "listdir",
        "filepath",
        "FILES",
        "image",
        "re",
        "match",
        "REGEX",
        "image",
        "groups",
        "split",
        "image_id",
        "image_list",
        "line_number",
        "image",
        "image_list",
        "check_and_homogenize_one_image",
        "image",
        "ValueError",
        "AttributeError",
        "ValueError",
        "line_number",
        "image",
        "image_list_file",
        "open",
        "image_list_file",
        "f",
        "line",
        "f",
        "line",
        "strip",
        "replace",
        "bucket",
        "split",
        "image_id",
        "download_folder",
        "bucket",
        "download_file",
        "split",
        "image_id",
        "os",
        "path",
        "join",
        "download_folder",
        "image_id",
        "botocore",
        "exceptions",
        "ClientError",
        "exception",
        "sys",
        "exit",
        "split",
        "image_id",
        "exception",
        "args",
        "boto3",
        "resource",
        "config",
        "botocore",
        "config",
        "Config",
        "signature_version",
        "botocore",
        "UNSIGNED",
        "Bucket",
        "BUCKET_NAME",
        "args",
        "os",
        "getcwd",
        "os",
        "path",
        "exists",
        "download_folder",
        "os",
        "makedirs",
        "download_folder",
        "check_and_homogenize_image_list",
        "read_image_list_file",
        "args",
        "ValueError",
        "exception",
        "sys",
        "exit",
        "exception",
        "tqdm",
        "tqdm",
        "total",
        "len",
        "image_list",
        "desc",
        "leave",
        "futures",
        "ThreadPoolExecutor",
        "max_workers",
        "args",
        "executor",
        "executor",
        "submit",
        "download_one_image",
        "bucket",
        "split",
        "image_id",
        "download_folder",
        "split",
        "image_id",
        "image_list",
        "future",
        "futures",
        "as_completed",
        "all_futures",
        "future",
        "result",
        "progress_bar",
        "update",
        "progress_bar",
        "close",
        "sys",
        "exit",
        "textwrap",
        "dedent",
        "modules",
        "parser",
        "modules",
        "utils",
        "modules",
        "downloader",
        "modules",
        "show",
        "modules",
        "csv_downloader",
        "modules",
        "bounding_boxes",
        "modules",
        "image_level",
        "os",
        "path",
        "join",
        "ROOT_DIR",
        "parser_arguments",
        "args",
        "command",
        "image_level",
        "args",
        "DEFAULT_OID_DIR",
        "bounding_boxes_images",
        "args",
        "DEFAULT_OID_DIR"
    ],
    "literals": [
        "'open-images-dataset'",
        "r'(test|train|validation|challenge2018)/([a-fA-F0-9]*)'",
        "f'ERROR in line {line_number} of the image list. The following image '",
        "f'string is not recognized: \"{image}\".'",
        "'r'",
        "'.jpg'",
        "''",
        "f'{split}/{image_id}.jpg'",
        "f'{image_id}.jpg'",
        "f'ERROR when downloading image `{split}/{image_id}`: {str(exception)}'",
        "'s3'",
        "'download_folder'",
        "'image_list'",
        "'Downloading images'",
        "'num_processes'",
        "''",
        "'OID'",
        "'__main__'",
        "'downloader_ill'"
    ],
    "variables": [
        "BUCKET_NAME",
        "REGEX",
        "FILES",
        "split",
        "image_id",
        "bucket",
        "download_folder",
        "image_list",
        "progress_bar",
        "all_futures",
        "ROOT_DIR",
        "DEFAULT_OID_DIR",
        "args"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Downloads all images specified in the input file.\"\"\"",
        "'''\nif __name__ == '__main__':\n    \n    type_split = \"validation\"\n\n    filepath = \"./OID/Dataset/\" + type_split + \"/Ball\"\n    FILES = get_images(filepath)\n    imagelistFname = './image_list_file.txt'\n    \n\n    tmp = []\n    with open(imagelistFname, 'w') as f:\n        for image_name in FILES:\n            if image_name != \"Label\":\n                tmp.append(type_split+ \"/\" + image_name)\n\n        FILES = tmp\n        f.write('\\n'.join(FILES))\n    \n\n    args = {'image_list': imagelistFname, 'num_processes': 20, 'download_folder': 'OID_ballPerson_' + type_split}\n\n    download_all_images(args)\n    '''"
    ],
    "functions": [
        "get_images",
        "check_and_homogenize_one_image",
        "check_and_homogenize_image_list",
        "read_image_list_file",
        "download_one_image",
        "download_all_images"
    ],
    "classes": []
}