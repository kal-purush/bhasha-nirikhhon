{
    "identifiers": [
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "cocode",
        "java",
        "util",
        "java",
        "util",
        "Comparator",
        "java",
        "util",
        "java",
        "util",
        "PriorityQueue",
        "java",
        "util",
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "CompressionSettings",
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "estim",
        "CompressedSizeEstimator",
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "estim",
        "CompressedSizeEstimatorSample",
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "estim",
        "CompressedSizeInfo",
        "org",
        "apache",
        "sysds",
        "runtime",
        "compress",
        "estim",
        "CompressedSizeInfoColGroup",
        "e",
        "cs",
        "e",
        "cs",
        "Override",
        "colInfos",
        "k",
        "joinRes",
        "join",
        "colInfos",
        "getInfo",
        "_cs",
        "samplingRatio",
        "_est",
        "LOG",
        "debug",
        "estS",
        "_est",
        "estS",
        "sampleData",
        "estS",
        "getSample",
        "getNumRows",
        "colG",
        "joinRes",
        "size",
        "g",
        "joinRes",
        "colG",
        "add",
        "g",
        "getColumns",
        "joinRes",
        "join",
        "estS",
        "computeCompressedSizeInfos",
        "colG",
        "k",
        "colInfos",
        "setInfo",
        "joinRes",
        "colInfos",
        "currentGroups",
        "que",
        "currentGroups",
        "size",
        "Override",
        "a",
        "b",
        "aNV",
        "a",
        "getNumVals",
        "bNV",
        "b",
        "getNumVals",
        "aNV",
        "bNV",
        "aNV",
        "bNV",
        "ret",
        "g",
        "currentGroups",
        "que",
        "add",
        "g",
        "currentCost",
        "getCost",
        "que",
        "ret",
        "que",
        "peek",
        "l",
        "que",
        "poll",
        "que",
        "peek",
        "r",
        "que",
        "poll",
        "g",
        "joinWithAnalysis",
        "l",
        "r",
        "newCost",
        "getCost",
        "que",
        "ret",
        "g",
        "newCost",
        "currentCost",
        "currentCost",
        "newCost",
        "que",
        "add",
        "g",
        "ret",
        "add",
        "l",
        "que",
        "add",
        "r",
        "ret",
        "add",
        "l",
        "g",
        "que",
        "ret",
        "add",
        "g",
        "ret",
        "que",
        "ret",
        "queValues",
        "que",
        "toArray",
        "que",
        "size",
        "getCost",
        "queValues",
        "ret",
        "que",
        "ret",
        "g",
        "queValues",
        "que",
        "toArray",
        "que",
        "size",
        "cost",
        "getCost",
        "queValues",
        "ret",
        "cost",
        "getCostOfSelfTSMM",
        "g",
        "i",
        "i",
        "queValues",
        "length",
        "i",
        "cost",
        "getCostOfLeftTransposedMM",
        "queValues",
        "i",
        "g",
        "i",
        "i",
        "ret",
        "size",
        "i",
        "cost",
        "getCostOfLeftTransposedMM",
        "ret",
        "get",
        "i",
        "g",
        "cost",
        "queValues",
        "ret",
        "cost",
        "i",
        "i",
        "queValues",
        "length",
        "i",
        "cost",
        "getCostOfSelfTSMM",
        "queValues",
        "i",
        "j",
        "i",
        "j",
        "queValues",
        "length",
        "j",
        "cost",
        "getCostOfLeftTransposedMM",
        "queValues",
        "i",
        "queValues",
        "j",
        "g",
        "ret",
        "cost",
        "getCostOfLeftTransposedMM",
        "queValues",
        "i",
        "g",
        "i",
        "i",
        "ret",
        "size",
        "i",
        "cost",
        "getCostOfSelfTSMM",
        "ret",
        "get",
        "i",
        "j",
        "i",
        "j",
        "ret",
        "size",
        "j",
        "cost",
        "getCostOfLeftTransposedMM",
        "ret",
        "get",
        "i",
        "ret",
        "get",
        "j",
        "cost",
        "g",
        "cost",
        "nCol",
        "g",
        "getColumns",
        "length",
        "cost",
        "g",
        "getNumVals",
        "nCol",
        "nCol",
        "cost",
        "gl",
        "gr",
        "nRows",
        "_est",
        "getNumRows",
        "nColsL",
        "gl",
        "getColumns",
        "length",
        "nColsR",
        "gl",
        "getColumns",
        "length",
        "preAggLeft",
        "nRows",
        "preAggRight",
        "nRows",
        "tsL",
        "gl",
        "getTupleSparsity",
        "tsR",
        "gr",
        "getTupleSparsity",
        "nvL",
        "gl",
        "getNumVals",
        "nvR",
        "gr",
        "getNumVals",
        "postScaleLeft",
        "nColsL",
        "tsL",
        "nvL",
        "nColsL",
        "nvL",
        "nColsL",
        "tsL",
        "postScaleRight",
        "nColsR",
        "tsR",
        "nvR",
        "nColsR",
        "nvR",
        "nColsR",
        "tsR",
        "costLeft",
        "preAggLeft",
        "postScaleLeft",
        "costRight",
        "preAggRight",
        "postScaleRight",
        "min",
        "costLeft",
        "costRight"
    ],
    "literals": [
        "\"Performing second join with double sample rate\""
    ],
    "variables": [],
    "comments": [
        "final double preAggLeft = (nRows / (1 - gl.getMostCommonFraction())) * nColsL;",
        "final double preAggRight = (nRows / (1 - gr.getMostCommonFraction())) * nColsR;",
        "final double tsL = 1;",
        "final double tsR = 1;"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License."
    ],
    "functions": [
        "CoCodeCostTSMM",
        "CompressedSizeInfo",
        "coCodeColumns",
        "join",
        "compare",
        "getCost",
        "getCost",
        "getCost",
        "getCostOfSelfTSMM",
        "getCostOfLeftTransposedMM"
    ],
    "classes": [
        "CoCodeCostTSMM"
    ]
}