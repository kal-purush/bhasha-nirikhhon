{
    "identifiers": [
        "NuGet",
        "Shared",
        "NuGet",
        "Frameworks",
        "NuGetFramework",
        "NuGetFramework",
        "framework",
        "NuGetFramework",
        "secondaryFramework",
        "ValidateFrameworkArgument",
        "framework",
        "secondaryFramework",
        "ArgumentNullException",
        "nameof",
        "secondaryFramework",
        "SecondaryFramework",
        "secondaryFramework",
        "RootFramework",
        "framework",
        "_fallbackFramework",
        "_fallbackFramework",
        "FallbackFramework",
        "RootFramework",
        "NuGetFramework",
        "SecondaryFramework",
        "_fallbackFramework",
        "NuGetFramework",
        "framework",
        "framework",
        "ArgumentNullException",
        "nameof",
        "framework",
        "framework",
        "obj",
        "Equals",
        "obj",
        "DualCompatibilityFramework",
        "DualCompatibilityFramework",
        "other",
        "other",
        "ReferenceEquals",
        "other",
        "Comparer",
        "Equals",
        "RootFramework",
        "other",
        "RootFramework",
        "Comparer",
        "Equals",
        "SecondaryFramework",
        "other",
        "SecondaryFramework",
        "_hashCode",
        "HashCodeCombiner",
        "combiner",
        "AddStringIgnoreCase",
        "nameof",
        "DualCompatibilityFramework",
        "combiner",
        "AddObject",
        "Comparer",
        "GetHashCode",
        "RootFramework",
        "combiner",
        "AddObject",
        "Comparer",
        "GetHashCode",
        "SecondaryFramework",
        "_hashCode",
        "combiner",
        "CombinedHash",
        "_hashCode",
        "Value"
    ],
    "literals": [],
    "variables": [
        "NuGetFramework",
        "RootFramework",
        "NuGetFramework",
        "SecondaryFramework",
        "_hashCode",
        "FallbackFramework",
        "_fallbackFramework",
        "combiner"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.",
        "Represents a framework that behaves as 2 potentially independent frameworks.",
        "Ex. C++/CLI can support both .NET 5.0 and native.",
        "This type is immutable.",
        "</summary>",
        "The root framework. Any compatibility checks should be performed against this framework first.",
        "</summary>",
        "The secondary framework. If the root framework compatibility checks fail, then the compat checks should be performed against this framework next.",
        "</summary>",
        "Multiple compatbility",
        "</summary>",
        "<param name=\"framework\">Root framework. Never <see langword=\"null\"/>. </param>",
        "<param name=\"secondaryFramework\">Secondary framework. Never <see langword=\"null\"/>. </param>",
        "<exception cref=\"ArgumentNullException\">if either <paramref name=\"framework\"/> or <paramref name=\"secondaryFramework\"/> are <see langword=\"null\"/>.</exception>",
        "Create a FallbackFramework from the current DualCompatibilityFramework.",
        "</summary>",
        "Ensure that this is different from AssetTargetFallback & FallbackFramework;"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "DualCompatibilityFramework",
        "FallbackFramework",
        "AsFallbackFramework",
        "NuGetFramework",
        "ValidateFrameworkArgument",
        "Equals",
        "Equals",
        "GetHashCode"
    ],
    "classes": [
        "DualCompatibilityFramework"
    ]
}