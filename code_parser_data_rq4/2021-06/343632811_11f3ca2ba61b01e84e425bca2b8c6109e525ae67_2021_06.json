{
    "identifiers": [
        "pytest",
        "mmdet",
        "models",
        "backbones",
        "DetectoRS_ResNet",
        "depth",
        "num_stages",
        "out_indices",
        "frozen_stages",
        "norm_cfg",
        "requires_grad",
        "norm_eval",
        "style",
        "conv_cfg",
        "sac",
        "use_deform",
        "stage_with_sac",
        "output_img",
        "pytest",
        "raises",
        "AssertionError",
        "DetectoRS_ResNet",
        "detectorrs_cfg",
        "pretrained",
        "init_cfg",
        "pytest",
        "raises",
        "AssertionError",
        "DetectoRS_ResNet",
        "detectorrs_cfg",
        "pretrained",
        "init_cfg",
        "pytest",
        "raises",
        "KeyError",
        "DetectoRS_ResNet",
        "detectorrs_cfg",
        "pretrained",
        "init_cfg",
        "checkpoint",
        "pytest",
        "raises",
        "AssertionError",
        "DetectoRS_ResNet",
        "detectorrs_cfg",
        "pretrained",
        "init_cfg",
        "pytest",
        "raises",
        "DetectoRS_ResNet",
        "detectorrs_cfg",
        "pretrained",
        "init_cfg",
        "model",
        "init_weights"
    ],
    "literals": [
        "'BN'",
        "'pytorch'",
        "'ConvAWS'",
        "'SAC'",
        "'Pretrained'",
        "'Pretrained'",
        "'Pretrained'",
        "'Pretrained'",
        "'Trained'",
        "'Pretrained'"
    ],
    "variables": [
        "detectorrs_cfg",
        "model"
    ],
    "comments": [
        "pretrained and init_cfg cannot be setting at the same time",
        "init_cfg must be a dict",
        "init_cfg must contain the key `type`",
        "init_cfg only support initialize pretrained model way",
        "pretrained mast be a str or None"
    ],
    "docstrings": [
        "\"\"\"Test init_weights config\"\"\""
    ],
    "functions": [
        "test_detectorrs_resnet_backbone"
    ],
    "classes": []
}