{
    "identifiers": [
        "vscode",
        "fs",
        "path",
        "RemoteRecordingClient",
        "isFileExists",
        "vscode",
        "vscode",
        "context",
        "vscode",
        "context",
        "vscode",
        "vscode",
        "RemoteRecording",
        "url",
        "url",
        "recentUrls",
        "url",
        "RemoteRecording",
        "recentUrls",
        "url",
        "recordingUrl",
        "recordingUrl",
        "recordingUrl",
        "vscode",
        "vscode",
        "recordingUrl",
        "RemoteRecordingClient",
        "recordingUrl",
        "statusCode",
        "vscode",
        "recordingUrl",
        "stopRecordingText",
        "confirmation",
        "stopRecordingText",
        "recordingUrl",
        "recordingUrl",
        "vscode",
        "recordingUrl",
        "recordingUrl",
        "e",
        "vscode",
        "recordingUrl",
        "url",
        "url",
        "isSuccessful",
        "vscode",
        "appmapName",
        "appmapName",
        "isSuccessful",
        "RemoteRecordingClient",
        "url",
        "stopResult",
        "vscode",
        "url",
        "isSuccessful",
        "stopResult",
        "appmap",
        "appmapName",
        "path",
        "folder",
        "appmapName",
        "isFileExists",
        "checkFileName",
        "fileExt",
        "i",
        "checkFileName",
        "fileName",
        "i",
        "checkFileName",
        "fileExt",
        "fs",
        "filePath",
        "appmap",
        "vscode",
        "filePath",
        "vscode",
        "uri",
        "vscode",
        "url",
        "isSuccessful",
        "e",
        "vscode",
        "e",
        "e",
        "isSuccessful",
        "vscode",
        "basePath",
        "vscode",
        "basePath",
        "vscode",
        "basePath",
        "vscode",
        "userDefinedPath",
        "basePath",
        "userDefinedPath",
        "folder",
        "basePath",
        "userDefinedPath",
        "basePath",
        "folder",
        "basePath",
        "folder",
        "fs",
        "folder",
        "basePath",
        "folder",
        "basePath",
        "folder",
        "fs",
        "folder",
        "folder",
        "basePath",
        "folder",
        "fs",
        "folder",
        "folder",
        "p",
        "fs",
        "p",
        "fs",
        "fs",
        "err",
        "recordingUrl",
        "recordingUrl",
        "recordingUrl",
        "vscode",
        "vscode",
        "recordingUrl",
        "RemoteRecordingClient",
        "recordingUrl",
        "vscode",
        "recordingUrl",
        "recordingStatus",
        "recordingUrl",
        "e",
        "vscode",
        "e",
        "e",
        "vscode",
        "vscode",
        "url",
        "items",
        "url",
        "resolve",
        "quickPick",
        "items",
        "quickPick",
        "quickPick",
        "quickPick",
        "quickPick",
        "resolve",
        "quickPick",
        "quickPick",
        "context",
        "vscode",
        "RemoteRecording",
        "context",
        "context",
        "vscode",
        "remoteRecording",
        "context",
        "vscode",
        "remoteRecording",
        "context",
        "vscode",
        "remoteRecording",
        "context",
        "vscode",
        "remoteRecording"
    ],
    "literals": [
        "'vscode'",
        "'fs'",
        "'path'",
        "'./remoteRecordingClient'",
        "'./util'",
        "'APPMAP_RECENT_REMOTE_URLS'",
        "string",
        "'appmap.stopCurrentRemoteRecording'",
        "'Click to stop recording'",
        "string",
        "string",
        "''",
        "string",
        "$(record) Recording AppMap on ${recordingUrl}",
        "'setContext'",
        "'appmap.recordingIsRunning'",
        "Recording is already enabled on ${this.activeRecordingUrl}",
        "''",
        "'Stop recording'",
        "Recording is already running on ${recordingUrl}.",
        "$(circle-record) Recording is running on ${recordingUrl}",
        "Recording has started at ${recordingUrl}.",
        "The endpoint does not support AppMap recording",
        "string",
        "'Enter a name for this AppMap'",
        "''",
        "No recording was running on ${url}.",
        "'metadata'",
        "'name'",
        "'_'",
        "'.appmap.json'",
        "${fileName}(${i})",
        "'utf8'",
        "'vscode.openWith'",
        "'appmap.views.appMapFile'",
        "Recording successfully stopped at ${url}.",
        "Failed to stop recording: ${e.name}: ${e.message}",
        "string",
        "string",
        "string",
        "string",
        "'/'",
        "'appMap'",
        "'recordingOutputDirectory'",
        "string",
        "'build/appmap'",
        "'build/appmap/recordings'",
        "'target/appmap'",
        "'target/appmap/recordings'",
        "'tmp/appmap/recordings'",
        "string",
        "''",
        "'There is no active recording in progress. Follow the input prompt to continue.'",
        "'setContext'",
        "'appmap.recordingIsRunning'",
        "''",
        "'has an active recording in progress'",
        "'is ready to begin recording'",
        "${recordingUrl} ${recordingStatus}.",
        "Failed to check recording status: ${e.name}: ${e.message}",
        "string",
        "'Enter the URL of an application running an AppMap agent (e.g. http://localhost:3000)'",
        "'appmap.startRemoteRecording'",
        "'appmap.getRemoteRecordingStatus'",
        "'appmap.stopRemoteRecording'",
        "'appmap.stopCurrentRemoteRecording'"
    ],
    "variables": [
        "recordingUrl",
        "statusCode",
        "stopRecordingText",
        "confirmation",
        "isSuccessful",
        "appmapName",
        "stopResult",
        "appmap",
        "folder",
        "fileName",
        "fileExt",
        "checkFileName",
        "fileName",
        "i",
        "filePath",
        "uri",
        "basePath",
        "folder",
        "userDefinedPath",
        "recordingUrl",
        "recordingUrl",
        "recordingStatus",
        "quickPick",
        "items",
        "remoteRecording"
    ],
    "comments": [
        "We'll consider this a valid case - no error is thrown."
    ],
    "docstrings": [],
    "functions": [
        "recentUrls",
        "addRecentUrl",
        "onBeginRecording",
        "commandStart",
        "stop",
        "getFolder",
        "pathExists",
        "commandStop",
        "commandStopCurrent",
        "commandStatus",
        "getBaseUrl",
        "register"
    ],
    "classes": [
        "RemoteRecording"
    ]
}