{
    "identifiers": [
        "com",
        "lee",
        "datastructureandalgorithms",
        "leetcode",
        "java",
        "util",
        "Comparator",
        "java",
        "util",
        "PriorityQueue",
        "lists",
        "lists",
        "heap",
        "lists",
        "heap",
        "add",
        "heap",
        "isEmpty",
        "head",
        "heap",
        "poll",
        "pre",
        "head",
        "pre",
        "getNext",
        "heap",
        "add",
        "pre",
        "getNext",
        "heap",
        "isEmpty",
        "cur",
        "heap",
        "poll",
        "pre",
        "setNext",
        "cur",
        "pre",
        "cur",
        "cur",
        "getNext",
        "heap",
        "add",
        "cur",
        "getNext",
        "head",
        "Override",
        "o1",
        "o2",
        "o1",
        "getData",
        "o2",
        "getData"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "小根堆",
        "如果返回负数，则小的放在前面；如果返回整数，则大的放在前面；"
    ],
    "docstrings": [
        "* @author i324779"
    ],
    "functions": [
        "ListNode",
        "mergeKLists",
        "compare"
    ],
    "classes": [
        "Solution23",
        "ListNodeComparator"
    ]
}