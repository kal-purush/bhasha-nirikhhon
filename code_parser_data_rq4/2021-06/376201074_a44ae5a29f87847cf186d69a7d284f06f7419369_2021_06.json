{
    "identifiers": [
        "tokens",
        "os",
        "sourceCode",
        "sourceCode",
        "open",
        "file",
        "file",
        "write",
        "classname",
        "classDict",
        "classname",
        "file",
        "write",
        "Class",
        "classDict",
        "classname",
        "variables",
        "split",
        "datatype",
        "file",
        "write",
        "variable",
        "classDict",
        "classname",
        "method",
        "methods",
        "method",
        "split",
        "datatype",
        "file",
        "write",
        "method",
        "file",
        "write",
        "classname",
        "classDict",
        "classDict",
        "classname",
        "classDict",
        "classname",
        "classDict",
        "classname",
        "inherited",
        "classname",
        "file",
        "write",
        "inherit",
        "file",
        "close",
        "writeFile",
        "os",
        "system"
    ],
    "literals": [
        "'web/UML.txt'",
        "'w'",
        "\"title My code\\nscale 2\\n\"",
        "\"class \"",
        "\" {\"",
        "'\\n'",
        "'class Variables'",
        "\"\\t+ \"",
        "\" : \"",
        "\"\\n\"",
        "'class methods'",
        "\"\\t+ \"",
        "\" : \"",
        "\"\\n\"",
        "\"}\\n\"",
        "'Inherited'",
        "\"Base\"",
        "'Inherited'",
        "\" <|-- \"",
        "'\\n'",
        "\"python -m plantuml web/UML.txt\""
    ],
    "variables": [
        "classDict",
        "file",
        "file",
        "Class",
        "variables",
        "datatype",
        "variable",
        "methods",
        "datatype",
        "method",
        "Classname",
        "inherited",
        "inherit"
    ],
    "comments": [
        "self.writeContent()",
        "",
        "{",
        "class :",
        "{",
        "classname : student",
        "Inhertited : Base",
        "classVariables :",
        "{",
        "string : usn",
        "string : name",
        "string : branch",
        "long : phone",
        "}",
        "classMethods :",
        "{",
        "void : read(void)",
        "void : print(void)",
        "}",
        "}",
        "}",
        ""
    ],
    "docstrings": [],
    "functions": [
        "writeFile",
        "run"
    ],
    "classes": [
        "writeUml"
    ]
}