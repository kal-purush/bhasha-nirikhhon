{
    "identifiers": [
        "UNITY_EDITOR",
        "Linq",
        "UnityEditor",
        "UnityEngine",
        "InputSystem",
        "Editor",
        "UNITY_2020_2_OR_NEWER",
        "GetPropertyOrNull",
        "kActiveInputHandler",
        "property",
        "ActiveInputHandlerToTuple",
        "property",
        "intValue",
        "newSystemEnabled",
        "GetPropertyOrNull",
        "kEnableNewSystemProperty",
        "property",
        "property",
        "boolValue",
        "UNITY_2020_2_OR_NEWER",
        "GetPropertyOrNull",
        "kActiveInputHandler",
        "property",
        "ActiveInputHandlerToTuple",
        "property",
        "intValue",
        "newSystemEnabled",
        "value",
        "property",
        "intValue",
        "TupleToActiveInputHandler",
        "property",
        "serializedObject",
        "ApplyModifiedProperties",
        "Debug",
        "LogError",
        "kActiveInputHandler",
        "GetPropertyOrNull",
        "kEnableNewSystemProperty",
        "property",
        "property",
        "boolValue",
        "value",
        "property",
        "serializedObject",
        "ApplyModifiedProperties",
        "Debug",
        "LogError",
        "kEnableNewSystemProperty",
        "UNITY_2020_2_OR_NEWER",
        "GetPropertyOrNull",
        "kActiveInputHandler",
        "property",
        "ActiveInputHandlerToTuple",
        "property",
        "intValue",
        "oldSystemEnabled",
        "GetPropertyOrNull",
        "kDisableOldSystemProperty",
        "property",
        "property",
        "boolValue",
        "UNITY_2020_2_OR_NEWER",
        "GetPropertyOrNull",
        "kActiveInputHandler",
        "property",
        "ActiveInputHandlerToTuple",
        "property",
        "intValue",
        "oldSystemEnabled",
        "value",
        "property",
        "intValue",
        "TupleToActiveInputHandler",
        "property",
        "serializedObject",
        "ApplyModifiedProperties",
        "Debug",
        "LogError",
        "kActiveInputHandler",
        "GetPropertyOrNull",
        "kDisableOldSystemProperty",
        "property",
        "property",
        "boolValue",
        "value",
        "property",
        "serializedObject",
        "ApplyModifiedProperties",
        "Debug",
        "LogError",
        "kDisableOldSystemProperty",
        "UNITY_2020_2_OR_NEWER",
        "InputHandler",
        "OldInputManager",
        "NewInputSystem",
        "InputBoth",
        "newSystemEnabled",
        "oldSystemEnabled",
        "value",
        "InputHandler",
        "value",
        "InputHandler",
        "OldInputManager",
        "InputHandler",
        "NewInputSystem",
        "InputHandler",
        "InputBoth",
        "ArgumentException",
        "value",
        "newSystemEnabled",
        "oldSystemEnabled",
        "InputHandler",
        "OldInputManager",
        "InputHandler",
        "NewInputSystem",
        "InputHandler",
        "InputBoth",
        "InputHandler",
        "OldInputManager",
        "name",
        "Resources",
        "FindObjectsOfTypeAll",
        "PlayerSettings",
        "FirstOrDefault",
        "playerSettings",
        "SerializedObject",
        "playerSettings",
        "playerSettingsObject",
        "FindProperty",
        "name"
    ],
    "literals": [
        "\"activeInputHandler\"",
        "\"enableNativePlatformBackendsForNewInputSystem\"",
        "\"disableOldInputManagerSupport\""
    ],
    "variables": [
        "newSystemBackendsEnabled",
        "property",
        "property",
        "property",
        "property",
        "oldSystemBackendsEnabled",
        "property",
        "property",
        "property",
        "property",
        "kActiveInputHandler",
        "kEnableNewSystemProperty",
        "kDisableOldSystemProperty",
        "playerSettings",
        "playerSettingsObject"
    ],
    "comments": [
        "Whether the backends for the new input system are enabled in the",
        "player settings for the Unity runtime.",
        "</summary>",
        "Whether the backends for the old input system are enabled in the",
        "player settings for the Unity runtime.",
        "</summary>",
        "Special case, when using two separate bool's of the public API here,",
        "it's possible to end up with both settings in false, for example:",
        "- EditorPlayerSettingHelpers.newSystemBackendsEnabled = true;",
        "- EditorPlayerSettingHelpers.oldSystemBackendsEnabled = false;",
        "- EditorPlayerSettingHelpers.newSystemBackendsEnabled = false;",
        "- EditorPlayerSettingHelpers.oldSystemBackendsEnabled = true;",
        "On line 3 both settings will be false, even if we set old system to true on line 4.",
        "UNITY_EDITOR"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ActiveInputHandlerToTuple",
        "TupleToActiveInputHandler",
        "SerializedProperty",
        "GetPropertyOrNull"
    ],
    "classes": [
        "EditorPlayerSettingHelpers"
    ]
}