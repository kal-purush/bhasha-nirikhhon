{
    "identifiers": [
        "os",
        "fastapi",
        "APIRouter",
        "Depends",
        "sqlalchemy",
        "dotenv",
        "load_dotenv",
        "databases",
        "asyncio",
        "typing",
        "Union",
        "pypika",
        "Query",
        "Table",
        "CustomFunction",
        "pypika",
        "terms",
        "Field",
        "sqlalchemy",
        "create_engine",
        "sqlalchemy",
        "ext",
        "declarative",
        "declarative_base",
        "sqlalchemy",
        "orm",
        "sessionmaker",
        "Union",
        "Field",
        "load_dotenv",
        "os",
        "getenv",
        "APIRouter",
        "database_url",
        "create_engine",
        "SQLALCHEMY_DATABASE_URL",
        "sessionmaker",
        "bind",
        "engine",
        "autocommit",
        "autoflush",
        "declarative_base",
        "SessionLocal",
        "db",
        "db",
        "close"
    ],
    "literals": [
        "\"DATABASE_URL\""
    ],
    "variables": [
        "Field_",
        "database_url",
        "router",
        "SQLALCHEMY_DATABASE_URL",
        "engine",
        "SessionLocal",
        "Base",
        "db"
    ],
    "comments": [
        "",
        "",
        "database = databases.Database(database_url)",
        "",
        "",
        "engine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={'check_same_thread': False})",
        "",
        "",
        "",
        "",
        "@router.get(\"/info\")",
        "async def get_url():",
        "\"\"\"Verify we can connect to the database,",
        "and return the database URL in this format:",
        "dialect://user:password@host/dbname",
        "The password will be hidden with ***",
        "\"\"\"",
        "",
        "url_without_password = repr(database.url)",
        "return {\"database_url\": url_without_password}",
        ""
    ],
    "docstrings": [
        "\"\"\"Database functions\"\"\""
    ],
    "functions": [
        "get_db"
    ],
    "classes": []
}