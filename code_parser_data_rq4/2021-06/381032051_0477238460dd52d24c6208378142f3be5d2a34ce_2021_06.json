{
    "identifiers": [
        "math",
        "ceil",
        "floor",
        "exp",
        "kivy",
        "animation",
        "Animation",
        "kivy",
        "effects",
        "scroll",
        "ScrollEffect",
        "kivy",
        "properties",
        "NumericProperty",
        "AliasProperty",
        "ObjectProperty",
        "ScrollEffect",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "NumericProperty",
        "ObjectProperty",
        "exp",
        "friction",
        "interval",
        "coasting_alpha",
        "pull_duration",
        "val",
        "exp",
        "friction",
        "interval",
        "coasting_alpha",
        "val",
        "AliasProperty",
        "get_term_vel",
        "set_term_vel",
        "bind",
        "cache",
        "val",
        "t",
        "_anim",
        "_anim",
        "stop",
        "ScrollEffect",
        "start",
        "val",
        "t",
        "t",
        "args",
        "scroll",
        "anchor",
        "interval",
        "args",
        "interval",
        "anchor",
        "round",
        "scroll",
        "anchor",
        "interval",
        "anchor",
        "n",
        "interval",
        "args",
        "interval",
        "anchor",
        "ceil",
        "velocity",
        "floor",
        "round_",
        "scroll",
        "anchor",
        "interval",
        "anchor",
        "n",
        "interval",
        "d",
        "nearest_notch",
        "abs",
        "nearest",
        "scroll",
        "interval",
        "d",
        "nearest",
        "d",
        "d",
        "coasting_alpha",
        "next_notch",
        "abs",
        "next_",
        "scroll",
        "interval",
        "d",
        "next_",
        "dt",
        "is_manual",
        "velocity",
        "terminal_velocity",
        "near_next_notch",
        "pull_back_velocity",
        "pull_back_velocity",
        "abs",
        "velocity",
        "t_velocity",
        "next_",
        "abs",
        "next_",
        "scroll",
        "velocity",
        "Animation",
        "scroll",
        "next_",
        "duration",
        "duration",
        "anim",
        "_coasted_to_stop",
        "anim",
        "start",
        "abs",
        "velocity",
        "pull_back_velocity",
        "on_notch",
        "Animation",
        "scroll",
        "nearest_notch",
        "duration",
        "pull_duration",
        "t",
        "anim",
        "_coasted_to_stop",
        "anim",
        "start",
        "velocity",
        "velocity",
        "friction",
        "apply_distance",
        "velocity",
        "dt",
        "trigger_velocity_update",
        "args",
        "args",
        "dispatch"
    ],
    "literals": [
        "\"RouletteScrollEffect\"",
        "\"on_coasted_to_stop\"",
        "\"inf\"",
        "\"inf\"",
        "\"50sp\"",
        "\"interval\"",
        "\"coasting_alpha\"",
        "\"pull_duration\"",
        "\"friction\"",
        "\"in_out_circ\"",
        "\"on_coasted_to_stop\""
    ],
    "variables": [
        "__all_",
        "__events__",
        "drag_threshold",
        "min",
        "max",
        "interval",
        "anchor",
        "pull_duration",
        "coasting_alpha",
        "pull_back_velocity",
        "_anim",
        "pull_duration",
        "terminal_velocity",
        "interval",
        "anchor",
        "n",
        "interval",
        "anchor",
        "round_",
        "n",
        "nearest",
        "d",
        "next_",
        "velocity",
        "t_velocity",
        "next_",
        "pull_back_velocity",
        "duration",
        "anim",
        "_anim",
        "anim",
        "on_complete",
        "anim",
        "_anim",
        "anim",
        "on_complete",
        "velocity"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nComponents/RouletteScrollEffect\n===============================\n\nThis is a subclass of :class:`kivy.effects.ScrollEffect` that simulates the\nmotion of a roulette, or a notched wheel (think Wheel of Fortune). It is\nprimarily designed for emulating the effect of the iOS and android date pickers.\n\nUsage\n-----\n\nHere's an example of using :class:`RouletteScrollEffect` for a\n:class:`kivy.uix.scrollview.ScrollView`::\n\n.. code-block:: python\n\n    from kivy.uix.gridlayout import GridLayout\n    from kivy.uix.button import Button\n    from kivy.uix.scrollview import ScrollView\n\n    # Preparing a `GridLayout` inside a `ScrollView`.\n    layout = GridLayout(cols=1, padding=10, size_hint=(None, None), width=500)\n    layout.bind(minimum_height=layout.setter('height'))\n\n    for i in range(30):\n        btn = Button(text=str(i), size=(480, 40), size_hint=(None, None))\n        layout.add_widget(btn)\n\n    root = ScrollView(\n        size_hint=(None, None),\n        size=(500, 320),\n        pos_hint={'center_x': .5, 'center_y': .5},\n        do_scroll_x=False,\n        )\n    root.add_widget(layout)\n\n    # Preparation complete. Now add the new scroll effect.\n    root.effect_y = RouletteScrollEffect(anchor=20, interval=40)\n    runTouchApp(root)\n\nHere the :class:`ScrollView` scrolls through a series of buttons with height\n40. We then attached a :class:`RouletteScrollEffect` with interval 40,\ncorresponding to the button heights. This allows the scrolling to stop at\nthe same offset no matter where it stops. The :attr:`RouletteScrollEffect.anchor`\nadjusts this offset.\n\nCustomizations\n--------------\n\nOther settings that can be played with include:\n\n:attr:`RouletteScrollEffect.pull_duration`,\n:attr:`RouletteScrollEffect.coasting_alpha`,\n:attr:`RouletteScrollEffect.pull_back_velocity`, and\n:attr:`RouletteScrollEffect.terminal_velocity`.\n\nSee their module documentations for details.\n\n:class:`RouletteScrollEffect` has one event ``on_coasted_to_stop`` that\nis fired when the roulette stops, \"making a selection\". It can be listened to\nfor handling or cleaning up choice making.\n\"\"\"",
        "\"\"\"\n    This is a subclass of :class:`kivy.effects.ScrollEffect` that simulates the\n    motion of a roulette, or a notched wheel (think Wheel of Fortune). It is\n    primarily designed for emulating the effect of the iOS and android date pickers.\n\n    .. versionadded:: 0.104.2\n    \"\"\"",
        "\"\"\"\n    Overrides :attr:`ScrollEffect.drag_threshold` to abolish drag threshold.\n    \n    .. note::\n        If using this with a :class:`Roulette` or other :class:`Tickline`\n        subclasses, what matters is :attr:`Tickline.drag_threshold`, which\n        is passed to this attribute in the end.\n\n    :attr:`drag_threshold` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `0`.\n    \"\"\"",
        "\"\"\"\n    The interval of the values of the \"roulette\".\n\n    :attr:`interval` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `50`.\n    \"\"\"",
        "\"\"\"\n    One of the valid stopping values.\n\n    :attr:`anchor` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `0`.\n    \"\"\"",
        "\"\"\"\n    When movement slows around a stopping value, an animation is used\n    to pull it toward the nearest value. :attr:`pull_duration` is the duration\n    used for such an animation.\n\n    :attr:`pull_duration` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `0.2`.\n    \"\"\"",
        "\"\"\"\n    When within :attr:`coasting_alpha` * :attr:`interval` of the\n    next notch and velocity is below :attr:`terminal_velocity`, \n    coasting begins and will end on the next notch.\n\n    :attr:`coasting_alpha` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `0.5`.\n    \"\"\"",
        "\"\"\"\n    The velocity below which the scroll value will be drawn to the \n    *nearest* notch instead of the *next* notch in the direction travelled.\n    \n    :attr:`pull_back_velocity` is an :class:`~kivy.properties.NumericProperty`\n    and defaults to `50sp`.\n    \"\"\"",
        "\"\"\"\n    If velocity falls between :attr:`pull_back_velocity` and \n    :attr:`terminal velocity` then the movement will start to coast\n    to the next coming stopping value.\n    \n    :attr:`terminal_velocity` is computed from a set formula given\n    :attr:`interval`, :attr:`coasting_alpha`, :attr:`pull_duration`,\n    and :attr:`friction`. Setting :attr:`terminal_velocity` has the\n    effect of setting :attr:`pull_duration`.\n    \"\"\"",
        "\"\"\"\n        This event fires when the roulette has stopped, `making a selection`.\n        \"\"\""
    ],
    "functions": [
        "get_term_vel",
        "set_term_vel",
        "start",
        "on_notch",
        "nearest_notch",
        "next_notch",
        "near_notch",
        "near_next_notch",
        "update_velocity",
        "on_coasted_to_stop",
        "_coasted_to_stop"
    ],
    "classes": [
        "RouletteScrollEffect"
    ]
}