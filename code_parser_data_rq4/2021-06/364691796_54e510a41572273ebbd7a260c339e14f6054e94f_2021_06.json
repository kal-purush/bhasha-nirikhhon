{
    "identifiers": [
        "time",
        "jeepney",
        "DBusAddress",
        "DBusErrorResponse",
        "MessageType",
        "Properties",
        "new_method_call",
        "jeepney",
        "io",
        "blocking",
        "open_dbus_connection",
        "calibre",
        "constants",
        "DEBUG",
        "open_dbus_connection",
        "msg",
        "bus",
        "send_and_get_reply",
        "msg",
        "reply",
        "header",
        "message_type",
        "MessageType",
        "error",
        "DBusErrorResponse",
        "reply",
        "reply",
        "body",
        "addr",
        "method",
        "sig",
        "args",
        "sig",
        "send",
        "new_method_call",
        "addr",
        "method",
        "sig",
        "args",
        "send",
        "new_method_call",
        "addr",
        "method",
        "addr",
        "name",
        "send",
        "Properties",
        "addr",
        "get",
        "name",
        "path",
        "DBusAddress",
        "path",
        "bus_name",
        "vpath",
        "addr",
        "vpath",
        "prop",
        "vdevif",
        "prop",
        "vdevif",
        "addr",
        "vpath",
        "addr",
        "prop",
        "volif",
        "prop",
        "pdevif",
        "vdevif",
        "volif",
        "prop",
        "vdevif",
        "d",
        "addr",
        "call",
        "manager",
        "d",
        "serial",
        "path",
        "paths",
        "addr",
        "path",
        "d",
        "idVendor",
        "prop",
        "objif",
        "d",
        "idProduct",
        "prop",
        "objif",
        "d",
        "manufacturer",
        "prop",
        "objif",
        "d",
        "product",
        "prop",
        "objif",
        "d",
        "serial",
        "prop",
        "objif",
        "call",
        "manager",
        "path",
        "call",
        "manager",
        "path",
        "call",
        "manager",
        "midpath",
        "dpath",
        "dpaths",
        "call",
        "manager",
        "dpath",
        "vpath",
        "vpaths",
        "get_volume",
        "vpath",
        "vol",
        "vols",
        "append",
        "vol",
        "DBusErrorResponse",
        "e",
        "e",
        "DBusErrorResponse",
        "e",
        "e",
        "DBusErrorResponse",
        "vols",
        "sort",
        "key",
        "x",
        "x",
        "vols",
        "vol",
        "prop",
        "vol",
        "prop",
        "vol",
        "call",
        "vol",
        "vol",
        "fstype",
        "prop",
        "vol",
        "time",
        "sleep",
        "loops",
        "loops",
        "prop",
        "vol",
        "volumes",
        "vol",
        "volumes",
        "get_mount_point",
        "vol",
        "e",
        "e",
        "mp",
        "DEBUG",
        "vol",
        "mp",
        "mtd",
        "ans",
        "ans",
        "mp",
        "vol",
        "DEBUG",
        "mp",
        "mtd",
        "ans",
        "ans",
        "mp",
        "vol",
        "DEBUG",
        "mp",
        "mtd",
        "ans",
        "ans",
        "mp",
        "vol",
        "DEBUG",
        "mp",
        "mtd",
        "mtd",
        "ans",
        "vol",
        "call",
        "vol",
        "DBusErrorResponse",
        "e",
        "e",
        "hasattr",
        "get_hal",
        "HAL",
        "get_hal",
        "ans"
    ],
    "literals": [
        "'SYSTEM'",
        "''",
        "'org.freedesktop.Hal'",
        "f'org.freedesktop.Hal.{interface}'",
        "'Device'",
        "'block.is_volume'",
        "'volume.fsusage'",
        "'filesystem'",
        "'Volume'",
        "'info.parent'",
        "'Device'",
        "'node'",
        "'block.device'",
        "'dev'",
        "'vol'",
        "'label'",
        "'volume.label'",
        "'/org/freedesktop/Hal/Manager'",
        "'Manager'",
        "'FindDeviceStringMatch'",
        "'ss'",
        "'usb.serial'",
        "'Device'",
        "'usb.vendor_id'",
        "'usb.product_id'",
        "'usb.vendor'",
        "'usb.product'",
        "'usb.serial'",
        "'FindDeviceStringMatch'",
        "'ss'",
        "'info.parent'",
        "'FindDeviceStringMatch'",
        "'ss'",
        "'storage.originating_device'",
        "'FindDeviceStringMatch'",
        "'ss'",
        "'storage.originating_device'",
        "'FindDeviceStringMatch'",
        "'block.storage_device'",
        "'node'",
        "'dev'",
        "'volume.is_mounted'",
        "'dev'",
        "'volume.fstype'",
        "'vol'",
        "'Mount'",
        "'ssas'",
        "'Calibre-'",
        "'label'",
        "'dev'",
        "'volume.is_mounted'",
        "\"ERROR: Timeout waiting for mount to complete\"",
        "'dev'",
        "'volume.mount_point'",
        "'_main_prefix'",
        "'_main_vol'",
        "'_card_a_prefix'",
        "'_card_a_vol'",
        "'_card_b_prefix'",
        "'_card_b_vol'",
        "\"Failed to mount: {vol['label']}\"",
        "'/'",
        "\"FBSD:\t  mounted\"",
        "'label'",
        "\"on\"",
        "'_main_prefix'",
        "'_main_vol'",
        "'vol'",
        "\"FBSD:\tmain = \"",
        "'_card_a_prefix'",
        "'_card_a_vol'",
        "'vol'",
        "\"FBSD:\tcard a = \"",
        "'_card_b_prefix'",
        "'_card_b_vol'",
        "'vol'",
        "\"FBSD:\tcard b = \"",
        "'Unmount'",
        "'as'",
        "'Unable to eject '",
        "'ans'"
    ],
    "variables": [
        "bus",
        "reply",
        "vdevif",
        "volif",
        "pdevif",
        "vols",
        "manager",
        "paths",
        "objif",
        "midpath",
        "dpaths",
        "vpaths",
        "vol",
        "fstype",
        "loops",
        "mtd",
        "ans",
        "mp",
        "get_hal",
        "ans"
    ],
    "comments": [
        "!/usr/bin/env python",
        "vim:fileencoding=utf-8",
        "License: GPL v3 Copyright: 2021, Kovid Goyal <kovid at kovidgoyal.net>",
        "Extra paranoia...",
        "Mount Point becomes Mount Path"
    ],
    "docstrings": [],
    "functions": [
        "send",
        "call",
        "prop",
        "addr",
        "get_volume",
        "get_volumes",
        "get_mount_point",
        "mount_volumes",
        "unmount",
        "get_hal"
    ],
    "classes": [
        "HAL"
    ]
}