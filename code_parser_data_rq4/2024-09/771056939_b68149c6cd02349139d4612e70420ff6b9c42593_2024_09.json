{
    "identifiers": [
        "org",
        "apache",
        "fineract",
        "cob",
        "loan",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertNotNull",
        "org",
        "mockito",
        "Mockito",
        "anyCollection",
        "org",
        "mockito",
        "Mockito",
        "anyLong",
        "org",
        "mockito",
        "Mockito",
        "mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "Mockito",
        "times",
        "org",
        "mockito",
        "Mockito",
        "verify",
        "org",
        "mockito",
        "Mockito",
        "when",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "org",
        "apache",
        "fineract",
        "portfolio",
        "loanaccount",
        "domain",
        "Loan",
        "org",
        "apache",
        "fineract",
        "portfolio",
        "loanaccount",
        "loanschedule",
        "data",
        "OverdueLoanScheduleData",
        "org",
        "apache",
        "fineract",
        "portfolio",
        "loanaccount",
        "service",
        "LoanChargeWritePlatformService",
        "org",
        "apache",
        "fineract",
        "portfolio",
        "loanaccount",
        "service",
        "LoanReadPlatformService",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "loanReadPlatformService",
        "loanChargeWritePlatformService",
        "applyChargeToOverdueLoansBusinessStep",
        "BeforeEach",
        "loanReadPlatformService",
        "mock",
        "loanChargeWritePlatformService",
        "mock",
        "applyChargeToOverdueLoansBusinessStep",
        "loanReadPlatformService",
        "loanChargeWritePlatformService",
        "Test",
        "loan",
        "mock",
        "when",
        "loanReadPlatformService",
        "retrieveAllOverdueInstallmentsForLoan",
        "loan",
        "thenReturn",
        "Collections",
        "emptyList",
        "result",
        "applyChargeToOverdueLoansBusinessStep",
        "execute",
        "loan",
        "assertNotNull",
        "result",
        "verify",
        "loanChargeWritePlatformService",
        "applyOverdueChargesForLoan",
        "anyLong",
        "anyCollection",
        "Test",
        "testId",
        "loan",
        "mock",
        "overdueData",
        "mock",
        "overdueList",
        "Collections",
        "singletonList",
        "overdueData",
        "when",
        "loan",
        "getId",
        "thenReturn",
        "testId",
        "when",
        "loanReadPlatformService",
        "retrieveAllOverdueInstallmentsForLoan",
        "loan",
        "thenReturn",
        "overdueList",
        "result",
        "applyChargeToOverdueLoansBusinessStep",
        "execute",
        "loan",
        "assertNotNull",
        "result",
        "verify",
        "loanChargeWritePlatformService",
        "times",
        "applyOverdueChargesForLoan",
        "testId",
        "overdueList"
    ],
    "literals": [],
    "variables": [
        "loanReadPlatformService",
        "loanChargeWritePlatformService",
        "applyChargeToOverdueLoansBusinessStep"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License."
    ],
    "functions": [
        "setUp",
        "testExecute_WhenNoOverdueInstallments_ShouldNotApplyCharges",
        "testExecute_WhenOverdueInstallmentsExist_ShouldApplyCharges"
    ],
    "classes": [
        "ApplyChargeToOverdueLoansBusinessStepTest"
    ]
}