{
    "identifiers": [
        "socket",
        "ssl",
        "subprocess",
        "os",
        "sys",
        "hashlib",
        "platform",
        "re",
        "uuid",
        "shutil",
        "stat",
        "pwd",
        "grp",
        "threading",
        "getpass",
        "getuser",
        "time",
        "sleep",
        "datetime",
        "datetime",
        "ssl_sock",
        "context",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "ssl",
        "create_default_context",
        "ssl",
        "Purpose",
        "SERVER_AUTH",
        "ssl",
        "CERT_NONE",
        "context",
        "wrap_socket",
        "client_socket",
        "server_side",
        "ssl_sock",
        "connect",
        "address",
        "send_data",
        "ssl_sock",
        "authentication",
        "receive_data",
        "ssl_sock",
        "ssl_sock",
        "getsockname",
        "sleep",
        "receive_data",
        "ssl_sock",
        "lower",
        "ans",
        "sharkport",
        "receive_data",
        "ssl_sock",
        "threading",
        "target",
        "sharklistener",
        "args",
        "sharkthread",
        "start",
        "KeyboardInterrupt",
        "send_data",
        "ssl_sock",
        "socket",
        "gethostname",
        "auth_key",
        "hashlib",
        "sha512",
        "auth_key",
        "encode",
        "hexdigest",
        "auth_key",
        "receive_data",
        "ssl_sock",
        "deco_data",
        "ssl_sock",
        "close",
        "sys",
        "exit",
        "deco_data",
        "deco_data",
        "exec",
        "data",
        "SyntaxError",
        "sharkport",
        "address",
        "port",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "ssl",
        "create_default_context",
        "ssl",
        "Purpose",
        "SERVER_AUTH",
        "ssl",
        "CERT_NONE",
        "context",
        "wrap_socket",
        "client_socket2",
        "server_side",
        "ssl_sock2",
        "connect",
        "sharkaddress",
        "os",
        "geteuid",
        "ssl_sock2",
        "send",
        "sudo",
        "encode",
        "sudo",
        "socket",
        "socket",
        "socket",
        "AF_PACKET",
        "socket",
        "SOCK_RAW",
        "socket",
        "htons",
        "rawsock",
        "recvfrom",
        "ssl_sock2",
        "send",
        "packet_data",
        "PermissionError",
        "sendsocket",
        "data",
        "len",
        "data",
        "sendsocket",
        "sendall",
        "pack",
        "total_length",
        "chunk_size",
        "i",
        "total_length",
        "chunk_size",
        "i",
        "chunk_size",
        "i",
        "chunk_size",
        "total_length",
        "total_length",
        "data",
        "i",
        "end_index",
        "sendsocket",
        "sendall",
        "chunk",
        "encode",
        "AttributeError",
        "sendsocket",
        "sendall",
        "chunk",
        "recvsocket",
        "unpack",
        "recvsocket",
        "recv",
        "total_length",
        "recvsocket",
        "recv",
        "min",
        "chunk_size",
        "total_length",
        "received_data",
        "chunk",
        "total_length",
        "len",
        "chunk",
        "received_data",
        "decode",
        "UnicodeDecodeError",
        "error",
        "received_data",
        "UnboundLocalError",
        "send_data",
        "ssl_sock",
        "getuser",
        "os",
        "getcwd",
        "receive_data",
        "ssl_sock",
        "command",
        "split",
        "command",
        "lower",
        "split_command",
        "lower",
        "os",
        "chdir",
        "join",
        "split_command",
        "FileNotFoundError",
        "e",
        "e",
        "subprocess",
        "getoutput",
        "command",
        "os",
        "getcwd",
        "output",
        "cwd",
        "send_data",
        "ssl_sock",
        "response",
        "pid",
        "open",
        "pid",
        "stat_file",
        "stat_file",
        "read",
        "split",
        "stat_info",
        "stat_info",
        "stat_info",
        "stat_info",
        "utime",
        "stime",
        "cutime",
        "cstime",
        "open",
        "stat_file",
        "stat_file",
        "readline",
        "split",
        "sum",
        "cpu_info",
        "total_time",
        "total_cpu_time",
        "cpu_percent",
        "FileNotFoundError",
        "pid",
        "os",
        "listdir",
        "pid",
        "isdigit",
        "open",
        "pid",
        "status_file",
        "status_file",
        "readlines",
        "line",
        "status_lines",
        "line",
        "split",
        "len",
        "parts",
        "parts",
        "strip",
        "parts",
        "strip",
        "value",
        "process_info",
        "get",
        "calculate_cpu_usage",
        "pid",
        "pid",
        "process_name",
        "cpu_usage",
        "allprocesses",
        "entry",
        "FileNotFoundError",
        "send_data",
        "ssl_sock",
        "allprocesses",
        "send_data",
        "ssl_sock",
        "platform",
        "system",
        "platform",
        "release",
        "platform",
        "version",
        "platform",
        "machine",
        "socket",
        "gethostname",
        "socket",
        "gethostbyname",
        "socket",
        "gethostname",
        "join",
        "re",
        "findall",
        "uuid",
        "getnode",
        "platform",
        "processor",
        "receive_data",
        "ssl_sock",
        "os",
        "scandir",
        "dir",
        "entry",
        "files",
        "entry",
        "is_file",
        "length",
        "filesList",
        "append",
        "entry",
        "name",
        "PermissionError",
        "send_data",
        "ssl_sock",
        "length",
        "file",
        "filesList",
        "dir",
        "file",
        "hashfile",
        "file",
        "IsADirectoryError",
        "send_data",
        "ssl_sock",
        "send_data",
        "ssl_sock",
        "file",
        "PermissionError",
        "send_data",
        "ssl_sock",
        "file",
        "send_data",
        "ssl_sock",
        "FileNotFoundError",
        "send_data",
        "ssl_sock",
        "send_data",
        "ssl_sock",
        "dir",
        "NotADirectoryError",
        "send_data",
        "ssl_sock",
        "length",
        "hashfile",
        "dir",
        "PermissionError",
        "send_data",
        "ssl_sock",
        "dir",
        "send_data",
        "ssl_sock",
        "file",
        "open",
        "file",
        "directoryFiles",
        "os",
        "path",
        "getsize",
        "file",
        "directoryFiles",
        "read",
        "size",
        "directoryFiles",
        "close",
        "send_data",
        "ssl_sock",
        "file",
        "send_data",
        "ssl_sock",
        "hashlib",
        "sha256",
        "data",
        "hexdigest",
        "receive_data",
        "ssl_sock",
        "open",
        "filename",
        "f",
        "send_data",
        "ssl_sock",
        "f",
        "read",
        "os",
        "path",
        "getsize",
        "filename",
        "f",
        "close",
        "FileNotFoundError",
        "send_data",
        "ssl_sock",
        "send_data",
        "ssl_sock",
        "PermissionError",
        "send_data",
        "ssl_sock",
        "send_data",
        "ssl_sock",
        "IsADirectoryError",
        "send_data",
        "ssl_sock",
        "send_data",
        "ssl_sock",
        "receive_data",
        "ssl_sock",
        "filename",
        "receive_data",
        "ssl_sock",
        "isinstance",
        "data",
        "data",
        "encode",
        "open",
        "filename",
        "f",
        "f",
        "write",
        "data",
        "f",
        "close",
        "send_data",
        "ssl_sock",
        "check_file_exists",
        "filename",
        "file",
        "os",
        "path",
        "isfile",
        "file",
        "platform",
        "system",
        "OS",
        "open",
        "file",
        "line",
        "file",
        "line",
        "startswith",
        "line",
        "split",
        "strip",
        "release",
        "OS",
        "os",
        "path",
        "exists",
        "path",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "path",
        "file",
        "files",
        "file",
        "endswith",
        "os",
        "path",
        "join",
        "path",
        "file",
        "os",
        "path",
        "exists",
        "service_file",
        "open",
        "service_file",
        "f",
        "f",
        "readlines",
        "line",
        "lines",
        "line",
        "startswith",
        "line",
        "startswith",
        "line",
        "startswith",
        "line",
        "lower",
        "line",
        "startswith",
        "line",
        "lower",
        "services",
        "file",
        "status",
        "os",
        "path",
        "exists",
        "file",
        "os",
        "listdir",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "file",
        "os",
        "path",
        "join",
        "file",
        "os",
        "path",
        "exists",
        "service_file",
        "os",
        "path",
        "islink",
        "service_file",
        "services",
        "file",
        "status",
        "send_data",
        "ssl_sock",
        "services",
        "shutil",
        "disk_usage",
        "send_data",
        "ssl_sock",
        "usage",
        "total",
        "usage",
        "used",
        "usage",
        "free",
        "ip",
        "socket",
        "inet_ntoa",
        "pack",
        "ip",
        "line",
        "line",
        "split",
        "fields",
        "split",
        "fields",
        "split",
        "ip_to_str",
        "local_ip",
        "local_port",
        "ip_to_str",
        "remote_ip",
        "remote_port",
        "fields",
        "open",
        "f",
        "f",
        "readlines",
        "line",
        "lines",
        "send_data",
        "ssl_sock",
        "parse_tcp_line",
        "line",
        "send_data",
        "ssl_sock",
        "receive_data",
        "ssl_sock",
        "os",
        "listdir",
        "directory_path",
        "item",
        "contents",
        "os",
        "path",
        "join",
        "directory_path",
        "item",
        "os",
        "stat",
        "item_path",
        "stat_info",
        "st_mode",
        "stat",
        "filemode",
        "mode",
        "stat_info",
        "st_nlink",
        "stat_info",
        "st_uid",
        "stat_info",
        "st_gid",
        "pwd",
        "getpwuid",
        "uid",
        "pw_name",
        "grp",
        "getgrgid",
        "gid",
        "gr_name",
        "stat_info",
        "st_size",
        "datetime",
        "fromtimestamp",
        "stat_info",
        "st_mtime",
        "strftime",
        "message",
        "permissions",
        "num_links",
        "owner",
        "group",
        "size",
        "modified_time",
        "item",
        "PermissionError",
        "NotADirectoryError",
        "FileNotFoundError",
        "send_data",
        "ssl_sock",
        "message",
        "Client",
        "client",
        "socketinitilsation",
        "client",
        "connection",
        "client",
        "sendhostname",
        "client",
        "check_listener",
        "client",
        "serverhandler",
        "KeyboardInterrupt"
    ],
    "literals": [
        "\"127.0.0.1\"",
        "f'{self.receive_data(ssl_sock)}{ssl_sock.getsockname()[1]}'",
        "\"true\"",
        "\"shutdown\"",
        "\"\"",
        "f'self.{deco_data}()'",
        "'!II'",
        "'!II'",
        "b''",
        "\"utf-8\"",
        "f\"{getuser()}<sep>{os.getcwd()}\"",
        "\"exit\"",
        "\"cd\"",
        "' '",
        "\"\"",
        "f\"{output}<sep>{cwd}\"",
        "f'/proc/{pid}/stat'",
        "'/proc/stat'",
        "\"\"",
        "'/proc'",
        "f'/proc/{pid}/status'",
        "':'",
        "'Name'",
        "'N/A'",
        "f\"PID:{pid} Name:{process_name} CPU Usage:{cpu_usage:.2f}\\n\"",
        "f\"\"\"SYSTEM INFO:\\n\nSystem = {platform.system()}\nplatform-release = {platform.release()}\nplatform-version = {platform.version()}\narchitecture = {platform.machine()}\nhostname = {socket.gethostname()}\nip-address = {socket.gethostbyname(socket.gethostname())}\nmac-address = {':'.join(re.findall('..', '%012x' % uuid.getnode()))}\nprocessor = {platform.processor()}\"\"\"",
        "':'",
        "'..'",
        "'%012x'",
        "f\"{dir}/{file}\"",
        "\"Error\"",
        "f\"{file} is a directory\"",
        "\"Permission Error\"",
        "\"Error\"",
        "f\"{dir} does not exist\"",
        "\"Permission Error\"",
        "'rb'",
        "\"rb\"",
        "\"Error\"",
        "\"File doesn't exist\"",
        "\"Error\"",
        "\"You do not have permission to access this file\"",
        "\"Error\"",
        "\"This is a directory\"",
        "\"break\"",
        "\"wb\"",
        "\"Linux\"",
        "'/etc/os-release'",
        "'r'",
        "'NAME='",
        "'='",
        "'\" \\n'",
        "\"Fedora Linux\"",
        "\"/etc/systemd/system\"",
        "\"/etc/system/system\"",
        "'Linux'",
        "\"\"",
        "'.service'",
        "\"Unknown\"",
        "\"r\"",
        "\"ExecStart=\"",
        "\"Running\"",
        "\"ExecStop=\"",
        "\"Stopped\"",
        "\"Restart=\"",
        "\"always\"",
        "\"Running (Restart)\"",
        "\"Stopped (No Restart)\"",
        "\"Type=\"",
        "\"oneshot\"",
        "\"Stopped (One-Shot)\"",
        "f\"Service: {file}   Status: {status}\\n\"",
        "\"/etc/init.d\"",
        "\"/etc/init.d\"",
        "\"/etc/init.d\"",
        "\"/etc/init.d\"",
        "\"Unkown\"",
        "\"Running\"",
        "\"Stopped\"",
        "f\"Name: {file} Status: {status}\\n\"",
        "\"/\"",
        "f\"Disk usage for /: \\n Total: {usage.total / (1024**3):.3f} GB\\n Used: {usage.used / (1024**3):.3f} GB\\n Free: {usage.free / (1024**3):.3f} GB\\n\"",
        "'<I'",
        "':'",
        "':'",
        "f\"LocalIP: {self.ip_to_str(int(local_ip, 16))} LocalPort: {int(local_port, 16)}, RemoteIP: {self.ip_to_str(int(remote_ip, 16))} RemotePort: {int(remote_port, 16)}, State: {fields[3]}\"",
        "'/proc/net/tcp'",
        "'r'",
        "f\"{str(self.parse_tcp_line(line))}\\n\"",
        "\"break\"",
        "\"\"",
        "\"%Y-%m-%d %H:%M:%S\"",
        "f\"{permissions} {num_links} {owner} {group} {size} {modified_time} {item}\\n\"",
        "\"Error: You do not have permissions to view this folder\"",
        "\"Error: This is not a directory\"",
        "'__main__'",
        "\"exit\""
    ],
    "variables": [
        "address",
        "client_socket",
        "context",
        "context",
        "check_hostname",
        "context",
        "verify_mode",
        "ssl_sock",
        "ans",
        "sharkport",
        "sharkthread",
        "auth_key",
        "deco_data",
        "data",
        "port",
        "sharkaddress",
        "client_socket2",
        "context2",
        "context2",
        "check_hostname",
        "context2",
        "verify_mode",
        "ssl_sock2",
        "sudo",
        "rawsock",
        "packet_data",
        "_",
        "total_length",
        "chunk_size",
        "end_index",
        "chunk",
        "total_length",
        "chunk_size",
        "received_data",
        "chunk",
        "received_data",
        "command",
        "split_command",
        "output",
        "output",
        "output",
        "cwd",
        "response",
        "stat_info",
        "utime",
        "stime",
        "cutime",
        "cstime",
        "total_time",
        "cpu_info",
        "total_cpu_time",
        "cpu_percent",
        "allprocesses",
        "status_lines",
        "process_info",
        "parts",
        "key",
        "value",
        "process_info",
        "key",
        "process_name",
        "cpu_usage",
        "entry",
        "dir",
        "length",
        "files",
        "filesList",
        "file",
        "length",
        "size",
        "data",
        "filename",
        "filename",
        "data",
        "data",
        "OS",
        "release",
        "path",
        "path",
        "services",
        "service_file",
        "status",
        "lines",
        "status",
        "status",
        "status",
        "status",
        "status",
        "service_file",
        "status",
        "status",
        "usage",
        "fields",
        "local_ip",
        "local_port",
        "remote_ip",
        "remote_port",
        "lines",
        "message",
        "directory_path",
        "contents",
        "item_path",
        "stat_info",
        "mode",
        "permissions",
        "num_links",
        "uid",
        "gid",
        "owner",
        "group",
        "size",
        "modified_time",
        "message",
        "message",
        "client"
    ],
    "comments": [
        "!/usr/bin/python3",
        "sets the command for global use",
        "attemps to connect",
        "sends authentication method",
        "wait 5s",
        "recieves a true and false for if the packet sniffing is occuring",
        "recieves the port for the listener",
        "threads the socket",
        "start the thread",
        "recieves and decodes the data",
        "shutdown the socket",
        "makes sure data has input",
        "runs the data as a function",
        "sets the port",
        "sets the address",
        "context for TLS",
        "gets uid for the processes",
        "sends the uid across",
        "if sudo create the socket and stream packets",
        "calculates the total length",
        "sets the chunk size",
        "sends a header with total_length and chunksize",
        "range of total length incrementing in chunksize",
        "calculates how much data needs to be sent",
        "makes the chunk with the required amount of data",
        "trys to encode the chunks and send them",
        "if it cant be encoded sends it as it is.",
        "unpacks the header length",
        "sets receveid bytes to a bytes string",
        "loop until total_length is less than 0",
        "receives chunk based off whatever is smaller, total length or chunk_size",
        "adds the chunk to recieved data",
        "removes the chunk length from the total_length",
        "attempts to decode the data",
        "else doesnt decode the data and returns it as bytes",
        "sends the user and working dir",
        "recieve command",
        "if commmand is exit then breaks the loop",
        "if the command is cd",
        "chdir",
        "else print error",
        "run the output of the commad",
        "get the cwd",
        "send the command an dcwd",
        "reads PID file that contains time the PID has been used for",
        "opens the PIDs stat file",
        "amount of time the process has spent in usermode",
        "amount of time the process has spent in kernel mode",
        "amount of time waited for children of the process",
        "amount of time waited for children in kernel mode",
        "contains statisics of how the entire cpu",
        "stores cpu states in cpu_info",
        "calculates the total cpu time consumed by the entire system",
        "calculates cpu usuage per PID",
        "loops through entries in /proc",
        "checks if the file is a PID",
        "status file contains details on the process",
        "loops each line in status lines",
        "splits each into key value using",
        "strips anywhitespace and stores in a dictionary",
        "retrieves the process name or n/a",
        "calculates cpu usage",
        "creates entry",
        "sends data",
        "recieve the dir to hash",
        "initalise length",
        "get a list of objects in the directory",
        "takes every file one by one",
        "checks if its in a file",
        "adds one to the number of files",
        "adds the file name to the list",
        "ignore if you dont have permission",
        "send the number of files back",
        "adds dir to the file to get complete path",
        "sends file to hash function",
        "grabs errors and sends an error message followed by the error",
        "file doesnt exist error",
        "if it snot a direcotry then hash a single file",
        "send a length of 1",
        "calls the hash file function that file",
        "permission error on that file",
        "opens the file",
        "reads the size of the file",
        "reads the file",
        "closes the file",
        "sends the filename",
        "sends the hash",
        "grabs the requested file name",
        "trys to open the file as bytes",
        "sends the file data",
        "closes the file",
        "sends an error message followed by the assocatied error",
        "recieve the filename",
        "if the filename is break cancel the function",
        "recieve the data",
        "encode the data to bytes if its a string",
        "open a file with the file name",
        "write the data",
        "close the file",
        "checks the file exists and sends true or false",
        "gets the OS",
        "Read the /etc/os-release file to get distribution-specific information",
        "need to add /usr/lib/systemd/system for red hat as well",
        "if the OS is Linux",
        "checks system folder exists",
        "loads all files into data",
        "for each file in the files",
        "check it ends in .service",
        "join path to the filename",
        "set status to unkown",
        "check the service file exists",
        "opens the files",
        "read the lines",
        "looks for key words as to what the status of the service is",
        "appends the service name and status to the bottom",
        "checks init.d exists",
        "checks there is a file for each file in service path",
        "sets status to unkown",
        "grab the status",
        "appends the service name and status to the bottom",
        "send the data across",
        "load file",
        "parses the data to make it in a readable format then sends it line by line",
        "sends the break to signify last line",
        "recieves the path",
        "loads the contents of the directory",
        "grabs the item path",
        "grabs the stat_info",
        "grabs the mode",
        "grabs the permissions",
        "grabs any nunmlinks",
        "grabs UID",
        "grabs GID",
        "grabs the owner",
        "grabs the group",
        "formats the message line by line",
        "error handling",
        "send message over socket",
        "calls the client class",
        "starts socket",
        "starts conneciton",
        "sends hostname",
        "checks listner",
        "starts server handler"
    ],
    "docstrings": [
        "\"\"\"\nclient server that handles a socket connection with the ability for features such as:\nrev shell, upload/ download file, packet sniffing, services, processes, netstat and checking hash files\n\"\"\"",
        "\"\"\"Class handles all client side funtionality\"\"\"",
        "\"\"\"initalises the socket and wraps it in the context for TLS\"\"\"",
        "\"\"\"waits for a connection to drop in, and re-attempts every 5s if it fails\"\"\"",
        "\"\"\"checks if the server wants packet sniffing\"\"\"",
        "\"\"\"sends the hostname to the client\"\"\"",
        "\"\"\"calculates the authentication key and returns the correct hash\"\"\"",
        "\"\"\"server handler that can shutdown the socket or execute the command to call functions\"\"\"",
        "\"\"\"packet sniffer function, sets up another socket on the recieved port\n        the client checks if it is run as root and if this is true \n        a raw socket is then created.\n        Once this is set up all packets are streamed across the socket. \"\"\"",
        "\"\"\"function that sends data across a socket,\n        socket connection and data gets fed in, the length of data is then calculated.\n        the socket sends a header file packed with struct that sends the total length and chunk size\n        The data is sent in chunks of 4096 until the last chunk where only the required amount is sent.\n        the function allows for raw bytes and strings to be sent for multiple data types to be sent.\n        \"\"\"",
        "\"\"\"function that recieves data\n        first the header is recieved with the chunk size and total length\n        after this it recieves data in the chunk size until the last packet where it is the remaining length\"\"\"",
        "\"\"\"\n        reverse shell, sends the user and CWD. and then allows a command to be executed then sends the output back.\n        \"\"\"",
        "\"\"\"calculate the cpu usage of a process\"\"\"",
        "\"\"\"lists all processes on the system\"\"\"",
        "\"\"\"gets system info of the command\n        sends a crafted string of useful information about the system\"\"\"",
        "\"\"\"sends hashes of a file back to the server to be compared against the database\"\"\"",
        "\"\"\"function opens a file, hashes it and then sends the hash and filename to the server\"\"\"",
        "\"\"\" send a file from the client to the server\"\"\"",
        "\"\"\" recieve a file from the server to the client\"\"\"",
        "\"\"\"check a file eixsts on the machine\"\"\"",
        "\"\"\"list services and grab the status of the service\"\"\"",
        "\"\"\"grabs the disk usuage for the OS disk in gb\"\"\"",
        "\"\"\"converts an ip_address from an int to a string and formats\"\"\"",
        "\"\"\"Parses a line of TCP connection information\n        splits the line into fields and extracts the information from it\"\"\"",
        "\"\"\"reads netsat files and formats them to make them readable\"\"\"",
        "\"\"\"list directorys without using on system binaries in the style of ls -al\"\"\""
    ],
    "functions": [
        "socketinitilsation",
        "connection",
        "check_listener",
        "sendhostname",
        "authentication",
        "serverhandler",
        "sharklistener",
        "send_data",
        "receive_data",
        "shell",
        "calculate_cpu_usage",
        "list_processes",
        "systeminfo",
        "checkfiles",
        "hashfile",
        "send_file",
        "recv_file",
        "check_file_exists",
        "list_services",
        "disk_usage",
        "ip_to_str",
        "parse_tcp_line",
        "netstat",
        "list_dir"
    ],
    "classes": [
        "Client"
    ]
}