{
    "identifiers": [
        "eu",
        "esdihumboldt",
        "hale",
        "io",
        "gml",
        "reader",
        "wfs",
        "java",
        "util",
        "java",
        "util",
        "NoSuchElementException",
        "javax",
        "xml",
        "QName",
        "eu",
        "esdihumboldt",
        "hale",
        "common",
        "instance",
        "model",
        "Instance",
        "eu",
        "esdihumboldt",
        "hale",
        "common",
        "instance",
        "model",
        "ext",
        "InstanceIterator",
        "eu",
        "esdihumboldt",
        "hale",
        "common",
        "schema",
        "model",
        "TypeDefinition",
        "eu",
        "esdihumboldt",
        "hale",
        "io",
        "gml",
        "geometry",
        "GMLConstants",
        "uniqueIDInstances",
        "iterator",
        "nextInstance",
        "instanceAlreadyReturned",
        "instanceIterator",
        "iterator",
        "instanceIterator",
        "Override",
        "iterator",
        "close",
        "nextInstance",
        "instanceAlreadyReturned",
        "Override",
        "hasNext",
        "nextInstance",
        "nextInstance",
        "getDefinition",
        "Override",
        "Override",
        "next",
        "Override",
        "nextInstance",
        "instanceAlreadyReturned",
        "iterator",
        "iterator",
        "hasNext",
        "instance",
        "iterator",
        "next",
        "isTheInstancePresent",
        "instance",
        "nextInstance",
        "instance",
        "instanceAlreadyReturned",
        "Override",
        "hasNext",
        "nextInstance",
        "instanceAlreadyReturned",
        "nextInstance",
        "instance",
        "propertyName",
        "instance",
        "getPropertyNames",
        "isGmlIdProperty",
        "propertyName",
        "gmlID",
        "instance",
        "getProperty",
        "propertyName",
        "gmlID",
        "gmlIDToCheck",
        "gmlID",
        "uniqueIDInstances",
        "contains",
        "gmlIDToCheck",
        "uniqueIDInstances",
        "add",
        "gmlIDToCheck",
        "propertyName",
        "propertyName",
        "getNamespaceURI",
        "startsWith",
        "GMLConstants",
        "NS_WFS",
        "propertyName",
        "getNamespaceURI",
        "startsWith",
        "GMLConstants",
        "GML_NAMESPACE_CORE",
        "equals",
        "propertyName",
        "getLocalPart"
    ],
    "literals": [
        "\"id\""
    ],
    "variables": [
        "iterator",
        "nextInstance"
    ],
    "comments": [
        "HashSet to store unique instance IDs, ensuring no duplicates are",
        "processed.",
        "Iterator for traversing through instances.",
        "Holds the next instance to be processed, which should be filled if the",
        "next() or skip() have already been called for the current instance",
        "Flag to indicate if the current instance has already been returned by the",
        "iterator."
    ],
    "docstrings": [
        "* Copyright (c) 2024 wetransform GmbH\n *\n * All rights reserved. This program and the accompanying materials are made\n * available under the terms of the GNU Lesser General Public License as\n * published by the Free Software Foundation, either version 3 of the License,\n * or (at your option) any later version.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this distribution. If not, see <http://www.gnu.org/licenses/>.",
        "* Filter the instances by storing only those with unique IDs.",
        "* @param instanceIterator InstanceIterator",
        "*\n\t * @see eu.esdihumboldt.hale.common.instance.model.ResourceIterator#close()",
        "* @return TypeDefinition\n\t * @see eu.esdihumboldt.hale.common.instance.model.ext.InstanceIterator#typePeek()",
        "* @return boolean\n\t * @see eu.esdihumboldt.hale.common.instance.model.ext.InstanceIterator#supportsTypePeek()",
        "*\n\t * @see eu.esdihumboldt.hale.common.instance.model.ext.InstanceIterator#skip()",
        "* Determines if there is a next instance available for iteration.\n\t *\n\t * @return boolean - true if there is another instance to process, false if the\n\t *         iteration is complete.\n\t *\n\t *         This method checks if the current instance has already been returned.\n\t *         If it has, or if the next instance has not been initialized, it\n\t *         attempts to fetch the next unique instance.\n\t *\n\t *         The iteration continues until a non-duplicate instance is found,\n\t *         which is then stored in `nextInstance`. If no more instances are\n\t *         available, the method returns false.\n\t *\n\t * @see java.util.Iterator#hasNext()",
        "* @return Instance\n\t * @see java.util.Iterator#next()",
        "* @param instance Instance to be checked if it has been already given or should\n\t *            be returned for further investigation\n\t * @return true if the instance to be checked has been returned already, false\n\t *         in contrary case"
    ],
    "functions": [
        "DuplicateIDsFilterIterator",
        "close",
        "TypeDefinition",
        "typePeek",
        "supportsTypePeek",
        "skip",
        "hasNext",
        "Instance",
        "next",
        "isTheInstancePresent",
        "isGmlIdProperty"
    ],
    "classes": [
        "DuplicateIDsFilterIterator"
    ]
}