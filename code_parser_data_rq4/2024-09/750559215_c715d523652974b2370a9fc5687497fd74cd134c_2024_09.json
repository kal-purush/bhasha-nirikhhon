{
    "identifiers": [
        "getAddressFromPrivateKey",
        "makeContractDeploy",
        "broadcastTransaction",
        "AnchorMode",
        "SignedContractDeployOptions",
        "CONFIG",
        "deriveChildAccount",
        "getNetwork",
        "getNextNonce",
        "getNetwork",
        "CONFIG",
        "CONFIG",
        "sourceCode",
        "contractName",
        "deriveChildAccount",
        "CONFIG",
        "CONFIG",
        "CONFIG",
        "contractName",
        "getAddressFromPrivateKey",
        "key",
        "networkObj",
        "getNextNonce",
        "network",
        "senderAddress",
        "formattedContractName",
        "sourceCode",
        "networkObj",
        "key",
        "nextPossibleNonce",
        "AnchorMode",
        "makeContractDeploy",
        "txOptions",
        "broadcastTransaction",
        "transaction",
        "networkObj",
        "broadcastResponse",
        "broadcastResponse",
        "broadcastResponse",
        "broadcastResponse",
        "broadcastResponse",
        "broadcastResponse",
        "address",
        "broadcastResponse",
        "address",
        "formattedContractName",
        "error",
        "error",
        "process",
        "process",
        "sourceCode",
        "deployContract",
        "sourceCode",
        "contractName"
    ],
    "literals": [
        "\"@stacks/transactions\"",
        "\"../utilities\"",
        "string",
        "string",
        "\"$1-$2\"",
        "\"error\"",
        "\"Transaction failed to broadcast\"",
        "Error: ${broadcastResponse.error}",
        "Reason: ${broadcastResponse.reason}",
        "Reason Data: ${JSON.stringify(\n            broadcastResponse.reason_data,\n            null,\n            2\n          )}",
        "\"Transaction broadcasted successfully!\"",
        "FROM: ${address}",
        "TXID: 0x${broadcastResponse.txid}",
        "CONTRACT: ${address}.${formattedContractName}",
        "Error deploying contract: ${error}",
        "\"Please provide the contract source code as an argument.\""
    ],
    "variables": [
        "networkObj",
        "network",
        "formattedContractName",
        "senderAddress",
        "nextPossibleNonce",
        "txOptions",
        "transaction",
        "broadcastResponse",
        "contractName",
        "sourceCode"
    ],
    "comments": [
        "Derive child account from mnemonic",
        "1 STX",
        "Get the source code and contract name from command line arguments and call deployContract"
    ],
    "docstrings": [],
    "functions": [
        "deployContract"
    ],
    "classes": []
}