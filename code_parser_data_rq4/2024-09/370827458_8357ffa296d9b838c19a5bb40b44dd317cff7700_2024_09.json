{
    "identifiers": [
        "pathlib",
        "json",
        "hashlib",
        "warnings",
        "numpy",
        "np",
        "pandas",
        "pd",
        "pandas",
        "tseries",
        "frequencies",
        "to_offset",
        "actipy",
        "filepath",
        "usecols",
        "resample_hz",
        "sample_rate",
        "verbose",
        "pathlib",
        "Path",
        "filepath",
        "round",
        "p",
        "stat",
        "st_size",
        "p",
        "suffix",
        "lower",
        "ftype",
        "pathlib",
        "Path",
        "p",
        "stem",
        "suffix",
        "lower",
        "ftype",
        "ftype",
        "usecols",
        "split",
        "pd",
        "read_csv",
        "filepath",
        "usecols",
        "tcol",
        "xcol",
        "ycol",
        "zcol",
        "parse_dates",
        "tcol",
        "index_col",
        "tcol",
        "dtype",
        "xcol",
        "ycol",
        "zcol",
        "data",
        "rename",
        "columns",
        "xcol",
        "ycol",
        "zcol",
        "data",
        "index",
        "ftype",
        "pd",
        "read_pickle",
        "filepath",
        "ValueError",
        "ftype",
        "sample_rate",
        "infer_freq",
        "data",
        "index",
        "np",
        "round",
        "pd",
        "Timedelta",
        "freq",
        "data",
        "data",
        "index",
        "duplicated",
        "keep",
        "actipy",
        "process",
        "data",
        "sample_rate",
        "lowpass_hz",
        "calibrate_gravity",
        "detect_nonwear",
        "resample_hz",
        "resample_hz",
        "verbose",
        "verbose",
        "info",
        "update",
        "filepath",
        "ftype",
        "fsize",
        "sample_rate",
        "data",
        "index",
        "strftime",
        "data",
        "index",
        "strftime",
        "ftype",
        "actipy",
        "read_device",
        "filepath",
        "lowpass_hz",
        "calibrate_gravity",
        "detect_nonwear",
        "resample_hz",
        "resample_hz",
        "verbose",
        "verbose",
        "ValueError",
        "ftype",
        "info",
        "info",
        "data",
        "info",
        "x",
        "pd",
        "Series",
        "min_wear",
        "pd",
        "Timedelta",
        "min_wear",
        "infer_freq",
        "x",
        "index",
        "x",
        "notna",
        "isinstance",
        "ok",
        "pd",
        "DataFrame",
        "ok",
        "all",
        "axis",
        "ok",
        "groupby",
        "x",
        "index",
        "date",
        "sum",
        "dt",
        "min_wear",
        "x",
        "copy",
        "np",
        "isin",
        "x",
        "index",
        "date",
        "ok",
        "ok",
        "index",
        "np",
        "nan",
        "x",
        "x",
        "pd",
        "Series",
        "first_or_last",
        "x",
        "copy",
        "first_or_last",
        "x",
        "index",
        "date",
        "x",
        "index",
        "date",
        "np",
        "nan",
        "first_or_last",
        "x",
        "index",
        "date",
        "x",
        "index",
        "date",
        "np",
        "nan",
        "first_or_last",
        "x",
        "index",
        "date",
        "x",
        "index",
        "date",
        "x",
        "index",
        "date",
        "x",
        "index",
        "date",
        "np",
        "nan",
        "x",
        "data",
        "pd",
        "DataFrame",
        "extrapolate",
        "skip_full_missing_days",
        "subframe",
        "isinstance",
        "subframe",
        "pd",
        "Series",
        "subframe",
        "to_numpy",
        "np",
        "isnan",
        "x",
        "len",
        "x",
        "nan",
        "nanlen",
        "len",
        "x",
        "np",
        "nanmean",
        "x",
        "x",
        "subframe",
        "data",
        "data",
        "groupby",
        "data",
        "index",
        "weekday",
        "data",
        "index",
        "hour",
        "data",
        "index",
        "minute",
        "transform",
        "fillna",
        "groupby",
        "data",
        "index",
        "weekday",
        "data",
        "index",
        "hour",
        "data",
        "index",
        "minute",
        "transform",
        "fillna",
        "groupby",
        "data",
        "index",
        "hour",
        "data",
        "index",
        "minute",
        "transform",
        "fillna",
        "skip_full_missing_days",
        "data",
        "isna",
        "groupby",
        "data",
        "index",
        "date",
        "all",
        "extrapolate",
        "infer_freq",
        "data",
        "index",
        "pd",
        "isna",
        "freq",
        "warnings",
        "warn",
        "pd",
        "Timedelta",
        "to_offset",
        "freq",
        "data",
        "reindex",
        "pd",
        "date_range",
        "data",
        "index",
        "floor",
        "data",
        "index",
        "ceil",
        "freq",
        "freq",
        "inclusive",
        "name",
        "method",
        "tolerance",
        "pd",
        "Timedelta",
        "limit",
        "impute",
        "data",
        "skip_full_missing_days",
        "data",
        "mask",
        "np",
        "isin",
        "data",
        "index",
        "date",
        "na_dates",
        "na_dates",
        "index",
        "inplace",
        "data",
        "x",
        "method",
        "x",
        "isna",
        "all",
        "x",
        "x",
        "method",
        "x",
        "fillna",
        "x",
        "mean",
        "method",
        "x",
        "fillna",
        "x",
        "median",
        "ValueError",
        "method",
        "warnings",
        "catch_warnings",
        "warnings",
        "filterwarnings",
        "message",
        "x",
        "groupby",
        "x",
        "index",
        "weekday",
        "transform",
        "fillna",
        "groupby",
        "x",
        "index",
        "weekday",
        "transform",
        "fillna",
        "transform",
        "fillna",
        "t",
        "t",
        "to_series",
        "diff",
        "tdiff",
        "quantile",
        "tdiff",
        "q1",
        "tdiff",
        "tdiff",
        "q3",
        "tdiff",
        "mean",
        "pd",
        "Timedelta",
        "freq",
        "freq",
        "path",
        "pathlib",
        "Path",
        "path",
        "p",
        "suffixes",
        "p",
        "name",
        "rsplit",
        "extension",
        "p",
        "parent",
        "dirname",
        "filename",
        "extension",
        "fname",
        "hashlib",
        "md5",
        "open",
        "fname",
        "f",
        "chunk",
        "iter",
        "f",
        "read",
        "hash_md5",
        "update",
        "chunk",
        "hash_md5",
        "hexdigest",
        "json",
        "JSONEncoder",
        "obj",
        "isinstance",
        "obj",
        "np",
        "integer",
        "obj",
        "isinstance",
        "obj",
        "np",
        "floating",
        "obj",
        "isinstance",
        "obj",
        "np",
        "ndarray",
        "obj",
        "tolist",
        "pd",
        "isnull",
        "obj",
        "np",
        "nan",
        "json",
        "JSONEncoder",
        "obj",
        "x",
        "np",
        "isnan",
        "x",
        "x",
        "x"
    ],
    "literals": [
        "'time,x,y,z'",
        "'uniform'",
        "\".gz\"",
        "\".xz\"",
        "\".lzma\"",
        "\".bz2\"",
        "\".zip\"",
        "\".csv\"",
        "\".pkl\"",
        "\".csv\"",
        "','",
        "'f4'",
        "'f4'",
        "'f4'",
        "'x'",
        "'y'",
        "'z'",
        "'time'",
        "\".pkl\"",
        "f\"Unknown file format: {ftype}\"",
        "'1s'",
        "'first'",
        "\"Filename\"",
        "\"Device\"",
        "\"Filesize(MB)\"",
        "\"SampleRate\"",
        "\"StartTime\"",
        "'%Y-%m-%d %H:%M:%S'",
        "\"EndTime\"",
        "'%Y-%m-%d %H:%M:%S'",
        "\".cwa\"",
        "\".gt3x\"",
        "\".bin\"",
        "f\"Unknown file format: {ftype}\"",
        "'ResampleRate'",
        "'ResampleRate'",
        "'SampleRate'",
        "'both'",
        "'first'",
        "'last'",
        "'both'",
        "\"Cannot infer frequency, using 1s\"",
        "'1s'",
        "'D'",
        "'D'",
        "'left'",
        "'time'",
        "'nearest'",
        "'1m'",
        "'mean'",
        "'mean'",
        "'median'",
        "f\"Unknown method: {method}\"",
        "'ignore'",
        "'Mean of empty slice'",
        "\"rb\"",
        "b\"\""
    ],
    "variables": [
        "p",
        "fsize",
        "ftype",
        "ftype",
        "tcol",
        "xcol",
        "ycol",
        "zcol",
        "data",
        "data",
        "name",
        "data",
        "freq",
        "sample_rate",
        "data",
        "data",
        "info",
        "data",
        "info",
        "info",
        "min_wear",
        "dt",
        "ok",
        "ok",
        "ok",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "nan",
        "nanlen",
        "x",
        "nan",
        "na_dates",
        "freq",
        "freq",
        "freq",
        "data",
        "data",
        "tdiff",
        "q1",
        "q3",
        "tdiff",
        "freq",
        "freq",
        "p",
        "extension",
        "filename",
        "dirname",
        "hash_md5"
    ],
    "comments": [
        "if file is compressed, check the next extension",
        "rename to standard names",
        "Quick fix: Drop duplicate indices. TODO: Maybe should be handled by actipy.",
        "keep ok days, rest is set to NaN",
        "make a copy to avoid modifying the original data",
        "make a copy to avoid modifying the original data",
        "check x contains a NaN and is not all NaN",
        "will be cast back to a Series automatically",
        "first attempt imputation using same day of week",
        "then try within weekday/weekend",
        "finally, use all other days",
        "extrapolate beyond start/end times to have full 24h",
        "Note that at exactly 00:00:00, the floor('D') and ceil('D') will be the same",
        "handles pandas NAType"
    ],
    "docstrings": [
        "\"\"\" Exclude days with less than `min_wear` of valid data \"\"\"",
        "\"\"\" Exclude first day, last day, or both \"\"\"",
        "\"\"\"\n    Imputes missing values in the given DataFrame using a multi-step approach.\n\n    Args:\n        data (pd.DataFrame): The DataFrame containing the data to be imputed.\n        extrapolate (bool, optional): Whether to extrapolate beyond start/end times to have full 24 hours. Defaults to True.\n        skip_full_missing_days (bool, optional): Whether to skip days that have all missing values. Defaults to True.\n\n    Returns:\n        pd.DataFrame: The DataFrame with missing values imputed.\n\n    \"\"\"",
        "\"\"\" Like pd.infer_freq but more forgiving \"\"\"",
        "\"\"\" Return parent folder, file name and file extension \"\"\""
    ],
    "functions": [
        "read",
        "exclude_wear_below_days",
        "exclude_first_last_days",
        "impute_missing",
        "fillna",
        "impute",
        "impute_days",
        "fillna",
        "infer_freq",
        "resolve_path",
        "md5",
        "nanint"
    ],
    "classes": [
        "NpEncoder"
    ]
}