{
    "identifiers": [
        "migen",
        "litex",
        "gen",
        "litex",
        "soc",
        "integration",
        "doc",
        "AutoDoc",
        "litex",
        "soc",
        "interconnect",
        "stream",
        "litex",
        "soc",
        "interconnect",
        "csr",
        "litei2c",
        "common",
        "litei2c",
        "crossbar",
        "LiteI2CCrossbar",
        "litei2c",
        "core",
        "master",
        "LiteI2CMaster",
        "litei2c",
        "phy",
        "generic",
        "LiteI2CPHYCore",
        "Module",
        "stream",
        "Endpoint",
        "i2c_core2phy_layout",
        "stream",
        "Endpoint",
        "i2c_phy2core_layout",
        "Signal",
        "LiteXModule",
        "sys_clk_freq",
        "phy",
        "pads",
        "clock_domain",
        "with_master",
        "i2c_master_tx_fifo_depth",
        "i2c_master_rx_fifo_depth",
        "phy",
        "pads",
        "ValueError",
        "LiteI2CPHYCore",
        "pads",
        "clock_domain",
        "sys_clk_freq",
        "LiteI2CCrossbar",
        "clock_domain",
        "comb",
        "phy",
        "enable",
        "eq",
        "crossbar",
        "enable",
        "with_master",
        "LiteI2CMaster",
        "tx_fifo_depth",
        "i2c_master_tx_fifo_depth",
        "rx_fifo_depth",
        "i2c_master_rx_fifo_depth",
        "crossbar",
        "get_port",
        "master",
        "enable",
        "comb",
        "port_master",
        "source",
        "connect",
        "master",
        "sink",
        "master",
        "source",
        "connect",
        "port_master",
        "sink",
        "clock_domain",
        "comb",
        "crossbar",
        "tx_cdc",
        "source",
        "connect",
        "phy",
        "sink",
        "phy",
        "source",
        "connect",
        "crossbar",
        "rx_cdc",
        "sink",
        "comb",
        "crossbar",
        "master",
        "source",
        "connect",
        "phy",
        "sink",
        "phy",
        "source",
        "connect",
        "crossbar",
        "master",
        "sink",
        "i2c_device",
        "crossbar",
        "get_port",
        "i2c_device",
        "enable",
        "comb",
        "port",
        "source",
        "connect",
        "i2c_device",
        "sink",
        "i2c_device",
        "source",
        "connect",
        "port",
        "sink"
    ],
    "literals": [
        "\"sys\"",
        "\"Either phy or pads must be provided.\"",
        "\"sys\""
    ],
    "variables": [
        "source",
        "sink",
        "enable",
        "phy",
        "phy",
        "crossbar",
        "crossbar",
        "master",
        "master",
        "port_master",
        "port"
    ],
    "comments": [
        "",
        "This file is part of LiteI2C.",
        "",
        "Copyright (c) 2024 Fin Maa√ü <f.maass@vogl-electronic.com>",
        "SPDX-License-Identifier: BSD-2-Clause"
    ],
    "docstrings": [
        "\"\"\"I2C Controller wrapper.\n\n    The ``LiteI2C`` class provides a wrapper that can instantiate ``LiteI2CMaster`` and connect it to the PHY.\n\n    Access to PHY can be shared via crossbar.\n\n    Parameters\n    ----------\n    sys_clk_freq : int\n        Frequency of the system clock.\n\n    phy : Module\n        Module or object that contains PHY stream interfaces and a enable signal to connect\n        the ``LiteI2C`` to. If not provided, it will be created automatically based on the pads.\n    \n    pads : Object\n        I2C pads description.\n\n    clock_domain : str\n        Name of LiteI2C clock domain.\n\n    with_master : bool\n        Enables register-operated I2C master controller.\n\n    \"\"\""
    ],
    "functions": [
        "add_i2c_device"
    ],
    "classes": [
        "LiteI2CCore",
        "LiteI2C"
    ]
}