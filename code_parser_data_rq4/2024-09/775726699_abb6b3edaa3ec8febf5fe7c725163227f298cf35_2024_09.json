{
    "identifiers": [
        "starsim",
        "ss",
        "numpy",
        "np",
        "sciris",
        "sc",
        "arr",
        "np",
        "count_nonzero",
        "arr",
        "ss",
        "Product",
        "df",
        "disease",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "disease",
        "df",
        "df",
        "state",
        "unique",
        "state",
        "health_states",
        "df",
        "loc",
        "df",
        "state",
        "state",
        "result_dist",
        "ss",
        "bernoulli",
        "thisdf",
        "p_positive",
        "values",
        "sim",
        "uids",
        "r",
        "ss",
        "uids",
        "r",
        "result_list",
        "state",
        "health_states",
        "getattr",
        "sim",
        "diseases",
        "disease",
        "state",
        "this_state",
        "uids",
        "len",
        "true_uids",
        "true_uids",
        "intersect",
        "uids",
        "result_dist",
        "state",
        "split",
        "these_uids",
        "len",
        "pos",
        "outcomes",
        "pos",
        "len",
        "neg",
        "outcomes",
        "neg",
        "outcomes",
        "ss",
        "Intervention",
        "pars",
        "test_prob_data",
        "years",
        "start",
        "end",
        "eligibility",
        "product",
        "name",
        "label",
        "kwargs",
        "name",
        "name",
        "label",
        "label",
        "default_pars",
        "rel_test",
        "update_pars",
        "pars",
        "kwargs",
        "years",
        "start",
        "ValueError",
        "errormsg",
        "years",
        "start",
        "end",
        "start",
        "years",
        "years",
        "end",
        "years",
        "years",
        "eligibility",
        "test_prob_data",
        "ss",
        "bernoulli",
        "make_test_prob_fn",
        "add_states",
        "ss",
        "BoolArr",
        "ss",
        "BoolArr",
        "ss",
        "FloatArr",
        "ss",
        "FloatArr",
        "ss",
        "FloatArr",
        "ss",
        "FloatArr",
        "product",
        "product",
        "outcome",
        "ss",
        "FloatArr",
        "outcome",
        "outcome",
        "product",
        "result_list",
        "outcome",
        "ss",
        "uids",
        "outcome",
        "product",
        "result_list",
        "property",
        "states",
        "outcomes",
        "values",
        "sim",
        "init_pre",
        "sim",
        "start",
        "sim",
        "pars",
        "start",
        "end",
        "sim",
        "pars",
        "end",
        "init_results",
        "sim",
        "npts",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "results",
        "results",
        "staticmethod",
        "sim",
        "uids",
        "sc",
        "isnumber",
        "test_prob_data",
        "test_prob_data",
        "sc",
        "checktype",
        "test_prob_data",
        "sc",
        "findnearest",
        "years",
        "sim",
        "year",
        "test_prob_data",
        "year_ind",
        "ValueError",
        "errormsg",
        "test_prob",
        "pars",
        "rel_test",
        "sim",
        "dt",
        "np",
        "clip",
        "test_prob",
        "a_min",
        "a_max",
        "test_prob",
        "sim",
        "ss",
        "uids",
        "check_eligibility",
        "sim",
        "len",
        "eligible_uids",
        "test_prob",
        "eligible_uids",
        "ti_scheduled",
        "sim",
        "ti",
        "uids",
        "accept_uids",
        "scheduled_uids",
        "uids",
        "ti",
        "ti_scheduled",
        "ti",
        "sim",
        "uids",
        "outcome",
        "ss",
        "uids",
        "outcome",
        "product",
        "result_list",
        "outcomes",
        "sim",
        "year",
        "start",
        "sim",
        "year",
        "end",
        "uids",
        "get_testers",
        "sim",
        "ti_tested",
        "sim",
        "ti",
        "len",
        "uids",
        "product",
        "administer",
        "sim",
        "uids",
        "outcomes",
        "k",
        "product",
        "result_list",
        "outcomes",
        "k",
        "last_outcomes",
        "k",
        "sim",
        "ti",
        "outcomes",
        "ti_diagnosed",
        "outcomes",
        "sim",
        "ti",
        "update_results",
        "outcomes",
        "sim",
        "ti",
        "results",
        "ti",
        "count",
        "ti_diagnosed",
        "ti",
        "results",
        "ti",
        "count",
        "ti_tested",
        "ti",
        "STITest",
        "pars",
        "treatments",
        "diseases",
        "treat_prob_data",
        "years",
        "start",
        "end",
        "eligibility",
        "name",
        "label",
        "kwargs",
        "years",
        "years",
        "start",
        "start",
        "end",
        "end",
        "eligibility",
        "eligibility",
        "name",
        "name",
        "label",
        "label",
        "default_pars",
        "p_treat",
        "ss",
        "bernoulli",
        "p",
        "update_pars",
        "pars",
        "kwargs",
        "sc",
        "tolist",
        "treatments",
        "diseases",
        "add_states",
        "ss",
        "FloatArr",
        "ss",
        "FloatArr",
        "treat_prob_data",
        "sim",
        "init_pre",
        "sim",
        "treat_prob_data",
        "np",
        "interp",
        "sim",
        "yearvec",
        "treat_prob_data",
        "year",
        "values",
        "treat_prob_data",
        "treat_prob",
        "values",
        "init_results",
        "sim",
        "npts",
        "results",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "disease",
        "diseases",
        "ss",
        "Result",
        "disease",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "name",
        "npts",
        "dtype",
        "scale",
        "label",
        "disease",
        "results",
        "results",
        "sim",
        "uids",
        "sim",
        "year",
        "start",
        "sim",
        "year",
        "end",
        "uids",
        "check_eligibility",
        "sim",
        "ti_tested",
        "sim",
        "ti",
        "len",
        "uids",
        "treat_prob",
        "pars",
        "p_treat",
        "treat_prob",
        "sim",
        "ti",
        "pars",
        "p_treat",
        "split",
        "uids",
        "treatment",
        "treatments",
        "treat_uids",
        "ti_referred",
        "sim",
        "ti",
        "ti_dismissed",
        "sim",
        "ti",
        "update_results",
        "update_results",
        "sim",
        "ti",
        "sim",
        "people",
        "ti_referred",
        "ti",
        "ti_dismissed",
        "ti",
        "ti_tested",
        "ti",
        "results",
        "ti",
        "count",
        "just_tested",
        "disease",
        "diseases",
        "disease",
        "results",
        "ti",
        "count",
        "disease",
        "treatable",
        "treat_uids",
        "disease",
        "results",
        "ti",
        "count",
        "disease",
        "susceptible",
        "treat_uids",
        "disease",
        "results",
        "ti",
        "count",
        "disease",
        "susceptible",
        "dismiss_uids",
        "disease",
        "results",
        "ti",
        "count",
        "disease",
        "treatable",
        "dismiss_uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "ppl",
        "ct",
        "infected",
        "ppl",
        "tv",
        "infected",
        "ppl",
        "vd",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ng",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "ct",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "tv",
        "infected",
        "uids",
        "results",
        "len",
        "just_tested",
        "ppl",
        "vd",
        "infected",
        "uids",
        "ss",
        "Intervention",
        "pars",
        "disease",
        "eligibility",
        "max_capacity",
        "years",
        "args",
        "kwargs",
        "args",
        "disease",
        "default_pars",
        "treat_prob",
        "ss",
        "bernoulli",
        "p",
        "treat_eff",
        "ss",
        "bernoulli",
        "p",
        "disease",
        "update_pars",
        "pars",
        "kwargs",
        "eligibility",
        "eligibility",
        "ss",
        "uids",
        "max_capacity",
        "years",
        "add_states",
        "ss",
        "BoolArr",
        "ss",
        "FloatArr",
        "sim",
        "init_pre",
        "sim",
        "init_results",
        "ss",
        "Result",
        "disease",
        "sim",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "sim",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "sim",
        "npts",
        "dtype",
        "scale",
        "label",
        "ss",
        "Result",
        "disease",
        "sim",
        "npts",
        "dtype",
        "scale",
        "label",
        "sim",
        "diseases",
        "disease",
        "results",
        "results",
        "results",
        "results",
        "sim",
        "ss",
        "uids",
        "callable",
        "eligibility",
        "check_eligibility",
        "sim",
        "eligibility",
        "len",
        "eligible_uids",
        "pars",
        "treat_prob",
        "eligible_uids",
        "len",
        "accept_uids",
        "queue",
        "accept_uids",
        "tolist",
        "sim",
        "np",
        "array",
        "dtype",
        "len",
        "queue",
        "max_capacity",
        "queue",
        "sc",
        "isnumber",
        "max_capacity",
        "max_capacity",
        "sc",
        "checktype",
        "max_capacity",
        "sc",
        "findnearest",
        "years",
        "sim",
        "year",
        "max_capacity",
        "year_ind",
        "max_capacity",
        "len",
        "queue",
        "queue",
        "queue",
        "max_capacity",
        "ss",
        "uids",
        "treat_candidates",
        "uids",
        "sim",
        "uids",
        "return_format",
        "sim",
        "diseases",
        "disease",
        "treatable",
        "sim",
        "diseases",
        "disease",
        "susceptible",
        "uids",
        "inf",
        "uids",
        "uids",
        "sus",
        "uids",
        "set_treat_eff",
        "inf_uids",
        "pars",
        "treat_eff",
        "inf_uids",
        "np",
        "setdiff1d",
        "inf_uids",
        "successful",
        "sus_uids",
        "return_format",
        "successful",
        "unsuccessful",
        "unnecessary",
        "return_format",
        "successful",
        "output",
        "sim",
        "treat_succ",
        "sim",
        "diseases",
        "disease",
        "clear_infection",
        "treat_succ",
        "sim",
        "diseases",
        "disease",
        "wipe_dates",
        "treat_succ",
        "sim",
        "sc",
        "objdict",
        "successful",
        "unsuccessful",
        "unnecessary",
        "add_to_queue",
        "sim",
        "get_candidates",
        "sim",
        "treated",
        "ti_treated",
        "sim",
        "ti",
        "len",
        "treat_uids",
        "administer",
        "sim",
        "uids",
        "treat_uids",
        "e",
        "e",
        "queue",
        "e",
        "treat_uids",
        "outcomes",
        "len",
        "treat_succ",
        "change_states",
        "sim",
        "treat_succ",
        "update_results",
        "treat_uids",
        "sim",
        "ti",
        "ti_treated",
        "ti",
        "uids",
        "results",
        "len",
        "outcomes",
        "results",
        "len",
        "outcomes",
        "results",
        "len",
        "outcomes",
        "results",
        "len",
        "treat_uids",
        "sim",
        "diseases",
        "disease",
        "results",
        "ti",
        "len",
        "outcomes",
        "sim",
        "diseases",
        "disease",
        "results",
        "ti",
        "len",
        "outcomes",
        "sim",
        "diseases",
        "disease",
        "results",
        "ti",
        "len",
        "outcomes",
        "sim",
        "diseases",
        "disease",
        "results",
        "ti",
        "len",
        "treat_uids",
        "ss",
        "Intervention",
        "disease",
        "eligible",
        "test",
        "test_prob",
        "kwargs",
        "kwargs",
        "disease",
        "eligible",
        "test",
        "ss",
        "bernoulli",
        "test_prob",
        "sim",
        "uids",
        "len",
        "uids",
        "ss",
        "uids",
        "sim",
        "networks",
        "find_contacts",
        "uids",
        "as_array",
        "sim",
        "diseases",
        "disease",
        "log",
        "source",
        "_",
        "network",
        "log",
        "in_edges",
        "uids",
        "data",
        "network",
        "contacts",
        "add",
        "source",
        "_",
        "target",
        "network",
        "log",
        "out_edges",
        "uids",
        "data",
        "network",
        "contacts",
        "add",
        "target",
        "test_prob",
        "ss",
        "uids",
        "contacts",
        "sim",
        "uids",
        "test",
        "schedule",
        "uids",
        "sim",
        "ti",
        "sim",
        "eligible",
        "sim",
        "identify_contacts",
        "sim",
        "uids",
        "notify",
        "sim",
        "uids"
    ],
    "literals": [
        "\"STIDx\"",
        "\"STITest\"",
        "\"SyndromicMgmt\"",
        "\"STITreatment\"",
        "\"PartnerNotification\"",
        "'positive'",
        "'negative'",
        "'positive'",
        "'positive'",
        "'negative'",
        "'negative'",
        "'Provide either years or start_year, not both.'",
        "'tested'",
        "'diagnosed'",
        "'ti_tested'",
        "'ti_scheduled'",
        "'ti_diagnosed'",
        "'tests'",
        "f'ti_{outcome}'",
        "'new_diagnoses'",
        "\"New diagnoses\"",
        "'new_tests'",
        "\"New tests\"",
        "'arraylike'",
        "'Format of test_prob_data must be float or array.'",
        "'positive'",
        "'new_diagnoses'",
        "'new_tests'",
        "'ti_referred'",
        "'ti_dismissed'",
        "'care_seekers'",
        "\"Care seekers\"",
        "'ng_only'",
        "'Only NG'",
        "'ct_only'",
        "'Only CT'",
        "'tv_only'",
        "'Only TV'",
        "'vd_only'",
        "'Only VD'",
        "'ng_ct'",
        "'NG & CT'",
        "'ng_tv'",
        "'NG & TV'",
        "'ng_vd'",
        "'NG & VD'",
        "'ct_tv'",
        "'CT & TV'",
        "'ct_vd'",
        "'CT & VD'",
        "'tv_vd'",
        "'TV & VD'",
        "'ng_ct_tv'",
        "'NG & CT & TV'",
        "'ng_ct_vd'",
        "'NG & CT & VD'",
        "'ng_tv_vd'",
        "'NG & TV & VD'",
        "'ct_tv_vd'",
        "'CT & TV & VD'",
        "'ng_ct_tv_vd'",
        "'NG & CT & TV & VD'",
        "'all_ng'",
        "'All NG'",
        "'all_ct'",
        "'All CT'",
        "'all_tv'",
        "'All TV'",
        "'all_vd'",
        "'All VD'",
        "'new_false_neg'",
        "\"False negatives\"",
        "'new_true_neg'",
        "\"True negatives\"",
        "'new_false_pos'",
        "\"False positive\"",
        "'new_true_pos'",
        "\"True positives\"",
        "'care_seekers'",
        "'new_true_pos'",
        "'new_false_pos'",
        "'new_true_neg'",
        "'new_false_pos'",
        "'ng_only'",
        "'ct_only'",
        "'tv_only'",
        "'vd_only'",
        "'ng_ct'",
        "'ng_tv'",
        "'ng_vd'",
        "'ct_tv'",
        "'ct_vd'",
        "'tv_vd'",
        "'ng_ct_tv'",
        "'ng_ct_vd'",
        "'ng_tv_vd'",
        "'ct_tv_vd'",
        "'ng_ct_tv_vd'",
        "'all_ng'",
        "'all_ct'",
        "'all_tv'",
        "'all_vd'",
        "'treated'",
        "'ti_treated'",
        "'new_treated'",
        "\"Number treated\"",
        "'new_treated_success'",
        "\"Successfully treated\"",
        "'new_treated_failure'",
        "\"Treatment failure\"",
        "'new_treated_unnecessary'",
        "\"Overtreatment\"",
        "'arraylike'",
        "'dict'",
        "'dict'",
        "'successful'",
        "'unsuccessful'",
        "'unnecessary'",
        "'array'",
        "'successful'",
        "'new_treated_success'",
        "'successful'",
        "'new_treated_failure'",
        "'unsuccessful'",
        "'new_treated_unnecessary'",
        "'unnecessary'",
        "'new_treated'",
        "'new_treated_success'",
        "'successful'",
        "'new_treated_failure'",
        "'unsuccessful'",
        "'new_treated_unnecessary'",
        "'unnecessary'",
        "'new_treated'",
        "'structuredsexual'",
        "\"network\"",
        "'structuredsexual'",
        "\"network\"",
        "'structuredsexual'"
    ],
    "variables": [
        "__all__",
        "disease",
        "df",
        "health_states",
        "result_list",
        "result_dist",
        "thisdf",
        "state",
        "outcomes",
        "this_state",
        "true_uids",
        "these_uids",
        "pos",
        "neg",
        "outcomes",
        "outcomes",
        "errormsg",
        "years",
        "start",
        "end",
        "start",
        "end",
        "eligibility",
        "test_prob_data",
        "test_prob",
        "product",
        "outcomes",
        "outcomes",
        "last_outcomes",
        "start",
        "end",
        "npts",
        "results",
        "test_prob",
        "year_ind",
        "test_prob",
        "errormsg",
        "test_prob",
        "test_prob",
        "accept_uids",
        "eligible_uids",
        "accept_uids",
        "scheduled_uids",
        "uids",
        "outcomes",
        "last_outcomes",
        "uids",
        "uids",
        "outcomes",
        "last_outcomes",
        "ti",
        "treatments",
        "diseases",
        "treat_prob_data",
        "treat_prob",
        "treat_prob",
        "npts",
        "results",
        "uids",
        "uids",
        "treat_uids",
        "dismiss_uids",
        "treatment",
        "eligibility",
        "treat_uids",
        "dismiss_uids",
        "ti",
        "ppl",
        "treat_uids",
        "dismiss_uids",
        "just_tested",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "ti",
        "requires",
        "disease",
        "eligibility",
        "eligibility",
        "queue",
        "max_capacity",
        "years",
        "results",
        "accept_uids",
        "eligible_uids",
        "eligible_uids",
        "accept_uids",
        "treat_candidates",
        "treat_candidates",
        "max_capacity",
        "year_ind",
        "max_capacity",
        "treat_candidates",
        "treat_candidates",
        "inf",
        "sus",
        "inf_uids",
        "sus_uids",
        "successful",
        "unsuccessful",
        "unnecessary",
        "output",
        "output",
        "outcomes",
        "treat_uids",
        "treat_uids",
        "treat_uids",
        "outcomes",
        "queue",
        "treat_succ",
        "ti",
        "treat_uids",
        "ti",
        "ti",
        "ti",
        "ti",
        "disease",
        "eligible",
        "test",
        "test_prob",
        "contacts",
        "log",
        "uids",
        "uids"
    ],
    "comments": [
        "%% Helper functions",
        "%% Base classes",
        "Store the probability of returning each possible result",
        "Find people for which this state is true",
        "Find intersection of people in this state and supplied UIDs",
        "Years",
        "Testing eligibility and uptake",
        "States",
        "Products",
        "Scale and validate",
        "Select UIDs for testing based on eligibility and test_prob",
        "Apply eligiblity",
        "Add on scheduled tests",
        "Schedule a future test for specified UIDs at specified time indices",
        "Apply if within the start years",
        "Set time of diagnosis",
        "Update results",
        "Store results",
        "The probability that a person with discharge will be offered treatment",
        "Update results",
        "Custom results",
        "States",
        "Apply eligiblity - uses base class from ss.Intervention",
        "Return outcomes",
        "Figure out who to treat",
        "Treat people",
        "Recreate the queue, removing treated people",
        "Change states",
        "Update results",
        "Store new treatment results both in this intervention and in the gonorrhea disease module results",
        "Return UIDs of people that have been identified as contacts and should be notified",
        "Find current contacts",
        "Current contacts",
        "Find historical contacts",
        "Add the infecting agents",
        "Add infected agents",
        "Filter by test_prob and return UIDs",
        "Schedule a test for identified contacts at the next timestep (this also ensures that contacts tracing will take place for partners that test positive)",
        "Could include a parameter here for acceptance of testing (if separating out probabilities of notification and testing)",
        "print(f'Scheduling {len(uids)} tests (of whom {(~sim.diseases.syphilis.susceptible[uids]).sum()} will be positive)')"
    ],
    "docstrings": [
        "\"\"\"\nDefine interventions for STIsim\n\"\"\"",
        "\"\"\"\n    Generic class for diagnostics with a positive/negative outcome\n    Uses bernoulli sampling, so can only be used for tests with binary outcomes\n    Results vary depending on agents' true underlying health state\n    \"\"\"",
        "\"\"\"\n        Administer a testing product.\n        \"\"\"",
        "\"\"\"\n    Base class for STI testing\n    \"\"\"",
        "\"\"\" Testing probabilites over time \"\"\"",
        "\"\"\"\n        Find who tests by applying eligibility and coverage/uptake\n        \"\"\"",
        "\"\"\" Apply the testing intervention \"\"\"",
        "\"\"\"\n    Base class for syndromic management.\n    Unlike other test classes, this doesn't return positive/negative outcomes, since\n    syndromic management doesn't involve reaching a diagnosis.\n    Rather, the testing intervention itself contains a linked treatment intervention.\n    \"\"\"",
        "\"\"\" Apply syndromic management \"\"\"",
        "\"\"\"\n    Base class for treatment of STI infection.\n    The majority of STI treatments will clear infection.\n    Args:\n        pars:\n        disease (str): should match the name of one of the diseases in the simulation\n    \"\"\"",
        "\"\"\"\n        Add people who are willing to accept treatment to the queue\n        \"\"\"",
        "\"\"\"\n        Get the indices of people who are candidates for treatment\n        \"\"\"",
        "\"\"\" Can be changed by derived classes \"\"\"",
        "\"\"\" Administer treatment, keeping track of unnecessarily treated individuals \"\"\"",
        "\"\"\" Change the states of people who are treated \"\"\"",
        "\"\"\"\n        Apply treatment. On each timestep, this method will add eligible people who are willing to accept treatment to a\n        queue, and then will treat as many people in the queue as there is capacity for.\n        \"\"\"",
        "\"\"\"\n\n        :param disease: The disease module from which to draw the transmission tree used to find contacts\n        :param eligible: A function `f(sim)` that returns the UIDs/BoolArr of people to trace (typically people who just tested positive)\n        :param test: The testing intervention to use when testing identified contacts\n        :param test_prob: The probability of a contact being identified and accepting a test\n        :param kwargs: Other arguments passed to ``ss.Intervention``\n        \"\"\""
    ],
    "functions": [
        "count",
        "administer",
        "states",
        "init_pre",
        "init_results",
        "make_test_prob_fn",
        "get_testers",
        "schedule",
        "apply",
        "update_results",
        "init_pre",
        "init_results",
        "apply",
        "update_results",
        "init_pre",
        "init_results",
        "add_to_queue",
        "get_candidates",
        "set_treat_eff",
        "administer",
        "change_states",
        "apply",
        "update_results",
        "identify_contacts",
        "notify",
        "apply"
    ],
    "classes": [
        "STIDx",
        "STITest",
        "SyndromicMgmt",
        "STITreatment",
        "PartnerNotification"
    ]
}