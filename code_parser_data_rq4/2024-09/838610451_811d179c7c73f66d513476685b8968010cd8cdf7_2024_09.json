{
    "identifiers": [
        "datetime",
        "datetime",
        "timedelta",
        "fastapi",
        "responses",
        "JSONResponse",
        "pytz",
        "timezone",
        "sqlalchemy",
        "ext",
        "asyncio",
        "AsyncSession",
        "sqlalchemy",
        "future",
        "select",
        "jose",
        "jwt",
        "ExpiredSignatureError",
        "JWTError",
        "fastapi",
        "APIRouter",
        "Depends",
        "Header",
        "HTTPException",
        "db",
        "models",
        "Auth",
        "User",
        "db",
        "session",
        "get_db",
        "dotenv",
        "load_dotenv",
        "os",
        "services",
        "auth_service",
        "create_access_token",
        "schemas",
        "auth",
        "TokenRequest",
        "core",
        "logging",
        "logger",
        "core",
        "config",
        "SECRET_KEY",
        "ALGORITHM",
        "ACCESS_TOKEN_EXPIRE_MINUTES",
        "pytz",
        "APIRouter",
        "router",
        "post",
        "token_data",
        "TokenRequest",
        "authorization",
        "Header",
        "db",
        "AsyncSession",
        "Depends",
        "get_db",
        "authorization",
        "startswith",
        "logger",
        "error",
        "HTTPException",
        "status_code",
        "detail",
        "authorization",
        "split",
        "token_data",
        "refresh_token",
        "logger",
        "info",
        "access_token",
        "logger",
        "info",
        "refresh_token",
        "jwt",
        "decode",
        "access_token",
        "SECRET_KEY",
        "algorithms",
        "ALGORITHM",
        "payload",
        "get",
        "logger",
        "info",
        "user_email",
        "JSONResponse",
        "status_code",
        "content",
        "access_token",
        "refresh_token",
        "ExpiredSignatureError",
        "logger",
        "warning",
        "select",
        "Auth",
        "User",
        "join",
        "User",
        "Auth",
        "user_id",
        "User",
        "id",
        "where",
        "Auth",
        "refresh_token",
        "refresh_token",
        "db",
        "execute",
        "stmt",
        "result",
        "first",
        "auth_entry",
        "logger",
        "warning",
        "JSONResponse",
        "status_code",
        "content",
        "auth_entry",
        "logger",
        "info",
        "auth",
        "user_id",
        "user",
        "email",
        "create_access_token",
        "data",
        "user",
        "email",
        "expires_delta",
        "ACCESS_TOKEN_EXPIRE_MINUTES",
        "new_access_token",
        "db",
        "commit",
        "JSONResponse",
        "status_code",
        "content",
        "new_access_token",
        "refresh_token",
        "JWTError",
        "jwt_error",
        "logger",
        "error",
        "jwt_error",
        "JSONResponse",
        "status_code",
        "content"
    ],
    "literals": [
        "\"/verify\"",
        "\"Bearer \"",
        "\"Invalid authorization format\"",
        "\"Invalid authorization format\"",
        "\" \"",
        "f\"Received Access Token for verification: {access_token}\"",
        "f\"Received Refresh Token for verification: {refresh_token}\"",
        "\"user_email\"",
        "f\"엑세스 토큰 유효, 유저 이메일: {user_email}\"",
        "\"status\"",
        "\"VALID_ACCESS_TOKEN\"",
        "\"access_token\"",
        "\"refresh_token\"",
        "\"detail\"",
        "\"Access token is still valid.\"",
        "\"엑세스 토큰 만료, 리프레시 토큰 확인 필요.\"",
        "\"Invalid Refresh Token.\"",
        "\"status\"",
        "\"EXPIRED_REFRESH_TOKEN\"",
        "\"access_token\"",
        "\"refresh_token\"",
        "\"detail\"",
        "\"Refresh token expired. Please log in again.\"",
        "f\"User ID: {auth.user_id}, Email: {user.email}로 새로운 엑세스 토큰 발급\"",
        "\"user_email\"",
        "\"status\"",
        "\"VALID_REFRESH_TOKEN\"",
        "\"access_token\"",
        "\"refresh_token\"",
        "\"detail\"",
        "\"Access token renewed.\"",
        "f\"Invalid Token. Error: {jwt_error}\"",
        "\"status\"",
        "\"INVALID_TOKEN\"",
        "\"access_token\"",
        "\"refresh_token\"",
        "\"detail\"",
        "\"Invalid token.\""
    ],
    "variables": [
        "router",
        "access_token",
        "refresh_token",
        "payload",
        "user_email",
        "stmt",
        "result",
        "auth_entry",
        "auth",
        "user",
        "new_access_token",
        "auth",
        "access_token"
    ],
    "comments": [
        "토큰 검증 및 재발급 API",
        "엑세스 토큰 검증",
        "user_email을 추출",
        "엑세스 토큰이 만료된 경우 리프레시 토큰으로 사용자 정보를 조회 (ORM 방식)",
        "사용자 정보 추출",
        "auth_entry는 Auth와 User 객체를 포함하는 튜플",
        "새 엑세스 토큰 발급 (user_email 포함)",
        "DB에 새로운 엑세스 토큰 정보 업데이트 (ORM 방식)"
    ],
    "docstrings": [],
    "functions": [
        "verify_token"
    ],
    "classes": []
}