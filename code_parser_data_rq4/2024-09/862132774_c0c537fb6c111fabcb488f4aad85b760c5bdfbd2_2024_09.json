{
    "identifiers": [
        "com",
        "example",
        "controller",
        "com",
        "example",
        "entity",
        "UserEntity",
        "com",
        "example",
        "repository",
        "UserRepository",
        "com",
        "example",
        "oauthjwt",
        "entity",
        "UserEntity",
        "com",
        "example",
        "oauthjwt",
        "repository",
        "UserRepository",
        "lombok",
        "slf4j",
        "Slf4j",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PostMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestBody",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RestController",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "RestController",
        "RequestMapping",
        "Slf4j",
        "userRepository",
        "userRepository",
        "userRepository",
        "userRepository",
        "PostMapping",
        "RequestBody",
        "request",
        "log",
        "info",
        "request",
        "account",
        "request",
        "get",
        "account",
        "user",
        "userRepository",
        "findByEmail",
        "account",
        "user",
        "user",
        "providerInfo",
        "user",
        "getUsername",
        "split",
        "provider",
        "providerInfo",
        "log",
        "info",
        "provider",
        "ResponseEntity",
        "ok",
        "Collections",
        "singletonMap",
        "provider",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "NOT_FOUND",
        "body"
    ],
    "literals": [
        "\"/api\"",
        "\"/check-account\"",
        "\"Check account request: {}\"",
        "\"account\"",
        "\" \"",
        "\"provider\"",
        "\"등록된 소셜 로그인 제공자가 없습니다.\""
    ],
    "variables": [
        "userRepository"
    ],
    "comments": [
        "이메일로 사용자 정보 조회",
        "소셜 로그인 제공자 정보 반환 (username에서 제공자 정보 추출)",
        "소셜 제공자 (google, naver, kakao 등)",
        "등록되지 않은 계정일 경우"
    ],
    "docstrings": [],
    "functions": [
        "AuthController",
        "checkAccount"
    ],
    "classes": [
        "AuthController"
    ]
}