{
    "identifiers": [
        "TextAreaCharCounter",
        "mdiEye",
        "mdiEyeOff",
        "LitElement",
        "css",
        "html",
        "customElement",
        "eventOptions",
        "property",
        "state",
        "HomeAssistant",
        "customElement",
        "LitElement",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "state",
        "html",
        "html",
        "mdiEyeOff",
        "mdiEye",
        "eventOptions",
        "ev",
        "ev",
        "css"
    ],
    "literals": [
        "\"@material/mwc-textfield/mwc-textfield-base\"",
        "\"@mdi/js\"",
        "\"lit\"",
        "\"lit/decorators\"",
        "\"../types\"",
        "\"./ha-icon-button\"",
        "\"./ha-textfield\"",
        "\"ha-password-field\"",
        "\"error-message\"",
        "string",
        "string",
        "string",
        "\"input-spellcheck\"",
        "string",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"input-mode\"",
        "string",
        "\"\"",
        "<ha-textfield\n        .invalid=${this.invalid}\n        .errorMessage=${this.errorMessage}\n        .icon=${this.icon}\n        .iconTrailing=${this.iconTrailing}\n        .autocomplete=${this.autocomplete}\n        .autocorrect=${this.autocorrect}\n        .inputSpellcheck=${this.inputSpellcheck}\n        .value=${this.value}\n        .placeholder=${this.placeholder}\n        .label=${this.label}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        .minLength=${this.minLength}\n        .maxLength=${this.maxLength}\n        .outlined=${this.outlined}\n        .helper=${this.helper}\n        .validateOnInitialRender=${this.validateOnInitialRender}\n        .validationMessage=${this.validationMessage}\n        .autoValidate=${this.autoValidate}\n        .pattern=${this.pattern}\n        .size=${this.size}\n        .helperPersistent=${this.helperPersistent}\n        .charCounter=${this.charCounter}\n        .endAligned=${this.endAligned}\n        .prefix=${this.prefix}\n        .name=${this.name}\n        .inputMode=${this.inputMode}\n        .readOnly=${this.readOnly}\n        .autocapitalize=${this.autocapitalize}\n        .type=${this._unmaskedPassword ? \"text\" : \"password\"}\n        .suffix=${html`<div style=\"width: 24px\"></div>`}\n        @input=${this._handleInputChange}\n      ></ha-textfield>\n      <ha-icon-button\n        toggles\n        .label=${this.hass?.localize(\n          this._unmaskedPassword\n            ? \"ui.components.selectors.text.hide_password\"\n            : \"ui.components.selectors.text.show_password\"\n        ) || (this._unmaskedPassword ? \"Hide password\" : \"Show password\")}\n        @click=${this._toggleUnmaskedPassword}\n        .path=${this._unmaskedPassword ? mdiEyeOff : mdiEye}\n      ></ha-icon-button>",
        "\"text\"",
        "\"password\"",
        "<div style=\"width: 24px\"></div>",
        "\"ui.components.selectors.text.hide_password\"",
        "\"ui.components.selectors.text.show_password\"",
        "\"Hide password\"",
        "\"Show password\"",
        ":host {\n      display: block;\n      position: relative;\n    }\n    ha-textfield {\n      width: 100%;\n    }\n    ha-icon-button {\n      position: absolute;\n      top: 8px;\n      right: 8px;\n      inset-inline-start: initial;\n      inset-inline-end: 8px;\n      --mdc-icon-button-size: 40px;\n      --mdc-icon-size: 20px;\n      color: var(--secondary-text-color);\n      direction: var(--direction);\n    }",
        "\"ha-password-field\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "render",
        "_toggleUnmaskedPassword",
        "_handleInputChange"
    ],
    "classes": [
        "HaPasswordField"
    ]
}