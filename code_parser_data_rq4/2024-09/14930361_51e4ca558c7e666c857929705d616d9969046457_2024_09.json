{
    "identifiers": [
        "org",
        "matheclipse",
        "core",
        "reflection",
        "system",
        "org",
        "matheclipse",
        "core",
        "basic",
        "Config",
        "org",
        "matheclipse",
        "core",
        "eval",
        "Errors",
        "org",
        "matheclipse",
        "core",
        "eval",
        "EvalEngine",
        "org",
        "matheclipse",
        "core",
        "eval",
        "interfaces",
        "AbstractCoreFunctionEvaluator",
        "org",
        "matheclipse",
        "core",
        "expression",
        "ApcomplexNum",
        "org",
        "matheclipse",
        "core",
        "expression",
        "ApfloatNum",
        "org",
        "matheclipse",
        "core",
        "expression",
        "F",
        "org",
        "matheclipse",
        "core",
        "expression",
        "S",
        "org",
        "matheclipse",
        "core",
        "interfaces",
        "IAST",
        "org",
        "matheclipse",
        "core",
        "interfaces",
        "IExpr",
        "org",
        "matheclipse",
        "core",
        "interfaces",
        "ISymbol",
        "org",
        "matheclipse",
        "parser",
        "client",
        "ParserConfig",
        "Override",
        "ast",
        "engine",
        "numericEval",
        "ast",
        "engine",
        "Override",
        "ast",
        "engine",
        "arg1",
        "ast",
        "arg1",
        "arg1",
        "isListOrAssociation",
        "arg1",
        "isRuleAST",
        "arg1",
        "mapThread",
        "ast",
        "ast",
        "isAST1",
        "org",
        "matheclipse",
        "core",
        "reflection",
        "system",
        "N",
        "evalN1",
        "arg1",
        "engine",
        "arg2",
        "ast",
        "arg2",
        "oldNumericMode",
        "engine",
        "isNumericMode",
        "oldDigitPrecision",
        "engine",
        "getNumericPrecision",
        "nDigitPrecision",
        "oldDigitPrecision",
        "arg2",
        "engine",
        "evaluateNonNumeric",
        "arg2",
        "nDigitPrecision",
        "arg2",
        "toIntDefault",
        "nDigitPrecision",
        "Errors",
        "printMessage",
        "S",
        "N",
        "F",
        "arg2",
        "F",
        "C1",
        "engine",
        "nDigitPrecision",
        "Config",
        "MAX_PRECISION_APFLOAT",
        "Errors",
        "printMessage",
        "S",
        "N",
        "F",
        "arg2",
        "F",
        "ZZ",
        "Config",
        "MAX_PRECISION_APFLOAT",
        "engine",
        "org",
        "matheclipse",
        "core",
        "reflection",
        "system",
        "N",
        "evalN2",
        "arg1",
        "nDigitPrecision",
        "engine",
        "engine",
        "setNumericMode",
        "oldNumericMode",
        "engine",
        "setNumericPrecision",
        "oldDigitPrecision",
        "Override",
        "ast",
        "ARGS_1_2",
        "Override",
        "newSymbol",
        "expr",
        "engine",
        "N",
        "evalN1",
        "expr",
        "Config",
        "USE_EXTENDED_PRECISION_IN_N",
        "engine",
        "expr",
        "useExtendedPrecision",
        "engine",
        "oldNumericMode",
        "engine",
        "isNumericMode",
        "oldDigitPrecision",
        "engine",
        "getNumericPrecision",
        "oldSignificantFigures",
        "engine",
        "getSignificantFigures",
        "numericPrecision",
        "oldDigitPrecision",
        "expr",
        "engine",
        "evaluate",
        "expr",
        "expr",
        "isInexactNumber",
        "expr",
        "expr",
        "isListOrAssociation",
        "expr",
        "isRuleAST",
        "expr",
        "mapThread",
        "F",
        "N",
        "F",
        "Slot1",
        "useExtendedPrecision",
        "engine",
        "setDeterminePrecision",
        "expr",
        "engine",
        "setNumericMode",
        "engine",
        "setNumericMode",
        "numericPrecision",
        "oldSignificantFigures",
        "expr",
        "isAST",
        "topSymbol",
        "expr",
        "topHead",
        "expr",
        "engine",
        "evalArgs",
        "expr",
        "topSymbol",
        "getAttributes",
        "orElse",
        "expr",
        "result",
        "engine",
        "evalWithoutNumericReset",
        "expr",
        "result",
        "F",
        "num",
        "result",
        "evalf",
        "result",
        "F",
        "complexNum",
        "result",
        "evalfc",
        "result",
        "engine",
        "setNumericMode",
        "oldNumericMode",
        "engine",
        "setNumericPrecision",
        "oldDigitPrecision",
        "expr",
        "nDigitPrecision",
        "engine",
        "expr",
        "engine",
        "evaluate",
        "expr",
        "expr",
        "isInexactNumber",
        "expr",
        "expr",
        "isListOrAssociation",
        "expr",
        "isRuleAST",
        "expr",
        "mapThread",
        "F",
        "N",
        "F",
        "Slot1",
        "F",
        "ZZ",
        "nDigitPrecision",
        "maxSize",
        "Config",
        "MAX_OUTPUT_SIZE",
        "MAX_VALUE",
        "MAX_VALUE",
        "Config",
        "MAX_OUTPUT_SIZE",
        "significantFigures",
        "nDigitPrecision",
        "maxSize",
        "maxSize",
        "nDigitPrecision",
        "nDigitPrecision",
        "ParserConfig",
        "MACHINE_PRECISION",
        "nDigitPrecision",
        "ParserConfig",
        "MACHINE_PRECISION",
        "engine",
        "setNumericMode",
        "nDigitPrecision",
        "significantFigures",
        "engine",
        "evalWithoutNumericReset",
        "expr"
    ],
    "literals": [
        "\"precsm\"",
        "\"precgt\""
    ],
    "variables": [],
    "comments": [
        "Requested precision `1` is smaller than `2`.",
        "Requested precision `1` is greater than `2`.",
        "Config.MACHINE_PRECISION;",
        "if (expr.isNumericFunction(true)) {",
        "engine.setNumericMode(true, numericPrecision, oldSignificantFigures);",
        "IExpr temp = engine.evalWithoutNumericReset(expr);",
        "if (temp.isListOrAssociation() || temp.isRuleAST()) {",
        "return ((IAST) temp).mapThread(F.N(F.Slot1), 1);",
        "}",
        "return temp;",
        "}",
        "first try symbolic evaluation",
        "after symbolic evaluation do numeric evaluation with n-digit precision"
    ],
    "docstrings": [
        "*\n *\n * <pre>\n * N(expr)\n * </pre>\n *\n * <blockquote>\n *\n * <p>\n * gives the numerical value of <code>expr</code>.<br>\n *\n * </blockquote>\n *\n * <pre>\n * N(expr, precision)\n * </pre>\n *\n * <blockquote>\n *\n * <p>\n * evaluates <code>expr</code> numerically with a precision of <code>prec</code> digits.<br>\n *\n * </blockquote>\n *\n * <p>\n * <strong>Note</strong>: the upper case identifier <code>N</code> is different from the lower case\n * identifier <code>n</code>.\n *\n * <h3>Examples</h3>\n *\n * <pre>\n * &gt;&gt; N(Pi)\n * 3.141592653589793\n *\n * &gt;&gt; N(Pi, 50)\n * 3.1415926535897932384626433832795028841971693993751\n *\n * &gt;&gt; N(1/7)\n * 0.14285714285714285\n *\n * &gt;&gt; N(1/7, 5)\n * 1.4285714285714285714e-1\n * </pre>"
    ],
    "functions": [
        "N",
        "IExpr",
        "evaluate",
        "IExpr",
        "numericEval",
        "expectedArgSize",
        "setUp",
        "IExpr",
        "evalN1",
        "IExpr",
        "evalN1",
        "IExpr",
        "evalN2"
    ],
    "classes": [
        "N"
    ]
}