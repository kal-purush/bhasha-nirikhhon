{
    "identifiers": [
        "FragmentSelectorShape",
        "Algebra",
        "shape",
        "operation",
        "Algebra",
        "options",
        "doesShapeAcceptOperationRecurseShape",
        "shape",
        "shape",
        "operation",
        "options",
        "shapeTop",
        "shapeActive",
        "operation",
        "Algebra",
        "options",
        "shapeActive",
        "shapeActive",
        "child",
        "doesShapeAcceptOperationRecurseShape",
        "shapeTop",
        "child",
        "operation",
        "options",
        "shapeActive",
        "shapeActive",
        "child",
        "doesShapeAcceptOperationRecurseShape",
        "shapeTop",
        "child",
        "operation",
        "options",
        "shapeActive",
        "doesShapeAcceptOperationRecurseShape",
        "shapeTop",
        "shapeActive",
        "operation",
        "options",
        "options",
        "shapeActive",
        "options",
        "shapeActive",
        "shapeActive",
        "shapeOperation",
        "doesShapeAcceptOperationRecurseOperation",
        "shapeTop",
        "shapeActive",
        "operation",
        "options",
        "shapeOperation",
        "operation",
        "doesShapeAcceptOperationRecurseOperation",
        "shapeTop",
        "shapeActive",
        "operation",
        "options",
        "shapeOperation",
        "operation",
        "shapeTop",
        "shapeActive",
        "operation",
        "Algebra",
        "options",
        "operation",
        "Algebra",
        "operation",
        "operation",
        "operation",
        "inputs",
        "input",
        "doesShapeAcceptOperationRecurseShape",
        "shapeTop",
        "shapeTop",
        "input",
        "options",
        "operation",
        "operation",
        "input",
        "Algebra",
        "doesShapeAcceptOperationRecurseShape",
        "shapeTop",
        "shapeTop",
        "input",
        "options"
    ],
    "literals": [
        "'@comunica/types'",
        "'sparqlalgebrajs'",
        "'conjunction'",
        "'disjunction'",
        "'arity'",
        "'type'",
        "'pattern'",
        "'wildcard'"
    ],
    "variables": [
        "shapeOperation",
        "inputs"
    ],
    "comments": [
        "Recurse into the shape",
        "Validate options",
        "Check if the shape's operation matches with the given operation",
        "Recurse into the operation, and restart from the top-level shape"
    ],
    "docstrings": [
        "* Check if the given shape accepts the given query operation.\n * @param shape A shape to test the query operation against.\n * @param operation A query operation to test.\n * @param options Additional options to consider.\n * @param options.joinBindings If additional bindings will be pushed down to the source for joining.\n * @param options.filterBindings If additional bindings will be pushed down to the source for filtering."
    ],
    "functions": [
        "doesShapeAcceptOperation",
        "doesShapeAcceptOperationRecurseShape",
        "doesShapeAcceptOperationRecurseOperation"
    ],
    "classes": []
}