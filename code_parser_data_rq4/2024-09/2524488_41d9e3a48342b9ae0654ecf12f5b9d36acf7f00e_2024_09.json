{
    "identifiers": [
        "org",
        "apache",
        "accumulo",
        "test",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "ScannerBase",
        "ConsistencyLevel",
        "EVENTUAL",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "ScannerBase",
        "ConsistencyLevel",
        "IMMEDIATE",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertTrue",
        "java",
        "security",
        "SecureRandom",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "Callable",
        "java",
        "util",
        "concurrent",
        "ExecutorService",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "concurrent",
        "Future",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "Accumulo",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "AccumuloClient",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "BatchWriter",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "MutationsRejectedException",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "ScannerBase",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "admin",
        "NewTableConfiguration",
        "org",
        "apache",
        "accumulo",
        "core",
        "conf",
        "Property",
        "org",
        "apache",
        "accumulo",
        "core",
        "data",
        "Mutation",
        "org",
        "apache",
        "accumulo",
        "core",
        "util",
        "Timer",
        "org",
        "apache",
        "accumulo",
        "minicluster",
        "ServerType",
        "org",
        "apache",
        "accumulo",
        "miniclusterImpl",
        "MiniAccumuloConfigImpl",
        "org",
        "apache",
        "accumulo",
        "test",
        "functional",
        "ConfigurableMacBase",
        "org",
        "apache",
        "accumulo",
        "test",
        "util",
        "Wait",
        "org",
        "apache",
        "hadoop",
        "conf",
        "Configuration",
        "org",
        "apache",
        "hadoop",
        "io",
        "Text",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "Override",
        "cfg",
        "hadoopCoreSite",
        "cfg",
        "setProperty",
        "Property",
        "SSERV_CACHED_TABLET_METADATA_EXPIRATION",
        "Test",
        "tables",
        "getUniqueNames",
        "table1",
        "tables",
        "table2",
        "tables",
        "table3",
        "tables",
        "table4",
        "tables",
        "getCluster",
        "getConfig",
        "setNumScanServers",
        "getCluster",
        "getClusterControl",
        "startAllServers",
        "ServerType",
        "SCAN_SERVER",
        "executor",
        "Executors",
        "newCachedThreadPool",
        "client",
        "Accumulo",
        "newClient",
        "getClientProperties",
        "build",
        "Wait",
        "waitFor",
        "client",
        "instanceOperations",
        "getScanServers",
        "isEmpty",
        "ntc",
        "ntc",
        "setProperties",
        "of",
        "Property",
        "TABLE_MINC_COMPACT_MAXAGE",
        "getKey",
        "client",
        "tableOperations",
        "create",
        "table1",
        "ntc",
        "client",
        "tableOperations",
        "create",
        "table2",
        "ntc",
        "ntc",
        "setProperties",
        "of",
        "Property",
        "TABLE_MINC_COMPACT_IDLETIME",
        "getKey",
        "client",
        "tableOperations",
        "create",
        "table3",
        "ntc",
        "ntc",
        "ntc",
        "setProperties",
        "of",
        "Property",
        "TABLE_MINC_COMPACT_MAXAGE",
        "getKey",
        "client",
        "tableOperations",
        "create",
        "table4",
        "ntc",
        "timer",
        "Timer",
        "startNew",
        "writeElapsed",
        "client",
        "table4",
        "timer",
        "sawDataInTable4",
        "futures",
        "futures",
        "add",
        "executor",
        "submit",
        "createWriterTask",
        "client",
        "table1",
        "timer",
        "futures",
        "add",
        "executor",
        "submit",
        "createWriterTask",
        "client",
        "table2",
        "timer",
        "futures",
        "add",
        "executor",
        "submit",
        "createWriterTask",
        "client",
        "table3",
        "timer",
        "Wait",
        "waitFor",
        "readMaxElapsed",
        "client",
        "IMMEDIATE",
        "table1",
        "readMaxElapsed",
        "client",
        "IMMEDIATE",
        "table2",
        "readMaxElapsed",
        "client",
        "IMMEDIATE",
        "table3",
        "lastMaxSeen",
        "changes",
        "deltas",
        "changes",
        "sleep",
        "currElapsed",
        "timer",
        "elapsed",
        "TimeUnit",
        "MILLISECONDS",
        "maxElapsedInTable",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table1",
        "maxElapsedInTable",
        "maxElapsedInTable",
        "lastMaxSeen",
        "log",
        "info",
        "lastMaxSeen",
        "maxElapsedInTable",
        "changes",
        "lastMaxSeen",
        "maxElapsedInTable",
        "maxElapsedInTable",
        "deltas",
        "add",
        "currElapsed",
        "maxElapsedInTable",
        "assertEquals",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table2",
        "assertEquals",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table3",
        "sawDataInTable4",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table4",
        "assertTrue",
        "timer",
        "elapsed",
        "TimeUnit",
        "MILLISECONDS",
        "timer",
        "elapsed",
        "TimeUnit",
        "MILLISECONDS",
        "sawDataInTable4",
        "assertTrue",
        "sawDataInTable4",
        "stats",
        "deltas",
        "stream",
        "mapToLong",
        "l",
        "l",
        "summaryStatistics",
        "log",
        "info",
        "stats",
        "assertTrue",
        "stats",
        "getAverage",
        "stats",
        "getAverage",
        "assertTrue",
        "stats",
        "getMax",
        "assertTrue",
        "stats",
        "getCount",
        "assertTrue",
        "futures",
        "stream",
        "noneMatch",
        "Future",
        "isDone",
        "executor",
        "shutdownNow",
        "executor",
        "awaitTermination",
        "TimeUnit",
        "SECONDS",
        "assertEquals",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table2",
        "assertTrue",
        "readMaxElapsed",
        "client",
        "IMMEDIATE",
        "table1",
        "readMaxElapsed",
        "client",
        "EVENTUAL",
        "table1",
        "client",
        "consistency",
        "table",
        "scanner",
        "client",
        "createScanner",
        "table",
        "scanner",
        "setConsistencyLevel",
        "consistency",
        "scanner",
        "fetchColumn",
        "scanner",
        "stream",
        "mapToLong",
        "e",
        "parseLong",
        "e",
        "getValue",
        "toString",
        "max",
        "orElse",
        "random",
        "client",
        "table",
        "timer",
        "writer",
        "client",
        "createBatchWriter",
        "table",
        "writeElapsed",
        "random",
        "timer",
        "writer",
        "client",
        "table",
        "timer",
        "random",
        "writer",
        "client",
        "createBatchWriter",
        "table",
        "writeElapsed",
        "random",
        "timer",
        "writer",
        "writer",
        "flush",
        "sleep",
        "random",
        "timer",
        "writer",
        "elapsed",
        "timer",
        "elapsed",
        "TimeUnit",
        "MILLISECONDS",
        "m",
        "toHexString",
        "random",
        "nextLong",
        "m",
        "put",
        "elapsed",
        "writer",
        "addMutation",
        "m"
    ],
    "literals": [
        "\"2s\"",
        "\"2s\"",
        "\"2s\"",
        "\"3s\"",
        "\"new max elapsed seen {} {}\"",
        "\"Delta stats : {}\"",
        "\"elapsed\"",
        "\"nanos\"",
        "\"elapsed\"",
        "\"nanos\"",
        "\"\""
    ],
    "variables": [],
    "comments": [
        "Write to table4 once, this is different than the other tables that are continually being",
        "written to. table4 should minor compact 3 seconds after this write.",
        "wait for some data to be written",
        "This is difference in elapsed time written to the table vs the most recent elapsed",
        "time.",
        "The other table does not have the setting to minor compact based on age, so should never",
        "see any data for it from the scan server.",
        "The background thread is writing to this table every 100ms so it should not be considered",
        "idle and therefor should not minor compact.",
        "Should usually see data within 4 seconds, but not always because the timings config are",
        "when things should start to happen and not when they are guaranteed to finish. Would expect",
        "the average to be less than 4 seconds and the max less than 8 seconds. These numbers may",
        "not hold if running test on a heavily loaded machine.",
        "The write task should still be running unless they experienced an exception.",
        "Now that nothing is writing its expected that max read by an immediate scan will see any",
        "data an eventual scan would see."
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License."
    ],
    "functions": [
        "configure",
        "testMaxLatency",
        "readMaxElapsed",
        "writeElapsed",
        "createWriterTask",
        "writeElapsed"
    ],
    "classes": [
        "ScanServerMaxLatencyIT"
    ]
}