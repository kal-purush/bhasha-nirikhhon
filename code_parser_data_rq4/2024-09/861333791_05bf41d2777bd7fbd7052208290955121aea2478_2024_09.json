{
    "identifiers": [
        "NextResponse",
        "path",
        "promises",
        "fs",
        "mime",
        "sanitizeFilename",
        "cookies",
        "jwtValid",
        "jwtDecode",
        "pool",
        "request",
        "request",
        "data",
        "cookies",
        "jwtValid",
        "token",
        "isAuth",
        "Response",
        "id",
        "jwtDecode",
        "token",
        "e",
        "e",
        "file",
        "NextResponse",
        "file",
        "MAX_FILE_SIZE",
        "NextResponse",
        "mime",
        "file",
        "ALLOWED_MIME_TYPES",
        "fileType",
        "NextResponse",
        "id",
        "pool",
        "query",
        "results",
        "results",
        "NextResponse",
        "sanitizeFilename",
        "file",
        "path",
        "sanitizedFileName",
        "mime",
        "fileType",
        "path",
        "sanitizedFileName",
        "extension",
        "extension",
        "finalFileName",
        "Buffer",
        "file",
        "fs",
        "filePath",
        "buffer",
        "pool",
        "finalFileName",
        "id",
        "NextResponse",
        "error",
        "error",
        "NextResponse"
    ],
    "literals": [
        "'next/server'",
        "'path'",
        "'fs'",
        "'mime-types'",
        "'sanitize-filename'",
        "'next/headers'",
        "'@/lib/func'",
        "'@/lib/db'",
        "'image/jpeg'",
        "'image/png'",
        "'image/webp'",
        "'image/jpg'",
        "'file'",
        "\"accessToken\"",
        "\"\"",
        "'{ status: 401, message: `unauthorized` }'",
        "'content-type'",
        "\"application/json\"",
        "'No file uploaded'",
        "'File size exceeds 5MB'",
        "'Invalid file type'",
        "SELECT * FROM users WHERE id = '${id.id}'",
        "'Account not found'",
        "\"-\"",
        "${path.basename(sanitizedFileName, extension)}${Date.now()}${extension}",
        "'public/uploads/'",
        "UPDATE users SET pic = $1 WHERE id = $2",
        "/api/uploads/${finalFileName}",
        "'File uploaded successfully'",
        "'Error saving file:'",
        "'Failed to save file'"
    ],
    "variables": [
        "MAX_FILE_SIZE",
        "ALLOWED_MIME_TYPES",
        "data",
        "file",
        "token",
        "isAuth",
        "id",
        "fileType",
        "query",
        "results",
        "sanitizedFileName",
        "extension",
        "finalFileName",
        "filePath",
        "buffer"
    ],
    "comments": [
        "src/app/api/upload/route.js"
    ],
    "docstrings": [],
    "functions": [
        "POST"
    ],
    "classes": []
}