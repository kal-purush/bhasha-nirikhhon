{
    "identifiers": [
        "org",
        "nuxeo",
        "ai",
        "endpoint",
        "java",
        "util",
        "Collections",
        "singletonMap",
        "org",
        "nuxeo",
        "ai",
        "rekognition",
        "listeners",
        "AsyncLabelResultListener",
        "JOB_ID_CTX_KEY",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "Serializable",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "util",
        "javax",
        "servlet",
        "http",
        "HttpServletRequest",
        "javax",
        "ws",
        "rs",
        "Consumes",
        "javax",
        "ws",
        "rs",
        "POST",
        "javax",
        "ws",
        "rs",
        "Path",
        "javax",
        "ws",
        "rs",
        "core",
        "Context",
        "javax",
        "ws",
        "rs",
        "core",
        "MediaType",
        "javax",
        "ws",
        "rs",
        "core",
        "Response",
        "org",
        "apache",
        "commons",
        "io",
        "IOUtils",
        "org",
        "apache",
        "commons",
        "lang3",
        "StringUtils",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "nuxeo",
        "ai",
        "enrichment",
        "async",
        "DetectCelebritiesEnrichmentProvider",
        "org",
        "nuxeo",
        "ai",
        "enrichment",
        "async",
        "DetectFacesEnrichmentProvider",
        "org",
        "nuxeo",
        "ai",
        "enrichment",
        "async",
        "DetectUnsafeImagesEnrichmentProvider",
        "org",
        "nuxeo",
        "ai",
        "enrichment",
        "async",
        "LabelsEnrichmentProvider",
        "org",
        "nuxeo",
        "ai",
        "rekognition",
        "listeners",
        "AsyncCelebritiesResultListener",
        "org",
        "nuxeo",
        "ai",
        "rekognition",
        "listeners",
        "AsyncFaceResultListener",
        "org",
        "nuxeo",
        "ai",
        "rekognition",
        "listeners",
        "AsyncLabelResultListener",
        "org",
        "nuxeo",
        "ai",
        "rekognition",
        "listeners",
        "AsyncUnsafeResultListener",
        "org",
        "nuxeo",
        "ai",
        "sns",
        "Notification",
        "org",
        "nuxeo",
        "ecm",
        "core",
        "api",
        "NuxeoException",
        "org",
        "nuxeo",
        "ecm",
        "core",
        "EventService",
        "org",
        "nuxeo",
        "ecm",
        "core",
        "impl",
        "EventContextImpl",
        "org",
        "nuxeo",
        "ecm",
        "webengine",
        "model",
        "WebObject",
        "org",
        "nuxeo",
        "runtime",
        "api",
        "Framework",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "Path",
        "WebObject",
        "log",
        "LogManager",
        "getLogger",
        "SUBSCRIPTION_CONFIRMATION",
        "TYPE_JSON_FIELD",
        "OBJECT_MAPPER",
        "POST",
        "Path",
        "Consumes",
        "MediaType",
        "APPLICATION_JSON",
        "MediaType",
        "TEXT_PLAIN",
        "Context",
        "request",
        "message",
        "json",
        "json",
        "IOUtils",
        "toString",
        "request",
        "getInputStream",
        "Charset",
        "defaultCharset",
        "notification",
        "OBJECT_MAPPER",
        "readValue",
        "json",
        "message",
        "OBJECT_MAPPER",
        "readValue",
        "notification",
        "message",
        "e",
        "tryConfirmation",
        "json",
        "Response",
        "ok",
        "build",
        "log",
        "error",
        "Response",
        "serverError",
        "build",
        "log",
        "debug",
        "message",
        "getApi",
        "ctx",
        "props",
        "singletonMap",
        "JOB_ID_CTX_KEY",
        "message",
        "getJobId",
        "ctx",
        "setProperties",
        "props",
        "succeeded",
        "message",
        "isSucceeded",
        "message",
        "getApi",
        "LabelsEnrichmentProvider",
        "ASYNC_ACTION_NAME",
        "succeeded",
        "AsyncLabelResultListener",
        "SUCCESS_EVENT",
        "AsyncLabelResultListener",
        "FAILURE_EVENT",
        "DetectFacesEnrichmentProvider",
        "ASYNC_ACTION_NAME",
        "succeeded",
        "AsyncFaceResultListener",
        "SUCCESS_EVENT",
        "AsyncFaceResultListener",
        "FAILURE_EVENT",
        "DetectCelebritiesEnrichmentProvider",
        "ASYNC_ACTION_NAME",
        "succeeded",
        "AsyncCelebritiesResultListener",
        "SUCCESS_EVENT",
        "AsyncCelebritiesResultListener",
        "FAILURE_EVENT",
        "DetectUnsafeImagesEnrichmentProvider",
        "ASYNC_ACTION_NAME",
        "succeeded",
        "AsyncUnsafeResultListener",
        "SUCCESS_EVENT",
        "AsyncUnsafeResultListener",
        "FAILURE_EVENT",
        "message",
        "getApi",
        "es",
        "Framework",
        "getService",
        "es",
        "fireEvent",
        "ctx",
        "Response",
        "ok",
        "build",
        "json",
        "json",
        "log",
        "debug",
        "SuppressWarnings",
        "confirmation",
        "OBJECT_MAPPER",
        "readValue",
        "json",
        "confirmation",
        "get",
        "TYPE_JSON_FIELD",
        "SUBSCRIPTION_CONFIRMATION",
        "equals",
        "subscribeURL",
        "confirmation",
        "get",
        "StringUtils",
        "isNotBlank",
        "subscribeURL",
        "url",
        "subscribeURL",
        "url",
        "openConnection",
        "getInputStream",
        "log",
        "debug"
    ],
    "literals": [
        "\"/ai/rekognition\"",
        "\"ai\"",
        "\"SubscriptionConfirmation\"",
        "\"Type\"",
        "\"callback/labels\"",
        "\"Could not get Notification from service request\"",
        "\"Received notification from Rekognition {}\"",
        "\"Unknown API used: \"",
        "\"Could not read Notification, trying SNS Confirmation\"",
        "\"unchecked\"",
        "\"SubscribeURL\"",
        "\"Confirming SNS subscription\""
    ],
    "variables": [
        "message",
        "event"
    ],
    "comments": [],
    "docstrings": [
        "* (C) Copyright 2006-2019 Nuxeo (http://nuxeo.com/) and others.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Contributors:\n *     anechaev",
        "* Endpoints responsible for listening notifications from external services such as AWS SNS",
        "* Generic Endpoint responsible for delegating tasks among enrichment services\n     * Runs as an asynchronous dispatcher sending success/failure events to the following services:\n     * - {@link LabelsEnrichmentProvider} for label processing\n     * - {@link DetectFacesEnrichmentProvider} for faces tracking\n     * - {@link DetectCelebritiesEnrichmentProvider} for celebrity detection\n     * - {@link DetectUnsafeImagesEnrichmentProvider} for unsafe content detection\n     * @param request of a Notification service\n     * @return {@link Response}",
        "NOP"
    ],
    "functions": [
        "Response",
        "callback",
        "tryConfirmation"
    ],
    "classes": [
        "Rekognition"
    ]
}