{
    "identifiers": [
        "org",
        "springframework",
        "cloud",
        "stream",
        "binder",
        "kafka",
        "streams",
        "serde",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "kafka",
        "common",
        "serialization",
        "Deserializer",
        "org",
        "apache",
        "kafka",
        "common",
        "serialization",
        "Serde",
        "org",
        "apache",
        "kafka",
        "common",
        "serialization",
        "Serializer",
        "org",
        "springframework",
        "messaging",
        "Message",
        "org",
        "springframework",
        "messaging",
        "MessageHeaders",
        "org",
        "springframework",
        "messaging",
        "converter",
        "CompositeMessageConverter",
        "org",
        "springframework",
        "messaging",
        "converter",
        "MessageConverter",
        "org",
        "springframework",
        "messaging",
        "support",
        "MessageBuilder",
        "org",
        "springframework",
        "util",
        "Assert",
        "org",
        "springframework",
        "util",
        "MimeType",
        "org",
        "springframework",
        "util",
        "MimeTypeUtils",
        "VALUE_CLASS_HEADER",
        "AVRO_FORMAT",
        "DEFAULT_AVRO_MIME_TYPE",
        "AVRO_FORMAT",
        "messageConverterDelegateDeserializer",
        "messageConverterDelegateSerializer",
        "compositeMessageConverter",
        "messageConverterDelegateDeserializer",
        "compositeMessageConverter",
        "messageConverterDelegateSerializer",
        "compositeMessageConverter",
        "Override",
        "configs",
        "isKey",
        "messageConverterDelegateDeserializer",
        "configure",
        "configs",
        "isKey",
        "messageConverterDelegateSerializer",
        "configure",
        "configs",
        "isKey",
        "Override",
        "Override",
        "messageConverterDelegateSerializer",
        "Override",
        "messageConverterDelegateDeserializer",
        "configs",
        "configs",
        "containsKey",
        "MessageHeaders",
        "CONTENT_TYPE",
        "contentType",
        "configs",
        "get",
        "MessageHeaders",
        "CONTENT_TYPE",
        "DEFAULT_AVRO_MIME_TYPE",
        "equals",
        "MimeTypeUtils",
        "parseMimeType",
        "contentType",
        "DEFAULT_AVRO_MIME_TYPE",
        "contentType",
        "contains",
        "MimeTypeUtils",
        "parseMimeType",
        "StandardCharsets",
        "UTF_8",
        "StandardCharsets",
        "UTF_8",
        "messageConverter",
        "mimeType",
        "valueClass",
        "compositeMessageConverter",
        "messageConverter",
        "compositeMessageConverter",
        "Override",
        "configs",
        "isKey",
        "Assert",
        "isTrue",
        "configs",
        "containsKey",
        "VALUE_CLASS_HEADER",
        "valueClass",
        "configs",
        "get",
        "VALUE_CLASS_HEADER",
        "Assert",
        "isTrue",
        "valueClass",
        "valueClass",
        "valueClass",
        "mimeType",
        "resolveMimeType",
        "configs",
        "SuppressWarnings",
        "Override",
        "topic",
        "data",
        "message",
        "MessageBuilder",
        "withPayload",
        "data",
        "setHeader",
        "MessageHeaders",
        "CONTENT_TYPE",
        "mimeType",
        "toString",
        "build",
        "messageConverted",
        "messageConverter",
        "fromMessage",
        "message",
        "valueClass",
        "Assert",
        "notNull",
        "messageConverted",
        "messageConverted",
        "Override",
        "messageConverter",
        "mimeType",
        "compositeMessageConverter",
        "messageConverter",
        "compositeMessageConverter",
        "Override",
        "configs",
        "isKey",
        "mimeType",
        "resolveMimeType",
        "configs",
        "Override",
        "topic",
        "data",
        "message",
        "MessageBuilder",
        "withPayload",
        "data",
        "build",
        "headers",
        "message",
        "getHeaders",
        "headers",
        "put",
        "MessageHeaders",
        "CONTENT_TYPE",
        "mimeType",
        "toString",
        "messageHeaders",
        "headers",
        "payload",
        "messageConverter",
        "toMessage",
        "message",
        "getPayload",
        "messageHeaders",
        "getPayload",
        "payload",
        "Override"
    ],
    "literals": [
        "\"valueClass\"",
        "\"avro\"",
        "\"application\"",
        "\"*+\"",
        "\"avro\"",
        "\"application/avro\"",
        "\"application\"",
        "\"json\"",
        "\"application\"",
        "\"json\"",
        "\"Deserializers must provide a configuration for valueClass.\"",
        "\"Deserializers must provide a valid value for valueClass.\"",
        "\"unchecked\"",
        "\"Deserialization failed.\""
    ],
    "variables": [
        "messageConverterDelegateDeserializer",
        "messageConverterDelegateSerializer",
        "messageConverter",
        "mimeType",
        "valueClass",
        "messageConverter",
        "mimeType"
    ],
    "comments": [
        "No-op",
        "No-op",
        "No-op"
    ],
    "docstrings": [
        "* Copyright 2019-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* A {@link Serde} implementation that wraps the list of {@link MessageConverter}s from\n * {@link CompositeMessageConverter}.\n *\n * The primary motivation for this class is to provide an avro based {@link Serde} that is\n * compatible with the schema registry that Spring Cloud Stream provides. When using the\n * schema registry support from Spring Cloud Stream in a Kafka Streams binder based\n * application, the applications can deserialize the incoming Kafka Streams records using\n * the built in Avro {@link MessageConverter}. However, this same message conversion\n * approach will not work downstream in other operations in the topology for Kafka Streams\n * as some of them needs a {@link Serde} instance that can talk to the Spring Cloud Stream\n * provided Schema Registry. This implementation will solve that problem.\n *\n * Only Avro and JSON based converters are exposed as binder provided {@link Serde}\n * implementations currently.\n *\n * Users of this class must call the\n * {@link MessageConverterDelegateSerde#configure(Map, boolean)} method to configure the\n * {@link Serde} object. At the very least the configuration map must include a key called\n * \"valueClass\" to indicate the type of the target object for deserialization. If any\n * other content type other than JSON is needed (only Avro is available now other than\n * JSON), that needs to be included in the configuration map with the key \"contentType\".\n * For example,\n *\n * <pre class=\"code\">\n * Map&lt;String, Object&gt; config = new HashMap&lt;&gt;();\n * config.put(\"valueClass\", Foo.class);\n * config.put(\"contentType\", \"application/avro\");\n * </pre>\n *\n * Then use the above map when calling the configure method.\n *\n * This class is only intended to be used when writing a Spring Cloud Stream Kafka Streams\n * application that uses Spring Cloud Stream schema registry for schema evolution.\n *\n * An instance of this class is provided as a bean by the binder configuration and\n * typically the applications can autowire that bean. This is the expected usage pattern\n * of this class.\n *\n * @param <T> type of the object to marshall\n * @author Soby Chacko\n * @since 3.0",
        "* Custom {@link Deserializer} that uses the {@link org.springframework.cloud.stream.converter.CompositeMessageConverterFactory}.\n\t *\n\t * @param <U> parameterized target type for deserialization",
        "* Custom {@link Serializer} that uses the {@link org.springframework.cloud.stream.converter.CompositeMessageConverterFactory}.\n\t *\n\t * @param <V> parameterized type for serialization"
    ],
    "functions": [
        "MessageConverterDelegateSerde",
        "configure",
        "close",
        "serializer",
        "deserializer",
        "MimeType",
        "resolveMimeType",
        "MessageConverterDelegateDeserializer",
        "configure",
        "U",
        "deserialize",
        "close",
        "MessageConverterDelegateSerializer",
        "configure",
        "serialize",
        "close"
    ],
    "classes": [
        "MessageConverterDelegateSerde",
        "MessageConverterDelegateDeserializer",
        "MessageConverterDelegateSerializer"
    ]
}