{
    "identifiers": [
        "express",
        "join",
        "express",
        "process",
        "join",
        "process",
        "require",
        "app",
        "ngExpressEngine",
        "AppServerModuleNgFactory",
        "provideModuleMap",
        "LAZY_MODULE_MAP",
        "app",
        "app",
        "DIST_FOLDER",
        "app",
        "express",
        "DIST_FOLDER",
        "app",
        "req",
        "res",
        "res",
        "app",
        "PORT",
        "PORT"
    ],
    "literals": [
        "'zone.js/dist/zone-node'",
        "'express'",
        "'path'",
        "'dist/browser'",
        "'./dist/server/main'",
        "'html'",
        "'view engine'",
        "'html'",
        "'views'",
        "'*.*'",
        "'1y'",
        "'*'",
        "'index'",
        "Node Express server listening on http://localhost:${PORT}"
    ],
    "variables": [
        "app",
        "PORT",
        "DIST_FOLDER"
    ],
    "comments": [
        "Express server",
        "Our Universal express-engine (found @ https://github.com/angular/universal/tree/master/modules/express-engine)",
        "Example Express Rest API endpoints",
        "app.get('/api/**', (req, res) => { });",
        "Serve static files from /browser",
        "All regular routes use the Universal engine",
        "Start up the Node server"
    ],
    "docstrings": [
        "* *** NOTE ON IMPORTING FROM ANGULAR AND NGUNIVERSAL IN THIS FILE ***\n *\n * If your application uses third-party dependencies, you'll need to\n * either use Webpack or the Angular CLI's `bundleDependencies` feature\n * in order to adequately package them for use on the server without a\n * node_modules directory.\n *\n * However, due to the nature of the CLI's `bundleDependencies`, importing\n * Angular in this file will create a different instance of Angular than\n * the version in the compiled application code. This leads to unavoidable\n * conflicts. Therefore, please do not explicitly import from @angular or\n * @nguniversal in this file. You can export any needed resources\n * from your application's main.server.ts file, as seen below with the\n * import for `ngExpressEngine`.",
        "* NOTE :: leave this as require() since this file is built Dynamically from webpack"
    ],
    "functions": [],
    "classes": []
}