{
    "identifiers": [
        "org",
        "apache",
        "accumulo",
        "test",
        "upgrade",
        "org",
        "apache",
        "accumulo",
        "fate",
        "util",
        "UtilWaitThread",
        "sleepUninterruptibly",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertNull",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "TreeMap",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "org",
        "apache",
        "accumulo",
        "core",
        "Constants",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "Accumulo",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "AccumuloClient",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "BatchWriter",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "Scanner",
        "org",
        "apache",
        "accumulo",
        "core",
        "client",
        "TableNotFoundException",
        "org",
        "apache",
        "accumulo",
        "core",
        "conf",
        "Property",
        "org",
        "apache",
        "accumulo",
        "core",
        "data",
        "Mutation",
        "org",
        "apache",
        "accumulo",
        "core",
        "data",
        "Range",
        "org",
        "apache",
        "accumulo",
        "core",
        "metadata",
        "schema",
        "Ample",
        "org",
        "apache",
        "accumulo",
        "core",
        "metadata",
        "schema",
        "MetadataSchema",
        "org",
        "apache",
        "accumulo",
        "core",
        "security",
        "Authorizations",
        "org",
        "apache",
        "accumulo",
        "core",
        "security",
        "TablePermission",
        "org",
        "apache",
        "accumulo",
        "fate",
        "zookeeper",
        "ZooLock",
        "org",
        "apache",
        "accumulo",
        "fate",
        "zookeeper",
        "ZooReaderWriter",
        "org",
        "apache",
        "accumulo",
        "master",
        "upgrade",
        "Upgrader9to10",
        "org",
        "apache",
        "accumulo",
        "minicluster",
        "MemoryUnit",
        "org",
        "apache",
        "accumulo",
        "minicluster",
        "ServerType",
        "org",
        "apache",
        "accumulo",
        "miniclusterImpl",
        "MiniAccumuloConfigImpl",
        "org",
        "apache",
        "accumulo",
        "miniclusterImpl",
        "ProcessNotFoundException",
        "org",
        "apache",
        "accumulo",
        "test",
        "functional",
        "ConfigurableMacBase",
        "org",
        "apache",
        "hadoop",
        "conf",
        "Configuration",
        "org",
        "apache",
        "hadoop",
        "fs",
        "RawLocalFileSystem",
        "org",
        "apache",
        "hadoop",
        "io",
        "Text",
        "org",
        "apache",
        "zookeeper",
        "KeeperException",
        "org",
        "junit",
        "Test",
        "com",
        "google",
        "common",
        "collect",
        "Iterators",
        "OUR_SECRET",
        "OLDDELPREFIX",
        "upgrader",
        "Override",
        "Override",
        "cfg",
        "hadoopCoreSite",
        "cfg",
        "setProperty",
        "Property",
        "INSTANCE_ZK_TIMEOUT",
        "cfg",
        "setProperty",
        "Property",
        "INSTANCE_SECRET",
        "OUR_SECRET",
        "cfg",
        "setDefaultMemory",
        "MemoryUnit",
        "MEGABYTE",
        "cfg",
        "setMemory",
        "ServerType",
        "MASTER",
        "MemoryUnit",
        "MEGABYTE",
        "cfg",
        "setMemory",
        "ServerType",
        "ZOOKEEPER",
        "MemoryUnit",
        "MEGABYTE",
        "cfg",
        "setProperty",
        "Property",
        "GC_CYCLE_START",
        "cfg",
        "setProperty",
        "Property",
        "GC_CYCLE_DELAY",
        "cfg",
        "setProperty",
        "Property",
        "GC_PORT",
        "cfg",
        "setProperty",
        "Property",
        "TSERV_MAXMEM",
        "cfg",
        "setProperty",
        "Property",
        "TSERV_MAJC_DELAY",
        "hadoopCoreSite",
        "getName",
        "getCluster",
        "killProcess",
        "ServerType",
        "GARBAGE_COLLECTOR",
        "getCluster",
        "getProcesses",
        "get",
        "ServerType",
        "GARBAGE_COLLECTOR",
        "iterator",
        "next",
        "path",
        "getServerContext",
        "getZooKeeperRoot",
        "Constants",
        "ZGC_LOCK",
        "zk",
        "cluster",
        "getZooKeepers",
        "OUR_SECRET",
        "ZooLock",
        "deleteLock",
        "zk",
        "path",
        "e",
        "log",
        "error",
        "e",
        "assertNull",
        "getCluster",
        "getProcesses",
        "get",
        "ServerType",
        "GARBAGE_COLLECTOR",
        "Test",
        "gcUpgradeDeletesTest",
        "Ample",
        "DataLevel",
        "METADATA",
        "Test",
        "gcUpgradeDeletesTest",
        "Ample",
        "DataLevel",
        "USER",
        "Test",
        "gcUpgradeDeletesTest",
        "Ample",
        "DataLevel",
        "METADATA",
        "Test",
        "killMacGc",
        "somebignumber",
        "longpathname",
        "longpathname",
        "longpathname",
        "level",
        "Ample",
        "DataLevel",
        "USER",
        "log",
        "info",
        "c",
        "Accumulo",
        "newClient",
        "getClientProperties",
        "build",
        "addEntries",
        "c",
        "level",
        "metaTable",
        "somebignumber",
        "longpathname",
        "sleepUninterruptibly",
        "TimeUnit",
        "SECONDS",
        "upgrader",
        "upgradeFileDeletes",
        "getServerContext",
        "level",
        "sleepUninterruptibly",
        "TimeUnit",
        "SECONDS",
        "MetadataSchema",
        "DeletesSection",
        "getRange",
        "scanner",
        "scanner",
        "c",
        "createScanner",
        "level",
        "metaTable",
        "Authorizations",
        "EMPTY",
        "e",
        "e",
        "scanner",
        "setRange",
        "assertEquals",
        "somebignumber",
        "Iterators",
        "size",
        "scanner",
        "iterator",
        "level",
        "count",
        "killMacGc",
        "log",
        "info",
        "level",
        "metaTable",
        "c",
        "Accumulo",
        "newClient",
        "getClientProperties",
        "build",
        "expected",
        "addEntries",
        "c",
        "level",
        "metaTable",
        "count",
        "actual",
        "sleepUninterruptibly",
        "TimeUnit",
        "SECONDS",
        "upgrader",
        "upgradeFileDeletes",
        "getServerContext",
        "level",
        "sleepUninterruptibly",
        "TimeUnit",
        "SECONDS",
        "MetadataSchema",
        "DeletesSection",
        "getRange",
        "scanner",
        "scanner",
        "c",
        "createScanner",
        "level",
        "metaTable",
        "Authorizations",
        "EMPTY",
        "e",
        "e",
        "scanner",
        "setRange",
        "scanner",
        "iterator",
        "forEachRemaining",
        "entry",
        "actual",
        "put",
        "entry",
        "getKey",
        "getRow",
        "toString",
        "entry",
        "getValue",
        "toString",
        "assertEquals",
        "expected",
        "actual",
        "upgrader",
        "upgradeFileDeletes",
        "getServerContext",
        "level",
        "scanner",
        "c",
        "createScanner",
        "level",
        "metaTable",
        "Authorizations",
        "EMPTY",
        "e",
        "e",
        "scanner",
        "setRange",
        "actual",
        "clear",
        "scanner",
        "iterator",
        "forEachRemaining",
        "entry",
        "actual",
        "put",
        "entry",
        "getKey",
        "getRow",
        "toString",
        "entry",
        "getValue",
        "toString",
        "assertEquals",
        "expected",
        "actual",
        "path",
        "cf",
        "cq",
        "val",
        "row",
        "OLDDELPREFIX",
        "path",
        "delFlag",
        "row",
        "delFlag",
        "put",
        "cf",
        "cq",
        "val",
        "delFlag",
        "client",
        "table",
        "count",
        "filename",
        "client",
        "securityOperations",
        "grantTablePermission",
        "client",
        "whoami",
        "table",
        "TablePermission",
        "WRITE",
        "expected",
        "bw",
        "client",
        "createBatchWriter",
        "table",
        "i",
        "i",
        "count",
        "i",
        "longpath",
        "format",
        "i",
        "filename",
        "delFlag",
        "createOldDelMutation",
        "longpath",
        "bw",
        "addMutation",
        "delFlag",
        "expected",
        "put",
        "MetadataSchema",
        "DeletesSection",
        "encodeRow",
        "longpath",
        "Upgrader9to10",
        "UPGRADED",
        "toString",
        "expected"
    ],
    "literals": [
        "\"itsreallysecret\"",
        "\"~del\"",
        "\"15s\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"5K\"",
        "\"1\"",
        "\"fs.file.impl\"",
        "\"Unable to delete ZooLock for mini accumulo-gc\"",
        "\"aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee\"",
        "\"ffffffffffgggggggggghhhhhhhhhhiiiiiiiiiijjjjjjjjjj\"",
        "\"kkkkkkkkkkkkkkkkkklllllllllllllllllllllmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnn\"",
        "\"Filling metadata table with lots of bogus delete flags\"",
        "\"Testing delete upgrades for {}\"",
        "\"somefile\"",
        "\"hdfs://localhost:8020/%020d/%s\"",
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "scanner",
        "scanner"
    ],
    "comments": [
        "use raw local file system so walogs sync and flush will work",
        "kill gc started by MAC",
        "delete lock in zookeeper if there, this will allow next GC to start quickly",
        "we do not want anything deleted",
        "make it even longer",
        "we do not want anything deleted",
        "ENSURE IDEMPOTENCE - run upgrade again to ensure nothing is changed because there is",
        "nothing to change"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* This is really hard to make happen - the minicluster can only use so little memory to start up.\n   * The {@link org.apache.accumulo.master.upgrade.Upgrader9to10} CANDIDATE_MEMORY_PERCENTAGE can be\n   * adjusted."
    ],
    "functions": [
        "defaultTimeoutSeconds",
        "configure",
        "killMacGc",
        "gcUpgradeRootTableDeletesIT",
        "gcUpgradeMetadataTableDeletesIT",
        "gcUpgradeNoDeletesIT",
        "gcUpgradeOutofMemoryTest",
        "gcUpgradeDeletesTest",
        "Mutation",
        "createOldDelMutation",
        "addEntries"
    ],
    "classes": [
        "GCUpgrade9to10TestIT"
    ]
}