{
    "identifiers": [
        "com",
        "nutomic",
        "syncthingandroid",
        "syncthing",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "content",
        "SharedPreferences",
        "android",
        "os",
        "Bundle",
        "android",
        "os",
        "Handler",
        "android",
        "os",
        "Looper",
        "android",
        "preference",
        "PreferenceManager",
        "android",
        "support",
        "v4",
        "content",
        "LocalBroadcastManager",
        "android",
        "util",
        "Log",
        "java",
        "io",
        "File",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "TAG",
        "PREF_LAST_SYNC_ID",
        "EVENT_BASE_ACTION",
        "EVENT_UPDATE_INTERVAL",
        "TimeUnit",
        "SECONDS",
        "toMillis",
        "mMainThreadHandler",
        "Looper",
        "getMainLooper",
        "mLastEventId",
        "mShutdown",
        "mContext",
        "mApi",
        "mLocalBM",
        "mFolderToPath",
        "eventName",
        "EVENT_BASE_ACTION",
        "eventName",
        "toUpperCase",
        "context",
        "api",
        "mContext",
        "context",
        "mApi",
        "api",
        "mLocalBM",
        "LocalBroadcastManager",
        "getInstance",
        "mContext",
        "mFolderToPath",
        "mFolderToPath",
        "clear",
        "folder",
        "mApi",
        "getFolders",
        "mFolderToPath",
        "put",
        "folder",
        "id",
        "folder",
        "path",
        "Override",
        "mLastEventId",
        "mLastEventId",
        "PreferenceManager",
        "getDefaultSharedPreferences",
        "mContext",
        "getLong",
        "PREF_LAST_SYNC_ID",
        "mApi",
        "getEvents",
        "Override",
        "id",
        "eventType",
        "eventData",
        "Override",
        "lastId",
        "lastId",
        "mLastEventId",
        "mLastEventId",
        "Log",
        "d",
        "TAG",
        "mLastEventId",
        "mApi",
        "getEvents",
        "mLastEventId",
        "EventProcessor",
        "Override",
        "id",
        "eventType",
        "eventData",
        "eventData",
        "containsKey",
        "folderPath",
        "mFolderToPath",
        "mFolderToPath",
        "size",
        "updateFolderMap",
        "folderPath",
        "mFolderToPath",
        "get",
        "eventData",
        "getString",
        "folderPath",
        "eventData",
        "putString",
        "folderPath",
        "eventData",
        "containsKey",
        "file",
        "folderPath",
        "eventData",
        "getString",
        "eventData",
        "putString",
        "file",
        "getPath",
        "eventBroadcastItent",
        "EVENT_BASE_ACTION",
        "eventType",
        "toUpperCase",
        "eventBroadcastItent",
        "putExtras",
        "eventData",
        "mLocalBM",
        "sendBroadcast",
        "eventBroadcastItent",
        "Log",
        "d",
        "TAG",
        "eventBroadcastItent",
        "getAction",
        "eventType",
        "length",
        "Override",
        "id",
        "mLastEventId",
        "id",
        "mLastEventId",
        "id",
        "sp",
        "PreferenceManager",
        "getDefaultSharedPreferences",
        "mContext",
        "sp",
        "edit",
        "putLong",
        "PREF_LAST_SYNC_ID",
        "mLastEventId",
        "commit",
        "mMainThreadHandler",
        "mShutdown",
        "mMainThreadHandler",
        "removeCallbacks",
        "mMainThreadHandler",
        "postDelayed",
        "EVENT_UPDATE_INTERVAL",
        "Override",
        "Log",
        "d",
        "TAG",
        "updateFolderMap",
        "mMainThreadHandler",
        "mShutdown",
        "mMainThreadHandler",
        "removeCallbacks",
        "mMainThreadHandler",
        "postDelayed",
        "EVENT_UPDATE_INTERVAL",
        "Log",
        "d",
        "TAG",
        "mMainThreadHandler",
        "mShutdown",
        "mMainThreadHandler",
        "removeCallbacks"
    ],
    "literals": [
        "\"EventProcessor\"",
        "\"last_sync_id\"",
        "\"com.nutomic.syncthingandroid.event\"",
        "\".\"",
        "\"Reading events starting with id \"",
        "\"folder\"",
        "\"folder\"",
        "\"_localFolderPath\"",
        "\"item\"",
        "\"item\"",
        "\"_localItemPath\"",
        "\".\"",
        "\"Sent local event broadcast \"",
        "\" including \"",
        "\" extra data items.\"",
        "\"WebGUI available. Starting event processor.\"",
        "\"Shutdown event processor.\""
    ],
    "variables": [
        "mContext",
        "mApi",
        "mLocalBM"
    ],
    "comments": [
        "Use the MainThread for all callbacks and message handling",
        "or we have to track down nasty threading problems.",
        "Restore the last event id if the event processor may have been restartet.",
        "First check if the event number ran backwards.",
        "If that's the case we've to start at zero because syncthing was restartet.",
        "If a folder item is contained within the event. Resolve the local path.",
        "Store the last EventId in case we get killed",
        "noinspection CommitPrefEdits",
        "Remove all pending callbacks and add a new one. This makes sure that only one",
        "event poller is running at any given time."
    ],
    "docstrings": [
        "* Run by the syncthing service to convert syncthing events into local broadcasts.\n * It uses SyncthingService.GetEvents to read the pending events and wait for new events.",
        "* Minimum interval in seconds at which the events are polled from syncthing and processed.\n     * This intervall will not wake up the device to save battery power.",
        "* Returns the action used by notification Intents fired for the given Syncthing event.\n     * @param eventName Name of the Syncthing event.\n     * @return Returns the full intent action used for local broadcasts.",
        "* C'tor\n     * @param context Context of the service using this event processor.\n     * @param api Reference to the RestApi-Instance used for all API calls by this instance of the\n     *            Event processor.",
        "* @see Runnable",
        "* @see RestApi.OnReceiveEventListener",
        "* @see RestApi.OnReceiveEventListener",
        "* @see SyncthingService.OnWebGuiAvailableListener"
    ],
    "functions": [
        "getEventIntentAction",
        "EventProcessor",
        "updateFolderMap",
        "run",
        "onEvent",
        "onDone",
        "onEvent",
        "onDone",
        "onWebGuiAvailable",
        "shutdown"
    ],
    "classes": [
        "EventProcessor"
    ]
}