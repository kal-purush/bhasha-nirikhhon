{
    "identifiers": [
        "createConnection",
        "IConnection",
        "ResponseError",
        "RequestType",
        "IRequestHandler",
        "NotificationType",
        "INotificationHandler",
        "InitializeResult",
        "InitializeError",
        "Diagnostic",
        "DiagnosticSeverity",
        "Position",
        "Files",
        "TextDocuments",
        "ITextDocument",
        "TextDocumentSyncKind",
        "ErrorMessageTracker",
        "exec",
        "spawn",
        "createConnection",
        "process",
        "process",
        "TextDocuments",
        "index",
        "index",
        "response",
        "settings",
        "settings",
        "response",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "charCode",
        "message",
        "message",
        "lines",
        "line",
        "message",
        "message",
        "lineString",
        "start",
        "isWhitespace",
        "code",
        "start",
        "lineString",
        "i",
        "len",
        "i",
        "code",
        "lineString",
        "i",
        "isWhitespace",
        "code",
        "end",
        "i",
        "isAlphaNumeric",
        "code",
        "start",
        "lineString",
        "i",
        "len",
        "i",
        "lineString",
        "i",
        "isAlphaNumeric",
        "code",
        "end",
        "DiagnosticSeverity",
        "message",
        "severity",
        "DiagnosticSeverity",
        "start",
        "end",
        "message",
        "diagnostic",
        "resolve",
        "reject",
        "exec",
        "error",
        "stdout",
        "stderr",
        "error",
        "stderr",
        "reject",
        "ResponseError",
        "errString",
        "resolve",
        "documents",
        "documents",
        "connection",
        "documents",
        "validateSingle",
        "connection",
        "checkPhpcsVersion",
        "connection",
        "uri",
        "ready",
        "isValidating",
        "uri",
        "needsValidating",
        "uri",
        "isValidating",
        "uri",
        "Files",
        "settings",
        "args",
        "settings",
        "spawn",
        "args",
        "child",
        "buffer",
        "response",
        "buffer",
        "child",
        "buffer",
        "response",
        "buffer",
        "child",
        "code",
        "match",
        "response",
        "connection",
        "match",
        "connection",
        "code",
        "getDebugString",
        "response",
        "response",
        "filename",
        "report",
        "report",
        "filename",
        "file",
        "message",
        "diagnostics",
        "getDiagnostic",
        "documents",
        "uri",
        "message",
        "connection",
        "isValidating",
        "uri",
        "needsValidating",
        "uri",
        "revalidateDocument",
        "connection",
        "uri",
        "needsValidating",
        "uri",
        "validate",
        "revalidateDocument",
        "connection",
        "uri",
        "err",
        "err",
        "err",
        "result",
        "err",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "Files",
        "result",
        "validate",
        "err",
        "connection",
        "getMessage",
        "err",
        "documents",
        "ErrorMessageTracker",
        "documents",
        "validate",
        "err",
        "tracker",
        "getMessage",
        "err",
        "tracker",
        "connection",
        "connection",
        "settings",
        "ready",
        "validateMany",
        "documents",
        "connection",
        "validateMany",
        "documents",
        "connection"
    ],
    "literals": [
        "\"use strict\"",
        "\"vscode-languageserver\"",
        "\"child_process\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\" | \"",
        "\"\\n\"",
        "'WARNING'",
        "${ message.message }",
        "phpcs --version",
        "Could not find phpcs: '${stderr.toString() }'",
        "Wants to validate ${uri}",
        "'--report=json'",
        "--standard=${settings.standard}",
        "\"phpcs\"",
        "\"\"",
        "\"data\"",
        "\"data\"",
        "\"close\"",
        "string",
        "phpcs: The \"${match[1]}\" coding standard set in your configuration is not installed. Please review your configuration an try again.",
        "\" | \"",
        "Revalidating ${uri}",
        "Finished validating ${uri}",
        "string",
        "string",
        "\"string\"",
        "string",
        "\" \"",
        "An unknown error occured while validating file: ${Files.uriToFilePath(document.uri) }",
        "\"phpcs\""
    ],
    "variables": [
        "connection",
        "lib",
        "settings",
        "documents",
        "ready",
        "isValidating",
        "needsValidating",
        "lines",
        "line",
        "lineString",
        "start",
        "end",
        "code",
        "i",
        "len",
        "i",
        "len",
        "code",
        "severity",
        "diagnostic",
        "errString",
        "uri",
        "args",
        "child",
        "diagnostics",
        "response",
        "match",
        "report",
        "file",
        "revalidateDocument",
        "result",
        "tracker"
    ],
    "comments": [
        "---------------------------------------------------------\n * Copyright (C) Ioannis Kappas. All rights reserved.\n *--------------------------------------------------------",
        "numeric (0-9)",
        "upper alpha (A-Z)",
        "lower alpha (a-z)",
        "Process diagnostic start and end columns.",
        "Process diagnostic severity.",
        "TODO: check whether phpcs is installed with composer.",
        "let rootFolder = params.rootPath;",
        "if (fs.exists(path.join(rootFolder, 'composer.json'))) {",
        "return new Promise<server.InitializeResult | server.ResponseError<server.InitializeError>>((resolve, reject) => {",
        "if (fs.exists(path.join(rootFolder, 'vendor', 'bin', 'phpcs.phar' ))) {",
        "resolve({ capabilities: { textDocumentSync: documents.syncKind } });",
        "}",
        "let errString = `Could not find phpcs. Please add the phpcs dependensy in composer.json and run composer update.`;",
        "reject(new server.ResponseError<server.InitializeError>(99, errString, { retry: true }));",
        "});",
        "} else {",
        "return new Promise<server.InitializeResult | server.ResponseError<server.InitializeError>>((resolve, reject) => {",
        "exec(`phpcs --version`, function(error, stdout, stderr) {",
        "if (error) {",
        "let errString = `Could not find phpcs: '${stderr.toString() }'`;",
        "reject(new server.ResponseError<server.InitializeError>(99, errString, { retry: true }));",
        "}",
        "resolve({ capabilities: { textDocumentSync: documents.syncKind } });",
        "});",
        "});",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "getDebugString",
        "isWhitespace",
        "isAlphaNumeric",
        "getDiagnostic",
        "checkPhpcsVersion",
        "validate",
        "getMessage",
        "validateSingle",
        "validateMany"
    ],
    "classes": []
}