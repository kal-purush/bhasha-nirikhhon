{
    "identifiers": [
        "flask",
        "current_app",
        "request",
        "url_for",
        "flask_restful",
        "reqparse",
        "reqparse",
        "RequestParser",
        "args_parser",
        "add_argument",
        "dest",
        "current_app",
        "config",
        "location",
        "trim",
        "help",
        "args_parser",
        "add_argument",
        "dest",
        "current_app",
        "config",
        "location",
        "trim",
        "help",
        "query",
        "page",
        "per_page",
        "query",
        "page",
        "per_page",
        "_query",
        "paginate",
        "_page",
        "_per_page",
        "_pagination",
        "items",
        "response",
        "kwargs",
        "_links",
        "kwargs",
        "join",
        "links",
        "key",
        "key",
        "keys",
        "key",
        "links",
        "response",
        "headers",
        "links_string",
        "response",
        "headers",
        "endpoint",
        "args",
        "endpoint",
        "request",
        "endpoint",
        "args",
        "request",
        "args",
        "args",
        "_per_page",
        "link_template",
        "format",
        "url_for",
        "endpoint",
        "url_args",
        "_pagination",
        "has_prev",
        "_page",
        "link_template",
        "format",
        "url_for",
        "endpoint",
        "url_args",
        "_pagination",
        "has_next",
        "_page",
        "link_template",
        "format",
        "url_for",
        "endpoint",
        "url_args",
        "_pagination",
        "pages",
        "link_template",
        "format",
        "url_for",
        "endpoint",
        "url_args",
        "links"
    ],
    "literals": [
        "'page'",
        "'page'",
        "'CFG_PAGINATION_ARG_PAGE'",
        "'args'",
        "'Page from where to fetch data'",
        "'per_page'",
        "'per_page'",
        "'CFG_PAGINATION_ARG_PER_PAGE'",
        "'args'",
        "'Amount of data per page'",
        "\"first\"",
        "\"prev\"",
        "\"next\"",
        "\"last\"",
        "\",\"",
        "'Link'",
        "'Content-Type'",
        "'application/json'",
        "'<{}>; rel=\"{}\"'",
        "'page'",
        "'per_page'",
        "'first'",
        "\"first\"",
        "'page'",
        "'prev'",
        "\"prev\"",
        "'page'",
        "'next'",
        "\"next\"",
        "'page'",
        "'last'",
        "\"last\""
    ],
    "variables": [
        "args_parser",
        "_query",
        "_page",
        "_per_page",
        "_pagination",
        "_query",
        "_page",
        "_per_page",
        "_pagination",
        "links",
        "keys",
        "links_string",
        "endpoint",
        "args",
        "links",
        "link_template",
        "url_args",
        "url_args",
        "url_args",
        "links",
        "url_args",
        "links",
        "url_args",
        "links",
        "url_args",
        "links"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "",
        "This file is part of ClaimStore.",
        "Copyright (C) 2015 CERN.",
        "",
        "ClaimStore is free software; you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation; either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "ClaimStore is distributed in the hope that it will be useful, but",
        "WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",
        "General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with ClaimStore; if not, write to the Free Software",
        "Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,",
        "USA.",
        "Add extra arguments to Restful Resource",
        "arguments to stick to the URL",
        "url_args['page'] will be updated for every link",
        "generate link for rel first",
        "generate link for prev if it exists",
        "generate link for next if it exists",
        "generate link for last"
    ],
    "docstrings": [
        "\"\"\"Restful pagination.\"\"\"",
        "\"\"\"Implement Restful pagination for SQLAlchemy model and Flask-Restful.\n\n    It creates an instance of RequestParser that should be used by the\n    Restful Resource implementation. By default, it adds two query fields to\n    the Restful Resource:\n\n    :param page: page from which to fetch the data\n    :param per_page: amout of data per page\n    \"\"\"",
        "\"\"\"Initialize pagination property.\"\"\"",
        "\"\"\"Paginate query.\n\n        :param query: query object from SQLAlchemy.\n        :param page: page from which to fetch data.\n        :param per_page: amount of data per page.\n        \"\"\"",
        "\"\"\"Set Link details in the response header.\n\n        :param response: Flask Response object.\n        \"\"\"",
        "\"\"\"Generate links for the headers.\n\n        :param endpoint: the URL endpoint\n        :param args: the arguments of request\n        \"\"\""
    ],
    "functions": [
        "paginate",
        "set_link_header",
        "_links"
    ],
    "classes": [
        "RestfulSQLAlchemyPaginationMixIn"
    ]
}