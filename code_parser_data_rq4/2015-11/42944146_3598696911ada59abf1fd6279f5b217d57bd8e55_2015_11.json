{
    "identifiers": [
        "base64",
        "logging",
        "hashlib",
        "negotiate_server_module",
        "NegotiateServerModule",
        "runtime",
        "utils",
        "backend",
        "NegotiateServerModule",
        "NegotiateServerModule",
        "staticmethod",
        "stream",
        "hashlib",
        "sha256",
        "update",
        "hash",
        "stream",
        "base64",
        "b64encode",
        "sha256",
        "digest",
        "stream",
        "request_body",
        "_stream_to_sha256",
        "stream",
        "sha256",
        "peers",
        "RuntimeError",
        "sha256",
        "peers",
        "stream",
        "atclose",
        "_update_peers",
        "logging",
        "debug",
        "sha256",
        "sha256",
        "request_body",
        "stream",
        "request_body",
        "_stream_to_sha256",
        "stream",
        "sha256",
        "peers",
        "RuntimeError",
        "sha256",
        "peers",
        "pop",
        "sha256",
        "logging",
        "debug",
        "sha256",
        "utils",
        "timestamp",
        "backend",
        "store",
        "server_timestamp",
        "request_body",
        "result",
        "index",
        "len",
        "request_body",
        "index",
        "len",
        "result",
        "result",
        "append",
        "result",
        "index",
        "server_timestamp",
        "result",
        "stream",
        "ignored",
        "_stream_to_sha256",
        "stream",
        "sha256",
        "peers",
        "logging",
        "warning",
        "sha256",
        "peers",
        "sha256"
    ],
    "literals": [
        "\"sha256\"",
        "\"dash: multiple unchokes: %s\"",
        "\"dash: add sha256: %s\"",
        "\"authorization\"",
        "\"port\"",
        "\"dash_rates\"",
        "\"dash_rates\"",
        "\"dash: not authorized: %s\"",
        "\"dash: del sha256 (OK): %s\"",
        "\"dash\"",
        "\"srvr_schema_version\"",
        "\"srvr_timestamp\"",
        "\"client\"",
        "\"server\"",
        "\"timestamp\"",
        "\"dash: del sha256 (ERR): %s\""
    ],
    "variables": [
        "peers",
        "sha256",
        "sha256",
        "sha256",
        "sha256",
        "result",
        "server_timestamp",
        "sha256"
    ],
    "comments": [
        "mod_dash/server_negotiate.py",
        "",
        "Copyright (c) 2011-2013",
        "Nexa Center for Internet & Society, Politecnico di Torino (DAUIN)",
        "and Simone Basso <bassosimone@gmail.com>",
        "",
        "This file is part of Neubot <http://www.neubot.org/>.",
        "",
        "Neubot is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "Neubot is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with Neubot.  If not, see <http://www.gnu.org/licenses/>.",
        "",
        "Adapted from neubot/negotiate/server_raw.py",
        "For now just accept the proposal from the client",
        "Note: no more than one collect per session",
        "",
        "Return back, at a minimum, the server timestamp.",
        "TODO Also gather and return Web100 stats.",
        "",
        "Note: if collect is successful self.peers[sha256] doesn't exist"
    ],
    "docstrings": [
        "\"\"\" MPEG DASH negotiate server \"\"\"",
        "\"\"\" Negotiator for MPEG DASH test \"\"\"",
        "\"\"\" Stream to SHA256 identifier \"\"\"",
        "\"\"\" Invoked when we must unchoke a session \"\"\"",
        "\"\"\" Invoked when we must save the result of a session \"\"\"",
        "\"\"\" Invoked when a session has been closed \"\"\""
    ],
    "functions": [
        "_stream_to_sha256",
        "unchoke",
        "collect",
        "_update_peers"
    ],
    "classes": [
        "DASHNegotiateServer"
    ]
}