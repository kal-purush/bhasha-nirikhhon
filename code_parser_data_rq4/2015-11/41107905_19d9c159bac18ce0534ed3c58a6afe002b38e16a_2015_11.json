{
    "identifiers": [
        "numpy",
        "np",
        "PIL",
        "Image",
        "ocpcaerror",
        "OCPCAError",
        "logging",
        "logging",
        "getLogger",
        "cutout",
        "colors",
        "enhancement",
        "np",
        "zeros",
        "cutout",
        "shape",
        "dtype",
        "np",
        "uint32",
        "i",
        "cutout",
        "shape",
        "np",
        "array",
        "cutout",
        "i",
        "dtype",
        "np",
        "uint32",
        "colors",
        "i",
        "combined_cutout",
        "np",
        "left_shift",
        "data32",
        "np",
        "left_shift",
        "data32",
        "colors",
        "i",
        "combined_cutout",
        "np",
        "left_shift",
        "data32",
        "data32",
        "colors",
        "i",
        "combined_cutout",
        "np",
        "left_shift",
        "data32",
        "data32",
        "colors",
        "i",
        "combined_cutout",
        "data32",
        "colors",
        "i",
        "combined_cutout",
        "np",
        "left_shift",
        "data32",
        "colors",
        "i",
        "combined_cutout",
        "np",
        "left_shift",
        "data32",
        "logger",
        "warning",
        "format",
        "color",
        "i",
        "OCPCAError",
        "format",
        "color",
        "i",
        "np",
        "where",
        "combined_cutout",
        "combined_cutout",
        "Image",
        "frombuffer",
        "cutout",
        "shape",
        "combined_cutout",
        "flatten",
        "PIL",
        "ImageEnhance",
        "outimage"
    ],
    "literals": [
        "\"ocp\"",
        "'C'",
        "'M'",
        "'Y'",
        "'R'",
        "'G'",
        "'B'",
        "\"Unsupported color requested: {}\"",
        "\"Unsupported color requested: {}\"",
        "'RGBA'",
        "'raw'",
        "'RGBA'"
    ],
    "variables": [
        "logger",
        "combined_cutout",
        "data32",
        "combined_cutout",
        "outimage"
    ],
    "comments": [
        "Copyright 2014 Open Connectome Project (http://openconnecto.me)",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "First is Cyan",
        "Second is Magenta",
        "Third is Yellow",
        "Fourth is Red",
        "Fifth is Green",
        "Sixth is Blue",
        "Set the alpha channel only for nonzero pixels",
        "Enhance the image",
        "enhancer = ImageEnhance.Brightness(outimage)",
        "outimage = enhancer.enhance(enhancement)"
    ],
    "docstrings": [
        "\"\"\"False color a multichannel cutout.  Takes a 3-d array and returns a 2-d array \n     that combined all channels based on colors.  \n    The inbound channels should be 8-bit, i.e. window them if need be.\n\n    xdim, ydim: these should be the dimensions of the output image and should correspond \n      to the amount of data in the channel cutout\n  \"\"\""
    ],
    "functions": [
        "mcfcPNG"
    ],
    "classes": []
}