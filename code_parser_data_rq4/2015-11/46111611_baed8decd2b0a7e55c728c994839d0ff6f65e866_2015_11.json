{
    "identifiers": [
        "with_statement",
        "sys",
        "os",
        "re",
        "hashlib",
        "md5",
        "glob",
        "glob",
        "subprocess",
        "Popen",
        "PIPE",
        "urllib2",
        "urlopen",
        "Request",
        "datetime",
        "datetime",
        "shutil",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "target",
        "deps",
        "targets",
        "items",
        "target",
        "max",
        "len",
        "os",
        "path",
        "basename",
        "fn",
        "fn",
        "deps",
        "deps",
        "fn",
        "compile",
        "fn",
        "fn",
        "padding",
        "fn",
        "deps",
        "join",
        "all_src",
        "fn",
        "fn",
        "deps",
        "make_worker",
        "deps",
        "padding",
        "render_file",
        "target",
        "deps",
        "deps_code",
        "worker",
        "worker",
        "worker_deps",
        "worker_deps",
        "file",
        "target",
        "f",
        "f",
        "write",
        "output_code",
        "deps",
        "padding",
        "deps",
        "open",
        "workerfile",
        "read",
        "strip",
        "re",
        "search",
        "driver",
        "re",
        "S",
        "m",
        "m",
        "group",
        "m",
        "group",
        "re",
        "sub",
        "driver",
        "compile",
        "driver",
        "padding",
        "compile",
        "padding",
        "worker_code",
        "hermetic_code",
        "target",
        "_vals",
        "tmpl",
        "args",
        "tmpl",
        "split",
        "val",
        "args",
        "items",
        "re",
        "compile",
        "line",
        "lines",
        "tag_re",
        "search",
        "line",
        "m",
        "m",
        "group",
        "ws",
        "val",
        "replace",
        "ws",
        "output",
        "append",
        "padded_replacement",
        "output",
        "append",
        "line",
        "output",
        "join",
        "lines",
        "open",
        "target",
        "read",
        "k",
        "upper",
        "v",
        "k",
        "v",
        "_vals",
        "items",
        "vals",
        "vals",
        "open",
        "read",
        "replace",
        "datetime",
        "now",
        "year",
        "target",
        "target",
        "join",
        "ln",
        "ln",
        "license_txt",
        "split",
        "ln",
        "license_txt",
        "tmpl_render",
        "wrapper_tmpl",
        "vals",
        "js",
        "title",
        "padding",
        "md5sum",
        "filename",
        "re",
        "sub",
        "filename",
        "replace",
        "md5sum",
        "os",
        "path",
        "exists",
        "hashfile",
        "filename",
        "replace",
        "file",
        "hashfile",
        "read",
        "fn",
        "glob",
        "os",
        "unlink",
        "fn",
        "md5sum",
        "src",
        "filename",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "re",
        "sub",
        "filename",
        "replace",
        "md5sum",
        "file",
        "hashfile",
        "f",
        "f",
        "write",
        "src",
        "src",
        "name",
        "name",
        "re",
        "sub",
        "src",
        "src",
        "YUI_PATH",
        "YUI_OPTIONS",
        "os",
        "path",
        "exists",
        "js",
        "open",
        "js",
        "read",
        "os",
        "path",
        "basename",
        "js",
        "js",
        "filter_src",
        "yui_input",
        "title",
        "md5",
        "yui_input",
        "hexdigest",
        "precompiled",
        "input_hash",
        "title",
        "yui_output",
        "title",
        "replace",
        "Popen",
        "yui_cmd",
        "shell",
        "stdin",
        "PIPE",
        "stdout",
        "PIPE",
        "close_fds",
        "p",
        "stdin",
        "p",
        "stdout",
        "pin",
        "write",
        "yui_input",
        "p",
        "communicate",
        "strip",
        "yui_output",
        "title",
        "sys",
        "exit",
        "postcompile",
        "input_hash",
        "yui_output",
        "title",
        "title",
        "padding",
        "len",
        "title",
        "title",
        "yui_output",
        "yui_output",
        "zipfile",
        "ZipFile",
        "cStringIO",
        "StringIO",
        "urlopen",
        "YUI_LIB_URL",
        "ZipFile",
        "StringIO",
        "data",
        "read",
        "f",
        "f",
        "yuizip",
        "namelist",
        "f",
        "os",
        "path",
        "exists",
        "os",
        "mkdir",
        "yuizip",
        "open",
        "jarpath",
        "read",
        "file",
        "os",
        "path",
        "basename",
        "jarpath",
        "f",
        "f",
        "write",
        "jardata",
        "os",
        "path",
        "basename",
        "jarpath",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "basename",
        "jarpath",
        "file",
        "f",
        "f",
        "write",
        "binfile",
        "os",
        "chmod",
        "YUI_PATH",
        "os",
        "path",
        "abspath",
        "YUI_PATH",
        "os",
        "path",
        "exists",
        "YUI_PATH",
        "os",
        "path",
        "exists",
        "raw_input",
        "should_get",
        "lower",
        "startswith",
        "get_yui",
        "sys",
        "exit",
        "os",
        "path",
        "abspath",
        "os",
        "chdir",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "make_lib",
        "main"
    ],
    "literals": [
        "\"http://yui.zenfs.com/releases/yuicompressor/yuicompressor-2.4.6.zip\"",
        "\"/usr/local/bin/yui\"",
        "\"--type=js\"",
        "'lib'",
        "'lib'",
        "\"arbor.js\"",
        "\"etc.js\"",
        "\"kernel.js\"",
        "\"physics/atoms.js\"",
        "\"physics/system.js\"",
        "\"physics/barnes-hut.js\"",
        "\"physics/physics.js\"",
        "\"arbor-tween.js\"",
        "\"etc.js\"",
        "\"graphics/colors.js\"",
        "\"tween/easing.js\"",
        "\"tween/tween.js\"",
        "\"arbor-graphics.js\"",
        "\"etc.js\"",
        "\"graphics/colors.js\"",
        "\"graphics/primitives.js\"",
        "\"graphics/graphics.js\"",
        "'worker.js'",
        "'hermetic.js'",
        "'kernel.js'",
        "\"src/%s\"",
        "\"\\n\"",
        "\"lib/%s\"",
        "\"w\"",
        "\"\"",
        "'kernel.js'",
        "\"\"",
        "\"\"",
        "\"src/physics/worker.js\"",
        "r'^(.*)//.alias.*endalias.*?\\n(.*)'",
        "r'importScripts\\(.*?\\).*?\\n'",
        "''",
        "'worker.js'",
        "'src/hermetic.js'",
        "\"\\n\"",
        "r\"^([\\t ]*?)\\{\\{%s\\}\\}\"",
        "\"\\n\"",
        "\"\\n%s\"",
        "\"\\n\"",
        "\"build/tmpl/%s\"",
        "'DEPS'",
        "'WORKER'",
        "'build/tmpl/LICENSE'",
        "'{{YEAR}}'",
        "'graphics'",
        "'tween'",
        "'LICENSE'",
        "\"\\n\"",
        "\"\\n\"",
        "'springy.js'",
        "'LICENSE'",
        "r'.js$'",
        "''",
        "'/'",
        "'+'",
        "\"%s-%s\"",
        "'build/.o/%s'",
        "\"-\"",
        "'.js'",
        "''",
        "'build/.o/%s'",
        "\"build/.o/%s-*\"",
        "'build/.o'",
        "'build/.o'",
        "r'.js$'",
        "''",
        "'/'",
        "'+'",
        "\"%s-%s\"",
        "\"build/.o/%s\"",
        "'w'",
        "'kernel'",
        "r'new Worker\\((.*)[\\'\\\"](.*)/worker.*?\\)'",
        "r'new Worker(\\1\"arbor.js\")'",
        "\"%s %s\"",
        "\"+\"",
        "'.js'",
        "''",
        "\"Compilation failed (%s)\"",
        "\"/* %s%s */  %s\"",
        "\" \"",
        "\"fetching yui compressor\"",
        "'build/yuicompressor'",
        "'.yui'",
        "'.yui'",
        "'.yui/%s'",
        "'w'",
        "\"placed jar at\"",
        "'.yui/%s'",
        "\"#!/bin/sh\\n\\njava -jar %s $@\\n\"",
        "'.yui/'",
        "'yui'",
        "'wb'",
        "'yui'",
        "\"created yui script in current dir\\n\"",
        "'./yui'",
        "'Can\\'t find the YUI compresser.\\nTry fetching a copy? (y/n) '",
        "'y'",
        "\"Please adjust the YUI_PATH variable in the script to point to the proper command\"",
        "'./yui'",
        "\"%s/..\"",
        "'__main__'"
    ],
    "variables": [
        "YUI_LIB_URL",
        "YUI_PATH",
        "YUI_OPTIONS",
        "targets",
        "padding",
        "all_src",
        "deps_code",
        "worker",
        "worker_deps",
        "output_code",
        "workerfile",
        "driver",
        "m",
        "driver",
        "driver",
        "worker_code",
        "hermetic_code",
        "lines",
        "tag_re",
        "output",
        "m",
        "ws",
        "padded_replacement",
        "lines",
        "wrapper_tmpl",
        "vals",
        "dep_src",
        "worker_src",
        "license_txt",
        "vals",
        "vals",
        "hashfile",
        "hashfile",
        "src",
        "yui_cmd",
        "yui_input",
        "title",
        "yui_input",
        "yui_input",
        "input_hash",
        "yui_output",
        "p",
        "pin",
        "pout",
        "yui_output",
        "data",
        "yuizip",
        "jarpath",
        "jardata",
        "binfile",
        "YUI_PATH",
        "should_get",
        "YUI_PATH"
    ],
    "comments": [
        "!/usr/bin/env python",
        "encoding: utf-8",
        "apparently there is no stable download link for <most-recent-version> of",
        "yui, so this could url well be stale. if so you can try looking for a",
        "new link at: http://yuilibrary.com/downloads/#yuicompressor",
        "your system configuration may vary...",
        "YUI_OPTIONS = \"--nomunge --disable-optimizations --type=js\"",
        "strip out aliases",
        "do some caching so we're not constantly recompiling unchanged sourcefiles",
        "for those last-minute s///g details...",
        "if we don't have a cached copy of the compiler output for the file,",
        "run yui and save the raw output to the .o directory for later. otherwise",
        "just return the text from the cached file."
    ],
    "docstrings": [
        "\"\"\"\nbuild.py\n\nregenerates the files in lib/ based on the current state of src/\n\nCreated by Christian Swinehart on 2010-12-05.\nCopyright (c) 2010 Samizdat Drafting Co. All rights reserved.\n\"\"\""
    ],
    "functions": [
        "make_lib",
        "make_worker",
        "render_file",
        "tmpl_render",
        "compile",
        "precompiled",
        "postcompile",
        "filter_src",
        "get_yui",
        "main"
    ],
    "classes": []
}