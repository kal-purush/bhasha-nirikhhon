{
    "identifiers": [
        "com",
        "paymoon",
        "thread",
        "java",
        "util",
        "concurrent",
        "CountDownLatch",
        "java",
        "util",
        "concurrent",
        "ExecutorService",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "args",
        "begin",
        "end",
        "exec",
        "Executors",
        "newFixedThreadPool",
        "index",
        "index",
        "index",
        "NO",
        "index",
        "run",
        "begin",
        "await",
        "sleep",
        "random",
        "NO",
        "e",
        "end",
        "countDown",
        "exec",
        "submit",
        "run",
        "begin",
        "countDown",
        "end",
        "await",
        "exec",
        "shutdown"
    ],
    "literals": [
        "\"No.\"",
        "\" arrived\"",
        "\"Game Start\"",
        "\"Game Over\""
    ],
    "variables": [],
    "comments": [
        "一个CountDouwnLatch实例是不能重复使用的，也就是说它是一次性的，锁一经被打开就不能再关闭使用了，如果想重复使用，请考虑使用CyclicBarrier。",
        "http://www.itzhai.com/the-introduction-and-use-of-a-countdownlatch.html#read-more",
        "模拟了100米赛跑，10名选手已经准备就绪，只等裁判一声令下。当所有人都到达终点时，比赛结束。",
        "开始的倒数锁",
        "结束的倒数锁",
        "十名选手",
        "如果当前计数为零，则此方法立即返回。",
        "等待",
        "每个选手到达终点时，end就减一",
        "begin减一，开始游戏",
        "等待end变为0，即所有选手到达终点",
        "TimeUnit.SECONDS.convert(1000000000, TimeUnit.NANOSECONDS),TimeUnit.SECONDS",
        "System.out.println(TimeUnit.SECONDS.convert(1, TimeUnit.MINUTES));",
        "System.out.println(TimeUnit.SECONDS.toMinutes(600));"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "run"
    ],
    "classes": [
        "CountDownLatchTest2"
    ]
}