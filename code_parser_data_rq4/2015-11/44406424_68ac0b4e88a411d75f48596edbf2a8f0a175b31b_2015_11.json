{
    "identifiers": [
        "binascii",
        "unhexlify",
        "impacket",
        "dcerpc",
        "v5",
        "ndr",
        "NDRCALL",
        "NDR",
        "NDRSTRUCT",
        "NDRUNION",
        "NDRPOINTER",
        "NDRUniConformantArray",
        "NDRUniConformantVaryingArray",
        "NDRArray",
        "NDRENUM",
        "impacket",
        "dcerpc",
        "v5",
        "dtypes",
        "NULL",
        "WSTR",
        "PWCHAR",
        "WCHAR",
        "RPC_UNICODE_STRING",
        "ULONG",
        "USHORT",
        "UCHAR",
        "LARGE_INTEGER",
        "RPC_SID",
        "LONG",
        "STR",
        "LPBYTE",
        "SECURITY_INFORMATION",
        "PRPC_SID",
        "PRPC_UNICODE_STRING",
        "LPWSTR",
        "impacket",
        "dcerpc",
        "v5",
        "rpcrt",
        "DCERPCException",
        "impacket",
        "nt_errors",
        "LOG",
        "impacket",
        "uuid",
        "uuidtup_to_bin",
        "impacket",
        "dcerpc",
        "v5",
        "Enum",
        "impacket",
        "structure",
        "Structure",
        "impacket",
        "dcerpc",
        "v5",
        "samr",
        "RPC_STRING",
        "uuidtup_to_bin",
        "DCERPCException",
        "error_string",
        "error_code",
        "packet",
        "DCERPCException",
        "error_string",
        "error_code",
        "packet",
        "error_code",
        "nt_errors",
        "ERROR_MESSAGES",
        "has_key",
        "key",
        "nt_errors",
        "ERROR_MESSAGES",
        "key",
        "nt_errors",
        "ERROR_MESSAGES",
        "key",
        "error_code",
        "error_msg_short",
        "error_msg_verbose",
        "error_code",
        "NDRSTRUCT",
        "USHORT",
        "USHORT",
        "NDRPOINTER",
        "EVENTLOG_OPENUNKNOWN",
        "NDR",
        "NDRArray",
        "NDRCALL",
        "PEVENTLOG_OPENUNKNOWN",
        "RPC_UNICODE_STRING",
        "RPC_UNICODE_STRING",
        "ULONG",
        "ULONG",
        "NDRCALL",
        "IELF_HANDLE",
        "ULONG",
        "NDRCALL",
        "IELF_HANDLE",
        "NDRCALL",
        "ULONG",
        "ULONG",
        "NDRCALL",
        "IELF_HANDLE",
        "ULONG",
        "ULONG",
        "ULONG",
        "NDRCALL",
        "EVENTLOG_READ_BUFFER",
        "ULONG",
        "ULONG",
        "EventLogOpenEventLogW",
        "EventLogOpenEventLogWResponse",
        "EventLogNumberOfRecords",
        "EventLogNumberOfRecordsResponse",
        "EventLogReadEventLog",
        "EventLogReadEventLogResponse",
        "dce",
        "sourceName",
        "EventLogOpenEventLogW",
        "request",
        "request",
        "sourceName",
        "dce",
        "request",
        "request",
        "dce",
        "logHandle",
        "EventLogNumberOfRecords",
        "logHandle",
        "dce",
        "request",
        "request",
        "dce",
        "logHandle",
        "EventLogReadEventLog",
        "logHandle",
        "dce",
        "request",
        "request"
    ],
    "literals": [
        "'82273FDC-E32A-18C3-3F78-827929DC23EA'",
        "'0.0'",
        "'EVENTLOG SessionError: code: 0x%x - %s - %s'",
        "'EVENTLOG SessionError: unknown error code: 0x%x'",
        "'Unknown0'",
        "'Unknown1'",
        "'Data'",
        "'Data'",
        "'20s=\"\"'",
        "'c'",
        "'Len'",
        "'<L'",
        "'Data'",
        "'*Len'",
        "'Unused'",
        "'ModuleName'",
        "'RegModuleName'",
        "'MajorVersion'",
        "'MinorVersion'",
        "'LogHandle'",
        "'ErrorCode'",
        "'LogHandle'",
        "'NumberOfRecors'",
        "'ErrorCode'",
        "'LogHandle'",
        "'ReadFlags'",
        "'RecordOffset'",
        "'BytesToRead'",
        "'Buffer'",
        "'BytesRead'",
        "'ReadSize'",
        "'Unused'",
        "'Unknown0'",
        "'Unused'",
        "'Unknown1'",
        "'ModuleName'",
        "'RegModuleName'",
        "''",
        "'MajorVersion'",
        "'MinorVersion'",
        "'LogHandle'",
        "'LogHandle'",
        "'ReadFlags'",
        "'BytesToRead'"
    ],
    "variables": [
        "MSRPC_UUID_EVENTLOG",
        "key",
        "error_msg_short",
        "error_msg_verbose",
        "structure",
        "referent",
        "structure",
        "item",
        "structure",
        "opnum",
        "structure",
        "structure",
        "opnum",
        "structure",
        "structure",
        "opnum",
        "structure",
        "structure",
        "OPNUMS",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request",
        "request"
    ],
    "comments": [
        "Author: Michael Molho",
        "",
        "Description:",
        "[MS-EVEN] Interface implementation",
        "",
        "Best way to learn how to use these calls is to grab the protocol standard",
        "so you understand what the call does, and then read the test case located",
        "at https://github.com/CoreSecurity/impacket/tree/master/impacket/testcases/SMB_RPC",
        "",
        "Some calls have helper functions, which makes it even easier to use.",
        "They are located at the end of this file.",
        "Helper functions start with \"h\"<name of the call>.",
        "There are test cases for them too.",
        "",
        "MS Documentation: https://msdn.microsoft.com/en-us/library/cc231253.aspx",
        "",
        "CONSTANTS",
        "",
        "2.2.6 IELF_HANDLE",
        "",
        "RPC CALLS",
        "",
        "",
        "HELPER FUNCTIONS",
        ""
    ],
    "docstrings": [],
    "functions": [
        "__str__",
        "hEventLogOpenEventLogW",
        "hEventLogNumberOfRecords",
        "hEventLogReadEventLog"
    ],
    "classes": [
        "DCERPCSessionError",
        "EVENTLOG_OPENUNKNOWN",
        "PEVENTLOG_OPENUNKNOWN",
        "IELF_HANDLE",
        "EVENTLOG_READ_BUFFER",
        "EventLogOpenEventLogW",
        "EventLogOpenEventLogWResponse",
        "EventLogNumberOfRecords",
        "EventLogNumberOfRecordsResponse",
        "EventLogReadEventLog",
        "EventLogReadEventLogResponse"
    ]
}