{
    "identifiers": [
        "pytest",
        "jdcal",
        "fpart",
        "ipart",
        "is_leap",
        "gcal2jd",
        "jd2gcal",
        "jcal2jd",
        "jd2jcal",
        "MJD_0",
        "round",
        "fpart",
        "round",
        "fpart",
        "round",
        "fpart",
        "round",
        "fpart",
        "round",
        "ipart",
        "round",
        "ipart",
        "round",
        "ipart",
        "round",
        "ipart",
        "is_leap",
        "is_leap",
        "is_leap",
        "is_leap",
        "is_leap",
        "is_leap",
        "gcal2jd",
        "round",
        "r",
        "round",
        "r",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "gcal2jd",
        "jd2gcal",
        "gcal2jd",
        "jd2gcal",
        "gcal2jd",
        "jd2gcal",
        "gcal2jd",
        "jd2gcal",
        "gcal2jd",
        "jd2gcal",
        "gcal2jd",
        "jd2gcal",
        "round",
        "r",
        "jd2gcal",
        "round",
        "r",
        "round",
        "jd2gcal",
        "round",
        "r",
        "random",
        "random",
        "randint",
        "i",
        "n",
        "random",
        "randint",
        "i",
        "n",
        "random",
        "randint",
        "i",
        "n",
        "jcal2jd",
        "y",
        "m",
        "d",
        "y",
        "m",
        "d",
        "year",
        "month",
        "day",
        "jd2jcal",
        "MJD_0",
        "i",
        "i",
        "jd",
        "i",
        "n",
        "x",
        "i",
        "year",
        "i",
        "x",
        "i",
        "month",
        "i",
        "x",
        "i",
        "day",
        "i",
        "x",
        "i",
        "pyslalib",
        "slalib",
        "slalib",
        "sla_cldj",
        "x",
        "pytest",
        "mark",
        "skipif",
        "pyslalib_un_available",
        "reason",
        "random",
        "pyslalib",
        "slalib",
        "ImportError",
        "random",
        "randint",
        "i",
        "n",
        "random",
        "randint",
        "i",
        "n",
        "random",
        "randint",
        "i",
        "n",
        "i",
        "n",
        "is_leap",
        "year",
        "i",
        "month",
        "i",
        "day",
        "i",
        "mday",
        "month",
        "i",
        "x",
        "mday",
        "month",
        "i",
        "gcal2jd",
        "y",
        "m",
        "d",
        "y",
        "m",
        "d",
        "year",
        "month",
        "day",
        "slalib",
        "sla_cldj",
        "y",
        "m",
        "d",
        "y",
        "m",
        "d",
        "year",
        "month",
        "day",
        "abs",
        "i",
        "j",
        "i",
        "j",
        "jd_sla",
        "jd_jdc",
        "max",
        "diff",
        "min",
        "diff",
        "pytest",
        "main"
    ],
    "literals": [
        "\"pyslalib not available\"",
        "\"SLALIB (PySLALIB not available).\"",
        "'__main__'"
    ],
    "variables": [
        "r",
        "r",
        "r",
        "r",
        "n",
        "year",
        "month",
        "day",
        "jd",
        "x",
        "x",
        "x",
        "n",
        "mday",
        "year",
        "month",
        "day",
        "x",
        "x",
        "day",
        "i",
        "jd_jdc",
        "jd_sla",
        "diff"
    ],
    "comments": [
        "input values are truncated to integers. So this is trivial.",
        "sla_cldj needs year > -4699 i.e., 4700 BC."
    ],
    "docstrings": [
        "\"\"\"Tests for jdcal.py\"\"\"",
        "\"\"\"Check round trip from jcal2jd to jd2jcal.\"\"\"",
        "\"\"\"Compare gcal2jd with slalib.sla_cldj.\"\"\""
    ],
    "functions": [
        "test_fpart",
        "test_ipart",
        "test_is_leap",
        "test_gcal2jd_simple",
        "test_gcal2jd_negative_numbers_and_zero",
        "test_gcal2jd_next_month",
        "test_gcal2jd_is_for_mid_night_of_given_day",
        "test_jd2gcal",
        "test_jd2gcal_fractional_day_part",
        "test_jcal2jd_and_back_through_jd2jcal",
        "pyslalib_un_available",
        "test_gcal2jd_with_sla_cldj"
    ],
    "classes": []
}