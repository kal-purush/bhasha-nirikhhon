{
    "identifiers": [
        "cse",
        "uta",
        "edu",
        "os2",
        "client",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "PrintWriter",
        "java",
        "net",
        "Socket",
        "java",
        "net",
        "UnknownHostException",
        "socket",
        "os",
        "socket",
        "socket",
        "getInputStream",
        "os",
        "socket",
        "getOutputStream",
        "e",
        "e",
        "printStackTrace",
        "e",
        "e",
        "printStackTrace",
        "exit",
        "line",
        "text",
        "sysIn",
        "text",
        "sysIn",
        "readLine",
        "os",
        "text",
        "line",
        "readLine",
        "line",
        "e",
        "e",
        "printStackTrace",
        "msg",
        "msg",
        "os",
        "msg",
        "msg",
        "msg",
        "readLine",
        "e",
        "getClass",
        "getName",
        "e",
        "printStackTrace",
        "msg",
        "close",
        "os",
        "close",
        "socket",
        "close",
        "e",
        "e",
        "printStackTrace",
        "args",
        "client",
        "client",
        "sendMessage",
        "client",
        "recieveMessage",
        "client",
        "closeSocket"
    ],
    "literals": [
        "\"127.0.0.1\"",
        "\"client : unknown host \"",
        "\"client : Error connecting to server socket,make sure to start the Server before starting Client \"",
        "\"Hi, there, How u doing today ?\"",
        "\"client :\"",
        "\"server : \"",
        "\"client : \"",
        "\"client : Reading from socket failed\"",
        "\" Exception while recieving data from server\"",
        "\"client : Error while closing the socket \"",
        "\"augment\""
    ],
    "variables": [],
    "comments": [
        "writes it to the client output stream",
        "reads from the server output stream",
        "client.readWriteScoket();"
    ],
    "docstrings": [
        "* this class responsible for creating the client program socket and make \n * a request to the server for synonym for a word \n * @author lakshmana s(1000789751)\n *",
        "* creates the client socket and with the given server port \n\t * and creates the input and output stream for that opened socket",
        "* in this method client requests a server with the word and \n\t * waits for the server to respond and displays the server response",
        "* client sends out a message to the server\n\t * @param msg",
        "* client waits for the server to write to it's output stream\n\t * and reads them\n\t * @return",
        "* this method closes the client socket and input and output stream",
        "* main method to test the client program\n\t * @param args"
    ],
    "functions": [
        "ClientProg",
        "readWriteScoket",
        "sendMessage",
        "recieveMessage",
        "closeSocket",
        "main"
    ],
    "classes": [
        "ClientProg"
    ]
}