{
    "identifiers": [
        "sys",
        "re",
        "filename",
        "open",
        "filename",
        "f",
        "read",
        "re",
        "findall",
        "text",
        "re",
        "findall",
        "text",
        "re",
        "findall",
        "text",
        "re",
        "findall",
        "text",
        "entries1",
        "entries2",
        "entries3",
        "entries4",
        "entry",
        "entries",
        "entry",
        "entry",
        "cost",
        "numEntries",
        "f",
        "close",
        "sorted",
        "costTable",
        "items",
        "reverse",
        "key",
        "SecondElement",
        "filename",
        "open",
        "outputFileName",
        "sortedTable",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "f",
        "write",
        "f",
        "close",
        "numEntries",
        "outputFileName",
        "sys",
        "argv",
        "args",
        "sys",
        "exit",
        "sort_by_price",
        "sys",
        "argv",
        "main"
    ],
    "literals": [
        "\"rU\"",
        "r'(\\d\\d\\d - \\D+)(\\d+.\\d+)'",
        "r'(\\d\\d\\d - \\D+96\\+ HOURS\\D+)(\\d+.\\d+)'",
        "r'(\\d\\d\\d - \\D+<96 HOURS\\D+)(\\d+.\\d+)'",
        "r'(\\d\\d\\d - \\D+4\\+ VESSELS\\D+)(\\d+.\\d+)'",
        "\".sorted\"",
        "\"w\"",
        "\" \"",
        "\"\\n\"",
        "\":\"",
        "\"\\n\\nWrote \"",
        "\" entries to \"",
        "'usage: file'",
        "'__main__'"
    ],
    "variables": [
        "costTable",
        "sortedTable",
        "numEntries",
        "f",
        "text",
        "entries1",
        "entries2",
        "entries3",
        "entries4",
        "entries",
        "procedure",
        "cost",
        "costTable",
        "procedure",
        "sortedTable",
        "outputFileName",
        "f",
        "args"
    ],
    "comments": [
        "!/usr/bin/python",
        "Initialize variables",
        "Open file for reading and populate dictionary",
        "Sort values",
        "Write to file",
        "This command-line parsing code is provided.",
        "Make a list of command line arguments, omitting the [0] element",
        "which is the script itself."
    ],
    "docstrings": [
        "\"\"\"SortProcedure\n\nTakes a text file of the form\n\n   Procedure   Cost\n   \nand regenerates it so it is sorted by cost.\n   \n\"\"\"",
        "\"\"\"\n  Open a file and create a dictionary based on the procedure and cost pairs.  Then sort\n  that dictionary and write the sorted output to the filename with \"sorted\" appended to it.\n  \"\"\""
    ],
    "functions": [
        "SecondElement",
        "sort_by_price",
        "main"
    ],
    "classes": []
}