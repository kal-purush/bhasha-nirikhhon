{
    "identifiers": [
        "grayfox",
        "phxSunTeff",
        "phxSunLogEg",
        "log",
        "phxSunTau64",
        "logE",
        "log10",
        "E",
        "numPhxDep",
        "ScaleSolar",
        "phxSunTau64",
        "length",
        "logPhxSunTau64",
        "numPhxDep",
        "i",
        "i",
        "numPhxDep",
        "i",
        "logPhxSunTau64",
        "i",
        "log",
        "ScaleSolar",
        "phxSunTau64",
        "i",
        "logPhxSunTau64",
        "logPhxSunTau64",
        "logPhxSunTau64",
        "numPhxDep",
        "logPhxSunTau64",
        "numPhxDep",
        "logPhxSunTau64",
        "teff",
        "numDeps",
        "tauRos",
        "logE",
        "log10",
        "E",
        "phxSunTemp64",
        "phxSunTemp",
        "numDeps",
        "scaleTemp",
        "numDeps",
        "i",
        "i",
        "numDeps",
        "i",
        "phxSunTemp",
        "i",
        "Interpol",
        "interpol",
        "ScaleSolar",
        "logPhxSunTau64",
        "phxSunTemp64",
        "tauRos",
        "i",
        "scaleTemp",
        "i",
        "teff",
        "phxSunTemp",
        "i",
        "ScaleSolar",
        "phxSunTeff",
        "scaleTemp",
        "i",
        "log",
        "scaleTemp",
        "i",
        "scaleTemp",
        "grav",
        "numDeps",
        "tauRos",
        "logE",
        "log10",
        "E",
        "logEg",
        "log",
        "grav",
        "phxSunPGas64",
        "numPhxDeps",
        "phxSunPGas64",
        "length",
        "logPhxSunPGas64",
        "numPhxDeps",
        "i",
        "i",
        "phxSunPGas64",
        "length",
        "i",
        "logPhxSunPGas64",
        "i",
        "log",
        "phxSunPGas64",
        "i",
        "phxSunPGas",
        "numDeps",
        "logPhxSunPGas",
        "numDeps",
        "scalePGas",
        "numDeps",
        "i",
        "i",
        "numDeps",
        "i",
        "logPhxSunPGas",
        "i",
        "Interpol",
        "interpol",
        "ScaleSolar",
        "logPhxSunTau64",
        "logPhxSunPGas64",
        "tauRos",
        "i",
        "scalePGas",
        "i",
        "logEg",
        "logPhxSunPGas",
        "i",
        "ScaleSolar",
        "phxSunLogEg",
        "scalePGas",
        "i",
        "exp",
        "scalePGas",
        "i",
        "scalePGas",
        "grav",
        "numDeps",
        "tauRos",
        "scaleTemp",
        "kappaScale",
        "logE",
        "log10",
        "E",
        "logEg",
        "log",
        "grav",
        "logEkappaScale",
        "log",
        "kappaScale",
        "phxSunPe64",
        "numPhxDeps",
        "phxSunPe64",
        "length",
        "logPhxSunPe64",
        "numPhxDeps",
        "i",
        "i",
        "phxSunPe64",
        "length",
        "i",
        "logPhxSunPe64",
        "i",
        "log",
        "phxSunPe64",
        "i",
        "phxSunPe",
        "numDeps",
        "logPhxSunPe",
        "numDeps",
        "logScalePe",
        "numDeps",
        "scaleNe",
        "numDeps",
        "i",
        "i",
        "numDeps",
        "i",
        "logPhxSunPe",
        "i",
        "Interpol",
        "interpol",
        "ScaleSolar",
        "logPhxSunTau64",
        "logPhxSunPe64",
        "tauRos",
        "i",
        "logScalePe",
        "i",
        "logEg",
        "logPhxSunPe",
        "i",
        "ScaleSolar",
        "phxSunLogEg",
        "logEkappaScale",
        "scaleNe",
        "i",
        "logScalePe",
        "i",
        "scaleTemp",
        "i",
        "Useful",
        "logK",
        "scaleNe",
        "i",
        "exp",
        "scaleNe",
        "i",
        "scaleNe",
        "numDeps",
        "tauRos",
        "kappaScale",
        "logEkappaScale",
        "log",
        "kappaScale",
        "phxSunRho64",
        "phxSunRadius64",
        "numPhxDeps",
        "phxSunRadius64",
        "length",
        "phxSunKappa64",
        "numPhxDeps",
        "logPhxSunKappa64",
        "numPhxDeps",
        "fudge",
        "logFudge",
        "log",
        "fudge",
        "deltaRho",
        "deltaRadius",
        "deltaTau",
        "logDeltaRho",
        "logDeltaRadius",
        "logDeltaTau",
        "logE",
        "log10",
        "E",
        "i",
        "i",
        "numPhxDeps",
        "i",
        "deltaRadius",
        "phxSunRadius64",
        "i",
        "phxSunRadius64",
        "i",
        "deltaRadius",
        "abs",
        "deltaRadius",
        "deltaRadius",
        "deltaRadius",
        "deltaRho",
        "phxSunRho64",
        "i",
        "phxSunRho64",
        "i",
        "deltaRho",
        "abs",
        "deltaRho",
        "deltaRho",
        "deltaRho",
        "deltaTau",
        "ScaleSolar",
        "phxSunTau64",
        "i",
        "ScaleSolar",
        "phxSunTau64",
        "i",
        "deltaTau",
        "abs",
        "deltaTau",
        "deltaTau",
        "deltaTau",
        "logDeltaRadius",
        "log",
        "deltaRadius",
        "logDeltaRho",
        "log",
        "deltaRho",
        "logDeltaTau",
        "log",
        "deltaTau",
        "logPhxSunKappa64",
        "i",
        "logDeltaTau",
        "logDeltaRho",
        "logDeltaRadius",
        "logEkappaScale",
        "logFudge",
        "phxSunKappa64",
        "i",
        "exp",
        "logPhxSunKappa64",
        "i",
        "logPhxSunKappa64",
        "logPhxSunKappa64",
        "phxSunKappa64",
        "phxSunKappa64",
        "phxSunKappa",
        "numDeps",
        "i",
        "i",
        "numDeps",
        "i",
        "phxSunKappa",
        "i",
        "Interpol",
        "interpol",
        "ScaleSolar",
        "logPhxSunTau64",
        "logPhxSunKappa64",
        "tauRos",
        "i",
        "phxSunKappa",
        "i",
        "exp",
        "phxSunKappa",
        "i",
        "phxSunKappa"
    ],
    "literals": [],
    "variables": [
        "deltaRho",
        "deltaRadius",
        "deltaTau",
        "logDeltaRho",
        "logDeltaRadius",
        "logDeltaTau"
    ],
    "comments": [
        "base e!",
        "Corresponding Tau_1200 grid (ie. lambda_0 = 1200 nm):",
        "Theoretical radiative/convective model from Phoenix V15:",
        "interpolate onto gS3 tauRos grid and re-scale with Teff:",
        "System.out.println(\"tauRos[1][i] \" + logE * tauRos[1][i] + \" scaleTemp[1][i] \" + logE * scaleTemp[1][i]);",
        "base e!",
        "Theoretical radiative/convective model from Phoenix V15:",
        "yeah, I know, 64, but that could change!",
        "interpolate onto gS3 tauRos grid and re-scale with Teff:",
        "System.out.println(\"scalePGas[1][i] \" + logE * scalePGas[1][i]);",
        "base e!",
        "Theoretical radiative/convective model from Phoenix V15:",
        "yeah, I know, 64, but that could change!",
        "interpolate onto gS3 tauRos grid and re-scale with Teff:",
        "System.out.println(\"scaleNe[1][i] \" + logE * scaleNe[1][i]);",
        "Try to recover the opacity as lambda_0 = 1200 nm:",
        "Theoretical radiative/convective model from Phoenix V15:",
        "double[] logPhxSunRho64 = new double[numPhxDeps];",
        "double[] logPhxSunRadius64 = new double[numPhxDeps];",
        "Fix to get right depth scale and right line strengths:",
        "Yeah - everywhere ya go - opacity fudge",
        "Renormalize radii before taking difference",
        "Caution: Radius *decreases* with increasing i (inward) and we'll be taking the log:",
        "restore to cm:",
        "Renormalize before taking rho difference",
        "Restore g/cm^3:",
        "Renormalize before taking rho difference",
        "System.out.println(\"logPhxSunKappa64[i] \" + logE*logPhxSunKappa64[i]);",
        "interpolate onto gS3 tauRos grid and re-scale with Teff:",
        "System.out.println(\"phxSunKappa[1][i], i= \" + i + \" \" + logE * phxSunKappa[1][i]);"
    ],
    "docstrings": [
        "* To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.",
        "*\n * @author Ian"
    ],
    "functions": [
        "logPhxSunTau64",
        "phxSunTemp",
        "phxSunPGas",
        "phxSunNe",
        "phxSunKappa"
    ],
    "classes": [
        "ScaleSolar"
    ]
}