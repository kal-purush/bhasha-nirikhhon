{
    "identifiers": [
        "re",
        "functools",
        "partial",
        "os",
        "path",
        "dirname",
        "abspath",
        "join",
        "astroid",
        "MANAGER",
        "scoped_nodes",
        "join",
        "dirname",
        "dirname",
        "abspath",
        "join",
        "HEADERS_DIR",
        "join",
        "HEADERS_DIR",
        "re",
        "compile",
        "re",
        "compile",
        "cls",
        "constants",
        "functions",
        "isinstance",
        "constants",
        "isinstance",
        "functions",
        "cls",
        "name",
        "value",
        "constants",
        "cls",
        "locals",
        "scoped_nodes",
        "Class",
        "value",
        "value",
        "functions",
        "cls",
        "locals",
        "scoped_nodes",
        "value",
        "linter",
        "open",
        "CONSTANTS_HEADER",
        "constants_file",
        "line",
        "constants_file",
        "REGEX_CONSTANT",
        "match",
        "line",
        "match",
        "constants",
        "add",
        "match",
        "group",
        "open",
        "FUNCTIONS_HEADER",
        "functions_file",
        "line",
        "functions_file",
        "REGEX_FUNCTION",
        "match",
        "line",
        "match",
        "functions",
        "add",
        "match",
        "group",
        "MANAGER",
        "register_transform",
        "scoped_nodes",
        "Class",
        "partial",
        "transform",
        "constants",
        "constants",
        "functions",
        "functions"
    ],
    "literals": [
        "\"core\"",
        "\"cdefs\"",
        "\"headers\"",
        "\"constants.h\"",
        "\"functions.h\"",
        "\"^[A-Z]+ ([A-Z][a-z]*[A-Z].*)\\(.*$\"",
        "\"^#define ([A-Z_])+ ...$\"",
        "\"FFILibrary\"",
        "\"r\"",
        "\"r\""
    ],
    "variables": [
        "HEADERS_DIR",
        "CONSTANTS_HEADER",
        "FUNCTIONS_HEADER",
        "REGEX_FUNCTION",
        "REGEX_CONSTANT",
        "value",
        "value",
        "constants",
        "match",
        "functions",
        "match"
    ],
    "comments": [
        "TODO: needs to change once we FFILibrary returns the prebuilt lib",
        "Load constants",
        "Load functions"
    ],
    "docstrings": [
        "\"\"\"\nLint Utilities\n==============\n\nPlugins and utilities for lint checks.\n\"\"\"",
        "\"\"\"\n    Transforms class objects from pylint so they're aware of extra\n    attributes that are not present when being statically analyzed.\n    \"\"\"",
        "\"\"\"\n    An entrypoint that pylint uses to search for and register\n    plugins with the given ``linter``\n    \"\"\""
    ],
    "functions": [
        "transform",
        "register"
    ],
    "classes": []
}