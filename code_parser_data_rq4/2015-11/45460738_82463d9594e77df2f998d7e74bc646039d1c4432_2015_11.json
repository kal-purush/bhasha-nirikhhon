{
    "identifiers": [
        "collections",
        "OrderedDict",
        "os",
        "shutil",
        "sys",
        "urllib2",
        "urlparse",
        "datetime",
        "dateutil",
        "parser",
        "dateutil",
        "tz",
        "lxml",
        "etree",
        "Element",
        "ElementTree",
        "SubElement",
        "lxml",
        "etree",
        "cap_schema",
        "cap_file",
        "cap_text",
        "cap_file",
        "etree",
        "parse",
        "cap_file",
        "getroot",
        "cap_text",
        "etree",
        "fromstring",
        "cap_text",
        "cap_schema",
        "validate",
        "root",
        "ValueError",
        "root",
        "cap",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "identifier",
        "msgType",
        "cap",
        "expires",
        "cap",
        "iterfind",
        "CAP_nsmap",
        "expires_list",
        "append",
        "dateutil",
        "parser",
        "parse",
        "expires",
        "text",
        "max",
        "expires_list",
        "cap",
        "file_name",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "strip",
        "split",
        "word",
        "word",
        "references",
        "references",
        "split",
        "len",
        "pieces",
        "sys",
        "stderr",
        "write",
        "file_name",
        "sys",
        "exit",
        "pieces",
        "original_id",
        "file_name",
        "cap",
        "messages",
        "cancel",
        "update",
        "find_id_and_type",
        "cap",
        "identifier",
        "messages",
        "sys",
        "stderr",
        "write",
        "file_name",
        "identifier",
        "msgType",
        "original_id",
        "find_references",
        "cap",
        "file_name",
        "identifier",
        "msgType",
        "original_id",
        "find_references",
        "cap",
        "file_name",
        "identifier",
        "msgType",
        "file_name",
        "cap",
        "messages",
        "update",
        "reference_id",
        "update_id",
        "messages",
        "update_id",
        "cap",
        "find",
        "CAP_nsmap",
        "cap",
        "find",
        "CAP_nsmap",
        "references",
        "getparent",
        "alert",
        "remove",
        "references",
        "expiry_time",
        "cap",
        "find_latest_time",
        "cap",
        "latest",
        "expiry_time",
        "index_schema",
        "cap_schema",
        "index_file",
        "etree",
        "parse",
        "index_file",
        "etree",
        "XMLSyntaxError",
        "sys",
        "stderr",
        "write",
        "index_file",
        "sys",
        "exit",
        "index_schema",
        "validate",
        "tree",
        "sys",
        "stderr",
        "write",
        "index_file",
        "sys",
        "exit",
        "os",
        "path",
        "split",
        "index_file",
        "OrderedDict",
        "element",
        "tree",
        "iterfind",
        "dateutil",
        "parser",
        "parse",
        "element",
        "get",
        "dateutil",
        "parser",
        "parse",
        "element",
        "get",
        "element",
        "text",
        "os",
        "path",
        "join",
        "index_dir",
        "file_name",
        "parse_cap_file",
        "cap_schema",
        "cap_file",
        "file_path",
        "ValueError",
        "etree",
        "XMLSyntaxError",
        "sys",
        "stderr",
        "write",
        "file_path",
        "sys",
        "exit",
        "process_message",
        "file_name",
        "cap",
        "messages",
        "cancel",
        "update",
        "reference_id",
        "update_id",
        "update",
        "items",
        "reference_id",
        "messages",
        "sys",
        "stdout",
        "write",
        "reference_id",
        "update_message",
        "messages",
        "reference_id",
        "update_id",
        "messages",
        "reference_id",
        "update",
        "reference_id",
        "reference_id",
        "cancel_id",
        "cancel",
        "items",
        "reference_id",
        "messages",
        "sys",
        "stdout",
        "write",
        "reference_id",
        "messages",
        "reference_id",
        "messages",
        "cancel_id",
        "cancel",
        "reference_id",
        "messages",
        "cancel",
        "update",
        "cap_schema",
        "rss_file",
        "etree",
        "parse",
        "rss_file",
        "etree",
        "XMLSyntaxError",
        "sys",
        "stderr",
        "write",
        "rss_file",
        "sys",
        "exit",
        "OrderedDict",
        "element",
        "rss",
        "iterfind",
        "element",
        "find",
        "text",
        "urllib2",
        "urlopen",
        "url",
        "u",
        "read",
        "u",
        "close",
        "urllib2",
        "HTTPError",
        "sys",
        "stderr",
        "write",
        "url",
        "rss_file",
        "sys",
        "exit",
        "parse_cap_file",
        "cap_schema",
        "cap_text",
        "cap_text",
        "ValueError",
        "etree",
        "XMLSyntaxError",
        "sys",
        "stderr",
        "write",
        "url",
        "process_message",
        "url",
        "cap",
        "messages",
        "cancel",
        "update",
        "messages",
        "cancel",
        "update",
        "index_file",
        "rss_file",
        "output_dir",
        "base_url",
        "datetime",
        "datetime",
        "now",
        "dateutil",
        "tz",
        "tzutc",
        "os",
        "path",
        "exists",
        "output_dir",
        "os",
        "mkdir",
        "output_dir",
        "etree",
        "parse",
        "os",
        "path",
        "join",
        "etree",
        "XMLSchema",
        "index_schema_doc",
        "etree",
        "parse",
        "os",
        "path",
        "join",
        "etree",
        "XMLSchema",
        "cap_schema_doc",
        "parse_index_file",
        "index_schema",
        "cap_schema",
        "index_file",
        "os",
        "path",
        "exists",
        "rss_file",
        "parse_rss_file",
        "cap_schema",
        "rss_file",
        "messages",
        "update",
        "old_messages",
        "cancel",
        "update",
        "old_cancel",
        "update",
        "update",
        "old_update",
        "identifier",
        "messages",
        "messages",
        "identifier",
        "KeyError",
        "msgType",
        "msgType",
        "expire_message",
        "now",
        "cap",
        "sys",
        "stdout",
        "write",
        "identifier",
        "identifier",
        "cancel",
        "sys",
        "stdout",
        "write",
        "cancel",
        "identifier",
        "expired",
        "add",
        "cancel",
        "identifier",
        "new_messages",
        "append",
        "file_name",
        "cap",
        "msgType",
        "identifier",
        "expired",
        "new_messages",
        "append",
        "file_name",
        "cap",
        "os",
        "path",
        "split",
        "index_file",
        "file_name",
        "cap",
        "new_messages",
        "urlparse",
        "urlparse",
        "file_name",
        "scheme",
        "open",
        "os",
        "path",
        "join",
        "output_dir",
        "file_name",
        "ElementTree",
        "cap",
        "write",
        "f",
        "encoding",
        "xml_declaration",
        "pretty_print",
        "f",
        "close",
        "Element",
        "rss",
        "SubElement",
        "rss",
        "SubElement",
        "channel",
        "SubElement",
        "channel",
        "base_url",
        "SubElement",
        "channel",
        "SubElement",
        "channel",
        "now",
        "strftime",
        "file_name",
        "cap",
        "new_messages",
        "urlparse",
        "urlparse",
        "file_name",
        "scheme",
        "file_name",
        "urlparse",
        "urljoin",
        "base_url",
        "file_name",
        "SubElement",
        "channel",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "SubElement",
        "item",
        "url",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "SubElement",
        "item",
        "cap",
        "find",
        "CAP_nsmap",
        "text",
        "open",
        "rss_file",
        "ElementTree",
        "rss",
        "write",
        "f",
        "encoding",
        "xml_declaration",
        "pretty_print",
        "f",
        "close"
    ],
    "literals": [
        "'cap'",
        "'urn:oasis:names:tc:emergency:cap:1.2'",
        "'.//cap:identifier'",
        "'.//cap:msgType'",
        "'.//cap:expires'",
        "'.//cap:references'",
        "\",\"",
        "\"Error: CAP file '%s' contains invalid cancellation references.\\n\"",
        "\"Warning: CAP file '%s' has identifier '%s' that has already been registered. Skipping.\\n\"",
        "\"Cancel\"",
        "\"Update\"",
        "'.//cap:msgType'",
        "\"Alert\"",
        "'.//cap:references'",
        "\"Error: index file '%s' is not well-formed.\\n\"",
        "\"Error: index file '%s' is not valid.\\n\"",
        "'.//file'",
        "'valid_from'",
        "'valid_to'",
        "\"Error: CAP file '%s' is not valid.\\n\"",
        "\"Updating message '%s' before it can be sent.\\n\"",
        "\"Cancelling unpublished message '%s'.\\n\"",
        "\"Error: RSS file '%s' is not valid.\\n\"",
        "'.//item'",
        "'.//link'",
        "\"Error: failed to fetch CAP file '%s' specified in RSS file '%s'.\\n\"",
        "\"Warning: CAP file from URL '%s' is not valid.\\n\"",
        "\"schemas\"",
        "\"mifare-index.xsd\"",
        "\"schemas\"",
        "\"CAP-v1.2.xsd\"",
        "\"Alert\"",
        "\"Update\"",
        "\"Expiring unpublished message '%s'.\\n\"",
        "\"Also expiring unpublished cancellation message '%s'.\\n\"",
        "\"Cancel\"",
        "\"\"",
        "'wb'",
        "\"UTF-8\"",
        "'rss'",
        "'version'",
        "'2.0'",
        "'channel'",
        "'title'",
        "\"Weather alerts\"",
        "'link'",
        "'description'",
        "\"Weather alerts from the Norwegian Meteorological Institute\"",
        "'lastBuildDate'",
        "'%Y-%m-%d %H:%M:%S UTC'",
        "\"\"",
        "'item'",
        "'title'",
        "'.//cap:headline'",
        "'link'",
        "'description'",
        "'.//cap:description'",
        "'guid'",
        "'.//cap:identifier'",
        "'pubDate'",
        "'.//cap:sent'",
        "'author'",
        "'.//cap:sender'",
        "'category'",
        "'.//cap:category'",
        "'wb'",
        "'UTF-8'"
    ],
    "variables": [
        "CAP_nsmap",
        "root",
        "root",
        "identifier",
        "msgType",
        "expires_list",
        "references",
        "references",
        "pieces",
        "sender",
        "original_id",
        "time",
        "identifier",
        "msgType",
        "cancel",
        "original_id",
        "update",
        "original_id",
        "messages",
        "identifier",
        "msgType",
        "file_name",
        "cap",
        "text",
        "references",
        "alert",
        "latest",
        "tree",
        "index_dir",
        "messages",
        "cancel",
        "update",
        "valid_from",
        "valid_to",
        "file_name",
        "file_path",
        "cap",
        "rss",
        "messages",
        "cancel",
        "update",
        "url",
        "u",
        "cap_text",
        "cap",
        "now",
        "index_schema_doc",
        "index_schema",
        "cap_schema_doc",
        "cap_schema",
        "messages",
        "cancel",
        "update",
        "old_messages",
        "old_cancel",
        "old_update",
        "expired",
        "new_messages",
        "msgType",
        "file_name",
        "cap",
        "index_dir",
        "f",
        "rss",
        "channel",
        "text",
        "text",
        "text",
        "text",
        "url",
        "url",
        "item",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "f"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Copyright (C) 2015 MET Norway",
        "",
        "This program is free software; you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation; either version 2 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software",
        "Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA",
        "Parse and validate the CAP file.",
        "Parse the CAP document.",
        "Check for duplicate messages.",
        "Record the relationship between messages in the cancellation dictionary.",
        "Record the relationship between messages in the update dictionary.",
        "Convert the Update message into an Alert message.",
        "Remove the references element.",
        "Find the latest expiry time in the file.",
        "Discard the item if the corresponding CAP document has expired.",
        "Create a dictionary mapping identifiers to tuples containing message types,",
        "file names and CAP documents.",
        "Create a dictionary mapping cancelled message identifiers to the identifiers",
        "of the Cancel messages that refer to them, and a dictionary mapping updated",
        "messages to the Update messages that refer to them.",
        "The file name is relative to the index file, so obtain an absolute path.",
        "If the identifier referred to by the Update message is in the index",
        "then remove the corresponding Alert message before it is sent and",
        "convert the Update message into an Alert, removing any references to",
        "the original message. Remove the Update message from the update",
        "dictionary.",
        "Remove the original message from the message dictionary.",
        "Remove the Update message from the update dictionary.",
        "The message itself is now an Alert message.",
        "If the identifier referred to by the Cancel message is in the index",
        "then remove the corresponding Alert message before it is sent.",
        "Also remove the Cancel message from both the message and cancellation",
        "dictionaries.",
        "Remove the original message from the message dictionary.",
        "Remove the Cancel message from the message and cancellation dictionaries.",
        "Create a dictionary mapping identifiers to tuples containing message types,",
        "file names and CAP documents.",
        "Create a dictionary mapping cancelled message identifiers to the identifiers",
        "of the Cancel messages that refer to them, and a dictionary mapping updated",
        "messages to the Update messages that refer to them.",
        "Fetch the CAP file referred to by the RSS feed.",
        "Get the current time.",
        "Load the index schema.",
        "Load the CAP schema.",
        "Parse and validate the index file.",
        "Parse the RSS file, if found.",
        "Merge the item dictionaries from the RSS and index files, keeping",
        "any messages that have already been published.",
        "Merge the cancellation dictionaries from the RSS and index files.",
        "If there were duplicate cancellations then those messages will have",
        "been discarded but the relationship between messages should still be",
        "valid since it describes a single pair of existing messages.",
        "Merge the update dictionaries from the RSS and index files.",
        "At this point, we should only have new alerts, cancellations and updates",
        "from the index and old alerts, cancellations and updates from the RSS file.",
        "Check for expired messages and remove them, removing any cancellations",
        "that refer to them. We cannot remove messages with cancellations that",
        "are still valid since users may have only read the original messages.",
        "Maintain a set of expired messages so that cancellations can also be expired.",
        "Expire the message (do not include it in the new list).",
        "Also expire the cancellation.",
        "Write the unpublished CAP files to the output directory.",
        "Note that we cannot just copy the files because some Update messages may",
        "have been converted to Alert messages.",
        "Only published local files.",
        "Create a RSS feed.",
        "Check if the file name is actually a URL.",
        "Use the URL supplied.",
        "Create the intended URL from the base URL and the file name.",
        "Write the new RSS feed file."
    ],
    "docstrings": [
        "\"\"\"Provides functions to manage publication of a collection of Common Alerting\nProtocol (CAP) files specified by an index file as a Really Simple Syndication\n(RSS) 2 file, using a base URL to refer to the CAP files in their final\nlocation on a server.\n\nCopies the CAP files and the RSS file to the output directory given.\n\nUses an existing RSS file, if present, which will be updated with new items\nfor new CAP files and cleared of expired items.\n\"\"\"",
        "\"\"\"Parses the CAP document supplied by the file, cap_file, or passed as a\n    string, cap_text, and validates it againts the schema, cap_schema.\n\n    Returns the root element if successful or raises a ValueError exception\n    if not.\"\"\"",
        "\"\"\"Returns the identifier and message type for the CAP document given by cap.\"\"\"",
        "\"\"\"Finds the latest expiry time in a CAP document given by cap.\"\"\"",
        "\"\"\"Finds the references in a CAP document, cap, and yields each identifier\n    in turn.\"\"\"",
        "\"\"\"Processes the CAP message, cap, with the associated file_name, updating\n    the message and cancellation dictionaries.\n    \n    Messages that are identified as duplicates are discarded.\"\"\"",
        "\"\"\"Returns True if the CAP document, cap, has a latest expiry time that is\n    earlier than the given expiry_time, or returns False if the document is\n    still valid.\"\"\"",
        "\"\"\"Parses the given index_file, returning message, cancellation and update\n    dictionaries. The message dictionary contains messages in the order in\n    which they appeared in the index file.\n    \n    Uses the cap_schema and index_schema to validate CAP and MIfare index files\n    respectively.\n\n    The message dictionary maps the identifier of each CAP file to the message\n    type, file name and CAP document itself. The cancellation dictionary maps\n    identifiers of messages that should be cancelled to the corresponding\n    cancellation message identifiers.\n    \n    Since these messages have not been published, any that have corresponding\n    cancellation messages, and the cancellations themselves, are not included\n    in the message dictionary.\"\"\"",
        "\"\"\"Parses the given rss_file, returning message, cancellation and update\n    dictionaries. The message dictionary contains messages in the order in which\n    they appeared in the RSS file.\n    \n    Uses the cap_schema to validate CAP files that are read to obtain additional\n    information that is not supplied in the RSS file.\n\n    The message dictionary maps the identifier of each CAP file to the CAP\n    document itself. The cancellation dictionary maps identifiers of\n    messages that should be cancelled to the corresponding cancellation\n    message identifiers.\"\"\"",
        "\"\"\"Controls the overall processing of CAP and index files to create an RSS feed.\n    The given args are the arguments supplied by the user on the command line.\"\"\""
    ],
    "functions": [
        "parse_cap_file",
        "find_id_and_type",
        "find_latest_time",
        "find_references",
        "process_message",
        "update_message",
        "expire_message",
        "parse_index_file",
        "parse_rss_file",
        "main"
    ],
    "classes": []
}