{
    "identifiers": [
        "Collections",
        "Generic",
        "Project",
        "Project",
        "Class",
        "Class",
        "Enum",
        "Enum",
        "ClassBase",
        "ClassField",
        "ClassField",
        "Declare",
        "ClassField",
        "ClassField",
        "ClassBase",
        "EnumField",
        "EnumField",
        "DataTypes",
        "BuiltIn",
        "Custom",
        "Generic",
        "Declare",
        "Declare"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "Projects",
        "Classes",
        "Enums",
        "Namespaces",
        "Name",
        "Desc",
        "Namespace",
        "Name",
        "Desc",
        "IsEnum",
        "Fields",
        "TypeID",
        "Class",
        "Class",
        "Name",
        "Declare",
        "Declare",
        "Desc",
        "Get",
        "Default",
        "Condation",
        "Fields",
        "Type",
        "Size",
        "Unsigned",
        "Enum",
        "Enum",
        "Name",
        "Value",
        "Desc",
        "DataTypes",
        "DataType",
        "Name",
        "Namespace",
        "ClassBase",
        "Class",
        "MinLen",
        "MaxLen",
        "Childs"
    ],
    "comments": [
        "public bool Enabled = true;",
        "public List<Project> Enable = new List<Project>();    // 这个并不直接来源于属性，一但被某个属于某个 __project 的类引用到，则须生成到该 project",
        "该值将自增填充",
        "public List<Project> Decode = new List<Project>();    // 被引用到的类 即便没有直接设置 Attribute，也会继承引用类的设置",
        "public List<Project> Encode = new List<Project>();    // 同上",
        "public bool Enable",
        "public decimal MinValue = 0;",
        "public decimal MaxValue = 0;",
        "public DecodeCondation DecodeCondation = new DecodeCondation( \"\", Operators.Equal, null );",
        "public EncodeCondation EncodeCondation = new EncodeCondation( \"\", Operators.Equal, null );",
        "numBytes",
        "...",
        "内置 各种整数浮点",
        "用户类，枚举",
        "泛型",
        "数组",
        "只针对 用户类，枚举",
        "只针对 数组 或 泛型"
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "Template",
        "Project",
        "ClassBase",
        "Class",
        "ClassField",
        "Enum",
        "EnumField",
        "Declare"
    ]
}