{
    "identifiers": [
        "org",
        "wso2",
        "am",
        "integration",
        "tests",
        "jwt",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "json",
        "JSONException",
        "org",
        "json",
        "JSONObject",
        "org",
        "testng",
        "Assert",
        "org",
        "testng",
        "annotations",
        "AfterClass",
        "org",
        "testng",
        "annotations",
        "BeforeClass",
        "org",
        "testng",
        "annotations",
        "Test",
        "org",
        "wso2",
        "am",
        "admin",
        "clients",
        "user",
        "RemoteUserStoreManagerServiceClient",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "APIManagerIntegrationTestException",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "APIMIntegrationBaseTest",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "bean",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "clients",
        "APIPublisherRestClient",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "clients",
        "APIStoreRestClient",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "generic",
        "APIMTestCaseUtils",
        "org",
        "wso2",
        "am",
        "integration",
        "test",
        "utils",
        "monitor",
        "utils",
        "WireMonitorServer",
        "org",
        "wso2",
        "carbon",
        "automation",
        "engine",
        "annotations",
        "ExecutionEnvironment",
        "org",
        "wso2",
        "carbon",
        "automation",
        "engine",
        "annotations",
        "SetEnvironment",
        "org",
        "wso2",
        "carbon",
        "automation",
        "test",
        "utils",
        "http",
        "client",
        "HttpRequestUtil",
        "org",
        "wso2",
        "carbon",
        "automation",
        "test",
        "utils",
        "http",
        "client",
        "HttpResponse",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "admin",
        "client",
        "UserManagementClient",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "utils",
        "mgt",
        "ServerConfigurationManager",
        "javax",
        "xml",
        "xpath",
        "XPathExpressionException",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "URL",
        "java",
        "util",
        "java",
        "util",
        "org",
        "testng",
        "AssertJUnit",
        "assertEquals",
        "org",
        "testng",
        "AssertJUnit",
        "assertTrue",
        "SetEnvironment",
        "executionEnvironments",
        "ExecutionEnvironment",
        "STANDALONE",
        "serverConfigurationManager",
        "userManagementClient",
        "log",
        "LogFactory",
        "getLog",
        "publisherURLHttp",
        "storeURLHttp",
        "server",
        "hostPort",
        "apiName",
        "apiContext",
        "tags",
        "wireMonitorURL",
        "description",
        "providerName",
        "apiVersion",
        "applicationName",
        "apiTier",
        "BeforeClass",
        "alwaysRun",
        "init",
        "publisherURLHttp",
        "getPublisherURLHttp",
        "storeURLHttp",
        "getStoreURLHttp",
        "serverConfigurationManager",
        "gatewayContextWrk",
        "serverConfigurationManager",
        "applyConfigurationWithoutRestart",
        "getAMResourceLocation",
        "File",
        "separator",
        "serverConfigurationManager",
        "applyConfiguration",
        "getAMResourceLocation",
        "File",
        "separator",
        "userManagementClient",
        "keyManagerContext",
        "getContextUrls",
        "getBackEndUrl",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "url",
        "gatewayUrlsWrk",
        "getWebAppURLHttp",
        "wireMonitorURL",
        "url",
        "getHost",
        "hostPort",
        "server",
        "hostPort",
        "server",
        "setReadTimeOut",
        "server",
        "start",
        "gatewaySessionCookie",
        "createSession",
        "gatewayContextMgt",
        "loadSynapseConfigurationFromClasspath",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "gatewayContextMgt",
        "gatewaySessionCookie",
        "AfterClass",
        "alwaysRun",
        "cleanUp",
        "serverConfigurationManager",
        "restoreToLastConfiguration",
        "apiName",
        "apiVersion",
        "apiContext",
        "description",
        "endpointURL",
        "tags",
        "providerName",
        "apiPublisher",
        "publisherURLHttp",
        "apiPublisher",
        "login",
        "publisherContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "publisherContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "apiRequest",
        "apiName",
        "apiContext",
        "endpointURL",
        "apiRequest",
        "setTags",
        "tags",
        "apiRequest",
        "setDescription",
        "description",
        "apiRequest",
        "setVersion",
        "apiVersion",
        "apiRequest",
        "setVisibility",
        "apiRequest",
        "setProvider",
        "providerName",
        "apiPublisher",
        "addAPI",
        "apiRequest",
        "updateRequest",
        "apiName",
        "providerName",
        "APILifeCycleState",
        "PUBLISHED",
        "apiPublisher",
        "changeAPILifeCycleStatus",
        "updateRequest",
        "Test",
        "groups",
        "description",
        "enabled",
        "remoteUserStoreManagerServiceClient",
        "keyManagerContext",
        "getContextUrls",
        "getBackEndUrl",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "username",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "profile",
        "remoteUserStoreManagerServiceClient",
        "setUserClaimValue",
        "username",
        "profile",
        "remoteUserStoreManagerServiceClient",
        "setUserClaimValue",
        "username",
        "profile",
        "serverConfigurationManager",
        "restartGracefully",
        "addAPI",
        "apiName",
        "apiVersion",
        "apiContext",
        "description",
        "wireMonitorURL",
        "tags",
        "providerName",
        "apiStoreRestClient",
        "storeURLHttp",
        "apiStoreRestClient",
        "login",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "apiStoreRestClient",
        "addApplication",
        "applicationName",
        "apiTier",
        "subscriptionRequest",
        "apiName",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "subscriptionRequest",
        "setApplicationName",
        "applicationName",
        "apiStoreRestClient",
        "subscribe",
        "subscriptionRequest",
        "generateAppKeyRequest",
        "applicationName",
        "responseString",
        "apiStoreRestClient",
        "generateApplicationKey",
        "generateAppKeyRequest",
        "getData",
        "response",
        "responseString",
        "accessToken",
        "response",
        "getJSONObject",
        "getJSONObject",
        "get",
        "toString",
        "url",
        "gatewayUrlsWrk",
        "getWebAppURLNhttp",
        "APIMTestCaseUtils",
        "sendGetRequest",
        "url",
        "accessToken",
        "serverMessage",
        "server",
        "getCapturedMessage",
        "decodedJWTHeaderString",
        "APIMTestCaseUtils",
        "getDecodedURLSafeJWTHeader",
        "serverMessage",
        "decodedJWTHeaderString",
        "log",
        "debug",
        "decodedJWTHeaderString",
        "jsonHeaderObject",
        "decodedJWTHeaderString",
        "Assert",
        "assertEquals",
        "jsonHeaderObject",
        "getString",
        "Assert",
        "assertEquals",
        "jsonHeaderObject",
        "getString",
        "decodedJWTString",
        "APIMTestCaseUtils",
        "getDecodedURLSafeJWT",
        "serverMessage",
        "log",
        "debug",
        "decodedJWTString",
        "jsonObject",
        "decodedJWTString",
        "checkDefaultUserClaims",
        "jsonObject",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "bExceptionOccured",
        "jsonObject",
        "getString",
        "e",
        "bExceptionOccured",
        "assertTrue",
        "bExceptionOccured",
        "Test",
        "groups",
        "description",
        "enabled",
        "applicationName",
        "apiName",
        "apiContext",
        "apiVersion",
        "description",
        "endpointURL",
        "gatewayUrlsWrk",
        "getWebAppURLNhttp",
        "apiTier",
        "tags",
        "waitingSecs",
        "addAPI",
        "apiName",
        "apiVersion",
        "apiContext",
        "description",
        "endpointURL",
        "tags",
        "providerName",
        "apiStoreRestClient",
        "storeURLHttp",
        "apiStoreRestClient",
        "login",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "apiStoreRestClient",
        "addApplication",
        "applicationName",
        "apiTier",
        "subscriptionRequest",
        "apiName",
        "storeContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "subscriptionRequest",
        "setApplicationName",
        "applicationName",
        "apiStoreRestClient",
        "subscribe",
        "subscriptionRequest",
        "generateAppKeyRequest",
        "applicationName",
        "responseString",
        "apiStoreRestClient",
        "generateApplicationKey",
        "generateAppKeyRequest",
        "getData",
        "response",
        "responseString",
        "accessToken",
        "response",
        "getJSONObject",
        "getJSONObject",
        "get",
        "toString",
        "url",
        "gatewayUrlsWrk",
        "getWebAppURLNhttp",
        "apiContext",
        "apiVersion",
        "headers",
        "headers",
        "put",
        "accessToken",
        "httpResponse",
        "HttpRequestUtil",
        "doGet",
        "url",
        "headers",
        "assertEquals",
        "url",
        "httpResponse",
        "getResponseCode",
        "log",
        "info",
        "waitingSecs",
        "sleep",
        "waitingSecs",
        "httpResponse",
        "HttpRequestUtil",
        "doGet",
        "url",
        "headers",
        "assertEquals",
        "url",
        "httpResponse",
        "getResponseCode",
        "jsonObject",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "jsonObject",
        "getString",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "contains",
        "claim",
        "contains",
        "Test",
        "groups",
        "description",
        "enabled",
        "server",
        "setFinished",
        "server",
        "start",
        "subscriberUser",
        "password",
        "accessToken",
        "userManagementClient",
        "userManagementClient",
        "userNameExists",
        "subscriberUser",
        "userManagementClient",
        "addUser",
        "subscriberUser",
        "password",
        "remoteUserStoreManagerServiceClient",
        "keyManagerContext",
        "getContextUrls",
        "getBackEndUrl",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getUserName",
        "keyManagerContext",
        "getContextTenant",
        "getContextUser",
        "getPassword",
        "profile",
        "remoteUserStoreManagerServiceClient",
        "setUserClaimValue",
        "subscriberUser",
        "profile",
        "remoteUserStoreManagerServiceClient",
        "setUserClaimValue",
        "subscriberUser",
        "profile",
        "serverConfigurationManager",
        "restartGracefully",
        "init",
        "apiStoreRestClient",
        "storeURLHttp",
        "apiStoreRestClient",
        "login",
        "subscriberUser",
        "password",
        "apiStoreRestClient",
        "addApplication",
        "applicationName",
        "apiTier",
        "subscriptionRequest",
        "apiName",
        "providerName",
        "subscriptionRequest",
        "setApplicationName",
        "applicationName",
        "apiStoreRestClient",
        "subscribe",
        "subscriptionRequest",
        "generateAppKeyRequest",
        "applicationName",
        "responseString",
        "apiStoreRestClient",
        "generateApplicationKey",
        "generateAppKeyRequest",
        "getData",
        "response",
        "responseString",
        "accessToken",
        "response",
        "getJSONObject",
        "getJSONObject",
        "get",
        "toString",
        "url",
        "gatewayUrlsWrk",
        "getWebAppURLNhttp",
        "APIMTestCaseUtils",
        "sendGetRequest",
        "url",
        "accessToken",
        "serverMessage",
        "server",
        "getCapturedMessage",
        "Assert",
        "assertTrue",
        "serverMessage",
        "contains",
        "decodedJWTString",
        "APIMTestCaseUtils",
        "getDecodedURLSafeJWT",
        "serverMessage",
        "log",
        "debug",
        "decodedJWTString",
        "jsonObject",
        "decodedJWTString",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "apiStoreRestClient",
        "removeAPISubscriptionByApplicationName",
        "apiName",
        "apiVersion",
        "providerName",
        "applicationName",
        "apiStoreRestClient",
        "removeApplication",
        "applicationName",
        "Test",
        "groups",
        "description",
        "enabled",
        "server",
        "setFinished",
        "server",
        "start",
        "serverConfigurationManager",
        "restartGracefully",
        "init",
        "provider",
        "tenantUser",
        "password",
        "accessToken",
        "apiPublisherRestClient",
        "publisherURLHttp",
        "apiPublisherRestClient",
        "login",
        "tenantUser",
        "password",
        "apiRequest",
        "apiName",
        "apiContext",
        "wireMonitorURL",
        "apiRequest",
        "setTags",
        "tags",
        "apiRequest",
        "setDescription",
        "description",
        "apiRequest",
        "setVersion",
        "apiVersion",
        "apiRequest",
        "setWsdl",
        "apiRequest",
        "setVisibility",
        "apiRequest",
        "setProvider",
        "provider",
        "apiPublisherRestClient",
        "addAPI",
        "apiRequest",
        "updateRequest",
        "apiName",
        "provider",
        "APILifeCycleState",
        "PUBLISHED",
        "apiPublisherRestClient",
        "changeAPILifeCycleStatus",
        "updateRequest",
        "apiStoreRestClient",
        "storeURLHttp",
        "apiStoreRestClient",
        "login",
        "tenantUser",
        "password",
        "apiStoreRestClient",
        "addApplication",
        "applicationName",
        "apiTier",
        "subscriptionRequest",
        "apiName",
        "provider",
        "subscriptionRequest",
        "setApplicationName",
        "applicationName",
        "apiStoreRestClient",
        "subscribe",
        "subscriptionRequest",
        "generateAppKeyRequest",
        "applicationName",
        "responseString",
        "apiStoreRestClient",
        "generateApplicationKey",
        "generateAppKeyRequest",
        "getData",
        "response",
        "responseString",
        "accessToken",
        "response",
        "getJSONObject",
        "getJSONObject",
        "get",
        "toString",
        "url",
        "gatewayUrlsWrk",
        "getWebAppURLNhttp",
        "APIMTestCaseUtils",
        "sendGetRequest",
        "url",
        "accessToken",
        "serverMessage",
        "server",
        "getCapturedMessage",
        "decodedJWTString",
        "APIMTestCaseUtils",
        "getDecodedURLSafeJWT",
        "serverMessage",
        "jsonObject",
        "decodedJWTString",
        "log",
        "debug",
        "decodedJWTString",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "claim",
        "jsonObject",
        "getString",
        "assertTrue",
        "claim",
        "claim",
        "contains",
        "apiStoreRestClient",
        "removeAPISubscriptionByApplicationName",
        "apiName",
        "apiVersion",
        "provider",
        "applicationName",
        "apiStoreRestClient",
        "removeApplication",
        "applicationName",
        "apiPublisherRestClient",
        "deleteAPI",
        "apiName",
        "apiVersion",
        "provider"
    ],
    "literals": [
        "\"URLSafeJWTTokenTestAPI\"",
        "\"urlSafeTokenTest\"",
        "\"token, jwt\"",
        "\"\"",
        "\"This is test API created by API manager integration test\"",
        "\"admin\"",
        "\"1.0.0\"",
        "\"APILifeCycleTestAPI-application\"",
        "\"Gold\"",
        "\"configFiles/tokenTest/urlSafeTokenTest/\"",
        "\"api-manager.xml\"",
        "\"configFiles/tokenTest/urlSafeTokenTest/\"",
        "\"log4j.properties\"",
        "\"http://\"",
        "\":\"",
        "\"artifacts\"",
        "\"AM\"",
        "\"synapseconfigs\"",
        "\"rest\"",
        "\"dummy_api.xml\"",
        "\"public\"",
        "\"wso2.am\"",
        "\"Enabling JWT Token generation, admin user claims\"",
        "\"default\"",
        "\"http://wso2.org/claims/givenname\"",
        "\"first name\"",
        "\"http://wso2.org/claims/lastname\"",
        "\"last name\"",
        "\"\"",
        "\"this-is-test\"",
        "\"data\"",
        "\"key\"",
        "\"accessToken\"",
        "\"urlSafeTokenTest/1.0.0\"",
        "\"Decoded JWT header String = \"",
        "\"typ\"",
        "\"JWT\"",
        "\"alg\"",
        "\"RS256\"",
        "\"Decoded JWTString = \"",
        "\"http://wso2.org/claims/givenname\"",
        "\"JWT claim givenname  not received\"",
        "\"first name\"",
        "\"http://wso2.org/claims/lastname\"",
        "\"JWT claim lastname  not received\"",
        "\"last name\"",
        "\"http://wso2.org/claims/wrongclaim\"",
        "\"JWT claim invalid  claim received\"",
        "\"wso2.am\"",
        "\"JWT Token generation when JWT caching is enabled\"",
        "\"JWTTokenCacheTestApp\"",
        "\"JWTTokenCacheTestAPI\"",
        "\"JWTTokenCacheTestAPI\"",
        "\"1.0.0\"",
        "\"JWTTokenCacheTestAPI description\"",
        "\"response\"",
        "\"Gold\"",
        "\"token,jwt,cache\"",
        "\"\"",
        "\"this-is-test\"",
        "\"data\"",
        "\"key\"",
        "\"accessToken\"",
        "\"/\"",
        "\"Authorization\"",
        "\"Bearer \"",
        "\"GET request failed for \"",
        "\"Waiting \"",
        "\" sec(s) till claims local cache is invalidated\"",
        "\"GET request failed for \"",
        "\". Most probably due to a failed invalidated cache access to retrieve JWT claims.\"",
        "\"iss\"",
        "\"JWT assertion is invalid\"",
        "\"wso2.org/products/am\"",
        "\"http://wso2.org/claims/subscriber\"",
        "\"JWT claim subscriber invalid. Received \"",
        "\"admin\"",
        "\"http://wso2.org/claims/applicationname\"",
        "\"JWT claim applicationname invalid. Received \"",
        "\"APILifeCycleTestAPI-application\"",
        "\"http://wso2.org/claims/applicationtier\"",
        "\"JWT claim applicationtier invalid. Received \"",
        "\"Gold\"",
        "\"http://wso2.org/claims/apicontext\"",
        "\"JWT claim apicontext invalid. Received \"",
        "\"/urlSafeTokenTest\"",
        "\"/\"",
        "\"http://wso2.org/claims/version\"",
        "\"http://wso2.org/claims/version\"",
        "\"JWT claim version invalid. Received \"",
        "\"1.0.0\"",
        "\"http://wso2.org/claims/tier\"",
        "\"JWT claim tier invalid. Received \"",
        "\"Gold\"",
        "\"http://wso2.org/claims/keytype\"",
        "\"JWT claim keytype invalid. Received \"",
        "\"PRODUCTION\"",
        "\"http://wso2.org/claims/usertype\"",
        "\"JWT claim usertype invalid. Received \"",
        "\"APPLICATION\"",
        "\"http://wso2.org/claims/enduserTenantId\"",
        "\"JWT claim enduserTenantId invalid. Received \"",
        "\"-1234\"",
        "\"http://wso2.org/claims/role\"",
        "\"JWT claim role invalid. Received \"",
        "\"admin\"",
        "\"Internal/subscriber\"",
        "\"Internal/everyone\"",
        "\"wso2.am\"",
        "\"Enabling JWT Token generation, specific user claims\"",
        "\"subscriberUser\"",
        "\"password@123\"",
        "\"Internal/subscriber\"",
        "\"Internal/subscriber\"",
        "\"default\"",
        "\"http://wso2.org/claims/givenname\"",
        "\"subscriberUser name\"",
        "\"http://wso2.org/claims/lastname\"",
        "\"subscriberUser name\"",
        "\"\"",
        "\"this-is-test\"",
        "\"data\"",
        "\"key\"",
        "\"accessToken\"",
        "\"urlSafeTokenTest/1.0.0/\"",
        "\"X-JWT-Assertion\"",
        "\"JWT assertion not in the header\"",
        "\"Decoded JWTString = \"",
        "\"iss\"",
        "\"JWT assertion is invalid\"",
        "\"wso2.org/products/am\"",
        "\"http://wso2.org/claims/subscriber\"",
        "\"JWT claim subscriber invalid. Received \"",
        "\"subscriberUser\"",
        "\"http://wso2.org/claims/applicationname\"",
        "\"JWT claim applicationname invalid. Received \"",
        "\"APILifeCycleTestAPI-application\"",
        "\"wso2.am\"",
        "\"Enabling JWT Token generation, tenant user claims\"",
        "\"admin@wso2.com\"",
        "\"admin@wso2.com\"",
        "\"wso2@123\"",
        "\"https://svn.wso2.org/repos/wso2/carbon/platform/trunk/products\"",
        "\"/bps/modules/samples/product/src/main/resources/bpel/2.0/MyRoleMexTestProcess/echo.wsdl\"",
        "\"public\"",
        "\"\"",
        "\"this-is-test\"",
        "\"data\"",
        "\"key\"",
        "\"accessToken\"",
        "\"t/wso2.com/urlSafeTokenTest/1.0.0/\"",
        "\"Decoded JWTString = \"",
        "\"iss\"",
        "\"JWT assertion is invalid\"",
        "\"wso2.org/products/am\"",
        "\"http://wso2.org/claims/subscriber\"",
        "\"JWT claim subscriber invalid. Received \"",
        "\"admin@wso2.com\"",
        "\"http://wso2.org/claims/apicontext\"",
        "\"JWT claim apicontext invalid. Received \"",
        "\"/t/wso2.com/urlSafeTokenTest\""
    ],
    "variables": [
        "serverConfigurationManager",
        "userManagementClient",
        "publisherURLHttp",
        "storeURLHttp",
        "server",
        "accessToken",
        "accessToken"
    ],
    "comments": [
        "enable JWT token generation",
        "Load the back-end dummy API",
        "restart the server since updated claims not picked unless cache expired",
        "check the jwt header",
        "check default claims",
        "check user profile info claims",
        "Invoke the API",
        "Wait till cache is invalidated",
        "Second attempt to invoke the API.",
        "restart the server since updated claims not picked unless cache expired",
        "check claims",
        "check claims"
    ],
    "docstrings": [
        "*Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n*\n*WSO2 Inc. licenses this file to you under the Apache License,\n*Version 2.0 (the \"License\"); you may not use this file except\n*in compliance with the License.\n*You may obtain a copy of the License at\n*\n*http://www.apache.org/licenses/LICENSE-2.0\n*\n*Unless required by applicable law or agreed to in writing,\n*software distributed under the License is distributed on an\n*\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n*KIND, either express or implied.  See the License for the\n*specific language governing permissions and limitations\n*under the License.",
        "* This test case is a test for the fix fix for APIMANAGER-3912, where jwt claims are attempted to retrieve from\n     * an invalidated cache and hence failed. In carbon 4.2 products cache invalidation timeout is not configurable\n     * and is hardcoded to 15 mins. So the test case will take approximately 15mins to complete and it will delay the\n     * product build unnecessarily, hence the test case is disabled."
    ],
    "functions": [
        "setEnvironment",
        "destroy",
        "addAPI",
        "testEnableJWTAndClaims",
        "testAPIAccessWhenJWTCachingEnabledTestCase",
        "checkDefaultUserClaims",
        "testSpecificUserJWTClaims",
        "testTenantUserJWTClaims"
    ],
    "classes": [
        "URLSafeJWTTestCase"
    ]
}