{
    "identifiers": [
        "org",
        "apache",
        "nutch",
        "util",
        "org",
        "apache",
        "commons",
        "lang",
        "StringUtils",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "ByteBuffer",
        "YES_VAL",
        "ByteBuffer",
        "wrap",
        "urlString",
        "reverseUrl",
        "urlString",
        "url",
        "host",
        "url",
        "getHost",
        "file",
        "url",
        "getFile",
        "protocol",
        "url",
        "getProtocol",
        "port",
        "url",
        "getPort",
        "buf",
        "reverseAppendSplits",
        "host",
        "buf",
        "buf",
        "append",
        "buf",
        "append",
        "protocol",
        "port",
        "buf",
        "append",
        "buf",
        "append",
        "port",
        "file",
        "length",
        "file",
        "charAt",
        "buf",
        "append",
        "buf",
        "append",
        "file",
        "buf",
        "toString",
        "reversedUrl",
        "buf",
        "reversedUrl",
        "length",
        "pathBegin",
        "reversedUrl",
        "indexOf",
        "pathBegin",
        "pathBegin",
        "reversedUrl",
        "length",
        "sub",
        "reversedUrl",
        "substring",
        "pathBegin",
        "splits",
        "StringUtils",
        "splitPreserveAllTokens",
        "sub",
        "buf",
        "append",
        "splits",
        "buf",
        "append",
        "reverseAppendSplits",
        "splits",
        "buf",
        "splits",
        "length",
        "buf",
        "append",
        "buf",
        "append",
        "splits",
        "buf",
        "append",
        "reversedUrl",
        "substring",
        "pathBegin",
        "buf",
        "toString",
        "reversedUrl",
        "reversedUrl",
        "substring",
        "reversedUrl",
        "indexOf",
        "buf",
        "splits",
        "StringUtils",
        "split",
        "splits",
        "length",
        "i",
        "splits",
        "length",
        "i",
        "i",
        "buf",
        "append",
        "splits",
        "i",
        "buf",
        "append",
        "buf",
        "append",
        "splits",
        "buf",
        "append",
        "hostName",
        "buf",
        "reverseAppendSplits",
        "hostName",
        "buf",
        "buf",
        "toString",
        "reversedHostName",
        "reverseHost",
        "reversedHostName",
        "utf8",
        "utf8",
        "StringUtil",
        "cleanField",
        "utf8",
        "toString"
    ],
    "literals": [
        "\"://\""
    ],
    "variables": [],
    "comments": [
        "{<reversed",
        "host>,",
        "<port>,",
        "<protocol>}",
        "add protocol",
        "splits[0] is reversed",
        "host",
        "has a port",
        "Reversible"
    ],
    "docstrings": [
        "*****************************************************************************\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *****************************************************************************",
        "* Reverses a url's domain. This form is better for storing in hbase. Because\n   * scans within the same domain are faster.\n   * <p>\n   * E.g. \"http://bar.foo.com:8983/to/index.html?a=b\" becomes\n   * \"com.foo.bar:8983:http/to/index.html?a=b\".\n   * \n   * @param url\n   *          url to be reversed\n   * @return Reversed url\n   * @throws MalformedURLException",
        "* Reverses a url's domain. This form is better for storing in hbase. Because\n   * scans within the same domain are faster.\n   * <p>\n   * E.g. \"http://bar.foo.com:8983/to/index.html?a=b\" becomes\n   * \"com.foo.bar:http:8983/to/index.html?a=b\".\n   * \n   * @param url\n   *          url to be reversed\n   * @return Reversed url",
        "reverse host",
        "add protocol",
        "add port if necessary",
        "add path",
        "* Given a reversed url, returns the reversed host E.g\n   * \"com.foo.bar:http:8983/to/index.html?a=b\" -> \"com.foo.bar\"\n   * \n   * @param reversedUrl\n   *          Reversed url\n   * @return Reversed host",
        "* Convert given Utf8 instance to String and and cleans out any offending \"ï¿½\"\n   * from the String.\n   * \n   * \n   * @param utf8\n   *          Utf8 object\n   * @return string-ifed Utf8 object or null if Utf8 instance is null"
    ],
    "functions": [
        "reverseUrl",
        "reverseUrl",
        "unreverseUrl",
        "getReversedHost",
        "reverseAppendSplits",
        "reverseHost",
        "unreverseHost",
        "toString"
    ],
    "classes": [
        "TableUtil"
    ]
}