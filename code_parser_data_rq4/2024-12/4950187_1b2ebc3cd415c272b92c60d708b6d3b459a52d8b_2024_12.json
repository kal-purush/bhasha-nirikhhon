{
    "identifiers": [
        "org",
        "jacoco",
        "core",
        "analysis",
        "org",
        "jacoco",
        "core",
        "instr",
        "InstrSupport",
        "org",
        "junit",
        "Test",
        "org",
        "objectweb",
        "asm",
        "Opcodes",
        "org",
        "objectweb",
        "asm",
        "tree",
        "MethodNode",
        "Test",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_SYNTHETIC",
        "m",
        "visitInsn",
        "Opcodes",
        "RETURN",
        "m",
        "context",
        "output",
        "assertIgnored",
        "Test",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_SYNTHETIC",
        "m",
        "visitVarInsn",
        "Opcodes",
        "ALOAD",
        "m",
        "visitFieldInsn",
        "Opcodes",
        "GETFIELD",
        "m",
        "visitInsn",
        "Opcodes",
        "IRETURN",
        "m",
        "context",
        "output",
        "assertMethodIgnored",
        "m",
        "Test",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_SYNTHETIC",
        "Opcodes",
        "ACC_BRIDGE",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "visitInsn",
        "Opcodes",
        "NOP",
        "m",
        "context",
        "output",
        "assertIgnored",
        "Test",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_SYNTHETIC",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "visitInsn",
        "Opcodes",
        "NOP",
        "m",
        "context",
        "output",
        "assertIgnored",
        "Test",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_SYNTHETIC",
        "Opcodes",
        "ACC_STATIC",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "visitInsn",
        "Opcodes",
        "NOP",
        "m",
        "context",
        "output",
        "assertIgnored",
        "Test",
        "m",
        "InstrSupport",
        "ASM_API_VERSION",
        "Opcodes",
        "ACC_PUBLIC",
        "Opcodes",
        "ACC_STATIC",
        "Opcodes",
        "ACC_FINAL",
        "Opcodes",
        "ACC_SYNTHETIC",
        "context",
        "classAnnotations",
        "add",
        "KotlinGeneratedFilter",
        "KOTLIN_METADATA_DESC",
        "m",
        "visitVarInsn",
        "Opcodes",
        "ALOAD",
        "m",
        "visitMethodInsn",
        "Opcodes",
        "INVOKESTATIC",
        "m",
        "visitInsn",
        "Opcodes",
        "RETURN",
        "m",
        "context",
        "output",
        "assertMethodIgnored",
        "m"
    ],
    "literals": [
        "\"example\"",
        "\"()V\"",
        "\"access$getX$p\"",
        "\"(Outer;)I\"",
        "\"Outer\"",
        "\"x\"",
        "\"I\"",
        "\"example$default\"",
        "\"(LTarget;Ljava/lang/String;Ijava/lang/Object;)V\"",
        "\"<init>\"",
        "\"(IILkotlin/jvm/internal/DefaultConstructorMarker;)V\"",
        "\"example\"",
        "\"(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;\"",
        "\"access$example\"",
        "\"(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;\"",
        "\"ExampleKt\"",
        "\"example\"",
        "\"(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*****************************************************************************\n * Copyright (c) 2009, 2024 Mountainminds GmbH & Co. KG and Contributors\n * This program and the accompanying materials are made available under\n * the terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *    Evgeny Mandrikov - initial API and implementation\n *\n ******************************************************************************",
        "* Unit tests for {@link KotlinSyntheticAccessorsFilter}.",
        "* <pre>\n\t * &#064;JvmSynthetic\n\t * fun example() {\n\t * }\n\t * </pre>\n\t *\n\t * @see #should_filter_synthetic_accessor_methods_in_Kotlin_classes()",
        "* <pre>\n\t * class Outer {\n\t *   private var x = 42\n\t *\n\t *   inner class Inner {\n\t *     fun example() {\n\t *       x += 1\n\t *     }\n\t *   }\n\t * }\n\t * </pre>\n\t *\n\t * @see #should_not_filter_synthetic_non_accessor_methods_in_Kotlin_classes()",
        "* For private suspending function Kotlin compiler versions prior to 1.5\n\t * produce package-local synthetic method that should not be filtered\n\t *\n\t * <pre>\n\t * private suspend fun example() {\n\t * }\n\t * </pre>\n\t *\n\t * @see #should_filter_synthetic_methods_whose_name_starts_with_access_dollar_even_if_last_argument_is_kotlin_coroutine_continuation()",
        "* For private suspending function Kotlin compiler versions starting from\n\t * 1.5 produce additional public synthetic method with name starting with\n\t * \"access$\" that should be filtered\n\t *\n\t * <pre>\n\t * private suspend fun example() {\n\t * }\n\t * </pre>\n\t *\n\t * @see #should_not_filter_synthetic_methods_whose_last_argument_is_kotlin_coroutine_continuation()"
    ],
    "functions": [
        "should_not_filter_synthetic_non_accessor_methods_in_Kotlin_classes",
        "should_filter_synthetic_accessor_methods_in_Kotlin_classes",
        "should_not_filter_method_with_suffix_default_in_kotlin_classes",
        "should_not_filter_synthetic_constructor_containing_default_arguments_in_kotlin_classes",
        "should_not_filter_synthetic_methods_whose_last_argument_is_kotlin_coroutine_continuation",
        "should_filter_synthetic_methods_whose_name_starts_with_access_dollar_even_if_last_argument_is_kotlin_coroutine_continuation"
    ],
    "classes": [
        "KotlinSyntheticFilterTest"
    ]
}