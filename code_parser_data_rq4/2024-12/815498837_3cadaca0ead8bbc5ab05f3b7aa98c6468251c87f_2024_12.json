{
    "identifiers": [
        "Numerics",
        "PicoGK",
        "fThickness",
        "Voxels",
        "ImplicitMesh",
        "fThickness",
        "IBoundedImplicit",
        "Mesh",
        "msh",
        "fThickness",
        "m_aTriangles",
        "ImplicitTriangle",
        "msh",
        "nTriangleCount",
        "n",
        "msh",
        "nTriangleCount",
        "n",
        "msh",
        "GetTriangle",
        "n",
        "Vector3",
        "A",
        "Vector3",
        "B",
        "Vector3",
        "C",
        "m_aTriangles",
        "n",
        "A",
        "B",
        "C",
        "fThickness",
        "m_oBBox",
        "Include",
        "m_aTriangles",
        "n",
        "oBounds",
        "Vector3",
        "vec",
        "m_aTriangles",
        "Count",
        "Parallel",
        "For",
        "m_aTriangles",
        "Count",
        "afDist",
        "n",
        "m_aTriangles",
        "n",
        "fSignedDistance",
        "vecPt",
        "MaxValue",
        "n",
        "m_aTriangles",
        "Count",
        "n",
        "fDist",
        "Min",
        "fDist",
        "afDist",
        "n",
        "fDist",
        "ImplicitTriangle",
        "m_oBBox",
        "IBoundedImplicit",
        "Vector3",
        "vecA",
        "Vector3",
        "vecB",
        "Vector3",
        "vecC",
        "fThickness",
        "A",
        "vecA",
        "B",
        "vecB",
        "C",
        "vecC",
        "m_fThickness",
        "fThickness",
        "m_oBBox",
        "Include",
        "A",
        "m_oBBox",
        "Include",
        "B",
        "m_oBBox",
        "Include",
        "C",
        "m_oBBox",
        "Grow",
        "fThickness",
        "Vector3",
        "vecPoint",
        "vecClosestPointOnTriangle2",
        "vecPoint",
        "A",
        "B",
        "C",
        "Vector3",
        "Distance",
        "vecPoint",
        "vecClosestPoint",
        "f",
        "m_fThickness",
        "Vector3",
        "point",
        "Vector3",
        "a",
        "Vector3",
        "b",
        "Vector3",
        "c",
        "b",
        "a",
        "c",
        "a",
        "point",
        "a",
        "Vector3",
        "Dot",
        "ab",
        "ap",
        "Vector3",
        "Dot",
        "ac",
        "ap",
        "d1",
        "d2",
        "a",
        "point",
        "b",
        "Vector3",
        "Dot",
        "ab",
        "bp",
        "Vector3",
        "Dot",
        "ac",
        "bp",
        "d3",
        "d4",
        "d3",
        "b",
        "d1",
        "d4",
        "d3",
        "d2",
        "vc",
        "d1",
        "d3",
        "d1",
        "d1",
        "d3",
        "a",
        "v",
        "ab",
        "point",
        "c",
        "Vector3",
        "Dot",
        "ab",
        "cp",
        "Vector3",
        "Dot",
        "ac",
        "cp",
        "d6",
        "d5",
        "d6",
        "c",
        "d5",
        "d2",
        "d1",
        "d6",
        "vb",
        "d2",
        "d6",
        "d2",
        "d2",
        "d6",
        "a",
        "w",
        "ac",
        "d3",
        "d6",
        "d5",
        "d4",
        "va",
        "d4",
        "d3",
        "d5",
        "d6",
        "d4",
        "d3",
        "d4",
        "d3",
        "d5",
        "d6",
        "b",
        "w",
        "c",
        "b",
        "va",
        "vb",
        "vc",
        "vb",
        "denom",
        "vc",
        "denom",
        "a",
        "vAB",
        "ab",
        "vAC",
        "ac",
        "m_oBBox"
    ],
    "literals": [],
    "variables": [
        "n",
        "afDist",
        "Vector3",
        "vecPt",
        "vec",
        "fDist",
        "n",
        "m_aTriangles",
        "BBox3",
        "oBounds",
        "BBox3",
        "m_oBBox",
        "Vector3",
        "vecClosestPoint",
        "f",
        "Vector3",
        "ab",
        "Vector3",
        "ac",
        "Vector3",
        "ap",
        "d1",
        "d2",
        "Vector3",
        "bp",
        "d3",
        "d4",
        "vc",
        "v",
        "Vector3",
        "cp",
        "d5",
        "d6",
        "vb",
        "w",
        "va",
        "w",
        "denom",
        "vAB",
        "vAC",
        "Vector3",
        "A",
        "Vector3",
        "B",
        "Vector3",
        "C",
        "m_fThickness",
        "BBox3",
        "oBounds",
        "BBox3",
        "m_oBBox"
    ],
    "comments": [
        "",
        "SPDX-License-Identifier: Apache-2.0",
        "",
        "PicoGK (\"peacock\") is a compact software kernel for computational geometry,",
        "specifically for use in Computational Engineering Models (CEM).",
        "",
        "For more information, please visit https://picogk.org",
        "",
        "PicoGK is developed and maintained by LEAP 71 - © 2023-2024 by LEAP 71",
        "https://leap71.com",
        "",
        "Computational Engineering will profoundly change our physical world in the",
        "years ahead. Thank you for being part of the journey.",
        "",
        "We have developed this library to be used widely, for both commercial and",
        "non-commercial projects alike. Therefore, we have released it under a",
        "permissive open-source license.",
        "",
        "The foundation of PicoGK is a thin layer on top of the powerful open-source",
        "OpenVDB project, which in turn uses many other Free and Open Source Software",
        "libraries. We are grateful to be able to stand on the shoulders of giants.",
        "",
        "LEAP 71 licenses this file to you under the Apache License, Version 2.0",
        "(the \"License\"); you may not use this file except in compliance with the",
        "License. You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, THE SOFTWARE IS",
        "PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED.",
        "",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "TODO enable when multithreaded PicoGK is released",
        "Voxels [] avox = new Voxels[nTriangleCount()];\n\n            Parallel.For(0, nTriangleCount(), n =>\n            {\n                GetTriangle(    n, \n                                    out Vector3 A, \n                                    out Vector3 B, \n                                    out Vector3 C);\n\n                ImplicitTriangle tri = new(A,B,C,fThickness);\n                avox[n] = new Voxels(tri, tri.oBounds);\n            });\n\n            Voxels voxResult = new();\n            voxResult.BoolAddAll(avox);\n            return voxResult;",
        "Enables treating a mesh as an implicit with a thickness (making it hollow)",
        "</summary>",
        "Enables treating a triangle as an implicit with a thickness",
        "</summary>",
        "Compute vectors from triangle vertices",
        "Compute dot products",
        "Closest to vertex A",
        "Check vertex region outside B",
        "Closest to vertex B",
        "Check edge AB",
        "Closest to edge AB",
        "Check vertex region outside C",
        "Closest to vertex C",
        "Check edge AC",
        "Closest to edge AC",
        "Check edge BC",
        "Closest to edge BC",
        "Inside the face region"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Voxels",
        "voxVoxelizeHollow",
        "ImplicitMesh",
        "fSignedDistance",
        "ImplicitTriangle",
        "fSignedDistance",
        "Vector3",
        "vecClosestPointOnTriangle2"
    ],
    "classes": [
        "Mesh",
        "ImplicitMesh",
        "ImplicitTriangle"
    ]
}