{
    "identifiers": [
        "Collections",
        "Generic",
        "LinqToDB",
        "SqlQuery",
        "Type",
        "left",
        "operation",
        "Type",
        "right",
        "Type",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "GetType",
        "Type",
        "Type",
        "left",
        "operation",
        "Type",
        "right",
        "_operationTypes",
        "TryGetValue",
        "left",
        "operation",
        "right",
        "Type",
        "defaultType",
        "ISqlExpression",
        "expr1",
        "operation",
        "ISqlExpression",
        "expr2",
        "precedence",
        "SqlQuery",
        "Precedence",
        "Unknown",
        "expr1",
        "SystemType",
        "expr2",
        "SystemType",
        "defaultType",
        "TryGetBinaryType",
        "expr1",
        "SystemType",
        "operation",
        "expr2",
        "SystemType",
        "defaultType",
        "SqlBinaryExpression",
        "expr1",
        "operation",
        "expr2",
        "precedence"
    ],
    "literals": [
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"+\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\"",
        "\"-\""
    ],
    "variables": [
        "_operationTypes"
    ],
    "comments": [
        "+",
        "{ (typeof(sbyte), \"+\", typeof(ulong  )), ((sbyte)1 + (ulong  )1).GetType() },",
        "{ (typeof(short), \"+\", typeof(ulong  )), ((short)1 + (ulong  )1).GetType() },",
        "{ (typeof(ulong), \"+\", typeof(sbyte  )), ((ulong)1 + (sbyte  )1).GetType() },",
        "{ (typeof(ulong), \"+\", typeof(short  )), ((ulong)1 + (short  )1).GetType() },",
        "{ (typeof(decimal), \"+\", typeof(double )), ((decimal)1 + (double )1).GetType() },",
        "{ (typeof(decimal), \"+\", typeof(float  )), ((decimal)1 + (float  )1).GetType() },",
        "{ (typeof(double), \"+\", typeof(decimal)), ((double)1 + (decimal)1).GetType() },",
        "{ (typeof(float), \"+\", typeof(decimal)), ((float)1 + (decimal)1).GetType() },",
        "-",
        "{ (typeof(sbyte), \"-\", typeof(ulong  )), ((sbyte)1 - (ulong  )1).GetType() },",
        "{ (typeof(short), \"-\", typeof(ulong  )), ((short)1 - (ulong  )1).GetType() },",
        "{ (typeof(ulong), \"-\", typeof(sbyte  )), ((ulong)1 - (sbyte  )1).GetType() },",
        "{ (typeof(ulong), \"-\", typeof(short  )), ((ulong)1 - (short  )1).GetType() },",
        "{ (typeof(decimal), \"-\", typeof(double )), ((decimal)1 - (double )1).GetType() },",
        "{ (typeof(decimal), \"-\", typeof(float  )), ((decimal)1 - (float  )1).GetType() },",
        "{ (typeof(double), \"-\", typeof(decimal)), ((double)1 - (decimal)1).GetType() },",
        "{ (typeof(float), \"-\", typeof(decimal)), ((float)1 - (decimal)1).GetType() },"
    ],
    "docstrings": [],
    "functions": [
        "TryGetBinaryType",
        "SqlBinaryExpression",
        "CreateWithTypeInferred"
    ],
    "classes": [
        "SqlBinaryExpressionHelper"
    ]
}