{
    "identifiers": [
        "grid",
        "Grid",
        "Grid",
        "width",
        "height",
        "width",
        "height",
        "get_cell",
        "opened_cell",
        "set_opened",
        "get_cell",
        "opened_cell",
        "set_opened",
        "opened_cell",
        "new_active",
        "active",
        "new_active",
        "set_active",
        "new_active",
        "new_active",
        "set_active_cell",
        "opened_cell",
        "get_cell",
        "active_cell",
        "set_active",
        "opened_cell",
        "pref_heights",
        "opened_y",
        "y_offset",
        "height",
        "pref_heights",
        "opened_y",
        "height",
        "pref_heights",
        "opened_y",
        "opened_y",
        "y_offset",
        "pref_heights",
        "opened_y",
        "opened_y",
        "pref_widths",
        "opened_x",
        "x_offset",
        "width",
        "pref_widths",
        "opened_x",
        "width",
        "pref_widths",
        "opened_x",
        "opened_x",
        "x_offset",
        "pref_widths",
        "opened_x",
        "opened_x"
    ],
    "literals": [],
    "variables": [
        "opened_cell",
        "opened_cell",
        "opened_x",
        "opened_y",
        "y_offset",
        "y_offset",
        "x_offset",
        "x_offset"
    ],
    "comments": [
        "AbstractTabs is a class that represents navigation elements made of tabs",
        "As stated in the name, this class is abstract, i.e. should not be instantiated,",
        "an instance of one of the subclasses should be used instead.",
        "It conceptually differs from Grid in the way selected cells are handled",
        "AbstractClass distinguishes two properties of a cell (here: a tab): opened and active",
        "While the active cell is deactivated each time the grid itself is,",
        "an opened cell stays open even if the grid is deactivated",
        "This enables the user to see what was selected previously without the need to reselect it now",
        "Unlike a Grid, AbstractTabs calculates its offset depending",
        "on self.opened_cell instead of self.active_cell",
        "It also sets self.active_cell to self.opened_cell (instead of (0, 0))",
        "when the grid is newly selected",
        "AbstractTabs behaves in such a way that a cell may not be active without being opened,",
        "though it is technically possible to make it that way",
        "Attributes:",
        "- self.opened_cell - (int, int), coordinates of the opened grid cell",
        "Initialises the grid",
        "Sets the old opened cell to closed and sets the new one to open",
        "Getter for self.opened_cell",
        "Is called when the grid itself was (de)activated by its parent widget",
        "Resets self.active_cell to self.opened_cell when being activated",
        "When being deactivated, it also deactivates self.active_cell",
        "Calculates and updates self.x_offset and self.y_offset depending on self.opened_cell",
        "If the offset is too low (the opened cell is below the visible part of the grid)",
        "If the offset is too high (the opened cell is above the visible part of the grid)",
        "If the offset is too left (the opened cell is to the right of the visible part of the grid)",
        "If the offset is too right (the opened cell is to the left of the visible part of the grid)"
    ],
    "docstrings": [],
    "functions": [
        "set_opened_cell",
        "get_opened_cell",
        "set_active",
        "update_offset"
    ],
    "classes": [
        "AbstractTabs"
    ]
}