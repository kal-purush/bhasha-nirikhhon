{
    "identifiers": [
        "numpy",
        "np",
        "os",
        "sys",
        "rplacem",
        "canvas_part",
        "cp",
        "rplacem",
        "utilities",
        "util",
        "rplacem",
        "plot_utilities",
        "plot",
        "rplacem",
        "pickle",
        "graph_tool",
        "all",
        "gt",
        "matplotlib",
        "pyplot",
        "plt",
        "os",
        "path",
        "join",
        "DATA_PATH",
        "open",
        "file_path",
        "f",
        "pickle",
        "load",
        "f",
        "f",
        "close",
        "canvas_parts",
        "cpart",
        "pixel_changes",
        "cpart",
        "pixel_changes",
        "sec",
        "TIME_GREYOUT",
        "cpart",
        "pixchanges_coords",
        "x",
        "sec",
        "TIME_GREYOUT",
        "y",
        "sec",
        "TIME_GREYOUT",
        "sec",
        "sec",
        "TIME_GREYOUT",
        "np",
        "arange",
        "min",
        "sec",
        "max",
        "sec",
        "tgrain",
        "np",
        "searchsorted",
        "sec",
        "tsep",
        "np",
        "unique",
        "user",
        "return_inverse",
        "return_counts",
        "twind_sec",
        "tgrain",
        "gt",
        "Graph",
        "directed",
        "len",
        "tsep",
        "np",
        "zeros",
        "len",
        "tsep",
        "twind",
        "i",
        "len",
        "tsep",
        "twind",
        "np",
        "unique",
        "user_id",
        "inds_sep",
        "i",
        "inds_sep",
        "i",
        "twind",
        "x",
        "inds_sep",
        "i",
        "inds_sep",
        "i",
        "twind",
        "y",
        "inds_sep",
        "i",
        "inds_sep",
        "i",
        "twind",
        "len",
        "users_in_tw",
        "np",
        "triu_indices",
        "num_users",
        "i",
        "edges",
        "np",
        "array",
        "users_in_tw",
        "comb_inds",
        "users_in_tw",
        "comb_inds",
        "T",
        "tolist",
        "invweight",
        "num_users",
        "i",
        "len",
        "comb_inds",
        "np",
        "array",
        "invweight",
        "np",
        "unique",
        "np",
        "array",
        "edges",
        "axis",
        "return_inverse",
        "np",
        "bincount",
        "inv_unique",
        "weights",
        "weight",
        "len",
        "edges",
        "len",
        "weights",
        "weights",
        "usernet",
        "add_edge_list",
        "edges",
        "usernet",
        "new_ep",
        "e",
        "weight",
        "usernet",
        "edges",
        "weights",
        "weight",
        "usernet",
        "ep",
        "weight_property",
        "np",
        "max",
        "usernet",
        "ep",
        "weight",
        "a",
        "usernet",
        "new_vp",
        "v",
        "nchanges",
        "usernet",
        "vertices",
        "changes_peruser",
        "np",
        "log",
        "nchanges",
        "usernet",
        "vp",
        "npixelchanges",
        "len",
        "np",
        "unique",
        "user",
        "prop_name",
        "prop_map",
        "usernet",
        "edge_properties",
        "items",
        "prop_name",
        "prop_map",
        "value_type",
        "gt",
        "sfdp_layout",
        "usernet",
        "eweight",
        "weight_property",
        "gt",
        "graph_draw",
        "usernet",
        "pos",
        "pos",
        "vertex_size",
        "gt",
        "prop_to_size",
        "npixelchanges",
        "mi",
        "ma",
        "power",
        "edge_pen_width",
        "gt",
        "prop_to_size",
        "weight_property",
        "mi",
        "ma",
        "power",
        "output",
        "os",
        "path",
        "join",
        "FIGS_PATH",
        "output_size",
        "edge_color",
        "bg_color",
        "np",
        "bincount",
        "user_id",
        "plt",
        "figure",
        "usernet",
        "get_out_degrees",
        "usernet",
        "get_vertices",
        "eweight",
        "weight_property",
        "plt",
        "hist",
        "deg",
        "bins",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "xscale",
        "plt",
        "yscale",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "FIGS_PATH",
        "len",
        "n_pixchanges",
        "len",
        "deg",
        "plt",
        "figure",
        "plt",
        "scatter",
        "n_pixchanges",
        "deg",
        "alpha",
        "s",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "xscale",
        "plt",
        "yscale",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "FIGS_PATH",
        "plt",
        "figure",
        "plt",
        "hist",
        "sec",
        "bins",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "savefig",
        "os",
        "path",
        "join",
        "FIGS_PATH"
    ],
    "literals": [
        "'canvas_compositions_0-100.pickle'",
        "'rb'",
        "'seconds'",
        "'user'",
        "'bins'",
        "'get unique edges'",
        "'adding edges'",
        "\"float\"",
        "\"int\"",
        "\"n_users = \"",
        "f\"Property name: {prop_name}, Property type: {prop_map.value_type()}\"",
        "'usernetwork'",
        "'testnet.pdf'",
        "'white'",
        "'Degree'",
        "'Count'",
        "'log'",
        "'log'",
        "'usernetwork'",
        "'testnet_degdist.png'",
        "'Number of pixel changes'",
        "'Degree'",
        "'log'",
        "'log'",
        "'usernetwork'",
        "'testnet_deg_vs_pixchanges.png'",
        "'Time (s)'",
        "'Number of pixel changes'",
        "'usernetwork'",
        "'testnet_pixchanges_vs_time.png'"
    ],
    "variables": [
        "file_path",
        "canvas_parts",
        "cpart",
        "sec",
        "user",
        "x",
        "y",
        "x",
        "y",
        "sec",
        "tgrain",
        "tsep",
        "inds_sep",
        "user_uni",
        "user_id",
        "changes_peruser",
        "twind_sec",
        "twind",
        "usernet",
        "edges",
        "invweight",
        "num_users",
        "users_in_tw",
        "x_in_tw",
        "y_in_tw",
        "num_users",
        "i",
        "comb_inds",
        "weight",
        "edges",
        "inv_unique",
        "weights",
        "weight_property",
        "weight_property",
        "e",
        "weight",
        "npixelchanges",
        "npixelchanges",
        "v",
        "npixelchanges",
        "pos",
        "n_pixchanges",
        "deg"
    ],
    "comments": [
        "_all",
        "separate the pixel changes into time bins of width tgrain",
        "indices for each unique user",
        "user_id is the index of each user in \"user\". And user_uni[user_id] == user",
        "window in which active users are considered co-active",
        "get the active users and coords in the time window",
        "or do this as a dynamic network in bins of tgrain?",
        "add the edges between the active users",
        "upper triangular indices without the diagonal",
        "unique edges and weights",
        "remove duplicate edges",
        "edges, weights = np.unique(np.array(edges), axis=0, return_counts=True)",
        "remove duplicates and sum weights",
        "add vertex property with changes per user",
        "plot the network",
        "change the force of the graph layout",
        "default color but with more transparency",
        "get the number of pixel changes per user",
        "plot the degree distribution",
        "plot degree distribution vs number of pixel changes",
        "plot number of pixel changes vs time"
    ],
    "docstrings": [
        "'''\nwith open(os.path.join(var.DATA_PATH, 'canvas_compositions_0-100.pickle') , 'wb') as handle:\n    pickle.dump(canvas_parts,\n                handle,\n                protocol=pickle.HIGHEST_PROTOCOL)\n'''"
    ],
    "functions": [],
    "classes": []
}