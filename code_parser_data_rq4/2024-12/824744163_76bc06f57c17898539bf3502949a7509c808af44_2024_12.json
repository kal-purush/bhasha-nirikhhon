{
    "identifiers": [
        "sys",
        "pandas",
        "pd",
        "numpy",
        "np",
        "sys",
        "argv",
        "sys",
        "argv",
        "file",
        "np",
        "inf",
        "np",
        "inf",
        "chunk",
        "pd",
        "read_csv",
        "file",
        "sep",
        "chunksize",
        "header",
        "usecols",
        "chunk",
        "astype",
        "np",
        "minimum",
        "chunk",
        "min",
        "low",
        "np",
        "maximum",
        "chunk",
        "max",
        "high",
        "low",
        "high",
        "file",
        "low",
        "high",
        "np",
        "linspace",
        "low",
        "high",
        "nbins",
        "flatten",
        "np",
        "zeros",
        "nbins",
        "np",
        "chunk",
        "pd",
        "read_csv",
        "gerpfile",
        "sep",
        "chunksize",
        "header",
        "usecols",
        "chunk",
        "astype",
        "np",
        "histogram",
        "chunk",
        "bins",
        "bin_edges",
        "total",
        "subtotal",
        "astype",
        "np",
        "bin_edges",
        "total",
        "p",
        "bin_edges",
        "total",
        "np",
        "cumsum",
        "total",
        "np",
        "sum",
        "total",
        "len",
        "cs",
        "cs",
        "p",
        "bin_edges",
        "i",
        "min_max_gerp",
        "gerpfile",
        "gerp_hist",
        "gerpfile",
        "min_gerp",
        "max_gerp",
        "approx_percentile",
        "percentile",
        "bins",
        "counts"
    ],
    "literals": [
        "'\\t'",
        "'\\t'"
    ],
    "variables": [
        "gerpfile",
        "percentile",
        "low",
        "high",
        "chunk",
        "low",
        "high",
        "nbins",
        "bin_edges",
        "total",
        "chunk",
        "subtotal",
        "e",
        "p",
        "cs",
        "i",
        "min_gerp",
        "max_gerp",
        "bins",
        "counts"
    ],
    "comments": [
        "!/usr/bin/python3",
        "read the file in chunks of 1 million sites to find minimum and maximum gerp score",
        "create a histogram",
        "define the shape of the histogram (i.e. number of bins to be filled with counts)",
        "minimum and maximum gerp score per bin. Add 1 because there will be 2 values per bin.",
        "counts of scores per bin, starting with zero",
        "iterate over the file in chunks of 1 million sites to fill the histogram with values",
        "compute bin counts",
        "accumulate bin counts over chunks",
        "find the 99th percentile from the histogram",
        "calculate the cumulative sums of histogram counts in percentages",
        "how many values of the cumulative sum in percentage are lower or equal to p? This is used as index in the next step.",
        "return the maximum gerp score of the bin that is equal or lower to p% with i as index. All gerp scores higher than that are the top 1-p%."
    ],
    "docstrings": [
        "\"\"\"\nScript to approximate any percentile of GERP scores from the entire genome\nusing histogram bins, to be used as minimum or maximum GERP value to calculate \nrelative mutational load.\n\nUsage:\nProvide path to gzipped GERP ancestral.rates file and the desired percentile on the command line. \nExample to approximate the 99th percentile (for the top 1% of GERP scores):\n\npython get_gerp_score_percentile.py ../results/gerp/GCF_000283155.1_CerSimSim1.0_genomic.Sc9M7eS_2_HRSCAF_41.ancestral.rates.gz 99\n\"\"\""
    ],
    "functions": [
        "min_max_gerp",
        "gerp_hist",
        "approx_percentile"
    ],
    "classes": []
}