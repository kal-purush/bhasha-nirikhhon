{
    "identifiers": [
        "ru",
        "otus",
        "hw",
        "repositories",
        "org",
        "springframework",
        "dao",
        "EmptyResultDataAccessException",
        "org",
        "springframework",
        "jdbc",
        "core",
        "RowMapper",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "NamedParameterJdbcTemplate",
        "org",
        "springframework",
        "stereotype",
        "Repository",
        "ru",
        "otus",
        "hw",
        "models",
        "Author",
        "javax",
        "sql",
        "DataSource",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "SQLException",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "Repository",
        "jdbcTemplate",
        "dataSource",
        "jdbcTemplate",
        "dataSource",
        "Override",
        "sql",
        "jdbcTemplate",
        "query",
        "sql",
        "Override",
        "id",
        "sql",
        "namedParameters",
        "Collections",
        "singletonMap",
        "id",
        "Optional",
        "ofNullable",
        "jdbcTemplate",
        "queryForObject",
        "sql",
        "namedParameters",
        "e",
        "Optional",
        "empty",
        "Override",
        "rs",
        "i",
        "author",
        "author",
        "setId",
        "rs",
        "getInt",
        "author",
        "setFullName",
        "rs",
        "getString",
        "author"
    ],
    "literals": [
        "\"select id, full_name from authors\"",
        "\"select id, full_name from authors where id = :author_id\"",
        "\"author_id\"",
        "\"id\"",
        "\"full_name\""
    ],
    "variables": [
        "jdbcTemplate"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "JdbcAuthorRepository",
        "findAll",
        "findById",
        "Author",
        "mapRow"
    ],
    "classes": [
        "JdbcAuthorRepository",
        "AuthorRowMapper"
    ]
}