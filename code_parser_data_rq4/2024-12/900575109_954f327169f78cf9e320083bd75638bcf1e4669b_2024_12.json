{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "tensorflow",
        "tensorflow",
        "keras",
        "models",
        "Sequential",
        "tensorflow",
        "keras",
        "layers",
        "Conv2D",
        "MaxPooling2D",
        "Flatten",
        "Dense",
        "Dropout",
        "tensorflow",
        "keras",
        "preprocessing",
        "image",
        "ImageDataGenerator",
        "sklearn",
        "model_selection",
        "train_test_split",
        "PIL",
        "Image",
        "folder",
        "filename",
        "os",
        "listdir",
        "folder",
        "Image",
        "open",
        "os",
        "path",
        "join",
        "folder",
        "filename",
        "img",
        "img",
        "resize",
        "images",
        "append",
        "np",
        "array",
        "img",
        "filename",
        "labels",
        "append",
        "label",
        "np",
        "array",
        "images",
        "np",
        "array",
        "labels",
        "load_images_from_folder",
        "filepath",
        "images",
        "train_test_split",
        "images",
        "labels",
        "test_size",
        "random_state",
        "ImageDataGenerator",
        "rotation_range",
        "width_shift_range",
        "height_shift_range",
        "shear_range",
        "zoom_range",
        "horizontal_flip",
        "fill_mode",
        "train_datagen",
        "flow",
        "x_train",
        "y_train",
        "batch_size",
        "Sequential",
        "Conv2D",
        "activation",
        "input_shape",
        "MaxPooling2D",
        "Conv2D",
        "activation",
        "MaxPooling2D",
        "Flatten",
        "Dense",
        "activation",
        "Dropout",
        "Dense",
        "activation",
        "model",
        "compile",
        "optimizer",
        "loss",
        "metrics",
        "model",
        "create_model",
        "model",
        "fit",
        "train_generator",
        "epochs",
        "validation_data",
        "x_test",
        "y_test",
        "plt",
        "plot",
        "history",
        "history",
        "plt",
        "plot",
        "history",
        "history",
        "plt",
        "title",
        "plt",
        "ylabel",
        "plt",
        "xlabel",
        "plt",
        "legend",
        "loc",
        "plt",
        "show",
        "model",
        "save"
    ],
    "literals": [
        "'1__'",
        "r'C:\\Users\\Admin\\Desktop\\Jackson\\FIU\\Graduate School\\CAP 5610 Introduction to Machine Learning\\Final Project\\Satellite_Airplane_Image\\planesnet\\planesnet'",
        "'nearest'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'sigmoid'",
        "'adam'",
        "'binary_crossentropy'",
        "'accuracy'",
        "'accuracy'",
        "'val_accuracy'",
        "'Model accuracy'",
        "'Accuracy'",
        "'Epoch'",
        "'Train'",
        "'Test'",
        "'upper left'",
        "'airplane_detection_model.h5'"
    ],
    "variables": [
        "images",
        "labels",
        "img",
        "img",
        "label",
        "filepath",
        "images",
        "labels",
        "images",
        "x_train",
        "x_test",
        "y_train",
        "y_test",
        "train_datagen",
        "train_generator",
        "model",
        "model",
        "history"
    ],
    "comments": [
        "Automating Airplane Detection in Satellite Imagery",
        "Import the necessary libraries",
        "Load and preprocess the data",
        "1 for 'plane' and 0 for 'no-plane'",
        "Resize to make sure all images are the same size",
        "Extract label from filename",
        "Images are in the 'planesnet' directory assigned to filepath",
        "filepath = ('C:\\Users\\Admin\\Desktop\\Jackson\\FIU\\Graduate School\\CAP 5610 Introduction to Machine Learning\\Final Project\\Satellite_Airplane_Image\\planesnet\\planesnet')",
        "Normalizing pixel values",
        "Split dataset into training and testing",
        "Data augmentation",
        "Model definition",
        "Train model",
        "Evaluate the model",
        "Save model for future deployment"
    ],
    "docstrings": [],
    "functions": [
        "load_images_from_folder",
        "create_model"
    ],
    "classes": []
}