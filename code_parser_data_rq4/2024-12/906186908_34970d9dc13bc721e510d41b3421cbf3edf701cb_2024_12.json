{
    "identifiers": [
        "argparse",
        "time",
        "pathlib",
        "Path",
        "os",
        "copy",
        "cv2",
        "torch",
        "torch",
        "backends",
        "cudnn",
        "cudnn",
        "numpy",
        "random",
        "models",
        "experimental",
        "attempt_load",
        "utils",
        "datasets",
        "LoadStreams",
        "LoadImages",
        "utils",
        "general",
        "check_img_size",
        "check_requirements",
        "check_imshow",
        "non_max_suppression",
        "apply_classifier",
        "scale_coords",
        "xyxy2xywh",
        "strip_optimizer",
        "set_logging",
        "increment_path",
        "save_one_box",
        "utils",
        "plots",
        "colors",
        "plot_one_box",
        "utils",
        "torch_utils",
        "select_device",
        "load_classifier",
        "time_synchronized",
        "opt",
        "opt",
        "source",
        "opt",
        "weights",
        "opt",
        "view_img",
        "opt",
        "save_txt",
        "opt",
        "img_size",
        "opt",
        "save_txt_tidl",
        "opt",
        "kpt_label",
        "opt",
        "nosave",
        "source",
        "endswith",
        "source",
        "isnumeric",
        "source",
        "endswith",
        "source",
        "lower",
        "startswith",
        "increment_path",
        "Path",
        "opt",
        "project",
        "opt",
        "name",
        "exist_ok",
        "opt",
        "exist_ok",
        "save_dir",
        "save_txt",
        "save_txt_tidl",
        "save_dir",
        "mkdir",
        "parents",
        "exist_ok",
        "set_logging",
        "select_device",
        "opt",
        "device",
        "device",
        "save_txt_tidl",
        "attempt_load",
        "weights",
        "map_location",
        "device",
        "model",
        "stride",
        "max",
        "isinstance",
        "imgsz",
        "len",
        "imgsz",
        "check_img_size",
        "imgsz",
        "s",
        "stride",
        "check_img_size",
        "imgsz",
        "s",
        "stride",
        "check_img_size",
        "imgsz",
        "s",
        "stride",
        "model",
        "names",
        "hasattr",
        "model",
        "model",
        "names",
        "half",
        "model",
        "half",
        "classify",
        "load_classifier",
        "name",
        "n",
        "modelc",
        "load_state_dict",
        "torch",
        "load",
        "map_location",
        "device",
        "to",
        "device",
        "eval",
        "webcam",
        "check_imshow",
        "LoadStreams",
        "source",
        "img_size",
        "imgsz",
        "stride",
        "stride",
        "LoadImages",
        "source",
        "img_size",
        "imgsz",
        "stride",
        "stride",
        "device",
        "model",
        "torch",
        "zeros",
        "imgsz",
        "imgsz",
        "to",
        "device",
        "type_as",
        "next",
        "model",
        "parameters",
        "time",
        "time",
        "path",
        "img",
        "im0s",
        "vid_cap",
        "dataset",
        "torch",
        "from_numpy",
        "img",
        "to",
        "device",
        "img",
        "half",
        "half",
        "img",
        "img",
        "img",
        "ndimension",
        "img",
        "unsqueeze",
        "time_synchronized",
        "model",
        "img",
        "augment",
        "opt",
        "augment",
        "pred",
        "max",
        "non_max_suppression",
        "pred",
        "opt",
        "conf_thres",
        "opt",
        "iou_thres",
        "classes",
        "opt",
        "classes",
        "agnostic",
        "opt",
        "agnostic_nms",
        "kpt_label",
        "kpt_label",
        "nkpt",
        "nkpt",
        "time_synchronized",
        "classify",
        "apply_classifier",
        "pred",
        "modelc",
        "img",
        "im0s",
        "i",
        "det",
        "pred",
        "webcam",
        "path",
        "i",
        "i",
        "im0s",
        "i",
        "copy",
        "dataset",
        "count",
        "path",
        "im0s",
        "copy",
        "getattr",
        "dataset",
        "Path",
        "p",
        "save_dir",
        "p",
        "name",
        "save_dir",
        "p",
        "stem",
        "dataset",
        "mode",
        "frame",
        "s",
        "img",
        "shape",
        "torch",
        "tensor",
        "im0",
        "shape",
        "len",
        "det",
        "scale_coords",
        "img",
        "shape",
        "det",
        "im0",
        "shape",
        "kpt_label",
        "scale_coords",
        "img",
        "shape",
        "det",
        "im0",
        "shape",
        "kpt_label",
        "kpt_label",
        "step",
        "c",
        "det",
        "unique",
        "det",
        "c",
        "sum",
        "s",
        "n",
        "names",
        "c",
        "n",
        "det_idx",
        "xyxy",
        "conf",
        "cls",
        "reversed",
        "det",
        "xyxy",
        "x2",
        "x1",
        "y2",
        "y1",
        "x1",
        "width",
        "y1",
        "height",
        "det_idx",
        "center_x",
        "center_y",
        "width",
        "height",
        "det",
        "reshape",
        "k",
        "kpts",
        "k",
        "kpts",
        "k",
        "keypoints_str",
        "k",
        "x",
        "y",
        "k",
        "keypoints_str",
        "keypoints_str",
        "keypoints_str",
        "det_index",
        "xyxy",
        "conf",
        "cls",
        "reversed",
        "det",
        "save_txt",
        "xyxy2xywh",
        "torch",
        "tensor",
        "xyxy",
        "view",
        "gn",
        "view",
        "tolist",
        "cls",
        "xywh",
        "conf",
        "opt",
        "save_conf",
        "cls",
        "xywh",
        "open",
        "txt_path",
        "f",
        "f",
        "write",
        "len",
        "line",
        "rstrip",
        "line",
        "save_img",
        "opt",
        "save_crop",
        "view_img",
        "cls",
        "opt",
        "hide_labels",
        "names",
        "c",
        "opt",
        "hide_conf",
        "names",
        "c",
        "conf",
        "det",
        "det_index",
        "plot_one_box",
        "xyxy",
        "im0",
        "label",
        "label",
        "color",
        "colors",
        "c",
        "line_thickness",
        "opt",
        "line_thickness",
        "kpt_label",
        "kpt_label",
        "kpts",
        "kpts",
        "steps",
        "orig_shape",
        "im0",
        "shape",
        "opt",
        "save_crop",
        "save_one_box",
        "xyxy",
        "im0s",
        "file",
        "save_dir",
        "names",
        "c",
        "p",
        "stem",
        "BGR",
        "save_txt_tidl",
        "xyxy",
        "conf",
        "cls",
        "det_tidl",
        "torch",
        "tensor",
        "xyxy",
        "view",
        "tolist",
        "conf",
        "cls",
        "xyxy",
        "opt",
        "save_conf",
        "cls",
        "xyxy",
        "open",
        "txt_path",
        "f",
        "f",
        "write",
        "len",
        "line",
        "rstrip",
        "line",
        "s",
        "t2",
        "t1",
        "view_img",
        "cv2",
        "imshow",
        "p",
        "im0",
        "cv2",
        "waitKey",
        "save_img",
        "dataset",
        "mode",
        "cv2",
        "imwrite",
        "save_path",
        "im0",
        "vid_path",
        "save_path",
        "save_path",
        "isinstance",
        "vid_writer",
        "cv2",
        "VideoWriter",
        "vid_writer",
        "release",
        "vid_cap",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FPS",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FRAME_WIDTH",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FRAME_HEIGHT",
        "im0",
        "shape",
        "im0",
        "shape",
        "save_path",
        "cv2",
        "VideoWriter",
        "save_path",
        "cv2",
        "VideoWriter_fourcc",
        "fps",
        "w",
        "h",
        "vid_writer",
        "write",
        "im0",
        "save_txt",
        "save_txt_tidl",
        "save_img",
        "len",
        "save_dir",
        "glob",
        "save_dir",
        "save_txt",
        "save_txt_tidl",
        "save_dir",
        "s",
        "time",
        "time",
        "t0",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "opt",
        "check_requirements",
        "exclude",
        "torch",
        "no_grad",
        "opt",
        "update",
        "opt",
        "weights",
        "detect",
        "opt",
        "opt",
        "strip_optimizer",
        "opt",
        "weights",
        "detect",
        "opt",
        "opt"
    ],
    "literals": [
        "'.txt'",
        "'.txt'",
        "'rtsp://'",
        "'rtmp://'",
        "'http://'",
        "'https://'",
        "'labels'",
        "'cpu'",
        "\"height and width of image has to be specified\"",
        "'module'",
        "'resnet101'",
        "'weights/resnet101.pt'",
        "'model'",
        "'cpu'",
        "'%g: '",
        "''",
        "'frame'",
        "'labels'",
        "''",
        "'image'",
        "f'_{frame}'",
        "'%gx%g '",
        "f\"{n} {names[int(c)]}{'s' * (n > 1)}, \"",
        "'s'",
        "f\" {{ \\\"id\\\": \\\"{det_idx + 1}\\\", \\\"label\\\": \\\"cars\\\", \\\"x\\\": \\\"{center_x:.4f}\\\", \\\"y\\\": \\\"{center_y:.4f}\\\", \\\"width\\\": \\\"{width:.4f}\\\", \\\"height\\\": \\\"{height:.4f}\\\",\"",
        "\" \\\"keypoints\\\": [\"",
        "f\"{{\\\"id\\\": {k}, \\\"x\\\": \\\"{x:.4f}\\\", \\\"y\\\": \\\"{y:.4f}\\\"}}\"",
        "\", \"",
        "\"]\"",
        "'.txt'",
        "'a'",
        "'%g '",
        "'\\n'",
        "f'{names[c]} {conf:.2f}'",
        "'crops'",
        "f'{p.stem}.jpg'",
        "'.txt'",
        "'a'",
        "'%g '",
        "'\\n'",
        "f'{s}Done. ({t2 - t1:.3f}s)'",
        "'image'",
        "'.mp4'",
        "'mp4v'",
        "f\"\\n{len(list(save_dir.glob('labels/*.txt')))} labels saved to {save_dir / 'labels'}\"",
        "'labels/*.txt'",
        "'labels'",
        "''",
        "f\"Results saved to {save_dir}{s}\"",
        "f'Done. ({time.time() - t0:.3f}s)'",
        "'__main__'",
        "'--weights'",
        "'+'",
        "'yolov5s.pt'",
        "'model.pt path(s)'",
        "'--source'",
        "'data/images'",
        "'source'",
        "'--img-size'",
        "'+'",
        "'inference size (pixels)'",
        "'--conf-thres'",
        "'object confidence threshold'",
        "'--iou-thres'",
        "'IOU threshold for NMS'",
        "'--device'",
        "''",
        "'cuda device, i.e. 0 or 0,1,2,3 or cpu'",
        "'--view-img'",
        "'store_true'",
        "'display results'",
        "'--save-txt'",
        "'store_true'",
        "'save results to *.txt'",
        "'--save-txt-tidl'",
        "'store_true'",
        "'save results to *.txt in tidl format'",
        "'--save-bin'",
        "'store_true'",
        "'save base n/w outputs in raw bin format'",
        "'--save-conf'",
        "'store_true'",
        "'save confidences in --save-txt labels'",
        "'--save-crop'",
        "'store_true'",
        "'save cropped prediction boxes'",
        "'--nosave'",
        "'store_true'",
        "'do not save images/videos'",
        "'--classes'",
        "'+'",
        "'filter by class: --class 0, or --class 0 2 3'",
        "'--agnostic-nms'",
        "'store_true'",
        "'class-agnostic NMS'",
        "'--augment'",
        "'store_true'",
        "'augmented inference'",
        "'--update'",
        "'store_true'",
        "'update all models'",
        "'--project'",
        "'runs/detect'",
        "'save results to project/name'",
        "'--name'",
        "'exp'",
        "'save results to project/name'",
        "'--exist-ok'",
        "'store_true'",
        "'existing project/name ok, do not increment'",
        "'--line-thickness'",
        "'bounding box thickness (pixels)'",
        "'--hide-labels'",
        "'store_true'",
        "'hide labels'",
        "'--hide-conf'",
        "'store_true'",
        "'hide confidences'",
        "'--kpt-label'",
        "'store_true'",
        "'use keypoint labels'",
        "'tensorboard'",
        "'pycocotools'",
        "'thop'",
        "'yolov5s.pt'",
        "'yolov5m.pt'",
        "'yolov5l.pt'",
        "'yolov5x.pt'"
    ],
    "variables": [
        "source",
        "weights",
        "view_img",
        "save_txt",
        "imgsz",
        "save_txt_tidl",
        "kpt_label",
        "save_img",
        "webcam",
        "nkpt",
        "save_dir",
        "device",
        "half",
        "model",
        "stride",
        "imgsz",
        "imgsz",
        "imgsz",
        "names",
        "classify",
        "modelc",
        "vid_path",
        "vid_writer",
        "view_img",
        "cudnn",
        "benchmark",
        "dataset",
        "dataset",
        "t0",
        "img",
        "img",
        "img",
        "t1",
        "pred",
        "pred",
        "t2",
        "pred",
        "p",
        "s",
        "im0",
        "frame",
        "p",
        "s",
        "im0",
        "frame",
        "p",
        "save_path",
        "txt_path",
        "gn",
        "n",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "center_x",
        "center_y",
        "kpts",
        "keypoints_str",
        "x",
        "y",
        "xywh",
        "line",
        "c",
        "label",
        "kpts",
        "xyxy",
        "line",
        "vid_path",
        "fps",
        "w",
        "h",
        "fps",
        "w",
        "h",
        "vid_writer",
        "s",
        "parser",
        "opt"
    ],
    "comments": [
        "save inference images",
        "Directories",
        "increment run",
        "make dir",
        "Initialize",
        "half precision only supported on CUDA",
        "Load model",
        "load FP32 model",
        "model stride",
        "check img_size",
        "get class names",
        "to FP16",
        "Second-stage classifier",
        "initialize",
        "Set Dataloader",
        "set True to speed up constant image size inference",
        "Run inference",
        "run once",
        "uint8 to fp16/32",
        "0 - 255 to 0.0 - 1.0",
        "Inference",
        "Apply NMS",
        "Apply Classifier",
        "Process detections",
        "detections per image",
        "batch_size >= 1",
        "to Path",
        "img.jpg",
        "img.txt",
        "print string",
        "normalization gain whwh",
        "Rescale boxes from img_size to im0 size",
        "Print results",
        "detections per class",
        "add to string",
        "Write results",
        "Write to file",
        "normalized xywh",
        "label format",
        "Add bbox to image",
        "integer class",
        "Write to file in tidl dump format",
        "label format",
        "Print time (inference + NMS)",
        "Stream results",
        "1 millisecond",
        "Save results (image with detections)",
        "'video' or 'stream'",
        "new video",
        "release previous video writer",
        "video",
        "stream",
        "file/folder, 0 for webcam",
        "update all models (to fix SourceChangeWarning)"
    ],
    "docstrings": [],
    "functions": [
        "detect"
    ],
    "classes": []
}