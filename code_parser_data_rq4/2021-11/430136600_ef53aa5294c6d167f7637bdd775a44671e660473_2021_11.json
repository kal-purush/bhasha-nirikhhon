{
    "identifiers": [
        "Threading",
        "Threading",
        "Tasks",
        "PrimeFuncPack",
        "UnitTest",
        "Xunit",
        "PrimeFuncPack",
        "UnitTest",
        "TestData",
        "PrimeFuncPack",
        "Core",
        "Tests",
        "Fact",
        "Func",
        "StructType",
        "Assert",
        "Throws",
        "ArgumentNullException",
        "_",
        "AsyncFunc",
        "From",
        "sourceFunc",
        "Assert",
        "Equal",
        "ex",
        "ParamName",
        "Theory",
        "InlineData",
        "InlineData",
        "EmptyString",
        "InlineData",
        "WhiteSpaceString",
        "InlineData",
        "SomeString",
        "sourceFuncResult",
        "AsyncFunc",
        "From",
        "FromResult",
        "sourceFuncResult",
        "CancellationToken",
        "actual",
        "InvokeAsync",
        "cancellationToken",
        "Assert",
        "Equal",
        "sourceFuncResult",
        "actualResult",
        "Theory",
        "InlineData",
        "InlineData",
        "EmptyString",
        "InlineData",
        "WhiteSpaceString",
        "InlineData",
        "SomeString",
        "sourceFuncResult",
        "AsyncFunc",
        "From",
        "FromResult",
        "sourceFuncResult",
        "CancellationToken",
        "canceled",
        "_",
        "Assert",
        "ThrowsAsync",
        "TaskCanceledException",
        "actual",
        "InvokeAsync",
        "cancellationToken"
    ],
    "literals": [
        "\"funcAsync\""
    ],
    "variables": [
        "sourceFunc",
        "ex",
        "actual",
        "cancellationToken",
        "actualResult",
        "actual",
        "cancellationToken"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "From_00_SourceFuncIsNull_ExpectArgumentNullException",
        "From_00_ThenInvokeAsync_ExpectResultOfSourceFunc",
        "From_00_Canceled_ThenInvokeAsync_ExpectTaskCanceledException"
    ],
    "classes": [
        "AsyncFuncTests3"
    ]
}