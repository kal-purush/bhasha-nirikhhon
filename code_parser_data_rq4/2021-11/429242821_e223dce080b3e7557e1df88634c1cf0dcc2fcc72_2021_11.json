{
    "identifiers": [
        "rospy",
        "geometry_msgs",
        "msg",
        "Twist",
        "nav_msgs",
        "msg",
        "Odometry",
        "math",
        "sqrt",
        "atan2",
        "exp",
        "atan",
        "cos",
        "sin",
        "acos",
        "pi",
        "asin",
        "atan2",
        "tf",
        "transformations",
        "euler_from_quaternion",
        "quaternion_from_euler",
        "time",
        "sleep",
        "visualization_msgs",
        "msg",
        "Marker",
        "MarkerArray",
        "sensor_msgs",
        "msg",
        "LaserScan",
        "tf",
        "sys",
        "numpy",
        "np",
        "Usat",
        "freq",
        "x_n",
        "y_n",
        "theta_n",
        "x_goal",
        "y_goal",
        "d",
        "Kp",
        "v_fw",
        "w_z",
        "goToGoal",
        "data",
        "x_n",
        "y_n",
        "theta_n",
        "data",
        "pose",
        "pose",
        "position",
        "x",
        "data",
        "pose",
        "pose",
        "position",
        "y",
        "data",
        "pose",
        "pose",
        "orientation",
        "x",
        "data",
        "pose",
        "pose",
        "orientation",
        "y",
        "data",
        "pose",
        "pose",
        "orientation",
        "z",
        "data",
        "pose",
        "pose",
        "orientation",
        "w",
        "euler_from_quaternion",
        "x_q",
        "y_q",
        "z_q",
        "w_q",
        "euler",
        "x_n",
        "y_n",
        "x_d",
        "y_d",
        "sqrt",
        "x_d",
        "x_n",
        "y_d",
        "y_n",
        "data",
        "v_fw",
        "w_z",
        "x_goal",
        "y_goal",
        "x_n",
        "y_n",
        "np",
        "around",
        "data",
        "angle_increment",
        "data",
        "angle_min",
        "index",
        "len",
        "data",
        "ranges",
        "data",
        "ranges",
        "index",
        "index",
        "angle_increment",
        "angle_min",
        "rho",
        "np",
        "cos",
        "theta",
        "x_n",
        "rho",
        "np",
        "sin",
        "theta",
        "y_n",
        "calcDistance",
        "x",
        "y",
        "x_goal",
        "y_goal",
        "laserData",
        "append",
        "rho",
        "theta",
        "x",
        "y",
        "d_followed",
        "x",
        "y",
        "heuristic",
        "laserData",
        "laserData",
        "Kp",
        "Usat",
        "v_fw",
        "w_z",
        "x_goal",
        "y_goal",
        "goToGoal",
        "laserData",
        "laserData",
        "i",
        "len",
        "laserData",
        "laserData",
        "i",
        "laserData",
        "i",
        "laserData",
        "i",
        "x_goal",
        "laserData",
        "i",
        "x_goal",
        "laserData",
        "i",
        "y_goal",
        "laserData",
        "i",
        "y_goal",
        "dist",
        "minDist",
        "dist",
        "i",
        "minIdx",
        "laserData",
        "minIdx",
        "laserData",
        "minIdx",
        "goToGoal",
        "refference_trajectory",
        "x_goal",
        "y_goal",
        "refference_trajectory",
        "laserData",
        "minIdx",
        "laserData",
        "minIdx",
        "trajectory_controller",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "Kp",
        "Usat",
        "feedback_linearization",
        "Ux",
        "Uy",
        "x_goal",
        "y_goal",
        "x_goal",
        "y_goal",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "Kp",
        "Usat",
        "x_n",
        "y_n",
        "theta_n",
        "Vx_ref",
        "Kp",
        "x_ref",
        "x_n",
        "Vy_ref",
        "Kp",
        "y_ref",
        "y_n",
        "sqrt",
        "Ux",
        "Uy",
        "absU",
        "Usat",
        "Usat",
        "Ux",
        "absU",
        "Usat",
        "Uy",
        "absU",
        "Ux",
        "Uy",
        "Ux",
        "Uy",
        "x_n",
        "y_n",
        "theta_n",
        "d",
        "cos",
        "theta_n",
        "Ux",
        "sin",
        "theta_n",
        "Uy",
        "sin",
        "theta_n",
        "d",
        "Ux",
        "cos",
        "theta_n",
        "d",
        "Uy",
        "VX",
        "WZ",
        "x_n",
        "y_n",
        "theta_n",
        "x_goal",
        "y_goal",
        "rospy",
        "init_node",
        "rospy",
        "Publisher",
        "Twist",
        "queue_size",
        "rospy",
        "Subscriber",
        "Odometry",
        "callback_pose",
        "rospy",
        "Subscriber",
        "LaserScan",
        "callback_laser",
        "rospy",
        "Rate",
        "freq",
        "Twist",
        "sleep",
        "rospy",
        "is_shutdown",
        "i",
        "vel",
        "linear",
        "v_fw",
        "vel",
        "angular",
        "w_z",
        "pub_stage",
        "publish",
        "vel",
        "rate",
        "sleep",
        "input",
        "split",
        "i",
        "i",
        "x_goal",
        "y_goal",
        "example",
        "rospy",
        "ROSInterruptException"
    ],
    "literals": [
        "'Idx:'",
        "' laser XY: '",
        "'goToGoal'",
        "'goToLaser'",
        "\"Q1_node\"",
        "\"/cmd_vel\"",
        "\"/base_pose_ground_truth\"",
        "\"/base_scan\"",
        "'__main__'",
        "'(x_goal, y_goal)'"
    ],
    "variables": [
        "Usat",
        "freq",
        "x_n",
        "y_n",
        "theta_n",
        "x_goal",
        "y_goal",
        "d",
        "Kp",
        "v_fw",
        "w_z",
        "goToGoal",
        "x_n",
        "y_n",
        "x_q",
        "y_q",
        "z_q",
        "w_q",
        "euler",
        "theta_n",
        "laserData",
        "angle_increment",
        "angle_min",
        "rho",
        "theta",
        "x",
        "y",
        "d_followed",
        "minDist",
        "minIdx",
        "dist",
        "goToGoal",
        "minDist",
        "minIdx",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "Ux",
        "Uy",
        "v_fw",
        "w_z",
        "x_ref",
        "y_ref",
        "Vx_ref",
        "Vy_ref",
        "Ux",
        "Uy",
        "absU",
        "Ux",
        "Uy",
        "VX",
        "WZ",
        "pub_stage",
        "rate",
        "vel",
        "i",
        "a",
        "i",
        "x",
        "z",
        "x_goal",
        "y_goal",
        "x_goal",
        "y_goal"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Frequencia de simulacao no stage",
        "Hz",
        "Estados do robo",
        "posicao x atual do robo",
        "posicao y atual do robo",
        "orientacao atual do robo",
        "Estados do robo",
        "Relativo ao feedback linearization",
        "Ganho atrativo e repulsivo",
        "Rotina callback para a obtencao da pose do robo",
        "posicao 'x' do robo no mundo",
        "posicao 'y' do robo no mundo",
        "orientaco 'theta' do robo no mundo",
        "print(v_fw, w_z)",
        "print('i:', i, 'dist: ',dist)",
        "Rotina para a geracao da entrada de controle",
        "Rotina feedback linearization",
        "Rotina primaria",
        "inicializa o no \"este no\"",
        "declaracao do topico para comando de velocidade",
        "declaracao do topico onde sera lido o estado do robo",
        "Define uma variavel que controlar a a frequencia de execucao deste no",
        "a = input('Digite os semieixos (a)')",
        "a = float(a)",
        "O programa do no consiste no codigo dentro deste while",
        "\"Enquanto o programa nao ser assassinado\"",
        "Incrementa o tempo",
        "Espera por um tempo de forma a manter a frequencia desejada",
        "Funcao inicial"
    ],
    "docstrings": [],
    "functions": [
        "callback_pose",
        "calcDistance",
        "callback_laser",
        "heuristic",
        "refference_trajectory",
        "trajectory_controller",
        "feedback_linearization",
        "example"
    ],
    "classes": []
}