{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "datetime",
        "datetime",
        "timezone",
        "statsmodels",
        "formula",
        "api",
        "smf",
        "sklearn",
        "model_selection",
        "train_test_split",
        "statsmodels",
        "api",
        "sm",
        "pd",
        "to_datetime",
        "pd",
        "to_datetime",
        "pd",
        "to_datetime",
        "pd",
        "to_datetime",
        "df",
        "train_test_split",
        "df",
        "test_size",
        "random_state",
        "X_train",
        "plot",
        "x",
        "y",
        "kind",
        "smf",
        "ols",
        "formula",
        "data",
        "X_train",
        "mod",
        "fit",
        "res",
        "summary",
        "sm",
        "add_constant",
        "X_test",
        "res",
        "predict",
        "X_test",
        "np",
        "sqrt",
        "np",
        "mean",
        "np",
        "square",
        "ynewpred",
        "X_test",
        "velos",
        "rms_test",
        "res",
        "rms_test",
        "pd",
        "read_csv",
        "sep",
        "wetter_hour_df",
        "wetter_hour_df",
        "copy",
        "deep",
        "wetter_hour_df",
        "apply",
        "splitStringDate",
        "wetter_hour_df",
        "pd",
        "read_csv",
        "sep",
        "pd",
        "read_csv",
        "sep",
        "pd",
        "concat",
        "wetter_daily_df",
        "wetter_daily2_df",
        "superwetter",
        "superwetter",
        "copy",
        "deep",
        "superwetter",
        "apply",
        "splitStringDate",
        "wetter_hour_df",
        "wetter_hour_df",
        "stgallen_df",
        "iloc",
        "stgallen_df",
        "shape",
        "df_daily_Wetter",
        "pd",
        "read_csv",
        "sep",
        "wetter_temp_df",
        "wetter_temp_df",
        "copy",
        "deep",
        "stg_temp_df",
        "apply",
        "splitStringDate",
        "stg_temp_df",
        "apply",
        "splitStringDate4",
        "stg_temp_df",
        "stg_temp_df",
        "dt",
        "hour",
        "stg_temp_df",
        "dt",
        "hour",
        "stg_temp_df",
        "wetter_temp_df",
        "copy",
        "deep",
        "pd",
        "to_numeric",
        "stg_temp_df",
        "stg_temp_df",
        "groupby",
        "as_index",
        "agg",
        "pd",
        "read_csv",
        "sep",
        "df_velos",
        "sort_values",
        "by",
        "df_velos",
        "apply",
        "splitStringDate2",
        "df_velos",
        "dt",
        "date",
        "df_velos",
        "groupby",
        "as_index",
        "agg",
        "superwetter",
        "set_index",
        "df_daily_Wetter",
        "set_index",
        "superwetter",
        "superwetter",
        "pd",
        "merge",
        "superwetter",
        "df_daily_Wetter",
        "left_index",
        "right_index",
        "pd",
        "merge",
        "ultra_df",
        "temp_mean",
        "left_index",
        "right_index",
        "superwetter",
        "head",
        "df_daily_Wetter",
        "head",
        "ultra_df",
        "index",
        "ultra_df",
        "replace",
        "mapping2",
        "mapping2",
        "mapping2",
        "mapping2",
        "mapping2",
        "mapping2",
        "pd",
        "to_numeric",
        "ultra_df",
        "pd",
        "to_numeric",
        "ultra_df",
        "pd",
        "to_numeric",
        "ultra_df",
        "pd",
        "to_numeric",
        "ultra_df",
        "ultra_df",
        "rename",
        "columns",
        "n_map",
        "index",
        "row",
        "strassen",
        "iterrows",
        "index",
        "df_velos",
        "df_velos",
        "strasse",
        "df_velos_f",
        "groupby",
        "as_index",
        "agg",
        "df2",
        "set_index",
        "plt",
        "subplots",
        "figsize",
        "ax",
        "plot",
        "df2",
        "index",
        "df2",
        "ax",
        "set_title",
        "strasse",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "pd",
        "merge",
        "df2",
        "ultra_df",
        "left_index",
        "right_index",
        "super_df",
        "ultra_mega_df",
        "rename",
        "columns",
        "n_map",
        "ultra_mega_df",
        "replace",
        "mapping",
        "strasse",
        "make_regression",
        "ultra_mega_df",
        "model",
        "error"
    ],
    "literals": [
        "f\"{string[0:4]}.{string[4:6]}.{string[6:8]}.{string[8:10]}\"",
        "f\"{string[0:4]}.{string[5:7]}.{string[8:10]}.{string[11:13]}\"",
        "f\"{string[0:4]}.{string[5:7]}.{string[8:10]}\"",
        "f\"{string[0:4]}.{string[4:6]}.{string[6:8]}\"",
        "'temp'",
        "'velos'",
        "'scatter'",
        "'velos ~ Arbeitstag + sonne * temp + regen + np.power(regen,2) + schnee + sonne*regen + np.power(temp,2)'",
        "'Wetter_Daten_Stündlich.csv'",
        "\";\"",
        "'stn'",
        "'STG'",
        "\"date\"",
        "\"time\"",
        "'Wetter_Daten_Täglich.csv'",
        "\";\"",
        "'Wetter_Daten_Täglich2.csv'",
        "\";\"",
        "'stn'",
        "'STG'",
        "\"date\"",
        "\"time\"",
        "'stn'",
        "'STG'",
        "'Wetter_Temperatur.csv'",
        "\";\"",
        "'stn'",
        "'STG'",
        "\"timer\"",
        "\"time\"",
        "\"date\"",
        "\"time\"",
        "'timer'",
        "'timer'",
        "'tre200h0'",
        "'-'",
        "\"tre200h0\"",
        "\"tre200h0\"",
        "'date'",
        "'tre200h0'",
        "'mean'",
        "'Veloo'",
        "'velozahlungen-stadt-stgallen.csv'",
        "\";\"",
        "'Datum'",
        "'Time'",
        "\"Datum\"",
        "'Date'",
        "\"Time\"",
        "'Bezeichnung'",
        "'Anzahl Velos'",
        "'sum'",
        "'Veloo fertig'",
        "'date'",
        "'date'",
        "'stn'",
        "'STG'",
        "'date'",
        "'-'",
        "'rre024i0'",
        "'rre024i0'",
        "'sremaxdv'",
        "'hns000j0'",
        "'ure200d0'",
        "'htoautj0'",
        "'rre024i0'",
        "'rre024i0'",
        "'sremaxdv'",
        "'sremaxdv'",
        "'hns000j0'",
        "'hns000j0'",
        "'htoautj0'",
        "'htoautj0'",
        "'Anzahl Velos'",
        "'velos'",
        "'tre200h0'",
        "'temp'",
        "'rre024i0'",
        "'regen'",
        "'sremaxdv'",
        "'sonne'",
        "'hns000j0'",
        "'neuschnee'",
        "'ure200d0'",
        "'feuchtigkeit'",
        "'htoautj0'",
        "'schnee'",
        "'iter'",
        "'Bezeichnung'",
        "'Date'",
        "'Arbeitstag'",
        "'Anzahl Velos'",
        "'sum'",
        "'Date'",
        "'Anzahl Velos'",
        "'Date'",
        "'Number of velos'",
        "'Anzahl Velos'",
        "'date'",
        "'Arbeitstag'",
        "'temp'",
        "'regen'",
        "'sonne'",
        "'neuschnee'",
        "'feuchtigkeit'",
        "'schnee'",
        "'Anzahl Velos'",
        "'velos'",
        "'tre200h0'",
        "'temp'",
        "'rre024i0'",
        "'regen'",
        "'sremaxdv'",
        "'sonne'",
        "'hns000j0'",
        "'neuschnee'",
        "'ure200d0'",
        "'feuchtigkeit'",
        "'htoautj0'",
        "'schnee'",
        "'Wochenende'",
        "'Werktage'",
        "'Arbeitstag'",
        "f'======Strasse: {strasse}======'"
    ],
    "variables": [
        "X_train",
        "X_test",
        "mod",
        "res",
        "X_test",
        "ynewpred",
        "rms_test",
        "wetter_hour_df",
        "wetter_hour_df",
        "wetter_hour_df",
        "wetter_daily_df",
        "wetter_daily2_df",
        "superwetter",
        "superwetter",
        "superwetter",
        "stgallen_df",
        "df_daily_Wetter",
        "wetter_temp_df",
        "stg_temp_df",
        "stg_temp_df",
        "stg_temp_df",
        "stg_temp_df",
        "stg_temp_df",
        "stg_temp_df",
        "temp_mean",
        "df_velos",
        "df_velos",
        "df_velos",
        "df_velos",
        "strassen",
        "superwetter",
        "df_daily_Wetter",
        "superwetter",
        "ultra_df",
        "ultra_df",
        "ultra_df",
        "mapping2",
        "ultra_df",
        "ultra_df",
        "ultra_df",
        "ultra_df",
        "ultra_df",
        "n_map",
        "ultra_df",
        "models",
        "errors",
        "strasse",
        "df_velos_f",
        "df2",
        "df2",
        "fig",
        "ax",
        "super_df",
        "ultra_mega_df",
        "n_map",
        "ultra_mega_df",
        "mapping",
        "ultra_mega_df",
        "model",
        "error",
        "models",
        "strasse",
        "errors",
        "strasse"
    ],
    "comments": [
        "!/usr/bin/env python",
        "coding: utf-8",
        "mod = smf.ols(formula='velos ~ temp + np.power(temp,2)', data=X_train)",
        "df_velos['Date'] = df_velos[\"Datum\"].apply(splitStringDate3)",
        "df_velos =  df_velos[df_velos['Bezeichnung']=='Museumstrasse']",
        "df_velos =  df_velos[df_velos['Bezeichnung']=='Rosenbergstrasse Veloweg']",
        "df_velos",
        "= pd.merge(super_df, maxi_df, left_index=True, right_index=True)",
        "ultra_mega_df = ultra_df[['Anzahl Velos', 'date', 'Arbeitstag', 'tre200h0', 'rre024i0', 'sremaxdv', 'hns000j0', 'ure200d0', 'htoautj0']]"
    ],
    "docstrings": [
        "'''\n    fig, ax = plt.subplots()\n    ax.plot(X_test['temp'], X_test['velos'], 'o', label='Test Data')\n    ax.plot(np.linspace(-15,30,100), np.linspace(-15,30,100)*res.params['temp'] + res.params['Intercept'], label='Learned Model')\n    ax.legend(loc=\"best\")\n    ax.set_title('Velos related to Temperature')\n\n    fig, ax = plt.subplots()\n    ax.plot(X_test['temp'], X_test['velos'], 'o', label='Test Data')\n    ax.plot(np.linspace(-15,30,100), np.linspace(-15,30,100)*(res.params['temp'] + np.linspace(0,30,100) * res.params['np.power(temp, 2)'])  + res.params['Intercept'], label='Learned Model')\n    ax.legend(loc=\"best\")\n    ax.set_title('Velos related to Temperature')\n    '''"
    ],
    "functions": [
        "splitStringDate",
        "splitStringDate2",
        "splitStringDate3",
        "splitStringDate4",
        "make_regression"
    ],
    "classes": []
}