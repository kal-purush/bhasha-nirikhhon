{
    "identifiers": [
        "nums",
        "java",
        "util",
        "Arrays",
        "args",
        "nums1",
        "nums2",
        "merge",
        "nums1",
        "nums2",
        "i",
        "nums1",
        "i",
        "nums1",
        "m",
        "nums2",
        "n",
        "arraycopy",
        "nums2",
        "nums1",
        "m",
        "n",
        "Arrays",
        "sort",
        "nums1",
        "nums1",
        "m",
        "nums2",
        "n",
        "p1",
        "m",
        "p2",
        "n",
        "p",
        "m",
        "n",
        "p1",
        "p2",
        "nums1",
        "p",
        "nums1",
        "p1",
        "nums2",
        "p2",
        "nums2",
        "p2",
        "nums1",
        "p1",
        "arraycopy",
        "nums2",
        "nums1",
        "p2"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "返回的还是nums1",
        "指针先指向最后一个元素的索引,然后慢慢向前移动，当索引<0时结束循环",
        "如果两个数组的长度不一致",
        "最后一个参数代表的是元素的个数，所以要索引+1"
    ],
    "docstrings": [
        "*  需求：两个有序数组nums和nums2将nums2合并到nums1中，使得nums1成为一个有序数组\n *\n *",
        "* 假设nums1的空间大小等于m+n就可以有足够的空间\n     * 合并后再排序\n     * @param nums1\n     * @param m 已经排好序的元素的个数\n     * @param nums2\n     * @param n",
        "* 利用双指针，从后往前\n     * @param nums1\n     * @param m\n     * @param nums2\n     * @param n",
        "* 退出循环之后，其中一个数组必定排序完成，剩余数组的元素本就是排序好的数组，只需将数组2中剩余的元素直接copy\n         * 如果剩余的是p2,直接copy到最前面，如果剩余的是p1就不需要再排了，（因为本来就在数组一中操作）"
    ],
    "functions": [
        "main",
        "merge",
        "mergeDouble"
    ],
    "classes": [
        "Mergesz"
    ]
}