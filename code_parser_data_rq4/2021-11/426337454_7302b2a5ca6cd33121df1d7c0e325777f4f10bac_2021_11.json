{
    "identifiers": [
        "os",
        "sys",
        "path",
        "config",
        "cfg",
        "utils",
        "setup_logger",
        "torch",
        "utils",
        "collect_env",
        "get_pretty_env_info",
        "data",
        "make_data_loader",
        "load_dataset",
        "model",
        "build_model",
        "sklearn",
        "metrics",
        "matthews_corrcoef",
        "f1_score",
        "roc_auc_score",
        "accuracy_score",
        "precision_score",
        "recall_score",
        "imblearn",
        "metrics",
        "geometric_mean_score",
        "specificity_score",
        "sensitivity_score",
        "sklearn",
        "metrics",
        "balanced_accuracy_score",
        "argparse",
        "os",
        "torch",
        "numpy",
        "np",
        "tqdm",
        "cfg",
        "model",
        "cfg",
        "OPTIMIZER",
        "NAME",
        "torch",
        "optim",
        "Adam",
        "model",
        "downsample",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "FE_LR",
        "model",
        "set_conv",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "FE_LR",
        "model",
        "fc",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "BASE_LR",
        "betas",
        "cfg",
        "OPTIMIZER",
        "BETAS",
        "weight_decay",
        "cfg",
        "OPTIMIZER",
        "WEIGHT_DECAY",
        "cfg",
        "OPTIMIZER",
        "NAME",
        "torch",
        "optim",
        "SGD",
        "model",
        "downsample",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "FE_LR",
        "model",
        "set_conv",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "FE_LR",
        "model",
        "fc",
        "parameters",
        "cfg",
        "OPTIMIZER",
        "BASE_LR",
        "momentum",
        "cfg",
        "OPTIMIZER",
        "MOMENTUM",
        "weight_decay",
        "cfg",
        "OPTIMIZER",
        "WEIGHT_DECAY",
        "NotImplementedError",
        "format",
        "cfg",
        "OPTIMIZER",
        "NAME",
        "optimizer",
        "cfg",
        "optimizer",
        "torch",
        "optim",
        "lr_scheduler",
        "CosineAnnealingLR",
        "optimizer",
        "T_max",
        "cfg",
        "OPTIMIZER",
        "MAX_EPOCH",
        "cfg",
        "DATALOADER",
        "NUM_BATCH",
        "lr_scheduler",
        "cfg",
        "model",
        "train_loader",
        "valid_loader",
        "save",
        "torch",
        "nn",
        "CrossEntropyLoss",
        "make_optimizer",
        "cfg",
        "model",
        "make_lr_scheduler",
        "cfg",
        "optimizer",
        "epoch",
        "cfg",
        "OPTIMIZER",
        "MAX_EPOCH",
        "tqdm",
        "tqdm",
        "train_loader",
        "i",
        "x",
        "y",
        "loader",
        "x",
        "to",
        "cfg",
        "DEVICE",
        "y",
        "to",
        "cfg",
        "DEVICE",
        "torch",
        "unique",
        "y",
        "torch",
        "arange",
        "len",
        "y",
        "c",
        "classes",
        "idx",
        "y",
        "c",
        "len",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "x",
        "support_idx",
        "x",
        "query_idx",
        "view",
        "model",
        "support",
        "support_set",
        "append",
        "support",
        "model",
        "query",
        "query_set",
        "append",
        "query",
        "torch",
        "cat",
        "support_set",
        "dim",
        "torch",
        "cat",
        "query_set",
        "dim",
        "torch",
        "matmul",
        "query_set",
        "support_set",
        "t",
        "criterion",
        "logit",
        "classes",
        "epoch_loss",
        "loss",
        "item",
        "iters",
        "loader",
        "set_description",
        "format",
        "epoch",
        "loss",
        "item",
        "epoch_loss",
        "iters",
        "optimizer",
        "zero_grad",
        "loss",
        "backward",
        "retain_graph",
        "optimizer",
        "step",
        "lr_scheduler",
        "step",
        "save",
        "format",
        "cfg",
        "OUTPUT_DIR",
        "cfg",
        "DATASET",
        "TRAIN",
        "format",
        "epoch",
        "torch",
        "save",
        "model",
        "format",
        "cfg",
        "OUTPUT_DIR",
        "cfg",
        "DATASET",
        "TRAIN",
        "format",
        "epoch",
        "model",
        "eval",
        "test",
        "cfg",
        "model",
        "valid_loader",
        "device",
        "cfg",
        "DEVICE",
        "min",
        "f1",
        "gmean",
        "auc",
        "specificity",
        "sensitivity",
        "score",
        "score",
        "best_score",
        "epoch",
        "score",
        "model",
        "train",
        "best_epoch",
        "cfg",
        "model",
        "test_loader",
        "pos_classes",
        "cfg",
        "MODEL",
        "MINORITY_CLASS",
        "device",
        "pos_classes",
        "model",
        "to",
        "device",
        "model",
        "anchor",
        "to",
        "device",
        "model",
        "eval",
        "torch",
        "no_grad",
        "load_dataset",
        "cfg",
        "np",
        "unique",
        "y",
        "c",
        "classes",
        "sum",
        "y",
        "c",
        "len",
        "y",
        "cfg",
        "TEST",
        "TRAIN_SAMPLE_SIZE",
        "np",
        "arange",
        "len",
        "y",
        "train_sample_size",
        "c",
        "classes",
        "idx",
        "y",
        "c",
        "np",
        "random",
        "shuffle",
        "cls_idx",
        "cls_idx",
        "min",
        "max",
        "train_sample_size",
        "cls_ratio",
        "c",
        "remain_size",
        "remain_size",
        "len",
        "sampled_idx",
        "x",
        "sampled_idx",
        "torch",
        "from_numpy",
        "samples",
        "to",
        "device",
        "model",
        "samples",
        "cls_embedding",
        "append",
        "embedding",
        "labels",
        "append",
        "c",
        "torch",
        "cat",
        "cls_embedding",
        "dim",
        "tqdm",
        "tqdm",
        "test_loader",
        "i",
        "x",
        "y",
        "test_loader",
        "x",
        "to",
        "device",
        "y",
        "to",
        "device",
        "model",
        "x",
        "torch",
        "softmax",
        "torch",
        "matmul",
        "emb",
        "cls_embedding",
        "t",
        "dim",
        "labels",
        "torch",
        "argmax",
        "rel_score",
        "dim",
        "predictions",
        "append",
        "predict_cls",
        "item",
        "ground_truths",
        "append",
        "y",
        "item",
        "scores",
        "append",
        "rel_score",
        "geometric_mean_score",
        "ground_truths",
        "predictions",
        "average",
        "f1_score",
        "ground_truths",
        "predictions",
        "average",
        "roc_auc_score",
        "ground_truths",
        "scores",
        "average",
        "specificity_score",
        "ground_truths",
        "predictions",
        "average",
        "sensitivity_score",
        "ground_truths",
        "predictions",
        "average",
        "format",
        "f1",
        "gmean",
        "auc",
        "specificity",
        "sensitivity",
        "f1",
        "gmean",
        "auc",
        "specificity",
        "sensitivity",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "parse_args",
        "cfg",
        "merge_from_file",
        "args",
        "config_file",
        "cfg",
        "freeze",
        "os",
        "path",
        "exists",
        "cfg",
        "OUTPUT_DIR",
        "os",
        "makedirs",
        "cfg",
        "OUTPUT_DIR",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "cfg",
        "OUTPUT_DIR",
        "cfg",
        "DATASET",
        "TRAIN",
        "os",
        "makedirs",
        "os",
        "path",
        "join",
        "cfg",
        "OUTPUT_DIR",
        "cfg",
        "DATASET",
        "TRAIN",
        "setup_logger",
        "cfg",
        "OUTPUT_DIR",
        "logger",
        "info",
        "logger",
        "info",
        "get_pretty_env_info",
        "logger",
        "info",
        "format",
        "args",
        "config_file",
        "open",
        "args",
        "config_file",
        "f",
        "f",
        "read",
        "config_str",
        "strip",
        "logger",
        "info",
        "config_str",
        "logger",
        "info",
        "logger",
        "info",
        "cfg",
        "cfg",
        "SEED",
        "logger",
        "info",
        "format",
        "cfg",
        "SEED",
        "torch",
        "manual_seed",
        "cfg",
        "SEED",
        "torch",
        "cuda",
        "manual_seed",
        "cfg",
        "SEED",
        "torch",
        "backends",
        "cudnn",
        "torch",
        "backends",
        "cudnn",
        "np",
        "random",
        "seed",
        "cfg",
        "SEED",
        "logger",
        "info",
        "torch",
        "backends",
        "cudnn",
        "make_data_loader",
        "cfg",
        "is_train",
        "is_valid",
        "make_data_loader",
        "cfg",
        "is_train",
        "is_valid",
        "make_data_loader",
        "cfg",
        "is_train",
        "is_valid",
        "build_model",
        "cfg",
        "to",
        "cfg",
        "DEVICE",
        "logger",
        "info",
        "model",
        "logger",
        "info",
        "train",
        "cfg",
        "model",
        "train_loader",
        "valid_loader",
        "save",
        "logger",
        "info",
        "format",
        "best_epoch",
        "torch",
        "load",
        "format",
        "cfg",
        "OUTPUT_DIR",
        "cfg",
        "DATASET",
        "TRAIN",
        "format",
        "best_name",
        "logger",
        "info",
        "format",
        "best_name",
        "test",
        "cfg",
        "best_model",
        "test_loader",
        "logger",
        "info",
        "main"
    ],
    "literals": [
        "'adam'",
        "'params'",
        "'lr'",
        "'params'",
        "'lr'",
        "'params'",
        "'lr'",
        "'sgd'",
        "'params'",
        "'lr'",
        "'params'",
        "'lr'",
        "'params'",
        "'lr'",
        "\"{} is not supported yet\"",
        "''",
        "'Epoch: {} Batch Loss={:.2f} Avg Epoch Loss={:.2f}'",
        "\"Saving model to {}/{}/{}\"",
        "'Epoch_{}.pth'",
        "'{}/{}/{}'",
        "'Epoch_{}.pth'",
        "\"Evaluating on Validation Dataset\"",
        "\"score: \"",
        "'cpu'",
        "\"Minority Classes: \"",
        "'binary'",
        "'macro'",
        "'macro'",
        "'binary'",
        "'binary'",
        "\"F1: {:.5f} | G-Mean:{:.5f} | AUC: {:.5f} | Spec: {:.5f} | Sens: {:.5f}\"",
        "'PyTorch Imbalanced Metric Learning'",
        "'--config-file'",
        "'../configs/default.yaml'",
        "'FILE'",
        "'path to configuration file'",
        "'Imbalanced'",
        "\"Collecting env info (may take some time)\\n\"",
        "\"Loading configuration file from {}\"",
        "'\\n'",
        "'Running with configuration: \\n'",
        "\"Using manual seed: {}\"",
        "\"Using random seed\"",
        "\"Start Training ...\"",
        "\"Done.\"",
        "'Epoch_{}'",
        "'{}/{}/{}'",
        "'{}.pth'",
        "\"Best Model Name: {} - Start Evaluation ...\"",
        "\"Done.\"",
        "'__main__'"
    ],
    "variables": [
        "optimizer",
        "optimizer",
        "lr_scheduler",
        "best_epoch",
        "best_score",
        "criterion",
        "optimizer",
        "lr_scheduler",
        "loader",
        "epoch_loss",
        "iters",
        "x",
        "y",
        "classes",
        "idx",
        "support_set",
        "query_set",
        "tmp",
        "support_idx",
        "query_idx",
        "support_idx",
        "query_idx",
        "support",
        "query",
        "support",
        "query",
        "support_set",
        "query_set",
        "logit",
        "loss",
        "f1",
        "gmean",
        "auc",
        "specificity",
        "sensitivity",
        "score",
        "best_epoch",
        "best_score",
        "model",
        "model",
        "anchor",
        "cls_embedding",
        "labels",
        "x",
        "y",
        "classes",
        "cls_ratio",
        "cls_ratio",
        "c",
        "train_sample_size",
        "idx",
        "remain_size",
        "cls_idx",
        "sampled_idx",
        "samples",
        "samples",
        "embedding",
        "cls_embedding",
        "test_loader",
        "predictions",
        "ground_truths",
        "scores",
        "x",
        "y",
        "emb",
        "rel_score",
        "predict_cls",
        "gmean",
        "f1",
        "auc",
        "specificity",
        "sensitivity",
        "parser",
        "args",
        "logger",
        "config_str",
        "config_str",
        "deterministic",
        "benchmark",
        "benchmark",
        "train_loader",
        "valid_loader",
        "test_loader",
        "model",
        "best_epoch",
        "best_name",
        "best_model"
    ],
    "comments": [
        "loss function",
        "create optimizer",
        "create learning rate scheduler",
        "separate data from different classes",
        "if this batch contains only 1 instance for a minority class",
        "compute prediction probability for all the queries",
        "backward",
        "save model for every epoch",
        "TODO: figure out which model is better and save it",
        "model evaluation",
        "score = f1 * gmean * auc * specificity * sensitivity",
        "load training dataset",
        "randomly sample some samples and matins the class ratio in it",
        "get embedding",
        "print(sampled_idx)",
        "print(\"cls1\",embedding.shape)",
        "start evaluation on test dataset",
        "print(\"emb\",emb.shape)",
        "print(\"cls\", cls_embedding.t().shape)",
        "print(\"rel\",rel_score.shape)",
        "print(labels)",
        "print(torch.argmax(rel_score, dim=1))",
        "compute metrics",
        "print(args.config_file)",
        "create output dir",
        "set up logger",
        "set random seed for pytorch and numpy",
        "load best model on validation dataset",
        "please specify the best model, by default, it is the one with best G-Mean",
        "best_model = torch.load('./tools/AmzSoftwares/Epoch_6.pth')",
        "best_model = model"
    ],
    "docstrings": [
        "\"\"\"post-training step\"\"\"",
        "\"\"\"test\"\"\"",
        "'''\n        import pandas as pd\n        predDF = pd.DataFrame(predictions)\n        gtDF = pd.DataFrame( ground_truths )\n        predDF.to_csv(\"./pre.csv\",header=None,index=False)\n        gtDF.to_csv('./groudTrue.csv',header=None,index=False)\n        '''"
    ],
    "functions": [
        "make_optimizer",
        "make_lr_scheduler",
        "train",
        "test",
        "main"
    ],
    "classes": []
}