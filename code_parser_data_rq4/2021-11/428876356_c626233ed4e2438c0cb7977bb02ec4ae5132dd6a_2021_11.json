{
    "identifiers": [
        "node",
        "Node",
        "elem",
        "head",
        "head",
        "pointer",
        "next",
        "pointer",
        "next",
        "Node",
        "elem",
        "Node",
        "elem",
        "_size",
        "_size",
        "index",
        "index",
        "elem",
        "index",
        "head",
        "i",
        "index",
        "pointer",
        "pointer",
        "next",
        "Indexerror",
        "pointer",
        "pointer",
        "data",
        "Indexerror",
        "index",
        "elem",
        "head",
        "i",
        "index",
        "pointer",
        "pointer",
        "next",
        "Indexerror",
        "pointer",
        "elem",
        "Indexerror",
        "elem",
        "head",
        "pointer",
        "pointer",
        "data",
        "elem",
        "i",
        "pointer",
        "next",
        "i",
        "ValueError",
        "elem",
        "lista",
        "append",
        "lista",
        "append"
    ],
    "literals": [
        "\"list index out of range\"",
        "\"list out of range\"",
        "\"list out of range\"",
        "\"list out of range\"",
        "f\"{elem} não está na lista\""
    ],
    "variables": [
        "head",
        "_size",
        "pointer",
        "pointer",
        "pointer",
        "next",
        "head",
        "pointer",
        "pointer",
        "pointer",
        "pointer",
        "pointer",
        "data",
        "pointer",
        "i",
        "pointer",
        "lista"
    ],
    "comments": [
        "sequencial = []",
        "sequencial.append(7) # add 7 ao final da lista / reproduzir na lista encadeada",
        "head identifica o primeiro elemento da lista",
        "O tamanho da lista tbm pode ser obtido percorrendo a lista",
        "função que permite add itens ao final da lista",
        "Complexidade O(n) - pior caso",
        "primeira inserção",
        "Complexidade O(1)",
        "Retorna o tamanho da lista",
        "usa-se o inderline pra indicar que esta variável não deve ser acessada diretamente",
        "Para acessar um elemento na lista",
        "a = lista.get(9)",
        "Altera elemento",
        "lista.set(5, 9)",
        "Complexidade O(n)",
        "a = lista(9)",
        "Complexidade O(n)",
        "lista(5) = 9",
        "lista.set(5, 9) Sem sobrecarga de operador. Criando a função set acima",
        "Complexidade O(n)"
    ],
    "docstrings": [
        "\"\"\"Retorna o indice do elemento na lista\"\"\""
    ],
    "functions": [
        "append",
        "__len__",
        "get",
        "_set",
        "__getitem__",
        "__setitem__",
        "index"
    ],
    "classes": []
}