{
    "identifiers": [
        "json",
        "requests",
        "auth",
        "time",
        "re",
        "requests",
        "cv2",
        "pytesseract",
        "datetime",
        "datetime",
        "os",
        "os",
        "system",
        "obj",
        "json",
        "dumps",
        "obj",
        "sort_keys",
        "indent",
        "text",
        "pytesseract",
        "pytesseract",
        "open",
        "f",
        "x",
        "rstrip",
        "split",
        "x",
        "f",
        "requests",
        "auth",
        "HTTPBasicAuth",
        "login",
        "login",
        "login",
        "login",
        "requests",
        "post",
        "reqtok",
        "auth",
        "auth",
        "data",
        "data",
        "headers",
        "headers",
        "time",
        "time",
        "res",
        "json",
        "res",
        "json",
        "headers",
        "Token",
        "time",
        "time",
        "t",
        "Val",
        "requests",
        "get",
        "newurl1",
        "headers",
        "headers",
        "params1",
        "requests",
        "get",
        "newurl2",
        "headers",
        "headers",
        "params2",
        "lastposts1",
        "json",
        "lastposts2",
        "json",
        "lastposts1",
        "json",
        "lastposts2",
        "json",
        "before1",
        "before2",
        "x",
        "thelist",
        "x",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "re",
        "sub",
        "title",
        "x",
        "x",
        "x",
        "d",
        "termlist",
        "re",
        "search",
        "d",
        "title",
        "re",
        "I",
        "re",
        "search",
        "title",
        "historytitl",
        "titlematch",
        "append",
        "re",
        "search",
        "d",
        "title",
        "re",
        "I",
        "group",
        "len",
        "titlematch",
        "re",
        "search",
        "title",
        "historytitl",
        "title",
        "datetime",
        "fromtimestamp",
        "postime",
        "url",
        "playsound",
        "len",
        "re",
        "findall",
        "body",
        "re",
        "I",
        "re",
        "search",
        "title",
        "historytitl",
        "bodymatch",
        "append",
        "re",
        "findall",
        "body",
        "re",
        "I",
        "len",
        "bodymatch",
        "re",
        "search",
        "title",
        "historytitl",
        "title",
        "datetime",
        "fromtimestamp",
        "postime",
        "body",
        "url",
        "bodymatch",
        "playsound",
        "x",
        "len",
        "titlematch",
        "len",
        "bodymatch",
        "x",
        "x",
        "re",
        "sub",
        "imgurl",
        "imgurl",
        "re",
        "search",
        "imgurl",
        "group",
        "re",
        "sub",
        "format",
        "requests",
        "get",
        "imgurl",
        "content",
        "format",
        "open",
        "img_name",
        "handler",
        "handler",
        "write",
        "img_data",
        "cv2",
        "imread",
        "img_name",
        "pytesseract",
        "image_to_string",
        "image",
        "re",
        "findall",
        "text",
        "re",
        "I",
        "codefromimg",
        "title",
        "url",
        "codefromimg",
        "playsound",
        "len",
        "titlematch",
        "len",
        "bodymatch",
        "x",
        "x",
        "keys",
        "ig",
        "imgs",
        "x",
        "ig",
        "re",
        "sub",
        "imgurl",
        "imgurl",
        "re",
        "search",
        "imgurl",
        "group",
        "re",
        "sub",
        "format",
        "requests",
        "get",
        "imgurl",
        "content",
        "format",
        "open",
        "img_name",
        "handler",
        "handler",
        "write",
        "img_data",
        "cv2",
        "imread",
        "img_name",
        "pytesseract",
        "image_to_string",
        "image",
        "re",
        "findall",
        "text",
        "re",
        "I",
        "codefromimg",
        "title",
        "url",
        "codefromimg",
        "playsound",
        "re",
        "search",
        "title",
        "historytitl",
        "historytitl",
        "title",
        "k",
        "i",
        "len",
        "re",
        "split",
        "historytitl",
        "i",
        "analyz",
        "time",
        "sleep"
    ],
    "literals": [
        "'spd-say \"code potentially found\"'",
        "'/home/thejhoule/projects/redditcraw/venv/bin/pytesseract'",
        "'config.txt'",
        "'r'",
        "'='",
        "'https://oauth.reddit.com/r/MagicArena/new'",
        "'https://oauth.reddit.com/r/magicTCG/new'",
        "\"https://www.reddit.com/api/v1/access_token\"",
        "'appid'",
        "'secrt'",
        "'grant_type'",
        "'password'",
        "'username'",
        "'name'",
        "'password'",
        "'pass'",
        "'User-Agent'",
        "'PreReleaseCodesHunter/0.0.1'",
        "'extra'",
        "'prerelease'",
        "'enjoy!?\\b'",
        "'codes?'",
        "'spare'",
        "'kaldheim.*codes?'",
        "'pre release'",
        "'pre-release'",
        "'free.*packs?'",
        "'promo'",
        "'don\\'?t.*play.*arena'",
        "''",
        "'expires_in'",
        "'access_token'",
        "'Authorization'",
        "f\"bearer {Token}\"",
        "'data'",
        "'children'",
        "'data'",
        "'children'",
        "'data'",
        "'before'",
        "'data'",
        "'before'",
        "'before'",
        "f'{before1}'",
        "'before'",
        "f'{before2}'",
        "'data'",
        "'title'",
        "'\\)'",
        "''",
        "'\\('",
        "''",
        "'\\?'",
        "''",
        "'\\?'",
        "''",
        "'\\+'",
        "''",
        "'\\*'",
        "''",
        "'\\.'",
        "''",
        "'\\$'",
        "''",
        "'\\|'",
        "''",
        "'\\{'",
        "''",
        "'}'",
        "''",
        "'\\^'",
        "''",
        "']'",
        "''",
        "'\\['",
        "''",
        "'data'",
        "'url'",
        "'data'",
        "'selftext'",
        "'data'",
        "'created'",
        "'Match at post: '",
        "f'{title}'",
        "f'. At time: {str(datetime.fromtimestamp(postime))}\\n'",
        "'Link: '",
        "f' {url}\\n'",
        "'..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?'",
        "'..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?'",
        "'Match at post: '",
        "f'{title}'",
        "f'. At time: {str(datetime.fromtimestamp(postime))}\\n'",
        "'raw text: '",
        "f'{body}\\n'",
        "'Link: '",
        "f' {url}\\n'",
        "'codes found: '",
        "f'{bodymatch}\\n'",
        "'preview'",
        "'data'",
        "'data'",
        "'preview'",
        "'enabled'",
        "'data'",
        "'preview'",
        "'images'",
        "'source'",
        "'url'",
        "'amp;'",
        "''",
        "f'Image link: {imgurl}'",
        "'\\.\\D\\D\\D\\D?\\?'",
        "'\\?'",
        "''",
        "f'image{format}'",
        "'wb'",
        "'..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?'",
        "'Match at post: '",
        "f'{title}\\n'",
        "'Link: '",
        "f' {url}\\n'",
        "'codes found: '",
        "f'{codefromimg}\\n'",
        "'media_metadata'",
        "'data'",
        "'data'",
        "'media_metadata'",
        "'data'",
        "'media_metadata'",
        "'s'",
        "'u'",
        "'amp;'",
        "''",
        "f'Image link: {imgurl}'",
        "'\\.\\D\\D\\D\\D?\\?'",
        "'\\?'",
        "''",
        "f'image{format}'",
        "'wb'",
        "'..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?-..?.?.?.?.?'",
        "'Match at post: '",
        "f'{title}\\n'",
        "'Link: '",
        "f' {url}\\n'",
        "'codes found: '",
        "f'{codefromimg}\\n'",
        "f'{title}'",
        "' ; '",
        "';'",
        "f'Posts found: {i}. Posts analysed {analyz}'"
    ],
    "variables": [
        "text",
        "tesseract_cmd",
        "login",
        "newurl1",
        "newurl2",
        "reqtok",
        "auth",
        "data",
        "headers",
        "i",
        "params1",
        "params2",
        "termlist",
        "historytitl",
        "res",
        "t",
        "Val",
        "Token",
        "headers",
        "lastposts1",
        "lastposts2",
        "thelist",
        "before1",
        "before2",
        "params1",
        "params2",
        "k",
        "titlematch",
        "bodymatch",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "title",
        "url",
        "body",
        "postime",
        "k",
        "k",
        "imgurl",
        "imgurl",
        "imgurl",
        "format",
        "format",
        "img_data",
        "img_name",
        "image",
        "text",
        "codefromimg",
        "imgs",
        "imgurl",
        "imgurl",
        "format",
        "format",
        "img_data",
        "img_name",
        "image",
        "text",
        "codefromimg",
        "analyz"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Define print",
        "create a formatted string of the Python JSON object",
        "Keyword list to search for in re terminology",
        "To record history of posts",
        "##SETUP END## #",
        "Requests new Token when old token expires",
        "Jumps out of loop when Token is about to expire",
        "Requests data from r/MagicArena",
        "Requests data from r/magicTCG",
        "Concatenates data",
        "Update \"before\" tags from both requests",
        "Write instance title and remove special Re characters",
        "Write URL, Post body and time of post",
        "Search title for keywords",
        "Print title, time and link of the post",
        "Search body for codes",
        "Print post title, time, body text and extracted codes",
        "Check if there's a preview entry on post dictionary",
        "Check for images at the 'preview' entry",
        "print(text)",
        "Writes title in title history to prevent accounting for it again",
        "print(title)",
        "Counts No of posts with matching keys",
        "Prints number of analysed posts as No of found posts",
        "Repeat the request in 4 seconds (to not flood API server)"
    ],
    "docstrings": [],
    "functions": [
        "playsound",
        "jprint"
    ],
    "classes": []
}