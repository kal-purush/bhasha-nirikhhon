{
    "identifiers": [
        "SecurityController",
        "AnyDocument",
        "UserRole",
        "read",
        "trimFields",
        "doc",
        "descriptor",
        "descriptor",
        "descriptor",
        "isLoginRequired",
        "SecurityController",
        "perRoleAccess",
        "perRoleAccess",
        "descriptor",
        "descriptor",
        "descriptor",
        "SecurityController",
        "role",
        "descriptor",
        "_isStatic",
        "descriptor",
        "role",
        "descriptor",
        "role",
        "descriptor",
        "doc",
        "checkManyDynamicAccess",
        "descriptor",
        "doc",
        "docs",
        "roleAccess",
        "SecurityController",
        "role",
        "roleAccess",
        "role",
        "descriptor",
        "docs",
        "descriptor",
        "descriptor",
        "docs",
        "_getRole",
        "descriptor",
        "_isStatic",
        "descriptor",
        "role",
        "descriptor",
        "role",
        "docs",
        "descriptor",
        "role",
        "doc",
        "docs",
        "doc",
        "accessFunction",
        "doc",
        "approvedDocs",
        "doc",
        "approvedDocs",
        "descriptor",
        "args",
        "descriptor",
        "doc",
        "doc",
        "descriptor",
        "doc",
        "trimManyReadFields",
        "descriptor",
        "doc",
        "docs",
        "descriptor",
        "docs",
        "descriptor",
        "descriptor",
        "docs",
        "_getRole",
        "descriptor",
        "_trimManyFields",
        "descriptor",
        "role",
        "docs",
        "trimmedDocs",
        "descriptor",
        "doc",
        "trimManySetFields",
        "descriptor",
        "doc",
        "docs",
        "descriptor",
        "docs",
        "descriptor",
        "descriptor",
        "docs",
        "_getRole",
        "descriptor",
        "_trimManyFields",
        "descriptor",
        "role",
        "docs",
        "trimmedDocs",
        "roleFields",
        "docs",
        "roleFields",
        "docs",
        "_isStatic",
        "roleFields",
        "isStatic",
        "fields",
        "roleFields",
        "docs",
        "doc",
        "isStatic",
        "fields",
        "roleFields",
        "doc",
        "trimFields",
        "doc",
        "fields",
        "trimmedDocs",
        "trimmedDoc",
        "trimmedDocs"
    ],
    "literals": [
        "\"controllers/security\"",
        "\"types/documents\"",
        "\"types/security\"",
        "\"utilities/objects\"",
        "\"utilities/security\"",
        "string",
        "string",
        "\"You must be logged in to view this resource.\"",
        "\"function\"",
        "\"access\"",
        "\"The access type is missing the active role. This is an error with database logic.\"",
        "\"You do not have access to this resource.\"",
        "\"You do not have access to view this resource.\"",
        "\"The access type is missing the active role. This is an error with database logic.\"",
        "\"access\"",
        "\"readFields\"",
        "\"setFields\"",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "isLoginRequired",
        "role",
        "docs",
        "role",
        "role",
        "approvedDocs",
        "accessFunction",
        "docs",
        "role",
        "trimmedDocs",
        "docs",
        "role",
        "trimmedDocs",
        "trimmedDocs",
        "isStatic",
        "fields",
        "trimmedDoc"
    ],
    "comments": [
        "Nabs the login requirement. If requireLogin is present, use it, but then default to true",
        "No access has been set, so skip any logic here",
        "Ensure that the given role is a valid one",
        "Skip doing anything if this is a dynamic check",
        "Error out specifically if the current user does not have access",
        "No access has been set, so skip any logic here",
        "Checks if the access property is static. If so, exits out with all or nothing to prevent unneeded processing",
        "Base case. Skips evaluation if the role fields haven't been defined"
    ],
    "docstrings": [
        "* Checks if the overarching function requires the user to be logged in. Throws an error on failure\n * @param descriptor The descriptor of the database logic function being processsed",
        "* Checks if a per role access is static or dynamic.\n * @param perRoleAccess The per role access item to check for a static value or a function\n * @returns Boolean. True if the function is static. False if it is dynamic.",
        "* Checks that the descriptor and current user has static access to the function. If access is false, an error is thrown\n * @param descriptor The descriptor of the database logic function being processsed",
        "* Checks if the current user has access, dynamic or static, to the given document.\n * Throws an error if access is not permitted\n * @param descriptor The descriptor of the database logic function being processsed\n * @param doc The document to check the access for",
        "* Gets the current role of the user. Also validates that the role exists in the role access. Throws an\n * error if it is not present\n * @param roleAccess The role access for no particular field\n * @returns The user's current role",
        "* Checks if the current user has access, either dynamic or static, for each of the given documents.\n * Returns an array of all of the approved documents.\n * @param descriptor The descriptor of the database logic function being processsed\n * @param docs The array of document to check access for\n * @returns An array of all documents that the current user and role has access to",
        "* Trims out the fields of a given document a user is not allowed to read\n * @param descriptor The descriptor of the database logic function being processsed\n * @param doc The document to trim fields from\n * @returns A single document with some or all of its fields trimmed",
        "* Trims out the fields of the given documents a user is not allowed to read\n * @param descriptor The descriptor of the database logic function being processsed\n * @param docs The documents to trim fields from\n * @returns An array of documents with some or all of their fields trimmed",
        "* Trims out the fields of a given document a user is not allowed to set\n * @param descriptor The descriptor of the database logic function being processsed\n * @param doc The document to trim fields from\n * @returns A single document with some or all of its fields trimmed",
        "* Trims out the fields of the given documents a user is not allowed to set\n * @param descriptor The descriptor of the database logic function being processsed\n * @param docs The documents to trim fields from\n * @returns An array of documents with some or all of their fields trimmed",
        "* Trims the fields of many documents.\n * @param roleFields The PerRoleAccess function or fields.\n * @param docs The array of documents to trim fields from\n * @returns An array of documents with some or all of the fields they entered with"
    ],
    "functions": [
        "checkLogin",
        "_isStatic",
        "checkStaticAccess",
        "checkDynamicAccess",
        "_getRole",
        "checkManyDynamicAccess",
        "checkParentAccess",
        "fetchTargetDoc",
        "trimReadFields",
        "trimManyReadFields",
        "trimSetFields",
        "trimManySetFields",
        "_trimManyFields"
    ],
    "classes": []
}