{
    "identifiers": [
        "matplotlib",
        "animation",
        "FFMpegWriter",
        "matplotlib",
        "animation",
        "ImageMagickWriter",
        "ImageMagickWriter",
        "kwargs",
        "kwargs",
        "savefig_kwargs",
        "fig",
        "set_size_inches",
        "_w",
        "_h",
        "fig",
        "set_dpi",
        "dpi",
        "fig",
        "canvas",
        "draw",
        "_proc",
        "stdin",
        "write",
        "fig",
        "canvas",
        "tostring_rgb",
        "RuntimeError",
        "IOError",
        "e",
        "_proc",
        "communicate",
        "IOError",
        "format",
        "e",
        "err",
        "FFMpegWriter",
        "kwargs",
        "kwargs",
        "savefig_kwargs",
        "fig",
        "set_size_inches",
        "_w",
        "_h",
        "fig",
        "set_dpi",
        "dpi",
        "fig",
        "canvas",
        "draw",
        "_proc",
        "stdin",
        "write",
        "fig",
        "canvas",
        "tostring_argb",
        "RuntimeError",
        "IOError",
        "e",
        "_proc",
        "communicate",
        "IOError",
        "format",
        "e",
        "err"
    ],
    "literals": [
        "'rgb'",
        "'Error saving animation to file (cause: {0}) '",
        "'Stdout: {1} StdError: {2}. It may help to re-run '",
        "'with --verbose-debug.'",
        "'argb'",
        "'Error saving animation to file (cause: {0}) '",
        "'Stdout: {1} StdError: {2}. It may help to re-run '",
        "'with --verbose-debug.'"
    ],
    "variables": [
        "frame_format",
        "err",
        "frame_format",
        "err"
    ],
    "comments": [
        "Speeding up saving of matplotlib animations to file",
        "",
        "Copied from https://stackoverflow.com/questions/30965355/speedup-matplotlib-animation-to-video-file",
        "Solution by Aule Mahlal - https://stackoverflow.com/users/9291575/aule-mahal",
        "",
        "Same method applied also to ImageMagick. Manuel Aghito 18.11.2021",
        "",
        "Note: when using iPython this gives an advantage only with qt graphic backend",
        "activated by running \"%matplotlib qt\" does not help with inline graphic backend",
        "note rgba doesn't work with ImageMagick",
        "re-adjust the figure size and dpi in case it has been changed by the",
        "user.  We must ensure that every frame is the same size or",
        "the movie will not save correctly.",
        "Draw and save the frame as an argb string to the pipe sink",
        "self._frame_sink().write(self.fig.canvas.tostring_argb())",
        "re-adjust the figure size and dpi in case it has been changed by the",
        "user.  We must ensure that every frame is the same size or",
        "the movie will not save correctly.",
        "Draw and save the frame as an argb string to the pipe sink",
        "self._frame_sink().write(self.fig.canvas.tostring_argb())"
    ],
    "docstrings": [
        "'''Faster ImageMagick-pipe writer bypassing figure.savefig.'''",
        "'''Initialize the Writer object and sets the default frame_format.'''",
        "'''Grab the image information from the figure and save as a movie frame.\n\n        Doesn't use savefig to be faster: savefig_kwargs will be ignored.\n        '''",
        "'''Faster FFMpeg-pipe writer bypassing figure.savefig.'''",
        "'''Initialize the Writer object and sets the default frame_format.'''",
        "'''Grab the image information from the figure and save as a movie frame.\n\n        Doesn't use savefig to be faster: savefig_kwargs will be ignored.\n        '''"
    ],
    "functions": [
        "grab_frame",
        "grab_frame"
    ],
    "classes": [
        "PunkImageMagickWriter",
        "PunkFFMpegWriter"
    ]
}