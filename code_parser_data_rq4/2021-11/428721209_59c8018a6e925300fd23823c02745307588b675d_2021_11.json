{
    "identifiers": [
        "numpy",
        "np",
        "scipy",
        "stats",
        "stats",
        "np",
        "random",
        "seed",
        "stats",
        "norm",
        "rvs",
        "loc",
        "scale",
        "size",
        "flatten",
        "data",
        "samples",
        "mu_init",
        "proposal_width",
        "mu_prior_mu",
        "mu_prior_sd",
        "offset",
        "mu_init",
        "stats",
        "norm",
        "mu_prior_mu",
        "mu_prior_sd",
        "logpdf",
        "stats",
        "norm",
        "offset",
        "logpdf",
        "np",
        "array",
        "data",
        "_",
        "samples",
        "np",
        "random",
        "normal",
        "mu_current",
        "proposal_width",
        "likelihood_logpdf",
        "data",
        "mu_current",
        "sum",
        "likelihood_logpdf",
        "data",
        "mu_proposal",
        "sum",
        "prior_logpdf",
        "mu_current",
        "prior_logpdf",
        "mu_proposal",
        "likelihood_current",
        "prior_current",
        "likelihood_proposal",
        "prior_proposal",
        "np",
        "exp",
        "p_proposal",
        "p_current",
        "np",
        "random",
        "rand",
        "p_accept",
        "accept",
        "mu_proposal",
        "posterior",
        "append",
        "mu_current",
        "np",
        "array",
        "posterior"
    ],
    "literals": [],
    "variables": [
        "N_mu_30_sd_1_data",
        "mu_current",
        "posterior",
        "prior_logpdf",
        "likelihood_logpdf",
        "data",
        "mu_proposal",
        "likelihood_current",
        "likelihood_proposal",
        "prior_current",
        "prior_proposal",
        "p_current",
        "p_proposal",
        "p_accept",
        "accept",
        "mu_current"
    ],
    "comments": [
        "transform the inputs by subtracting the mean",
        "for safety reasons",
        "Suggest new position",
        "Compute likelihood by multiplying probabilities of each data point",
        "Compute prior probability of current and proposed mu",
        "Accept proposal?",
        "Usually would include prior probability, which we neglect here for simplicity",
        "Update position"
    ],
    "docstrings": [
        "\"\"\"\nMetropolis Hastings example with simple model\n\nInspired by Thomas Wiecki's blog post\n\nhttps://twiecki.io/blog/2015/11/10/mcmc-sampling/\n\"\"\"",
        "\"\"\"Basic Metropolis Hasting Sampler. Optimized a little.\"\"\""
    ],
    "functions": [
        "mh_sampler"
    ],
    "classes": []
}