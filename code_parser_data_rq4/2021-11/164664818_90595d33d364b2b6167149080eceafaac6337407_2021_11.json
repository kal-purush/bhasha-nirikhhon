{
    "identifiers": [
        "ResembleHelper",
        "config",
        "folderPath",
        "image",
        "options",
        "image",
        "options",
        "selector",
        "name",
        "baseImage",
        "misMatch",
        "options",
        "baseImage",
        "misMatch",
        "options",
        "accessKeyId",
        "secretAccessKey",
        "region",
        "bucketName",
        "baseImage",
        "options",
        "accessKeyId",
        "secretAccessKey",
        "region",
        "bucketName",
        "baseImage",
        "options",
        "baseImage",
        "options",
        "selector",
        "baseImage",
        "options",
        "selector",
        "baseImage",
        "options",
        "screenShotImage",
        "options",
        "selector",
        "image",
        "options",
        "image",
        "options",
        "image",
        "image",
        "options"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Resemble.js helper class for CodeceptJS, this allows screen comparison\n * @author Puneet Kala",
        "* Compare Images\n     *\n     * @param image\n     * @param options\n     * @returns {Promise<resolve | reject>}",
        "*\n     * @param image\n     * @param options\n     * @returns {Promise<*>}",
        "* Take screenshot of individual element.\n     * @param selector selector of the element to be screenshotted\n     * @param name name of the image\n     * @returns {Promise<void>}",
        "* This method attaches image attachments of the base, screenshot and diff to the allure reporter when the mismatch exceeds tolerance.\n     * @param baseImage\n     * @param misMatch\n     * @param options\n     * @returns {Promise<void>}",
        "* This method attaches context, and images to Mochawesome reporter when the mismatch exceeds tolerance.\n     * @param baseImage\n     * @param misMatch\n     * @param options\n     * @returns {Promise<void>}",
        "* This method uploads the diff and screenshot images into the bucket with diff image under bucketName/diff/diffImage and the screenshot image as\n     * bucketName/output/ssImage\n     * @param accessKeyId\n     * @param secretAccessKey\n     * @param region\n     * @param bucketName\n     * @param baseImage\n     * @param options\n     * @returns {Promise<void>}",
        "* This method downloads base images from specified bucket into the base folder as mentioned in config file.\n     * @param accessKeyId\n     * @param secretAccessKey\n     * @param region\n     * @param bucketName\n     * @param baseImage\n     * @param options\n     * @returns {Promise<void>}",
        "* Check Visual Difference for Base and Screenshot Image\n     * @param baseImage         Name of the Base Image (Base Image path is taken from Configuration)\n     * @param {any} [options]           Options ex {prepareBaseImage: true, tolerance: 5} along with Resemble JS Options, read more here: https://github.com/rsmbl/Resemble.js\n     * @returns {Promise<void>}",
        "* See Visual Diff for an Element on a Page\n     *\n     * @param selector   Selector which has to be compared expects these -> CSS|XPath|ID\n     * @param baseImage  Base Image for comparison\n     * @param {any} [options]    Options ex {prepareBaseImage: true, tolerance: 5} along with Resemble JS Options, read more here: https://github.com/rsmbl/Resemble.js\n     * @returns {Promise<void>}",
        "* Function to prepare Base Images from Screenshots\n     *\n     * @param screenShotImage  Name of the screenshot Image (Screenshot Image Path is taken from Configuration)\n     * @param options",
        "* Function to create Directory\n     * @param directory\n     * @returns {Promise<void>}\n     * @private",
        "* Function to fetch Bounding box for an element, fetched using selector\n     *\n     * @param selector CSS|XPath|ID selector\n     * @returns {Promise<{boundingBox: {left: *, top: *, right: *, bottom: *}}>}",
        "* Returns the final name of the expected base image, without a path\n     * @param image Name of the base-image, without path\n     * @param options Helper options\n     * @returns {string}",
        "* Returns the path to the expected base image\n     * @param image Name of the base-image, without path\n     * @param options Helper options\n     * @returns {string}",
        "* Returns the path to the actual screenshot image\n     * @param image Name of the image, without path\n     * @returns {string}",
        "* Returns the path to the image that displays differences between base and actual image.\n     * @param image Name of the image, without path\n     * @returns {string}",
        "* Returns the final `prepareBaseImage` flag after evaluating options and config values\n     * @param options Helper options\n     * @returns {boolean}"
    ],
    "functions": [],
    "classes": [
        "ResembleHelper"
    ]
}