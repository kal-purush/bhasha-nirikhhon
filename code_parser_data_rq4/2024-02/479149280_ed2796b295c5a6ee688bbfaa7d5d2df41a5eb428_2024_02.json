{
    "identifiers": [
        "SpaceCraft",
        "Collections",
        "Generic",
        "CheatInventoryStacking",
        "Func",
        "WorldObject",
        "Func",
        "Inventory",
        "Func",
        "WorldObject",
        "Func",
        "Inventory",
        "Func",
        "Inventory",
        "Func",
        "Func",
        "Func",
        "Inventory",
        "WorldObject",
        "items",
        "",
        "stackSize",
        "Value",
        "WorldObject",
        "worldObject",
        "items",
        "AddToStack",
        "worldObject",
        "GetGroup",
        "GetId",
        "groupCounts",
        "n",
        "stacks",
        "stacks",
        "WorldObject",
        "worldObjectsInInventory",
        "inventorySize",
        "gid",
        "",
        "stackSize",
        "Value",
        "WorldObject",
        "worldObject",
        "worldObjectsInInventory",
        "AddToStack",
        "worldObject",
        "GetGroup",
        "GetId",
        "groupCounts",
        "n",
        "stacks",
        "gid",
        "AddToStack",
        "gid",
        "groupCounts",
        "n",
        "stacks",
        "stacks",
        "inventorySize",
        "Inventory",
        "inventory",
        "CanStack",
        "inventory",
        "GetId",
        "inventory",
        "GetInsideWorldObjects",
        "Count",
        "GetStackCount",
        "inventory",
        "GetInsideWorldObjects",
        "Inventory",
        "inventory",
        "gid",
        "CanStack",
        "inventory",
        "GetId",
        "inventory",
        "GetInsideWorldObjects",
        "Count",
        "gid",
        "count",
        "count",
        "inventory",
        "GetSize",
        "IsFullStacked",
        "inventory",
        "GetInsideWorldObjects",
        "inventory",
        "GetSize",
        "gid",
        "Inventory",
        "inventory",
        "CanStack",
        "inventory",
        "GetId",
        "stackSize",
        "Value",
        "inventory",
        "GetSize",
        "inventory",
        "GetSize",
        "stackSize",
        "Value",
        "inventoryId",
        "noStackingInventories",
        "Contains",
        "inventoryId",
        "stackBackpack",
        "Value",
        "playersManager",
        "playersManager",
        "Managers",
        "GetManager",
        "PlayersManager",
        "playersManager",
        "player",
        "playersManager",
        "playersControllers",
        "player",
        "player",
        "GetPlayerBackpack",
        "GetInventory",
        "GetId",
        "inventoryId",
        "playersManager",
        "GetActivePlayerController",
        "apc",
        "apc",
        "GetPlayerBackpack",
        "GetInventory",
        "GetId",
        "inventoryId"
    ],
    "literals": [],
    "variables": [
        "apiGetStackCount",
        "GetStackCount",
        "apiGetStackCountInventory",
        "GetStackCountOfInventory",
        "apiIsFullStacked",
        "IsFullStacked",
        "apiIsFullStackedInventory",
        "IsFullStackedOfInventory",
        "apiGetCapacityInventory",
        "GetCapacityOfInventory",
        "apiCanStack",
        "CanStack",
        "IsFindInventoryForGroupIDEnabled",
        "FindInventoryForGroupID",
        "groupCounts",
        "n",
        "stacks",
        "groupCounts",
        "n",
        "stacks",
        "count",
        "apc"
    ],
    "comments": [
        "Copyright (c) 2022-2024, David Karnok & Contributors",
        "Licensed under the Apache License, Version 2.0",
        "--------------------------------------------------------------------------------------------------------",
        "API: delegates to call from other mods.",
        "--------------------------------------------------------------------------------------------------------",
        "Given a sequence of WorldObjects, return the number stacks it would coalesce into.",
        "</summary>",
        "Given an Inventory, return the number of stacks it's contents would coalesce into.",
        "The inventory is checked if it does allows stacking or not.",
        "</summary>",
        "Given a sequence of WorldObjects, a maximum stack count and an optional item group id, return true if",
        "the number of stacks the sequence would coalesce (including the item) would",
        "be more than the maximum stack count.",
        "</summary>",
        "Given an Inventory and an optional item group id, return true if",
        "the number of stacks the contents would coalesce (including the item) would",
        "be more than the maximum stack count for that inventory.",
        "The inventory is checked if it does allows stacking or not.",
        "</summary>",
        "Given an Inventory, return the maximum number of homogeneous items it can hold,",
        "subject to if said inventory is allowed to stack or not.",
        "</summary>",
        "Checks if the given inventory, identified by its id, is allowed to stack items, depending",
        "on the mod's settings.",
        "It also checks if any player's backpack is allowed to stack or not.",
        "</summary>",
        "Overwrite this function from other mod(s) to indicate that mod",
        "is ready to provide a reasonable result in the <see cref=\"FindInventoryForGroupID\"/> call.",
        "I.e., if the mod's functionality is currently disabled, return false here",
        "and <see cref=\"FindInventoryForGroupID\"/> won't be called. In the relevant methods,",
        "the default inventory for that particular case will be used instead.",
        "</summary>",
        "Overwrite this function from other mod(s) to modify the deposition logic",
        "of MachineGenerator::GenerateAnObject. Return null if no inventory can be found.",
        "Use <see cref=\"IsFindInventoryForGroupIDEnabled\"/> to indicate if this method",
        "should be called at all or not.",
        "</summary>",
        "-------------------------------------------------------------------------------------------------------------",
        "API: pointed to by the delegates. Please use the delegates instead of doing reflective method calls on these.",
        "-------------------------------------------------------------------------------------------------------------",
        "Returns the number of stacks in the given list (inventory content).",
        "</summary>",
        "<param name=\"items\">The list of items to count</param>",
        "<returns>The number of stacks occupied by the list of items.</returns>",
        "Checks if the given list of WorldObjects, representing an inventory,",
        "is full or not if one tries to add the optional item indicated by",
        "its group id.",
        "</summary>",
        "<param name=\"worldObjectsInInventory\">The list of world objects already in the inventory.</param>",
        "<param name=\"inventorySize\">The inventory size in number of stacks.</param>",
        "<param name=\"gid\">The optional item group id to check if it can be added or not.</param>",
        "<returns>True if the Inventory would occupy more slots than inventorySize.</returns>",
        "Returns the number of stacks in the given inventory.",
        "</summary>",
        "<param name=\"inventory\">The target inventory</param>",
        "<returns>The number of stacks occupied by the list of items.</returns>",
        "Checks if the given inventory is full or not if one tries to add the optional item indicated by",
        "its group id.",
        "</summary>",
        "<param name=\"inventory\">The target inventory.</param>",
        "<param name=\"gid\">The optional item group id to check if it can be added or not.</param>",
        "<returns>True if the list is full.</returns>",
        "Returns the total item capacity of the given inventory considering the stacking settings.",
        "</summary>",
        "<param name=\"inventory\">The inventory to get the capacity of.</param>",
        "<returns>The capacity.</returns>",
        "Checks if the given inventory (identified by its id) is allowed to stack items.",
        "Does not check if stackSize > 1 on its own!",
        "</summary>",
        "<param name=\"inventoryId\">The target inventory to check.</param>",
        "<returns>True if the target inventory can stack.</returns>",
        "In multiplayer, players can come and go, so we must check their dynamic backpack ids.",
        "Similarly, the host's backpack id is no longer constant (1).",
        "Not as snappy as checking the hashset from before, but we do this only if",
        "backpack stacking was explicitly disabled. Usually it won't be for most players.",
        "We cache the PlayersManager here.",
        "FIXME I don't know if playersControllers does include the active controller or not",
        "FIXME So if the playersManager is not available, does it mean stacking is not really relevant",
        "because we are outside a world?"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "GetStackCount",
        "IsFullStacked",
        "GetStackCountOfInventory",
        "IsFullStackedOfInventory",
        "GetCapacityOfInventory",
        "CanStack"
    ],
    "classes": [
        "Plugin"
    ]
}