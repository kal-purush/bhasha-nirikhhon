{
    "identifiers": [
        "STATES",
        "INIT",
        "DRIVE_FORWARD",
        "STRAFE_LEFT_AND_LIFT_SLIDES",
        "DRIVE_BACKWARD",
        "STOP",
        "previousState",
        "STATES",
        "INIT",
        "currentState",
        "STATES",
        "INIT",
        "targetPosition",
        "forward",
        "strafeLeft",
        "backward",
        "drive",
        "linearSlides",
        "PIDF",
        "drive",
        "hardwareMap",
        "drive",
        "setPoseEstimate",
        "forward",
        "drive",
        "TrajectorySequenceBuilder",
        "forward",
        "build",
        "strafeLeft",
        "drive",
        "TrajectorySequenceBuilder",
        "forward",
        "end",
        "addDisplacementMarker",
        "targetPosition",
        "strafeLeft",
        "build",
        "backward",
        "drive",
        "TrajectorySequenceBuilder",
        "strafeLeft",
        "end",
        "back",
        "build",
        "waitForStart",
        "currentState",
        "STATES",
        "DRIVE_FORWARD",
        "opModeIsActive",
        "currentState",
        "INIT",
        "DRIVE_FORWARD",
        "previousState",
        "currentState",
        "drive",
        "followTrajectoryAsync",
        "forward",
        "previousState",
        "STATES",
        "DRIVE_FORWARD",
        "drive",
        "isBusy",
        "currentState",
        "STATES",
        "STRAFE_LEFT_AND_LIFT_SLIDES",
        "STRAFE_LEFT_AND_LIFT_SLIDES",
        "previousState",
        "currentState",
        "drive",
        "followTrajectorySequenceAsync",
        "strafeLeft",
        "drive",
        "isBusy",
        "linearSlides",
        "atTarget",
        "currentState",
        "STATES",
        "DRIVE_BACKWARD",
        "DRIVE_BACKWARD",
        "previousState",
        "currentState",
        "drive",
        "followTrajectorySequenceAsync",
        "backward",
        "previousState",
        "STATES",
        "DRIVE_BACKWARD",
        "drive",
        "isBusy",
        "currentState",
        "STATES",
        "STOP",
        "STOP",
        "drive",
        "update",
        "power",
        "PIDF",
        "calculate",
        "linearSlides",
        "getCurrentPosition",
        "targetPosition",
        "linearSlides",
        "setPower",
        "power"
    ],
    "literals": [],
    "variables": [
        "forward",
        "strafeLeft",
        "backward",
        "drive",
        "linearSlides",
        "PIDF"
    ],
    "comments": [
        "the capitalization and snake_case is just convention because the values of an enum are constants",
        "linear slide initialization code",
        "pidf initialization code",
        "everything in here will run once when the state switches",
        "inside this trajectory sequence the targetPosition is set and the slides will start updating",
        "outside of the switch we update our slides, that way they are always receiving new information"
    ],
    "docstrings": [
        "for the purpose of this recipe, I will be using linear slides with PIDF control to demonstrate.\n        The linear slides will simply be called linearSlides."
    ],
    "functions": [
        "runOpMode"
    ],
    "classes": [
        "RoadRunnerPIDF"
    ]
}