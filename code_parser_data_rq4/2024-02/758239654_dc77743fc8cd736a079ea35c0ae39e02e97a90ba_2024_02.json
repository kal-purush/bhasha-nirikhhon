{
    "identifiers": [
        "regex",
        "regex",
        "entryDropdown",
        "targetInputContainer",
        "entryDropdown",
        "entryNumber",
        "entryNumber",
        "entryDropdown",
        "entryNumber",
        "entryDropdown",
        "entryNumber",
        "entryNumber",
        "entryDropdown",
        "entryNumber",
        "targetInputContainer",
        "HTMLString",
        "e",
        "e",
        "isError",
        "getCaloriesFromInputs",
        "breakfastNumberInputs",
        "getCaloriesFromInputs",
        "lunchNumberInputs",
        "getCaloriesFromInputs",
        "dinnerNumberInputs",
        "getCaloriesFromInputs",
        "snacksNumberInputs",
        "getCaloriesFromInputs",
        "exerciseNumberInputs",
        "getCaloriesFromInputs",
        "budgetNumberInput",
        "isError",
        "breakfastCalories",
        "lunchCalories",
        "dinnerCalories",
        "snacksCalories",
        "budgetCalories",
        "consumedCalories",
        "exerciseCalories",
        "remainingCalories",
        "output",
        "surplusOrDeficit",
        "remainingCalories",
        "surplusOrDeficit",
        "budgetCalories",
        "consumedCalories",
        "exerciseCalories",
        "output",
        "item",
        "cleanInputString",
        "item",
        "isInvalidInput",
        "currVal",
        "invalidInputMatch",
        "alert",
        "invalidInputMatch",
        "isError",
        "calories",
        "currVal",
        "calories",
        "container",
        "inputContainers",
        "container",
        "budgetNumberInput",
        "output",
        "output",
        "addEntryButton",
        "addEntry",
        "calorieCounter",
        "calculateCalories"
    ],
    "literals": [
        "'calorie-counter'",
        "'budget'",
        "'entry-dropdown'",
        "'add-entry'",
        "'clear'",
        "'output'",
        "''",
        "#${entryDropdown.value} .input-container",
        "'input[type=\"text\"]'",
        "<label for=\"${entryDropdown.value}-${entryNumber}-name\">Entrada ${entryNumber} Nombre</label>\n  <input type=\"text\" id=\"${entryDropdown.value}-${entryNumber}-name\" placeholder=\"Nombre\" />\n  <label for=\"${entryDropdown.value}-${entryNumber}-calories\">Entrada ${entryNumber} Calorías</label>\n  <input\n    type=\"number\"\n    min=\"0\"\n    id=\"${entryDropdown.value}-${entryNumber}-calories\"\n    placeholder=\"Calorías\"\n  />",
        "'beforeend'",
        "'#breakfast input[type=number]'",
        "'#lunch input[type=number]'",
        "'#dinner input[type=number]'",
        "'#snacks input[type=number]'",
        "'#exercise input[type=number]'",
        "'Superavit'",
        "'Déficit'",
        "<span class=\"${surplusOrDeficit.toLowerCase()}\">${Math.abs(remainingCalories)} Caloría ${surplusOrDeficit}</span>\n  <hr>\n  <p>${budgetCalories} Calorías presupuestadas</p>\n  <p>${consumedCalories} Calorías Consumidas</p>\n  <p>${exerciseCalories} Calorías Quemada</p>",
        "'hide'",
        "Invalid Input: ${invalidInputMatch[0]}",
        "'.input-container'",
        "''",
        "''",
        "''",
        "'hide'",
        "\"click\"",
        "\"submit\""
    ],
    "variables": [
        "calorieCounter",
        "budgetNumberInput",
        "entryDropdown",
        "addEntryButton",
        "clearButton",
        "output",
        "isError",
        "regex",
        "regex",
        "targetInputContainer",
        "entryNumber",
        "HTMLString",
        "breakfastNumberInputs",
        "lunchNumberInputs",
        "dinnerNumberInputs",
        "snacksNumberInputs",
        "exerciseNumberInputs",
        "breakfastCalories",
        "lunchCalories",
        "dinnerCalories",
        "snacksCalories",
        "exerciseCalories",
        "budgetCalories",
        "consumedCalories",
        "remainingCalories",
        "surplusOrDeficit",
        "calories",
        "currVal",
        "invalidInputMatch",
        "inputContainers"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "cleanInputString",
        "isInvalidInput",
        "addEntry",
        "calculateCalories",
        "getCaloriesFromInputs",
        "clearForm"
    ],
    "classes": []
}