{
    "identifiers": [
        "os",
        "socket",
        "subprocess",
        "time",
        "contextlib",
        "closing",
        "signal",
        "SIGKILL",
        "context",
        "scenario",
        "scenario",
        "name",
        "os",
        "environ",
        "os",
        "environ",
        "is_server_listening",
        "port",
        "context",
        "scenario",
        "scenario",
        "status",
        "os",
        "environ",
        "scenario",
        "name",
        "os",
        "path",
        "isfile",
        "closing",
        "open",
        "f",
        "line",
        "f",
        "line",
        "is_server_listening",
        "context",
        "server_fqdn",
        "context",
        "server_port",
        "pid_exists",
        "context",
        "server_process",
        "pid",
        "context",
        "server_process",
        "pid",
        "context",
        "server_process",
        "pid",
        "context",
        "server_process",
        "kill",
        "time",
        "sleep",
        "is_server_listening",
        "context",
        "server_fqdn",
        "context",
        "server_port",
        "context",
        "server_process",
        "pid",
        "os",
        "kill",
        "context",
        "server_process",
        "pid",
        "SIGKILL",
        "time",
        "sleep",
        "attempts",
        "attempts",
        "context",
        "server_path",
        "subprocess",
        "run",
        "context",
        "server_path",
        "stderr",
        "subprocess",
        "PIPE",
        "universal_newlines",
        "process",
        "server_fqdn",
        "server_port",
        "closing",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "sock",
        "sock",
        "connect_ex",
        "server_fqdn",
        "server_port",
        "result",
        "pid",
        "errno",
        "pid",
        "os",
        "kill",
        "pid",
        "OSError",
        "e",
        "e",
        "errno",
        "errno",
        "EPERM"
    ],
    "literals": [
        "f\"\\x1b[33;42mStarting new scenario: {scenario.name}!\\x1b[0m\"",
        "'PORT'",
        "'PORT'",
        "\"localhost\"",
        "\"Server already started\"",
        "\"failed\"",
        "'GITHUB_ACTIONS'",
        "f\"\\x1b[33;101mSCENARIO FAILED: {scenario.name} server logs:\\x1b[0m\\n\\n\"",
        "'llama.log'",
        "'llama.log'",
        "'r'",
        "\"\\x1b[33;101mERROR: Server stopped listening\\x1b[0m\"",
        "f\"Server not running pid={context.server_process.pid} ...\"",
        "f\"stopping server pid={context.server_process.pid} ...\"",
        "f\"stopping server pid={context.server_process.pid} ...\"",
        "f\"Server dangling exits, killing all {context.server_path} ...\"",
        "'killall'",
        "'-9'"
    ],
    "variables": [
        "port",
        "port",
        "attempts",
        "process",
        "result"
    ],
    "comments": [
        "Wait few for socket to free up"
    ],
    "docstrings": [
        "\"\"\"Check whether pid exists in the current process table.\"\"\""
    ],
    "functions": [
        "before_scenario",
        "after_scenario",
        "is_server_listening",
        "pid_exists"
    ],
    "classes": []
}