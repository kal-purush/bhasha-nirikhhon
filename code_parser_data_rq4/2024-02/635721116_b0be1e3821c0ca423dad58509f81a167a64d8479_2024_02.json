{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Tasks",
        "Flow",
        "Launcher",
        "Infrastructure",
        "Http",
        "Flow",
        "Launcher",
        "Infrastructure",
        "Logger",
        "Net",
        "Http",
        "Threading",
        "Text",
        "Json",
        "Flow",
        "Launcher",
        "Plugin",
        "WebSearch",
        "SuggestionSources",
        "SuggestionSource",
        "query",
        "CancellationToken",
        "token",
        "IsNullOrEmpty",
        "query",
        "Http",
        "GetStreamAsync",
        "api",
        "Uri",
        "EscapeDataString",
        "query",
        "token",
        "token",
        "ConfigureAwait",
        "JsonDocument",
        "ParseAsync",
        "resultStream",
        "cancellationToken",
        "token",
        "json",
        "RootElement",
        "EnumerateArray",
        "ElementAt",
        "results",
        "EnumerateArray",
        "Select",
        "o",
        "GetString",
        "ToList",
        "e",
        "e",
        "HttpRequestException",
        "InnerException",
        "TimeoutException",
        "Log",
        "e",
        "JsonException",
        "e",
        "Log",
        "e"
    ],
    "literals": [
        "\"https://duckduckgo.com/ac/?type=list&q=\"",
        "\"|DuckDuckGo.Suggestions|Can't get suggestion from DuckDuckGo\"",
        "\"|DuckDuckGo.Suggestions|can't parse suggestions\"",
        "\"DuckDuckGo\""
    ],
    "variables": [
        "api",
        "resultStream",
        "json",
        "results"
    ],
    "comments": [
        "When the search query is empty, DuckDuckGo returns `[]`. When it's not empty, it returns data",
        "in the following format: `[\"query\", [\"suggestion1\", \"suggestion2\", ...]]`."
    ],
    "docstrings": [],
    "functions": [
        "SuggestionsAsync",
        "ToString"
    ],
    "classes": [
        "DuckDuckGo"
    ]
}