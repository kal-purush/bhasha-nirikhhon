{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "nn",
        "functional",
        "F",
        "nn",
        "Module",
        "d_out",
        "ChessCNN_no_pooling",
        "nn",
        "Conv2d",
        "kernel_size",
        "padding",
        "nn",
        "Conv2d",
        "kernel_size",
        "padding",
        "nn",
        "Linear",
        "nn",
        "Linear",
        "d_out",
        "x",
        "F",
        "relu",
        "conv1",
        "x",
        "F",
        "relu",
        "conv2",
        "x",
        "x",
        "view",
        "x",
        "size",
        "F",
        "relu",
        "fc1",
        "x",
        "fc2",
        "x",
        "x",
        "nn",
        "Module",
        "d_out",
        "ChessCNN_pooling",
        "nn",
        "Conv2d",
        "kernel_size",
        "padding",
        "nn",
        "BatchNorm2d",
        "nn",
        "MaxPool2d",
        "nn",
        "Conv2d",
        "kernel_size",
        "padding",
        "nn",
        "BatchNorm2d",
        "nn",
        "Linear",
        "nn",
        "Linear",
        "d_out",
        "x",
        "F",
        "relu",
        "bn1",
        "conv1",
        "x",
        "F",
        "relu",
        "bn2",
        "conv2",
        "x",
        "pool",
        "x",
        "x",
        "view",
        "x",
        "size",
        "F",
        "relu",
        "fc1",
        "x",
        "fc2",
        "x",
        "x",
        "nn",
        "Module",
        "channel",
        "reduction",
        "SELayer",
        "nn",
        "AdaptiveAvgPool2d",
        "nn",
        "Sequential",
        "nn",
        "Linear",
        "channel",
        "channel",
        "reduction",
        "bias",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "Linear",
        "channel",
        "reduction",
        "channel",
        "bias",
        "nn",
        "Sigmoid",
        "x",
        "x",
        "size",
        "avg_pool",
        "x",
        "view",
        "b",
        "c",
        "fc",
        "y",
        "view",
        "b",
        "c",
        "x",
        "y",
        "expand_as",
        "x",
        "nn",
        "Module",
        "input_features",
        "growth_rate",
        "DenseLayer",
        "nn",
        "BatchNorm2d",
        "input_features",
        "nn",
        "Conv2d",
        "input_features",
        "growth_rate",
        "kernel_size",
        "stride",
        "padding",
        "bias",
        "SELayer",
        "growth_rate",
        "x",
        "conv",
        "F",
        "relu",
        "bn",
        "x",
        "se",
        "torch",
        "cat",
        "x",
        "nn",
        "Module",
        "num_layers",
        "input_features",
        "growth_rate",
        "DenseBlock",
        "i",
        "num_layers",
        "layers",
        "append",
        "DenseLayer",
        "input_features",
        "i",
        "growth_rate",
        "growth_rate",
        "nn",
        "Sequential",
        "layers",
        "x",
        "block",
        "x",
        "nn",
        "Module",
        "input_features",
        "output_features",
        "TransitionLayer",
        "nn",
        "BatchNorm2d",
        "input_features",
        "nn",
        "Conv2d",
        "input_features",
        "output_features",
        "kernel_size",
        "stride",
        "bias",
        "x",
        "conv",
        "F",
        "relu",
        "bn",
        "x",
        "nn",
        "Module",
        "d_out",
        "DenseNetEncoder",
        "nn",
        "Conv2d",
        "kernel_size",
        "stride",
        "padding",
        "bias",
        "DenseBlock",
        "num_layers",
        "input_features",
        "growth_rate",
        "TransitionLayer",
        "input_features",
        "output_features",
        "DenseBlock",
        "num_layers",
        "input_features",
        "growth_rate",
        "TransitionLayer",
        "input_features",
        "output_features",
        "DenseBlock",
        "num_layers",
        "input_features",
        "growth_rate",
        "nn",
        "AdaptiveAvgPool2d",
        "nn",
        "Linear",
        "d_out",
        "x",
        "init_conv",
        "x",
        "dense_block1",
        "trans_layer1",
        "dense_block2",
        "trans_layer2",
        "dense_block3",
        "global_pool",
        "view",
        "size",
        "fc",
        "device",
        "model",
        "train_loader",
        "val_loader",
        "criterion",
        "optimizer",
        "num_epochs",
        "learn_decay",
        "AveragedModel",
        "model",
        "epoch",
        "num_epochs",
        "model",
        "train",
        "sequences",
        "labels",
        "train_loader",
        "count",
        "sequences",
        "to",
        "device",
        "labels",
        "to",
        "device",
        "model",
        "sequences",
        "criterion",
        "output",
        "labels",
        "optimizer",
        "zero_grad",
        "loss",
        "backward",
        "optimizer",
        "step",
        "training_loss",
        "loss",
        "item",
        "torch",
        "max",
        "output",
        "data",
        "train_total",
        "labels",
        "size",
        "train_correct",
        "predicted",
        "labels",
        "sum",
        "item",
        "count",
        "epoch",
        "count",
        "training_loss",
        "count",
        "epoch",
        "swa_start",
        "swa_model",
        "update_parameters",
        "model",
        "torch",
        "optim",
        "swa_utils",
        "update_bn",
        "train_loader",
        "swa_model",
        "model",
        "eval",
        "val_loader",
        "torch",
        "no_grad",
        "sequences",
        "labels",
        "val_loader",
        "sequences",
        "to",
        "device",
        "labels",
        "to",
        "device",
        "model",
        "sequences",
        "torch",
        "max",
        "outputs",
        "data",
        "val_total",
        "labels",
        "size",
        "val_correct",
        "predicted",
        "labels",
        "sum",
        "item",
        "val_top3_correct",
        "top_3_accuracy",
        "labels",
        "outputs",
        "labels",
        "size",
        "criterion",
        "outputs",
        "labels",
        "validation_loss",
        "loss",
        "item",
        "val_loss_values",
        "append",
        "validation_loss",
        "len",
        "val_loader",
        "val_correct",
        "val_total",
        "val_top3_correct",
        "val_total",
        "val_error",
        "append",
        "val_accuracy",
        "val_3_accuracy",
        "append",
        "val_top3_accuracy",
        "train_loss_values",
        "append",
        "training_loss",
        "train_error",
        "append",
        "train_correct",
        "train_total",
        "epoch",
        "training_loss",
        "len",
        "train_loader",
        "val_error",
        "val_3_accuracy",
        "train_error",
        "op_params",
        "optimizer",
        "param_groups",
        "op_params",
        "learn_decay",
        "train_error",
        "train_loss_values",
        "val_error",
        "val_loss_values",
        "swa_model"
    ],
    "literals": [
        "f\"Epoch {epoch+1}, Batch: {count}| Training Loss: {training_loss/count}\"",
        "f\"Epoch {epoch+1}, Training Loss: {training_loss/len(train_loader)}, Validation Error: {val_error[-1]}, Validation Top-3 Accuracy: {val_3_accuracy[-1]}, Training Error: {train_error[-1]}\"",
        "\"lr\"",
        "\"lr\""
    ],
    "variables": [
        "conv1",
        "conv2",
        "fc1",
        "fc2",
        "x",
        "x",
        "x",
        "x",
        "x",
        "conv1",
        "bn1",
        "pool",
        "conv2",
        "bn2",
        "fc1",
        "fc2",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "avg_pool",
        "fc",
        "b",
        "c",
        "_",
        "_",
        "y",
        "y",
        "bn",
        "conv",
        "se",
        "layers",
        "block",
        "bn",
        "conv",
        "init_conv",
        "dense_block1",
        "trans_layer1",
        "dense_block2",
        "trans_layer2",
        "dense_block3",
        "global_pool",
        "fc",
        "train_loss_values",
        "train_error",
        "val_loss_values",
        "val_error",
        "val_3_accuracy",
        "swa_model",
        "swa_start",
        "train_correct",
        "train_total",
        "training_loss",
        "count",
        "sequences",
        "labels",
        "output",
        "loss",
        "_",
        "predicted",
        "val_correct",
        "val_total",
        "validation_loss",
        "val_correct",
        "val_total",
        "val_top3_correct",
        "validation_loss",
        "sequences",
        "labels",
        "outputs",
        "_",
        "predicted",
        "loss",
        "val_accuracy",
        "val_top3_accuracy",
        "op_params"
    ],
    "comments": [
        "Assuming each channel represents a different piece type (e.g., 6 channels for 6 types each)",
        "Assuming an 8x8 chess board",
        "Apply convolutions",
        "Flatten the tensor",
        "Apply fully connected layers",
        "Pooling layer to reduce spatial dimensions",
        "Adjusted size for the fully connected layer due to pooling",
        "Reduced size due to pooling",
        "Apply pooling again to reduce size further",
        "Flatten the tensor",
        "Initial convolution",
        "Dense Blocks and Transition Layers with SE Blocks",
        "Global Pooling and Dense Layer for encoding",
        "Training",
        "Forward Pass",
        "Backpropogate & Optimize",
        "For logging purposes",
        "Validation",
        "Log Model Performance"
    ],
    "docstrings": [],
    "functions": [
        "forward",
        "forward",
        "forward",
        "forward",
        "forward",
        "forward",
        "forward",
        "train_cnn"
    ],
    "classes": [
        "ChessCNN_no_pooling",
        "ChessCNN_pooling",
        "SELayer",
        "DenseLayer",
        "DenseBlock",
        "TransitionLayer",
        "DenseNetEncoder"
    ]
}