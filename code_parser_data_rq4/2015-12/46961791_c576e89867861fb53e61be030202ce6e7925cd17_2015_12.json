{
    "identifiers": [
        "akshit",
        "snapdeal",
        "com",
        "sunshine",
        "android",
        "net",
        "Uri",
        "android",
        "os",
        "AsyncTask",
        "android",
        "text",
        "format",
        "Time",
        "android",
        "util",
        "Log",
        "android",
        "widget",
        "ArrayAdapter",
        "org",
        "json",
        "JSONArray",
        "org",
        "json",
        "JSONException",
        "org",
        "json",
        "JSONObject",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "net",
        "URL",
        "java",
        "text",
        "SimpleDateFormat",
        "TAG",
        "OPEN_WEATHER_MAP_API_KEY",
        "weatherFroecastAdapter",
        "weatherFroecastAdapter",
        "weatherFroecastAdapter",
        "weatherFroecastAdapter",
        "Override",
        "Log",
        "i",
        "TAG",
        "onPreExecute",
        "Override",
        "data",
        "Log",
        "i",
        "TAG",
        "weatherFroecastAdapter",
        "clear",
        "data",
        "weatherFroecastAdapter",
        "add",
        "onPostExecute",
        "data",
        "Override",
        "Log",
        "i",
        "TAG",
        "FORECAST_BASE_URL",
        "QUERY_PARAM",
        "FORMAT_PARAM",
        "UNITS_PARAM",
        "DAYS_PARAM",
        "APPID_PARAM",
        "units",
        "format",
        "num",
        "data",
        "num",
        "length",
        "urlConnection",
        "reader",
        "forecastJsonStr",
        "Log",
        "i",
        "TAG",
        "buildUri",
        "Uri",
        "parse",
        "FORECAST_BASE_URL",
        "buildUpon",
        "appendQueryParameter",
        "QUERY_PARAM",
        "appendQueryParameter",
        "FORMAT_PARAM",
        "format",
        "appendQueryParameter",
        "UNITS_PARAM",
        "units",
        "appendQueryParameter",
        "DAYS_PARAM",
        "toString",
        "num",
        "appendQueryParameter",
        "APPID_PARAM",
        "OPEN_WEATHER_MAP_API_KEY",
        "build",
        "Log",
        "i",
        "TAG",
        "buildUri",
        "toString",
        "url",
        "buildUri",
        "toString",
        "urlConnection",
        "url",
        "openConnection",
        "urlConnection",
        "setRequestMethod",
        "urlConnection",
        "connect",
        "Log",
        "i",
        "TAG",
        "inputStream",
        "urlConnection",
        "getInputStream",
        "buffer",
        "inputStream",
        "Log",
        "i",
        "TAG",
        "reader",
        "inputStream",
        "line",
        "line",
        "reader",
        "readLine",
        "buffer",
        "append",
        "line",
        "buffer",
        "length",
        "forecastJsonStr",
        "buffer",
        "toString",
        "data",
        "getWeatherDataFromJson",
        "forecastJsonStr",
        "num",
        "e",
        "e",
        "Log",
        "e",
        "TAG",
        "e",
        "urlConnection",
        "urlConnection",
        "disconnect",
        "reader",
        "reader",
        "close",
        "e",
        "Log",
        "e",
        "e",
        "data",
        "forecastJsonStr",
        "numDays",
        "OWM_LIST",
        "OWM_WEATHER",
        "OWM_TEMPERATURE",
        "OWM_MAX",
        "OWM_MIN",
        "OWM_DESCRIPTION",
        "forecastJson",
        "forecastJsonStr",
        "weatherArray",
        "forecastJson",
        "getJSONArray",
        "OWM_LIST",
        "dayTime",
        "dayTime",
        "setToNow",
        "julianStartDay",
        "Time",
        "getJulianDay",
        "currentTimeMillis",
        "dayTime",
        "gmtoff",
        "dayTime",
        "resultStrs",
        "numDays",
        "i",
        "i",
        "weatherArray",
        "length",
        "i",
        "day",
        "description",
        "highAndLow",
        "dayForecast",
        "weatherArray",
        "getJSONObject",
        "i",
        "dateTime",
        "dateTime",
        "dayTime",
        "setJulianDay",
        "julianStartDay",
        "i",
        "day",
        "getReadableDateString",
        "dateTime",
        "weatherObject",
        "dayForecast",
        "getJSONArray",
        "OWM_WEATHER",
        "getJSONObject",
        "description",
        "weatherObject",
        "getString",
        "OWM_DESCRIPTION",
        "temperatureObject",
        "dayForecast",
        "getJSONObject",
        "OWM_TEMPERATURE",
        "high",
        "temperatureObject",
        "getDouble",
        "OWM_MAX",
        "low",
        "temperatureObject",
        "getDouble",
        "OWM_MIN",
        "highAndLow",
        "formatHighLows",
        "high",
        "low",
        "resultStrs",
        "i",
        "day",
        "description",
        "highAndLow",
        "resultStrs",
        "high",
        "low",
        "roundedHigh",
        "round",
        "high",
        "roundedLow",
        "round",
        "low",
        "highLowStr",
        "roundedHigh",
        "roundedLow",
        "highLowStr",
        "time",
        "shortenedDateFormat",
        "shortenedDateFormat",
        "format",
        "time"
    ],
    "literals": [
        "\"akshit.snapdeal.com.sunshine.FetchWeatherTask\"",
        "\"f4a6312a0459542973769c10abf61c7c\"",
        "\"Inside onPreExecute Method\"",
        "\"Inside onPostExecute method\"",
        "\"Inside this method\"",
        "\"http://api.openweathermap.org/data/2.5/forecast/daily?\"",
        "\"q\"",
        "\"mode\"",
        "\"units\"",
        "\"cnt\"",
        "\"APPID\"",
        "\"json\"",
        "\"Starting ...\"",
        "\"Build URI =>\"",
        "\"GET\"",
        "\"Connecting to the Open Weather API Server\"",
        "\"Input stream is null\"",
        "\"\\n\"",
        "\"Error\"",
        "\"PlaceholderFragment\"",
        "\"Error closing stream\"",
        "\"list\"",
        "\"weather\"",
        "\"temp\"",
        "\"max\"",
        "\"min\"",
        "\"main\"",
        "\" - \"",
        "\" - \"",
        "\"/\"",
        "\"EEE MMM dd\""
    ],
    "variables": [
        "weatherFroecastAdapter",
        "params",
        "line",
        "day",
        "description",
        "highAndLow",
        "dateTime"
    ],
    "comments": [
        "Will contain the raw JSON response as string",
        "Since it's JSON, adding a newline isn't necessary (it won't affect parsing)",
        "But it does make debugging a *lot* easier if you print out the completed",
        "buffer for debugging.",
        "Stream was empty.  No point in parsing.",
        "These are the names of the JSON objects that need to be extracted.",
        "OWM returns daily forecasts based upon the local time of the city that is being",
        "asked for, which means that we need to know the GMT offset to translate this data",
        "properly.",
        "Since this data is also sent in-order and the first day is always the",
        "current day, we're going to take advantage of that to get a nice",
        "normalized UTC date for all of our weather.",
        "we start at the day returned by local time. Otherwise this is a mess.",
        "now we work exclusively in UTC",
        "For now, using the format \"Day, description, hi/low\"",
        "Get the JSON object representing the day",
        "The date/time is returned as a long.  We need to convert that",
        "into something human-readable, since most people won't read \"1400356800\" as",
        "\"this saturday\".",
        "Cheating to convert this to UTC time, which is what we want anyhow",
        "description is in a child array called \"weather\", which is 1 element long.",
        "Temperatures are in a child object called \"temp\".  Try not to name variables",
        "\"temp\" when working with temperature.  It confuses everybody.",
        "For presentation, assume the user doesn't care about tenths of a degree.",
        "Because the API returns a unix timestamp (measured in seconds),",
        "it must be converted to milliseconds in order to be converted to valid date."
    ],
    "docstrings": [
        "* Created by akshit on 27/12/15."
    ],
    "functions": [
        "FetchWeatherTask",
        "onPreExecute",
        "onPostExecute",
        "doInBackground",
        "getWeatherDataFromJson",
        "formatHighLows",
        "getReadableDateString"
    ],
    "classes": [
        "FetchWeatherTask"
    ]
}