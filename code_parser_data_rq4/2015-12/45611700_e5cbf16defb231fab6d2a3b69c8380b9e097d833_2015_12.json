{
    "identifiers": [
        "sklearn",
        "preprocessing",
        "sklearn",
        "cross_validation",
        "StratifiedKFold",
        "sklearn",
        "decomposition",
        "PCA",
        "sklearn",
        "ensemble",
        "ExtraTreesClassifier",
        "sklearn",
        "ensemble",
        "GradientBoostingClassifier",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "sklearn",
        "externals",
        "joblib",
        "sklearn",
        "feature_extraction",
        "text",
        "CountVectorizer",
        "sklearn",
        "feature_extraction",
        "text",
        "TfidfTransformer",
        "sklearn",
        "linear_model",
        "LogisticRegression",
        "sklearn",
        "linear_model",
        "SGDClassifier",
        "sklearn",
        "naive_bayes",
        "MultinomialNB",
        "sklearn",
        "neighbors",
        "KNeighborsClassifier",
        "sklearn",
        "preprocessing",
        "LabelEncoder",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "sklearn",
        "svm",
        "LinearSVC",
        "csv",
        "numpy",
        "np",
        "pandas",
        "pd",
        "random",
        "re",
        "time",
        "xgboost",
        "xgb",
        "time",
        "time",
        "pd",
        "read_json",
        "pd",
        "read_json",
        "traindf",
        "apply",
        "x",
        "re",
        "sub",
        "i",
        "encode",
        "lower",
        "strip",
        "i",
        "x",
        "axis",
        "testdf",
        "apply",
        "x",
        "re",
        "sub",
        "i",
        "encode",
        "lower",
        "strip",
        "i",
        "x",
        "axis",
        "join",
        "z",
        "strip",
        "z",
        "traindf",
        "join",
        "z",
        "strip",
        "z",
        "testdf",
        "preprocessing",
        "LabelEncoder",
        "le",
        "fit",
        "traindf",
        "le",
        "transform",
        "traindf",
        "traindf",
        "iloc",
        "np",
        "random",
        "permutation",
        "len",
        "traindf",
        "traindf",
        "CountVectorizer",
        "vectorizer",
        "fit_transform",
        "traindf",
        "toarray",
        "vectorizer",
        "transform",
        "testdf",
        "toarray",
        "TfidfTransformer",
        "tfidf_trans",
        "fit_transform",
        "dtm_train",
        "toarray",
        "tfidf_trans",
        "transform",
        "dtm_test",
        "toarray",
        "RandomForestClassifier",
        "bootstrap",
        "min_samples_leaf",
        "n_estimators",
        "min_samples_split",
        "criterion",
        "max_features",
        "max_depth",
        "RandomForestClassifier",
        "bootstrap",
        "min_samples_leaf",
        "n_estimators",
        "min_samples_split",
        "criterion",
        "max_features",
        "max_depth",
        "ExtraTreesClassifier",
        "max_features",
        "n_estimators",
        "criterion",
        "max_depth",
        "ExtraTreesClassifier",
        "max_features",
        "n_estimators",
        "criterion",
        "max_depth",
        "SGDClassifier",
        "penalty",
        "loss",
        "SGDClassifier",
        "penalty",
        "loss",
        "LogisticRegression",
        "penalty",
        "C",
        "tol",
        "dual",
        "LogisticRegression",
        "penalty",
        "C",
        "tol",
        "dual",
        "xgb",
        "train",
        "param",
        "xgb",
        "DMatrix",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "num_rounds",
        "xgb",
        "train",
        "param",
        "xgb",
        "DMatrix",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "num_rounds",
        "KNeighborsClassifier",
        "n_neighbors",
        "weights",
        "algorithm",
        "leaf_size",
        "KNeighborsClassifier",
        "n_neighbors",
        "weights",
        "algorithm",
        "leaf_size",
        "MultinomialNB",
        "alpha",
        "fit_prior",
        "MultinomialNB",
        "alpha",
        "fit_prior",
        "StratifiedKFold",
        "cuisine_label",
        "n_folds",
        "shuffle",
        "random_state",
        "skf",
        "skf",
        "clf1",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf2",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf3",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf4",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf5",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf6",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf7",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf8",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf11",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf12",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf13",
        "fit",
        "dtm_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf14",
        "fit",
        "tfidf_train",
        "train_index",
        "cuisine_label",
        "train_index",
        "clf1",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf2",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "clf3",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf4",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "clf5",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf6",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "clf7",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf8",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "clf9",
        "predict",
        "xgb",
        "DMatrix",
        "dtm_train",
        "cv_index",
        "clf10",
        "predict",
        "xgb",
        "DMatrix",
        "tfidf_train",
        "cv_index",
        "clf11",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf12",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "clf13",
        "predict_proba",
        "dtm_train",
        "cv_index",
        "clf14",
        "predict_proba",
        "tfidf_train",
        "cv_index",
        "np",
        "column_stack",
        "train_pred1",
        "train_pred2",
        "train_pred3",
        "train_pred4",
        "train_pred5",
        "train_pred6",
        "train_pred7",
        "train_pred8",
        "train_pred9",
        "train_pred10",
        "clf1",
        "predict_proba",
        "dtm_test",
        "clf2",
        "predict_proba",
        "tfidf_test",
        "clf3",
        "predict_proba",
        "dtm_test",
        "clf4",
        "predict_proba",
        "tfidf_test",
        "clf5",
        "predict_proba",
        "dtm_test",
        "clf6",
        "predict_proba",
        "tfidf_test",
        "clf7",
        "predict_proba",
        "dtm_test",
        "clf8",
        "predict_proba",
        "tfidf_test",
        "clf9",
        "predict",
        "xgb",
        "DMatrix",
        "dtm_test",
        "clf10",
        "predict",
        "xgb",
        "DMatrix",
        "tfidf_test",
        "clf11",
        "predict_proba",
        "dtm_test",
        "clf12",
        "predict_proba",
        "tfidf_test",
        "clf13",
        "predict_proba",
        "dtm_test",
        "clf14",
        "predict_proba",
        "tfidf_test",
        "np",
        "column_stack",
        "test_pred1",
        "test_pred2",
        "test_pred3",
        "test_pred4",
        "test_pred5",
        "test_pred6",
        "test_pred7",
        "test_pred8",
        "test_pred9",
        "test_pred10",
        "xgb",
        "DMatrix",
        "blend_train",
        "cuisine_label",
        "cv_index",
        "xgb",
        "DMatrix",
        "blend_test",
        "xgb",
        "train",
        "param",
        "dtrain",
        "num_rounds",
        "xgbclf",
        "predict",
        "dtest",
        "joblib",
        "dump",
        "clf1",
        "joblib",
        "dump",
        "clf2",
        "joblib",
        "dump",
        "clf3",
        "joblib",
        "dump",
        "clf4",
        "joblib",
        "dump",
        "clf5",
        "joblib",
        "dump",
        "clf6",
        "joblib",
        "dump",
        "clf7",
        "joblib",
        "dump",
        "clf8",
        "clf9",
        "save_model",
        "clf10",
        "save_model",
        "joblib",
        "dump",
        "clf11",
        "joblib",
        "dump",
        "clf12",
        "joblib",
        "dump",
        "clf13",
        "joblib",
        "dump",
        "clf14",
        "np",
        "save",
        "train_index",
        "np",
        "save",
        "cv_index",
        "np",
        "save",
        "train_pred1",
        "np",
        "save",
        "train_pred2",
        "np",
        "save",
        "train_pred3",
        "np",
        "save",
        "train_pred4",
        "np",
        "save",
        "train_pred5",
        "np",
        "save",
        "train_pred6",
        "np",
        "save",
        "train_pred7",
        "np",
        "save",
        "train_pred8",
        "np",
        "save",
        "train_pred9",
        "np",
        "save",
        "train_pred10",
        "np",
        "save",
        "train_pred11",
        "np",
        "save",
        "train_pred12",
        "np",
        "save",
        "train_pred13",
        "np",
        "save",
        "train_pred14",
        "np",
        "save",
        "test_pred1",
        "np",
        "save",
        "test_pred2",
        "np",
        "save",
        "test_pred3",
        "np",
        "save",
        "test_pred4",
        "np",
        "save",
        "test_pred5",
        "np",
        "save",
        "test_pred6",
        "np",
        "save",
        "test_pred7",
        "np",
        "save",
        "test_pred8",
        "np",
        "save",
        "test_pred9",
        "np",
        "save",
        "test_pred10",
        "np",
        "save",
        "test_pred11",
        "np",
        "save",
        "test_pred12",
        "np",
        "save",
        "test_pred13",
        "np",
        "save",
        "test_pred14",
        "le",
        "inverse_transform",
        "predict_result",
        "astype",
        "np",
        "int32",
        "testdf",
        "testdf",
        "open",
        "csvfile",
        "csv",
        "DictWriter",
        "csvfile",
        "fieldnames",
        "fieldnames",
        "writer",
        "writeheader",
        "key",
        "value",
        "predict_dict",
        "iteritems",
        "writer",
        "writerow",
        "key",
        "value",
        "time",
        "time",
        "start_time"
    ],
    "literals": [
        "\"train.json\"",
        "\"test.json\"",
        "'processed_ingredients'",
        "'-'",
        "'_'",
        "'ascii'",
        "'ignore'",
        "'ingredients'",
        "'processed_ingredients'",
        "'-'",
        "'_'",
        "'ascii'",
        "'ignore'",
        "'ingredients'",
        "'processed_ingredients_string'",
        "','",
        "'processed_ingredients'",
        "'processed_ingredients_string'",
        "','",
        "'processed_ingredients'",
        "'cuisine'",
        "'cuisine_number'",
        "'cuisine'",
        "'cuisine_number'",
        "'processed_ingredients_string'",
        "'processed_ingredients_string'",
        "'gini'",
        "'gini'",
        "'gini'",
        "'entropy'",
        "'l2'",
        "'log'",
        "'l2'",
        "'modified_huber'",
        "'l2'",
        "'l2'",
        "'objective'",
        "'multi:softprob'",
        "'eta'",
        "'max_depth'",
        "'num_class'",
        "'distance'",
        "'ball_tree'",
        "'distance'",
        "'auto'",
        "'objective'",
        "'multi:softmax'",
        "'eta'",
        "'max_depth'",
        "'num_class'",
        "'RandomForestClassifier_raw_blending.pkl'",
        "'RandomForestClassifier_tfidf_blending.pkl'",
        "'ExtraTreesClassifier_raw_blending.pkl'",
        "'ExtraTreesClassifier_tfidf_blending.pkl'",
        "'SGDClassifier_raw_blending.pkl'",
        "'SGDClassifier_tfidf_blending.pkl'",
        "'LogisticRegression_raw_blending.pkl'",
        "'LogisticRegression_tfidf_blending.pkl'",
        "'xgboost_raw_blending.model'",
        "'xgboost_tfidf_blending.model'",
        "'KNeighborsClassifier_raw_blending.pkl'",
        "'KNeighborsClassifier_tfidf_blending.pkl'",
        "'MultinomialNB_raw_blending.pkl'",
        "'MultinomialNB_tfidf_blending.pkl'",
        "\"train_index\"",
        "\"cv_index\"",
        "\"RandomForestClassifier_raw_predict_train\"",
        "\"RandomForestClassifier_tfidf_predict_train\"",
        "\"ExtraTreesClassifier_raw_predict_train\"",
        "\"ExtraTreesClassifier_tfidf_predict_train\"",
        "\"SGDClassifier_raw_predict_train\"",
        "\"SGDClassifier_tfidf_predict_train\"",
        "\"LogisticRegression_raw_predict_train\"",
        "\"LogisticRegression_tfidf_predict_train\"",
        "\"xgboost_raw_predict_train\"",
        "\"xgboost_tfidf_predict_train\"",
        "\"KNeighborsClassifier_raw_predict_train\"",
        "\"KNeighborsClassifier_tfidf_predict_train\"",
        "\"MultinomialNB_raw_predict_train\"",
        "\"MultinomialNB_tfidf_predict_train\"",
        "\"RandomForestClassifier_raw_predict_test\"",
        "\"RandomForestClassifier_tfidf_predict_test\"",
        "\"ExtraTreesClassifier_raw_predict_test\"",
        "\"ExtraTreesClassifier_tfidf_predict_test\"",
        "\"SGDClassifier_raw_predict_test\"",
        "\"SGDClassifier_tfidf_predict_test\"",
        "\"LogisticRegression_raw_predict_test\"",
        "\"LogisticRegression_tfidf_predict_test\"",
        "\"xgboost_raw_predict_test\"",
        "\"xgboost_tfidf_predict_test\"",
        "\"KNeighborsClassifier_raw_predict_test\"",
        "\"KNeighborsClassifier_tfidf_predict_test\"",
        "\"MultinomialNB_raw_predict_test\"",
        "\"MultinomialNB_tfidf_predict_test\"",
        "'cuisine'",
        "'id'",
        "'cuisine'",
        "'predict_result_ensemble.csv'",
        "'w'",
        "'id'",
        "'cuisine'",
        "'id'",
        "'cuisine'",
        "\"--- %s seconds ---\""
    ],
    "variables": [
        "start_time",
        "traindf",
        "testdf",
        "traindf",
        "testdf",
        "traindf",
        "testdf",
        "le",
        "traindf",
        "traindf",
        "cuisine_label",
        "vectorizer",
        "dtm_train",
        "dtm_test",
        "tfidf_trans",
        "tfidf_train",
        "tfidf_test",
        "clf1",
        "clf2",
        "clf3",
        "clf4",
        "clf5",
        "clf6",
        "clf7",
        "clf8",
        "num_rounds",
        "param",
        "clf9",
        "clf10",
        "clf11",
        "clf12",
        "clf13",
        "clf14",
        "n_folds",
        "class_number",
        "skf",
        "train_index",
        "cv_index",
        "train_pred1",
        "train_pred2",
        "train_pred3",
        "train_pred4",
        "train_pred5",
        "train_pred6",
        "train_pred7",
        "train_pred8",
        "train_pred9",
        "train_pred10",
        "train_pred11",
        "train_pred12",
        "train_pred13",
        "train_pred14",
        "blend_train",
        "test_pred1",
        "test_pred2",
        "test_pred3",
        "test_pred4",
        "test_pred5",
        "test_pred6",
        "test_pred7",
        "test_pred8",
        "test_pred9",
        "test_pred10",
        "test_pred11",
        "test_pred12",
        "test_pred13",
        "test_pred14",
        "blend_test",
        "param",
        "num_rounds",
        "dtrain",
        "dtest",
        "xgbclf",
        "predict_result",
        "testdf",
        "predict_dict",
        "fieldnames",
        "writer"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "%%",
        "%%#################### original data",
        "read train and test data from json",
        "data preprocessing",
        "1. replace '-' with '_'",
        "2. encode from unicode to ascii",
        "3. transform from uppercase to lowercase",
        "4. add a column for the clean string result",
        "Encode cuisine to integer(start from 0)",
        "%%#################### data preprocessing",
        "Document term matrix",
        "tf-idf transforming",
        "%%",
        "Mean validation score: 0.764 (std: 0.002)",
        "Mean validation score: 0.759 (std: 0.002)",
        "Mean validation score: 0.765 (std: 0.003)",
        "Mean validation score: 0.748 (std: 0.002)",
        "Mean validation score: 0.763 (std: 0.006)",
        "Mean validation score: 0.782 (std: 0.001)",
        "Mean validation score: 0.781 (std: 0.000)",
        "Mean validation score: 0.786 (std: 0.001)",
        "Mean validation score: 0.8",
        "Mean validation score: 0.8",
        "Mean validation score: 0.648 (std: 0.003)",
        "Mean validation score: 0.747 (std: 0.002)",
        "Mean validation score: 0.726 (std: 0.001)",
        "Mean validation score: 0.734 (std: 0.001)",
        "%% split into 2 disjoint set",
        "%% fit model by first set",
        "rf on dtm",
        "rf on tfidf",
        "ex on dtm",
        "ex on tfidf",
        "lsvc on dtm",
        "lsvc on tfidf",
        "lr on dtm",
        "lr on tfidf",
        "xgb on dtm",
        "(already fit)",
        "xgb on tfidf",
        "(already fit)",
        "knn on dtm",
        "knn on tfidf",
        "multinb on dtm",
        "multinb on tfidf",
        "%% level 0 predict as meta-feature",
        "%% concatenate level 0 output as level 1 output",
        "%% test predict",
        "%% concatenate level 0 output as level 1 output",
        "%% blend classifier to predict result",
        "%% save model",
        "%% save result",
        "%%####################write csv"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Fri Dec 18 18:38:01 2015\n\n@author: lypan\n\"\"\""
    ],
    "functions": [],
    "classes": []
}