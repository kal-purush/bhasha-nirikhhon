{
    "identifiers": [
        "f",
        "exports",
        "f",
        "define",
        "define",
        "define",
        "f",
        "g",
        "g",
        "g",
        "g",
        "g",
        "f",
        "e",
        "t",
        "n",
        "r",
        "o",
        "u",
        "n",
        "o",
        "t",
        "o",
        "require",
        "require",
        "u",
        "a",
        "a",
        "o",
        "i",
        "i",
        "o",
        "o",
        "f",
        "f",
        "n",
        "o",
        "t",
        "o",
        "l",
        "e",
        "t",
        "o",
        "e",
        "s",
        "n",
        "n",
        "e",
        "l",
        "l",
        "e",
        "t",
        "n",
        "r",
        "n",
        "o",
        "require",
        "require",
        "o",
        "r",
        "o",
        "s",
        "r",
        "o",
        "s",
        "require",
        "exports",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "exports",
        "require",
        "factory",
        "mod",
        "mod",
        "exports",
        "_MulticastSource",
        "exports",
        "_interopRequireDefault",
        "_MulticastSource",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "hold",
        "stream",
        "stream",
        "_MulticastSource2",
        "Hold",
        "stream",
        "source",
        "_classCallCheck",
        "Hold",
        "source",
        "Infinity",
        "_createClass",
        "Hold",
        "run",
        "sink",
        "scheduler",
        "sink",
        "sink",
        "sink",
        "sink",
        "sink",
        "holdAdd",
        "sink",
        "sink",
        "sink",
        "holdEvent",
        "sink",
        "scheduler",
        "Hold",
        "sink",
        "sink",
        "sink",
        "len",
        "t",
        "x",
        "t",
        "t",
        "x",
        "t",
        "x",
        "exports",
        "hold",
        "require",
        "exports",
        "exports",
        "require",
        "_interopRequireDefault",
        "_subject",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "exports",
        "_subject2",
        "require",
        "exports",
        "exports",
        "require",
        "require",
        "_interopRequireDefault",
        "_MulticastSource",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "sink",
        "scheduler",
        "_this",
        "sink",
        "scheduler",
        "x",
        "_this",
        "x",
        "err",
        "_this",
        "err",
        "x",
        "_this",
        "x",
        "Subscription",
        "run",
        "sink",
        "scheduler",
        "sink",
        "scheduler",
        "Subscription",
        "dispose",
        "sink",
        "scheduler",
        "sink",
        "scheduler",
        "e",
        "sink",
        "scheduler",
        "e",
        "Subscription",
        "add",
        "x",
        "tryEvent",
        "x",
        "Subscription",
        "error",
        "e",
        "e",
        "sink",
        "scheduler",
        "sink",
        "scheduler",
        "e",
        "sink",
        "scheduler",
        "e",
        "Subscription",
        "end",
        "x",
        "tryEnd",
        "x",
        "Subscription",
        "_most",
        "_MulticastSource2",
        "sink",
        "sink",
        "stream",
        "exports",
        "create",
        "require",
        "exports",
        "require",
        "unhandledRejection",
        "require",
        "require",
        "exports",
        "exports",
        "noop",
        "exports",
        "identity",
        "exports",
        "compose",
        "exports",
        "cons",
        "exports",
        "append",
        "exports",
        "drop",
        "exports",
        "tail",
        "exports",
        "copy",
        "exports",
        "exports",
        "reduce",
        "exports",
        "replace",
        "exports",
        "remove",
        "exports",
        "removeAll",
        "exports",
        "findIndex",
        "x",
        "x",
        "f",
        "g",
        "x",
        "f",
        "g",
        "x",
        "x",
        "array",
        "array",
        "l",
        "a",
        "x",
        "i",
        "l",
        "i",
        "a",
        "i",
        "array",
        "i",
        "a",
        "x",
        "a",
        "a",
        "l",
        "i",
        "l",
        "i",
        "b",
        "i",
        "a",
        "i",
        "b",
        "l",
        "x",
        "b",
        "n",
        "array",
        "array",
        "n",
        "l",
        "l",
        "n",
        "l",
        "i",
        "l",
        "i",
        "a",
        "i",
        "array",
        "n",
        "i",
        "a",
        "array",
        "drop",
        "array",
        "array",
        "array",
        "l",
        "i",
        "l",
        "i",
        "a",
        "i",
        "array",
        "i",
        "a",
        "f",
        "array",
        "array",
        "l",
        "i",
        "l",
        "i",
        "a",
        "i",
        "f",
        "array",
        "i",
        "a",
        "f",
        "z",
        "array",
        "array",
        "i",
        "l",
        "i",
        "r",
        "f",
        "r",
        "array",
        "i",
        "i",
        "r",
        "x",
        "i",
        "array",
        "array",
        "l",
        "j",
        "l",
        "j",
        "a",
        "j",
        "i",
        "j",
        "x",
        "array",
        "j",
        "a",
        "index",
        "array",
        "array",
        "index",
        "array",
        "array",
        "l",
        "l",
        "l",
        "i",
        "i",
        "index",
        "i",
        "b",
        "i",
        "array",
        "i",
        "i",
        "index",
        "i",
        "l",
        "i",
        "b",
        "i",
        "array",
        "i",
        "b",
        "f",
        "a",
        "a",
        "l",
        "i",
        "l",
        "i",
        "x",
        "a",
        "i",
        "f",
        "x",
        "b",
        "j",
        "x",
        "j",
        "b",
        "j",
        "b",
        "x",
        "a",
        "a",
        "i",
        "l",
        "i",
        "x",
        "a",
        "i",
        "i",
        "require",
        "exports",
        "require",
        "require",
        "MulticastSource",
        "source",
        "source",
        "MulticastSink",
        "MulticastSource",
        "sink",
        "scheduler",
        "sink",
        "n",
        "scheduler",
        "MulticastDisposable",
        "sink",
        "MulticastSource",
        "resolve",
        "dispose",
        "disposable",
        "disposable",
        "disposable",
        "source",
        "sink",
        "source",
        "sink",
        "MulticastDisposable",
        "s",
        "remaining",
        "s",
        "MulticastSink",
        "sink",
        "sink",
        "MulticastSink",
        "sink",
        "sink",
        "MulticastSink",
        "t",
        "x",
        "s",
        "s",
        "t",
        "x",
        "i",
        "s",
        "i",
        "s",
        "i",
        "t",
        "x",
        "MulticastSink",
        "t",
        "x",
        "s",
        "s",
        "t",
        "x",
        "i",
        "s",
        "i",
        "s",
        "i",
        "t",
        "x",
        "MulticastSink",
        "t",
        "e",
        "s",
        "s",
        "t",
        "e",
        "i",
        "s",
        "i",
        "s",
        "i",
        "t",
        "e",
        "require",
        "exports",
        "draining",
        "currentQueue",
        "queue",
        "currentQueue",
        "queue",
        "queueIndex",
        "queue",
        "drainQueue",
        "draining",
        "setTimeout",
        "cleanUpNextTick",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "queueIndex",
        "len",
        "currentQueue",
        "currentQueue",
        "queueIndex",
        "queueIndex",
        "len",
        "queue",
        "currentQueue",
        "draining",
        "clearTimeout",
        "timeout",
        "process",
        "fun",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "queue",
        "Item",
        "fun",
        "args",
        "queue",
        "draining",
        "setTimeout",
        "drainQueue",
        "fun",
        "array",
        "fun",
        "array",
        "Item",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "require",
        "exports",
        "define",
        "define",
        "require",
        "require",
        "require",
        "require",
        "makePromise",
        "Scheduler",
        "async",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "require",
        "exports",
        "define",
        "define",
        "async",
        "async",
        "Scheduler",
        "task",
        "task",
        "Scheduler",
        "task",
        "task",
        "Scheduler",
        "Scheduler",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "Scheduler",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "exports",
        "define",
        "define",
        "require",
        "require",
        "require",
        "unhandledRejection",
        "localConsole",
        "logError",
        "localConsole",
        "e",
        "localConsole",
        "e",
        "e",
        "localConsole",
        "e",
        "logInfo",
        "localConsole",
        "e",
        "localConsole",
        "e",
        "e",
        "localConsole",
        "e",
        "rejection",
        "enqueue",
        "report",
        "rejection",
        "rejection",
        "enqueue",
        "unreport",
        "rejection",
        "rejection",
        "enqueue",
        "throwit",
        "rejection",
        "r",
        "r",
        "reported",
        "r",
        "logError",
        "r",
        "format",
        "r",
        "r",
        "reported",
        "r",
        "i",
        "reported",
        "i",
        "logInfo",
        "r",
        "format",
        "r",
        "f",
        "x",
        "tasks",
        "f",
        "x",
        "running",
        "running",
        "setTimer",
        "flush",
        "running",
        "tasks",
        "tasks",
        "tasks",
        "e",
        "e",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "require",
        "exports",
        "process",
        "define",
        "define",
        "require",
        "setTimeout",
        "setTimeout",
        "f",
        "ms",
        "setTimeout",
        "f",
        "ms",
        "t",
        "clearTimeout",
        "t",
        "f",
        "capturedSetTimeout",
        "f",
        "isNode",
        "asap",
        "f",
        "process",
        "f",
        "MutationObs",
        "hasMutationObserver",
        "asap",
        "initMutationObserver",
        "MutationObs",
        "capturedSetTimeout",
        "vertxRequire",
        "setTimer",
        "f",
        "ms",
        "vertx",
        "ms",
        "f",
        "clearTimer",
        "vertx",
        "asap",
        "vertx",
        "vertx",
        "setTimer",
        "clearTimer",
        "asap",
        "process",
        "process",
        "MutationObserver",
        "MutationObserver",
        "WebKitMutationObserver",
        "WebKitMutationObserver",
        "MutationObserver",
        "MutationObserver",
        "run",
        "o",
        "node",
        "scheduled",
        "f",
        "f",
        "scheduled",
        "f",
        "node",
        "i",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "require",
        "require",
        "exports",
        "define",
        "define",
        "formatError",
        "formatObject",
        "tryStringify",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "formatObject",
        "e",
        "e",
        "s",
        "s",
        "o",
        "o",
        "s",
        "s",
        "tryStringify",
        "o",
        "s",
        "s",
        "x",
        "defaultValue",
        "x",
        "e",
        "defaultValue",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "exports",
        "process",
        "define",
        "define",
        "makePromise",
        "environment",
        "environment",
        "initEmitRejection",
        "proto",
        "Child",
        "proto",
        "Child",
        "resolver",
        "handler",
        "resolver",
        "Handler",
        "handler",
        "init",
        "resolver",
        "resolver",
        "Pending",
        "resolver",
        "promiseResolve",
        "promiseReject",
        "promiseNotify",
        "e",
        "promiseReject",
        "e",
        "handler",
        "x",
        "handler",
        "x",
        "reason",
        "handler",
        "reason",
        "x",
        "handler",
        "x",
        "resolve",
        "reject",
        "defer",
        "getHandler",
        "x",
        "isPromise",
        "x",
        "x",
        "Handler",
        "Async",
        "getHandler",
        "x",
        "x",
        "Handler",
        "Async",
        "Rejected",
        "x",
        "foreverPendingPromise",
        "Handler",
        "Pending",
        "onFulfilled",
        "onRejected",
        "onProgress",
        "parent",
        "onFulfilled",
        "state",
        "onRejected",
        "state",
        "Handler",
        "parent",
        "p",
        "parent",
        "child",
        "parent",
        "onFulfilled",
        "onRejected",
        "onProgress",
        "p",
        "onRejected",
        "onRejected",
        "begetFrom",
        "parent",
        "Pending",
        "parent",
        "parent",
        "Handler",
        "child",
        "all",
        "race",
        "traverse",
        "promises",
        "traverseWith",
        "snd",
        "promises",
        "f",
        "promises",
        "traverseWith",
        "tryCatch2",
        "f",
        "promises",
        "tryMap",
        "f",
        "promises",
        "f",
        "mapAt",
        "settleAt",
        "Pending",
        "promises",
        "pending",
        "i",
        "promises",
        "resolver",
        "i",
        "x",
        "promises",
        "i",
        "x",
        "i",
        "promises",
        "pending",
        "traverseAt",
        "promises",
        "handler",
        "i",
        "x",
        "resolver",
        "pending",
        "resolver",
        "Fulfilled",
        "results",
        "Handler",
        "resolver",
        "i",
        "x",
        "resolver",
        "resolver",
        "traverseAt",
        "promises",
        "settleAt",
        "i",
        "tryMap",
        "f",
        "x",
        "i",
        "resolver",
        "i",
        "x",
        "resolver",
        "results",
        "i",
        "x",
        "pending",
        "resolver",
        "Fulfilled",
        "results",
        "promises",
        "handler",
        "i",
        "x",
        "resolver",
        "maybeThenable",
        "x",
        "getHandlerMaybeThenable",
        "x",
        "h",
        "s",
        "h",
        "handler",
        "i",
        "resolver",
        "s",
        "handler",
        "i",
        "h",
        "resolver",
        "resolver",
        "h",
        "visitRemaining",
        "promises",
        "i",
        "h",
        "handler",
        "i",
        "x",
        "resolver",
        "visitRemaining",
        "promises",
        "start",
        "handler",
        "i",
        "promises",
        "i",
        "markAsHandled",
        "getHandler",
        "promises",
        "i",
        "handler",
        "h",
        "handler",
        "h",
        "handler",
        "h",
        "s",
        "h",
        "h",
        "h",
        "s",
        "h",
        "promises",
        "promises",
        "promises",
        "reject",
        "promises",
        "promises",
        "resolve",
        "promises",
        "runRace",
        "promises",
        "promises",
        "Pending",
        "i",
        "i",
        "promises",
        "i",
        "x",
        "promises",
        "i",
        "x",
        "i",
        "promises",
        "h",
        "getHandler",
        "x",
        "h",
        "resolver",
        "h",
        "visitRemaining",
        "promises",
        "i",
        "h",
        "h",
        "resolver",
        "resolver",
        "resolver",
        "Handler",
        "resolver",
        "x",
        "isPromise",
        "x",
        "x",
        "maybeThenable",
        "x",
        "getHandlerUntrusted",
        "x",
        "Fulfilled",
        "x",
        "x",
        "isPromise",
        "x",
        "x",
        "getHandlerUntrusted",
        "x",
        "x",
        "x",
        "untrustedThen",
        "Thenable",
        "untrustedThen",
        "x",
        "Fulfilled",
        "x",
        "e",
        "Rejected",
        "e",
        "Handler",
        "Handler",
        "Handler",
        "Handler",
        "Handler",
        "Handler",
        "noop",
        "Handler",
        "Handler",
        "Handler",
        "h",
        "h",
        "h",
        "h",
        "Handler",
        "to",
        "receiver",
        "fulfilled",
        "rejected",
        "progress",
        "to",
        "receiver",
        "fulfilled",
        "rejected",
        "progress",
        "Handler",
        "receiver",
        "fulfilled",
        "rejected",
        "progress",
        "failIfRejected",
        "receiver",
        "fulfilled",
        "rejected",
        "progress",
        "Handler",
        "f",
        "z",
        "c",
        "to",
        "Fold",
        "f",
        "z",
        "c",
        "to",
        "inherit",
        "Handler",
        "FailIfRejected",
        "FailIfRejected",
        "h",
        "h",
        "FailIfRejected",
        "receiver",
        "inheritedContext",
        "inheritedContext",
        "receiver",
        "inherit",
        "Handler",
        "Pending",
        "Pending",
        "Pending",
        "x",
        "getHandler",
        "x",
        "Pending",
        "x",
        "Rejected",
        "x",
        "Pending",
        "h",
        "h",
        "h",
        "h",
        "cycle",
        "h",
        "Pending",
        "i",
        "q",
        "i",
        "handler",
        "q",
        "i",
        "Pending",
        "handler",
        "handler",
        "tasks",
        "handler",
        "Pending",
        "continuation",
        "tasks",
        "ContinuationTask",
        "continuation",
        "continuation",
        "continuation",
        "Pending",
        "x",
        "tasks",
        "ProgressTask",
        "x",
        "Pending",
        "context",
        "context",
        "context",
        "c",
        "Pending",
        "context",
        "context",
        "Pending",
        "handler",
        "handler",
        "inherit",
        "Handler",
        "Async",
        "Async",
        "continuation",
        "tasks",
        "ContinuationTask",
        "continuation",
        "Async",
        "context",
        "context",
        "Async",
        "then",
        "thenable",
        "Pending",
        "tasks",
        "AssimilateTask",
        "then",
        "thenable",
        "inherit",
        "Pending",
        "Thenable",
        "x",
        "x",
        "inherit",
        "Handler",
        "Fulfilled",
        "Fulfilled",
        "Fulfilled",
        "f",
        "z",
        "c",
        "to",
        "runContinuation3",
        "f",
        "z",
        "c",
        "to",
        "Fulfilled",
        "cont",
        "runContinuation1",
        "cont",
        "cont",
        "cont",
        "x",
        "errorId",
        "x",
        "inherit",
        "Handler",
        "Rejected",
        "Rejected",
        "Rejected",
        "f",
        "z",
        "c",
        "to",
        "to",
        "Rejected",
        "cont",
        "cont",
        "runContinuation1",
        "cont",
        "cont",
        "cont",
        "Rejected",
        "context",
        "tasks",
        "ReportTask",
        "context",
        "Rejected",
        "tasks",
        "UnreportTask",
        "Rejected",
        "context",
        "emitRejection",
        "context",
        "context",
        "rejection",
        "context",
        "rejection",
        "context",
        "ReportTask",
        "emitRejection",
        "rejection",
        "rejection",
        "UnreportTask",
        "emitRejection",
        "noop",
        "Handler",
        "Handler",
        "foreverPendingHandler",
        "Rejected",
        "continuation",
        "handler",
        "continuation",
        "handler",
        "ContinuationTask",
        "value",
        "handler",
        "handler",
        "value",
        "ProgressTask",
        "q",
        "i",
        "q",
        "i",
        "c",
        "q",
        "i",
        "runNotify",
        "c",
        "c",
        "c",
        "then",
        "thenable",
        "resolver",
        "then",
        "thenable",
        "resolver",
        "AssimilateTask",
        "tryAssimilate",
        "_resolve",
        "_reject",
        "_notify",
        "x",
        "h",
        "x",
        "x",
        "h",
        "x",
        "x",
        "h",
        "x",
        "then",
        "thenable",
        "resolve",
        "reject",
        "notify",
        "then",
        "thenable",
        "resolve",
        "reject",
        "notify",
        "e",
        "reject",
        "e",
        "f",
        "z",
        "c",
        "to",
        "f",
        "z",
        "c",
        "to",
        "failIfRejected",
        "Fold",
        "x",
        "x",
        "Fold",
        "x",
        "x",
        "Fold",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "f",
        "h",
        "receiver",
        "next",
        "f",
        "next",
        "h",
        "h",
        "tryCatchReject",
        "f",
        "h",
        "receiver",
        "next",
        "f",
        "x",
        "h",
        "receiver",
        "next",
        "f",
        "next",
        "h",
        "h",
        "tryCatchReject3",
        "f",
        "x",
        "h",
        "receiver",
        "next",
        "f",
        "x",
        "h",
        "receiver",
        "next",
        "f",
        "next",
        "x",
        "h",
        "tryCatchReturn",
        "f",
        "x",
        "receiver",
        "next",
        "f",
        "a",
        "b",
        "f",
        "a",
        "b",
        "e",
        "reject",
        "e",
        "f",
        "x",
        "thisArg",
        "next",
        "next",
        "getHandler",
        "f",
        "thisArg",
        "x",
        "e",
        "next",
        "Rejected",
        "e",
        "f",
        "x",
        "y",
        "thisArg",
        "next",
        "f",
        "thisArg",
        "x",
        "y",
        "next",
        "e",
        "next",
        "Rejected",
        "e",
        "f",
        "x",
        "thisArg",
        "next",
        "next",
        "f",
        "thisArg",
        "x",
        "e",
        "next",
        "e",
        "Parent",
        "Child",
        "Child",
        "objectCreate",
        "Parent",
        "Child",
        "Child",
        "x",
        "y",
        "y",
        "process",
        "process",
        "process",
        "rejection",
        "process",
        "rejection",
        "rejection",
        "process",
        "rejection",
        "CustomEvent",
        "noop",
        "CustomEvent",
        "CustomEvent",
        "hasCustomEvent",
        "ev",
        "CustomEvent",
        "e",
        "hasCustomEvent",
        "noop",
        "rejection",
        "CustomEvent",
        "rejection",
        "rejection",
        "ev",
        "noop",
        "CustomEvent",
        "noop",
        "define",
        "define",
        "define",
        "factory",
        "factory",
        "require",
        "require",
        "exports",
        "exports",
        "exports",
        "require",
        "_interopRequireDefault",
        "_mostSubject",
        "require",
        "_interopRequireDefault",
        "_hold",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "makeSinkProxies",
        "drivers",
        "drivers",
        "sinkProxies",
        "driverName",
        "sinkProxies",
        "driverName",
        "_mostSubject2",
        "sinkProxies",
        "callDrivers",
        "drivers",
        "sinkProxies",
        "drivers",
        "sources",
        "driverName",
        "sources",
        "driverName",
        "drivers",
        "driverName",
        "_hold2",
        "sinkProxies",
        "driverName",
        "driverName",
        "sources",
        "runMain",
        "main",
        "sources",
        "disposableStream",
        "main",
        "sources",
        "sinks",
        "accumulator",
        "driverName",
        "accumulator",
        "driverName",
        "sinks",
        "driverName",
        "disposableStream",
        "accumulator",
        "logErrorToConsole",
        "err",
        "err",
        "replicateMany",
        "sinks",
        "sinkProxies",
        "setTimeout",
        "sinks",
        "driverName",
        "sinkProxies",
        "driverName",
        "driverName",
        "sinks",
        "driverName",
        "sinkProxies",
        "driverName",
        "sinkProxies",
        "driverName",
        "logErrorToConsole",
        "isObjectEmpty",
        "run",
        "main",
        "drivers",
        "main",
        "drivers",
        "drivers",
        "isObjectEmpty",
        "drivers",
        "_mostSubject2",
        "_subject",
        "_subject",
        "makeSinkProxies",
        "drivers",
        "disposableStream",
        "callDrivers",
        "drivers",
        "sinkProxies",
        "runMain",
        "main",
        "sources",
        "disposableStream",
        "replicateMany",
        "sinks",
        "sinkProxies",
        "dispose",
        "disposableSink",
        "sinkProxies",
        "key",
        "sinkProxies",
        "key",
        "disposableSink",
        "sinks",
        "sources",
        "dispose",
        "exports",
        "run",
        "exports",
        "run"
    ],
    "literals": [
        "\"object\"",
        "\"undefined\"",
        "\"function\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'use strict'",
        "\"function\"",
        "'@most/hold'",
        "'exports'",
        "'most/lib/source/MulticastSource'",
        "\"undefined\"",
        "'most/lib/source/MulticastSource'",
        "\"__esModule\"",
        "\"Cannot call a class as a function\"",
        "\"value\"",
        "'run'",
        "\"most/lib/source/MulticastSource\"",
        "'use strict'",
        "\"__esModule\"",
        "'./subject'",
        "\"./subject\"",
        "'use strict'",
        "\"__esModule\"",
        "'most'",
        "'most/lib/source/MulticastSource'",
        "\"most\"",
        "\"most/lib/source/MulticastSource\"",
        "'when/lib/decorators/unhandledRejection'",
        "'when/lib/Promise'",
        "\"when/lib/Promise\"",
        "\"when/lib/decorators/unhandledRejection\"",
        "'../base'",
        "'../Promise'",
        "\"../Promise\"",
        "\"../base\"",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "'use strict'",
        "'./makePromise'",
        "'./Scheduler'",
        "'./env'",
        "'function'",
        "\"./Scheduler\"",
        "\"./env\"",
        "\"./makePromise\"",
        "'use strict'",
        "'function'",
        "'use strict'",
        "'../env'",
        "'../format'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'Potentially unhandled rejection ['",
        "'] '",
        "'Handled previous rejection ['",
        "'] '",
        "'function'",
        "\"../env\"",
        "\"../format\"",
        "'use strict'",
        "'undefined'",
        "'vertx'",
        "'undefined'",
        "'[object process]'",
        "'function'",
        "'function'",
        "''",
        "'function'",
        "'_process'",
        "\"_process\"",
        "'use strict'",
        "'object'",
        "' (WARNING: non-Error used)'",
        "'[object Object]'",
        "'undefined'",
        "'function'",
        "'use strict'",
        "'function'",
        "'function'",
        "'catch'",
        "'function'",
        "'object'",
        "'non-iterable passed to race()'",
        "'function'",
        "'undefined'",
        "'function'",
        "'unhandledRejection'",
        "'unhandledRejection'",
        "'rejectionHandled'",
        "'Promise cycle'",
        "'object'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "'undefined'",
        "'function'",
        "'unhandledRejection'",
        "'undefined'",
        "'function'",
        "'unhandledRejection'",
        "'function'",
        "'_process'",
        "\"_process\"",
        "'use strict'",
        "\"__esModule\"",
        "'most-subject'",
        "'@most/hold'",
        "'function'",
        "'First argument given to run() must be the '",
        "'\\'main\\' function.'",
        "'object'",
        "'Second argument given to run() must be an '",
        "'object with driver functions as properties.'",
        "'Second argument given to run() must be an '",
        "'object with at least one driver function declared as a property.'",
        "\"@most/hold\"",
        "\"most-subject\""
    ],
    "variables": [
        "g",
        "define",
        "exports",
        "a",
        "f",
        "l",
        "n",
        "i",
        "o",
        "mod",
        "_MulticastSource2",
        "_createClass",
        "i",
        "descriptor",
        "hold",
        "Hold",
        "len",
        "_subject",
        "_subject2",
        "_most",
        "_MulticastSource",
        "_MulticastSource2",
        "_this",
        "sink",
        "stream",
        "unhandledRejection",
        "l",
        "a",
        "i",
        "l",
        "b",
        "i",
        "l",
        "a",
        "i",
        "l",
        "a",
        "i",
        "l",
        "a",
        "i",
        "r",
        "z",
        "i",
        "l",
        "l",
        "a",
        "j",
        "l",
        "b",
        "i",
        "l",
        "b",
        "x",
        "i",
        "j",
        "i",
        "l",
        "resolve",
        "n",
        "s",
        "remaining",
        "s",
        "i",
        "s",
        "i",
        "s",
        "i",
        "process",
        "queue",
        "draining",
        "currentQueue",
        "queueIndex",
        "timeout",
        "len",
        "args",
        "i",
        "makePromise",
        "Scheduler",
        "async",
        "i",
        "setTimer",
        "format",
        "logError",
        "noop",
        "logInfo",
        "noop",
        "localConsole",
        "tasks",
        "reported",
        "running",
        "i",
        "MutationObs",
        "capturedSetTimeout",
        "setTimer",
        "clearTimer",
        "asap",
        "vertxRequire",
        "require",
        "vertx",
        "scheduled",
        "node",
        "o",
        "f",
        "scheduled",
        "i",
        "s",
        "s",
        "tasks",
        "emitRejection",
        "objectCreate",
        "handler",
        "parent",
        "state",
        "p",
        "child",
        "child",
        "handler",
        "resolver",
        "pending",
        "results",
        "i",
        "x",
        "h",
        "s",
        "i",
        "start",
        "s",
        "resolver",
        "i",
        "x",
        "h",
        "untrustedThen",
        "h",
        "failIfRejected",
        "h",
        "q",
        "handler",
        "i",
        "c",
        "errorId",
        "foreverPendingHandler",
        "foreverPendingPromise",
        "q",
        "c",
        "i",
        "h",
        "hasCustomEvent",
        "ev",
        "ev",
        "_mostSubject",
        "_mostSubject2",
        "_hold",
        "_hold2",
        "makeSinkProxies",
        "callDrivers",
        "runMain",
        "sinks",
        "logErrorToConsole",
        "replicateMany",
        "isObjectEmpty",
        "run",
        "_subject",
        "disposableSink",
        "disposableStream",
        "sinkProxies",
        "sources",
        "sinks",
        "dispose"
    ],
    "comments": [
        "@license MIT License (c) copyright 2010-2015 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "@license MIT License (c) copyright 2010-2015 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "exit early if index beyond end of array",
        "exit early if index in bounds and length === 1",
        "@license MIT License (c) copyright 2010-2015 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "shim for using process in browser",
        "v8 likes predictible objects",
        "empty string to avoid regexp issues",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "Credit to Twisol (https://github.com/Twisol) for suggesting",
        "this type of extensible queue + trampoline approach for next-tick conflation.",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "Alias console to prevent things like uglify's drop_console option from",
        "removing console.log/error. Unhandled rejections fall into the same",
        "category as uncaught exceptions, and build tools shouldn't silence them.",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "global process,document,setTimeout,clearTimeout,MutationObserver,WebKitMutationObserver",
        "jshint maxcomplexity:6",
        "Sniff \"best\" async scheduling option",
        "Prefer process.nextTick or MutationObserver, then check for",
        "setTimeout, and finally vertx, since its the only env that doesn't",
        "have setTimeout",
        "Default env",
        "Detect specific env",
        "Node",
        "Modern browser",
        "vert.x",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "@license MIT License (c) copyright 2010-2014 original author or authors",
        "@author Brian Cavalier",
        "@author John Hann",
        "Creation",
        "Should be frozen",
        "Transformation and flow control",
        "Short circuit: value will not change, simply share handler",
        "Array combinators",
        "Sigh, race([]) is untestable unless we return *something*",
        "that is recognizable without calling .then() on it.",
        "Promise internals",
        "Below this, everything is @private",
        "deprecated",
        "Unhandled rejection hooks",
        "By default, everything is a noop",
        "Errors and singletons",
        "Task runners",
        "Other helpers",
        "global process, self, CustomEvent",
        "Returning falsy here means to call the default",
        "onPotentiallyUnhandledRejection API.  This is safe even in",
        "browserify since process.emit always returns falsy in browserify:",
        "https://github.com/defunctzombie/node-process/blob/master/browser.js#L40-L46"
    ],
    "docstrings": [
        "* Async task scheduler\n\t * @param {function} async function to schedule a single async function\n\t * @constructor",
        "* Enqueue a task\n\t * @param {{ run:function }} task",
        "* Enqueue a task to run after the main task queue\n\t * @param {{ run:function }} task",
        "* Drain the handler queue entirely, and then the after queue",
        "* Format an error into a string.  If e is an Error and has a stack property,\n\t * it's returned.  Otherwise, e is formatted using formatObject, with a\n\t * warning added about e not being a proper Error.\n\t * @param {*} e\n\t * @returns {String} formatted string, suitable for output to developers",
        "* Format an object, detecting \"plain\" objects and running them through\n\t * JSON.stringify if possible.\n\t * @param {Object} o\n\t * @returns {string}",
        "* Try to return the result of JSON.stringify(x).  If that fails, return\n\t * defaultValue\n\t * @param {*} x\n\t * @param {*} defaultValue\n\t * @returns {String|*} JSON.stringify(x) or defaultValue",
        "* Create a promise whose fate is determined by resolver\n\t\t * @constructor\n\t\t * @returns {Promise} promise\n\t\t * @name Promise",
        "* Run the supplied resolver\n\t\t * @param resolver\n\t\t * @returns {Pending}",
        "* Transition from pre-resolution state to post-resolution state, notifying\n\t\t\t * all listeners of the ultimate fulfillment or rejection\n\t\t\t * @param {*} x resolution value",
        "* Reject this promise with reason, which will be used verbatim\n\t\t\t * @param {Error|*} reason rejection reason, strongly suggested\n\t\t\t *   to be an Error type",
        "* @deprecated\n\t\t\t * Issue a progress event, notifying all progress listeners\n\t\t\t * @param {*} x progress event payload to pass to all listeners",
        "* Returns a trusted promise. If x is already a trusted promise, it is\n\t\t * returned, otherwise returns a new trusted Promise which follows x.\n\t\t * @param  {*} x\n\t\t * @return {Promise} promise",
        "* Return a reject promise with x as its reason (x is used verbatim)\n\t\t * @param {*} x\n\t\t * @returns {Promise} rejected promise",
        "* Return a promise that remains pending forever\n\t\t * @returns {Promise} forever-pending promise.",
        "* Creates an internal {promise, resolver} pair\n\t\t * @private\n\t\t * @returns {Promise}",
        "* Transform this promise's fulfillment value, returning a new Promise\n\t\t * for the transformed result.  If the promise cannot be fulfilled, onRejected\n\t\t * is called with the reason.  onProgress *may* be called with updates toward\n\t\t * this promise's fulfillment.\n\t\t * @param {function=} onFulfilled fulfillment handler\n\t\t * @param {function=} onRejected rejection handler\n\t\t * @param {function=} onProgress @deprecated progress handler\n\t\t * @return {Promise} new promise",
        "* If this promise cannot be fulfilled due to an error, call onRejected to\n\t\t * handle the error. Shortcut for .then(undefined, onRejected)\n\t\t * @param {function?} onRejected\n\t\t * @return {Promise}",
        "* Creates a new, pending promise of the same type as this promise\n\t\t * @private\n\t\t * @returns {Promise}",
        "* Return a promise that will fulfill when all promises in the\n\t\t * input array have fulfilled, or will reject when one of the\n\t\t * promises rejects.\n\t\t * @param {array} promises array of promises\n\t\t * @returns {Promise} promise for array of fulfillment values",
        "* Array<Promise<X>> -> Promise<Array<f(X)>>\n\t\t * @private\n\t\t * @param {function} f function to apply to each promise's value\n\t\t * @param {Array} promises array of promises\n\t\t * @returns {Promise} promise for transformed values",
        "* Fulfill-reject competitive race. Return a promise that will settle\n\t\t * to the same state as the earliest input promise to settle.\n\t\t *\n\t\t * WARNING: The ES6 Promise spec requires that race()ing an empty array\n\t\t * must return a promise that is pending forever.  This implementation\n\t\t * returns a singleton forever-pending promise, the same singleton that is\n\t\t * returned by Promise.never(), thus can be checked with ===\n\t\t *\n\t\t * @param {array} promises array of promises to race\n\t\t * @returns {Promise} if input is non-empty, a promise that will settle\n\t\t * to the same outcome as the earliest input promise to settle. if empty\n\t\t * is empty, returns a promise that will never settle.",
        "* Get an appropriate handler for x, without checking for cycles\n\t\t * @param {*} x\n\t\t * @returns {object} handler",
        "* Get a handler for thenable x.\n\t\t * NOTE: You must only call this if maybeThenable(x) == true\n\t\t * @param {object|function|Promise} x\n\t\t * @returns {object} handler",
        "* Get a handler for potentially untrusted thenable x\n\t\t * @param {*} x\n\t\t * @returns {object} handler",
        "* Handler for a promise that is pending forever\n\t\t * @constructor",
        "* Recursively collapse handler chain to find the handler\n\t\t * nearest to the fully resolved value.\n\t\t * @returns {object} handler nearest the fully resolved value",
        "* Handler that invokes fail() on any handler it becomes\n\t\t * @constructor",
        "* Handler that manages a queue of consumers waiting on a pending promise\n\t\t * @constructor",
        "* @deprecated",
        "* Wrap another handler and force it into a future stack\n\t\t * @param {object} handler\n\t\t * @constructor",
        "* Handler that wraps an untrusted thenable and assimilates it in a future stack\n\t\t * @param {function} then\n\t\t * @param {{then: function}} thenable\n\t\t * @constructor",
        "* Handler for a fulfilled promise\n\t\t * @param {*} x fulfillment value\n\t\t * @constructor",
        "* Handler for a rejected promise\n\t\t * @param {*} x rejection reason\n\t\t * @constructor",
        "* Run a single consumer\n\t\t * @constructor",
        "* Run a queue of progress handlers\n\t\t * @constructor",
        "* Assimilate a thenable, sending it's value to resolver\n\t\t * @param {function} then\n\t\t * @param {object|function} thenable\n\t\t * @param {object} resolver\n\t\t * @constructor",
        "* Fold a handler value with z\n\t\t * @constructor",
        "* @param {*} x\n\t\t * @returns {boolean} true iff x is a trusted Promise",
        "* Test just enough to rule out primitives, in order to take faster\n\t\t * paths in some code\n\t\t * @param {*} x\n\t\t * @returns {boolean} false iff x is guaranteed *not* to be a thenable",
        "* @deprecated",
        "* Return f.call(thisArg, x), or if it throws return a rejected promise for\n\t\t * the thrown exception",
        "* Same as above, but includes the extra argument parameter.",
        "* @deprecated\n\t\t * Return f.call(thisArg, x), or if it throws, *return* the exception"
    ],
    "functions": [
        "s",
        "_interopRequireDefault",
        "_classCallCheck",
        "defineProperties",
        "Hold",
        "holdAdd",
        "holdEvent",
        "_interopRequireDefault",
        "_interopRequireDefault",
        "Subscription",
        "tryEvent",
        "tryEnd",
        "create",
        "noop",
        "identity",
        "compose",
        "cons",
        "append",
        "drop",
        "tail",
        "copy",
        "reduce",
        "replace",
        "remove",
        "removeAll",
        "findIndex",
        "MulticastSource",
        "dispose",
        "MulticastDisposable",
        "MulticastSink",
        "cleanUpNextTick",
        "drainQueue",
        "Item",
        "noop",
        "Scheduler",
        "report",
        "unreport",
        "enqueue",
        "flush",
        "throwit",
        "noop",
        "isNode",
        "hasMutationObserver",
        "initMutationObserver",
        "run",
        "formatError",
        "formatObject",
        "tryStringify",
        "Child",
        "init",
        "promiseResolve",
        "promiseReject",
        "promiseNotify",
        "resolve",
        "reject",
        "defer",
        "begetFrom",
        "all",
        "traverse",
        "traverseWith",
        "mapAt",
        "settleAt",
        "traverseAt",
        "visitRemaining",
        "markAsHandled",
        "race",
        "runRace",
        "getHandler",
        "getHandlerMaybeThenable",
        "getHandlerUntrusted",
        "Handler",
        "FailIfRejected",
        "Pending",
        "Async",
        "Thenable",
        "Fulfilled",
        "Rejected",
        "ReportTask",
        "UnreportTask",
        "cycle",
        "ContinuationTask",
        "ProgressTask",
        "AssimilateTask",
        "_resolve",
        "_reject",
        "_notify",
        "tryAssimilate",
        "Fold",
        "isPromise",
        "maybeThenable",
        "runContinuation1",
        "runContinuation3",
        "runNotify",
        "tryCatch2",
        "tryCatchReject",
        "tryCatchReject3",
        "tryCatchReturn",
        "inherit",
        "snd",
        "noop",
        "initEmitRejection",
        "_interopRequireDefault"
    ],
    "classes": []
}