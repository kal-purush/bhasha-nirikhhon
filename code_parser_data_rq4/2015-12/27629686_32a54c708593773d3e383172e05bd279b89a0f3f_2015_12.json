{
    "identifiers": [
        "eu",
        "inloop",
        "easygcm",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "SharedPreferences",
        "android",
        "text",
        "TextUtils",
        "easygcm",
        "R",
        "PREFS_EASYGCM",
        "PROPERTY_REG_ID",
        "PROPERTY_APP_VERSION",
        "sInstance",
        "mGcmListener",
        "mCheckServicesHandler",
        "sLoggingEnabled",
        "SuppressWarnings",
        "context",
        "getInstance",
        "onCreate",
        "context",
        "sInstance",
        "sInstance",
        "sInstance",
        "mCheckServicesHandler",
        "gcmListener",
        "getInstance",
        "mGcmListener",
        "gcmListener",
        "handler",
        "handler",
        "getInstance",
        "mCheckServicesHandler",
        "handler",
        "context",
        "TextUtils",
        "isEmpty",
        "getRegistrationId",
        "context",
        "context",
        "regId",
        "appVersion",
        "GcmUtils",
        "getAppVersion",
        "context",
        "sLoggingEnabled",
        "GcmUtils",
        "Logger",
        "d",
        "appVersion",
        "editor",
        "getGcmPreferences",
        "context",
        "edit",
        "editor",
        "putString",
        "PROPERTY_REG_ID",
        "regId",
        "editor",
        "putInt",
        "PROPERTY_APP_VERSION",
        "appVersion",
        "editor",
        "apply",
        "context",
        "prefs",
        "getGcmPreferences",
        "context",
        "registrationId",
        "prefs",
        "getString",
        "PROPERTY_REG_ID",
        "registrationId",
        "isEmpty",
        "sLoggingEnabled",
        "GcmUtils",
        "Logger",
        "d",
        "registeredVersion",
        "prefs",
        "getInt",
        "PROPERTY_APP_VERSION",
        "MIN_VALUE",
        "currentVersion",
        "GcmUtils",
        "getAppVersion",
        "context",
        "registeredVersion",
        "currentVersion",
        "sLoggingEnabled",
        "GcmUtils",
        "Logger",
        "d",
        "registrationId",
        "context",
        "prefs",
        "getGcmPreferences",
        "context",
        "prefs",
        "edit",
        "remove",
        "PROPERTY_REG_ID",
        "remove",
        "PROPERTY_APP_VERSION",
        "apply",
        "context",
        "context",
        "getSharedPreferences",
        "PREFS_EASYGCM",
        "Context",
        "MODE_PRIVATE",
        "SuppressWarnings",
        "isEnabled",
        "sLoggingEnabled",
        "isEnabled",
        "context",
        "GcmUtils",
        "checkCanAndShouldRegister",
        "context",
        "context",
        "startService",
        "GcmRegistrationService",
        "createGcmRegistrationIntent",
        "context",
        "context",
        "appContext",
        "context",
        "getApplicationContext",
        "gcmSenderId",
        "appContext",
        "getResources",
        "getString",
        "R",
        "gcm_defaultSenderId",
        "TextUtils",
        "isEmpty",
        "gcmSenderId",
        "gcmSenderId",
        "gcmSenderId",
        "appContext",
        "getResources",
        "getString",
        "R",
        "easygcm_sender_id",
        "TextUtils",
        "isEmpty",
        "gcmSenderId",
        "gcmSenderId",
        "context",
        "regId",
        "getGcmListener",
        "context",
        "sendRegistrationIdToBackend",
        "regId",
        "storeRegistrationId",
        "context",
        "regId",
        "context",
        "mGcmListener",
        "mGcmListener",
        "context",
        "getApplicationContext",
        "context",
        "getApplicationContext"
    ],
    "literals": [
        "\"easygcm\"",
        "\"registration_id\"",
        "\"appVersion\"",
        "\"UnusedDeclaration\"",
        "\"GcmServicesHandler can't be null\"",
        "\"Saving regId on app version \"",
        "\"\"",
        "\"Registration not found.\"",
        "\"\"",
        "\"App version changed.\"",
        "\"\"",
        "\"UnusedDeclaration\"",
        "\"You have to override the easygcm_sender_id string \"",
        "\"resource to provide the GCM sender ID, OR provide it using google services \"",
        "\"gradle plugin and google-services.json configuration.\"",
        "\"Please implement GcmListener in your Application or use method \"",
        "\"setGcmListener()\""
    ],
    "variables": [
        "sInstance",
        "mGcmListener",
        "mCheckServicesHandler"
    ],
    "comments": [
        "Check if app was updated; if so, it must clear the registration ID",
        "since the existing regID is not guaranteed to work with the new",
        "app version.",
        "The registrationId is stored in SharedPreferences by the library.",
        "The check method fails if: device is offline / app already registered / GooglePlayServices unavailable",
        "Start a background service to register in a background thread",
        "Try to use gcm_defaultSenderId generated by google services gradle task",
        "Try to use easygcm_sender_id value for backward compatibility",
        "Called from an IntentService background thread",
        "You should send the registration ID to your server over HTTP, so it",
        "can use GCM/HTTP or CCS to send messages to your app.",
        "Persist the regID - no need to register again.",
        "Also serves for detection of previous registrations"
    ],
    "docstrings": [
        "* Allows to specify custom {@link eu.inloop.easygcm.GcmListener} if you don't want to implement it in the {@link\n     * android.app.Application} instance.\n     * <p/>\n     * This method should be called in {@link android.app.Application#onCreate()}.\n     *\n     * @param gcmListener custom GCM listener",
        "* Allows to specify a custom {@link eu.inloop.easygcm.GcmServicesHandler} which handles a situation\n     * when Google Play services are not available. Typically this should display a warning dialog.\n     * The default handler shows\n     * {@link com.google.android.gms.common.GoogleApiAvailability#getErrorDialog(android.app.Activity, int, int)}\n     *\n     * @param handler your custom handler for checking GcmServices.",
        "* Checks, whether a registration Id for an app exists. If not, the app needs to register\n     * @param context application's context.\n     * @return true if a registration Id is persisted in shared preferences, false otherwise.",
        "* Stores the registration ID and the app versionCode in the application's\n     * {@code SharedPreferences}.\n     *\n     * @param context application's context.\n     * @param regId   registration ID",
        "* Gets the current registration ID for application on GCM service, if there is one.\n     * <p/>\n     * If result is empty, the app needs to register.\n     *\n     * @return registration ID, or empty string if there is no existing\n     * registration ID.",
        "* Removes the current registration id effectively forcing the app to register again.\n     * @param context application's context.",
        "* @return Application's {@code SharedPreferences}.",
        "* Registers the application defined by a context activity to GCM in case the registration\n     * has not been done already.\n     * @param context Activity belonging to the app being registered",
        "* Get GCM sender id from available configuration.\n     * <p/>\n     * Returns gcm_defaultSenderId if it's provided by the google services gradle plugin via\n     * google-services.json. Otherwise, returns easygcm_sender_id value for easygcm backward\n     * compatibility.\n     *\n     * @param context Application context\n     * @return GCM sender id"
    ],
    "functions": [
        "init",
        "EasyGcm",
        "getInstance",
        "EasyGcm",
        "setGcmListener",
        "setCheckServicesHandler",
        "isRegistered",
        "storeRegistrationId",
        "getRegistrationId",
        "removeRegistrationId",
        "SharedPreferences",
        "getGcmPreferences",
        "setLoggingEnabled",
        "onCreate",
        "getGcmSenderId",
        "onSuccessfulRegistration",
        "GcmListener",
        "getGcmListener"
    ],
    "classes": [
        "EasyGcm"
    ]
}