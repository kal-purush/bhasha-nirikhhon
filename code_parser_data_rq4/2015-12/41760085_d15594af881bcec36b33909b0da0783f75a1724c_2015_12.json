{
    "identifiers": [
        "org",
        "eclipse",
        "smarthome",
        "core",
        "library",
        "types",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "Calendar",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "TimeZone",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "junit",
        "runners",
        "Parameterized",
        "org",
        "junit",
        "runners",
        "Parameterized",
        "Parameters",
        "RunWith",
        "defaultTimeZone",
        "inputTimeMap",
        "inputTimeZone",
        "inputTimeString",
        "expectedResult",
        "defaultTimeZone",
        "inputTimeMap",
        "inputTimeZone",
        "expectedResult",
        "defaultTimeZone",
        "defaultTimeZone",
        "inputTimeMap",
        "inputTimeMap",
        "inputTimeZone",
        "inputTimeZone",
        "inputTimeString",
        "expectedResult",
        "expectedResult",
        "defaultTimeZone",
        "inputTimeString",
        "expectedResult",
        "defaultTimeZone",
        "defaultTimeZone",
        "inputTimeMap",
        "inputTimeZone",
        "inputTimeString",
        "inputTimeString",
        "expectedResult",
        "expectedResult",
        "Parameters",
        "Arrays",
        "asList",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "TimeZone",
        "getTimeZone",
        "initTimeMap",
        "TimeZone",
        "getTimeZone",
        "inputTimeMap",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "put",
        "inputTimeMap",
        "parameterSet",
        "parameterSet",
        "parameterSet",
        "parameterSet",
        "After",
        "Test",
        "inputTimeString",
        "TimeZone",
        "setDefault",
        "parameterSet",
        "defaultTimeZone",
        "parameterSet",
        "inputTimeString",
        "calendar",
        "Calendar",
        "getInstance",
        "parameterSet",
        "inputTimeZone",
        "calendar",
        "parameterSet",
        "inputTimeMap",
        "get",
        "parameterSet",
        "inputTimeMap",
        "get",
        "parameterSet",
        "inputTimeMap",
        "get",
        "parameterSet",
        "inputTimeMap",
        "get",
        "parameterSet",
        "inputTimeMap",
        "get",
        "parameterSet",
        "inputTimeMap",
        "get",
        "inputTimeString",
        "DateTimeType",
        "DATE_PATTERN",
        "format",
        "calendar",
        "getTime",
        "inputTimeString",
        "parameterSet",
        "inputTimeString",
        "dt",
        "DateTimeType",
        "valueOf",
        "inputTimeString",
        "parameterSet",
        "defaultTimeZone",
        "getDisplayName",
        "TimeZone",
        "SHORT",
        "Locale",
        "ROOT",
        "TimeZone",
        "getDefault",
        "getDisplayName",
        "parameterSet",
        "inputTimeZone",
        "inputTimeString",
        "inputTimeString",
        "parameterSet",
        "inputTimeZone",
        "getDisplayName",
        "TimeZone",
        "SHORT",
        "Locale",
        "ROOT",
        "parameterSet",
        "expectedResult",
        "dt",
        "toString",
        "assertEquals",
        "parameterSet",
        "expectedResult",
        "dt",
        "toString"
    ],
    "literals": [
        "\"UTC\"",
        "\"UTC\"",
        "\"2014-03-30T10:58:47\"",
        "\"UTC\"",
        "\"CET\"",
        "\"2014-03-30T08:58:47\"",
        "\"UTC\"",
        "\"2014-03-30T10:58:47UTS\"",
        "\"2014-03-30T10:58:47\"",
        "\"CET\"",
        "\"UTC\"",
        "\"2014-03-30T12:58:47\"",
        "\"CET\"",
        "\"CET\"",
        "\"2014-03-30T10:58:47\"",
        "\"CET\"",
        "\"2014-03-30T10:58:47UTS\"",
        "\"2014-03-30T10:58:47\"",
        "\"GMT\"",
        "\"GMT\"",
        "\"2014-03-30T10:58:47\"",
        "\"GMT+2\"",
        "\"GML\"",
        "\"2014-03-30T12:58:47\"",
        "\"GMT-2\"",
        "\"GMT+3\"",
        "\"2014-03-30T05:58:47\"",
        "\"GMT-2\"",
        "\"GMT-4\"",
        "\"2014-03-30T12:58:47\"",
        "\"year\"",
        "\"month\"",
        "\"date\"",
        "\"hourOfDay\"",
        "\"minute\"",
        "\"second\"",
        "\"\"",
        "\"year\"",
        "\"month\"",
        "\"date\"",
        "\"hourOfDay\"",
        "\"minute\"",
        "\"second\"",
        "\"createDate (Default TimeZone: expected=\"",
        "\"|current=\"",
        "\"):\"",
        "\"\\tInput: \"",
        "\"\\tInput: \"",
        "\"\\tExpected: \"",
        "\"\\tResult  : \""
    ],
    "variables": [
        "defaultTimeZone",
        "inputTimeMap",
        "inputTimeZone",
        "inputTimeString",
        "expectedResult",
        "parameterSet",
        "inputTimeString"
    ],
    "comments": [
        "for simplicity we use always the same input time.",
        "set default time zone",
        "get formatted time string",
        "create debug output to reproduce",
        "Test"
    ],
    "docstrings": [
        "* Copyright (c) 2014-2015 openHAB UG (haftungsbeschraenkt) and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html",
        "* @author Thomas.Eichstaedt-Engelen",
        "* parameter test set class.\n\t * each instance of this class represents a test which executes the test once.",
        "* the java default time zone to set.\n\t\t * this should not change a result, except for wrong time zone informations,\n\t\t * then this default time zone is used.",
        "* input time.\n\t\t * used to call the {@link Calendar#set(int, int, int, int, int, int)} method to set the time.",
        "* input time zone.\n\t\t * used to call the {@link Calendar#setTimeZone(TimeZone)} to set the time zone.\n\t\t * the time zone offset has direct impact on the result.",
        "* direct input of a time string (with or without time zone).\n\t\t * @see {@link DateTimeType#valueOf(String)}\n\t\t * if this is set, the {@link ParameterSet#inputTimeMap} and {@link ParameterSet#inputTimeZone} are ignored",
        "* the expected result of the test.\n\t\t * golden rule:\n\t\t * should always return the input time minus or plus the offset of the given time zone.\n\t\t * if no time zone is specified or the time zone in the {@link ParameterSet#inputTimeString} is wrong, then the {@link ParameterSet#defaultTimeZone} is used.",
        "* create a parameter set with {@link ParameterSet#inputTimeMap} and {@link ParameterSet#inputTimeZone} parameters.\n\t\t * @param defaultTimeZone\n\t\t * @param inputTimeMap\n\t\t * @param inputTimeZone\n\t\t * @param expectedResult",
        "* create a parameter set with {@link ParameterSet#inputTimeString} parameter.\n\t\t * @param defaultTimeZone\n\t\t * @param inputTimeString\n\t\t * @param expectedResult",
        "* Test parameter maps collection.\n\t * \n\t * @return collection",
        "* setup Test class with current parameter map.\n\t * \n\t * @param parameterMap\n\t *            parameter map"
    ],
    "functions": [
        "ParameterSet",
        "ParameterSet",
        "parameters",
        "initTimeMap",
        "DateTimeTypeTest",
        "afterTest",
        "createDate"
    ],
    "classes": [
        "DateTimeTypeTest",
        "ParameterSet"
    ]
}