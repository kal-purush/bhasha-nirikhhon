{
    "identifiers": [
        "os",
        "sys",
        "re",
        "argparse",
        "itertools",
        "datetime",
        "pandas",
        "pd",
        "numpy",
        "np",
        "random",
        "matplotlib",
        "pyplot",
        "plt",
        "genomepy",
        "config",
        "genomepy",
        "gffparser",
        "gp",
        "config",
        "import_paths",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "dbpaths",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "line",
        "gff",
        "gp",
        "parse_cols",
        "line",
        "fields",
        "fields",
        "gp",
        "parse_atts",
        "line",
        "re",
        "search",
        "pattern",
        "atts",
        "miso_s",
        "gff",
        "ingene",
        "fields",
        "fields",
        "len",
        "gene_s",
        "gff",
        "ingene",
        "fields",
        "fields",
        "len",
        "gene_s",
        "gene_s",
        "fields",
        "fields",
        "fields",
        "line",
        "gff",
        "gp",
        "parse_cols",
        "line",
        "fields",
        "fields",
        "gp",
        "parse_atts",
        "line",
        "re",
        "search",
        "pattern",
        "atts",
        "miso_s",
        "gff",
        "findfeatures",
        "fields",
        "fields",
        "strand",
        "fields",
        "ftype",
        "len",
        "gene_s",
        "gff",
        "findfeatures",
        "fields",
        "fields",
        "strand",
        "fields",
        "ftype",
        "len",
        "gene_s",
        "g",
        "atts",
        "g",
        "gene_s",
        "fields",
        "fields",
        "fields",
        "file",
        "pd",
        "read_csv",
        "file",
        "header",
        "sep",
        "index_col",
        "df",
        "mean",
        "axis",
        "df",
        "define_arguments",
        "parser",
        "parse_args",
        "config",
        "check_verbose",
        "args",
        "quiet",
        "config",
        "create_log",
        "args",
        "outdir",
        "args",
        "directory",
        "outname",
        "args",
        "output",
        "logfile",
        "verbalise",
        "datetime",
        "datetime",
        "now",
        "gp",
        "My_gff",
        "args",
        "gff",
        "primary_key",
        "cbir",
        "build_master_gene",
        "datetime",
        "datetime",
        "now",
        "verbalise",
        "datetime",
        "timedelta",
        "total_seconds",
        "t2",
        "t0",
        "verbalise",
        "datetime",
        "datetime",
        "now",
        "gp",
        "GffLibrary",
        "args",
        "gff",
        "cbirlib",
        "build_master_gene",
        "datetime",
        "datetime",
        "now",
        "verbalise",
        "datetime",
        "timedelta",
        "total_seconds",
        "t2",
        "t0",
        "verbalise",
        "open",
        "args",
        "input",
        "line",
        "handle",
        "parse_miso",
        "line",
        "cbir",
        "args",
        "alt_type",
        "parse_miso_new",
        "line",
        "cbirlib",
        "args",
        "alt_type",
        "data",
        "altered",
        "append",
        "data",
        "datanew",
        "altered_new",
        "append",
        "datanew",
        "handle",
        "close",
        "verbalise",
        "len",
        "altered",
        "verbalise",
        "len",
        "altered_new",
        "verbalise",
        "altered",
        "verbalise",
        "altered_new",
        "verbalise",
        "sum",
        "i",
        "altered",
        "i",
        "altered_new",
        "gene",
        "scaf",
        "start",
        "end",
        "altered",
        "g",
        "gene",
        "g",
        "gene_tracker",
        "gene_tracker",
        "g",
        "g",
        "cbir",
        "master",
        "mex",
        "cbir",
        "master",
        "g",
        "mex",
        "start",
        "mex",
        "mex",
        "end",
        "mex",
        "g",
        "mex",
        "redundant_tracker",
        "redundant_exons",
        "append",
        "g",
        "mex",
        "mex",
        "cbir",
        "master",
        "g",
        "index",
        "mex",
        "mex",
        "gene_tracker",
        "g",
        "exon_pos",
        "gene_tracker",
        "g",
        "mrna",
        "cbir",
        "toplevel",
        "g",
        "alt_transcripts",
        "g",
        "gene_tracker",
        "g",
        "append",
        "mrna",
        "exon_pos",
        "found",
        "no_match",
        "append",
        "g",
        "scaf",
        "start",
        "end",
        "no_master",
        "append",
        "g",
        "sum",
        "t",
        "altered",
        "g",
        "t",
        "exons_found",
        "len",
        "alt_exons",
        "len",
        "no_master",
        "len",
        "no_match",
        "len",
        "redundant_exons",
        "verbalise",
        "verbalise",
        "exons_found",
        "verbalise",
        "len",
        "redundant_exons",
        "exons_found",
        "verbalise",
        "exit",
        "len",
        "no_master",
        "verbalise",
        "len",
        "no_master",
        "verbalise",
        "join",
        "g",
        "g",
        "no_master",
        "len",
        "no_match",
        "verbalise",
        "len",
        "no_match",
        "verbalise",
        "join",
        "g",
        "g",
        "no_match",
        "verbalise",
        "len",
        "alt_exons",
        "args",
        "alt_type",
        "verbalise",
        "datetime",
        "datetime",
        "now",
        "iter",
        "args",
        "iterations",
        "count",
        "datetime",
        "datetime",
        "now",
        "datetime",
        "timedelta",
        "total_seconds",
        "t1",
        "t0",
        "count",
        "tdiff",
        "args",
        "iterations",
        "count",
        "datetime",
        "timedelta",
        "seconds",
        "remaining",
        "speed",
        "sys",
        "stdout",
        "write",
        "count",
        "args",
        "iterations",
        "count",
        "args",
        "iterations",
        "tremaining",
        "sys",
        "stdout",
        "flush",
        "verbalise",
        "count",
        "args",
        "iterations",
        "count",
        "args",
        "iterations",
        "tremaining",
        "parse_expression",
        "args",
        "expression",
        "gene",
        "alt_exons",
        "expression",
        "loc",
        "gene",
        "target_expression",
        "append",
        "target",
        "expression",
        "loc",
        "expression",
        "target",
        "expression",
        "target",
        "index",
        "g",
        "g",
        "filtered",
        "g",
        "cbir",
        "master",
        "g",
        "g",
        "have_master",
        "g",
        "alt_exons",
        "len",
        "cbir",
        "master",
        "g",
        "alt_exons",
        "gene",
        "option_size",
        "append",
        "len",
        "gene_options",
        "retry",
        "random",
        "choice",
        "gene_options",
        "partner",
        "cbir",
        "toplevel",
        "partner",
        "cbir",
        "master",
        "partner",
        "alt_exons",
        "gene",
        "IndexError",
        "retry",
        "retry",
        "len",
        "gene_options",
        "gene",
        "verbalise",
        "np",
        "mean",
        "option_size",
        "verbalise",
        "args",
        "alt_type",
        "np",
        "mean",
        "target_expression",
        "g",
        "g",
        "i",
        "alt_exons",
        "g",
        "i",
        "matched_exons",
        "len",
        "unmatched_exons",
        "verbalise",
        "verbalise",
        "unmatched_exons",
        "open",
        "outfile",
        "handle",
        "write",
        "gene_id",
        "exon",
        "alt_exons",
        "items",
        "cbir",
        "toplevel",
        "gene_id",
        "cbir",
        "master",
        "gene_id",
        "exon",
        "matched_exons",
        "gene_id",
        "matched_exons",
        "gene_id",
        "matched_exons",
        "gene_id",
        "handle",
        "write",
        "gene_id",
        "exon",
        "t_scaf",
        "t_positions",
        "t_positions",
        "partner",
        "p_scaf",
        "p_positions",
        "p_positions",
        "handle",
        "close",
        "open",
        "outfile",
        "gene",
        "idx",
        "alt_transcripts",
        "handle",
        "write",
        "gene",
        "join",
        "x",
        "x",
        "alt_transcripts",
        "gene",
        "idx",
        "handle",
        "close",
        "args",
        "display_off",
        "plt",
        "hist",
        "target_expression",
        "bins",
        "alpha",
        "plt",
        "title",
        "len",
        "alt_exons",
        "args",
        "alt_type",
        "np",
        "mean",
        "target_expression",
        "plt",
        "show",
        "plt",
        "hist",
        "option_size",
        "bins",
        "alpha",
        "plt",
        "title",
        "args",
        "alt_type",
        "np",
        "mean",
        "option_size",
        "plt",
        "show"
    ],
    "literals": [
        "\"-q\"",
        "\"--quiet\"",
        "'store_true'",
        "\"print fewer messages and output details\"",
        "\"-o\"",
        "\"--output\"",
        "'genematch.out'",
        "\"specify the filename to save results to\"",
        "\"-d\"",
        "\"--directory\"",
        "\"specify the directory to save results to\"",
        "\"input\"",
        "\"file containing exon splicing feature to compare\"",
        "\"--expression\"",
        "'+'",
        "\"gene expression file for gene comparisons\"",
        "\"-c\"",
        "\"--column\"",
        "\"column in which gene names are found (default = 0)\"",
        "\"-g\"",
        "\"--gff\"",
        "'gff'",
        "\"gff file for extracting gene names (default available)\"",
        "\"-D\"",
        "\"--display_off\"",
        "'store_true'",
        "\"do not display graphs\"",
        "\"-I\"",
        "\"--iterations\"",
        "\"number of random lists to generate (all appended to same file)\"",
        "\"-t\"",
        "\"--alt_type\"",
        "'se'",
        "'se'",
        "'\\.se'",
        "'mxe'",
        "'\\.mxe\\d'",
        "'a5s'",
        "'\\.coreAndExt'",
        "'a3s'",
        "'\\.coreAndExt'",
        "'ri'",
        "'\\.withRI'",
        "'any'",
        "'\\.'",
        "'type'",
        "'exon'",
        "'ID'",
        "'scaf'",
        "'start'",
        "'scaf'",
        "'end'",
        "'scaf'",
        "'start'",
        "'end'",
        "'se'",
        "'\\.se'",
        "'mxe'",
        "'\\.mxe\\d'",
        "'a5s'",
        "'\\.coreAndExt'",
        "'a3s'",
        "'\\.coreAndExt'",
        "'ri'",
        "'\\.withRI'",
        "'type'",
        "'exon'",
        "'ID'",
        "'scaf'",
        "'start'",
        "'strand'",
        "'gene'",
        "'scaf'",
        "'start'",
        "'strand'",
        "'gene'",
        "'Name'",
        "'gene'",
        "'scaf'",
        "'start'",
        "'end'",
        "\" \"",
        "'mean'",
        "'__main__'",
        "\"out\"",
        "\"B\"",
        "\"Building master gene exon positions...\"",
        "'gene'",
        "\"M\"",
        "\"Time to complete old gff: %s\"",
        "\"M\"",
        "\"Building new GFF with masters...\"",
        "\"M\"",
        "\"Time to complete new gff: %s\"",
        "\"B\"",
        "\"Extracting alternate exon positions...\"",
        "'rb'",
        "\"M\"",
        "\"length of old altered: %d\"",
        "\"M\"",
        "\"length of new altered: %d\"",
        "\"M\"",
        "\"M\"",
        "\"M\"",
        "\"missed in new\"",
        "'mRNA'",
        "\"R\"",
        "\"Some exons are not accounted for!!\"",
        "\"R\"",
        "\"%d total exons found from parse_miso step\"",
        "\"R\"",
        "\"%d redundant exons found\"",
        "\"R\"",
        "\"No exons found! Exiting.\"",
        "\"R\"",
        "\"%d exons did not have a gene with a master\"",
        "\"R\"",
        "\" \"",
        "\"...\"",
        "\"R\"",
        "\"%d exons did not match an exon in the master gene\"",
        "\"R\"",
        "\"\\n\"",
        "\"...\"",
        "\"G\"",
        "\"%d %s exons found and sent for partnering.\"",
        "\"B\"",
        "\"Picking a match for each alternately spliced exon...\"",
        "\"\\r%d/%d (%.2f%%) complete. Time remaining ~ %s            \"",
        "\"Y\"",
        "\"\\r%d/%d (%.2f%%) complete. Time remaining ~ %s            \"",
        "'mean'",
        "\"mean\"",
        "\"mean\"",
        "'scaffold'",
        "\"No exon match found for gene \"",
        "\"G\"",
        "\"Average number of matched genes to choose from: %.2f\"",
        "\"G\"",
        "\"Average expression of genes with alternately spliced exons (%s): %.2f\"",
        "\"R\"",
        "\"Could not find a match for %d exons:\"",
        "\"R\"",
        "'a'",
        "\"###\\n\"",
        "'scaffold'",
        "\"%-15s %-3d %-12s %-10d %-10d %-15s %-12s %-10d %d\\n\"",
        "'transcripts.out'",
        "'w'",
        "\"%-16s %s\\n\"",
        "\" \"",
        "\"Expression (VST) of %d genes with alternately-spliced exons (%s)\\n(mean = %.2f)\"",
        "\"Number of comparable genes from which to choose for %s alternately-spliced exons\\n(mean = %.2f)\""
    ],
    "variables": [
        "dbpaths",
        "parser",
        "pattern",
        "fields",
        "atts",
        "miso_s",
        "gene_s",
        "gene_s",
        "pattern",
        "fields",
        "atts",
        "miso_s",
        "gene_s",
        "gene_s",
        "df",
        "df",
        "parser",
        "args",
        "verbalise",
        "logfile",
        "outfile",
        "t0",
        "cbir",
        "t2",
        "t0",
        "cbirlib",
        "t2",
        "alt_exons",
        "handle",
        "altered",
        "altered_new",
        "data",
        "datanew",
        "no_master",
        "no_match",
        "gene_tracker",
        "redundant_tracker",
        "redundant_exons",
        "alt_transcripts",
        "gene_tracker",
        "g",
        "found",
        "found",
        "exon_pos",
        "alt_exons",
        "g",
        "alt_transcripts",
        "g",
        "redundant_tracker",
        "g",
        "mex",
        "exons_found",
        "count",
        "t0",
        "t1",
        "tdiff",
        "speed",
        "remaining",
        "tremaining",
        "matched_exons",
        "expression",
        "option_size",
        "target_expression",
        "target",
        "filtered",
        "have_master",
        "gene_options",
        "retry",
        "partner",
        "matched_exons",
        "gene",
        "retry",
        "unmatched_exons",
        "handle",
        "t_scaf",
        "t_positions",
        "partner",
        "p_scaf",
        "p_positions",
        "handle"
    ],
    "comments": [
        "!/usr/bin/env python",
        "INITIALISE THE FILE PATHS NEEDED FOR ANALYSIS #######################",
        "",
        "input options ###",
        "logging options:",
        "data file options:",
        "analysis options:",
        "define the relevant regex pattern that successfully identifies a given AS event:",
        "see if gff line is an AS exon",
        "find genes sharing location",
        "define the relevant regex pattern that successfully identifies a given AS event:",
        "see if gff line is an AS exon",
        "find genes sharing location",
        "",
        "",
        "",
        "",
        "",
        "extract all alternately spliced exons:",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "keep track of genes that appear repeatedly:",
        "Alternately-spliced exon found!!",
        "determine which transcript it came from:",
        "if (start, end) in cbir.exondict[mrna]:",
        "mark gene and exon as used:",
        "report progress:",
        "(counts/s)",
        "initialise result variables:",
        "get expression of target gene:",
        "find all genes with expression within 1.2 fold of target:",
        "remove genes with no master gene positions (primarily non-coding RNA):",
        "remove genes that also have alternate exons:",
        "select a matched gene randomly, then append the corresponding exon to match_dic:",
        "set break in case we get stuck:",
        "report results:",
        "output list of pairs:",
        "output list of transcripts containing alternate splicing:",
        "alt_transcripts[g, gene_tracker[g]] = [(mrna, exon_position)]"
    ],
    "docstrings": [
        "\"\"\"\nTakes a set of alternately spliced exons (for example), and randomly selects another exon\nthat is at the same position and within 1.2 fold expression value of the target exon.\n\"\"\"",
        "\"\"\"\n            Takes a set of alternately spliced exons (for example), and randomly\n            selects another exon that is at the same position and within 1.2 fold\n            expression value of the target exon. \"\"\"",
        "\"\"\"type of alternate splicing event you wish to analyse.\n                        Options include se (skipped exons), mxe (mutually exclusive exons),\n                        ri (retained introns), a5s (alternate 5' splicing) a3s (alternate\n                        3' splicing)\"\"\"",
        "\"\"\"\n    parses a gff line from the miso output, allowing parsing of the ID attribute to\n    identify which exons have undergone an alternate splicing event.\n    \"\"\"",
        "\"\"\"\n    parses a gff line from the miso output, allowing parsing of the ID attribute to\n    identify which exons have undergone an alternate splicing event.\n    \"\"\""
    ],
    "functions": [
        "define_arguments",
        "parse_miso",
        "parse_miso_new",
        "parse_expression"
    ],
    "classes": []
}