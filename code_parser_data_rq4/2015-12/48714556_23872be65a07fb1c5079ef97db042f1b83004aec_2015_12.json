{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "yeoman",
        "yosay",
        "chalk",
        "chalk",
        "answers",
        "answers",
        "answers",
        "answers",
        "userAnswers",
        "userAnswers",
        "userAnswers",
        "userAnswers",
        "userAnswers",
        "done",
        "chalk",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "mkdirp",
        "chalk",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "chalk",
        "chalk",
        "llPrototype"
    ],
    "literals": [
        "'use strict'",
        "'yeoman-generator'",
        "'yosay'",
        "'chalk'",
        "'mkdirp'",
        "'Welcome to the look-listen prototype generator! '",
        "'Let\\'s get started...'",
        "'input'",
        "'appName'",
        "'What is your project\\'s name?'",
        "'confirm'",
        "'includeFoundation'",
        "'Would you like me to include Foundation grid?'",
        "'confirm'",
        "'includeJQuery'",
        "'Would you like me to include jQuery?'",
        "'confirm'",
        "'includeModernizr'",
        "'Would you like me to include Modernizr?'",
        "'\\n'",
        "'Creating directories...'",
        "'\\n'",
        "'data'",
        "'scripts'",
        "'styles'",
        "'partials'",
        "'templates'",
        "'templates/about'",
        "'dist'",
        "'dist/images'",
        "'\\n'",
        "'Creating files...'",
        "'\\n'",
        "'_gitignore'",
        "'.gitignore'",
        "'_humans.txt'",
        "'humans.txt'",
        "'_robots.txt'",
        "'robots.txt'",
        "'_README.md'",
        "'README.md'",
        "'_.bowerrc'",
        "'.bowerrc'",
        "'_data.json'",
        "'data/data.json'",
        "'_main.js'",
        "'scripts/main.js'",
        "'_header.scss'",
        "'styles/sass/_header.scss'",
        "'_footer.scss'",
        "'styles/sass/_footer.scss'",
        "'_global.scss'",
        "'styles/sass/_global.scss'",
        "'_index.scss'",
        "'styles/sass/_index.scss'",
        "'_about.scss'",
        "'styles/sass/about/_index.scss'",
        "'_about.hbs'",
        "'templates/about/index.hbs'",
        "'_.htaccess'",
        "'dist/.htaccess'",
        "'_favicon.ico'",
        "'dist/favicon.ico'",
        "'_apple-touch-icon.png'",
        "'dist/images/apple-touch-icon.png'",
        "'_console.js'",
        "'dist/js/vendor/console.js'",
        "'_modernizr.js'",
        "'dist/js/vendor/modernizr.min.js'",
        "'_bower.json'",
        "'bower.json'",
        "'_package.json'",
        "'package.json'",
        "'_gulpfile.js'",
        "'Gulpfile.js'",
        "'_main.scss'",
        "'styles/sass/main.scss'",
        "'_index.hbs'",
        "'templates/index.hbs'",
        "'_head.hbs'",
        "'partials/head.hbs'",
        "'_head-includes.hbs'",
        "'partials/head-includes.hbs'",
        "'_footer.hbs'",
        "'partials/footer.hbs'",
        "'_footer-includes.hbs'",
        "'partials/footer-includes.hbs'",
        "'foundation'",
        "'save'",
        "'jquery'",
        "'save'",
        "'normalize-scss'",
        "'\\n Bower packages installed, now installing node modules...\\n'",
        "'end'",
        "'gulp'",
        "'build'",
        "'\\n Node modules installed...\\n'"
    ],
    "variables": [
        "yeoman",
        "yosay",
        "chalk",
        "mkdirp",
        "llPrototype",
        "done",
        "context"
    ],
    "comments": [
        "YEOMAN MODULES",
        "CORE NODE MODULES - npm install --save [name of module]",
        "be sure to be in generator-[name] directory",
        "EXTERNAL NODE MODULES",
        "https://github.com/sindresorhus/chalk",
        "https://www.npmjs.com/package/mkdirp",
        "Yeoman generator - version 0.1.0",
        "generate the .yo-rc.json file - save configuration and also the marker used to define a project root folder",
        "this.config.save();",
        "have Yeoman greet the user",
        "Where you prompt users for options (where you'd call this.prompt())",
        "Wait to go on to the next function until this function has completed",
        "USER INPUT",
        "Using Inquirer.js - comes with Yeoman",
        "https://github.com/SBoudrias/Inquirer.js",
        "only ask if not using foundation since foundation comes with jQuery",
        "only ask if not using foundation since foundation comes with Modernizr",
        "store user answers from prompt questions",
        "continue executing the next function",
        "Saving configurations and configure the project (creating .editorconfig files and other metadata files)",
        "this.copy('_editorconfig', '.editorconfig');",
        "If the method name doesn't match a priority, it will be pushed to this group.",
        "Alert user",
        "Create directories",
        "app dir",
        "user creates the folder and app is scaffolded inside",
        "data dir",
        "js dir",
        "css dir",
        "handlbars partials dir",
        "handlebars templates dir",
        "dist dir",
        "Where you write the generator specific files (routes, controllers, etc)",
        "Alert user",
        "Create files",
        "generators expose all file methods on this.fs, which is an instance of mem-fs editor",
        "https://github.com/sboudrias/mem-fs-editor",
        "root",
        "/data",
        "/scripts",
        "/styles/sass",
        "/templates/about",
        "/dist",
        "/dist/js/vendor",
        "no base modernizr file in v3+",
        "Store user input and variables and use them to render the templates",
        "root",
        "/styles/sass",
        "/templates",
        "/partials",
        "Where conflicts are handled (used internally)",
        "Where installations are run (npm, bower)",
        "install dependencies into bower.json file",
        "install _package.json dependencies into package.json file",
        "run gulp build task once scaffold complete",
        "Called last, cleanup, say good bye, etc"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}