{
    "identifiers": [
        "time",
        "os",
        "json",
        "traitlets",
        "Any",
        "CFloat",
        "Unicode",
        "Dict",
        "Instance",
        "HasTraits",
        "CRegExp",
        "requests",
        "ipyparallel",
        "apps",
        "launcher",
        "BaseLauncher",
        "ControllerMixin",
        "EngineMixin",
        "BaseLauncher",
        "Unicode",
        "config",
        "help",
        "Unicode",
        "config",
        "help",
        "Unicode",
        "config",
        "help",
        "Unicode",
        "config",
        "help",
        "Unicode",
        "config",
        "help",
        "property",
        "format",
        "controller_marathon_app_group",
        "controller_app_name",
        "property",
        "format",
        "marathon_api",
        "controller_marathon_id",
        "work_dir",
        "config",
        "kwargs",
        "MarathonLauncher",
        "work_dir",
        "work_dir",
        "config",
        "config",
        "kwargs",
        "marathon_api",
        "controller_marathon_app_group",
        "app_url",
        "tries",
        "sleep",
        "i",
        "tries",
        "requests",
        "get",
        "app_url",
        "app_resp",
        "ok",
        "app_resp",
        "json",
        "app_info",
        "app_info",
        "app_info",
        "time",
        "sleep",
        "sleep",
        "RuntimeError",
        "MarathonLauncher",
        "marathon_api",
        "controller_marathon_id",
        "_build_marathon_config",
        "_start_marathon_app",
        "marathon_config",
        "notify_start",
        "controller",
        "_write_client_connection_dict",
        "controller",
        "controller",
        "format",
        "controller",
        "controller_config_port",
        "i",
        "requests",
        "get",
        "controller_config_url",
        "resp",
        "ok",
        "_save_connection_dict",
        "resp",
        "json",
        "time",
        "sleep",
        "requests",
        "exceptions",
        "ConnectionError",
        "time",
        "sleep",
        "RuntimeError",
        "connection_dict",
        "os",
        "path",
        "join",
        "profile_dir",
        "fname",
        "log",
        "info",
        "fname",
        "open",
        "fname",
        "f",
        "f",
        "write",
        "json",
        "dumps",
        "connection_dict",
        "indent",
        "_stop_marathon_app",
        "controller_marathon_id",
        "notify_stop",
        "marathon_config",
        "raw_marathon_api_url",
        "format",
        "marathon_api",
        "requests",
        "post",
        "full_marathon_api",
        "json",
        "marathon_config",
        "res",
        "ok",
        "res",
        "json",
        "_wait_for_controller_to_start",
        "_wait_for_marathon_app_to_start",
        "controller_marathon_url",
        "application_id",
        "raw_marathon_api_url",
        "format",
        "marathon_api",
        "application_id",
        "requests",
        "full_marathon_api",
        "res",
        "ok",
        "res",
        "json",
        "base_marathon_config",
        "copy",
        "controller_marathon_id",
        "marathon_config",
        "marathon_config",
        "controller_docker_image",
        "controller_config_port",
        "marathon_config",
        "MarathonLauncher",
        "property",
        "format",
        "controller_marathon_app_group",
        "engine_app_name",
        "property",
        "format",
        "marathon_api",
        "engine_marathon_id",
        "marathon_api",
        "engine_marathon_id",
        "n",
        "_build_marathon_config",
        "n",
        "_start_marathon_app",
        "marathon_config",
        "_wait_for_engines_to_start",
        "task",
        "engines",
        "notify_start",
        "task",
        "_stop_marathon_app",
        "engine_marathon_id",
        "notify_stop",
        "_wait_for_marathon_app_to_start",
        "engine_marathon_url",
        "marathon_config",
        "raw_marathon_api_url",
        "format",
        "marathon_api",
        "requests",
        "post",
        "full_marathon_api",
        "json",
        "marathon_config",
        "res",
        "ok",
        "res",
        "json",
        "res",
        "json",
        "application_id",
        "raw_marathon_api_url",
        "format",
        "marathon_api",
        "application_id",
        "requests",
        "full_marathon_api",
        "res",
        "ok",
        "res",
        "json",
        "n",
        "engine_docker_image",
        "base_marathon_config",
        "copy",
        "engine_marathon_id",
        "n",
        "marathon_config",
        "engine_docker_image",
        "marathon_api",
        "controller_marathon_id",
        "marathon_config"
    ],
    "literals": [
        "'{}/v2/apps/{}'",
        "'mem'",
        "'env'",
        "'instances'",
        "'container'",
        "'docker'",
        "'image'",
        "''",
        "'forcePullImage'",
        "'type'",
        "'DOCKER'",
        "'cpus'",
        "'id'",
        "''",
        "''",
        "\"host and port for marathon api\"",
        "''",
        "\"Marathon application id path\"",
        "'controller'",
        "'1235'",
        "\"Port controller exposes to share client/engine configs\"",
        "''",
        "\"Docker image of controller to launch\"",
        "''",
        "\"Docker image of engine to launch\"",
        "'{}{}'",
        "'{}/v2/apps/{}'",
        "u'.'",
        "\"marathon_api is required\"",
        "\"controller_marathon_id is required\"",
        "'app'",
        "'instances'",
        "'app'",
        "'tasksRunning'",
        "\"Marathon App did not start correctly\"",
        "'app'",
        "'tasks'",
        "'id'",
        "'http://{}:{}/ipcontroller-client.json'",
        "'app'",
        "'tasks'",
        "'host'",
        "\"Failed to write client connection dict\"",
        "'ipcontroller-client.json'",
        "'security'",
        "\"writing connection info to %s\"",
        "'w'",
        "''",
        "'id'",
        "'container'",
        "'docker'",
        "'network'",
        "'HOST'",
        "'container'",
        "'docker'",
        "'image'",
        "'env'",
        "'CONTROLLER_CONFIG_PORT'",
        "'engine'",
        "'{}{}'",
        "'{}/v2/apps/{}'",
        "'app'",
        "'tasks'",
        "'id'",
        "''",
        "\"engine_docker_image is required\"",
        "'id'",
        "'instances'",
        "'container'",
        "'docker'",
        "'image'",
        "'env'",
        "'MARATHON_MASTER'",
        "'CONTROLLER_MARATHON_ID'"
    ],
    "variables": [
        "raw_marathon_api_url",
        "base_marathon_config",
        "marathon_api",
        "controller_marathon_app_group",
        "controller_app_name",
        "controller_config_port",
        "controller_docker_image",
        "engine_docker_image",
        "app_resp",
        "app_info",
        "marathon_config",
        "controller",
        "controller_config_url",
        "resp",
        "fname",
        "fname",
        "full_marathon_api",
        "res",
        "full_marathon_api",
        "res",
        "marathon_config",
        "marathon_config",
        "marathon_config",
        "engine_app_name",
        "marathon_config",
        "engines",
        "full_marathon_api",
        "res",
        "full_marathon_api",
        "res",
        "marathon_config",
        "marathon_config",
        "marathon_config",
        "marathon_config"
    ],
    "comments": [
        "HACKY RETRY FIX"
    ],
    "docstrings": [
        "\"\"\"Docstring for M. \"\"\"",
        "\"\"\"Docstring for M. \"\"\""
    ],
    "functions": [
        "controller_marathon_id",
        "controller_marathon_url",
        "_wait_for_marathon_app_to_start",
        "find_args",
        "start",
        "_write_client_connection_dict",
        "_save_connection_dict",
        "stop",
        "_start_marathon_app",
        "_wait_for_controller_to_start",
        "_stop_marathon_app",
        "_build_marathon_config",
        "engine_marathon_id",
        "engine_marathon_url",
        "find_args",
        "start",
        "stop",
        "_wait_for_engines_to_start",
        "_start_marathon_app",
        "_stop_marathon_app",
        "_build_marathon_config"
    ],
    "classes": [
        "MarathonLauncher",
        "MarathonControllerLauncher",
        "MarathonEngineLauncher"
    ]
}