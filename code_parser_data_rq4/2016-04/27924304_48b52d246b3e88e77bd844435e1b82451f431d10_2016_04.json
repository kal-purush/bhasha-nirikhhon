{
    "identifiers": [
        "json",
        "gabbi",
        "handlers",
        "gabbi",
        "json_parser",
        "handlers",
        "ResponseHandler",
        "handlers",
        "ContentHandler",
        "staticmethod",
        "content_type",
        "content_type",
        "split",
        "strip",
        "content_type",
        "endswith",
        "content_type",
        "startswith",
        "classmethod",
        "cls",
        "test",
        "match",
        "match",
        "group",
        "cls",
        "extract_json_path_value",
        "test",
        "prior",
        "response_data",
        "path",
        "replacer_func",
        "staticmethod",
        "data",
        "pretty",
        "pretty",
        "json",
        "dumps",
        "data",
        "indent",
        "separators",
        "json",
        "dumps",
        "data",
        "staticmethod",
        "data",
        "json",
        "loads",
        "data",
        "staticmethod",
        "data",
        "path",
        "json_parser",
        "parse",
        "path",
        "match",
        "value",
        "match",
        "path_expr",
        "find",
        "data",
        "matches",
        "len",
        "matches",
        "matches",
        "matches",
        "ValueError",
        "path",
        "data",
        "test",
        "path",
        "value",
        "extract_json_path_value",
        "test",
        "response_data",
        "path",
        "AttributeError",
        "AssertionError",
        "ValueError",
        "AssertionError",
        "path",
        "test",
        "response_data",
        "test",
        "replace_template",
        "value",
        "test",
        "assertEqual",
        "expected",
        "match",
        "path",
        "expected",
        "match"
    ],
    "literals": [
        "'json_paths'",
        "';'",
        "'+json'",
        "'application/json'",
        "'arg'",
        "','",
        "': '",
        "\"JSONPath '%s' failed to match on data: '%s'\"",
        "'unable to extract JSON from test results'",
        "'json path %s cannot match %s'",
        "'Unable to match %s as %s, got %s'"
    ],
    "variables": [
        "test_key_suffix",
        "test_key_value",
        "content_type",
        "path",
        "path_expr",
        "matches",
        "match",
        "expected"
    ],
    "comments": [
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "NOTE: This process has some advantages over other process that",
        "might come along because the JSON data has already been",
        "processed (to provided for the magic template replacing).",
        "Other handlers that want access to data structures will need",
        "to do their own processing."
    ],
    "docstrings": [
        "\"\"\"JSON-related content handling.\"\"\"",
        "\"\"\"Extract the value at JSON Path path from the data.\n\n        The input data is a Python datastructure, not a JSON string.\n        \"\"\"",
        "\"\"\"Test json_paths against json data.\"\"\""
    ],
    "functions": [
        "accepts",
        "gen_replacer",
        "replacer_func",
        "dumps",
        "loads",
        "extract_json_path_value",
        "action"
    ],
    "classes": [
        "JSONHandler"
    ]
}