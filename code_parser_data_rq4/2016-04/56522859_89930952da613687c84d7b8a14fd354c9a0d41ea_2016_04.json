{
    "identifiers": [
        "MyClassifier",
        "MyClassifierTwo",
        "get_ipython",
        "magic",
        "clfr",
        "fit",
        "X",
        "Y",
        "clfr2",
        "fit",
        "X",
        "Y",
        "len",
        "clfr",
        "model",
        "len",
        "clfr2",
        "model",
        "len",
        "clfr",
        "used_features",
        "clfr",
        "model",
        "exp_all",
        "testing_idx",
        "clfr",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "exp1",
        "testing_idx",
        "clfr2",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "clfr2",
        "model",
        "num_tree",
        "len",
        "backup2",
        "backup2",
        "num_tree",
        "exp1",
        "testing_idx",
        "clfr2",
        "predict",
        "X_test",
        "res3",
        "append",
        "num_tree",
        "sum",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "len",
        "testing_idx",
        "len",
        "clfr2",
        "model",
        "get_ipython",
        "magic",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "r",
        "r",
        "res3",
        "r",
        "r",
        "res3",
        "plt",
        "figure",
        "plt",
        "scatter",
        "X",
        "y",
        "c",
        "label",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "legend",
        "plt",
        "show",
        "num_tree",
        "len",
        "backup",
        "backup",
        "num_tree",
        "exp_all",
        "testing_idx",
        "clfr",
        "predict",
        "X_test",
        "res",
        "append",
        "num_tree",
        "sum",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "len",
        "testing_idx",
        "get_ipython",
        "magic",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "r",
        "r",
        "res",
        "r",
        "r",
        "res",
        "plt",
        "figure",
        "plt",
        "scatter",
        "Xpts",
        "y",
        "c",
        "label",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "vlines",
        "plt",
        "vlines",
        "plt",
        "vlines",
        "plt",
        "vlines",
        "plt",
        "vlines",
        "plt",
        "legend",
        "plt",
        "show",
        "num_tree",
        "len",
        "backup",
        "backup",
        "num_tree",
        "len",
        "backup",
        "exp_all",
        "testing_idx",
        "clfr",
        "predict",
        "X_test",
        "res2",
        "append",
        "num_tree",
        "sum",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "len",
        "testing_idx",
        "get_ipython",
        "magic",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "r",
        "r",
        "res2",
        "r",
        "r",
        "res2",
        "plt",
        "figure",
        "plt",
        "scatter",
        "Xpts",
        "y",
        "c",
        "label",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "legend",
        "plt",
        "show",
        "sklearn",
        "svm",
        "svm",
        "SVC",
        "svmclf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "svmclf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "tree",
        "exp_all",
        "training_idx",
        "health_classes",
        "training_idx",
        "tree",
        "DecisionTreeClassifier",
        "clf",
        "fit",
        "X",
        "Y",
        "exp_all",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "exp_all",
        "training_idx",
        "health_classes",
        "training_idx",
        "sklearn",
        "ensemble",
        "AdaBoostClassifier",
        "AdaBoostClassifier",
        "clf",
        "fit",
        "X",
        "Y",
        "exp_all",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "AdaBoostClassifier",
        "AdaBoostClassifier",
        "n_estimators",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "sklearn",
        "ensemble",
        "AdaBoostClassifier",
        "AdaBoostClassifier",
        "n_estimators",
        "learning_rate",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "clf",
        "decision_function",
        "X_test",
        "clf",
        "feature_importances_",
        "imp",
        "sort",
        "key",
        "itemgetter",
        "reverse",
        "imp",
        "health_classes",
        "testing_idx",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "BaggingClassifier",
        "BaggingClassifier",
        "clf",
        "fit",
        "X",
        "Y",
        "exp_all",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "BaggingClassifier",
        "BaggingClassifier",
        "n_estimators",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "BaggingClassifier",
        "BaggingClassifier",
        "n_estimators",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "GradientBoostingClassifier",
        "GradientBoostingClassifier",
        "clf",
        "fit",
        "X",
        "Y",
        "exp_all",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "GradientBoostingClassifier",
        "GradientBoostingClassifier",
        "max_depth",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "RandomForestClassifier",
        "clf",
        "fit",
        "X",
        "Y",
        "exp_all",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "RandomForestClassifier",
        "n_estimators",
        "clf",
        "fit",
        "X",
        "Y",
        "exp1",
        "testing_idx",
        "clf",
        "predict",
        "X_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "collections",
        "Counter",
        "health_classes",
        "testing_idx",
        "health_classes",
        "testing_idx",
        "Yprime_test",
        "get_ipython",
        "magic",
        "numpy",
        "np",
        "sklearn",
        "tree",
        "DecisionTreeRegressor",
        "matplotlib",
        "pyplot",
        "plt",
        "np",
        "random",
        "RandomState",
        "np",
        "sort",
        "rng",
        "rand",
        "axis",
        "np",
        "sin",
        "X",
        "ravel",
        "y",
        "rng",
        "rand",
        "DecisionTreeRegressor",
        "max_depth",
        "DecisionTreeRegressor",
        "max_depth",
        "regr_1",
        "fit",
        "X",
        "y",
        "regr_2",
        "fit",
        "X",
        "y",
        "np",
        "arange",
        "np",
        "newaxis",
        "regr_1",
        "predict",
        "X_test",
        "regr_2",
        "predict",
        "X_test",
        "plt",
        "figure",
        "plt",
        "scatter",
        "X",
        "y",
        "c",
        "label",
        "plt",
        "plot",
        "X_test",
        "y_1",
        "c",
        "label",
        "linewidth",
        "plt",
        "plot",
        "X_test",
        "y_2",
        "c",
        "label",
        "linewidth",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "plt",
        "legend",
        "plt",
        "show"
    ],
    "literals": [
        "u'timeit clfr.fit(X, Y)'",
        "u'matplotlib inline'",
        "\"k\"",
        "\"data\"",
        "\"data\"",
        "\"target\"",
        "\"Decision Tree Accuracy\"",
        "u'matplotlib inline'",
        "\"k\"",
        "\"Accuracy\"",
        "\"Number of trees\"",
        "\"Accuracy\"",
        "\"Decision Forests Accuracy\"",
        "u'matplotlib inline'",
        "\"k\"",
        "\"data\"",
        "\"data\"",
        "\"target\"",
        "\"Decision Tree Accuracy\"",
        "u'matplotlib inline'",
        "\"k\"",
        "\"data\"",
        "\"g\"",
        "\"max_depth=2\"",
        "\"r\"",
        "\"max_depth=5\"",
        "\"data\"",
        "\"target\"",
        "\"Decision Tree Regression\""
    ],
    "variables": [
        "clfr",
        "clfr2",
        "myfit",
        "myfit",
        "backup",
        "X_test",
        "Yprime_test",
        "X_test",
        "Yprime_test",
        "res3",
        "backup2",
        "clfr2",
        "model",
        "X_test",
        "Yprime_test",
        "X",
        "y",
        "res",
        "clfr",
        "model",
        "X_test",
        "Yprime_test",
        "Xpts",
        "y",
        "res2",
        "clfr",
        "model",
        "X_test",
        "Yprime_test",
        "Xpts",
        "y",
        "svmclf",
        "X_test",
        "Yprime_test",
        "X",
        "Y",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "X",
        "Y",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "imp",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "clf",
        "clf",
        "X_test",
        "Yprime_test",
        "rng",
        "X",
        "y",
        "regr_1",
        "regr_2",
        "X_test",
        "y_1",
        "y_2"
    ],
    "comments": [
        "In[317]:",
        "In[555]:",
        "In[470]:",
        "In[512]:",
        "In[513]:",
        "In[556]:",
        "### based on combined result",
        "In[551]:",
        "In[547]:",
        "### New",
        "In[471]:",
        "In[472]:",
        "In[473]:",
        "In[475]:",
        "In[474]:",
        "This is necessary for using matplotlib in jupyter",
        "Import the necessary modules and libraries",
        "Plot the results",
        "### Original Classifier's plot",
        "In[557]:",
        "In[562]:",
        "This is necessary for using matplotlib in jupyter",
        "Import the necessary modules and libraries",
        "Plot the results",
        "#### I was about to say the later trees are almost as informative as the",
        "In[523]:",
        "In[524]:",
        "This is necessary for using matplotlib in jupyter",
        "Import the necessary modules and libraries",
        "Plot the results",
        "In[ ]:",
        "### SVM, WTF?",
        "In[433]:",
        "In[434]:",
        "In[435]:",
        "In[ ]:",
        "In[ ]:",
        "In[ ]:",
        "### Basic Tree",
        "",
        "In[526]:",
        "In[527]:",
        "In[528]:",
        "## AdaBoost",
        "In[529]:",
        "In[530]:",
        "In[531]:",
        "In[167]:",
        "#### No idea what 7 these are",
        "In[242]:",
        "In[528]:",
        "In[180]:",
        "In[213]:",
        "In[182]:",
        "In[168]:",
        "#### Is AdaBoost deterministic?",
        "## Bagging",
        "In[532]:",
        "In[533]:",
        "#### Bagging with more estimators",
        "In[105]:",
        "In[106]:",
        "##### Another run may give very different results",
        "In[108]:",
        "#### Bagging with even more estimators",
        "In[130]:",
        "In[131]:",
        "### Gradient Boosting",
        "In[534]:",
        "In[535]:",
        "In[121]:",
        "In[123]:",
        "In[ ]:",
        "### RandomForestClassifier",
        "In[536]:",
        "In[537]:",
        "In[127]:",
        "#### adding more trees do not help much",
        "In[128]:",
        "In[129]:",
        "In[15]:",
        "This is necessary for using matplotlib in jupyter",
        "Import the necessary modules and libraries",
        "Create a random dataset",
        "Fit regression model",
        "Predict",
        "Plot the results"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}