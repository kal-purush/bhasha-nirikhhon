{
    "identifiers": [
        "obj",
        "k",
        "obj",
        "obj",
        "k",
        "length",
        "length",
        "superConstructor",
        "name",
        "F",
        "superConstructor",
        "F",
        "name",
        "Thrift",
        "message",
        "message",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "message",
        "code",
        "message",
        "code",
        "code",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "input",
        "input",
        "ret",
        "Thrift",
        "ret",
        "fid",
        "ret",
        "Thrift",
        "ret",
        "input",
        "ret",
        "ret",
        "input",
        "ret",
        "ret",
        "Thrift",
        "ret",
        "input",
        "ret",
        "ret",
        "input",
        "ret",
        "ret",
        "input",
        "ret",
        "input",
        "input",
        "Thrift",
        "output",
        "output",
        "output",
        "Thrift",
        "output",
        "output",
        "output",
        "Thrift",
        "output",
        "output",
        "output",
        "output",
        "Thrift",
        "Thrift",
        "Thrift",
        "url",
        "options",
        "url",
        "options",
        "options",
        "Thrift",
        "XMLHttpRequest",
        "e1",
        "ActiveXObject",
        "e2",
        "ActiveXObject",
        "e3",
        "async",
        "callback",
        "async",
        "callback",
        "xreq",
        "xreq",
        "callback",
        "xreq",
        "clientCallback",
        "xreq",
        "async",
        "xreq",
        "xreq",
        "xreq",
        "xreq",
        "async",
        "callback",
        "xreq",
        "xreq",
        "xreq",
        "xreq",
        "xreq",
        "client",
        "postData",
        "args",
        "recv_method",
        "jQuery",
        "jQuery",
        "jQuery",
        "postData",
        "responseData",
        "thriftTransport",
        "responseData",
        "recv_method",
        "client",
        "value",
        "client",
        "jQuery",
        "args",
        "jqXHR",
        "buf",
        "buf",
        "len",
        "avail",
        "avail",
        "len",
        "give",
        "avail",
        "give",
        "give",
        "ret",
        "buf",
        "buf",
        "Thrift",
        "url",
        "url",
        "Thrift",
        "url",
        "url",
        "async",
        "callback",
        "msg",
        "msg",
        "clientCallback",
        "callback",
        "elem",
        "elem",
        "elem",
        "msg",
        "msg",
        "clientCallback",
        "evt",
        "evt",
        "evt",
        "evt",
        "evt",
        "buf",
        "buf",
        "WebSocket",
        "len",
        "avail",
        "avail",
        "len",
        "give",
        "avail",
        "give",
        "give",
        "ret",
        "buf",
        "buf",
        "Thrift",
        "Thrift",
        "transport",
        "transport",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "name",
        "messageType",
        "seqid",
        "Thrift",
        "name",
        "messageType",
        "seqid",
        "obj",
        "name",
        "p",
        "key",
        "first",
        "first",
        "key",
        "key",
        "p",
        "name",
        "fieldType",
        "fieldId",
        "fieldId",
        "Thrift",
        "fieldType",
        "fieldInfo",
        "fieldInfo",
        "value",
        "keyType",
        "valType",
        "size",
        "Thrift",
        "keyType",
        "Thrift",
        "valType",
        "p",
        "p",
        "p",
        "p",
        "p",
        "size",
        "p",
        "first",
        "first",
        "isNaN",
        "k",
        "k",
        "k",
        "k",
        "v",
        "p",
        "p",
        "p",
        "elemType",
        "size",
        "Thrift",
        "elemType",
        "size",
        "p",
        "p",
        "p",
        "p",
        "tmpVal",
        "p",
        "p",
        "elemType",
        "size",
        "Thrift",
        "elemType",
        "size",
        "p",
        "p",
        "p",
        "p",
        "tmpVal",
        "p",
        "p",
        "value",
        "value",
        "i8",
        "i8",
        "i16",
        "i16",
        "i32",
        "i32",
        "i64",
        "i64",
        "dbl",
        "dbl",
        "i",
        "i",
        "i",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "ch",
        "escapedString",
        "escapedString",
        "ch",
        "escapedString",
        "jQuery",
        "jQuery",
        "eval",
        "version",
        "Thrift",
        "version",
        "r",
        "r",
        "r",
        "r",
        "name",
        "r",
        "r",
        "Thrift",
        "f",
        "f",
        "fid",
        "parseInt",
        "f",
        "fid",
        "fid",
        "field",
        "fid",
        "i",
        "Thrift",
        "i",
        "ftype",
        "Thrift",
        "i",
        "i",
        "r",
        "r",
        "ftype",
        "r",
        "fid",
        "r",
        "pos",
        "first",
        "first",
        "first",
        "r",
        "Thrift",
        "first",
        "r",
        "Thrift",
        "r",
        "r",
        "r",
        "Thrift",
        "r",
        "r",
        "elemType",
        "size",
        "elemType",
        "size",
        "r",
        "r",
        "r",
        "r",
        "r",
        "f",
        "f",
        "f",
        "f",
        "f",
        "r",
        "r",
        "f",
        "f",
        "i",
        "f",
        "i",
        "f",
        "i",
        "f",
        "i",
        "r",
        "i",
        "r",
        "f",
        "r",
        "r",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "ret",
        "ret",
        "Thrift",
        "ret",
        "Thrift",
        "ret",
        "i",
        "i",
        "ret",
        "i",
        "i",
        "ret",
        "ret",
        "Thrift",
        "ret",
        "i",
        "i",
        "ret",
        "i",
        "ret",
        "Thrift",
        "ret",
        "i",
        "i",
        "ret",
        "i",
        "ret",
        "Thrift",
        "srvName",
        "trans",
        "strictRead",
        "strictWrite",
        "Thrift",
        "trans",
        "strictRead",
        "strictWrite",
        "srvName",
        "Thrift",
        "Thrift",
        "Thrift",
        "Thrift",
        "name",
        "seqid",
        "Thrift",
        "Thrift",
        "Thrift",
        "name",
        "seqid",
        "Thrift",
        "name",
        "seqid",
        "Thrift",
        "Thrift",
        "serviceName",
        "SCl",
        "transport",
        "SCl",
        "SCl",
        "SCl",
        "SCl",
        "SCl",
        "Thrift",
        "serviceName",
        "transport",
        "client",
        "copyList",
        "lst",
        "types",
        "lst",
        "lst",
        "types",
        "types",
        "types",
        "lst",
        "i",
        "i",
        "len",
        "i",
        "val",
        "lst",
        "i",
        "result",
        "val",
        "copyMap",
        "copyList",
        "result",
        "val",
        "types",
        "result",
        "Type",
        "val",
        "result",
        "copyMap",
        "obj",
        "types",
        "obj",
        "obj",
        "types",
        "types",
        "types",
        "prop",
        "obj",
        "obj",
        "prop",
        "val",
        "obj",
        "prop",
        "result",
        "prop",
        "val",
        "copyMap",
        "copyList",
        "result",
        "prop",
        "val",
        "types",
        "result",
        "prop",
        "Type",
        "val",
        "result",
        "Thrift",
        "copyMap",
        "Thrift",
        "copyList"
    ],
    "literals": [
        "'0.9.3'",
        "'STOP'",
        "'VOID'",
        "'BOOL'",
        "'BYTE'",
        "'I08'",
        "'DOUBLE'",
        "'I16'",
        "'I32'",
        "'I64'",
        "'STRING'",
        "'UTF7'",
        "'STRUCT'",
        "'MAP'",
        "'SET'",
        "'LIST'",
        "'UTF8'",
        "'UTF16'",
        "'CALL'",
        "'REPLY'",
        "'EXCEPTION'",
        "'ONEWAY'",
        "\"\"",
        "'TException'",
        "'UNKNOWN'",
        "'UNKNOWN_METHOD'",
        "'INVALID_MESSAGE_TYPE'",
        "'WRONG_METHOD_NAME'",
        "'BAD_SEQUENCE_ID'",
        "'MISSING_RESULT'",
        "'INTERNAL_ERROR'",
        "'PROTOCOL_ERROR'",
        "'INVALID_TRANSFORM'",
        "'INVALID_PROTOCOL'",
        "'UNSUPPORTED_CLIENT_TYPE'",
        "\"number\"",
        "'TApplicationException'",
        "'TApplicationException'",
        "'message'",
        "'type'",
        "''",
        "''",
        "'Msxml2.XMLHTTP'",
        "'Microsoft.XMLHTTP'",
        "\"Your browser doesn't support XHR.\"",
        "''",
        "'application/vnd.apache.thrift.json; charset=utf-8'",
        "'POST'",
        "'Accept'",
        "'application/vnd.apache.thrift.json; charset=utf-8'",
        "'Content-Type'",
        "'application/vnd.apache.thrift.json; charset=utf-8'",
        "'encountered an unknown ajax ready state: '",
        "'encountered a unknown request status: '",
        "'undefined'",
        "'undefined'",
        "'Thrift.js requires jQuery 1.5+ to use asynchronous requests'",
        "'POST'",
        "'application/vnd.apache.thrift.json; charset=utf-8'",
        "'text thrift'",
        "'text thrift'",
        "''",
        "''",
        "''",
        "\"Thrift WebSocket Error: \"",
        "''",
        "'\"tf\"'",
        "'\"i8\"'",
        "'\"i16\"'",
        "'\"i32\"'",
        "'\"i64\"'",
        "'\"dbl\"'",
        "'\"rec\"'",
        "'\"str\"'",
        "'\"map\"'",
        "'\"lst\"'",
        "'\"set\"'",
        "'\"'",
        "'\"'",
        "'['",
        "','",
        "']'",
        "'{'",
        "','",
        "':'",
        "'}'",
        "'fieldId'",
        "'\"'",
        "'\"'",
        "'fieldType'",
        "'{'",
        "':'",
        "'}'",
        "''",
        "'}'",
        "','",
        "'\"'",
        "'\"'",
        "':'",
        "'{'",
        "'['",
        "','",
        "']'",
        "'['",
        "','",
        "']'",
        "'['",
        "','",
        "']'",
        "''",
        "'\\\"'",
        "'\\\\\\\"'",
        "'\\\\'",
        "'\\\\\\\\'",
        "'\\b'",
        "'\\\\b'",
        "'\\f'",
        "'\\\\f'",
        "'\\n'",
        "'\\\\n'",
        "'\\r'",
        "'\\\\r'",
        "'\\t'",
        "'\\\\t'",
        "'\"'",
        "'\"'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'Wrong thrift protocol version: '",
        "''",
        "''",
        "'1'",
        "'multiplexProtocol'",
        "\":\""
    ],
    "variables": [
        "Thrift",
        "length",
        "ret",
        "fid",
        "xreq",
        "clientCallback",
        "callback",
        "thriftTransport",
        "jqXHR",
        "value",
        "avail",
        "give",
        "len",
        "ret",
        "clientCallback",
        "callback",
        "clientCallback",
        "avail",
        "give",
        "len",
        "ret",
        "obj",
        "p",
        "first",
        "value",
        "fieldInfo",
        "p",
        "size",
        "first",
        "v",
        "k",
        "p",
        "tmpVal",
        "p",
        "tmpVal",
        "escapedString",
        "i",
        "ch",
        "r",
        "version",
        "r",
        "r",
        "fid",
        "ftype",
        "field",
        "pos",
        "first",
        "r",
        "r",
        "r",
        "r",
        "r",
        "ret",
        "i",
        "client",
        "copyList",
        "copyMap",
        "Type",
        "len",
        "result",
        "i",
        "val",
        "Type",
        "result",
        "val"
    ],
    "comments": [
        "jshint evil:true",
        "Ignore XHR callbacks until the data arrives, then call the",
        "client's callback",
        "clear buf when complete?",
        "Where to connect",
        "The web socket",
        "Pending callbacks",
        "Buffers/Callback pairs waiting to be sent",
        "Outbound data, immutable until sent",
        "Inbound data",
        "Network write position in receive buffer",
        "Client read position in receive buffer",
        "Send data and register a callback to invoke the client callback",
        "Queue the send to go out __onOpen",
        "If the user made calls before the connection was fully",
        "open, send them now",
        "If OPEN/CONNECTING/CLOSING ignore additional opens",
        "If there is no socket or the socket is closed:",
        "clear buf when complete?",
        "na",
        "json \"keys\" need to be strings",
        "Serializes a boolean",
        "Serializes a number",
        "Serializes a number",
        "Serializes a number",
        "Serializes a number",
        "Serializes a number",
        "Serializes a string",
        "We do not encode uri components for wire transfer:",
        "concat may be slower than building a byte buffer",
        "a single double quote: \"",
        "write out as: \\\"",
        "a single backslash",
        "write out as double backslash",
        "a single backspace: invisible",
        "write out as: \\b\"",
        "a single formfeed: invisible",
        "write out as: \\f\"",
        "a single newline: invisible",
        "write out as: \\n\"",
        "a single return: invisible",
        "write out as: \\r\"",
        "a single tab: invisible",
        "write out as: \\t\"",
        "Else it need not be escaped",
        "Serializes a string",
        "@class\n       @name AnonReadMessageBeginReturn\n       @property {string} fname - The name of the service method.\n       @property {Thrift.MessageType} mtype - The type of message call.\n       @property {number} rseqid - The sequence number of the message (0 in Thrift RPC).",
        "get to the main obj",
        "Deserializes the end of a message.",
        "incase this is an array of structs",
        "Deserializes the end of a struct.",
        "@class\n       @name AnonReadFieldBeginReturn\n       @property {string} fname - The name of the field (always '').\n       @property {Thrift.Type} ftype - The data type of the field.\n       @property {number} fid - The unique identifier of the field.",
        "get a fieldId",
        "remove so we don't see it again",
        "should only be 1 of these but this is the only",
        "way to match a key",
        "Deserializes the end of a field.",
        "get back to the right place in the stack",
        "@class\n       @name AnonReadMapBeginReturn\n       @property {Thrift.Type} ktype - The data type of the key.\n       @property {Thrift.Type} vtype - The data type of the value.\n       @property {number} size - The number of elements in the map.",
        "Deserializes the end of a map.",
        "@class\n       @name AnonReadColBeginReturn\n       @property {Thrift.Type} etype - The data type of the element.\n       @property {number} size - The number of elements in the collection.",
        "Deserializes the end of a list.",
        "Deserializes the end of a set.",
        "Returns an object with a value property set to \n     *  False unless the next number in the protocol buffer \n     *  is 1, in which case the value property is True",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Returns the an object with a value property set to the \n        next value found in the protocol buffer",
        "Override writeMessageBegin method of prototype",
        "Instantiates a multiplexed client for a specific service\n * @constructor\n * @param {String} serviceName - The transport to serialize to/from.\n * @param {Thrift.ServiceClient} SCl - The Service Client Class\n * @param {Thrift.Transport} transport - Thrift.Transport instance which provides remote host:port\n * @example\n *    var mp = new Thrift.Multiplexer();\n *    var transport = new Thrift.Transport(\"http://localhost:9090/foo.thrift\");\n *    var protocol = new Thrift.Protocol(transport);\n *    var client = mp.createClient('AuthService', AuthServiceClient, transport);"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership. The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* The Thrift namespace houses the Apache Thrift JavaScript library \n * elements providing JavaScript bindings for the Apache Thrift RPC \n * system. End users will typically only directly make use of the \n * Transport (TXHRTransport/TWebSocketTransport) and Protocol \n * (TJSONPRotocol/TBinaryProtocol) constructors.\n * \n * Object methods beginning with a __ (e.g. __onOpen()) are internal \n * and should not be called outside of the object's own methods.\n * \n * This library creates one global object: Thrift\n * Code in this library must never create additional global identifiers,\n * all features must be scoped within the Thrift namespace.\n * @namespace\n * @example\n *     var transport = new Thrift.Transport(\"http://localhost:8585\");\n *     var protocol  = new Thrift.Protocol(transport);\n *     var client = new MyThriftSvcClient(protocol);\n *     var result = client.MyMethod();",
        "* Thrift JavaScript library version.\n     * @readonly\n     * @const {string} Version\n     * @memberof Thrift",
        "* Thrift IDL type string to Id mapping.\n     * @readonly\n     * @property {number}  STOP   - End of a set of fields.\n     * @property {number}  VOID   - No value (only legal for return types).\n     * @property {number}  BOOL   - True/False integer.\n     * @property {number}  BYTE   - Signed 8 bit integer.\n     * @property {number}  I08    - Signed 8 bit integer.     \n     * @property {number}  DOUBLE - 64 bit IEEE 854 floating point.\n     * @property {number}  I16    - Signed 16 bit integer.\n     * @property {number}  I32    - Signed 32 bit integer.\n     * @property {number}  I64    - Signed 64 bit integer.\n     * @property {number}  STRING - Array of bytes representing a string of characters.\n     * @property {number}  UTF7   - Array of bytes representing a string of UTF7 encoded characters.\n     * @property {number}  STRUCT - A multifield type.\n     * @property {number}  MAP    - A collection type (map/associative-array/dictionary).\n     * @property {number}  SET    - A collection type (unordered and without repeated values).\n     * @property {number}  LIST   - A collection type (unordered).\n     * @property {number}  UTF8   - Array of bytes representing a string of UTF8 encoded characters.\n     * @property {number}  UTF16  - Array of bytes representing a string of UTF16 encoded characters.",
        "* Thrift RPC message type string to Id mapping.\n     * @readonly\n     * @property {number}  CALL      - RPC call sent from client to server.\n     * @property {number}  REPLY     - RPC call normal response from server to client.\n     * @property {number}  EXCEPTION - RPC call exception response from server to client.\n     * @property {number}  ONEWAY    - Oneway RPC call from client to server with no response.",
        "* Utility function returning the count of an object's own properties.\n     * @param {object} obj - Object to test.\n     * @returns {number} number of object's own properties",
        "* Utility function to establish prototype inheritance.\n     * @see {@link http://javascript.crockford.com/prototypal.html|Prototypal Inheritance}\n     * @param {function} constructor - Contstructor function to set as derived.\n     * @param {function} superConstructor - Contstructor function to set as base.\n     * @param {string} [name] - Type name to set as name property in derived prototype.",
        "* Initializes a Thrift TException instance.\n * @constructor\n * @augments Error\n * @param {string} message - The TException message (distinct from the Error message).\n * @classdesc TException is the base class for all Thrift exceptions types.",
        "* Returns the message set on the exception.\n * @readonly\n * @returns {string} exception message",
        "* Thrift Application Exception type string to Id mapping.\n * @readonly\n * @property {number}  UNKNOWN                 - Unknown/undefined.\n * @property {number}  UNKNOWN_METHOD          - Client attempted to call a method unknown to the server.\n * @property {number}  INVALID_MESSAGE_TYPE    - Client passed an unknown/unsupported MessageType.\n * @property {number}  WRONG_METHOD_NAME       - Unused.\n * @property {number}  BAD_SEQUENCE_ID         - Unused in Thrift RPC, used to flag proprietary sequence number errors.\n * @property {number}  MISSING_RESULT          - Raised by a server processor if a handler fails to supply the required return result.\n * @property {number}  INTERNAL_ERROR          - Something bad happened.\n * @property {number}  PROTOCOL_ERROR          - The protocol layer failed to serialize or deserialize data.\n * @property {number}  INVALID_TRANSFORM       - Unused.\n * @property {number}  INVALID_PROTOCOL        - The protocol (or version) is not supported.\n * @property {number}  UNSUPPORTED_CLIENT_TYPE - Unused.",
        "* Initializes a Thrift TApplicationException instance.\n * @constructor\n * @augments Thrift.TException\n * @param {string} message - The TApplicationException message (distinct from the Error message).\n * @param {Thrift.TApplicationExceptionType} [code] - The TApplicationExceptionType code.\n * @classdesc TApplicationException is the exception class used to propagate exceptions from an RPC server back to a calling client.",
        "* Read a TApplicationException from the supplied protocol.\n * @param {object} input - The input protocol to read from.",
        "* Wite a TApplicationException to the supplied protocol.\n * @param {object} output - The output protocol to write to.",
        "* Returns the application exception code set on the exception.\n * @readonly\n * @returns {Thrift.TApplicationExceptionType} exception code",
        "* Constructor Function for the XHR transport.\n * If you do not specify a url then you must handle XHR operations on\n * your own. This type can also be constructed using the Transport alias\n * for backward compatibility.\n * @constructor\n * @param {string} [url] - The URL to connect to.\n * @classdesc The Apache Thrift Transport layer performs byte level I/O \n * between RPC clients and servers. The JavaScript TXHRTransport object \n * uses Http[s]/XHR. Target servers must implement the http[s] transport\n * (see: node.js example server_http.js).\n * @example\n *     var transport = new Thrift.TXHRTransport(\"http://localhost:8585\");",
        "* Gets the browser specific XmlHttpRequest Object.\n     * @returns {object} the browser XHR interface object",
        "* Sends the current XRH request if the transport was created with a URL \n     * and the async parameter is false. If the transport was not created with\n     * a URL, or the async parameter is True and no callback is provided, or \n     * the URL is an empty string, the current send buffer is returned.\n     * @param {object} async - If true the current send buffer is returned.\n     * @param {object} callback - Optional async completion callback \n     * @returns {undefined|string} Nothing or the current send buffer.\n     * @throws {string} If XHR fails.",
        "* Creates a jQuery XHR object to be used for a Thrift server call.\n     * @param {object} client - The Thrift Service client object generated by the IDL compiler.\n     * @param {object} postData - The message to send to the server.\n     * @param {function} args - The original call arguments with the success call back at the end.\n     * @param {function} recv_method - The Thrift Service Client receive method for the call.\n     * @returns {object} A new jQuery XHR object.\n     * @throws {string} If the jQuery version is prior to 1.5 or if jQuery is not found.",
        "* Sets the buffer to provide the protocol when deserializing.\n     * @param {string} buf - The buffer to supply the protocol.",
        "* Returns true if the transport is open, XHR always returns true.\n     * @readonly\n     * @returns {boolean} Always True.",
        "* Opens the transport connection, with XHR this is a nop.",
        "* Closes the transport connection, with XHR this is a nop.",
        "* Returns the specified number of characters from the response\n     * buffer.\n     * @param {number} len - The number of characters to return.\n     * @returns {string} Characters sent by the server.",
        "* Returns the entire response buffer.\n     * @returns {string} Characters sent by the server.",
        "* Sets the send buffer to buf.\n     * @param {string} buf - The buffer to send.",
        "* Returns the send buffer.\n     * @readonly\n     * @returns {string} The send buffer.",
        "* Constructor Function for the WebSocket transport.\n * @constructor\n * @param {string} [url] - The URL to connect to.\n * @classdesc The Apache Thrift Transport layer performs byte level I/O \n * between RPC clients and servers. The JavaScript TWebSocketTransport object \n * uses the WebSocket protocol. Target servers must implement WebSocket.\n * (see: node.js example server_http.js).\n * @example\n *   var transport = new Thrift.TWebSocketTransport(\"http://localhost:8585\");",
        "* Sends the current WS request and registers callback. The async \n     * parameter is ignored (WS flush is always async) and the callback \n     * function parameter is required.\n     * @param {object} async - Ignored.\n     * @param {object} callback - The client completion callback.\n     * @returns {undefined|string} Nothing (undefined)",
        "* Sets the buffer to use when receiving server responses.\n     * @param {string} buf - The buffer to receive server responses.",
        "* Returns true if the transport is open\n     * @readonly\n     * @returns {boolean}",
        "* Opens the transport connection",
        "* Closes the transport connection",
        "* Returns the specified number of characters from the response\n     * buffer.\n     * @param {number} len - The number of characters to return.\n     * @returns {string} Characters sent by the server.",
        "* Returns the entire response buffer.\n     * @returns {string} Characters sent by the server.",
        "* Sets the send buffer to buf.\n     * @param {string} buf - The buffer to send.",
        "* Returns the send buffer.\n     * @readonly\n     * @returns {string} The send buffer.",
        "* Initializes a Thrift JSON protocol instance.\n * @constructor\n * @param {Thrift.Transport} transport - The transport to serialize to/from.\n * @classdesc Apache Thrift Protocols perform serialization which enables cross \n * language RPC. The Protocol type is the JavaScript browser implementation \n * of the Apache Thrift TJSONProtocol.\n * @example\n *     var protocol  = new Thrift.Protocol(transport);",
        "* Thrift IDL type Id to string mapping.\n * @readonly\n * @see {@link Thrift.Type}",
        "* Thrift IDL type string to Id mapping.\n * @readonly\n * @see {@link Thrift.Type}",
        "* The TJSONProtocol version number.\n * @readonly\n * @const {number} Version\n * @memberof Thrift.Protocol",
        "* Returns the underlying transport.\n     * @readonly\n     * @returns {Thrift.Transport} The underlying transport.",
        "* Serializes the beginning of a Thrift RPC message.\n     * @param {string} name - The service method to call.\n     * @param {Thrift.MessageType} messageType - The type of method call.\n     * @param {number} seqid - The sequence number of this call (always 0 in Apache Thrift).",
        "* Serializes the end of a Thrift RPC message.",
        "* Serializes the beginning of a struct.\n     * @param {string} name - The name of the struct.",
        "* Serializes the end of a struct.",
        "* Serializes the beginning of a struct field.\n     * @param {string} name - The name of the field.\n     * @param {Thrift.Protocol.Type} fieldType - The data type of the field.\n     * @param {number} fieldId - The field's unique identifier.",
        "* Serializes the end of a field.",
        "* Serializes the end of the set of fields for a struct.",
        "* Serializes the beginning of a map collection.\n     * @param {Thrift.Type} keyType - The data type of the key.\n     * @param {Thrift.Type} valType - The data type of the value.\n     * @param {number} [size] - The number of elements in the map (ignored).",
        "* Serializes the end of a map.",
        "* Serializes the beginning of a list collection.\n     * @param {Thrift.Type} elemType - The data type of the elements.\n     * @param {number} size - The number of elements in the list.",
        "* Serializes the end of a list.",
        "* Serializes the beginning of a set collection.\n     * @param {Thrift.Type} elemType - The data type of the elements.\n     * @param {number} size - The number of elements in the list.",
        "* Serializes the end of a set.",
        "* Deserializes the beginning of a message. \n     * @returns {AnonReadMessageBeginReturn}",
        "* Deserializes the beginning of a struct. \n     * @param {string} [name] - The name of the struct (ignored)\n     * @returns {object} - An object with an empty string fname property",
        "* Deserializes the beginning of a field. \n     * @returns {AnonReadFieldBeginReturn}",
        "* Deserializes the beginning of a map. \n     * @returns {AnonReadMapBeginReturn}",
        "* Deserializes the beginning of a list. \n     * @returns {AnonReadColBeginReturn}",
        "* Deserializes the beginning of a set. \n     * @returns {AnonReadColBeginReturn}",
        "* Method to arbitrarily skip over data",
        "* Initializes a MutilplexProtocol Implementation as a Wrapper for Thrift.Protocol\n * @constructor"
    ],
    "functions": [
        "F"
    ],
    "classes": []
}