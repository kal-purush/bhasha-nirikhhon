{
    "identifiers": [
        "pan_angle",
        "tilt_angle",
        "cx",
        "cy",
        "initial_rotation",
        "math",
        "pi",
        "x_max",
        "cx",
        "y_max",
        "cy",
        "x_offset",
        "y_offset",
        "abs",
        "x_offset",
        "tolerance",
        "x_offset",
        "rotate_motor",
        "pan_angle",
        "initial_rotation",
        "rotate_motor",
        "pan_angle",
        "initial_rotation",
        "abs",
        "y_offset",
        "tolerance",
        "y_offset",
        "rotate_motor",
        "tilt_angle",
        "initial_rotation",
        "rotate_motor",
        "tilt_angle",
        "initial_rotation",
        "capture_image",
        "i",
        "find_centroid",
        "img",
        "flame",
        "exit",
        "x_max",
        "cx",
        "y_max",
        "cy",
        "new_x_offset",
        "x_offset",
        "new_y_offset",
        "y_offset",
        "x_change",
        "y_change",
        "exit",
        "initial_rotation",
        "abs",
        "x_change",
        "initial_rotation",
        "abs",
        "y_change",
        "new_x_offset",
        "new_y_offset",
        "abs",
        "x_offset",
        "tolerance",
        "abs",
        "y_offset",
        "tolerance",
        "x_offset",
        "y_offset",
        "abs",
        "x_offset",
        "tolerance",
        "x_offset",
        "rotate_motor",
        "pan_angle",
        "abs",
        "x_offset",
        "x_gain",
        "rotate_motor",
        "pan_angle",
        "x_offset",
        "x_gain",
        "abs",
        "y_offset",
        "tolerance",
        "y_offset",
        "rotate_motor",
        "tilt_angle",
        "abs",
        "y_offset",
        "y_gain",
        "rotate_motor",
        "tilt_angle",
        "y_offset",
        "y_gain",
        "i",
        "capture_image",
        "i",
        "find_centroid",
        "img",
        "flame",
        "x_max",
        "cx",
        "y_max",
        "cy",
        "new_x_offset",
        "x_offset",
        "new_y_offset",
        "y_offset",
        "x_change",
        "y_change",
        "exit",
        "abs",
        "x_offset",
        "x_gain",
        "abs",
        "x_change",
        "abs",
        "y_offset",
        "y_gain",
        "abs",
        "y_change",
        "new_x_offset",
        "new_y_offset"
    ],
    "literals": [
        "'the x offset is '",
        "'the y offset is '",
        "'pan'",
        "'pan'",
        "'tilt'",
        "'tilt'",
        "'centerimage'",
        "'Fire no longer detected after small angle change. Either the camera is too close to the fire, or the'",
        "' fire has gone out'",
        "'The initial turret rotation is too small. Please choose a larger initial rotation.'",
        "'the x offset is '",
        "'the y offset is '",
        "'pan'",
        "'pan'",
        "'tilt'",
        "'tilt'",
        "'centerimage'",
        "'Flame lost'",
        "'The gain is too small. Consider adding higher proportional or integral gains'"
    ],
    "variables": [
        "x_max",
        "y_max",
        "x_offset",
        "y_offset",
        "tolerance",
        "pan_angle",
        "pan_angle",
        "tilt_angle",
        "tilt_angle",
        "i",
        "img",
        "flame",
        "cx",
        "cy",
        "new_x_offset",
        "new_y_offset",
        "x_change",
        "y_change",
        "x_gain",
        "y_gain",
        "x_offset",
        "y_offset",
        "i",
        "img",
        "flame",
        "cx",
        "cy",
        "new_x_offset",
        "new_y_offset",
        "x_change",
        "y_change",
        "x_gain",
        "y_gain",
        "x_offset",
        "y_offset"
    ],
    "comments": [
        "This function commands the motors to adjust the camera until the centroid of the fire is brought to the center of",
        "the image",
        "pan_angle and tilt_angle indicate the current pan and tilt angles of the camera",
        "initial_rotation indicates the angle by which the camera will rotate to calibrate its gains",
        "The function returns 1 if successful, and 0 if unsuccessful",
        "Define the image size",
        "Capture an initial image",
        "img = capture_image()",
        "flame, cx, cy = find_centroid(img)",
        "Calculate how far the x and y coordinates of the centroid are from the center of the image",
        "Define a tolerance of how close you want cx and cy to be to the center of the image (in pixels)",
        "Do an initial rotation to calibrate gains",
        "Calculate gains. Gains refer to how far the camera moved versus how many pixels the centroid coordinates changed",
        "by.",
        "Repeat this process, updating the gains every iteration, until convergence"
    ],
    "docstrings": [],
    "functions": [
        "center_target"
    ],
    "classes": []
}