{
    "identifiers": [
        "graph",
        "path",
        "java",
        "io",
        "args",
        "io",
        "original",
        "io",
        "load",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "size",
        "original",
        "length",
        "array",
        "size",
        "size",
        "i",
        "i",
        "size",
        "i",
        "j",
        "j",
        "size",
        "j",
        "array",
        "i",
        "j",
        "parseInt",
        "original",
        "i",
        "split",
        "j",
        "furthestdistance",
        "furthestroute",
        "i",
        "visited",
        "vertices",
        "size",
        "j",
        "j",
        "size",
        "j",
        "vertices",
        "j",
        "original",
        "split",
        "j",
        "vertices",
        "i",
        "visited",
        "visited",
        "vertices",
        "i",
        "distance",
        "j",
        "j",
        "size",
        "j",
        "array",
        "j",
        "i",
        "vertices",
        "j",
        "distance",
        "array",
        "j",
        "i",
        "j",
        "i",
        "array",
        "j",
        "i",
        "index",
        "v",
        "vertices",
        "v",
        "distance",
        "index",
        "t2",
        "i",
        "t2",
        "j",
        "j",
        "size",
        "j",
        "j",
        "t2",
        "array",
        "j",
        "t2",
        "vertices",
        "j",
        "visited",
        "array",
        "j",
        "t2",
        "vertices",
        "j",
        "visited",
        "vertices",
        "j",
        "distance",
        "distance",
        "array",
        "j",
        "t2",
        "vertices",
        "j",
        "distance",
        "distance",
        "distance",
        "vertices",
        "t2",
        "distance",
        "vertices",
        "t2",
        "distance",
        "distance",
        "vertices",
        "t2",
        "route",
        "j",
        "t2",
        "j",
        "distance",
        "vertices",
        "t2",
        "visited",
        "visited",
        "t2",
        "t",
        "i",
        "visited",
        "size",
        "j",
        "j",
        "size",
        "j",
        "j",
        "t",
        "array",
        "j",
        "t",
        "vertices",
        "j",
        "visited",
        "array",
        "j",
        "t",
        "vertices",
        "j",
        "visited",
        "vertices",
        "j",
        "distance",
        "distance",
        "array",
        "j",
        "t",
        "vertices",
        "t",
        "distance",
        "distance",
        "distance",
        "vertices",
        "j",
        "distance",
        "vertices",
        "j",
        "distance",
        "array",
        "j",
        "t",
        "vertices",
        "t",
        "distance",
        "vertices",
        "j",
        "route",
        "t",
        "j",
        "t",
        "array",
        "j",
        "t",
        "vertices",
        "t",
        "visited",
        "visited",
        "t",
        "visited",
        "size",
        "printVertices",
        "vertices",
        "x",
        "x",
        "size",
        "x",
        "vertices",
        "x",
        "distance",
        "furthestdistance",
        "furthestdistance",
        "vertices",
        "x",
        "distance",
        "visiting",
        "x",
        "solution",
        "visiting",
        "solution",
        "vertices",
        "visiting",
        "label",
        "solution",
        "visiting",
        "vertices",
        "visiting",
        "route",
        "solution",
        "vertices",
        "i",
        "label",
        "solution",
        "furthestroute",
        "solution",
        "furthestdistance",
        "furthestroute",
        "vertices",
        "a",
        "a",
        "vertices",
        "length",
        "a",
        "a",
        "vertices",
        "a",
        "label",
        "vertices",
        "a",
        "route",
        "vertices",
        "a",
        "distance",
        "visited",
        "distance",
        "MIN_VALUE",
        "route",
        "label",
        "labelin",
        "label",
        "labelin",
        "file",
        "aFile",
        "file",
        "contents",
        "input",
        "input",
        "aFile",
        "line",
        "i",
        "line",
        "input",
        "readLine",
        "contents",
        "append",
        "line",
        "i",
        "i",
        "contents",
        "append",
        "getProperty",
        "ex",
        "file",
        "ex",
        "printStackTrace",
        "ex",
        "ex",
        "printStackTrace",
        "input",
        "input",
        "close",
        "ex",
        "ex",
        "printStackTrace",
        "array",
        "contents",
        "toString",
        "split",
        "i",
        "i",
        "array",
        "length",
        "i",
        "array",
        "i",
        "array",
        "i",
        "trim",
        "array",
        "file",
        "array",
        "aFile",
        "file",
        "output",
        "output",
        "aFile",
        "s",
        "array",
        "output",
        "write",
        "s",
        "output",
        "write",
        "getProperty",
        "output",
        "output",
        "close"
    ],
    "literals": [
        "\"src\"",
        "\"graph\"",
        "\"path\"",
        "\"Graph.txt\"",
        "\"\\t\"",
        "\"\"",
        "\"\\t\"",
        "\" \"",
        "\" \"",
        "\"j:\"",
        "\"t:\"",
        "\"singledis \"",
        "\"totaldis \"",
        "\"set vertices\"",
        "\" route:\"",
        "\" distance:\"",
        "\"----------------------\"",
        "\"j:\"",
        "\"t:\"",
        "\"singledis \"",
        "\"totaldis \"",
        "\"set vertices\"",
        "\" route:\"",
        "\" singledistance:\"",
        "\"---\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"vertice\"",
        "\" \"",
        "\" route\"",
        "\" distance\"",
        "\"line.separator\"",
        "\"Can't find the file - are you sure the file is in this location: \"",
        "\"Input output exception while processing file\"",
        "\"Input output exception while processing file\"",
        "\"\\n\"",
        "\"line.separator\""
    ],
    "variables": [
        "label",
        "line"
    ],
    "comments": [
        "load up the data into array",
        "keep track of the longest path found so far",
        "for(int i=0;i<size;i++){ //loop through all possible starting positions: start from A",
        "how many vertices have been visited so far?",
        "initiate the vertex objects",
        "we visit the starting position",
        "we've visited one vertex so far",
        "set this vertex as starting point",
        "update distances from starting point",
        "only update those that can be reached from here",
        "0-7",
        "get all vertrices connect to B , except those already from already visited vertices.",
        "update this vertices to hold the longgest distance and route;",
        "i =0;",
        "while not all vertices visited â€¦fill this in",
        "0-7",
        "get all vertrices connect to B , except those already from already visited vertices.",
        "update this vertices to hold the longgest distance and route;",
        "A0,B1,C2,D4,E6,F3,G7,H5",
        "vertices[0].label =\"A\";",
        "vertices[0].route =-1;",
        "vertices[0].distance=0;",
        "vertices[1].label =\"B\";",
        "vertices[1].route =-1;",
        "vertices[1].distance=3;",
        "vertices[2].label =\"C\";",
        "vertices[2].route =-1;",
        "vertices[2].distance=6;",
        "vertices[3].label =\"D\";",
        "vertices[3].route =2;",
        "vertices[3].distance=11;",
        "vertices[4].label =\"E\";",
        "vertices[4].route =3;",
        "vertices[4].distance=17;",
        "vertices[5].label =\"F\";",
        "vertices[5].route =2;",
        "vertices[5].distance=8;",
        "vertices[6].label =\"G\";",
        "vertices[6].route =4;",
        "vertices[6].distance=21;",
        "vertices[7].label =\"H\";",
        "vertices[7].route =5;",
        "vertices[7].distance=17;",
        "if(i>1){",
        "vertices[i].distance = max+vertices[vertices[i-1].route].distance;",
        "System.out.println(\"-----\");",
        "System.out.println(vertices[i].label);",
        "System.out.println(vertices[vertices[i].route].label);",
        "System.out.println(vertices[i].distance);",
        "System.out.println(\"-----\");",
        "}",
        "check for a new record distance, size: number of vertices",
        "go through all distances in the graph",
        "build up the path taken to get this particular record beating distance",
        "the starting position has route of -1",
        "step back along the route taken to generate this distance",
        "this is the starting position",
        "keep track of this record path",
        "System.out.println(furthestdistance); //print out the results",
        "System.out.println(furthestroute);",
        "}",
        "print out the results",
        "print vertices",
        "everything you need for a vertex",
        "has it been visited?",
        "the shortest route from starting position to this vertex",
        "keep track of the last step taken to reach this vertex for the shortest path - what vertex did it come from?",
        "name of the vertex",
        "give the vertex a name when instantiated"
    ],
    "docstrings": [
        "* Write a program that reads in a file representing a connected undirected weighted\n * graph in the form of an adjacency matrix and outputs the longest path between any\n * two vertices in the graph.\n * For example, if you load in the file graph.txt the output should look something\n * like this:\n * 20\n * EBCJ\n * This is a difficult programming challenge. This code might help you make a start if\n * you want to use it:"
    ],
    "functions": [
        "main",
        "printVertices",
        "Vertex",
        "load",
        "save"
    ],
    "classes": [
        "Graph",
        "Vertex",
        "FileIO"
    ]
}