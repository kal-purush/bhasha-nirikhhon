{
    "identifiers": [
        "os",
        "path",
        "pytest",
        "conda",
        "Locked",
        "tmpdir",
        "Locked",
        "tmpdir",
        "strpath",
        "os",
        "path",
        "basename",
        "lock_path",
        "tmpdir",
        "join",
        "path",
        "exists",
        "tmpdir",
        "join",
        "path",
        "isdir",
        "tmpdir",
        "join",
        "path",
        "exists",
        "tmpdir",
        "exists",
        "tmpdir",
        "Locked",
        "tmpdir",
        "strpath",
        "lock1",
        "os",
        "path",
        "basename",
        "lock1",
        "lock_path",
        "tmpdir",
        "join",
        "path",
        "exists",
        "tmpdir",
        "join",
        "path",
        "isdir",
        "pytest",
        "raises",
        "RuntimeError",
        "execinfo",
        "Locked",
        "tmpdir",
        "strpath",
        "retries",
        "lock2",
        "lock2",
        "lock_path",
        "lock1",
        "lock_path",
        "execinfo",
        "execinfo",
        "tmpdir",
        "join",
        "path",
        "exists",
        "tmpdir",
        "join",
        "path",
        "isdir",
        "tmpdir",
        "join",
        "path",
        "exists",
        "tmpdir",
        "exists"
    ],
    "literals": [
        "\"LOCKERROR\"",
        "\"conda is already doing something\""
    ],
    "variables": [
        "path",
        "path"
    ],
    "comments": [
        "lock should clean up after itself",
        "this should never happen",
        "lock should clean up after itself"
    ],
    "docstrings": [],
    "functions": [
        "test_lock_passes",
        "test_lock_locks"
    ],
    "classes": []
}