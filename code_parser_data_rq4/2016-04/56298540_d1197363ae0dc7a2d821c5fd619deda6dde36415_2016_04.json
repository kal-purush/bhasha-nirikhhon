{
    "identifiers": [
        "os",
        "json",
        "django",
        "core",
        "exceptions",
        "ImproperlyConfigured",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "CONFIG_DIR",
        "os",
        "path",
        "dirname",
        "CONFIG_DIR",
        "open",
        "os",
        "path",
        "join",
        "SETTINGS_DIR",
        "fh",
        "json",
        "loads",
        "fh",
        "read",
        "fh",
        "close",
        "FileNotFoundError",
        "ImproperlyConfigured",
        "msg",
        "ValueError",
        "err",
        "err",
        "key",
        "keys",
        "keys",
        "keys",
        "key",
        "KeyError",
        "format",
        "key",
        "ImproperlyConfigured",
        "msg",
        "get_key",
        "os",
        "path",
        "join",
        "BASE_DIR",
        "os",
        "path",
        "join",
        "BASE_DIR",
        "os",
        "path",
        "join",
        "BASE_DIR",
        "os",
        "path",
        "join",
        "BASE_DIR",
        "os",
        "path",
        "join",
        "BASE_DIR"
    ],
    "literals": [
        "'settings'",
        "'keys.json'",
        "'r'",
        "'Configure keys.json in the settings folder'",
        "'Set the \"{}\" setting in keys.json or the keys dictionary '",
        "'you provided'",
        "'SECRET_KEY'",
        "'django.contrib.admin'",
        "'django.contrib.auth'",
        "'django.contrib.contenttypes'",
        "'django.contrib.sessions'",
        "'django.contrib.messages'",
        "'django.contrib.staticfiles'",
        "'home'",
        "'notes'",
        "'django.middleware.security.SecurityMiddleware'",
        "'django.contrib.sessions.middleware.SessionMiddleware'",
        "'django.middleware.common.CommonMiddleware'",
        "'django.middleware.csrf.CsrfViewMiddleware'",
        "'django.contrib.auth.middleware.AuthenticationMiddleware'",
        "'django.contrib.auth.middleware.SessionAuthenticationMiddleware'",
        "'django.contrib.messages.middleware.MessageMiddleware'",
        "'django.middleware.clickjacking.XFrameOptionsMiddleware'",
        "'config.urls'",
        "'BACKEND'",
        "'django.template.backends.django.DjangoTemplates'",
        "'DIRS'",
        "'templates'",
        "'APP_DIRS'",
        "'OPTIONS'",
        "'context_processors'",
        "'django.template.context_processors.debug'",
        "'django.template.context_processors.request'",
        "'django.contrib.auth.context_processors.auth'",
        "'django.contrib.messages.context_processors.messages'",
        "'config.wsgi.application'",
        "'default'",
        "'ENGINE'",
        "'django.db.backends.sqlite3'",
        "'NAME'",
        "'db.sqlite3'",
        "'NAME'",
        "'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'",
        "'NAME'",
        "'django.contrib.auth.password_validation.MinimumLengthValidator'",
        "'NAME'",
        "'django.contrib.auth.password_validation.CommonPasswordValidator'",
        "'NAME'",
        "'django.contrib.auth.password_validation.NumericPasswordValidator'",
        "'en-us'",
        "'UTC'",
        "'/static/'",
        "'media'",
        "'static'",
        "'assets'"
    ],
    "variables": [
        "CONFIG_DIR",
        "SETTINGS_DIR",
        "BASE_DIR",
        "keys",
        "msg",
        "msg",
        "SECRET_KEY",
        "DEBUG",
        "ALLOWED_HOSTS",
        "INSTALLED_APPS",
        "MIDDLEWARE_CLASSES",
        "ROOT_URLCONF",
        "TEMPLATES",
        "WSGI_APPLICATION",
        "DATABASES",
        "AUTH_PASSWORD_VALIDATORS",
        "LANGUAGE_CODE",
        "TIME_ZONE",
        "USE_I18N",
        "USE_L10N",
        "USE_TZ",
        "STATIC_URL",
        "MEDIA_ROOT",
        "STATIC_ROOT",
        "STATICFILES_DIR"
    ],
    "comments": [
        "This is the only allowed django-related package to be imported into",
        "our settings file.",
        "Build paths inside the project like this: os.path.join(BASE_DIR, ...)",
        "This is a py3 exception",
        "Quick-start development settings - unsuitable for production",
        "See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/",
        "SECURITY WARNING: keep the secret key used in production secret!",
        "SECURITY WARNING: don't run with debug turned on in production!",
        "Application definition",
        "Django apps",
        "3rd-party apps",
        "Local apps",
        "Database",
        "https://docs.djangoproject.com/en/1.9/ref/settings/#databases",
        "Password validation",
        "https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators",
        "Internationalization",
        "https://docs.djangoproject.com/en/1.9/topics/i18n/",
        "Static files (CSS, JavaScript, Images)",
        "https://docs.djangoproject.com/en/1.9/howto/static-files/"
    ],
    "docstrings": [
        "\"\"\"\nDjango settings for app project.\n\nGenerated by 'django-admin startproject' using Django 1.9.5.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/1.9/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/1.9/ref/settings/\n\"\"\"",
        "\"\"\"Retrieve a configuration key value from a key dictionary\n\n    :param key: Settings config dictionary key\n    :type key: str\n\n    :param keys: Key dictionary.\n        Default: Values from keys.json as dictionary\n    :type keys: dict\n\n    :returns: Value from a key dictionary\n\n    \"\"\""
    ],
    "functions": [
        "get_key"
    ],
    "classes": []
}