{
    "identifiers": [
        "target",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "key",
        "source",
        "source",
        "key",
        "target",
        "key",
        "source",
        "key",
        "target",
        "require",
        "require",
        "require",
        "detectEvents",
        "testEl",
        "EVENT_NAME_MAP",
        "EVENT_NAME_MAP",
        "baseEventName",
        "EVENT_NAME_MAP",
        "EVENT_NAME_MAP",
        "baseEventName",
        "EVENT_NAME_MAP",
        "baseEventName",
        "styleName",
        "baseEvents",
        "styleName",
        "style",
        "endEvents",
        "baseEvents",
        "styleName",
        "endEvents",
        "node",
        "eventName",
        "eventListener",
        "node",
        "eventName",
        "eventListener",
        "node",
        "eventName",
        "eventListener",
        "node",
        "eventName",
        "eventListener",
        "element",
        "className",
        "element",
        "element",
        "className",
        "hasClass",
        "element",
        "className",
        "element",
        "element",
        "className",
        "element",
        "element",
        "className",
        "hasClass",
        "element",
        "className",
        "element",
        "element",
        "className",
        "element",
        "element",
        "className",
        "element",
        "element",
        "className",
        "element",
        "element",
        "className",
        "element",
        "className",
        "React",
        "transition",
        "animationType",
        "finishCallback",
        "ReactDom",
        "animationType",
        "className",
        "endListener",
        "removeClass",
        "node",
        "className",
        "removeClass",
        "node",
        "activeClassName",
        "endEvents",
        "endEvent",
        "removeEventListener",
        "node",
        "endEvent",
        "endListener",
        "finishCallback",
        "finishCallback",
        "animationSupported",
        "endListener",
        "animationType",
        "animationType",
        "setTimeout",
        "endListener",
        "animationType",
        "setTimeout",
        "endListener",
        "endEvents",
        "endEvent",
        "addEventListener",
        "node",
        "endEvent",
        "endListener",
        "addClass",
        "node",
        "className",
        "activeClassName",
        "queueClass",
        "className",
        "className",
        "setTimeout",
        "TICK",
        "flushClassNameQueue",
        "ReactDom",
        "name",
        "addClass",
        "node",
        "name",
        "componentWillMount",
        "TimeoutTransitionGroupChild",
        "componentWillUnmount",
        "clearTimeout",
        "clearTimeout",
        "componentWillEnter",
        "done",
        "done",
        "done",
        "componentWillAppear",
        "done",
        "done",
        "done",
        "componentWillLeave",
        "done",
        "TimeoutTransitionGroupChild",
        "done",
        "done",
        "componentDidUpdate",
        "TimeoutTransitionGroupChild",
        "render",
        "React",
        "React",
        "React",
        "React",
        "React",
        "React",
        "React",
        "React",
        "getDefaultProps",
        "_wrapChild",
        "child",
        "React",
        "TimeoutTransitionGroupChild",
        "child",
        "render",
        "React",
        "ReactTransitionGroup",
        "_extends",
        "TimeoutTransitionGroup"
    ],
    "literals": [
        "'use strict'",
        "'react'",
        "'react-dom'",
        "'react-addons-transition-group'",
        "'transition'",
        "'transitionend'",
        "'WebkitTransition'",
        "'webkitTransitionEnd'",
        "'MozTransition'",
        "'mozTransitionEnd'",
        "'OTransition'",
        "'oTransitionEnd'",
        "'msTransition'",
        "'MSTransitionEnd'",
        "'animation'",
        "'animationend'",
        "'WebkitAnimation'",
        "'webkitAnimationEnd'",
        "'MozAnimation'",
        "'mozAnimationEnd'",
        "'OAnimation'",
        "'oAnimationEnd'",
        "'msAnimation'",
        "'MSAnimationEnd'",
        "\"undefined\"",
        "'div'",
        "'AnimationEvent'",
        "'TransitionEvent'",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "' '",
        "'TimeoutTransitionGroupChild'",
        "'-'",
        "'-active'",
        "\"enter\"",
        "\"appear\"",
        "\"leave\"",
        "'enter'",
        "'appear'",
        "'leave'",
        "'TimeoutTransitionGroup'"
    ],
    "variables": [
        "_extends",
        "i",
        "source",
        "React",
        "ReactDom",
        "ReactTransitionGroup",
        "TICK",
        "EVENT_NAME_MAP",
        "endEvents",
        "testEl",
        "style",
        "baseEvents",
        "TimeoutTransitionGroupChild",
        "node",
        "className",
        "activeClassName",
        "endListener",
        "node",
        "TimeoutTransitionGroup"
    ],
    "comments": [
        "On some platforms, in particular some releases of Android 4.x, the",
        "un-prefixed \"animation\" and \"transition\" properties are defined on the",
        "style object but the events that fire will still be prefixed, so we need",
        "to check if the un-prefixed events are useable, and if not remove them",
        "from the map",
        "Usually this optional callback is used for informing an owner of",
        "a leave animation and telling it to remove the child.",
        "Need to do this to actually trigger a transition."
    ],
    "docstrings": [
        "* The CSSTransitionGroup component uses the 'transitionend' event, which\n * browsers will not send for any number of reasons, including the\n * transitioning node not being painted or in an unfocused tab.\n *\n * This TimeoutTransitionGroup instead uses a user-defined timeout to determine\n * when it is a good time to remove the component. Currently there is only one\n * timeout specified, but in the future it would be nice to be able to specify\n * separate timeouts for enter and leave, in case the timeouts for those\n * animations differ. Even nicer would be some sort of inspection of the CSS to\n * automatically determine the duration of the animation or transition.\n *\n * This is adapted from Facebook's CSSTransitionGroup which is in the React\n * addons and under the Apache 2.0 License.",
        "* EVENT_NAME_MAP is used to determine which event fired when a\n * transition/animation ends, based on the style property used to\n * define that event.",
        "* Functions for element class management to replace dependency on jQuery\n * addClass, removeClass and hasClass"
    ],
    "functions": [
        "animationSupported",
        "addEventListener",
        "removeEventListener",
        "addClass",
        "removeClass",
        "hasClass"
    ],
    "classes": []
}