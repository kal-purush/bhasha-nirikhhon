{
    "identifiers": [
        "Drawing",
        "RootNav",
        "Data",
        "Vector2D",
        "Vector2D",
        "x",
        "y",
        "x",
        "x",
        "y",
        "y",
        "x",
        "x",
        "value",
        "y",
        "y",
        "value",
        "obj",
        "obj",
        "Vector2D",
        "Vector2D",
        "obj",
        "v",
        "x",
        "x",
        "v",
        "y",
        "y",
        "obj",
        "GetType",
        "Equals",
        "GetType",
        "GetHashCode",
        "Format",
        "x",
        "y",
        "Sqrt",
        "x",
        "x",
        "y",
        "y",
        "Vector2D",
        "u",
        "Vector2D",
        "v",
        "u",
        "X",
        "v",
        "x",
        "u",
        "y",
        "v",
        "y",
        "Vector2D",
        "u",
        "Vector2D",
        "v",
        "u",
        "v",
        "Vector2D",
        "Vector2D",
        "u",
        "Vector2D",
        "v",
        "Vector2D",
        "u",
        "x",
        "v",
        "x",
        "u",
        "y",
        "v",
        "y",
        "Vector2D",
        "Vector2D",
        "u",
        "Vector2D",
        "v",
        "Vector2D",
        "u",
        "x",
        "v",
        "x",
        "u",
        "y",
        "v",
        "y",
        "Vector2D",
        "Vector2D",
        "u",
        "a",
        "Vector2D",
        "a",
        "u",
        "x",
        "a",
        "u",
        "y",
        "Vector2D",
        "Vector2D",
        "u",
        "a",
        "Vector2D",
        "u",
        "x",
        "a",
        "u",
        "y",
        "a",
        "Vector2D",
        "Vector2D",
        "u",
        "Vector2D",
        "u",
        "x",
        "u",
        "y",
        "PointF",
        "c",
        "GetAngle",
        "c",
        "PointF",
        "PointF",
        "c",
        "PointF",
        "f",
        "Atan2",
        "c",
        "Y",
        "f",
        "Y",
        "c",
        "X",
        "f",
        "X",
        "PI",
        "PointF",
        "a",
        "PointF",
        "b",
        "Sqrt",
        "Pow",
        "a",
        "X",
        "b",
        "X",
        "Pow",
        "a",
        "Y",
        "b",
        "Y",
        "PointF",
        "point",
        "PointF",
        "origin",
        "angle",
        "origin",
        "X",
        "point",
        "X",
        "origin",
        "X",
        "Cos",
        "angle",
        "point",
        "Y",
        "origin",
        "Y",
        "Sin",
        "angle",
        "origin",
        "Y",
        "point",
        "X",
        "origin",
        "X",
        "Sin",
        "angle",
        "point",
        "Y",
        "origin",
        "Y",
        "Cos",
        "angle",
        "PointF",
        "X",
        "Y",
        "PointF",
        "origin",
        "length",
        "angle",
        "PointF",
        "origin",
        "X",
        "length",
        "Cos",
        "angle",
        "origin",
        "Y",
        "length",
        "Sin",
        "angle",
        "PointF",
        "Vector2D",
        "u",
        "PointF",
        "u",
        "x",
        "u",
        "y",
        "Vector2D",
        "PointF",
        "p",
        "Vector2D",
        "p",
        "X",
        "p",
        "Y"
    ],
    "literals": [
        "\"{{X={0}, Y={1}}}\""
    ],
    "variables": [
        "x",
        "y",
        "Vector2D",
        "Empty",
        "X",
        "Y",
        "Vector2D",
        "v",
        "X",
        "Y"
    ],
    "comments": [
        "Summary description for Vector2D.",
        "</summary>",
        "angolo retta passante per l'origine",
        "angolo in gradi tra i due punti c ed f - gradi",
        "return Math.Atan((f.X - c.X) / (f.Y - c.Y) / Math.PI * 180 );"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "Vector2D",
        "Equals",
        "GetHashCode",
        "ToString",
        "Norm",
        "GetAngle",
        "GetAngle",
        "Distance",
        "PointF",
        "Rotate",
        "PointF",
        "GetPoint"
    ],
    "classes": []
}