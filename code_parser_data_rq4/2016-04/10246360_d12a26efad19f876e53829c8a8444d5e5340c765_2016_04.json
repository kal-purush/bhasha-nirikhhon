{
    "identifiers": [
        "org",
        "bson",
        "codecs",
        "org",
        "bson",
        "BsonBinarySubType",
        "org",
        "bson",
        "BsonReader",
        "org",
        "bson",
        "BsonType",
        "org",
        "bson",
        "BsonWriter",
        "org",
        "bson",
        "Transformer",
        "org",
        "bson",
        "codecs",
        "configuration",
        "CodecRegistry",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "UUID",
        "org",
        "bson",
        "assertions",
        "Assertions",
        "notNull",
        "SuppressWarnings",
        "registry",
        "bsonTypeCodecMap",
        "valueTransformer",
        "registry",
        "bsonTypeClassMap",
        "registry",
        "bsonTypeClassMap",
        "registry",
        "bsonTypeClassMap",
        "valueTransformer",
        "registry",
        "notNull",
        "registry",
        "bsonTypeCodecMap",
        "notNull",
        "bsonTypeClassMap",
        "registry",
        "valueTransformer",
        "valueTransformer",
        "valueTransformer",
        "Override",
        "objectToTransform",
        "objectToTransform",
        "Override",
        "reader",
        "decoderContext",
        "reader",
        "readStartArray",
        "reader",
        "readBsonType",
        "BsonType",
        "END_OF_DOCUMENT",
        "add",
        "readValue",
        "reader",
        "decoderContext",
        "reader",
        "readEndArray",
        "Override",
        "writer",
        "value",
        "encoderContext",
        "writer",
        "writeStartArray",
        "cur",
        "value",
        "writeValue",
        "writer",
        "encoderContext",
        "cur",
        "writer",
        "writeEndArray",
        "Override",
        "SuppressWarnings",
        "writer",
        "encoderContext",
        "value",
        "value",
        "writer",
        "writeNull",
        "codec",
        "registry",
        "get",
        "value",
        "getClass",
        "encoderContext",
        "encodeWithChildContext",
        "codec",
        "writer",
        "value",
        "reader",
        "decoderContext",
        "bsonType",
        "reader",
        "getCurrentBsonType",
        "bsonType",
        "BsonType",
        "NULL",
        "reader",
        "readNull",
        "bsonType",
        "BsonType",
        "BINARY",
        "bsonSubType",
        "reader",
        "peekBinarySubType",
        "bsonSubType",
        "BsonBinarySubType",
        "UUID_STANDARD",
        "getValue",
        "bsonSubType",
        "BsonBinarySubType",
        "UUID_LEGACY",
        "getValue",
        "registry",
        "get",
        "decode",
        "reader",
        "decoderContext",
        "valueTransformer",
        "transform",
        "bsonTypeCodecMap",
        "get",
        "bsonType",
        "decode",
        "reader",
        "decoderContext"
    ],
    "literals": [
        "\"rawtypes\"",
        "\"registry\"",
        "\"bsonTypeClassMap\"",
        "\"unchecked\"",
        "\"rawtypes\""
    ],
    "variables": [
        "registry",
        "bsonTypeCodecMap",
        "valueTransformer"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2016 MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Encodes and decodes {@code Iterable} objects.\n *\n * @since 3.3",
        "* Construct a new instance with the given {@code CodecRegistry} and {@code BsonTypeClassMap}.\n     *\n     * @param registry the non-null codec registry\n     * @param bsonTypeClassMap the non-null BsonTypeClassMap",
        "* Construct a new instance with the given {@code CodecRegistry} and {@code BsonTypeClassMap}.\n     *\n     * @param registry the non-null codec registry\n     * @param bsonTypeClassMap the non-null BsonTypeClassMap\n     * @param valueTransformer the value Transformer"
    ],
    "functions": [
        "IterableCodec",
        "IterableCodec",
        "transform",
        "decode",
        "encode",
        "getEncoderClass",
        "writeValue",
        "readValue"
    ],
    "classes": [
        "IterableCodec"
    ]
}