{
    "identifiers": [
        "Drawing",
        "Globalization",
        "Aspose",
        "BarCode",
        "Aspose",
        "Words",
        "Fields",
        "ApiExamples",
        "IBarcodeGenerator",
        "inputCode",
        "inputCode",
        "Symbology",
        "MinValue",
        "inputCode",
        "ToUpper",
        "Symbology",
        "MinValue",
        "outputCode",
        "Symbology",
        "QR",
        "outputCode",
        "Symbology",
        "Code128",
        "outputCode",
        "Symbology",
        "Code39Standard",
        "outputCode",
        "Symbology",
        "EAN8",
        "outputCode",
        "Symbology",
        "EAN13",
        "outputCode",
        "Symbology",
        "UPCA",
        "outputCode",
        "Symbology",
        "UPCE",
        "outputCode",
        "Symbology",
        "ITF14",
        "outputCode",
        "heightInTwipsString",
        "TryParseInt",
        "heightInTwipsString",
        "heightInTwips",
        "MinValue",
        "heightInTwipsString",
        "heightInTwips",
        "inputColor",
        "TryParseHex",
        "inputColor",
        "Replace",
        "color",
        "MinValue",
        "inputColor",
        "Color",
        "FromArgb",
        "color",
        "color",
        "color",
        "scalingFactor",
        "TryParseInt",
        "scalingFactor",
        "percents",
        "MinValue",
        "percents",
        "percents",
        "isParsed",
        "isParsed",
        "scalingFactor",
        "percents",
        "BarcodeParameters",
        "parameters",
        "parameters",
        "BarcodeType",
        "parameters",
        "BarcodeValue",
        "BarCodeBuilder",
        "builder",
        "SymbologyType",
        "ConvertBarcodeType",
        "parameters",
        "BarcodeType",
        "builder",
        "SymbologyType",
        "Symbology",
        "MinValue",
        "builder",
        "CodeText",
        "parameters",
        "BarcodeValue",
        "builder",
        "SymbologyType",
        "Symbology",
        "QR",
        "builder",
        "Display2DText",
        "parameters",
        "BarcodeValue",
        "parameters",
        "ForegroundColor",
        "builder",
        "ForeColor",
        "ConvertColor",
        "parameters",
        "ForegroundColor",
        "parameters",
        "BackgroundColor",
        "builder",
        "BackColor",
        "ConvertColor",
        "parameters",
        "BackgroundColor",
        "parameters",
        "SymbolHeight",
        "builder",
        "ImageHeight",
        "ConvertSymbolHeight",
        "parameters",
        "SymbolHeight",
        "builder",
        "AutoSize",
        "builder",
        "CodeLocation",
        "CodeLocation",
        "parameters",
        "DisplayText",
        "builder",
        "CodeLocation",
        "CodeLocation",
        "Below",
        "builder",
        "CaptionAbove",
        "Text",
        "builder",
        "SymbologyType",
        "Symbology",
        "QR",
        "builder",
        "AutoSize",
        "builder",
        "ImageWidth",
        "scale",
        "builder",
        "ImageHeight",
        "builder",
        "ImageWidth",
        "xdim",
        "builder",
        "ImageHeight",
        "builder",
        "yDimension",
        "xdim",
        "builder",
        "xDimension",
        "xdim",
        "parameters",
        "ScalingFactor",
        "ConvertScalingFactor",
        "parameters",
        "ScalingFactor",
        "builder",
        "ImageHeight",
        "scalingFactor",
        "builder",
        "SymbologyType",
        "Symbology",
        "QR",
        "builder",
        "ImageWidth",
        "builder",
        "ImageHeight",
        "builder",
        "yDimension",
        "xdim",
        "scalingFactor",
        "builder",
        "xDimension",
        "builder",
        "yDimension",
        "builder",
        "AutoSize",
        "builder",
        "BarCodeImage",
        "BarcodeParameters",
        "parameters",
        "parameters",
        "PostalAddress",
        "BarCodeBuilder",
        "builder",
        "SymbologyType",
        "Symbology",
        "Postnet",
        "builder",
        "CodeText",
        "parameters",
        "PostalAddress",
        "builder",
        "BarCodeImage",
        "s",
        "TryParse",
        "s",
        "NumberStyles",
        "CultureInfo",
        "InvariantCulture",
        "temp",
        "CastDoubleToInt",
        "temp",
        "MinValue",
        "value",
        "value",
        "temp",
        "s",
        "TryParse",
        "s",
        "NumberStyles",
        "HexNumber",
        "CultureInfo",
        "InvariantCulture",
        "result",
        "result",
        "MinValue"
    ],
    "literals": [
        "\"QR\"",
        "\"CODE128\"",
        "\"CODE39\"",
        "\"EAN8\"",
        "\"EAN13\"",
        "\"UPCA\"",
        "\"UPCE\"",
        "\"ITF14\"",
        "\"CASE\"",
        "\"Error! Incorrect height - \"",
        "\".\"",
        "\"0x\"",
        "\"\"",
        "\"Error! Incorrect color - \"",
        "\".\"",
        "\"Error! Incorrect scaling factor - \"",
        "\".\"",
        "\"\""
    ],
    "variables": [
        "Symbology",
        "outputCode",
        "heightInTwips",
        "color",
        "isParsed",
        "percents",
        "BarCodeBuilder",
        "builder",
        "scale",
        "xdim",
        "scalingFactor",
        "BarCodeBuilder",
        "builder",
        "temp",
        "temp",
        "result"
    ],
    "comments": [
        "Sample of custom barcode generator implementation (with underlying Aspose.BarCode module)",
        "</summary>",
        "Converts barcode type from Word to Aspose.BarCode.",
        "</summary>",
        "Converts barcode image height from Word units to Aspose.BarCode units.",
        "</summary>",
        "<param name=\"heightInTwipsString\"></param>",
        "<returns></returns>",
        "Input value is in 1/1440 inches (twips)",
        "Convert to mm",
        "Converts barcode image color from Word to Aspose.BarCode.",
        "</summary>",
        "<param name=\"inputColor\"></param>",
        "<returns></returns>",
        "Input should be from \"0x000000\" to \"0xFFFFFF\"",
        "Converts bar code scaling factor from percents to float.",
        "</summary>",
        "<param name=\"scalingFactor\"></param>",
        "<returns></returns>",
        "Implementation of the GetBarcodeImage() method for IBarCodeGenerator interface.",
        "</summary>",
        "<param name=\"parameters\"></param>",
        "<returns></returns>",
        "Empiric scaling factor for converting Word barcode to Aspose.BarCode",
        "Implementation of the GetOldBarcodeImage() method for IBarCodeGenerator interface.",
        "</summary>",
        "<param name=\"parameters\"></param>",
        "<returns></returns>",
        "Hardcode type for old-fashioned Barcode",
        "Parses an integer using the invariant culture. Returns Int.MinValue if cannot parse.",
        "",
        "Allows leading sign.",
        "Allows leading and trailing spaces.",
        "</summary>",
        "RK I'm using double.TryParse only because there is no int.TryParse in .NET 1.1.",
        "What else could I do? I don't want to write number parsing routine myself.",
        "Casts a double to int32 in a way that uint32 are \"correctly\" casted too (they become negative numbers).",
        "</summary>",
        "Try parses a hex string into an integer value.",
        "on error return int.MinValue",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Symbology",
        "ConvertBarcodeType",
        "ConvertSymbolHeight",
        "Color",
        "ConvertColor",
        "ConvertScalingFactor",
        "Image",
        "GetBarcodeImage",
        "Image",
        "GetOldBarcodeImage",
        "TryParseInt",
        "CastDoubleToInt",
        "TryParseHex"
    ],
    "classes": [
        "CustomBarcodeGenerator"
    ]
}