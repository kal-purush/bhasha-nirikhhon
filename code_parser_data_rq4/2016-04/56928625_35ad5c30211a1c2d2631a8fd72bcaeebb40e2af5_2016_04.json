{
    "identifiers": [
        "opc",
        "line",
        "column",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "Node",
        "items",
        "items",
        "node",
        "node",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "node",
        "node",
        "buf",
        "start",
        "end",
        "Node",
        "value",
        "datatype",
        "opc",
        "buf",
        "opc",
        "opc",
        "op",
        "op",
        "buf",
        "op",
        "Primitive",
        "value",
        "value",
        "opc",
        "Primitive",
        "value",
        "value",
        "opc",
        "Primitive",
        "value",
        "value",
        "opc",
        "Primitive",
        "value",
        "value",
        "value",
        "value",
        "value",
        "opc",
        "opc",
        "Primitive",
        "opc",
        "Node",
        "line",
        "column",
        "value",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "op",
        "op",
        "opc",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "value",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "op",
        "buf",
        "op",
        "NodeList",
        "NodeList",
        "file",
        "mtime",
        "node",
        "node",
        "Block",
        "node",
        "node",
        "Layout",
        "node",
        "node",
        "buf",
        "opc",
        "opc",
        "op",
        "opc",
        "op",
        "op",
        "buf",
        "op",
        "buf",
        "buf",
        "op",
        "buf",
        "buf",
        "buf",
        "opc",
        "Node",
        "isBreak",
        "Node",
        "line",
        "column",
        "name",
        "parameters",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "buf",
        "opc",
        "op",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "primary",
        "escape",
        "filters",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "buf",
        "opc",
        "op",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "left",
        "right",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "opc",
        "opc",
        "buf",
        "opc",
        "sv",
        "opc",
        "buf",
        "sv",
        "opc",
        "lv",
        "sv",
        "buf",
        "lv",
        "opc",
        "ld",
        "opc",
        "buf",
        "ld",
        "opc",
        "op",
        "opc",
        "buf",
        "op",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "buf",
        "go",
        "buf",
        "go",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "buf",
        "start",
        "lv",
        "opc",
        "lv",
        "sv",
        "buf",
        "lv",
        "buf",
        "end",
        "Node",
        "line",
        "column",
        "condition",
        "left",
        "right",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "opc",
        "buf",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "buf",
        "go",
        "buf",
        "go",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "buf",
        "start",
        "buf",
        "buf",
        "end",
        "Node",
        "line",
        "column",
        "body",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "opc",
        "opc",
        "buf",
        "opc",
        "op",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "body",
        "parameters",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "buf",
        "opc",
        "lm",
        "buf",
        "lm",
        "Node",
        "line",
        "column",
        "body",
        "parameters",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "Property",
        "buf",
        "buf",
        "opc",
        "op",
        "buf",
        "op",
        "NodeList",
        "line",
        "column",
        "id",
        "buf",
        "opc",
        "opc",
        "op",
        "buf",
        "op",
        "buf",
        "buf",
        "opc",
        "Node",
        "line",
        "column",
        "id",
        "parameters",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "sc",
        "buf",
        "sc",
        "buf",
        "opc",
        "bc",
        "bc",
        "buf",
        "bc",
        "opc",
        "sc",
        "buf",
        "sc",
        "Node",
        "line",
        "column",
        "name",
        "value",
        "line",
        "column",
        "buf",
        "opc",
        "buf",
        "opc",
        "op",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "src",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "op",
        "buf",
        "op",
        "Node",
        "line",
        "column",
        "src",
        "line",
        "column",
        "buf",
        "opc",
        "opc",
        "op",
        "buf",
        "op",
        "NodeList",
        "line",
        "column",
        "condition",
        "buf",
        "opc",
        "opc",
        "opc",
        "buf",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "buf",
        "go",
        "buf",
        "go",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "buf",
        "start",
        "node",
        "start",
        "opc",
        "node",
        "buf",
        "start",
        "end",
        "buf",
        "start",
        "buf",
        "end",
        "NodeList",
        "line",
        "column",
        "condition",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "buf",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "buf",
        "go",
        "buf",
        "go",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "NodeList",
        "line",
        "column",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "buf",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "Node",
        "line",
        "column",
        "goHead",
        "line",
        "column",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "end",
        "buf",
        "go",
        "Node",
        "NodeList",
        "line",
        "column",
        "keyName",
        "valueName",
        "iteration",
        "buf",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "start",
        "opc",
        "end",
        "opc",
        "buf",
        "opc",
        "buf",
        "ct",
        "opc",
        "opc",
        "opc",
        "objName",
        "Nop",
        "buf",
        "hasNextName",
        "Property",
        "Identifier",
        "objName",
        "NodeList",
        "buf",
        "nextName",
        "Property",
        "Identifier",
        "objName",
        "NodeList",
        "buf",
        "buf",
        "start",
        "opc",
        "op",
        "objName",
        "buf",
        "op",
        "op",
        "opc",
        "op",
        "hasNextName",
        "buf",
        "op",
        "opc",
        "call",
        "buf",
        "call",
        "opc",
        "go",
        "opc",
        "go",
        "end",
        "buf",
        "go",
        "Property",
        "Identifier",
        "objName",
        "NodeList",
        "buf",
        "op",
        "opc",
        "op",
        "objName",
        "buf",
        "op",
        "op",
        "opc",
        "op",
        "nextName",
        "buf",
        "op",
        "call",
        "opc",
        "call",
        "buf",
        "call",
        "buf",
        "start",
        "end",
        "go",
        "opc",
        "go",
        "opc",
        "go",
        "start",
        "buf",
        "go",
        "buf",
        "end"
    ],
    "literals": [
        "'./opcodes'",
        "string",
        "string",
        "string",
        "''",
        "''",
        "'true'",
        "'null'",
        "string",
        "string",
        "string",
        "\"layout 只能出现一次\"",
        "string",
        "string",
        "'=='",
        "'!='",
        "'<'",
        "'<='",
        "'>'",
        "'>='",
        "'+'",
        "'-'",
        "'*'",
        "'/'",
        "'%'",
        "'&&'",
        "'||'",
        "'??'",
        "\"运算符未定义：\"",
        "string",
        "'neg'",
        "'pos'",
        "'未定义的操作符: '",
        "string",
        "string",
        "'body'",
        "'body'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'hasNext'",
        "'next'",
        "'current'"
    ],
    "variables": [
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "op",
        "start",
        "end",
        "sv",
        "lv",
        "ld",
        "op",
        "go",
        "start",
        "end",
        "go",
        "op",
        "lm",
        "op",
        "op",
        "sc",
        "bc",
        "sc",
        "op",
        "op",
        "op",
        "start",
        "end",
        "go",
        "go",
        "go",
        "go",
        "ct",
        "objName",
        "hasNextName",
        "nextName",
        "op",
        "call",
        "go"
    ],
    "comments": [
        "---------------------------------------------------------\n * Copyright 2016 otpl-node Author. All rights reserved.\n *--------------------------------------------------------",
        "write blocks",
        "write header end",
        "write layout",
        "write body",
        "write exit",
        "加上要过滤的对象作为第一个参数",
        "取得表达式1的值并设置临时变量",
        "如表达式1 不为 null 则结束",
        "取得表达式2的值",
        "获取临时值",
        "结束",
        "计算条件",
        "计算左值",
        "计算右值",
        "结束",
        "if(this.name==='range'){",
        "var op=new il.RangeIterator()",
        "}",
        "var op = new il.GetLocal(this.line);",
        "op.name = this.id;",
        "buf.push(op);",
        "console.log(this.obj)",
        "直接写入函数名称",
        "创建新的作用域",
        "参数",
        "调用",
        "创建新的作用域",
        "计算条件",
        "执行块",
        "执行else if",
        "计算条件",
        "执行块",
        "执行块",
        "获取对象",
        "obj",
        "开始标记",
        "执行方法：",
        "没有参数",
        "如果结束",
        "执行下一个迭代",
        "没有参数",
        "需要传递开始与结束标签，上下文中 break,continue语句需要使用",
        "回到开始",
        "结束",
        "TODO: 删除临时方法"
    ],
    "docstrings": [
        "* Node",
        "* NodeList",
        "* 表示一个模板数据",
        "* 表示一个标识符",
        "* 表示模板根节点",
        "* 表示该节点将被忽略",
        "* Filter",
        "* Print",
        "* 表示包含二元运算符的表达式。",
        "* Ternary",
        "* 表示包含一元运算符的表达式。",
        "* Nop"
    ],
    "functions": [
        "compile",
        "count",
        "append",
        "compile",
        "compile",
        "compile",
        "compile",
        "append",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile",
        "compile"
    ],
    "classes": [
        "Node",
        "NodeList",
        "Primitive",
        "Data",
        "Identifier",
        "Root",
        "Skip",
        "Filter",
        "Print",
        "Binary",
        "Ternary",
        "Unary",
        "Property",
        "Method",
        "Block",
        "BlockCall",
        "Layout",
        "Include",
        "If",
        "Elif",
        "Else",
        "Break",
        "Nop",
        "For"
    ]
}