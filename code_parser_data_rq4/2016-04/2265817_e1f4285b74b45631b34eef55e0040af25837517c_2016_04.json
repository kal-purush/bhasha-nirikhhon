{
    "identifiers": [
        "org",
        "powertac",
        "common",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "log",
        "LogManager",
        "getLogger",
        "getName",
        "id",
        "IdGenerator",
        "createId",
        "epsilon",
        "upRegulationCapacity",
        "downRegulationCapacity",
        "upRegulationCapacity",
        "downRegulationCapacity",
        "upRegulationCapacity",
        "upRegulationCapacity",
        "upRegulationCapacity",
        "log",
        "warn",
        "upRegulationCapacity",
        "downRegulationCapacity",
        "downRegulationCapacity",
        "downRegulationCapacity",
        "log",
        "warn",
        "downRegulationCapacity",
        "upRegulationCapacity",
        "upRegulationCapacity",
        "downRegulationCapacity",
        "downRegulationCapacity",
        "rc",
        "upRegulationCapacity",
        "rc",
        "getUpRegulationCapacity",
        "downRegulationCapacity",
        "rc",
        "getDownRegulationCapacity",
        "id",
        "upRegulationCapacity",
        "value",
        "filteredValue",
        "filterValue",
        "value",
        "filteredValue",
        "log",
        "warn",
        "filteredValue",
        "upRegulationCapacity",
        "filteredValue",
        "downRegulationCapacity",
        "value",
        "filteredValue",
        "filterValue",
        "value",
        "filteredValue",
        "log",
        "warn",
        "filteredValue",
        "downRegulationCapacity",
        "filteredValue",
        "rc",
        "setUpRegulationCapacity",
        "upRegulationCapacity",
        "rc",
        "upRegulationCapacity",
        "setDownRegulationCapacity",
        "downRegulationCapacity",
        "rc",
        "downRegulationCapacity",
        "amount",
        "amount",
        "log",
        "warn",
        "amount",
        "setUpRegulationCapacity",
        "upRegulationCapacity",
        "amount",
        "amount",
        "amount",
        "log",
        "warn",
        "amount",
        "setDownRegulationCapacity",
        "downRegulationCapacity",
        "amount",
        "original",
        "abs",
        "original",
        "epsilon",
        "original"
    ],
    "literals": [
        "\"upRegulationCapacity \"",
        "\" < 0.0\"",
        "\"downRegulationCapacity \"",
        "\" > 0.0\"",
        "\"Attempt to set negative up-regulation capacity \"",
        "\"Attempt to set positive down-regulation capacity \"",
        "\"Attempt to add negative up-regulation capacity \"",
        "\"Attempt to add positive down-regulation capacity \""
    ],
    "variables": [],
    "comments": [
        "ignore small numbers",
        "@StateChange",
        "filter out small values"
    ],
    "docstrings": [
        "* Copyright (c) 2014-2016 by John E. Collins\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Accumulates available regulation capacity for a given TariffSubscription.\n * This is basically a data structure that holds two numbers: an amount of\n * up-regulation capacity (non-negative), and an amount of down-regulation\n * capacity (non-positive). The subscription is also included to simplify\n * log analysis; in cases where no subscription is involved, this value\n * should be null.\n * \n * @author John Collins",
        "* Creates a new RegulationAccumulator instance specifying the amounts of\n   * regulating capacity available for up-regulation and down-regulation.\n   * Values are expressed with respect to the balancing market; a negative\n   * value means power is delivered to the customer (down-regulation), and a\n   * positive value means power is delivered to the balancing market\n   * (up-regulation).",
        "* Creates a new RegulationAccumulator from an immutable\n   * RegulationCapacity instance.",
        "* Returns the available up-regulation capacity in kWh.\n   * Value is non-negative.",
        "* Sets the up-regulation value.\n   * Argument must be non-negative.",
        "* Returns the available down-regulation capacity in kWh.\n   * Value is non-positive.",
        "* Sets the down-regulation value.\n   * Argument must be non-negative.",
        "* Adds the capacities in the given RegulationAccumulator instance to this\n   * instance.",
        "* Adds the given amount of up-regulation capacity.\n   * Amount must be non-negative.",
        "* Adds the given amount of down-regulation capacity.\n   * Amount must be non-positive."
    ],
    "functions": [
        "RegulationAccumulator",
        "RegulationAccumulator",
        "getId",
        "getUpRegulationCapacity",
        "setUpRegulationCapacity",
        "getDownRegulationCapacity",
        "setDownRegulationCapacity",
        "add",
        "addUpRegulation",
        "addDownRegulation",
        "filterValue"
    ],
    "classes": [
        "RegulationAccumulator"
    ]
}