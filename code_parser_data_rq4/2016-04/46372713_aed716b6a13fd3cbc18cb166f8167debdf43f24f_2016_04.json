{
    "identifiers": [
        "require",
        "require",
        "require",
        "path",
        "resolve",
        "reject",
        "fs",
        "path",
        "err",
        "content",
        "err",
        "reject",
        "err",
        "resolve",
        "content",
        "phantomjs",
        "phantom",
        "readFile",
        "htmlToAdd",
        "Buffer",
        "js",
        "page",
        "cssFile",
        "page",
        "jsFile",
        "readFile",
        "html",
        "html",
        "page",
        "page",
        "response",
        "response",
        "response",
        "page",
        "phantom",
        "co",
        "exampleLocalResources",
        "process",
        "err",
        "err",
        "err",
        "err",
        "err",
        "process"
    ],
    "literals": [
        "'use strict'",
        "'co'",
        "'../../index.js'",
        "'fs'",
        "'./example-local-resources.css'",
        "'\"<br><p>Yay, I was rendered!</p>\"'",
        "'document.body.innerHTML = document.body.innerHTML + '",
        "'myCssFile'",
        "'styles/example-style.css'",
        "'myJsFile'",
        "'scripts/example-script.js'",
        "'./example-local-resources.html'",
        "'viewportSize'",
        "'%s - %s'",
        "'Finished exampleLocalResources'",
        "'%s'"
    ],
    "variables": [
        "co",
        "phantomjs",
        "fs",
        "readFile",
        "exampleLocalResources",
        "phantom",
        "page",
        "cssFile",
        "htmlToAdd",
        "js",
        "jsFile",
        "html"
    ],
    "comments": [
        "Simple example using the local resource capabilities",
        "of a page",
        "instead of ../../index.js, you would use 'promise-phantom'",
        "Create a small wrapper around fs.readFile",
        "to make it work with promises, and therefore",
        "with co",
        "First, by creating a phantom instance,",
        "you are starting up phantomJS in a different process.",
        "the 'phantom'-object will be what you will be using",
        "Creating a page is as simple as this,",
        "and can be done several times for all the pages you need.",
        "Make sure to run page.close() or phantom.exit()",
        "when you are done.",
        "By looking at example-local-resources.html,",
        "we can see that it needs two files:",
        "- styles/example-style.css",
        "- scripts/example-script.js",
        "",
        "Since we want to render the html file in a temporary directory",
        "we need to make sure that PhantomJS has access to these files.",
        "this can be done through \"local resources\".",
        "",
        "Lets start by adding the css file, as we have an actual file",
        "for that. The example-script.js we will need to create ourselves.",
        "As we have no file to get our example-script from, we'll just",
        "create some here. Lets just add: \"I was rendered\" to the HTML.",
        "In order for promise-phantom to accept the content, it'll have",
        "to be a buffer. Luckily, creating a buffer from a string is as",
        "easy as:",
        "Now, lets add them. Remember we needed to add:",
        "'styles/example-style.css',",
        "'scripts/example-script.js'",
        "Now that we have our local resources we will need to",
        "load our HTML. promise-phantom does have a .open function,",
        "but this is reserved for webpages or local files",
        "that does not need to be saved in a temporary storage",
        "Before we render our PDF, we'll just set a few settings that will",
        "make it look a bit better",
        "Set the viewport size",
        "Just to make sure our resources are loaded correctly,",
        "lets keep watching them",
        "Notice how they got very random names at the start",
        "There are two ways of rendering our html now.",
        "1. By using .openHtml, follow by .render we can",
        "specify a filename that it will automatically",
        "be written to.",
        "2. By using .renderHtml, it will perform .openHtml",
        "followed by .render, but instead of saving it",
        "to a file, it will return a Buffer. This",
        "is especially useful if you want to send",
        "the pdf via a webserver and/or email via node",
        "Uncomment the two lines below to use the first method",
        "let status = yield page.openHtml(html);",
        "yield page.render('./myPdf.pdf');",
        "Uncomment the one line below to use the second method",
        "let pdfBuffer = yield page.renderPdf(html);",
        "Now that we're done, lets start closing things and",
        "releasing resources",
        "and lastly, exiting the phantom process, clearing memory in phantomjs",
        "Run the example function - returns a promise"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}