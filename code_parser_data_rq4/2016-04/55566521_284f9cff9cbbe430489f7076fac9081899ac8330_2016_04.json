{
    "identifiers": [
        "com",
        "relay",
        "service",
        "java",
        "io",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "TAG",
        "mClient",
        "mMasking",
        "mStage",
        "mFinal",
        "mMasked",
        "mOpcode",
        "mLengthSize",
        "mLength",
        "mMode",
        "mMask",
        "mPayload",
        "mClosed",
        "mBuffer",
        "BYTE",
        "FIN",
        "MASK",
        "RSV1",
        "RSV2",
        "RSV3",
        "OPCODE",
        "LENGTH",
        "MODE_TEXT",
        "MODE_BINARY",
        "OP_CONTINUATION",
        "OP_TEXT",
        "OP_BINARY",
        "OP_CLOSE",
        "OP_PING",
        "OP_PONG",
        "OPCODES",
        "Arrays",
        "asList",
        "OP_CONTINUATION",
        "OP_TEXT",
        "OP_BINARY",
        "OP_CLOSE",
        "OP_PING",
        "OP_PONG",
        "FRAGMENTED_OPCODES",
        "Arrays",
        "asList",
        "OP_CONTINUATION",
        "OP_TEXT",
        "OP_BINARY",
        "client",
        "mClient",
        "client",
        "payload",
        "mask",
        "offset",
        "mask",
        "length",
        "payload",
        "i",
        "i",
        "payload",
        "length",
        "offset",
        "i",
        "payload",
        "offset",
        "i",
        "payload",
        "offset",
        "i",
        "mask",
        "i",
        "payload",
        "stream",
        "stream",
        "available",
        "mStage",
        "parseOpcode",
        "stream",
        "readByte",
        "parseLength",
        "stream",
        "readByte",
        "parseExtendedLength",
        "stream",
        "readBytes",
        "mLengthSize",
        "mMask",
        "stream",
        "readBytes",
        "mStage",
        "mPayload",
        "stream",
        "readBytes",
        "mLength",
        "emitFrame",
        "mStage",
        "mClient",
        "getListener",
        "onDisconnect",
        "data",
        "rsv1",
        "data",
        "RSV1",
        "RSV1",
        "rsv2",
        "data",
        "RSV2",
        "RSV2",
        "rsv3",
        "data",
        "RSV3",
        "RSV3",
        "rsv1",
        "rsv2",
        "rsv3",
        "mFinal",
        "data",
        "FIN",
        "FIN",
        "mOpcode",
        "data",
        "OPCODE",
        "mMask",
        "mPayload",
        "OPCODES",
        "contains",
        "mOpcode",
        "FRAGMENTED_OPCODES",
        "contains",
        "mOpcode",
        "mFinal",
        "mStage",
        "data",
        "mMasked",
        "data",
        "MASK",
        "MASK",
        "mLength",
        "data",
        "LENGTH",
        "mLength",
        "mLength",
        "mStage",
        "mMasked",
        "mLengthSize",
        "mLength",
        "mStage",
        "buffer",
        "mLength",
        "getInteger",
        "buffer",
        "mStage",
        "mMasked",
        "data",
        "frame",
        "data",
        "OP_TEXT",
        "data",
        "frame",
        "data",
        "OP_BINARY",
        "data",
        "opcode",
        "errorCode",
        "frame",
        "data",
        "opcode",
        "errorCode",
        "data",
        "opcode",
        "errorCode",
        "frame",
        "data",
        "opcode",
        "errorCode",
        "data",
        "opcode",
        "errorCode",
        "mClosed",
        "Logger",
        "getGlobal",
        "log",
        "Level",
        "INFO",
        "TAG",
        "data",
        "opcode",
        "errorCode",
        "buffer",
        "data",
        "decode",
        "data",
        "data",
        "insert",
        "errorCode",
        "length",
        "buffer",
        "length",
        "insert",
        "header",
        "length",
        "length",
        "offset",
        "header",
        "mMasking",
        "masked",
        "mMasking",
        "MASK",
        "frame",
        "length",
        "offset",
        "frame",
        "FIN",
        "opcode",
        "length",
        "frame",
        "masked",
        "length",
        "length",
        "frame",
        "masked",
        "frame",
        "floor",
        "length",
        "frame",
        "length",
        "BYTE",
        "frame",
        "masked",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "floor",
        "length",
        "pow",
        "BYTE",
        "frame",
        "length",
        "BYTE",
        "errorCode",
        "frame",
        "offset",
        "floor",
        "errorCode",
        "BYTE",
        "frame",
        "offset",
        "errorCode",
        "BYTE",
        "arraycopy",
        "buffer",
        "frame",
        "offset",
        "insert",
        "buffer",
        "length",
        "mMasking",
        "mask",
        "floor",
        "random",
        "floor",
        "random",
        "floor",
        "random",
        "floor",
        "random",
        "arraycopy",
        "mask",
        "frame",
        "header",
        "mask",
        "length",
        "mask",
        "frame",
        "mask",
        "offset",
        "frame",
        "message",
        "mClient",
        "send",
        "frame",
        "message",
        "OP_PING",
        "code",
        "reason",
        "mClosed",
        "mClient",
        "send",
        "frame",
        "reason",
        "OP_CLOSE",
        "code",
        "mClosed",
        "payload",
        "mask",
        "mPayload",
        "mMask",
        "opcode",
        "mOpcode",
        "opcode",
        "OP_CONTINUATION",
        "mMode",
        "mBuffer",
        "write",
        "payload",
        "mFinal",
        "message",
        "mBuffer",
        "toByteArray",
        "mMode",
        "MODE_TEXT",
        "mClient",
        "getListener",
        "onMessage",
        "encode",
        "message",
        "mClient",
        "getListener",
        "onMessage",
        "message",
        "reset",
        "opcode",
        "OP_TEXT",
        "mFinal",
        "messageText",
        "encode",
        "payload",
        "mClient",
        "getListener",
        "onMessage",
        "messageText",
        "mMode",
        "MODE_TEXT",
        "mBuffer",
        "write",
        "payload",
        "opcode",
        "OP_BINARY",
        "mFinal",
        "mClient",
        "getListener",
        "onMessage",
        "payload",
        "mMode",
        "MODE_BINARY",
        "mBuffer",
        "write",
        "payload",
        "opcode",
        "OP_CLOSE",
        "code",
        "payload",
        "length",
        "payload",
        "payload",
        "reason",
        "payload",
        "length",
        "encode",
        "payload",
        "Logger",
        "getGlobal",
        "log",
        "Level",
        "INFO",
        "TAG",
        "code",
        "reason",
        "mClient",
        "getListener",
        "onDisconnect",
        "code",
        "reason",
        "opcode",
        "OP_PING",
        "payload",
        "length",
        "Logger",
        "getGlobal",
        "log",
        "Level",
        "INFO",
        "TAG",
        "mClient",
        "sendFrame",
        "frame",
        "payload",
        "OP_PONG",
        "opcode",
        "OP_PONG",
        "message",
        "encode",
        "payload",
        "Logger",
        "getGlobal",
        "log",
        "Level",
        "INFO",
        "TAG",
        "message",
        "mMode",
        "mBuffer",
        "reset",
        "buffer",
        "buffer",
        "e",
        "e",
        "getBytes",
        "e",
        "e",
        "i",
        "byteArrayToLong",
        "length",
        "i",
        "i",
        "MAX_VALUE",
        "i",
        "i",
        "array",
        "start",
        "Arrays",
        "copyOfRange",
        "array",
        "start",
        "array",
        "length",
        "detailMessage",
        "detailMessage",
        "b",
        "offset",
        "length",
        "b",
        "length",
        "length",
        "value",
        "i",
        "i",
        "length",
        "i",
        "shift",
        "length",
        "i",
        "value",
        "b",
        "i",
        "offset",
        "shift",
        "value",
        "length",
        "buffer",
        "length",
        "readFully",
        "buffer",
        "buffer"
    ],
    "literals": [
        "\"HybiParser\"",
        "\"EOF\"",
        "\"RSV not zero\"",
        "\"Bad opcode\"",
        "\"Expected non-final packet\"",
        "\"Creating frame for: \"",
        "\" op: \"",
        "\" err: \"",
        "\"Mode was not set.\"",
        "\"Got close op! \"",
        "\" \"",
        "\"Ping payload too large\"",
        "\"Sending pong!!\"",
        "\"Got pong! \"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"Bad integer: \"",
        "\"length must be less than or equal to b.length\""
    ],
    "variables": [
        "mClient",
        "mStage",
        "mFinal",
        "mMasked",
        "mOpcode",
        "mLengthSize",
        "mLength",
        "mMode"
    ],
    "comments": [
        "",
        "HybiParser.java: draft-ietf-hybi-thewebsocketprotocol-13 parser",
        "",
        "Based on code from the faye project.",
        "https://github.com/faye/faye-websocket-node",
        "Copyright (c) 2009-2012 James Coglan",
        "",
        "Ported from Javascript to Java by Eric Butler <eric@codebutler.com>",
        "",
        "(The MIT License)",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining",
        "a copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to",
        "permit persons to whom the Software is furnished to do so, subject to",
        "the following conditions:",
        "",
        "The above copyright notice and this permission notice shall be",
        "included in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,",
        "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND",
        "NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE",
        "LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION",
        "OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",
        "WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "FIXME: Fire callback..."
    ],
    "docstrings": [],
    "functions": [
        "HybiParser",
        "mask",
        "start",
        "parseOpcode",
        "parseLength",
        "parseExtendedLength",
        "frame",
        "frame",
        "frame",
        "frame",
        "frame",
        "ping",
        "close",
        "emitFrame",
        "reset",
        "encode",
        "decode",
        "getInteger",
        "ProtocolError",
        "byteArrayToLong",
        "HappyDataInputStream",
        "readBytes"
    ],
    "classes": [
        "HybiParser",
        "ProtocolError",
        "HappyDataInputStream"
    ]
}