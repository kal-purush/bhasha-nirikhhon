{
    "identifiers": [
        "csv",
        "math",
        "sqrt",
        "pymysql",
        "pprint",
        "numpy",
        "exit",
        "R",
        "P",
        "Q",
        "K",
        "steps",
        "alpha",
        "beta",
        "Q",
        "T",
        "step",
        "steps",
        "i",
        "len",
        "R",
        "j",
        "len",
        "R",
        "i",
        "R",
        "i",
        "j",
        "R",
        "i",
        "j",
        "numpy",
        "dot",
        "P",
        "i",
        "Q",
        "j",
        "k",
        "K",
        "P",
        "i",
        "P",
        "i",
        "k",
        "alpha",
        "eij",
        "Q",
        "k",
        "j",
        "beta",
        "P",
        "i",
        "k",
        "Q",
        "k",
        "Q",
        "k",
        "j",
        "alpha",
        "eij",
        "P",
        "i",
        "k",
        "beta",
        "Q",
        "k",
        "j",
        "numpy",
        "dot",
        "P",
        "Q",
        "i",
        "len",
        "R",
        "j",
        "len",
        "R",
        "i",
        "R",
        "i",
        "j",
        "e",
        "pow",
        "R",
        "i",
        "j",
        "numpy",
        "dot",
        "P",
        "i",
        "Q",
        "j",
        "k",
        "K",
        "e",
        "beta",
        "pow",
        "P",
        "i",
        "k",
        "pow",
        "Q",
        "k",
        "j",
        "e",
        "P",
        "Q",
        "T",
        "pymysql",
        "connect",
        "host",
        "port",
        "user",
        "passwd",
        "db",
        "autocommit",
        "conn",
        "cursor",
        "conn",
        "autocommit",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "u",
        "user_details_data",
        "userid",
        "append",
        "u",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "b",
        "book_details_data",
        "bookid",
        "append",
        "b",
        "len",
        "userid",
        "len",
        "bookid",
        "i",
        "col",
        "j",
        "row",
        "len",
        "matrix",
        "len",
        "matrix",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "r",
        "rating_details_data",
        "matrix",
        "userid",
        "index",
        "r",
        "bookid",
        "index",
        "r",
        "r",
        "numpy",
        "array",
        "matrix",
        "len",
        "matrix",
        "N",
        "len",
        "matrix",
        "M",
        "numpy",
        "random",
        "rand",
        "N",
        "K",
        "numpy",
        "random",
        "rand",
        "M",
        "K",
        "matrix_factorization",
        "matrix",
        "P",
        "Q",
        "K",
        "numpy",
        "dot",
        "nP",
        "nQ",
        "T",
        "nP",
        "nQ",
        "nR",
        "conn",
        "close",
        "import_dataset"
    ],
    "literals": [
        "\"This implementation requires the numpy module.\"",
        "'localhost'",
        "'root'",
        "'aanchal07'",
        "'minor2'",
        "\"SELECT DISTINCT userid FROM results;\"",
        "\"SELECT DISTINCT bookid FROM results;\"",
        "\"SELECT * FROM results;\"",
        "\"nP is\\n\"",
        "\"\\nnQ is\\n\"",
        "\"\\nnR is\\n\""
    ],
    "variables": [
        "matrix",
        "Q",
        "eij",
        "k",
        "j",
        "eR",
        "e",
        "e",
        "e",
        "conn",
        "cur",
        "user_details_data",
        "userid",
        "book_details_data",
        "bookid",
        "row",
        "col",
        "matrix",
        "numrows",
        "numcols",
        "rating_details_data",
        "matrix",
        "N",
        "M",
        "K",
        "P",
        "Q",
        "nP",
        "nQ",
        "nR"
    ],
    "comments": [
        "from recommendation_data import dataset",
        "fetching distinct userid",
        "print(user_details_data)",
        "fetching distinct bookid",
        "print(len(userid))",
        "print(len(bookid))",
        "print(userid.index(42))",
        "making a matrix to fill user*book rating",
        "print(numrows)",
        "print(numcols)",
        "print(matrix[row - 1][col-1])",
        "print(userid[5])",
        "print(bookid.index('0375759778'))",
        "print(matrix[5][13])"
    ],
    "docstrings": [
        "\"\"\"\n@INPUT:\n    R     : a matrix to be factorized, dimension N x M\n    P     : an initial matrix of dimension N x K\n    Q     : an initial matrix of dimension M x K\n    K     : the number of latent features\n    steps : the maximum number of steps to perform the optimisation\n    alpha : the learning rate\n    beta  : the regularization parameter\n@OUTPUT:\n    the final matrices P and Q\n\"\"\""
    ],
    "functions": [
        "matrix_factorization",
        "import_dataset"
    ],
    "classes": []
}