{
    "identifiers": [
        "print_function",
        "argparse",
        "hashlib",
        "os",
        "subprocess",
        "sys",
        "binstar_client",
        "utils",
        "get_binstar",
        "binstar_client",
        "errors",
        "conda",
        "config",
        "conda_build",
        "metadata",
        "MetaData",
        "conda_build",
        "build",
        "bldpkg_path",
        "cli",
        "meta",
        "owner",
        "format",
        "conda",
        "config",
        "subdir",
        "meta",
        "dist",
        "bldpkg_path",
        "meta",
        "cli",
        "distribution",
        "owner",
        "meta",
        "name",
        "meta",
        "version",
        "distro_name",
        "binstar_client",
        "errors",
        "NotFound",
        "dist_info",
        "exists",
        "cli",
        "meta",
        "owner",
        "channels",
        "open",
        "fh",
        "fh",
        "write",
        "cli",
        "token",
        "subprocess",
        "check_call",
        "bldpkg_path",
        "meta",
        "format",
        "owner",
        "format",
        "channels",
        "env",
        "os",
        "environ",
        "os",
        "remove",
        "binstar_cli",
        "meta",
        "owner",
        "channel",
        "format",
        "conda",
        "config",
        "subdir",
        "meta",
        "dist",
        "dist",
        "dist",
        "binstar_cli",
        "show_channel",
        "owner",
        "owner",
        "channel",
        "channel",
        "fname",
        "distributions_on_channel",
        "binstar_cli",
        "meta",
        "owner",
        "channel",
        "format",
        "conda",
        "config",
        "subdir",
        "meta",
        "dist",
        "binstar_cli",
        "add_channel",
        "channel",
        "owner",
        "meta",
        "name",
        "meta",
        "version",
        "os",
        "environ",
        "get",
        "argparse",
        "ArgumentParser",
        "description",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "recipe_dir",
        "args",
        "owner",
        "args",
        "channel",
        "get_binstar",
        "argparse",
        "Namespace",
        "token",
        "token",
        "site",
        "MetaData",
        "recipe_dir",
        "meta",
        "skip",
        "built_distribution_already_exists",
        "cli",
        "meta",
        "owner",
        "token",
        "distribution_exists_on_channel",
        "cli",
        "meta",
        "owner",
        "channel",
        "exists",
        "upload",
        "cli",
        "meta",
        "owner",
        "channel",
        "format",
        "bldpkg_path",
        "meta",
        "on_channel",
        "format",
        "bldpkg_path",
        "meta",
        "owner",
        "channel",
        "add_distribution_to_channel",
        "cli",
        "meta",
        "owner",
        "channel",
        "format",
        "bldpkg_path",
        "meta",
        "owner",
        "channel",
        "format",
        "exists",
        "owner",
        "channel",
        "main"
    ],
    "literals": [
        "'{}/{}.tar.bz2'",
        "'binstar.token'",
        "'w'",
        "'anaconda'",
        "'--quiet'",
        "'-t'",
        "'binstar.token'",
        "'upload'",
        "'--user={}'",
        "'--channel={}'",
        "'binstar.token'",
        "'main'",
        "'{}/{}.tar.bz2'",
        "'basename'",
        "'files'",
        "'main'",
        "'{}/{}.tar.bz2'",
        "'BINSTAR_TOKEN'",
        "'Upload or check consistency of a built version of a '",
        "'conda recipe with binstar. Note: The existence of the '",
        "'BINSTAR_TOKEN environment variable determines '",
        "'whether the upload should actually take place.'",
        "'recipe_dir'",
        "'the conda recipe directory'",
        "'owner'",
        "'the binstar owner/user'",
        "'--channel'",
        "'the binstar channel'",
        "'main'",
        "\"No upload to take place - this configuration was skipped in build/skip.\"",
        "'Uploaded {}'",
        "'Adding distribution {} to {}\\'s {} channel'",
        "''",
        "'Distribution {} already \\nexists on {}\\'s {} channel.'",
        "''",
        "\"No BINSTAR_TOKEN present, so no upload is taking place. \"",
        "\"The distribution just built {} already available on {}'s \"",
        "\"{} channel.\"",
        "'is'",
        "'is not'",
        "'__main__'"
    ],
    "variables": [
        "distro_name",
        "fname",
        "dist_info",
        "dist_info",
        "exists",
        "fname",
        "distributions_on_channel",
        "package_fname",
        "token",
        "description",
        "parser",
        "args",
        "recipe_dir",
        "owner",
        "channel",
        "cli",
        "meta",
        "exists",
        "on_channel"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Unfortunately, we cannot check the md5 quality of the built distribution, as",
        "this will depend on fstat information such as modification date (because",
        "distributions are tar files). Therefore we can only assume that the distribution",
        "just built, and the one on anaconda.org are the same.",
        "if exists:",
        "md5_on_binstar = dist_info.get('md5')",
        "with open(fname, 'rb') as fh:",
        "md5_of_build = hashlib.md5(fh.read()).hexdigest()",
        "",
        "if md5_on_binstar != md5_of_build:",
        "raise ValueError('This build ({}), and the build already on binstar '",
        "'({}) are different.'.format(md5_of_build, md5_on_binstar))"
    ],
    "docstrings": [
        "\"\"\"\n    Checks to see whether the built recipe (aka distribution) already\n    exists on the owner/user's binstar account.\n\n    \"\"\"",
        "\"\"\"\n    Determine whether a distribution exists on a specific channel.\n\n    Note from @pelson: As far as I can see, there is no easy way to do this on binstar.\n\n    \"\"\"",
        "\"\"\"\n    Add a(n already existing) distribution on binstar to another channel.\n\n    Note - the addition is done based on name and version - no build strings etc.\n    so if you have a foo-0.1-np18 and foo-0.1-np19 *both* will be added to the channel.\n\n    \"\"\""
    ],
    "functions": [
        "built_distribution_already_exists",
        "upload",
        "distribution_exists_on_channel",
        "add_distribution_to_channel",
        "main"
    ],
    "classes": []
}