{
    "identifiers": [
        "dpkt",
        "sys",
        "netaddr",
        "socket",
        "pcap_filepath",
        "pcap_filepath",
        "dpkt",
        "pcap",
        "Reader",
        "open",
        "pcap_filepath",
        "protocols",
        "unwanted_ip",
        "load_pcap",
        "timestamp",
        "buf",
        "pcap",
        "cnt",
        "buf",
        "dpkt",
        "ethernet",
        "Ethernet",
        "buf",
        "eth",
        "data",
        "ip",
        "data",
        "ip_proto",
        "__class__",
        "protocols",
        "ip_list",
        "has_key",
        "ip_proto",
        "__class__",
        "ip_proto",
        "__class__",
        "IPAddress",
        "socket",
        "inet_ntoa",
        "ip",
        "src",
        "IPAddress",
        "socket",
        "inet_ntoa",
        "ip",
        "dst",
        "srcip",
        "format",
        "ip_list",
        "srcip",
        "is_unicast",
        "srcip",
        "is_private",
        "srcip",
        "format",
        "unwanted_ip",
        "ip_proto",
        "__class__",
        "ip_list",
        "ip_proto",
        "__class__",
        "add",
        "srcip",
        "format",
        "ip_proto",
        "sport",
        "ip_list",
        "ip_proto",
        "__class__",
        "add",
        "srcip",
        "format",
        "dstip",
        "format",
        "ip_list",
        "dstip",
        "is_unicast",
        "dstip",
        "is_private",
        "dstip",
        "format",
        "unwanted_ip",
        "ip_proto",
        "__class__",
        "ip_list",
        "ip_proto",
        "__class__",
        "add",
        "dstip",
        "format",
        "ip_proto",
        "dport",
        "ip_list",
        "ip_proto",
        "__class__",
        "add",
        "dstip",
        "format",
        "e",
        "e",
        "e",
        "e",
        "ip_list",
        "protocols",
        "http_ports",
        "load_pcap",
        "timestamp",
        "buf",
        "pcap",
        "cnt",
        "buf",
        "dpkt",
        "ethernet",
        "Ethernet",
        "buf",
        "eth",
        "data",
        "ip",
        "data",
        "tcp",
        "__class__",
        "protocols",
        "len",
        "tcp",
        "data",
        "dpkt",
        "http",
        "Request",
        "tcp",
        "data",
        "tcp",
        "dport",
        "http",
        "headers",
        "tcp_port",
        "tcp_port",
        "http",
        "headers",
        "http",
        "headers",
        "urls",
        "append",
        "unicode",
        "url_host",
        "http",
        "uri",
        "errors",
        "e",
        "e",
        "e",
        "urls",
        "protocols",
        "load_pcap",
        "timestamp",
        "buf",
        "pcap",
        "cnt",
        "buf",
        "dpkt",
        "ethernet",
        "Ethernet",
        "buf",
        "eth",
        "data",
        "ip",
        "data",
        "tcp",
        "__class__",
        "protocols",
        "tcp",
        "sport",
        "tcp",
        "dport",
        "eth",
        "ip",
        "p",
        "dpkt",
        "dns",
        "DNS",
        "tcp",
        "data",
        "dns",
        "qr",
        "dpkt",
        "dns",
        "DNS_R",
        "dns",
        "opcode",
        "dpkt",
        "dns",
        "DNS_QUERY",
        "dns",
        "rcode",
        "dpkt",
        "dns",
        "DNS_RCODE_NOERR",
        "len",
        "dns",
        "an",
        "answer",
        "dns",
        "an",
        "answer",
        "unicode",
        "answer",
        "name",
        "errors",
        "socket",
        "inet_ntoa",
        "answer",
        "rdata",
        "answer",
        "unicode",
        "answer",
        "name",
        "errors",
        "unicode",
        "answer",
        "cname",
        "errors",
        "answer",
        "unicode",
        "answer",
        "name",
        "errors",
        "unicode",
        "answer",
        "ptrname",
        "errors",
        "req",
        "dns_list",
        "append",
        "req",
        "e",
        "e",
        "e",
        "e",
        "dns_list",
        "PacketParser",
        "sys",
        "argv",
        "pparse",
        "get_urls",
        "pparse",
        "get_dns_requests",
        "pparse",
        "get_network_connections"
    ],
    "literals": [
        "\"rb\"",
        "'TCP'",
        "'UDP'",
        "'ICMP'",
        "'0.0.0.0'",
        "'255.255.255.255'",
        "'\\x00\\x00\\x00\\x00'",
        "'TCP'",
        "'UDP'",
        "\"%s : %s\"",
        "'TCP'",
        "'UDP'",
        "\"%s : %s\"",
        "\"[+] Error in get_public_IPs: %s\"",
        "\"[+] Error in get_public_IPs: %s\"",
        "'TCP'",
        "'\\x00\\x00\\x00\\x00'",
        "\":\"",
        "'host'",
        "'host'",
        "'host'",
        "'replace'",
        "\"[-] Error in geturl() : %s \"",
        "'TCP'",
        "'UDP'",
        "'\\x00\\x00\\x00\\x00'",
        "'type'",
        "'A'",
        "'name'",
        "'replace'",
        "'result'",
        "'type'",
        "'CN'",
        "'name'",
        "'replace'",
        "'result'",
        "'replace'",
        "'type'",
        "'PTR'",
        "'name'",
        "'replace'",
        "'result'",
        "'replace'",
        "\"[-] Error in get_dns_request() : %s \"",
        "\"[-] Error in get_dns_request() : %s \"",
        "\"__main__\""
    ],
    "variables": [
        "pcap_filepath",
        "pcap",
        "cnt",
        "ip_list",
        "eth",
        "ip",
        "ip_proto",
        "ip_list",
        "srcip",
        "dstip",
        "cnt",
        "urls",
        "eth",
        "ip",
        "tcp",
        "http",
        "tcp_port",
        "url_host",
        "cnt",
        "dns_list",
        "eth",
        "ip",
        "tcp",
        "dns",
        "req",
        "req",
        "req",
        "req",
        "pparse"
    ],
    "comments": [
        "Copyright (c) 2015 Vikas Iyengar, iyengar.vikas@gmail.com (http://garage4hackers.com)",
        "Copyright (c) 2016 Detux Sandbox, http://detux.org",
        "See the file 'COPYING' for copying permission.",
        "Some pcap files have bytes 00 in beginning, just discard them",
        "Initialisation of output variable lists",
        "Some times buf contains \\x00 so this checks skip them",
        "Some pcap files have bytes 00 in beginning, just discard them",
        "print \"[-] Some error occured. - %s\" % str(e)",
        "Some times buf contains \\x00 so this checks skip them",
        "Some pcap files have bytes 00 in beginning, just discard them",
        "print \"Error:DNS\"",
        "Discard errornous Data",
        "DNS_A",
        "\"CNAME request\"",
        "print \"PTR request\", answer.name, \"\\tresponse\", answer.ptrn"
    ],
    "docstrings": [],
    "functions": [
        "load_pcap",
        "get_network_connections",
        "get_urls",
        "get_dns_requests"
    ],
    "classes": [
        "PacketParser"
    ]
}