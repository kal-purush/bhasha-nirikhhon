{
    "identifiers": [
        "geoserver",
        "resource",
        "FeatureType",
        "geoserver",
        "catalog",
        "Catalog",
        "name",
        "store",
        "native_crs",
        "srs",
        "keywords",
        "title",
        "native_crs",
        "ValueError",
        "native_crs",
        "ValueError",
        "srs",
        "native_crs",
        "FeatureType",
        "store",
        "workspace",
        "store",
        "name",
        "feature_type",
        "dirty",
        "name",
        "feature_type",
        "dirty",
        "srs",
        "feature_type",
        "dirty",
        "native_crs",
        "title",
        "feature_type",
        "dirty",
        "title",
        "name",
        "feature_type",
        "dirty",
        "keywords",
        "feature_type",
        "dirty",
        "keywords",
        "http",
        "request",
        "store",
        "resource_url",
        "feature_type",
        "message",
        "headers",
        "feature_type",
        "fetch",
        "feature_type",
        "publish_featuretype"
    ],
    "literals": [
        "\"Must specify native_crs\"",
        "\"EPSG:0\"",
        "\"CRS was set as EPSG:0! Check that the Input object is specified with a valid CRS\"",
        "'name'",
        "'srs'",
        "'nativeCRS'",
        "'title'",
        "'abstract'",
        "'keywords'",
        "\"Content-type\"",
        "\"application/xml\"",
        "\"Accept\"",
        "\"application/xml\"",
        "\"POST\""
    ],
    "variables": [
        "srs",
        "feature_type",
        "feature_type",
        "title",
        "feature_type",
        "enabled",
        "headers",
        "headers",
        "response",
        "Catalog",
        "publish_featuretype"
    ],
    "comments": [
        "@todo native_srs doesn't seem to get detected, even when in the DB",
        "metadata (at least for postgis in geometry_columns) and then there",
        "will be a misconfigured layer",
        "because name is the in FeatureType base class, work around that",
        "and hack in these others that don't have xml properties"
    ],
    "docstrings": [
        "'''Publish a featuretype from data in an existing store'''"
    ],
    "functions": [
        "publish_featuretype"
    ],
    "classes": []
}