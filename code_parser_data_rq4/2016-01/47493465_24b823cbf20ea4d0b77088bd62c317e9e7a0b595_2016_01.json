{
    "identifiers": [
        "com",
        "delta",
        "core",
        "util",
        "java",
        "io",
        "PrintWriter",
        "java",
        "sql",
        "java",
        "util",
        "java",
        "util",
        "Properties",
        "java",
        "util",
        "logging",
        "Logger",
        "poolSize",
        "minPoolSize",
        "url",
        "validationQuery",
        "properties",
        "logWriter",
        "connections",
        "properties",
        "SimpleDataSource",
        "properties",
        "properties",
        "poolSize",
        "parseInt",
        "properties",
        "getProperty",
        "minPoolSize",
        "parseInt",
        "properties",
        "getProperty",
        "poolSize",
        "minPoolSize",
        "poolSize",
        "minPoolSize",
        "poolSize",
        "minPoolSize",
        "nfe",
        "nfe",
        "getMessage",
        "url",
        "properties",
        "getProperty",
        "validationQuery",
        "properties",
        "getProperty",
        "properties",
        "getProperty",
        "equals",
        "logWriter",
        "driver",
        "properties",
        "getProperty",
        "Class",
        "forName",
        "driver",
        "e",
        "e",
        "getMessage",
        "connections",
        "i",
        "i",
        "poolSize",
        "i",
        "connections",
        "add",
        "DriverManager",
        "getConnection",
        "url",
        "properties",
        "e",
        "e",
        "printStackTrace",
        "exit",
        "Override",
        "connections",
        "size",
        "minPoolSize",
        "ensureCapacity",
        "connection",
        "connections",
        "remove",
        "connection",
        "isClosed",
        "getConnection",
        "connection",
        "prepareStatement",
        "validationQuery",
        "execute",
        "ce",
        "getConnection",
        "se",
        "connection",
        "connection",
        "connections",
        "size",
        "poolSize",
        "connections",
        "add",
        "connection",
        "connection",
        "close",
        "e",
        "e",
        "printStackTrace",
        "i",
        "minPoolSize",
        "i",
        "poolSize",
        "i",
        "connections",
        "add",
        "DriverManager",
        "getConnection",
        "url",
        "properties",
        "e",
        "e",
        "printStackTrace",
        "poolSize",
        "logWriter",
        "logWriter",
        "logWriter",
        "flush",
        "Override",
        "logWriter",
        "Override",
        "logWriter",
        "Override",
        "Deprecated",
        "username",
        "password",
        "getConnection",
        "Override",
        "Deprecated",
        "seconds",
        "Override",
        "Deprecated",
        "Override",
        "Deprecated",
        "Override",
        "Deprecated",
        "iface",
        "Override",
        "Deprecated",
        "iface"
    ],
    "literals": [
        "\"poolSize\"",
        "\"10\"",
        "\"minPoolSize\"",
        "\"2\"",
        "\"poolSize/minPoolSize must be a positive number\"",
        "\"poolSize [\"",
        "\"] cannot be less then \"",
        "\"minPoolSize [\"",
        "\"]\"",
        "\"parameter illegal: pool size must be number. \"",
        "\"url\"",
        "\"validationQuery\"",
        "\"select 1\"",
        "\"showLog\"",
        "\"false\"",
        "\"true\"",
        "\"driver\"",
        "\"driver not declared in jdbc.properties\"",
        "\"Driver not found: \"",
        "\"[REMIND]\\t\"",
        "\"\\t\"",
        "\"Connection pool initialized successfully.\"",
        "\"You have an syntax error in your validationQuery @ jdbc.properties\"",
        "\"[REMIND]\\t\"",
        "\"\\t\"",
        "\"Ensure capacity to \"",
        "\".\"",
        "\"\\n\""
    ],
    "variables": [
        "poolSize",
        "minPoolSize",
        "url",
        "validationQuery",
        "properties",
        "logWriter",
        "connections"
    ],
    "comments": [
        "connections.forEach((e) -> {",
        "System.out.print(e.toString().split(\"@\")[1].substring(7) + \"\\t\");",
        "});",
        "System.out.println();",
        "This method is no use in SimpleDataSource, so it will be replaced by getConnection()"
    ],
    "docstrings": [
        "* This is a SimpleDataSource in {@code DataSource} standard.\n * it is base on lazy-load and support validationQuery to check\n * a connection if it is valid in its own life cycle when you are\n * going to use it.\n *\n * @author Jim Zhang\n * @version 2.1\n * @since 1.8",
        "* Get a connection from pool.<br/>\n     * With life-cycle valid first. If it is out dated, it will\n     * auto ensure the poolSize and try again (Lazy loading).",
        "* Put the connection back into the pool if the pool is not full.<br/>\n     * If the pool is full, this connection will be closed at once.\n     *\n     * @param connection the connection needs to be recycled.",
        "* Ensure capacity when connections not enough.<br/>\n     * The pool size is always between minPoolSize and poolSize."
    ],
    "functions": [
        "SimpleDataSource",
        "Connection",
        "getConnection",
        "free",
        "ensureCapacity",
        "PrintWriter",
        "getLogWriter",
        "setLogWriter",
        "Connection",
        "getConnection",
        "setLoginTimeout",
        "getLoginTimeout",
        "Logger",
        "getParentLogger",
        "T",
        "unwrap",
        "isWrapperFor"
    ],
    "classes": [
        "SimpleDataSource"
    ]
}