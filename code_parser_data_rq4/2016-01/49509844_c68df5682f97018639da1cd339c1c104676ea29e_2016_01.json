{
    "identifiers": [
        "print_function",
        "random",
        "player1",
        "player2",
        "history1",
        "history2",
        "score1",
        "score2",
        "get_action",
        "player1",
        "history1",
        "history2",
        "score1",
        "score2",
        "get_action",
        "player2",
        "history2",
        "history1",
        "score2",
        "score1",
        "action1",
        "action2",
        "history1",
        "action1",
        "history2",
        "action2",
        "action1",
        "action2",
        "score1",
        "score2",
        "action1",
        "action2",
        "score1",
        "RELEASE",
        "score2",
        "RELEASE",
        "score1",
        "SEVERE_PUNISHMENT",
        "score2",
        "TREAT",
        "action2",
        "score1",
        "TREAT",
        "score2",
        "SEVERE_PUNISHMENT",
        "score1",
        "PUNISHMENT",
        "score2",
        "PUNISHMENT",
        "new_history1",
        "new_history2",
        "new_score1",
        "new_score2",
        "player1",
        "player2",
        "random",
        "randint",
        "round",
        "number_of_rounds",
        "play_round",
        "player1",
        "player2",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "player",
        "history",
        "opponent_history",
        "score",
        "opponent_score",
        "getting_team_name",
        "player",
        "getting_team_name",
        "player",
        "getting_team_name",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "history",
        "size",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "opponent_history",
        "history",
        "round",
        "len",
        "history",
        "opponent_history",
        "round",
        "history",
        "round",
        "prior_round_me",
        "recent_round_me",
        "prior_round_opponent",
        "recent_round_opponent",
        "opponent_history",
        "round",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "random",
        "random",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "player",
        "getting_team_name",
        "len",
        "opponent_history",
        "history",
        "opponent_history",
        "num_players",
        "i",
        "num_players",
        "scores",
        "num_players",
        "player",
        "num_players",
        "get_action",
        "player",
        "getting_team_name",
        "num_players",
        "num_players",
        "player1",
        "num_players",
        "num_players",
        "result_table",
        "player1",
        "num_players",
        "player2",
        "player1",
        "play_iterative_rounds",
        "player1",
        "player2",
        "len",
        "moves1",
        "score1",
        "rounds",
        "score2",
        "rounds",
        "result_table",
        "player1",
        "score1_per_round",
        "result_table",
        "player2",
        "score2_per_round",
        "moves_table",
        "player1",
        "moves1",
        "moves_table",
        "player2",
        "moves2",
        "scores",
        "player1",
        "score1",
        "len",
        "moves1",
        "scores",
        "player2",
        "score2",
        "len",
        "moves2",
        "use_datafile",
        "os",
        "path",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "directory",
        "open",
        "filename",
        "player1",
        "num_players",
        "player2",
        "player1",
        "results",
        "write",
        "player1",
        "player2",
        "results",
        "write",
        "result_table",
        "player1",
        "player2",
        "result_table",
        "player2",
        "player1",
        "results",
        "write",
        "team_names",
        "player1",
        "team_names",
        "player2",
        "results",
        "write",
        "moves_table",
        "player1",
        "player2",
        "results",
        "write",
        "moves_table",
        "player2",
        "player1",
        "results",
        "write",
        "results",
        "write",
        "results",
        "write",
        "player1",
        "num_players",
        "results",
        "write",
        "player1",
        "results",
        "write",
        "player2",
        "num_players",
        "results",
        "write",
        "player2",
        "player1",
        "num_players",
        "results",
        "write",
        "result_table",
        "player1",
        "player2",
        "results",
        "write",
        "results",
        "write",
        "player1",
        "num_players",
        "results",
        "write",
        "scores",
        "player1",
        "results",
        "write",
        "player",
        "num_players",
        "results",
        "write",
        "player",
        "scores",
        "player",
        "num_players",
        "team_names",
        "player",
        "results",
        "write",
        "open",
        "line",
        "this_code_file",
        "results",
        "write",
        "line",
        "end",
        "player1",
        "num_players",
        "player1",
        "end",
        "player2",
        "num_players",
        "player2",
        "end",
        "player1",
        "num_players",
        "result_table",
        "player1",
        "player2",
        "end",
        "end",
        "player1",
        "num_players",
        "scores",
        "player1",
        "end",
        "player",
        "num_players",
        "player",
        "scores",
        "player",
        "num_players",
        "team_names",
        "player"
    ],
    "literals": [
        "' '",
        "' '",
        "'c'",
        "'b'",
        "'c'",
        "'b'",
        "'c'",
        "'c'",
        "'c'",
        "''",
        "''",
        "'loyal'",
        "'c'",
        "'backstabber'",
        "'b'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'betray every 3rd round'",
        "'c'",
        "'b'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful with permanent second impression'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful occasionally greedy'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "'loyal vengeful'",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'c'",
        "''",
        "''",
        "'tournament.txt'",
        "'w'",
        "'team '",
        "' vs. '",
        "'team '",
        "'\\n'",
        "' vs. '",
        "'\\n'",
        "' vs. '",
        "'\\n'",
        "'\\n'",
        "'\\n'",
        "'\\n'",
        "'\\n\\n\\n\\tEach column shows score earned per round against each other player.\\n\\n\\n'",
        "'\\t'",
        "'P'",
        "'\\t'",
        "'\\n'",
        "'P'",
        "'\\t'",
        "'\\t'",
        "'\\n'",
        "'Total:\\t'",
        "'\\t'",
        "'\\n\\n\\n Average per round, with team strategy names:\\n\\n'",
        "'player '",
        "': '",
        "' points: '",
        "'\\n'",
        "'\\n\\n'",
        "'-'",
        "'\\n'",
        "'Here is the code that produced this data:\\n\\n'",
        "'r'",
        "'\\n\\n\\tEach column shows score earned per round against each other player.\\n\\n'",
        "'\\t'",
        "''",
        "'P'",
        "'\\t'",
        "'P'",
        "'\\t'",
        "'\\t'",
        "'Total:\\t'",
        "''",
        "'\\t'",
        "'\\n\\n\\n Average per round, with team strategy names:\\n\\n'",
        "'player '",
        "': '",
        "' points: '"
    ],
    "variables": [
        "RELEASE",
        "TREAT",
        "SEVERE_PUNISHMENT",
        "PUNISHMENT",
        "action1",
        "action2",
        "action1",
        "action2",
        "new_history1",
        "new_history2",
        "new_score1",
        "new_score2",
        "new_score1",
        "new_score2",
        "new_score1",
        "new_score2",
        "new_score1",
        "new_score2",
        "new_score1",
        "new_score2",
        "number_of_rounds",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "size",
        "recent_round_opponent",
        "recent_round_me",
        "prior_round_opponent",
        "prior_round_me",
        "scores",
        "team_names",
        "team_names",
        "player",
        "result_table",
        "moves_table",
        "result_table",
        "player1",
        "player1",
        "moves_table",
        "player1",
        "moves1",
        "moves2",
        "score1",
        "score2",
        "rounds",
        "score1_per_round",
        "score2_per_round",
        "player2",
        "player1",
        "player2",
        "player1",
        "use_datafile",
        "directory",
        "filename",
        "results",
        "this_code_file"
    ],
    "comments": [
        "(R) when both players collude",
        "(T) when you betray your partner",
        "(S) when your partner betrays you",
        "(P) when both players betray each other",
        "Keep T > R > P > S to be a Prisoner's Dilemma",
        "Keep 2R > T + S to be an Iterative Prisoner's Dilemma",
        "Get the two players' actions and remember them.",
        "Append the actions to the previous histories, to return",
        "Change scores based upon player actions",
        "Do nothing if someone's code returns an improper action",
        "Both players' code provided proper actions",
        "both players collude; get reward",
        "players 1,2 collude, betray; get sucker, tempation",
        "players 1,2 betray, collude; get tempation, sucker",
        "both players betray; get punishment",
        "send back the updated histories and scores",
        "",
        "",
        "",
        "This example player always colludes",
        "",
        "",
        "",
        "This example player always betrays.",
        "",
        "",
        "",
        "This example player is silent at first and then",
        "only betrays if they were a sucker last round.",
        "It's the first round: collude",
        "betray if they were severely punished last time",
        "otherwise collude",
        "EACH STUDENT TEAM CAN CHANGE ONE OF THESE elif SEGMENTS OF CODE.",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "the number of rounds played is a multiple of 3",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were sucker last time",
        "otherwise collude",
        "",
        "",
        "",
        "if there was a previous round just like",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "if there was a previous round just like the last one,",
        "do whatever they did in the round that followed it",
        "go through rounds before that one",
        "if one matches",
        "no match found",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "use history, opponent_history, score, opponent_score",
        "to compute your strategy",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "10% of the other rounds",
        "betray",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "",
        "",
        "",
        "It's the first round: collude",
        "betray is they were severely punished last time",
        "otherwise collude",
        "create a list of zeros, one per player",
        "create a list of the right length",
        "each element will become a column for each player",
        "range is just to get list of correct size",
        "create the column for each player",
        "range just to get list of correct size",
        "initialize unused diagonal to 0",
        "play a game between with every other player of lower number",
        "accumulate the results for the two players",
        "ends up same as column sum",
        "ends up same as column sum",
        "use the same directory as the python script",
        "name the file tournament.txt",
        "create the file for the round-by-round results",
        "store the results in the file",
        "title by team numbers",
        "title by player-on-player average score",
        "title by team names",
        "show the moves, aligned vertically",
        "blank line between each pair's results",
        "at the bottom repeat the output that was sent to the screen",
        "print a title for the table",
        "print header line",
        "skip 1st column",
        "label each additional column",
        "print each player's scores",
        "label the player's row",
        "print score against each other player",
        "print team ids, total scores, and names",
        "append the file showing algorithms",
        "print a title for the table",
        "print header line",
        "skip 1st column",
        "label each additional column",
        "print each player's scores",
        "label the player's row",
        "print score against each other player",
        "print row of total scores",
        "print team ids, total scores, and names"
    ],
    "docstrings": [
        "''' \nPrisonerDilemma.py allows hard-coding different strategies\nfor the Iterative Prisoners Dilemma, the canonical game of game-theory.\nEach strategy plays 100 to 200 rounds against each other strategy.\nThe results of all previous rounds within a 100-200 round stretch are known\nto both players. \n\nplay_tournament() executes the tournament and stores output in tournament.txt\n\nPlayers should each code their strategies in their assigned section of code.\n\nAggregated results are stored in tournament.txt\n\nUnpublished work (c)2013 Project Lead The Way\nCSE Project 1.3.5 Collaborating on a Project\nDraft, Do Not Distribute\nVersion 8/23/2013 \n'''",
        "'''\n    Calls the get_action() function which will get the characters\n    'c' or 'b' for collude or betray for each player.\n    The history is provided in a string, e.g. 'ccb' indicates the player\n    colluded in the first two rounds and betrayed in the most recent round.\n    Returns a 4-tuple with updated histories and scores\n    (history1, history2, score1, score2)\n    '''",
        "'''\n    Plays a random number of rounds (between 100 and 200 rounds) \n    of the iterative prisoners' dilemma between two strategies.\n    identified in the parameters as integers.\n    Returns 4-tuple, for example ('cc', 'bb', -200, 600) \n    but with much longer strings \n    '''",
        "'''Gets the strategy for the player, given their own history and that of\n    their opponent, as well as the current scores within this pairing.\n    The parameters history and opponenet history are strings with one letter\n    per round that has been played so far: either an 'c' for collude or a 'b' for \n    betray. The function should return one character, 'c' or 'b'. \n    The history strings have the first round between these two players \n    as the first character and the most recent round as the last character.'''",
        "''' Get the team name from each team algorithm'''",
        "'''report round-level results in a data file'''",
        "'''report the results on screen'''"
    ],
    "functions": [
        "play_round",
        "play_iterative_rounds",
        "get_action",
        "play_tournament"
    ],
    "classes": []
}