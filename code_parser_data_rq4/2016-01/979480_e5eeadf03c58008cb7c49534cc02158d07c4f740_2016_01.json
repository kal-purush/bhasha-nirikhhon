{
    "identifiers": [
        "datetime",
        "json",
        "random",
        "peewee",
        "playhouse",
        "sqlite_ext",
        "SqliteExtDatabase",
        "playhouse",
        "sqlite_udf",
        "register_all",
        "playhouse",
        "tests",
        "database_initializer",
        "playhouse",
        "tests",
        "ModelTestCase",
        "playhouse",
        "tests",
        "skip_test_unless",
        "playhouse",
        "tests",
        "models",
        "User",
        "_User",
        "playhouse",
        "_sqlite_udf",
        "cython_udf",
        "ImportError",
        "method",
        "skip_test_unless",
        "cython_udf",
        "method",
        "SqliteExtDatabase",
        "conn",
        "UDFDatabase",
        "_add_conn_hooks",
        "conn",
        "register_all",
        "conn",
        "database_initializer",
        "get_database",
        "db_class",
        "UDFDatabase",
        "Model",
        "ext_db",
        "_User",
        "ext_db",
        "BaseModel",
        "TextField",
        "TextField",
        "DateTimeField",
        "datetime",
        "datetime",
        "now",
        "BaseModel",
        "IntegerField",
        "BareField",
        "User",
        "APIResponse",
        "Generic",
        "datetime",
        "tzinfo",
        "offset",
        "name",
        "dstoffset",
        "isinstance",
        "offset",
        "datetime",
        "timedelta",
        "minutes",
        "offset",
        "isinstance",
        "dstoffset",
        "datetime",
        "timedelta",
        "minutes",
        "dstoffset",
        "offset",
        "name",
        "dstoffset",
        "dt",
        "__offset",
        "dt",
        "__name",
        "dt",
        "__dstoffset",
        "ModelTestCase",
        "sql",
        "ext_db",
        "execute_sql",
        "sql",
        "cursor",
        "fetchone",
        "BaseTestUDF",
        "Generic",
        "values",
        "ext_db",
        "atomic",
        "value",
        "values",
        "Generic",
        "create",
        "x",
        "value",
        "seconds",
        "datetime",
        "datetime",
        "datetime",
        "timedelta",
        "seconds",
        "seconds",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "mts",
        "mts",
        "mts",
        "mts",
        "mts",
        "assertEqual",
        "sql1",
        "assertEqual",
        "round",
        "sql1",
        "_store_values",
        "mts",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "assertEqual",
        "sql1",
        "_store_values",
        "mts",
        "mts",
        "mts",
        "mts",
        "mts",
        "mts",
        "mts",
        "assertEqual",
        "sql1",
        "requires_cython",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "Generic",
        "execute",
        "_store_values",
        "assertEqual",
        "sql1",
        "Generic",
        "execute",
        "_store_values",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "_store_values",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "Generic",
        "execute",
        "_store_values",
        "assertEqual",
        "sql1",
        "BaseTestUDF",
        "MODELS",
        "User",
        "create_users",
        "assertQueryCount",
        "User",
        "select",
        "User",
        "username",
        "fn",
        "if_then_else",
        "User",
        "username",
        "alias",
        "order_by",
        "User",
        "id",
        "assertEqual",
        "row",
        "name_type",
        "row",
        "query",
        "datetime",
        "datetime",
        "dt",
        "replace",
        "tzinfo",
        "FixedOffset",
        "APIResponse",
        "create",
        "timestamp",
        "dt",
        "APIResponse",
        "create",
        "timestamp",
        "dt_tz",
        "APIResponse",
        "get",
        "APIResponse",
        "id",
        "api_dt",
        "id",
        "APIResponse",
        "get",
        "APIResponse",
        "id",
        "api_dt_tz",
        "id",
        "assertEqual",
        "api_dt_db",
        "timestamp",
        "dt",
        "APIResponse",
        "select",
        "APIResponse",
        "id",
        "fn",
        "strip_tz",
        "APIResponse",
        "timestamp",
        "alias",
        "order_by",
        "APIResponse",
        "id",
        "query",
        "assertEqual",
        "ts",
        "ts",
        "dt",
        "assertEqual",
        "ts_tz",
        "ts",
        "dt",
        "value",
        "values",
        "Generic",
        "create",
        "value",
        "value",
        "fn",
        "human_delta",
        "Generic",
        "value",
        "coerce",
        "Generic",
        "select",
        "Generic",
        "value",
        "delta",
        "alias",
        "order_by",
        "Generic",
        "value",
        "query",
        "tuples",
        "assertEqual",
        "results",
        "filename",
        "ext",
        "data",
        "sql1",
        "filename",
        "assertEqual",
        "res",
        "ext",
        "random",
        "seed",
        "ord",
        "ord",
        "ext_db",
        "atomic",
        "l",
        "join",
        "chr",
        "random",
        "randint",
        "A",
        "z",
        "_",
        "l",
        "randstr",
        "randstr",
        "randstr",
        "s",
        "data",
        "sql1",
        "s",
        "sql1",
        "compressed",
        "assertEqual",
        "decompressed",
        "s",
        "json",
        "dumps",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "ext_db",
        "atomic",
        "url",
        "response",
        "data",
        "APIResponse",
        "create",
        "url",
        "url",
        "data",
        "data",
        "assertQueryCount",
        "APIResponse",
        "select",
        "fn",
        "hostname",
        "APIResponse",
        "url",
        "alias",
        "fn",
        "COUNT",
        "APIResponse",
        "id",
        "alias",
        "group_by",
        "fn",
        "hostname",
        "APIResponse",
        "url",
        "order_by",
        "fn",
        "COUNT",
        "APIResponse",
        "id",
        "desc",
        "fn",
        "hostname",
        "APIResponse",
        "url",
        "query",
        "tuples",
        "assertEqual",
        "results",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "vals",
        "random",
        "seed",
        "results",
        "append",
        "random",
        "randrange",
        "expected",
        "vals",
        "results",
        "random",
        "seed",
        "len",
        "assertEqual",
        "sql1",
        "pstr",
        "expected",
        "assertEqual",
        "sql1",
        "assertEqual",
        "round",
        "sql1",
        "inp",
        "outp",
        "data",
        "assertEqual",
        "sql1",
        "inp",
        "outp",
        "requires_cython",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "requires_cython",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1",
        "assertEqual",
        "sql1"
    ],
    "literals": [
        "'sqlite'",
        "''",
        "''",
        "'select mintdiff(x) from generic;'",
        "'select avgtdiff(x) from generic;'",
        "'select mintdiff(x) from generic;'",
        "'select avgtdiff(x) from generic;'",
        "'select mintdiff(x) from generic;'",
        "'select avgtdiff(x) from generic;'",
        "'select mintdiff(x) from generic;'",
        "'select avgtdiff(x) from generic;'",
        "'select mintdiff(x) from generic;'",
        "'select duration(x) from generic;'",
        "'select duration(x) from generic;'",
        "'select duration(x) from generic;'",
        "'select duration(x) from generic;'",
        "'select median(x) from generic;'",
        "'select median(x) from generic;'",
        "'select median(x) from generic;'",
        "'select median(x) from generic;'",
        "'select median(x) from generic;'",
        "'select mode(x) from generic;'",
        "'select mode(x) from generic;'",
        "'select mode(x) from generic;'",
        "'select minrange(x) from generic'",
        "'select avgrange(x) from generic'",
        "'select range(x) from generic'",
        "'select minrange(x) from generic'",
        "'select avgrange(x) from generic'",
        "'select range(x) from generic'",
        "'select minrange(x) from generic'",
        "'select avgrange(x) from generic'",
        "'select range(x) from generic'",
        "'select range(x) from generic'",
        "'u1'",
        "'u2'",
        "'one or two'",
        "'other'",
        "'name_type'",
        "'one or two'",
        "'one or two'",
        "'other'",
        "'other'",
        "'US/LFK'",
        "'ts'",
        "'delta'",
        "'0 seconds'",
        "'1 second'",
        "'30 seconds'",
        "'5 minutes'",
        "'1 hour'",
        "'2 hours, 5 minutes, 30 seconds'",
        "'3 days, 11 hours, 20 minutes'",
        "'test.py'",
        "'.py'",
        "'test.x.py'",
        "'.py'",
        "'test'",
        "''",
        "'test.'",
        "'.'",
        "'/foo.bar/test/nug.py'",
        "'.py'",
        "'/foo.bar/test/nug'",
        "''",
        "'SELECT file_ext(?)'",
        "'A'",
        "'z'",
        "''",
        "'a'",
        "'a'",
        "'select gzip(?)'",
        "'select gunzip(?)'",
        "'success'",
        "'http://charlesleifer.com/api/'",
        "'https://a.charlesleifer.com/api/foo'",
        "'www.nugget.com'",
        "'nugz.com'",
        "'http://a.b.c.peewee/foo'",
        "'http://charlesleifer.com/xx'",
        "'https://charlesleifer.com/xx'",
        "'host'",
        "'count'",
        "'charlesleifer.com'",
        "''",
        "'a.b.c.peewee'",
        "'a.charlesleifer.com'",
        "'select toggle(?)'",
        "'foo'",
        "'select toggle(?)'",
        "'bar'",
        "'select toggle(?)'",
        "'foo'",
        "'select toggle(?)'",
        "'foo'",
        "'select toggle(?)'",
        "'bar'",
        "'select toggle(?, ?)'",
        "'bar'",
        "'select toggle(?, ?)'",
        "'bar'",
        "'select toggle(?, ?)'",
        "'bar'",
        "'select clear_toggles()'",
        "'select toggle(?)'",
        "'foo'",
        "'select setting(?, ?)'",
        "'k1'",
        "'v1'",
        "'select setting(?, ?)'",
        "'k2'",
        "'v2'",
        "'select setting(?)'",
        "'k1'",
        "'v1'",
        "'select setting(?, ?)'",
        "'k2'",
        "'v2-x'",
        "'select setting(?)'",
        "'k2'",
        "'v2-x'",
        "'select setting(?)'",
        "'kx'",
        "'select clear_settings()'",
        "'select setting(?)'",
        "'k1'",
        "'?, ?, ?'",
        "'?, ?'",
        "'select randomrange(%s)'",
        "'select sqrt(?)'",
        "'select sqrt(?)'",
        "'123'",
        "'1.23'",
        "'1e4'",
        "'-10'",
        "'x'",
        "'13d'",
        "'select tonumber(?)'",
        "'select levenshtein_dist(?, ?)'",
        "'abc'",
        "'ba'",
        "'select levenshtein_dist(?, ?)'",
        "'abcde'",
        "'eba'",
        "'select levenshtein_dist(?, ?)'",
        "'abcde'",
        "'abcde'",
        "'select str_dist(?, ?)'",
        "'abc'",
        "'ba'",
        "'select str_dist(?, ?)'",
        "'abcde'",
        "'eba'",
        "'select str_dist(?, ?)'",
        "'abcde'",
        "'abcde'",
        "'select substr_count(?, ?)'",
        "'foo bar baz'",
        "'a'",
        "'select substr_count(?, ?)'",
        "'foo bor baz'",
        "'o'",
        "'select substr_count(?, ?)'",
        "'foodooboope'",
        "'oo'",
        "'select substr_count(?, ?)'",
        "'xx'",
        "''",
        "'select substr_count(?, ?)'",
        "''",
        "''",
        "'select strip_chars(?, ?)'",
        "'  hey foo '",
        "' '",
        "'hey foo'"
    ],
    "variables": [
        "cython_udf",
        "ext_db",
        "database",
        "database",
        "url",
        "data",
        "timestamp",
        "value",
        "x",
        "MODELS",
        "offset",
        "dstoffset",
        "__offset",
        "__name",
        "__dstoffset",
        "cursor",
        "requires",
        "requires",
        "query",
        "dt",
        "dt_tz",
        "api_dt",
        "api_dt_tz",
        "api_dt_db",
        "api_dt_tz_db",
        "query",
        "ts",
        "ts_tz",
        "values",
        "delta",
        "query",
        "results",
        "data",
        "res",
        "A",
        "z",
        "data",
        "compressed",
        "decompressed",
        "r",
        "data",
        "query",
        "results",
        "vals",
        "results",
        "pstr",
        "pstr",
        "data"
    ],
    "comments": [
        "13 hours, 37 minutes.",
        "Re-fetch from the database.",
        "Assert the timezone is present, first of all, and that they were",
        "stored in the database."
    ],
    "docstrings": [],
    "functions": [
        "requires_cython",
        "_add_conn_hooks",
        "utcoffset",
        "tzname",
        "dst",
        "sql1",
        "_store_values",
        "mts",
        "test_min_avg_tdiff",
        "test_duration",
        "test_median",
        "test_mode",
        "test_ranges",
        "test_if_then_else",
        "test_strip_tz",
        "test_human_delta",
        "test_file_ext",
        "test_gz",
        "randstr",
        "test_hostname",
        "test_toggle",
        "test_setting",
        "test_random_range",
        "test_sqrt",
        "test_tonumber",
        "test_leven",
        "test_str_dist",
        "test_substr_count",
        "test_strip_chars"
    ],
    "classes": [
        "UDFDatabase",
        "BaseModel",
        "Meta",
        "User",
        "Meta",
        "APIResponse",
        "Generic",
        "FixedOffset",
        "BaseTestUDF",
        "TestAggregates",
        "TestScalarFunctions"
    ]
}