{
    "identifiers": [
        "pexpect",
        "re",
        "sys",
        "types",
        "os",
        "drivers",
        "common",
        "cli",
        "emulatordriver",
        "Emulator",
        "Emulator",
        "Emulator",
        "sys",
        "modules",
        "connectargs",
        "key",
        "connectargs",
        "vars",
        "connectargs",
        "key",
        "options",
        "key",
        "options",
        "key",
        "options",
        "home",
        "home",
        "os",
        "getenv",
        "ip_address",
        "os",
        "getenv",
        "ip_address",
        "main",
        "log",
        "info",
        "name",
        "ip_address",
        "KeyError",
        "main",
        "log",
        "info",
        "inst",
        "main",
        "log",
        "error",
        "inst",
        "ScapyCliDriver",
        "connect",
        "user_name",
        "user_name",
        "ip_address",
        "ip_address",
        "port",
        "pwd",
        "pwd",
        "handle",
        "main",
        "log",
        "info",
        "user_name",
        "ip_address",
        "main",
        "TRUE",
        "main",
        "log",
        "error",
        "user_name",
        "ip_address",
        "main",
        "log",
        "error",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "error",
        "name",
        "main",
        "log",
        "error",
        "name",
        "handle",
        "before",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "sendline",
        "handle",
        "expect",
        "pexpect",
        "EOF",
        "pexpect",
        "TIMEOUT",
        "timeout",
        "main",
        "TRUE",
        "i",
        "stopNet",
        "i",
        "main",
        "TRUE",
        "handle",
        "handle",
        "sendline",
        "handle",
        "expect",
        "handle",
        "expect",
        "main",
        "log",
        "error",
        "response",
        "fileName",
        "timeout",
        "main",
        "log",
        "info",
        "name",
        "handle",
        "handle",
        "sendline",
        "handle",
        "expect",
        "pexpect",
        "EOF",
        "pexpect",
        "TIMEOUT",
        "timeout",
        "i",
        "main",
        "log",
        "info",
        "execute",
        "cmd",
        "prompt",
        "timeout",
        "main",
        "log",
        "info",
        "name",
        "main",
        "TRUE",
        "i",
        "main",
        "log",
        "info",
        "i",
        "main",
        "log",
        "error",
        "i",
        "main",
        "log",
        "error",
        "fileName",
        "handle",
        "sendline",
        "handle",
        "expect",
        "handle",
        "sendline",
        "fileName",
        "pexpect",
        "EOF",
        "main",
        "log",
        "error",
        "name",
        "main",
        "log",
        "error",
        "name",
        "handle",
        "before",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "error",
        "name",
        "main",
        "FALSE",
        "response",
        "name",
        "getattr",
        "main",
        "name",
        "AttributeError",
        "main",
        "componentDictionary",
        "main",
        "componentDictionary",
        "name",
        "copy",
        "main",
        "componentDictionary",
        "name",
        "main",
        "componentDictionary",
        "name",
        "main",
        "componentInit",
        "name",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "error",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "name",
        "getattr",
        "main",
        "name",
        "AttributeError",
        "main",
        "log",
        "error",
        "name",
        "main",
        "FALSE",
        "component",
        "disconnect",
        "delattr",
        "main",
        "name",
        "main",
        "componentDictionary",
        "name",
        "main",
        "TRUE",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "host",
        "host",
        "name",
        "handle",
        "sendline",
        "home",
        "host",
        "handle",
        "expect",
        "hostPrompt",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "mplsPath",
        "format",
        "mplsPath",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "mplsPath",
        "main",
        "log",
        "info",
        "main",
        "log",
        "info",
        "mplsPath",
        "line",
        "mplsLines",
        "main",
        "log",
        "info",
        "line",
        "handle",
        "sendline",
        "line",
        "handle",
        "expect",
        "scapyPrompt",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "sendline",
        "handle",
        "expect",
        "hostPrompt",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "isinstance",
        "value",
        "value",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "isinstance",
        "value",
        "value",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "isinstance",
        "value",
        "value",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "ipVersion",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "ipVersion",
        "handle",
        "sendline",
        "ipVersion",
        "handle",
        "sendline",
        "main",
        "log",
        "error",
        "repr",
        "ipVersion",
        "main",
        "FALSE",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "ipVersion",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "ipVersion",
        "handle",
        "sendline",
        "ipVersion",
        "handle",
        "sendline",
        "main",
        "log",
        "error",
        "repr",
        "ipVersion",
        "main",
        "FALSE",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "kwargs",
        "key",
        "value",
        "kwargs",
        "iteritems",
        "isinstance",
        "value",
        "value",
        "options",
        "append",
        "key",
        "value",
        "cmd",
        "join",
        "options",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "iface",
        "packet",
        "timeout",
        "packet",
        "sendCmd",
        "packet",
        "sendCmd",
        "iface",
        "sendCmd",
        "format",
        "iface",
        "sendCmd",
        "timeout",
        "handle",
        "sendline",
        "sendCmd",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "main",
        "log",
        "error",
        "handle",
        "before",
        "main",
        "FALSE",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "ifaceName",
        "sniffCount",
        "pktFilter",
        "ifaceName",
        "ifaceName",
        "name",
        "handle",
        "sendline",
        "ifaceName",
        "handle",
        "expect",
        "scapyPrompt",
        "sniffCount",
        "pktFilter",
        "name",
        "cmd",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "main",
        "TRUE",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "timeout",
        "handle",
        "expect",
        "scapyPrompt",
        "pexpect",
        "TIMEOUT",
        "timeout",
        "timeout",
        "i",
        "main",
        "TRUE",
        "main",
        "FALSE",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "send",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "sendline",
        "handle",
        "expect",
        "handle",
        "expect",
        "scapyPrompt",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "before",
        "getMac",
        "getIp",
        "ifaceName",
        "ifaceName",
        "ifaceName",
        "name",
        "ifaceName",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "re",
        "search",
        "pattern",
        "handle",
        "before",
        "match",
        "match",
        "group",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "ifaceName",
        "ifaceName",
        "ifaceName",
        "handle",
        "sendline",
        "cmd",
        "handle",
        "expect",
        "scapyPrompt",
        "re",
        "search",
        "pattern",
        "handle",
        "before",
        "match",
        "match",
        "group",
        "main",
        "log",
        "warn",
        "format",
        "ifaceName",
        "match",
        "group",
        "ifaceName",
        "getIfList",
        "ifaceName",
        "ifList",
        "ifaceName",
        "getIPofInterface",
        "ifaceName",
        "ip",
        "ip",
        "getIPofInterface",
        "ifaceName",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "handle",
        "sendline",
        "handle",
        "expect",
        "scapyPrompt",
        "handle",
        "before",
        "split",
        "ifList",
        "replace",
        "split",
        "ifList",
        "pexpect",
        "TIMEOUT",
        "main",
        "log",
        "exception",
        "name",
        "pexpect",
        "EOF",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "main",
        "log",
        "exception",
        "name",
        "main",
        "cleanup",
        "main",
        "exit",
        "sys",
        "modules",
        "ScapyCliDriver"
    ],
    "literals": [
        "\"~#\"",
        "\"\\$\"",
        "\">>>\"",
        "\"~/mininet\"",
        "'name'",
        "\"home\"",
        "'home'",
        "\"\"",
        "\"~/mininet\"",
        "\": Trying to connect to \"",
        "\"Invalid host name,\"",
        "\" connecting to local host instead\"",
        "'localhost'",
        "\"Uncaught exception: \"",
        "\"Connection successful to the host \"",
        "\"@\"",
        "\"Connection failed to the host \"",
        "\"@\"",
        "\"Failed to connect to the Mininet Host\"",
        "\": EOF exception found\"",
        "\":     \"",
        "\": Uncaught exception!\"",
        "''",
        "'mininet>'",
        "\"exit\"",
        "\"exit\"",
        "\"(.*)\"",
        "\"Connection failed to the host\"",
        "\"\"",
        "\": Stopping scapy...\"",
        "''",
        "\"\"",
        "'>>>'",
        "'\\$'",
        "\"Exiting scapy...\"",
        "\"exit\"",
        "\"(.*)\"",
        "\": Stopped\"",
        "\" Mininet trying to exit while not \"",
        "\"in the mininet prompt\"",
        "\"Something went wrong exiting mininet\"",
        "\"Something went wrong exiting mininet \"",
        "\"TIMEOUT\"",
        "\"\"",
        "'\\$'",
        "\"sudo kill -9 \\`ps -ef | grep \\\"\"",
        "\"\\\" | grep -v grep | awk '{print $2}'\\`\"",
        "\": EOF exception found\"",
        "\":     \"",
        "\": Connection failed to the host\"",
        "'connect_order'",
        "'connect_order'",
        "\": Uncaught exception!\"",
        "\" component already exists!\"",
        "\"Component \"",
        "\" does not exist.\"",
        "\": Uncaught exception!\"",
        "\"/util/m \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"\"",
        "'import imp'",
        "'imp.load_source( \"mplsClass\", \"{}mplsClass.py\" )'",
        "'from mplsClass import MPLS'",
        "'bind_layers(Ether, MPLS, type = 0x8847)'",
        "'bind_layers(MPLS, MPLS, bottom_of_label_stack = 0)'",
        "'bind_layers(MPLS, IP)'",
        "\"scapy\"",
        "\"conf.color_theme = NoTheme()\"",
        "\"Adding MPLS class\"",
        "\"MPLS class path: \"",
        "\"sending line: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"exit()\"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'ether = Ether( '",
        "'\"'",
        "'\"'",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\"packet = ether\"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'ip = IP( '",
        "'\"'",
        "'\"'",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\"packet = ether/ip\"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'ipv6 = IPv6( '",
        "'\"'",
        "'\"'",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\"packet = ether/ipv6\"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'tcp = TCP( '",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "'4'",
        "\"packet = ether/ip/tcp\"",
        "'6'",
        "\"packet = ether/ipv6/tcp\"",
        "\"Unrecognized option for ipVersion, given \"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'udp = UDP( '",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "'4'",
        "\"packet = ether/ip/udp\"",
        "'6'",
        "\"packet = ether/ipv6/udp\"",
        "\"Unrecognized option for ipVersion, given \"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'icmp = ICMP( '",
        "'\"'",
        "'\"'",
        "\"=\"",
        "\", \"",
        "' )'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\"packet = ether/ip/icmp\"",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'srp( '",
        "\"packet\"",
        "\", iface='{}'\"",
        "', timeout='",
        "')'",
        "\"Traceback\"",
        "\"Error in sending command: \"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"ip\"",
        "\"-eth0\"",
        "' conf.iface = \"'",
        "'\"'",
        "'pkt = sniff(count = '",
        "', filter = \"'",
        "'\")'",
        "' > '",
        "'\"\\)\\r\\n'",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"\\x03\"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"for p in pkt: p \\n\"",
        "\"for p in pkt: p \\r\\n... \\r\\n\"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"-eth0\"",
        "'get_if_hwaddr(\"'",
        "'\")'",
        "r'(([0-9a-f]{2}[:-]){5}([0-9a-f]{2}))'",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'get_if_addr(\"'",
        "'\")'",
        "r'(((2[0-5]|1[0-9]|[0-9])?[0-9]\\.){3}((2[0-5]|1[0-9]|[0-9])?[0-9]))'",
        "'0.0.0.0'",
        "'iface {0} has no IPv4 address'",
        "\"lo\"",
        "\"0.0.0.0\"",
        "\"0.0.0.0\"",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "'get_if_list()'",
        "'\\r\\n'",
        "\"'\"",
        "\"\"",
        "', '",
        "\": Command timed out\"",
        "\": connection closed.\"",
        "\": Uncaught exception!\"",
        "\"__main__\""
    ],
    "variables": [
        "handle",
        "name",
        "home",
        "wrapped",
        "flag",
        "hostPrompt",
        "bashPrompt",
        "scapyPrompt",
        "key",
        "home",
        "name",
        "home",
        "home",
        "ip_address",
        "ip_address",
        "handle",
        "i",
        "response",
        "response",
        "response",
        "i",
        "response",
        "response",
        "response",
        "name",
        "component",
        "hostIp",
        "hostMac",
        "host",
        "mplsLines",
        "cmd",
        "options",
        "value",
        "cmd",
        "options",
        "value",
        "cmd",
        "options",
        "value",
        "cmd",
        "options",
        "cmd",
        "options",
        "cmd",
        "options",
        "value",
        "sendCmd",
        "ifaceName",
        "cmd",
        "i",
        "hostMac",
        "hostIp",
        "ifaceName",
        "cmd",
        "pattern",
        "match",
        "cmd",
        "pattern",
        "match",
        "ifList",
        "ip",
        "ifList",
        "ifList"
    ],
    "comments": [
        "!/usr/bin/env python",
        "TODO: Refactor driver to use these everywhere",
        "print \"Disconnecting Mininet\"",
        "timeout",
        "look to see if this component already exists",
        "namespace is clear, creating component",
        "namespace is not clear!",
        "Get host component",
        "Disconnect from component",
        "Delete component",
        "Delete component from ComponentDictionary",
        "These are fields that can be used by scapy packets. Initialized to None",
        "Set the Ethernet frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "Set the IP frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "Set the IPv6 frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "Set the TCP frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "Set the UDP frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "Set the ICMP frame",
        "KeyError, SyntaxError, ...",
        "KeyError, SyntaxError, ...",
        "TODO: add all params, or use kwargs",
        "KeyError, SyntaxError, ...",
        "TODO: Check # of packets sent?",
        "TODO: add all params, or use kwargs",
        "Set interface",
        "TODO: parse this?",
        "Send a ctrl-c to kill the filter",
        "the command will have an exception if iface doesn't exist",
        "NOTE: The command will return 0.0.0.0 if the iface doesn't exist",
        "Get list of interfaces"
    ],
    "docstrings": [
        "\"\"\"\n2015-2016\n\nTestON is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 2 of the License, or\n( at your option ) any later version.\n\nTestON is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with TestON.  If not, see <http://www.gnu.org/licenses/>.\n\nScapyCliDriver is the basic driver which will handle the Scapy functions\n\nTODO: Add Explanation on how to install scapy\n\"\"\"",
        "\"\"\"\n       ScapyCliDriver is the basic driver which will handle\n       the Scapy functions\"\"\"",
        "\"\"\"\n           Here the main is the TestON instance after creating\n           all the log handles.\"\"\"",
        "\"\"\"\n        Called at the end of the test to stop the scapy component and\n        disconnect the handle.\n        \"\"\"",
        "\"\"\"\n        Stops mininet.\n        Returns main.TRUE if the mininet successfully stops and\n                main.FALSE if the pexpect handle does not exist.\n\n        Will cleanup and exit the test if scapy fails to stop\n        \"\"\"",
        "\"\"\"\n        Creates a new mininet cli component with the same parameters as self.\n        This new component is intended to be used to login to the hosts created\n        by mininet.\n\n        Arguments:\n            name - The string of the name of this component. The new component\n                   will be assigned to main.<name> .\n                   In addition, main.<name>.name = str( name )\n        \"\"\"",
        "\"\"\"\n        Remove host component\n        Arguments:\n            name - The string of the name of the component to delete.\n        \"\"\"",
        "\"\"\"\n        Use the mininet m utility to connect to the host's cli\n        \"\"\"",
        "\"\"\"\n        Start the Scapy cli\n        optional:\n            mplsPath - The path where the MPLS class is located\n            NOTE: This can be a relative path from the user's home dir\n        \"\"\"",
        "\"\"\"\n        Exit the Scapy cli\n        \"\"\"",
        "\"\"\"\n        Build an Ethernet frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n        Default frame:\n        ###[ Ethernet ]###\n          dst= ff:ff:ff:ff:ff:ff\n          src= 00:00:00:00:00:00\n          type= 0x800\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Build an IP frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n        Default frame:\n        ###[ IP ]###\n          version= 4\n          ihl= None\n          tos= 0x0\n          len= None\n          id= 1\n          flags=\n          frag= 0\n          ttl= 64\n          proto= hopopt\n          chksum= None\n          src= 127.0.0.1\n          dst= 127.0.0.1\n          \\options\\\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Build an IPv6 frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n        Default frame:\n        ###[ IPv6 ]###\n          version= 6\n          tc= 0\n          fl= 0\n          plen= None\n          nh= No Next Header\n          hlim= 64\n          src= ::1\n          dst= ::1\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Build an TCP frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n\n        NOTE: Some arguments require quotes around them. It's up to you to\n        know which ones and to add them yourself. Arguments with an asterisk\n        do not need quotes.\n\n        Options:\n        ipVersion - Either 4 (default) or 6, indicates what Internet Protocol\n                    frame to use to encapsulate into\n        Default frame:\n        ###[ TCP ]###\n          sport= ftp_data *\n          dport= http *\n          seq= 0\n          ack= 0\n          dataofs= None\n          reserved= 0\n          flags= S\n          window= 8192\n          chksum= None\n          urgptr= 0\n          options= {}\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Build an UDP frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n\n        NOTE: Some arguments require quotes around them. It's up to you to\n        know which ones and to add them yourself. Arguments with an asterisk\n        do not need quotes.\n\n        Options:\n        ipVersion - Either 4 (default) or 6, indicates what Internet Protocol\n                    frame to use to encapsulate into\n        Default frame:\n        ###[ UDP ]###\n          sport= domain *\n          dport= domain *\n          len= None\n          chksum= None\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Build an ICMP frame\n\n        Will create a frame class with the given options. If a field is\n        left blank it will default to the below value unless it is\n        overwritten by the next frame.\n        Default frame:\n        ###[ ICMP ]###\n          type= echo-request\n          code= 0\n          chksum= None\n          id= 0x0\n          seq= 0x0\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Send a packet with either the given scapy packet command, or use the\n        packet saved in the variable 'packet'.\n\n        Examples of a valid string for packet:\n\n        Simple IP packet\n        packet='Ether(dst=\"a6:d9:26:df:1d:4b\")/IP(dst=\"10.0.0.2\")'\n\n        A Ping with two vlan tags\n        packet='Ether(dst='ff:ff:ff:ff:ff:ff')/Dot1Q(vlan=1)/Dot1Q(vlan=10)/\n                IP(dst='255.255.255.255', src='192.168.0.1')/ICMP()'\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Listen for packets using the given filters\n\n        Options:\n        ifaceName - the name of the interface to listen on. If none is given,\n                    defaults to <host name>-eth0\n        pktFilter - A string in Berkeley Packet Filter (BPF) format which\n                    specifies which packets to sniff\n        sniffCount - The number of matching packets to capture before returning\n\n        Returns main.TRUE or main.FALSE on error\n        \"\"\"",
        "\"\"\"\n        Check that a filter returned and returns the reponse\n        \"\"\"",
        "\"\"\"\n        Kill a scapy filter\n        \"\"\"",
        "\"\"\"\n        Read all the packets captured by the previous filter\n        \"\"\"",
        "\"\"\"\n        Updates local MAC and IP fields\n        \"\"\"",
        "\"\"\"\n        Save host's MAC address\n        \"\"\"",
        "\"\"\"\n        Save host's IP address\n\n        Returns the IP of the first interface that is not a loopback device.\n        If no IP could be found then it will return 0.0.0.0.\n        \"\"\"",
        "\"\"\"\n        Return List of Interfaces\n        \"\"\""
    ],
    "functions": [
        "connect",
        "disconnect",
        "stopNet",
        "createHostComponent",
        "removeHostComponent",
        "startHostCli",
        "startScapy",
        "stopScapy",
        "buildEther",
        "buildIP",
        "buildIPv6",
        "buildTCP",
        "buildUDP",
        "buildICMP",
        "sendPacket",
        "startFilter",
        "checkFilter",
        "killFilter",
        "readPackets",
        "updateSelf",
        "getMac",
        "getIp",
        "getIPofInterface",
        "getIfList"
    ],
    "classes": [
        "ScapyCliDriver"
    ]
}