{
    "identifiers": [
        "com",
        "jcurrency",
        "converter",
        "java",
        "io",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "LinkOption",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "MissingResourceException",
        "java",
        "util",
        "ResourceBundle",
        "java",
        "util",
        "StringTokenizer",
        "java",
        "util",
        "logging",
        "FileHandler",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "LOGGER",
        "Logger",
        "getLogger",
        "getPackage",
        "getName",
        "UNICODE_CONTROL",
        "resources",
        "LOGGER",
        "setLevel",
        "Level",
        "INFO",
        "tmp",
        "Paths",
        "get",
        "getProperty",
        "Files",
        "notExists",
        "tmp",
        "LinkOption",
        "NOFOLLOW_LINKS",
        "Files",
        "createDirectory",
        "tmp",
        "fh",
        "fh",
        "setEncoding",
        "LOGGER",
        "addHandler",
        "fh",
        "e",
        "e",
        "printStackTrace",
        "err",
        "resources",
        "ResourceBundle",
        "getBundle",
        "Locale",
        "US",
        "UNICODE_CONTROL",
        "e",
        "LOGGER",
        "log",
        "Level",
        "SEVERE",
        "e",
        "e",
        "e",
        "LOGGER",
        "log",
        "Level",
        "WARNING",
        "e",
        "toString",
        "e",
        "name",
        "resources",
        "getString",
        "name",
        "e",
        "key",
        "getResource",
        "key",
        "key",
        "clazz",
        "key",
        "url",
        "clazz",
        "getResource",
        "key",
        "url",
        "input",
        "sep",
        "l",
        "t",
        "input",
        "input",
        "sep",
        "t",
        "hasMoreTokens",
        "l",
        "add",
        "t",
        "nextToken",
        "cmd",
        "l",
        "toArray",
        "l",
        "size",
        "cmd"
    ],
    "literals": [
        "\"java.io.tmpdir\"",
        "\"jcc_logs\"",
        "\"%t/jcc_logs/jcc%u_%g.log\"",
        "\"utf8\"",
        "\"com/jcurrency/converter/resources/currency\"",
        "\"currency_en_US.properties not found\"",
        "\"\""
    ],
    "variables": [
        "resources",
        "str"
    ],
    "comments": [
        "Localized string resources",
        "No instantiations of this class"
    ],
    "docstrings": [
        "This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.",
        "* This class provides many utility functions for the currency converter panel.\n * \n * @author myinon\n * @version 1.0",
        "* Gets a named resource.\n\t * \n\t * @param name The name of the resource to retrieve.\n\t * @return The value of the resource or {@code null}.",
        "* Gets the url of a resource in this program.\n\t * \n\t * @param key the name of the resource.\n\t * @return the url pointing to the resource or {@code null}\n\t *         if the resource can't be found.",
        "* Gets the url of a resource in this program.\n\t * \n\t * @param key the name of the resource.\n\t * @param clazz the {@code Class} object to use as a base for finding\n\t *              the resource.\n\t * @return the url pointing to the resource or {@code null}\n\t *         if the resource can't be found.",
        "* Tokenizes the input string into different pieces using on the\n\t * specified separator.\n\t * \n\t * @param input the input string to split.\n\t * @param sep the separator to use to split the input.\n\t * @return an array of the different pieces of the split input."
    ],
    "functions": [
        "CurrencyUtils",
        "getResourceString",
        "URL",
        "getResource",
        "URL",
        "getResource",
        "tokenize"
    ],
    "classes": [
        "CurrencyUtils"
    ]
}