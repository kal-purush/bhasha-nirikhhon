{
    "identifiers": [
        "plugins",
        "re",
        "geocoder",
        "math",
        "sin",
        "cos",
        "sqrt",
        "atan2",
        "radians",
        "asin",
        "bot",
        "plugins",
        "register_user_command",
        "bot",
        "args",
        "text",
        "lower",
        "message",
        "split",
        "tempV",
        "spacesplit",
        "re",
        "search",
        "tempV",
        "re",
        "search",
        "tempV",
        "pll",
        "coords",
        "append",
        "pll",
        "group",
        "latlongexist",
        "coords",
        "append",
        "latlongexist",
        "group",
        "radians",
        "coords",
        "split",
        "radians",
        "coords",
        "split",
        "coords",
        "split",
        "coords",
        "split",
        "latlng",
        "append",
        "lat",
        "latlng",
        "append",
        "lng",
        "geocoder",
        "google",
        "latlng",
        "method",
        "g",
        "city_long",
        "g",
        "city_long",
        "g",
        "state_long",
        "g",
        "state_long",
        "g",
        "country_long",
        "origtext",
        "g",
        "country_long",
        "tempV",
        "coords",
        "tempV",
        "coords",
        "tempV",
        "split",
        "tempV",
        "split",
        "radians",
        "tempV",
        "split",
        "radians",
        "tempV",
        "split",
        "lonb",
        "lona",
        "latb",
        "lata",
        "sin",
        "dlat",
        "cos",
        "lata",
        "cos",
        "latb",
        "sin",
        "dlon",
        "asin",
        "sqrt",
        "a",
        "c",
        "latlng",
        "append",
        "lat",
        "latlng",
        "append",
        "lng",
        "geocoder",
        "google",
        "latlng",
        "method",
        "g",
        "city_long",
        "g",
        "city_long",
        "g",
        "state_long",
        "g",
        "state_long",
        "km",
        "g",
        "country_long",
        "text",
        "g",
        "country_long",
        "km",
        "g",
        "state_long",
        "text",
        "g",
        "state_long",
        "g",
        "country_long",
        "text",
        "g",
        "country_long",
        "km",
        "text",
        "km",
        "text",
        "km",
        "text",
        "km",
        "text",
        "km",
        "text",
        "km",
        "text",
        "distlist",
        "append",
        "_",
        "round",
        "km",
        "text",
        "km",
        "distlist",
        "append",
        "_",
        "distlist",
        "insert",
        "_",
        "origtext",
        "_",
        "join",
        "distlist",
        "bot",
        "coro_send_message",
        "conv_id",
        "result",
        "args",
        "testing",
        "args"
    ],
    "literals": [
        "\"testing\"",
        "\"test\"",
        "\" \"",
        "\"pll=(-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+)\"",
        "\"(-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+)\"",
        "\",\"",
        "\",\"",
        "\",\"",
        "\",\"",
        "'reverse'",
        "\"unknown\"",
        "\", \"",
        "\",\"",
        "\",\"",
        "\",\"",
        "\",\"",
        "'reverse'",
        "\"unknown\"",
        "\", \"",
        "\", \"",
        "\", \"",
        "\" ummm...\"",
        "\" (4 VRLAs)\"",
        "\" (VRLAs)\"",
        "\" (LAs)\"",
        "\" (2+ agents)\"",
        "\" (LAs/2+ agents)\"",
        "\"km to \"",
        "\"    you don't have a snowball's chance in hell\"",
        "\"<b>Distance(s) from \"",
        "\":</b>\"",
        "\"<br/>\"",
        "\"testing happens\""
    ],
    "variables": [
        "message",
        "spacesplit",
        "coords",
        "pll",
        "latlongexist",
        "lata",
        "lona",
        "lat",
        "lng",
        "latlng",
        "g",
        "origtext",
        "origtext",
        "origtext",
        "distlist",
        "lat",
        "lng",
        "latb",
        "lonb",
        "dlon",
        "dlat",
        "a",
        "c",
        "km",
        "latlng",
        "g",
        "text",
        "text",
        "text",
        "result"
    ],
    "comments": [
        "Testing",
        "when test calls testing(), yield from prohibits execution",
        "Return the distance between two links",
        "split on spaces",
        "cycle through each piece of the split to determine if geocode",
        "start with pll existence and pull after pll then split at ,",
        "if no pll, then take numbers and split at ,",
        "dump these to a location array",
        "arraycount = 1",
        "arraycount+=1",
        "mad calculations, assuming 6367km earth diameter",
        "print is FYI only, i just learned this is called \"tracing\"",
        "send message works with \"test\" but doesn't spit out formatting correctly",
        "bot.send_message(event.conv, result)"
    ],
    "docstrings": [],
    "functions": [
        "_initialise",
        "testing",
        "test"
    ],
    "classes": []
}