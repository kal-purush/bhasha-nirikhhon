{
    "identifiers": [
        "print_function",
        "socket",
        "sys",
        "binascii",
        "copy",
        "time",
        "dnslib",
        "DNSRecord",
        "RR",
        "QTYPE",
        "RCODE",
        "parse_time",
        "A",
        "dnslib",
        "server",
        "DNSServer",
        "DNSHandler",
        "BaseResolver",
        "DNSLogger",
        "dnslib",
        "label",
        "DNSLabel",
        "BaseResolver",
        "address",
        "port",
        "ttl",
        "d",
        "address",
        "port",
        "parse_time",
        "ttl",
        "d",
        "request",
        "handler",
        "request",
        "reply",
        "request",
        "q",
        "qname",
        "QTYPE",
        "request",
        "q",
        "qtype",
        "qname",
        "matchGlob",
        "reply",
        "add_answer",
        "RR",
        "qname",
        "QTYPE",
        "A",
        "rdata",
        "A",
        "socket",
        "gethostbyname",
        "socket",
        "gethostname",
        "d",
        "qname",
        "d",
        "reply",
        "rr",
        "handler",
        "protocol",
        "request",
        "send",
        "address",
        "port",
        "request",
        "send",
        "address",
        "port",
        "tcp",
        "DNSRecord",
        "parse",
        "proxy_r",
        "reply",
        "d",
        "InterceptResolver",
        "d",
        "DNSLogger",
        "DNSServer",
        "resolver",
        "port",
        "address",
        "socket",
        "gethostbyname",
        "socket",
        "gethostname",
        "logger",
        "logger",
        "udp_server",
        "start_thread",
        "udp_server",
        "isAlive",
        "time",
        "sleep"
    ],
    "literals": [
        "\"api-*padsv.gungho.jp.\"",
        "'api'",
        "'api'",
        "''",
        "'udp'",
        "'8.8.8.8'",
        "'60s'",
        "\"request,reply,truncated,error\"",
        "'log_request'",
        "'log_reply'",
        "'log_truncated'",
        "'log_error'"
    ],
    "variables": [
        "address",
        "port",
        "ttl",
        "d",
        "reply",
        "qname",
        "qtype",
        "proxy_r",
        "proxy_r",
        "reply",
        "resolver",
        "logger",
        "DNSHandler",
        "log",
        "udp_server"
    ],
    "comments": [
        "or qname.matchGlob('mitm.it'):",
        "Otherwise proxy",
        "DNS Request",
        "DNS Response",
        "Truncated",
        "Decoding error"
    ],
    "docstrings": [
        "\"\"\"http://code.activestate.com/recipes/491264-mini-fake-dns-server/\"\"\"",
        "\"\"\"\n        Intercepting resolver \n        \n        Proxy requests to upstream server optionally intercepting requests\n        matching local records\n    \"\"\"",
        "\"\"\"\n            address/port    - upstream server\n            ttl             - default ttl for intercept records\n        \"\"\""
    ],
    "functions": [
        "resolve",
        "serveDNS"
    ],
    "classes": [
        "InterceptResolver"
    ]
}