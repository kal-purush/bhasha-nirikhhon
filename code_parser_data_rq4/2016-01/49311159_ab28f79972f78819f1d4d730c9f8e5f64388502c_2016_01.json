{
    "identifiers": [
        "com",
        "eaglesakura",
        "thread",
        "java",
        "util",
        "java",
        "util",
        "com",
        "eaglesakura",
        "util",
        "Util",
        "runnner",
        "runner",
        "runner",
        "threads",
        "tasks",
        "maxThreads",
        "exit",
        "threadName",
        "getName",
        "maxThreads",
        "maxThreads",
        "maxThreads",
        "task",
        "tasks",
        "add",
        "task",
        "runnable",
        "pushBack",
        "Override",
        "runnner",
        "Override",
        "runner",
        "runnable",
        "run",
        "Override",
        "runner",
        "task",
        "tasks",
        "add",
        "task",
        "runnable",
        "pushFront",
        "Override",
        "runnner",
        "Override",
        "runner",
        "runnable",
        "run",
        "Override",
        "runner",
        "setThreadPoolMode",
        "threads",
        "size",
        "Util",
        "sleep",
        "pool",
        "exit",
        "pool",
        "thread",
        "_task",
        "_task",
        "nextTask",
        "_task",
        "run",
        "MultiRunningTasks",
        "finish",
        "_task",
        "Util",
        "sleep",
        "exit",
        "tasks",
        "isEmpty",
        "threads",
        "threads",
        "remove",
        "thread",
        "threadId",
        "threadName",
        "threadName",
        "threadName",
        "threads",
        "threads",
        "size",
        "maxThreads",
        "thread",
        "Override",
        "runTask",
        "threads",
        "add",
        "thread",
        "thread",
        "setName",
        "threadName",
        "threadId",
        "thread",
        "start",
        "tasks",
        "isEmpty",
        "next",
        "tasks",
        "get",
        "tasks",
        "remove",
        "next",
        "begin",
        "next",
        "task",
        "task",
        "finish",
        "tasks",
        "size",
        "threads",
        "size",
        "tasks",
        "clear",
        "setThreadPoolMode"
    ],
    "literals": [
        "\" :: ID \""
    ],
    "variables": [],
    "comments": [
        "! 次のタスクを受け取る。",
        "!     タスクの実行",
        "! 実行中タスクを削除する",
        "! beginに成功した場合のみ返す。"
    ],
    "docstrings": [
        "* 並列的に複数のタスクの実行を行う。<BR>\n * タスク数に制限はないが、限界は考えて使ったほうがいい。<BR>\n * タスクが開始される順番は確定されるが、終了する順番は保証されない。",
        "* 開始時に呼ばれる。<BR>\n         * この処理は同時に複数呼ばれることはない。\n         *\n         * @param runnner\n         * @return falseを返した場合、タスクの実行を行わない。",
        "* 実際の処理を行わせる。\n         *\n         * @param runner",
        "* 終了時に呼ばれる。<BR>\n         * この処理は同時に複数呼ばれることはない。\n         *\n         * @param runner",
        "* タスクを後ろに追加する。\n     *\n     * @param task",
        "* タスクを後ろに追加する\n     *\n     * @param runnable",
        "* タスクを前に追加する。\n     *\n     * @param task",
        "* 全てのタスクが終わるのを明示的に待つ。<BR>\n     * メソッドを抜けた次点で全てのタスクが完了している。",
        "* スレッドを常にプールする場合はtrue、不要なスレッドを廃棄する場合はfalse\n     *\n     * @param pool",
        "* タスクを実行する。",
        "* 一意のスレッド番号を設定する。",
        "* スレッドを開始させる。<BR>\n     * <br>\n     * {@link #setThreadPoolMode(boolean)}にtrueを指定している場合、{@link #waitTaskFinished()}させない限りスレッドは待機し続ける。",
        "* 次処理すべきタスクを取得する。\n     *\n     * @return",
        "* タスクを終了させる。\n     *\n     * @param task",
        "* 残タスク数を取得する。\n     *\n     * @return",
        "* 残タスクを全て終了する。"
    ],
    "functions": [
        "begin",
        "run",
        "finish",
        "MultiRunningTasks",
        "MultiRunningTasks",
        "pushBack",
        "MultiRunningTasks",
        "pushBack",
        "begin",
        "run",
        "finish",
        "pushFront",
        "pushFront",
        "begin",
        "run",
        "finish",
        "waitTaskFinished",
        "setThreadPoolMode",
        "runTask",
        "setThreadName",
        "start",
        "run",
        "nextTask",
        "finish",
        "getTaskCount",
        "clear"
    ],
    "classes": [
        "MultiRunningTasks"
    ]
}