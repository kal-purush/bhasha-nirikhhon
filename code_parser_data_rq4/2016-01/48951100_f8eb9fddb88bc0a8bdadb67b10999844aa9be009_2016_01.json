{
    "identifiers": [
        "PublicApiAnalyzer",
        "Helpers",
        "Collections",
        "Concurrent",
        "Collections",
        "Generic",
        "Collections",
        "Immutable",
        "Diagnostics",
        "Linq",
        "Threading",
        "Threading",
        "Tasks",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CodeActions",
        "Microsoft",
        "CodeAnalysis",
        "CodeFixes",
        "Microsoft",
        "CodeAnalysis",
        "Text",
        "FixAllProvider",
        "CustomBatchFixAllProvider",
        "CodeAction",
        "FixAllContext",
        "fixAllContext",
        "fixAllContext",
        "Document",
        "GetDocumentDiagnosticsToFixAsync",
        "fixAllContext",
        "ConfigureAwait",
        "GetFixAsync",
        "documentsAndDiagnosticsToFixMap",
        "fixAllContext",
        "ConfigureAwait",
        "GetProjectDiagnosticsToFixAsync",
        "fixAllContext",
        "ConfigureAwait",
        "GetFixAsync",
        "projectsAndDiagnosticsToFixMap",
        "fixAllContext",
        "ConfigureAwait",
        "CodeAction",
        "ImmutableDictionary",
        "Document",
        "ImmutableArray",
        "Diagnostic",
        "documentsAndDiagnosticsToFixMap",
        "FixAllContext",
        "fixAllContext",
        "documentsAndDiagnosticsToFixMap",
        "documentsAndDiagnosticsToFixMap",
        "Any",
        "fixAllContext",
        "CancellationToken",
        "ThrowIfCancellationRequested",
        "documentsAndDiagnosticsToFixMap",
        "Keys",
        "ToImmutableArray",
        "CodeAction",
        "documents",
        "Length",
        "ParallelOptions",
        "CancellationToken",
        "fixAllContext",
        "CancellationToken",
        "Parallel",
        "ForEach",
        "documents",
        "options",
        "state",
        "index",
        "fixAllContext",
        "CancellationToken",
        "ThrowIfCancellationRequested",
        "fixesBag",
        "index",
        "CodeAction",
        "AddDocumentFixesAsync",
        "documentsAndDiagnosticsToFixMap",
        "fixesBag",
        "index",
        "Add",
        "fixAllContext",
        "Wait",
        "fixAllContext",
        "CancellationToken",
        "fixesBag",
        "Any",
        "fixes",
        "Count",
        "TryGetMergedFixAsync",
        "fixesBag",
        "SelectMany",
        "i",
        "fixAllContext",
        "ConfigureAwait",
        "Document",
        "ImmutableArray",
        "Diagnostic",
        "diagnostics",
        "Action",
        "CodeAction",
        "addFix",
        "FixAllContext",
        "fixAllContext",
        "Debug",
        "Assert",
        "diagnostics",
        "IsDefault",
        "fixAllContext",
        "CancellationToken",
        "diagnostics",
        "Length",
        "CodeAction",
        "diagnostics",
        "Length",
        "i",
        "diagnostics",
        "Length",
        "i",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "diagnostics",
        "i",
        "fixerTasks",
        "i",
        "Run",
        "CodeAction",
        "CodeFixContext",
        "diagnostic",
        "a",
        "d",
        "localFixes",
        "localFixes",
        "Add",
        "a",
        "cancellationToken",
        "fixAllContext",
        "CodeFixProvider",
        "RegisterCodeFixesAsync",
        "context",
        "SpecializedTasks",
        "CompletedTask",
        "task",
        "ConfigureAwait",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "localFixes",
        "RemoveAll",
        "action",
        "EquivalenceKey",
        "fixAllContext",
        "CodeActionEquivalenceKey",
        "fixes",
        "currentFixIndex",
        "localFixes",
        "WhenAll",
        "fixerTasks",
        "ConfigureAwait",
        "CodeAction",
        "fix",
        "fixes",
        "fix",
        "CodeAction",
        "action",
        "fix",
        "addFix",
        "action",
        "CodeAction",
        "ImmutableDictionary",
        "Project",
        "ImmutableArray",
        "Diagnostic",
        "projectsAndDiagnosticsToFixMap",
        "FixAllContext",
        "fixAllContext",
        "projectsAndDiagnosticsToFixMap",
        "projectsAndDiagnosticsToFixMap",
        "Any",
        "ParallelOptions",
        "CancellationToken",
        "fixAllContext",
        "CancellationToken",
        "CodeAction",
        "projectsAndDiagnosticsToFixMap",
        "Count",
        "Parallel",
        "ForEach",
        "projectsAndDiagnosticsToFixMap",
        "Keys",
        "options",
        "project",
        "state",
        "index",
        "fixAllContext",
        "CancellationToken",
        "ThrowIfCancellationRequested",
        "projectsAndDiagnosticsToFixMap",
        "project",
        "fixesBag",
        "index",
        "CodeAction",
        "AddProjectFixesAsync",
        "project",
        "diagnostics",
        "fixesBag",
        "index",
        "Add",
        "fixAllContext",
        "Wait",
        "fixAllContext",
        "CancellationToken",
        "fixesBag",
        "Any",
        "fixes",
        "Count",
        "TryGetMergedFixAsync",
        "fixesBag",
        "SelectMany",
        "i",
        "fixAllContext",
        "ConfigureAwait",
        "Project",
        "project",
        "Diagnostic",
        "diagnostics",
        "Action",
        "CodeAction",
        "addFix",
        "FixAllContext",
        "fixAllContext",
        "NotImplementedException",
        "CodeAction",
        "CodeAction",
        "batchOfFixes",
        "FixAllContext",
        "fixAllContext",
        "batchOfFixes",
        "ArgumentNullException",
        "nameof",
        "batchOfFixes",
        "batchOfFixes",
        "Any",
        "ArgumentException",
        "nameof",
        "batchOfFixes",
        "nameof",
        "batchOfFixes",
        "fixAllContext",
        "Solution",
        "TryMergeFixesAsync",
        "solution",
        "batchOfFixes",
        "fixAllContext",
        "CancellationToken",
        "ConfigureAwait",
        "newSolution",
        "newSolution",
        "solution",
        "GetFixAllTitle",
        "fixAllContext",
        "CodeAction",
        "Create",
        "title",
        "FromResult",
        "newSolution",
        "FixAllContext",
        "fixAllContext",
        "fixAllContext",
        "DiagnosticIds",
        "diagnosticIds",
        "Count",
        "diagnosticId",
        "diagnosticIds",
        "Single",
        "diagnosticId",
        "Join",
        "diagnosticIds",
        "ToArray",
        "fixAllContext",
        "Scope",
        "FixAllScope",
        "Custom",
        "Format",
        "HelpersResources",
        "FixAllOccurrencesOfDiagnostic",
        "diagnosticId",
        "FixAllScope",
        "Document",
        "fixAllContext",
        "Document",
        "Format",
        "HelpersResources",
        "FixAllOccurrencesOfDiagnosticInScope",
        "diagnosticId",
        "Name",
        "FixAllScope",
        "Project",
        "fixAllContext",
        "Project",
        "Format",
        "HelpersResources",
        "FixAllOccurrencesOfDiagnosticInScope",
        "diagnosticId",
        "project",
        "Name",
        "FixAllScope",
        "Solution",
        "Format",
        "HelpersResources",
        "FixAllOccurrencesOfDiagnosticInSolution",
        "diagnosticId",
        "InvalidOperationException",
        "ImmutableDictionary",
        "Document",
        "ImmutableArray",
        "Diagnostic",
        "FixAllContext",
        "fixAllContext",
        "FixAllContextHelper",
        "GetDocumentDiagnosticsToFixAsync",
        "fixAllContext",
        "ImmutableDictionary",
        "Project",
        "ImmutableArray",
        "Diagnostic",
        "FixAllContext",
        "fixAllContext",
        "FixAllContextHelper",
        "GetProjectDiagnosticsToFixAsync",
        "fixAllContext",
        "Solution",
        "Solution",
        "oldSolution",
        "CodeAction",
        "codeActions",
        "CancellationToken",
        "cancellationToken",
        "DocumentId",
        "Document",
        "DocumentId",
        "Document",
        "codeAction",
        "codeActions",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "ImmutableArray",
        "CodeActionOperation",
        "codeAction",
        "GetPreviewOperationsAsync",
        "cancellationToken",
        "ConfigureAwait",
        "operation",
        "operations",
        "operation",
        "ApplyChangesOperation",
        "applyChangesOperation",
        "singleApplyChangesOperation",
        "singleApplyChangesOperation",
        "singleApplyChangesOperation",
        "applyChangesOperation",
        "singleApplyChangesOperation",
        "singleApplyChangesOperation",
        "ChangedSolution",
        "changedSolution",
        "GetChanges",
        "oldSolution",
        "solutionChanges",
        "GetProjectChanges",
        "SelectMany",
        "p",
        "GetChangedDocuments",
        "documentId",
        "documentIdsWithChanges",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "changedSolution",
        "GetDocument",
        "documentId",
        "changedDocumentsMap",
        "TryGetValue",
        "documentId",
        "existingDocument",
        "existingDocument",
        "changedDocumentsMap",
        "documentId",
        "Document",
        "documentsToMerge",
        "Add",
        "existingDocument",
        "documentsToMerge",
        "Add",
        "documentsToMergeMap",
        "documentsToMergeMap",
        "DocumentId",
        "Document",
        "documentsToMergeMap",
        "documentId",
        "documentsToMerge",
        "documentsToMergeMap",
        "documentId",
        "Add",
        "changedDocumentsMap",
        "documentId",
        "kvp",
        "changedDocumentsMap",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "kvp",
        "Value",
        "GetTextAsync",
        "cancellationToken",
        "ConfigureAwait",
        "currentSolution",
        "currentSolution",
        "WithDocumentText",
        "kvp",
        "Key",
        "documentText",
        "documentsToMergeMap",
        "ConcurrentDictionary",
        "DocumentId",
        "SourceText",
        "documentsToMergeMap",
        "ToImmutableArray",
        "documentsToMergeArray",
        "Length",
        "i",
        "documentsToMergeArray",
        "Length",
        "i",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "documentsToMergeArray",
        "i",
        "kvp",
        "Key",
        "kvp",
        "Value",
        "oldSolution",
        "GetDocument",
        "documentId",
        "mergeTasks",
        "i",
        "Run",
        "documentsToMerge",
        "GetTextChangesAsync",
        "oldDocument",
        "cancellationToken",
        "ConfigureAwait",
        "ToList",
        "documentsToMerge",
        "Skip",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "appliedChanges",
        "TryAddDocumentMergeChangesAsync",
        "oldDocument",
        "appliedChanges",
        "cancellationToken",
        "ConfigureAwait",
        "oldDocument",
        "GetTextAsync",
        "cancellationToken",
        "ConfigureAwait",
        "oldText",
        "WithChanges",
        "appliedChanges",
        "mergedDocuments",
        "TryAdd",
        "documentId",
        "newText",
        "WhenAll",
        "mergeTasks",
        "ConfigureAwait",
        "kvp",
        "mergedDocuments",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "currentSolution",
        "currentSolution",
        "WithDocumentText",
        "kvp",
        "Key",
        "kvp",
        "Value",
        "currentSolution",
        "TextChange",
        "Document",
        "oldDocument",
        "Document",
        "newDocument",
        "TextChange",
        "cumulativeChanges",
        "CancellationToken",
        "cancellationToken",
        "TextChange",
        "change",
        "newDocument",
        "GetTextChangesAsync",
        "oldDocument",
        "cancellationToken",
        "ConfigureAwait",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "cumulativeChangeIndex",
        "cumulativeChanges",
        "Count",
        "cumulativeChanges",
        "cumulativeChangeIndex",
        "End",
        "change",
        "Start",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "successfullyMergedChanges",
        "Add",
        "cumulativeChanges",
        "cumulativeChangeIndex",
        "cumulativeChangeIndex",
        "cumulativeChangeIndex",
        "cumulativeChanges",
        "Count",
        "cumulativeChanges",
        "cumulativeChangeIndex",
        "cumulativeChange",
        "IntersectsWith",
        "change",
        "successfullyMergedChanges",
        "Add",
        "change",
        "change",
        "cumulativeChange",
        "change",
        "NewText",
        "cumulativeChange",
        "NewText",
        "cumulativeChanges",
        "successfullyMergedChanges",
        "Add",
        "change",
        "cumulativeChangeIndex",
        "successfullyMergedChanges",
        "Add",
        "change",
        "cumulativeChangeIndex",
        "cumulativeChanges",
        "Count",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "successfullyMergedChanges",
        "Add",
        "cumulativeChanges",
        "cumulativeChangeIndex",
        "cumulativeChangeIndex",
        "successfullyMergedChanges"
    ],
    "literals": [
        "\"!diagnostics.IsDefault\"",
        "\",\"",
        "\"Not reachable\""
    ],
    "variables": [
        "FixAllProvider",
        "Instance",
        "documentsAndDiagnosticsToFixMap",
        "projectsAndDiagnosticsToFixMap",
        "documents",
        "fixesBag",
        "options",
        "cancellationToken",
        "fixerTasks",
        "fixes",
        "i",
        "currentFixIndex",
        "i",
        "diagnostic",
        "localFixes",
        "context",
        "task",
        "options",
        "fixesBag",
        "diagnostics",
        "solution",
        "newSolution",
        "title",
        "diagnosticIds",
        "diagnosticId",
        "project",
        "changedDocumentsMap",
        "documentsToMergeMap",
        "operations",
        "ApplyChangesOperation",
        "singleApplyChangesOperation",
        "ApplyChangesOperation",
        "applyChangesOperation",
        "changedSolution",
        "solutionChanges",
        "documentIdsWithChanges",
        "Document",
        "existingDocument",
        "documentsToMerge",
        "currentSolution",
        "oldSolution",
        "documentText",
        "mergedDocuments",
        "documentsToMergeArray",
        "mergeTasks",
        "i",
        "kvp",
        "documentId",
        "documentsToMerge",
        "oldDocument",
        "appliedChanges",
        "oldText",
        "newText",
        "successfullyMergedChanges",
        "cumulativeChangeIndex",
        "cumulativeChange"
    ],
    "comments": [
        "Copyright (c) Tunnel Vision Laboratories, LLC. All Rights Reserved.",
        "Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.",
        "Helper class for \"Fix all occurrences\" code fix providers.",
        "</summary>",
        "TODO: Can we share code between similar lambdas that we pass to this API in BatchFixAllProvider.cs, CodeFixService.cs and CodeRefactoringService.cs?",
        "Serialize access for thread safety - we don't know what thread the fix provider will call this delegate from.",
        "TODO: Wrap call to ComputeFixesAsync() below in IExtensionManager.PerformFunctionAsync() so that",
        "a buggy extension that throws can't bring down the host?",
        "TODO: Parallelize GetChangedSolutionInternalAsync for codeActions",
        "Already had an ApplyChangesOperation; only one is supported.",
        "TODO: Handle added/removed documents",
        "TODO: Handle changed/added/removed additional documents",
        "Try to merge the changes between <paramref name=\"newDocument\"/> and <paramref name=\"oldDocument\"/> into <paramref name=\"cumulativeChanges\"/>.",
        "If there is any conflicting change in <paramref name=\"newDocument\"/> with existing <paramref name=\"cumulativeChanges\"/>, then the original <paramref name=\"cumulativeChanges\"/> are returned.",
        "Otherwise, the newly merged changes are returned.",
        "</summary>",
        "<param name=\"oldDocument\">Base document on which FixAll was invoked.</param>",
        "<param name=\"newDocument\">New document with a code fix that is being merged.</param>",
        "<param name=\"cumulativeChanges\">Existing merged changes from other batch fixes into which newDocument changes are being merged.</param>",
        "<param name=\"cancellationToken\">Cancellation token.</param>",
        "<returns>A <see cref=\"Task\"/> representing the asynchronous operation.</returns>",
        "Existing change that does not overlap with the current change in consideration",
        "The current change in consideration does not intersect with any existing change",
        "The current change in consideration overlaps an existing change but",
        "the changes are not identical.",
        "Bail out merge efforts and return the original 'cumulativeChanges'.",
        "The current change in consideration is identical to an existing change",
        "The current change in consideration does not intersect with any existing change",
        "Existing change that does not overlap with the current change in consideration"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "CustomBatchFixAllProvider",
        "GetFixAsync",
        "GetFixAsync",
        "AddDocumentFixesAsync",
        "GetFixAsync",
        "AddProjectFixesAsync",
        "TryGetMergedFixAsync",
        "GetFixAllTitle",
        "GetDocumentDiagnosticsToFixAsync",
        "GetProjectDiagnosticsToFixAsync",
        "TryMergeFixesAsync",
        "TryAddDocumentMergeChangesAsync"
    ],
    "classes": [
        "CustomBatchFixAllProvider"
    ]
}