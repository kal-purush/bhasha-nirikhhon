{
    "identifiers": [
        "java",
        "util",
        "concurrent",
        "java",
        "lang",
        "reflect",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "AbstractSet",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "Comparator",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "java",
        "util",
        "NavigableSet",
        "java",
        "util",
        "NoSuchElementException",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "SortedSet",
        "java",
        "util",
        "Spliterator",
        "java",
        "util",
        "Spliterators",
        "java",
        "util",
        "Predicate",
        "java",
        "util",
        "Consumer",
        "serialVersionUID",
        "comparator",
        "al",
        "comparator",
        "al",
        "comparator",
        "Objects",
        "requireNonNull",
        "comparator",
        "al",
        "al",
        "SuppressWarnings",
        "Comparator",
        "naturalOrder",
        "comparator",
        "comparator",
        "SuppressWarnings",
        "c",
        "c",
        "getClass",
        "comparator",
        "c",
        "comparator",
        "al",
        "al",
        "setArray",
        "c",
        "al",
        "getArray",
        "c",
        "compare",
        "c",
        "comparator",
        "comparator",
        "compare",
        "Comparator",
        "naturalOrder",
        "compare",
        "al",
        "c",
        "comparator",
        "Comparator",
        "naturalOrder",
        "al",
        "c",
        "CopyOnWriteArrayNavigableSet",
        "addAll",
        "c",
        "e",
        "c",
        "add",
        "e",
        "contents",
        "contents",
        "comparator",
        "comparator",
        "Override",
        "SuppressWarnings",
        "o",
        "Arrays",
        "binarySearch",
        "al",
        "getArray",
        "o",
        "comparator",
        "Override",
        "o",
        "al",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "SuppressWarnings",
        "loc",
        "Arrays",
        "binarySearch",
        "array",
        "o",
        "comparator",
        "loc",
        "al",
        "remove",
        "loc",
        "Override",
        "e",
        "add",
        "e",
        "cowans",
        "e",
        "Objects",
        "requireNonNull",
        "e",
        "cowans",
        "al",
        "SuppressWarnings",
        "array",
        "cowans",
        "al",
        "getArray",
        "loc",
        "array",
        "length",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "cowans",
        "comparator",
        "cowans",
        "comparator",
        "compare",
        "e",
        "e",
        "MIN_VALUE",
        "loc",
        "loc",
        "MIN_VALUE",
        "cowans",
        "al",
        "add",
        "loc",
        "e",
        "Override",
        "SuppressWarnings",
        "c",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "each",
        "c",
        "Arrays",
        "binarySearch",
        "array",
        "each",
        "comparator",
        "Override",
        "c",
        "CopyOnWriteArrayNavigableSet",
        "addAll",
        "c",
        "SuppressWarnings",
        "cowans",
        "c",
        "cs",
        "c",
        "toArray",
        "cs",
        "length",
        "cs",
        "length",
        "cowans",
        "add",
        "cs",
        "cowans",
        "al",
        "array",
        "cowans",
        "al",
        "getArray",
        "len",
        "array",
        "length",
        "added",
        "i",
        "i",
        "cs",
        "length",
        "i",
        "e",
        "Objects",
        "requireNonNull",
        "cs",
        "i",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "cowans",
        "comparator",
        "at",
        "len",
        "Arrays",
        "binarySearch",
        "cs",
        "added",
        "e",
        "cowans",
        "comparator",
        "cowans",
        "comparator",
        "compare",
        "e",
        "e",
        "MIN_VALUE",
        "at",
        "at",
        "MIN_VALUE",
        "at",
        "at",
        "arraycopy",
        "cs",
        "at",
        "cs",
        "at",
        "added",
        "at",
        "cs",
        "at",
        "e",
        "added",
        "newElements",
        "newInstance",
        "array",
        "getClass",
        "getComponentType",
        "len",
        "added",
        "len",
        "added",
        "i",
        "newElements",
        "length",
        "i",
        "i",
        "newElements",
        "i",
        "len",
        "added",
        "cowans",
        "comparator",
        "compare",
        "array",
        "len",
        "cs",
        "added",
        "array",
        "len",
        "cs",
        "added",
        "cowans",
        "al",
        "setArray",
        "newElements",
        "Override",
        "al",
        "iterator",
        "Override",
        "al",
        "size",
        "Override",
        "al",
        "removeIf",
        "Override",
        "action",
        "al",
        "forEach",
        "action",
        "Override",
        "c",
        "al",
        "retainAll",
        "c",
        "Override",
        "c",
        "al",
        "removeAll",
        "c",
        "Override",
        "al",
        "toArray",
        "Override",
        "a",
        "al",
        "toArray",
        "a",
        "Override",
        "al",
        "clear",
        "Override",
        "Spliterators",
        "spliterator",
        "al",
        "getArray",
        "Spliterator",
        "ORDERED",
        "Spliterator",
        "NONNULL",
        "Spliterator",
        "IMMUTABLE",
        "Spliterator",
        "DISTINCT",
        "Override",
        "SuppressWarnings",
        "e",
        "array",
        "al",
        "getArray",
        "loc",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "comparator",
        "loc",
        "array",
        "loc",
        "loc",
        "array",
        "loc",
        "Override",
        "SuppressWarnings",
        "e",
        "array",
        "al",
        "getArray",
        "loc",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "comparator",
        "loc",
        "array",
        "loc",
        "loc",
        "array",
        "loc",
        "Override",
        "SuppressWarnings",
        "e",
        "array",
        "al",
        "getArray",
        "loc",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "comparator",
        "loc",
        "array",
        "loc",
        "loc",
        "array",
        "length",
        "array",
        "loc",
        "Override",
        "SuppressWarnings",
        "e",
        "array",
        "al",
        "getArray",
        "loc",
        "Arrays",
        "binarySearch",
        "array",
        "e",
        "comparator",
        "loc",
        "loc",
        "array",
        "length",
        "array",
        "loc",
        "loc",
        "array",
        "length",
        "array",
        "loc",
        "Override",
        "al",
        "isEmpty",
        "al",
        "al",
        "isEmpty",
        "result",
        "al",
        "remove",
        "result",
        "Override",
        "al",
        "isEmpty",
        "al",
        "al",
        "isEmpty",
        "result",
        "al",
        "remove",
        "al",
        "size",
        "result",
        "Override",
        "comparator",
        "al",
        "Override",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "array",
        "length",
        "Collections",
        "emptyIterator",
        "index",
        "array",
        "length",
        "Override",
        "index",
        "Override",
        "hasNext",
        "array",
        "index",
        "Override",
        "fromElement",
        "fromInclusive",
        "toElement",
        "toInclusive",
        "comparator",
        "al",
        "fromElement",
        "fromInclusive",
        "toElement",
        "toInclusive",
        "Override",
        "toElement",
        "inclusive",
        "comparator",
        "al",
        "toElement",
        "inclusive",
        "Override",
        "fromElement",
        "inclusive",
        "comparator",
        "al",
        "fromElement",
        "inclusive",
        "Override",
        "fromElement",
        "toElement",
        "subSet",
        "fromElement",
        "toElement",
        "Override",
        "toElement",
        "headSet",
        "toElement",
        "Override",
        "fromElement",
        "tailSet",
        "fromElement",
        "Override",
        "comparator",
        "Override",
        "al",
        "isEmpty",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "array",
        "length",
        "array",
        "Override",
        "al",
        "isEmpty",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "array",
        "length",
        "array",
        "array",
        "length",
        "serialVersionUID",
        "descending",
        "lowerBounded",
        "upperBounded",
        "lowerInclusive",
        "upperInclusive",
        "lowerBound",
        "upperBound",
        "SuppressWarnings",
        "comparator",
        "al",
        "lowerBounded",
        "fromElement",
        "lowerInclusive",
        "upperBounded",
        "toElement",
        "upperInclusive",
        "descending",
        "comparator",
        "al",
        "descending",
        "descending",
        "lowerBounded",
        "upperBounded",
        "fromCompared",
        "signum",
        "comparator",
        "compare",
        "fromElement",
        "toElement",
        "toCompared",
        "signum",
        "comparator",
        "compare",
        "toElement",
        "fromElement",
        "fromCompared",
        "toCompared",
        "descending",
        "fromCompared",
        "fromCompared",
        "lowerBounded",
        "lowerBounded",
        "lowerBound",
        "fromElement",
        "lowerInclusive",
        "lowerInclusive",
        "upperBounded",
        "upperBounded",
        "upperBound",
        "toElement",
        "upperInclusive",
        "upperInclusive",
        "Override",
        "e",
        "add",
        "inBounds",
        "e",
        "Override",
        "SuppressWarnings",
        "o",
        "checkInBounds",
        "o",
        "contains",
        "o",
        "Override",
        "SuppressWarnings",
        "descending",
        "comparator",
        "reversed",
        "comparator",
        "Override",
        "comparator",
        "al",
        "upperBounded",
        "upperBound",
        "upperInclusive",
        "lowerBounded",
        "lowerBound",
        "lowerInclusive",
        "descending",
        "Override",
        "fromElement",
        "fromInclusive",
        "toElement",
        "toInclusive",
        "comparator",
        "al",
        "inBounds",
        "fromElement",
        "fromInclusive",
        "inBounds",
        "toElement",
        "toInclusive",
        "descending",
        "Override",
        "toElement",
        "inclusive",
        "comparator",
        "al",
        "lowerBounded",
        "lowerBound",
        "lowerInclusive",
        "inBounds",
        "toElement",
        "inclusive",
        "descending",
        "Override",
        "fromElement",
        "inclusive",
        "comparator",
        "al",
        "inBounds",
        "fromElement",
        "inclusive",
        "upperBounded",
        "upperBound",
        "upperInclusive",
        "descending",
        "Override",
        "fromElement",
        "toElement",
        "subSet",
        "fromElement",
        "toElement",
        "Override",
        "toElement",
        "headSet",
        "toElement",
        "Override",
        "fromElement",
        "tailSet",
        "fromElement",
        "element",
        "lowerBounded",
        "lowerInclusive",
        "comparator",
        "compare",
        "lowerBound",
        "element",
        "element",
        "lowerBound",
        "comparator",
        "compare",
        "lowerBound",
        "element",
        "element",
        "lowerBound",
        "upperBounded",
        "upperInclusive",
        "comparator",
        "compare",
        "upperBound",
        "element",
        "element",
        "upperBound",
        "comparator",
        "compare",
        "upperBound",
        "element",
        "element",
        "upperBound",
        "element",
        "element",
        "lowerBounded",
        "lowerInclusive",
        "comparator",
        "compare",
        "lowerBound",
        "element",
        "comparator",
        "compare",
        "lowerBound",
        "element",
        "upperBounded",
        "upperInclusive",
        "comparator",
        "compare",
        "upperBound",
        "element",
        "comparator",
        "compare",
        "upperBound",
        "element",
        "Override",
        "makeIterator",
        "descending",
        "Override",
        "action",
        "Objects",
        "requireNonNull",
        "action",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "each",
        "start",
        "each",
        "end",
        "each",
        "action",
        "accept",
        "array",
        "each",
        "Override",
        "Objects",
        "requireNonNull",
        "al",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "al",
        "subList",
        "start",
        "end",
        "removeIf",
        "Override",
        "c",
        "al",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "al",
        "subList",
        "start",
        "end",
        "retainAll",
        "c",
        "Override",
        "c",
        "al",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "al",
        "subList",
        "start",
        "end",
        "removeAll",
        "c",
        "Override",
        "c",
        "e",
        "c",
        "inBounds",
        "e",
        "CopyOnWriteArrayNavigableSet",
        "addAll",
        "c",
        "Override",
        "SuppressWarnings",
        "c",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "each",
        "c",
        "Arrays",
        "binarySearch",
        "array",
        "start",
        "end",
        "each",
        "comparator",
        "Override",
        "SuppressWarnings",
        "o",
        "checkInBounds",
        "o",
        "remove",
        "o",
        "Override",
        "al",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "al",
        "removeRange",
        "start",
        "end",
        "SuppressWarnings",
        "array",
        "start",
        "lowerBounded",
        "start",
        "Arrays",
        "binarySearch",
        "array",
        "lowerBound",
        "comparator",
        "descending",
        "Comparator",
        "reverseOrder",
        "descending",
        "comparator",
        "reversed",
        "comparator",
        "start",
        "start",
        "lowerInclusive",
        "start",
        "start",
        "start",
        "start",
        "start",
        "SuppressWarnings",
        "array",
        "end",
        "upperBounded",
        "end",
        "Arrays",
        "binarySearch",
        "array",
        "upperBound",
        "descending",
        "comparator",
        "reversed",
        "comparator",
        "end",
        "end",
        "upperInclusive",
        "end",
        "end",
        "end",
        "end",
        "array",
        "length",
        "end",
        "Override",
        "a",
        "makeArray",
        "a",
        "descending",
        "SuppressWarnings",
        "a",
        "inDescending",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "len",
        "end",
        "start",
        "a",
        "length",
        "len",
        "a",
        "newInstance",
        "a",
        "getClass",
        "getComponentType",
        "len",
        "arraycopy",
        "array",
        "start",
        "a",
        "len",
        "len",
        "a",
        "length",
        "a",
        "len",
        "inDescending",
        "Collections",
        "reverse",
        "Arrays",
        "asList",
        "a",
        "subList",
        "len",
        "a",
        "Override",
        "makeArray",
        "descending",
        "Override",
        "makeIterator",
        "descending",
        "SuppressWarnings",
        "inDescending",
        "asList",
        "inDescending",
        "asList",
        "Arrays",
        "asList",
        "makeArray",
        "inDescending",
        "array",
        "al",
        "getArray",
        "start",
        "fromLoc",
        "array",
        "end",
        "toLoc",
        "array",
        "asList",
        "Arrays",
        "asList",
        "array",
        "subList",
        "start",
        "end",
        "Collections",
        "unmodifiableList",
        "asList",
        "iterator",
        "Override",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "toLoc",
        "array",
        "fromLoc",
        "array",
        "Override",
        "SuppressWarnings",
        "e",
        "result",
        "descending",
        "higher",
        "e",
        "lower",
        "e",
        "result",
        "checkInBounds",
        "result",
        "result",
        "Override",
        "SuppressWarnings",
        "e",
        "result",
        "descending",
        "ceiling",
        "e",
        "floor",
        "e",
        "result",
        "checkInBounds",
        "result",
        "result",
        "Override",
        "SuppressWarnings",
        "e",
        "result",
        "descending",
        "floor",
        "e",
        "ceiling",
        "e",
        "result",
        "checkInBounds",
        "result",
        "result",
        "Override",
        "SuppressWarnings",
        "e",
        "result",
        "descending",
        "lower",
        "e",
        "higher",
        "e",
        "result",
        "checkInBounds",
        "result",
        "result",
        "Override",
        "descending",
        "doPollLast",
        "doPollFirst",
        "lowerBounded",
        "al",
        "remove",
        "lowerInclusive",
        "floor",
        "lowerBound",
        "higher",
        "lowerBound",
        "remove",
        "remove",
        "remove",
        "remove",
        "pollFirst",
        "Override",
        "descending",
        "doPollFirst",
        "doPollLast",
        "upperBounded",
        "al",
        "remove",
        "upperInclusive",
        "floor",
        "upperBound",
        "lower",
        "upperBound",
        "remove",
        "remove",
        "remove",
        "remove",
        "pollLast",
        "Override",
        "descending",
        "doLast",
        "doFirst",
        "result",
        "lowerInclusive",
        "ceiling",
        "lowerBound",
        "higher",
        "lowerBound",
        "result",
        "result",
        "Override",
        "descending",
        "doFirst",
        "doLast",
        "result",
        "upperInclusive",
        "floor",
        "upperBound",
        "lower",
        "upperBound",
        "result",
        "result",
        "Override",
        "SuppressWarnings",
        "array",
        "al",
        "getArray",
        "Spliterators",
        "spliterator",
        "array",
        "fromLoc",
        "array",
        "toLoc",
        "array",
        "Spliterator",
        "ORDERED",
        "Spliterator",
        "NONNULL",
        "Spliterator",
        "IMMUTABLE",
        "Spliterator",
        "DISTINCT"
    ],
    "literals": [
        "\"comparator\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"e\"",
        "\"unchecked\"",
        "\"Comparison method violates its general contract!\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"Comparison method violates its general contract!\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"inconsistent comparator\"",
        "\"upper < lower\"",
        "\"upper < lower\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"out of bounds: \"",
        "\" < \"",
        "\"out of bounds: \"",
        "\" <= \"",
        "\"out of bounds: \"",
        "\" > \"",
        "\"out of bounds: \"",
        "\" >= \"",
        "\"action\"",
        "\"unchecked\"",
        "\"filter\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\""
    ],
    "variables": [
        "comparator",
        "al",
        "descending",
        "lowerBounded",
        "upperBounded",
        "lowerInclusive",
        "upperInclusive",
        "lowerBound",
        "upperBound",
        "start",
        "end",
        "asList"
    ],
    "comments": [
        "MIN_VALUE is an impossible index we use as a sentinel for bad comparator.",
        "uniquify and compact elements in cs",
        "MIN_VALUE is an impossible index we use as a sentinel for bad comparator.",
        "insertion sort it into low portion of cs.",
        "System.out.println( Arrays.asList(cs) + \" len:\" + cs.length + \" e:\" + e + \" at:\" + at + \" added:\" + added);",
        "merge into resulting array. Both array and cs are sorted.",
        "+---+---+---+---+",
        "| 2 | 4 | 6 | 8 |",
        "+---+---+---+---+",
        "lower(0) = null",
        "lower(2) = null",
        "lower(3) = 2",
        "lower(8) = 6",
        "lower(9) = 8",
        "zero or minus one means nothing strictly lower.",
        "+---+---+---+---+",
        "| 2 | 4 | 6 | 8 |",
        "+---+---+---+---+",
        "floor(0) = null",
        "floor(2) = 2",
        "floor(3) = 2",
        "floor(8) = 8",
        "floor(9) = 8",
        "minus one means nothing matching or lower.",
        "+---+---+---+---+",
        "| 2 | 4 | 6 | 8 |",
        "+---+---+---+---+",
        "ceiling(0) = 2",
        "ceiling(2) = 2",
        "ceiling(3) = 4",
        "ceiling(8) = 8",
        "ceiling(9) = null",
        "+---+---+---+---+",
        "| 2 | 4 | 6 | 8 |",
        "+---+---+---+---+",
        "higher(0) = 2",
        "higher(2) = 4",
        "higher(3) = 4",
        "higher(8) = null",
        "higher(9) = null"
    ],
    "docstrings": [
        "* Written by Doug Lea & Mike Duigou with assistance from members of JCP JSR-166\n * Expert Group and released to the public domain, as explained at\n * http://creativecommons.org/publicdomain/zero/1.0/",
        "* A {@link java.util.NavigableSet} that uses an internal {@link CopyOnWriteArrayList}\n * for all of its operations.  Thus, it shares the same basic properties:\n * <ul>\n *  <li>It is best suited for applications in which set sizes generally\n *       stay small, read-only operations\n *       vastly outnumber mutative operations, and you need\n *       to prevent interference among threads during traversal.\n *  <li>It is thread-safe.\n *  <li>Mutative operations ({@code add}, {@code set}, {@code remove}, etc.)\n *      are expensive since they usually entail copying the entire underlying\n *      array.\n *  <li>Iterators do not support the mutative {@code remove} operation.\n *  <li>Traversal via iterators is fast and cannot encounter\n *      interference from other threads. Iterators rely on\n *      unchanging snapshots of the array at the time the iterators were\n *      constructed.\n * </ul>\n *\n * <p><b>Sample Usage.</b> The following code sketch uses a\n * copy-on-write navigable set to maintain a set of ordered Handler objects that\n * perform some action upon state updates until one of the handlers returns\n * true indicating that the update has been handled.\n *\n *  <pre> {@code\n * class Handler implements Comparable<Handler> {\n *   // returns true if update has been handled\n *   boolean handle();\n *\n *   // ordered from highest to lowest\n *   public int compareTo(Handler other) { return Integer.compare(priority, other.priority); }\n * }\n *\n * class X {\n *   // Will use \"Natural Order\" of Comparables\n *   private final CopyOnWriteArrayNavigableSet<Handler> handlers\n *     = new CopyOnWriteArrayNavigableSet<>();\n *   public void addHandler(Handler h) { handlers.add(h); }\n *\n *   private long internalState;\n *   private synchronized void changeState() { internalState = ...; }\n *\n *   public void update() {\n *     changeState();\n *     for (Handler handler : handlers)\n *       if(handler.handle()) break;\n *   }\n * }}</pre>\n *\n * <p>This class is a member of the\n * <a href=\"{@docRoot}/../technotes/guides/collections/index.html\">\n * Java Collections Framework</a>.\n *\n * @see CopyOnWriteArrayList\n * @since 9\n * @author Doug Lea\n * @author Mike Duigou\n * @param <E> the type of elements held in this collection",
        "* Comparator for elements.",
        "* Embedded CopyOnWriteArrayList used to hold the storage of this set.",
        "* Creates a set using the provided comparator with the initial elements\n     * of the provided COWAL.\n     *\n     * @param comparator\n     * @param al",
        "* Creates an empty set which can be used for mutually\n     * {@link java.lang.Comparable Comparable} objects.",
        "* Creates an empty set with the specified comparator.\n     *\n     * @param comparator Used for ordering elements. For\n     * {@link java.lang.Comparable Comparable} objects use\n     * {@link Comparator#naturalOrder()}",
        "* Creates a set containing all of the elements of the specified\n     * Iterable. If c is a {@link SortedSet sorted set} then the same\n     * Comparator is used.\n     *\n     * @param c the elements to initially contain\n     * @throws NullPointerException if the specified collection is null",
        "* Creates a new empty CopyOnWriteArrayNavigableSet using natural order\n     * ordering.\n     * @param <E> Type of elements\n     * @return new CopyOnWriteArrayNavigableSet",
        "* Creates a new CopyOnWriteArrayNavigableSet of the provided elements using\n     * natural order ordering.\n     * @param <E> Type of elements\n     * @param contents initial elements for the set.\n     * @return new CopyOnWriteArrayNavigableSet",
        "* Creates a new empty CopyOnWriteArrayNavigableSet using provided\n     * comparator for ordering.\n     * @param <E> Type of elements\n     * @param comparator The comparator to use for ordering.\n     * @return new CopyOnWriteArrayNavigableSet",
        "* Returns a {@link Spliterator} over the elements in this set in the order\n     * in which these elements were added.\n     *\n     * <p>The {@code Spliterator} reports {@link Spliterator#ORDERED},\n     * {@link Spliterator#NONNULL}, {@link Spliterator#IMMUTABLE},\n     * {@link Spliterator#DISTINCT}, and {@link Spliterator#SIZED}.\n     *\n     * <p>The spliterator provides a snapshot of the state of the set\n     * when the spliterator was constructed. No synchronization is needed while\n     * operating on the spliterator.\n     *\n     * @return a {@code Spliterator} over the elements in this set",
        "* If true then iteration is done in descending order.",
        "* If true then a lower bound relative to the super set.",
        "* If true then we have an upper bound relative to the super set.",
        "* If true then the lower bound is included in the set.",
        "* If true then the upper bound is included in the set.",
        "* The value of the lower bound.",
        "* The value of the upper bound."
    ],
    "functions": [
        "CopyOnWriteArrayNavigableSet",
        "CopyOnWriteArrayNavigableSet",
        "CopyOnWriteArrayNavigableSet",
        "CopyOnWriteArrayNavigableSet",
        "create",
        "create",
        "create",
        "contains",
        "remove",
        "add",
        "add",
        "containsAll",
        "addAll",
        "addAll",
        "iterator",
        "size",
        "removeIf",
        "forEach",
        "retainAll",
        "removeAll",
        "toArray",
        "toArray",
        "clear",
        "spliterator",
        "E",
        "lower",
        "E",
        "floor",
        "E",
        "ceiling",
        "E",
        "higher",
        "E",
        "pollFirst",
        "E",
        "pollLast",
        "descendingSet",
        "descendingIterator",
        "hasNext",
        "E",
        "next",
        "subSet",
        "headSet",
        "tailSet",
        "subSet",
        "headSet",
        "tailSet",
        "comparator",
        "E",
        "first",
        "E",
        "last",
        "BoundedNavigableSet",
        "add",
        "contains",
        "comparator",
        "descendingSet",
        "subSet",
        "headSet",
        "tailSet",
        "subSet",
        "headSet",
        "tailSet",
        "E",
        "inBounds",
        "checkInBounds",
        "descendingIterator",
        "forEach",
        "removeIf",
        "retainAll",
        "removeAll",
        "addAll",
        "containsAll",
        "remove",
        "clear",
        "fromLoc",
        "toLoc",
        "toArray",
        "makeArray",
        "toArray",
        "iterator",
        "makeIterator",
        "size",
        "E",
        "lower",
        "E",
        "floor",
        "E",
        "ceiling",
        "E",
        "higher",
        "E",
        "pollFirst",
        "E",
        "doPollFirst",
        "E",
        "pollLast",
        "E",
        "doPollLast",
        "E",
        "first",
        "E",
        "doFirst",
        "E",
        "last",
        "E",
        "doLast",
        "spliterator"
    ],
    "classes": [
        "CopyOnWriteArrayNavigableSet",
        "BoundedNavigableSet"
    ]
}