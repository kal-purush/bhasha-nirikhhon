{
    "identifiers": [
        "com",
        "netflix",
        "imflibrary",
        "st2067_2",
        "com",
        "netflix",
        "imflibrary",
        "exceptions",
        "IMFException",
        "com",
        "netflix",
        "imflibrary",
        "utils",
        "UUIDHelper",
        "com",
        "netflix",
        "imflibrary",
        "writerTools",
        "utils",
        "ValidationEventHandlerImpl",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "smpte_ra",
        "schemas",
        "st2067_2_2013",
        "org",
        "xml",
        "sax",
        "SAXException",
        "javax",
        "annotation",
        "javax",
        "annotation",
        "concurrent",
        "Immutable",
        "javax",
        "xml",
        "XMLConstants",
        "javax",
        "xml",
        "bind",
        "JAXBContext",
        "javax",
        "xml",
        "bind",
        "JAXBElement",
        "javax",
        "xml",
        "bind",
        "JAXBException",
        "javax",
        "xml",
        "bind",
        "Unmarshaller",
        "javax",
        "xml",
        "transform",
        "stream",
        "StreamSource",
        "javax",
        "xml",
        "validation",
        "Schema",
        "javax",
        "xml",
        "validation",
        "SchemaFactory",
        "javax",
        "xml",
        "validation",
        "Validator",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "net",
        "URISyntaxException",
        "java",
        "util",
        "java",
        "util",
        "Immutable",
        "logger",
        "LoggerFactory",
        "getLogger",
        "imf_core_constraints_schema_path",
        "imf_cpl_schema_path",
        "dcmlTypes_schema_path",
        "xmldig_core_schema_path",
        "compositionPlaylistType",
        "uuid",
        "editRate",
        "virtualTrackMap",
        "virtualTrackResourceList",
        "compositionPlaylistXMLFile",
        "CompositionPlaylist",
        "validateCompositionPlaylistSchema",
        "compositionPlaylistXMLFile",
        "input",
        "compositionPlaylistXMLFile",
        "xmldig_core_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "xmldig_core_schema_path",
        "dcmlTypes_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "dcmlTypes_schema_path",
        "imf_cpl_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "imf_cpl_schema_path",
        "imf_core_constraints_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "imf_core_constraints_schema_path",
        "streamSources",
        "streamSources",
        "xmldig_core_is",
        "streamSources",
        "dcmlTypes_is",
        "streamSources",
        "imf_cpl_is",
        "streamSources",
        "imf_core_constraints_is",
        "schemaFactory",
        "SchemaFactory",
        "newInstance",
        "XMLConstants",
        "W3C_XML_SCHEMA_NS_URI",
        "schema",
        "schemaFactory",
        "newSchema",
        "streamSources",
        "validationEventHandlerImpl",
        "jaxbContext",
        "JAXBContext",
        "newInstance",
        "unmarshaller",
        "jaxbContext",
        "createUnmarshaller",
        "unmarshaller",
        "setEventHandler",
        "validationEventHandlerImpl",
        "unmarshaller",
        "setSchema",
        "schema",
        "compositionPlaylistTypeJAXBElement",
        "unmarshaller",
        "unmarshal",
        "input",
        "validationEventHandlerImpl",
        "hasErrors",
        "validationEventHandlerImpl",
        "toString",
        "compositionPlaylistType",
        "compositionPlaylistTypeJAXBElement",
        "getValue",
        "virtualTrackMap",
        "checkVirtualTracks",
        "compositionPlaylistType",
        "compositionPlaylistType",
        "compositionPlaylistType",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "compositionPlaylistType",
        "getId",
        "editRate",
        "compositionPlaylistType",
        "getEditRate",
        "virtualTrackResourceList",
        "populateVirtualTrackResourceList",
        "sb",
        "sb",
        "append",
        "format",
        "uuid",
        "sb",
        "append",
        "editRate",
        "toString",
        "sb",
        "toString",
        "editRate",
        "Collections",
        "unmodifiableMap",
        "virtualTrackResourceList",
        "Collections",
        "unmodifiableMap",
        "virtualTrackMap",
        "uuid",
        "compositionPlaylistType",
        "virtualTrackMap",
        "segment",
        "compositionPlaylistType",
        "getSegmentList",
        "getSegment",
        "get",
        "sequence",
        "sequence",
        "segment",
        "getSequenceList",
        "getMarkerSequence",
        "sequence",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "sequence",
        "getTrackId",
        "virtualTrackMap",
        "get",
        "uuid",
        "virtualTrack",
        "uuid",
        "SequenceTypeEnum",
        "MarkerSequence",
        "virtualTrackMap",
        "put",
        "uuid",
        "virtualTrack",
        "segment",
        "getSequenceList",
        "getAny",
        "jaxbElement",
        "name",
        "jaxbElement",
        "getName",
        "getLocalPart",
        "sequence",
        "jaxbElement",
        "getValue",
        "sequence",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "sequence",
        "getTrackId",
        "virtualTrackMap",
        "get",
        "uuid",
        "virtualTrack",
        "uuid",
        "SequenceTypeEnum",
        "getSequenceTypeEnum",
        "name",
        "virtualTrackMap",
        "put",
        "uuid",
        "virtualTrack",
        "checkSegments",
        "compositionPlaylistType",
        "virtualTrackMap",
        "virtualTrackMap",
        "compositionPlaylistType",
        "virtualTrackMap",
        "segment",
        "compositionPlaylistType",
        "getSegmentList",
        "getSegment",
        "trackIDs",
        "sequence",
        "sequence",
        "segment",
        "getSequenceList",
        "getMarkerSequence",
        "sequence",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "sequence",
        "getTrackId",
        "trackIDs",
        "add",
        "uuid",
        "virtualTrackMap",
        "get",
        "uuid",
        "segment",
        "getSequenceList",
        "getAny",
        "jaxbElement",
        "name",
        "jaxbElement",
        "getName",
        "getLocalPart",
        "sequence",
        "jaxbElement",
        "getValue",
        "sequence",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "sequence",
        "getTrackId",
        "trackIDs",
        "add",
        "uuid",
        "virtualTrackMap",
        "get",
        "uuid",
        "trackIDs",
        "size",
        "virtualTrackMap",
        "size",
        "virtualTrackResourceList",
        "segment",
        "compositionPlaylistType",
        "getSegmentList",
        "getSegment",
        "sequence",
        "segment",
        "getSequenceList",
        "getAny",
        "jaxbElement",
        "sequence",
        "jaxbElement",
        "getValue",
        "sequence",
        "uuid",
        "UUID",
        "fromString",
        "UUIDHelper",
        "fromUUIDAsURNToUUID",
        "sequence",
        "getTrackId",
        "trackFileResources",
        "resource",
        "sequence",
        "getResourceList",
        "getResource",
        "trackFileResource",
        "resource",
        "trackFileResources",
        "add",
        "trackFileResource",
        "virtualTrackResourceList",
        "get",
        "uuid",
        "virtualTrackResourceList",
        "put",
        "uuid",
        "trackFileResources",
        "virtualTrackResourceList",
        "get",
        "uuid",
        "addAll",
        "trackFileResources",
        "entry",
        "virtualTrackResourceList",
        "entrySet",
        "trackFileResources",
        "entry",
        "getValue",
        "entry",
        "setValue",
        "Collections",
        "unmodifiableList",
        "trackFileResources",
        "virtualTrackResourceList",
        "xmlFile",
        "input",
        "xmlFile",
        "xmldig_core_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "xmldig_core_schema_path",
        "dcmlTypes_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "dcmlTypes_schema_path",
        "imf_cpl_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "imf_cpl_schema_path",
        "imf_core_constraints_is",
        "getResourceAsStream",
        "CompositionPlaylist",
        "imf_core_constraints_schema_path",
        "inputSource",
        "input",
        "streamSources",
        "streamSources",
        "xmldig_core_is",
        "streamSources",
        "dcmlTypes_is",
        "streamSources",
        "imf_cpl_is",
        "streamSources",
        "imf_core_constraints_is",
        "schemaFactory",
        "SchemaFactory",
        "newInstance",
        "XMLConstants",
        "W3C_XML_SCHEMA_NS_URI",
        "schema",
        "schemaFactory",
        "newSchema",
        "streamSources",
        "validator",
        "schema",
        "newValidator",
        "validator",
        "validate",
        "inputSource",
        "Immutable",
        "numerator",
        "denominator",
        "numbers",
        "numbers",
        "size",
        "format",
        "numbers",
        "size",
        "Arrays",
        "toString",
        "numbers",
        "toArray",
        "numerator",
        "numbers",
        "get",
        "denominator",
        "numbers",
        "get",
        "numerator",
        "denominator",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "format",
        "numerator",
        "denominator",
        "sb",
        "toString",
        "SequenceTypeEnum",
        "MarkerSequence",
        "MainImageSequence",
        "MainAudioSequence",
        "SubtitlesSequence",
        "HearingImpairedCaptionsSequence",
        "VisuallyImpairedTextSequence",
        "CommentarySequence",
        "KaraokeSequence",
        "AncillaryDataSequence",
        "name",
        "name",
        "name",
        "name",
        "name",
        "name",
        "MainImageSequence",
        "MainAudioSequence",
        "SubtitlesSequence",
        "HearingImpairedCaptionsSequence",
        "VisuallyImpairedTextSequence",
        "CommentarySequence",
        "KaraokeSequence",
        "AncillaryDataSequence",
        "Immutable",
        "trackID",
        "sequenceTypeEnum",
        "trackID",
        "sequenceTypeEnum",
        "trackID",
        "trackID",
        "sequenceTypeEnum",
        "sequenceTypeEnum",
        "sequenceTypeEnum",
        "args",
        "inputFile",
        "args",
        "compositionPlaylist",
        "inputFile",
        "logger",
        "warn",
        "compositionPlaylist",
        "toString"
    ],
    "literals": [
        "\"/org/smpte_ra/schemas/st2067_2_2013/imf-core-constraints-20130620-pal.xsd\"",
        "\"/org/smpte_ra/schemas/st2067_3_2013/imf-cpl.xsd\"",
        "\"/org/smpte_ra/schemas/st0433_2008/dcmlTypes/dcmlTypes.xsd\"",
        "\"/org/w3/_2000_09/xmldsig/xmldsig-core-schema.xsd\"",
        "\"org.smpte_ra.schemas.st2067_2_2013\"",
        "\"=================== CompositionPlaylist : %s%n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Input list is expected to contain 2 numbers representing numerator and denominator respectively, found %d numbers in list %s\"",
        "\"=================== EditRate =====================\\n\"",
        "\"numerator = %d, denominator = %d%n\"",
        "\"MarkerSequence\"",
        "\"MainImageSequence\"",
        "\"MainAudioSequence\"",
        "\"SubtitlesSequence\"",
        "\"HearingImpairedCaptionsSequence\"",
        "\"VisuallyImpairedTextSequence\"",
        "\"CommentarySequence\"",
        "\"KaraokeSequence\"",
        "\"AncillaryDataSequence\"",
        "\"MainImageSequence\"",
        "\"MainAudioSequence\"",
        "\"SubtitlesSequence\"",
        "\"HearingImpairedCaptionsSequence\"",
        "\"VisuallyImpairedTextSequence\"",
        "\"CommentarySequence\"",
        "\"KaraokeSequence\"",
        "\"AncillaryDataSequence\""
    ],
    "variables": [
        "compositionPlaylistType",
        "uuid",
        "editRate",
        "virtualTrackMap",
        "virtualTrackResourceList",
        "sequence",
        "sequence",
        "sequence",
        "numerator",
        "denominator",
        "name",
        "trackID",
        "sequenceTypeEnum"
    ],
    "comments": [
        "process first segment to form virtual track map",
        "TODO: add error messaging",
        "TODO: add error messaging",
        "TODO: add error messaging",
        "TODO: add error messaging",
        "TODO: add error messaging",
        "make virtualTrackResourceList immutable"
    ],
    "docstrings": [
        "*\n * Copyright 2015 Netflix, Inc.\n *\n *    Licensed under the Apache License, Version 2.0 (the \"License\");\n *    you may not use this file except in compliance with the License.\n *    You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n *    Unless required by applicable law or agreed to in writing, software\n *    distributed under the License is distributed on an \"AS IS\" BASIS,\n *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *    See the License for the specific language governing permissions and\n *    limitations under the License.\n *",
        "* This class represents a thin, immutable wrapper around the XML type 'CompositionPlaylistType' which is defined in Section 6.1,\n * st2067-3:2013. A CompositionPlaylist object can be constructed from an XML file only if it satisfies all the constraints specified\n * in st2067-3:2013 and st2067-2:2013",
        "* Constructor for a {@link com.netflix.imflibrary.st2067_2.CompositionPlaylist CompositionPlaylist} object from a XML file\n     * @param compositionPlaylistXMLFile the input XML file that is conformed to schema and constraints specified in st2067-3:2013 and st2067-2:2013\n     * @throws IOException - any I/O related error is exposed through an IOException\n     * @throws SAXException - exposes any issues with instantiating a {@link javax.xml.validation.Schema Schema} object\n     * @throws JAXBException - any issues in serializing the XML document using JAXB are exposed through a JAXBException\n     * @throws URISyntaxException exposes any issues instantiating a {@link java.net.URI URI} object",
        "* Getter for the composition edit rate as specified in the CompositionPlaylist XML file\n     * @return the edit rate associated with the Composition",
        "* Getter for the lists of type {@link org.smpte_ra.schemas.st2067_2_2013.TrackFileResourceType TrackFileResourceType} indexed by the VirtualTrackID.\n     * The VirtualTrack concept is defined in Section 6.9.3 of st2067-3:2013.\n     * @return Map&lt;UUID,List &lt;{@link org.smpte_ra.schemas.st2067_2_2013.TrackFileResourceType TrackFileResourceType}&gt;&gt;. The UUID key corresponds to VirtualTrackID",
        "* Getter for the virtual track map associated with this CompositionPlaylist\n     * @return {@link java.util.Map Map}&lt;{@link java.util.UUID UUID},{@link com.netflix.imflibrary.st2067_2.CompositionPlaylist.VirtualTrack VirtualTrack}&gt;. The UUID key corresponds to VirtualTrackID",
        "* Getter for the UUID corresponding to this CompositionPlaylist document\n     * @return the uuid of this CompositionPlaylist object",
        "* This class is an immutable implementation of a rational number described as a ratio of two longs and used to hold\n     * non-integer frame rate values",
        "* Constructor for the rational frame rate number.\n         * @param numbers the input list of numbers. The first number in the list is treated as the numerator and the second as\n         *                the denominator. Construction succeeds only if the list has exactly two numbers",
        "* Getter for the frame rate numerator\n         * @return a long value corresponding to the frame rate numerator",
        "* Getter for the frame rate denominator\n         * @return a long value corresponding to the frame rate denominator",
        "* This class enumerates various types of {@link org.smpte_ra.schemas.st2067_2_2013.SequenceType Sequence} that are valid in\n     * CompositionPlaylist document that is compliant with st2067-2:2013. Such types are mostly defined in Section 6.3 of st2067-2:2013",
        "* The class is an immutable implementation of the virtual track concept defined in Section 6.9.3 of st2067-3:2013. A\n     * virtual track is characterized by its UUID and the type of sequence it holds",
        "* Constructor for a VirtualTrack object\n         * @param trackID the UUID associated with this VirtualTrack object\n         * @param sequenceTypeEnum the type of the associated sequence",
        "* Getter for the sequence type associated with this VirtualTrack object\n         * @return the sequence type associated with this VirtualTrack object as an enum"
    ],
    "functions": [
        "CompositionPlaylist",
        "toString",
        "EditRate",
        "getEditRate",
        "getVirtualTrackResourceList",
        "getVirtualTrackMap",
        "UUID",
        "getUUID",
        "checkVirtualTracks",
        "checkSegments",
        "populateVirtualTrackResourceList",
        "validateCompositionPlaylistSchema",
        "EditRate",
        "getNumerator",
        "getDenominator",
        "toString",
        "SequenceTypeEnum",
        "SequenceTypeEnum",
        "getSequenceTypeEnum",
        "VirtualTrack",
        "SequenceTypeEnum",
        "getSequenceTypeEnum",
        "main"
    ],
    "classes": [
        "CompositionPlaylist",
        "EditRate",
        "VirtualTrack"
    ]
}