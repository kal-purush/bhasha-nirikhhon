{
    "identifiers": [
        "microbit",
        "math",
        "clear",
        "i",
        "row",
        "leds",
        "x",
        "row",
        "local_int",
        "x",
        "x",
        "x",
        "img_array",
        "append",
        "x",
        "microbit",
        "Image",
        "img_array",
        "microbit",
        "display",
        "show",
        "img",
        "row",
        "column",
        "level",
        "leds",
        "row",
        "level",
        "row",
        "column",
        "level",
        "scale",
        "leds",
        "led_row",
        "led_column",
        "row",
        "led_row",
        "column",
        "led_column",
        "leds",
        "led_row",
        "level",
        "scale",
        "d2",
        "sd",
        "offset_row",
        "offset_column",
        "leds",
        "row",
        "offset_row",
        "row",
        "offset_row",
        "other_row_index",
        "other_row_index",
        "row",
        "leds",
        "row",
        "sd",
        "leds",
        "other_row_index",
        "column",
        "offset_column",
        "column",
        "offset_column",
        "other_column",
        "other_column",
        "column",
        "our_row",
        "column",
        "other_row",
        "other_column",
        "factor",
        "leds",
        "row",
        "leds",
        "row",
        "column",
        "x",
        "row",
        "row",
        "column",
        "x",
        "factor",
        "columns",
        "fill_value",
        "leds",
        "min",
        "columns",
        "fill_value",
        "columns",
        "row",
        "leds",
        "row",
        "columns",
        "filler",
        "columns",
        "fill_value",
        "leds",
        "min",
        "columns",
        "fill_value",
        "columns",
        "row",
        "filler",
        "leds",
        "row",
        "columns",
        "speed",
        "FloatDisplay",
        "microbit",
        "accelerometer",
        "get_values",
        "x",
        "ax",
        "speed",
        "x",
        "x",
        "y",
        "ay",
        "speed",
        "y",
        "y",
        "fd",
        "clear",
        "fd",
        "show_point",
        "y",
        "x",
        "scale",
        "fd",
        "display",
        "microbit",
        "button_a",
        "is_pressed",
        "speed",
        "max",
        "speed",
        "microbit",
        "button_b",
        "is_pressed",
        "speed",
        "min",
        "speed",
        "balance"
    ],
    "literals": [],
    "variables": [
        "leds",
        "leds",
        "img_array",
        "local_int",
        "x",
        "x",
        "x",
        "img",
        "column",
        "leds",
        "d2",
        "led_column",
        "leds",
        "other_row_index",
        "other_row_index",
        "our_row",
        "other_row",
        "other_column",
        "other_column",
        "our_row",
        "column",
        "leds",
        "row",
        "leds",
        "columns",
        "filler",
        "leds",
        "row",
        "leds",
        "columns",
        "filler",
        "leds",
        "row",
        "x",
        "y",
        "z",
        "speed",
        "fd",
        "ax",
        "ay",
        "az",
        "x",
        "x",
        "y",
        "y",
        "speed",
        "speed"
    ],
    "comments": [
        "Float display class",
        "Array of floating point LED brightness levels (0.0=off, 1.0=on);",
        "rows and columns correspond to the LEDs on the Microbit, e.g.",
        "leds[0][2] maps to the second LED in the first row.",
        "Calculate the squared distance",
        "Set brightness based on the distance to the point,",
        "using scale for scaling",
        "Make sure we keep within the display bounds",
        "Make sure we keep within the display bounds",
        "",
        "z += (az / 1024.0) * speed",
        "print ('x:%4f y:%4f z:%4f ax:%4i ay:%4i az:%4i speed:%4f' % (",
        "x, y, z, ax, ay, az, speed))",
        "microbit.sleep(delay)"
    ],
    "docstrings": [
        "\"\"\" Display a rain drop on the LED display you can balance by\n    moving the microbit.\n\n    You can press the left button to decrease the speed with which\n    the drop moves, the right button to increase the speed.\n\n    If you press the left button long enough, the speed of\n    the drop will become negative, inversing the direction\n    of the drop when moving the microbit.\n\n    MAL 2016-01-17.\n\n\"\"\"",
        "\"\"\" Clear the SmartDisplay.\n        \n        \"\"\"",
        "\"\"\" Write the contents of the SmartDisplay to the\n            MB image buffer and display it.\n\n            The method applies clipping to keep the brightness\n            values within the permitted range.\n\n        \"\"\"",
        "\"\"\" Set a single dot on the display to level.\n\n            Does not clear the other content.\n\n        \"\"\"",
        "\"\"\" This works with floating point row and column and\n            interpolates the brightness.\n            \n            All other display content is cleared.\n            \n        \"\"\"",
        "\"\"\" Add the content of the other SmartDisplay to this one.\n    \n            No overflow checks are done on the values to avoid\n            clipping in case additional operations are applied.\n\n        \"\"\"",
        "\"\"\" Dim the SmartDisplay content by factor.\n        \n        \"\"\"",
        "\"\"\" Scroll the display to the left by the given number\n            of columns (default is one).\n        \n        \"\"\"",
        "\"\"\" Scroll the display to the right by the given number\n            of columns (default is one).\n        \n        \"\"\""
    ],
    "functions": [
        "clear",
        "display",
        "set_dot",
        "show_point",
        "add",
        "dim",
        "scroll_left",
        "scroll_right",
        "balance"
    ],
    "classes": [
        "FloatDisplay"
    ]
}