{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "UnityEngine",
        "StageRecovery",
        "CelestialBody",
        "body",
        "cutoffDensity",
        "stepSize",
        "body",
        "atmosphereDepth",
        "alt",
        "dens",
        "body",
        "GetDensity",
        "FlightGlobals",
        "getStaticPressure",
        "alt",
        "body",
        "body",
        "atmosphereTemperatureCurve",
        "Evaluate",
        "alt",
        "dens",
        "cutoffDensity",
        "alt",
        "stepSize",
        "alt",
        "mass",
        "chuteInfo",
        "RealChute",
        "chuteInfo",
        "mass",
        "calcTerminalVelocity",
        "mass",
        "chuteInfo",
        "tons",
        "CdASum",
        "Sqrt",
        "tons",
        "CdASum",
        "kilograms",
        "rho",
        "cD",
        "area",
        "Sqrt",
        "kilograms",
        "rho",
        "area",
        "cD",
        "rho",
        "cD",
        "velocity",
        "area",
        "calcDynamicPressure",
        "rho",
        "velocity",
        "area",
        "cD",
        "rho",
        "velocity",
        "rho",
        "velocity",
        "velocity"
    ],
    "literals": [],
    "variables": [
        "dens",
        "alt"
    ],
    "comments": [
        "Attempts to find the altitude on the provided CelestialBody that has the provided atmospheric density",
        "This unfortunately doesn't seem to be coming up with the right altitude for Kerbin (~23km, it finds ~27km)",
        "body.atmospherePressureCurve.Evaluate(alt)",
        "Debug.Log(\"[SR] Alt: \" + alt + \" Pres: \" + dens);",
        "Function to estimate the final velocity given a stage's mass and parachute info",
        "if (!RealChute) //This is by trial and error\n                return (63 * Math.Pow(mass / chuteInfo, 0.4));\n            else //This is according to the formulas used by Stupid_Chris in the Real Chute drag calculator program included with Real Chute. Source: https://github.com/StupidChris/RealChute/blob/master/Drag%20Calculator/RealChute%20drag%20calculator/RCDragCalc.cs\n                return Math.Sqrt((8000 * mass * 9.8) / (1.223 * Math.PI * chuteInfo));",
        "thank you ShadowMage!"
    ],
    "docstrings": [],
    "functions": [
        "ComputeCutoffAlt",
        "VelocityEstimate",
        "calcTerminalVelocity",
        "calcTerminalVelocity",
        "calcDragKN",
        "calcDynamicPressure"
    ],
    "classes": [
        "PhysicsHelpers"
    ]
}