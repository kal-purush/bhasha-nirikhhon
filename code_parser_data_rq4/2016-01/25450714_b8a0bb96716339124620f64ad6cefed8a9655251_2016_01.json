{
    "identifiers": [
        "absolute_import",
        "os",
        "kombu",
        "Exchange",
        "loc",
        "ENV_VARS",
        "locals",
        "os",
        "environ",
        "get",
        "loc",
        "loc",
        "ENV_VARS",
        "locals",
        "get",
        "loc",
        "loc",
        "DB_POSTGRES_ENV_POSTGRES_DB",
        "DB_POSTGRES_ENV_POSTGRES_USER",
        "DB_POSTGRES_ENV_POSTGRES_PASSWORD",
        "DB_POSTGRES_PORT_5432_TCP_ADDR",
        "DB_POSTGRES_PORT_5432_TCP_PORT",
        "AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY",
        "AWS_BUCKET_NAME",
        "DEFAULT_FILE_STORAGE",
        "DB_REDIS_PORT_6379_TCP_ADDR",
        "DB_REDIS_PORT_6379_TCP_PORT",
        "DB_REDIS_PORT_6379_TCP_ADDR",
        "DB_REDIS_PORT_6379_TCP_PORT",
        "BROKER_URL",
        "CELERY_DEFAULT_QUEUE",
        "Exchange",
        "CELERY_DEFAULT_QUEUE",
        "routing_key",
        "CELERY_DEFAULT_QUEUE"
    ],
    "literals": [
        "'DB_POSTGRES_PORT_5432_TCP_ADDR'",
        "'DB_POSTGRES_PORT_5432_TCP_PORT'",
        "'DB_POSTGRES_ENV_POSTGRES_DB'",
        "'DB_POSTGRES_ENV_POSTGRES_USER'",
        "'DB_POSTGRES_ENV_POSTGRES_PASSWORD'",
        "'DB_REDIS_PORT_6379_TCP_ADDR'",
        "'DB_REDIS_PORT_6379_TCP_PORT'",
        "\"%s Not defined as env variables\"",
        "'default'",
        "'ENGINE'",
        "'django.db.backends.postgresql_psycopg2'",
        "'NAME'",
        "'USER'",
        "'PASSWORD'",
        "'HOST'",
        "'PORT'",
        "\"your-key\"",
        "\"your-secret-key\"",
        "\"your-S3-bucket\"",
        "'django.core.files.storage.FileSystemStorage'",
        "'default'",
        "'config.urls'",
        "'default'",
        "'BACKEND'",
        "'redis_cache.cache.RedisCache'",
        "'LOCATION'",
        "\"%s:%s\"",
        "'OPTIONS'",
        "'DB'",
        "'TIMEOUT'",
        "\"redis://%s:%s/1\"",
        "'seed-dev'"
    ],
    "variables": [
        "ENV_VARS",
        "loc",
        "DATABASES",
        "AWS_ACCESS_KEY_ID",
        "AWS_SECRET_ACCESS_KEY",
        "AWS_BUCKET_NAME",
        "AWS_UPLOAD_CLIENT_KEY",
        "AWS_UPLOAD_CLIENT_SECRET_KEY",
        "AWS_STORAGE_BUCKET_NAME",
        "DEFAULT_FILE_STORAGE",
        "STATICFILES_STORAGE",
        "DOMAIN_URLCONFS",
        "DOMAIN_URLCONFS",
        "CACHES",
        "BROKER_URL",
        "CELERY_RESULT_BACKEND",
        "CELERY_DEFAULT_QUEUE",
        "CELERY_QUEUES"
    ],
    "comments": [
        "Gather all the settings from the docker environment variables",
        "postgres DB config",
        "AWS S3 config",
        "Different names for same vars, used by django-ajax-uploader",
        "choice of DEFAULT_FILE_STORAGE (s3 or filesystem)",
        "DEFAULT_FILE_STORAGE = 'storages.backends.s3boto.S3BotoStorage'",
        "redis cache config",
        "with AWS ElastiCache redis, the LOCATION setting looks something like:",
        "'xx-yy-zzrr0aax9a.ntmprk.0001.usw2.cache.amazonaws.com:6379'",
        "redis celery/message broker config",
        "BROKER_URL with AWS ElastiCache redis looks something like:",
        "'redis://xx-yy-zzrr0aax9a.ntmprk.0001.usw2.cache.amazonaws.com:6379/1'"
    ],
    "docstrings": [
        "\"\"\"\n:copyright (c) 2014 - 2015, The Regents of the University of California, through Lawrence Berkeley National Laboratory (subject to receipt of any required approvals from the U.S. Department of Energy) and contributors. All rights reserved.  # NOQA\n:author\n:license: see LICENSE for more details.\n\nseed local_untracked_docker.py\n\n    For this to work with dev settings:\n        - run with dev settings (add this line to the .bashrc):\n            $ export DJANGO_SETTINGS_MODULE=config.settings.dev\n            or\n            $ ./manage.py runserver --settings=config.settings.dev\n        - add your setting to the DATABASES, AWS S3 config,\n            CACHES, and BROKER_URL\n            i.e. everything here starting with 'your-'\n    For local dev, all these services can run locally on localhost or 127.0.0.1 except for S3.\n\"\"\""
    ],
    "functions": [],
    "classes": []
}