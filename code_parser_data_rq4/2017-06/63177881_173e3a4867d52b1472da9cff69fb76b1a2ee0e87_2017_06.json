{
    "identifiers": [
        "DefaultServiceNames",
        "ITokenService",
        "RequestContext",
        "UserContext",
        "AbstractExpressAuthentication",
        "ConfigurationProperty",
        "Conventions",
        "IDynamicProperty",
        "require",
        "ConfigurationProperty",
        "Conventions",
        "AbstractExpressAuthentication",
        "Conventions",
        "resolve",
        "reject",
        "resolve",
        "unirest",
        "openIdConfigUrl",
        "res",
        "res",
        "reject",
        "res",
        "res",
        "resolve",
        "accessToken",
        "resolve",
        "reject",
        "unirest",
        "accessToken",
        "res",
        "res",
        "reject",
        "res",
        "resolve",
        "res",
        "ctx",
        "accessToken",
        "ctx",
        "DefaultServiceNames",
        "tokens",
        "accessToken",
        "ctx",
        "token",
        "ctx",
        "accessToken",
        "accessToken",
        "user",
        "token",
        "ctx",
        "user",
        "user",
        "err",
        "ctx",
        "err",
        "accessToken"
    ],
    "literals": [
        "'../../configurations/globals/system'",
        "'../../di/annotations'",
        "'../../defaults/services'",
        "'../requestContext'",
        "'./abstractExpressAuthentication'",
        "'../../configurations/dependencies/annotations'",
        "'../../utils/conventions'",
        "'../../configurations/dynamicProperty'",
        "'unirest'",
        "\"string\"",
        "string",
        "string",
        "string",
        "'http://localhost:5100'",
        "'bearer'",
        "${this.authority.value}/.well-known/openid-configuration",
        "string",
        "Bearer ${accessToken}",
        "string",
        "\"Bearer authentication: Invalid jwtToken : \"",
        "'%j'",
        "\"Bearer authentication: Error with jwtToken \""
    ],
    "variables": [
        "unirest",
        "openIdConfigUrl",
        "tokens",
        "token",
        "user"
    ],
    "comments": [
        "No token found",
        "get user info from STS",
        "Return the current user with its scopes and tenant"
    ],
    "docstrings": [],
    "functions": [
        "ensureUserInfoEndpointLoaded",
        "getUserInfoAsync",
        "bearerAuthentication"
    ],
    "classes": [
        "ExpressStsAuthentication"
    ]
}