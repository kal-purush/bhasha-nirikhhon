{
    "identifiers": [
        "org",
        "graalvm",
        "compiler",
        "loop",
        "phases",
        "org",
        "graalvm",
        "compiler",
        "debug",
        "Debug",
        "org",
        "graalvm",
        "compiler",
        "debug",
        "DebugCounter",
        "org",
        "graalvm",
        "compiler",
        "graph",
        "Graph",
        "org",
        "graalvm",
        "compiler",
        "loop",
        "LoopEx",
        "org",
        "graalvm",
        "compiler",
        "loop",
        "LoopPolicies",
        "org",
        "graalvm",
        "compiler",
        "loop",
        "LoopsData",
        "org",
        "graalvm",
        "compiler",
        "nodes",
        "StructuredGraph",
        "org",
        "graalvm",
        "compiler",
        "phases",
        "common",
        "CanonicalizerPhase",
        "org",
        "graalvm",
        "compiler",
        "phases",
        "common",
        "util",
        "HashSetNodeEventListener",
        "org",
        "graalvm",
        "compiler",
        "phases",
        "tiers",
        "PhaseContext",
        "PARTIAL_UNROLL_LOOPS",
        "Debug",
        "counter",
        "canonicalizer",
        "policies",
        "canonicalizer",
        "policies",
        "canonicalizer",
        "canonicalizer",
        "Override",
        "SuppressWarnings",
        "graph",
        "context",
        "graph",
        "hasLoops",
        "listener",
        "nes",
        "graph",
        "trackNodeEvents",
        "listener",
        "changed",
        "changed",
        "dataCounted",
        "graph",
        "dataCounted",
        "detectedCountedLoops",
        "changed",
        "loop",
        "dataCounted",
        "countedLoops",
        "LoopTransformations",
        "isUnrollableLoop",
        "loop",
        "getPolicies",
        "shouldPartiallyUnroll",
        "loop",
        "loop",
        "loopBegin",
        "isSimpleLoop",
        "LoopTransformations",
        "insertPrePostLoops",
        "loop",
        "graph",
        "changed",
        "changed",
        "LoopTransformations",
        "partialUnroll",
        "loop",
        "graph",
        "PARTIAL_UNROLL_LOOPS",
        "increment",
        "dataCounted",
        "deleteUnusedNodes",
        "listener",
        "getNodes",
        "isEmpty",
        "canonicalizer",
        "applyIncremental",
        "graph",
        "context",
        "listener",
        "getNodes",
        "listener",
        "getNodes",
        "clear",
        "Override"
    ],
    "literals": [
        "\"LoopPartialUnroll\"",
        "\"try\""
    ],
    "variables": [
        "canonicalizer"
    ],
    "comments": [
        "First perform the pre/post transformation and do the partial",
        "unroll when we come around again."
    ],
    "docstrings": [
        "* Copyright (c) 2012, 2016, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions."
    ],
    "functions": [
        "LoopPartialUnrollPhase",
        "run",
        "checkContract"
    ],
    "classes": [
        "LoopPartialUnrollPhase"
    ]
}