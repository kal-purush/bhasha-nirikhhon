{
    "identifiers": [
        "cryptography",
        "fernet",
        "Fernet",
        "crypto",
        "derive_fallback_fernet_keys",
        "FallbackCrypto",
        "FernetEncryption",
        "NoEncryption",
        "single_password_crypto_factory",
        "single_password_crypto_factory",
        "pws",
        "user_id",
        "single_password_crypto_factory",
        "pws",
        "user_id",
        "key",
        "key",
        "NoEncryption",
        "FernetEncryption",
        "Fernet",
        "key",
        "encode",
        "FallbackCrypto",
        "make_single_key_crypto",
        "k",
        "k",
        "derive_fallback_fernet_keys",
        "pws",
        "user_id",
        "current_crypto",
        "encrypt",
        "data",
        "encrypted_data_current",
        "data",
        "current_crypto",
        "decrypt",
        "encrypted_data_current",
        "data",
        "old_crypto",
        "encrypt",
        "data",
        "encrypted_data_current",
        "data",
        "old_crypto",
        "decrypt",
        "encrypted_data_old",
        "data",
        "current_crypto",
        "decrypt",
        "multi_fernet_crypto",
        "encrypt",
        "data",
        "data",
        "multi_fernet_crypto",
        "decrypt",
        "encrypted_data_current",
        "data",
        "multi_fernet_crypto",
        "decrypt",
        "encrypted_data_old",
        "data",
        "multi_fernet_crypto",
        "decrypt",
        "data",
        "data"
    ],
    "literals": [
        "u'currentpassword'",
        "u'oldpassword'",
        "u'4e322fa200fffd0001000001'",
        "'ascii'",
        "b'ayy lmao'"
    ],
    "variables": [
        "pws",
        "user_id",
        "current_crypto",
        "old_crypto",
        "multi_fernet_crypto",
        "data",
        "encrypted_data_current",
        "encrypted_data_old"
    ],
    "comments": [
        "This must be Unicode, so we use the `u` prefix to support py2.",
        "Data encrypted with the current key.",
        "Data encrypted with the old key.",
        "The single fernet with the first key should be able to decrypt the",
        "multi-fernet's encrypted data.",
        "Multi should be able decrypt anything encrypted with either key.",
        "Unencrypted data should be returned unchanged."
    ],
    "docstrings": [
        "\"\"\"\nTests for notebook encryption utilities.\n\"\"\""
    ],
    "functions": [
        "test_fernet_derivation",
        "make_single_key_crypto"
    ],
    "classes": []
}