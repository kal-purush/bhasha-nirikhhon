{
    "identifiers": [
        "subprocess",
        "check_output",
        "Popen",
        "shlex",
        "split",
        "uuid",
        "uuid4",
        "random",
        "randint",
        "threading",
        "click",
        "os",
        "i_name",
        "i_count",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "abspath",
        "command",
        "format",
        "dname",
        "i_name",
        "i_count",
        "Popen",
        "split",
        "new_command",
        "stdin",
        "stdout",
        "stderr",
        "process",
        "communicate",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "abspath",
        "command",
        "format",
        "dname",
        "Popen",
        "split",
        "new_command",
        "stdin",
        "stdout",
        "stderr",
        "process",
        "communicate",
        "check_output",
        "command",
        "shell",
        "prc",
        "split",
        "sock",
        "threads",
        "threads",
        "command",
        "format",
        "sock",
        "randint",
        "uuid4",
        "new_command",
        "Popen",
        "split",
        "new_command",
        "stdin",
        "stdout",
        "stderr",
        "process",
        "communicate",
        "threads",
        "command",
        "format",
        "sock",
        "randint",
        "uuid4",
        "new_command",
        "Popen",
        "split",
        "new_command",
        "stdin",
        "stdout",
        "stderr",
        "pmm_count",
        "i_name",
        "i_count",
        "threads",
        "pmm_framework_wipe_client",
        "pmm_framework_add_client",
        "i_name",
        "i_count",
        "getting_instance_socket",
        "sock",
        "sockets",
        "threads",
        "threading",
        "target",
        "adding_instances",
        "sock",
        "threads",
        "name",
        "i",
        "i",
        "pmm_count",
        "worker",
        "start",
        "worker",
        "workers",
        "worker",
        "join",
        "worker",
        "workers",
        "threads",
        "i",
        "pmm_count",
        "adding_instances",
        "sock",
        "threads",
        "ctx",
        "param",
        "value",
        "value",
        "ctx",
        "resilient_parsing",
        "click",
        "echo",
        "ctx",
        "exit",
        "click",
        "command",
        "click",
        "option",
        "is_flag",
        "callback",
        "print_version",
        "expose_value",
        "is_eager",
        "help",
        "click",
        "option",
        "nargs",
        "help",
        "click",
        "option",
        "nargs",
        "required",
        "help",
        "click",
        "option",
        "nargs",
        "required",
        "help",
        "click",
        "option",
        "nargs",
        "required",
        "help",
        "threads",
        "instance_type",
        "instance_count",
        "pmm_instance_count",
        "threads",
        "instance_type",
        "instance_count",
        "pmm_instance_count",
        "runner",
        "pmm_instance_count",
        "instance_type",
        "instance_count",
        "threads",
        "run_all"
    ],
    "literals": [
        "\"{}/pmm-framework.sh --addclient={},{}\"",
        "\"{}/pmm-framework.sh --wipe-clients\"",
        "\"sudo pmm-admin list | grep 'mysql:metrics' | sed 's|.*(||;s|)||'\"",
        "\"sudo pmm-admin add mysql --user=root --socket={} --service-port={} {} \"",
        "\"Running -> \"",
        "\"sudo pmm-admin add mysql --user=root --socket={} --service-port={} {} \"",
        "\"Running -> \"",
        "\"thread_\"",
        "\"PMM Stress Test Suite Version 1.0\"",
        "'--version'",
        "\"Version information.\"",
        "\"--threads\"",
        "\"Give non-zero number to enable multi-thread run!\"",
        "\"--instance_type\"",
        "\"Passing instance type(ps, ms, md, pxc, mo) to pmm-framework.sh\"",
        "\"--instance_count\"",
        "\"How many physical instances you want to start? (Passing to pmm-framework.sh)\"",
        "\"--pmm_instance_count\"",
        "\"How many pmm instances you want to add with randomized names from each physical instance? (Passing to pmm-admin)\"",
        "\"ERROR: you must give an option, run with --help for available options\"",
        "\"__main__\""
    ],
    "variables": [
        "abspath",
        "dname",
        "command",
        "new_command",
        "process",
        "abspath",
        "dname",
        "command",
        "new_command",
        "process",
        "command",
        "prc",
        "command",
        "new_command",
        "process",
        "command",
        "new_command",
        "process",
        "sockets",
        "workers"
    ],
    "comments": [
        "",
        "Main logic goes here, below",
        "Not a multi-threaded run",
        "For obtaining socket file path for each added instances",
        "Return: the list of sockets",
        "Should Not be a multi-threaded run -> see comment at the end of function",
        "Untill pmm-admin is not thread-safe there is no need to run with true multi-thread;",
        "process.communicate()",
        "Enabling Threads",
        "Worker count is going to be equal to passed pmm_count",
        "",
        "Command line things are here, this is separate from main logic of script.",
        "default=2,",
        ""
    ],
    "docstrings": [
        "\"\"\"\n    Will call pmm-framework.sh script with given instance name and count.\n    \"\"\"",
        "\"\"\"\n    For wiping added instances from pmm + to shutdown previosly started instances(pysically)\n    \"\"\"",
        "\"\"\"\n    Will try to add instances with randomized name, based on already added instances\n    \"\"\"",
        "\"\"\"\n    Main runner function; using Threading;\n    \"\"\""
    ],
    "functions": [
        "pmm_framework_add_client",
        "pmm_framework_wipe_client",
        "getting_instance_socket",
        "adding_instances",
        "runner",
        "print_version",
        "run_all"
    ],
    "classes": []
}