{
    "identifiers": [
        "Linq",
        "IO",
        "Text",
        "Text",
        "RegularExpressions",
        "Collections",
        "Collections",
        "Generic",
        "Collections",
        "ObjectModel",
        "Runtime",
        "Serialization",
        "Newtonsoft",
        "Json",
        "Newtonsoft",
        "Json",
        "Converters",
        "ComponentModel",
        "DataAnnotations",
        "SymphonyOSS",
        "RestApiClient",
        "Generated",
        "OpenApi",
        "AgentApi",
        "Model",
        "DataContract",
        "V2BaseMessage",
        "IEquatable",
        "ConnectionRequestMessage",
        "IValidatableObject",
        "JsonConstructorAttribute",
        "Id",
        "Timestamp",
        "V2messageType",
        "StreamId",
        "RequestingUserId",
        "TargetUserId",
        "FirstRequestedAt",
        "UpdatedAt",
        "RequestCounter",
        "Status",
        "Timestamp",
        "InvalidDataException",
        "Timestamp",
        "Timestamp",
        "V2messageType",
        "InvalidDataException",
        "V2messageType",
        "V2messageType",
        "StreamId",
        "InvalidDataException",
        "StreamId",
        "StreamId",
        "Id",
        "Id",
        "RequestingUserId",
        "RequestingUserId",
        "TargetUserId",
        "TargetUserId",
        "FirstRequestedAt",
        "FirstRequestedAt",
        "UpdatedAt",
        "UpdatedAt",
        "RequestCounter",
        "RequestCounter",
        "Status",
        "Status",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "DataMember",
        "Name",
        "EmitDefaultValue",
        "StringBuilder",
        "sb",
        "Append",
        "sb",
        "Append",
        "Append",
        "Id",
        "Append",
        "sb",
        "Append",
        "Append",
        "Timestamp",
        "Append",
        "sb",
        "Append",
        "Append",
        "V2messageType",
        "Append",
        "sb",
        "Append",
        "Append",
        "StreamId",
        "Append",
        "sb",
        "Append",
        "Append",
        "RequestingUserId",
        "Append",
        "sb",
        "Append",
        "Append",
        "TargetUserId",
        "Append",
        "sb",
        "Append",
        "Append",
        "FirstRequestedAt",
        "Append",
        "sb",
        "Append",
        "Append",
        "UpdatedAt",
        "Append",
        "sb",
        "Append",
        "Append",
        "RequestCounter",
        "Append",
        "sb",
        "Append",
        "Append",
        "Status",
        "Append",
        "sb",
        "Append",
        "sb",
        "ToString",
        "JsonConvert",
        "SerializeObject",
        "Formatting",
        "Indented",
        "obj",
        "Equals",
        "obj",
        "ConnectionRequestMessage",
        "ConnectionRequestMessage",
        "other",
        "other",
        "Id",
        "other",
        "Id",
        "Id",
        "Id",
        "Equals",
        "other",
        "Id",
        "Timestamp",
        "other",
        "Timestamp",
        "Timestamp",
        "Timestamp",
        "Equals",
        "other",
        "Timestamp",
        "V2messageType",
        "other",
        "V2messageType",
        "V2messageType",
        "V2messageType",
        "Equals",
        "other",
        "V2messageType",
        "StreamId",
        "other",
        "StreamId",
        "StreamId",
        "StreamId",
        "Equals",
        "other",
        "StreamId",
        "RequestingUserId",
        "other",
        "RequestingUserId",
        "RequestingUserId",
        "RequestingUserId",
        "Equals",
        "other",
        "RequestingUserId",
        "TargetUserId",
        "other",
        "TargetUserId",
        "TargetUserId",
        "TargetUserId",
        "Equals",
        "other",
        "TargetUserId",
        "FirstRequestedAt",
        "other",
        "FirstRequestedAt",
        "FirstRequestedAt",
        "FirstRequestedAt",
        "Equals",
        "other",
        "FirstRequestedAt",
        "UpdatedAt",
        "other",
        "UpdatedAt",
        "UpdatedAt",
        "UpdatedAt",
        "Equals",
        "other",
        "UpdatedAt",
        "RequestCounter",
        "other",
        "RequestCounter",
        "RequestCounter",
        "RequestCounter",
        "Equals",
        "other",
        "RequestCounter",
        "Status",
        "other",
        "Status",
        "Status",
        "Status",
        "Equals",
        "other",
        "Status",
        "Id",
        "hash",
        "hash",
        "Id",
        "GetHashCode",
        "Timestamp",
        "hash",
        "hash",
        "Timestamp",
        "GetHashCode",
        "V2messageType",
        "hash",
        "hash",
        "V2messageType",
        "GetHashCode",
        "StreamId",
        "hash",
        "hash",
        "StreamId",
        "GetHashCode",
        "RequestingUserId",
        "hash",
        "hash",
        "RequestingUserId",
        "GetHashCode",
        "TargetUserId",
        "hash",
        "hash",
        "TargetUserId",
        "GetHashCode",
        "FirstRequestedAt",
        "hash",
        "hash",
        "FirstRequestedAt",
        "GetHashCode",
        "UpdatedAt",
        "hash",
        "hash",
        "UpdatedAt",
        "GetHashCode",
        "RequestCounter",
        "hash",
        "hash",
        "RequestCounter",
        "GetHashCode",
        "Status",
        "hash",
        "hash",
        "Status",
        "GetHashCode",
        "hash",
        "ValidationResult",
        "ValidationContext",
        "validationContext"
    ],
    "literals": [
        "\"Timestamp is a required property for ConnectionRequestMessage and cannot be null\"",
        "\"V2messageType is a required property for ConnectionRequestMessage and cannot be null\"",
        "\"StreamId is a required property for ConnectionRequestMessage and cannot be null\"",
        "\"id\"",
        "\"timestamp\"",
        "\"v2messageType\"",
        "\"streamId\"",
        "\"requestingUserId\"",
        "\"targetUserId\"",
        "\"firstRequestedAt\"",
        "\"updatedAt\"",
        "\"requestCounter\"",
        "\"status\"",
        "\"class ConnectionRequestMessage {\\n\"",
        "\"  Id: \"",
        "\"\\n\"",
        "\"  Timestamp: \"",
        "\"\\n\"",
        "\"  V2messageType: \"",
        "\"\\n\"",
        "\"  StreamId: \"",
        "\"\\n\"",
        "\"  RequestingUserId: \"",
        "\"\\n\"",
        "\"  TargetUserId: \"",
        "\"\\n\"",
        "\"  FirstRequestedAt: \"",
        "\"\\n\"",
        "\"  UpdatedAt: \"",
        "\"\\n\"",
        "\"  RequestCounter: \"",
        "\"\\n\"",
        "\"  Status: \"",
        "\"\\n\"",
        "\"}\\n\""
    ],
    "variables": [
        "Id",
        "Timestamp",
        "V2messageType",
        "StreamId",
        "RequestingUserId",
        "TargetUserId",
        "FirstRequestedAt",
        "UpdatedAt",
        "RequestCounter",
        "Status",
        "sb",
        "hash"
    ],
    "comments": [
        "Licensed to the Symphony Software Foundation (SSF) under one",
        "or more contributor license agreements.  See the NOTICE file",
        "distributed with this work for additional information",
        "regarding copyright ownership.  The SSF licenses this file",
        "to you under the Apache License, Version 2.0 (the",
        "\"License\"); you may not use this file except in compliance",
        "with the License.  You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing,",
        "software distributed under the License is distributed on an",
        "\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
        "KIND, either express or implied.  See the License for the",
        "specific language governing permissions and limitations",
        "under the License.",
        "Generated when a connection request is sent.",
        "</summary>",
        "Initializes a new instance of the <see cref=\"ConnectionRequestMessage\" /> class.",
        "</summary>",
        "Initializes a new instance of the <see cref=\"ConnectionRequestMessage\" /> class.",
        "</summary>",
        "<param name=\"Id\">The messageId is assigned by the ingestor service when a message is sent..</param>",
        "<param name=\"Timestamp\">Timestamp (required).</param>",
        "<param name=\"V2messageType\">V2messageType (required).</param>",
        "<param name=\"StreamId\">StreamId (required).</param>",
        "<param name=\"RequestingUserId\">RequestingUserId.</param>",
        "<param name=\"TargetUserId\">TargetUserId.</param>",
        "<param name=\"FirstRequestedAt\">FirstRequestedAt.</param>",
        "<param name=\"UpdatedAt\">UpdatedAt.</param>",
        "<param name=\"RequestCounter\">RequestCounter.</param>",
        "<param name=\"Status\">Status.</param>",
        "to ensure \"Timestamp\" is required (not null)",
        "to ensure \"V2messageType\" is required (not null)",
        "to ensure \"StreamId\" is required (not null)",
        "The messageId is assigned by the ingestor service when a message is sent.",
        "</summary>",
        "<value>The messageId is assigned by the ingestor service when a message is sent.</value>",
        "Gets or Sets Timestamp",
        "</summary>",
        "Gets or Sets V2messageType",
        "</summary>",
        "Gets or Sets StreamId",
        "</summary>",
        "Gets or Sets RequestingUserId",
        "</summary>",
        "Gets or Sets TargetUserId",
        "</summary>",
        "Gets or Sets FirstRequestedAt",
        "</summary>",
        "Gets or Sets UpdatedAt",
        "</summary>",
        "Gets or Sets RequestCounter",
        "</summary>",
        "Gets or Sets Status",
        "</summary>",
        "Returns the string presentation of the object",
        "</summary>",
        "<returns>String presentation of the object</returns>",
        "Returns the JSON string presentation of the object",
        "</summary>",
        "<returns>JSON string presentation of the object</returns>",
        "Returns true if objects are equal",
        "</summary>",
        "<param name=\"obj\">Object to be compared</param>",
        "<returns>Boolean</returns>",
        "credit: http://stackoverflow.com/a/10454552/677735",
        "Returns true if ConnectionRequestMessage instances are equal",
        "</summary>",
        "<param name=\"other\">Instance of ConnectionRequestMessage to be compared</param>",
        "<returns>Boolean</returns>",
        "credit: http://stackoverflow.com/a/10454552/677735",
        "Gets the hash code",
        "</summary>",
        "<returns>Hash code</returns>",
        "credit: http://stackoverflow.com/a/263416/677735",
        "Overflow is fine, just wrap",
        "Suitable nullity checks etc, of course :)"
    ],
    "docstrings": [
        "* Agent API\n *\n * This document refers to Symphony API calls to send and receive messages and content. They need the on-premise Agent installed to perform decryption/encryption of content.  - sessionToken and keyManagerToken can be obtained by calling the authenticationAPI on the symphony back end and the key manager respectively. Refer to the methods described in authenticatorAPI.yaml. - Actions are defined to be atomic, ie will succeed in their entirety or fail and have changed nothing. - If it returns a 40X status then it will have sent no message to any stream even if a request to aome subset of the requested streams would have succeeded. - If this contract cannot be met for any reason then this is an error and the response code will be 50X. - MessageML is a markup language for messages. See reference here: https://developers.symphony.com/documentation/message_format_reference \n *\n * OpenAPI spec version: current\n * \n * Generated by: https://github.com/swagger-api/swagger-codegen.git",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ConnectionRequestMessage",
        "ConnectionRequestMessage",
        "ToString",
        "ToJson",
        "Equals",
        "Equals",
        "GetHashCode",
        "Validate"
    ],
    "classes": [
        "ConnectionRequestMessage"
    ]
}