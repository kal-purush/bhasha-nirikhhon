{
    "identifiers": [
        "Electron",
        "listener",
        "listener",
        "listener",
        "listener",
        "n",
        "args",
        "listener",
        "listener",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "Electron",
        "listener",
        "accessibilitySupportEnabled",
        "listener",
        "accessibilitySupportEnabled",
        "listener",
        "accessibilitySupportEnabled",
        "listener",
        "accessibilitySupportEnabled",
        "listener",
        "hasVisibleWindows",
        "listener",
        "hasVisibleWindows",
        "listener",
        "hasVisibleWindows",
        "listener",
        "hasVisibleWindows",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "webContents",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "webContents",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "webContents",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "webContents",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "userInfo",
        "listener",
        "userInfo",
        "listener",
        "userInfo",
        "listener",
        "userInfo",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "webContents",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "webContents",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "webContents",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "webContents",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "path",
        "listener",
        "path",
        "listener",
        "path",
        "listener",
        "path",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "exitCode",
        "listener",
        "exitCode",
        "listener",
        "exitCode",
        "listener",
        "exitCode",
        "listener",
        "launchInfo",
        "listener",
        "launchInfo",
        "listener",
        "launchInfo",
        "listener",
        "launchInfo",
        "listener",
        "webContents",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "webContents",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "webContents",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "webContents",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "webContents",
        "listener",
        "webContents",
        "listener",
        "webContents",
        "listener",
        "webContents",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "path",
        "exitCode",
        "path",
        "options",
        "callback",
        "error",
        "icon",
        "path",
        "callback",
        "error",
        "icon",
        "options",
        "name",
        "options",
        "callback",
        "result",
        "protocol",
        "path",
        "args",
        "callback",
        "argv",
        "workingDirectory",
        "options",
        "protocol",
        "path",
        "args",
        "options",
        "id",
        "protocol",
        "path",
        "args",
        "count",
        "categories",
        "settings",
        "path",
        "args",
        "name",
        "name",
        "path",
        "userInfo",
        "webpageURL",
        "tasks",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "releaseNotes",
        "releaseName",
        "releaseDate",
        "updateURL",
        "listener",
        "releaseNotes",
        "releaseName",
        "releaseDate",
        "updateURL",
        "listener",
        "releaseNotes",
        "releaseName",
        "releaseDate",
        "updateURL",
        "listener",
        "releaseNotes",
        "releaseName",
        "releaseDate",
        "updateURL",
        "listener",
        "listener",
        "listener",
        "listener",
        "url",
        "requestHeaders",
        "EventEmitter",
        "options",
        "options",
        "color",
        "bounds",
        "EventEmitter",
        "listener",
        "command",
        "listener",
        "command",
        "listener",
        "command",
        "listener",
        "command",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "title",
        "listener",
        "title",
        "listener",
        "title",
        "listener",
        "title",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "direction",
        "listener",
        "direction",
        "listener",
        "direction",
        "listener",
        "direction",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "options",
        "path",
        "id",
        "webContents",
        "name",
        "callback",
        "image",
        "rect",
        "callback",
        "image",
        "flag",
        "message",
        "callback",
        "message",
        "url",
        "options",
        "path",
        "displayName",
        "flag",
        "level",
        "relativeLevel",
        "options",
        "aspectRatio",
        "extraSize",
        "autoHide",
        "hide",
        "bounds",
        "animate",
        "browserView",
        "closable",
        "bounds",
        "animate",
        "enable",
        "width",
        "height",
        "animate",
        "edited",
        "focusable",
        "flag",
        "fullscreenable",
        "hasShadow",
        "icon",
        "ignore",
        "flag",
        "maximizable",
        "width",
        "height",
        "menu",
        "visible",
        "minimizable",
        "width",
        "height",
        "movable",
        "overlay",
        "description",
        "parent",
        "x",
        "y",
        "animate",
        "progress",
        "options",
        "filename",
        "resizable",
        "offsetY",
        "offsetX",
        "width",
        "height",
        "animate",
        "skip",
        "buttons",
        "region",
        "toolTip",
        "title",
        "touchBar",
        "visible",
        "message",
        "EventEmitter",
        "code",
        "message",
        "targetOrigin",
        "EventEmitter",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "error",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "statusCode",
        "method",
        "redirectUrl",
        "responseHeaders",
        "listener",
        "statusCode",
        "method",
        "redirectUrl",
        "responseHeaders",
        "listener",
        "statusCode",
        "method",
        "redirectUrl",
        "responseHeaders",
        "listener",
        "statusCode",
        "method",
        "redirectUrl",
        "responseHeaders",
        "listener",
        "response",
        "listener",
        "response",
        "listener",
        "response",
        "listener",
        "response",
        "options",
        "chunk",
        "encoding",
        "callback",
        "name",
        "name",
        "name",
        "value",
        "chunk",
        "encoding",
        "callback",
        "format",
        "format",
        "format",
        "data",
        "title",
        "url",
        "text",
        "markup",
        "image",
        "text",
        "text",
        "resultFilePath",
        "callback",
        "resultFilePath",
        "callback",
        "categories",
        "callback",
        "value",
        "percentage",
        "options",
        "callback",
        "options",
        "callback",
        "callback",
        "resultFilePath",
        "callback",
        "resultFilePath",
        "EventEmitter",
        "listener",
        "cookie",
        "cause",
        "removed",
        "listener",
        "cookie",
        "cause",
        "removed",
        "listener",
        "cookie",
        "cause",
        "removed",
        "listener",
        "cookie",
        "cause",
        "removed",
        "callback",
        "callback",
        "error",
        "cookies",
        "url",
        "name",
        "callback",
        "details",
        "callback",
        "error",
        "key",
        "value",
        "uploadToServer",
        "options",
        "EventEmitter",
        "listener",
        "reason",
        "listener",
        "reason",
        "listener",
        "reason",
        "listener",
        "reason",
        "listener",
        "method",
        "listener",
        "method",
        "listener",
        "method",
        "listener",
        "method",
        "protocolVersion",
        "method",
        "commandParams",
        "callback",
        "error",
        "result",
        "options",
        "callback",
        "error",
        "sources",
        "browserWindow",
        "options",
        "callback",
        "options",
        "callback",
        "browserWindow",
        "options",
        "callback",
        "title",
        "content",
        "browserWindow",
        "options",
        "callback",
        "response",
        "checkboxChecked",
        "options",
        "callback",
        "response",
        "checkboxChecked",
        "browserWindow",
        "options",
        "callback",
        "filePaths",
        "options",
        "callback",
        "filePaths",
        "browserWindow",
        "options",
        "callback",
        "filename",
        "options",
        "callback",
        "filename",
        "EventEmitter",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "listener",
        "state",
        "path",
        "accelerator",
        "accelerator",
        "callback",
        "accelerator",
        "EventEmitter",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "chunk",
        "listener",
        "chunk",
        "listener",
        "chunk",
        "listener",
        "chunk",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "channel",
        "listener",
        "channel",
        "listener",
        "channel",
        "channel",
        "listener",
        "channel",
        "listener",
        "channel",
        "listener",
        "channel",
        "channel",
        "listener",
        "channel",
        "args",
        "channel",
        "args",
        "channel",
        "args",
        "template",
        "action",
        "menu",
        "menuItem",
        "browserWindow",
        "pos",
        "menuItem",
        "browserWindow",
        "options",
        "options",
        "buffer",
        "options",
        "dataURL",
        "path",
        "options",
        "rect",
        "options",
        "options",
        "option",
        "options",
        "options",
        "quality",
        "options",
        "options",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "id",
        "id",
        "scheme",
        "handler",
        "request",
        "callback",
        "buffer",
        "completion",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "filePath",
        "completion",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "redirectRequest",
        "completion",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "data",
        "completion",
        "error",
        "scheme",
        "callback",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "buffer",
        "completion",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "filePath",
        "completion",
        "error",
        "scheme",
        "handler",
        "request",
        "callback",
        "redirectRequest",
        "completion",
        "error",
        "schemes",
        "schemes",
        "options",
        "scheme",
        "handler",
        "request",
        "callback",
        "data",
        "completion",
        "error",
        "scheme",
        "completion",
        "error",
        "scheme",
        "completion",
        "error",
        "name",
        "listener",
        "newDisplay",
        "listener",
        "newDisplay",
        "listener",
        "newDisplay",
        "listener",
        "newDisplay",
        "listener",
        "display",
        "changedMetrics",
        "listener",
        "display",
        "changedMetrics",
        "listener",
        "display",
        "changedMetrics",
        "listener",
        "display",
        "changedMetrics",
        "listener",
        "oldDisplay",
        "listener",
        "oldDisplay",
        "listener",
        "oldDisplay",
        "listener",
        "oldDisplay",
        "rect",
        "point",
        "EventEmitter",
        "partition",
        "options",
        "listener",
        "item",
        "webContents",
        "listener",
        "item",
        "webContents",
        "listener",
        "item",
        "webContents",
        "listener",
        "item",
        "webContents",
        "domains",
        "options",
        "callback",
        "callback",
        "callback",
        "options",
        "callback",
        "options",
        "options",
        "identifier",
        "callback",
        "result",
        "callback",
        "size",
        "url",
        "callback",
        "proxy",
        "proc",
        "request",
        "callback",
        "verificationResult",
        "path",
        "handler",
        "webContents",
        "permission",
        "callback",
        "permissionGranted",
        "config",
        "callback",
        "userAgent",
        "acceptLanguages",
        "fullPath",
        "url",
        "options",
        "callback",
        "error",
        "fullPath",
        "shortcutPath",
        "fullPath",
        "shortcutPath",
        "operation",
        "options",
        "shortcutPath",
        "options",
        "listener",
        "newColor",
        "listener",
        "newColor",
        "listener",
        "newColor",
        "listener",
        "newColor",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "invertedColorScheme",
        "listener",
        "invertedColorScheme",
        "listener",
        "invertedColorScheme",
        "listener",
        "invertedColorScheme",
        "color",
        "key",
        "userInfo",
        "userInfo",
        "key",
        "value",
        "callback",
        "userInfo",
        "callback",
        "userInfo",
        "id",
        "id",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "options",
        "EventEmitter",
        "items",
        "TouchBarButton",
        "TouchBarColorPicker",
        "TouchBarGroup",
        "TouchBarLabel",
        "TouchBarPopover",
        "TouchBarScrubber",
        "TouchBarSegmentedControl",
        "TouchBarSlider",
        "TouchBarSpacer",
        "EventEmitter",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "files",
        "listener",
        "files",
        "listener",
        "files",
        "listener",
        "files",
        "listener",
        "text",
        "listener",
        "text",
        "listener",
        "text",
        "listener",
        "text",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "listener",
        "bounds",
        "image",
        "options",
        "menu",
        "position",
        "menu",
        "mode",
        "image",
        "image",
        "title",
        "toolTip",
        "EventEmitter",
        "id",
        "listener",
        "input",
        "listener",
        "input",
        "listener",
        "input",
        "listener",
        "input",
        "listener",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "url",
        "error",
        "certificate",
        "callback",
        "isTrusted",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "killed",
        "listener",
        "image",
        "scale",
        "size",
        "hotspot",
        "listener",
        "image",
        "scale",
        "size",
        "hotspot",
        "listener",
        "image",
        "scale",
        "size",
        "hotspot",
        "listener",
        "image",
        "scale",
        "size",
        "hotspot",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "errorCode",
        "errorDescription",
        "validatedURL",
        "isMainFrame",
        "listener",
        "errorCode",
        "errorDescription",
        "validatedURL",
        "isMainFrame",
        "listener",
        "errorCode",
        "errorDescription",
        "validatedURL",
        "isMainFrame",
        "listener",
        "errorCode",
        "errorDescription",
        "validatedURL",
        "isMainFrame",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "isMainFrame",
        "listener",
        "isMainFrame",
        "listener",
        "isMainFrame",
        "listener",
        "isMainFrame",
        "listener",
        "oldURL",
        "newURL",
        "isMainFrame",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "listener",
        "oldURL",
        "newURL",
        "isMainFrame",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "listener",
        "oldURL",
        "newURL",
        "isMainFrame",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "listener",
        "oldURL",
        "newURL",
        "isMainFrame",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "listener",
        "status",
        "newURL",
        "originalURL",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "resourceType",
        "listener",
        "status",
        "newURL",
        "originalURL",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "resourceType",
        "listener",
        "status",
        "newURL",
        "originalURL",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "resourceType",
        "listener",
        "status",
        "newURL",
        "originalURL",
        "httpResponseCode",
        "requestMethod",
        "referrer",
        "headers",
        "resourceType",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "isMainFrame",
        "listener",
        "url",
        "isMainFrame",
        "listener",
        "url",
        "isMainFrame",
        "listener",
        "url",
        "isMainFrame",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "result",
        "listener",
        "result",
        "listener",
        "result",
        "listener",
        "result",
        "listener",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "request",
        "authInfo",
        "callback",
        "username",
        "password",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "listener",
        "url",
        "frameName",
        "disposition",
        "options",
        "additionalFeatures",
        "listener",
        "url",
        "frameName",
        "disposition",
        "options",
        "additionalFeatures",
        "listener",
        "url",
        "frameName",
        "disposition",
        "options",
        "additionalFeatures",
        "listener",
        "url",
        "frameName",
        "disposition",
        "options",
        "additionalFeatures",
        "listener",
        "favicons",
        "listener",
        "favicons",
        "listener",
        "favicons",
        "listener",
        "favicons",
        "listener",
        "dirtyRect",
        "image",
        "listener",
        "dirtyRect",
        "image",
        "listener",
        "dirtyRect",
        "image",
        "listener",
        "dirtyRect",
        "image",
        "listener",
        "name",
        "version",
        "listener",
        "name",
        "version",
        "listener",
        "name",
        "version",
        "listener",
        "name",
        "version",
        "listener",
        "devices",
        "callback",
        "deviceId",
        "listener",
        "devices",
        "callback",
        "deviceId",
        "listener",
        "devices",
        "callback",
        "deviceId",
        "listener",
        "devices",
        "callback",
        "deviceId",
        "listener",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "url",
        "certificateList",
        "callback",
        "certificate",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "webPreferences",
        "listener",
        "webPreferences",
        "listener",
        "webPreferences",
        "listener",
        "webPreferences",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "url",
        "listener",
        "listener",
        "listener",
        "listener",
        "path",
        "callback",
        "frameBuffer",
        "dirtyRect",
        "onlyDirty",
        "callback",
        "frameBuffer",
        "dirtyRect",
        "offset",
        "rect",
        "callback",
        "image",
        "callback",
        "image",
        "x",
        "y",
        "url",
        "parameters",
        "code",
        "userGesture",
        "callback",
        "result",
        "text",
        "options",
        "callback",
        "zoomFactor",
        "callback",
        "zoomLevel",
        "index",
        "offset",
        "callback",
        "hasWorker",
        "css",
        "text",
        "x",
        "y",
        "url",
        "options",
        "options",
        "options",
        "options",
        "callback",
        "error",
        "data",
        "path",
        "text",
        "text",
        "fullPath",
        "saveType",
        "callback",
        "error",
        "channel",
        "args",
        "muted",
        "fps",
        "minimumLevel",
        "maximumLevel",
        "options",
        "userAgent",
        "minimumLevel",
        "maximumLevel",
        "policy",
        "factor",
        "level",
        "minimumLevel",
        "maximumLevel",
        "item",
        "action",
        "callback",
        "success",
        "code",
        "userGesture",
        "callback",
        "result",
        "text",
        "scheme",
        "scheme",
        "options",
        "scheme",
        "minimumLevel",
        "maximumLevel",
        "language",
        "autoCorrectWord",
        "provider",
        "minimumLevel",
        "maximumLevel",
        "factor",
        "level",
        "minimumLevel",
        "maximumLevel",
        "EventEmitter",
        "listener",
        "details",
        "listener",
        "details",
        "callback",
        "response",
        "listener",
        "listener",
        "details",
        "listener",
        "details",
        "listener",
        "listener",
        "details",
        "listener",
        "details",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "listener",
        "useCapture",
        "listener",
        "offset",
        "callback",
        "image",
        "rect",
        "callback",
        "image",
        "code",
        "userGesture",
        "callback",
        "result",
        "text",
        "options",
        "index",
        "offset",
        "css",
        "text",
        "x",
        "y",
        "url",
        "options",
        "options",
        "options",
        "callback",
        "error",
        "data",
        "text",
        "text",
        "channel",
        "args",
        "muted",
        "userAgent",
        "factor",
        "level",
        "action",
        "the_switch",
        "value",
        "value",
        "id",
        "filePath",
        "text",
        "menu",
        "image",
        "menuItem",
        "browserWindow",
        "text",
        "color",
        "selectedIndex",
        "highlightedIndex",
        "selectedIndex",
        "isSelected",
        "newValue",
        "Electron",
        "electron",
        "moduleName",
        "Electron",
        "fs",
        "fs",
        "tagName",
        "Electron",
        "NodeJS",
        "listener",
        "listener",
        "listener",
        "listener",
        "CPUUsage",
        "Electron",
        "IOCounters",
        "Electron",
        "Electron",
        "Electron",
        "maxDescriptors"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'accessibility-support-changed'",
        "'accessibility-support-changed'",
        "'accessibility-support-changed'",
        "'accessibility-support-changed'",
        "'activate'",
        "'activate'",
        "'activate'",
        "'activate'",
        "'before-quit'",
        "'before-quit'",
        "'before-quit'",
        "'before-quit'",
        "'browser-window-blur'",
        "'browser-window-blur'",
        "'browser-window-blur'",
        "'browser-window-blur'",
        "'browser-window-created'",
        "'browser-window-created'",
        "'browser-window-created'",
        "'browser-window-created'",
        "'browser-window-focus'",
        "'browser-window-focus'",
        "'browser-window-focus'",
        "'browser-window-focus'",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'continue-activity'",
        "string",
        "'continue-activity'",
        "string",
        "'continue-activity'",
        "string",
        "'continue-activity'",
        "string",
        "'gpu-process-crashed'",
        "'gpu-process-crashed'",
        "'gpu-process-crashed'",
        "'gpu-process-crashed'",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'open-file'",
        "string",
        "'open-file'",
        "string",
        "'open-file'",
        "string",
        "'open-file'",
        "string",
        "'open-url'",
        "string",
        "'open-url'",
        "string",
        "'open-url'",
        "string",
        "'open-url'",
        "string",
        "'quit'",
        "'quit'",
        "'quit'",
        "'quit'",
        "'ready'",
        "'ready'",
        "'ready'",
        "'ready'",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'web-contents-created'",
        "'web-contents-created'",
        "'web-contents-created'",
        "'web-contents-created'",
        "'will-finish-launching'",
        "'will-finish-launching'",
        "'will-finish-launching'",
        "'will-finish-launching'",
        "'will-quit'",
        "'will-quit'",
        "'will-quit'",
        "'will-quit'",
        "'window-all-closed'",
        "'window-all-closed'",
        "'window-all-closed'",
        "'window-all-closed'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'checking-for-update'",
        "'checking-for-update'",
        "'checking-for-update'",
        "'checking-for-update'",
        "'error'",
        "'error'",
        "'error'",
        "'error'",
        "'update-available'",
        "'update-available'",
        "'update-available'",
        "'update-available'",
        "'update-downloaded'",
        "string",
        "string",
        "string",
        "'update-downloaded'",
        "string",
        "string",
        "string",
        "'update-downloaded'",
        "string",
        "string",
        "string",
        "'update-downloaded'",
        "string",
        "string",
        "string",
        "'update-not-available'",
        "'update-not-available'",
        "'update-not-available'",
        "'update-not-available'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'app-command'",
        "string",
        "'app-command'",
        "string",
        "'app-command'",
        "string",
        "'app-command'",
        "string",
        "'blur'",
        "'blur'",
        "'blur'",
        "'blur'",
        "'close'",
        "'close'",
        "'close'",
        "'close'",
        "'closed'",
        "'closed'",
        "'closed'",
        "'closed'",
        "'enter-full-screen'",
        "'enter-full-screen'",
        "'enter-full-screen'",
        "'enter-full-screen'",
        "'enter-html-full-screen'",
        "'enter-html-full-screen'",
        "'enter-html-full-screen'",
        "'enter-html-full-screen'",
        "'focus'",
        "'focus'",
        "'focus'",
        "'focus'",
        "'hide'",
        "'hide'",
        "'hide'",
        "'hide'",
        "'leave-full-screen'",
        "'leave-full-screen'",
        "'leave-full-screen'",
        "'leave-full-screen'",
        "'leave-html-full-screen'",
        "'leave-html-full-screen'",
        "'leave-html-full-screen'",
        "'leave-html-full-screen'",
        "'maximize'",
        "'maximize'",
        "'maximize'",
        "'maximize'",
        "'minimize'",
        "'minimize'",
        "'minimize'",
        "'minimize'",
        "'move'",
        "'move'",
        "'move'",
        "'move'",
        "'moved'",
        "'moved'",
        "'moved'",
        "'moved'",
        "'page-title-updated'",
        "string",
        "'page-title-updated'",
        "string",
        "'page-title-updated'",
        "string",
        "'page-title-updated'",
        "string",
        "'ready-to-show'",
        "'ready-to-show'",
        "'ready-to-show'",
        "'ready-to-show'",
        "'resize'",
        "'resize'",
        "'resize'",
        "'resize'",
        "'responsive'",
        "'responsive'",
        "'responsive'",
        "'responsive'",
        "'restore'",
        "'restore'",
        "'restore'",
        "'restore'",
        "'scroll-touch-begin'",
        "'scroll-touch-begin'",
        "'scroll-touch-begin'",
        "'scroll-touch-begin'",
        "'scroll-touch-edge'",
        "'scroll-touch-edge'",
        "'scroll-touch-edge'",
        "'scroll-touch-edge'",
        "'scroll-touch-end'",
        "'scroll-touch-end'",
        "'scroll-touch-end'",
        "'scroll-touch-end'",
        "'session-end'",
        "'session-end'",
        "'session-end'",
        "'session-end'",
        "'sheet-begin'",
        "'sheet-begin'",
        "'sheet-begin'",
        "'sheet-begin'",
        "'sheet-end'",
        "'sheet-end'",
        "'sheet-end'",
        "'sheet-end'",
        "'show'",
        "'show'",
        "'show'",
        "'show'",
        "'swipe'",
        "string",
        "'swipe'",
        "string",
        "'swipe'",
        "string",
        "'swipe'",
        "string",
        "'unmaximize'",
        "'unmaximize'",
        "'unmaximize'",
        "'unmaximize'",
        "'unresponsive'",
        "'unresponsive'",
        "'unresponsive'",
        "'unresponsive'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'normal'",
        "'floating'",
        "'torn-off-menu'",
        "'modal-panel'",
        "'main-menu'",
        "'status'",
        "'pop-up-menu'",
        "'screen-saver'",
        "string",
        "string",
        "string",
        "string",
        "'appearance-based'",
        "'light'",
        "'dark'",
        "'titlebar'",
        "'selection'",
        "'menu'",
        "'popover'",
        "'sidebar'",
        "'medium-light'",
        "'ultra-dark'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'abort'",
        "'abort'",
        "'abort'",
        "'abort'",
        "'close'",
        "'close'",
        "'close'",
        "'close'",
        "'error'",
        "'error'",
        "'error'",
        "'error'",
        "'finish'",
        "'finish'",
        "'finish'",
        "'finish'",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'redirect'",
        "string",
        "string",
        "'redirect'",
        "string",
        "string",
        "'redirect'",
        "string",
        "string",
        "'redirect'",
        "string",
        "string",
        "'response'",
        "'response'",
        "'response'",
        "'response'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'changed'",
        "'explicit'",
        "'overwrite'",
        "'expired'",
        "'evicted'",
        "'expired-overwrite'",
        "'changed'",
        "'explicit'",
        "'overwrite'",
        "'expired'",
        "'evicted'",
        "'expired-overwrite'",
        "'changed'",
        "'explicit'",
        "'overwrite'",
        "'expired'",
        "'evicted'",
        "'expired-overwrite'",
        "'changed'",
        "'explicit'",
        "'overwrite'",
        "'expired'",
        "'evicted'",
        "'expired-overwrite'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'detach'",
        "string",
        "'detach'",
        "string",
        "'detach'",
        "string",
        "'detach'",
        "string",
        "'message'",
        "string",
        "'message'",
        "string",
        "'message'",
        "string",
        "'message'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'available'",
        "'unavailable'",
        "'unknown'",
        "'done'",
        "string",
        "'done'",
        "string",
        "'done'",
        "string",
        "'done'",
        "string",
        "'updated'",
        "string",
        "'updated'",
        "string",
        "'updated'",
        "string",
        "'updated'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'progressing'",
        "'completed'",
        "'cancelled'",
        "'interrupted'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'aborted'",
        "'aborted'",
        "'aborted'",
        "'aborted'",
        "'data'",
        "'data'",
        "'data'",
        "'data'",
        "'end'",
        "'end'",
        "'end'",
        "'end'",
        "'error'",
        "'error'",
        "'error'",
        "'error'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'tasks'",
        "'frequent'",
        "'recent'",
        "'custom'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'task'",
        "'separator'",
        "'file'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'on-ac'",
        "'on-ac'",
        "'on-ac'",
        "'on-ac'",
        "'on-battery'",
        "'on-battery'",
        "'on-battery'",
        "'on-battery'",
        "'resume'",
        "'resume'",
        "'resume'",
        "'resume'",
        "'suspend'",
        "'suspend'",
        "'suspend'",
        "'suspend'",
        "'prevent-app-suspension'",
        "'prevent-display-sleep'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'basic'",
        "'digest'",
        "'ntlm'",
        "'negotiate'",
        "string",
        "string",
        "'display-added'",
        "'display-added'",
        "'display-added'",
        "'display-added'",
        "'display-metrics-changed'",
        "string",
        "'display-metrics-changed'",
        "string",
        "'display-metrics-changed'",
        "string",
        "'display-metrics-changed'",
        "string",
        "'display-removed'",
        "'display-removed'",
        "'display-removed'",
        "'display-removed'",
        "string",
        "string",
        "string",
        "'will-download'",
        "'will-download'",
        "'will-download'",
        "'will-download'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'create'",
        "'update'",
        "'replace'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'accent-color-changed'",
        "string",
        "'accent-color-changed'",
        "string",
        "'accent-color-changed'",
        "string",
        "'accent-color-changed'",
        "string",
        "'color-changed'",
        "'color-changed'",
        "'color-changed'",
        "'color-changed'",
        "'inverted-color-scheme-changed'",
        "'inverted-color-scheme-changed'",
        "'inverted-color-scheme-changed'",
        "'inverted-color-scheme-changed'",
        "string",
        "'3d-dark-shadow'",
        "'3d-face'",
        "'3d-highlight'",
        "'3d-light'",
        "'3d-shadow'",
        "'active-border'",
        "'active-caption'",
        "'active-caption-gradient'",
        "'app-workspace'",
        "'button-text'",
        "'caption-text'",
        "'desktop'",
        "'disabled-text'",
        "'highlight'",
        "'highlight-text'",
        "'hotlight'",
        "'inactive-border'",
        "'inactive-caption'",
        "'inactive-caption-gradient'",
        "'inactive-caption-text'",
        "'info-background'",
        "'info-text'",
        "'menu'",
        "'menu-highlight'",
        "'menubar'",
        "'menu-text'",
        "'scrollbar'",
        "'window'",
        "'window-frame'",
        "'window-text'",
        "string",
        "string",
        "'string'",
        "'boolean'",
        "'integer'",
        "'float'",
        "'double'",
        "'url'",
        "'array'",
        "'dictionary'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'balloon-click'",
        "'balloon-click'",
        "'balloon-click'",
        "'balloon-click'",
        "'balloon-closed'",
        "'balloon-closed'",
        "'balloon-closed'",
        "'balloon-closed'",
        "'balloon-show'",
        "'balloon-show'",
        "'balloon-show'",
        "'balloon-show'",
        "'click'",
        "'click'",
        "'click'",
        "'click'",
        "'double-click'",
        "'double-click'",
        "'double-click'",
        "'double-click'",
        "'drag-end'",
        "'drag-end'",
        "'drag-end'",
        "'drag-end'",
        "'drag-enter'",
        "'drag-enter'",
        "'drag-enter'",
        "'drag-enter'",
        "'drag-leave'",
        "'drag-leave'",
        "'drag-leave'",
        "'drag-leave'",
        "'drop'",
        "'drop'",
        "'drop'",
        "'drop'",
        "'drop-files'",
        "string",
        "'drop-files'",
        "string",
        "'drop-files'",
        "string",
        "'drop-files'",
        "string",
        "'drop-text'",
        "string",
        "'drop-text'",
        "string",
        "'drop-text'",
        "string",
        "'drop-text'",
        "string",
        "'right-click'",
        "'right-click'",
        "'right-click'",
        "'right-click'",
        "string",
        "'selection'",
        "'always'",
        "'never'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'before-input-event'",
        "'before-input-event'",
        "'before-input-event'",
        "'before-input-event'",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'certificate-error'",
        "string",
        "string",
        "'context-menu'",
        "'context-menu'",
        "'context-menu'",
        "'context-menu'",
        "'crashed'",
        "'crashed'",
        "'crashed'",
        "'crashed'",
        "'cursor-changed'",
        "string",
        "'cursor-changed'",
        "string",
        "'cursor-changed'",
        "string",
        "'cursor-changed'",
        "string",
        "'destroyed'",
        "'destroyed'",
        "'destroyed'",
        "'destroyed'",
        "'devtools-closed'",
        "'devtools-closed'",
        "'devtools-closed'",
        "'devtools-closed'",
        "'devtools-focused'",
        "'devtools-focused'",
        "'devtools-focused'",
        "'devtools-focused'",
        "'devtools-opened'",
        "'devtools-opened'",
        "'devtools-opened'",
        "'devtools-opened'",
        "'devtools-reload-page'",
        "'devtools-reload-page'",
        "'devtools-reload-page'",
        "'devtools-reload-page'",
        "'did-change-theme-color'",
        "'did-change-theme-color'",
        "'did-change-theme-color'",
        "'did-change-theme-color'",
        "'did-fail-load'",
        "string",
        "string",
        "'did-fail-load'",
        "string",
        "string",
        "'did-fail-load'",
        "string",
        "string",
        "'did-fail-load'",
        "string",
        "string",
        "'did-finish-load'",
        "'did-finish-load'",
        "'did-finish-load'",
        "'did-finish-load'",
        "'did-frame-finish-load'",
        "'did-frame-finish-load'",
        "'did-frame-finish-load'",
        "'did-frame-finish-load'",
        "'did-get-redirect-request'",
        "string",
        "string",
        "string",
        "string",
        "'did-get-redirect-request'",
        "string",
        "string",
        "string",
        "string",
        "'did-get-redirect-request'",
        "string",
        "string",
        "string",
        "string",
        "'did-get-redirect-request'",
        "string",
        "string",
        "string",
        "string",
        "'did-get-response-details'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'did-get-response-details'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'did-get-response-details'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'did-get-response-details'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'did-navigate'",
        "string",
        "'did-navigate'",
        "string",
        "'did-navigate'",
        "string",
        "'did-navigate'",
        "string",
        "'did-navigate-in-page'",
        "string",
        "'did-navigate-in-page'",
        "string",
        "'did-navigate-in-page'",
        "string",
        "'did-navigate-in-page'",
        "string",
        "'did-start-loading'",
        "'did-start-loading'",
        "'did-start-loading'",
        "'did-start-loading'",
        "'did-stop-loading'",
        "'did-stop-loading'",
        "'did-stop-loading'",
        "'did-stop-loading'",
        "'dom-ready'",
        "'dom-ready'",
        "'dom-ready'",
        "'dom-ready'",
        "'found-in-page'",
        "'found-in-page'",
        "'found-in-page'",
        "'found-in-page'",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'login'",
        "string",
        "string",
        "'media-paused'",
        "'media-paused'",
        "'media-paused'",
        "'media-paused'",
        "'media-started-playing'",
        "'media-started-playing'",
        "'media-started-playing'",
        "'media-started-playing'",
        "'new-window'",
        "string",
        "string",
        "'default'",
        "'foreground-tab'",
        "'background-tab'",
        "'new-window'",
        "'save-to-disk'",
        "'other'",
        "string",
        "'new-window'",
        "string",
        "string",
        "'default'",
        "'foreground-tab'",
        "'background-tab'",
        "'new-window'",
        "'save-to-disk'",
        "'other'",
        "string",
        "'new-window'",
        "string",
        "string",
        "'default'",
        "'foreground-tab'",
        "'background-tab'",
        "'new-window'",
        "'save-to-disk'",
        "'other'",
        "string",
        "'new-window'",
        "string",
        "string",
        "'default'",
        "'foreground-tab'",
        "'background-tab'",
        "'new-window'",
        "'save-to-disk'",
        "'other'",
        "string",
        "'page-favicon-updated'",
        "string",
        "'page-favicon-updated'",
        "string",
        "'page-favicon-updated'",
        "string",
        "'page-favicon-updated'",
        "string",
        "'paint'",
        "'paint'",
        "'paint'",
        "'paint'",
        "'plugin-crashed'",
        "string",
        "string",
        "'plugin-crashed'",
        "string",
        "string",
        "'plugin-crashed'",
        "string",
        "string",
        "'plugin-crashed'",
        "string",
        "string",
        "'select-bluetooth-device'",
        "string",
        "'select-bluetooth-device'",
        "string",
        "'select-bluetooth-device'",
        "string",
        "'select-bluetooth-device'",
        "string",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'select-client-certificate'",
        "string",
        "'update-target-url'",
        "string",
        "'update-target-url'",
        "string",
        "'update-target-url'",
        "string",
        "'update-target-url'",
        "string",
        "'will-attach-webview'",
        "'will-attach-webview'",
        "'will-attach-webview'",
        "'will-attach-webview'",
        "'will-navigate'",
        "string",
        "'will-navigate'",
        "string",
        "'will-navigate'",
        "string",
        "'will-navigate'",
        "string",
        "'will-prevent-unload'",
        "'will-prevent-unload'",
        "'will-prevent-unload'",
        "'will-prevent-unload'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'HTMLOnly'",
        "'HTMLComplete'",
        "'MHTML'",
        "string",
        "string",
        "'default'",
        "'default_public_interface_only'",
        "'default_public_and_private_interfaces'",
        "'disable_non_proxied_udp'",
        "'clearSelection'",
        "'keepSelection'",
        "'activateSelection'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'load-commit'",
        "'load-commit'",
        "'did-finish-load'",
        "'did-finish-load'",
        "'did-fail-load'",
        "'did-fail-load'",
        "'did-frame-finish-load'",
        "'did-frame-finish-load'",
        "'did-start-loading'",
        "'did-start-loading'",
        "'did-stop-loading'",
        "'did-stop-loading'",
        "'did-get-response-details'",
        "'did-get-response-details'",
        "'did-get-redirect-request'",
        "'did-get-redirect-request'",
        "'dom-ready'",
        "'dom-ready'",
        "'page-title-updated'",
        "'page-title-updated'",
        "'page-favicon-updated'",
        "'page-favicon-updated'",
        "'enter-html-full-screen'",
        "'enter-html-full-screen'",
        "'leave-html-full-screen'",
        "'leave-html-full-screen'",
        "'console-message'",
        "'console-message'",
        "'found-in-page'",
        "'found-in-page'",
        "'new-window'",
        "'new-window'",
        "'will-navigate'",
        "'will-navigate'",
        "'did-navigate'",
        "'did-navigate'",
        "'did-navigate-in-page'",
        "'did-navigate-in-page'",
        "'close'",
        "'close'",
        "'ipc-message'",
        "'ipc-message'",
        "'crashed'",
        "'crashed'",
        "'gpu-crashed'",
        "'gpu-crashed'",
        "'plugin-crashed'",
        "'plugin-crashed'",
        "'destroyed'",
        "'destroyed'",
        "'media-started-playing'",
        "'media-started-playing'",
        "'media-paused'",
        "'media-paused'",
        "'did-change-theme-color'",
        "'did-change-theme-color'",
        "'update-target-url'",
        "'update-target-url'",
        "'devtools-opened'",
        "'devtools-opened'",
        "'devtools-closed'",
        "'devtools-closed'",
        "'devtools-focused'",
        "'devtools-focused'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'clearSelection'",
        "'keepSelection'",
        "'activateSelection'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'default'",
        "'hidden'",
        "'hidden-inset'",
        "'appearance-based'",
        "'light'",
        "'dark'",
        "'titlebar'",
        "'selection'",
        "'menu'",
        "'popover'",
        "'sidebar'",
        "'medium-light'",
        "'ultra-dark'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'none'",
        "'image'",
        "'audio'",
        "'video'",
        "'canvas'",
        "'file'",
        "'plugin'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'none'",
        "'mouse'",
        "'keyboard'",
        "'touch'",
        "'touchMenu'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'critical'",
        "'informational'",
        "string",
        "string",
        "string",
        "string",
        "'small'",
        "'normal'",
        "'large'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'normal'",
        "'separator'",
        "'submenu'",
        "'checkbox'",
        "'radio'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'default'",
        "'foreground-tab'",
        "'background-tab'",
        "'new-window'",
        "'save-to-disk'",
        "'other'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'right'",
        "'bottom'",
        "'undocked'",
        "'detach'",
        "string",
        "string",
        "string",
        "'openFile'",
        "'openDirectory'",
        "'multiSelections'",
        "'showHiddenFiles'",
        "'createDirectory'",
        "'promptToCreate'",
        "'noResolveAliases'",
        "string",
        "string",
        "string",
        "'desktop'",
        "'mobile'",
        "string",
        "string",
        "string",
        "'none'",
        "'normal'",
        "'indeterminate'",
        "'error'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'left'",
        "'right'",
        "'overlay'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'automatic'",
        "'rounded'",
        "'textured-rounded'",
        "'round-rect'",
        "'textured-square'",
        "'capsule'",
        "'small-square'",
        "'separated'",
        "'single'",
        "'multiple'",
        "'buttons'",
        "string",
        "'small'",
        "'large'",
        "'flexible'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'electron'",
        "'electron'",
        "string",
        "'original-fs'",
        "'fs'",
        "'webview'",
        "'loaded'",
        "'loaded'",
        "'loaded'",
        "'loaded'",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "electron"
    ],
    "comments": [
        "Type definitions for Electron 1.7.1",
        "Project: http://electron.atom.io/",
        "Definitions by: The Electron Team <https://github.com/electron/electron>",
        "Definitions: https://github.com/electron/electron-typescript-definitions",
        "<reference types=\"node\" />",
        "Docs: http://electron.atom.io/docs/api/app",
        "Docs: http://electron.atom.io/docs/api/auto-updater",
        "Docs: http://electron.atom.io/docs/api/structures/bluetooth-device",
        "Docs: http://electron.atom.io/docs/api/browser-view",
        "Docs: http://electron.atom.io/docs/api/browser-window",
        "Docs: http://electron.atom.io/docs/api/browser-window-proxy",
        "Docs: http://electron.atom.io/docs/api/structures/certificate",
        "Docs: http://electron.atom.io/docs/api/structures/certificate-principal",
        "Docs: http://electron.atom.io/docs/api/client-request",
        "Docs: http://electron.atom.io/docs/api/clipboard",
        "Docs: http://electron.atom.io/docs/api/content-tracing",
        "Docs: http://electron.atom.io/docs/api/structures/cookie",
        "Docs: http://electron.atom.io/docs/api/cookies",
        "Docs: http://electron.atom.io/docs/api/structures/cpu-usage",
        "Docs: http://electron.atom.io/docs/api/structures/crash-report",
        "Docs: http://electron.atom.io/docs/api/crash-reporter",
        "Docs: http://electron.atom.io/docs/api/debugger",
        "Docs: http://electron.atom.io/docs/api/desktop-capturer",
        "Docs: http://electron.atom.io/docs/api/structures/desktop-capturer-source",
        "Docs: http://electron.atom.io/docs/api/dialog",
        "Docs: http://electron.atom.io/docs/api/structures/display",
        "Docs: http://electron.atom.io/docs/api/download-item",
        "Docs: http://electron.atom.io/docs/api/structures/file-filter",
        "Docs: http://electron.atom.io/docs/api/global-shortcut",
        "Docs: http://electron.atom.io/docs/api/incoming-message",
        "Docs: http://electron.atom.io/docs/api/structures/io-counters",
        "Docs: http://electron.atom.io/docs/api/ipc-main",
        "Docs: http://electron.atom.io/docs/api/ipc-renderer",
        "Docs: http://electron.atom.io/docs/api/structures/jump-list-category",
        "Docs: http://electron.atom.io/docs/api/structures/jump-list-item",
        "Docs: http://electron.atom.io/docs/api/structures/memory-info",
        "Docs: http://electron.atom.io/docs/api/structures/memory-usage-details",
        "Docs: http://electron.atom.io/docs/api/menu",
        "Docs: http://electron.atom.io/docs/api/menu-item",
        "Docs: http://electron.atom.io/docs/api/structures/mime-typed-buffer",
        "Docs: http://electron.atom.io/docs/api/native-image",
        "Docs: http://electron.atom.io/docs/api/net",
        "Docs: http://electron.atom.io/docs/api/structures/point",
        "Docs: http://electron.atom.io/docs/api/power-monitor",
        "Docs: http://electron.atom.io/docs/api/power-save-blocker",
        "Docs: http://electron.atom.io/docs/api/structures/process-memory-info",
        "Docs: http://electron.atom.io/docs/api/protocol",
        "Docs: http://electron.atom.io/docs/api/structures/rectangle",
        "Docs: http://electron.atom.io/docs/api/remote",
        "Docs: http://electron.atom.io/docs/api/structures/remove-client-certificate",
        "Docs: http://electron.atom.io/docs/api/structures/remove-password",
        "Docs: http://electron.atom.io/docs/api/screen",
        "Docs: http://electron.atom.io/docs/api/structures/scrubber-item",
        "Docs: http://electron.atom.io/docs/api/structures/segmented-control-segment",
        "Docs: http://electron.atom.io/docs/api/session",
        "Docs: http://electron.atom.io/docs/api/shell",
        "Docs: http://electron.atom.io/docs/api/structures/shortcut-details",
        "Docs: http://electron.atom.io/docs/api/structures/size",
        "Docs: http://electron.atom.io/docs/api/system-preferences",
        "Docs: http://electron.atom.io/docs/api/structures/task",
        "Docs: http://electron.atom.io/docs/api/structures/thumbar-button",
        "Docs: http://electron.atom.io/docs/api/touch-bar-button",
        "Docs: http://electron.atom.io/docs/api/touch-bar-color-picker",
        "Docs: http://electron.atom.io/docs/api/touch-bar-group",
        "Docs: http://electron.atom.io/docs/api/touch-bar-label",
        "Docs: http://electron.atom.io/docs/api/touch-bar-popover",
        "Docs: http://electron.atom.io/docs/api/touch-bar-scrubber",
        "Docs: http://electron.atom.io/docs/api/touch-bar-segmented-control",
        "Docs: http://electron.atom.io/docs/api/touch-bar-slider",
        "Docs: http://electron.atom.io/docs/api/touch-bar-spacer",
        "Docs: http://electron.atom.io/docs/api/touch-bar",
        "Docs: http://electron.atom.io/docs/api/tray",
        "Docs: http://electron.atom.io/docs/api/structures/upload-blob",
        "Docs: http://electron.atom.io/docs/api/structures/upload-data",
        "Docs: http://electron.atom.io/docs/api/structures/upload-file",
        "Docs: http://electron.atom.io/docs/api/structures/upload-file-system",
        "Docs: http://electron.atom.io/docs/api/structures/upload-raw-data",
        "Docs: http://electron.atom.io/docs/api/web-contents",
        "Docs: http://electron.atom.io/docs/api/web-frame",
        "Docs: http://electron.atom.io/docs/api/web-request",
        "Docs: http://electron.atom.io/docs/api/webview-tag",
        "Docs: http://electron.atom.io/docs/api/process"
    ],
    "docstrings": [
        "* Emitted when Chrome's accessibility support changes. This event fires when\n     * assistive technologies, such as screen readers, are enabled or disabled. See\n     * https://www.chromium.org/developers/design-documents/accessibility for more\n     * details.",
        "* `true` when Chrome's accessibility support is enabled, `false` otherwise.",
        "* `true` when Chrome's accessibility support is enabled, `false` otherwise.",
        "* `true` when Chrome's accessibility support is enabled, `false` otherwise.",
        "* `true` when Chrome's accessibility support is enabled, `false` otherwise.",
        "* Emitted when the application is activated. Various actions can trigger this\n     * event, such as launching the application for the first time, attempting to\n     * re-launch the application when it's already running, or clicking on the\n     * application's dock or taskbar icon.",
        "* Emitted before the application starts closing its windows. Calling\n     * event.preventDefault() will prevent the default behaviour, which is terminating\n     * the application. Note: If application quit was initiated by\n     * autoUpdater.quitAndInstall() then before-quit is emitted after emitting close\n     * event on all windows and closing them.",
        "* Emitted when a browserWindow gets blurred.",
        "* Emitted when a new browserWindow is created.",
        "* Emitted when a browserWindow gets focused.",
        "* Emitted when failed to verify the certificate for url, to trust the certificate\n     * you should prevent the default behavior with event.preventDefault() and call\n     * callback(true).",
        "* The error code",
        "* The error code",
        "* The error code",
        "* The error code",
        "* Emitted during Handoff when an activity from a different device wants to be\n     * resumed. You should call event.preventDefault() if you want to handle this\n     * event. A user activity can be continued only in an app that has the same\n     * developer Team ID as the activity's source app and that supports the activity's\n     * type. Supported activity types are specified in the app's Info.plist under the\n     * NSUserActivityTypes key.",
        "* A string identifying the activity. Maps to .",
        "* Contains app-specific state stored by the activity on another device.",
        "* A string identifying the activity. Maps to .",
        "* Contains app-specific state stored by the activity on another device.",
        "* A string identifying the activity. Maps to .",
        "* Contains app-specific state stored by the activity on another device.",
        "* A string identifying the activity. Maps to .",
        "* Contains app-specific state stored by the activity on another device.",
        "* Emitted when the gpu process crashes or is killed.",
        "* Emitted when webContents wants to do basic auth. The default behavior is to\n     * cancel all authentications, to override this you should prevent the default\n     * behavior with event.preventDefault() and call callback(username, password) with\n     * the credentials.",
        "* Emitted when the user wants to open a file with the application. The open-file\n     * event is usually emitted when the application is already open and the OS wants\n     * to reuse the application to open the file. open-file is also emitted when a file\n     * is dropped onto the dock and the application is not yet running. Make sure to\n     * listen for the open-file event very early in your application startup to handle\n     * this case (even before the ready event is emitted). You should call\n     * event.preventDefault() if you want to handle this event. On Windows, you have to\n     * parse process.argv (in the main process) to get the filepath.",
        "* Emitted when the user wants to open a URL with the application. Your\n     * application's Info.plist file must define the url scheme within the\n     * CFBundleURLTypes key, and set NSPrincipalClass to AtomApplication. You should\n     * call event.preventDefault() if you want to handle this event.",
        "* Emitted when the application is quitting.",
        "* Emitted when Electron has finished initializing. On macOS, launchInfo holds the\n     * userInfo of the NSUserNotification that was used to open the application, if it\n     * was launched from Notification Center. You can call app.isReady() to check if\n     * this event has already fired.",
        "* Emitted when a client certificate is requested. The url corresponds to the\n     * navigation entry requesting the client certificate and callback can be called\n     * with an entry filtered from the list. Using event.preventDefault() prevents the\n     * application from using the first certificate from the store.",
        "* Emitted when a new webContents is created.",
        "* Emitted when the application has finished basic startup. On Windows and Linux,\n     * the will-finish-launching event is the same as the ready event; on macOS, this\n     * event represents the applicationWillFinishLaunching notification of\n     * NSApplication. You would usually set up listeners for the open-file and open-url\n     * events here, and start the crash reporter and auto updater. In most cases, you\n     * should just do everything in the ready event handler.",
        "* Emitted when all windows have been closed and the application will quit. Calling\n     * event.preventDefault() will prevent the default behaviour, which is terminating\n     * the application. See the description of the window-all-closed event for the\n     * differences between the will-quit and window-all-closed events.",
        "* Emitted when all windows have been closed. If you do not subscribe to this event\n     * and all windows are closed, the default behavior is to quit the app; however, if\n     * you subscribe, you control whether the app quits or not. If the user pressed Cmd\n     * + Q, or the developer called app.quit(), Electron will first try to close all\n     * the windows and then emit the will-quit event, and in this case the\n     * window-all-closed event would not be emitted.",
        "* Adds path to the recent documents list. This list is managed by the OS. On\n     * Windows you can visit the list from the task bar, and on macOS you can visit it\n     * from dock menu.",
        "* Clears the recent documents list.",
        "* Disables hardware acceleration for current app. This method can only be called\n     * before app is ready.",
        "* Exits immediately with exitCode.  exitCode defaults to 0. All windows will be\n     * closed immediately without asking user and the before-quit and will-quit events\n     * will not be emitted.",
        "* On Linux, focuses on the first visible window. On macOS, makes the application\n     * the active app. On Windows, focuses on the application's first window.",
        "* Returns ProcessMemoryInfo[]:  Array of ProcessMemoryInfo objects that correspond\n     * to memory usage statistics of all the processes associated with the app.",
        "* Fetches a path's associated icon. On Windows, there a 2 kinds of icons: On Linux\n     * and macOS, icons depend on the application associated with file mime type.",
        "* Fetches a path's associated icon. On Windows, there a 2 kinds of icons: On Linux\n     * and macOS, icons depend on the application associated with file mime type.",
        "* Note: When distributing your packaged app, you have to also ship the locales\n     * folder. Note: On Windows you have to call it after the ready events gets\n     * emitted.",
        "* If you provided path and args options to app.setLoginItemSettings then you need\n     * to pass the same arguments here for openAtLogin to be set correctly. Note: This\n     * API has no effect on MAS builds.",
        "* Usually the name field of package.json is a short lowercased name, according to\n     * the npm modules spec. You should usually also specify a productName field, which\n     * is your application's full capitalized name, and which will be preferred over\n     * name by Electron.",
        "* You can request the following paths by the name:",
        "* Hides all application windows without minimizing them.",
        "* Imports the certificate in pkcs12 format into the platform certificate store.\n     * callback is called with the result of import operation, a value of 0 indicates\n     * success while any other value indicates failure according to chromium\n     * net_error_list.",
        "* This method checks if the current executable is the default handler for a\n     * protocol (aka URI scheme). If so, it will return true. Otherwise, it will return\n     * false. Note: On macOS, you can use this method to check if the app has been\n     * registered as the default protocol handler for a protocol. You can also verify\n     * this by checking ~/Library/Preferences/com.apple.LaunchServices.plist on the\n     * macOS machine. Please refer to Apple's documentation for details. The API uses\n     * the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.",
        "* This method makes your application a Single Instance Application - instead of\n     * allowing multiple instances of your app to run, this will ensure that only a\n     * single instance of your app is running, and other instances signal this instance\n     * and exit. callback will be called with callback(argv, workingDirectory) when a\n     * second instance has been executed. argv is an Array of the second instance's\n     * command line arguments, and workingDirectory is its current working directory.\n     * Usually applications respond to this by making their primary window focused and\n     * non-minimized. The callback is guaranteed to be executed after the ready event\n     * of app gets emitted. This method returns false if your process is the primary\n     * instance of the application and your app should continue loading. And returns\n     * true if your process has sent its parameters to another instance, and you should\n     * immediately quit. On macOS the system enforces single instance automatically\n     * when users try to open a second instance of your app in Finder, and the\n     * open-file and open-url events will be emitted for that. However when users start\n     * your app in command line the system's single instance mechanism will be bypassed\n     * and you have to use this method to ensure single instance. An example of\n     * activating the window of primary instance when a second instance starts:",
        "* Try to close all windows. The before-quit event will be emitted first. If all\n     * windows are successfully closed, the will-quit event will be emitted and by\n     * default the application will terminate. This method guarantees that all\n     * beforeunload and unload event handlers are correctly executed. It is possible\n     * that a window cancels the quitting by returning false in the beforeunload event\n     * handler.",
        "* Relaunches the app when current instance exits. By default the new instance will\n     * use the same working directory and command line arguments with current instance.\n     * When args is specified, the args will be passed as command line arguments\n     * instead. When execPath is specified, the execPath will be executed for relaunch\n     * instead of current app. Note that this method does not quit the app when\n     * executed, you have to call app.quit or app.exit after calling app.relaunch to\n     * make the app restart. When app.relaunch is called for multiple times, multiple\n     * instances will be started after current instance exited. An example of\n     * restarting current instance immediately and adding a new command line argument\n     * to the new instance:",
        "* Releases all locks that were created by makeSingleInstance. This will allow\n     * multiple instances of the application to once again run side by side.",
        "* This method checks if the current executable as the default handler for a\n     * protocol (aka URI scheme). If so, it will remove the app as the default handler.",
        "* Set the about panel options. This will override the values defined in the app's\n     * .plist file. See the Apple docs for more details.",
        "* Changes the Application User Model ID to id.",
        "* This method sets the current executable as the default handler for a protocol\n     * (aka URI scheme). It allows you to integrate your app deeper into the operating\n     * system. Once registered, all links with your-protocol:// will be opened with the\n     * current executable. The whole link, including protocol, will be passed to your\n     * application as a parameter. On Windows you can provide optional parameters path,\n     * the path to your executable, and args, an array of arguments to be passed to\n     * your executable when it launches. Note: On macOS, you can only register\n     * protocols that have been added to your app's info.plist, which can not be\n     * modified at runtime. You can however change the file with a simple text editor\n     * or script during build time. Please refer to Apple's documentation for details.\n     * The API uses the Windows Registry and LSSetDefaultHandlerForURLScheme\n     * internally.",
        "* Sets the counter badge for current app. Setting the count to 0 will hide the\n     * badge. On macOS it shows on the dock icon. On Linux it only works for Unity\n     * launcher, Note: Unity launcher requires the existence of a .desktop file to\n     * work, for more information please read Desktop Environment Integration.",
        "* Sets or removes a custom Jump List for the application, and returns one of the\n     * following strings: If categories is null the previously set custom Jump List (if\n     * any) will be replaced by the standard Jump List for the app (managed by\n     * Windows). Note: If a JumpListCategory object has neither the type nor the name\n     * property set then its type is assumed to be tasks. If the name property is set\n     * but the type property is omitted then the type is assumed to be custom. Note:\n     * Users can remove items from custom categories, and Windows will not allow a\n     * removed item to be added back into a custom category until after the next\n     * successful call to app.setJumpList(categories). Any attempt to re-add a removed\n     * item to a custom category earlier than that will result in the entire custom\n     * category being omitted from the Jump List. The list of removed items can be\n     * obtained using app.getJumpListSettings(). Here's a very simple example of\n     * creating a custom Jump List:",
        "* Set the app's login item settings. To work with Electron's autoUpdater on\n     * Windows, which uses Squirrel, you'll want to set the launch path to Update.exe,\n     * and pass arguments that specify your application name. For example: Note: This\n     * API has no effect on MAS builds.",
        "* Overrides the current application's name.",
        "* Overrides the path to a special directory or file associated with name. If the\n     * path specifies a directory that does not exist, the directory will be created by\n     * this method. On failure an Error is thrown. You can only override paths of a\n     * name defined in app.getPath. By default, web pages' cookies and caches will be\n     * stored under the userData directory. If you want to change this location, you\n     * have to override the userData path before the ready event of the app module is\n     * emitted.",
        "* Creates an NSUserActivity and sets it as the current activity. The activity is\n     * eligible for Handoff to another device afterward.",
        "* Adds tasks to the Tasks category of the JumpList on Windows. tasks is an array\n     * of Task objects. Note: If you'd like to customize the Jump List even more use\n     * app.setJumpList(categories) instead.",
        "* Shows application windows after they were hidden. Does not automatically focus\n     * them.",
        "* Emitted when checking if an update has started.",
        "* Emitted when there is an error while updating.",
        "* Emitted when there is an available update. The update is downloaded\n     * automatically.",
        "* Emitted when an update has been downloaded. On Windows only releaseName is\n     * available.",
        "* Emitted when there is no available update.",
        "* Asks the server whether there is an update. You must call setFeedURL before\n     * using this API.",
        "* Restarts the app and installs the update after it has been downloaded. It should\n     * only be called after update-downloaded has been emitted. Note:\n     * autoUpdater.quitAndInstall() will close all application windows first and only\n     * emit before-quit event on app after that. This is different from the normal quit\n     * event sequence.",
        "* Sets the url and initialize the auto updater.",
        "* Resizes and moves the view to the supplied bounds relative to the window.",
        "* Emitted when an App Command is invoked. These are typically related to keyboard\n     * media keys or browser commands, as well as the \"Back\" button built into some\n     * mice on Windows. Commands are lowercased, underscores are replaced with hyphens,\n     * and the APPCOMMAND_ prefix is stripped off. e.g. APPCOMMAND_BROWSER_BACKWARD is\n     * emitted as browser-backward.",
        "* Emitted when the window loses focus.",
        "* Emitted when the window is going to be closed. It's emitted before the\n     * beforeunload and unload event of the DOM. Calling event.preventDefault() will\n     * cancel the close. Usually you would want to use the beforeunload handler to\n     * decide whether the window should be closed, which will also be called when the\n     * window is reloaded. In Electron, returning any value other than undefined would\n     * cancel the close. For example:",
        "* Emitted when the window is closed. After you have received this event you should\n     * remove the reference to the window and avoid using it any more.",
        "* Emitted when the window enters a full-screen state.",
        "* Emitted when the window enters a full-screen state triggered by HTML API.",
        "* Emitted when the window gains focus.",
        "* Emitted when the window is hidden.",
        "* Emitted when the window leaves a full-screen state.",
        "* Emitted when the window leaves a full-screen state triggered by HTML API.",
        "* Emitted when window is maximized.",
        "* Emitted when the window is minimized.",
        "* Emitted when the window is being moved to a new position. Note: On macOS this\n     * event is just an alias of moved.",
        "* Emitted once when the window is moved to a new position.",
        "* Emitted when the document changed its title, calling event.preventDefault() will\n     * prevent the native window's title from changing.",
        "* Emitted when the web page has been rendered (while not being shown) and window\n     * can be displayed without a visual flash.",
        "* Emitted when the window is being resized.",
        "* Emitted when the unresponsive web page becomes responsive again.",
        "* Emitted when the window is restored from a minimized state.",
        "* Emitted when scroll wheel event phase has begun.",
        "* Emitted when scroll wheel event phase filed upon reaching the edge of element.",
        "* Emitted when scroll wheel event phase has ended.",
        "* Emitted when window session is going to end due to force shutdown or machine\n     * restart or session log off.",
        "* Emitted when the window opens a sheet.",
        "* Emitted when the window has closed a sheet.",
        "* Emitted when the window is shown.",
        "* Emitted on 3-finger swipe. Possible directions are up, right, down, left.",
        "* Emitted when the window exits from a maximized state.",
        "* Emitted when the web page becomes unresponsive.",
        "* Adds DevTools extension located at path, and returns extension's name. The\n     * extension will be remembered so you only need to call this API once, this API is\n     * not for programming use. If you try to add an extension that has already been\n     * loaded, this method will not return and instead log a warning to the console.\n     * The method will also not return if the extension's manifest is missing or\n     * incomplete. Note: This API cannot be called before the ready event of the app\n     * module is emitted.",
        "* To check if a DevTools extension is installed you can run the following: Note:\n     * This API cannot be called before the ready event of the app module is emitted.",
        "* Remove a DevTools extension by name. Note: This API cannot be called before the\n     * ready event of the app module is emitted.",
        "* Removes focus from the window.",
        "* Same as webContents.capturePage([rect, ]callback).",
        "* Same as webContents.capturePage([rect, ]callback).",
        "* Moves window to the center of the screen.",
        "* Try to close the window. This has the same effect as a user manually clicking\n     * the close button of the window. The web page may cancel the close though. See\n     * the close event.",
        "* Closes the currently open Quick Look panel.",
        "* Force closing the window, the unload and beforeunload event won't be emitted for\n     * the web page, and close event will also not be emitted for this window, but it\n     * guarantees the closed event will be emitted.",
        "* Starts or stops flashing the window to attract user's attention.",
        "* Focuses on the window.",
        "* The native type of the handle is HWND on Windows, NSView* on macOS, and Window\n     * (unsigned long) on Linux.",
        "* Note: The title of web page can be different from the title of the native\n     * window.",
        "* On Windows and Linux always returns true.",
        "* Hides the window.",
        "* Hooks a windows message. The callback is called when the message is received in\n     * the WndProc.",
        "* On Linux always returns true.",
        "* On Linux always returns true.",
        "* On Linux always returns true.",
        "* On Linux always returns true.",
        "* Note: This API always returns false on Windows.",
        "* Same as webContents.loadURL(url[, options]). The url can be a remote address\n     * (e.g. http://) or a path to a local HTML file using the file:// protocol. To\n     * ensure that file URLs are properly formatted, it is recommended to use Node's\n     * url.format method: You can load a URL using a POST request with URL-encoded data\n     * by doing the following:",
        "* Maximizes the window. This will also show (but not focus) the window if it isn't\n     * being displayed already.",
        "* Minimizes the window. On some platforms the minimized window will be shown in\n     * the Dock.",
        "* Uses Quick Look to preview a file at a given path.",
        "* Same as webContents.reload.",
        "* Restores the window from minimized state to its previous state.",
        "* Sets whether the window should show always on top of other windows. After\n     * setting this, the window is still a normal window, not a toolbox window which\n     * can not be focused on.",
        "* Sets the properties for the window's taskbar button. Note: relaunchCommand and\n     * relaunchDisplayName must always be set together. If one of those properties is\n     * not set, then neither will be used.",
        "* This will make a window maintain an aspect ratio. The extra size allows a\n     * developer to have space, specified in pixels, not included within the aspect\n     * ratio calculations. This API already takes into account the difference between a\n     * window's size and its content size. Consider a normal window with an HD video\n     * player and associated controls. Perhaps there are 15 pixels of controls on the\n     * left edge, 25 pixels of controls on the right edge and 50 pixels of controls\n     * below the player. In order to maintain a 16:9 aspect ratio (standard aspect\n     * ratio for HD @1920x1080) within the player itself we would call this function\n     * with arguments of 16/9 and [ 40, 50 ]. The second argument doesn't care where\n     * the extra width and height are within the content view--only that they exist.\n     * Just sum any extra width and height areas you have within the overall content\n     * view.",
        "* Controls whether to hide cursor when typing.",
        "* Sets whether the window menu bar should hide itself automatically. Once set the\n     * menu bar will only show when users press the single Alt key. If the menu bar is\n     * already visible, calling setAutoHideMenuBar(true) won't hide it immediately.",
        "* Resizes and moves the window to the supplied bounds",
        "* Note: The BrowserView API is currently experimental and may change or be removed\n     * in future Electron releases.",
        "* Sets whether the window can be manually closed by user. On Linux does nothing.",
        "* Resizes and moves the window's client area (e.g. the web page) to the supplied\n     * bounds.",
        "* Prevents the window contents from being captured by other apps. On macOS it sets\n     * the NSWindow's sharingType to NSWindowSharingNone. On Windows it calls\n     * SetWindowDisplayAffinity with WDA_MONITOR.",
        "* Resizes the window's client area (e.g. the web page) to width and height.",
        "* Specifies whether the window’s document has been edited, and the icon in title\n     * bar will become gray when set to true.",
        "* Changes whether the window can be focused.",
        "* Sets whether the window should be in fullscreen mode.",
        "* Sets whether the maximize/zoom window button toggles fullscreen mode or\n     * maximizes the window.",
        "* Sets whether the window should have a shadow. On Windows and Linux does nothing.",
        "* Changes window icon.",
        "* Makes the window ignore all mouse events. All mouse events happened in this\n     * window will be passed to the window below this window, but if this window has\n     * focus, it will still receive keyboard events.",
        "* Enters or leaves the kiosk mode.",
        "* Sets whether the window can be manually maximized by user. On Linux does\n     * nothing.",
        "* Sets the maximum size of window to width and height.",
        "* Sets the menu as the window's menu bar, setting it to null will remove the menu\n     * bar.",
        "* Sets whether the menu bar should be visible. If the menu bar is auto-hide, users\n     * can still bring up the menu bar by pressing the single Alt key.",
        "* Sets whether the window can be manually minimized by user. On Linux does\n     * nothing.",
        "* Sets the minimum size of window to width and height.",
        "* Sets whether the window can be moved by user. On Linux does nothing.",
        "* Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to\n     * convey some sort of application status or to passively notify the user.",
        "* Sets parent as current window's parent window, passing null will turn current\n     * window into a top-level window.",
        "* Moves window to x and y.",
        "* Sets progress value in progress bar. Valid range is [0, 1.0]. Remove progress\n     * bar when progress < 0; Change to indeterminate mode when progress > 1. On Linux\n     * platform, only supports Unity desktop environment, you need to specify the\n     * *.desktop file name to desktopName field in package.json. By default, it will\n     * assume app.getName().desktop. On Windows, a mode can be passed. Accepted values\n     * are none, normal, indeterminate, error, and paused. If you call setProgressBar\n     * without a mode set (but with a value within the valid range), normal will be\n     * assumed.",
        "* Sets the pathname of the file the window represents, and the icon of the file\n     * will show in window's title bar.",
        "* Sets whether the window can be manually resized by user.",
        "* Changes the attachment point for sheets on macOS. By default, sheets are\n     * attached just below the window frame, but you may want to display them beneath a\n     * HTML-rendered toolbar. For example:",
        "* Resizes the window to width and height.",
        "* Makes the window not show in the taskbar.",
        "* Add a thumbnail toolbar with a specified set of buttons to the thumbnail image\n     * of a window in a taskbar button layout. Returns a Boolean object indicates\n     * whether the thumbnail has been added successfully. The number of buttons in\n     * thumbnail toolbar should be no greater than 7 due to the limited room. Once you\n     * setup the thumbnail toolbar, the toolbar cannot be removed due to the platform's\n     * limitation. But you can call the API with an empty array to clean the buttons.\n     * The buttons is an array of Button objects: The flags is an array that can\n     * include following Strings:",
        "* Sets the region of the window to show as the thumbnail image displayed when\n     * hovering over the window in the taskbar. You can reset the thumbnail to be the\n     * entire window by specifying an empty region: {x: 0, y: 0, width: 0, height: 0}.",
        "* Sets the toolTip that is displayed when hovering over the window thumbnail in\n     * the taskbar.",
        "* Changes the title of native window to title.",
        "* Sets the touchBar layout for the current window. Specifying null or undefined\n     * clears the touch bar. This method only has an effect if the machine has a touch\n     * bar and is running on macOS 10.12.1+. Note: The TouchBar API is currently\n     * experimental and may change or be removed in future Electron releases.",
        "* Adds a vibrancy effect to the browser window. Passing null or an empty string\n     * will remove the vibrancy effect on the window.",
        "* Sets whether the window should be visible on all workspaces. Note: This API does\n     * nothing on Windows.",
        "* Shows and gives focus to the window.",
        "* Same as webContents.showDefinitionForSelection().",
        "* Shows the window but doesn't focus on it.",
        "* Unhooks all of the window messages.",
        "* Unhook the window message.",
        "* Unmaximizes the window.",
        "* Removes focus from the child window.",
        "* Forcefully closes the child window without calling its unload event.",
        "* Evaluates the code in the child window.",
        "* Focuses the child window (brings the window to front).",
        "* Sends a message to the child window with the specified origin or * for no origin\n     * preference. In addition to these methods, the child window implements\n     * window.opener object with no properties and a single method.",
        "* Invokes the print dialog on the child window.",
        "* PEM encoded data",
        "* Fingerprint of the certificate",
        "* Issuer principal",
        "* Issuer certificate (if not self-signed)",
        "* Issuer's Common Name",
        "* Hex value represented string",
        "* Subject principal",
        "* Subject's Common Name",
        "* End date of the certificate being valid in seconds",
        "* Start date of the certificate being valid in seconds",
        "* Common Name",
        "* Country or region",
        "* Locality",
        "* Organization names",
        "* Organization Unit names",
        "* State or province",
        "* Emitted when the request is aborted. The abort event will not be fired if the\n     * request is already closed.",
        "* Emitted as the last event in the HTTP request-response transaction. The close\n     * event indicates that no more events will be emitted on either the request or\n     * response objects.",
        "* Emitted when the net module fails to issue a network request. Typically when the\n     * request object emits an error event, a close event will subsequently follow and\n     * no response object will be provided.",
        "* an error object providing some information about the failure.",
        "* an error object providing some information about the failure.",
        "* an error object providing some information about the failure.",
        "* an error object providing some information about the failure.",
        "* Emitted just after the last chunk of the request's data has been written into\n     * the request object.",
        "* Emitted when an authenticating proxy is asking for user credentials. The\n     * callback function is expected to be called back with user credentials: Providing\n     * empty credentials will cancel the request and report an authentication error on\n     * the response object:",
        "* Emitted when there is redirection and the mode is manual. Calling\n     * request.followRedirect will continue with the redirection.",
        "* An object representing the HTTP response message.",
        "* An object representing the HTTP response message.",
        "* An object representing the HTTP response message.",
        "* An object representing the HTTP response message.",
        "* Cancels an ongoing HTTP transaction. If the request has already emitted the\n     * close event, the abort operation will have no effect. Otherwise an ongoing event\n     * will emit abort and close events. Additionally, if there is an ongoing response\n     * object,it will emit the aborted event.",
        "* Sends the last chunk of the request data. Subsequent write or end operations\n     * will not be allowed. The finish event is emitted just after the end operation.",
        "* Continues any deferred redirection request when the redirection mode is manual.",
        "* Returns Object - The value of a previously set extra header name.",
        "* Removes a previously set extra header name. This method can be called only\n     * before first write. Trying to call it after the first write will throw an error.",
        "* Adds an extra HTTP header. The header name will issued as it is without\n     * lowercasing. It can be called only before first write. Calling this method after\n     * the first write will throw an error. If the passed value is not a String, its\n     * toString() method will be called to obtain the final value.",
        "* callback is essentially a dummy function introduced in the purpose of keeping\n     * similarity with the Node.js API. It is called asynchronously in the next tick\n     * after chunk content have been delivered to the Chromium networking layer.\n     * Contrary to the Node.js implementation, it is not guaranteed that chunk content\n     * have been flushed on the wire before callback is called. Adds a chunk of data to\n     * the request body. The first write operation may cause the request headers to be\n     * issued on the wire. After the first write operation, it is not allowed to add or\n     * remove a custom header.",
        "* Clears the clipboard content.",
        "* Returns an Object containing title and url keys representing the bookmark in the\n     * clipboard. The title and url values will be empty strings when the bookmark is\n     * unavailable.",
        "* Writes data to the clipboard.",
        "* Writes the title and url into the clipboard as a bookmark. Note: Most apps on\n     * Windows don't support pasting bookmarks into them so you can use clipboard.write\n     * to write both a bookmark and fallback text to the clipboard.",
        "* Writes the text into the find pasteboard as plain text. This method uses\n     * synchronous IPC when called from the renderer process.",
        "* Writes markup to the clipboard.",
        "* Writes image to the clipboard.",
        "* Writes the text into the clipboard in RTF.",
        "* Writes the text into the clipboard as plain text.",
        "* Get the current monitoring traced data. Child processes typically cache trace\n     * data and only rarely flush and send trace data back to the main process. This is\n     * because it may be an expensive operation to send the trace data over IPC and we\n     * would like to avoid unneeded runtime overhead from tracing. So, to end tracing,\n     * we must asynchronously ask all child processes to flush any pending trace data.\n     * Once all child processes have acknowledged the captureMonitoringSnapshot request\n     * the callback will be called with a file that contains the traced data.",
        "* Get a set of category groups. The category groups can change as new code paths\n     * are reached. Once all child processes have acknowledged the getCategories\n     * request the callback is invoked with an array of category groups.",
        "* Get the maximum usage across processes of trace buffer as a percentage of the\n     * full state. When the TraceBufferUsage value is determined the callback is\n     * called.",
        "* Start monitoring on all processes. Monitoring begins immediately locally and\n     * asynchronously on child processes as soon as they receive the startMonitoring\n     * request. Once all child processes have acknowledged the startMonitoring request\n     * the callback will be called.",
        "* Start recording on all processes. Recording begins immediately locally and\n     * asynchronously on child processes as soon as they receive the EnableRecording\n     * request. The callback will be called once all child processes have acknowledged\n     * the startRecording request. categoryFilter is a filter to control what category\n     * groups should be traced. A filter can have an optional - prefix to exclude\n     * category groups that contain a matching category. Having both included and\n     * excluded category patterns in the same list is not supported. Examples:\n     * traceOptions controls what kind of tracing is enabled, it is a comma-delimited\n     * list. Possible options are: The first 3 options are trace recording modes and\n     * hence mutually exclusive. If more than one trace recording modes appear in the\n     * traceOptions string, the last one takes precedence. If none of the trace\n     * recording modes are specified, recording mode is record-until-full. The trace\n     * option will first be reset to the default option (record_mode set to\n     * record-until-full, enable_sampling and enable_systrace set to false) before\n     * options parsed from traceOptions are applied on it.",
        "* Stop monitoring on all processes. Once all child processes have acknowledged the\n     * stopMonitoring request the callback is called.",
        "* Stop recording on all processes. Child processes typically cache trace data and\n     * only rarely flush and send trace data back to the main process. This helps to\n     * minimize the runtime overhead of tracing since sending trace data over IPC can\n     * be an expensive operation. So, to end tracing, we must asynchronously ask all\n     * child processes to flush any pending trace data. Once all child processes have\n     * acknowledged the stopRecording request, callback will be called with a file that\n     * contains the traced data. Trace data will be written into resultFilePath if it\n     * is not empty or into a temporary file. The actual file path will be passed to\n     * callback if it's not null.",
        "* The domain of the cookie.",
        "* The expiration date of the cookie as the number of seconds since the UNIX epoch.\n     * Not provided for session cookies.",
        "* Whether the cookie is a host-only cookie.",
        "* Whether the cookie is marked as HTTP only.",
        "* The name of the cookie.",
        "* The path of the cookie.",
        "* Whether the cookie is marked as secure.",
        "* Whether the cookie is a session cookie or a persistent cookie with an expiration\n     * date.",
        "* The value of the cookie.",
        "* Emitted when a cookie is changed because it was added, edited, removed, or\n     * expired.",
        "* The cookie that was changed",
        "* The cause of the change with one of the following values:",
        "* `true` if the cookie was removed, `false` otherwise.",
        "* The cookie that was changed",
        "* The cause of the change with one of the following values:",
        "* `true` if the cookie was removed, `false` otherwise.",
        "* The cookie that was changed",
        "* The cause of the change with one of the following values:",
        "* `true` if the cookie was removed, `false` otherwise.",
        "* The cookie that was changed",
        "* The cause of the change with one of the following values:",
        "* `true` if the cookie was removed, `false` otherwise.",
        "* Writes any unwritten cookies data to disk.",
        "* Sends a request to get all cookies matching details, callback will be called\n     * with callback(error, cookies) on complete. cookies is an Array of cookie\n     * objects.",
        "* Removes the cookies matching url and name, callback will called with callback()\n     * on complete.",
        "* Sets a cookie with details, callback will be called with callback(error) on\n     * complete.",
        "* The number of average idle cpu wakeups per second since the last call to\n     * getCPUUsage. First call returns 0.",
        "* Percentage of CPU used since the last call to getCPUUsage. First call returns 0.",
        "* Returns the date and ID of the last crash report. If no crash reports have been\n     * sent or the crash reporter has not been started, null is returned.",
        "* Returns all uploaded crash reports. Each report contains the date and uploaded\n     * ID.",
        "* Note: This API can only be called from the main process.",
        "* Set an extra parameter to set be sent with the crash report. The values\n     * specified here will be sent in addition to any values set via the extra option\n     * when start was called. This API is only available on macOS, if you need to\n     * add/update extra parameters on Linux and Windows after your first call to start\n     * you can call start again with the updated extra options.",
        "* This would normally be controlled by user preferences. This has no effect if\n     * called before start is called. Note: This API can only be called from the main\n     * process.",
        "* You are required to call this method before using any other crashReporter APIs\n     * and in each process (main/renderer) from which you want to collect crash\n     * reports. You can pass different options to crashReporter.start when calling from\n     * different processes. Note Child processes created via the child_process module\n     * will not have access to the Electron modules. Therefore, to collect crash\n     * reports from them, use process.crashReporter.start instead. Pass the same\n     * options as above along with an additional one called crashesDirectory that\n     * should point to a directory to store the crash reports temporarily. You can test\n     * this out by calling process.crash() to crash the child process. Note: To collect\n     * crash reports from child process in Windows, you need to add this extra code as\n     * well. This will start the process that will monitor and send the crash reports.\n     * Replace submitURL, productName and crashesDirectory with appropriate values.\n     * Note: If you need send additional/updated extra parameters after your first call\n     * start you can call setExtraParameter on macOS or call start again with the\n     * new/updated extra parameters on Linux and Windows. Note: On macOS, Electron uses\n     * a new crashpad client for crash collection and reporting. If you want to enable\n     * crash reporting, initializing crashpad from the main process using\n     * crashReporter.start is required regardless of which process you want to collect\n     * crashes from. Once initialized this way, the crashpad handler collects crashes\n     * from all processes. You still have to call crashReporter.start from the renderer\n     * or child process, otherwise crashes from them will get reported without\n     * companyName, productName or any of the extra information.",
        "* Emitted when debugging session is terminated. This happens either when\n     * webContents is closed or devtools is invoked for the attached webContents.",
        "* Reason for detaching debugger.",
        "* Reason for detaching debugger.",
        "* Reason for detaching debugger.",
        "* Reason for detaching debugger.",
        "* Emitted whenever debugging target issues instrumentation event.",
        "* Method name.",
        "* Event parameters defined by the 'parameters' attribute in the remote debugging\n                                     * protocol.",
        "* Method name.",
        "* Event parameters defined by the 'parameters' attribute in the remote debugging\n                                     * protocol.",
        "* Method name.",
        "* Event parameters defined by the 'parameters' attribute in the remote debugging\n                                     * protocol.",
        "* Method name.",
        "* Event parameters defined by the 'parameters' attribute in the remote debugging\n                                     * protocol.",
        "* Attaches the debugger to the webContents.",
        "* Detaches the debugger from the webContents.",
        "* Send given command to the debugging target.",
        "* Starts gathering information about all available desktop media sources, and\n     * calls callback(error, sources) when finished. sources is an array of\n     * DesktopCapturerSource objects, each DesktopCapturerSource represents a screen or\n     * an individual window that can be captured.",
        "* The identifier of a window or screen that can be used as a chromeMediaSourceId\n     * constraint when calling [navigator.webkitGetUserMedia]. The format of the\n     * identifier will be window:XX or screen:XX, where XX is a random generated\n     * number.",
        "* A screen source will be named either Entire Screen or Screen <index>, while the\n     * name of a window source will match the window title.",
        "* A thumbnail image. There is no guarantee that the size of the thumbnail is the\n     * same as the thumbnailSize specified in the options passed to\n     * desktopCapturer.getSources. The actual size depends on the scale of the screen\n     * or window.",
        "* On macOS, this displays a modal dialog that shows a message and certificate\n     * information, and gives the user the option of trusting/importing the\n     * certificate. If you provide a browserWindow argument the dialog will be attached\n     * to the parent window, making it modal. On Windows the options are more limited,\n     * due to the Win32 APIs used:",
        "* On macOS, this displays a modal dialog that shows a message and certificate\n     * information, and gives the user the option of trusting/importing the\n     * certificate. If you provide a browserWindow argument the dialog will be attached\n     * to the parent window, making it modal. On Windows the options are more limited,\n     * due to the Win32 APIs used:",
        "* On macOS, this displays a modal dialog that shows a message and certificate\n     * information, and gives the user the option of trusting/importing the\n     * certificate. If you provide a browserWindow argument the dialog will be attached\n     * to the parent window, making it modal. On Windows the options are more limited,\n     * due to the Win32 APIs used:",
        "* Displays a modal dialog that shows an error message. This API can be called\n     * safely before the ready event the app module emits, it is usually used to report\n     * errors in early stage of startup.  If called before the app readyevent on Linux,\n     * the message will be emitted to stderr, and no GUI dialog will appear.",
        "* Shows a message box, it will block the process until the message box is closed.\n     * It returns the index of the clicked button. The browserWindow argument allows\n     * the dialog to attach itself to a parent window, making it modal. If a callback\n     * is passed, the dialog will not block the process. The API call will be\n     * asynchronous and the result will be passed via callback(response).",
        "* Shows a message box, it will block the process until the message box is closed.\n     * It returns the index of the clicked button. The browserWindow argument allows\n     * the dialog to attach itself to a parent window, making it modal. If a callback\n     * is passed, the dialog will not block the process. The API call will be\n     * asynchronous and the result will be passed via callback(response).",
        "* The browserWindow argument allows the dialog to attach itself to a parent\n     * window, making it modal. The filters specifies an array of file types that can\n     * be displayed or selected when you want to limit the user to a specific type. For\n     * example: The extensions array should contain extensions without wildcards or\n     * dots (e.g. 'png' is good but '.png' and '*.png' are bad). To show all files, use\n     * the '*' wildcard (no other wildcard is supported). If a callback is passed, the\n     * API call will be asynchronous and the result will be passed via\n     * callback(filenames) Note: On Windows and Linux an open dialog can not be both a\n     * file selector and a directory selector, so if you set properties to ['openFile',\n     * 'openDirectory'] on these platforms, a directory selector will be shown.",
        "* The browserWindow argument allows the dialog to attach itself to a parent\n     * window, making it modal. The filters specifies an array of file types that can\n     * be displayed or selected when you want to limit the user to a specific type. For\n     * example: The extensions array should contain extensions without wildcards or\n     * dots (e.g. 'png' is good but '.png' and '*.png' are bad). To show all files, use\n     * the '*' wildcard (no other wildcard is supported). If a callback is passed, the\n     * API call will be asynchronous and the result will be passed via\n     * callback(filenames) Note: On Windows and Linux an open dialog can not be both a\n     * file selector and a directory selector, so if you set properties to ['openFile',\n     * 'openDirectory'] on these platforms, a directory selector will be shown.",
        "* The browserWindow argument allows the dialog to attach itself to a parent\n     * window, making it modal. The filters specifies an array of file types that can\n     * be displayed, see dialog.showOpenDialog for an example. If a callback is passed,\n     * the API call will be asynchronous and the result will be passed via\n     * callback(filename)",
        "* The browserWindow argument allows the dialog to attach itself to a parent\n     * window, making it modal. The filters specifies an array of file types that can\n     * be displayed, see dialog.showOpenDialog for an example. If a callback is passed,\n     * the API call will be asynchronous and the result will be passed via\n     * callback(filename)",
        "* Unique identifier associated with the display.",
        "* Can be 0, 90, 180, 270, represents screen rotation in clock-wise degrees.",
        "* Output device's pixel scale factor.",
        "* Can be available, unavailable, unknown.",
        "* Emitted when the download is in a terminal state. This includes a completed\n     * download, a cancelled download (via downloadItem.cancel()), and interrupted\n     * download that can't be resumed. The state can be one of following:",
        "* Emitted when the download has been updated and is not done. The state can be one\n     * of following:",
        "* Cancels the download operation.",
        "* Resumes Boolean - Whether the download can resume.",
        "* Note: The file name is not always the same as the actual one saved in local\n     * disk. If user changes the file name in a prompted download saving dialog, the\n     * actual name of saved file will be different.",
        "* Note: The following methods are useful specifically to resume a cancelled item\n     * when session is restarted.",
        "* If the size is unknown, it returns 0.",
        "* Pauses the download.",
        "* Resumes the download that has been paused. Note: To enable resumable downloads\n     * the server you are downloading from must support range requests and provide both\n     * Last-Modified and ETag header values. Otherwise resume() will dismiss previously\n     * received bytes and restart the download from the beginning.",
        "* The API is only available in session's will-download callback function. If user\n     * doesn't set the save path via the API, Electron will use the original routine to\n     * determine the save path(Usually prompts a save dialog).",
        "* When the accelerator is already taken by other applications, this call will\n     * still return false. This behavior is intended by operating systems, since they\n     * don't want applications to fight for global shortcuts.",
        "* Registers a global shortcut of accelerator. The callback is called when the\n     * registered shortcut is pressed by the user. When the accelerator is already\n     * taken by other applications, this call will silently fail. This behavior is\n     * intended by operating systems, since they don't want applications to fight for\n     * global shortcuts.",
        "* Unregisters the global shortcut of accelerator.",
        "* Unregisters all of the global shortcuts.",
        "* Emitted when a request has been canceled during an ongoing HTTP transaction.",
        "* The data event is the usual method of transferring response data into\n     * applicative code.",
        "* A chunk of response body's data.",
        "* A chunk of response body's data.",
        "* A chunk of response body's data.",
        "* A chunk of response body's data.",
        "* Indicates that response body has ended.",
        "* error Error - Typically holds an error string identifying failure root cause.\n     * Emitted when an error was encountered while streaming response data events. For\n     * instance, if the server closes the underlying while the response is still\n     * streaming, an error event will be emitted on the response object and a close\n     * event will subsequently follow on the request object.",
        "* Then number of I/O other operations.",
        "* Then number of I/O other transfers.",
        "* The number of I/O read operations.",
        "* The number of I/O read transfers.",
        "* The number of I/O write operations.",
        "* The number of I/O write transfers.",
        "* Listens to channel, when a new message arrives listener would be called with\n     * listener(event, args...).",
        "* Adds a one time listener function for the event. This listener is invoked only\n     * the next time a message is sent to channel, after which it is removed.",
        "* Removes all listeners, or those of the specified channel.",
        "* Removes the specified listener from the listener array for the specified\n     * channel.",
        "* Listens to channel, when a new message arrives listener would be called with\n     * listener(event, args...).",
        "* Adds a one time listener function for the event. This listener is invoked only\n     * the next time a message is sent to channel, after which it is removed.",
        "* Removes all listeners, or those of the specified channel.",
        "* Removes the specified listener from the listener array for the specified\n     * channel.",
        "* Send a message to the main process asynchronously via channel, you can also send\n     * arbitrary arguments. Arguments will be serialized in JSON internally and hence\n     * no functions or prototype chain will be included. The main process handles it by\n     * listening for channel with ipcMain module.",
        "* Send a message to the main process synchronously via channel, you can also send\n     * arbitrary arguments. Arguments will be serialized in JSON internally and hence\n     * no functions or prototype chain will be included. The main process handles it by\n     * listening for channel with ipcMain module, and replies by setting\n     * event.returnValue. Note: Sending a synchronous message will block the whole\n     * renderer process, unless you know what you are doing you should never use it.",
        "* Like ipcRenderer.send but the event will be sent to the <webview> element in the\n     * host page instead of the main process.",
        "* Array of objects if type is tasks or custom, otherwise it should be omitted.",
        "* Must be set if type is custom, otherwise it should be omitted.",
        "* One of the following:",
        "* The command line arguments when program is executed. Should only be set if type\n     * is task.",
        "* Description of the task (displayed in a tooltip). Should only be set if type is\n     * task.",
        "* The index of the icon in the resource file. If a resource file contains multiple\n     * icons this value can be used to specify the zero-based index of the icon that\n     * should be displayed for this task. If a resource file contains only one icon,\n     * this property should be set to zero.",
        "* The absolute path to an icon to be displayed in a Jump List, which can be an\n     * arbitrary resource file that contains an icon (e.g. .ico, .exe, .dll). You can\n     * usually specify process.execPath to show the program icon.",
        "* Path of the file to open, should only be set if type is file.",
        "* Path of the program to execute, usually you should specify process.execPath\n     * which opens the current program. Should only be set if type is task.",
        "* The text to be displayed for the item in the Jump List. Should only be set if\n     * type is task.",
        "* One of the following:",
        "* The maximum amount of memory that has ever been pinned to actual physical RAM.",
        "* Process id of the process.",
        "* The amount of memory not shared by other processes, such as JS heap or HTML\n     * content.",
        "* The amount of memory shared between processes, typically memory consumed by the\n     * Electron code itself",
        "* The amount of memory currently pinned to actual physical RAM.",
        "* Generally, the template is just an array of options for constructing a MenuItem.\n     * The usage can be referenced above. You can also attach other fields to the\n     * element of the template and they will become properties of the constructed menu\n     * items.",
        "* Note: The returned Menu instance doesn't support dynamic addition or removal of\n     * menu items. Instance properties can still be dynamically modified.",
        "* Sends the action to the first responder of application. This is used for\n     * emulating default macOS menu behaviors. Usually you would just use the role\n     * property of a MenuItem. See the macOS Cocoa Event Handling Guide for more\n     * information on macOS' native actions.",
        "* Sets menu as the application menu on macOS. On Windows and Linux, the menu will\n     * be set as each window's top menu. Passing null will remove the menu bar on\n     * Windows and Linux but has no effect on macOS. Note: This API has to be called\n     * after the ready event of app module.",
        "* Appends the menuItem to the menu.",
        "* Closes the context menu in the browserWindow.",
        "* Inserts the menuItem to the pos position of the menu.",
        "* Pops up this menu as a context menu in the browserWindow.",
        "* The actual Buffer content",
        "* The mimeType of the Buffer that you are sending",
        "* Creates an empty NativeImage instance.",
        "* Creates a new NativeImage instance from buffer.",
        "* Creates a new NativeImage instance from dataURL.",
        "* Creates a new NativeImage instance from a file located at path. This method\n     * returns an empty image if the path does not exist, cannot be read, or is not a\n     * valid image.",
        "* Add an image representation for a specific scale factor. This can be used to\n     * explicitly add different scale factor representations to an image. This can be\n     * called on empty images.",
        "* The difference between getBitmap() and toBitmap() is, getBitmap() does not copy\n     * the bitmap data, so you have to use the returned Buffer immediately in current\n     * event loop tick, otherwise the data might be changed or destroyed.",
        "* Notice that the returned pointer is a weak pointer to the underlying native\n     * image instead of a copy, so you must ensure that the associated nativeImage\n     * instance is kept around.",
        "* If only the height or the width are specified then the current aspect ratio will\n     * be preserved in the resized image.",
        "* Marks the image as a template image.",
        "* Creates a ClientRequest instance using the provided options which are directly\n     * forwarded to the ClientRequest constructor. The net.request method would be used\n     * to issue both secure and insecure HTTP requests according to the specified\n     * protocol scheme in the options object.",
        "* Emitted when the system changes to AC power.",
        "* Emitted when system changes to battery power.",
        "* Emitted when system is resuming.",
        "* Emitted when the system is suspending.",
        "* Starts preventing the system from entering lower-power mode. Returns an integer\n     * identifying the power save blocker. Note: prevent-display-sleep has higher\n     * precedence over prevent-app-suspension. Only the highest precedence type takes\n     * effect. In other words, prevent-display-sleep always takes precedence over\n     * prevent-app-suspension. For example, an API calling A requests for\n     * prevent-app-suspension, and another calling B requests for\n     * prevent-display-sleep. prevent-display-sleep will be used until B stops its\n     * request. After that, prevent-app-suspension is used.",
        "* Stops the specified power save blocker.",
        "* Memory information of the process.",
        "* Process id of the process.",
        "* Intercepts scheme protocol and uses handler as the protocol's new handler which\n     * sends a Buffer as a response.",
        "* Intercepts scheme protocol and uses handler as the protocol's new handler which\n     * sends a file as a response.",
        "* Intercepts scheme protocol and uses handler as the protocol's new handler which\n     * sends a new HTTP request as a response.",
        "* Intercepts scheme protocol and uses handler as the protocol's new handler which\n     * sends a String as a response.",
        "* The callback will be called with a boolean that indicates whether there is\n     * already a handler for scheme.",
        "* Registers a protocol of scheme that will send a Buffer as a response. The usage\n     * is the same with registerFileProtocol, except that the callback should be called\n     * with either a Buffer object or an object that has the data, mimeType, and\n     * charset properties. Example:",
        "* Registers a protocol of scheme that will send the file as a response. The\n     * handler will be called with handler(request, callback) when a request is going\n     * to be created with scheme. completion will be called with completion(null) when\n     * scheme is successfully registered or completion(error) when failed. To handle\n     * the request, the callback should be called with either the file's path or an\n     * object that has a path property, e.g. callback(filePath) or callback({path:\n     * filePath}). When callback is called with nothing, a number, or an object that\n     * has an error property, the request will fail with the error number you\n     * specified. For the available error numbers you can use, please see the net error\n     * list. By default the scheme is treated like http:, which is parsed differently\n     * than protocols that follow the \"generic URI syntax\" like file:, so you probably\n     * want to call protocol.registerStandardSchemes to have your scheme treated as a\n     * standard scheme.",
        "* Registers a protocol of scheme that will send an HTTP request as a response. The\n     * usage is the same with registerFileProtocol, except that the callback should be\n     * called with a redirectRequest object that has the url, method, referrer,\n     * uploadData and session properties. By default the HTTP request will reuse the\n     * current session. If you want the request to have a different session you should\n     * set session to null. For POST requests the uploadData object must be provided.",
        "* A standard scheme adheres to what RFC 3986 calls generic URI syntax. For example\n     * http and https are standard schemes, while file is not. Registering a scheme as\n     * standard, will allow relative and absolute resources to be resolved correctly\n     * when served. Otherwise the scheme will behave like the file protocol, but\n     * without the ability to resolve relative URLs. For example when you load\n     * following page with custom protocol without registering it as standard scheme,\n     * the image will not be loaded because non-standard schemes can not recognize\n     * relative URLs: Registering a scheme as standard will allow access to files\n     * through the FileSystem API. Otherwise the renderer will throw a security error\n     * for the scheme. By default web storage apis (localStorage, sessionStorage,\n     * webSQL, indexedDB, cookies) are disabled for non standard schemes. So in general\n     * if you want to register a custom protocol to replace the http protocol, you have\n     * to register it as a standard scheme: Note: This method can only be used before\n     * the ready event of the app module gets emitted.",
        "* Registers a protocol of scheme that will send a String as a response. The usage\n     * is the same with registerFileProtocol, except that the callback should be called\n     * with either a String or an object that has the data, mimeType, and charset\n     * properties.",
        "* Remove the interceptor installed for scheme and restore its original handler.",
        "* Unregisters the custom protocol of scheme.",
        "* The x coordinate of the origin of the rectangle",
        "* The y coordinate of the origin of the rectangle",
        "* e.g.",
        "* The process object in the main process. This is the same as\n     * remote.getGlobal('process') but is cached.",
        "* Origin of the server whose associated client certificate must be removed from\n     * the cache.",
        "* clientCertificate.",
        "* When provided, the authentication info related to the origin will only be\n     * removed otherwise the entire cache will be cleared.",
        "* Credentials of the authentication. Must be provided if removing by origin.",
        "* Realm of the authentication. Must be provided if removing by origin.",
        "* Scheme of the authentication. Can be basic, digest, ntlm, negotiate. Must be\n     * provided if removing by origin.",
        "* password.",
        "* Credentials of the authentication. Must be provided if removing by origin.",
        "* Emitted when newDisplay has been added.",
        "* Emitted when one or more metrics change in a display. The changedMetrics is an\n     * array of strings that describe the changes. Possible changes are bounds,\n     * workArea, scaleFactor and rotation.",
        "* Emitted when oldDisplay has been removed.",
        "* The current absolute position of the mouse pointer.",
        "* The image to appear in this item",
        "* The text to appear in this item",
        "* Whether this segment is selectable. Default: true",
        "* The image to appear in this segment",
        "* The text to appear in this segment",
        "* If partition starts with persist:, the page will use a persistent session\n     * available to all pages in the app with the same partition. if there is no\n     * persist: prefix, the page will use an in-memory session. If the partition is\n     * empty then default session of the app will be returned. To create a Session with\n     * options, you have to ensure the Session with the partition has never been used\n     * before. There is no way to change the options of an existing Session object.",
        "* A Session object, the default session object of the app.",
        "* Emitted when Electron is about to download item in webContents. Calling\n     * event.preventDefault() will cancel the download and item will not be available\n     * from next tick of the process.",
        "* Dynamically sets whether to always send credentials for HTTP NTLM or Negotiate\n     * authentication.",
        "* Clears the session’s HTTP authentication cache.",
        "* Clears the session’s HTTP cache.",
        "* Clears the host resolver cache.",
        "* Clears the data of web storages.",
        "* Allows resuming cancelled or interrupted downloads from previous Session. The\n     * API will generate a DownloadItem that can be accessed with the will-download\n     * event. The DownloadItem will not have any WebContents associated with it and the\n     * initial state will be interrupted. The download will start only when the resume\n     * API is called on the DownloadItem.",
        "* Disables any network emulation already active for the session. Resets to the\n     * original network configuration.",
        "* Emulates network with the given configuration for the session.",
        "* Writes any unwritten DOMStorage data to disk.",
        "* Callback is invoked with the session's current cache size.",
        "* Resolves the proxy information for url. The callback will be called with\n     * callback(proxy) when the request is performed.",
        "* Sets the certificate verify proc for session, the proc will be called with\n     * proc(request, callback) whenever a server certificate verification is requested.\n     * Calling callback(0) accepts the certificate, calling callback(-2) rejects it.\n     * Calling setCertificateVerifyProc(null) will revert back to default certificate\n     * verify proc.",
        "* Sets download saving directory. By default, the download directory will be the\n     * Downloads under the respective app folder.",
        "* Sets the handler which can be used to respond to permission requests for the\n     * session. Calling callback(true) will allow the permission and callback(false)\n     * will reject it.",
        "* Sets the proxy settings. When pacScript and proxyRules are provided together,\n     * the proxyRules option is ignored and pacScript configuration is applied. The\n     * proxyRules has to follow the rules below: For example: The proxyBypassRules is a\n     * comma separated list of rules described below:",
        "* Overrides the userAgent and acceptLanguages for this session. The\n     * acceptLanguages must a comma separated ordered list of language codes, for\n     * example \"en-US,fr,de,ko,zh-CN,ja\". This doesn't affect existing WebContents, and\n     * each WebContents can use webContents.setUserAgent to override the session-wide\n     * user agent.",
        "* Play the beep sound.",
        "* Move the given file to trash and returns a boolean status for the operation.",
        "* Open the given external protocol URL in the desktop's default manner. (For\n     * example, mailto: URLs in the user's default mail agent).",
        "* Open the given file in the desktop's default manner.",
        "* Resolves the shortcut link at shortcutPath. An exception will be thrown when any\n     * error happens.",
        "* Show the given file in a file manager. If possible, select the file.",
        "* Creates or updates a shortcut link at shortcutPath.",
        "* Creates or updates a shortcut link at shortcutPath.",
        "* The Application User Model ID. Default is empty.",
        "* The arguments to be applied to target when launching from this shortcut. Default\n     * is empty.",
        "* The working directory. Default is empty.",
        "* The description of the shortcut. Default is empty.",
        "* The path to the icon, can be a DLL or EXE. icon and iconIndex have to be set\n     * together. Default is empty, which uses the target's icon.",
        "* The resource ID of icon when icon is a DLL or EXE. Default is 0.",
        "* The target to launch from this shortcut.",
        "* The new RGBA color the user assigned to be their system accent color.",
        "* The new RGBA color the user assigned to be their system accent color.",
        "* The new RGBA color the user assigned to be their system accent color.",
        "* The new RGBA color the user assigned to be their system accent color.",
        "* `true` if an inverted color scheme, such as a high contrast theme, is being\n                                                           * used, `false` otherwise.",
        "* `true` if an inverted color scheme, such as a high contrast theme, is being\n                                                           * used, `false` otherwise.",
        "* `true` if an inverted color scheme, such as a high contrast theme, is being\n                                                           * used, `false` otherwise.",
        "* `true` if an inverted color scheme, such as a high contrast theme, is being\n                                                           * used, `false` otherwise.",
        "* Get the value of key in system preferences. This API uses NSUserDefaults on\n     * macOS. Some popular key and types are:",
        "* This method returns true if DWM composition (Aero Glass) is enabled, and false\n     * otherwise. An example of using it to determine if you should create a\n     * transparent window or not (transparent windows won't work correctly when DWM\n     * composition is disabled):",
        "* Posts event as native notifications of macOS. The userInfo is an Object that\n     * contains the user information dictionary sent along with the notification.",
        "* Posts event as native notifications of macOS. The userInfo is an Object that\n     * contains the user information dictionary sent along with the notification.",
        "* Set the value of key in system preferences. Note that type should match actual\n     * type of value. An exception is thrown if they don't. This API uses\n     * NSUserDefaults on macOS. Some popular key and types are:",
        "* Same as subscribeNotification, but uses NSNotificationCenter for local defaults.\n     * This is necessary for events such as NSUserDefaultsDidChangeNotification",
        "* Subscribes to native notifications of macOS, callback will be called with\n     * callback(event, userInfo) when the corresponding event happens. The userInfo is\n     * an Object that contains the user information dictionary sent along with the\n     * notification. The id of the subscriber is returned, which can be used to\n     * unsubscribe the event. Under the hood this API subscribes to\n     * NSDistributedNotificationCenter, example values of event are:",
        "* Same as unsubscribeNotification, but removes the subscriber from\n     * NSNotificationCenter.",
        "* Removes the subscriber with id.",
        "* The command line arguments when program is executed.",
        "* Description of this task.",
        "* The icon index in the icon file. If an icon file consists of two or more icons,\n     * set this value to identify the icon. If an icon file consists of one icon, this\n     * value is 0.",
        "* The absolute path to an icon to be displayed in a JumpList, which can be an\n     * arbitrary resource file that contains an icon. You can usually specify\n     * process.execPath to show the icon of the program.",
        "* Path of the program to execute, usually you should specify process.execPath\n     * which opens the current program.",
        "* The string to be displayed in a JumpList.",
        "* Control specific states and behaviors of the button. By default, it is\n     * ['enabled'].",
        "* The icon showing in thumbnail toolbar.",
        "* The text of the button's tooltip.",
        "* Emitted when the tray balloon is clicked.",
        "* Emitted when the tray balloon is closed because of timeout or user manually\n     * closes it.",
        "* Emitted when the tray balloon shows.",
        "* Emitted when the tray icon is clicked.",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* Emitted when the tray icon is double clicked.",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* Emitted when a drag operation ends on the tray or ends at another location.",
        "* Emitted when a drag operation enters the tray icon.",
        "* Emitted when a drag operation exits the tray icon.",
        "* Emitted when any dragged items are dropped on the tray icon.",
        "* Emitted when dragged files are dropped in the tray icon.",
        "* The paths of the dropped files.",
        "* The paths of the dropped files.",
        "* The paths of the dropped files.",
        "* The paths of the dropped files.",
        "* Emitted when dragged text is dropped in the tray icon.",
        "* the dropped text string",
        "* the dropped text string",
        "* the dropped text string",
        "* the dropped text string",
        "* Emitted when the tray icon is right clicked.",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* The bounds of tray icon",
        "* Destroys the tray icon immediately.",
        "* Displays a tray balloon.",
        "* The bounds of this tray icon as Object.",
        "* Pops up the context menu of the tray icon. When menu is passed, the menu will be\n     * shown instead of the tray icon's context menu. The position is only available on\n     * Windows, and it is (0, 0) by default.",
        "* Sets the context menu for this icon.",
        "* Sets when the tray's icon background becomes highlighted (in blue). Note: You\n     * can use highlightMode with a BrowserWindow by toggling between 'never' and\n     * 'always' modes when the window visibility changes.",
        "* Sets the image associated with this tray icon.",
        "* Sets the image associated with this tray icon when pressed on macOS.",
        "* Sets the title displayed aside of the tray icon in the status bar.",
        "* Sets the hover text for this tray icon.",
        "* UUID of blob data to upload.",
        "* blob.",
        "* UUID of blob data. Use method to retrieve the data.",
        "* Content being sent.",
        "* Path of file being uploaded.",
        "* Path of file to be uploaded.",
        "* Number of bytes to read from offset. Defaults to 0.",
        "* Last Modification time in number of seconds sine the UNIX epoch.",
        "* Defaults to 0.",
        "* file.",
        "* FileSystem url to read data for upload.",
        "* Number of bytes to read from offset. Defaults to 0.",
        "* Last Modification time in number of seconds sine the UNIX epoch.",
        "* Defaults to 0.",
        "* fileSystem.",
        "* Data to be uploaded.",
        "* rawData.",
        "* Emitted before dispatching the keydown and keyup events in the page. Calling\n     * event.preventDefault will prevent the page keydown/keyup events from being\n     * dispatched.",
        "* Input properties",
        "* Input properties",
        "* Input properties",
        "* Input properties",
        "* Emitted when failed to verify the certificate for url. The usage is the same\n     * with the certificate-error event of app.",
        "* The error code",
        "* The error code",
        "* The error code",
        "* The error code",
        "* Emitted when there is a new context menu that needs to be handled.",
        "* Emitted when the renderer process crashes or is killed.",
        "* Emitted when the cursor's type changes. The type parameter can be default,\n     * crosshair, pointer, text, wait, help, e-resize, n-resize, ne-resize, nw-resize,\n     * s-resize, se-resize, sw-resize, w-resize, ns-resize, ew-resize, nesw-resize,\n     * nwse-resize, col-resize, row-resize, m-panning, e-panning, n-panning,\n     * ne-panning, nw-panning, s-panning, se-panning, sw-panning, w-panning, move,\n     * vertical-text, cell, context-menu, alias, progress, nodrop, copy, none,\n     * not-allowed, zoom-in, zoom-out, grab, grabbing, custom. If the type parameter is\n     * custom, the image parameter will hold the custom cursor image in a NativeImage,\n     * and scale, size and hotspot will hold additional information about the custom\n     * cursor.",
        "* scaling factor for the custom cursor",
        "* the size of the `image`",
        "* coordinates of the custom cursor's hotspot",
        "* scaling factor for the custom cursor",
        "* the size of the `image`",
        "* coordinates of the custom cursor's hotspot",
        "* scaling factor for the custom cursor",
        "* the size of the `image`",
        "* coordinates of the custom cursor's hotspot",
        "* scaling factor for the custom cursor",
        "* the size of the `image`",
        "* coordinates of the custom cursor's hotspot",
        "* Emitted when webContents is destroyed.",
        "* Emitted when DevTools is closed.",
        "* Emitted when DevTools is focused / opened.",
        "* Emitted when DevTools is opened.",
        "* Emitted when the devtools window instructs the webContents to reload",
        "* Emitted when a page's theme color changes. This is usually due to encountering a\n     * meta tag:",
        "* This event is like did-finish-load but emitted when the load failed or was\n     * cancelled, e.g. window.stop() is invoked. The full list of error codes and their\n     * meaning is available here.",
        "* Emitted when the navigation is done, i.e. the spinner of the tab has stopped\n     * spinning, and the onload event was dispatched.",
        "* Emitted when a frame has done navigation.",
        "* Emitted when a redirect is received while requesting a resource.",
        "* Emitted when details regarding a requested resource are available. status\n     * indicates the socket connection to download the resource.",
        "* Emitted when a navigation is done. This event is not emitted for in-page\n     * navigations, such as clicking anchor links or updating the window.location.hash.\n     * Use did-navigate-in-page event for this purpose.",
        "* Emitted when an in-page navigation happened. When in-page navigation happens,\n     * the page URL changes but does not cause navigation outside of the page. Examples\n     * of this occurring are when anchor links are clicked or when the DOM hashchange\n     * event is triggered.",
        "* Corresponds to the points in time when the spinner of the tab started spinning.",
        "* Corresponds to the points in time when the spinner of the tab stopped spinning.",
        "* Emitted when the document in the given frame is loaded.",
        "* Emitted when a result is available for [webContents.findInPage] request.",
        "* Emitted when webContents wants to do basic auth. The usage is the same with the\n     * login event of app.",
        "* Emitted when media is paused or done playing.",
        "* Emitted when media starts playing.",
        "* Emitted when the page requests to open a new window for a url. It could be\n     * requested by window.open or an external link like <a target='_blank'>. By\n     * default a new BrowserWindow will be created for the url. Calling\n     * event.preventDefault() will prevent Electron from automatically creating a new\n     * BrowserWindow. If you call event.preventDefault() and manually create a new\n     * BrowserWindow then you must set event.newGuest to reference the new\n     * BrowserWindow instance, failing to do so may result in unexpected behavior. For\n     * example:",
        "* Can be `default`, `foreground-tab`, `background-tab`, `new-window`,\n                                        * `save-to-disk` and `other`.",
        "* The options which will be used for creating the new `BrowserWindow`.",
        "* The non-standard features (features not handled by Chromium or Electron) given\n                                        * to `window.open()`.",
        "* Can be `default`, `foreground-tab`, `background-tab`, `new-window`,\n                                        * `save-to-disk` and `other`.",
        "* The options which will be used for creating the new `BrowserWindow`.",
        "* The non-standard features (features not handled by Chromium or Electron) given\n                                        * to `window.open()`.",
        "* Can be `default`, `foreground-tab`, `background-tab`, `new-window`,\n                                        * `save-to-disk` and `other`.",
        "* The options which will be used for creating the new `BrowserWindow`.",
        "* The non-standard features (features not handled by Chromium or Electron) given\n                                        * to `window.open()`.",
        "* Can be `default`, `foreground-tab`, `background-tab`, `new-window`,\n                                        * `save-to-disk` and `other`.",
        "* The options which will be used for creating the new `BrowserWindow`.",
        "* The non-standard features (features not handled by Chromium or Electron) given\n                                        * to `window.open()`.",
        "* Emitted when page receives favicon urls.",
        "* Array of URLs",
        "* Array of URLs",
        "* Array of URLs",
        "* Array of URLs",
        "* Emitted when a new frame is generated. Only the dirty area is passed in the\n     * buffer.",
        "* The image data of the whole frame.",
        "* The image data of the whole frame.",
        "* The image data of the whole frame.",
        "* The image data of the whole frame.",
        "* Emitted when a plugin process has crashed.",
        "* Emitted when bluetooth device needs to be selected on call to\n     * navigator.bluetooth.requestDevice. To use navigator.bluetooth api webBluetooth\n     * should be enabled.  If event.preventDefault is not called, first available\n     * device will be selected. callback should be called with deviceId to be selected,\n     * passing empty string to callback will cancel the request.",
        "* Emitted when a client certificate is requested. The usage is the same with the\n     * select-client-certificate event of app.",
        "* Emitted when mouse moves over a link or the keyboard moves the focus to a link.",
        "* Emitted when a <webview>'s web contents is being attached to this web contents.\n     * Calling event.preventDefault() will destroy the guest page. This event can be\n     * used to configure webPreferences for the webContents of a <webview> before it's\n     * loaded, and provides the ability to set settings that can't be set via <webview>\n     * attributes.",
        "* The web preferences that will be used by the guest page. This object can be\n                                                 * modified to adjust the preferences for the guest page.",
        "* The other `<webview>` parameters such as the `src` URL. This object can be\n                                                 * modified to adjust the parameters of the guest page.",
        "* The web preferences that will be used by the guest page. This object can be\n                                                 * modified to adjust the preferences for the guest page.",
        "* The other `<webview>` parameters such as the `src` URL. This object can be\n                                                 * modified to adjust the parameters of the guest page.",
        "* The web preferences that will be used by the guest page. This object can be\n                                                 * modified to adjust the preferences for the guest page.",
        "* The other `<webview>` parameters such as the `src` URL. This object can be\n                                                 * modified to adjust the parameters of the guest page.",
        "* The web preferences that will be used by the guest page. This object can be\n                                                 * modified to adjust the preferences for the guest page.",
        "* The other `<webview>` parameters such as the `src` URL. This object can be\n                                                 * modified to adjust the parameters of the guest page.",
        "* Emitted when a user or the page wants to start navigation. It can happen when\n     * the window.location object is changed or a user clicks a link in the page. This\n     * event will not emit when the navigation is started programmatically with APIs\n     * like webContents.loadURL and webContents.back. It is also not emitted for\n     * in-page navigations, such as clicking anchor links or updating the\n     * window.location.hash. Use did-navigate-in-page event for this purpose. Calling\n     * event.preventDefault() will prevent the navigation.",
        "* Emitted when a beforeunload event handler is attempting to cancel a page unload.\n     * Calling event.preventDefault() will ignore the beforeunload event handler and\n     * allow the page to be unloaded.",
        "* Adds the specified path to DevTools workspace. Must be used after DevTools\n     * creation:",
        "* Begin subscribing for presentation events and captured frames, the callback will\n     * be called with callback(frameBuffer, dirtyRect) when there is a presentation\n     * event. The frameBuffer is a Buffer that contains raw pixel data. On most\n     * machines, the pixel data is effectively stored in 32bit BGRA format, but the\n     * actual representation depends on the endianness of the processor (most modern\n     * processors are little-endian, on machines with big-endian processors the data is\n     * in 32bit ARGB format). The dirtyRect is an object with x, y, width, height\n     * properties that describes which part of the page was repainted. If onlyDirty is\n     * set to true, frameBuffer will only contain the repainted area. onlyDirty\n     * defaults to false.",
        "* Begin subscribing for presentation events and captured frames, the callback will\n     * be called with callback(frameBuffer, dirtyRect) when there is a presentation\n     * event. The frameBuffer is a Buffer that contains raw pixel data. On most\n     * machines, the pixel data is effectively stored in 32bit BGRA format, but the\n     * actual representation depends on the endianness of the processor (most modern\n     * processors are little-endian, on machines with big-endian processors the data is\n     * in 32bit ARGB format). The dirtyRect is an object with x, y, width, height\n     * properties that describes which part of the page was repainted. If onlyDirty is\n     * set to true, frameBuffer will only contain the repainted area. onlyDirty\n     * defaults to false.",
        "* Captures a snapshot of the page within rect. Upon completion callback will be\n     * called with callback(image). The image is an instance of NativeImage that stores\n     * data of the snapshot. Omitting rect will capture the whole visible page.",
        "* Captures a snapshot of the page within rect. Upon completion callback will be\n     * called with callback(image). The image is an instance of NativeImage that stores\n     * data of the snapshot. Omitting rect will capture the whole visible page.",
        "* Clears the navigation history.",
        "* Closes the devtools.",
        "* Executes the editing command copy in web page.",
        "* Copy the image at the given position to the clipboard.",
        "* Executes the editing command cut in web page.",
        "* Executes the editing command delete in web page.",
        "* Disable device emulation enabled by webContents.enableDeviceEmulation.",
        "* Initiates a download of the resource at url without navigating. The\n     * will-download event of session will be triggered.",
        "* Enable device emulation with the given parameters.",
        "* End subscribing for frame presentation events.",
        "* Evaluates code in page. In the browser window some HTML APIs like\n     * requestFullScreen can only be invoked by a gesture from the user. Setting\n     * userGesture to true will remove this limitation. If the result of the executed\n     * code is a promise the callback result will be the resolved value of the promise.\n     *  We recommend that you use the returned Promise to handle code that results in a\n     * Promise.",
        "* Starts a request to find all matches for the text in the web page and returns an\n     * Integer representing the request id used for the request. The result of the\n     * request can be obtained by subscribing to found-in-page event.",
        "* Sends a request to get current zoom factor, the callback will be called with\n     * callback(zoomFactor).",
        "* Sends a request to get current zoom level, the callback will be called with\n     * callback(zoomLevel).",
        "* Makes the browser go back a web page.",
        "* Makes the browser go forward a web page.",
        "* Navigates browser to the specified absolute web page index.",
        "* Navigates to the specified offset from the \"current entry\".",
        "* Checks if any ServiceWorker is registered and returns a boolean as response to\n     * callback.",
        "* Injects CSS into the current web page.",
        "* Inserts text to the focused element.",
        "* Starts inspecting element at position (x, y).",
        "* Opens the developer tools for the service worker context.",
        "* Schedules a full repaint of the window this web contents is in. If offscreen\n     * rendering is enabled invalidates the frame and generates a new one through the\n     * 'paint' event.",
        "* Loads the url in the window. The url must contain the protocol prefix, e.g. the\n     * http:// or file://. If the load should bypass http cache then use the pragma\n     * header to achieve it.",
        "* Opens the devtools.",
        "* Executes the editing command paste in web page.",
        "* Executes the editing command pasteAndMatchStyle in web page.",
        "* Prints window's web page. When silent is set to true, Electron will pick up\n     * system's default printer and default settings for printing. Calling\n     * window.print() in web page is equivalent to calling webContents.print({silent:\n     * false, printBackground: false}). Use page-break-before: always; CSS style to\n     * force to print to a new page.",
        "* Prints window's web page as PDF with Chromium's preview printing custom\n     * settings. The callback will be called with callback(error, data) on completion.\n     * The data is a Buffer that contains the generated PDF data. The landscape will be\n     * ignored if @page CSS at-rule is used in the web page. By default, an empty\n     * options will be regarded as: Use page-break-before: always; CSS style to force\n     * to print to a new page. An example of webContents.printToPDF:",
        "* Executes the editing command redo in web page.",
        "* Reloads the current web page.",
        "* Reloads current page and ignores cache.",
        "* Removes the specified path from DevTools workspace.",
        "* Executes the editing command replace in web page.",
        "* Executes the editing command replaceMisspelling in web page.",
        "* Executes the editing command selectAll in web page.",
        "* Send an asynchronous message to renderer process via channel, you can also send\n     * arbitrary arguments. Arguments will be serialized in JSON internally and hence\n     * no functions or prototype chain will be included. The renderer process can\n     * handle the message by listening to channel with the ipcRenderer module. An\n     * example of sending messages from the main process to the renderer process:",
        "* Sends an input event to the page. For keyboard events, the event object also\n     * have following properties: For mouse events, the event object also have\n     * following properties: For the mouseWheel event, the event object also have\n     * following properties:",
        "* Mute the audio on the current web page.",
        "* If offscreen rendering is enabled sets the frame rate to the specified number.\n     * Only values between 1 and 60 are accepted.",
        "* Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.",
        "* Set the size of the page. This is only supported for <webview> guest contents.",
        "* Overrides the user agent for this web page.",
        "* Sets the maximum and minimum pinch-to-zoom level.",
        "* Setting the WebRTC IP handling policy allows you to control which IPs are\n     * exposed via WebRTC.  See BrowserLeaks for more details.",
        "* Changes the zoom factor to the specified factor. Zoom factor is zoom percent\n     * divided by 100, so 300% = 3.0.",
        "* Changes the zoom level to the specified level. The original size is 0 and each\n     * increment above or below represents zooming 20% larger or smaller to default\n     * limits of 300% and 50% of original size, respectively.",
        "* Deprecated: Call setVisualZoomLevelLimits instead to set the visual zoom level\n     * limits. This method will be removed in Electron 2.0.",
        "* Shows pop-up dictionary that searches the selected word on the page.",
        "* Sets the item as dragging item for current drag-drop operation, file is the\n     * absolute path of the file to be dragged, and icon is the image showing under the\n     * cursor when dragging.",
        "* If offscreen rendering is enabled and not painting, start painting.",
        "* Stops any pending navigation.",
        "* Stops any findInPage request for the webContents with the provided action.",
        "* If offscreen rendering is enabled and painting, stop painting.",
        "* Toggles the developer tools.",
        "* Executes the editing command undo in web page.",
        "* Unregisters any ServiceWorker if present and returns a boolean as response to\n     * callback when the JS promise is fulfilled or false when the JS promise is\n     * rejected.",
        "* Executes the editing command unselect in web page.",
        "* Attempts to free memory that is no longer being used (like images from a\n     * previous navigation). Note that blindly calling this method probably makes\n     * Electron slower since it will have to refill these emptied caches, you should\n     * only call it if an event in your app has occurred that makes you think your page\n     * is actually using less memory (i.e. you have navigated from a super heavy page\n     * to a mostly empty one, and intend to stay there).",
        "* Evaluates code in page. In the browser window some HTML APIs like\n     * requestFullScreen can only be invoked by a gesture from the user. Setting\n     * userGesture to true will remove this limitation.",
        "* Returns an object describing usage information of Blink's internal memory\n     * caches. This will generate:",
        "* Inserts text to the focused element.",
        "* Resources will be loaded from this scheme regardless of the current page's\n     * Content Security Policy.",
        "* Registers the scheme as secure, bypasses content security policy for resources,\n     * allows registering ServiceWorker and supports fetch API. Specify an option with\n     * the value of false to omit it from the registration. An example of registering a\n     * privileged scheme, without bypassing Content Security Policy:",
        "* Registers the scheme as secure scheme. Secure schemes do not trigger mixed\n     * content warnings. For example, https and data are secure schemes because they\n     * cannot be corrupted by active network attackers.",
        "* Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.",
        "* Sets a provider for spell checking in input fields and text areas. The provider\n     * must be an object that has a spellCheck method that returns whether the word\n     * passed is correctly spelled. An example of using node-spellchecker as provider:",
        "* Sets the maximum and minimum pinch-to-zoom level.",
        "* Changes the zoom factor to the specified factor. Zoom factor is zoom percent\n     * divided by 100, so 300% = 3.0.",
        "* Changes the zoom level to the specified level. The original size is 0 and each\n     * increment above or below represents zooming 20% larger or smaller to default\n     * limits of 300% and 50% of original size, respectively.",
        "* Deprecated: Call setVisualZoomLevelLimits instead to set the visual zoom level\n     * limits. This method will be removed in Electron 2.0.",
        "* The listener will be called with listener(details) when a server initiated\n     * redirect is about to occur.",
        "* The listener will be called with listener(details, callback) when a request is\n     * about to occur. The uploadData is an array of UploadData objects. The callback\n     * has to be called with an response object.",
        "* The listener will be called with listener(details, callback) before sending an\n     * HTTP request, once the request headers are available. This may occur after a TCP\n     * connection is made to the server, but before any http data is sent. The callback\n     * has to be called with an response object.",
        "* The listener will be called with listener(details) when a request is completed.",
        "* The listener will be called with listener(details) when an error occurs.",
        "* The listener will be called with listener(details, callback) when HTTP response\n     * headers of a request have been received. The callback has to be called with an\n     * response object.",
        "* The listener will be called with listener(details) when first byte of the\n     * response body is received. For HTTP requests, this means that the status line\n     * and response headers are available.",
        "* The listener will be called with listener(details) just before a request is\n     * going to be sent to the server, modifications of previous onBeforeSendHeaders\n     * response are visible by the time this listener is fired.",
        "* Fired when a load has committed. This includes navigation within the current\n     * document as well as subframe document-level loads, but does not include\n     * asynchronous resource loads.",
        "* Fired when the navigation is done, i.e. the spinner of the tab will stop\n     * spinning, and the onload event is dispatched.",
        "* This event is like did-finish-load, but fired when the load failed or was\n     * cancelled, e.g. window.stop() is invoked.",
        "* Fired when a frame has done navigation.",
        "* Corresponds to the points in time when the spinner of the tab starts spinning.",
        "* Corresponds to the points in time when the spinner of the tab stops spinning.",
        "* Fired when details regarding a requested resource is available. status indicates\n     * socket connection to download the resource.",
        "* Fired when a redirect was received while requesting a resource.",
        "* Fired when document in the given frame is loaded.",
        "* Fired when page title is set during navigation. explicitSet is false when title\n     * is synthesized from file url.",
        "* Fired when page receives favicon urls.",
        "* Fired when page enters fullscreen triggered by HTML API.",
        "* Fired when page leaves fullscreen triggered by HTML API.",
        "* Fired when the guest window logs a console message. The following example code\n     * forwards all log messages to the embedder's console without regard for log level\n     * or other properties.",
        "* Fired when a result is available for webview.findInPage request.",
        "* Fired when the guest page attempts to open a new browser window. The following\n     * example code opens the new url in system's default browser.",
        "* Emitted when a user or the page wants to start navigation. It can happen when\n     * the window.location object is changed or a user clicks a link in the page. This\n     * event will not emit when the navigation is started programmatically with APIs\n     * like <webview>.loadURL and <webview>.back. It is also not emitted during in-page\n     * navigation, such as clicking anchor links or updating the window.location.hash.\n     * Use did-navigate-in-page event for this purpose. Calling event.preventDefault()\n     * does NOT have any effect.",
        "* Emitted when a navigation is done. This event is not emitted for in-page\n     * navigations, such as clicking anchor links or updating the window.location.hash.\n     * Use did-navigate-in-page event for this purpose.",
        "* Emitted when an in-page navigation happened. When in-page navigation happens,\n     * the page URL changes but does not cause navigation outside of the page. Examples\n     * of this occurring are when anchor links are clicked or when the DOM hashchange\n     * event is triggered.",
        "* Fired when the guest page attempts to close itself. The following example code\n     * navigates the webview to about:blank when the guest attempts to close itself.",
        "* Fired when the guest page has sent an asynchronous message to embedder page.\n     * With sendToHost method and ipc-message event you can easily communicate between\n     * guest page and embedder page:",
        "* Fired when the renderer process is crashed.",
        "* Fired when the gpu process is crashed.",
        "* Fired when a plugin process is crashed.",
        "* Fired when the WebContents is destroyed.",
        "* Emitted when media starts playing.",
        "* Emitted when media is paused or done playing.",
        "* Emitted when a page's theme color changes. This is usually due to encountering a\n     * meta tag:",
        "* Emitted when mouse moves over a link or the keyboard moves the focus to a link.",
        "* Emitted when DevTools is opened.",
        "* Emitted when DevTools is closed.",
        "* Emitted when DevTools is focused / opened.",
        "* Captures a snapshot of the webview's page. Same as\n     * webContents.capturePage([rect, ]callback).",
        "* Captures a snapshot of the webview's page. Same as\n     * webContents.capturePage([rect, ]callback).",
        "* Clears the navigation history.",
        "* Closes the DevTools window of guest page.",
        "* Executes editing command copy in page.",
        "* Executes editing command cut in page.",
        "* Executes editing command delete in page.",
        "* Evaluates code in page. If userGesture is set, it will create the user gesture\n     * context in the page. HTML APIs like requestFullScreen, which require user\n     * action, can take advantage of this option for automation.",
        "* Starts a request to find all matches for the text in the web page and returns an\n     * Integer representing the request id used for the request. The result of the\n     * request can be obtained by subscribing to found-in-page event.",
        "* Makes the guest page go back.",
        "* Makes the guest page go forward.",
        "* Navigates to the specified absolute index.",
        "* Navigates to the specified offset from the \"current entry\".",
        "* Injects CSS into the guest page.",
        "* Inserts text to the focused element.",
        "* Starts inspecting element at position (x, y) of guest page.",
        "* Opens the DevTools for the service worker context present in the guest page.",
        "* Loads the url in the webview, the url must contain the protocol prefix, e.g. the\n     * http:// or file://.",
        "* Opens a DevTools window for guest page.",
        "* Executes editing command paste in page.",
        "* Executes editing command pasteAndMatchStyle in page.",
        "* Prints webview's web page. Same as webContents.print([options]).",
        "* Prints webview's web page as PDF, Same as webContents.printToPDF(options,\n     * callback).",
        "* Executes editing command redo in page.",
        "* Reloads the guest page.",
        "* Reloads the guest page and ignores cache.",
        "* Executes editing command replace in page.",
        "* Executes editing command replaceMisspelling in page.",
        "* Executes editing command selectAll in page.",
        "* Send an asynchronous message to renderer process via channel, you can also send\n     * arbitrary arguments. The renderer process can handle the message by listening to\n     * the channel event with the ipcRenderer module. See webContents.send for\n     * examples.",
        "* Sends an input event to the page. See webContents.sendInputEvent for detailed\n     * description of event object.",
        "* Set guest page muted.",
        "* Overrides the user agent for the guest page.",
        "* Changes the zoom factor to the specified factor. Zoom factor is zoom percent\n     * divided by 100, so 300% = 3.0.",
        "* Changes the zoom level to the specified level. The original size is 0 and each\n     * increment above or below represents zooming 20% larger or smaller to default\n     * limits of 300% and 50% of original size, respectively.",
        "* Shows pop-up dictionary that searches the selected word on the page.",
        "* Stops any pending navigation.",
        "* Stops any findInPage request for the webview with the provided action.",
        "* Executes editing command undo in page.",
        "* Executes editing command unselect in page.",
        "* When this attribute is present the guest page will be allowed to open new\n     * windows. Popups are disabled by default.",
        "* When this attribute is present the webview container will automatically resize\n     * within the bounds specified by the attributes minwidth, minheight, maxwidth, and\n     * maxheight. These constraints do not impact the webview unless autosize is\n     * enabled. When autosize is enabled, the webview container size cannot be less\n     * than the minimum values or greater than the maximum.",
        "* A list of strings which specifies the blink features to be enabled separated by\n     * ,. The full list of supported feature strings can be found in the\n     * RuntimeEnabledFeatures.json5 file.",
        "* A list of strings which specifies the blink features to be disabled separated by\n     * ,. The full list of supported feature strings can be found in the\n     * RuntimeEnabledFeatures.json5 file.",
        "* When this attribute is present the webview contents will be prevented from\n     * resizing when the webview element itself is resized. This can be used in\n     * combination with webContents.setSize to manually resize the webview contents in\n     * reaction to a window size change. This can make resizing faster compared to\n     * relying on the webview element bounds to automatically resize the contents.",
        "* When this attribute is present the guest page will have web security disabled.\n     * Web security is enabled by default.",
        "* A value that links the webview to a specific webContents. When a webview first\n     * loads a new webContents is created and this attribute is set to its instance\n     * identifier. Setting this attribute on a new or existing webview connects it to\n     * the existing webContents that currently renders in a different webview. The\n     * existing webview will see the destroy event and will then create a new\n     * webContents when a new url is loaded.",
        "* Sets the referrer URL for the guest page.",
        "* When this attribute is present the guest page in webview will have node\n     * integration and can use node APIs like require and process to access low level\n     * system resources. Node integration is disabled by default in the guest page.",
        "* Sets the session used by the page. If partition starts with persist:, the page\n     * will use a persistent session available to all pages in the app with the same\n     * partition. if there is no persist: prefix, the page will use an in-memory\n     * session. By assigning the same partition, multiple pages can share the same\n     * session. If the partition is unset then default session of the app will be used.\n     * This value can only be modified before the first navigation, since the session\n     * of an active renderer process cannot change. Subsequent attempts to modify the\n     * value will fail with a DOM exception.",
        "* When this attribute is present the guest page in webview will be able to use\n     * browser plugins. Plugins are disabled by default.",
        "* Specifies a script that will be loaded before other scripts run in the guest\n     * page. The protocol of script's URL must be either file: or asar:, because it\n     * will be loaded by require in guest page under the hood. When the guest page\n     * doesn't have node integration this script will still have access to all Node\n     * APIs, but global objects injected by Node will be deleted after this script has\n     * finished executing.",
        "* Returns the visible URL. Writing to this attribute initiates top-level\n     * navigation. Assigning src its own value will reload the current page. The src\n     * attribute can also accept data URLs, such as data:text/plain,Hello, world!.",
        "* Sets the user agent for the guest page before the page is navigated to. Once the\n     * page is loaded, use the setUserAgent method to change the user agent.",
        "* A list of strings which specifies the web preferences to be set on the webview,\n     * separated by ,. The full list of supported preference strings can be found in\n     * BrowserWindow. The string follows the same format as the features string in\n     * window.open. A name by itself is given a true boolean value. A preference can be\n     * set to another value by including an =, followed by the value. Special values\n     * yes and 1 are interpreted as true, while no and 0 are interpreted as false.",
        "* The app's name.",
        "* The app's version.",
        "* Copyright information.",
        "* Credit information.",
        "* The app's build version number.",
        "* The scale factor to add the image representation for.",
        "* Defaults to 0. Required if a bitmap buffer is specified as buffer.",
        "* Defaults to 0. Required if a bitmap buffer is specified as buffer.",
        "* The buffer containing the raw image data.",
        "* The data URL containing either a base 64 encoded PNG or JPEG image.",
        "* Window's . It has to be set, otherwise the other options will have no effect.",
        "* Window's .",
        "* Index of the icon in appIconPath. Ignored when appIconPath is not set. Default\n     * is 0.",
        "* Window's .",
        "* Window's .",
        "* If true, the view's width will grow and shrink together with the window. false\n     * by default.",
        "* If true, the view's height will grow and shrink together with the window. false\n     * by default.",
        "* Defaults to 1.0.",
        "* See .",
        "* Window's width in pixels. Default is 800.",
        "* Window's height in pixels. Default is 600.",
        "* ( if y is used) Window's left offset from screen. Default is to center the\n     * window.",
        "* ( if x is used) Window's top offset from screen. Default is to center the\n     * window.",
        "* The width and height would be used as web page's size, which means the actual\n     * window's size will include window frame's size and be slightly larger. Default\n     * is false.",
        "* Show window in the center of the screen.",
        "* Window's minimum width. Default is 0.",
        "* Window's minimum height. Default is 0.",
        "* Window's maximum width. Default is no limit.",
        "* Window's maximum height. Default is no limit.",
        "* Whether window is resizable. Default is true.",
        "* Whether window is movable. This is not implemented on Linux. Default is true.",
        "* Whether window is minimizable. This is not implemented on Linux. Default is\n     * true.",
        "* Whether window is maximizable. This is not implemented on Linux. Default is\n     * true.",
        "* Whether window is closable. This is not implemented on Linux. Default is true.",
        "* Whether the window can be focused. Default is true. On Windows setting\n     * focusable: false also implies setting skipTaskbar: true. On Linux setting\n     * focusable: false makes the window stop interacting with wm, so the window will\n     * always stay on top in all workspaces.",
        "* Whether the window should always stay on top of other windows. Default is false.",
        "* Whether the window should show in fullscreen. When explicitly set to false the\n     * fullscreen button will be hidden or disabled on macOS. Default is false.",
        "* Whether the window can be put into fullscreen mode. On macOS, also whether the\n     * maximize/zoom button should toggle full screen mode or maximize window. Default\n     * is true.",
        "* Whether to show the window in taskbar. Default is false.",
        "* The kiosk mode. Default is false.",
        "* Default window title. Default is \"Electron\".",
        "* The window icon. On Windows it is recommended to use ICO icons to get best\n     * visual effects, you can also leave it undefined so the executable's icon will be\n     * used.",
        "* Whether window should be shown when created. Default is true.",
        "* Specify false to create a . Default is true.",
        "* Specify parent window. Default is null.",
        "* Whether this is a modal window. This only works when the window is a child\n     * window. Default is false.",
        "* Whether the web view accepts a single mouse-down event that simultaneously\n     * activates the window. Default is false.",
        "* Whether to hide cursor when typing. Default is false.",
        "* Auto hide the menu bar unless the Alt key is pressed. Default is false.",
        "* Enable the window to be resized larger than screen. Default is false.",
        "* Window's background color as Hexadecimal value, like #66CD00 or #FFF or\n     * #80FFFFFF (alpha is supported). Default is #FFF (white).",
        "* Whether window should have a shadow. This is only implemented on macOS. Default\n     * is true.",
        "* Forces using dark theme for the window, only works on some GTK+3 desktop\n     * environments. Default is false.",
        "* Makes the window . Default is false.",
        "* The type of window, default is normal window. See more about this below.",
        "* The style of window title bar. Default is default. Possible values are:",
        "* Use WS_THICKFRAME style for frameless windows on Windows, which adds standard\n     * window frame. Setting it to false will remove window shadow and window\n     * animations. Default is true.",
        "* Add a type of vibrancy effect to the window, only on macOS. Can be\n     * appearance-based, light, dark, titlebar, selection, menu, popover, sidebar,\n     * medium-light or ultra-dark.",
        "* Controls the behavior on macOS when option-clicking the green stoplight button\n     * on the toolbar or by clicking the Window > Zoom menu item. If true, the window\n     * will grow to the preferred width of the web page when zoomed, false will cause\n     * it to zoom to the width of the screen. This will also affect the behavior when\n     * calling maximize() directly. Default is false.",
        "* Tab group name, allows opening the window as a native tab on macOS 10.12+.\n     * Windows with the same tabbing identifier will be grouped together.",
        "* Settings of web page's features.",
        "* The certificate to trust/import.",
        "* The message to display to the user.",
        "* Verification result from chromium.",
        "* Should follow window.location.origin’s representation scheme://host:port.",
        "* The types of storages to clear, can contain: appcache, cookies, filesystem,\n     * indexdb, localstorage, shadercache, websql, serviceworkers",
        "* The types of quotas to clear, can contain: temporary, persistent, syncable.",
        "* Append a switch (with optional value) to Chromium's command line. Note: This\n     * will not affect process.argv, and is mainly used by developers to control some\n     * low-level Chromium behaviors.",
        "* Append an argument to Chromium's command line. The argument will be quoted\n     * correctly. Note: This will not affect process.argv.",
        "* The URL associated with the PAC file.",
        "* Rules indicating which proxies to use.",
        "* Rules indicating which URLs should bypass the proxy settings.",
        "* x coordinate",
        "* y coordinate",
        "* URL of the link that encloses the node the context menu was invoked on.",
        "* Text associated with the link. May be an empty string if the contents of the\n     * link are an image.",
        "* URL of the top level page that the context menu was invoked on.",
        "* URL of the subframe that the context menu was invoked on.",
        "* Source URL for the element that the context menu was invoked on. Elements with\n     * source URLs are images, audio and video.",
        "* Type of the node the context menu was invoked on. Can be none, image, audio,\n     * video, canvas, file or plugin.",
        "* Whether the context menu was invoked on an image which has non-empty contents.",
        "* Whether the context is editable.",
        "* Text of the selection that the context menu was invoked on.",
        "* Title or alt text of the selection that the context was invoked on.",
        "* The misspelled word under the cursor, if any.",
        "* The character encoding of the frame on which the menu was invoked.",
        "* If the context menu was invoked on an input field, the type of that field.\n     * Possible values are none, plainText, password, other.",
        "* Input source that invoked the context menu. Can be none, mouse, keyboard, touch,\n     * touchMenu.",
        "* The flags for the media element the context menu was invoked on.",
        "* These flags indicate whether the renderer believes it is able to perform the\n     * corresponding action.",
        "* URL that crash reports will be sent to as POST.",
        "* Defaults to app.getName().",
        "* Whether crash reports should be sent to the server Default is true.",
        "* Default is false.",
        "* An object you can define that will be sent along with the report. Only string\n     * properties are sent correctly. Nested objects are not supported.",
        "* Required for bitmap buffers.",
        "* Required for bitmap buffers.",
        "* Defaults to 1.0.",
        "* Absolute path of the download.",
        "* Complete URL chain for the download.",
        "* Start range for the download.",
        "* Total length of the download.",
        "* Last-Modified header value.",
        "* ETag header value.",
        "* Time when download was started in number of seconds since UNIX epoch.",
        "* The title of the url at text.",
        "* The url to associate the cookie with.",
        "* The name of the cookie. Empty by default if omitted.",
        "* The value of the cookie. Empty by default if omitted.",
        "* The domain of the cookie. Empty by default if omitted.",
        "* The path of the cookie. Empty by default if omitted.",
        "* Whether the cookie should be marked as Secure. Defaults to false.",
        "* Whether the cookie should be marked as HTTP only. Defaults to false.",
        "* The expiration date of the cookie as the number of seconds since the UNIX epoch.\n     * If omitted then the cookie becomes a session cookie and will not be retained\n     * between sessions.",
        "* When critical is passed, the dock icon will bounce until either the application\n     * becomes active or the request is canceled. When informational is passed, the\n     * dock icon will bounce for one second. However, the request remains active until\n     * either the application becomes active or the request is canceled.",
        "* Cancel the bounce of id.",
        "* Bounces the Downloads stack if the filePath is inside the Downloads folder.",
        "* Sets the string to be displayed in the dock’s badging area.",
        "* Hides the dock icon.",
        "* Shows the dock icon.",
        "* Sets the application's dock menu.",
        "* Sets the image associated with this dock icon.",
        "* Whether to emulate network outage. Defaults to false.",
        "* RTT in ms. Defaults to 0 which will disable latency throttling.",
        "* Download rate in Bps. Defaults to 0 which will disable download throttling.",
        "* Upload rate in Bps. Defaults to 0 which will disable upload throttling.",
        "* Retrieves cookies which are associated with url. Empty implies retrieving\n     * cookies of all urls.",
        "* Filters cookies by name.",
        "* Retrieves cookies whose domains match or are subdomains of domains",
        "* Retrieves cookies whose path matches path.",
        "* Filters cookies by their Secure property.",
        "* Filters out session or persistent cookies.",
        "* Whether to search forward or backward, defaults to true.",
        "* Whether the operation is first request or a follow up, defaults to false.",
        "* Whether search should be case-sensitive, defaults to false.",
        "* Whether to look only at the start of words. defaults to false.",
        "* When combined with wordStart, accepts a match in the middle of a word if the\n     * match begins with an uppercase letter followed by a lowercase or non-letter.\n     * Accepts several other intra-word matches, defaults to false.",
        "* Whether to enable cache.",
        "* Path for the pkcs12 file.",
        "* Passphrase for the certificate.",
        "* Either keyUp or keyDown",
        "* Equivalent to",
        "* Equivalent to",
        "* Equivalent to",
        "* Equivalent to",
        "* Equivalent to",
        "* Equivalent to",
        "* Equivalent to",
        "* or files Array The path(s) to the file(s) being dragged.",
        "* The image must be non-empty on macOS.",
        "* The minimum number of items that will be shown in the Jump List (for a more\n     * detailed description of this value see the ).",
        "* Array of JumpListItem objects that correspond to items that the user has\n     * explicitly removed from custom categories in the Jump List. These items must not\n     * be re-added to the Jump List in the call to app.setJumpList(), Windows will not\n     * display any custom category that contains any of the removed items.",
        "* A HTTP Referrer url.",
        "* A user agent originating the request.",
        "* Extra headers separated by \"\\n\"",
        "* Base url (with trailing path separator) for files to be loaded by the data url.\n     * This is needed only if the specified url is a data url and needs to load other\n     * files.",
        "* true if the app is set to open at login.",
        "* true if the app is set to open as hidden at login. This setting is only\n     * supported on macOS.",
        "* true if the app was opened at login automatically. This setting is only\n     * supported on macOS.",
        "* true if the app was opened as a hidden login item. This indicates that the app\n     * should not open any windows at startup. This setting is only supported on macOS.",
        "* true if the app was opened as a login item that should restore the state from\n     * the previous session. This indicates that the app should restore the windows\n     * that were open the last time the app was closed. This setting is only supported\n     * on macOS.",
        "* The executable path to compare against. Defaults to process.execPath.",
        "* The command-line arguments to compare against. Defaults to an empty array.",
        "* Will be called with click(menuItem, browserWindow, event) when the menu item is\n     * clicked.",
        "* Define the action of the menu item, when specified the click property will be\n     * ignored. See .",
        "* Can be normal, separator, submenu, checkbox or radio.",
        "* If false, the menu item will be greyed out and unclickable.",
        "* If false, the menu item will be entirely hidden.",
        "* Should only be specified for checkbox or radio type menu items.",
        "* Should be specified for submenu type menu items. If submenu is specified, the\n     * type: 'submenu' can be omitted. If the value is not a Menu then it will be\n     * automatically converted to one using Menu.buildFromTemplate.",
        "* Unique within a single menu. If defined then it can be used as a reference to\n     * this item by the position attribute.",
        "* This field allows fine-grained definition of the specific location within a\n     * given menu.",
        "* Can be \"none\", \"info\", \"error\", \"question\" or \"warning\". On Windows, \"question\"\n     * displays the same icon as \"info\", unless you set an icon using the \"icon\"\n     * option. On macOS, both \"warning\" and \"error\" display the same warning icon.",
        "* Array of texts for buttons. On Windows, an empty array will result in one button\n     * labeled \"OK\".",
        "* Index of the button in the buttons array which will be selected by default when\n     * the message box opens.",
        "* Title of the message box, some platforms will not show it.",
        "* Content of the message box.",
        "* Extra information of the message.",
        "* If provided, the message box will include a checkbox with the given label. The\n     * checkbox state can be inspected only when using callback.",
        "* Initial checked state of the checkbox. false by default.",
        "* The index of the button to be used to cancel the dialog, via the Esc key. By\n     * default this is assigned to the first button with \"cancel\" or \"no\" as the label.\n     * If no such labeled buttons exist and this option is not set, 0 will be used as\n     * the return value or callback response. This option is ignored on Windows.",
        "* On Windows Electron will try to figure out which one of the buttons are common\n     * buttons (like \"Cancel\" or \"Yes\"), and show the others as command links in the\n     * dialog. This can make the dialog appear in the style of modern Windows apps. If\n     * you don't like this behavior, you can set noLink to true.",
        "* Normalize the keyboard access keys across platforms. Default is false. Enabling\n     * this assumes & is used in the button labels for the placement of the keyboard\n     * shortcut access key and labels will be converted so they work correctly on each\n     * platform, & characters are removed on macOS, converted to _ on Linux, and left\n     * untouched on Windows. For example, a button label of Vie&w will be converted to\n     * Vie_w on Linux and View on macOS and can be selected via Alt-W on Windows and\n     * Linux.",
        "* Can be `default`, `foreground-tab`, `background-tab`, `new-window`,\n     * `save-to-disk` and `other`.",
        "* The options which should be used for creating the new `BrowserWindow`.",
        "* The server IP address that the request was actually sent to.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* The error description.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Indicates whether the response was fetched from disk cache.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Array of URL patterns that will be used to filter out the requests that do not\n     * match the URL patterns.",
        "* Opens the devtools with specified dock state, can be right, bottom, undocked,\n     * detach. Defaults to last used dock state. In undocked mode it's possible to dock\n     * back. In detach mode it's not.",
        "* Custom label for the confirmation button, when left empty the default label will\n     * be used.",
        "* Contains which features the dialog should use. The following values are\n     * supported:",
        "* Message to display above input boxes.",
        "* true to bring the opened application to the foreground. The default is true.",
        "* Array of URLs.",
        "* Specify the screen type to emulate (default: desktop)",
        "* Set the emulated screen size (screenPosition == mobile)",
        "* Position the view on the screen (screenPosition == mobile) (default: {x: 0, y:\n     * 0})",
        "* Set the device scale factor (if zero defaults to original device scale factor)\n     * (default: 0)",
        "* Set the emulated view size (empty means no override)",
        "* Whether emulated view should be scaled down if necessary to fit into available\n     * space (default: false)",
        "* Offset of the emulated view inside available space (not in fit to view mode)\n     * (default: {x: 0, y: 0})",
        "* Scale of emulated view inside available space (not in fit to view mode)\n     * (default: 1)",
        "* Default is the current mouse cursor position.",
        "* ( if x is used) Default is the current mouse cursor position.",
        "* Set to true to have this method return immediately called, false to return after\n     * the menu has been selected or closed. Defaults to false.",
        "* The index of the menu item to be positioned under the mouse cursor at the\n     * specified coordinates. Default is -1.",
        "* Don't ask user for print settings. Default is false.",
        "* Also prints the background color and image of the web page. Default is false.",
        "* Specifies the type of margins to use. Uses 0 for default margin, 1 for no\n     * margin, and 2 for minimum margin.",
        "* Specify page size of the generated PDF. Can be A3, A4, A5, Legal, Letter,\n     * Tabloid or an Object containing height and width in microns.",
        "* Whether to print CSS backgrounds.",
        "* Whether to print selection only.",
        "* true for landscape, false for portrait.",
        "* The amount of memory currently pinned to actual physical RAM.",
        "* The maximum amount of memory that has ever been pinned to actual physical RAM.",
        "* The amount of memory not shared by other processes, such as JS heap or HTML\n     * content.",
        "* The amount of memory shared between processes, typically memory consumed by the\n     * Electron code itself",
        "* Mode for the progress bar. Can be none, normal, indeterminate, error, or paused.",
        "* Returns Boolean",
        "* true to register the scheme as secure. Default false.",
        "* Default true.",
        "* Default true.",
        "* Default true.",
        "* Default true.",
        "* Default true.",
        "* Defaults to the image's width.",
        "* Defaults to the image's height",
        "* The desired quality of the resize image. Possible values are good, better or\n     * best. The default is best. These values express a desired quality/speed\n     * tradeoff. They are translated into an algorithm-specific method that depends on\n     * the capabilities (CPU, GPU) of the underlying platform. It is possible for all\n     * three methods to be mapped to the same algorithm on a given platform.",
        "* The original request is prevented from being sent or completed and is instead\n     * redirected to the given URL.",
        "* Position of the active match.",
        "* Number of Matches.",
        "* Coordinates of first match region.",
        "* Custom label for the confirmation button, when left empty the default label will\n     * be used.",
        "* Message to display above text fields.",
        "* Custom label for the text displayed in front of the filename text field.",
        "* Show the tags input box, defaults to true.",
        "* true to open the app at login, false to remove the app as a login item. Defaults\n     * to false.",
        "* true to open the app as hidden. Defaults to false. The user can edit this\n     * setting from the System Preferences so\n     * app.getLoginItemStatus().wasOpenedAsHidden should be checked when the app is\n     * opened to know the current value. This setting is only supported on macOS.",
        "* Normal size of the page. This can be used in combination with the attribute to\n     * manually resize the webview guest contents.",
        "* An array of Strings that lists the types of desktop sources to be captured,\n     * available types are screen and window.",
        "* The size that the media source thumbnail should be scaled to. Default is 150 x\n     * 150.",
        "* The total amount of physical memory in Kilobytes available to the system.",
        "* The total amount of memory not being used by applications or disk cache.",
        "* The total amount of swap memory in Kilobytes available to the system.",
        "* The free amount of swap memory in Kilobytes available to the system.",
        "* Defaults to 1.0.",
        "* Defaults to 1.0.",
        "* Defaults to 1.0.",
        "* Button text.",
        "* Button background color in hex format, i.e #ABCDEF.",
        "* Button icon.",
        "* Can be left, right or overlay.",
        "* Function to call when the button is clicked.",
        "* Array of hex color strings to appear as possible colors to select.",
        "* The selected hex color in the picker, i.e #ABCDEF.",
        "* Function to call when a color is selected.",
        "* Items to display as a group.",
        "* Text to display.",
        "* Hex color of text, i.e #ABCDEF.",
        "* Popover button text.",
        "* Popover button icon.",
        "* Items to display in the popover.",
        "* true to display a close button on the left of the popover, false to not show it.\n     * Default is true.",
        "* An array of items to place in this scrubber",
        "* Called when the user taps an item that was not the last tapped item",
        "* Called when the user taps any item",
        "* Selected item style. Defaults to null.",
        "* Selected overlay item style. Defaults to null.",
        "* Defaults to false.",
        "* Defaults to free.",
        "* Defaults to true.",
        "* Style of the segments:",
        "* The selection mode of the control:",
        "* An array of segments to place in this control.",
        "* The index of the currently selected segment, will update automatically with user\n     * interaction. When the mode is multiple it will be the last selected item.",
        "* Called when the user selects a new segment",
        "* Label text.",
        "* Selected value.",
        "* Minimum value.",
        "* Maximum value.",
        "* Function to call when the slider is changed.",
        "* Size of spacer, possible values are:",
        "* A String representing Electron's version string.",
        "* A String representing Chrome's version string.",
        "* Whether the renderer believes it can undo.",
        "* Whether the renderer believes it can redo.",
        "* Whether the renderer believes it can cut.",
        "* Whether the renderer believes it can copy",
        "* Whether the renderer believes it can paste.",
        "* Whether the renderer believes it can delete.",
        "* Whether the renderer believes it can select all.",
        "* Position of the active match.",
        "* Number of Matches.",
        "* Coordinates of first match region.",
        "* Whether the media element has crashed.",
        "* Whether the media element is paused.",
        "* Whether the media element is muted.",
        "* Whether the media element has audio.",
        "* Whether the media element is looping.",
        "* Whether the media element's controls are visible.",
        "* Whether the media element's controls are toggleable.",
        "* Whether the media element can be rotated.",
        "* Whether to enable DevTools. If it is set to false, can not use\n     * BrowserWindow.webContents.openDevTools() to open DevTools. Default is true.",
        "* Whether node integration is enabled. Default is true.",
        "* Whether node integration is enabled in web workers. Default is false. More about\n     * this can be found in .",
        "* Specifies a script that will be loaded before other scripts run in the page.\n     * This script will always have access to node APIs no matter whether node\n     * integration is turned on or off. The value should be the absolute file path to\n     * the script. When node integration is turned off, the preload script can\n     * reintroduce Node global symbols back to the global scope. See example .",
        "* If set, this will sandbox the renderer associated with the window, making it\n     * compatible with the Chromium OS-level sandbox and disabling the Node.js engine.\n     * This is not the same as the nodeIntegration option and the APIs available to the\n     * preload script are more limited. Read more about the option . This option is\n     * currently experimental and may change or be removed in future Electron releases.",
        "* Sets the session used by the page. Instead of passing the Session object\n     * directly, you can also choose to use the partition option instead, which accepts\n     * a partition string. When both session and partition are provided, session will\n     * be preferred. Default is the default session.",
        "* Sets the session used by the page according to the session's partition string.\n     * If partition starts with persist:, the page will use a persistent session\n     * available to all pages in the app with the same partition. If there is no\n     * persist: prefix, the page will use an in-memory session. By assigning the same\n     * partition, multiple pages can share the same session. Default is the default\n     * session.",
        "* The default zoom factor of the page, 3.0 represents 300%. Default is 1.0.",
        "* Enables JavaScript support. Default is true.",
        "* When false, it will disable the same-origin policy (usually using testing\n     * websites by people), and set allowRunningInsecureContent to true if this options\n     * has not been set by user. Default is true.",
        "* Allow an https page to run JavaScript, CSS or plugins from http URLs. Default is\n     * false.",
        "* Enables image support. Default is true.",
        "* Make TextArea elements resizable. Default is true.",
        "* Enables WebGL support. Default is true.",
        "* Enables WebAudio support. Default is true.",
        "* Whether plugins should be enabled. Default is false.",
        "* Enables Chromium's experimental features. Default is false.",
        "* Enables Chromium's experimental canvas features. Default is false.",
        "* Enables scroll bounce (rubber banding) effect on macOS. Default is false.",
        "* A list of feature strings separated by ,, like CSSVariables,KeyboardEventKey to\n     * enable. The full list of supported feature strings can be found in the file.",
        "* A list of feature strings separated by ,, like CSSVariables,KeyboardEventKey to\n     * disable. The full list of supported feature strings can be found in the file.",
        "* Sets the default font for the font-family.",
        "* Defaults to 16.",
        "* Defaults to 13.",
        "* Defaults to 0.",
        "* Defaults to ISO-8859-1.",
        "* Whether to throttle animations and timers when the page becomes background.\n     * Defaults to true.",
        "* Whether to enable offscreen rendering for the browser window. Defaults to false.\n     * See the for more details.",
        "* Whether to run Electron APIs and the specified preload script in a separate\n     * JavaScript context. Defaults to false. The context that the preload script runs\n     * in will still have full access to the document and window globals but it will\n     * use its own set of JavaScript builtins (Array, Object, JSON, etc.) and will be\n     * isolated from any changes made to the global environment by the loaded page. The\n     * Electron API will only be available in the preload script and not the loaded\n     * page. This option should be used when loading potentially untrusted remote\n     * content to ensure the loaded content cannot tamper with the preload script and\n     * any Electron APIs being used. This option uses the same technique used by . You\n     * can access this context in the dev tools by selecting the 'Electron Isolated\n     * Context' entry in the combo box at the top of the Console tab. This option is\n     * currently experimental and may change or be removed in future Electron releases.",
        "* Whether to use native window.open(). Defaults to false.",
        "* Defaults to Times New Roman.",
        "* Defaults to Times New Roman.",
        "* Defaults to Arial.",
        "* Defaults to Courier New.",
        "* Defaults to Script.",
        "* Defaults to Impact.",
        "* The real path to the file on the users filesystem",
        "* Emitted when Electron has loaded its internal initialization script and is\n     * beginning to load the web page or the main script. It can be used by the preload\n     * script to add removed Node global symbols back to the global scope when node\n     * integration is turned off:",
        "* Causes the main thread of the current process crash.",
        "* Returns an object giving memory usage statistics about the current process. Note\n     * that all statistics are reported in Kilobytes.",
        "* Returns an object giving memory usage statistics about the entire system. Note\n     * that all statistics are reported in Kilobytes.",
        "* Causes the main thread of the current process hang.",
        "* Sets the file descriptor soft limit to maxDescriptors or the OS hard limit,\n     * whichever is lower for the current process.",
        "* A Boolean. When app is started by being passed as parameter to the default app,\n     * this property is true in the main process, otherwise it is undefined.",
        "* A Boolean. For Mac App Store build, this property is true, for other builds it\n     * is undefined.",
        "* A Boolean that controls ASAR support inside your application. Setting this to\n     * true will disable the support for asar archives in Node's built-in modules.",
        "* A String representing the path to the resources directory.",
        "* A String representing the current process's type, can be \"browser\" (i.e. main\n     * process) or \"renderer\".",
        "* A Boolean. If the app is running as a Windows Store app (appx), this property is\n     * true, for otherwise it is undefined."
    ],
    "functions": [],
    "classes": [
        "EventEmitter",
        "Accelerator",
        "BrowserView",
        "BrowserWindow",
        "BrowserWindowProxy",
        "ClientRequest",
        "Cookies",
        "Debugger",
        "DownloadItem",
        "IncomingMessage",
        "Menu",
        "MenuItem",
        "NativeImage",
        "Session",
        "TouchBarButton",
        "TouchBarColorPicker",
        "TouchBarGroup",
        "TouchBarLabel",
        "TouchBarPopover",
        "TouchBarScrubber",
        "TouchBarSegmentedControl",
        "TouchBarSlider",
        "TouchBarSpacer",
        "TouchBar",
        "Tray",
        "WebContents",
        "WebRequest"
    ]
}