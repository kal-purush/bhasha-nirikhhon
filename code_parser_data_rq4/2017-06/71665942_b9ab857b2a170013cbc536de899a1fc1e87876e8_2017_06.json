{
    "identifiers": [
        "connect",
        "crypt_md5",
        "SDSConnection",
        "Logger",
        "value",
        "value",
        "preserveFocus",
        "column",
        "preserveFocus",
        "Logger",
        "config",
        "config",
        "config",
        "resolve",
        "reject",
        "resolve",
        "log",
        "connect",
        "SDSConnection",
        "sock",
        "sock",
        "messages",
        "line",
        "messages",
        "line",
        "messages",
        "setInterval",
        "taskIsRunning",
        "taskIsRunning",
        "messages",
        "line",
        "messages",
        "line",
        "taskIsRunning",
        "pollingInterval",
        "reason",
        "log",
        "reason",
        "reject",
        "reason",
        "sock",
        "err",
        "log",
        "err",
        "reject",
        "err",
        "sock",
        "hadError",
        "hadError",
        "msg",
        "log",
        "msg",
        "reject",
        "msg",
        "log",
        "msg",
        "resolve",
        "line",
        "line"
    ],
    "literals": [
        "'use strict'",
        "'assert'",
        "'net'",
        "'node-sds'",
        "'./log'",
        "string",
        "string",
        "string",
        "ServerConsole",
        "connecting to ${this.config.port}:${this.config.hostname}",
        "'connect'",
        "'server-console'",
        "string",
        "error in 'connect' event handler: ${reason.toString()}",
        "'error'",
        "'close'",
        "'remote closed the connection'",
        "' because of an error'",
        "string",
        "â†’ ${line}"
    ],
    "variables": [
        "log",
        "sock",
        "pollingInterval",
        "taskIsRunning",
        "msg"
    ],
    "comments": [
        "Providing credentials is not necessary but this is a bug:\n                    https://redmine.otris.de/issues/20065\n\n                        return conn.changeUser('', '');\n                    }).then(userId => {\n                        return conn.changePrincipal('');\n                    }).then(() => {"
    ],
    "docstrings": [
        "* Hostname or IP address of target server.",
        "* TCP port of application. Usually 11000.",
        "* Number of milliseconds we wait until we poll the server again for new\n     * messages. Optional. Default is 3000."
    ],
    "functions": [
        "start"
    ],
    "classes": [
        "ServerConsole"
    ]
}