{
    "identifiers": [
        "org",
        "terracotta",
        "entity",
        "StateDumpCollector",
        "NAMESPACE_DELIMITER",
        "name",
        "key",
        "value"
    ],
    "literals": [
        "\".\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*\n *  The contents of this file are subject to the Terracotta Public License Version\n *  2.0 (the \"License\"); You may not use this file except in compliance with the\n *  License. You may obtain a copy of the License at\n *\n *  http://terracotta.org/legal/terracotta-public-license.\n *\n *  Software distributed under the License is distributed on an \"AS IS\" basis,\n *  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for\n *  the specific language governing rights and limitations under the License.\n *\n *  The Covered Software is Entity API.\n *\n *  The Initial Developer of the Covered Software is\n *  Terracotta, Inc., a Software AG company\n *",
        "* Abstraction for dumping a component's state using key-value mappings in hierarchical manner\n *\n * <p><b>Typical usage</b>\n * <pre>\n *   StateDumpCollector topLevelStateDumpCollector;\n *   StateDumpCollector ehcacheEntityDumpCollector = topLevelStateDumpCollector.subStateDumpCollector(\"ehcache\");\n *   StateDumpCollector flatFileStorageDumpCollector = topLevelStateDumpCollector.subStateDumpCollector(\"flatFileStorage\");\n *   StateDumpCollector locationFlatFileStorageDumpCollector = flatFileStorageDumpCollector.subStateDumpCollector(\"location\");\n *   locationFlatFileStorageDumpCollector.addState(\"storageDir\", \"/var/log/flatfiledir\");\n *   StateDumpCollector storageUsageFlatFileStorageDumpCollector = flatFileStorageDumper.subStateDumpCollector(\"storage\");\n *   storageUsageFlatFileStorageDumpCollector.addState(\"used-space\", \"100MB\");\n *   storageUsageFlatFileStorageDumpCollector.addState(\"free-space\", \"900MB\");\n *   storageUsageFlatFileStorageDumpCollector.addState(\"allocated-space\", \"1000MB\");\n * </pre></p>\n *\n *\n * @author vmad",
        "* Returns a namespace'd {@link StateDumpCollector}\n   *\n   * @param name Sub {@link StateDumpCollector} name, should not contain {@link #NAMESPACE_DELIMITER}\n   * @return A {@link StateDumpCollector}",
        "* Adds given key-value mapping to this {@link StateDumpCollector}\n   *\n   * @param key      key name with the value to be associated\n   * @param value    the value"
    ],
    "functions": [
        "StateDumpCollector",
        "subStateDumpCollector",
        "addState"
    ],
    "classes": []
}