{
    "identifiers": [
        "print_function",
        "absolute_import",
        "unicode_literals",
        "json",
        "tempfile",
        "unittest",
        "os",
        "unittest",
        "TestCase",
        "requests",
        "shutil",
        "time",
        "general_tools",
        "file_utils",
        "manager",
        "manager",
        "TxManager",
        "general_tools",
        "file_utils",
        "unzip",
        "aws_tools",
        "s3_handler",
        "S3Handler",
        "client",
        "client_webhook",
        "ClientWebhook",
        "bs4",
        "BeautifulSoup",
        "TestCase",
        "os",
        "environ",
        "get",
        "branch",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "format",
        "destination",
        "branch",
        "api_url",
        "hasattr",
        "os",
        "path",
        "isdir",
        "temp_dir",
        "shutil",
        "rmtree",
        "temp_dir",
        "ignore_errors",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "job",
        "chapterCount",
        "expectedChapterCount",
        "fileExt",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "job",
        "chapterCount",
        "expectedChapterCount",
        "fileExt",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputNames",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputNames",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputNames",
        "job",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "unittest",
        "skip",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "git_url",
        "doConversionForRepo",
        "baseUrl",
        "user",
        "repo",
        "validateConversion",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputName",
        "job",
        "os",
        "environ",
        "get",
        "test",
        "doTest",
        "os",
        "environ",
        "get",
        "assertTrue",
        "len",
        "gogsUserToken",
        "doTest",
        "git_url",
        "git_url",
        "git_url",
        "split",
        "join",
        "parts",
        "parts",
        "parts",
        "split",
        "baseUrl",
        "repo",
        "user",
        "user",
        "repo",
        "success",
        "build_log_json",
        "commitID",
        "commitSha",
        "commitPath",
        "expectedOutputNames",
        "job",
        "chapterCount",
        "fileExt",
        "assertTrue",
        "len",
        "build_log_json",
        "assertIsNotNone",
        "job",
        "tempfile",
        "mkdtemp",
        "prefix",
        "expectedOutputNames",
        "expectedOutputNames",
        "downloadAndCheckZipFile",
        "s3_handler",
        "expectedOutputNames",
        "getPreconvertS3Key",
        "commitSha",
        "success",
        "chapterCount",
        "fileExt",
        "checkDestinationFiles",
        "cdn_handler",
        "expectedOutputNames",
        "getDestinationS3Key",
        "commitSha",
        "repo",
        "user",
        "chapterCount",
        "assertEqual",
        "len",
        "commitID",
        "COMMIT_LENGTH",
        "assertIsNotNone",
        "commitSha",
        "assertIsNotNone",
        "commitPath",
        "len",
        "job",
        "errors",
        "job",
        "errors",
        "len",
        "build_log_json",
        "build_log_json",
        "assertTrue",
        "success",
        "handler",
        "expectedOutputFiles",
        "extension",
        "key",
        "success",
        "chapterCount",
        "fileExt",
        "os",
        "path",
        "join",
        "temp_dir",
        "handler",
        "download_file",
        "key",
        "zipPath",
        "tempfile",
        "mkdtemp",
        "dir",
        "temp_dir",
        "prefix",
        "unzip",
        "zipPath",
        "temp_sub_dir",
        "chapterCount",
        "file",
        "expectedOutputFiles",
        "checkList",
        "append",
        "file",
        "extension",
        "format",
        "i",
        "fileExt",
        "i",
        "chapterCount",
        "file",
        "checkList",
        "os",
        "path",
        "join",
        "temp_sub_dir",
        "file",
        "outputFilePath",
        "assertTrue",
        "os",
        "path",
        "exists",
        "outputFilePath",
        "file",
        "isFirst",
        "printFile",
        "file",
        "outputFilePath",
        "os",
        "path",
        "join",
        "temp_sub_dir",
        "os",
        "path",
        "exists",
        "manifest_json",
        "success",
        "json_exists",
        "printFile",
        "manifest_json",
        "os",
        "path",
        "join",
        "temp_sub_dir",
        "os",
        "path",
        "exists",
        "manifest_yaml",
        "success",
        "yaml_exists",
        "printFile",
        "manifest_yaml",
        "assertTrue",
        "json_exists",
        "yaml_exists",
        "fileName",
        "filePath",
        "file_utils",
        "read_file",
        "filePath",
        "fileName",
        "text",
        "handler",
        "expectedOutputFiles",
        "extension",
        "key",
        "chapterCount",
        "chapterCount",
        "file",
        "expectedOutputFiles",
        "checkList",
        "append",
        "file",
        "extension",
        "format",
        "i",
        "i",
        "chapterCount",
        "file",
        "checkList",
        "os",
        "path",
        "join",
        "key",
        "file",
        "path",
        "handler",
        "get_file_contents",
        "path",
        "output",
        "time",
        "sleep",
        "path",
        "handler",
        "get_file_contents",
        "path",
        "assertIsNotNone",
        "output",
        "path",
        "handler",
        "get_file_contents",
        "os",
        "path",
        "join",
        "key",
        "manifest",
        "handler",
        "get_file_contents",
        "os",
        "path",
        "join",
        "key",
        "assertTrue",
        "len",
        "manifest",
        "baseUrl",
        "user",
        "repo",
        "S3Handler",
        "cdn_bucket",
        "fetchCommitDataForRepo",
        "baseUrl",
        "repo",
        "user",
        "len",
        "commitID",
        "commitLen",
        "COMMIT_LENGTH",
        "deletePreconvertZipFile",
        "commitSha",
        "deleteTxOutputZipFile",
        "commitID",
        "emptyDestinationFolder",
        "commitSha",
        "repo",
        "user",
        "doConversionJob",
        "baseUrl",
        "commitID",
        "commitPath",
        "commitSha",
        "repo",
        "user",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "commitSha",
        "repo",
        "user",
        "getDestinationS3Key",
        "commitSha",
        "repo",
        "user",
        "obj",
        "cdn_handler",
        "get_objects",
        "prefix",
        "destination_key",
        "obj",
        "key",
        "cdn_handler",
        "delete_file",
        "obj",
        "key",
        "commitSha",
        "S3Handler",
        "pre_convert_bucket",
        "getPreconvertS3Key",
        "commitSha",
        "s3_handler",
        "key_exists",
        "preconvert_key",
        "preconvert_key",
        "s3_handler",
        "delete_file",
        "preconvert_key",
        "catch_exception",
        "commitID",
        "getTxOutputS3Key",
        "commitID",
        "cdn_handler",
        "key_exists",
        "txOutput_key",
        "txOutput_key",
        "cdn_handler",
        "delete_file",
        "txOutput_key",
        "catch_exception",
        "commitID",
        "format",
        "commitID",
        "output_key",
        "commitSha",
        "repo",
        "user",
        "format",
        "user",
        "repo",
        "commitSha",
        "destination_key",
        "commitSha",
        "format",
        "commitSha",
        "preconvert_key",
        "baseUrl",
        "commitID",
        "commitPath",
        "commitSha",
        "repo",
        "user",
        "os",
        "environ",
        "get",
        "len",
        "gogsUserToken",
        "commitID",
        "baseUrl",
        "commitPath",
        "repo",
        "user",
        "user",
        "api_url",
        "pre_convert_bucket",
        "cdn_bucket",
        "gogs_url",
        "gogsUserToken",
        "webhookData",
        "USE_WEB_HOOK_LAMBDA",
        "format",
        "api_url",
        "format",
        "tx_client_webhook_url",
        "end",
        "webhookData",
        "requests",
        "post",
        "tx_client_webhook_url",
        "json",
        "webhookData",
        "headers",
        "headers",
        "response",
        "status_code",
        "response",
        "text",
        "json",
        "loads",
        "response",
        "text",
        "response",
        "status_code",
        "build_log_json",
        "build_log_json",
        "ClientWebhook",
        "env_vars",
        "process_webhook",
        "e",
        "e",
        "message",
        "build_log_json",
        "job_id",
        "pollUntilJobFinished",
        "job_id",
        "getJsonFile",
        "commitSha",
        "repo",
        "user",
        "build_log_json",
        "build_log_json",
        "build_log_json",
        "success",
        "job",
        "job_id",
        "api_url",
        "gogs_url",
        "cdn_url",
        "job_table_name",
        "module_table_name",
        "cdn_bucket",
        "TxManager",
        "env_vars",
        "sleepInterval",
        "i",
        "pollingTimeout",
        "sleepInterval",
        "tx_manager",
        "get_job",
        "job_id",
        "assertIsNotNone",
        "job",
        "i",
        "job",
        "log",
        "job",
        "ended_at",
        "i",
        "startMaxWaitCount",
        "job",
        "started_at",
        "time",
        "sleep",
        "sleepInterval",
        "success",
        "job",
        "commitSha",
        "file",
        "repo",
        "user",
        "format",
        "user",
        "repo",
        "commitSha",
        "file",
        "cdn_handler",
        "get_json",
        "key",
        "text",
        "baseUrl",
        "repo",
        "user",
        "readContentsOfRepo",
        "baseUrl",
        "user",
        "repo",
        "len",
        "data",
        "findLastedCommitFromPage",
        "data",
        "commitID",
        "commitPath",
        "commitSha",
        "text",
        "BeautifulSoup",
        "text",
        "soup",
        "find",
        "table",
        "table",
        "findAll",
        "rows",
        "len",
        "rows",
        "row",
        "rows",
        "row",
        "find",
        "commitCell",
        "commitCell",
        "find",
        "commitLink",
        "commitLink",
        "getContents",
        "commitLink",
        "commitPath",
        "split",
        "parts",
        "commitID",
        "commitSha",
        "commitPath",
        "directory",
        "os",
        "path",
        "exists",
        "directory",
        "os",
        "makedirs",
        "directory",
        "baseUrl",
        "user",
        "repo",
        "format",
        "baseUrl",
        "user",
        "repo",
        "requests",
        "get",
        "url",
        "ttr_response",
        "status_code",
        "ttr_response",
        "text",
        "url",
        "item",
        "item",
        "item",
        "stripped_strings",
        "contents",
        "text"
    ],
    "literals": [
        "\"TRAVIS_BRANCH\"",
        "\"develop\"",
        "\"dev-\"",
        "\"master\"",
        "\"\"",
        "'https://{0}api.door43.org'",
        "'{0}tx-webhook-client'",
        "'https://git.door43.org'",
        "'{0}cdn.door43.org'",
        "'{0}tx-job'",
        "'{0}tx-module'",
        "'https://{0}cdn.door43.org'",
        "\"Testing on '\"",
        "\"' branch, e.g.: \"",
        "'temp_dir'",
        "\"Skipping broken conversion that needs to be fixed - preconvert leaves backslash at end of line\"",
        "\"https://git.door43.org/tx-manager-test-data/kpb_mat_text_udb.git\"",
        "\"41-MAT\"",
        "\"Skipping broken conversion that needs to be fixed - Expected end of text (at char 24993), (line:292, col:121) backslash in text\"",
        "\"https://git.door43.org/tx-manager-test-data/awa_act_text_reg.git\"",
        "\"45-ACT\"",
        "\"https://git.door43.org/tx-manager-test-data/ceb_psa_text_ulb_L3.git\"",
        "\"19-PSA\"",
        "\"https://git.door43.org/tx-manager-test-data/en-obs-rc-0.2.git\"",
        "\"\"",
        "\"md\"",
        "\"https://git.door43.org/tx-manager-test-data/hu_obs_text_obs.git\"",
        "\"\"",
        "\"md\"",
        "\"https://git.door43.org/tx-manager-test-data/en-ulb-jud.git\"",
        "\"66-JUD\"",
        "\"Skipping broken conversion that needs to be fixed - conversion takes too long and times out\"",
        "\"https://git.door43.org/tx-manager-test-data/en-ulb.git\"",
        "\"01-GEN\"",
        "\"02-EXO\"",
        "\"03-LEV\"",
        "\"05-DEU\"",
        "\"Skipping broken conversion that needs to be fixed - conversion takes too long and times out\"",
        "\"https://git.door43.org/tx-manager-test-data/bible_ru.git\"",
        "\"01-GEN\"",
        "\"02-EXO\"",
        "\"03-LEV\"",
        "\"04-NUM\"",
        "\"05-DEU\"",
        "\"06-JOS\"",
        "\"07-JDG\"",
        "\"08-RUT\"",
        "\"09-1SA\"",
        "\"10-2SA\"",
        "\"11-1KI\"",
        "\"12-2KI\"",
        "\"13-1CH\"",
        "\"14-2CH\"",
        "\"15-EZR\"",
        "\"16-NEH\"",
        "\"17-EST\"",
        "\"18-JOB\"",
        "\"19-PSA\"",
        "\"20-PRO\"",
        "\"21-ECC\"",
        "\"22-SNG\"",
        "\"23-ISA\"",
        "\"24-JER\"",
        "\"25-LAM\"",
        "\"26-EZK\"",
        "\"27-DAN\"",
        "\"28-HOS\"",
        "\"29-JOL\"",
        "\"30-AMO\"",
        "\"31-OBA\"",
        "\"32-JON\"",
        "\"33-MIC\"",
        "\"34-NAM\"",
        "\"35-HAB\"",
        "\"36-ZEP\"",
        "\"37-HAG\"",
        "\"38-ZEC\"",
        "\"39-MAL\"",
        "\"41-MAT\"",
        "\"42-MRK\"",
        "\"43-LUK\"",
        "\"44-JHN\"",
        "\"45-ACT\"",
        "\"46-ROM\"",
        "\"47-1CO\"",
        "\"48-2CO\"",
        "\"49-GAL\"",
        "\"50-EPH\"",
        "\"51-PHP\"",
        "\"52-COL\"",
        "\"53-1TH\"",
        "\"54-2TH\"",
        "\"55-1TI\"",
        "\"56-2TI\"",
        "\"57-TIT\"",
        "\"58-PHM\"",
        "\"59-HEB\"",
        "\"60-JAS\"",
        "\"61-1PE\"",
        "\"62-2PE\"",
        "\"63-1JN\"",
        "\"64-2JN\"",
        "\"65-3JN\"",
        "\"66-JUD\"",
        "\"67-REV\"",
        "\"https://git.door43.org/tx-manager-test-data/kan-x-aruvu_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"https://git.door43.org/mohanraj/kn-x-bedar_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/nirmala/te-x-budugaja_act_text_reg.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/jathapu/kxv_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/vinaykumar/kan-x-thigularu_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/Zipson/yeu_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/Zipson/kfc_act_text_udb.git\"",
        "\"45-ACT\"",
        "\"Skip test for time reasons - leave for standalone testing\"",
        "\"https://git.door43.org/E01877C8393A/uw-act_udb-aen.git\"",
        "\"45-ACT\"",
        "'TEST_DEPLOYED'",
        "\"\"",
        "\"test_deployed\"",
        "\"Skip testing since TEST_DEPLOYED is not set\"",
        "'GOGS_USER_TOKEN'",
        "\"\"",
        "\"GOGS_USER_TOKEN is missing in environment\"",
        "\"Testing conversion of: \"",
        "\"/\"",
        "\"/\"",
        "\".git\"",
        "\"\"",
        "'testing_'",
        "\"usfm\"",
        "\"preconvert\"",
        "\"html\"",
        "\"WARNING: Found job errors: \"",
        "'errors'",
        "\"WARNING: Found build_log errors: \"",
        "'errors'",
        "\"\"",
        "\".zip\"",
        "\"_\"",
        "\".\"",
        "'{0:0>2}.{1}'",
        "\"checking preconvert zip for: \"",
        "\"missing file: \"",
        "\"manifest.json\"",
        "\"manifest.json\"",
        "\"manifest.yaml\"",
        "\"manifest.yaml\"",
        "\"missing manifest file\"",
        "\"Output file (\"",
        "\"): \"",
        "\".\"",
        "'{0:0>2}.html'",
        "\"checking destination folder for: \"",
        "\"retry fetch of: \"",
        "\"missing file: \"",
        "\"manifest.json\"",
        "\"manifest.yaml\"",
        "\"missing manifest file \"",
        "\"deleting destination file: \"",
        "\"deleting preconvert file: \"",
        "\"deleting tx output file: \"",
        "'tx/job/{0}.zip'",
        "'u/{0}/{1}/{2}'",
        "\"preconvert/{0}.zip\"",
        "'GOGS_USER_TOKEN'",
        "\"\"",
        "\"GOGS_USER_TOKEN is missing in environment\"",
        "\"after\"",
        "\"commits\"",
        "\"id\"",
        "\"b9278437b27024e07d02490400138d4fd7d1677c\"",
        "\"message\"",
        "\"Fri Dec 16 2016 11:09:07 GMT+0530 (India Standard Time)\\n\"",
        "\"url\"",
        "\"compare_url\"",
        "\"\"",
        "\"repository\"",
        "\"name\"",
        "\"owner\"",
        "\"id\"",
        "\"username\"",
        "\"full_name\"",
        "\"email\"",
        "\"you@example.com\"",
        "\"pusher\"",
        "\"id\"",
        "\"username\"",
        "\"test\"",
        "\"full_name\"",
        "\"\"",
        "\"email\"",
        "\"you@example.com\"",
        "'api_url'",
        "'pre_convert_bucket'",
        "'cdn_bucket'",
        "'gogs_url'",
        "'gogs_user_token'",
        "'commit_data'",
        "\"content-type\"",
        "\"application/json\"",
        "\"{0}/client/webhook\"",
        "'Making request to client/webhook URL {0} with payload:'",
        "' '",
        "'webhook finished with code:'",
        "'webhook finished with text:'",
        "'job_id'",
        "\"Exception: \"",
        "'job_id'",
        "\"Job ID missing in build_log\"",
        "'build_log.json'",
        "\"Final results:\\n\"",
        "'api_url'",
        "'gogs_url'",
        "'cdn_url'",
        "'job_table_name'",
        "'module_table_name'",
        "'cdn_bucket'",
        "\"job status at \"",
        "\":\\n\"",
        "\"Conversion Failed to start\"",
        "'u/{0}/{1}/{2}/{3}'",
        "'html.parser'",
        "'table'",
        "'tr'",
        "'td'",
        "\"class\"",
        "\"sha\"",
        "'a'",
        "'href'",
        "'/'",
        "\"{0}/{1}/{2}/commits/master\"",
        "\"Failed to load: \""
    ],
    "variables": [
        "COMMIT_LENGTH",
        "USE_WEB_HOOK_LAMBDA",
        "branch",
        "destination",
        "destination",
        "destination",
        "api_url",
        "pre_convert_bucket",
        "gogs_url",
        "cdn_bucket",
        "job_table_name",
        "module_table_name",
        "cdn_url",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedChapterCount",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedChapterCount",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputNames",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputNames",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputNames",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "git_url",
        "baseUrl",
        "repo",
        "user",
        "expectedOutputName",
        "build_log_json",
        "commitID",
        "commitPath",
        "commitSha",
        "success",
        "job",
        "test",
        "doTest",
        "gogsUserToken",
        "parts",
        "baseUrl",
        "user",
        "repo",
        "temp_dir",
        "expectedOutputNames",
        "zipPath",
        "temp_sub_dir",
        "checkList",
        "checkList",
        "isFirst",
        "outputFilePath",
        "isFirst",
        "manifest_json",
        "json_exists",
        "manifest_yaml",
        "yaml_exists",
        "text",
        "checkList",
        "checkList",
        "path",
        "output",
        "output",
        "manifest",
        "manifest",
        "build_log_json",
        "job",
        "success",
        "cdn_handler",
        "commitID",
        "commitPath",
        "commitSha",
        "commitLen",
        "build_log_json",
        "success",
        "job",
        "destination_key",
        "s3_handler",
        "preconvert_key",
        "txOutput_key",
        "output_key",
        "destination_key",
        "preconvert_key",
        "gogsUserToken",
        "webhookData",
        "env_vars",
        "headers",
        "tx_client_webhook_url",
        "response",
        "build_log_json",
        "build_log_json",
        "message",
        "job_id",
        "success",
        "job",
        "build_log_json",
        "success",
        "job",
        "env_vars",
        "tx_manager",
        "pollingTimeout",
        "sleepInterval",
        "startMaxWaitCount",
        "job",
        "success",
        "success",
        "key",
        "text",
        "commitID",
        "commitSha",
        "commitPath",
        "data",
        "commitID",
        "commitSha",
        "commitPath",
        "soup",
        "table",
        "commitID",
        "commitSha",
        "commitPath",
        "rows",
        "commitCell",
        "commitLink",
        "commitPath",
        "commitSha",
        "parts",
        "commitID",
        "url",
        "ttr_response",
        "contents",
        "text"
    ],
    "comments": [
        "coding=utf-8",
        "default is testing develop branch (dev)",
        "default",
        "no prefix for production",
        "delete temp files",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "given",
        "skip test if integration test not enabled",
        "when",
        "then",
        "",
        "handlers",
        "",
        "put string in list",
        "check pre-convert files",
        "check deployed files",
        "print out for troubleshooting",
        "print out for troubleshooting",
        "checkList.append(\"index.html\")",
        "try again in a moment since upload files may not be finished",
        "TODO: change this to use gogs API when finished",
        "do preconvert locally",
        "poll for up to 5 minutes for job to complete or error",
        "how often to check for completion",
        "maximum count to wait for conversion to start (sec/interval)",
        "delay before polling again"
    ],
    "docstrings": [
        "\"\"\"\n    To test locally, you must set two environment variables:\n\n        set TEST_DEPLOYED to \"test_deployed\"\n        set GOGS_USER_TOKEN to tx-manager user token\n\n    Integration test will run on dev unless TRAVIS_BRANCH is set to 'master' (then will run on prod)\n    \"\"\"",
        "\"\"\"Runs after each test.\"\"\""
    ],
    "functions": [
        "setUp",
        "tearDown",
        "test_ts_mat_conversion",
        "test_ts_acts0_conversion",
        "test_ts_psa_conversion",
        "test_obs_conversion",
        "test_obs_conversion_ts_upload",
        "test_usfm_en_jud_bundle_conversion",
        "test_usfm_en_bundle_conversion",
        "test_usfm_ru_bundle_conversion",
        "test_ts_acts1_conversion",
        "test_ts_acts2_conversion",
        "test_ts_acts3_conversion",
        "test_ts_acts4_conversion",
        "test_ts_acts5_conversion",
        "test_ts_acts6_conversion",
        "test_ts_acts7_conversion",
        "test_ts_acts8_conversion",
        "isTestingEnabled",
        "getPartsOfGitUrl",
        "validateConversion",
        "downloadAndCheckZipFile",
        "printFile",
        "checkDestinationFiles",
        "doConversionForRepo",
        "emptyDestinationFolder",
        "deletePreconvertZipFile",
        "deleteTxOutputZipFile",
        "getTxOutputS3Key",
        "getDestinationS3Key",
        "getPreconvertS3Key",
        "doConversionJob",
        "pollUntilJobFinished",
        "getJsonFile",
        "fetchCommitDataForRepo",
        "findLastedCommitFromPage",
        "makeFolder",
        "readContentsOfRepo",
        "getContents"
    ],
    "classes": [
        "TestConversions"
    ]
}