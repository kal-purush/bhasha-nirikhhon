{
    "identifiers": [
        "numpy",
        "np",
        "scipy",
        "optimize",
        "tau",
        "g1",
        "N_gamma",
        "range_gamma",
        "alpha",
        "verbose",
        "reconst",
        "full_result",
        "len",
        "tau",
        "len",
        "g1",
        "len",
        "tau",
        "np",
        "logspace",
        "np",
        "log10",
        "range_gamma",
        "np",
        "log10",
        "range_gamma",
        "N_gamma",
        "np",
        "zeros_like",
        "gamma",
        "np",
        "stack",
        "np",
        "exp",
        "gamma",
        "t",
        "t",
        "tau",
        "u",
        "np",
        "abs",
        "u",
        "np",
        "power",
        "np",
        "linalg",
        "norm",
        "A",
        "dot",
        "ua",
        "g1",
        "np",
        "power",
        "alpha",
        "np",
        "linalg",
        "norm",
        "np",
        "diff",
        "np",
        "diff",
        "ua",
        "U",
        "R",
        "optimize",
        "minimize",
        "V",
        "x",
        "method",
        "options",
        "verbose",
        "N_gamma",
        "np",
        "abs",
        "res",
        "x",
        "xa",
        "full_result",
        "res",
        "res",
        "success",
        "RuntimeError",
        "res",
        "message",
        "reconst",
        "gamma",
        "xa",
        "A",
        "dot",
        "xa",
        "gamma",
        "xa",
        "matplotlib",
        "pyplot",
        "np",
        "loadtxt",
        "CONTIN",
        "tau",
        "g1",
        "N_gamma",
        "range_gamma",
        "alpha",
        "verbose",
        "reconst",
        "pyplot",
        "semilogx",
        "pyplot",
        "gca",
        "pyplot",
        "twinx",
        "axl",
        "set_yscale",
        "axl",
        "set_xlim",
        "axl",
        "set_ylim",
        "axl",
        "set_xlabel",
        "axl",
        "set_ylabel",
        "axr",
        "set_xlim",
        "axr",
        "set_ylim",
        "axr",
        "set_ylabel",
        "axl",
        "plot",
        "tau",
        "g1",
        "ls",
        "marker",
        "mec",
        "mfc",
        "label",
        "axl",
        "plot",
        "tau",
        "g1_re",
        "ls",
        "marker",
        "color",
        "label",
        "axr",
        "plot",
        "gamma",
        "G",
        "np",
        "max",
        "G",
        "ls",
        "marker",
        "color",
        "mec",
        "mfc",
        "label",
        "pyplot",
        "show"
    ],
    "literals": [
        "\"Shintaro NAKAGAWA\"",
        "\"snaka@iis.u-tokyo.ac.jp\"",
        "\"1.0\"",
        "\"Powell\"",
        "\"disp\"",
        "\"maxiter\"",
        "'__main__'",
        "\"test.txt\"",
        "\"log\"",
        "ur\"$\\tau$ [ms]\"",
        "ur\"$g^{(1)}(\\tau)$ [-]\"",
        "ur\"$G(\\tau)$ [-]\"",
        "\"\"",
        "\"o\"",
        "\"k\"",
        "\"w\"",
        "\"Experimental\"",
        "\"-\"",
        "\"\"",
        "\"b\"",
        "\"Reconstructed\"",
        "\"-\"",
        "\"o\"",
        "\"g\"",
        "\"g\"",
        "\"w\"",
        "\"Distribution\""
    ],
    "variables": [
        "__author__",
        "__email__",
        "__version__",
        "N_tau",
        "gamma",
        "x",
        "A",
        "ua",
        "U",
        "R",
        "res",
        "xa",
        "res",
        "x",
        "tau",
        "g1",
        "gamma",
        "G",
        "g1_re",
        "axl",
        "axr"
    ],
    "comments": [
        "coding=utf-8",
        "gamma-axis of the solution vector",
        "initial solution vector, G(gamma)",
        "matrix that transforms the solution to the correlation function",
        "i.e., g1 = A.x",
        "define the function to minimize.",
        "prevent any element of the solution vector from being negative.",
        "function to minimize.",
        "regularization term.",
        "minimize V(x)",
        "so far, the Powell algorithm is the fastest & most reliable method."
    ],
    "docstrings": [
        "'''\nCreated on 2017/06/15\n\n@author: snakagawa\n'''",
        "'''\n    A Python/numpy/scipy implementation of the CONTIN algorithm \n    for inverse Laplace transformation of DLS correlation functions. \n    \n    Reference: \n    Scotti, A. et al J. Chem. Phys. 2015, 142, 234905. \n    doi: 10.1063/1.4921686\n    \n    @param tau: time axis of the input correlation function. \n    @param g1: input correlation function. \n    @param N_gamma: length of the solution vector. \n    @param range_gamma: lower and upper limit of the solution vector. \n    @param alpha: regularizer. \n    @param verbose: if True, message will be printed when the minimization is finished. \n    @param reconst: if True, a reconstructed g1 will be returned in addition to gammma and G(gamma). \n    @param full_result: if True, returns a scipy.optimize.OptimizeResult object. RuntimeError will not be raised. \n    \n    @return: gamma, G(gamma)\n    \n    @raise RuntimeError: will be raised when the minimization does not converge. \n    '''"
    ],
    "functions": [
        "CONTIN",
        "V"
    ],
    "classes": []
}