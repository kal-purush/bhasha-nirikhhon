{
    "identifiers": [
        "xlwt",
        "n",
        "file",
        "open",
        "file",
        "read",
        "val",
        "eventsT",
        "val",
        "eventsT",
        "u",
        "eventstr",
        "eventsT",
        "u",
        "eventstr",
        "split",
        "t",
        "len",
        "events",
        "events",
        "t",
        "td",
        "t",
        "events",
        "t",
        "td",
        "t",
        "events",
        "t",
        "td",
        "t",
        "j",
        "len",
        "td",
        "events",
        "td",
        "j",
        "o",
        "o",
        "n",
        "v",
        "len",
        "events",
        "y",
        "nevents",
        "events",
        "v",
        "y",
        "nevents",
        "fevents",
        "append",
        "nevents",
        "fevents",
        "typ",
        "typ",
        "xlwt",
        "Workbook",
        "book",
        "add_sheet",
        "input",
        "notation",
        "n",
        "len",
        "fevents",
        "k",
        "len",
        "fevents",
        "n",
        "fevents",
        "n",
        "k",
        "fevents",
        "n",
        "k",
        "sh",
        "write",
        "n",
        "k",
        "fevents",
        "n",
        "k",
        "notation",
        "n",
        "len",
        "fevents",
        "k",
        "len",
        "fevents",
        "n",
        "fevents",
        "n",
        "k",
        "fevents",
        "n",
        "k",
        "sh",
        "write",
        "n",
        "k",
        "fevents",
        "n",
        "k",
        "book",
        "save",
        "typ",
        "open",
        "input",
        "notation",
        "d",
        "len",
        "fevents",
        "w",
        "len",
        "fevents",
        "d",
        "textfile",
        "write",
        "fevents",
        "d",
        "w",
        "textfile",
        "write",
        "notation",
        "d",
        "len",
        "fevents",
        "w",
        "len",
        "fevents",
        "d",
        "textfile",
        "write",
        "fevents",
        "d",
        "w",
        "textfile",
        "write",
        "textfile",
        "close",
        "fermiConverter",
        "fermi",
        "convertFile",
        "input",
        "n",
        "k",
        "fermi",
        "output",
        "input"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"r\"",
        "\",\"",
        "\"\"",
        "'\"'",
        "\"\"",
        "\" \"",
        "\"\\n\"",
        "\"xls\"",
        "\"fermix\"",
        "'E (MeV)'",
        "'RA'",
        "'DEC'",
        "\"enter 1 for scientific notation\\nenter 2 for decimal notation\"",
        "\"+\"",
        "\"0\"",
        "\"+\"",
        "\"0\"",
        "\"done\"",
        "\"fermix.xls\"",
        "\"txt\"",
        "\"fermit.txt\"",
        "\"w\"",
        "\"enter 1 for scientific notation\\nenter 2 for decimal notation\"",
        "\" \"",
        "\"\\n\"",
        "\" \"",
        "\"\\n\"",
        "\"file name:\"",
        "\".txt\"",
        "\"output format (txt or xls):\""
    ],
    "variables": [
        "eventsT",
        "events",
        "eventstr",
        "fevents",
        "eventsT",
        "val",
        "events",
        "td",
        "o",
        "fevents",
        "nevents",
        "nevents",
        "book",
        "sh",
        "col1_name",
        "col2_name",
        "col3_name",
        "notation",
        "textfile",
        "notation",
        "fermi",
        "events",
        "output"
    ],
    "comments": [
        "this program takes fermi data as outputted by fv, and converts it into a 2D array of values:",
        "the 2D array consists of a list of lists, each containing E(MeV), RA, and DEC",
        "the data may then be outputted via xls or to plaintext",
        "this should make it easier to work with this data in Python (astropy) and JS (astrojs)",
        "",
        "!!!!!MAKE SURE TO CREATE FILES NAMED EITHER fermix.xls OR fermit.txt BEFORE RUNNING!!!!!!",
        "You may need to group the variables together",
        "for n, (v_desc, v) in enumerate(zip(desc, variables)):",
        "print(events[n][k])"
    ],
    "docstrings": [],
    "functions": [
        "convertFile",
        "output"
    ],
    "classes": [
        "fermiConverter"
    ]
}