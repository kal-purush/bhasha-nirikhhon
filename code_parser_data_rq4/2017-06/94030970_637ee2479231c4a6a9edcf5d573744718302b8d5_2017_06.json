{
    "identifiers": [
        "socket",
        "sys",
        "time",
        "threading",
        "logging",
        "argparse",
        "threading",
        "subprocess",
        "random",
        "collections",
        "copy",
        "re",
        "pypacker",
        "layer12",
        "ethernet",
        "arp",
        "radiotap",
        "ieee80211",
        "pypacker",
        "layer3",
        "ip",
        "icmp",
        "pypacker",
        "layer4",
        "tcp",
        "udp",
        "pypacker",
        "pypacker",
        "psocket",
        "utils",
        "Struct",
        "unpack",
        "Struct",
        "pack",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "StreamHandler",
        "logging",
        "Formatter",
        "logger_streamhandler",
        "setFormatter",
        "logger_formatter",
        "logger",
        "addHandler",
        "logger_streamhandler",
        "pargs",
        "ethernet",
        "Ethernet",
        "dst",
        "src_s",
        "pargs",
        "mac_src",
        "ethernet",
        "ETH_TYPE_ARP",
        "arp",
        "ARP",
        "sha_s",
        "pargs",
        "mac_src",
        "spa_s",
        "pargs",
        "ip_src",
        "tha",
        "tpa_s",
        "pargs",
        "ip_dst",
        "op",
        "arp",
        "ARP_OP_REQUEST",
        "ethernet",
        "Ethernet",
        "dst_s",
        "pargs",
        "mac_dst",
        "src_s",
        "pargs",
        "mac_src",
        "ethernet",
        "ETH_TYPE_ARP",
        "arp",
        "ARP",
        "sha_s",
        "pargs",
        "mac_src",
        "spa_s",
        "pargs",
        "ip_src",
        "tha_s",
        "pargs",
        "mac_dst",
        "tpa_s",
        "pargs",
        "ip_dst",
        "op",
        "arp",
        "ARP_OP_REPLY",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "cnt",
        "pargs",
        "count",
        "pypacker",
        "get_rnd_mac",
        "mac",
        "pkt_arp_req",
        "arp",
        "mac",
        "pkt_arp_req",
        "arp",
        "pypacker",
        "get_rnd_ipv4",
        "psock",
        "send",
        "pkt_arp_req",
        "bin",
        "pypacker",
        "get_rnd_mac",
        "mac",
        "pkt_arp_resp",
        "arp",
        "mac",
        "pkt_arp_resp",
        "arp",
        "pypacker",
        "get_rnd_ipv4",
        "psock",
        "send",
        "pkt_arp_resp",
        "bin",
        "psock",
        "close",
        "pargs",
        "ethernet",
        "Ethernet",
        "dst_s",
        "pargs",
        "mac_dst",
        "src_s",
        "pargs",
        "mac_src",
        "ip",
        "IP",
        "src_s",
        "pargs",
        "ip_src",
        "dst_s",
        "pargs",
        "ip_dst",
        "p",
        "ip",
        "IP_PROTO_ICMP",
        "icmp",
        "ICMP",
        "icmp",
        "ICMP",
        "Echo",
        "id",
        "ts",
        "body_bytes",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "cnt",
        "pargs",
        "count",
        "psock",
        "send",
        "pkt_icmpreq",
        "bin",
        "psock",
        "close",
        "pargs",
        "ethernet",
        "Ethernet",
        "dst_s",
        "pargs",
        "mac_dst",
        "src_s",
        "pargs",
        "mac_src",
        "ip",
        "IP",
        "src_s",
        "pargs",
        "ip_src",
        "dst_s",
        "pargs",
        "ip_dst",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "ip_l",
        "create_fragments",
        "fragment_len",
        "cnt",
        "pargs",
        "count",
        "ip_frag",
        "ip_frags",
        "ip_frag",
        "psock",
        "send",
        "eth_l",
        "bin",
        "psock",
        "close",
        "pargs",
        "logger",
        "info",
        "iptables_rules_info",
        "ethernet",
        "Ethernet",
        "dst_s",
        "pargs",
        "mac_dst",
        "src_s",
        "pargs",
        "mac_src",
        "ip",
        "IP",
        "src_s",
        "pargs",
        "ip_src",
        "dst_s",
        "pargs",
        "ip_dst",
        "p",
        "ip",
        "IP_PROTO_TCP",
        "tcp",
        "TCP",
        "sport",
        "dport",
        "pargs",
        "port_dst",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "pkt",
        "pkt",
        "ip",
        "tcp",
        "flags",
        "tcp",
        "TH_SYN",
        "tcp",
        "TH_ACK",
        "ex",
        "logger",
        "warning",
        "ex",
        "is_running",
        "psock_rcv",
        "recvp",
        "filter_match_recv",
        "filter_cb",
        "logger",
        "debug",
        "pkt_rsp",
        "IndexError",
        "logger",
        "debug",
        "pkt_rsp",
        "reverse_all_address",
        "pkt_rsp",
        "ip",
        "tcp",
        "tcp",
        "TH_ACK",
        "tcp_l",
        "seq",
        "tcp_l",
        "ack",
        "tcp_l",
        "ack",
        "tcp_l",
        "seq",
        "tcp_l",
        "ack",
        "psock_rcv",
        "send",
        "pkt_rsp",
        "bin",
        "threading",
        "target",
        "answer_cycler",
        "answer_thread",
        "start",
        "random",
        "randrange",
        "pkt_tcp_syn",
        "ip",
        "tcp",
        "logger",
        "debug",
        "cnt",
        "pargs",
        "count",
        "randrange",
        "randrange",
        "psock_send",
        "send",
        "pkt_tcp_syn",
        "bin",
        "logger",
        "debug",
        "time",
        "sleep",
        "psock_send",
        "close",
        "psock_rcv",
        "close",
        "pargs",
        "pargs",
        "channels",
        "channel",
        "channel",
        "pargs",
        "channels",
        "split",
        "utils",
        "get_available_wlan_channels",
        "pargs",
        "iface_name",
        "logger",
        "debug",
        "channels",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "timeout",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "collections",
        "defaultdict",
        "collections",
        "defaultdict",
        "pargs_ref",
        "pargs_ref",
        "is_running",
        "psock_rcv",
        "recvp",
        "lowest_layer",
        "radiotap",
        "Radiotap",
        "IndexError",
        "socket",
        "timeout",
        "OSError",
        "logger",
        "debug",
        "rtap",
        "ieee80211",
        "ex",
        "logger",
        "warning",
        "ex",
        "pargs",
        "nobroadcast",
        "pkt_ieee80211",
        "is_beacon",
        "pkt_ieee80211",
        "beacon",
        "bssid",
        "bssid",
        "wdata",
        "pargs",
        "current_channel",
        "wdata",
        "pargs",
        "current_channel",
        "client",
        "pkt_ieee80211",
        "extract_client_macs",
        "client",
        "pargs",
        "macs_excluded",
        "client",
        "wdata",
        "pargs",
        "current_channel",
        "pkt_ieee80211",
        "upper_layer",
        "bssid",
        "wdata",
        "pargs",
        "current_channel",
        "pkt_ieee80211",
        "upper_layer",
        "bssid",
        "add",
        "client",
        "channels",
        "radiotap",
        "Radiotap",
        "ieee80211",
        "IEEE80211",
        "ieee80211",
        "MGMT_TYPE",
        "subtype",
        "ieee80211",
        "M_DEAUTH",
        "ieee80211",
        "IEEE80211",
        "Deauth",
        "layer_radiotap",
        "layer_iee80211",
        "layer_deauth",
        "threading",
        "target",
        "listen_cycler",
        "args",
        "pargs",
        "thread_listen",
        "start",
        "logger",
        "info",
        "cnt",
        "pargs",
        "count",
        "pargs",
        "is_running",
        "channel",
        "channels",
        "cnt",
        "len",
        "wdata",
        "channel",
        "utils",
        "switch_wlan_channel",
        "pargs",
        "iface_name",
        "channel",
        "channel",
        "time",
        "sleep",
        "cnt",
        "KeyboardInterrupt",
        "logger",
        "info",
        "channel",
        "len",
        "wdata",
        "channel",
        "cnt",
        "copy",
        "copy",
        "wdata",
        "channel",
        "mac_ap",
        "macs_clients",
        "ap_clients",
        "items",
        "layer_deauth",
        "seq",
        "pargs",
        "nobroadcast",
        "mac_ap",
        "cnt_da",
        "layer_deauth",
        "seq",
        "psock_send",
        "send",
        "pkt_deauth",
        "bin",
        "mac_client",
        "macs_clients",
        "mac_client",
        "mac_client",
        "cnt_da",
        "layer_deauth",
        "seq",
        "psock_send",
        "send",
        "pkt_deauth",
        "bin",
        "psock_send",
        "close",
        "psock_rcv",
        "close",
        "pargs",
        "pargs",
        "channels",
        "channel",
        "channel",
        "pargs",
        "channels",
        "split",
        "utils",
        "get_available_wlan_channels",
        "pargs",
        "iface_name",
        "radiotap",
        "Radiotap",
        "ieee80211",
        "IEEE80211",
        "ieee80211",
        "MGMT_TYPE",
        "subtype",
        "ieee80211",
        "M_BEACON",
        "to_ds",
        "from_ds",
        "ieee80211",
        "IEEE80211",
        "Beacon",
        "dst",
        "src",
        "ieee80211",
        "IEEE80211",
        "IE",
        "id",
        "len",
        "body_bytes",
        "ieee80211",
        "IEEE80211",
        "IE",
        "id",
        "len",
        "body_bytes",
        "ieee80211",
        "IEEE80211",
        "IE",
        "id",
        "len",
        "body_bytes",
        "ieee80211",
        "IEEE80211",
        "IE",
        "id",
        "len",
        "body_bytes",
        "ieee80211",
        "IEEE80211",
        "IE",
        "id",
        "len",
        "body_bytes",
        "copy",
        "deepcopy",
        "beacon_orig",
        "beacon",
        "ieee80211",
        "IEEE80211",
        "Beacon",
        "pypacker",
        "get_rnd_mac",
        "mac",
        "mac",
        "_beacon",
        "essid",
        "_beacon",
        "len",
        "essid",
        "_beacon",
        "pack_B",
        "channels",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "cnt",
        "pargs",
        "count",
        "pargs",
        "is_running",
        "channel",
        "channels",
        "_beacon",
        "pack_B",
        "channel",
        "utils",
        "switch_wlan_channel",
        "pargs",
        "iface_name",
        "channel",
        "rand_mac",
        "pypacker",
        "get_rnd_mac",
        "mac",
        "mac",
        "rand_essid",
        "_beacon",
        "join",
        "random",
        "choice",
        "ascii_uppercase",
        "digits",
        "_",
        "_beacon",
        "len",
        "_beacon",
        "body_bytes",
        "logger",
        "info",
        "channel",
        "_beacon",
        "body_bytes",
        "cnt_ap",
        "psock_send",
        "send",
        "beacon",
        "bin",
        "time",
        "sleep",
        "sleeptime",
        "cnt_ap",
        "cnt_ap",
        "socket",
        "timeout",
        "OSError",
        "sleeptime",
        "logger",
        "warning",
        "sleeptime",
        "time",
        "sleep",
        "psock_send",
        "close",
        "pargs",
        "radiotap",
        "Radiotap",
        "ieee80211",
        "IEEE80211",
        "ieee80211",
        "MGMT_TYPE",
        "subtype",
        "ieee80211",
        "M_AUTH",
        "to_ds",
        "from_ds",
        "ieee80211",
        "IEEE80211",
        "Auth",
        "dst_s",
        "pargs",
        "mac_dst",
        "bssid_s",
        "pargs",
        "mac_dst",
        "radiotap_ieee80211",
        "auth",
        "psocket",
        "SocketHndl",
        "iface_name",
        "pargs",
        "iface_name",
        "mode",
        "psocket",
        "SocketHndl",
        "MODE_LAYER_2",
        "pargs",
        "channels",
        "split",
        "logger",
        "debug",
        "pargs",
        "count",
        "pargs",
        "mac_dst",
        "channel",
        "utils",
        "switch_wlan_channel",
        "pargs",
        "iface_name",
        "pargs",
        "channels",
        "split",
        "cnt",
        "pargs",
        "count",
        "cnt",
        "end",
        "sys",
        "stdout",
        "flush",
        "pypacker",
        "get_rnd_mac",
        "psock_send",
        "send",
        "radiotap_ieee80211_auth",
        "bin",
        "socket",
        "timeout",
        "psock_send",
        "close",
        "re",
        "compile",
        "re",
        "compile",
        "iface_name",
        "iface_name",
        "subprocess",
        "check_output",
        "cmd_call",
        "PATTERN_MAC",
        "search",
        "output",
        "decode",
        "match_macaddr",
        "group",
        "lower",
        "PATTERN_IP",
        "search",
        "output",
        "decode",
        "match_ipaddr",
        "group",
        "lower",
        "macaddr",
        "ipaddr",
        "rules_str",
        "logger",
        "debug",
        "subprocess",
        "check_output",
        "cmd_call",
        "rules_str",
        "split",
        "rule",
        "rules",
        "rule",
        "subprocess",
        "check_output",
        "cmd_call",
        "wifi_deauth_cb",
        "wifi_ap_cb",
        "wifi_authdos_cb",
        "arp_cb",
        "icmp_cb",
        "ip_cb",
        "tcp_cb",
        "x",
        "x",
        "join",
        "mode",
        "cb",
        "mode",
        "cb",
        "mode_cb",
        "items",
        "argparse",
        "ArgumentParser",
        "description",
        "formatter_class",
        "argparse",
        "RawDescriptionHelpFormatter",
        "parser",
        "add_argument",
        "help",
        "mode_descr",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "args",
        "mac_src",
        "args",
        "ip_src",
        "get_iface_info",
        "args",
        "iface_name",
        "args",
        "macs_excluded",
        "pypacker",
        "mac_str_to_bytes",
        "mac",
        "mac",
        "args",
        "macs_excluded",
        "split",
        "arg_mendatory",
        "mode_cb",
        "args",
        "mode",
        "getattr",
        "args",
        "arg_mendatory",
        "logger",
        "warning",
        "arg_mendatory",
        "arg_missing",
        "sys",
        "exit",
        "args",
        "mode",
        "wifi_modes",
        "logger",
        "info",
        "args",
        "iface_name",
        "utils",
        "set_interface_mode",
        "args",
        "iface_name",
        "monitor_active",
        "state_active",
        "mode_cb",
        "args",
        "mode",
        "args",
        "KeyError",
        "logger",
        "warning",
        "args",
        "mode"
    ],
    "literals": [
        "\">I\"",
        "\"B\"",
        "\"sledgehammer\"",
        "\"%(message)s\"",
        "b\"\\xFF\"",
        "b\"\\xFF\"",
        "b\"A\"",
        "b\"A\"",
        "\"For best performance set set these rules: %r\"",
        "\"got answer packet: %r\"",
        "\"no packets..\"",
        "\"sending...\"",
        "\"finished\"",
        "\",\"",
        "\"using channels: %r\"",
        "\"no packets..\"",
        "\"First round slow start..\"",
        "\"deauth on channel %3d (%3d APs, round %4d)\"",
        "b\"\\xFF\"",
        "b\"\\xFF\"",
        "\",\"",
        "b\"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\"",
        "b\"\\xFF\\xFF\\xFF\\xFF\\xFF\\xFF\"",
        "b\"\\x00\"",
        "b\"\\x82\\x84\\x8b\\x96\\x0c\\x12\\x18\\x24\"",
        "b\"\\x04\"",
        "b\"\\x00\\x01\\x00\\x00\"",
        "b\"\\x00\"",
        "\"FreeHotspot\"",
        "\"ascii\"",
        "\"\"",
        "\"ascii\"",
        "\"AP on channel %d: %s\"",
        "\"\\nbuffer full, new sleeptime: %03.3f, waiting...\"",
        "\",\"",
        "\"sending %d deauth to %r on channel %d\"",
        "\",\"",
        "\".\"",
        "\"\"",
        "\"\"",
        "b\"inet (\\d+\\.\\d+\\.\\d+\\.\\d+)\"",
        "b\"ether (.{2}:.{2}:.{2}:.{2}:.{2}:.{2})\"",
        "\"ifconfig\"",
        "\"removing iptables rules\"",
        "\"iptables\"",
        "\"-F\"",
        "\"\\n\"",
        "\"iptables\"",
        "\"__main__\"",
        "\"wifi_deauth\"",
        "\"channels\"",
        "\"nobroadcast\"",
        "\"exclude\"",
        "\"wifi_ap\"",
        "\"channels\"",
        "\"wifi_auth\"",
        "\"channel\"",
        "\"mac_dst\"",
        "\"channels\"",
        "\"arp\"",
        "\"mac_dst\"",
        "\"ip_dst\"",
        "\"icmp\"",
        "\"mac_dst\"",
        "\"ip_dst\"",
        "\"ip\"",
        "\"mac_dst\"",
        "\"ip_dst\"",
        "\"tcp\"",
        "\"mac_dst\"",
        "\"ip_dst\"",
        "\",\"",
        "\"%s (params: %s)\"",
        "\"Sledgehammer DoS/Jammer\"",
        "\"--mode\"",
        "\"Chose one of: %s\"",
        "\"--iface_name\"",
        "\"Interface to be used\"",
        "\"--count\"",
        "\"Amount of packets to be sent\"",
        "\"--mac_dst\"",
        "\"MAC address of direct target or router\"",
        "\"--ip_dst\"",
        "\"Target IP address\"",
        "\"--port_dst\"",
        "\"Target IP address\"",
        "\"--channels\"",
        "\"Channels to scan\"",
        "\"--nobroadcast\"",
        "\"Disable broadcast deauth\"",
        "\"--macs_excluded\"",
        "\"MAC addresses to exclude for deauth\"",
        "\",\"",
        "\"Missing parameter: %s\"",
        "\"wifi_deauth\"",
        "\"wifi_ap\"",
        "\"wifi_auth\"",
        "\"trying to activate monitor mode on %s\"",
        "\"Unknown mode: %r\""
    ],
    "variables": [
        "unpack_I",
        "pack_B",
        "logger",
        "logger_streamhandler",
        "logger_formatter",
        "pkt_arp_req",
        "pkt_arp_resp",
        "psock",
        "mac",
        "pkt_arp_req",
        "src",
        "sha",
        "spa",
        "mac",
        "pkt_arp_resp",
        "src",
        "sha",
        "spa",
        "pkt_icmpreq",
        "psock",
        "eth_l",
        "ip_l",
        "ip_l",
        "body_bytes",
        "psock",
        "ip_frags",
        "eth_l",
        "upper_layer",
        "iptables_rules_info",
        "pkt_tcp_syn",
        "psock_send",
        "psock_rcv",
        "is_running",
        "pkt_rsp",
        "tcp_l",
        "tcp_l",
        "flags",
        "answer_thread",
        "randrange",
        "tcp_l",
        "tcp_l",
        "seq",
        "tcp_l",
        "sport",
        "tcp_l",
        "seq",
        "tcp_l",
        "sport",
        "is_running",
        "channels",
        "channels",
        "psock_rcv",
        "psock_send",
        "wdata",
        "rtap",
        "pkt_ieee80211",
        "bssid",
        "bssid",
        "pargs",
        "is_running",
        "pargs",
        "current_channel",
        "layer_radiotap",
        "layer_iee80211",
        "layer_deauth",
        "pkt_deauth",
        "thread_listen",
        "seq",
        "pargs",
        "current_channel",
        "pargs",
        "is_running",
        "ap_clients",
        "layer_deauth",
        "dst",
        "layer_deauth",
        "src",
        "layer_deauth",
        "bssid",
        "pkt_deauth",
        "src",
        "pkt_deauth",
        "dst",
        "channels",
        "channels",
        "beacon_orig",
        "beacon",
        "_beacon",
        "mac",
        "essid",
        "_beacon",
        "src",
        "_beacon",
        "bssid",
        "body_bytes",
        "len",
        "body_bytes",
        "_beacon",
        "seq",
        "sleeptime",
        "rand_mac",
        "rand_essid",
        "pargs",
        "is_running",
        "psock_send",
        "body_bytes",
        "mac",
        "_beacon",
        "src",
        "_beacon",
        "bssid",
        "body_bytes",
        "len",
        "_beacon",
        "seq",
        "_beacon",
        "ts",
        "radiotap_ieee80211",
        "auth",
        "radiotap_ieee80211_auth",
        "psock_send",
        "channel",
        "auth",
        "src",
        "PATTERN_IP",
        "PATTERN_MAC",
        "cmd_call",
        "output",
        "match_macaddr",
        "macaddr",
        "macaddr",
        "match_ipaddr",
        "ipaddr",
        "ipaddr",
        "cmd_call",
        "output",
        "rules",
        "cmd_call",
        "output",
        "mode_cb",
        "mode_descr",
        "parser",
        "args",
        "args",
        "macs_excluded",
        "args",
        "macs_excluded",
        "arg_missing",
        "arg_missing",
        "wifi_modes"
    ],
    "comments": [
        "logger.setLevel(logging.WARNING)",
        "logger.debug(\"%s %s %s %s\", pargs.mac_src, pargs.mac_dst, pargs.ip_src, pargs.ip_dst)",
        "request from various sources",
        "response from various sources",
        "Use raw sockets to circumvent network stack",
        "{channel : {b\"AP\" : set(b\"clients\", ...)}}",
        "thread: socket1: listen for traffic, extract ap/client macs",
        "TODO: use channel info from radiotap?",
        "don't overwrite already stored client MACs",
        "logger.debug(\"new AP: %r %s\", bssid, utils.get_vendor_for_mac(bssid))",
        "logger.debug(\"new client: %r %s\", client, utils.get_vendor_for_mac(client))",
        "skip non-traffic channels",
        "logger.debug(\"skipping channel %d\", channel)",
        "TODO: check for asynch errors",
        "reset src/dst for broadcast",
        "set target AP",
        "TODO: increase?",
        "TODO: check sequence",
        "logger.debug(\"deauth AP: %r\", mac_ap)",
        "logger.debug(\"deauth client: %r\", mac_client)",
        "adaptive sleeptime due to full buffer on fast sending",
        "send multiple beacons for every ap",
        "_beacon.ts = x << (8*7)",
        "time.sleep(0.01)",
        "timeout on sending? that's ok",
        "timeout on sending? that's ok"
    ],
    "docstrings": [
        "\"\"\"\nSledgehammer DoS/Jammer tool.\n\nRequirements:\n- Python 3\n- Pypacker\n\"\"\"",
        "\"\"\"ARP DoS, eg for switches\"\"\"",
        "\"\"\"ICMP DoS\"\"\"",
        "\"\"\"\n\tIP fragment DOS\n\t\"\"\"",
        "\"\"\"TCP DoS\"\"\"",
        "\"\"\"\n\tiptables -I OUTPUT -p tcp --tcp-flags ALL RST,ACK -j DROP\n\tiptables -I OUTPUT -p tcp --tcp-flags ALL RST -j DROP\n\tiptables -I INPUT -p tcp --tcp-flags ALL RST -j DROP\n\t\"\"\"",
        "\"\"\"\n\tDeauth everyone and everything\n\t\"\"\"",
        "\"\"\"\n\tCreate fake APs\n\t\"\"\"",
        "\"\"\"\n\tAuthentication frames DoS\n\t\"\"\"",
        "\"\"\"\n\tiface_name -- The interface name\n\treturn -- ip_address, mac_address\n\t\"\"\"",
        "\"\"\"'FF' -> 255\"\"\""
    ],
    "functions": [
        "arp_cb",
        "icmp_cb",
        "ip_cb",
        "tcp_cb",
        "answer_cycler",
        "filter_cb",
        "wifi_deauth_cb",
        "listen_cycler",
        "wifi_ap_cb",
        "wifi_authdos_cb",
        "get_iface_info",
        "set_iptables_rules",
        "auto_hex"
    ],
    "classes": []
}