{
    "identifiers": [
        "AD",
        "_x",
        "_y",
        "_obstacle",
        "_x",
        "_y",
        "_obstacle",
        "b",
        "_height",
        "_width",
        "_height",
        "_width",
        "i",
        "i",
        "i",
        "y",
        "y",
        "x",
        "x",
        "x",
        "y",
        "Tile",
        "x",
        "y",
        "blocked",
        "cout",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "_x",
        "_y",
        "_x",
        "_y",
        "_x",
        "_y",
        "_nestX",
        "_nestY",
        "_x",
        "_y",
        "_nestX",
        "_nestY",
        "AD",
        "AD",
        "cout",
        "cout",
        "AD",
        "cout",
        "cout",
        "cout",
        "cout",
        "AD",
        "cout",
        "cout",
        "cout",
        "test",
        "x",
        "y",
        "x",
        "y",
        "y",
        "x",
        "y",
        "y",
        "y",
        "cout",
        "MemoryNode",
        "MemoryNode",
        "x",
        "y",
        "x",
        "y",
        "ary",
        "ary",
        "temp",
        "temp",
        "cout",
        "temp",
        "temp",
        "cout",
        "cout",
        "cout",
        "cout",
        "nextDir",
        "nextDir",
        "nextDir",
        "nextDir",
        "nextDir",
        "response",
        "diffX",
        "diffY",
        "response",
        "ary",
        "ary",
        "i",
        "ary",
        "i",
        "ary",
        "i",
        "sum",
        "ary",
        "i",
        "sizeWithoutObstacle",
        "cout",
        "sum",
        "sizeWithoutObstacle",
        "sum",
        "sizeWithoutObstacle",
        "direction",
        "direction",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "cout",
        "i",
        "tempAry",
        "i",
        "cout",
        "i",
        "tempAry",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "tempAry",
        "i",
        "i",
        "tempAry",
        "d",
        "d",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "cout",
        "newDirectionX",
        "newDirectionY",
        "d",
        "d",
        "_str",
        "DEBUG_MODE",
        "_str",
        "ants",
        "Ant",
        "nestX",
        "nestY",
        "i",
        "ANTS_QUANTITY",
        "i",
        "ants",
        "Ant",
        "nestX",
        "nestY",
        "ants",
        "i",
        "i",
        "ants",
        "i",
        "ants",
        "i",
        "y",
        "y",
        "x",
        "x",
        "x",
        "y",
        "init"
    ],
    "literals": [
        "\"Tile at pos \"",
        "\";\"",
        "\" : Blocked ? : \"",
        "\"got at nest, switching status to seeking food\"",
        "\"emptied memory\"",
        "\"I can see the nest, going there\"",
        "\"Bringing food back, standing on pheromone\"",
        "\"On the way back home\"",
        "\"F00d1!\"",
        "\"found food\"",
        "\"Seeking food, standing on some nasty stuff\"",
        "\"last direction taken : \"",
        "\"location in memory called\"",
        "\";\"",
        "\"error\"",
        "\"---------------------------------------------------\"",
        "\" is at position\"",
        "\";\"",
        "\"Last direction taken : \"",
        "\"average value : \"",
        "\"-------------------------------\"",
        "\":\"",
        "\";\"",
        "\"1 : checking position \"",
        "\";\"",
        "\"2 : checking position \"",
        "\";\"",
        "\"3 : checking position \"",
        "\";\"",
        "\"4 : checking position \"",
        "\";\"",
        "\"6 : checking position \"",
        "\";\"",
        "\"7 : checking position \"",
        "\";\"",
        "\"8 : checking position \"",
        "\";\"",
        "\"9 : checking position \"",
        "\";\"",
        "'Bapu'",
        "'keydown'",
        "'directional'"
    ],
    "variables": [
        "b",
        "i",
        "y",
        "x",
        "blocked",
        "test",
        "temp",
        "temp",
        "nextDir",
        "response",
        "diffX",
        "diffY",
        "response",
        "sizeWithoutObstacle",
        "sum",
        "i",
        "tempAry",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "newDirectionX",
        "newDirectionY",
        "nestX",
        "nestY",
        "i",
        "i",
        "y",
        "x",
        "ants",
        "DEBUG_MODE",
        "STOP_MODE",
        "FUCKTHISSHITFACTOR",
        "ANTS_QUANTITY",
        "searchMethod"
    ],
    "comments": [
        "todo",
        "todo",
        "todo -> check the highest value",
        "todo change this",
        "TODO random part",
        "downback",
        "end of switch",
        "QoL function to check if the next tile is existent and non obstructed",
        "QoL switch to convert the [1,2,3,4,6,7,8,9] direction to our coordinate system",
        "QoL stuff",
        "Civ 6 barbs are retarded",
        "let the swarm flow",
        "init the map",
        "add food",
        "add ants"
    ],
    "docstrings": [
        "* Tile class, meant to be used by the Map object",
        "* Map class, used to store our pseudo environnement",
        "* Simple data structure + basic logic to implement an ant behaviour\n * logic loop implemented prior to the algorithm described at https://github.com/andreasjansson/ants_simulation",
        "* if carrying food",
        "* If carrying food and AT at the ant nest, drop food and get a new random direction",
        "* If carrying food and is NEAR the ant nest, go to nest",
        "* If carrying food and is standing on pheromone, drop some and set direction on the pheromone in front of you (if any)",
        "* set direction to the ant nest",
        "* if looking for food",
        "* if you find food, pick it up and drop pheromone",
        "* if you're standing on pheromone, set direction on the pheromone in front\n       * front : 1 2 3 if looking downward, 3 6 9 if looking right\n       * 7 8 9 if looking up, 7 4 1 if looking left",
        "* sense distant pheromone or walk randomly",
        "* Get one tile from the map",
        "* Proceed to next position",
        "* Solve movement",
        "* Randomly pick a direction and go there",
        "* Check if the ant is at home :)",
        "* Check if the ant is close to home :)",
        "* return an array of value of a given direction"
    ],
    "functions": [
        "update",
        "setFoodOnTile",
        "hasPheromone",
        "canBeRunnedTrough",
        "dropPheromone",
        "update",
        "convertCoordsToDirection",
        "putLocationInMemory",
        "getTile",
        "goBackHome",
        "solvePosition",
        "walk_randomly",
        "am_i_at_nest",
        "am_i_close_to_nest",
        "getAveragePhValueOfArray",
        "getDirectionValue",
        "check_next_position",
        "set_next_position",
        "cout",
        "init"
    ],
    "classes": [
        "Tile",
        "MemoryNode",
        "Ant"
    ]
}