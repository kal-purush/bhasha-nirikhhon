{
    "identifiers": [
        "utils",
        "ts",
        "Lint",
        "parseConfigOptions",
        "configOptions",
        "configOptions",
        "allowDestructuring",
        "configOptions",
        "ALLOW_THIS_DESTRUCTURING",
        "configOptions",
        "ALLOWED_THIS_NAMES",
        "allowedNames",
        "configOptions",
        "ALLOWED_THIS_NAMES",
        "Lint",
        "Lint",
        "ALLOWED_THIS_NAMES",
        "ALLOW_THIS_DESTRUCTURING",
        "ALLOW_THIS_DESTRUCTURING",
        "ALLOWED_THIS_NAMES",
        "Lint",
        "ALLOW_THIS_DESTRUCTURING",
        "ALLOWED_THIS_NAMES",
        "name",
        "name",
        "sourceFile",
        "ts",
        "Lint",
        "parseConfigOptions",
        "NoThisAssignmentWalker",
        "sourceFile",
        "options",
        "noThisAssignmentWalker",
        "Lint",
        "allowedThisName",
        "allowedThisName",
        "sourceFile",
        "ts",
        "ts",
        "sourceFile",
        "node",
        "ts",
        "utils",
        "node",
        "node",
        "ts",
        "node",
        "node",
        "ts",
        "node",
        "node",
        "ts",
        "node",
        "ts",
        "node",
        "node",
        "Rule",
        "node",
        "node",
        "Rule",
        "name",
        "tester",
        "tester",
        "name"
    ],
    "literals": [
        "\"tsutils\"",
        "\"typescript\"",
        "\"../index\"",
        "\"allow-destructuring\"",
        "\"allowed-names\"",
        "string",
        "\"allow-destructuring\"",
        "\"allowed-names\"",
        "string",
        "string",
        "\"Disallows unnecessary references to `this`.\"",
        "\"^self$\"",
        "\"boolean\"",
        "\"string\"",
        "\"list\"",
        "\"object\"",
        "Two options may be provided on an object:\n\n            * \\`${ALLOW_THIS_DESTRUCTURING}\\` allows using destructuring to access members of \\`this\\` (e.g. \\`{ foo, bar } = this;\\`).\n            * \\`${ALLOWED_THIS_NAMES}\\` may be specified as a list of regular expressions to match allowed variable names.",
        "\"Assigning a variable to `this` instead of properly using arrow lambdas\"",
        "\"may be a symptom of pre-ES6 practices or not manging scope well.\"",
        "\"no-this-assignment\"",
        "\"functionality\"",
        "\"Don't assign members of `this` to local variables.\"",
        "string",
        "Assigning \\`this\\` reference to local variable not allowed: ${name}.",
        "string"
    ],
    "variables": [
        "ALLOW_THIS_DESTRUCTURING",
        "ALLOWED_THIS_NAMES",
        "parseConfigOptions",
        "allowedNames",
        "allowDestructuring",
        "options",
        "noThisAssignmentWalker"
    ],
    "comments": [],
    "docstrings": [
        "* @license\n * Copyright 2017 Palantir Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "FAILURE_STRING_FACTORY_IDENTIFIERS",
        "apply",
        "walk",
        "visitVariableDeclaration",
        "variableNameIsBanned"
    ],
    "classes": [
        "Rule",
        "NoThisAssignmentWalker"
    ]
}