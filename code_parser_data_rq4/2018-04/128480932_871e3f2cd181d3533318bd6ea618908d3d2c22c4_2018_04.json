{
    "identifiers": [
        "pathern",
        "describe",
        "describe",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "describe",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern",
        "it",
        "expect",
        "pathern"
    ],
    "literals": [
        "'./index'",
        "pattern",
        "replace",
        "should return path if no matches found",
        "'a/b/c'",
        "'1'",
        "'a/b/c'",
        "should replace match with empty string if no data matches",
        "'a/:b/c'",
        "'1'",
        "'a//c'",
        "should replace match with data",
        "'postContent/:postId'",
        "'1'",
        "'postContent/1'",
        "should replace multiple matches with data",
        "':a/:b/:c'",
        "'1'",
        "'2'",
        "'3'",
        "'1/2/3'",
        "should replace match with string",
        "'postContent/:postId'",
        "'1'",
        "'postContent/1'",
        "should replace multiple matches with string",
        "':a/:b/:c'",
        "'1'",
        "'1/1/1'",
        "should replace data with custom delimiter",
        "'C:\\\\Projects\\\\modulo-sync\\\\posts\\\\:postId\\\\content.md'",
        "'1'",
        "'\\\\'",
        "'C:\\\\Projects\\\\modulo-sync\\\\posts\\\\1\\\\content.md'",
        "should replace data with custom prefix",
        "'$a/$b/$c'",
        "'1'",
        "'2'",
        "'3'",
        "'$'",
        "'1/2/3'",
        "extract",
        "should return empty object if no matches found",
        "'a'",
        "'1'",
        "should return data if match found",
        "'a/:b/c'",
        "'a//c'",
        "''",
        "should return data if multiple matches found",
        "'a/:b/c'",
        "'a/2/c'",
        "'2'",
        "should ignore extra original fragments",
        "'a/:b/c/d/:e/f'",
        "'a/2/c'",
        "'2'",
        "should ignore extra replaced fragments",
        "'a/:b/c'",
        "'a/2/c/a/4/c'",
        "'2'"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}