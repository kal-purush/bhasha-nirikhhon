{
    "identifiers": [
        "com",
        "icodehigh",
        "popularmovies",
        "data",
        "android",
        "net",
        "Uri",
        "android",
        "provider",
        "BaseColumns",
        "CONTENT_AUTHORITY",
        "BASE_CONTENT_URI",
        "Uri",
        "parse",
        "CONTENT_AUTHORITY",
        "PATH_FAVORITE_MOVIES",
        "CONTENT_URI",
        "BASE_CONTENT_URI",
        "buildUpon",
        "appendPath",
        "PATH_FAVORITE_MOVIES",
        "build",
        "TABLE_NAME",
        "COLUMN_MOVIE_ID",
        "COLUMN_MOVIE_NAME",
        "COLUMN_POSTER_PATH",
        "COLUMN_RELEASE_DATE",
        "COLUMN_VOTE_AVERAGE",
        "COLUMN_OVERVIEW",
        "movieId",
        "CONTENT_URI",
        "buildUpon",
        "appendPath",
        "toString",
        "movieId",
        "build"
    ],
    "literals": [
        "\"com.icodehigh.popularmovies\"",
        "\"content://\"",
        "\"favoritemovies\"",
        "\"favorite_movie\"",
        "\"movie_id\"",
        "\"movie_name\"",
        "\"poster_path\"",
        "\"release_date\"",
        "\"vote_average\"",
        "\"overview\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Defines table and column names for the favorite moviees database.",
        "* The \"Content authority\" is the name for the entire content provider",
        "* Use CONTENT_AUTHORITY to create the base of all URI's which apps will use to contact\n     * the content provider for movies.",
        "* Possible paths that can be appended to BASE_CONTENT_URI to form valid URI's that the app\n     * can handle. For instance,\n     *\n     *     content://com.icodehigh.popularmovies/movies/\n     *     [           BASE_CONTENT_URI         ][ PATH_WEATHER ]\n     *\n     * is a valid path for looking at favorite movies data.\n     *\n     *      content://com.icodehigh.popularmovies/something/\n     *\n     * will fail, as the ContentProvider hasn't been given any information on what to do with\n     * \"something\".",
        "* Private constructor to avoid to make an instance of this class by accident",
        "The base CONTENT_URI used to query the fav movies table from the content provider",
        "Used internally as the name of our favorite movies table.",
        "Movie ID as returned by API, used to identify within the API",
        "Movie title as returned by API in English",
        "Movie poster path",
        "Movie release date",
        "Movie vote average",
        "Movie overview",
        "* Builds a URI that adds the id of the movie to the end of the fav movies content URI path.\n         * This is used to query details about a single fav movie entry by movie id.\n\n         *\n         * @param movieId Normalized date in milliseconds\n         * @return Uri to query details about a single weather entry"
    ],
    "functions": [
        "FavoriteMovieContract",
        "Uri",
        "buildFavoriteMovieUriWithId"
    ],
    "classes": [
        "FavoriteMovieContract",
        "FavoriteMovieEntry"
    ]
}