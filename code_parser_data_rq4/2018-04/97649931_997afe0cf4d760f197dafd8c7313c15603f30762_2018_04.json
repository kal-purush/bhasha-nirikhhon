{
    "identifiers": [
        "neo4jCredentials",
        "neo4jUrl",
        "waitForNeo",
        "Connection",
        "expect",
        "isNil",
        "node",
        "relation",
        "results",
        "length",
        "properties",
        "cb",
        "row",
        "expect",
        "results",
        "isNil",
        "length",
        "expect",
        "results",
        "length",
        "results",
        "row",
        "expect",
        "row",
        "isNil",
        "properties",
        "expect",
        "row",
        "properties",
        "isNil",
        "cb",
        "cb",
        "row",
        "record",
        "labels",
        "properties",
        "expect",
        "record",
        "expect",
        "record",
        "expect",
        "record",
        "record",
        "label",
        "expect",
        "label",
        "labels",
        "expect",
        "record",
        "labels",
        "expect",
        "record",
        "properties",
        "expect",
        "record",
        "properties",
        "relation",
        "label",
        "properties",
        "expect",
        "relation",
        "expect",
        "relation",
        "expect",
        "relation",
        "expect",
        "relation",
        "expect",
        "relation",
        "label",
        "expect",
        "relation",
        "label",
        "expect",
        "relation",
        "properties",
        "expect",
        "relation",
        "properties",
        "describe",
        "before",
        "waitForNeo",
        "before",
        "db",
        "Connection",
        "neo4jUrl",
        "neo4jCredentials",
        "before",
        "db",
        "after",
        "db",
        "after",
        "db",
        "describe",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expectNode",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expectNode",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expectNode",
        "row",
        "it",
        "db",
        "node",
        "relation",
        "node",
        "expectResults",
        "results",
        "row",
        "expectNode",
        "row",
        "expectRelation",
        "row",
        "expectNode",
        "row",
        "it",
        "db",
        "node",
        "relation",
        "node",
        "relation",
        "node",
        "relation",
        "node",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "row",
        "rel",
        "expectRelation",
        "rel",
        "expect",
        "rel",
        "expect",
        "row",
        "row",
        "node",
        "expectNode",
        "node",
        "expect",
        "node",
        "describe",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "expect",
        "row",
        "expect",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row",
        "it",
        "db",
        "expectResults",
        "results",
        "row",
        "expect",
        "row"
    ],
    "literals": [
        "'./utils'",
        "'../src'",
        "'../test-setup'",
        "'lodash'",
        "'../src/clauses'",
        "string",
        "string",
        "'identity'",
        "'properties'",
        "'labels'",
        "'string'",
        "'string'",
        "'object'",
        "string",
        "'identity'",
        "'properties'",
        "'label'",
        "'start'",
        "'end'",
        "'string'",
        "'string'",
        "'string'",
        "'string'",
        "'object'",
        "'scenarios'",
        "'node'",
        "'node'",
        "'node'",
        "'node'",
        "'node'",
        "'should create a node'",
        "'person'",
        "'Person'",
        "'Alan'",
        "'person'",
        "'person'",
        "'Person'",
        "'Alan'",
        "'should create a node without returning anything'",
        "'person'",
        "'Person'",
        "'Steve'",
        "'should fetch multiple nodes'",
        "'person'",
        "'Person'",
        "'person'",
        "'person'",
        "'Person'",
        "'name'",
        "'age'",
        "'should fetch a property of a set of nodes'",
        "'person'",
        "'Person'",
        "'person.age'",
        "'yearsOld'",
        "'yearsOld'",
        "'number'",
        "'should return an array property'",
        "'arrNode'",
        "'ArrNode'",
        "'arrNode'",
        "'arrNode'",
        "'ArrNode'",
        "'should return a relationship'",
        "'person'",
        "'Person'",
        "'Alfred'",
        "'out'",
        "'hasJob'",
        "'HasJob'",
        "'job'",
        "'Job'",
        "'Butler'",
        "'person'",
        "'hasJob'",
        "'job'",
        "'person'",
        "'hasJob'",
        "'job'",
        "'Person'",
        "'Alfred'",
        "'HasJob'",
        "'Job'",
        "'Butler'",
        "'should handle an array of nodes and relationships'",
        "'City'",
        "'Cityburg'",
        "'out'",
        "'Road'",
        "'City'",
        "'Townsville'",
        "'out'",
        "'Road'",
        "'City'",
        "'Rural hideout'",
        "'out'",
        "'Road'",
        "'City'",
        "'Village'",
        "'MATCH p = (:City)-[:Road*3]->(:City)'",
        "'relationships(p)'",
        "'rels'",
        "'nodes(p)'",
        "'nodes'",
        "'rels'",
        "'nodes'",
        "'Road'",
        "'length'",
        "'City'",
        "'name'",
        "'literals'",
        "'should handle value literals'",
        "'1 AS numberVal'",
        "'\"string\" AS stringVal'",
        "'null AS nullVal'",
        "'true AS boolVal'",
        "'numberVal'",
        "'stringVal'",
        "'string'",
        "'nullVal'",
        "'boolVal'",
        "'should handle an array literal'",
        "'range(0, 5)'",
        "'range(0, 5)'",
        "'range(0, 5)'",
        "'should handle a map literal'",
        "'{ a: 1, b: true, c: \"a string\" } as map'",
        "'map'",
        "'a string'",
        "'should handle a nested array literal'",
        "'{ a: [1, 2, 3], b: [4, 5, 6] } as map'",
        "'map'",
        "'should handle a nested map literal'",
        "'[{ a: \"name\", b: true }, { c: 1, d: null }] as arr'",
        "'arr'",
        "'name'"
    ],
    "variables": [
        "db",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results",
        "results"
    ],
    "comments": [
        "Create relationships"
    ],
    "docstrings": [],
    "functions": [
        "expectResults",
        "expectNode",
        "expectRelation"
    ],
    "classes": []
}