{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "r",
        "r",
        "Infinity",
        "require",
        "require",
        "require",
        "message",
        "err",
        "message",
        "err",
        "cfg",
        "Pumpify",
        "StreamEvents",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "googleAuth",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "Buffer",
        "cfg",
        "base64Key",
        "crypto",
        "base64Key",
        "cfg",
        "cfg",
        "cfg",
        "ConfigStore",
        "cfg",
        "cfg",
        "cfg",
        "parseInt",
        "cfg",
        "NaN",
        "isNaN",
        "contentLength",
        "contentLength",
        "err",
        "err",
        "err",
        "util",
        "Upload",
        "Pumpify",
        "Upload",
        "callback",
        "r",
        "BASE_URI",
        "metadata",
        "metadata",
        "reqOpts",
        "metadata",
        "metadata",
        "reqOpts",
        "metadata",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "err",
        "resp",
        "err",
        "callback",
        "err",
        "resp",
        "uri",
        "uri",
        "callback",
        "uri",
        "Upload",
        "Upload",
        "through",
        "through",
        "through",
        "reqOpts",
        "requestStream",
        "bufferStream",
        "offsetStream",
        "requestStream",
        "delayStream",
        "delayStream",
        "requestStream",
        "resp",
        "resp",
        "resp",
        "resp",
        "Upload",
        "chunk",
        "enc",
        "next",
        "numBytesWritten",
        "chunk",
        "cachedFirstChunk",
        "firstChunk",
        "cachedFirstChunk",
        "Buffer",
        "cachedFirstChunk",
        "firstChunk",
        "Buffer",
        "firstChunk",
        "bufferEqual",
        "cachedFirstChunk",
        "firstChunk",
        "chunk",
        "chunk",
        "chunk",
        "length",
        "Buffer",
        "chunk",
        "enc",
        "numBytesWritten",
        "offset",
        "chunk",
        "chunk",
        "offset",
        "numBytesWritten",
        "length",
        "next",
        "offset",
        "chunk",
        "Upload",
        "callback",
        "err",
        "resp",
        "err",
        "resp",
        "resp",
        "resp",
        "resp",
        "TERMINATED_UPLOAD_STATUS_CODE",
        "err",
        "resp",
        "RESUMABLE_INCOMPLETE_STATUS_CODE",
        "resp",
        "parseInt",
        "resp",
        "callback",
        "callback",
        "Upload",
        "reqOpts",
        "callback",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "err",
        "authorizedReqOpts",
        "err",
        "callback",
        "wrapError",
        "err",
        "request",
        "authorizedReqOpts",
        "err",
        "resp",
        "body",
        "err",
        "callback",
        "err",
        "resp",
        "body",
        "body",
        "callback",
        "body",
        "resp",
        "resp",
        "nonSuccess",
        "resp",
        "RESUMABLE_INCOMPLETE_STATUS_CODE",
        "callback",
        "body",
        "callback",
        "resp",
        "body",
        "Upload",
        "reqOpts",
        "callback",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "reqOpts",
        "err",
        "authorizedReqOpts",
        "err",
        "wrapError",
        "err",
        "request",
        "authorizedReqOpts",
        "requestStream",
        "requestStream",
        "requestStream",
        "resp",
        "resp",
        "body",
        "body",
        "body",
        "requestStream",
        "callback",
        "requestStream",
        "Upload",
        "err",
        "err",
        "err",
        "Upload",
        "prop",
        "store",
        "store",
        "prop",
        "Upload",
        "props",
        "props",
        "Upload",
        "Upload",
        "resp",
        "resp",
        "RETRY_LIMIT",
        "resp",
        "resp",
        "RETRY_LIMIT",
        "randomMs",
        "setTimeout",
        "waitTime",
        "resp",
        "cfg",
        "Upload",
        "cfg",
        "upload",
        "cfg",
        "callback",
        "Upload",
        "cfg",
        "up",
        "callback",
        "upload"
    ],
    "literals": [
        "'use strict'",
        "'buffer-equal'",
        "'configstore'",
        "'crypto'",
        "'google-auto-auth'",
        "'pumpify'",
        "'request'",
        "'stream-events'",
        "'through2'",
        "'util'",
        "'https://www.googleapis.com/upload/storage/v1/b'",
        "'\\n'",
        "'A bucket and file name are required'",
        "'https://www.googleapis.com/auth/devstorage.full_control'",
        "'base64'",
        "'sha256'",
        "'base64'",
        "'base64'",
        "'private'",
        "'publicRead'",
        "'gcs-resumable-upload'",
        "'uri'",
        "'*'",
        "'writing'",
        "'POST'",
        "'o'",
        "'/'",
        "'resumable'",
        "'X-Upload-Content-Length'",
        "'X-Upload-Content-Type'",
        "'undefined'",
        "'number'",
        "'PUT'",
        "'Content-Range'",
        "'bytes '",
        "'-*/'",
        "'prefinish'",
        "'complete'",
        "'Upload failed'",
        "'metadata'",
        "'firstChunk'",
        "'string'",
        "'PUT'",
        "'Content-Length'",
        "'Content-Range'",
        "'bytes */*'",
        "'-'",
        "'x-goog-encryption-algorithm'",
        "'AES256'",
        "'x-goog-encryption-key'",
        "'x-goog-encryption-key-sha256'",
        "'Could not authenticate request'",
        "'Could not authenticate request'",
        "'error'",
        "'response'",
        "'complete'",
        "'/'",
        "'/'",
        "'/'",
        "'Retry limit exceeded'",
        "'Retry limit exceeded'",
        "'response'"
    ],
    "variables": [
        "bufferEqual",
        "ConfigStore",
        "crypto",
        "googleAuth",
        "Pumpify",
        "request",
        "StreamEvents",
        "through",
        "util",
        "BASE_URI",
        "TERMINATED_UPLOAD_STATUS_CODE",
        "RESUMABLE_INCOMPLETE_STATUS_CODE",
        "RETRY_LIMIT",
        "wrapError",
        "base64Key",
        "contentLength",
        "metadata",
        "reqOpts",
        "uri",
        "reqOpts",
        "bufferStream",
        "offsetStream",
        "delayStream",
        "offset",
        "numBytesWritten",
        "cachedFirstChunk",
        "firstChunk",
        "length",
        "nonSuccess",
        "requestStream",
        "body",
        "store",
        "randomMs",
        "waitTime",
        "up"
    ],
    "comments": [
        "wait for \"complete\" from request before letting the stream finish",
        "check if this is the same content uploaded previously. this caches a slice",
        "of the first chunk, then compares it with the first byte of incoming data",
        "This is a new upload. Cache the first chunk.",
        "this continues an upload in progress. check if the bytes are the same",
        "this data is not the same. start a new upload",
        "only push data from the byte after the one we left off on",
        "we don't return a 404 to the user if they provided the resumable URI.",
        "if we're just using the configstore file to tell us that this file",
        "exists, and it turns out that it doesn't (the 404), that's probably",
        "stale config data.",
        "this resumable upload is unrecoverable (bad data or service error).",
        "- https://github.com/stephenplusplus/gcs-resumable-upload/issues/15",
        "- https://github.com/stephenplusplus/gcs-resumable-upload/pull/16#discussion_r80363774",
        "200-299 status code",
        "this makes the response body come back in the response (weird?)"
    ],
    "docstrings": [
        "* @return {bool} is the request good?"
    ],
    "functions": [
        "Upload",
        "upload"
    ],
    "classes": []
}