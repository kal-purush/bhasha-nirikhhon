{
    "identifiers": [
        "THREE",
        "awdUrl",
        "awdUrl",
        "awdUrl",
        "THREE",
        "ResourcesLoader",
        "path",
        "THREE",
        "THREE",
        "loader",
        "path",
        "image",
        "tex",
        "image",
        "tex",
        "tex",
        "showStatus",
        "THREE",
        "showStatus",
        "THREE",
        "Block",
        "AWDLoader",
        "THREE",
        "AWDLoader",
        "AWDLoader",
        "AWDLoader",
        "url",
        "callback",
        "url",
        "XMLHttpRequest",
        "xhr",
        "url",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "that",
        "xhr",
        "callback",
        "that",
        "url",
        "xhr",
        "xhr",
        "AWDLoader",
        "data",
        "data",
        "DataView",
        "data",
        "data",
        "blen",
        "blen",
        "AWDLoader",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "assetData",
        "len",
        "len",
        "blockId",
        "block",
        "Block",
        "block",
        "assetData",
        "block",
        "blockId",
        "AWDLoader",
        "awdmagic",
        "version",
        "version",
        "flags",
        "version",
        "version",
        "flags",
        "flags",
        "flags",
        "FLOAT64",
        "FLOAT32",
        "FLOAT64",
        "FLOAT32",
        "FLOAT64",
        "FLOAT32",
        "flags",
        "AWDLoader",
        "len",
        "THREE",
        "ctr",
        "ctr",
        "mtx",
        "parent",
        "par_id",
        "parent",
        "ctr",
        "UINT8",
        "ctr",
        "ctr",
        "AWDLoader",
        "len",
        "par_id",
        "mtx",
        "name",
        "data_id",
        "num_materials",
        "geometries",
        "data_id",
        "materials",
        "materials_parsed",
        "i",
        "i",
        "num_materials",
        "i",
        "mat_id",
        "mat",
        "mat_id",
        "materials",
        "mat",
        "meshLen",
        "geometries",
        "meshes",
        "meshLen",
        "mesh",
        "THREE",
        "i",
        "i",
        "meshLen",
        "i",
        "THREE",
        "geometries",
        "i",
        "meshes",
        "sm",
        "mesh",
        "sm",
        "mesh",
        "THREE",
        "geometries",
        "meshes",
        "mesh",
        "mesh",
        "mtx",
        "mesh",
        "name",
        "parent",
        "par_id",
        "parent",
        "mesh",
        "materials",
        "meshLen",
        "matLen",
        "i",
        "i",
        "maxLen",
        "i",
        "meshes",
        "i",
        "meshLen",
        "materials",
        "i",
        "matLen",
        "mesh",
        "mesh",
        "AWDLoader",
        "len",
        "name",
        "num_methods",
        "props",
        "AWD_FIELD_INT32",
        "AWD_FIELD_BADDR",
        "AWD_FIELD_BOOL",
        "AWD_FIELD_FLOAT32",
        "AWD_FIELD_BOOL",
        "methods_parsed",
        "methods_parsed",
        "num_methods",
        "attributes",
        "mat",
        "name",
        "mat",
        "mat",
        "mat",
        "THREE",
        "mat",
        "props",
        "props",
        "mat",
        "tex_addr",
        "mat",
        "attributes",
        "mat",
        "props",
        "mat",
        "props",
        "mat",
        "AWDLoader",
        "len",
        "data_len",
        "data_len",
        "url",
        "asset",
        "url",
        "asset",
        "AWDLoader",
        "url",
        "ResourcesLoader",
        "url",
        "AWDLoader",
        "len",
        "joints_parsed",
        "num_joints",
        "joint",
        "THREE",
        "joint",
        "joint",
        "ibp",
        "joint",
        "ibp",
        "skeleton",
        "joint",
        "joints_parsed",
        "skeleton",
        "AWDLoader",
        "blockID",
        "joints_parsed",
        "num_joints",
        "has_transform",
        "has_transform",
        "mtx_data",
        "mtx_data",
        "THREE",
        "pose",
        "joints_parsed",
        "mtx_data",
        "joints_parsed",
        "pose",
        "AWDLoader",
        "blockID",
        "frames_parsed",
        "num_frames",
        "pose_addr",
        "frame_dur",
        "pose",
        "pose_addr",
        "clip",
        "pose",
        "frame_dur",
        "frames_parsed",
        "clip",
        "clip",
        "AWDLoader",
        "len",
        "UINT16",
        "frames_parsed",
        "num_frames",
        "poseBlockAdress",
        "skeletonFrames",
        "poseBlockAdress",
        "frames_parsed",
        "skeletonFrames",
        "AWDLoader",
        "len",
        "BADDR",
        "animSetBlockAdress",
        "i",
        "targetMeshLength",
        "i",
        "meshAdresses",
        "i",
        "i",
        "meshAdresses",
        "i",
        "targetMeshes",
        "meshAdresses",
        "i",
        "targetAnimationSet",
        "animSetBlockAdress",
        "thisAnimator",
        "targetAnimationSet",
        "props",
        "i",
        "i",
        "targetMeshes",
        "i",
        "targetMeshes",
        "i",
        "thisAnimator",
        "thisAnimator",
        "AWDLoader",
        "len",
        "props",
        "subs_parsed",
        "num_subs",
        "geom",
        "THREE",
        "geom",
        "name",
        "geometries",
        "geom",
        "sm_len",
        "sm_end",
        "sm_len",
        "sm_end",
        "str_len",
        "str_type",
        "buffer",
        "Float32Array",
        "str_len",
        "attrib",
        "THREE",
        "buffer",
        "geom",
        "attrib",
        "idx",
        "str_end",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "idx",
        "str_type",
        "buffer",
        "Uint16Array",
        "str_len",
        "attrib",
        "THREE",
        "buffer",
        "geom",
        "attrib",
        "geom",
        "str_len",
        "idx",
        "str_end",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "idx",
        "str_type",
        "buffer",
        "Float32Array",
        "str_len",
        "attrib",
        "THREE",
        "buffer",
        "geom",
        "attrib",
        "idx",
        "str_end",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "idx",
        "str_type",
        "buffer",
        "Float32Array",
        "str_len",
        "attrib",
        "THREE",
        "buffer",
        "geom",
        "attrib",
        "idx",
        "str_end",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "idx",
        "str_end",
        "geom",
        "subs_parsed",
        "geometries",
        "AWDLoader",
        "len",
        "poseOnly",
        "geoAdress",
        "mesh",
        "geoAdress",
        "geom",
        "mesh",
        "geom",
        "poseOnly",
        "num_frames",
        "num_submeshes",
        "num_Streams",
        "streamsParsed",
        "streamsParsed",
        "num_Streams",
        "streamtypes",
        "streamsParsed",
        "props",
        "BOOL",
        "BOOL",
        "clip",
        "props",
        "clip",
        "props",
        "frames_parsed",
        "frames_parsed",
        "num_frames",
        "frame_dur",
        "subMeshParsed",
        "subMeshParsed",
        "num_submeshes",
        "streamsParsed",
        "str_len",
        "str_end",
        "str_len",
        "streamsParsed",
        "num_Streams",
        "streamtypes",
        "streamsParsed",
        "Float32Array",
        "str_len",
        "geom",
        "buffer",
        "idx",
        "str_end",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "buffer",
        "idx",
        "idx",
        "subMeshParsed",
        "str_end",
        "streamsParsed",
        "frames_parsed",
        "AWDLoader",
        "id",
        "id",
        "AWDLoader",
        "THREE",
        "mtx",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "mtx",
        "AWDLoader",
        "expected",
        "list_len",
        "AWDProperties",
        "expected",
        "list_end",
        "expected",
        "key",
        "expected",
        "key",
        "props",
        "key",
        "len",
        "len",
        "props",
        "AWDLoader",
        "AWDLoader",
        "len",
        "AWD_FIELD_INT8",
        "elem_len",
        "read_func",
        "AWD_FIELD_INT16",
        "elem_len",
        "read_func",
        "AWD_FIELD_INT32",
        "elem_len",
        "read_func",
        "AWD_FIELD_BOOL",
        "AWD_FIELD_UINT8",
        "elem_len",
        "read_func",
        "AWD_FIELD_UINT16",
        "elem_len",
        "read_func",
        "AWD_FIELD_UINT32",
        "AWD_FIELD_BADDR",
        "elem_len",
        "read_func",
        "AWD_FIELD_FLOAT32",
        "elem_len",
        "read_func",
        "AWD_FIELD_FLOAT64",
        "elem_len",
        "read_func",
        "AWD_FIELD_VECTOR2x1",
        "AWD_FIELD_VECTOR3x1",
        "AWD_FIELD_VECTOR4x1",
        "AWD_FIELD_MTX3x2",
        "AWD_FIELD_MTX3x3",
        "AWD_FIELD_MTX4x3",
        "AWD_FIELD_MTX4x4",
        "elem_len",
        "read_func",
        "elem_len",
        "len",
        "num_read",
        "num_elems",
        "len",
        "elem_len",
        "num_read",
        "num_elems",
        "read_func",
        "num_read",
        "read_func",
        "AWDLoader",
        "AWDLoader",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "littleEndian",
        "a",
        "AWDLoader",
        "len",
        "AWDLoader",
        "len",
        "len",
        "littleEndian",
        "c1",
        "c",
        "c1",
        "c1",
        "c1",
        "littleEndian",
        "c",
        "c1",
        "c2",
        "littleEndian",
        "littleEndian",
        "c",
        "c1",
        "c2",
        "c3",
        "AWDProperties",
        "AWDProperties",
        "key",
        "value",
        "key",
        "value",
        "key",
        "fallback",
        "key",
        "key",
        "fallback",
        "AWDLoader"
    ],
    "literals": [
        "'/'",
        "''",
        "\"GET\"",
        "'arraybuffer'",
        "'AWDLoader: Couldn\\'t load '",
        "' ('",
        "')'",
        "'compressed AWD not supported'",
        "'AWDLoader: body len does not match file length'",
        "\"AWDLoader - bad magic\"",
        "\"\"",
        "'position'",
        "'index'",
        "'uv'",
        "'normal'",
        "\"parseMeshPoseAnimation target mesh not found at:\"",
        "''"
    ],
    "variables": [
        "UNCOMPRESSED",
        "DEFLATE",
        "LZMA",
        "AWD_FIELD_INT8",
        "AWD_FIELD_INT16",
        "AWD_FIELD_INT32",
        "AWD_FIELD_UINT8",
        "AWD_FIELD_UINT16",
        "AWD_FIELD_UINT32",
        "AWD_FIELD_FLOAT32",
        "AWD_FIELD_FLOAT64",
        "AWD_FIELD_BOOL",
        "AWD_FIELD_COLOR",
        "AWD_FIELD_BADDR",
        "AWD_FIELD_STRING",
        "AWD_FIELD_BYTEARRAY",
        "AWD_FIELD_VECTOR2x1",
        "AWD_FIELD_VECTOR3x1",
        "AWD_FIELD_VECTOR4x1",
        "AWD_FIELD_MTX3x2",
        "AWD_FIELD_MTX3x3",
        "AWD_FIELD_MTX4x3",
        "AWD_FIELD_MTX4x4",
        "BOOL",
        "COLOR",
        "BADDR",
        "INT8",
        "INT16",
        "INT32",
        "UINT8",
        "UINT16",
        "UINT32",
        "FLOAT32",
        "FLOAT64",
        "littleEndian",
        "tex",
        "loader",
        "that",
        "xhr",
        "blen",
        "assetData",
        "ns",
        "len",
        "block",
        "blockId",
        "ns",
        "flags",
        "len",
        "version",
        "awdmagic",
        "flags",
        "parent",
        "ctr",
        "par_id",
        "mtx",
        "name",
        "mesh",
        "geometries",
        "meshLen",
        "meshes",
        "par_id",
        "data_id",
        "mtx",
        "materials",
        "mat",
        "mat_id",
        "num_materials",
        "materials_parsed",
        "parent",
        "i",
        "sm",
        "matLen",
        "maxLen",
        "name",
        "props",
        "mat",
        "attributes",
        "finalize",
        "num_methods",
        "methods_parsed",
        "method_type",
        "tex_addr",
        "name",
        "asset",
        "data_len",
        "url",
        "name",
        "num_joints",
        "skeleton",
        "joints_parsed",
        "joint",
        "ibp",
        "name",
        "num_joints",
        "pose",
        "joints_parsed",
        "joint_pose",
        "has_transform",
        "mtx_data",
        "frame_dur",
        "pose_addr",
        "pose",
        "name",
        "clip",
        "num_frames",
        "frames_parsed",
        "returnedArray",
        "poseBlockAdress",
        "name",
        "num_frames",
        "props",
        "frames_parsed",
        "skeletonFrames",
        "targetMesh",
        "animSetBlockAdress",
        "targetAnimationSet",
        "outputString",
        "name",
        "props",
        "targetMeshLength",
        "meshAdresses",
        "i",
        "activeState",
        "autoplay",
        "returnedArray",
        "targetMeshes",
        "thisAnimator",
        "name",
        "num_subs",
        "geom",
        "subs_parsed",
        "props",
        "buffer",
        "skinW",
        "skinI",
        "geometries",
        "sm_len",
        "sm_end",
        "attrib",
        "idx",
        "str_type",
        "str_ftype",
        "str_len",
        "str_end",
        "num_frames",
        "num_submeshes",
        "frames_parsed",
        "subMeshParsed",
        "frame_dur",
        "x",
        "y",
        "z",
        "str_len",
        "str_end",
        "geom",
        "subGeom",
        "idx",
        "clip",
        "indices",
        "verts",
        "num_Streams",
        "streamsParsed",
        "streamtypes",
        "props",
        "thisGeo",
        "name",
        "geoAdress",
        "mesh",
        "buffer",
        "mtx",
        "e",
        "list_len",
        "list_end",
        "props",
        "key",
        "len",
        "elem_len",
        "read_func",
        "num_read",
        "num_elems",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "len",
        "c",
        "c1",
        "c2",
        "c2",
        "c3"
    ],
    "comments": [
        "ResourcesLoader",
        "=============",
        "handle loading for external resources",
        "case 111:",
        "assetData = this.parseMeshPoseAnimation(len, true);",
        "break;",
        "case 121:",
        "assetData = parseUVAnimation(len);",
        "break;",
        "debug('Ignoring block!',type, len);",
        "Store block reference for later use",
        "TODO : BufferGeometry don't support \"geometryGroups\" for now.",
        "so we create sub meshes for each groups",
        "Ignore for now",
        "log( \"AWDLoader parseMaterial \",name )",
        "Read material numerical properties",
        "(1=color, 2=bitmap url, 11=alpha_blending, 12=alpha_threshold, 13=repeat)",
        "Color material",
        "Bitmap material",
        "External",
        "embed texture not supported",
        "Ignore for now",
        "broken : skeleton pose format is different than threejs one",
        "Array<Bone>",
        "Ignore joint id",
        "0=null in AWD",
        "Ignore joint props/attributes for now",
        "Discard attributes for now",
        "debug( 'parse Skeleton Pose. joints : ' + num_joints);",
        ":uint;",
        "Skip attributes for now",
        "debug( 'parse Skeleton Animation. frames : ' + num_frames);",
        "debug( 'pose address ',pose[2].elements[12],pose[2].elements[13],pose[2].elements[14] );",
        "debug(\"Could not this SkeletonClipNode, because no Frames where set.\");",
        "Ignore attributes for now",
        ":int",
        ":AnimationSetBase;",
        ":String = \"\";",
        ":Vector.<uint> = new Vector.<uint>;",
        ":Vector.<Mesh> = new Vector.<Mesh>;",
        "returnedArray = getAssetByID(meshAdresses[i], [AssetType.MESH]);",
        "if (returnedArray[0])",
        "debug( \"vertex Anim???\");",
        "debug(\"Parsed a Animator: Name = \" + name);",
        "Loop through sub meshes",
        "Ignore for now",
        "Loop through data streams",
        "VERTICES",
        "------------------",
        "INDICES",
        "-----------------",
        "UVS",
        "-------------------",
        "NORMALS",
        "else if (str_type == 6) {",
        "skinI = new Float32Array( str_len>>1 );",
        "idx = 0",
        "while (this._ptr < str_end) {",
        "skinI[idx]   = this.readU16();",
        "idx++;",
        "}",
        "}",
        "else if (str_type == 7) {",
        "skinW = new Float32Array( str_len>>2 );",
        "idx = 0;",
        "while (this._ptr < str_end) {",
        "skinW[idx]   = this.readF32();",
        "idx++;",
        "}",
        "}",
        "geom.computeFaceNormals();",
        "finalizeAsset(geom, name);",
        "debug(\"VA num_frames : \", num_frames );",
        "debug(\"VA num_submeshes : \", num_submeshes );",
        "debug(\"VA numstreams : \", num_Streams );",
        "geom.addAttribute( 'morphTarget'+frames_parsed, Float32Array, str_len/12, 3 );",
        "buffer = geom.attributes['morphTarget'+frames_parsed].array",
        "e[3] = 0.0;",
        "e[7] = this.readF32();",
        "e[11] = this.readF32();",
        "e[15] = this.readF32();",
        "skip for now",
        "TODO(user): Use native implementations if/when available"
    ],
    "docstrings": [
        "* Author: Pierre Lepers\n * Date: 09/12/2013 17:21",
        "* Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n   * @param {Array.<number>} bytes UTF-8 byte array.\n   * @return {string} 16-bit Unicode string.",
        "* Converts a UTF-8 byte array to JavaScript's 16-bit Unicode.\n   * @param {Array.<number>} bytes UTF-8 byte array.\n   * @return {string} 16-bit Unicode string."
    ],
    "functions": [
        "ResourcesLoader",
        "Block",
        "AWDLoader"
    ],
    "classes": []
}