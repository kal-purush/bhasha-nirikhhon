{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "argparse",
        "object_detection",
        "utils",
        "label_map_util",
        "object_detection",
        "utils",
        "visualization_utils",
        "vis_util",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "label_map_util",
        "load_labelmap",
        "PATH_TO_LABELS",
        "label_map_util",
        "convert_label_map_to_categories",
        "label_map",
        "max_num_classes",
        "NUM_CLASSES",
        "use_display_name",
        "label_map_util",
        "create_category_index",
        "categories",
        "image_np",
        "sess",
        "detection_graph",
        "np",
        "expand_dims",
        "image_np",
        "axis",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "detection_graph",
        "get_tensor_by_name",
        "sess",
        "run",
        "boxes",
        "scores",
        "classes",
        "num_detections",
        "feed_dict",
        "image_tensor",
        "image_np_expanded",
        "vis_util",
        "visualize_boxes_and_labels_on_image_array",
        "image_np",
        "np",
        "squeeze",
        "boxes",
        "np",
        "squeeze",
        "classes",
        "astype",
        "np",
        "int32",
        "np",
        "squeeze",
        "scores",
        "category_index",
        "use_normalized_coordinates",
        "line_thickness",
        "image_np",
        "tf",
        "Graph",
        "detection_graph",
        "as_default",
        "tf",
        "GraphDef",
        "tf",
        "gfile",
        "GFile",
        "PATH_TO_CKPT",
        "fid",
        "fid",
        "read",
        "od_graph_def",
        "ParseFromString",
        "serialized_graph",
        "tf",
        "import_graph_def",
        "od_graph_def",
        "name",
        "moviepy",
        "editor",
        "VideoFileClip",
        "image",
        "image",
        "size",
        "np",
        "array",
        "image",
        "getdata",
        "reshape",
        "im_height",
        "im_width",
        "astype",
        "np",
        "uint8",
        "image",
        "detection_graph",
        "as_default",
        "tf",
        "Session",
        "graph",
        "detection_graph",
        "sess",
        "detect_objects",
        "image",
        "sess",
        "detection_graph",
        "image_process",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "src",
        "exit",
        "args",
        "output_path",
        "VideoFileClip",
        "args",
        "src",
        "clip1",
        "fl_image",
        "process_image",
        "white_clip",
        "write_videofile",
        "white_output",
        "bitrate"
    ],
    "literals": [
        "r'.\\frozen_inference_graph.pb'",
        "r'.\\elevator_label_map.pbtxt'",
        "'image_tensor:0'",
        "'detection_boxes:0'",
        "'detection_scores:0'",
        "'detection_classes:0'",
        "'num_detections:0'",
        "'rb'",
        "''",
        "'__main__'",
        "'-src'",
        "'--src'",
        "'Video Path You Want To Detection.'",
        "'-o'",
        "'--output_path'",
        "'./my_detected.mp4'",
        "'Output Path You Want To Store Detected Video.'",
        "'video path is must argment'",
        "\"5000k\""
    ],
    "variables": [
        "PATH_TO_CKPT",
        "PATH_TO_LABELS",
        "NUM_CLASSES",
        "label_map",
        "categories",
        "category_index",
        "image_np_expanded",
        "image_tensor",
        "boxes",
        "scores",
        "classes",
        "num_detections",
        "boxes",
        "scores",
        "classes",
        "num_detections",
        "detection_graph",
        "od_graph_def",
        "serialized_graph",
        "im_width",
        "im_height",
        "image_process",
        "parser",
        "args",
        "white_output",
        "clip1",
        "white_clip"
    ],
    "comments": [
        "coding: utf-8",
        "Expand dimensions since the model expects images to have shape: [1, None, None, 3]",
        "Each box represents a part of the image where a particular object was detected.",
        "Each score represent how level of confidence for each of the objects.",
        "Score is shown on the result image, together with the class label.",
        "Actual detection.",
        "Visualization of the results of a detection.",
        "Load a frozen TF model",
        "Import everything needed to edit/save/watch video clips",
        "from IPython.display import HTML",
        "NOTE: The output you return should be a color image (3 channel) for processing video below",
        "you should return the final output (image with lines are drawn on lanes)",
        "NOTE: this function expects color images!!s"
    ],
    "docstrings": [],
    "functions": [
        "detect_objects",
        "load_image_into_numpy_array",
        "process_image"
    ],
    "classes": []
}