{
    "identifiers": [
        "edu",
        "duke",
        "globallog",
        "sparklogprocessor",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "java",
        "sql",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "mikera",
        "vectorz",
        "ipBytes",
        "cachedBytes",
        "shuffleBytesRead",
        "shuffleBytesWritten",
        "opBytes",
        "vec",
        "a",
        "b",
        "c",
        "d",
        "e",
        "ipBytes",
        "a",
        "cachedBytes",
        "b",
        "shuffleBytesRead",
        "c",
        "shuffleBytesWritten",
        "d",
        "opBytes",
        "e",
        "vec",
        "of",
        "a",
        "doubleValue",
        "b",
        "doubleValue",
        "c",
        "doubleValue",
        "d",
        "doubleValue",
        "e",
        "doubleValue",
        "Override",
        "o",
        "o",
        "s",
        "o",
        "vec",
        "toNormal",
        "distance",
        "s",
        "vec",
        "toNormal",
        "distance",
        "s",
        "s",
        "vec",
        "toNormal",
        "distance",
        "s",
        "vec",
        "toNormal",
        "Override",
        "hashCode",
        "Override",
        "vec",
        "toString",
        "appId",
        "maxHeap",
        "maxCores",
        "yarnOverhead",
        "numExecs",
        "sparkMemoryFraction",
        "offHeap",
        "offHeapSize",
        "serializer",
        "gcAlgo",
        "newRatio",
        "app",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "appId",
        "app",
        "maxHeap",
        "a",
        "maxCores",
        "b",
        "yarnOverhead",
        "c",
        "numExecs",
        "d",
        "sparkMemoryFraction",
        "e",
        "offHeap",
        "f",
        "offHeapSize",
        "g",
        "serializer",
        "h",
        "gcAlgo",
        "i",
        "newRatio",
        "j",
        "Override",
        "c",
        "c",
        "o",
        "c",
        "appId",
        "equals",
        "o",
        "appId",
        "maxHeap",
        "equals",
        "o",
        "maxHeap",
        "maxCores",
        "equals",
        "o",
        "maxCores",
        "yarnOverhead",
        "equals",
        "o",
        "yarnOverhead",
        "numExecs",
        "equals",
        "o",
        "numExecs",
        "sparkMemoryFraction",
        "equals",
        "o",
        "sparkMemoryFraction",
        "offHeap",
        "equals",
        "o",
        "offHeap",
        "offHeapSize",
        "equals",
        "o",
        "offHeapSize",
        "serializer",
        "equals",
        "o",
        "serializer",
        "gcAlgo",
        "equals",
        "o",
        "gcAlgo",
        "newRatio",
        "equals",
        "o",
        "newRatio",
        "c",
        "c",
        "o",
        "c",
        "maxHeap",
        "equals",
        "o",
        "maxHeap",
        "maxCores",
        "equals",
        "o",
        "maxCores",
        "yarnOverhead",
        "equals",
        "o",
        "yarnOverhead",
        "numExecs",
        "equals",
        "o",
        "numExecs",
        "sparkMemoryFraction",
        "equals",
        "o",
        "sparkMemoryFraction",
        "newRatio",
        "equals",
        "o",
        "newRatio",
        "Override",
        "appId",
        "hashCode",
        "Override",
        "appId",
        "failedExecs",
        "maxStorage",
        "maxExecution",
        "totalTime",
        "maxUsedHeap",
        "minUsageGap",
        "maxOldGenUsed",
        "totalGCTime",
        "totalNumYoungGC",
        "totalNumOldGC",
        "multiples",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "failedExecs",
        "a",
        "maxStorage",
        "b",
        "maxExecution",
        "c",
        "totalTime",
        "d",
        "maxUsedHeap",
        "e",
        "minUsageGap",
        "f",
        "maxOldGenUsed",
        "g",
        "totalGCTime",
        "h",
        "totalNumYoungGC",
        "i",
        "totalNumOldGC",
        "j",
        "multiples",
        "m",
        "failedExecs",
        "m",
        "failedExecs",
        "maxStorage",
        "m",
        "maxStorage",
        "maxExecution",
        "m",
        "maxExecution",
        "totalTime",
        "m",
        "totalTime",
        "maxUsedHeap",
        "m",
        "maxUsedHeap",
        "minUsageGap",
        "m",
        "minUsageGap",
        "maxOldGenUsed",
        "m",
        "maxOldGenUsed",
        "totalGCTime",
        "m",
        "totalGCTime",
        "totalNumYoungGC",
        "m",
        "totalNumYoungGC",
        "totalNumOldGC",
        "m",
        "totalNumOldGC",
        "multiples",
        "m",
        "multiples",
        "failedExecs",
        "multiples",
        "maxStorage",
        "multiples",
        "maxExecution",
        "multiples",
        "totalTime",
        "multiples",
        "maxUsedHeap",
        "multiples",
        "minUsageGap",
        "multiples",
        "maxOldGenUsed",
        "multiples",
        "totalGCTime",
        "multiples",
        "totalNumYoungGC",
        "multiples",
        "totalNumOldGC",
        "multiples",
        "Override",
        "failedExecs",
        "maxStorage",
        "maxExecution",
        "totalTime",
        "maxUsedHeap",
        "minUsageGap",
        "maxOldGenUsed",
        "totalGCTime",
        "totalNumYoungGC",
        "totalNumOldGC",
        "config",
        "metrics",
        "c",
        "m",
        "config",
        "c",
        "metrics",
        "m",
        "config",
        "metrics",
        "Mode",
        "SIMILAR",
        "SINGLE",
        "args",
        "conn",
        "DB_URL",
        "DB_USER",
        "DB_PASSWORD",
        "RELM_TABLE",
        "TEST_RELM_TABLE",
        "maxHeap",
        "yarnOverhead",
        "mode",
        "Mode",
        "SIMILAR",
        "resultsPath",
        "equals",
        "args",
        "equals",
        "args",
        "resultsPath",
        "args",
        "equals",
        "args",
        "mode",
        "Mode",
        "SINGLE",
        "stages",
        "stages",
        "stages",
        "stages",
        "stages",
        "stages",
        "configMap",
        "stageMap",
        "Class",
        "forName",
        "newInstance",
        "conn",
        "DriverManager",
        "getConnection",
        "DB_URL",
        "DB_USER",
        "DB_PASSWORD",
        "stmt",
        "conn",
        "createStatement",
        "sql1",
        "TEST_RELM_TABLE",
        "stmt",
        "executeUpdate",
        "sql1",
        "sql2",
        "TEST_RELM_TABLE",
        "stmt",
        "executeUpdate",
        "sql2",
        "qsql1",
        "RELM_TABLE",
        "isql1",
        "TEST_RELM_TABLE",
        "qstmt1",
        "conn",
        "prepareStatement",
        "qsql1",
        "istmt1",
        "conn",
        "prepareStatement",
        "isql1",
        "conn",
        "setAutoCommit",
        "rs1",
        "qstmt1",
        "executeQuery",
        "mode",
        "equals",
        "Mode",
        "SINGLE",
        "stage",
        "stages",
        "rs1",
        "beforeFirst",
        "rs1",
        "next",
        "candidate",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "stage",
        "equals",
        "candidate",
        "conf",
        "rs1",
        "getString",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getDouble",
        "rs1",
        "getBoolean",
        "rs1",
        "getLong",
        "rs1",
        "getString",
        "rs1",
        "getString",
        "rs1",
        "getLong",
        "met",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "configMap",
        "containsKey",
        "conf",
        "metricsMap",
        "configMap",
        "get",
        "conf",
        "metricsMap",
        "containsKey",
        "stage",
        "metricsMap",
        "get",
        "stage",
        "add",
        "met",
        "metricsMap",
        "put",
        "stage",
        "met",
        "metricsMap",
        "metricsMap",
        "put",
        "stage",
        "met",
        "configMap",
        "put",
        "conf",
        "metricsMap",
        "conf",
        "configMap",
        "keySet",
        "metricsMap",
        "configMap",
        "get",
        "conf",
        "metricsMap",
        "metricsMap",
        "isEmpty",
        "metricsMap",
        "size",
        "stages",
        "length",
        "istmt1",
        "clearParameters",
        "istmt1",
        "setObject",
        "conf",
        "appId",
        "istmt1",
        "setObject",
        "conf",
        "maxHeap",
        "istmt1",
        "setObject",
        "conf",
        "maxCores",
        "istmt1",
        "setObject",
        "conf",
        "yarnOverhead",
        "istmt1",
        "setObject",
        "conf",
        "numExecs",
        "istmt1",
        "setObject",
        "conf",
        "sparkMemoryFraction",
        "istmt1",
        "setObject",
        "conf",
        "offHeap",
        "istmt1",
        "setObject",
        "conf",
        "offHeapSize",
        "istmt1",
        "setObject",
        "conf",
        "serializer",
        "istmt1",
        "setObject",
        "conf",
        "gcAlgo",
        "istmt1",
        "setObject",
        "conf",
        "newRatio",
        "failedExecs",
        "maxStorage",
        "maxExecution",
        "totalTime",
        "maxUsedHeap",
        "minUsageGap",
        "MAX_VALUE",
        "maxOldGenUsed",
        "totalGCTime",
        "totalNumYoungGC",
        "totalNumOldGC",
        "stage",
        "metricsMap",
        "keySet",
        "met",
        "metricsMap",
        "get",
        "stage",
        "avg",
        "failedExecs",
        "met",
        "failedExecs",
        "maxStorage",
        "max",
        "maxStorage",
        "met",
        "maxStorage",
        "maxExecution",
        "max",
        "maxExecution",
        "met",
        "maxExecution",
        "totalTime",
        "met",
        "totalTime",
        "maxUsedHeap",
        "max",
        "maxUsedHeap",
        "met",
        "maxUsedHeap",
        "minUsageGap",
        "min",
        "minUsageGap",
        "met",
        "minUsageGap",
        "maxOldGenUsed",
        "max",
        "maxOldGenUsed",
        "met",
        "maxOldGenUsed",
        "totalGCTime",
        "met",
        "totalGCTime",
        "totalNumYoungGC",
        "met",
        "totalNumYoungGC",
        "totalNumOldGC",
        "met",
        "totalNumOldGC",
        "istmt1",
        "setObject",
        "failedExecs",
        "istmt1",
        "setObject",
        "maxStorage",
        "istmt1",
        "setObject",
        "maxExecution",
        "istmt1",
        "setObject",
        "totalTime",
        "istmt1",
        "setObject",
        "maxUsedHeap",
        "istmt1",
        "setObject",
        "minUsageGap",
        "istmt1",
        "setObject",
        "maxOldGenUsed",
        "istmt1",
        "setObject",
        "totalGCTime",
        "istmt1",
        "setObject",
        "totalNumYoungGC",
        "istmt1",
        "setObject",
        "totalNumOldGC",
        "istmt1",
        "addBatch",
        "istmt1",
        "istmt1",
        "executeBatch",
        "conn",
        "commit",
        "rs1",
        "next",
        "candidate",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "conf",
        "rs1",
        "getString",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getDouble",
        "rs1",
        "getBoolean",
        "rs1",
        "getLong",
        "rs1",
        "getString",
        "rs1",
        "getString",
        "rs1",
        "getLong",
        "confExceptApp",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getDouble",
        "rs1",
        "getBoolean",
        "rs1",
        "getLong",
        "rs1",
        "getString",
        "rs1",
        "getString",
        "rs1",
        "getLong",
        "met",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "rs1",
        "getLong",
        "stageMap",
        "containsKey",
        "candidate",
        "confMap",
        "stageMap",
        "get",
        "candidate",
        "confMap",
        "containsKey",
        "confExceptApp",
        "confList",
        "confMap",
        "get",
        "confExceptApp",
        "confList",
        "add",
        "conf",
        "met",
        "confMap",
        "put",
        "confExceptApp",
        "confList",
        "confList",
        "confList",
        "add",
        "conf",
        "met",
        "confMap",
        "put",
        "confExceptApp",
        "confList",
        "confMap",
        "confList",
        "confList",
        "add",
        "conf",
        "met",
        "confMap",
        "put",
        "confExceptApp",
        "confList",
        "stageMap",
        "put",
        "candidate",
        "confMap",
        "cnt",
        "stage",
        "stageMap",
        "keySet",
        "writer",
        "resultsPath",
        "cnt",
        "writer",
        "write",
        "stage",
        "getProperty",
        "stage",
        "confMap",
        "stageMap",
        "get",
        "stage",
        "conf",
        "confMap",
        "keySet",
        "confList",
        "confMap",
        "get",
        "conf",
        "confMet",
        "confList",
        "writer",
        "write",
        "confMet",
        "getConfig",
        "confMet",
        "getMetrics",
        "getProperty",
        "writer",
        "close",
        "cnt",
        "qstmt1",
        "close",
        "e",
        "istmt1",
        "close",
        "e",
        "e",
        "e",
        "printStackTrace",
        "conn",
        "close",
        "e"
    ],
    "literals": [
        "\"--Distance found: \"",
        "\"\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"jdbc:mysql://localhost/test\"",
        "\"root\"",
        "\"database\"",
        "\"RELM_DATA\"",
        "\"TEST_RELM\"",
        "\"results-similar\"",
        "\"similar\"",
        "\"\"",
        "\"single\"",
        "\"com.mysql.jdbc.Driver\"",
        "\"DROP TABLE IF EXISTS \"",
        "\"CREATE TABLE IF NOT EXISTS \"",
        "\" (appId VARCHAR(255), \"",
        "\"maxHeap BIGINT, maxCores BIGINT, yarnOverhead BIGINT, numExecs BIGINT, \"",
        "\"sparkMemoryFraction DECIMAL(4,2), offHeap BOOLEAN, offHeapSize BIGINT, \"",
        "\"serializer VARCHAR(255), gcAlgo VARCHAR(255), newRatio BIGINT, \"",
        "\"failedExecs BIGINT, maxStorage BIGINT, maxExecution BIGINT, totalTime BIGINT, \"",
        "\"maxUsedHeap BIGINT, minUsageGap BIGINT, maxOldGenUsed BIGINT, \"",
        "\"totalGCTime BIGINT, totalNumYoungGC BIGINT, totalNumOldGC BIGINT, \"",
        "\"PRIMARY KEY(appId))\"",
        "\"SELECT appId as one, ipBytes as two, cachedBytes as three, \"",
        "\"shuffleBytesRead as four, shuffleBytesWritten as five, opBytes as six, \"",
        "\"maxHeap, maxCores, yarnOverhead, numExecs, sparkMemoryFraction, \"",
        "\"offHeap, offHeapSize, serializer, gcAlgo, newRatio, failedExecs, \"",
        "\"maxStorage, maxExecution, totalTime, maxUsedHeap, minUsageGap, \"",
        "\"maxOldGenUsed, totalGCTime, totalNumYoungGC, totalNumOldGC FROM \"",
        "\"INSERT INTO \"",
        "\" values \"",
        "\"(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\"",
        "\"two\"",
        "\"three\"",
        "\"four\"",
        "\"five\"",
        "\"six\"",
        "\"one\"",
        "\"maxHeap\"",
        "\"maxCores\"",
        "\"yarnOverhead\"",
        "\"numExecs\"",
        "\"sparkMemoryFraction\"",
        "\"offHeap\"",
        "\"offHeapSize\"",
        "\"serializer\"",
        "\"gcAlgo\"",
        "\"newRatio\"",
        "\"failedExecs\"",
        "\"maxStorage\"",
        "\"maxExecution\"",
        "\"totalTime\"",
        "\"maxUsedHeap\"",
        "\"minUsageGap\"",
        "\"totalGCTime\"",
        "\"maxOldGenUsed\"",
        "\"totalNumYoungGC\"",
        "\"totalNumOldGC\"",
        "\"--Running \"",
        "\"two\"",
        "\"three\"",
        "\"four\"",
        "\"five\"",
        "\"six\"",
        "\"one\"",
        "\"maxHeap\"",
        "\"maxCores\"",
        "\"yarnOverhead\"",
        "\"numExecs\"",
        "\"sparkMemoryFraction\"",
        "\"offHeap\"",
        "\"offHeapSize\"",
        "\"serializer\"",
        "\"gcAlgo\"",
        "\"newRatio\"",
        "\"\"",
        "\"maxHeap\"",
        "\"maxCores\"",
        "\"yarnOverhead\"",
        "\"numExecs\"",
        "\"sparkMemoryFraction\"",
        "\"offHeap\"",
        "\"offHeapSize\"",
        "\"serializer\"",
        "\"gcAlgo\"",
        "\"newRatio\"",
        "\"failedExecs\"",
        "\"maxStorage\"",
        "\"maxExecution\"",
        "\"totalTime\"",
        "\"maxUsedHeap\"",
        "\"minUsageGap\"",
        "\"totalGCTime\"",
        "\"maxOldGenUsed\"",
        "\"totalNumYoungGC\"",
        "\"totalNumOldGC\"",
        "\"/\"",
        "\".tsv\"",
        "\"line.separator\"",
        "\"*Stats for stage: \"",
        "\"\\t\"",
        "\"line.separator\""
    ],
    "variables": [
        "ipBytes",
        "cachedBytes",
        "shuffleBytesRead",
        "shuffleBytesWritten",
        "opBytes",
        "vec",
        "appId",
        "maxHeap",
        "maxCores",
        "yarnOverhead",
        "numExecs",
        "sparkMemoryFraction",
        "offHeap",
        "offHeapSize",
        "serializer",
        "gcAlgo",
        "newRatio",
        "failedExecs",
        "maxStorage",
        "maxExecution",
        "totalTime",
        "maxUsedHeap",
        "minUsageGap",
        "maxOldGenUsed",
        "totalGCTime",
        "totalNumYoungGC",
        "totalNumOldGC",
        "multiples",
        "config",
        "metrics"
    ],
    "comments": [
        "implementation of stage matching",
        "use vector algebra",
        "Find vector distance",
        "Hack for an experiment, don't use in general",
        "connection to database",
        "Config conf = new Config(\"\", maxHeap, 2L, yarnOverhead, 10, 0.6, false,",
        "maxHeap, \"java\", \"parallel\", 2L);",
        "for single mode",
        "for similar mode",
        "Scan stages in training data and build configMap",
        "find matching rows, store configs along with row ids",
        "parse configMap and write to test table",
        "SIMILAR mode starts",
        "find matching rows, store configs along with row ids",
        "check for existing config",
        "new entry in confMap",
        "new entry in map",
        "print map to csvs",
        "System.out.println(\"**Conf map found: \" + conf);",
        "System.out.println(\"***Metrics for conf \" + confMet.getConfig() + \": \" + confMet.getMetrics());"
    ],
    "docstrings": [
        "if(0.5*ipBytes <= s.ipBytes && 2*ipBytes >= s.ipBytes &&\n      0.5*cachedBytes <= s.cachedBytes && 2*cachedBytes >= s.cachedBytes &&\n      0.5*shuffleBytesRead <= s.shuffleBytesRead && 2*shuffleBytesRead >= s.shuffleBytesRead &&\n      0.5*shuffleBytesWritten <= s.shuffleBytesWritten && 2*shuffleBytesWritten >= s.shuffleBytesWritten &&\n      0.5*opBytes <= s.opBytes && 2*opBytes >= s.opBytes) {\n        return true;\n    }",
        "* Class to combine stats from spark event logs and resource monitors and summarize them\n * Writes output to mysql db\n *"
    ],
    "functions": [
        "Stage",
        "equals",
        "distance",
        "hashCode",
        "toString",
        "Config",
        "equals",
        "relaxedEquals",
        "hashCode",
        "toString",
        "Metrics",
        "Metrics",
        "add",
        "Metrics",
        "avg",
        "toString",
        "ConfigPlusMetrics",
        "Config",
        "getConfig",
        "Metrics",
        "getMetrics",
        "main"
    ],
    "classes": [
        "Stage",
        "Config",
        "Metrics",
        "ConfigPlusMetrics",
        "TestRelM"
    ]
}