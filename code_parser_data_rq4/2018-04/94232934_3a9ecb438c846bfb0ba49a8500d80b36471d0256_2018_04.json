{
    "identifiers": [
        "React",
        "PropTypes",
        "styled",
        "_",
        "Icons",
        "colors",
        "boxShadows",
        "styled",
        "colors",
        "boxShadows",
        "boxShadows",
        "boxShadows",
        "colors",
        "colors",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "styled",
        "Icons",
        "props",
        "props",
        "props",
        "props",
        "React",
        "props",
        "props",
        "_",
        "Icons",
        "Button",
        "isAddIcon",
        "Icon",
        "isAddIcon",
        "FadeInAddIcon",
        "Button",
        "ActionButton",
        "ActionButton",
        "PropTypes",
        "PropTypes",
        "PropTypes",
        "PropTypes",
        "ActionButton"
    ],
    "literals": [
        "'react'",
        "'prop-types'",
        "'styled-components'",
        "'lodash'",
        "'../icons'",
        "'../styles'",
        "position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 40px;\n  height: 40px;\n  margin: 0;\n  padding-top: 2px;\n  border-radius: 50%;\n  border: none;\n  background-color: ${colors.green};\n  cursor: pointer;\n  transition: box-shadow 150ms ease-in-out, background-color 100ms ease-in-out;\n  &:focus {\n    outline: none;\n  }\n  &:active {\n    box-shadow: ${boxShadows.lvl6};\n    &:hover {\n      box-shadow: ${boxShadows.lvl6};\n    }\n  }\n  &:hover {\n    box-shadow: ${boxShadows.lvl2};\n    background-color: ${colors.greenDarker};\n  }\n  &:disabled {\n    opacity: 0.4;\n    box-shadow: none;\n    cursor: default;\n    padding: 0;\n  }\n\n  svg {\n    position: absolute;\n    fill: ${colors.white};\n    transform: ${(props) => {\n      if (props.toggled && props.isAddIcon) {\n        return 'rotate(45deg)';\n      } else if (!props.toggled && props.isAddIcon) {\n        return 'rotate(0deg)';\n      } else if (props.toggled && !props.isAddIcon) {\n        return 'rotate(45deg) scale(0.5)';\n      } else {\n        return 'rotate(0deg) scale(1)';\n      }\n    }};\n    opacity: ${(props) => {\n      if (!props.isAddIcon) {\n        if (props.toggled) {\n          return 0;\n        }\n        return 1;\n      }\n    }};\n    transition: transform 150ms ease-in, opacity 125ms ease-in;\n  }",
        "'rotate(45deg)'",
        "'rotate(0deg)'",
        "'rotate(45deg) scale(0.5)'",
        "'rotate(0deg) scale(1)'",
        "svg& {\n    opacity: ${(props) => {\n      if (props.toggled) {\n        return 1;\n      }\n      return 0;\n    }};\n    transform: ${(props) => {\n      if (props.toggled) {\n        return 'rotate(45deg) scale(1)';\n      } else {\n        return 'rotate(0deg) scale(0.5)';\n      }\n    }};\n  }",
        "'rotate(45deg) scale(1)'",
        "'rotate(0deg) scale(0.5)'",
        "'leading'",
        "'trailing'",
        "'AddIcon'",
        "'AddIcon'"
    ],
    "variables": [
        "Button",
        "FadeInAddIcon",
        "isAddIcon",
        "Icon"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "render"
    ],
    "classes": [
        "ActionButton"
    ]
}