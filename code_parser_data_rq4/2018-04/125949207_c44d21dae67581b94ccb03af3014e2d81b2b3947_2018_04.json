{
    "identifiers": [
        "BinaryTree",
        "Collections",
        "Generic",
        "FizzBuzzTree",
        "args",
        "TreeTestData",
        "Tree",
        "tree",
        "testData",
        "WriteLine",
        "tree",
        "InOrderTraversal",
        "tree",
        "Root",
        "item",
        "WriteLine",
        "item",
        "WriteLine",
        "Clear",
        "Tree",
        "FizzBuzzTree",
        "tree",
        "fbTree",
        "InOrderTraversal",
        "fbTree",
        "Root",
        "item",
        "WriteLine",
        "item",
        "WriteLine",
        "ReadKey",
        "Clear",
        "WriteLine",
        "ReadKey",
        "Node",
        "node",
        "node",
        "Left",
        "FizzBuzzRecursion",
        "node",
        "Left",
        "node",
        "Right",
        "FizzBuzzRecursion",
        "node",
        "Right",
        "Convert",
        "ToInt32",
        "node",
        "Value",
        "nodeValue",
        "nodeValue",
        "node",
        "Value",
        "nodeValue",
        "node",
        "Value",
        "nodeValue",
        "node",
        "Value",
        "Tree",
        "Tree",
        "tree",
        "FizzBuzzRecursion",
        "tree",
        "Root",
        "tree"
    ],
    "literals": [
        "\"In order traversal of source tree:\"",
        "\"\\nIn order traversal of fizz buzzed tree:\"",
        "\"\\nPress any key for next demo...\"",
        "\"Please press any key to exit this demo...\"",
        "\"FizzBuzz\"",
        "\"Fizz\"",
        "\"Buzz\""
    ],
    "variables": [
        "TreeTestData",
        "testData",
        "fbTree",
        "nodeValue"
    ],
    "comments": [
        "Enumerates three test cases of trees. Based on the xUnit project's",
        "test tree data",
        "Helper method needed to fullfill the method signature of the",
        "FizzBuzzTree method per assignment guidelines.",
        "</summary>",
        "<param name=\"node\">The current node to operate on</param>",
        "Check for fizzes or buzzes or fizzbuzzes",
        "Performs in-order traversal of the provided tree of strings that can",
        "be converted to System.Int32, checking the converted values against",
        "FizzBuzz rules.",
        "</summary>",
        "<param name=\"tree\">The source binary tree containing strings that can",
        "be converted to int</param>",
        "<returns>The transformed tree containing strings representing whether",
        "the source nodes are Fizz, Buzz, or FizzBuzz</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Main",
        "FizzBuzzRecursion",
        "FizzBuzzTree"
    ],
    "classes": [
        "Program"
    ]
}