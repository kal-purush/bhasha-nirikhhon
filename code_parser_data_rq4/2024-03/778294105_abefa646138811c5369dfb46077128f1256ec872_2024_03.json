{
    "identifiers": [
        "os",
        "asyncio",
        "bleak",
        "BleakScanner",
        "BleakClient",
        "bleak",
        "backends",
        "characteristic",
        "BleakGATTCharacteristic",
        "bleak",
        "uuids",
        "normalize_uuid_16",
        "threading",
        "normalize_uuid_16",
        "normalize_uuid_16",
        "normalize_uuid_16",
        "normalize_uuid_16",
        "search_request",
        "mstatus",
        "input",
        "n",
        "search_request",
        "n",
        "quit",
        "n",
        "isdigit",
        "liststore",
        "n",
        "liststore",
        "n",
        "mstatus",
        "input",
        "n",
        "n",
        "n",
        "quit",
        "n",
        "n",
        "mstatus",
        "input",
        "n",
        "quit",
        "os",
        "path",
        "exists",
        "n",
        "n",
        "n",
        "upload_request",
        "BleakScanner",
        "discover",
        "return_adv",
        "devices",
        "BleakClient",
        "DevSelected",
        "client",
        "connect",
        "client",
        "read_gatt_char",
        "MANCHAR",
        "manfact",
        "decode",
        "client",
        "disconnect",
        "client",
        "start_notify",
        "NTYCHAR",
        "callback",
        "OpenFile",
        "FileSelected",
        "IsBackground",
        "cmdSendBackground",
        "fsize",
        "cmdSendFace",
        "fsize",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "asyncio",
        "sleep",
        "NotifyData",
        "i",
        "len",
        "flist",
        "client",
        "write_gatt_char",
        "SNDCHAR",
        "flist",
        "i",
        "response",
        "progress",
        "len",
        "flist",
        "progress",
        "asyncio",
        "sleep",
        "IsBackground",
        "cmdBackTransferFinish",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "cmdSetBackTransfer",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "cmdSetFace",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "cmdFaceTransferFinish",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "cmdSetFaceTransfer",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "cmdSetFace",
        "client",
        "write_gatt_char",
        "CTRCHAR",
        "cmd",
        "response",
        "client",
        "disconnect",
        "sender",
        "BleakGATTCharacteristic",
        "data",
        "data",
        "filen",
        "filen",
        "open",
        "filen",
        "fo",
        "read",
        "chunk",
        "data",
        "flist",
        "append",
        "data",
        "fo",
        "seek",
        "len",
        "fo",
        "read",
        "fo",
        "close",
        "fsize",
        "flist",
        "length",
        "fromhex",
        "length",
        "to_bytes",
        "header",
        "length",
        "cmd",
        "fromhex",
        "header",
        "cmd",
        "fromhex",
        "header",
        "cmd",
        "length",
        "fromhex",
        "length",
        "to_bytes",
        "header",
        "length",
        "cmd",
        "fromhex",
        "header",
        "cmd",
        "fromhex",
        "header",
        "cmd",
        "face",
        "face",
        "fromhex",
        "face",
        "to_bytes",
        "header",
        "face",
        "cmd",
        "liststore",
        "clear",
        "asyncio",
        "run",
        "Discover",
        "x",
        "devices",
        "devices",
        "x",
        "split",
        "liststore",
        "append",
        "devlist",
        "devlist",
        "d",
        "i",
        "len",
        "liststore",
        "i",
        "liststore",
        "i",
        "liststore",
        "i",
        "d",
        "asyncio",
        "run",
        "DoConnect",
        "DaFup",
        "dafup",
        "main"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Select device to connect or [s] for new search [q] to Quit): \"",
        "'s'",
        "'q'",
        "\"Need to be a number, s or q\"",
        "\" selected.\"",
        "\"Select what to upload [b] for background [f] to watch face [q] to Quit): \"",
        "'b'",
        "'f'",
        "'q'",
        "\"Need to be b, f or q\"",
        "\"b\"",
        "\"Background\"",
        "\"Watch face\"",
        "\" selected.\"",
        "\"Type the path of file to upload or just [q] to Quit): \"",
        "'q'",
        "\"[ERROR] Error opening the file.\"",
        "\" selected.\"",
        "\"[ERROR] Can't connect to device.\"",
        "\"[ERROR] It doesn't look a MOYOUNG-V2 compatible device.\"",
        "\"utf-8\"",
        "\"MOYOUNG-V2\"",
        "\"[ERROR] It doesn't look a MOYOUNG-V2 compatible device.\"",
        "\"Transferring...\"",
        "b\"\\xfe\\xea\\x20\\x09\\x74\\xff\"",
        "\"%\"",
        "\"\\nTransfer complete.\"",
        "\"\"",
        "\"\"",
        "\"rb\"",
        "\"[ERROR] Error opening the file.\"",
        "b''",
        "\"feea200974\"",
        "\"feea20097400000000\"",
        "\"feea200ab41130040000\"",
        "\"feea20096e\"",
        "\"feea20096e00000000\"",
        "\"feea200529\"",
        "\"feea200619\"",
        "\"Searching for devices, please wait...\"",
        "': '",
        "'----------------------------------------'",
        "\"[\"",
        "\"] \"",
        "\" - \"",
        "\"\\nScan complete, \"",
        "\" devices found\"",
        "\"Trying to connect to device, please wait...\"",
        "\"__main__\""
    ],
    "variables": [
        "CTRCHAR",
        "SNDCHAR",
        "NTYCHAR",
        "MANCHAR",
        "DevSelected",
        "FileSelected",
        "NotifyData",
        "liststore",
        "IsFace",
        "IsBackground",
        "mstatus",
        "n",
        "mstatus",
        "DevSelected",
        "IsBackground",
        "IsFace",
        "mstatus",
        "n",
        "IsBackground",
        "mstatus",
        "IsFace",
        "mstatus",
        "n",
        "n",
        "mstatus",
        "n",
        "FileSelected",
        "mstatus",
        "devices",
        "client",
        "manfact",
        "fsize",
        "flist",
        "cmd",
        "cmd",
        "progress",
        "cmd",
        "cmd",
        "cmd",
        "cmd",
        "cmd",
        "cmd",
        "NotifyData",
        "fo",
        "chunk",
        "flist",
        "data",
        "fsize",
        "header",
        "length",
        "cmd",
        "header",
        "cmd",
        "header",
        "cmd",
        "header",
        "length",
        "cmd",
        "header",
        "cmd",
        "header",
        "cmd",
        "header",
        "face",
        "cmd",
        "d",
        "devices",
        "devlist",
        "dafup"
    ],
    "comments": [
        "!/usr/bin/python",
        "Write (no response)",
        "Send data",
        "Notify",
        "Manufacturer name",
        "Select device menu",
        "Select file type menu",
        "Select file menu",
        "Scanning for 5 seconds...",
        "Main connection",
        "Check if device has a moyoung manufacture characteristic",
        "Check if device manufacture characteristic reads as a moyoung",
        "Start notify system, self.callback() handle it",
        "Open the file to send",
        "Background or watch face",
        "Send start transfer command",
        "Start transfer, while not get \"feea200974ff\"",
        "print (str(self.NotifyData[0:6])) #Debug",
        "self.progress.set_fraction(self.progress.get_fraction() + (1/len(flist)))",
        "It will break after transfer complete. Need to find out how the",
        "checksum is made to then do a proper checksum comparison.",
        "Send finish command",
        "Background or watch face",
        "Open and divide the file in chunks",
        "List the devices"
    ],
    "docstrings": [
        "'''\n    DaFup watch face and background upload tool for Mo Young / Da Fit\n    binary files.\n\n    Author: Vic <vicpt[at]protonmail.com>\n    Copyright (C) 2024 Vic\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n'''",
        "''' Main characteristic uuids '''",
        "''' Main Window '''",
        "'''Main method'''",
        "''' Discover bluetooth devices '''",
        "''' Connect to device '''",
        "''' Function that handles service characteristic notification '''",
        "''' Open a file for send '''",
        "''' Face transfer cmd '''",
        "''' Face transfer finish signal cmd '''",
        "''' Set face transfer cmd (unknown yet) '''",
        "''' Background transfer cmd '''",
        "''' Background transfer finish signal cmd '''",
        "''' Set background transfer cmd (unknown yet) '''",
        "''' Set watch face '''",
        "'''On search request'''",
        "'''On upload request'''"
    ],
    "functions": [
        "main",
        "Discover",
        "DoConnect",
        "callback",
        "OpenFile",
        "cmdSendFace",
        "cmdFaceTransferFinish",
        "cmdSetFaceTransfer",
        "cmdSendBackground",
        "cmdBackTransferFinish",
        "cmdSetBackTransfer",
        "cmdSetFace",
        "search_request",
        "upload_request"
    ],
    "classes": [
        "DaFup"
    ]
}