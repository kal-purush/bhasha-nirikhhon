{
    "identifiers": [
        "useEffect",
        "useRef",
        "useState",
        "blocker",
        "blockers",
        "blocker",
        "blocker",
        "e",
        "findBlocker",
        "e",
        "e",
        "condition",
        "useState",
        "useRef",
        "setIsBlocking",
        "useEffect",
        "condition",
        "isBlocking",
        "blocker",
        "blockers",
        "current",
        "blockers",
        "addEventListener",
        "handleBeforeUnload",
        "blockers",
        "current",
        "blockers",
        "removeEventListener",
        "handleBeforeUnload",
        "condition",
        "isBlocking",
        "isBlocking",
        "blocker",
        "current",
        "current",
        "setIsBlocking",
        "setIsBlocking"
    ],
    "literals": [
        "\"react\"",
        "\"\"",
        "\"beforeunload\"",
        "\"beforeunload\""
    ],
    "variables": [
        "blockers",
        "isBlocking",
        "setIsBlocking",
        "blocker",
        "current",
        "current"
    ],
    "comments": [
        "eslint-disable-next-line deprecation/deprecation"
    ],
    "docstrings": [
        "* Add a navigation blocker.\n *\n * When a navigation blocker is active, the hook will return an object with\n * `isBlocking` set to `true`. The `leave` method will allow the navigation to\n * proceed, while the `stay` method will keep the navigation from happening.\n *\n * @param condition Whether to block navigation"
    ],
    "functions": [
        "findBlocker",
        "handleBeforeUnload",
        "useNavigationBlocker",
        "notify",
        "leave",
        "stay"
    ],
    "classes": []
}