{
    "identifiers": [
        "km",
        "cd",
        "backend",
        "auth",
        "km",
        "cd",
        "backend",
        "error",
        "CustomException",
        "km",
        "cd",
        "backend",
        "jwt",
        "JwtTokenProvider",
        "km",
        "cd",
        "backend",
        "jwt",
        "JwtTokenResponse",
        "km",
        "cd",
        "backend",
        "user",
        "User",
        "km",
        "cd",
        "backend",
        "user",
        "UserRepository",
        "km",
        "cd",
        "backend",
        "user",
        "dto",
        "UserLogin",
        "km",
        "cd",
        "backend",
        "user",
        "dto",
        "UserRegister",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayName",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "extension",
        "ExtendWith",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "Spy",
        "org",
        "mockito",
        "junit",
        "jupiter",
        "MockitoExtension",
        "org",
        "springframework",
        "security",
        "crypto",
        "bcrypt",
        "BCryptPasswordEncoder",
        "java",
        "util",
        "Optional",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "mockito",
        "Mockito",
        "ExtendWith",
        "InjectMocks",
        "authService",
        "Mock",
        "userRepository",
        "Mock",
        "jwtTokenProvider",
        "Spy",
        "passwordEncoder",
        "Test",
        "DisplayName",
        "userRegister",
        "UserRegister",
        "builder",
        "email",
        "password",
        "name",
        "build",
        "fakeUser",
        "User",
        "builder",
        "email",
        "userRegister",
        "getEmail",
        "password",
        "passwordEncoder",
        "encode",
        "userRegister",
        "getPassword",
        "name",
        "userRegister",
        "getName",
        "role",
        "build",
        "when",
        "userRepository",
        "findByEmail",
        "eq",
        "userRegister",
        "getEmail",
        "thenReturn",
        "Optional",
        "empty",
        "when",
        "userRepository",
        "save",
        "thenReturn",
        "fakeUser",
        "user",
        "authService",
        "register",
        "userRegister",
        "assertEquals",
        "user",
        "getEmail",
        "userRegister",
        "getEmail",
        "assertEquals",
        "user",
        "getName",
        "userRegister",
        "getName",
        "assertTrue",
        "passwordEncoder",
        "matches",
        "userRegister",
        "getPassword",
        "user",
        "getPassword",
        "Test",
        "DisplayName",
        "userRegister",
        "UserRegister",
        "builder",
        "email",
        "password",
        "name",
        "build",
        "fakeUser",
        "User",
        "builder",
        "email",
        "userRegister",
        "getEmail",
        "build",
        "doReturn",
        "Optional",
        "of",
        "fakeUser",
        "when",
        "userRepository",
        "findByEmail",
        "anyString",
        "assertThrows",
        "authService",
        "register",
        "userRegister",
        "Test",
        "DisplayName",
        "userLogin",
        "UserLogin",
        "builder",
        "email",
        "password",
        "build",
        "fakeUser",
        "User",
        "builder",
        "email",
        "userLogin",
        "getEmail",
        "password",
        "passwordEncoder",
        "encode",
        "userLogin",
        "getPassword",
        "name",
        "role",
        "build",
        "expectedAccessToken",
        "when",
        "userRepository",
        "findByEmail",
        "anyString",
        "thenReturn",
        "Optional",
        "of",
        "fakeUser",
        "when",
        "jwtTokenProvider",
        "generateAccessToken",
        "eq",
        "fakeUser",
        "getEmail",
        "eq",
        "fakeUser",
        "getName",
        "anyCollection",
        "thenReturn",
        "expectedAccessToken",
        "tokenResponse",
        "authService",
        "login",
        "userLogin",
        "assertNotNull",
        "tokenResponse",
        "assertEquals",
        "tokenResponse",
        "getAccessToken",
        "expectedAccessToken",
        "Test",
        "DisplayName",
        "userLogin",
        "UserLogin",
        "builder",
        "email",
        "password",
        "build",
        "when",
        "userRepository",
        "findByEmail",
        "eq",
        "userLogin",
        "getEmail",
        "thenReturn",
        "Optional",
        "empty",
        "assertThrows",
        "authService",
        "login",
        "userLogin",
        "Test",
        "DisplayName",
        "userLogin",
        "UserLogin",
        "builder",
        "email",
        "password",
        "build",
        "fakeUser",
        "User",
        "builder",
        "email",
        "userLogin",
        "getEmail",
        "password",
        "name",
        "role",
        "build",
        "when",
        "userRepository",
        "findByEmail",
        "eq",
        "userLogin",
        "getEmail",
        "thenReturn",
        "Optional",
        "of",
        "fakeUser",
        "assertThrows",
        "authService",
        "login",
        "userLogin"
    ],
    "literals": [
        "\"일반_회원가입-성공\"",
        "\"example@km.cd\"",
        "\"test12#$\"",
        "\"홍길동\"",
        "\"ROLE_USER\"",
        "\"일반_회원가입-실패-중복이메일\"",
        "\"example@km.cd\"",
        "\"test12#$\"",
        "\"홍길동\"",
        "\"일반_로그인-성공\"",
        "\"example@km.cd\"",
        "\"test12#$\"",
        "\"홍길동\"",
        "\"ROLE_USER\"",
        "\"expected_access_token\"",
        "\"일반_로그인-실패-유저_없음\"",
        "\"example@km.cd\"",
        "\"test12#$\"",
        "\"일반_로그인-실패-비밀번호_불일치\"",
        "\"example@km.cd\"",
        "\"test12#$\"",
        "\"wrong_password\"",
        "\"홍길동\"",
        "\"ROLE_USER\""
    ],
    "variables": [
        "authService",
        "userRepository",
        "jwtTokenProvider",
        "passwordEncoder"
    ],
    "comments": [
        "사용자 권한 설정",
        "사용자 권한 설정",
        "사용자 권한 설정"
    ],
    "docstrings": [],
    "functions": [
        "register_success",
        "register_failed_duplicated_email",
        "login_success",
        "login_failed_user_not_found",
        "login_failed_invalid_password"
    ],
    "classes": [
        "AuthServiceTest"
    ]
}