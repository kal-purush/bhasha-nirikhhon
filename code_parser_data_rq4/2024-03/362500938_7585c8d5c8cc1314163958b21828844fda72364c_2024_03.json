{
    "identifiers": [
        "typing",
        "TYPE_CHECKING",
        "Optional",
        "Union",
        "argilla",
        "client",
        "feedback",
        "schemas",
        "enums",
        "QuestionTypes",
        "argilla",
        "pydantic_v1",
        "BaseModel",
        "StrictInt",
        "StrictStr",
        "confloat",
        "conint",
        "constr",
        "parse_obj_as",
        "root_validator",
        "TYPE_CHECKING",
        "argilla",
        "client",
        "feedback",
        "schemas",
        "questions",
        "QuestionSchema",
        "BaseModel",
        "StrictStr",
        "Optional",
        "conint",
        "ge",
        "BaseModel",
        "constr",
        "min_length",
        "conint",
        "ge",
        "conint",
        "ge",
        "Optional",
        "confloat",
        "ge",
        "le",
        "root_validator",
        "cls",
        "values",
        "values",
        "values",
        "ValueError",
        "values",
        "Union",
        "StrictStr",
        "StrictInt",
        "RankingValueSchema",
        "SpanValueSchema",
        "QuestionTypes",
        "text",
        "QuestionTypes",
        "label_selection",
        "QuestionTypes",
        "multi_label_selection",
        "QuestionTypes",
        "ranking",
        "RankingValueSchema",
        "QuestionTypes",
        "rating",
        "QuestionTypes",
        "span",
        "SpanValueSchema",
        "question",
        "value",
        "ResponseValue",
        "ResponseValue",
        "question",
        "RESPONSE_VALUE_FOR_QUESTION_TYPE",
        "question_type",
        "isinstance",
        "value",
        "parse_obj_as",
        "response_type",
        "value",
        "isinstance",
        "value",
        "response_type",
        "ValueError",
        "value",
        "question_type",
        "response_type",
        "value",
        "value",
        "ResponseValue",
        "ResponseValue",
        "isinstance",
        "value",
        "all",
        "isinstance",
        "v",
        "v",
        "value",
        "value",
        "v",
        "value",
        "v",
        "v",
        "new_value",
        "append",
        "SpanValueSchema",
        "v",
        "v",
        "new_value",
        "append",
        "RankingValueSchema",
        "v",
        "ValueError",
        "value",
        "new_value"
    ],
    "literals": [
        "\"end\"",
        "\"start\"",
        "\"The end of the span must be greater than the start.\"",
        "\"QuestionSchema\"",
        "f\"Value {value} is not valid for question type {question_type}. Expected {response_type}.\"",
        "\"start\"",
        "\"end\"",
        "\"value\"",
        "\"Invalid value\""
    ],
    "variables": [
        "value",
        "rank",
        "label",
        "start",
        "end",
        "score",
        "ResponseValue",
        "RESPONSE_VALUE_FOR_QUESTION_TYPE",
        "question_type",
        "response_type",
        "new_value"
    ],
    "comments": [
        "Copyright 2021-present, the Recognai S.L. team.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "docstrings": [
        "\"\"\"Schema for the `RankingQuestion` response value for a `RankingQuestion`. Note that\n    we may have more than one record in the same rank.\n\n    Args:\n        value: The value of the record.\n        rank: The rank of the record.\n    \"\"\"",
        "\"\"\"Schema for the `SpanQuestion` response value for a `SpanQuestion`.\n\n    Args:\n        label: The label value of the span.\n        start: The start of the span.\n        end: The end of the span.\n        score: The score of the span.\n    \"\"\"",
        "\"\"\"Normalize the response value.\"\"\""
    ],
    "functions": [
        "check_span",
        "parse_value_response_for_question",
        "normalize_response_value"
    ],
    "classes": [
        "RankingValueSchema",
        "SpanValueSchema"
    ]
}