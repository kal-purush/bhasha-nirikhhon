{
    "identifiers": [
        "org",
        "apache",
        "maven",
        "plugins",
        "gpg",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "OutputStream",
        "java",
        "net",
        "SocketException",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "time",
        "ZoneId",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "apache",
        "maven",
        "plugin",
        "MojoExecutionException",
        "org",
        "apache",
        "maven",
        "plugin",
        "MojoFailureException",
        "org",
        "bouncycastle",
        "bcpg",
        "ArmoredOutputStream",
        "org",
        "bouncycastle",
        "bcpg",
        "BCPGOutputStream",
        "org",
        "bouncycastle",
        "bcpg",
        "HashAlgorithmTags",
        "org",
        "bouncycastle",
        "bcpg",
        "SymmetricKeyAlgorithmTags",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPException",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPPrivateKey",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSecretKey",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSecretKeyRing",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSecretKeyRingCollection",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSignature",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSignatureGenerator",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSignatureSubpacketGenerator",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPSignatureSubpacketVector",
        "org",
        "bouncycastle",
        "openpgp",
        "PGPUtil",
        "org",
        "bouncycastle",
        "openpgp",
        "bc",
        "BcKeyFingerprintCalculator",
        "org",
        "bouncycastle",
        "openpgp",
        "bc",
        "BcPBESecretKeyDecryptorBuilder",
        "org",
        "bouncycastle",
        "openpgp",
        "bc",
        "BcPGPContentSignerBuilder",
        "org",
        "bouncycastle",
        "openpgp",
        "bc",
        "BcPGPDigestCalculatorProvider",
        "org",
        "bouncycastle",
        "util",
        "encoders",
        "Hex",
        "org",
        "codehaus",
        "plexus",
        "util",
        "io",
        "CachingOutputStream",
        "org",
        "eclipse",
        "aether",
        "RepositorySystemSession",
        "org",
        "newsclub",
        "net",
        "unix",
        "AFUNIXSocket",
        "org",
        "newsclub",
        "net",
        "unix",
        "AFUNIXSocketAddress",
        "SuppressWarnings",
        "NAME",
        "Loader",
        "session",
        "session",
        "session",
        "keyId",
        "Override",
        "Override",
        "session",
        "keyMaterial",
        "session",
        "getConfigProperties",
        "get",
        "keyEnvName",
        "keyMaterial",
        "keyMaterial",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "Override",
        "session",
        "keyFingerprint",
        "session",
        "getConfigProperties",
        "get",
        "keyFingerprintEnvName",
        "keyFingerprint",
        "keyFingerprint",
        "trim",
        "length",
        "Hex",
        "decode",
        "keyFingerprint",
        "MAX_SIZE",
        "Override",
        "Override",
        "session",
        "keyPath",
        "Paths",
        "get",
        "keyFilePath",
        "keyPath",
        "isAbsolute",
        "keyPath",
        "session",
        "getLocalRepository",
        "getBasedir",
        "toPath",
        "resolve",
        "keyPath",
        "Files",
        "isRegularFile",
        "keyPath",
        "Files",
        "size",
        "keyPath",
        "MAX_SIZE",
        "Files",
        "readAllBytes",
        "keyPath",
        "keyPath",
        "Override",
        "session",
        "keyFingerprint",
        "keyFingerprint",
        "trim",
        "length",
        "Hex",
        "decode",
        "keyFingerprint",
        "Override",
        "Override",
        "session",
        "keyId",
        "socketLocations",
        "Arrays",
        "stream",
        "agentSocketLocations",
        "split",
        "s",
        "s",
        "s",
        "isEmpty",
        "collect",
        "Collectors",
        "toList",
        "socketLocation",
        "socketLocations",
        "load",
        "keyId",
        "Paths",
        "get",
        "getProperty",
        "socketLocation",
        "toCharArray",
        "e",
        "keyId",
        "socketPath",
        "sock",
        "AFUNIXSocket",
        "newInstance",
        "sock",
        "connect",
        "AFUNIXSocketAddress",
        "of",
        "socketPath",
        "sock",
        "getInputStream",
        "os",
        "sock",
        "getOutputStream",
        "expectOK",
        "display",
        "getenv",
        "display",
        "os",
        "write",
        "display",
        "getBytes",
        "os",
        "flush",
        "expectOK",
        "term",
        "getenv",
        "term",
        "os",
        "write",
        "term",
        "getBytes",
        "os",
        "flush",
        "expectOK",
        "hexKeyId",
        "toHexString",
        "keyId",
        "instruction",
        "hexKeyId",
        "hexKeyId",
        "os",
        "write",
        "instruction",
        "getBytes",
        "os",
        "flush",
        "Hex",
        "decode",
        "expectOK",
        "trim",
        "response",
        "readLine",
        "response",
        "startsWith",
        "response",
        "response",
        "substring",
        "min",
        "response",
        "length",
        "session",
        "keyEnvName",
        "keyFingerprintEnvName",
        "agentSocketLocations",
        "keyFilePath",
        "keyFingerprint",
        "secretKey",
        "privateKey",
        "hashSubPackets",
        "session",
        "keyEnvName",
        "keyFingerprintEnvName",
        "agentSocketLocations",
        "keyFilePath",
        "keyFingerprint",
        "session",
        "session",
        "keyEnvName",
        "keyEnvName",
        "keyFingerprintEnvName",
        "keyFingerprintEnvName",
        "agentSocketLocations",
        "agentSocketLocations",
        "keyFilePath",
        "keyFilePath",
        "keyFingerprint",
        "keyFingerprint",
        "Override",
        "NAME",
        "Override",
        "loaders",
        "Stream",
        "of",
        "l",
        "isInteractive",
        "l",
        "isInteractive",
        "collect",
        "Collectors",
        "toList",
        "keyRingMaterial",
        "loader",
        "loaders",
        "keyRingMaterial",
        "loader",
        "loadKeyRingMaterial",
        "session",
        "keyRingMaterial",
        "keyRingMaterial",
        "fingerprint",
        "loader",
        "loaders",
        "fingerprint",
        "loader",
        "loadKeyFingerprint",
        "session",
        "fingerprint",
        "pgpSecretKeyRingCollection",
        "PGPUtil",
        "getDecoderStream",
        "keyRingMaterial",
        "secretKey",
        "ring",
        "pgpSecretKeyRingCollection",
        "key",
        "ring",
        "key",
        "isPrivateKeyEmpty",
        "fingerprint",
        "Arrays",
        "equals",
        "fingerprint",
        "key",
        "getFingerprint",
        "secretKey",
        "key",
        "secretKey",
        "secretKey",
        "isPrivateKeyEmpty",
        "validSeconds",
        "secretKey",
        "getPublicKey",
        "getValidSeconds",
        "validSeconds",
        "expireDateTime",
        "secretKey",
        "getPublicKey",
        "getCreationTime",
        "toInstant",
        "atZone",
        "ZoneId",
        "systemDefault",
        "toLocalDateTime",
        "plusSeconds",
        "validSeconds",
        "LocalDateTime",
        "now",
        "isAfter",
        "expireDateTime",
        "expireDateTime",
        "keyPassword",
        "passphrase",
        "passphrase",
        "toCharArray",
        "keyPassNeeded",
        "secretKey",
        "getKeyEncryptionAlgorithm",
        "SymmetricKeyAlgorithmTags",
        "NULL",
        "keyPassNeeded",
        "keyPassword",
        "loader",
        "loaders",
        "keyPassword",
        "loader",
        "loadPassword",
        "session",
        "secretKey",
        "getKeyID",
        "keyPassword",
        "keyPassword",
        "secretKey",
        "secretKey",
        "privateKey",
        "secretKey",
        "extractPrivateKey",
        "build",
        "keyPassword",
        "subPacketGenerator",
        "subPacketGenerator",
        "setIssuerFingerprint",
        "secretKey",
        "hashSubPackets",
        "subPacketGenerator",
        "generate",
        "e",
        "e",
        "Override",
        "file",
        "signature",
        "Files",
        "newInputStream",
        "file",
        "toPath",
        "signature",
        "toPath",
        "sGen",
        "secretKey",
        "getPublicKey",
        "getAlgorithm",
        "HashAlgorithmTags",
        "SHA512",
        "sGen",
        "init",
        "PGPSignature",
        "BINARY_DOCUMENT",
        "privateKey",
        "sGen",
        "setHashedSubpackets",
        "hashSubPackets",
        "len",
        "buffer",
        "len",
        "read",
        "buffer",
        "sGen",
        "update",
        "buffer",
        "len",
        "bcpgOutputStream",
        "sGen",
        "generate",
        "encode",
        "bcpgOutputStream",
        "e",
        "e"
    ],
    "literals": [
        "\"checkstyle:magicnumber\"",
        "\"bc\"",
        "\"env.\"",
        "\"env.\"",
        "\"Key fingerprint configuration is wrong (hex encoded, 40 characters)\"",
        "\"Refusing to load key \"",
        "\"; is larger than 5KB\"",
        "\"Key fingerprint configuration is wrong (hex encoded, 40 characters)\"",
        "\",\"",
        "\"user.home\"",
        "\"DISPLAY\"",
        "\"OPTION display=\"",
        "\"\\n\"",
        "\"TERM\"",
        "\"OPTION ttytype=\"",
        "\"\\n\"",
        "\"GET_PASSPHRASE \"",
        "\" \"",
        "\"Passphrase+incorrect\"",
        "\" GnuPG+Key+Passphrase Enter+passphrase+for+encrypted+GnuPG+key+\"",
        "\"+to+use+it+for+signing+Maven+Artifacts\\n\"",
        "\"OK\"",
        "\"Expected OK but got this instead: \"",
        "\"Key ring material not found\"",
        "\"Secret key not found\"",
        "\"Private key not found in Secret key\"",
        "\"Secret key expired at: \"",
        "\"Secret key is encrypted but no passphrase provided\""
    ],
    "variables": [
        "session",
        "keyEnvName",
        "keyFingerprintEnvName",
        "agentSocketLocations",
        "keyFilePath",
        "keyFingerprint",
        "secretKey",
        "privateKey",
        "hashSubPackets",
        "len"
    ],
    "comments": [
        "try next location",
        "https://unix.stackexchange.com/questions/71135/how-can-i-find-out-what-keys-gpg-agent-has-cached-like-how-ssh-add-l-shows-yo"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* A signer implementation that uses pure Java Bouncy Castle implementation to sign.",
        "* Returns {@code true} if this loader requires user interactivity.",
        "* Returns the key ring material, or {@code null}.",
        "* Returns the key fingerprint, or {@code null}.",
        "* Returns the key password, or {@code null}.",
        "* Maximum key size, see <a href=\"https://wiki.gnupg.org/LargeKeys\">Large Keys</a>."
    ],
    "functions": [
        "isInteractive",
        "loadKeyRingMaterial",
        "loadKeyFingerprint",
        "loadPassword",
        "isInteractive",
        "loadKeyRingMaterial",
        "loadKeyFingerprint",
        "isInteractive",
        "loadKeyRingMaterial",
        "loadKeyFingerprint",
        "isInteractive",
        "loadPassword",
        "load",
        "expectOK",
        "BcSigner",
        "signerName",
        "prepare",
        "generateSignatureForFile"
    ],
    "classes": [
        "BcSigner",
        "GpgEnvLoader",
        "GpgConfLoader",
        "GpgAgentPasswordLoader"
    ]
}