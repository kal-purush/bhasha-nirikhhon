{
    "identifiers": [
        "CryptoJS",
        "cheerio",
        "urlJoin",
        "getMubans",
        "gbkTool",
        "pdfh",
        "pdfa",
        "pd",
        "local_get",
        "local_set",
        "local_delete",
        "req",
        "init_test",
        "VERSION",
        "RKEY",
        "rule",
        "pre",
        "rule",
        "rule",
        "rule",
        "rule",
        "code",
        "code",
        "code",
        "code",
        "eval",
        "code",
        "e",
        "e",
        "pdfl",
        "vercode",
        "MY_URL",
        "arguments",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "key",
        "source",
        "source",
        "key",
        "target",
        "key",
        "source",
        "key",
        "target",
        "search",
        "start",
        "start",
        "start",
        "start",
        "search",
        "search",
        "start",
        "searchElement",
        "fromIndex",
        "o",
        "len",
        "fromIndex",
        "n",
        "n",
        "len",
        "n",
        "k",
        "len",
        "o",
        "k",
        "searchElement",
        "k",
        "prefix",
        "prefix",
        "prefix",
        "suffix",
        "suffix",
        "suffix",
        "emoji",
        "emoji",
        "emoji",
        "i",
        "i",
        "i",
        "emoji",
        "i",
        "rstrip",
        "chars",
        "chars",
        "regex",
        "是否正版",
        "vipUrl",
        "flag",
        "vipUrl",
        "urlDeal",
        "vipUrl",
        "vipUrl",
        "是否正版",
        "vipUrl",
        "vipUrl",
        "vipUrl",
        "vipUrl",
        "vipUrl",
        "vipUrl",
        "d",
        "d",
        "VODS",
        "d",
        "it",
        "it",
        "it",
        "it",
        "it",
        "it",
        "it",
        "it",
        "keys",
        "obj",
        "it",
        "keys",
        "obj",
        "it",
        "keys",
        "obj",
        "it",
        "keys",
        "obj",
        "it",
        "keys",
        "obj",
        "it",
        "keys",
        "obj",
        "it",
        "VODS",
        "obj",
        "VODS",
        "setResult2",
        "res",
        "VODS",
        "res",
        "VODS",
        "setHomeResult",
        "res",
        "res",
        "res",
        "setResult",
        "res",
        "rc",
        "js",
        "js",
        "CryptoJS",
        "CryptoJS",
        "word",
        "word",
        "CryptoJS",
        "word",
        "CryptoJS",
        "CryptoJS",
        "word",
        "a",
        "t",
        "CryptoJS",
        "CryptoJS",
        "CryptoJS",
        "word",
        "CryptoJS",
        "word",
        "a",
        "t",
        "CryptoJS",
        "CryptoJS",
        "Encrypted",
        "urlencode",
        "encodeURIComponent",
        "base64Encode",
        "text",
        "CryptoJS",
        "CryptoJS",
        "text",
        "base64Decode",
        "text",
        "CryptoJS",
        "CryptoJS",
        "text",
        "md5",
        "text",
        "CryptoJS",
        "text",
        "encodeStr",
        "input",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "gbkTool",
        "input",
        "strTool",
        "input",
        "input",
        "decodeStr",
        "input",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "gbkTool",
        "input",
        "strTool",
        "input",
        "input",
        "getCryptoJS",
        "forceOrder",
        "lists",
        "key",
        "option",
        "lists",
        "lists",
        "start",
        "start",
        "end",
        "lists",
        "lists",
        "start",
        "lists",
        "end",
        "key",
        "first",
        "first",
        "key",
        "second",
        "second",
        "key",
        "e",
        "option",
        "option",
        "first",
        "option",
        "first",
        "second",
        "option",
        "second",
        "e",
        "first",
        "second",
        "first",
        "second",
        "first",
        "second",
        "num1",
        "num2",
        "lists",
        "lists",
        "globalThis",
        "urlencode",
        "globalThis",
        "urlencode",
        "urljoin",
        "fromPath",
        "nowPath",
        "fromPath",
        "fromPath",
        "nowPath",
        "nowPath",
        "urlJoin",
        "fromPath",
        "nowPath",
        "pdfh",
        "pdfa",
        "pd",
        "pdfh2",
        "html",
        "parse",
        "html",
        "html2",
        "html",
        "html",
        "e",
        "e",
        "defaultParser",
        "html2",
        "parse",
        "parse",
        "parse",
        "parse",
        "option",
        "result",
        "result",
        "result",
        "result",
        "result",
        "e",
        "result",
        "pdfa2",
        "html",
        "parse",
        "html",
        "html2",
        "html",
        "html",
        "e",
        "e",
        "defaultParser",
        "html2",
        "parse",
        "pd2",
        "html",
        "parse",
        "uri",
        "pdfh2",
        "html",
        "parse",
        "uri",
        "uri",
        "uri",
        "DOM_CHECK_ATTR",
        "parse",
        "SPECIAL_URL",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "urljoin",
        "MY_URL",
        "ret",
        "ret",
        "pdfh2",
        "pdfa2",
        "pd2",
        "html",
        "parse",
        "parse",
        "parse",
        "html",
        "html",
        "html",
        "parse",
        "parse",
        "parse",
        "parse",
        "parse",
        "parse",
        "parse",
        "ps",
        "parse",
        "cheerio",
        "ps",
        "html",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "html",
        "parse",
        "parse",
        "parse",
        "html",
        "html",
        "html",
        "parse",
        "parse",
        "parse",
        "parse",
        "parse",
        "cheerio",
        "parse",
        "html",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "html",
        "parse",
        "parseTags",
        "html",
        "parse",
        "ret",
        "urljoin",
        "MY_URL",
        "ret",
        "ret",
        "html",
        "parse",
        "html",
        "parse",
        "parse",
        "parse",
        "parse",
        "defaultParser",
        "html",
        "parse",
        "result",
        "html",
        "parse",
        "html",
        "parse",
        "parse",
        "parse",
        "parse",
        "defaultParser",
        "html",
        "parse",
        "parse",
        "result",
        "result",
        "html",
        "parse",
        "base_url",
        "html",
        "parse",
        "parse",
        "parse",
        "parse",
        "base_url",
        "base_url",
        "MY_URL",
        "defaultParser",
        "html",
        "parse",
        "base_url",
        "p0",
        "p0",
        "p0",
        "p0",
        "parseTags",
        "parseTags",
        "dealJson",
        "html",
        "html",
        "html",
        "html",
        "html",
        "html",
        "html",
        "html",
        "html",
        "e",
        "html",
        "html",
        "e",
        "html",
        "OCR_API",
        "img",
        "request",
        "OCR_API",
        "img",
        "PC_UA",
        "code",
        "html",
        "e",
        "e",
        "code",
        "verifyCode",
        "url",
        "getHome",
        "url",
        "cnt",
        "OCR_RETRY",
        "host",
        "yzm_url",
        "request",
        "yzm_url",
        "hhtml",
        "cookie",
        "json",
        "it",
        "it",
        "cookie",
        "setCk",
        "json",
        "setCk",
        "cookie",
        "json",
        "OcrApi",
        "img",
        "cnt",
        "code",
        "host",
        "code",
        "submit_url",
        "request",
        "submit_url",
        "cookie",
        "MOBILE_UA",
        "html",
        "html",
        "html",
        "cnt",
        "cookie",
        "html",
        "cnt",
        "OCR_RETRY",
        "cookie",
        "e",
        "cnt",
        "e",
        "cnt",
        "OCR_RETRY",
        "cookie",
        "cnt",
        "cookie",
        "setItem",
        "k",
        "v",
        "local_set",
        "RKEY",
        "k",
        "v",
        "RKEY",
        "k",
        "v",
        "getItem",
        "k",
        "v",
        "local_get",
        "RKEY",
        "k",
        "v",
        "clearItem",
        "k",
        "local_delete",
        "RKEY",
        "k",
        "getHome",
        "url",
        "url",
        "url",
        "url",
        "tmp",
        "tmp",
        "url",
        "decodeURIComponent",
        "url",
        "e",
        "url",
        "request",
        "url",
        "obj",
        "ocr_flag",
        "obj",
        "obj",
        "fetch_params",
        "fetch_params",
        "MOBILE_UA",
        "rule",
        "headers",
        "rule",
        "fetch_params",
        "fetch_params",
        "fetch_params",
        "headers",
        "fetch_params",
        "fetch_params",
        "getHome",
        "url",
        "obj",
        "fetch_params",
        "obj",
        "headers",
        "it",
        "it",
        "keys",
        "headers",
        "MOBILE_UA",
        "obj",
        "headers",
        "rule",
        "rule",
        "ocr_flag",
        "obj",
        "obj",
        "obj",
        "rule",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "rule",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "url",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "url",
        "obj",
        "obj",
        "req",
        "url",
        "obj",
        "res",
        "obj",
        "res",
        "htmlWithHeaders",
        "html",
        "htmlWithHeaders",
        "html",
        "post",
        "url",
        "obj",
        "obj",
        "request",
        "url",
        "obj",
        "fetch",
        "request",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "e",
        "data",
        "data",
        "data",
        "data",
        "data",
        "log",
        "checkHtml",
        "html",
        "url",
        "obj",
        "html",
        "html",
        "url",
        "url",
        "btwaf",
        "url",
        "html",
        "request",
        "url",
        "obj",
        "html",
        "getCode",
        "url",
        "obj",
        "request",
        "url",
        "obj",
        "html",
        "checkHtml",
        "html",
        "url",
        "obj",
        "html",
        "getHtml",
        "url",
        "rule",
        "obj",
        "rule",
        "getItem",
        "RULE_CK",
        "cookie",
        "obj",
        "obj",
        "it",
        "it",
        "obj",
        "cookie",
        "obj",
        "obj",
        "obj",
        "cookie",
        "obj",
        "cookie",
        "obj",
        "obj",
        "obj",
        "cookie",
        "obj",
        "cookie",
        "obj",
        "obj",
        "cookie",
        "getCode",
        "url",
        "obj",
        "html",
        "homeObj",
        "fetch_params",
        "rule_fetch_params",
        "homeObj",
        "homeObj",
        "homeObj",
        "homeObj",
        "names",
        "urls",
        "i",
        "cnt",
        "i",
        "classes",
        "urls",
        "i",
        "names",
        "i",
        "homeObj",
        "homeObj",
        "parseTags",
        "p",
        "_pdfa",
        "_ps",
        "_pdfh",
        "_ps",
        "_pd",
        "_ps",
        "MY_URL",
        "rule",
        "p",
        "homeObj",
        "getHtml",
        "homeObj",
        "html",
        "homeHtmlCache",
        "html",
        "_pdfa",
        "html",
        "p",
        "it",
        "idex",
        "_pdfh",
        "it",
        "p",
        "homeObj",
        "homeObj",
        "name",
        "_pd",
        "it",
        "p",
        "p",
        "p",
        "p",
        "url",
        "url",
        "exp",
        "classes",
        "url",
        "name",
        "e",
        "idex",
        "e",
        "e",
        "e",
        "classes",
        "classes",
        "it",
        "homeObj",
        "homeObj",
        "it",
        "classes",
        "homeObj",
        "resp",
        "homeObj",
        "resp",
        "getPP",
        "p",
        "pn",
        "pp",
        "ppn",
        "p",
        "pn",
        "pp",
        "ppn",
        "pp",
        "ppn",
        "p",
        "pn",
        "ps",
        "e",
        "homeVodObj",
        "fetch_params",
        "rule_fetch_params",
        "MY_URL",
        "homeVodObj",
        "MY_URL",
        "homeVodObj",
        "p",
        "p",
        "rule",
        "p",
        "rule",
        "homeVodObj",
        "p",
        "p",
        "p",
        "p",
        "rule",
        "p",
        "HOST",
        "rule",
        "eval",
        "p",
        "d",
        "VODS",
        "p",
        "p",
        "homeVodObj",
        "p",
        "homeVodObj",
        "p",
        "getPP",
        "p",
        "pp",
        "parseTags",
        "p0",
        "_pdfa",
        "_ps",
        "_pdfh",
        "_ps",
        "_pd",
        "_ps",
        "p0",
        "p0",
        "p0",
        "homeHtmlCache",
        "getHtml",
        "MY_URL",
        "homeHtmlCache",
        "is_json",
        "html",
        "dealJson",
        "html",
        "homeVodObj",
        "homeVodObj",
        "_pdfa",
        "html",
        "p0",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "item",
        "items",
        "_pdfa",
        "item",
        "p1",
        "item2",
        "items2",
        "_pdfh",
        "item2",
        "p2",
        "img",
        "_pd",
        "item2",
        "p3",
        "e",
        "desc",
        "_pdfh",
        "item2",
        "p4",
        "e",
        "_p5",
        "p5",
        "homeVodObj",
        "_pd",
        "item2",
        "_p5",
        "MY_URL",
        "_pdfh",
        "item2",
        "_p5",
        "links",
        "link",
        "p",
        "p",
        "content",
        "_pdfh",
        "item2",
        "p6",
        "content",
        "links",
        "rule",
        "vid",
        "vid",
        "title",
        "img",
        "title",
        "img",
        "desc",
        "content",
        "vid",
        "d",
        "vod",
        "e",
        "e",
        "_pdfa",
        "html",
        "p0",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "item",
        "items",
        "_pdfh",
        "item",
        "p1",
        "img",
        "_pd",
        "item",
        "p2",
        "MY_URL",
        "e",
        "desc",
        "_pdfh",
        "item",
        "p3",
        "e",
        "_p5",
        "p4",
        "homeVodObj",
        "_pd",
        "item",
        "_p5",
        "MY_URL",
        "_pdfh",
        "item",
        "_p5",
        "links",
        "link",
        "p",
        "p",
        "content",
        "_pdfh",
        "item",
        "p5",
        "content",
        "links",
        "rule",
        "vid",
        "vid",
        "title",
        "img",
        "title",
        "img",
        "desc",
        "content",
        "vid",
        "d",
        "vod",
        "e",
        "e",
        "e",
        "t2",
        "t1",
        "rule",
        "d",
        "it",
        "it",
        "it",
        "it",
        "it",
        "rule",
        "d",
        "d",
        "d",
        "categoryParse",
        "cateObj",
        "fetch_params",
        "rule_fetch_params",
        "cateObj",
        "p",
        "p",
        "cateObj",
        "cateObj",
        "cateObj",
        "url",
        "url",
        "url",
        "url",
        "cateObj",
        "url",
        "url",
        "url",
        "url",
        "rule",
        "url",
        "url",
        "rule",
        "url",
        "url",
        "rule",
        "url",
        "url",
        "rule",
        "url",
        "cateObj",
        "cateObj",
        "rule",
        "rule",
        "rule",
        "rule",
        "cateObj",
        "rule",
        "cateObj",
        "self_fl_def",
        "self_fl_def",
        "self_fl_def",
        "fl",
        "fl_def",
        "fl",
        "e",
        "e",
        "url",
        "fl",
        "new_url",
        "cheerio",
        "url",
        "fl",
        "url",
        "new_url",
        "url",
        "url",
        "url",
        "url",
        "url_rep",
        "cateObj",
        "eval",
        "cnt_page",
        "url",
        "url",
        "url_rep",
        "cnt_pg",
        "url",
        "url",
        "cateObj",
        "MY_URL",
        "url",
        "MY_URL",
        "p",
        "p",
        "cateObj",
        "p",
        "cateObj",
        "cateObj",
        "eval",
        "p",
        "d",
        "VODS",
        "p",
        "p",
        "p",
        "parseTags",
        "p",
        "_pdfa",
        "_ps",
        "_pdfh",
        "_ps",
        "_pd",
        "_ps",
        "p",
        "p",
        "p",
        "getHtml",
        "MY_URL",
        "html",
        "is_json",
        "html",
        "dealJson",
        "html",
        "_pdfa",
        "html",
        "p",
        "it",
        "p",
        "p4",
        "rule",
        "_pd",
        "it",
        "p4",
        "MY_URL",
        "_pdfh",
        "it",
        "p4",
        "links",
        "rule",
        "MY_CATE",
        "link",
        "link",
        "_pdfh",
        "it",
        "p",
        "_pd",
        "it",
        "p",
        "MY_URL",
        "rule",
        "vod_id",
        "vod_id",
        "vod_name",
        "vod_pic",
        "d",
        "vod_id",
        "vod_name",
        "vod_pic",
        "_pdfh",
        "it",
        "p",
        "e",
        "e",
        "rule",
        "d",
        "it",
        "it",
        "it",
        "it",
        "it",
        "rule",
        "d",
        "d",
        "rule",
        "rule",
        "rule",
        "MY_CATE",
        "MY_CATE",
        "rule",
        "pagecount",
        "parseInt",
        "rule",
        "MY_CATE",
        "d",
        "nodata",
        "parseInt",
        "cateObj",
        "pagecount",
        "d",
        "vod",
        "searchObj",
        "fetch_params",
        "rule_fetch_params",
        "searchObj",
        "searchObj",
        "rule",
        "rule",
        "searchObj",
        "p",
        "p",
        "p",
        "p",
        "rule",
        "searchObj",
        "searchObj",
        "searchObj",
        "url",
        "url",
        "url",
        "url",
        "url",
        "searchObj",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url_rep",
        "searchObj",
        "eval",
        "cnt_page",
        "url",
        "url",
        "url_rep",
        "cnt_pg",
        "url",
        "url",
        "searchObj",
        "MY_URL",
        "url",
        "MY_URL",
        "p",
        "searchObj",
        "searchObj",
        "rule",
        "eval",
        "p",
        "d",
        "VODS",
        "p",
        "p",
        "p",
        "getPP",
        "p",
        "pp",
        "parseTags",
        "p0",
        "_pdfa",
        "_ps",
        "_pdfh",
        "_ps",
        "_pd",
        "_ps",
        "p0",
        "p0",
        "p0",
        "MY_URL",
        "MY_URL",
        "req_method",
        "MY_URL",
        "rurls",
        "rurls",
        "rurls",
        "rurl",
        "rule_fetch_params",
        "_fetch_params",
        "postData",
        "html",
        "post",
        "rurl",
        "_fetch_params",
        "req_method",
        "MY_URL",
        "rurls",
        "rurls",
        "rurls",
        "rurl",
        "e",
        "rule_fetch_params",
        "_fetch_params",
        "postData",
        "html",
        "post",
        "rurl",
        "_fetch_params",
        "html",
        "getHtml",
        "MY_URL",
        "html",
        "html",
        "verifyCode",
        "MY_URL",
        "cookie",
        "cookie",
        "setItem",
        "RULE_CK",
        "cookie",
        "cookie",
        "html",
        "getHtml",
        "MY_URL",
        "html",
        "searchObj",
        "html",
        "is_json",
        "html",
        "dealJson",
        "html",
        "_pdfa",
        "html",
        "p0",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "getPP",
        "p",
        "pp",
        "it",
        "p4",
        "_p4",
        "rule",
        "_pd",
        "it",
        "_p4",
        "MY_URL",
        "_pdfh",
        "it",
        "_p4",
        "links",
        "p",
        "p",
        "content",
        "_pdfh",
        "it",
        "p5",
        "content",
        "_pdfh",
        "it",
        "p1",
        "_pd",
        "it",
        "p2",
        "MY_URL",
        "rule",
        "vod_id",
        "vod_id",
        "vod_name",
        "vod_pic",
        "vod_id",
        "vod_name",
        "vod_pic",
        "_pdfh",
        "it",
        "p3",
        "content",
        "d",
        "ob",
        "e",
        "e",
        "rule",
        "d",
        "it",
        "it",
        "it",
        "it",
        "it",
        "rule",
        "parseInt",
        "searchObj",
        "d",
        "detailParse",
        "detailObj",
        "fetch_params",
        "rule_fetch_params",
        "detailObj",
        "rule",
        "orId",
        "vod_name",
        "extra",
        "extra",
        "vod_name",
        "vod_pic",
        "extra",
        "extra",
        "vod_pic",
        "vod_id",
        "vod_name",
        "vod_pic",
        "detailObj",
        "detailObj",
        "detailObj",
        "detailObj",
        "detailObj",
        "detailObj",
        "MY_URL",
        "url",
        "detailObj",
        "detailObj",
        "eval",
        "detailObj",
        "e",
        "e",
        "p",
        "vod",
        "vod",
        "detailUrl",
        "vod",
        "vod",
        "MY_URL",
        "vod",
        "MY_URL",
        "p",
        "p",
        "eval",
        "p",
        "vod",
        "VOD",
        "vod",
        "p",
        "p",
        "html",
        "html",
        "getHtml",
        "MY_URL",
        "MY_URL",
        "tt1",
        "p",
        "_ps",
        "parseTags",
        "html",
        "dealJson",
        "html",
        "p",
        "_ps",
        "parseTags",
        "p",
        "_ps",
        "parseTags",
        "_ps",
        "parseTags",
        "MY_URL",
        "tt2",
        "tt1",
        "_pdfa",
        "_ps",
        "_pdfh",
        "_ps",
        "_pd",
        "_ps",
        "p",
        "p",
        "vod",
        "_pdfh",
        "html",
        "p1",
        "p1",
        "_pdfh",
        "html",
        "p1",
        "vod",
        "type_name",
        "vod",
        "p",
        "p",
        "vod",
        "_pdfh",
        "html",
        "p1",
        "vod",
        "p1",
        "_pdfh",
        "html",
        "p1",
        "vod",
        "p1",
        "_pdfh",
        "html",
        "p1",
        "vod",
        "p1",
        "_pdfh",
        "html",
        "p1",
        "vod",
        "p1",
        "_pdfh",
        "html",
        "p1",
        "e",
        "p",
        "p",
        "vod",
        "_pdfh",
        "html",
        "p1",
        "e",
        "p",
        "p",
        "vod",
        "_pd",
        "html",
        "p1",
        "MY_URL",
        "e",
        "p",
        "p",
        "p",
        "html",
        "eval",
        "p",
        "p",
        "p",
        "p",
        "eval",
        "p",
        "playFrom",
        "TABS",
        "p",
        "_pdfa",
        "html",
        "p_tab",
        "vHeader",
        "p",
        "v",
        "vHeader",
        "_pdfh",
        "v",
        "tab_text",
        "v_title",
        "tab_exclude",
        "tab_exclude",
        "v_title",
        "new_map",
        "v_title",
        "new_map",
        "v_title",
        "new_map",
        "v_title",
        "new_map",
        "v_title",
        "v_title",
        "new_map",
        "v_title",
        "playFrom",
        "v_title",
        "playFrom",
        "playFrom",
        "vod",
        "playFrom",
        "vod_play_from",
        "p",
        "p",
        "p",
        "eval",
        "p",
        "i",
        "LISTS",
        "LISTS",
        "i",
        "LISTS",
        "i",
        "LISTS",
        "i",
        "it",
        "it",
        "e",
        "e",
        "vod_play_url",
        "LISTS",
        "it",
        "it",
        "vod_play_url",
        "e",
        "e",
        "p",
        "p",
        "p",
        "i",
        "playFrom",
        "i",
        "playFrom",
        "i",
        "p",
        "is_tab_js",
        "p",
        "p",
        "tab_name",
        "i",
        "tab_ext",
        "tab_ext",
        "tab_name",
        "i",
        "tab_ext",
        "_pdfh",
        "html",
        "tab_ext",
        "tab_name",
        "tabName",
        "pdfl",
        "new_vod_list",
        "pdfl",
        "html",
        "p1",
        "list_text",
        "list_url",
        "MY_URL",
        "vodList",
        "_pdfa",
        "html",
        "p1",
        "vodList",
        "e",
        "i",
        "vodList",
        "i",
        "vodList",
        "i",
        "new_vod_list",
        "_pdfh",
        "it",
        "list_text",
        "_pd",
        "it",
        "list_url",
        "MY_URL",
        "new_vod_list",
        "new_vod_list",
        "forceOrder",
        "new_vod_list",
        "x",
        "x",
        "new_vod_list",
        "tt1",
        "new_vod_list",
        "vod_tab_list",
        "vlist",
        "vod_play_url",
        "vod_tab_list",
        "vod_play_url",
        "vod",
        "vod_play_url",
        "rule",
        "vod",
        "vod",
        "vod",
        "vod",
        "rule",
        "vod",
        "vod_id",
        "vod",
        "vod_id",
        "vod",
        "vod_id",
        "MY_URL",
        "t2",
        "t1",
        "vod",
        "vodDeal",
        "vod",
        "vod",
        "get_tab_index",
        "vod",
        "vod",
        "it",
        "index",
        "obj",
        "it",
        "index",
        "obj",
        "vod",
        "vod",
        "vod",
        "rule",
        "rule",
        "rule",
        "rule",
        "get_tab_index",
        "vod",
        "rule",
        "rule",
        "tab_removed_list",
        "vod_play_from",
        "it",
        "rule",
        "it",
        "tab_list",
        "tab_removed_list",
        "rule",
        "rule",
        "rule",
        "tab_ordered_list",
        "tab_removed_list",
        "a",
        "b",
        "tab_order",
        "a",
        "tab_order",
        "a",
        "tab_order",
        "b",
        "tab_order",
        "b",
        "tab_list",
        "tab_ordered_list",
        "play_ordered_list",
        "tab_list",
        "it",
        "vod_play_url",
        "tab_index_dict",
        "it",
        "rule",
        "rule",
        "rule",
        "tab_renamed_list",
        "tab_list",
        "it",
        "rule",
        "it",
        "it",
        "tab_list",
        "tab_renamed_list",
        "vod",
        "tab_list",
        "vod",
        "play_ordered_list",
        "vod",
        "tellIsJx",
        "url",
        "url",
        "是否正版",
        "url",
        "is_vip",
        "e",
        "playObj",
        "fetch_params",
        "rule_fetch_params",
        "MY_URL",
        "playObj",
        "MY_URL",
        "MY_URL",
        "base64Decode",
        "MY_URL",
        "e",
        "MY_URL",
        "decodeURIComponent",
        "MY_URL",
        "input",
        "tellIsJx",
        "input",
        "rule",
        "rule",
        "lazy_play",
        "common_play",
        "rule",
        "rule",
        "rule",
        "rule",
        "lazy_code",
        "eval",
        "lazy_code",
        "lazy_play",
        "input",
        "input",
        "tellIsJx",
        "input",
        "input",
        "e",
        "e",
        "lazy_play",
        "common_play",
        "lazy_play",
        "common_play",
        "rule",
        "rule",
        "lazy_play",
        "pjson",
        "rule",
        "pjson",
        "pjson",
        "web_url",
        "pjson",
        "pjson",
        "pjson",
        "pjson",
        "lazy_play",
        "lazy_play",
        "base_json",
        "rule",
        "rule",
        "lazy_play",
        "lazy_play",
        "base_json",
        "rule",
        "lazy_play",
        "lazy_play",
        "base_json",
        "lazy_play",
        "lazy_play",
        "proxyParse",
        "proxyObj",
        "proxyObj",
        "proxyObj",
        "proxyObj",
        "eval",
        "proxyObj",
        "input",
        "input",
        "proxyObj",
        "input",
        "input",
        "input",
        "e",
        "e",
        "isVideoParse",
        "isVideoObj",
        "isVideoObj",
        "isVideoObj",
        "isVideoObj",
        "re_matcher",
        "input",
        "eval",
        "isVideoObj",
        "input",
        "input",
        "e",
        "e",
        "init",
        "ext",
        "getMubans",
        "ext",
        "rule",
        "ext",
        "ext",
        "ext",
        "request",
        "ext",
        "js",
        "eval",
        "js",
        "eval",
        "ext",
        "rule",
        "muban",
        "rule",
        "rule",
        "rule",
        "muban",
        "rule",
        "rule",
        "rule",
        "it",
        "it",
        "rule",
        "it",
        "it",
        "rule_cate_excludes",
        "rule_cate_excludes",
        "CATE_EXCLUDE",
        "it",
        "it",
        "rule_tab_excludes",
        "rule_tab_excludes",
        "TAB_EXCLUDE",
        "it",
        "it",
        "rule",
        "rule_cate_excludes",
        "rule",
        "rule_tab_excludes",
        "rule",
        "rule",
        "rstrip",
        "rule",
        "HOST",
        "rule",
        "rule",
        "eval",
        "rule",
        "rule",
        "rstrip",
        "HOST",
        "rule",
        "e",
        "rule",
        "e",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "u1",
        "urljoin",
        "rule",
        "u2",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "u1",
        "urljoin",
        "rule",
        "u2",
        "rule",
        "rule",
        "rule",
        "rule",
        "urljoin",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "k",
        "header_keys",
        "k",
        "rule",
        "k",
        "v",
        "v",
        "rule",
        "k",
        "eval",
        "v",
        "k",
        "rule",
        "k",
        "v",
        "v",
        "v",
        "v",
        "fetch",
        "v",
        "v",
        "rule",
        "k",
        "v",
        "e",
        "v",
        "e",
        "e",
        "e",
        "rule_fetch_params",
        "rule",
        "rule",
        "rule",
        "oheaders",
        "rule",
        "pre",
        "init_test",
        "e",
        "e",
        "home",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "homeParse",
        "homeObj",
        "homeVod",
        "rule",
        "rule",
        "rule",
        "rule",
        "homeVodParse",
        "homeVodObj",
        "category",
        "tid",
        "pg",
        "extend",
        "rule",
        "rule",
        "tid",
        "parseInt",
        "pg",
        "extend",
        "categoryParse",
        "cateObj",
        "detail",
        "vod_url",
        "orId",
        "vod_url",
        "vod_url",
        "fyclass",
        "tmp",
        "vod_url",
        "tmp",
        "vod_url",
        "detailUrl",
        "detailUrl",
        "url",
        "rule",
        "detailUrl",
        "fyclass",
        "detailUrl",
        "url",
        "urljoin",
        "rule",
        "detailUrl",
        "url",
        "detailUrl",
        "orId",
        "url",
        "rule",
        "rule",
        "detailUrl",
        "fyclass",
        "rule",
        "detailParse",
        "detailObj",
        "play",
        "flag",
        "id",
        "flags",
        "id",
        "playParse",
        "playObj",
        "search",
        "wd",
        "quick",
        "pg",
        "rule",
        "rule",
        "wd",
        "encodeStr",
        "wd",
        "rule",
        "rule",
        "rule",
        "wd",
        "encodeStr",
        "wd",
        "rule",
        "rule",
        "rule",
        "wd",
        "pg",
        "quick",
        "searchParse",
        "searchObj",
        "proxy",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "proxyParse",
        "proxyObj",
        "sniffer",
        "rule",
        "enable_sniffer",
        "enable_sniffer",
        "isVideo",
        "url",
        "rule",
        "rule",
        "is_video",
        "rule",
        "is_video",
        "is_video",
        "is_video",
        "t",
        "url",
        "is_video",
        "t",
        "isVideoParse",
        "isVideoObj",
        "result",
        "rule",
        "result",
        "DRPY",
        "init",
        "home",
        "homeVod",
        "category",
        "detail",
        "play",
        "search",
        "proxy",
        "sniffer",
        "isVideo",
        "init",
        "home",
        "homeVod",
        "category",
        "detail",
        "play",
        "search",
        "proxy",
        "sniffer",
        "isVideo"
    ],
    "literals": [
        "'crypto-js'",
        "\"cheerio\"",
        "'url-join'",
        "'./formwork'",
        "'./gbk'",
        "'./drpy_inject'",
        "\"init_test_start\"",
        "\"当前版本号:\"",
        "\"init_test_end\"",
        "\"预处理\"",
        "'string'",
        "\"预处理\"",
        "\"预处理\"",
        "\"预处理\"",
        "\"执行预处理代码:\"",
        "'js:'",
        "'js:'",
        "''",
        "'预处理执行失败:'",
        "'function'",
        "'drpy3.1'",
        "'drpy3'",
        "${vercode} 3.9.49beta36 202400308",
        "'Mozilla/5.0 (Linux; Android 11; M2007J3SC Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/77.0.3865.120 MQQBrowser/6.2 TBS/045714 Mobile Safari/537.36'",
        "'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/95.0.4638.54 Safari/537.36'",
        "'Mozilla/5.0'",
        "'Mozilla/5.0 (Linux; U; Android 9; zh-CN; MI 9 Build/PKQ1.181121.001) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/57.0.2987.108 UCBrowser/12.5.5.1035 Mobile Safari/537.36'",
        "'Mozilla/5.0 (iPhone; CPU iPhone OS 13_2_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.3 Mobile/15E148 Safari/604.1'",
        "'cookie'",
        "'首页|留言|APP|下载|资讯|新闻|动态'",
        "'猜你|喜欢|下载|剧情|热播'",
        "'http://drpy.nokia.press:8028/ocr/drpy/text'",
        "'undefined'",
        "'function'",
        "'number'",
        "'includes'",
        "'\"this\" is null or not defined'",
        "'function'",
        "'function'",
        "'function'",
        "''",
        "\"\"",
        "'is not Array'",
        "''",
        "\"$\"",
        "\"\"",
        "\"append\"",
        "\"strip\"",
        "'qq\\.com|iqiyi\\.com|youku\\.com|mgtv\\.com|bilibili\\.com|sohu\\.com|ixigua\\.com|pptv\\.com|miguvideo\\.com|le\\.com|1905\\.com|fun\\.tv'",
        "''",
        "'#'",
        "'?'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'tname'",
        "''",
        "'tid'",
        "''",
        "'year'",
        "''",
        "'actor'",
        "''",
        "'director'",
        "''",
        "'area'",
        "''",
        "'object'",
        "'maomi_aes.js'",
        "\"625222f9149e961d\"",
        "\"5efdtf6060e2o330\"",
        "''",
        "'%21'",
        "'%27'",
        "'%28'",
        "'%29'",
        "'%2A'",
        "'+'",
        "string",
        "string",
        "string",
        "'gbk'",
        "'gb'",
        "'gbk'",
        "'gb'",
        "'console.log(\"CryptoJS已装载\");'",
        "'function'",
        "''",
        "''",
        "''",
        "''",
        "'string'",
        "'html对象转文本发生了错误:'",
        "'&&'",
        "'&&'",
        "' '",
        "\"$1\"",
        "'string'",
        "'html对象转文本发生了错误:'",
        "'undefined'",
        "''",
        "'http'",
        "''",
        "'string'",
        "'$.'",
        "'$.'",
        "'||'",
        "''",
        "''",
        "'string'",
        "''",
        "''",
        "'string'",
        "'$.'",
        "'$.'",
        "''",
        "pdfa解析${parse}=>${result.length}",
        "''",
        "'jsp:'",
        "'json:'",
        "'jq:'",
        "'{'",
        "'}'",
        "'['",
        "']'",
        "'{'",
        "'}'",
        "''",
        "'通过drpy_ocr验证码接口过验证...'",
        "'User-Agent'",
        "'method'",
        "'POST'",
        "''",
        "OCR识别验证码发生错误:${e}",
        "''",
        "${host}/index.php/verify/index.html",
        "验证码链接:${yzm_url}",
        "'set-cookie'",
        "';'",
        "''",
        "'cookie:'",
        "第${cnt+1}次验证码识别结果:${code}",
        "${host}/index.php/ajax/verify_check?type=search&verify=${code}",
        "'User-Agent'",
        "'method'",
        "'POST'",
        "'ok'",
        "第${cnt+1}次验证码提交成功",
        "'ok'",
        "''",
        "第${cnt+1}次验证码提交失败:${e}",
        "''",
        "规则${RKEY}设置${k} => ${v}",
        "''",
        "'//'",
        "'//'",
        "'/'",
        "'undefined'",
        "'User-Agent'",
        "\"headers\"",
        "\"headers\"",
        "'user-agent'",
        "'User-Agent'",
        "\"encoding\"",
        "\"encoding\"",
        "'utf-8'",
        "'Content-Type'",
        "'content-type'",
        "\"Content-Type\"",
        "'text/html; charset='",
        "\"encoding\"",
        "'undefined'",
        "'string'",
        "'Content-Type'",
        "'content-type'",
        "\"Content-Type\"",
        "'application/x-www-form-urlencoded; charset='",
        "\"encoding\"",
        "'undefined'",
        "'object'",
        "'{}'",
        "''",
        "'request:'",
        "|method:${obj.method||'GET'}|body:${obj.body||''}",
        "'GET'",
        "''",
        "\"content\"",
        "''",
        "\"headers\"",
        "'POST'",
        "''",
        "'object'",
        "':'",
        "'object'",
        "'null object'",
        "'#'",
        "'?btwaf'",
        "'宝塔验证访问链接:'",
        "\"headers\"",
        "\"headers\"",
        "\"headers\"",
        "''",
        "\"headers\"",
        "\"headers\"",
        "'cookie'",
        "'历史无cookie,新增过验证后的cookie'",
        "\"headers\"",
        "'Cookie'",
        "\"headers\"",
        "\"headers\"",
        "\"headers\"",
        "\"headers\"",
        "'Cookie'",
        "'历史有小写过期的cookie,更新过验证后的cookie'",
        "\"headers\"",
        "\"headers\"",
        "\"headers\"",
        "\"headers\"",
        "'Cookie'",
        "'历史有大写过期的cookie,更新过验证后的cookie'",
        "\"headers\"",
        "\"headers\"",
        "'历史无headers,更新过验证后的含cookie的headers'",
        "'&'",
        "'&'",
        "'type_id'",
        "'type_name'",
        "';'",
        "'type_id'",
        "'type_name'",
        "分类列表定位第${idex}个元素正常报错:${e.message}",
        "'class'",
        "'*'",
        "''",
        "'p:'",
        "'*'",
        "'string'",
        "'{}'",
        "';'",
        "'js:'",
        "'home'",
        "'js:'",
        "''",
        "';'",
        "'{}'",
        "'{}'",
        "'json:'",
        "''",
        "'double:'",
        "''",
        "''",
        "'+'",
        "''",
        "'$'",
        "'*'",
        "'@@'",
        "'@@'",
        "'首页列表双层定位处理发生错误:'",
        "''",
        "''",
        "'+'",
        "''",
        "'$'",
        "'*'",
        "'@@'",
        "'@@'",
        "'首页列表单层定位处理发生错误:'",
        "'加载首页推荐耗时:'",
        "'毫秒'",
        "'http'",
        "'string'",
        "'{}'",
        "'fyclass'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'['",
        "\"filter_url\"",
        "'&'",
        "\"filter_url\"",
        "'&'",
        "'&'",
        "\"filter_url\"",
        "'fyfilter'",
        "\"filter_url\"",
        "\"filter_def\"",
        "\"filter_def\"",
        "'object'",
        "\"filter_def\"",
        "\"filter_def\"",
        "\"filter_def\"",
        "'object'",
        "'合并不同分类对应的默认筛选出错:'",
        "'('",
        "')'",
        "'fypage'",
        "'('",
        "''",
        "')'",
        "''",
        "'fypage'",
        "'js:'",
        "'cate'",
        "''",
        "'js:'",
        "''",
        "';'",
        "'{}'",
        "'json:'",
        "''",
        "'+'",
        "'$'",
        "'$'",
        "''",
        "'*'",
        "'@@'",
        "'@@'",
        "'vod_id'",
        "'vod_name'",
        "'vod_pic'",
        "'vod_remarks'",
        "''",
        "'http'",
        "'object'",
        "MY_CATE:${MY_CATE},pagecount:${JSON.stringify(rule.pagecount)}",
        "'无数据,防无限请求'",
        "'no_data'",
        "'不要点,会崩的'",
        "'https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/404.jpg'",
        "'page'",
        "'pagecount'",
        "'limit'",
        "'total'",
        "'list'",
        "'{}'",
        "'*'",
        "'string'",
        "'{}'",
        "';'",
        "'**'",
        "'['",
        "']'",
        "'#'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'#'",
        "'['",
        "'('",
        "')'",
        "'fypage'",
        "'('",
        "''",
        "')'",
        "''",
        "'fypage'",
        "'js:'",
        "'search'",
        "''",
        "'js:'",
        "''",
        "';'",
        "'{}'",
        "'json:'",
        "''",
        "';'",
        "';'",
        "'get'",
        "'post'",
        "';'",
        "'#'",
        "''",
        "post=》rurl:${rurl},params:${params}",
        "'postjson'",
        "';'",
        "'#'",
        "''",
        "postjson-》rurl:${rurl},params:${params}",
        "'{}'",
        "本次成功过验证,cookie:${cookie}",
        "本次自动过搜索验证失败,cookie:${cookie}",
        "'搜索结果源码未包含关键字,疑似搜索失败,正为您打印结果源码'",
        "'+'",
        "'$'",
        "''",
        "''",
        "'*'",
        "'@@'",
        "'@@'",
        "'vod_id'",
        "'vod_name'",
        "'vod_pic'",
        "'vod_remarks'",
        "''",
        "'vod_content'",
        "''",
        "'搜索发生错误:'",
        "'{}'",
        "'http'",
        "'page'",
        "'pagecount'",
        "'limit'",
        "'total'",
        "'list'",
        "'片名'",
        "''",
        "\"二级\"",
        "'*'",
        "'@@'",
        "\"类型\"",
        "\"年份\"",
        "\"地区\"",
        "\"更新信息\"",
        "\"主演\"",
        "\"导演\"",
        "\"简介\"",
        "''",
        "尝试在二级访问前执行代码:${detailObj.二级访问前}",
        "'js:'",
        "''",
        "'二级访问前执行代码出现错误:'",
        "'*'",
        "'道长在线'",
        "'没有二级,只有一级链接直接嗅探播放'",
        "'嗅探播放$'",
        "'@@'",
        "'string'",
        "'js:'",
        "'detail'",
        "''",
        "'js:'",
        "''",
        "'object'",
        "二级${MY_URL}仅获取源码耗时:${(new Date()).getTime()-tt1}毫秒",
        "'二级是json'",
        "'二级是jsp'",
        "'二级是jq'",
        "'二级默认jq'",
        "二级${MY_URL}获取并装载源码耗时:${tt2-tt1}毫秒",
        "';'",
        "''",
        "''",
        "''",
        "''",
        "';'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "';'",
        "''",
        "';'",
        "'$$$'",
        "'js:'",
        "'开始执行重定向代码:'",
        "'js:'",
        "''",
        "'js:'",
        "'开始执行tabs代码:'",
        "'js:'",
        "''",
        "';'",
        "'body&&Text'",
        "'道长在线'",
        "'$$$'",
        "'js:'",
        "'开始执行lists代码:'",
        "''",
        "'js:'",
        "''",
        "'$'",
        "'$'",
        "'格式化LISTS发生错误:'",
        "'#'",
        "'js执行lists: 发生错误:'",
        "'body&&Text'",
        "'a&&href'",
        "'js:'",
        "';'",
        "';'",
        "''",
        "'#idv'",
        "'#id'",
        "'#idv'",
        "'#id'",
        "'function'",
        "'len(vodList):'",
        "'$'",
        "''",
        "'$'",
        "drpy影响性能代码共计列表数循环次数:${new_vod_list.length},耗时:${(new Date()).getTime()-tt1}毫秒",
        "'#'",
        "\"图片来源\"",
        "'http'",
        "\"图片来源\"",
        "'$'",
        "加载二级界面${MY_URL}耗时:${t2-t1}毫秒",
        "'$$$'",
        "'$$$'",
        "'$$$'",
        "'object'",
        "'$$$'",
        "'$$$'",
        "'?'",
        "'string'",
        "'js:'",
        "''",
        "'开始执行js免嗅=>'",
        "'object'",
        "'js免嗅错误:'",
        "'*'",
        "'object'",
        "'准备执行本地代理规则:\\n'",
        "'text/plain'",
        "'Not Found'",
        "'text/plain'",
        "'代理规则错误:'",
        "'text/plain'",
        "'Not Found'",
        "'i'",
        "'boolean'",
        "'执行嗅探规则发生错误:'",
        "'init'",
        "'object'",
        "'string'",
        "'http'",
        "'method'",
        "'GET'",
        "'var rule'",
        "'rule'",
        "'var rule'",
        "'rule'",
        "\"模板\"",
        "\"模板\"",
        "继承模板:${rule[\"模板\"]}",
        "\"模板\"",
        "\"模板\"",
        "\"cate_exclude\"",
        "''",
        "'|'",
        "\"tab_exclude\"",
        "''",
        "'|'",
        "'|'",
        "'|'",
        "\"cate_exclude\"",
        "'|'",
        "\"tab_exclude\"",
        "'|'",
        "\"host\"",
        "\"host\"",
        "\"host\"",
        "''",
        "'/'",
        "\"host\"",
        "\"hostJs\"",
        "检测到hostJs,准备执行...",
        "\"hostJs\"",
        "\"host\"",
        "'/'",
        "\"host\"",
        "执行${rule[\"hostJs\"]}获取host发生错误:${e}",
        "\"hostJs\"",
        "\"url\"",
        "\"url\"",
        "''",
        "\"double\"",
        "\"double\"",
        "\"homeUrl\"",
        "\"homeUrl\"",
        "''",
        "\"detailUrl\"",
        "\"detailUrl\"",
        "''",
        "\"searchUrl\"",
        "\"searchUrl\"",
        "''",
        "\"omeUrl\"",
        "\"host\"",
        "\"homeUrl\"",
        "\"host\"",
        "\"homeUrl\"",
        "\"homeUrl\"",
        "\"host\"",
        "\"detailUrl\"",
        "\"host\"",
        "\"detailUrl\"",
        "\"host\"",
        "\"detailUrl\"",
        "\"detailUrl\"",
        "\"二级访问前\"",
        "\"二级访问前\"",
        "''",
        "\"url\"",
        "'['",
        "\"url\"",
        "']'",
        "\"url\"",
        "'['",
        "\"url\"",
        "'['",
        "']'",
        "\"url\"",
        "\"host\"",
        "\"url\"",
        "\"host\"",
        "'['",
        "\"host\"",
        "']'",
        "\"url\"",
        "\"url\"",
        "\"host\"",
        "\"url\"",
        "\"host\"",
        "\"url\"",
        "\"url\"",
        "\"searchUrl\"",
        "'['",
        "\"searchUrl\"",
        "']'",
        "\"searchUrl\"",
        "'#'",
        "\"searchUrl\"",
        "'['",
        "\"searchUrl\"",
        "'['",
        "']'",
        "\"searchUrl\"",
        "\"host\"",
        "\"searchUrl\"",
        "\"host\"",
        "'['",
        "\"host\"",
        "']'",
        "\"searchUrl\"",
        "\"searchUrl\"",
        "\"host\"",
        "\"searchUrl\"",
        "\"host\"",
        "\"searchUrl\"",
        "\"searchUrl\"",
        "\"timeout\"",
        "\"timeout\"",
        "\"encoding\"",
        "\"编码\"",
        "\"encoding\"",
        "'utf-8'",
        "\"search_encoding\"",
        "\"搜索编码\"",
        "\"search_encoding\"",
        "''",
        "\"图片来源\"",
        "\"图片来源\"",
        "''",
        "\"play_json\"",
        "'play_json'",
        "\"play_json\"",
        "\"pagecount\"",
        "'pagecount'",
        "\"pagecount\"",
        "\"proxy_rule\"",
        "'proxy_rule'",
        "\"proxy_rule\"",
        "''",
        "\"sniffer\"",
        "'sniffer'",
        "\"sniffer\"",
        "''",
        "\"sniffer\"",
        "\"sniffer\"",
        "\"sniffer\"",
        "'0'",
        "\"sniffer\"",
        "'false'",
        "\"isVideo\"",
        "'isVideo'",
        "\"isVideo\"",
        "''",
        "\"tab_remove\"",
        "'tab_remove'",
        "\"tab_remove\"",
        "\"tab_order\"",
        "'tab_order'",
        "\"tab_order\"",
        "\"tab_rename\"",
        "'tab_rename'",
        "\"tab_rename\"",
        "\"headers\"",
        "\"headers\"",
        "'object'",
        "\"headers\"",
        "'user-agent'",
        "\"headers\"",
        "'MOBILE_UA'",
        "'PC_UA'",
        "'UC_UA'",
        "'IOS_UA'",
        "'UA'",
        "\"headers\"",
        "'cookie'",
        "\"headers\"",
        "'http'",
        "\"headers\"",
        "从${v}获取cookie发生错误:${e}",
        "处理headers发生错误:${e}",
        "'headers'",
        "\"headers\"",
        "'timeout'",
        "\"timeout\"",
        "'encoding'",
        "\"encoding\"",
        "\"headers\"",
        "'init_test发生错误:'",
        "\"home\"",
        "\"filter\"",
        "\"homeUrl\"",
        "\"class_name\"",
        "''",
        "\"class_url\"",
        "''",
        "\"class_parse\"",
        "''",
        "\"cate_exclude\"",
        "\"homeVod\"",
        "\"推荐\"",
        "\"double\"",
        "\"homeUrl\"",
        "\"detailUrl\"",
        "\"url\"",
        "\"一级\"",
        "''",
        "'orId:'",
        "'$'",
        "'$'",
        "'@@'",
        "'http'",
        "'/'",
        "\"detailUrl\"",
        "'fyid'",
        "'fyclass'",
        "'/'",
        "\"homeUrl\"",
        "\"二级\"",
        "'二级访问前'",
        "\"tab_exclude\"",
        "\"search_encoding\"",
        "\"search_encoding\"",
        "'utf-8'",
        "\"search_encoding\"",
        "\"search_encoding\"",
        "\"search_encoding\"",
        "'utf-8'",
        "\"search_encoding\"",
        "\"search_encoding\"",
        "\"搜索\"",
        "\"proxy_rul\"",
        "\"proxy_rul\"",
        "\"proxy_rul\"",
        "\"proxy_rul\"",
        "\"proxy_rul\"",
        "'js:'",
        "\"proxy_rul\"",
        "\"proxy_rul\"",
        "'js:'",
        "''",
        "\"proxy_rul\"",
        "\"sniffer\"",
        "'开始执行辅助嗅探代理规则...'",
        "string",
        "\"isVideo\"",
        "\"isVideo\"",
        "\"isVideo\"",
        "'js:'",
        "'js:'",
        "''",
        "'成功执行辅助嗅探规则并检测到视频地址:\\n'",
        "\"isVideo\""
    ],
    "variables": [
        "init_test",
        "pre",
        "code",
        "rule",
        "vercode",
        "VERSION",
        "MOBILE_UA",
        "PC_UA",
        "UA",
        "UC_UA",
        "IOS_UA",
        "RULE_CK",
        "CATE_EXCLUDE",
        "TAB_EXCLUDE",
        "OCR_RETRY",
        "OCR_API",
        "MY_URL",
        "HOST",
        "RKEY",
        "fetch",
        "log",
        "rule_fetch_params",
        "fetch_params",
        "oheaders",
        "_pdfh",
        "_pdfa",
        "_pd",
        "DOM_CHECK_ATTR",
        "SPECIAL_URL",
        "NOADD_INDEX",
        "URLJOIN_ATTR",
        "SELECT_REGEX",
        "SELECT_REGEX_A",
        "target",
        "i",
        "source",
        "o",
        "len",
        "n",
        "k",
        "i",
        "rstrip",
        "regex",
        "是否正版",
        "flag",
        "urlDeal",
        "obj",
        "keys",
        "setResult2",
        "setHomeResult",
        "rc",
        "a",
        "t",
        "Encrypted",
        "urlencode",
        "base64Encode",
        "base64Decode",
        "md5",
        "encodeStr",
        "strTool",
        "decodeStr",
        "strTool",
        "getCryptoJS",
        "forceOrder",
        "start",
        "end",
        "first",
        "second",
        "num1",
        "num2",
        "VODS",
        "VOD",
        "TABS",
        "LISTS",
        "urljoin",
        "urljoin2",
        "urljoin",
        "defaultParser",
        "pdfh2",
        "html2",
        "html",
        "result",
        "option",
        "pdfa2",
        "html2",
        "html",
        "pd2",
        "ret",
        "parseTags",
        "ret",
        "ret",
        "ret",
        "result",
        "result",
        "stringify",
        "jsp",
        "jq",
        "dealJson",
        "OcrApi",
        "code",
        "html",
        "verifyCode",
        "cnt",
        "host",
        "cookie",
        "yzm_url",
        "hhtml",
        "json",
        "setCk",
        "img",
        "code",
        "submit_url",
        "html",
        "setItem",
        "getItem",
        "clearItem",
        "getHome",
        "tmp",
        "request",
        "headers",
        "headers",
        "keys",
        "res",
        "html",
        "htmlWithHeaders",
        "post",
        "checkHtml",
        "btwaf",
        "getCode",
        "html",
        "getHtml",
        "obj",
        "cookie",
        "html",
        "classes",
        "names",
        "urls",
        "cnt",
        "i",
        "p",
        "_ps",
        "html",
        "name",
        "url",
        "exp",
        "resp",
        "getPP",
        "ps",
        "d",
        "t1",
        "p",
        "pp",
        "TYPE",
        "input",
        "MY_URL",
        "p0",
        "_ps",
        "is_json",
        "html",
        "items",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "p6",
        "items2",
        "title",
        "img",
        "desc",
        "links",
        "link",
        "content",
        "vid",
        "vod",
        "items",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "title",
        "img",
        "desc",
        "links",
        "link",
        "content",
        "vid",
        "vod",
        "t2",
        "categoryParse",
        "p",
        "d",
        "url",
        "fl",
        "self_fl_def",
        "fl_def",
        "new_url",
        "url_rep",
        "cnt_page",
        "cnt_pg",
        "MY_CATE",
        "MY_FL",
        "TYPE",
        "input",
        "MY_URL",
        "MY_PAGE",
        "desc",
        "_ps",
        "is_json",
        "html",
        "links",
        "link",
        "vod_id",
        "vod_name",
        "vod_pic",
        "pagecount",
        "nodata",
        "vod",
        "d",
        "p",
        "pp",
        "url",
        "url_rep",
        "cnt_page",
        "cnt_pg",
        "TYPE",
        "MY_PAGE",
        "KEY",
        "input",
        "MY_URL",
        "detailUrl",
        "p0",
        "_ps",
        "is_json",
        "req_method",
        "html",
        "rurls",
        "rurl",
        "_fetch_params",
        "postData",
        "rurls",
        "rurl",
        "_fetch_params",
        "postData",
        "cookie",
        "p1",
        "p2",
        "p3",
        "p4",
        "p5",
        "links",
        "link",
        "content",
        "vod_id",
        "link",
        "vod_name",
        "vod_pic",
        "ob",
        "detailParse",
        "t1",
        "orId",
        "vod_name",
        "vod_pic",
        "vod_id",
        "orId",
        "extra",
        "vod",
        "p",
        "url",
        "detailUrl",
        "fyclass",
        "tab_exclude",
        "html",
        "TYPE",
        "input",
        "MY_URL",
        "play_url",
        "tt1",
        "_ps",
        "tt2",
        "p1",
        "type_name",
        "p1",
        "p1",
        "p1",
        "vod_play_from",
        "playFrom",
        "input",
        "MY_URL",
        "p_tab",
        "vHeader",
        "tab_text",
        "new_map",
        "v_title",
        "vod_play_url",
        "vod_tab_list",
        "input",
        "MY_URL",
        "play_url",
        "list_text",
        "list_url",
        "is_tab_js",
        "i",
        "tab_name",
        "tab_ext",
        "p1",
        "tabName",
        "new_vod_list",
        "tt1",
        "vodList",
        "i",
        "it",
        "vlist",
        "t2",
        "get_tab_index",
        "obj",
        "vod_play_from",
        "vod_play_url",
        "tab_removed_list",
        "vod_play_from",
        "tab_ordered_list",
        "vod_play_from",
        "tab_renamed_list",
        "vod_play_from",
        "tab_list",
        "vod_play_from",
        "play_ordered_list",
        "vod_play_url",
        "tab_index_dict",
        "tab_order",
        "tellIsJx",
        "is_vip",
        "input",
        "MY_URL",
        "common_play",
        "lazy_play",
        "lazy_code",
        "web_url",
        "base_json",
        "base_json",
        "base_json",
        "proxyParse",
        "input",
        "isVideoParse",
        "input",
        "re_matcher",
        "init",
        "muban",
        "js",
        "rule_cate_excludes",
        "rule_tab_excludes",
        "u1",
        "u2",
        "u1",
        "u2",
        "header_keys",
        "v",
        "v",
        "homeHtmlCache",
        "home",
        "homeObj",
        "homeVod",
        "homeVodObj",
        "category",
        "cateObj",
        "detail",
        "orId",
        "vod_url",
        "fyclass",
        "tmp",
        "detailUrl",
        "url",
        "detailObj",
        "play",
        "playObj",
        "search",
        "searchObj",
        "proxy",
        "proxyObj",
        "sniffer",
        "enable_sniffer",
        "isVideo",
        "t",
        "is_video",
        "isVideoObj",
        "result",
        "DRPY"
    ],
    "comments": [
        "const CryptoJS = require('./crypto-js');",
        "const cheerio = require('./cheerio.min');",
        "const 模板 = window.require('./formwork.js');",
        "const gbkTool = require('./gbk');",
        "import CryptoJS from './crypto-js';",
        "import * as cheerio from './cheerio.min';",
        "code里可以进行get 或者 post请求cookie并改变rule.headers 里的cookie",
        "直接操作 rule_fetch_params 这个变量 .headers.Cookie",
        "已知问题记录\n * 1.影魔的jinjia2引擎不支持 {{fl}}对象直接渲染 (有能力解决的话尽量解决下，支持对象直接渲染字符串转义,如果加了|safe就不转义)[影魔牛逼，最新的文件发现这问题已经解决了]\n * Array.prototype.append = Array.prototype.push; 这种js执行后有毛病,for in 循环列表会把属性给打印出来 (这个大毛病需要重点排除一下)\n * 2.import es6py.js但是里面的函数没有被装载进来.比如drpy规则报错setResult2 is undefiend(合并文件了可以不管了)\n * 3.无法重复导入cheerio(怎么解决drpy和parseTag里都需要导入cheerio的问题) 无法在副文件导入cheerio (现在是全部放在drpy一个文件里了,凑合解决?)\n * 4.有个错误不知道哪儿来的 executeScript: com.quickjs.JSObject$Undefined cannot be cast to java.lang.String 在 点击选集播放打印init_test_end后面打印(貌似不影响使用)\n * 5.需要实现 stringify 函数,比起JSON.strifngify函数,它会原封不动保留中文不会编码unicode\n * 6.base64Encode,base64Decode,md5函数还没有实现 (抄影魔代码实现了)\n * 7.eval(getCryptoJS());还没有实现 (可以空实现了,以后遇到能忽略)\n * done:  jsp:{pdfa,pdfh,pd},json:{pdfa,pdfh,pd},jq:{pdfa,pdfh,pd}\n * 8.req函数不支持传递字符串的data参数 {'content-type':'text/plain'} 类型数据，因此无法直接调用alist的ocr接口\n *  * 电脑看日志调试\n adb tcpip 5555\n adb connect 192.168.10.192\n adb devices -l\n adb logcat -c\n adb logcat | grep -i QuickJS\n adb logcat -c -b events\n adb logcat -c -b main -b events -b radio -b system\n adb logcat > 2.log DRPY:E | grep -i QuickJS\n * *",
        "源cookie的key值",
        "const KEY = typeof(key)!=='undefined'&&key?key:'drpy_' + (rule.title || rule.host); // 源的唯一标识",
        "ocr验证重试次数",
        "const OCR_API = 'http://dm.mudery.com:10000';//ocr在线识别接口",
        "const OCR_API = 'http://192.168.3.239:5705/parse/ocr';//ocr在线识别接口",
        "const OCR_API = 'http://cms.nokia.press/parse/ocr';//ocr在线识别接口",
        "const OCR_API = 'http://cms.nokia.press:5707/parse/ocr';//ocr在线识别接口",
        "ocr在线识别接口",
        "全局注入变量,pd函数需要",
        "源的唯一标识",
        "每个位置单独的",
        "var play_url; // 二级详情页注入变量,为了适配js模式0 (不在这里定义了,直接二级里定义了个空字符串)",
        "const DOM_CHECK_ATTR = ['url', 'src', 'href', 'data-original', 'data-src'];",
        "过滤特殊链接,不走urlJoin",
        "不自动加eq下标索引",
        "需要自动urljoin的属性",
        "es6py扩展",
        "this是空或者未定义，抛出错误",
        "将this转变成对象",
        "无符号右移0位，获取对象length属性，如果未定义就会变成0",
        "length为0直接返回false未找到目标值",
        "查找起始索引",
        "计算正确起始索引，因为有可能是负值",
        "从起始索引处开始循环",
        "如果某一位置与寻找目标相等，返回true，找到了",
        "未找到，返回false",
        "Object.prototype[\"myValues\"] = (obj) => {",
        "if(obj == null) {",
        "throw new TypeError(\"Cannot convert undefined or null to object\");",
        "}",
        "let res= [];",
        "for(let k in obj){",
        "if (obj.hasOwnProperty(k)) { //需判断是否是本身的属性",
        "res.push(obj[k]);",
        "}",
        "}",
        "return res;",
        "}",
        "if (typeof Object.prototype[\"values\"] !== 'function') {",
        "Object.prototype[\"values\"] = (obj) => {",
        "if(obj ==null) {",
        "throw new TypeError(\"Cannot convert undefined or null to object\");",
        "}",
        "let res=[]",
        "for(let k in obj){",
        "if(obj.hasOwnProperty(k)){//需判断是否是本身的属性",
        "res.push(obj[k]);",
        "}",
        "}",
        "return res;",
        "}",
        "}",
        "emoji = emoji||',';",
        "去除字符串末尾的字符",
        "String.prototype.rstrip = function(chars) {",
        "let regex = new RegExp(chars + \"$\");",
        "return this.replace(regex, \"\");",
        "};",
        "print(d);",
        "猫了个咪",
        "print(a);",
        "print(word);",
        "千万不要用for in 推荐 forEach (for in 会打乱顺序)",
        "猫函数",
        "const maoss = (jxurl, ref, key) => {",
        "fetch_params = JSON.parse(JSON.stringify(rule_fetch_params));",
        "eval(getCryptoJS());",
        "try {",
        "var getVideoInfo = function (text) {",
        "return CryptoJS.AES.decrypt(text, key, {iv: iv, padding: CryptoJS.pad.Pkcs7}).toString(CryptoJS.enc.Utf8);",
        "};",
        "var token_key = key == undefined ? 'dvyYRQlnPRCMdQSe' : key;",
        "if (ref) {",
        "var html = request(jxurl, {",
        "headers: {",
        "'Referer': ref",
        "}",
        "});",
        "} else {",
        "var html = request(jxurl);",
        "}",
        "// print(html);",
        "if (html.indexOf('&btwaf=') != -1) {",
        "html = request(jxurl + '&btwaf' + html.match(/&btwaf(.*?)\"/)[1], {",
        "headers: {",
        "'Referer': ref",
        "}",
        "})",
        "}",
        "var token_iv = html.split('_token = \"')[1].split('\"')[0];",
        "var key = CryptoJS.enc.Utf8.parse(token_key);",
        "var iv = CryptoJS.enc.Utf8.parse(token_iv);",
        "// log(\"iv:\"+iv);",
        "//  log(html);",
        "// print(key);",
        "// print(iv);",
        "eval(html.match(/var config = {[\\s\\S]*?}/)[0] + '');",
        "// config.url = config.url.replace(/,/g,'');",
        "// print(config.url);",
        "if (!config.url.startsWith('http')) {",
        "//config.url = decodeURIComponent(AES(config.url, key, iv));",
        "config.url = CryptoJS.AES.decrypt(config.url, key, {",
        "iv: iv,",
        "padding: CryptoJS.pad.Pkcs7",
        "}).toString(CryptoJS.enc.Utf8)",
        "}",
        "return config.url;",
        "} catch (e) {",
        "return '';",
        "}",
        "}",
        "return request('https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/libs/crypto-hiker.js');",
        "封装的RSA加解密类",
        "const RSA = {",
        "encode: (data,key,option) => {",
        "// log('encode');",
        "if(typeof(rsaEncrypt)==='function'){",
        "if(!option||typeof(option)!=='object'){",
        "return rsaEncrypt(data,key);",
        "}else{",
        "return rsaEncrypt(data,key,option);",
        "}",
        "}else{",
        "return false",
        "}",
        "},",
        "decode: (data,key,option) => {",
        "// log('decode');",
        "if(typeof(rsaDecrypt)==='function'){",
        "if(!option||typeof(option)!=='object'){",
        "return rsaDecrypt(data,key);",
        "}else{",
        "return rsaDecrypt(data,key,option);",
        "}",
        "} else {",
        "return false",
        "}",
        "}",
        "};",
        "const getProxyUrl = () => {",
        "if (typeof(getProxy) === 'function') {//判断壳子里有getProxy函数就执行取返回结果。否则取默认的本地",
        "return getProxy(true)",
        "} else {",
        "return 'http://127.0.0.1:9978/proxy?do=js'",
        "}",
        "}",
        "console.log(first,second);",
        "一级或者搜索需要的数据列表",
        "二级的单个数据",
        "二级的自定义线路列表 如: TABS=['道长在线','道长在线2']",
        "二级的自定义选集播放列表 如: LISTS=[['第1集$http://1.mp4','第2集$http://2.mp4'],['第3集$http://1.mp4','第4集$http://2.mp4']]",
        "try {",
        "// import Uri from './uri.min.js';",
        "// var Uri = require('./uri.min.js');",
        "// eval(request('https://cdn.bootcdn.net/ajax/libs/URI.js/1.19.11/URI.min.js'));",
        "// let new_uri = URI(nowPath, fromPath);",
        "let new_uri = Uri(nowPath, fromPath);",
        "new_uri = new_uri.toString();",
        "// console.log(new_uri);",
        "// return fromPath + nowPath",
        "return new_uri",
        "}",
        "catch (e) {",
        "console.log('urljoin发生错误:'+e.message);",
        "if(nowPath.startsWith('http')){",
        "return nowPath",
        "}if(nowPath.startsWith('/')){",
        "return getHome(fromPath)+nowPath",
        "}",
        "return fromPath+nowPath",
        "}",
        "内置 pdfh,pdfa,pd",
        "2023/07/28新增 style取内部链接自动去除首尾单双引号",
        "MY_URL = getItem('MY_URL',MY_URL);",
        "console.log(`规则${RKEY}打印MY_URL:${MY_URL},uri:${uri}`);",
        "console.log('jsonpath:pdfh字符串转dict');",
        "console.log('jsonpath:pdfa字符串转dict');",
        "console.log(`pdfh解析${parse}=>${result}`);",
        "console.log(result);",
        "非js开头的情况自动获取解析标签",
        "const readFile = (filePath) => {",
        "filePath = filePath || './uri.min.js';",
        "var fd = os.open(filePath);",
        "var buffer = new ArrayBuffer(1024);",
        "var len = os.read(fd, buffer, 0, 1024);",
        "console.log(len);",
        "let text = String.fromCharCode.apply(null, new Uint8Array(buffer));",
        "console.log(text);",
        "return text",
        "}",
        "html = html.match(/[\\w|\\W|\\s|\\S]*?(\\{[\\w|\\W|\\s|\\S]*\\})/).group[1];",
        "console.log(typeof(html));",
        "img是byte类型,这里不方便搞啊",
        "let html = request(this.api,{data:{img:img},headers:{'User-Agent':PC_UA},'method':'POST'},true);",
        "html = JSON.parse(html);",
        "code = html.url||'';",
        "let obj = {headers:headers,timeout:timeout};",
        "print(json);",
        "cookie = json['set-cookie']?json['set-cookie'].split(';')[0]:'';",
        "console.log(hhtml);",
        "console.log(img);",
        "console.log(html);",
        "需要返回cookie",
        "需要清空返回cookie",
        "const buildUrl = (url,obj) => {",
        "obj = obj||{};",
        "if(url.indexOf('?')<0){",
        "url += '?'",
        "}",
        "let param_list = [];",
        "let keys = Object.keys(obj);",
        "keys.forEach(it=>{",
        "param_list.push(`${it}'='${obj[it]}`)",
        "});",
        "let prs = param_list.join('&');",
        "if(keys.length > 0 && !url.endsWith('?')){",
        "url += '&'",
        "}",
        "url+=prs;",
        "return url",
        "}",
        "const $require = (url) => {",
        "eval(request(url));",
        "}",
        "let rule = {};",
        "if(!keys.includes('referer')) {",
        "headers['Referer'] = getHome(url);",
        "}",
        "手动指定了就不管",
        "let data = {};",
        "obj.body.split('&').forEach(it=>{",
        "data[it.split('=')[0]] = it.split('=')[1]",
        "});",
        "obj.data = data;",
        "delete obj.body",
        "传body加 \"Content-Type\":\"application/x-www-form-urlencoded;\" 即可post form",
        "手动指定了就不管",
        "返回base64,用于请求图片",
        "console.log('request:'+url+' obj:'+JSON.stringify(obj));",
        "console.log('print:'+e.message);",
        "log('有cookie:'+cookie);",
        "可以不写正则",
        "let url = pdfh(it, p[2]);",
        "排除分类",
        "console.log(JSON.stringify(resp));",
        "setItem('MY_URL',MY_URL);",
        "print(p[0]);",
        "print('是json,开始处理');",
        "console.log(items.length);",
        "console.log(p[1]);",
        "console.log(items2.length);",
        "print(vod);",
        "console.log(JSON.stringify(d));",
        "let url = cateObj.url.replaceAll('fyclass', cateObj.tid).replaceAll('fypage', cateObj.pg);",
        "console.log('filter:'+cateObj.filter);",
        "自动合并 不同分类对应的默认筛选",
        "引用传递转值传递,避免污染self变量",
        "console.log('jinjia2执行后的new_url类型为:'+typeof(new_url));",
        "console.log(url_rep);",
        "console.log(cnt_page);",
        "console.log(cnt_pg);",
        "setItem('MY_URL',MY_URL);",
        "console.log(d);",
        "console.log(vod);",
        "console.log(url_rep);",
        "console.log(cnt_page);",
        "console.log(cnt_pg);",
        "log(searchObj.搜索);",
        "setItem('MY_URL',MY_URL);",
        "print('1381 p0:'+p0);",
        "let new_dict = {};",
        "let new_tmp = params.split('&');",
        "new_tmp.forEach(i=>{",
        "new_dict[i.split('=')[0]] = i.split('=')[1];",
        "});",
        "html = post(rurl,{body:new_dict});",
        "obj.headers['Cookie'] = cookie;",
        "console.log(html);",
        "console.log(JSON.stringify(html));",
        "console.log(html);",
        "print(list.length);",
        "print(list);",
        "print(d);",
        "vod_id = orId.split('@@')[0]; // 千万不能分割",
        "print(vod_pic);",
        "\"id\",",
        "console.log(MY_URL);",
        "setItem('MY_URL',MY_URL);",
        "print('二级默认jsp');",
        "_ps = parseTags.jsp;",
        "vod.vod_actor = p1.length > 3 ? _pdfh(html, p1[3]).replaceAll('\\n', ' ').trim():'';",
        "console.log(2);",
        "console.log(p_tab);",
        "print('tab_text:'+tab_text);",
        "console.log(3);",
        "console.log(i);",
        "print('list_text:'+list_text);",
        "print('list_url:'+list_url);",
        "print('list_parse:'+p.lists);",
        "print('tab_ext:'+tab_ext);",
        "print('pdfl:'+typeof (pdfl));",
        "console.log(e.message);",
        "print(new_vod_list);",
        "print(vod);",
        "print(vod);",
        "移除指定线路后的列表",
        "排序后的线路列表",
        "线路重命名后的列表",
        "定义实际要返回线路",
        "选集列表根据线路排序",
        "判断有移除线路或者线路排序",
        "获取原来线路的索引下标",
        "注入给免嗅js",
        "url:urlencode(input),",
        "print('play_json:'+typeof(rule.play_json));",
        "console.log(Array.isArray(rule.play_json));",
        "数组情况判断长度大于0",
        "print('开始合并:');",
        "print(base_json);",
        "其他情况 非[] 判断true/false",
        "不解析传0",
        "t为假代表默认传的正则字符串",
        "/g匹配多个,/i不区分大小写,/m匹配多行",
        "执行js",
        "make shared jsContext happy muban不能import,不然会造成换源继承后变量被篡改",
        "if (typeof (globalThis.mubanJs) === 'undefined') {",
        "let mubanJs = request('https://ghproxy.net/https://raw.githubusercontent.com/hjdhnx/dr_py/main/js/模板.js', { 'User-Agent': MOBILE_UA });",
        "mubanJs = mubanJs.replace('export default', '(function() {return muban;}()) // export default');",
        "// console.log(mubanJs);",
        "globalThis.mubanJs = mubanJs;",
        "}",
        "let muban = eval(globalThis.mubanJs);",
        "print(typeof (muban));",
        "print(muban);",
        "处理一下 rule规则关键字段没传递的情况 *",
        "rule[\"host\"] = (rule[\"host\"] || '').rstrip('/');",
        "rule[\"host\"] = HOST.rstrip('/');",
        "console.log(rule.headers);",
        "RKEY = typeof(key)!=='undefined' && key ? key:'drpy_' + (rule[\"title\"] || rule[\"host\"]);",
        "预处理",
        "console.log(JSON.stringify(extend));",
        "按搜索编码进行编码",
        "按全局编码进行编码",
        "console.log(JSON.stringify(searchObj));",
        "console.log('准备执行辅助嗅探代理规则:\\n'+rule.isVideo);",
        "导出函数对象"
    ],
    "docstrings": [
        "* 执行预处理代码",
        "* 以下是内置变量和解析方法 *",
        "* 字符串按指定编码\n * @param input\n * @param encoding\n * @returns {*}",
        "* 字符串指定解码\n * @param input\n * @param encoding\n * @returns {*}",
        "* 获取壳子返回的代理地址\n * @returns {string|*}",
        "* 强制正序算法\n * @param lists  待正序列表\n * @param key 正序键\n * @param option 单个元素处理函数\n * @returns {*}",
        "*  url拼接\n * @param fromPath 初始当前页面url\n * @param nowPath 相对当前页面url\n * @returns {*}",
        "*  pdfh原版优化,能取style属性里的图片链接\n * @param html 源码\n * @param parse 解析表达式\n * @returns {string|*}",
        "* pdfa原版优化,可以转换jq的html对象\n * @param html\n * @param parse\n * @returns {*}",
        "* pd原版方法重写-增加自动urljoin\n * @param html\n * @param parse\n * @param uri\n * @returns {*}",
        "* 后台需要实现的java方法并注入到js中 **",
        "* 读取本地文件->应用程序目录\n * @param filePath\n * @returns {string}",
        "* 处理返回的json数据\n * @param html\n * @returns {*}",
        "* 验证码识别逻辑,需要java实现(js没有bytes类型,无法调用后端的传递图片二进制获取验证码文本的接口)\n * @type {{api: string, classification: (function(*=): string)}}",
        "* 验证码识别,暂未实现\n * @param url 验证码图片链接\n * @returns {string} 验证成功后的cookie",
        "* 存在数据库配置表里, key字段对应值value,没有就新增,有就更新,调用此方法会清除key对应的内存缓存\n * @param k 键\n * @param v 值",
        "*  获取数据库配置表对应的key字段的value，没有这个key就返回value默认传参.需要有缓存,第一次获取后会存在内存里\n * @param k 键\n * @param v 值\n * @returns {*}",
        "*  删除数据库key对应的一条数据,并清除此key对应的内存缓存\n * @param k",
        "* js自封装的方法 **",
        "* 获取链接的host(带http协议的完整链接)\n * @param url 任意一个正常完整的Url,自动提取根\n * @returns {string}",
        "* get参数编译链接,类似python params字典自动拼接\n * @param url 访问链接\n * @param obj 参数字典\n * @returns {*}",
        "* 远程依赖执行函数\n * @param url 远程js地址",
        "* 海阔网页请求函数完整封装\n * @param url 请求链接\n * @param obj 请求对象 {headers:{},method:'',timeout:5000,body:'',withHeaders:false}\n * @param ocr_flag 标识此flag是用于请求ocr识别的,自动过滤content-type指定编码\n * @returns {string|string|DocumentFragment|*}",
        "*  快捷post请求\n * @param url 地址\n * @param obj 对象\n * @returns {string|DocumentFragment|*}",
        "* 检查宝塔验证并自动跳过获取正确源码\n * @param html 之前获取的html\n * @param url 之前的来源url\n * @param obj 来源obj\n * @returns {string|DocumentFragment|*}",
        "*  带一次宝塔验证的源码获取\n * @param url 请求链接\n * @param obj 请求参数\n * @returns {string|DocumentFragment}",
        "* 源rule专用的请求方法,自动注入cookie\n * @param url 请求链接\n * @returns {string|DocumentFragment}",
        "* 首页分类解析，筛选暂未实现\n * @param homeObj 首页传参对象\n * @returns {string}",
        "* 推荐和搜索单字段继承一级\n * @param p 推荐或搜索的解析分割;列表\n * @param pn 自身列表序号\n * @param pp  一级解析分割;列表\n * @param ppn 继承一级序号\n * @returns {*}",
        "*  首页推荐列表解析\n * @param homeVodObj\n * @returns {string}",
        "* 一级分类页数据解析\n * @param cateObj\n * @returns {string}",
        "* 搜索列表数据解析\n * @param searchObj\n * @returns {string}",
        "* 二级详情页数据解析\n * @param detailObj\n * @returns {string}",
        "* 获取二级待返回的播放线路没处理时的索引关系\n * @param vod\n * @returns {{}}",
        "* 处理待返回的vod数据|线路去除,排序,重命名\n * @param vod\n * @returns {*}",
        "* 判断是否需要解析\n * @param url\n * @returns {number|number}",
        "* 选集播放点击事件解析\n * @param playObj\n * @returns {string}",
        "* 本地代理解析规则\n * @param params",
        "* 辅助嗅探解析规则\n * @param isVideoObj\n * @returns {boolean}",
        "* js源预处理特定返回对象中的函数\n * @param ext",
        "* js源获取首页分类和筛选特定返回对象中的函数\n * @param filter 筛选条件字典对象\n * @returns {string}",
        "* js源获取首页推荐数据列表特定返回对象中的函数\n * @param params\n * @returns {string}",
        "* js源获取分类页一级数据列表特定返回对象中的函数\n * @param tid 分类id\n * @param pg 页数\n * @param filter 当前选中的筛选条件\n * @param extend 扩展\n * @returns {string}",
        "* js源获取二级详情页数据特定返回对象中的函数\n * @param vod_url 一级列表中的vod_id或者是带分类的自拼接 vod_id 如 fyclass$vod_id\n * @returns {string}",
        "* js源选集按钮播放点击事件特定返回对象中的函数\n * @param flag 线路名\n * @param id 播放按钮的链接\n * @param flags 全局配置的flags是否需要解析的标识列表\n * @returns {string}",
        "* js源搜索返回的数据列表特定返回对象中的函数\n * @param wd 搜索关键字\n * @param quick 是否来自快速搜索\n * @returns {string}",
        "* js源本地代理返回的数据列表特定返回对象中的函数\n * @param params 代理链接参数比如 /proxy?do=js&url=https://wwww.baidu.com => params就是 {do:'js','url':'https://wwww.baidu.com'}\n * @returns {*}",
        "* 是否启用辅助嗅探功能,启用后可以根据isVideo函数进行手动识别为视频的链接地址。默认为false\n * @returns {*|boolean|boolean}",
        "* 启用辅助嗅探功能后根据次函数返回的值识别地址是否为视频，返回true/false\n * @param url",
        "* 导出函数无法简写成下面的形式:\n\n export default {\n  ...DRPY,\n  DRPY\n }"
    ],
    "functions": [
        "setResult",
        "pdfh",
        "pdfa",
        "pd",
        "pdfh",
        "pdfa",
        "pd",
        "getParse",
        "homeParse",
        "homeVodParse",
        "searchParse",
        "vodDeal",
        "playParse"
    ],
    "classes": []
}