{
    "identifiers": [
        "Collections",
        "Immutable",
        "Linq",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "Diagnostics",
        "NationalInstruments",
        "Analyzers",
        "Properties",
        "NationalInstruments",
        "Analyzers",
        "Utilities",
        "NationalInstruments",
        "Analyzers",
        "Utilities",
        "Extensions",
        "NationalInstruments",
        "Analyzers",
        "Correctness",
        "DiagnosticAnalyzer",
        "LanguageNames",
        "CSharp",
        "NIDiagnosticAnalyzer",
        "DiagnosticDescriptor",
        "DiagnosticId",
        "LocalizableResourceString",
        "nameof",
        "Resources",
        "NI1019_Title",
        "Resources",
        "ResourceManager",
        "Resources",
        "LocalizableResourceString",
        "nameof",
        "Resources",
        "NI1019_Message",
        "Resources",
        "ResourceManager",
        "Resources",
        "Category",
        "Correctness",
        "DiagnosticSeverity",
        "Warning",
        "isEnabledByDefault",
        "description",
        "LocalizableResourceString",
        "nameof",
        "Resources",
        "NI1019_Description",
        "Resources",
        "ResourceManager",
        "Resources",
        "ImmutableArray",
        "DiagnosticDescriptor",
        "ImmutableArray",
        "Create",
        "Rule",
        "AnalysisContext",
        "context",
        "context",
        "EnableConcurrentExecutionIf",
        "IsRunningInProduction",
        "context",
        "ConfigureGeneratedCodeAnalysis",
        "GeneratedCodeAnalysisFlags",
        "context",
        "RegisterSymbolAction",
        "AnalyzeRecord",
        "SymbolKind",
        "NamedType",
        "SymbolAnalysisContext",
        "context",
        "ITypeSymbol",
        "context",
        "typeSymbol",
        "IsRecord",
        "GetBaseTypeProperties",
        "typeSymbol",
        "ToImmutableHashSet",
        "SymbolEqualityComparer",
        "Default",
        "typeSymbol",
        "GetPublicPropertySymbols",
        "Where",
        "p",
        "Type",
        "IsEnumerable",
        "baseTypeProperties",
        "Contains",
        "p",
        "ToImmutableArray",
        "enumerableProperties",
        "Length",
        "typeSymbol",
        "HasExplicitIEquatableEquals",
        "context",
        "ReportDiagnostic",
        "Diagnostic",
        "Create",
        "Rule",
        "typeSymbol",
        "Locations",
        "typeSymbol",
        "Name",
        "ImmutableArray",
        "IPropertySymbol",
        "ITypeSymbol",
        "typeSymbol",
        "typeSymbol",
        "BaseType",
        "baseType",
        "baseType",
        "Name",
        "nameof",
        "ImmutableArray",
        "IPropertySymbol",
        "Empty",
        "baseType",
        "GetPublicPropertySymbols"
    ],
    "literals": [
        "\"NI1019\""
    ],
    "variables": [
        "DiagnosticId",
        "DiagnosticDescriptor",
        "Rule",
        "SupportedDiagnostics",
        "typeSymbol",
        "baseTypeProperties",
        "enumerableProperties",
        "baseType"
    ],
    "comments": [
        "if the record does not have any enumerable properties,",
        "then the default record equality implementation will work as expected.",
        "we don't need to check for GetHashCode because the built-in",
        "C# warning CS0659 will flag code that implements Equals but not GetHashCode.",
        "For classes that don't have a base class declared,",
        "the base type is not null but System.Object."
    ],
    "docstrings": [],
    "functions": [
        "Initialize",
        "AnalyzeRecord",
        "GetBaseTypeProperties"
    ],
    "classes": [
        "RecordWithEnumerablesShouldOverrideDefaultEqualityAnalyzer"
    ]
}