{
    "identifiers": [
        "utils",
        "API_request",
        "aggreg_to_utc_duration",
        "moment",
        "pandas",
        "pd",
        "csv",
        "datetime",
        "datetime",
        "dt",
        "timedelta",
        "pytz",
        "utils",
        "URL",
        "open",
        "newline",
        "file",
        "line",
        "file",
        "line",
        "last_line",
        "strip",
        "csv",
        "reader",
        "last_line",
        "row",
        "reader",
        "row",
        "dt",
        "strptime",
        "last_collect_date",
        "timedelta",
        "days",
        "moment",
        "begin_date",
        "finish_date",
        "finish_date",
        "begin_date",
        "begin_date",
        "collect_date",
        "finish_date",
        "dt",
        "now",
        "astimezone",
        "pytz",
        "timezone",
        "utcoffset",
        "collect_date",
        "lag",
        "start_date",
        "timedelta",
        "hours",
        "timedelta",
        "minutes",
        "API_request",
        "URL",
        "start_date",
        "end_date",
        "response",
        "json",
        "response",
        "json",
        "response",
        "json",
        "open",
        "newline",
        "file",
        "csv",
        "writer",
        "file",
        "real",
        "programada",
        "prevista",
        "demanda_real",
        "demanda_programada",
        "demanda_prevista",
        "real",
        "real",
        "programada",
        "prevista",
        "csv_writer",
        "writerow",
        "date_time",
        "demand",
        "planned",
        "forecast",
        "df_data",
        "append",
        "date_time",
        "demand",
        "planned",
        "forecast",
        "duration",
        "pd",
        "DataFrame",
        "df_data",
        "duration",
        "df",
        "head",
        "duration",
        "aggreg_to_utc_duration",
        "df",
        "duration",
        "df_duration",
        "head",
        "df_duration",
        "to_csv",
        "file_path",
        "header",
        "index",
        "mode",
        "sep",
        "collect_date",
        "timedelta",
        "days"
    ],
    "literals": [
        "'data/REE_data_aggregated_by_1d.csv'",
        "'r'",
        "''",
        "''",
        "'%Y-%m-%d %H:%M:%S'",
        "'yesterday'",
        "'PM'",
        "\"Define period for data collection\"",
        "\"Begins:\"",
        "\"Finishes:\"",
        "\"Duration:\"",
        "\"\\n\"",
        "\"Start collecting data\"",
        "'Europe/Madrid'",
        "'included'",
        "'attributes'",
        "'values'",
        "'included'",
        "'attributes'",
        "'values'",
        "'included'",
        "'attributes'",
        "'values'",
        "'data/REE_data.csv'",
        "'a'",
        "''",
        "'datetime'",
        "'value'",
        "'value'",
        "'value'",
        "'datetime'",
        "'demanda'",
        "'programada'",
        "'prevista'",
        "'10mn'",
        "'1h'",
        "'1d'",
        "f\"Aggregating data by {duration}...\"",
        "f'data/REE_data_aggregated_by_{duration}.csv'",
        "'a'",
        "','"
    ],
    "variables": [
        "last_line",
        "last_line",
        "last_line",
        "reader",
        "last_collect_date",
        "begin_date",
        "finish_date",
        "collect_date",
        "lag",
        "start_date",
        "end_date",
        "response",
        "demanda_real",
        "demanda_programada",
        "demanda_prevista",
        "df_data",
        "csv_writer",
        "date_time",
        "demand",
        "planned",
        "forecast",
        "df",
        "file_path",
        "df_duration",
        "collect_date"
    ],
    "comments": [
        "catch-up_data v1.0",
        "Import librairies",
        "Import constants",
        "Open the 1-day aggregated data file aligned with UTC and look for the end of the file to get the last collect start date",
        "Remove trailing newline",
        "Use last_collect_date to set the begin date for catching up data",
        "Set the finish date to stop catching up data",
        "Loop through the days between the last collect date and yesterday",
        "Compute lag between UTC and Spain local time for the current day",
        "Set the data collection start and end dates for the current day",
        "Collect raw data from REE API",
        "Extract values from JSON structure returned in API response",
        "Initialize an empty list which will be converted to a DataFrame in the data aggregation step",
        "Collect raw data and append it to REE_data.csv",
        "Write data to REE_data.csv",
        "Append the row to the list which will be converted to a DataFrame in the next step",
        "Append REE data to the various aggregated files",
        "Append dataframe with reformatted data to destination CSV file",
        "Increment the collect date by one day to continue the loop"
    ],
    "docstrings": [
        "'''\nThis script is used to catch up REE data from the last collect date up to the current date, if for any reason\nthe data collection has been interrupted for a period of time.\nIt repeats the treatment of the original daily_update.py script for a range of dates based on the last collect\ndate read from the REE_data_aggregated_by_1d.csv file.\n'''"
    ],
    "functions": [],
    "classes": []
}