{
    "identifiers": [
        "compiler",
        "regalloc",
        "inc",
        "i",
        "j",
        "f",
        "dontInline",
        "i",
        "j",
        "j",
        "j",
        "f",
        "inc",
        "f",
        "inc",
        "i",
        "j",
        "f",
        "dontInline",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "inc",
        "f",
        "args",
        "args",
        "testWithCompilerUnrolling",
        "testWithManualUnrolling",
        "args"
    ],
    "literals": [
        "\"compiler\"",
        "\"manual\"",
        "\"Invalid mode: \""
    ],
    "variables": [],
    "comments": [
        "This non-inlined method call causes 'inc' to be spilled.",
        "This two-level reduction loop is unrolled 512 times, which is",
        "requested by the SLP-specific unrolling analysis, but not vectorized.",
        "Because 'inc' is spilled, each of the unrolled AddF nodes is",
        "CISC-spill converted (PhaseChaitin::fixup_spills()). Before the fix,",
        "this causes the unique node index counter (Compile::_unique) to grow",
        "beyond the size of the node register array",
        "(PhaseRegAlloc::_node_regs), and leads to overflow when accessed for",
        "nodes that are created later (e.g. during the peephole phase).",
        "This test reproduces the same failure as 'testWithCompilerUnrolling'",
        "without relying on loop transformations."
    ],
    "docstrings": [
        "* Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.",
        "* @test\n * @bug 8317507\n * @summary Test that C2's PhaseRegAlloc::_node_regs (a post-register-allocation\n *          mapping from machine nodes to assigned registers) does not overflow\n *          in the face of a program with a high-density of CISC spilling\n *          candidate nodes.\n * @run main/othervm -Xcomp -XX:CompileOnly=compiler.regalloc.TestNodeRegArrayOverflow::testWithCompilerUnrolling\n                     -XX:CompileCommand=dontinline,compiler.regalloc.TestNodeRegArrayOverflow::dontInline\n                     compiler.regalloc.TestNodeRegArrayOverflow compiler\n * @run main/othervm -Xcomp -XX:CompileOnly=compiler.regalloc.TestNodeRegArrayOverflow::testWithManualUnrolling\n                     -XX:CompileCommand=dontinline,compiler.regalloc.TestNodeRegArrayOverflow::dontInline\n                     compiler.regalloc.TestNodeRegArrayOverflow manual"
    ],
    "functions": [
        "dontInline",
        "testWithCompilerUnrolling",
        "testWithManualUnrolling",
        "main"
    ],
    "classes": [
        "TestNodeRegArrayOverflow"
    ]
}