{
    "identifiers": [
        "flask",
        "Flask",
        "render_template",
        "url_for",
        "request",
        "Response",
        "jsonify",
        "session",
        "flash",
        "redirect",
        "pandas",
        "pd",
        "joblib",
        "sklearn",
        "preprocessing",
        "LabelEncoder",
        "numpy",
        "np",
        "flask",
        "sqlite3",
        "hashlib",
        "os",
        "werkzeug",
        "utils",
        "secure_filename",
        "instamojo_wrapper",
        "Instamojo",
        "requests",
        "web3",
        "Web3",
        "time",
        "json",
        "os",
        "web3",
        "middleware",
        "geth_poa_middleware",
        "datetime",
        "datetime",
        "apscheduler",
        "schedulers",
        "background",
        "BackgroundScheduler",
        "dotenv",
        "load_dotenv",
        "io",
        "PIL",
        "Image",
        "replicate",
        "google",
        "generativeai",
        "genai",
        "cv2",
        "keras",
        "models",
        "load_model",
        "random",
        "threading",
        "os",
        "environ",
        "env",
        "urllib",
        "parse",
        "quote_plus",
        "urlencode",
        "uuid",
        "authlib",
        "integrations",
        "flask_client",
        "OAuth",
        "dotenv",
        "find_dotenv",
        "load_dotenv",
        "find_dotenv",
        "ENV_FILE",
        "load_dotenv",
        "ENV_FILE",
        "Flask",
        "env",
        "get",
        "OAuth",
        "app",
        "oauth",
        "register",
        "client_id",
        "env",
        "get",
        "client_secret",
        "env",
        "get",
        "client_kwargs",
        "server_metadata_url",
        "env",
        "get",
        "joblib",
        "load",
        "model_filename",
        "request",
        "param",
        "parameters",
        "request",
        "form",
        "get",
        "param",
        "value",
        "pd",
        "DataFrame",
        "user_data",
        "index",
        "preventive_measures",
        "dietary_plan",
        "open",
        "model_file",
        "joblib",
        "load",
        "model_file",
        "joblib",
        "load",
        "model_filename",
        "app",
        "config",
        "UPLOAD_FOLDER",
        "os",
        "environ",
        "os",
        "environ",
        "app",
        "config",
        "app",
        "config",
        "app",
        "config",
        "app",
        "config",
        "app",
        "config",
        "emotion",
        "emotion",
        "image_array",
        "image_array",
        "tobytes",
        "Image",
        "open",
        "io",
        "BytesIO",
        "img_bytes",
        "convert",
        "vision_model",
        "generate_content",
        "img",
        "response",
        "text",
        "description",
        "description",
        "split",
        "strip",
        "emotion",
        "cv2",
        "VideoCapture",
        "cap",
        "read",
        "success",
        "cv2",
        "imencode",
        "frame",
        "buffer",
        "tobytes",
        "frame",
        "joblib",
        "load",
        "symptoms",
        "pd",
        "DataFrame",
        "index",
        "columns",
        "columns",
        "scaler",
        "transform",
        "user_input",
        "model_rf",
        "predict",
        "user_input_scaled",
        "prediction",
        "e",
        "e",
        "load_model",
        "image",
        "cv2",
        "resize",
        "image",
        "cv2",
        "cvtColor",
        "image",
        "cv2",
        "COLOR_BGR2RGB",
        "image",
        "np",
        "expand_dims",
        "image",
        "axis",
        "image",
        "image",
        "preprocess_image",
        "image",
        "model",
        "predict",
        "preprocessed_image",
        "np",
        "argmax",
        "predictions",
        "class_to_disease",
        "predicted_class",
        "disease_name",
        "load_model",
        "image",
        "cv2",
        "resize",
        "image",
        "resized_image",
        "astype",
        "model",
        "predict",
        "np",
        "expand_dims",
        "input_image",
        "axis",
        "np",
        "argmax",
        "predictions",
        "class_labels",
        "predicted_class",
        "predicted_disease",
        "e",
        "e",
        "num_hospitals",
        "i",
        "i",
        "num_hospitals",
        "random",
        "randint",
        "_",
        "num_hospitals",
        "i",
        "num_hospitals",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "data",
        "i",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "data",
        "append",
        "random",
        "randint",
        "total_beds",
        "bed_type",
        "data",
        "bed_type",
        "append",
        "random",
        "choice",
        "data",
        "bed_type",
        "append",
        "random",
        "choice",
        "pd",
        "DataFrame",
        "data",
        "df",
        "current_available",
        "total_beds",
        "random",
        "randint",
        "max",
        "min",
        "current_available",
        "change",
        "total_beds",
        "new_available",
        "data",
        "index",
        "row",
        "data",
        "iterrows",
        "bed_type",
        "bed_type",
        "data",
        "loc",
        "randomize_bed_availability",
        "row",
        "available_bed_col",
        "row",
        "bed_type",
        "bed_type",
        "bed_type",
        "data",
        "loc",
        "data",
        "iloc",
        "index",
        "all_specialty_beds",
        "sum",
        "data",
        "loc",
        "row",
        "row",
        "time",
        "sleep",
        "generate_hospital_data",
        "num_hospitals",
        "target",
        "update_data",
        "update_thread",
        "start",
        "app",
        "route",
        "render_template",
        "session",
        "session",
        "get",
        "pretty",
        "json",
        "dumps",
        "session",
        "get",
        "indent",
        "app",
        "route",
        "methods",
        "oauth",
        "auth0",
        "authorize_access_token",
        "token",
        "redirect",
        "app",
        "route",
        "oauth",
        "auth0",
        "authorize_redirect",
        "redirect_uri",
        "url_for",
        "_external",
        "app",
        "route",
        "session",
        "clear",
        "redirect",
        "env",
        "get",
        "urlencode",
        "url_for",
        "_external",
        "env",
        "get",
        "quote_via",
        "quote_plus",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "get_user_input",
        "request",
        "loaded_model",
        "predict",
        "user_input_df",
        "prediction",
        "generate_recommendations",
        "render_template",
        "result",
        "result_message",
        "preventive_measures",
        "preventive_measures",
        "dietary_plan",
        "dietary_plan",
        "render_template",
        "result",
        "preventive_measures",
        "dietary_plan",
        "app",
        "route",
        "render_template",
        "column_name_mapping",
        "column_name_mapping",
        "app",
        "route",
        "methods",
        "col",
        "column_names",
        "request",
        "form",
        "col",
        "value",
        "col",
        "value",
        "capitalize",
        "LabelEncoder",
        "le",
        "fit_transform",
        "user_input_data",
        "pd",
        "DataFrame",
        "user_input_data",
        "user_input_df",
        "reindex",
        "columns",
        "column_names",
        "fill_value",
        "best_classifier",
        "predict",
        "user_input_df",
        "prediction",
        "render_template",
        "prediction",
        "result_message",
        "column_name_mapping",
        "column_name_mapping",
        "e",
        "render_template",
        "error_message",
        "e",
        "column_name_mapping",
        "column_name_mapping",
        "pd",
        "read_csv",
        "pd",
        "get_dummies",
        "df",
        "columns",
        "drop_first",
        "feature",
        "features_to_convert",
        "df_encoded",
        "feature",
        "astype",
        "open",
        "model_file",
        "joblib",
        "load",
        "model_file",
        "df_encoded",
        "drop",
        "axis",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "form",
        "col",
        "col",
        "request",
        "form",
        "np",
        "array",
        "user_input",
        "reshape",
        "rd_clf",
        "predict",
        "user_input_array",
        "prediction",
        "render_template",
        "prediction",
        "result",
        "e",
        "render_template",
        "error_message",
        "e",
        "app",
        "route",
        "render_template",
        "column_name_mapping",
        "column_name_mapping",
        "app",
        "route",
        "methods",
        "col",
        "description",
        "column_name_mapping",
        "items",
        "request",
        "form",
        "col",
        "value",
        "col",
        "value",
        "pd",
        "DataFrame",
        "user_input_data",
        "pd",
        "get_dummies",
        "user_input_df",
        "columns",
        "drop_first",
        "user_input_df",
        "reindex",
        "columns",
        "X",
        "columns",
        "fill_value",
        "best_gb",
        "predict",
        "user_input_df",
        "prediction",
        "render_template",
        "prediction",
        "result_message",
        "column_name_mapping",
        "column_name_mapping",
        "e",
        "render_template",
        "error_message",
        "e",
        "column_name_mapping",
        "column_name_mapping",
        "app",
        "route",
        "getLoginDetails",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "parse",
        "itemData",
        "render_template",
        "itemData",
        "itemData",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "categoryData",
        "categoryData",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "session",
        "cur",
        "execute",
        "session",
        "cur",
        "fetchone",
        "cur",
        "execute",
        "userId",
        "cur",
        "fetchone",
        "conn",
        "close",
        "loggedIn",
        "firstName",
        "noOfItems",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "files",
        "image",
        "allowed_file",
        "image",
        "filename",
        "secure_filename",
        "image",
        "filename",
        "image",
        "save",
        "os",
        "path",
        "join",
        "app",
        "config",
        "filename",
        "filename",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "name",
        "price",
        "description",
        "imagename",
        "stock",
        "categoryId",
        "conn",
        "commit",
        "conn",
        "rollback",
        "conn",
        "close",
        "msg",
        "redirect",
        "url_for",
        "app",
        "route",
        "request",
        "args",
        "get",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "productId",
        "conn",
        "commit",
        "conn",
        "rollback",
        "conn",
        "close",
        "msg",
        "redirect",
        "url_for",
        "app",
        "route",
        "getLoginDetails",
        "request",
        "args",
        "get",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "categoryId",
        "cur",
        "fetchall",
        "conn",
        "close",
        "data",
        "parse",
        "data",
        "render_template",
        "data",
        "data",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "categoryName",
        "categoryName",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "getLoginDetails",
        "render_template",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "getLoginDetails",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "session",
        "cur",
        "fetchone",
        "conn",
        "close",
        "render_template",
        "profileData",
        "profileData",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "app",
        "route",
        "methods",
        "session",
        "redirect",
        "url_for",
        "request",
        "method",
        "request",
        "form",
        "hashlib",
        "md5",
        "oldPassword",
        "encode",
        "hexdigest",
        "request",
        "form",
        "hashlib",
        "md5",
        "newPassword",
        "encode",
        "hexdigest",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "session",
        "cur",
        "fetchone",
        "password",
        "oldPassword",
        "cur",
        "execute",
        "newPassword",
        "userId",
        "conn",
        "commit",
        "conn",
        "rollback",
        "render_template",
        "msg",
        "msg",
        "conn",
        "close",
        "render_template",
        "msg",
        "msg",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "sqlite3",
        "connect",
        "con",
        "con",
        "cursor",
        "cur",
        "execute",
        "firstName",
        "lastName",
        "address1",
        "address2",
        "zipcode",
        "city",
        "state",
        "country",
        "phone",
        "email",
        "con",
        "commit",
        "con",
        "rollback",
        "con",
        "close",
        "redirect",
        "url_for",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "render_template",
        "error",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "is_valid",
        "email",
        "password",
        "email",
        "redirect",
        "url_for",
        "render_template",
        "error",
        "error",
        "app",
        "route",
        "getLoginDetails",
        "request",
        "args",
        "get",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "productId",
        "cur",
        "fetchone",
        "conn",
        "close",
        "render_template",
        "data",
        "productData",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "request",
        "args",
        "get",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "session",
        "cur",
        "fetchone",
        "cur",
        "execute",
        "userId",
        "productId",
        "conn",
        "commit",
        "conn",
        "rollback",
        "conn",
        "close",
        "redirect",
        "url_for",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "getLoginDetails",
        "session",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "email",
        "cur",
        "fetchone",
        "cur",
        "execute",
        "userId",
        "cur",
        "fetchall",
        "row",
        "products",
        "totalPrice",
        "row",
        "render_template",
        "products",
        "products",
        "totalPrice",
        "totalPrice",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "getLoginDetails",
        "session",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "email",
        "cur",
        "fetchone",
        "cur",
        "execute",
        "userId",
        "cur",
        "fetchall",
        "row",
        "products",
        "totalPrice",
        "row",
        "render_template",
        "products",
        "products",
        "totalPrice",
        "totalPrice",
        "loggedIn",
        "loggedIn",
        "firstName",
        "firstName",
        "noOfItems",
        "noOfItems",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "session",
        "redirect",
        "url_for",
        "session",
        "request",
        "args",
        "get",
        "sqlite3",
        "connect",
        "conn",
        "conn",
        "cursor",
        "cur",
        "execute",
        "email",
        "cur",
        "fetchone",
        "cur",
        "execute",
        "userId",
        "productId",
        "conn",
        "commit",
        "conn",
        "rollback",
        "conn",
        "close",
        "redirect",
        "url_for",
        "app",
        "route",
        "session",
        "pop",
        "redirect",
        "url_for",
        "email",
        "password",
        "sqlite3",
        "connect",
        "con",
        "cursor",
        "cur",
        "execute",
        "cur",
        "fetchall",
        "row",
        "data",
        "row",
        "email",
        "row",
        "hashlib",
        "md5",
        "password",
        "encode",
        "hexdigest",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "sqlite3",
        "connect",
        "con",
        "con",
        "cursor",
        "cur",
        "execute",
        "hashlib",
        "md5",
        "password",
        "encode",
        "hexdigest",
        "email",
        "firstName",
        "lastName",
        "address1",
        "address2",
        "zipcode",
        "city",
        "state",
        "country",
        "phone",
        "con",
        "commit",
        "con",
        "rollback",
        "con",
        "close",
        "render_template",
        "error",
        "msg",
        "app",
        "route",
        "render_template",
        "filename",
        "filename",
        "filename",
        "rsplit",
        "ALLOWED_EXTENSIONS",
        "data",
        "i",
        "len",
        "data",
        "j",
        "i",
        "len",
        "data",
        "curr",
        "append",
        "data",
        "i",
        "i",
        "ans",
        "append",
        "curr",
        "ans",
        "load_dotenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "json",
        "loads",
        "open",
        "read",
        "app",
        "config",
        "SECRET_KEY",
        "Web3",
        "Web3",
        "HTTPProvider",
        "W3_PROVIDER",
        "w3",
        "middleware_onion",
        "inject",
        "geth_poa_middleware",
        "layer",
        "BackgroundScheduler",
        "payment_data",
        "open",
        "file",
        "json",
        "load",
        "file",
        "file_data",
        "update",
        "payment_data",
        "file",
        "seek",
        "json",
        "dump",
        "file_data",
        "file",
        "indent",
        "timestamp",
        "datetime",
        "fromtimestamp",
        "timestamp",
        "dt_object",
        "strftime",
        "formatted_time",
        "app",
        "jinja_env",
        "globals",
        "update",
        "timestamp_to_datetime",
        "timestamp_to_datetime",
        "payment_address",
        "data",
        "payment_data",
        "items",
        "data",
        "time",
        "time",
        "current_time",
        "timestamp",
        "w3",
        "eth",
        "get_balance",
        "payment_address",
        "balance",
        "w3",
        "from_wei",
        "balance",
        "send_payment_info_to_admin",
        "payment_address",
        "payment_data",
        "payment_address",
        "balance",
        "scheduler",
        "add_job",
        "check_payments",
        "seconds",
        "scheduler",
        "start",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "get_json",
        "get",
        "payment_amount",
        "jsonify",
        "w3",
        "is_connected",
        "w3",
        "eth",
        "account",
        "create",
        "new_address",
        "address",
        "w3",
        "to_hex",
        "new_address",
        "key",
        "time",
        "time",
        "payment_amount",
        "timestamp",
        "private_key",
        "save_payment_info_to_json",
        "payment_data",
        "jsonify",
        "payment_address",
        "payment_amount",
        "timestamp",
        "jsonify",
        "e",
        "jsonify",
        "e",
        "app",
        "route",
        "payment_address",
        "w3",
        "is_connected",
        "payment_address",
        "payment_data",
        "payment_data",
        "payment_address",
        "time",
        "time",
        "current_time",
        "timestamp",
        "w3",
        "eth",
        "get_balance",
        "payment_address",
        "balance",
        "jsonify",
        "w3",
        "from_wei",
        "balance",
        "jsonify",
        "jsonify",
        "jsonify",
        "jsonify",
        "payment_address",
        "private_key",
        "balance",
        "gasLimit",
        "w3",
        "to_wei",
        "gasPrice",
        "balance",
        "amount",
        "payment_address",
        "ADMIN_ADDRESS",
        "amount",
        "gasLimit",
        "w3",
        "to_wei",
        "gasPrice",
        "w3",
        "eth",
        "get_transaction_count",
        "payment_address",
        "w3",
        "eth",
        "account",
        "sign_transaction",
        "admin_transaction",
        "private_key",
        "w3",
        "eth",
        "send_raw_transaction",
        "signed_transaction",
        "rawTransaction",
        "transaction_hash",
        "hex",
        "app",
        "route",
        "emotion_detected_key",
        "session",
        "conversation_history_key",
        "session",
        "render_template",
        "app",
        "route",
        "methods",
        "session",
        "get",
        "emotion_detected_key",
        "session",
        "get",
        "conversation_history_key",
        "request",
        "files",
        "np",
        "frombuffer",
        "image_file",
        "read",
        "dtype",
        "np",
        "uint8",
        "emotion_detected",
        "detect_emotion",
        "image_array",
        "get_system_prompt",
        "emotion",
        "request",
        "form",
        "get",
        "system_prompt",
        "user_prompt",
        "user_prompt",
        "system_prompt",
        "conversation_history",
        "append",
        "system_prompt",
        "conversation_history",
        "append",
        "user_input",
        "conversation_history",
        "replicate",
        "stream",
        "model_name",
        "input",
        "user_input",
        "conversation_history",
        "generated_response",
        "emotion",
        "jsonify",
        "emotion",
        "generated_response",
        "e",
        "e",
        "jsonify",
        "app",
        "route",
        "Response",
        "generate_frames",
        "mimetype",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "split",
        "make_prediction",
        "user_symptoms",
        "result",
        "render_template",
        "result",
        "result",
        "render_template",
        "result",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "files",
        "render_template",
        "result",
        "request",
        "files",
        "file",
        "filename",
        "render_template",
        "result",
        "file",
        "cv2",
        "imdecode",
        "np",
        "fromstring",
        "file",
        "read",
        "np",
        "uint8",
        "cv2",
        "IMREAD_UNCHANGED",
        "predict_image",
        "image",
        "render_template",
        "result",
        "result",
        "e",
        "render_template",
        "result",
        "e",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "files",
        "render_template",
        "result",
        "request",
        "files",
        "file",
        "filename",
        "render_template",
        "result",
        "file",
        "cv2",
        "imdecode",
        "np",
        "frombuffer",
        "file",
        "read",
        "np",
        "uint8",
        "cv2",
        "IMREAD_UNCHANGED",
        "predict_disease",
        "image",
        "render_template",
        "result",
        "result",
        "e",
        "render_template",
        "result",
        "e",
        "app",
        "route",
        "data",
        "tolist",
        "render_template",
        "hospitals",
        "hospitals",
        "app",
        "route",
        "methods",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "data",
        "data",
        "hospital_id",
        "iloc",
        "hospital_data",
        "bed_type",
        "render_template",
        "hospital_id",
        "hospital_id",
        "bed_type",
        "bed_type",
        "available_beds",
        "available_beds",
        "app",
        "route",
        "methods",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "data",
        "empty",
        "data",
        "data",
        "hospital_id",
        "hospital_data",
        "empty",
        "hospital_data",
        "index",
        "data",
        "loc",
        "hospital_index",
        "bed_type",
        "current_available_beds",
        "data",
        "loc",
        "hospital_index",
        "bed_type",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "request",
        "form",
        "get",
        "hospital_id",
        "bed_type",
        "jsonify",
        "response_data",
        "jsonify",
        "response_data",
        "app",
        "route",
        "render_template",
        "doctor_types",
        "doctor_types",
        "locations",
        "locations",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "uuid",
        "uuid4",
        "name",
        "email",
        "phone",
        "doctor_type",
        "location",
        "date",
        "request",
        "form",
        "redirect",
        "url_for",
        "appointment_id",
        "appointment_id",
        "app",
        "route",
        "appointment_id",
        "appointments",
        "get",
        "appointment_id",
        "appointment",
        "render_template",
        "appointment",
        "appointment",
        "appointment_id",
        "appointment_id",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "genai",
        "GenerativeModel",
        "app",
        "run",
        "debug",
        "port",
        "env",
        "get"
    ],
    "literals": [
        "\"APP_SECRET_KEY\"",
        "\"auth0\"",
        "\"AUTH0_CLIENT_ID\"",
        "\"AUTH0_CLIENT_SECRET\"",
        "\"scope\"",
        "\"openid profile email\"",
        "f'https://{env.get(\"AUTH0_DOMAIN\")}/.well-known/openid-configuration'",
        "\"AUTH0_DOMAIN\"",
        "'mediplus-lite/Diabetes.joblib'",
        "'Pregnancies'",
        "'Glucose'",
        "'BloodPressure'",
        "'SkinThickness'",
        "'Insulin'",
        "'BMI'",
        "'DiabetesPedigreeFunction'",
        "'Age'",
        "\"1. **Manage Blood Sugar:** Regularly monitor blood sugar levels and adjust medication or lifestyle as needed\"",
        "\"2. **Healthy Diet:** Follow a balanced diet with plenty of fruits, vegetables, whole grains, and lean protein.\"",
        "\"3. **Regular Exercise:** Engage in moderate-intensity physical activity for at least 150 minutes per week.\"",
        "\"4. **Weight Management:** Aim for a healthy weight and avoid becoming overweight or obese.\"",
        "\"5. **Blood Pressure Control:** Keep blood pressure below 140/90 mmHg through lifestyle changes or medication.\"",
        "\"6. **Smoking Cessation:** Quit smoking, as it increases the risk of diabetes complications.\"",
        "\"7. **Regular Check-ups:** Schedule regular appointments with your doctor for comprehensive health evaluations.\"",
        "\"1. **Carbohydrates:** Choose whole grains, fruits, and vegetables that are high in fiber and low in sugar.\"",
        "\"2. **Protein:** Include lean protein sources such as fish, chicken, beans, and tofu in your diet.\"",
        "\"3. **Fats:** Limit unhealthy saturated and trans fats, and opt for healthy fats from olive oil, nuts, and seeds.\"",
        "\"4. **Sugar:** Avoid sugary drinks, processed foods, and sweets.\"",
        "\"5. **Serving Sizes:** Be mindful of portion sizes to control calorie intake.\"",
        "\"6. **Meal Timing:** Eat regular meals and snacks throughout the day to help keep blood sugar levels stable.\"",
        "\"7. **Monitor Blood Sugar:** Regularly check blood sugar levels before and after meals to assess the impact of your diet.\"",
        "'mediplus-lite/liver.joblib'",
        "'rb'",
        "'Age'",
        "'Gender'",
        "'Total_Bilirubin'",
        "'Direct_Bilirubin'",
        "'Alkaline_Phosphotase'",
        "'Alamine_Aminotransferase'",
        "'Aspartate_Aminotransferase'",
        "'Total_Protiens'",
        "'Albumin'",
        "'Albumin_and_Globulin_Ratio'",
        "'Age'",
        "'Age'",
        "'Gender'",
        "'Gender'",
        "'Total_Bilirubin'",
        "'Total Bilirubin'",
        "'Direct_Bilirubin'",
        "'Direct Bilirubin'",
        "'Alkaline_Phosphotase'",
        "'Alkaline Phosphotase'",
        "'Alamine_Aminotransferase'",
        "'Alamine Aminotransferase'",
        "'Aspartate_Aminotransferase'",
        "'Aspartate Aminotransferase'",
        "'Total_Protiens'",
        "'Total Proteins'",
        "'Albumin'",
        "'Albumin'",
        "'Albumin_and_Globulin_Ratio'",
        "'Albumin and Globulin Ratio'",
        "'kidney/random_forest_model.joblib'",
        "'random string'",
        "'static/uploads'",
        "'jpeg'",
        "'jpg'",
        "'png'",
        "'gif'",
        "'UPLOAD_FOLDER'",
        "\"f684818e6adcfd2f34c8b503fb65c0d9\"",
        "'GOOGLE_API_KEY'",
        "\"AIzaSyDvIm1BXLGilc89Knx0VWTfRhB5pFxgRYY\"",
        "\"REPLICATE_API_TOKEN\"",
        "\"r8_2WDgIAXk3cu9Ug1jhTzt2QtTPunCtmk0JvAUm\"",
        "\"meta/llama-2-70b-chat\"",
        "'SESSION_TYPE'",
        "'filesystem'",
        "'SESSION_PERMANENT'",
        "'SESSION_USE_SIGNER'",
        "'SESSION_KEY_PREFIX'",
        "'emotion-chatbot'",
        "'SESSION_FILE_THRESHOLD'",
        "'emotion_detected'",
        "'conversation_history'",
        "f\"You are an emotion-powered chatbot. Your responses are influenced by the user's emotions. Currently, the user is {emotion}. You must act as a psychiatric counselor and professional psychologist and provide mental support to the user and also provide enough exclamations.\"",
        "'RGB'",
        "\"If it is a human being, only say the emotion they are expressing, and if it is not a human being, just say that it is not a human being.\"",
        "\"neutral\"",
        "\"neutral\"",
        "'.'",
        "'.jpg'",
        "b'--frame\\r\\n'",
        "b'Content-Type: image/jpeg\\r\\n\\r\\n'",
        "b'\\r\\n'",
        "'mediplus-lite/gen_medicine.joblib'",
        "\"An error occurred during prediction:\"",
        "'mediplus-lite/my_model.h5'",
        "\"Normal\"",
        "\"Glaucoma\"",
        "\"Cataract\"",
        "\"Retina Disease\"",
        "\"mediplus-lite/dental_model9.h5\"",
        "\"Calculus\"",
        "\"Data caries\"",
        "\"Gingivitis\"",
        "\"Hypodontia\"",
        "\"Mouth Ulcer\"",
        "\"Tooth Discoloration\"",
        "'float32'",
        "'Hospital_ID'",
        "f'H{i}'",
        "'Total_Beds'",
        "'ICU_Beds'",
        "'available_ICU_beds'",
        "'General_Beds'",
        "'available_General_beds'",
        "'Cardiology_Beds'",
        "'available_Cardiology_beds'",
        "'Orthopaedic_Beds'",
        "'available_Orthopaedic_beds'",
        "'Special_Beds'",
        "'available_Special_beds'",
        "'Maternity_Beds'",
        "'available_Maternity_beds'",
        "'occupied_beds'",
        "'available_beds'",
        "'ICU_Severity'",
        "'ICU_Admission_Type'",
        "'General_Severity'",
        "'General_Admission_Type'",
        "'Cardiology_Severity'",
        "'Cardiology_Admission_Type'",
        "'Orthopaedic_Severity'",
        "'Orthopaedic_Admission_Type'",
        "'Special_Severity'",
        "'Special_Admission_Type'",
        "'Maternity_Severity'",
        "'Maternity_Admission_Type'",
        "'Total_Beds'",
        "'ICU_Beds'",
        "'available_ICU_beds'",
        "'ICU_Beds'",
        "'General_Beds'",
        "'available_General_beds'",
        "'General_Beds'",
        "'Cardiology_Beds'",
        "'available_Cardiology_beds'",
        "'Cardiology_Beds'",
        "'Orthopaedic_Beds'",
        "'available_Orthopaedic_beds'",
        "'Orthopaedic_Beds'",
        "'Special_Beds'",
        "'available_Special_beds'",
        "'Special_Beds'",
        "'Maternity_Beds'",
        "'available_Maternity_beds'",
        "'Maternity_Beds'",
        "'occupied_beds'",
        "'available_beds'",
        "'ICU'",
        "'General'",
        "'Cardiology'",
        "'Orthopaedic'",
        "'Special'",
        "'Maternity'",
        "f'{bed_type}_Severity'",
        "'Critical'",
        "'Moderate'",
        "'Stable'",
        "f'{bed_type}_Admission_Type'",
        "'Emergency'",
        "'Scheduled'",
        "'ICU'",
        "'General'",
        "'Cardiology'",
        "'Orthopaedic'",
        "'Special'",
        "'Maternity'",
        "f'available_{bed_type}_beds'",
        "f'{bed_type}_Beds'",
        "f'available_{bed_type}_beds'",
        "'ICU'",
        "'General'",
        "'Cardiology'",
        "'Orthopaedic'",
        "'Special'",
        "'Maternity'",
        "'available_beds'",
        "'occupied_beds'",
        "'Total_Beds'",
        "'available_beds'",
        "\"/\"",
        "\"home1.html\"",
        "\"user\"",
        "\"user\"",
        "\"/callback\"",
        "\"GET\"",
        "\"POST\"",
        "\"user\"",
        "\"/index\"",
        "\"/login1\"",
        "\"callback\"",
        "\"/logout1\"",
        "\"https://\"",
        "\"AUTH0_DOMAIN\"",
        "\"/v2/logout?\"",
        "\"returnTo\"",
        "\"home\"",
        "\"client_id\"",
        "\"AUTH0_CLIENT_ID\"",
        "\"Dentist\"",
        "\"Cardiologist\"",
        "\"Dermatologist\"",
        "\"Orthopedic\"",
        "\"Mumbai\"",
        "\"Delhi\"",
        "\"Bangalore\"",
        "\"Kolkata\"",
        "\"Chennai\"",
        "'/index'",
        "'index.html'",
        "'/diabetes'",
        "'GET'",
        "'POST'",
        "'POST'",
        "\"Based on the provided input, there is no risk of diabetes.\"",
        "\"Based on the provided input, there is a risk of diabetes.\"",
        "'diabetes.html'",
        "'diabetes.html'",
        "'/liver'",
        "'liver.html'",
        "'/predict'",
        "'POST'",
        "'Gender'",
        "'Gender'",
        "'Gender'",
        "\"You have a liver disease.\"",
        "\"You don't have a liver disease.\"",
        "'liver.html'",
        "'liver.html'",
        "'heart/heart.csv'",
        "'cp'",
        "'restecg'",
        "'thal'",
        "'sex'",
        "'fbs'",
        "'exang'",
        "'slope'",
        "'ca'",
        "'target'",
        "'heart/gradient_boosting_model.joblib'",
        "'rb'",
        "'target'",
        "'age'",
        "'Age'",
        "'sex'",
        "'Gender (0 = male, 1 = female)'",
        "'cp'",
        "'Chest pain type (0: Typical angina, 1: Atypical angina, 2: Non-anginal pain, 3: Asymptomatic)'",
        "'trestbps'",
        "'Resting blood pressure (mm Hg)'",
        "'chol'",
        "'Serum cholesterol (mg/dl)'",
        "'fbs'",
        "'Fasting blood sugar level (1 = above 120 mg/dl, 0 = below 120 mg/dl)'",
        "'restecg'",
        "'Resting electrocardiographic results (0: Normal, 1: ST-T wave abnormality, 2: Left ventricular hypertrophy)'",
        "'thalach'",
        "'Maximum heart rate achieved during a stress test'",
        "'exang'",
        "'Exercise-induced angina (1 = yes, 0 = no)'",
        "'oldpeak'",
        "'ST depression induced by exercise relative to rest'",
        "'slope'",
        "'Slope of the peak exercise ST segment (0: Upsloping, 1: Flat, 2: Downsloping)'",
        "'ca'",
        "'Number of major vessels colored by fluoroscopy (0-4)'",
        "'thal'",
        "'Thalium stress test result (0: Normal, 1: Fixed defect, 2: Reversible defect, 3: Not described)'",
        "'/kidney'",
        "'kidney.html'",
        "'/predict1'",
        "'POST'",
        "\"You have a Kidney Disease\"",
        "\"You have no Kidney Disease\"",
        "'kidney.html'",
        "'kideny.html'",
        "'/heart'",
        "'heart.html'",
        "'/predict_heart'",
        "'POST'",
        "'sex'",
        "'cp'",
        "'restecg'",
        "'thal'",
        "\"Heart Disease\"",
        "\"No Heart Disease\"",
        "'heart.html'",
        "'heart.html'",
        "\"/home\"",
        "'mediplus-lite/database.db'",
        "'SELECT productId, name, price, description, image, stock FROM products'",
        "'SELECT categoryId, name FROM categories'",
        "'home.html'",
        "'mediplus-lite/database.db'",
        "'email'",
        "''",
        "\"SELECT userId, firstName FROM users WHERE email = '\"",
        "'email'",
        "\"'\"",
        "\"SELECT count(productId) FROM kart WHERE userId = \"",
        "\"/addItem\"",
        "\"GET\"",
        "\"POST\"",
        "\"POST\"",
        "'name'",
        "'price'",
        "'description'",
        "'stock'",
        "'category'",
        "'image'",
        "'UPLOAD_FOLDER'",
        "'mediplus-lite/database.db'",
        "\"Added successfully\"",
        "\"Error occured\"",
        "'home'",
        "\"/removeItem\"",
        "'productId'",
        "'mediplus-lite/database.db'",
        "'DELETE FROM products WHERE productID = '",
        "\"Deleted successsfully\"",
        "\"Error occured\"",
        "'home'",
        "\"/displayCategory\"",
        "\"categoryId\"",
        "'mediplus-lite/database.db'",
        "\"SELECT products.productId, products.name, products.price, products.image, categories.name FROM products, categories WHERE products.categoryId = categories.categoryId AND categories.categoryId = \"",
        "'displayCategory.html'",
        "\"/account/profile\"",
        "'email'",
        "'home'",
        "\"profileHome.html\"",
        "\"/account/profile/edit\"",
        "'email'",
        "'home'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId, email, firstName, lastName, address1, address2, zipcode, city, state, country, phone FROM users WHERE email = '\"",
        "'email'",
        "\"'\"",
        "\"editProfile.html\"",
        "\"/account/profile/changePassword\"",
        "\"GET\"",
        "\"POST\"",
        "'email'",
        "'loginForm'",
        "\"POST\"",
        "'oldpassword'",
        "'newpassword'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId, password FROM users WHERE email = '\"",
        "'email'",
        "\"'\"",
        "\"UPDATE users SET password = ? WHERE userId = ?\"",
        "\"Changed successfully\"",
        "\"Failed\"",
        "\"changePassword.html\"",
        "\"Wrong password\"",
        "\"changePassword.html\"",
        "\"changePassword.html\"",
        "\"/updateProfile\"",
        "\"GET\"",
        "\"POST\"",
        "'POST'",
        "'email'",
        "'firstName'",
        "'lastName'",
        "'address1'",
        "'address2'",
        "'zipcode'",
        "'city'",
        "'state'",
        "'country'",
        "'phone'",
        "'mediplus-lite/database.db'",
        "'UPDATE users SET firstName = ?, lastName = ?, address1 = ?, address2 = ?, zipcode = ?, city = ?, state = ?, country = ?, phone = ? WHERE email = ?'",
        "\"Saved Successfully\"",
        "\"Error occured\"",
        "'editProfile'",
        "\"/loginForm\"",
        "'email'",
        "'home'",
        "'login.html'",
        "''",
        "\"/login\"",
        "'POST'",
        "'GET'",
        "'POST'",
        "'email'",
        "'password'",
        "'email'",
        "'home'",
        "'Invalid UserId / Password'",
        "'login.html'",
        "\"/productDescription\"",
        "'productId'",
        "'mediplus-lite/database.db'",
        "'SELECT productId, name, price, description, image, stock FROM products WHERE productId = '",
        "\"productDescription.html\"",
        "\"/addToCart\"",
        "'email'",
        "'loginForm'",
        "'productId'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId FROM users WHERE email = '\"",
        "'email'",
        "\"'\"",
        "\"INSERT INTO kart (userId, productId) VALUES (?, ?)\"",
        "\"Added successfully\"",
        "\"Error occured\"",
        "'home'",
        "\"/cart\"",
        "'email'",
        "'loginForm'",
        "'email'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId FROM users WHERE email = '\"",
        "\"'\"",
        "\"SELECT products.productId, products.name, products.price, products.image FROM products, kart WHERE products.productId = kart.productId AND kart.userId = \"",
        "\"cart.html\"",
        "\"/checkout\"",
        "'email'",
        "'loginForm'",
        "'email'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId FROM users WHERE email = '\"",
        "\"'\"",
        "\"SELECT products.productId, products.name, products.price, products.image FROM products, kart WHERE products.productId = kart.productId AND kart.userId = \"",
        "\"checkout.html\"",
        "\"/instamojo\"",
        "\"instamojo.html\"",
        "\"/removeFromCart\"",
        "'email'",
        "'loginForm'",
        "'email'",
        "'productId'",
        "'mediplus-lite/database.db'",
        "\"SELECT userId FROM users WHERE email = '\"",
        "\"'\"",
        "\"DELETE FROM kart WHERE userId = \"",
        "\" AND productId = \"",
        "\"removed successfully\"",
        "\"error occured\"",
        "'home'",
        "\"/logout\"",
        "'email'",
        "'home'",
        "'mediplus-lite/database.db'",
        "'SELECT email, password FROM users'",
        "\"/register\"",
        "'GET'",
        "'POST'",
        "'POST'",
        "'password'",
        "'email'",
        "'firstName'",
        "'lastName'",
        "'address1'",
        "'address2'",
        "'zipcode'",
        "'city'",
        "'state'",
        "'country'",
        "'phone'",
        "'mediplus-lite/database.db'",
        "'INSERT INTO users (password, email, firstName, lastName, address1, address2, zipcode, city, state, country, phone) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'",
        "\"Registered Successfully\"",
        "\"Error occured\"",
        "\"login.html\"",
        "\"/registerationForm\"",
        "\"register.html\"",
        "'.'",
        "'.'",
        "\"ADMIN_ADDRESS\"",
        "\"W3_PROVIDER\"",
        "\"SECRET_KEY\"",
        "\"gasPrice\"",
        "\"gasLimit\"",
        "'mediplus-lite/payment_info.json'",
        "'r'",
        "'SECRET_KEY'",
        "'mediplus-lite/payment_info.json'",
        "'r+'",
        "\"%Y-%m-%d %H:%M:%S\"",
        "'timestamp'",
        "f\"Payment received for {w3.from_wei(balance, 'ether')}\"",
        "'ether'",
        "'private_key'",
        "'interval'",
        "'/payment'",
        "'payment.html'",
        "'/generate_payment_address'",
        "'POST'",
        "'amount'",
        "'error'",
        "'Missing amount parameter'",
        "\"amount\"",
        "\"timestamp\"",
        "\"private_key\"",
        "'payment_address'",
        "'amount'",
        "'valid_until'",
        "'error'",
        "'Failed to connect to Ethereum node'",
        "'error'",
        "f'Error processing request: {str(e)}'",
        "'/check_payment/<payment_address>'",
        "'timestamp'",
        "'status'",
        "'1'",
        "'balance'",
        "'ether'",
        "'status'",
        "'0'",
        "'error'",
        "'Payment expired'",
        "'error'",
        "'Invalid payment address'",
        "'error'",
        "'Failed to connect to Ethereum node'",
        "'gwei'",
        "'from'",
        "'to'",
        "'value'",
        "'gas'",
        "'gasPrice'",
        "'gwei'",
        "'nonce'",
        "'chainId'",
        "f\"Payment information sent to admin. Transaction Hash: {transaction_hash.hex()}\"",
        "\"/emotion\"",
        "\"emotion.html\"",
        "\"/\"",
        "\"POST\"",
        "'image'",
        "'userPrompt'",
        "f\"{system_prompt}\\nUser: {user_prompt}\"",
        "\"role\"",
        "\"system\"",
        "\"content\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"\"",
        "\"debug\"",
        "\"top_p\"",
        "\"prompt\"",
        "\"messages\"",
        "\"temperature\"",
        "\"max_new_tokens\"",
        "\"min_new_tokens\"",
        "'emotion'",
        "'chatbot_response'",
        "f\"Error processing image: {str(e)}\"",
        "'error'",
        "'Internal Server Error'",
        "\"/video_feed\"",
        "'multipart/x-mixed-replace; boundary=frame'",
        "'/general'",
        "'general.html'",
        "'/predict2'",
        "'POST'",
        "'POST'",
        "'symptoms'",
        "','",
        "'general.html'",
        "f'Predicted Disease: {result}'",
        "'general.html'",
        "'Prediction failed.'",
        "'/eye'",
        "'eye.html'",
        "'/predict3'",
        "'POST'",
        "'POST'",
        "'file'",
        "'eye.html'",
        "'No file provided'",
        "'file'",
        "''",
        "'eye.html'",
        "'No file selected'",
        "'eye.html'",
        "f'Predicted Disease: {result}'",
        "'eye.html'",
        "f'Error: {str(e)}'",
        "'/teeth'",
        "'teeth.html'",
        "'/predict4'",
        "'POST'",
        "'POST'",
        "'file'",
        "'teeth.html'",
        "'No file provided'",
        "'file'",
        "''",
        "'teeth.html'",
        "'No file selected'",
        "'teeth.html'",
        "f'Predicted Disease: {result}'",
        "'teeth.html'",
        "f'Error: {str(e)}'",
        "'/manage'",
        "'Hospital_ID'",
        "'manage.html'",
        "'/bed'",
        "'POST'",
        "'hospital'",
        "'bed_type'",
        "'Hospital_ID'",
        "f'available_{bed_type}_beds'",
        "'bed.html'",
        "'/admit'",
        "'POST'",
        "'hospital'",
        "'bed_type'",
        "'Hospital_ID'",
        "f'available_{bed_type}_beds'",
        "f'available_{bed_type}_beds'",
        "'severity'",
        "'patient_name'",
        "'contact_number'",
        "'status'",
        "'success'",
        "'message'",
        "'Admission request accepted.'",
        "'hospital'",
        "'bed_type'",
        "'status'",
        "'error'",
        "'message'",
        "'Sorry, no available beds for the selected type at the moment.'",
        "'/doctor'",
        "'doctor.html'",
        "'/book_appointment'",
        "'POST'",
        "'POST'",
        "'name'",
        "'email'",
        "'phone'",
        "'doctor_type'",
        "'location'",
        "'date'",
        "'name'",
        "'email'",
        "'phone'",
        "'doctor_type'",
        "'location'",
        "'date'",
        "'doctor'",
        "'doctor'",
        "'appointment_details'",
        "'/appointment_details/<appointment_id>'",
        "'appointment_details.html'",
        "\"Appointment not found.\"",
        "'/portfolio-details'",
        "'portfolio-details.html'",
        "'/beginner'",
        "'beginner.html'",
        "'/intermediate'",
        "'intermediate.html'",
        "'/expert'",
        "'expert.html'",
        "'__main__'",
        "'gemini-pro-vision'",
        "\"PORT\""
    ],
    "variables": [
        "ENV_FILE",
        "app",
        "app",
        "secret_key",
        "oauth",
        "model_filename",
        "loaded_model",
        "parameters",
        "user_data",
        "value",
        "user_data",
        "param",
        "preventive_measures",
        "dietary_plan",
        "best_classifier",
        "column_names",
        "column_name_mapping",
        "model_filename",
        "rd_clf",
        "app",
        "secret_key",
        "UPLOAD_FOLDER",
        "ALLOWED_EXTENSIONS",
        "app",
        "secret_key",
        "model_name",
        "emotion_detected_key",
        "conversation_history_key",
        "img_bytes",
        "img",
        "response",
        "description",
        "emotion",
        "emotion",
        "cap",
        "success",
        "frame",
        "_",
        "buffer",
        "frame",
        "model_rf",
        "scaler",
        "columns",
        "user_input",
        "user_input",
        "symptoms",
        "user_input_scaled",
        "prediction",
        "model",
        "class_to_disease",
        "image",
        "image",
        "image",
        "image",
        "preprocessed_image",
        "predictions",
        "predicted_class",
        "disease_name",
        "model",
        "class_labels",
        "resized_image",
        "input_image",
        "predictions",
        "predicted_class",
        "predicted_disease",
        "data",
        "total_beds",
        "df",
        "change",
        "new_available",
        "available_bed_col",
        "index",
        "available_bed_col",
        "all_specialty_beds",
        "index",
        "index",
        "data",
        "update_thread",
        "token",
        "session",
        "appointments",
        "doctor_types",
        "locations",
        "user_input_df",
        "prediction",
        "result_message",
        "preventive_measures",
        "dietary_plan",
        "result_message",
        "preventive_measures",
        "dietary_plan",
        "user_input_data",
        "value",
        "user_input_data",
        "col",
        "le",
        "user_input_data",
        "user_input_df",
        "user_input_df",
        "prediction",
        "result_message",
        "df",
        "df_encoded",
        "features_to_convert",
        "df_encoded",
        "feature",
        "best_gb",
        "X",
        "column_name_mapping",
        "user_input",
        "user_input_array",
        "prediction",
        "result",
        "user_input_data",
        "value",
        "user_input_data",
        "col",
        "user_input_df",
        "user_input_df",
        "user_input_df",
        "prediction",
        "result_message",
        "loggedIn",
        "firstName",
        "noOfItems",
        "cur",
        "itemData",
        "categoryData",
        "itemData",
        "cur",
        "loggedIn",
        "firstName",
        "noOfItems",
        "loggedIn",
        "userId",
        "firstName",
        "noOfItems",
        "name",
        "price",
        "description",
        "stock",
        "categoryId",
        "image",
        "filename",
        "imagename",
        "cur",
        "msg",
        "msg",
        "productId",
        "cur",
        "msg",
        "msg",
        "loggedIn",
        "firstName",
        "noOfItems",
        "categoryId",
        "cur",
        "data",
        "categoryName",
        "data",
        "loggedIn",
        "firstName",
        "noOfItems",
        "loggedIn",
        "firstName",
        "noOfItems",
        "cur",
        "profileData",
        "oldPassword",
        "oldPassword",
        "newPassword",
        "newPassword",
        "cur",
        "userId",
        "password",
        "msg",
        "msg",
        "msg",
        "email",
        "firstName",
        "lastName",
        "address1",
        "address2",
        "zipcode",
        "city",
        "state",
        "country",
        "phone",
        "cur",
        "msg",
        "msg",
        "email",
        "password",
        "session",
        "error",
        "loggedIn",
        "firstName",
        "noOfItems",
        "productId",
        "cur",
        "productData",
        "productId",
        "cur",
        "userId",
        "msg",
        "msg",
        "loggedIn",
        "firstName",
        "noOfItems",
        "email",
        "cur",
        "userId",
        "products",
        "totalPrice",
        "loggedIn",
        "firstName",
        "noOfItems",
        "email",
        "cur",
        "userId",
        "products",
        "totalPrice",
        "email",
        "productId",
        "cur",
        "userId",
        "msg",
        "msg",
        "con",
        "cur",
        "data",
        "password",
        "email",
        "firstName",
        "lastName",
        "address1",
        "address2",
        "zipcode",
        "city",
        "state",
        "country",
        "phone",
        "cur",
        "msg",
        "msg",
        "ans",
        "i",
        "curr",
        "ADMIN_ADDRESS",
        "W3_PROVIDER",
        "SECRET_KEY",
        "gasPrice",
        "gasLimit",
        "payment_data",
        "w3",
        "scheduler",
        "file_data",
        "dt_object",
        "formatted_time",
        "timestamp",
        "current_time",
        "balance",
        "payment_amount",
        "new_address",
        "payment_address",
        "private_key",
        "timestamp",
        "payment_data",
        "payment_address",
        "timestamp",
        "current_time",
        "balance",
        "amount",
        "amount",
        "admin_transaction",
        "signed_transaction",
        "transaction_hash",
        "session",
        "emotion_detected_key",
        "session",
        "conversation_history_key",
        "emotion_detected",
        "conversation_history",
        "image_file",
        "image_array",
        "emotion",
        "system_prompt",
        "user_prompt",
        "user_input",
        "session",
        "conversation_history_key",
        "generated_response",
        "session",
        "emotion_detected_key",
        "user_symptoms",
        "result",
        "file",
        "image",
        "result",
        "file",
        "image",
        "result",
        "hospitals",
        "hospital_id",
        "bed_type",
        "hospital_data",
        "available_beds",
        "hospital_id",
        "bed_type",
        "hospital_data",
        "hospital_index",
        "current_available_beds",
        "severity",
        "patient_name",
        "contact_number",
        "response_data",
        "response_data",
        "name",
        "email",
        "phone",
        "doctor_type",
        "location",
        "date",
        "appointment_id",
        "appointments",
        "appointment_id",
        "appointment",
        "vision_model"
    ],
    "comments": [
        "Load the saved model",
        "Or .sav if you used pickle",
        "Function to get user input from the HTML form",
        "Function to generate preventive measures and dietary plan",
        "Load the trained model",
        "Define the column names",
        "Mapping of user-friendly column names to the actual column names",
        "Load the trained model",
        "Update with the correct path",
        "Change this to a random secret key",
        "Replace with your actual Gemini API Key",
        "Configure session to use signed cookies",
        "Increase if needed",
        "session.init_app(app)",
        "Global variables to store the detected emotion and conversation history",
        "Convert image array to bytes",
        "Create PIL Image from bytes with explicit format (JPEG)",
        "0 is the default camera index",
        "Load the trained model, scaler, and feature columns",
        "Function to make predictions using the trained model",
        "Create a DataFrame with user input symptoms",
        "Feature scaling for user input",
        "Make prediction",
        "Load the saved model",
        "Define a mapping between class labels and disease names",
        "Function to preprocess input image",
        "Resize the image to match the input size of the model",
        "Convert BGR to RGB",
        "Normalize the image",
        "Expand dimensions to match the model input shape",
        "Preprocess the input image",
        "Perform inference",
        "Get the predicted class label",
        "Get the corresponding disease name from the mapping",
        "Load the trained model",
        "Define a dictionary mapping class indices to class labels",
        "Function to predict disease from an uploaded image",
        "Resize the image to match the expected input shape of the model",
        "Convert the image to the format expected by the model (e.g., converting to float and normalizing)",
        "Make prediction",
        "Get the predicted class label",
        "Initial data generation",
        "Start a thread for data update",
        "Controllers API",
        "Sample data for doctor types and locations",
        "Define the route for the home page",
        "Get input from the user",
        "Make a prediction",
        "No recommendations for low risk",
        "If it's a GET request, render the form",
        "Function to render the index page",
        "Function to make a prediction based on user input",
        "Get user input from the form",
        "Convert 'Gender' to numerical values using label encoding",
        "Create a DataFrame with user input",
        "Ensure the user input DataFrame has the same columns as the training data",
        "Make prediction using the trained model",
        "Print the appropriate message based on the prediction",
        "Implementing one-hot encoding on the specified categorical features",
        "Convert the rest of the categorical variables that don't need one-hot encoding to integer data type",
        "Load the trained model",
        "Define the features (X) and the output labels (y)",
        "Mapping of user-friendly column names to the actual column names",
        "Function to make a prediction based on user input",
        "Get user input from the form",
        "Create a NumPy array with user input",
        "Make prediction using the trained model",
        "Interpret the prediction",
        "Function to render the index page",
        "Function to make a prediction based on user input",
        "Home page",
        "Fetch user details if logged in",
        "Add item to cart",
        "Upload image",
        "Remove item from cart",
        "Display all items of a category",
        "Parse form data",
        "Dictionary to store payment information with timestamps",
        "Initialize emotion and conversation history if not present in the session",
        "Retrieve emotion and conversation history from the session",
        "Add the new conversation to the session",
        "Save the detected emotion in the session",
        "Check if the post request has the file part",
        "Check if the file is selected",
        "Check if the file is valid",
        "Read the image",
        "Make prediction",
        "Check if the post request has the file part",
        "Check if the file is selected",
        "Check if the file is valid",
        "Read the image",
        "Make prediction",
        "Check if the DataFrame is not empty",
        "Check if the hospital_data DataFrame is not empty",
        "Process patient information (severity, patient name, contact number)",
        "You can store or process the patient information as needed",
        "Generate a unique ID for the appointment",
        "Store the appointment details in the dictionary",
        "Additional routes for the portfolio app"
    ],
    "docstrings": [
        "'''INSERT INTO products (name, price, description, image, stock, categoryId) VALUES (?, ?, ?, ?, ?, ?)'''"
    ],
    "functions": [
        "get_user_input",
        "generate_recommendations",
        "get_system_prompt",
        "detect_emotion",
        "generate_frames",
        "make_prediction",
        "preprocess_image",
        "predict_image",
        "predict_disease",
        "generate_hospital_data",
        "randomize_bed_availability",
        "update_data",
        "home1",
        "callback",
        "login1",
        "logout1",
        "index",
        "diabetes",
        "liver",
        "predict",
        "kidney",
        "predict1",
        "heart",
        "predict_heart",
        "home",
        "getLoginDetails",
        "addItem",
        "removeItem",
        "displayCategory",
        "profileHome",
        "editProfile",
        "changePassword",
        "updateProfile",
        "loginForm",
        "login",
        "productDescription",
        "addToCart",
        "cart",
        "checkout",
        "instamojo",
        "removeFromCart",
        "logout",
        "is_valid",
        "register",
        "registrationForm",
        "allowed_file",
        "parse",
        "save_payment_info_to_json",
        "timestamp_to_datetime",
        "check_payments",
        "payment",
        "generate_payment_address",
        "check_payment",
        "send_payment_info_to_admin",
        "emotion",
        "process_image",
        "video_feed",
        "general",
        "predict2",
        "eye",
        "predict3",
        "teeth",
        "predict4",
        "manage",
        "show_beds",
        "admit_request",
        "doctor",
        "book_appointment",
        "appointment_details",
        "portfolio_details",
        "beginner",
        "intermediate",
        "expert"
    ],
    "classes": []
}