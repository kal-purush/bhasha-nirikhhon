{
    "identifiers": [
        "pathlib",
        "Path",
        "dynsight",
        "h5py",
        "numpy",
        "np",
        "h5py",
        "File",
        "input_file",
        "file",
        "file",
        "traj_name",
        "dynsight",
        "hdf5er",
        "create_universe_from_slice",
        "tgroup",
        "trajectory",
        "i",
        "len",
        "lens_cutoffs",
        "dynsight",
        "lens",
        "list_neighbours_along_trajectory",
        "universe",
        "cutoff",
        "lens_cutoffs",
        "i",
        "_",
        "dynsight",
        "lens",
        "neighbour_change_in_time",
        "neig_counts",
        "np",
        "array",
        "lens",
        "nn",
        "h5py",
        "File",
        "input_file",
        "in_file",
        "np",
        "array",
        "in_file",
        "i",
        "i",
        "h5py",
        "File",
        "output_file",
        "out_file",
        "out_file",
        "create_group",
        "i",
        "out_file",
        "i",
        "create_dataset",
        "i",
        "data",
        "test_lens_nn",
        "np",
        "array_equal",
        "check_lens_nn",
        "test_lens_nn",
        "lens_cutoffs",
        "i",
        "output_file",
        "Path",
        "output_file",
        "unlink"
    ],
    "literals": [
        "\"tests/systems/2_particles.hdf5\"",
        "\"tests/systems/2_particles_test.hdf5\"",
        "\"2_particles\"",
        "\"r\"",
        "\"Trajectories\"",
        "\"r\"",
        "f\"LENS_{i}\"",
        "f\"LENS_{i}\"",
        "\"w\"",
        "f\"LENS_test_{i}\"",
        "f\"LENS_test_{i}\"",
        "f\"LENS_test_{i}\"",
        "f\"LENS analyses provided different values \"",
        "f\"compared to the control system \"",
        "f\"for r_cut: {lens_cutoffs[i]} (results: {output_file}).\""
    ],
    "variables": [
        "input_file",
        "output_file",
        "traj_name",
        "trajectory",
        "lens_cutoffs",
        "tgroup",
        "universe",
        "neig_counts",
        "lens",
        "nn",
        "test_lens_nn",
        "check_lens_nn"
    ],
    "comments": [
        "i/o files",
        "trajectory name",
        "r_cuts",
        "create universe for lens calculation",
        "LENS (and nn) calculation for different r_cuts",
        "test array",
        "check array",
        "output file",
        "check if control and test array are equal",
        "if test passed remove test_lens_nn array from test folder"
    ],
    "docstrings": [
        "\"\"\"\nTest description:tests if a LENS calculation yields the same\n                    values (of LENS and nn) as a control calculation\n                    at different r_cut.\n\nControl file path: tests/systems/2_particles.hdf5\n\nDynsyght function tested: dynsight.lens.list_neighbours_along_trajectory()\n                          dynsight.lens.neighbour_change_in_time()\n\nr_cuts checked: 2.5, 3.0, 3.5, 4.0, 4.5, 5.0, 5.5\n\"\"\""
    ],
    "functions": [
        "test_lens_signals"
    ],
    "classes": []
}