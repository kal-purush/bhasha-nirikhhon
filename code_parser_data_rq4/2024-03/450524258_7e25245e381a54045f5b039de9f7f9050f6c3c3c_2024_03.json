{
    "identifiers": [
        "division",
        "print_function",
        "unicode_literals",
        "datetime",
        "datetime",
        "impacket",
        "version",
        "impacket",
        "dcerpc",
        "v5",
        "transport",
        "impacket",
        "dcerpc",
        "v5",
        "epm",
        "hept_map",
        "impacket",
        "dcerpc",
        "v5",
        "gkdi",
        "MSRPC_UUID_GKDI",
        "GkdiGetKey",
        "GroupKeyEnvelope",
        "impacket",
        "dcerpc",
        "v5",
        "rpcrt",
        "RPC_C_AUTHN_LEVEL_PKT_INTEGRITY",
        "RPC_C_AUTHN_LEVEL_PKT_PRIVACY",
        "impacket",
        "dpapi_ng",
        "EncryptedPasswordBlob",
        "KeyIdentifier",
        "compute_kek",
        "create_sd",
        "decrypt_plaintext",
        "unwrap_cek",
        "impacket",
        "examples",
        "logger",
        "impacket",
        "examples",
        "utils",
        "parse_credentials",
        "impacket",
        "ldap",
        "ldap",
        "ldapasn1",
        "impacket",
        "smbconnection",
        "SMBConnection",
        "SessionError",
        "pyasn1",
        "codec",
        "der",
        "decoder",
        "pyasn1_modules",
        "rfc5652",
        "argparse",
        "json",
        "logging",
        "sys",
        "staticmethod",
        "items",
        "header",
        "outputfile",
        "i",
        "col",
        "header",
        "max",
        "len",
        "row",
        "i",
        "row",
        "items",
        "colLen",
        "append",
        "max",
        "rowMaxLen",
        "len",
        "col",
        "join",
        "num",
        "width",
        "num",
        "width",
        "colLen",
        "outputFormat",
        "format",
        "header",
        "join",
        "itemLen",
        "itemLen",
        "colLen",
        "row",
        "items",
        "outputFormat",
        "format",
        "row",
        "outputfile",
        "open",
        "outputfile",
        "file",
        "join",
        "num",
        "width",
        "num",
        "width",
        "colLen",
        "file",
        "write",
        "outputFormat_file",
        "format",
        "header",
        "row",
        "items",
        "file",
        "write",
        "outputFormat_file",
        "format",
        "row",
        "strip",
        "username",
        "password",
        "domain",
        "cmdLineOptions",
        "cmdLineOptions",
        "username",
        "password",
        "domain",
        "cmdLineOptions",
        "aesKey",
        "cmdLineOptions",
        "k",
        "cmdLineOptions",
        "dc_ip",
        "cmdLineOptions",
        "dc_host",
        "cmdLineOptions",
        "computer",
        "cmdLineOptions",
        "outputfile",
        "cmdLineOptions",
        "hashes",
        "__lmhash",
        "__nthash",
        "cmdLineOptions",
        "hashes",
        "split",
        "__domain",
        "split",
        "i",
        "domainParts",
        "baseDN",
        "i",
        "baseDN",
        "rawEncryptedLAPSBlob",
        "EncryptedPasswordBlob",
        "rawEncryptedLAPSBlob",
        "decoder",
        "decode",
        "encryptedLAPSBlob",
        "asn1Spec",
        "rfc5652",
        "ContentInfo",
        "parsed_cms_data",
        "decoder",
        "decode",
        "enveloped_data_blob",
        "asn1Spec",
        "rfc5652",
        "EnvelopedData",
        "parsed_enveloped_data",
        "recipient_infos",
        "kek_recipient_info",
        "KeyIdentifier",
        "kek_identifier",
        "decoder",
        "decode",
        "kek_identifier",
        "tmp",
        "asOctets",
        "decode",
        "create_sd",
        "sid",
        "e",
        "logging",
        "error",
        "e",
        "key_id",
        "__KDSCache",
        "__KDSCache",
        "key_id",
        "hept_map",
        "destHost",
        "__target",
        "remoteIf",
        "MSRPC_UUID_GKDI",
        "protocol",
        "transport",
        "DCERPCTransportFactory",
        "stringBinding",
        "hasattr",
        "rpctransport",
        "rpctransport",
        "set_credentials",
        "username",
        "__username",
        "password",
        "__password",
        "domain",
        "__domain",
        "lmhash",
        "__lmhash",
        "nthash",
        "__nthash",
        "__doKerberos",
        "rpctransport",
        "set_kerberos",
        "__doKerberos",
        "kdcHost",
        "__target",
        "__kdcIP",
        "rpctransport",
        "setRemoteHost",
        "__kdcIP",
        "rpctransport",
        "setRemoteName",
        "__target",
        "rpctransport",
        "get_dce_rpc",
        "dce",
        "set_auth_level",
        "RPC_C_AUTHN_LEVEL_PKT_INTEGRITY",
        "dce",
        "set_auth_level",
        "RPC_C_AUTHN_LEVEL_PKT_PRIVACY",
        "logging",
        "debug",
        "stringBinding",
        "dce",
        "connect",
        "e",
        "logging",
        "error",
        "e",
        "laps_enabled",
        "logging",
        "debug",
        "dce",
        "bind",
        "MSRPC_UUID_GKDI",
        "e",
        "logging",
        "error",
        "e",
        "laps_enabled",
        "logging",
        "debug",
        "logging",
        "debug",
        "GkdiGetKey",
        "dce",
        "target_sd",
        "target_sd",
        "l0",
        "key_id",
        "l1",
        "key_id",
        "l2",
        "key_id",
        "root_key_id",
        "key_id",
        "GroupKeyEnvelope",
        "join",
        "resp",
        "__KDSCache",
        "gke",
        "gke",
        "compute_kek",
        "gke",
        "key_id",
        "parsed_enveloped_data",
        "decoder",
        "decode",
        "enc_content_parameter",
        "iv",
        "unwrap_cek",
        "kek",
        "kek_recipient_info",
        "decrypt_plaintext",
        "cek",
        "iv",
        "remaining",
        "target",
        "SMBConnection",
        "target",
        "target",
        "s",
        "login",
        "OSError",
        "e",
        "e",
        "find",
        "SessionError",
        "e",
        "e",
        "find",
        "s",
        "getServerName",
        "target",
        "s",
        "logoff",
        "s",
        "getServerName",
        "staticmethod",
        "t",
        "t",
        "t",
        "t",
        "__kdcHost",
        "__kdcHost",
        "__kdcIP",
        "__kdcIP",
        "__domain",
        "__doKerberos",
        "logging",
        "info",
        "getMachineName",
        "__target",
        "ldap",
        "LDAPConnection",
        "__target",
        "baseDN",
        "__kdcIP",
        "__doKerberos",
        "ldapConnection",
        "login",
        "__username",
        "__password",
        "__domain",
        "__lmhash",
        "__nthash",
        "ldapConnection",
        "kerberosLogin",
        "__username",
        "__password",
        "__domain",
        "__lmhash",
        "__nthash",
        "__aesKey",
        "kdcHost",
        "__kdcIP",
        "ldap",
        "LDAPSessionError",
        "e",
        "e",
        "find",
        "ldap",
        "LDAPConnection",
        "__target",
        "baseDN",
        "__kdcIP",
        "__doKerberos",
        "ldapConnection",
        "login",
        "__username",
        "__password",
        "__domain",
        "__lmhash",
        "__nthash",
        "ldapConnection",
        "kerberosLogin",
        "__username",
        "__password",
        "__domain",
        "__lmhash",
        "__nthash",
        "__aesKey",
        "kdcHost",
        "__kdcIP",
        "e",
        "find",
        "logging",
        "critical",
        "__kdcIP",
        "__kdcHost",
        "logging",
        "critical",
        "__targetComputer",
        "searchFilter",
        "__targetComputer",
        "searchFilter",
        "ldapasn1",
        "SimplePagedResultsControl",
        "criticality",
        "size",
        "ldapConnection",
        "search",
        "searchFilter",
        "searchFilter",
        "attributes",
        "searchControls",
        "paged_search_control",
        "ldap",
        "LDAPSearchError",
        "e",
        "e",
        "getErrorString",
        "find",
        "logging",
        "debug",
        "e",
        "getAnswers",
        "logging",
        "debug",
        "len",
        "resp",
        "len",
        "resp",
        "__targetComputer",
        "logging",
        "error",
        "__targetComputer",
        "logging",
        "error",
        "item",
        "resp",
        "isinstance",
        "item",
        "ldapasn1",
        "SearchResultEntry",
        "attribute",
        "item",
        "attribute",
        "attribute",
        "attribute",
        "getLAPSv2Decrypt",
        "attribute",
        "json",
        "loads",
        "plaintext",
        "decode",
        "r",
        "r",
        "attribute",
        "attribute",
        "attribute",
        "datetime",
        "fromtimestamp",
        "getUnixTime",
        "attribute",
        "strftime",
        "attribute",
        "attribute",
        "asOctets",
        "decode",
        "sAMAccountName",
        "lapsPassword",
        "sAMAccountName",
        "lapsUsername",
        "lapsPassword",
        "lapsPasswordExpiration",
        "lapsv2",
        "element",
        "element",
        "element",
        "entry",
        "entries",
        "append",
        "entry",
        "e",
        "logging",
        "error",
        "e",
        "len",
        "entries",
        "__targetComputer",
        "logging",
        "error",
        "__targetComputer",
        "logging",
        "error",
        "printTable",
        "entries",
        "__outputFile",
        "version",
        "BANNER",
        "argparse",
        "ArgumentParser",
        "add_help",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument_group",
        "group",
        "add_argument",
        "action",
        "metavar",
        "help",
        "group",
        "add_argument",
        "action",
        "help",
        "group",
        "add_argument",
        "action",
        "help",
        "group",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument_group",
        "group",
        "add_argument",
        "action",
        "metavar",
        "help",
        "group",
        "add_argument",
        "action",
        "metavar",
        "help",
        "len",
        "sys",
        "argv",
        "parser",
        "print_help",
        "sys",
        "exit",
        "parser",
        "parse_args",
        "logger",
        "init",
        "options",
        "ts",
        "options",
        "debug",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "debug",
        "version",
        "getInstallationPath",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "INFO",
        "parse_credentials",
        "options",
        "target",
        "domain",
        "logging",
        "critical",
        "sys",
        "exit",
        "password",
        "username",
        "options",
        "hashes",
        "options",
        "no_pass",
        "options",
        "aesKey",
        "getpass",
        "getpass",
        "getpass",
        "options",
        "aesKey",
        "GetLAPSPassword",
        "username",
        "password",
        "domain",
        "options",
        "executer",
        "run",
        "e",
        "logging",
        "getLogger",
        "level",
        "logging",
        "DEBUG",
        "traceback",
        "traceback",
        "print_exc",
        "logging",
        "error",
        "e"
    ],
    "literals": [
        "' '",
        "'{%d:%ds} '",
        "'  '",
        "'-'",
        "'w'",
        "'\\t'",
        "'{%d:%ds}'",
        "\"\\n\"",
        "\"\\n\"",
        "''",
        "''",
        "':'",
        "'.'",
        "''",
        "'dc=%s,'",
        "'Blob'",
        "'content'",
        "'recipientInfos'",
        "'kekri'",
        "'kekid'",
        "'keyIdentifier'",
        "'other'",
        "'keyAttr'",
        "'field-1'",
        "\"utf-8\"",
        "'Cannot unpack msLAPS-EncryptedPassword blob due to error %s'",
        "'RootKeyId'",
        "'RootKeyId'",
        "'ncacn_ip_tcp'",
        "'set_credentials'",
        "\"Connecting to %s\"",
        "\"Something went wrong, check error status => %s\"",
        "\"Connected\"",
        "\"Something went wrong, check error status => %s\"",
        "\"Successfully bound\"",
        "\"Calling MS-GKDI GetKey\"",
        "'L0Index'",
        "'L1Index'",
        "'L2Index'",
        "'RootKeyId'",
        "b''",
        "'pbbOut'",
        "'RootKeyId'",
        "\"encryptedContentInfo\"",
        "\"contentEncryptionAlgorithm\"",
        "\"parameters\"",
        "'encryptedKey'",
        "''",
        "''",
        "'timed out'",
        "'The connection is timed out. Probably 445/TCP port is closed. Try to specify '",
        "'corresponding NetBIOS name or FQDN as the value of the -dc-host option'",
        "'STATUS_NOT_SUPPORTED'",
        "'The SMB request is not supported. Probably NTLM is disabled. Try to specify '",
        "'corresponding NetBIOS name or FQDN as the value of the -dc-host option'",
        "''",
        "'Error while anonymous logging into %s'",
        "'Getting machine hostname'",
        "'ldap://%s'",
        "'strongerAuthRequired'",
        "'ldaps://%s'",
        "'NTLMAuthNegotiate'",
        "\"NTLM negotiation failed. Probably NTLM is disabled. Try to use Kerberos \"",
        "\"authentication instead.\"",
        "\"If the credentials are valid, check the hostname and IP address of KDC. They \"",
        "\"must match exactly each other.\"",
        "\"(&(objectCategory=computer)(|(msLAPS-EncryptedPassword=*)(ms-MCS-AdmPwd=*)(msLAPS-Password=*))\"",
        "'(name='",
        "')'",
        "\")\"",
        "'msLAPS-EncryptedPassword'",
        "'msLAPS-PasswordExpirationTime'",
        "'msLAPS-Password'",
        "'sAMAccountName'",
        "'ms-Mcs-AdmPwdExpirationTime'",
        "'ms-MCS-AdmPwd'",
        "'sizeLimitExceeded'",
        "'sizeLimitExceeded exception caught, giving up and processing the data received'",
        "'Total of records returned %d'",
        "'%s$ not found in LDAP.'",
        "\"No valid entry in LDAP\"",
        "'attributes'",
        "'type'",
        "'sAMAccountName'",
        "'vals'",
        "'type'",
        "'msLAPS-EncryptedPassword'",
        "'vals'",
        "'utf-16le'",
        "\"n\"",
        "\"p\"",
        "'type'",
        "'ms-Mcs-AdmPwdExpirationTime'",
        "'type'",
        "'msLAPS-PasswordExpirationTime'",
        "'vals'",
        "'0'",
        "'vals'",
        "'%Y-%m-%d %H:%M:%S'",
        "'type'",
        "'ms-Mcs-AdmPwd'",
        "'vals'",
        "'utf-8'",
        "'N/A'",
        "'Skipping item, cannot process due to error %s'",
        "\"No LAPS data returned for %s\"",
        "\"No LAPS data returned\"",
        "'Host'",
        "'LAPS Username'",
        "'LAPS Password'",
        "'LAPS Password Expiration'",
        "'LAPSv2'",
        "'__main__'",
        "\"Extract LAPS passwords from LDAP\"",
        "'target'",
        "'store'",
        "'domain[/username[:password]]'",
        "'-computer'",
        "'store'",
        "'computername'",
        "'Target a specific computer by its name'",
        "'-ts'",
        "'store_true'",
        "'Adds timestamp to every logging output'",
        "'-debug'",
        "'store_true'",
        "'Turn DEBUG output ON'",
        "'-outputfile'",
        "'-o'",
        "'store'",
        "'Outputs to a file.'",
        "'authentication'",
        "'-hashes'",
        "\"store\"",
        "\"LMHASH:NTHASH\"",
        "'NTLM hashes, format is LMHASH:NTHASH'",
        "'-no-pass'",
        "\"store_true\"",
        "'don\\'t ask for password (useful for -k)'",
        "'-k'",
        "\"store_true\"",
        "'Use Kerberos authentication. Grabs credentials from ccache file '",
        "'(KRB5CcnAME) based on target parameters. If valid credentials '",
        "'cannot be found, it will use the ones specified in the command '",
        "'line'",
        "'-aesKey'",
        "\"store\"",
        "\"hex key\"",
        "'AES key to use for Kerberos Authentication '",
        "'(128 or 256 bits)'",
        "'connection'",
        "'-dc-ip'",
        "'store'",
        "'ip address'",
        "'IP Address of the domain controller. If '",
        "'ommited it use the domain part (FQDN) '",
        "'specified in the target parameter'",
        "'-dc-host'",
        "'store'",
        "'hostname'",
        "'Hostname of the domain controller to use. '",
        "'If ommited, the domain part (FQDN) '",
        "'specified in the account parameter will be used'",
        "''",
        "'Domain should be specified!'",
        "''",
        "''",
        "\"Password:\""
    ],
    "variables": [
        "colLen",
        "rowMaxLen",
        "outputFormat",
        "outputFormat_file",
        "options",
        "__username",
        "__password",
        "__domain",
        "__target",
        "__lmhash",
        "__nthash",
        "__aesKey",
        "__doKerberos",
        "__kdcIP",
        "__kdcHost",
        "__targetComputer",
        "__outputFile",
        "__KDSCache",
        "domainParts",
        "baseDN",
        "baseDN",
        "encryptedLAPSBlob",
        "parsed_cms_data",
        "remaining",
        "enveloped_data_blob",
        "parsed_enveloped_data",
        "_",
        "recipient_infos",
        "kek_recipient_info",
        "kek_identifier",
        "key_id",
        "tmp",
        "_",
        "sid",
        "target_sd",
        "laps_enabled",
        "gke",
        "stringBinding",
        "rpctransport",
        "dce",
        "resp",
        "gke",
        "kek",
        "enc_content_parameter",
        "iv",
        "_",
        "iv",
        "cek",
        "s",
        "__target",
        "__target",
        "__target",
        "__target",
        "ldapConnection",
        "ldapConnection",
        "searchFilter",
        "paged_search_control",
        "resp",
        "resp",
        "entries",
        "sAMAccountName",
        "lapsPasswordExpiration",
        "lapsUsername",
        "lapsPassword",
        "lapsv2",
        "sAMAccountName",
        "lapsv2",
        "plaintext",
        "r",
        "lapsUsername",
        "lapsPassword",
        "lapsPasswordExpiration",
        "lapsPassword",
        "entry",
        "entry",
        "parser",
        "group",
        "group",
        "options",
        "domain",
        "username",
        "password",
        "password",
        "options",
        "k",
        "executer"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Impacket - Collection of Python classes for working with network protocols.",
        "",
        "Copyright (C) 2023 Fortra. All rights reserved.",
        "",
        "This software is provided under a slightly modified version",
        "of the Apache Software License. See the accompanying LICENSE file",
        "for more information.",
        "",
        "Description:",
        "This script will gather data about the domain's computers and their LAPS/LAPSv2 passwords.",
        "Initial formatting for this tool came from the GetADUsers.py example script.",
        "",
        "Author(s):",
        "Thomas Seigneuret (@zblurx)",
        "Tyler Booth (@dru1d-foofus)",
        "",
        "Reference for:",
        "LDAP",
        "",
        "Print header",
        "Added tab delimited output for files",
        "Removed extraneous field to clean up output saved to a file",
        "Create the baseDN",
        "Remove last ','",
        "Check if item is in cache",
        "Connect on RPC over TCP to MS-GKDI to call opnum 0 GetKey",
        "Unpack GroupKeyEnvelope",
        "Connect to LDAP",
        "We need to try SSL",
        "Building the search filter",
        "Default search filter value",
        "Microsoft Active Directory set an hard limit of 1000 entries returned by any search",
        "We should never reach this code as we use paged search now",
        "timestamp = r[\"t\"]",
        "Process command-line arguments.",
        "Init the example's logger theme",
        "Print the Library's installation path"
    ],
    "docstrings": [],
    "functions": [
        "printTable",
        "getLAPSv2Decrypt",
        "getMachineName",
        "getUnixTime",
        "run"
    ],
    "classes": [
        "GetLAPSPassword"
    ]
}