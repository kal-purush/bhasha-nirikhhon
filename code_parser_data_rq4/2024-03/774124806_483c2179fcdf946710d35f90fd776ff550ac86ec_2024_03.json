{
    "identifiers": [
        "require",
        "require",
        "require",
        "express",
        "app",
        "express",
        "app",
        "require",
        "pg",
        "process",
        "process",
        "init",
        "client",
        "SQL",
        "client",
        "SQL",
        "process",
        "app",
        "port",
        "port",
        "app",
        "err",
        "req",
        "res",
        "next",
        "res",
        "err",
        "init"
    ],
    "literals": [
        "'dotenv'",
        "'pg'",
        "'express'",
        "'morgan'",
        "'dev'",
        "postgres://localhost/${process.env.DB_NAME}",
        "'db connected'",
        "DROP TABLE IF EXISTS employees;\n  DROP TABLE IF EXISTS departments;\n\n  CREATE TABLE departments(\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50)\n  );\n  CREATE TABLE employees(\n    id SERIAL PRIMARY KEY,\n    name VARCHAR(50),\n    created_at TIMESTAMP DEFAULT now(),\n    updated_at TIMESTAMP DEFAULT now(),\n    department_id INTEGER REFERENCES departments(id) NOT NULL\n  )",
        "INSERT INTO departments(name) Values('Operations');\n  INSERT INTO departments(name) Values('HR');\n  INSERT INTO departments(name) Values('Engineering');\n  INSERT INTO names(name, department_id) VALUES('David', (SELECT id FROM departments WHERE name = 'Operations'));\n  INSERT INTO names(name, department_id) VALUES('Lee', (SELECT id FROM departments WHERE name = 'Engineering'));\n  INSERT INTO names(name, department_id) VALUES('Robin', (SELECT id FROM departments WHERE name = 'HR'));",
        "'tables seeded'",
        "listening on port ${port}"
    ],
    "variables": [
        "pg",
        "express",
        "app",
        "client",
        "init",
        "SQL",
        "port"
    ],
    "comments": [
        "rquire dotenv file",
        "require pg",
        "create express server",
        "const port = process.env.PORT || 3000",
        "add db URL",
        "create init aysnc funct",
        "SQL",
        "SQL",
        "connect to pg client using await",
        "invoke init"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}