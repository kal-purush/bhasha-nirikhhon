{
    "identifiers": [
        "logging",
        "pandas",
        "pd",
        "stats",
        "constants",
        "stats",
        "data",
        "RowEntity",
        "stats",
        "data",
        "Triple",
        "stats",
        "db",
        "Db",
        "stats",
        "importer",
        "Importer",
        "stats",
        "nodes",
        "Nodes",
        "stats",
        "reporter",
        "FileImportReporter",
        "util",
        "filehandler",
        "FileHandler",
        "Importer",
        "input_fh",
        "FileHandler",
        "db",
        "Db",
        "reporter",
        "FileImportReporter",
        "nodes",
        "Nodes",
        "input_fh",
        "db",
        "reporter",
        "nodes",
        "input_fh",
        "basename",
        "nodes",
        "config",
        "config",
        "ignore_columns",
        "input_file_name",
        "nodes",
        "provenance",
        "input_file_name",
        "id",
        "config",
        "row_entity_type",
        "input_file_name",
        "row_entity_type",
        "input_file_name",
        "config",
        "id_column",
        "input_file_name",
        "config",
        "entity_columns",
        "input_file_name",
        "pd",
        "DataFrame",
        "reporter",
        "report_started",
        "_read_csv",
        "_drop_ignored_columns",
        "_sanitize_values",
        "_rename_columns",
        "_write_row_entity_triples",
        "reporter",
        "report_success",
        "e",
        "reporter",
        "report_failure",
        "e",
        "e",
        "pd",
        "read_csv",
        "input_fh",
        "read_string_io",
        "skipinitialspace",
        "thousands",
        "logging",
        "info",
        "df",
        "index",
        "size",
        "df",
        "convert_dtypes",
        "ignore_columns",
        "df",
        "drop",
        "columns",
        "ignore_columns",
        "axis",
        "inplace",
        "df",
        "convert_dtypes",
        "df",
        "columns",
        "nodes",
        "property",
        "property_column_name",
        "dcid",
        "property_column_name",
        "property_column_names",
        "col",
        "id",
        "property_column_names",
        "property_ids",
        "id",
        "col",
        "entity_columns",
        "entity_columns",
        "remove",
        "col",
        "entity_columns",
        "add",
        "id",
        "df",
        "rename",
        "columns",
        "renamed",
        "nodes",
        "entity_type",
        "row_entity_type",
        "input_file_name",
        "nodes",
        "property",
        "id_column",
        "dcid",
        "id_column",
        "Triple",
        "index",
        "row",
        "df",
        "iterrows",
        "row",
        "id_column_name",
        "id_column_name",
        "row_entity_type",
        "index",
        "i",
        "k",
        "v",
        "row",
        "items",
        "pd",
        "isna",
        "v",
        "k",
        "entity_columns",
        "v",
        "x",
        "x",
        "strip",
        "v",
        "split",
        "ids",
        "v",
        "v",
        "RowEntity",
        "dcid",
        "row_entity_type",
        "provenance_id",
        "provenance",
        "prop_object_values",
        "prop_object_values",
        "prop_object_ids",
        "prop_object_ids",
        "triples",
        "extend",
        "row_entity",
        "triples",
        "db",
        "insert_triples",
        "triples"
    ],
    "literals": [
        "f\"Row entity type must be specified: {self.input_file_name}\"",
        "\",\"",
        "\"Read %s rows.\"",
        "\"\"",
        "f\"{self.row_entity_type}_{index}\"",
        "\",\"",
        "\",\""
    ],
    "variables": [
        "input_fh",
        "db",
        "reporter",
        "nodes",
        "input_file_name",
        "config",
        "ignore_columns",
        "provenance",
        "row_entity_type",
        "id_column",
        "entity_columns",
        "df",
        "df",
        "df",
        "df",
        "renamed",
        "property_column_names",
        "property_ids",
        "renamed",
        "col",
        "df",
        "id_column_name",
        "triples",
        "dcid",
        "prop_object_values",
        "prop_object_ids",
        "ids",
        "prop_object_ids",
        "k",
        "prop_object_ids",
        "k",
        "prop_object_values",
        "k",
        "row_entity"
    ],
    "comments": [
        "Copyright 2024 Google Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Reassigned when renaming columns.",
        "Read CSVs with the following behaviors:",
        "- Strip leading whitespaces",
        "- Treat comma as a thousands separator",
        "Convert to best possible dtypes (i.e. keep ints as ints even when some values are NaN)",
        "Convert to best possible dtypes (i.e. keep ints as ints even when some values are NaN)",
        "Rename property columns to their IDs",
        "If column is an entity reference, use the ID.",
        "Add event type node - it will be written to DB later.",
        "This is to avoid duplicate entity types in scenarios where entities of the same type",
        "are spread across files.",
        "All property columns would've been renamed to their dcids by now.",
        "So use the id column's dcid as the id column name.",
        "If id column is configured, use it as the entity dcid else generate based on row index."
    ],
    "docstrings": [
        "\"\"\"Imports a single entities input file.\n\n  Key behaviors at this time: \n  - All un-ignored columns will be encoded as property triples.\n  - If an id column was configured, it will be used as the entity dcid. Else a new dcid will be generated for each entity.\n  - Columns specified as entity columns will be encoded as object_id in the triples tables. Others will be encoded as object_value.\n    + Currently this importer does not resolve any entities and all entities are assumed to be pre-resolved into dcids.\n    \"\"\""
    ],
    "functions": [
        "do_import",
        "_read_csv",
        "_drop_ignored_columns",
        "_sanitize_values",
        "_rename_columns",
        "_write_row_entity_triples"
    ],
    "classes": [
        "EntitiesImporter"
    ]
}