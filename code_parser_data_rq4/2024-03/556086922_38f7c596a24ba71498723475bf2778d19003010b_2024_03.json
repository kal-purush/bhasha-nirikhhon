{
    "identifiers": [
        "numpy",
        "np",
        "trimesh",
        "math",
        "scipy",
        "spatial",
        "transform",
        "Rotation",
        "R",
        "open3d",
        "o3d",
        "os",
        "argparse",
        "dirName",
        "os",
        "listdir",
        "dirName",
        "entry",
        "listOfFile",
        "os",
        "path",
        "join",
        "dirName",
        "entry",
        "os",
        "path",
        "isdir",
        "fullPath",
        "allFiles",
        "getListOfFiles",
        "fullPath",
        "allFiles",
        "append",
        "fullPath",
        "allFiles",
        "mesh",
        "mesh",
        "vertices",
        "mesh_vertices",
        "np",
        "array",
        "mv_z",
        "np",
        "round_",
        "mv_z_array",
        "decimals",
        "np",
        "argmin",
        "mv_z_array",
        "mv_z_array",
        "min_z_idx",
        "mv_z_array",
        "min_z_value",
        "np",
        "where",
        "mask",
        "mesh_vertices",
        "list_z_min_idx",
        "mv_ground",
        "mesh",
        "mesh_path",
        "path_write",
        "ground_vertices",
        "mesh",
        "gv",
        "mean",
        "axis",
        "np",
        "array",
        "centroid",
        "main_center",
        "o3d",
        "io",
        "read_triangle_mesh",
        "mesh_path",
        "mesh_open3d",
        "translate",
        "t",
        "relative",
        "o3d",
        "io",
        "write_triangle_mesh",
        "path_write",
        "mesh_translated_open3d",
        "points",
        "naxis",
        "points",
        "T",
        "points",
        "np",
        "linalg",
        "eig",
        "inertia",
        "np",
        "argsort",
        "evals",
        "evecs",
        "order",
        "naxis",
        "T",
        "principal_axis",
        "np",
        "where",
        "principal_axis",
        "principal_axis",
        "indx",
        "xy_pr_axis",
        "principal_axis",
        "axis_on_xy",
        "principal_axis",
        "xy_pr_axis",
        "xy_pr_axis",
        "xs",
        "ys",
        "xs",
        "ys",
        "xs",
        "ys",
        "xs",
        "ys",
        "sign",
        "vector_y",
        "principal_axis",
        "degree",
        "np",
        "dot",
        "vector_y",
        "principal_axis",
        "np",
        "arccos",
        "dot_product",
        "math",
        "degrees",
        "angle_radians",
        "degree",
        "angle_degree",
        "degree",
        "angle_radians",
        "angle",
        "mesh_path",
        "path_write",
        "R",
        "from_euler",
        "angle",
        "degrees",
        "r",
        "as_matrix",
        "o3d",
        "io",
        "read_triangle_mesh",
        "mesh_path",
        "mesh_open3d",
        "rotate",
        "r",
        "center",
        "o3d",
        "io",
        "write_triangle_mesh",
        "path_write",
        "mesh_rotate_open3d",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "objs",
        "getListOfFiles",
        "folder_path",
        "i",
        "buildings",
        "i",
        "os",
        "path",
        "join",
        "folder_path",
        "i",
        "trimesh",
        "load",
        "path",
        "mesh",
        "bounding_box_oriented",
        "center_xy",
        "mesh",
        "path",
        "path",
        "i",
        "buildings",
        "i",
        "os",
        "path",
        "join",
        "folder_path",
        "i",
        "path",
        "trimesh",
        "load",
        "path",
        "mesh",
        "bounding_box_oriented",
        "mesh",
        "ground_vertices",
        "mesh",
        "mv_ground_points",
        "find_principle_axis",
        "mv_ground_points",
        "naxis",
        "principal_axis",
        "assign_sign",
        "principal_axis",
        "sign",
        "get_rotation_angle",
        "vector_y",
        "principal_axis",
        "angle",
        "sign",
        "angle",
        "i",
        "angle",
        "rotate_building",
        "angle",
        "path",
        "path",
        "os",
        "path",
        "exists",
        "folder_path",
        "os",
        "makedirs",
        "folder_path",
        "os",
        "path",
        "join",
        "folder_path",
        "file_name",
        "file_path",
        "open",
        "file_path",
        "file",
        "key",
        "value",
        "dict_rotations",
        "items",
        "os",
        "path",
        "split",
        "key",
        "file",
        "write",
        "key",
        "value",
        "file",
        "close"
    ],
    "literals": [
        "'degree'",
        "'degree'",
        "'radians'",
        "'y'",
        "'__main__'",
        "'This algorithm Center and Align your .objs file, and \\\n            it also create a .txt keeping track of the orientation, and rotation \\\n            angle with respect to the North'",
        "'--objs'",
        "'Path to obj files'",
        "'.obj'",
        "\"Buildings Centered respect to XY\"",
        "'.obj'",
        "'path:'",
        "'bbo:'",
        "'mv_ground_points are:'",
        "'principal axis are:'",
        "'sign:'",
        "'degree'",
        "'angle is:'",
        "'Building as being align to canonical pose'",
        "'rotation_tracker.txt'",
        "'Rotation Tracker File created'",
        "'w'",
        "'%s:%s\\n'",
        "\"Orientation Saved\""
    ],
    "variables": [
        "listOfFile",
        "allFiles",
        "fullPath",
        "allFiles",
        "mesh_vertices",
        "mv_z",
        "mv_z_array",
        "mv_z_array",
        "min_z_idx",
        "min_z_value",
        "mask",
        "list_z_min_idx",
        "mv_ground",
        "gv",
        "centroid",
        "centroid",
        "main_center",
        "t",
        "mesh_open3d",
        "mesh_translated_open3d",
        "points",
        "inertia",
        "evals",
        "evecs",
        "order",
        "indx",
        "xy_pr_axis",
        "xy_pr_axis",
        "xs",
        "ys",
        "sign",
        "sign",
        "sign",
        "sign",
        "sign",
        "dot_product",
        "angle_radians",
        "angle_degree",
        "r",
        "r",
        "mesh_open3d",
        "mesh_rotate_open3d",
        "parser",
        "args",
        "folder_path",
        "buildings",
        "path",
        "mesh",
        "mesh",
        "vector_y",
        "dict_rotations",
        "path",
        "mesh",
        "mesh",
        "mv_ground_points",
        "principal_axis",
        "sign",
        "angle",
        "angle",
        "dict_rotations",
        "file_name",
        "file_path",
        "key"
    ],
    "comments": [
        "Copyright (c) 2024 Alberto Tono",
        "create a list of file and sub directories",
        "names in the given directory",
        "Iterate over all the entries",
        "Create full path",
        "If entry is a directory then get the list of files in this directory",
        "get vertices",
        "trimesh import X, Z, -Y",
        "translate to array",
        "IMPORTANT",
        "get min indices",
        "get min value",
        "get mask",
        "filter values",
        "get vertices on the ground",
        "take ground vertices",
        "find the centroid",
        "find translation",
        "apply translation to all vertices",
        "TODO - brings closer, + move away",
        "make them with 0 z in the inertia",
        "return largest vectors based on naxis",
        "find index of zero",
        "x,z,-y so it should be correct",
        "parser.add_argument('output_objs',type=str, help='Path to output obj files.')",
        "'/home/alberto/Documents/NDP/notebooks/'",
        "path_write = args.output_objs #'/home/alberto/Documents/NDP/notebooks/'",
        "CENTER BUILDING",
        "print(i)",
        "print(i)",
        "1) get bounding box oriented",
        "2) Find ground vertices",
        "3) Extract principal axis, same as '-mesh.principal_inertia_vectors[0]' in trimesh",
        "4) Get Rotation angle",
        "principal_axis[0]",
        "5) Save Rotation angle",
        "remove /model.obj",
        "Specify the file name",
        "file = open(\"rotation_tracker.txt\",\"w\")"
    ],
    "docstrings": [
        "\"\"\"From a mesh get the main vertices on the ground\"\"\"",
        "\"\"\"Center all meshes\"\"\"",
        "\"\"\"Compute single principle axis for points\"\"\"",
        "\"\"\"Get axis only on xy remove the z\"\"\"",
        "\"\"\"Get sign of the rotation wrt y\"\"\"",
        "\"\"\"Get rotation angle form vector y in trimesh, and main axis\"\"\"",
        "\"\"\"Rotate Building\"\"\""
    ],
    "functions": [
        "getListOfFiles",
        "ground_vertices",
        "center_xy",
        "find_principle_axis",
        "axis_on_xy",
        "assign_sign",
        "get_rotation_angle",
        "rotate_building"
    ],
    "classes": []
}