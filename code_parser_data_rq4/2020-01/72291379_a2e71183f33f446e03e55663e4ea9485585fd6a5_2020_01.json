{
    "identifiers": [
        "PlayerScript",
        "player",
        "Cooldown",
        "cooldown",
        "NetworkSide",
        "side",
        "player",
        "Cooldowns",
        "TryStart",
        "cooldown",
        "side",
        "Interaction",
        "interaction",
        "Cooldown",
        "cooldown",
        "NetworkSide",
        "side",
        "TryStart",
        "interaction",
        "PerformerPlayerScript",
        "cooldown",
        "side",
        "PlayerScript",
        "player",
        "Cooldown",
        "cooldown",
        "TryStart",
        "player",
        "cooldown",
        "NetworkSide",
        "Client",
        "Interaction",
        "interaction",
        "Cooldown",
        "cooldown",
        "TryStartClient",
        "interaction",
        "PerformerPlayerScript",
        "cooldown",
        "PlayerScript",
        "player",
        "Cooldown",
        "cooldown",
        "TryStart",
        "player",
        "cooldown",
        "NetworkSide",
        "Server",
        "Interaction",
        "interaction",
        "Cooldown",
        "cooldown",
        "TryStartServer",
        "interaction",
        "PerformerPlayerScript",
        "cooldown",
        "T",
        "T",
        "interaction",
        "IInteractable",
        "T",
        "interactable",
        "seconds",
        "NetworkSide",
        "side",
        "T",
        "Interaction",
        "interaction",
        "PerformerPlayerScript",
        "Cooldowns",
        "TryStart",
        "interactable",
        "seconds",
        "side",
        "T",
        "T",
        "interaction",
        "IInteractable",
        "T",
        "interactable",
        "seconds",
        "T",
        "Interaction",
        "TryStart",
        "interaction",
        "interactable",
        "seconds",
        "NetworkSide",
        "Client",
        "T",
        "T",
        "interaction",
        "IInteractable",
        "T",
        "interactable",
        "seconds",
        "T",
        "Interaction",
        "TryStart",
        "interaction",
        "interactable",
        "seconds",
        "NetworkSide",
        "Server",
        "PlayerScript",
        "player",
        "CooldownID",
        "cooldownId",
        "player",
        "Cooldowns",
        "IsOn",
        "cooldownId",
        "Interaction",
        "interaction",
        "CooldownID",
        "cooldownId",
        "IsOn",
        "interaction",
        "PerformerPlayerScript",
        "cooldownId",
        "PlayerScript",
        "player",
        "Cooldown",
        "cooldown",
        "IsOn",
        "player",
        "CooldownID",
        "Asset",
        "cooldown",
        "NetworkSide",
        "Client",
        "Interaction",
        "interaction",
        "Cooldown",
        "cooldown",
        "IsOnClient",
        "interaction",
        "PerformerPlayerScript",
        "cooldown",
        "PlayerScript",
        "player",
        "Cooldown",
        "cooldown",
        "IsOn",
        "player",
        "CooldownID",
        "Asset",
        "cooldown",
        "NetworkSide",
        "Server",
        "Interaction",
        "interaction",
        "Cooldown",
        "cooldown",
        "IsOnServer",
        "interaction",
        "PerformerPlayerScript",
        "cooldown"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Main API for working with cooldowns. Can also use the HasCooldowns component on a particular object, but",
        "this API is generally more succint.",
        "</summary>",
        "Starts the cooldown for the player if it's not currently on.",
        "</summary>",
        "<param name=\"player\"></param>",
        "<param name=\"cooldown\">cooldown to try starting</param>",
        "<param name=\"side\">indicates which side's cooldown should be started</param>",
        "<returns>true if cooldown was successfully started, false if cooldown was already on.</returns>",
        "Starts the cooldown for the interaction's performer if it's not currently on.",
        "</summary>",
        "<param name=\"interaction\">interaction whose performer's cooldown should be started</param>",
        "<param name=\"cooldown\">cooldown to try starting</param>",
        "<param name=\"side\">indicates which side's cooldown should be started</param>",
        "<returns>true if cooldown was successfully started, false if cooldown was already on.</returns>",
        "Same as TryStart with NetworkSide.Client",
        "</summary>",
        "Same as TryStart with NetworkSide.Client",
        "</summary>",
        "Same as TryStart with NetworkSide.Server",
        "</summary>",
        "Same as TryStart with NetworkSide.Server",
        "</summary>",
        "Starts a cooldown (if it's not already on) for the interaction's performer",
        "which is identified by a particular TYPE of interactable component. The specific instance",
        "doesn't matter - this cooldown is shared by all instances of that type. For example, you'd always start",
        "the same cooldown regardless of which object's Meleeable component you passed to this (this is",
        "usually the intended behavior for interactable components - you don't care which object's interaction",
        "you are triggering - you should still have the same cooldown for melee regardless of who you are hitting).",
        "Intended for convenience / one-off usage in small interactable components so you don't need",
        "to create an asset.",
        "</summary>",
        "<param name=\"cooldown\">Should almost always be \"this\" (when called from within",
        "an interactable component). Interactable component whose cooldown should be started</param>",
        "<param name=\"seconds\">how many seconds the cooldown should take</param>",
        "<param name=\"side\">indicates which side's cooldown should be started</param>",
        "<returns>true if cooldown was successfully started, false if cooldown was already on.</returns>",
        "Same as TryStart with NetworkSide.Client",
        "</summary>",
        "Same as TryStart with NetworkSide.Server",
        "</summary>",
        "Checks if the indicated cooldown is on (currently counting down) for the player",
        "</summary>",
        "<param name=\"cooldownId\"></param>",
        "<returns></returns>",
        "Checks if the indicated cooldown is on (currently counting down) for the performer of the interaction.",
        "</summary>",
        "<param name=\"cooldownId\"></param>",
        "<returns></returns>",
        "Same as IsOn for for indicated clientside Cooldown",
        "</summary>",
        "Same as IsOn for for indicated clientside Cooldown",
        "</summary>",
        "Same as IsOn for for indicated serverside Cooldown",
        "</summary>",
        "Same as IsOn for for indicated serverside Cooldown",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "TryStart",
        "TryStart",
        "TryStartClient",
        "TryStartClient",
        "TryStartServer",
        "TryStartServer",
        "TryStart",
        "TryStartClient",
        "TryStartServer",
        "IsOn",
        "IsOn",
        "IsOnClient",
        "IsOnClient",
        "IsOnServer",
        "IsOnServer"
    ],
    "classes": [
        "Cooldowns"
    ]
}