{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "Reflection",
        "NUnit",
        "Framework",
        "Shouldly",
        "GitVersion",
        "BuildServers",
        "GitVersion",
        "GitVersion",
        "OutputVariables",
        "GitVersionCore",
        "Tests",
        "Helpers",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "GitVersionCore",
        "Tests",
        "BuildServers",
        "TestFixture",
        "TestBase",
        "SetUp",
        "sp",
        "ConfigureServices",
        "services",
        "AddSingleton",
        "Jenkins",
        "environment",
        "sp",
        "GetService",
        "IEnvironment",
        "buildServer",
        "sp",
        "GetService",
        "Jenkins",
        "environment",
        "SetEnvironmentVariable",
        "key",
        "environment",
        "SetEnvironmentVariable",
        "key",
        "Test",
        "SetEnvironmentVariableForDetection",
        "buildServer",
        "CanApplyToCurrentContext",
        "ShouldBe",
        "Test",
        "ClearenvironmentVariableForDetection",
        "buildServer",
        "CanApplyToCurrentContext",
        "ShouldBe",
        "Test",
        "environment",
        "GetEnvironmentVariable",
        "branch",
        "environment",
        "GetEnvironmentVariable",
        "localBranch",
        "environment",
        "SetEnvironmentVariable",
        "branch",
        "buildServer",
        "GetCurrentBranch",
        "ShouldBe",
        "environment",
        "SetEnvironmentVariable",
        "localBranch",
        "buildServer",
        "GetCurrentBranch",
        "ShouldBe",
        "environment",
        "SetEnvironmentVariable",
        "branch",
        "branchOrig",
        "environment",
        "SetEnvironmentVariable",
        "localBranch",
        "localBranchOrig",
        "Test",
        "environment",
        "GetEnvironmentVariable",
        "branch",
        "environment",
        "GetEnvironmentVariable",
        "localBranch",
        "environment",
        "GetEnvironmentVariable",
        "pipelineBranch",
        "environment",
        "SetEnvironmentVariable",
        "pipelineBranch",
        "environment",
        "SetEnvironmentVariable",
        "branch",
        "environment",
        "SetEnvironmentVariable",
        "localBranch",
        "buildServer",
        "GetCurrentBranch",
        "ShouldBe",
        "environment",
        "SetEnvironmentVariable",
        "branch",
        "branchOrig",
        "environment",
        "SetEnvironmentVariable",
        "localBranch",
        "localBranchOrig",
        "environment",
        "SetEnvironmentVariable",
        "pipelineBranch",
        "pipelineBranchOrig",
        "Test",
        "TestableVersionVariables",
        "fullSemVer",
        "buildServer",
        "GenerateSetVersionMessage",
        "vars",
        "ShouldBe",
        "Test",
        "buildServer",
        "GenerateSetParameterMessage",
        "generatedParameterMessages",
        "Length",
        "ShouldBe",
        "generatedParameterMessages",
        "ShouldBe",
        "Test",
        "Path",
        "GetDirectoryName",
        "Assembly",
        "GetExecutingAssembly",
        "Location",
        "Path",
        "Combine",
        "assemblyLocation",
        "AssertVariablesAreWrittenToFile",
        "f",
        "File",
        "Delete",
        "f",
        "file",
        "SemanticVersion",
        "Major",
        "Minor",
        "Patch",
        "PreReleaseTag",
        "BuildMetaData",
        "semanticVersion",
        "BuildMetaData",
        "CommitDate",
        "DateTimeOffset",
        "Parse",
        "semanticVersion",
        "BuildMetaData",
        "Sha",
        "TestEffectiveConfiguration",
        "sp",
        "GetService",
        "IVariableProvider",
        "variableProvider",
        "GetVariablesFor",
        "semanticVersion",
        "config",
        "buildServer",
        "WithPropertyFile",
        "file",
        "buildServer",
        "WriteIntegration",
        "writes",
        "Add",
        "variables",
        "writes",
        "ShouldBe",
        "File",
        "Exists",
        "file",
        "ShouldBe",
        "File",
        "ReadAllText",
        "file",
        "props",
        "ShouldContain",
        "props",
        "ShouldContain"
    ],
    "literals": [
        "\"JENKINS_URL\"",
        "\"GIT_BRANCH\"",
        "\"GIT_LOCAL_BRANCH\"",
        "\"BRANCH_NAME\"",
        "\"a value\"",
        "\"origin/master\"",
        "\"origin/master\"",
        "\"master\"",
        "\"master\"",
        "\"master\"",
        "\"master\"",
        "\"0.0.0-Beta4.7\"",
        "\"0.0.0-Beta4.7\"",
        "\"name\"",
        "\"value\"",
        "\"GitVersion_name=value\"",
        "\"gitlab_this_file_should_be_deleted.properties\"",
        "\"beta1\"",
        "\"5\"",
        "\"2014-03-06 23:59:59Z\"",
        "\"commitSha\"",
        "\"1.2.3-beta.1+5\"",
        "\"GitVersion_Major=1\"",
        "\"GitVersion_Minor=2\""
    ],
    "variables": [
        "key",
        "branch",
        "localBranch",
        "pipelineBranch",
        "IEnvironment",
        "environment",
        "IServiceProvider",
        "sp",
        "Jenkins",
        "buildServer",
        "branchOrig",
        "localBranchOrig",
        "branchOrig",
        "localBranchOrig",
        "pipelineBranchOrig",
        "vars",
        "generatedParameterMessages",
        "assemblyLocation",
        "f",
        "writes",
        "semanticVersion",
        "config",
        "variableProvider",
        "variables",
        "props"
    ],
    "comments": [
        "Save original values so they can be restored",
        "Set GIT_BRANCH for testing",
        "Test Jenkins that GetCurrentBranch falls back to GIT_BRANCH if GIT_LOCAL_BRANCH undefined",
        "Set GIT_LOCAL_BRANCH",
        "Test Jenkins GetCurrentBranch method now returns GIT_LOCAL_BRANCH",
        "Restore environment variables",
        "Save original values so they can be restored",
        "Set BRANCH_NAME in pipeline mode",
        "When Jenkins uses a Pipeline, GIT_BRANCH and GIT_LOCAL_BRANCH are not set:",
        "Test Jenkins GetCurrentBranch method now returns BRANCH_NAME",
        "Restore environment variables"
    ],
    "docstrings": [],
    "functions": [
        "SetUp",
        "SetEnvironmentVariableForDetection",
        "ClearenvironmentVariableForDetection",
        "CanApplyCurrentContextWhenenvironmentVariableIsSet",
        "CanNotApplyCurrentContextWhenenvironmentVariableIsNotSet",
        "JenkinsTakesLocalBranchNameNotRemoteName",
        "JenkinsTakesBranchNameInPipelineAsCode",
        "GenerateSetVersionMessageReturnsVersionAsIsAlthoughThisIsNotUsedByJenkins",
        "GenerateMessageTest",
        "WriteAllVariablesToTheTextWriter",
        "AssertVariablesAreWrittenToFile"
    ],
    "classes": [
        "JenkinsTests"
    ]
}