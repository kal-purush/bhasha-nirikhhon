{
    "identifiers": [
        "modules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleId",
        "modules",
        "moduleId",
        "__webpack_require__",
        "__webpack_require__",
        "modules",
        "__webpack_require__",
        "installedModules",
        "__webpack_require__",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "exports",
        "name",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "exports",
        "exports",
        "exports",
        "__webpack_require__",
        "value",
        "mode",
        "mode",
        "value",
        "__webpack_require__",
        "value",
        "mode",
        "value",
        "mode",
        "value",
        "value",
        "value",
        "value",
        "__webpack_require__",
        "ns",
        "ns",
        "value",
        "mode",
        "value",
        "key",
        "value",
        "__webpack_require__",
        "ns",
        "key",
        "key",
        "value",
        "key",
        "key",
        "ns",
        "__webpack_require__",
        "getDefault",
        "getModuleExports",
        "__webpack_require__",
        "getter",
        "getter",
        "getter",
        "__webpack_require__",
        "property",
        "property",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_exports__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_exports__",
        "__webpack_provided_Object_dot_assign",
        "__webpack_require__",
        "__webpack_exports__",
        "__extends",
        "__webpack_require__",
        "__webpack_exports__",
        "__assign",
        "__webpack_require__",
        "__webpack_exports__",
        "__rest",
        "__webpack_require__",
        "__webpack_exports__",
        "__decorate",
        "__webpack_require__",
        "__webpack_exports__",
        "__param",
        "__webpack_require__",
        "__webpack_exports__",
        "__metadata",
        "__webpack_require__",
        "__webpack_exports__",
        "__awaiter",
        "__webpack_require__",
        "__webpack_exports__",
        "__generator",
        "__webpack_require__",
        "__webpack_exports__",
        "__exportStar",
        "__webpack_require__",
        "__webpack_exports__",
        "__values",
        "__webpack_require__",
        "__webpack_exports__",
        "__read",
        "__webpack_require__",
        "__webpack_exports__",
        "__spread",
        "__webpack_require__",
        "__webpack_exports__",
        "__spreadArrays",
        "__webpack_require__",
        "__webpack_exports__",
        "__await",
        "__webpack_require__",
        "__webpack_exports__",
        "__asyncGenerator",
        "__webpack_require__",
        "__webpack_exports__",
        "__asyncDelegator",
        "__webpack_require__",
        "__webpack_exports__",
        "__asyncValues",
        "__webpack_require__",
        "__webpack_exports__",
        "__makeTemplateObject",
        "__webpack_require__",
        "__webpack_exports__",
        "__importStar",
        "__webpack_require__",
        "__webpack_exports__",
        "__importDefault",
        "d",
        "b",
        "extendStatics",
        "d",
        "b",
        "d",
        "b",
        "d",
        "b",
        "p",
        "b",
        "b",
        "p",
        "d",
        "p",
        "b",
        "p",
        "extendStatics",
        "d",
        "b",
        "d",
        "b",
        "extendStatics",
        "d",
        "b",
        "d",
        "d",
        "b",
        "b",
        "__",
        "b",
        "__",
        "__assign",
        "__webpack_provided_Object_dot_assign",
        "__assign",
        "t",
        "arguments",
        "i",
        "n",
        "i",
        "s",
        "arguments",
        "i",
        "p",
        "s",
        "s",
        "p",
        "t",
        "p",
        "s",
        "p",
        "t",
        "__assign",
        "arguments",
        "s",
        "e",
        "p",
        "s",
        "s",
        "p",
        "e",
        "p",
        "t",
        "p",
        "s",
        "p",
        "s",
        "s",
        "i",
        "p",
        "i",
        "e",
        "p",
        "i",
        "s",
        "p",
        "i",
        "t",
        "p",
        "i",
        "s",
        "p",
        "i",
        "t",
        "decorators",
        "target",
        "key",
        "desc",
        "arguments",
        "c",
        "target",
        "desc",
        "desc",
        "target",
        "key",
        "desc",
        "r",
        "decorators",
        "target",
        "key",
        "desc",
        "decorators",
        "i",
        "i",
        "d",
        "decorators",
        "i",
        "r",
        "c",
        "d",
        "r",
        "c",
        "d",
        "target",
        "key",
        "r",
        "d",
        "target",
        "key",
        "r",
        "c",
        "r",
        "target",
        "key",
        "r",
        "r",
        "paramIndex",
        "decorator",
        "target",
        "key",
        "decorator",
        "target",
        "key",
        "paramIndex",
        "metadataKey",
        "metadataValue",
        "metadataKey",
        "metadataValue",
        "thisArg",
        "_arguments",
        "P",
        "generator",
        "P",
        "P",
        "gigya",
        "resolve",
        "reject",
        "value",
        "step",
        "generator",
        "value",
        "e",
        "reject",
        "e",
        "value",
        "step",
        "generator",
        "value",
        "e",
        "reject",
        "e",
        "result",
        "result",
        "resolve",
        "result",
        "P",
        "resolve",
        "resolve",
        "result",
        "fulfilled",
        "rejected",
        "step",
        "generator",
        "generator",
        "thisArg",
        "_arguments",
        "thisArg",
        "body",
        "t",
        "t",
        "t",
        "g",
        "verb",
        "verb",
        "verb",
        "g",
        "g",
        "n",
        "v",
        "step",
        "n",
        "v",
        "op",
        "f",
        "_",
        "f",
        "y",
        "t",
        "op",
        "y",
        "op",
        "y",
        "t",
        "y",
        "t",
        "y",
        "y",
        "t",
        "t",
        "y",
        "op",
        "t",
        "y",
        "t",
        "op",
        "op",
        "t",
        "op",
        "t",
        "op",
        "_",
        "op",
        "_",
        "y",
        "op",
        "op",
        "op",
        "_",
        "_",
        "t",
        "_",
        "t",
        "t",
        "t",
        "t",
        "op",
        "op",
        "_",
        "op",
        "t",
        "op",
        "t",
        "op",
        "t",
        "_",
        "op",
        "op",
        "_",
        "t",
        "_",
        "t",
        "t",
        "op",
        "t",
        "_",
        "t",
        "_",
        "t",
        "_",
        "op",
        "t",
        "_",
        "_",
        "op",
        "body",
        "thisArg",
        "_",
        "e",
        "op",
        "e",
        "y",
        "f",
        "t",
        "op",
        "op",
        "op",
        "op",
        "m",
        "exports",
        "p",
        "m",
        "exports",
        "p",
        "exports",
        "p",
        "m",
        "p",
        "o",
        "o",
        "m",
        "m",
        "o",
        "o",
        "i",
        "o",
        "o",
        "o",
        "o",
        "i",
        "o",
        "o",
        "n",
        "o",
        "m",
        "o",
        "m",
        "o",
        "n",
        "n",
        "r",
        "i",
        "ar",
        "r",
        "error",
        "e",
        "error",
        "r",
        "r",
        "m",
        "i",
        "m",
        "i",
        "e",
        "e",
        "ar",
        "i",
        "arguments",
        "i",
        "ar",
        "ar",
        "__read",
        "arguments",
        "i",
        "ar",
        "arguments",
        "i",
        "il",
        "i",
        "s",
        "arguments",
        "i",
        "s",
        "i",
        "il",
        "i",
        "arguments",
        "i",
        "a",
        "j",
        "jl",
        "j",
        "k",
        "r",
        "k",
        "a",
        "j",
        "r",
        "v",
        "__await",
        "v",
        "__await",
        "v",
        "thisArg",
        "_arguments",
        "generator",
        "generator",
        "thisArg",
        "_arguments",
        "i",
        "verb",
        "verb",
        "verb",
        "i",
        "i",
        "n",
        "g",
        "n",
        "i",
        "n",
        "v",
        "gigya",
        "a",
        "b",
        "q",
        "n",
        "v",
        "a",
        "b",
        "resume",
        "n",
        "v",
        "n",
        "v",
        "step",
        "g",
        "n",
        "v",
        "e",
        "settle",
        "q",
        "e",
        "r",
        "r",
        "__await",
        "gigya",
        "r",
        "fulfill",
        "reject",
        "settle",
        "q",
        "r",
        "value",
        "resume",
        "value",
        "value",
        "resume",
        "value",
        "f",
        "v",
        "f",
        "v",
        "q",
        "q",
        "resume",
        "q",
        "q",
        "o",
        "i",
        "verb",
        "verb",
        "e",
        "e",
        "verb",
        "i",
        "i",
        "n",
        "f",
        "i",
        "n",
        "o",
        "n",
        "v",
        "p",
        "p",
        "__await",
        "o",
        "n",
        "v",
        "n",
        "f",
        "f",
        "v",
        "v",
        "f",
        "o",
        "o",
        "m",
        "m",
        "o",
        "o",
        "__values",
        "__values",
        "o",
        "o",
        "i",
        "verb",
        "verb",
        "verb",
        "i",
        "i",
        "n",
        "i",
        "n",
        "o",
        "n",
        "v",
        "gigya",
        "resolve",
        "reject",
        "v",
        "o",
        "n",
        "v",
        "settle",
        "resolve",
        "reject",
        "v",
        "v",
        "resolve",
        "reject",
        "d",
        "v",
        "gigya",
        "v",
        "v",
        "resolve",
        "v",
        "d",
        "reject",
        "cooked",
        "raw",
        "cooked",
        "raw",
        "cooked",
        "raw",
        "cooked",
        "mod",
        "mod",
        "mod",
        "mod",
        "mod",
        "k",
        "mod",
        "mod",
        "k",
        "result",
        "k",
        "mod",
        "k",
        "result",
        "mod",
        "result",
        "mod",
        "mod",
        "mod",
        "mod",
        "mod",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "nativeProxy",
        "MobileAdapter",
        "nativeProxy",
        "exports",
        "newApiAdapter",
        "exports",
        "IS_SESSION_VALID",
        "SEND_REQUEST",
        "SEND_OAUTH_REQUEST",
        "GET_IDS",
        "ON_PLUGIN_EVENT",
        "ON_CUSTOM_EVENT",
        "REGISTER_FOR_NAMESPACE_EVENTS",
        "nativeProxy",
        "nativeProxy",
        "localStorage_1",
        "MobileAdapter",
        "MobileAdapter",
        "callback",
        "tslib_1",
        "gigya",
        "tslib_1",
        "_a",
        "defaultAdapterFeatures",
        "defaultAdapterSettings",
        "defaultAdapterSettings",
        "eventObject",
        "_this",
        "eventObject",
        "GET_IDS",
        "response",
        "_this",
        "response",
        "_this",
        "response",
        "_this",
        "callback",
        "MobileAdapter",
        "APIKey",
        "paramName",
        "MobileAdapter",
        "ON_PLUGIN_EVENT",
        "MobileAdapter",
        "ON_CUSTOM_EVENT",
        "MobileAdapter",
        "logType",
        "logInfo",
        "logType",
        "logType",
        "logInfo",
        "ON_JS_LOG",
        "log",
        "MobileAdapter",
        "REGISTER_FOR_NAMESPACE_EVENTS",
        "MobileAdapter",
        "callback",
        "callback",
        "response",
        "callback",
        "response",
        "settings",
        "MobileAdapter",
        "callback",
        "CLEAR_SESSION",
        "callback",
        "MobileAdapter",
        "callback",
        "IS_SESSION_VALID",
        "callback",
        "MobileAdapter",
        "methodName",
        "callback",
        "settings",
        "SEND_REQUEST",
        "callback",
        "methodName",
        "settings",
        "MobileAdapter",
        "methodName",
        "callback",
        "settings",
        "SEND_OAUTH_REQUEST",
        "callback",
        "methodName",
        "settings",
        "MobileAdapter",
        "action",
        "callback",
        "method",
        "settings",
        "method",
        "method",
        "action",
        "callback",
        "callback",
        "GSErrors_1",
        "action",
        "callback",
        "callbackID_1",
        "exports",
        "callbackID_1",
        "response",
        "callback",
        "_this",
        "response",
        "exports",
        "callbackID_1",
        "settings",
        "callbackID_1",
        "encodeURIComponent",
        "serializedParams",
        "encodeURIComponent",
        "serializedSettings",
        "action",
        "method",
        "queryString",
        "callbackID_1",
        "action",
        "method",
        "queryString",
        "doesNativeSupport",
        "action",
        "msg",
        "exports",
        "callbackID_1",
        "GSErrors_1",
        "msg",
        "MobileAdapter",
        "action",
        "method",
        "queryString",
        "callbackID",
        "iframe",
        "iframe",
        "URL_PREFIX",
        "action",
        "method",
        "queryString",
        "iframe",
        "iframe",
        "iframe",
        "e",
        "callbackID",
        "exports",
        "callbackID",
        "exports",
        "callbackID",
        "exports",
        "callbackID",
        "res",
        "originalCallback_1",
        "res",
        "clean",
        "clean",
        "iframe",
        "MobileAdapter",
        "eventObject",
        "eventObject",
        "eventObject",
        "eventObject",
        "eventObject",
        "MobileAdapter",
        "action",
        "action",
        "action",
        "MobileAdapter",
        "logType",
        "logType",
        "MobileAdapter",
        "apiKey",
        "gigya",
        "MobileAdapter",
        "btoa",
        "MobileAdapter",
        "isJSON",
        "atob",
        "isJSON",
        "plainString",
        "plainString",
        "MobileAdapter",
        "exports",
        "MobileAdapter",
        "exports",
        "exports",
        "plugin",
        "plugin",
        "parts",
        "parts",
        "parts",
        "parts",
        "plugin",
        "parts",
        "pluginName",
        "parts",
        "funcName",
        "obj",
        "parts",
        "obj",
        "obj",
        "parts",
        "obj",
        "plugin",
        "obj",
        "exports",
        "showPlugin",
        "exports",
        "__webpack_require__",
        "__webpack_provided_Object_dot_assign",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_provided_Object_dot_assign",
        "Gigya_ApiAdaptersMobile",
        "Gigya_ApiAdaptersMobile_1",
        "__webpack_require__",
        "exports",
        "exports",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "GSErrors",
        "exports",
        "exports",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "GSErrorDetails",
        "exports",
        "exports",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "navigator",
        "exports",
        "FileReader",
        "FileReader",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "parseInt",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "chromeInfo",
        "parseInt",
        "chromeInfo",
        "chromeVersion",
        "userAgent",
        "userAgent",
        "parseFloat",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "navigator",
        "navigator",
        "navigator",
        "userAgent",
        "navigator",
        "userAgent",
        "navigator",
        "navigator",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "navigator",
        "navigator",
        "navigator",
        "supportsFlash",
        "ActiveXObject",
        "fo",
        "supportsFlash",
        "e",
        "supportsFlash",
        "userAgent",
        "i",
        "mobileClients",
        "userAgent",
        "mobileClients",
        "i",
        "i",
        "metaTags",
        "i",
        "metaTags",
        "i",
        "metaTags",
        "i",
        "content",
        "content",
        "ActiveXObject",
        "e",
        "navigator",
        "storageName",
        "storageName",
        "storage",
        "storage",
        "testName",
        "testValue",
        "storage",
        "testName",
        "testValue",
        "storage",
        "testName",
        "result",
        "ex",
        "exports",
        "isStorageEnabled",
        "exports",
        "isStorageEnabled",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "os",
        "os",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "os",
        "browser",
        "_b",
        "_a",
        "_a",
        "_a",
        "_b",
        "_b",
        "baseDomains",
        "baseDomains",
        "exports",
        "domains_1",
        "baseDomains",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "exports",
        "_nextZIndex",
        "_nextZIndex",
        "exports",
        "getNextZIndex",
        "fileNames",
        "scripts",
        "i",
        "i",
        "scripts",
        "i",
        "script",
        "src",
        "gigyaCdnRegex",
        "src",
        "src",
        "fileNames",
        "fileNames",
        "fileName",
        "src",
        "fileName",
        "isFileNameExistInSrc",
        "scriptElement",
        "script",
        "scriptElement",
        "exports",
        "getGigyaScriptElement",
        "el",
        "eventName",
        "Event",
        "eventName",
        "e",
        "eventName",
        "el",
        "exports",
        "dispatch",
        "el",
        "handler",
        "debugName",
        "el",
        "el",
        "el",
        "el",
        "addEventListener",
        "el",
        "e",
        "handler",
        "e",
        "addEventListener",
        "el",
        "e",
        "e",
        "e",
        "e",
        "handler",
        "e",
        "exports",
        "addButtonSubmitListener",
        "el",
        "eventName",
        "handler",
        "el",
        "handler",
        "el",
        "el",
        "eventName",
        "handler",
        "el",
        "eventName",
        "handler",
        "exports",
        "addEventListener",
        "el",
        "eventName",
        "handler",
        "handler",
        "el",
        "el",
        "eventName",
        "handler",
        "el",
        "eventName",
        "handler",
        "exports",
        "removeEventListener",
        "exports",
        "disableDefaultEventHandling",
        "handler",
        "_removeDialogBackListener",
        "backListener",
        "e",
        "e",
        "e",
        "e",
        "handler",
        "e",
        "_removeDialogBackListener",
        "addEventListener",
        "backListener",
        "exports",
        "addDialogBackListener",
        "backListener",
        "removeEventListener",
        "backListener",
        "backListener",
        "exports",
        "_removeDialogBackListener",
        "el",
        "el",
        "el",
        "exports",
        "appendToBody",
        "el",
        "el",
        "el",
        "el",
        "el",
        "exports",
        "removeElement",
        "child",
        "parent",
        "child",
        "directParent",
        "parent",
        "directParent",
        "directParent",
        "directParent",
        "exports",
        "isChildOf",
        "el",
        "el",
        "getComputedStyle",
        "el",
        "computedStyle",
        "computedStyle",
        "el",
        "el",
        "exports",
        "isVisible",
        "name",
        "LocalInfo_1",
        "name",
        "exports",
        "getCenteredDivID",
        "domElemName",
        "domElemAttrs",
        "domElemName",
        "domElemAttrs",
        "elemAttr",
        "domElemAttrs",
        "newDomElem",
        "elemAttr",
        "domElemAttrs",
        "elemAttr",
        "newDomElem",
        "exports",
        "createElementWithAttributes",
        "id",
        "el",
        "el",
        "getNextZIndex",
        "el",
        "id",
        "el",
        "id",
        "el",
        "el",
        "el",
        "exports",
        "createTopLevelDiv",
        "id",
        "id",
        "el",
        "el",
        "exports",
        "hideByID",
        "id",
        "id",
        "el",
        "el",
        "LocalInfo_1",
        "el",
        "el",
        "el",
        "exports",
        "showByID",
        "id",
        "id",
        "c",
        "c",
        "e",
        "exports",
        "clearByID",
        "html",
        "container",
        "divMeasure",
        "divMeasure",
        "divMeasure",
        "html",
        "container",
        "divMeasure",
        "divMeasure",
        "divMeasure",
        "divMeasure",
        "divMeasure",
        "w",
        "h",
        "exports",
        "getHTMLSize",
        "parentElement",
        "className",
        "includeParent",
        "parentElement",
        "includeParent",
        "isElementClass",
        "parentElement",
        "className",
        "arEls",
        "parentElement",
        "parentElement",
        "i",
        "els",
        "i",
        "isElementClass",
        "els",
        "i",
        "className",
        "arEls",
        "els",
        "i",
        "arEls",
        "exports",
        "getElementsByClass",
        "parentElement",
        "tagName",
        "attributeName",
        "attributeValue",
        "parentElement",
        "tagName",
        "i",
        "els",
        "i",
        "els",
        "i",
        "attributeName",
        "attributeValue",
        "arEls",
        "els",
        "i",
        "arEls",
        "exports",
        "getElementsByAttribute",
        "el",
        "el",
        "el",
        "viewportUtils",
        "rect",
        "scroll",
        "rect",
        "scroll",
        "left",
        "top",
        "left",
        "rect",
        "top",
        "rect",
        "exports",
        "getElementPosition",
        "el",
        "className",
        "el",
        "el",
        "getClassNames",
        "el",
        "existingClasses",
        "className",
        "j",
        "newClasses",
        "newClasses",
        "j",
        "i",
        "existingClasses",
        "existingClasses",
        "i",
        "newClasses",
        "j",
        "exists",
        "exists",
        "existingClasses",
        "newClasses",
        "j",
        "existingClasses",
        "existingOriginalLength",
        "el",
        "existingClasses",
        "exports",
        "addClassToElement",
        "el",
        "className",
        "substring",
        "substring",
        "substring",
        "el",
        "getClassNames",
        "el",
        "arClass",
        "i",
        "i",
        "arClass",
        "i",
        "className",
        "substring",
        "arClass",
        "i",
        "className",
        "arClass",
        "i",
        "el",
        "arClass",
        "exports",
        "removeClassFromElement",
        "el",
        "el",
        "classes",
        "el",
        "classes",
        "exports",
        "getClassNames",
        "el",
        "className",
        "el",
        "className",
        "el",
        "getClassNames",
        "el",
        "i",
        "arClass",
        "i",
        "arClass",
        "i",
        "className",
        "exists",
        "exists",
        "exports",
        "isElementClass",
        "exports",
        "cancelEvent",
        "name",
        "name",
        "name",
        "divContainer",
        "name",
        "name",
        "divContainer",
        "exports",
        "createElement",
        "container",
        "w",
        "h",
        "center",
        "container",
        "container",
        "w",
        "w",
        "w",
        "w",
        "isNaN",
        "w",
        "isWidthPrecentage",
        "isWidthPrecentage",
        "w",
        "w",
        "container",
        "widthValue",
        "container",
        "widthValue",
        "h",
        "h",
        "h",
        "h",
        "isNaN",
        "w",
        "isHeightPrecentage",
        "isHeightPrecentage",
        "h",
        "h",
        "container",
        "heightValue",
        "container",
        "heightValue",
        "center",
        "w",
        "h",
        "container",
        "center",
        "container",
        "getNextZIndex",
        "viewportUtils",
        "viewportUtils",
        "scrl",
        "scrl",
        "container",
        "vpt",
        "vp",
        "h",
        "container",
        "vpl",
        "vp",
        "w",
        "container",
        "exports",
        "setSize",
        "src",
        "ifr",
        "src",
        "ifr",
        "ifr",
        "ifr",
        "ifr",
        "ifr",
        "appendToBody",
        "ifr",
        "functionsUtils",
        "appendToBody",
        "ifr",
        "ifr",
        "exports",
        "createHiddenIframe",
        "value",
        "value",
        "exports",
        "attributeEncode",
        "elements",
        "matcher",
        "replacePredicate",
        "criteria",
        "criteria",
        "criteria",
        "elements",
        "el",
        "el",
        "el",
        "attr",
        "criteria",
        "attr",
        "attr",
        "attr",
        "matcher",
        "replacePredicate",
        "exports",
        "manipulateAttributes",
        "el",
        "el",
        "NodeFilter",
        "n",
        "treeWalker",
        "textNodes",
        "n",
        "textNodes",
        "exports",
        "textNodesUnder",
        "attrName",
        "attrName",
        "exports",
        "isHTMLBooleanAttribute",
        "el",
        "el",
        "el",
        "HTMLFormElement",
        "isElementClass",
        "el",
        "isBelongToGigyaFieldset",
        "el",
        "exports",
        "isBelongToGigyaFieldset",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "obj",
        "includeFunctions",
        "prettyPrint",
        "l",
        "maxLevel",
        "includeFunctions",
        "includeFunctions",
        "prettyPrint",
        "prettyPrint",
        "l",
        "l",
        "maxLevel",
        "maxLevel",
        "LocalInfo_1",
        "obj",
        "l",
        "l",
        "l",
        "maxLevel",
        "prettyPrint",
        "tab",
        "newline",
        "i",
        "l",
        "i",
        "prefix",
        "tab",
        "obj",
        "t",
        "t",
        "t",
        "obj",
        "t",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "arr",
        "i",
        "obj",
        "i",
        "v",
        "obj",
        "i",
        "t",
        "v",
        "v",
        "t",
        "v",
        "t",
        "v",
        "v",
        "t",
        "includeFunctions",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "t",
        "v",
        "v",
        "serialize",
        "v",
        "includeFunctions",
        "prettyPrint",
        "l",
        "v",
        "json",
        "prefix",
        "tab",
        "v",
        "n",
        "obj",
        "v",
        "obj",
        "n",
        "t",
        "v",
        "v",
        "t",
        "v",
        "v",
        "t",
        "v",
        "v",
        "t",
        "includeFunctions",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "t",
        "v",
        "v",
        "newline",
        "serialize",
        "v",
        "includeFunctions",
        "prettyPrint",
        "l",
        "v",
        "json",
        "prefix",
        "tab",
        "n",
        "v",
        "newline",
        "prefix",
        "arr",
        "newline",
        "json",
        "newline",
        "newline",
        "prefix",
        "arr",
        "exports",
        "serialize",
        "json",
        "defaultValue",
        "scope",
        "json",
        "json",
        "defaultValue",
        "scope",
        "key",
        "scope",
        "keys",
        "key",
        "values",
        "scope",
        "key",
        "eval",
        "keys",
        "json",
        "fn",
        "values",
        "e",
        "e",
        "defaultValue",
        "exports",
        "deserialize",
        "json",
        "defaultValue",
        "LocalInfo_1",
        "deserialize",
        "json",
        "defaultValue",
        "json",
        "e",
        "defaultValue",
        "exports",
        "parse",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "url",
        "isAbsolute",
        "isAbsolute",
        "isAbsolute",
        "isAbsolute",
        "url",
        "url",
        "url",
        "protocol",
        "url",
        "url",
        "Uri",
        "Uri",
        "Uri",
        "Uri",
        "Uri",
        "Uri",
        "Uri",
        "name",
        "name",
        "val",
        "val",
        "val",
        "name",
        "addition",
        "name",
        "encodeURIComponent",
        "name",
        "Uri",
        "retries",
        "retries",
        "retries",
        "tslib_1",
        "gigya",
        "tslib_1",
        "_b",
        "_b",
        "_b",
        "_a",
        "_b",
        "_a",
        "_b",
        "_b",
        "_a",
        "e_1",
        "_b",
        "retries",
        "e_1",
        "_b",
        "retries",
        "_b",
        "Uri",
        "url",
        "Uri",
        "url",
        "Uri",
        "Uri",
        "Uri",
        "Uri",
        "domain",
        "domain",
        "stringUtilsUtils",
        "domain",
        "Uri",
        "url",
        "isAbsolute",
        "isAbsolute",
        "isAbsolute",
        "url",
        "Uri",
        "url",
        "isAbsolute",
        "Uri",
        "tslib_1",
        "gigya",
        "tslib_1",
        "_a",
        "_a",
        "url",
        "url",
        "response",
        "_a",
        "response",
        "response",
        "Uri",
        "gigya",
        "resolve",
        "reject",
        "XMLHttpRequest",
        "xhr",
        "url",
        "xhr",
        "xhr",
        "reject",
        "xhr",
        "xhr",
        "xhr",
        "reject",
        "xhr",
        "xhr",
        "xhr",
        "resolve",
        "jsonResponse",
        "e",
        "reject",
        "e",
        "Uri",
        "ms",
        "tslib_1",
        "gigya",
        "tslib_1",
        "_a",
        "gigya",
        "r",
        "setTimeout",
        "r",
        "ms",
        "Uri",
        "exports",
        "Uri",
        "exports",
        "exports",
        "ar",
        "o",
        "i",
        "ar",
        "i",
        "ar",
        "i",
        "o",
        "i",
        "exports",
        "indexOf",
        "ar",
        "i",
        "ar",
        "i",
        "ar2",
        "i",
        "ar",
        "i",
        "ar2",
        "exports",
        "clone",
        "ar",
        "value",
        "ar",
        "ar",
        "i",
        "i",
        "ar",
        "i",
        "value",
        "ar",
        "i",
        "exports",
        "removeByValue",
        "ar",
        "property",
        "value",
        "ar",
        "ar",
        "i",
        "i",
        "ar",
        "i",
        "property",
        "value",
        "ar",
        "i",
        "exports",
        "removeByProperty",
        "delimiter",
        "lowerCase",
        "lowerCase",
        "delimiter",
        "exports",
        "getArrayFromString",
        "array",
        "_i",
        "arguments",
        "_i",
        "args",
        "_i",
        "arguments",
        "_i",
        "array",
        "arguments",
        "array",
        "i",
        "length",
        "i",
        "array",
        "i",
        "result",
        "item",
        "j",
        "argsLength",
        "j",
        "arguments",
        "j",
        "arr",
        "arr",
        "item",
        "j",
        "argsLength",
        "result",
        "item",
        "result",
        "exports",
        "intersect",
        "arr",
        "val",
        "fromIndex",
        "fromIndex",
        "fromIndex",
        "arr",
        "i",
        "fromIndex",
        "arr",
        "i",
        "val",
        "i",
        "exports",
        "lastIndexOf",
        "arr",
        "action",
        "i",
        "arr",
        "i",
        "action",
        "arr",
        "i",
        "i",
        "arr",
        "exports",
        "forEach",
        "obj",
        "action",
        "name",
        "obj",
        "obj",
        "name",
        "action",
        "obj",
        "name",
        "name",
        "obj",
        "exports",
        "forEachProp",
        "arr",
        "condition",
        "i",
        "arr",
        "i",
        "condition",
        "arr",
        "i",
        "i",
        "arr",
        "exports",
        "some",
        "arr",
        "condition",
        "i",
        "arr",
        "i",
        "condition",
        "arr",
        "i",
        "i",
        "arr",
        "exports",
        "every",
        "obj",
        "condition",
        "name",
        "obj",
        "obj",
        "name",
        "condition",
        "obj",
        "name",
        "name",
        "obj",
        "exports",
        "everyProp",
        "arr",
        "action",
        "forEach",
        "arr",
        "item",
        "idx",
        "arr",
        "result",
        "action",
        "item",
        "idx",
        "arr",
        "result",
        "exports",
        "arr",
        "condition",
        "some",
        "arr",
        "item",
        "index",
        "arr",
        "condition",
        "item",
        "index",
        "arr",
        "result",
        "index",
        "result",
        "exports",
        "firstIndex",
        "arr",
        "condition",
        "arr",
        "firstIndex",
        "arr",
        "condition",
        "exports",
        "first",
        "enumType",
        "i",
        "enumType",
        "enumType",
        "i",
        "results",
        "enumType",
        "i",
        "results",
        "exports",
        "getAllEnumValues",
        "arr",
        "i",
        "arr",
        "i",
        "i",
        "j",
        "arr",
        "j",
        "arr",
        "i",
        "arr",
        "j",
        "arr",
        "j",
        "arr",
        "exports",
        "getUniqueValues",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "LocalInfo_1",
        "exports",
        "_getBaseDomain",
        "pageDomain",
        "baseDomain",
        "pageDomain",
        "pageDomain",
        "LocalInfo_1",
        "baseDomain",
        "baseDomain",
        "_getBaseDomain",
        "cookieDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "baseDomain",
        "pageDomain",
        "cookieDomain",
        "exports",
        "getDefaultDomain",
        "name",
        "name",
        "name",
        "name",
        "regex",
        "match",
        "unescape",
        "match",
        "exports",
        "get",
        "name",
        "value",
        "expires_in",
        "cookieDomain",
        "dontUseRootPath",
        "LocalInfo_1",
        "cookieDomain",
        "cookieDomain",
        "getDefaultDomain",
        "expires_in",
        "expires_in",
        "isNaN",
        "expires_in",
        "expireMs",
        "getInfiniteExpirationTimeInSeconds",
        "expires_in",
        "expireMs",
        "expireMs",
        "expires_in",
        "exdate",
        "exdate",
        "expireMs",
        "name",
        "escape",
        "value",
        "dontUseRootPath",
        "expireMs",
        "exdate",
        "cookieDomain",
        "cookieDomain",
        "cookieDomain",
        "cookieDomain",
        "cookieString",
        "expireMs",
        "expireMs",
        "get",
        "name",
        "cookieString",
        "name",
        "escape",
        "value",
        "dontUseRootPath",
        "expireMs",
        "exdate",
        "pageDomain",
        "pageDomain",
        "pageDomain",
        "pageDomain",
        "cookieString",
        "exports",
        "name",
        "LocalInfo_1",
        "_getBaseDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "pageDomain",
        "baseDomain",
        "name",
        "baseDomain",
        "name",
        "baseDomain",
        "name",
        "LocalInfo_1",
        "name",
        "LocalInfo_1",
        "name",
        "name",
        "exports",
        "remove",
        "exports",
        "getInfiniteExpirationTimeInSeconds",
        "doc",
        "doc",
        "doc",
        "doc",
        "d",
        "doc",
        "e",
        "exports",
        "canSaveCookie",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "apiDomain",
        "defaultApiDomain",
        "apiDomain",
        "apiDomain",
        "resolveApiDomain",
        "defaultApiDomain",
        "defaultApiDomain",
        "Uri_1",
        "apiDomain",
        "Uri_1",
        "defaultApiDomain",
        "shouldAddNamespace",
        "gigyaDomainNamespaces",
        "subDomain",
        "subDomain",
        "gigyaDomainNamespaces",
        "subDomain",
        "apiDomain",
        "apiDomain",
        "exports",
        "apiDomainFactory",
        "dataCenter",
        "defaultDomain",
        "dataCenter",
        "dataCenter",
        "defaultDomain",
        "defaultDomain",
        "dataCenter",
        "defaultDomain",
        "domain",
        "domain",
        "exports",
        "getGigyaDomain",
        "baseDomains",
        "currentDomain",
        "defaultDomains",
        "baseDomains",
        "baseDomains",
        "currentDomain",
        "currentDomain",
        "location",
        "defaultDomains",
        "defaultDomains",
        "currentDomain",
        "baseDomains",
        "baseDomains",
        "baseDomains",
        "Uri_1",
        "currentDomain",
        "defaultDomains",
        "baseDomains",
        "baseDomains",
        "defaultDomains",
        "_i",
        "baseDomains_1",
        "_i",
        "baseDomains_1",
        "_i",
        "stringUtilsUtils",
        "rawDomain",
        "Uri_1",
        "baseDomain",
        "baseUri",
        "originURI",
        "baseUri",
        "baseUri",
        "originURI",
        "baseUri",
        "originURI",
        "exports",
        "getBaseDomain",
        "customApiDomainPrefix",
        "baseDomain",
        "dataCenter",
        "defaultApiDomain",
        "customApiDomainPrefix",
        "customApiDomainPrefix",
        "baseDomain",
        "baseDomain",
        "LocalInfo_1",
        "dataCenter",
        "dataCenter",
        "defaultApiDomain",
        "defaultApiDomain",
        "customApiDomainPrefix",
        "baseDomain",
        "baseDomain",
        "defaultApiDomain",
        "customApiDomainPrefix",
        "baseDomain",
        "getGigyaDomain",
        "dataCenter",
        "defaultApiDomain",
        "exports",
        "resolveApiDomain",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "name",
        "arParams",
        "eval",
        "name",
        "name",
        "arParts",
        "arParts",
        "eval",
        "arParts",
        "fn",
        "scope",
        "arParams",
        "exports",
        "callFunction",
        "func",
        "completeOnly",
        "completeOnly",
        "func",
        "called_1",
        "called_1",
        "func",
        "fnOnLoad",
        "DOMUtils",
        "fnOnLoad",
        "DOMUtils",
        "fnOnLoad",
        "exports",
        "invokeOnPageLoad",
        "publicName",
        "fnc",
        "publicName",
        "iSegment",
        "arNameSegments",
        "iSegment",
        "arNameSegments",
        "iSegment",
        "oCurrentSegment",
        "sSegment",
        "oCurrentSegment",
        "sSegment",
        "oCurrentSegment",
        "oCurrentSegment",
        "sSegment",
        "oCurrentSegment",
        "arNameSegments",
        "arNameSegments",
        "fnc",
        "exports",
        "createAlias",
        "fn",
        "delayMilliseconds",
        "timer",
        "clearTimeout",
        "timer",
        "timer",
        "setTimeout",
        "timer",
        "fn",
        "delayMilliseconds",
        "exports",
        "debounce",
        "iframe",
        "src",
        "src",
        "src",
        "cdn_1",
        "LocalInfo_1",
        "LocalInfo_1",
        "LocalInfo_1",
        "iframe",
        "src",
        "exports",
        "addSrcToIFrameIfNeeded",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "AbstractLocalStorageAdapter",
        "AbstractLocalStorageAdapter",
        "key",
        "o",
        "key",
        "JSONUtils",
        "o",
        "AbstractLocalStorageAdapter",
        "key",
        "defaultValue",
        "JSONUtils",
        "key",
        "defaultValue",
        "AbstractLocalStorageAdapter",
        "AbstractLocalStorageAdapter",
        "exports",
        "AbstractLocalStorageAdapter",
        "_super",
        "tslib_1",
        "AbstractAsyncLocalStorageAdapter",
        "_super",
        "_super",
        "_this",
        "_this",
        "AbstractAsyncLocalStorageAdapter",
        "AbstractAsyncLocalStorageAdapter",
        "callback",
        "callback",
        "setTimeout",
        "_this",
        "callback",
        "AbstractAsyncLocalStorageAdapter",
        "AbstractLocalStorageAdapter",
        "exports",
        "AbstractAsyncLocalStorageAdapter",
        "_super",
        "tslib_1",
        "StorageAdapter",
        "_super",
        "_super",
        "_super",
        "arguments",
        "StorageAdapter",
        "key",
        "key",
        "StorageAdapter",
        "key",
        "value",
        "expiresIn",
        "key",
        "value",
        "ex",
        "StorageAdapter",
        "key",
        "key",
        "StorageAdapter",
        "AbstractLocalStorageAdapter",
        "_super",
        "tslib_1",
        "LocalStorageAdapter",
        "_super",
        "_super",
        "_this",
        "_this",
        "LocalStorageAdapter",
        "LocalStorageAdapter",
        "LocalInfo_1",
        "LocalStorageAdapter",
        "StorageAdapter",
        "_super",
        "tslib_1",
        "SessionStorageAdapter",
        "_super",
        "_super",
        "_this",
        "_this",
        "SessionStorageAdapter",
        "SessionStorageAdapter",
        "LocalInfo_1",
        "SessionStorageAdapter",
        "StorageAdapter",
        "_super",
        "tslib_1",
        "FirefoxStorageAdapter",
        "_super",
        "_super",
        "_super",
        "arguments",
        "FirefoxStorageAdapter",
        "LocalInfo_1",
        "FirefoxStorageAdapter",
        "FirefoxStorageAdapter",
        "key",
        "location",
        "key",
        "FirefoxStorageAdapter",
        "key",
        "value",
        "expiresIn",
        "location",
        "key",
        "value",
        "ex",
        "FirefoxStorageAdapter",
        "key",
        "location",
        "key",
        "FirefoxStorageAdapter",
        "AbstractLocalStorageAdapter",
        "_super",
        "tslib_1",
        "FlashAsyncStorageAdapter",
        "_super",
        "_super",
        "_this",
        "isSuccess",
        "_this",
        "_this",
        "FlashAsyncStorageAdapter",
        "LocalInfo_1",
        "LocalInfo_1",
        "LocalInfo_1",
        "FlashAsyncStorageAdapter",
        "FlashAsyncStorageAdapter",
        "callback",
        "_this",
        "callback",
        "scriptUtils",
        "callback",
        "_this",
        "callback",
        "FlashAsyncStorageAdapter",
        "callback",
        "SwfStore",
        "callback",
        "callback",
        "FlashAsyncStorageAdapter",
        "key",
        "key",
        "FlashAsyncStorageAdapter",
        "key",
        "value",
        "expiresIn",
        "key",
        "value",
        "FlashAsyncStorageAdapter",
        "key",
        "key",
        "FlashAsyncStorageAdapter",
        "AbstractAsyncLocalStorageAdapter",
        "_super",
        "tslib_1",
        "CookieStorageAdapter",
        "_super",
        "_super",
        "_super",
        "arguments",
        "CookieStorageAdapter",
        "cookieUtils",
        "CookieStorageAdapter",
        "CookieStorageAdapter",
        "key",
        "cookieUtils",
        "key",
        "CookieStorageAdapter",
        "key",
        "value",
        "expiresIn",
        "domain",
        "cookieUtils",
        "key",
        "value",
        "expiresIn",
        "domain",
        "CookieStorageAdapter",
        "key",
        "cookieUtils",
        "key",
        "CookieStorageAdapter",
        "AbstractLocalStorageAdapter",
        "exports",
        "CookieStorageAdapter",
        "_super",
        "tslib_1",
        "MemoryStorageAdapter",
        "_super",
        "_super",
        "_this",
        "_this",
        "MemoryStorageAdapter",
        "MemoryStorageAdapter",
        "MemoryStorageAdapter",
        "key",
        "key",
        "MemoryStorageAdapter",
        "key",
        "value",
        "expiresIn",
        "key",
        "value",
        "MemoryStorageAdapter",
        "key",
        "key",
        "MemoryStorageAdapter",
        "MemoryStorageAdapter",
        "AbstractLocalStorageAdapter",
        "exports",
        "MemoryStorageAdapter",
        "exports",
        "LocalStorageAdapter",
        "SessionStorageAdapter",
        "FirefoxStorageAdapter",
        "FlashAsyncStorageAdapter",
        "CookieStorageAdapter",
        "MemoryStorageAdapter",
        "exports",
        "adapter",
        "adapter",
        "adapter",
        "exports",
        "adapterName",
        "exports",
        "adapterName",
        "adapter",
        "exports",
        "adapterName",
        "exports",
        "initializeAdapter",
        "callback",
        "exports",
        "_i",
        "adapters_1",
        "_i",
        "adapters_1",
        "_i",
        "adapter_1",
        "adapter_1",
        "AbstractAsyncLocalStorageAdapter",
        "callback",
        "storage",
        "initializeAdapter",
        "adapter_1",
        "storage",
        "storage",
        "initializeAdapter",
        "MemoryStorageAdapter",
        "callback",
        "storage",
        "AbstractAsyncLocalStorageAdapter",
        "storage",
        "callback",
        "storage",
        "callback",
        "storage",
        "storage",
        "exports",
        "waitForService",
        "waitForService",
        "key",
        "adapter",
        "key",
        "exports",
        "getItem",
        "key",
        "value",
        "expiresIn",
        "adapter",
        "key",
        "value",
        "expiresIn",
        "exports",
        "setItem",
        "key",
        "adapter",
        "key",
        "exports",
        "removeItem",
        "key",
        "o",
        "adapter",
        "key",
        "o",
        "exports",
        "setObject",
        "key",
        "defaultValue",
        "adapter",
        "key",
        "defaultValue",
        "exports",
        "getObject",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "url",
        "Uri_1",
        "url",
        "scriptUrl",
        "scriptUrl",
        "src",
        "src",
        "src",
        "formatSrcUrl",
        "src",
        "pending",
        "pendingSrc",
        "pending",
        "pendingSrc",
        "exports",
        "isLoaded",
        "src",
        "fnOnError",
        "fnOnLoad",
        "loadOnce",
        "removeAfter",
        "treatTogether",
        "removeAfter",
        "removeAfter",
        "src",
        "src",
        "LocalInfo_1",
        "src",
        "loadOnce",
        "formatSrcUrl",
        "src",
        "pending",
        "pendingSrc",
        "pending",
        "pendingSrc",
        "src",
        "fnOnLoad",
        "fnOnLoad",
        "pending",
        "pendingSrc",
        "fnOnLoad",
        "pending",
        "pendingSrc",
        "fnOnError",
        "oScript",
        "pending",
        "pendingSrc",
        "fnOnLoad",
        "fnOnError",
        "treatTogether",
        "treatTogether",
        "arrayUtils",
        "treatTogether",
        "url",
        "pending",
        "url",
        "oScript",
        "oScript",
        "fnOnLoad",
        "fnOnError",
        "script",
        "script",
        "script",
        "done",
        "oScript",
        "oScript",
        "i",
        "oScript",
        "i",
        "oScript",
        "i",
        "oScript",
        "i",
        "oScript",
        "oScript",
        "oScript",
        "done",
        "removeAfter",
        "removeAfter",
        "removeAfter",
        "setTimeout",
        "script",
        "script",
        "script",
        "removeAfter",
        "script",
        "fnOnScriptLoad",
        "script",
        "fnOnScriptLoad",
        "script",
        "i",
        "oScript",
        "i",
        "oScript",
        "i",
        "oScript",
        "i",
        "pending",
        "src",
        "head",
        "head",
        "head",
        "script",
        "webSdkResourcesDomain",
        "src",
        "addSdkVersion",
        "src",
        "src",
        "script",
        "scriptSrc",
        "LocalInfo_1",
        "fnSetScriptSrc",
        "setTimeout",
        "fnSetScriptSrc",
        "LocalInfo_1",
        "functionsUtils",
        "scriptLoader",
        "scriptLoader",
        "exports",
        "load",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "ResourceTypes",
        "exports",
        "exports",
        "url",
        "callback",
        "resourceType",
        "removeAfter",
        "resourceType",
        "resourceType",
        "ResourceTypes",
        "removeAfter",
        "removeAfter",
        "resourceType",
        "ResourceTypes",
        "load",
        "url",
        "callback",
        "callback",
        "removeAfter",
        "ResourceTypes",
        "loadImage",
        "url",
        "callback",
        "ResourceTypes",
        "loadIframe",
        "url",
        "callback",
        "removeAfter",
        "exports",
        "triggerResource",
        "url",
        "callback",
        "Image",
        "loaded",
        "loaded",
        "callback",
        "img",
        "img",
        "fnOnLoad",
        "img",
        "url",
        "url",
        "callback",
        "removeAfter",
        "removeAfter",
        "removeAfter",
        "ifr",
        "ifr",
        "ifr",
        "ifr",
        "ifr",
        "removeAfter",
        "removeAfter",
        "e",
        "e",
        "e",
        "el",
        "e",
        "e",
        "e",
        "el",
        "e",
        "el",
        "el",
        "el",
        "el",
        "callback",
        "removeAfter",
        "el",
        "ex",
        "removeAfter",
        "DOMUtils",
        "ifr",
        "fnOnLoad",
        "DOMUtils",
        "ifr",
        "fnOnLoad",
        "ifr",
        "e",
        "fnOnLoad",
        "e",
        "ifr",
        "fnOnLoad",
        "ifr",
        "url",
        "DOMUtils",
        "ifr",
        "serviceName",
        "fnOnError",
        "fnOnLoad",
        "cdn_1",
        "serviceName",
        "load",
        "url",
        "serviceName",
        "url",
        "fnOnError",
        "fnOnError",
        "fnOnLoad",
        "exports",
        "loadService",
        "exports",
        "exports",
        "s",
        "s",
        "exports",
        "trim",
        "s",
        "_i",
        "arguments",
        "_i",
        "rest",
        "_i",
        "arguments",
        "_i",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "s",
        "s",
        "i",
        "arguments",
        "i",
        "s",
        "exports",
        "format",
        "s",
        "s",
        "s",
        "exports",
        "capitalize",
        "s",
        "suffix",
        "s",
        "suffix",
        "s",
        "suffix",
        "exports",
        "endsWith",
        "exports",
        "escapeRegExp",
        "find",
        "replace",
        "find",
        "escapeRegExp",
        "find",
        "replace",
        "exports",
        "replaceAll",
        "str1",
        "str2",
        "str1",
        "str1",
        "str2",
        "str2",
        "str1",
        "str2",
        "arr",
        "x",
        "x",
        "exports",
        "mergeCommaSeparatedValues",
        "exports",
        "exports",
        "scrOfY",
        "scrOfX",
        "scrOfY",
        "scrOfX",
        "scrOfY",
        "scrOfX",
        "scrOfX",
        "scrOfY",
        "exports",
        "getScroll",
        "de",
        "h",
        "h",
        "db",
        "de",
        "w",
        "w",
        "db",
        "w",
        "h",
        "exports",
        "getFullSize",
        "parseInt",
        "orientation",
        "orientation",
        "orientation",
        "exports",
        "getOrientation",
        "h",
        "w",
        "h",
        "de",
        "h",
        "h",
        "db",
        "w",
        "de",
        "w",
        "w",
        "db",
        "w",
        "h",
        "exports",
        "getInnerSize",
        "getScroll",
        "getInnerSize",
        "scroll",
        "size",
        "scroll",
        "size",
        "exports",
        "getMiddleCenter",
        "rect",
        "getScroll",
        "getInnerSize",
        "rect",
        "scroll",
        "rect",
        "scroll",
        "size",
        "exports",
        "isRectHorizontallyVisible",
        "rect",
        "getScroll",
        "getInnerSize",
        "rect",
        "scroll",
        "rect",
        "scroll",
        "size",
        "rect",
        "scroll",
        "rect",
        "scroll",
        "size",
        "exports",
        "isRectFullyVisible",
        "element",
        "element",
        "element",
        "element",
        "exports",
        "scrollIntoView",
        "exports",
        "exports",
        "exports",
        "path",
        "_b",
        "_a",
        "_a",
        "_a",
        "_b",
        "_b",
        "_b",
        "_d",
        "_c",
        "_c",
        "_c",
        "_d",
        "_d",
        "_d",
        "baseDomain",
        "baseDomain",
        "exports",
        "protocol",
        "selectedSchemaRepository",
        "selectedCdnHostsIndex",
        "selectedCdnHostsIndex",
        "baseDomain",
        "selectedSchemaRepository",
        "selectedCdnHostsIndex",
        "path",
        "path",
        "path",
        "path",
        "protocol",
        "baseDomain",
        "path",
        "exports",
        "getCdnResource",
        "getCdnResource",
        "exports",
        "getImgCdnResource"
    ],
    "literals": [
        "'undefined'",
        "'Module'",
        "'__esModule'",
        "'object'",
        "'default'",
        "'string'",
        "'default'",
        "'a'",
        "\"\"",
        "\"./src/core/Gigya.Js.Adapters.Mobile/index.ts\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"use strict\"",
        "\"__extends\"",
        "\"__assign\"",
        "\"__rest\"",
        "\"__decorate\"",
        "\"__param\"",
        "\"__metadata\"",
        "\"__awaiter\"",
        "\"__generator\"",
        "\"__exportStar\"",
        "\"__values\"",
        "\"__read\"",
        "\"__spread\"",
        "\"__spreadArrays\"",
        "\"__await\"",
        "\"__asyncGenerator\"",
        "\"__asyncDelegator\"",
        "\"__asyncValues\"",
        "\"__makeTemplateObject\"",
        "\"__importStar\"",
        "\"__importDefault\"",
        "\"function\"",
        "\"object\"",
        "\"function\"",
        "\"object\"",
        "\"function\"",
        "\"throw\"",
        "\"throw\"",
        "\"return\"",
        "\"function\"",
        "\"Generator is already executing.\"",
        "\"return\"",
        "\"throw\"",
        "\"return\"",
        "\"function\"",
        "\"function\"",
        "\"return\"",
        "\"Symbol.asyncIterator is not defined.\"",
        "\"next\"",
        "\"throw\"",
        "\"return\"",
        "\"next\"",
        "\"throw\"",
        "\"next\"",
        "\"throw\"",
        "\"return\"",
        "\"return\"",
        "\"Symbol.asyncIterator is not defined.\"",
        "\"function\"",
        "\"next\"",
        "\"throw\"",
        "\"return\"",
        "\"raw\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"__assign\"",
        "\"./src/core/Gigya.Js.Adapters.Mobile/app/MobileAdapter.ts\"",
        "\"__esModule\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"./src/core/Gigya.Js/app/GSErrors.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/localStorage.ts\"",
        "'gsapi://'",
        "'is_session_valid'",
        "'send_request'",
        "'send_oauth_request'",
        "'get_ids'",
        "'on_plugin_event'",
        "'on_custom_event'",
        "'register_for_namespace_events'",
        "'clear_session'",
        "'on_js_log'",
        "'Mobile'",
        "'function'",
        "'function'",
        "','",
        "','",
        "'function'",
        "'*'",
        "'$event'",
        "''",
        "'socialize.getGmidTicket'",
        "'gmidTicket'",
        "''",
        "''",
        "'Mobile SDK does not support feature '",
        "'APIKey'",
        "''",
        "'_'",
        "\"callbackID=\"",
        "\"&params=\"",
        "\"&settings=\"",
        "'The Native Mobile SDK does not support feature '",
        "'iframe'",
        "'none'",
        "\"\"",
        "\"/\"",
        "\"?\"",
        "'user'",
        "'user'",
        "'*'",
        "'base64'",
        "'base64'",
        "\"./src/core/Gigya.Js.Adapters.Mobile/app/showPlugin.ts\"",
        "\"__esModule\"",
        "'.'",
        "'socialize'",
        "'commentsUI'",
        "'comments'",
        "'show'",
        "'function'",
        "'plugin'",
        "\"./src/core/Gigya.Js.Adapters.Mobile/index.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js.Adapters.Mobile/app/MobileAdapter.ts\"",
        "\"./src/core/Gigya.Js.Adapters.Mobile/app/showPlugin.ts\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"__assign\"",
        "\"./src/core/Gigya.Js/app/GSErrors.ts\"",
        "\"__esModule\"",
        "\"OK\"",
        "\"OK\"",
        "\"Data_Pending\"",
        "\"Data_Pending\"",
        "\"NETWORK_ERROR\"",
        "\"NETWORK_ERROR\"",
        "\"DATA_PENDING\"",
        "\"DATA_PENDING\"",
        "\"OPERATION_CANCELED\"",
        "\"OPERATION_CANCELED\"",
        "\"PERMISSION_GRANTED\"",
        "\"PERMISSION_GRANTED\"",
        "\"PERMISSION_NOT_GRANTED\"",
        "\"PERMISSION_NOT_GRANTED\"",
        "\"REDIRECT\"",
        "\"REDIRECT\"",
        "\"NEW_USER\"",
        "\"NEW_USER\"",
        "\"OPERATION_DONE\"",
        "\"OPERATION_DONE\"",
        "\"UPDATE_USER\"",
        "\"UPDATE_USER\"",
        "\"OK_WITH_ERRORS\"",
        "\"OK_WITH_ERRORS\"",
        "\"ACCOUNTS_LINKED\"",
        "\"ACCOUNTS_LINKED\"",
        "\"OK_WITH_ERROR_LOGIN_IDENTIFIER_EXISTS\"",
        "\"OK_WITH_ERROR_LOGIN_IDENTIFIER_EXISTS\"",
        "\"ACCOUNT_PENDING_REGISTRATION\"",
        "\"ACCOUNT_PENDING_REGISTRATION\"",
        "\"ACCOUNT_PENDING_VERIFICATION\"",
        "\"ACCOUNT_PENDING_VERIFICATION\"",
        "\"ACCOUNT_MISSING_LOGINID\"",
        "\"ACCOUNT_MISSING_LOGINID\"",
        "\"IDENTITY_ALREADY_ASSIGNED\"",
        "\"IDENTITY_ALREADY_ASSIGNED\"",
        "\"AFTER_EMAIL_VERIFICATION\"",
        "\"AFTER_EMAIL_VERIFICATION\"",
        "\"PENDING_CODE_VERIFICATION\"",
        "\"PENDING_CODE_VERIFICATION\"",
        "\"CLIENT_LOG\"",
        "\"CLIENT_LOG\"",
        "\"INVALID_DATA_CENTER\"",
        "\"INVALID_DATA_CENTER\"",
        "\"INVALID_REQUEST_FORMAT\"",
        "\"INVALID_REQUEST_FORMAT\"",
        "\"MISSING_REQUIRED_PARAMETER\"",
        "\"MISSING_REQUIRED_PARAMETER\"",
        "\"UNIQUE_IDENTIFIER_EXISTS\"",
        "\"UNIQUE_IDENTIFIER_EXISTS\"",
        "\"INVALID_PARAMETER_FORMAT\"",
        "\"INVALID_PARAMETER_FORMAT\"",
        "\"INVALID_PARAMETER_VALUE\"",
        "\"INVALID_PARAMETER_VALUE\"",
        "\"DUPLICATE_VALUE\"",
        "\"DUPLICATE_VALUE\"",
        "\"INVALID_AUTHENTICATION_HEADER\"",
        "\"INVALID_AUTHENTICATION_HEADER\"",
        "\"VALIDATION_ERROR\"",
        "\"VALIDATION_ERROR\"",
        "\"INVALID_REDIRECT_URI\"",
        "\"INVALID_REDIRECT_URI\"",
        "\"INVALID_RESPONSE_TYPE\"",
        "\"INVALID_RESPONSE_TYPE\"",
        "\"UNSUPPORTED_GRANT_TYPE\"",
        "\"UNSUPPORTED_GRANT_TYPE\"",
        "\"INVALID_GRANT\"",
        "\"INVALID_GRANT\"",
        "\"CODE_EXPIRED\"",
        "\"CODE_EXPIRED\"",
        "\"SCHEMA_VALIDATION_FAILED\"",
        "\"SCHEMA_VALIDATION_FAILED\"",
        "\"CAPTCHA_VERIFICATION_FAILED\"",
        "\"CAPTCHA_VERIFICATION_FAILED\"",
        "\"UNIQUE_INDEX_VALIDATION_ERROR\"",
        "\"UNIQUE_INDEX_VALIDATION_ERROR\"",
        "\"INVALID_TYPE_VALIDATION_ERROR\"",
        "\"INVALID_TYPE_VALIDATION_ERROR\"",
        "\"DYNAMIC_FIELDS_VALIDATION_ERROR\"",
        "\"DYNAMIC_FIELDS_VALIDATION_ERROR\"",
        "\"WRITE_ACCESS_VALIDATION_ERROR\"",
        "\"WRITE_ACCESS_VALIDATION_ERROR\"",
        "\"INVALID_FORMAT_VALIDATION_ERROR\"",
        "\"INVALID_FORMAT_VALIDATION_ERROR\"",
        "\"REQUIRED_VALUE_VALIDATION_ERROR\"",
        "\"REQUIRED_VALUE_VALIDATION_ERROR\"",
        "\"EMAIL_NOT_VERIFIED\"",
        "\"EMAIL_NOT_VERIFIED\"",
        "\"SCHEMA_CONFLICT_ERROR\"",
        "\"SCHEMA_CONFLICT_ERROR\"",
        "\"OPERATION_NOT_ALLOWED\"",
        "\"OPERATION_NOT_ALLOWED\"",
        "\"SECURITY_VERIFICATION_FAILED\"",
        "\"SECURITY_VERIFICATION_FAILED\"",
        "\"INVALID_APIKEY_PARAMETER\"",
        "\"INVALID_APIKEY_PARAMETER\"",
        "\"NOT_SUPPORTED\"",
        "\"NOT_SUPPORTED\"",
        "\"UNSUPPORTED_USER_AGENT\"",
        "\"UNSUPPORTED_USER_AGENT\"",
        "\"NO_PROVIDERS\"",
        "\"NO_PROVIDERS\"",
        "\"POPUP_BLOCKED\"",
        "\"POPUP_BLOCKED\"",
        "\"INVALID_EVENT_HANDLER\"",
        "\"INVALID_EVENT_HANDLER\"",
        "\"INVALID_CONTAINERID\"",
        "\"INVALID_CONTAINERID\"",
        "\"NOT_CONNECTED\"",
        "\"NOT_CONNECTED\"",
        "\"INVALID_SITE_DOMAIN\"",
        "\"INVALID_SITE_DOMAIN\"",
        "\"PROVIDER_CONFIGURATION_ERROR\"",
        "\"PROVIDER_CONFIGURATION_ERROR\"",
        "\"LIMIT_REACHED\"",
        "\"LIMIT_REACHED\"",
        "\"FREQUENCY_LIMIT_REACHED\"",
        "\"FREQUENCY_LIMIT_REACHED\"",
        "\"INVALID_ACTION\"",
        "\"INVALID_ACTION\"",
        "\"INSUFFICIENT_POINTS_TO_REDEEM\"",
        "\"INSUFFICIENT_POINTS_TO_REDEEM\"",
        "\"SIGNATURE_TIMESTAMP_EXPIRED\"",
        "\"SIGNATURE_TIMESTAMP_EXPIRED\"",
        "\"INVALID_POLICY_CONFIGURATION\"",
        "\"INVALID_POLICY_CONFIGURATION\"",
        "\"SUSPECTED_SPAM\"",
        "\"SUSPECTED_SPAM\"",
        "\"LOGIN_FAILED_CAPTCHA_REQUIRED\"",
        "\"LOGIN_FAILED_CAPTCHA_REQUIRED\"",
        "\"LOGIN_FAILED_WRONG_CAPTCHA\"",
        "\"LOGIN_FAILED_WRONG_CAPTCHA\"",
        "\"OLD_PASSWORD_USED\"",
        "\"OLD_PASSWORD_USED\"",
        "\"FORBIDDEN\"",
        "\"FORBIDDEN\"",
        "\"INVALID_SESSION_TOKEN\"",
        "\"INVALID_SESSION_TOKEN\"",
        "\"REQUEST_HAS_EXPIRED\"",
        "\"REQUEST_HAS_EXPIRED\"",
        "\"INVALID_REQUEST_SIGNATURE\"",
        "\"INVALID_REQUEST_SIGNATURE\"",
        "\"DUPLICATE_NONCE\"",
        "\"DUPLICATE_NONCE\"",
        "\"UNAUTHORIZED_USER\"",
        "\"UNAUTHORIZED_USER\"",
        "\"SENSITIVE_DATA_SENT_OVER_HTTP\"",
        "\"SENSITIVE_DATA_SENT_OVER_HTTP\"",
        "\"PERMISSION_DENIED\"",
        "\"PERMISSION_DENIED\"",
        "\"INVALID_OPENID_URL\"",
        "\"INVALID_OPENID_URL\"",
        "\"PROVIDER_SESSION_EXPIRED\"",
        "\"PROVIDER_SESSION_EXPIRED\"",
        "\"INVALID_SECRET\"",
        "\"INVALID_SECRET\"",
        "\"SESSION_HAS_EXPIRED\"",
        "\"SESSION_HAS_EXPIRED\"",
        "\"NO_VALID_SESSION\"",
        "\"NO_VALID_SESSION\"",
        "\"UNVERIFIED_USER\"",
        "\"UNVERIFIED_USER\"",
        "\"MISSING_REQUEST_REFERRER\"",
        "\"MISSING_REQUEST_REFERRER\"",
        "\"UNEXPECTED_PROVIDER_USER\"",
        "\"UNEXPECTED_PROVIDER_USER\"",
        "\"PERMISSION_NOT_REQUESTED\"",
        "\"PERMISSION_NOT_REQUESTED\"",
        "\"NO_USER_PERMISSION\"",
        "\"NO_USER_PERMISSION\"",
        "\"PROVIDER_LIMIT_REACHED\"",
        "\"PROVIDER_LIMIT_REACHED\"",
        "\"INVALID_TOKEN\"",
        "\"INVALID_TOKEN\"",
        "\"UNAUTHORIZED_ACCESS_ERROR\"",
        "\"UNAUTHORIZED_ACCESS_ERROR\"",
        "\"DIFFERENT_USER_FOR_REAUTH\"",
        "\"DIFFERENT_USER_FOR_REAUTH\"",
        "\"SESSION_EXPIRED_RETRY\"",
        "\"SESSION_EXPIRED_RETRY\"",
        "\"APPROVED_BY_MODERATOR\"",
        "\"APPROVED_BY_MODERATOR\"",
        "\"TOKEN_HAS_RENEWED\"",
        "\"TOKEN_HAS_RENEWED\"",
        "\"NO_USER_COOKIE\"",
        "\"NO_USER_COOKIE\"",
        "\"UNAUTHORIZED_PARTNER\"",
        "\"UNAUTHORIZED_PARTNER\"",
        "\"POST_DENIED\"",
        "\"POST_DENIED\"",
        "\"NO_LOGIN_TICKET\"",
        "\"NO_LOGIN_TICKET\"",
        "\"ACCOUNT_DISABLED\"",
        "\"ACCOUNT_DISABLED\"",
        "\"INVALID_LOGINID\"",
        "\"INVALID_LOGINID\"",
        "\"LOGIN_IDENTIFIER_EXISTS\"",
        "\"LOGIN_IDENTIFIER_EXISTS\"",
        "\"UNDERAGE_USER\"",
        "\"UNDERAGE_USER\"",
        "\"INVALID_SITE_CONFIGURATION_ERROR\"",
        "\"INVALID_SITE_CONFIGURATION_ERROR\"",
        "\"LOGINID_DOES_NOT_EXIST\"",
        "\"LOGINID_DOES_NOT_EXIST\"",
        "\"API_RATE_LIMIT_EXCEEDED\"",
        "\"API_RATE_LIMIT_EXCEEDED\"",
        "\"PENDING_PASSWORD_CHANGE\"",
        "\"PENDING_PASSWORD_CHANGE\"",
        "\"ACCOUNT_PENDING_TFA_VERIFICATION\"",
        "\"ACCOUNT_PENDING_TFA_VERIFICATION\"",
        "\"ACCOUNT_PENDING_TFA_REGISTRATION\"",
        "\"ACCOUNT_PENDING_TFA_REGISTRATION\"",
        "\"ACCOUNT_PENDING_RECENT_LOGIN\"",
        "\"ACCOUNT_PENDING_RECENT_LOGIN\"",
        "\"ACCOUNT_TEMPORARILY_LOCKED_OUT\"",
        "\"ACCOUNT_TEMPORARILY_LOCKED_OUT\"",
        "\"REDUNDANT_OPERATION\"",
        "\"REDUNDANT_OPERATION\"",
        "\"INVALID_APPLICATION_ID\"",
        "\"INVALID_APPLICATION_ID\"",
        "\"NOT_FOUND\"",
        "\"NOT_FOUND\"",
        "\"FRIEND_NOT_FOUND\"",
        "\"FRIEND_NOT_FOUND\"",
        "\"CATEGORY_NOT_FOUND\"",
        "\"CATEGORY_NOT_FOUND\"",
        "\"UID_NOT_FOUND\"",
        "\"UID_NOT_FOUND\"",
        "\"RESOURCE_NOT_FOUND\"",
        "\"RESOURCE_NOT_FOUND\"",
        "\"INVALID_API_METHOD\"",
        "\"INVALID_API_METHOD\"",
        "\"IDENTITY_EXISTS\"",
        "\"IDENTITY_EXISTS\"",
        "\"GONE\"",
        "\"GONE\"",
        "\"REQUEST_ENTITY_TOO_LARGE\"",
        "\"REQUEST_ENTITY_TOO_LARGE\"",
        "\"COMMENT_TEXT_TOO_LARGE\"",
        "\"COMMENT_TEXT_TOO_LARGE\"",
        "\"OBJECT_TOO_LARGE\"",
        "\"OBJECT_TOO_LARGE\"",
        "\"PROFILE_PHOTO_TOO_LARGE\"",
        "\"PROFILE_PHOTO_TOO_LARGE\"",
        "\"REQUEST_URI_TOO_LONG\"",
        "\"REQUEST_URI_TOO_LONG\"",
        "\"MISSING_USER_PHOTO\"",
        "\"MISSING_USER_PHOTO\"",
        "\"COUNTER_NOT_REGISTERED\"",
        "\"COUNTER_NOT_REGISTERED\"",
        "\"INVALID_GMID_TICKET\"",
        "\"INVALID_GMID_TICKET\"",
        "\"SAML_MAPPED_ATTRIBUTE_NOT_FOUND\"",
        "\"SAML_MAPPED_ATTRIBUTE_NOT_FOUND\"",
        "\"SAML_CERTIFICATE_NOT_FOUND\"",
        "\"SAML_CERTIFICATE_NOT_FOUND\"",
        "\"SAML_MESSAGE_NOT_FOUND\"",
        "\"SAML_MESSAGE_NOT_FOUND\"",
        "\"GENERAL_SERVER_ERROR\"",
        "\"GENERAL_SERVER_ERROR\"",
        "\"SERVER_LOGIN_ERROR\"",
        "\"SERVER_LOGIN_ERROR\"",
        "\"DEFAULT_APPLICATION_CONFIGURATION_ERROR\"",
        "\"DEFAULT_APPLICATION_CONFIGURATION_ERROR\"",
        "\"SESSION_MIGRATION_ERROR\"",
        "\"SESSION_MIGRATION_ERROR\"",
        "\"PROVIDER_ERROR\"",
        "\"PROVIDER_ERROR\"",
        "\"DATABASE_ERROR\"",
        "\"DATABASE_ERROR\"",
        "\"USERNAME_REQUIRED\"",
        "\"USERNAME_REQUIRED\"",
        "\"NO_PROVIDER_APPLICATION\"",
        "\"NO_PROVIDER_APPLICATION\"",
        "\"LOAD_FAILED\"",
        "\"LOAD_FAILED\"",
        "\"INVALID_ENVIRONMENT_CONFIG\"",
        "\"INVALID_ENVIRONMENT_CONFIG\"",
        "\"ERROR_DURING_BACKEND_OPERATION\"",
        "\"ERROR_DURING_BACKEND_OPERATION\"",
        "\"TIMEOUT\"",
        "\"TIMEOUT\"",
        "\"CLIENTTIMEOUT\"",
        "\"CLIENTTIMEOUT\"",
        "\"INVALID_URL\"",
        "\"INVALID_URL\"",
        "\"MEDIA_ITEMS_NOT_SUPPORTED\"",
        "\"MEDIA_ITEMS_NOT_SUPPORTED\"",
        "\"MISSING_ERROR_CODE\"",
        "\"MISSING_ERROR_CODE\"",
        "\"None\"",
        "\"None\"",
        "\"Same_password\"",
        "\"Same_password\"",
        "\"Invalid_password\"",
        "\"Invalid_password\"",
        "\"Invalid_counters_query_with_cursor\"",
        "\"Invalid_counters_query_with_cursor\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/Utils/domains.ts\"",
        "''",
        "'function'",
        "'object'",
        "'http:'",
        "'http'",
        "'https'",
        "'win'",
        "'msie'",
        "'mozilla'",
        "'trident'",
        "'msie 6.'",
        "'msie 7.'",
        "'msie 8.'",
        "'msie 9.'",
        "'msie 10.'",
        "'mozilla'",
        "'trident/7.0'",
        "'edge'",
        "'iphone'",
        "'ipad'",
        "'ipod'",
        "'safari/534'",
        "'micromessenger'",
        "'applewebkit'",
        "'version/'",
        "'version/'",
        "' '",
        "'android'",
        "'mozilla/5.0'",
        "'android 4'",
        "'applewebkit'",
        "'windows phone'",
        "''",
        "'android'",
        "'android'",
        "'chrome'",
        "'edge'",
        "'googlebot'",
        "'firefox'",
        "'opera'",
        "'safari'",
        "'chrome'",
        "'android'",
        "'crios'",
        "'mac'",
        "'windows phone'",
        "'fban'",
        "'fbav'",
        "'msie'",
        "'iemobile'",
        "'application/x-shockwave-flash'",
        "'application/x-shockwave-flash'",
        "'ShockwaveFlash.ShockwaveFlash'",
        "'BackCompat'",
        "'msie'",
        "'BackCompat'",
        "'iphone'",
        "'ipod'",
        "'android'",
        "'midp'",
        "'240x320'",
        "'blackberry'",
        "'netfront'",
        "'nokia'",
        "'panasonic'",
        "'portalmmm'",
        "'sharp'",
        "'sie-'",
        "'sonyericsson'",
        "'symbian'",
        "'windows ce'",
        "'benq'",
        "'mda'",
        "'mot-'",
        "'opera mini'",
        "'philips'",
        "'pocket pc'",
        "'sagem'",
        "'samsung'",
        "'htc'",
        "'meta'",
        "'name'",
        "'viewport'",
        "'content'",
        "'width=device-width'",
        "'ontouchstart'",
        "'onmsgesturechange'",
        "'htmlfile'",
        "'_gig_localStorage_test'",
        "'just checking for localStorage'",
        "'localStorage'",
        "'sessionStorage'",
        "'windows'",
        "'winphone'",
        "'ios-v'",
        "'mac'",
        "'android'",
        "''",
        "' '",
        "'chrome'",
        "'firefox'",
        "'safari'",
        "'edge'",
        "'ie11'",
        "'ie10'",
        "'ie9'",
        "'ie8'",
        "''",
        "'gigya: missing base domains for site'",
        "\"./src/core/Gigya.Js/app/Utils/DOM.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/viewport.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/functions.ts\"",
        "'script'",
        "''",
        "'?apikey='",
        "'CustomEvent'",
        "'click'",
        "'role'",
        "'button'",
        "'tabindex'",
        "'-1'",
        "'tabindex'",
        "'0'",
        "'keydown'",
        "'on'",
        "'on'",
        "'|gigyaMobileDialog'",
        "'|gigyaMobileDialog'",
        "'|gigyaMobileDialog'",
        "'hashchange'",
        "'hashchange'",
        "'|gigyaMobileDialog'",
        "''",
        "'none'",
        "'hidden'",
        "'gig_'",
        "'_'",
        "'div'",
        "''",
        "''",
        "'none'",
        "'TD'",
        "'table-cell'",
        "'TR'",
        "''",
        "'TABLE'",
        "''",
        "'block'",
        "''",
        "''",
        "'div'",
        "'absolute'",
        "'-1000px'",
        "'*'",
        "' '",
        "' '",
        "' '",
        "'string'",
        "' '",
        "'cancelable'",
        "'div'",
        "''",
        "'<'",
        "' name=\"'",
        "'\" id=\"'",
        "'\"></'",
        "'>'",
        "''",
        "'%'",
        "''",
        "'px'",
        "''",
        "'%'",
        "''",
        "'px'",
        "''",
        "''",
        "'px'",
        "''",
        "'px'",
        "''",
        "'iframe'",
        "'30px'",
        "'10px'",
        "'absolute'",
        "'-1000px'",
        "'-1000px'",
        "'&lt;'",
        "'&gt;'",
        "'&quot;'",
        "'&#39;'",
        "'autocomplete'",
        "'autofocus'",
        "'checked'",
        "'disabled'",
        "'hidden'",
        "'readonly'",
        "'required'",
        "'selected'",
        "'gigya-fieldset'",
        "\"./src/core/Gigya.Js/app/Utils/JSON.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "'JSON'",
        "'[Too deep]'",
        "''",
        "''",
        "''",
        "'\\t'",
        "'\\n'",
        "'function'",
        "'object'",
        "'string'",
        "'\"'",
        "'\\\\$1'",
        "'\\\\n'",
        "'\"'",
        "'undefined'",
        "''",
        "'string'",
        "'\"'",
        "'\\\\$1'",
        "'\\\\n'",
        "'\"'",
        "'function'",
        "'Function'",
        "''",
        "'HTMLElement'",
        "''",
        "'object'",
        "''",
        "'undefined'",
        "'string'",
        "'\"'",
        "'\\\\$1'",
        "'\\\\n'",
        "'\"'",
        "'function'",
        "'Function'",
        "''",
        "'HTMLElement'",
        "''",
        "'object'",
        "''",
        "'\"'",
        "'\\\\$1'",
        "'\\\\n'",
        "'\":'",
        "'['",
        "'{'",
        "','",
        "']'",
        "'}'",
        "''",
        "\"(function(\"",
        "','",
        "\") { return \"",
        "\"; })\"",
        "'Error deserializing JavaScript'",
        "'JSON'",
        "\"./src/core/Gigya.Js/app/Utils/Uri.ts\"",
        "\"__esModule\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"./src/core/Gigya.Js/app/Utils/stringUtils.ts\"",
        "'a'",
        "'http:'",
        "'http'",
        "'https'",
        "'://'",
        "'/'",
        "\"://\"",
        "\"domain\"",
        "\"path\"",
        "\"href\"",
        "\"search\"",
        "\"hash\"",
        "'boolean'",
        "'number'",
        "'string'",
        "'eventName'",
        "'&'",
        "''",
        "\"\"",
        "\"=\"",
        "\"fetch failed: \"",
        "'string'",
        "'.'",
        "''",
        "'.'",
        "\"fetch failed\"",
        "'GET'",
        "\"xhr failed - \"",
        "\" - \"",
        "\"./src/core/Gigya.Js/app/Utils/array.ts\"",
        "\"__esModule\"",
        "'string'",
        "''",
        "','",
        "'number'",
        "\"./src/core/Gigya.Js/app/Utils/cookie.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "''",
        "'\\\\$1'",
        "''",
        "'(?:^|;)\\\\s?'",
        "'=(.*?)(?:;|$)'",
        "''",
        "'='",
        "''",
        "'; path=/'",
        "''",
        "'; expires='",
        "''",
        "'.'",
        "'; domain='",
        "''",
        "'='",
        "''",
        "'; path=/'",
        "''",
        "'; expires='",
        "''",
        "'.'",
        "'; domain='",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'gig3pctest=true;expires='",
        "'toGMTString'",
        "'gig3pctest'",
        "\"./src/core/Gigya.Js/app/Utils/domains.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/Utils/Uri.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/stringUtils.ts\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "'socialize'",
        "'accounts'",
        "'fidm'",
        "'gm'",
        "'comments'",
        "'gcs'",
        "'ids'",
        "'ds'",
        "'gscounters'",
        "'.'",
        "\"trying to send request to an invalid domain\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "'gigya.com'",
        "'gigya-api.cn'",
        "''",
        "'string'",
        "','",
        "'*'",
        "''",
        "\".\"",
        "\"./src/core/Gigya.Js/app/Utils/functions.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/Utils/DOM.ts\"",
        "\"./src/core/Gigya.Js/app/cdn.ts\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "'.'",
        "'.'",
        "'complete'",
        "'interactive'",
        "'load'",
        "'DOMContentLoaded'",
        "'.'",
        "'/'",
        "'src'",
        "\"./src/core/Gigya.Js/app/Utils/localStorage.ts\"",
        "\"__esModule\"",
        "\"./node_modules/tslib/tslib.es6.js\"",
        "\"./src/core/Gigya.Js/app/Utils/JSON.ts\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/script.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/cookie.ts\"",
        "'AbstractAdapter'",
        "'LocalStorageAdapter'",
        "'SessionStorageAdapter'",
        "'globalStorage'",
        "'FirefoxStorageAdapter'",
        "'globalStorage'",
        "'globalStorage'",
        "'globalStorage'",
        "'FlashAsyncStorageAdapter'",
        "'SwfStore'",
        "'https://cdns.gigya.com/gs/js/swfstore.min.js'",
        "'Failed to load Gigya SwfStore.'",
        "'gigSSO'",
        "'https://cdns.gigya.com/gs/swf/swfstore.swf'",
        "'Failed to initialize Gigya SwfStore.'",
        "'CookieStorageAdapter'",
        "'MemoryStorageAdapter'",
        "\"./src/core/Gigya.Js/app/Utils/script.ts\"",
        "\"__esModule\"",
        "\"./src/core/Gigya.Js/app/Utils/Uri.ts\"",
        "\"./src/core/Gigya.Js/app/LocalInfo.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/array.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/functions.ts\"",
        "\"./src/core/Gigya.Js/app/Utils/DOM.ts\"",
        "\"./src/core/Gigya.Js/app/cdn.ts\"",
        "'http$1://cdn$2.gigya.com/'",
        "'//'",
        "':'",
        "\"script was already loaded:\"",
        "'script'",
        "'text/javascript'",
        "'UTF-8'",
        "'function'",
        "'onreadystatechange'",
        "'loaded'",
        "'function'",
        "'head'",
        "\"^https?://cdns?.*\"",
        "\"script\"",
        "\"script\"",
        "\"image\"",
        "\"image\"",
        "\"iframe\"",
        "\"iframe\"",
        "'Unsupported resource type'",
        "'iframe'",
        "'30px'",
        "'10px'",
        "'absolute'",
        "'-1000px'",
        "'-1000px'",
        "'load'",
        "'error'",
        "'/js/gigya.services.'",
        "'.js'",
        "'object'",
        "'error loading gigya service '",
        "' from url: '",
        "\"./src/core/Gigya.Js/app/Utils/stringUtils.ts\"",
        "\"__esModule\"",
        "'$1'",
        "'{'",
        "'}'",
        "'\\\\$1'",
        "'g'",
        "''",
        "''",
        "','",
        "','",
        "','",
        "\"./src/core/Gigya.Js/app/Utils/viewport.ts\"",
        "\"__esModule\"",
        "'number'",
        "'orientation'",
        "'0'",
        "\"./src/core/Gigya.Js/app/cdn.ts\"",
        "\"__esModule\"",
        "'cdn.gigya.com'",
        "'cdn1.gigya.com'",
        "'cdn2.gigya.com'",
        "'cdn3.gigya.com'",
        "'cdns.gigya.com'",
        "'cdns1.gigya.com'",
        "'cdns2.gigya.com'",
        "'cdns3.gigya.com'",
        "''",
        "'https'",
        "'/'",
        "'/'",
        "'://'",
        "''",
        "'/gs/i/'"
    ],
    "variables": [
        "installedModules",
        "ns",
        "getter",
        "extendStatics",
        "__assign",
        "s",
        "i",
        "n",
        "t",
        "i",
        "p",
        "c",
        "r",
        "d",
        "i",
        "_",
        "f",
        "y",
        "t",
        "g",
        "m",
        "i",
        "m",
        "i",
        "r",
        "ar",
        "e",
        "ar",
        "i",
        "s",
        "i",
        "il",
        "r",
        "k",
        "i",
        "a",
        "j",
        "jl",
        "g",
        "i",
        "q",
        "i",
        "p",
        "m",
        "i",
        "result",
        "tslib_1",
        "GSErrors_1",
        "localStorage_1",
        "URL_PREFIX",
        "IS_SESSION_VALID",
        "SEND_REQUEST",
        "SEND_OAUTH_REQUEST",
        "GET_IDS",
        "ON_PLUGIN_EVENT",
        "ON_CUSTOM_EVENT",
        "REGISTER_FOR_NAMESPACE_EVENTS",
        "CLEAR_SESSION",
        "ON_JS_LOG",
        "defaultAdapterFeatures",
        "defaultAdapterSettings",
        "MobileAdapter",
        "_this",
        "log",
        "settings",
        "_this",
        "callbackID_1",
        "serializedParams",
        "serializedSettings",
        "queryString",
        "doesNativeSupport",
        "msg",
        "iframe",
        "originalCallback_1",
        "plainString",
        "parts",
        "pluginName",
        "funcName",
        "obj",
        "Gigya_ApiAdaptersMobile",
        "Gigya_ApiAdaptersMobile_1",
        "GSErrors",
        "GSErrorDetails",
        "_a",
        "_b",
        "domains_1",
        "userAgent",
        "chromeInfo",
        "chromeVersion",
        "supportsFlash",
        "fo",
        "mobileClients",
        "metaTags",
        "i",
        "content",
        "isStorageEnabled",
        "storage",
        "testName",
        "testValue",
        "result",
        "os",
        "browser",
        "baseDomains",
        "LocalInfo_1",
        "viewportUtils",
        "functionsUtils",
        "_nextZIndex",
        "backListener",
        "scripts",
        "scriptElement",
        "gigyaCdnRegex",
        "i",
        "script",
        "src",
        "isFileNameExistInSrc",
        "directParent",
        "computedStyle",
        "newDomElem",
        "el",
        "el",
        "el",
        "c",
        "divMeasure",
        "w",
        "h",
        "arEls",
        "els",
        "i",
        "arEls",
        "els",
        "i",
        "rect",
        "scroll",
        "left",
        "top",
        "existingClasses",
        "existingOriginalLength",
        "newClasses",
        "exists",
        "arClass",
        "i",
        "classes",
        "exists",
        "arClass",
        "i",
        "divContainer",
        "isWidthPrecentage",
        "widthValue",
        "isHeightPrecentage",
        "heightValue",
        "vp",
        "scrl",
        "vpt",
        "vpl",
        "ifr",
        "n",
        "textNodes",
        "treeWalker",
        "LocalInfo_1",
        "prefix",
        "newline",
        "tab",
        "i",
        "t",
        "n",
        "v",
        "json",
        "arr",
        "i",
        "keys",
        "values",
        "fn",
        "tslib_1",
        "stringUtilsUtils",
        "Uri",
        "protocol",
        "val",
        "addition",
        "_a",
        "e_1",
        "domain",
        "url",
        "response",
        "url",
        "xhr",
        "jsonResponse",
        "i",
        "ar2",
        "i",
        "i",
        "i",
        "args",
        "_i",
        "result",
        "argsLength",
        "i",
        "length",
        "item",
        "j",
        "arr",
        "i",
        "i",
        "i",
        "i",
        "result",
        "result",
        "results",
        "i",
        "j",
        "LocalInfo_1",
        "cookieDomain",
        "regex",
        "match",
        "pageDomain",
        "expireMs",
        "exdate",
        "cookieString",
        "pageDomain",
        "baseDomain",
        "d",
        "Uri_1",
        "stringUtilsUtils",
        "LocalInfo_1",
        "gigyaDomainNamespaces",
        "shouldAddNamespace",
        "subDomain",
        "domain",
        "originURI",
        "_i",
        "baseDomains_1",
        "baseDomains",
        "rawDomain",
        "baseDomain",
        "baseUri",
        "DOMUtils",
        "cdn_1",
        "LocalInfo_1",
        "fn",
        "arParts",
        "scope",
        "called_1",
        "fnOnLoad",
        "arNameSegments",
        "oCurrentSegment",
        "iSegment",
        "sSegment",
        "timer",
        "tslib_1",
        "JSONUtils",
        "LocalInfo_1",
        "scriptUtils",
        "cookieUtils",
        "AbstractLocalStorageAdapter",
        "AbstractAsyncLocalStorageAdapter",
        "_this",
        "_this",
        "StorageAdapter",
        "LocalStorageAdapter",
        "_this",
        "SessionStorageAdapter",
        "_this",
        "FirefoxStorageAdapter",
        "FlashAsyncStorageAdapter",
        "_this",
        "_this",
        "CookieStorageAdapter",
        "MemoryStorageAdapter",
        "_this",
        "adapterName",
        "storage",
        "_i",
        "adapters_1",
        "adapter_1",
        "adapter",
        "Uri_1",
        "LocalInfo_1",
        "arrayUtils",
        "functionsUtils",
        "DOMUtils",
        "cdn_1",
        "pending",
        "scriptUrl",
        "pendingSrc",
        "oScript",
        "pendingSrc",
        "scriptLoader",
        "script",
        "done",
        "fnOnScriptLoad",
        "i",
        "i",
        "head",
        "fnSetScriptSrc",
        "webSdkResourcesDomain",
        "scriptSrc",
        "ResourceTypes",
        "img",
        "loaded",
        "fnOnLoad",
        "ifr",
        "fnOnLoad",
        "el",
        "url",
        "rest",
        "_i",
        "i",
        "arr",
        "scrOfX",
        "scrOfY",
        "de",
        "db",
        "h",
        "w",
        "orientation",
        "h",
        "w",
        "de",
        "db",
        "scroll",
        "size",
        "scroll",
        "size",
        "scroll",
        "size",
        "selectedCdnHostsIndex",
        "_a",
        "_b",
        "_c",
        "_d",
        "baseDomain",
        "protocol",
        "selectedSchemaRepository"
    ],
    "comments": [
        "webpackBootstrap",
        "The module cache",
        "The require function",
        "Check if module is in cache",
        "Create a new module (and put it into the cache)",
        "Execute the module function",
        "Flag the module as loaded",
        "Return the exports of the module",
        "expose the modules object (__webpack_modules__)",
        "expose the module cache",
        "define getter function for harmony exports",
        "define __esModule on exports",
        "create a fake namespace object",
        "mode & 1: value is a module id, require it",
        "mode & 2: merge all properties of value into the ns",
        "mode & 4: return value when already ns object",
        "mode & 8|1: behave like require",
        "getDefaultExport function for compatibility with non-harmony modules",
        "Object.prototype.hasOwnProperty.call",
        "__webpack_public_path__",
        "Load entry module and return exports",
        "",
        "!*****************************************!*\\\n  !*** ./node_modules/tslib/tslib.es6.js ***!\n  \\****************************************",
        "! exports provided: __extends, __assign, __rest, __decorate, __param, __metadata, __awaiter, __generator, __exportStar, __values, __read, __spread, __spreadArrays, __await, __asyncGenerator, __asyncDelegator, __asyncValues, __makeTemplateObject, __importStar, __importDefault",
        "",
        "WEBPACK VAR INJECTION",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "harmony export (binding)",
        "! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n*****************************************************************************",
        "global Reflect, Promise",
        "WEBPACK VAR INJECTION",
        "! tslib",
        "",
        "",
        "!****************************************************************!*\\\n  !*** ./src/core/Gigya.Js.Adapters.Mobile/app/MobileAdapter.ts ***!\n  \\***************************************************************",
        "! no static exports found",
        "",
        "! tslib",
        "! ../../Gigya.Js/app/GSErrors",
        "! ../../Gigya.Js/app/Utils/localStorage",
        "@class",
        "#49789 - Required for gigya.saml.js, which can init with mobile adapter.",
        "return",
        "ignore",
        "iframe appended outside the event to prevent keyboard from closing in web view Bug 37156",
        "",
        "",
        "!*************************************************************!*\\\n  !*** ./src/core/Gigya.Js.Adapters.Mobile/app/showPlugin.ts ***!\n  \\************************************************************",
        "! no static exports found",
        "",
        "",
        "",
        "!****************************************************!*\\\n  !*** ./src/core/Gigya.Js.Adapters.Mobile/index.ts ***!\n  \\***************************************************",
        "! no static exports found",
        "",
        "WEBPACK VAR INJECTION",
        "! src/core/Gigya.Js.Adapters.Mobile/app/MobileAdapter",
        "! src/core/Gigya.Js.Adapters.Mobile/app/showPlugin",
        "WEBPACK VAR INJECTION",
        "! tslib",
        "",
        "",
        "!*******************************************!*\\\n  !*** ./src/core/Gigya.Js/app/GSErrors.ts ***!\n  \\******************************************",
        "! no static exports found",
        "",
        "",
        "",
        "!********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/LocalInfo.ts ***!\n  \\*******************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/Utils/domains",
        "Special user agents found so far that violate the existance of chrome rule",
        "Bug 38367 Android Browser: Mozilla/5.0 (Linux; Android 4.2.2; en-us; SAMSUNG GT-I9500 Build/JDQ39) AppleWebKit/535.19 (KHTML, like Gecko) Version/1.0 Chrome/18.0.1025.308 Mobile Safari/535.19",
        "Bug 40209 Chrome Browser: Mozilla/5.0 (Linux; Android 4.2.2; SAMSUNG SGT-I747 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.93 Mobile Safari/537.36",
        "Windows Phone Browser: Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 920) like iPhone OS 7_0_3 Mac OS X AppleWebKit/537 (KHTML, like Gecko) Mobile Safari/537",
        "Chrome Browser: Mozilla/5.0 (Linux; Android 4.2.2; en-gb; SAMSUNG GT-I9500 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36",
        "http://stackoverflow.com/questions/998245/how-can-i-detect-if-flash-is-installed-and-if-not-display-a-hidden-div-that-inf",
        "TODO: Add isTablet function for devices non-Mobile",
        "for old IE",
        "works on most browsers",
        "works on ie10",
        "Try to determine if IE is open in metro mode. Metro doesn't allow activeX, that's the best test available as of IE11.",
        "Reasons:",
        "- Inside 3rd party API proxy iFrame.",
        "- Safari in incognito mode will error with \"quota exceeded\".",
        "- Chrome with 3rd party cookies disabled will throw an error if you access the window.localStorage object in ANY way.",
        "IE10-11 support postMessage between iframes but not inPrivate mode",
        "only in the top frame",
        "",
        "",
        "!********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/DOM.ts ***!\n  \\*******************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/LocalInfo",
        "! src/core/Gigya.Js/app/Utils/viewport",
        "! src/core/Gigya.Js/app/Utils/functions",
        "IE10 and below support",
        "Just in case the element does not exist.",
        "This should fire when back is clicked",
        "hash could change right after the call if it was initiated from a link that didn't return false",
        "restore previous hash",
        "All browsers except <IE9",
        "IE8 doesn't support &apos;",
        "end of recursion - element is not a child of a fieldset",
        "",
        "",
        "!*********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/JSON.ts ***!\n  \\********************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/LocalInfo",
        "simple data type",
        "Return default value if is empty string (or similar).",
        "Attempt to parse. On error, warn in console and return default value.",
        "",
        "",
        "!********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/Uri.ts ***!\n  \\*******************************************",
        "! no static exports found",
        "",
        "! tslib",
        "! src/core/Gigya.Js/app/Utils/stringUtils",
        "@class",
        "dropping '?'",
        "dropping '#'",
        "break",
        "yield",
        "break",
        "yield",
        "return",
        "yield",
        "yield",
        "return",
        "return",
        "page is the base domain",
        "or sub-domain of it",
        "page is also in base's defined path;",
        "yield",
        "return",
        "return",
        "",
        "",
        "!**********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/array.ts ***!\n  \\*********************************************",
        "! no static exports found",
        "",
        "check for string type in the input and not empty.",
        "lowercase if demended",
        "clean the string:",
        "if string empty",
        "return array from string",
        "",
        "",
        "!***********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/cookie.ts ***!\n  \\**********************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/LocalInfo",
        "0 means Session",
        "Any other value is number of seconds (A negative value would mean expire now!)",
        "Some browsers like IE8 don't like some domains (e.g. domains of the form xx.yy)",
        "http://stackoverflow.com/questions/1189638/internet-explorer-xx-yy-website-issue",
        "remove also from the subDomain.",
        "Set expiration time to 1 years",
        "1 second expiration.",
        "iOS 10 webview throws in some scenarios",
        "",
        "",
        "!************************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/domains.ts ***!\n  \\***********************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/Utils/Uri",
        "! src/core/Gigya.Js/app/Utils/stringUtils",
        "! src/core/Gigya.Js/app/LocalInfo",
        "#49786 - Support webview without hostname.",
        "This does not take care of wildcards in the middle of string.",
        "fallback to the parent's window domain (for backward compatibility).",
        "",
        "",
        "!**************************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/functions.ts ***!\n  \\*************************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/Utils/DOM",
        "! src/core/Gigya.Js/app/cdn",
        "! src/core/Gigya.Js/app/LocalInfo",
        "fallback - sometimes readystate stays stuck on interactive",
        "",
        "",
        "!*****************************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/localStorage.ts ***!\n  \\****************************************************",
        "! no static exports found",
        "",
        "! tslib",
        "! src/core/Gigya.Js/app/Utils/JSON",
        "! src/core/Gigya.Js/app/LocalInfo",
        "! src/core/Gigya.Js/app/Utils/script",
        "! src/core/Gigya.Js/app/Utils/cookie",
        "@class",
        "@class",
        "@class",
        "@class",
        "@class",
        "@class",
        "@class",
        "Load SWF store library.",
        "There is no current scenario where using Flash Storage is helpful outside of IE.",
        "Load SwfStore if necessary.",
        "Error handler.",
        "Success handler.",
        "@class",
        "@class",
        "Select compatible adapter.",
        "Don't select adapter if it's async and a callback wasn't provided.",
        "Fallback to memory-based non-persistent storage.",
        "Trigger callback when adapter finishes loading (or instantly, if not required to wait).",
        "",
        "",
        "!***********************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/script.ts ***!\n  \\**********************************************",
        "! no static exports found",
        "",
        "! src/core/Gigya.Js/app/Utils/Uri",
        "! src/core/Gigya.Js/app/LocalInfo",
        "! src/core/Gigya.Js/app/Utils/array",
        "! src/core/Gigya.Js/app/Utils/functions",
        "! src/core/Gigya.Js/app/Utils/DOM",
        "! src/core/Gigya.Js/app/cdn",
        "remove cdn domain number",
        "multiple loads",
        "remove memory leak",
        "iOS 6 breaks setTimeout when animation is active (switching tabs back from a login sequence)",
        "Doing this async gives better performance in older browsers",
        "",
        "",
        "!****************************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/stringUtils.ts ***!\n  \\***************************************************",
        "! no static exports found",
        "",
        "",
        "",
        "!*************************************************!*\\\n  !*** ./src/core/Gigya.Js/app/Utils/viewport.ts ***!\n  \\************************************************",
        "! no static exports found",
        "",
        "",
        "",
        "!**************************************!*\\\n  !*** ./src/core/Gigya.Js/app/cdn.ts ***!\n  \\*************************************",
        "! no static exports found",
        "",
        "gigya.thisScript may not exist if loaded for ssoOrig.",
        "If no base domain or if base domain ends with .gigya.com, use Gigya CDN.",
        "Otherwise use the base domain.",
        "Ensure the path starts with \"/\".",
        "",
        "# sourceMappingURL=data:application/json;charset=utf-8;base64,"
    ],
    "docstrings": [
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "*********************************************************************",
        "***",
        "* Set object to storage.",
        "* Get object from local storage.",
        "* Is persistent storage. Returns false when data is not persisted.",
        "* Used when there is initialization time on the local storage adapter.",
        "* First, load the JavaScript swfstore SDK.",
        "* Iniitalize the SwfStore class.",
        "* Is persistent storage. Returns false when data is not persisted.",
        "***"
    ],
    "functions": [
        "__webpack_require__",
        "__extends",
        "__",
        "__rest",
        "__decorate",
        "__param",
        "__metadata",
        "__awaiter",
        "fulfilled",
        "rejected",
        "step",
        "__generator",
        "verb",
        "step",
        "__exportStar",
        "__values",
        "__read",
        "__spread",
        "__spreadArrays",
        "__await",
        "__asyncGenerator",
        "verb",
        "resume",
        "step",
        "fulfill",
        "reject",
        "settle",
        "__asyncDelegator",
        "verb",
        "__asyncValues",
        "verb",
        "settle",
        "__makeTemplateObject",
        "__importStar",
        "__importDefault",
        "newApiAdapter",
        "MobileAdapter",
        "clean",
        "showPlugin",
        "getNextZIndex",
        "getGigyaScriptElement",
        "dispatch",
        "addButtonSubmitListener",
        "addEventListener",
        "removeEventListener",
        "disableDefaultEventHandling",
        "addDialogBackListener",
        "_removeDialogBackListener",
        "appendToBody",
        "removeElement",
        "isChildOf",
        "isVisible",
        "getCenteredDivID",
        "createElementWithAttributes",
        "createTopLevelDiv",
        "hideByID",
        "showByID",
        "clearByID",
        "getHTMLSize",
        "getElementsByClass",
        "getElementsByAttribute",
        "getElementPosition",
        "addClassToElement",
        "removeClassFromElement",
        "getClassNames",
        "isElementClass",
        "cancelEvent",
        "createElement",
        "setSize",
        "createHiddenIframe",
        "attributeEncode",
        "manipulateAttributes",
        "textNodesUnder",
        "isHTMLBooleanAttribute",
        "isBelongToGigyaFieldset",
        "serialize",
        "deserialize",
        "parse",
        "Uri",
        "indexOf",
        "clone",
        "removeByValue",
        "removeByProperty",
        "getArrayFromString",
        "intersect",
        "lastIndexOf",
        "forEach",
        "forEachProp",
        "some",
        "every",
        "everyProp",
        "firstIndex",
        "first",
        "getAllEnumValues",
        "getUniqueValues",
        "_getBaseDomain",
        "getDefaultDomain",
        "get",
        "remove",
        "getInfiniteExpirationTimeInSeconds",
        "canSaveCookie",
        "apiDomainFactory",
        "getGigyaDomain",
        "getBaseDomain",
        "resolveApiDomain",
        "callFunction",
        "invokeOnPageLoad",
        "createAlias",
        "debounce",
        "addSrcToIFrameIfNeeded",
        "AbstractLocalStorageAdapter",
        "AbstractAsyncLocalStorageAdapter",
        "StorageAdapter",
        "LocalStorageAdapter",
        "SessionStorageAdapter",
        "FirefoxStorageAdapter",
        "FlashAsyncStorageAdapter",
        "CookieStorageAdapter",
        "MemoryStorageAdapter",
        "initializeAdapter",
        "waitForService",
        "getItem",
        "setItem",
        "removeItem",
        "setObject",
        "getObject",
        "addSdkVersion",
        "formatSrcUrl",
        "isLoaded",
        "load",
        "triggerResource",
        "loadImage",
        "loadIframe",
        "loadService",
        "trim",
        "format",
        "capitalize",
        "endsWith",
        "escapeRegExp",
        "replaceAll",
        "mergeCommaSeparatedValues",
        "getScroll",
        "getFullSize",
        "getOrientation",
        "getInnerSize",
        "getMiddleCenter",
        "isRectHorizontallyVisible",
        "isRectFullyVisible",
        "scrollIntoView",
        "getCdnResource",
        "getImgCdnResource"
    ],
    "classes": []
}