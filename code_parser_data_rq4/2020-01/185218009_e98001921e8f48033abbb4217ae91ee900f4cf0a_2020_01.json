{
    "identifiers": [
        "com",
        "oracle",
        "weblogic",
        "imagetool",
        "api",
        "model",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "com",
        "oracle",
        "weblogic",
        "imagetool",
        "cachestore",
        "CacheStore",
        "com",
        "oracle",
        "weblogic",
        "imagetool",
        "logging",
        "LoggingFacade",
        "com",
        "oracle",
        "weblogic",
        "imagetool",
        "logging",
        "LoggingFactory",
        "com",
        "oracle",
        "weblogic",
        "imagetool",
        "util",
        "Utils",
        "logger",
        "LoggingFactory",
        "getLogger",
        "key",
        "id",
        "version",
        "key",
        "generateKey",
        "id",
        "version",
        "id",
        "version",
        "id",
        "toString",
        "version",
        "filePath",
        "filePath",
        "Files",
        "isRegularFile",
        "Paths",
        "get",
        "filePath",
        "id",
        "version",
        "logger",
        "entering",
        "id",
        "version",
        "mykey",
        "id",
        "id",
        "mykey",
        "id",
        "CacheStore",
        "CACHE_KEY_SEPARATOR",
        "version",
        "id",
        "indexOf",
        "version",
        "mykey",
        "mykey",
        "CacheStore",
        "CACHE_KEY_SEPARATOR",
        "version",
        "logger",
        "exiting",
        "mykey",
        "mykey",
        "key",
        "cacheStore",
        "key",
        "getKey",
        "logger",
        "entering",
        "key",
        "filePath",
        "cacheStore",
        "getValueFromCache",
        "key",
        "isFileOnDisk",
        "filePath",
        "Utils",
        "getMessage",
        "key",
        "logger",
        "exiting",
        "filePath",
        "filePath",
        "cacheStore",
        "buildContextDir",
        "logger",
        "entering",
        "result",
        "sourceFile",
        "resolve",
        "cacheStore",
        "logger",
        "info",
        "sourceFile",
        "targetFilename",
        "sourceFile",
        "getName",
        "result",
        "Files",
        "copy",
        "Paths",
        "get",
        "sourceFile",
        "Paths",
        "get",
        "buildContextDir",
        "targetFilename",
        "ee",
        "ee",
        "printStackTrace",
        "logger",
        "exiting",
        "result",
        "result"
    ],
    "literals": [
        "\"IMG-0011\"",
        "\"copying {0} to build context folder.\""
    ],
    "variables": [
        "key"
    ],
    "comments": [
        "Copyright (c) 2019, 2020, Oracle Corporation and/or its affiliates.  All rights reserved.",
        "Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.",
        "should never happens",
        "check entry exists in cache"
    ],
    "docstrings": [
        "* Base class to represent either an installer or a patch file.",
        "* Represents a locally cached file.\n     *\n     * @param id          cache ID (like installer type or patchId)\n     * @param version     version number for the patch or installer.",
        "* Represents a locally cached file.\n     *\n     * @param id          cache ID (like installer type)\n     * @param version     version number for the patch or installer.",
        "* Get the path of the file stored locally in the cache.\n     * @param cacheStore the cache store to search\n     * @return the Path of the file, if found\n     * @throws IOException throws FileNotFoundException, if this cached file (key) could not be located in the cache",
        "* Copy file from cacheStore to Docker build context directory.\n     * @param cacheStore cache to copy file from\n     * @param buildContextDir directory to copy file to\n     * @return the path of the file copied to the Docker build context directory"
    ],
    "functions": [
        "CachedFile",
        "CachedFile",
        "isFileOnDisk",
        "generateKey",
        "getKey",
        "resolve",
        "Path",
        "copyFile"
    ],
    "classes": [
        "CachedFile"
    ]
}