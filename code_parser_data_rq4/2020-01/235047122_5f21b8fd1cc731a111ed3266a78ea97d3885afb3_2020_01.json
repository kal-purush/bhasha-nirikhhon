{
    "identifiers": [
        "com",
        "example",
        "testedit",
        "MultipleImage",
        "android",
        "annotation",
        "SuppressLint",
        "android",
        "content",
        "ContentResolver",
        "android",
        "content",
        "ContentUris",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "database",
        "Cursor",
        "android",
        "database",
        "DatabaseUtils",
        "android",
        "graphics",
        "Bitmap",
        "android",
        "net",
        "Uri",
        "android",
        "os",
        "Build",
        "android",
        "os",
        "Environment",
        "android",
        "provider",
        "DocumentsContract",
        "android",
        "provider",
        "MediaStore",
        "android",
        "util",
        "Log",
        "android",
        "webkit",
        "MimeTypeMap",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileFilter",
        "java",
        "text",
        "DecimalFormat",
        "java",
        "util",
        "Comparator",
        "TAG",
        "DEBUG",
        "MIME_TYPE_AUDIO",
        "MIME_TYPE_TEXT",
        "MIME_TYPE_IMAGE",
        "MIME_TYPE_VIDEO",
        "MIME_TYPE_APP",
        "HIDDEN_PREFIX",
        "uri",
        "uri",
        "dot",
        "uri",
        "lastIndexOf",
        "dot",
        "uri",
        "substring",
        "dot",
        "url",
        "url",
        "url",
        "startsWith",
        "url",
        "startsWith",
        "uri",
        "equalsIgnoreCase",
        "uri",
        "getAuthority",
        "file",
        "file",
        "Uri",
        "fromFile",
        "file",
        "file",
        "file",
        "file",
        "isDirectory",
        "file",
        "filename",
        "file",
        "getName",
        "filepath",
        "file",
        "getAbsolutePath",
        "pathwithoutname",
        "filepath",
        "substring",
        "filepath",
        "length",
        "filename",
        "length",
        "pathwithoutname",
        "endsWith",
        "pathwithoutname",
        "pathwithoutname",
        "substring",
        "pathwithoutname",
        "length",
        "pathwithoutname",
        "file",
        "extension",
        "getExtension",
        "file",
        "getName",
        "extension",
        "length",
        "MimeTypeMap",
        "getSingleton",
        "getMimeTypeFromExtension",
        "extension",
        "substring",
        "context",
        "uri",
        "file",
        "getPath",
        "context",
        "uri",
        "getMimeType",
        "file",
        "uri",
        "LocalStorageProvider",
        "AUTHORITY",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "context",
        "uri",
        "selection",
        "selectionArgs",
        "cursor",
        "column",
        "projection",
        "column",
        "cursor",
        "context",
        "getContentResolver",
        "query",
        "uri",
        "projection",
        "selection",
        "selectionArgs",
        "cursor",
        "cursor",
        "moveToFirst",
        "DEBUG",
        "DatabaseUtils",
        "dumpCursor",
        "cursor",
        "column_index",
        "cursor",
        "getColumnIndexOrThrow",
        "column",
        "cursor",
        "getString",
        "column_index",
        "cursor",
        "cursor",
        "close",
        "SuppressLint",
        "context",
        "uri",
        "DEBUG",
        "Log",
        "d",
        "TAG",
        "uri",
        "getAuthority",
        "uri",
        "getFragment",
        "uri",
        "getPort",
        "uri",
        "getQuery",
        "uri",
        "getScheme",
        "uri",
        "getHost",
        "uri",
        "getPathSegments",
        "toString",
        "isKitKat",
        "Build",
        "VERSION",
        "SDK_INT",
        "Build",
        "VERSION_CODES",
        "KITKAT",
        "isKitKat",
        "DocumentsContract",
        "isDocumentUri",
        "context",
        "uri",
        "isLocalStorageDocument",
        "uri",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "isExternalStorageDocument",
        "uri",
        "docId",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "split",
        "docId",
        "split",
        "split",
        "equalsIgnoreCase",
        "Environment",
        "getExternalStorageDirectory",
        "split",
        "isDownloadsDocument",
        "uri",
        "id",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "contentUri",
        "ContentUris",
        "withAppendedId",
        "Uri",
        "parse",
        "valueOf",
        "id",
        "getDataColumn",
        "context",
        "contentUri",
        "isMediaDocument",
        "uri",
        "docId",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "split",
        "docId",
        "split",
        "split",
        "contentUri",
        "equals",
        "contentUri",
        "MediaStore",
        "Images",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "equals",
        "contentUri",
        "MediaStore",
        "Video",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "equals",
        "contentUri",
        "MediaStore",
        "Audio",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "selection",
        "selectionArgs",
        "split",
        "getDataColumn",
        "context",
        "contentUri",
        "selection",
        "selectionArgs",
        "equalsIgnoreCase",
        "uri",
        "getScheme",
        "isGooglePhotosUri",
        "uri",
        "uri",
        "getLastPathSegment",
        "getDataColumn",
        "context",
        "uri",
        "equalsIgnoreCase",
        "uri",
        "getScheme",
        "uri",
        "getPath",
        "context",
        "uri",
        "uri",
        "path",
        "getPath",
        "context",
        "uri",
        "path",
        "isLocal",
        "path",
        "path",
        "size",
        "BYTES_IN_KILOBYTES",
        "dec",
        "KILOBYTES",
        "MEGABYTES",
        "GIGABYTES",
        "fileSize",
        "suffix",
        "KILOBYTES",
        "size",
        "BYTES_IN_KILOBYTES",
        "fileSize",
        "size",
        "BYTES_IN_KILOBYTES",
        "fileSize",
        "BYTES_IN_KILOBYTES",
        "fileSize",
        "fileSize",
        "BYTES_IN_KILOBYTES",
        "fileSize",
        "BYTES_IN_KILOBYTES",
        "fileSize",
        "fileSize",
        "BYTES_IN_KILOBYTES",
        "suffix",
        "GIGABYTES",
        "suffix",
        "MEGABYTES",
        "valueOf",
        "dec",
        "format",
        "fileSize",
        "suffix",
        "context",
        "file",
        "getThumbnail",
        "context",
        "getUri",
        "file",
        "getMimeType",
        "file",
        "context",
        "uri",
        "getThumbnail",
        "context",
        "uri",
        "getMimeType",
        "context",
        "uri",
        "context",
        "uri",
        "mimeType",
        "DEBUG",
        "Log",
        "d",
        "TAG",
        "isMediaUri",
        "uri",
        "Log",
        "e",
        "TAG",
        "bm",
        "uri",
        "resolver",
        "context",
        "getContentResolver",
        "cursor",
        "cursor",
        "resolver",
        "query",
        "uri",
        "cursor",
        "moveToFirst",
        "id",
        "cursor",
        "getInt",
        "DEBUG",
        "Log",
        "d",
        "TAG",
        "id",
        "mimeType",
        "contains",
        "bm",
        "MediaStore",
        "Video",
        "Thumbnails",
        "getThumbnail",
        "resolver",
        "id",
        "MediaStore",
        "Video",
        "Thumbnails",
        "MINI_KIND",
        "mimeType",
        "contains",
        "FileUtils",
        "MIME_TYPE_IMAGE",
        "bm",
        "MediaStore",
        "Images",
        "Thumbnails",
        "getThumbnail",
        "resolver",
        "id",
        "MediaStore",
        "Images",
        "Thumbnails",
        "MINI_KIND",
        "e",
        "DEBUG",
        "Log",
        "e",
        "TAG",
        "e",
        "cursor",
        "cursor",
        "close",
        "bm",
        "sComparator",
        "Override",
        "f1",
        "f2",
        "f1",
        "getName",
        "toLowerCase",
        "compareTo",
        "f2",
        "getName",
        "toLowerCase",
        "sFileFilter",
        "Override",
        "file",
        "fileName",
        "file",
        "getName",
        "file",
        "isFile",
        "fileName",
        "startsWith",
        "HIDDEN_PREFIX",
        "sDirFilter",
        "Override",
        "file",
        "fileName",
        "file",
        "getName",
        "file",
        "isDirectory",
        "fileName",
        "startsWith",
        "HIDDEN_PREFIX",
        "intent",
        "Intent",
        "ACTION_GET_CONTENT",
        "intent",
        "setType",
        "intent",
        "putExtra",
        "Intent",
        "EXTRA_ALLOW_MULTIPLE",
        "intent",
        "addCategory",
        "Intent",
        "CATEGORY_OPENABLE",
        "intent"
    ],
    "literals": [
        "\"FileUtils\"",
        "\"audio/*\"",
        "\"text/*\"",
        "\"image/*\"",
        "\"video/*\"",
        "\"application/*\"",
        "\".\"",
        "\".\"",
        "\"\"",
        "\"http://\"",
        "\"https://\"",
        "\"media\"",
        "\"/\"",
        "\"application/octet-stream\"",
        "\"com.android.externalstorage.documents\"",
        "\"com.android.providers.downloads.documents\"",
        "\"com.android.providers.media.documents\"",
        "\"com.google.android.apps.photos.content\"",
        "\"_data\"",
        "\"NewApi\"",
        "\" File -\"",
        "\"Authority: \"",
        "\", Fragment: \"",
        "\", Port: \"",
        "\", Query: \"",
        "\", Scheme: \"",
        "\", Host: \"",
        "\", Segments: \"",
        "\":\"",
        "\"primary\"",
        "\"/\"",
        "\"content://downloads/public_downloads\"",
        "\":\"",
        "\"image\"",
        "\"video\"",
        "\"audio\"",
        "\"_id=?\"",
        "\"content\"",
        "\"file\"",
        "\"###.#\"",
        "\" KB\"",
        "\" MB\"",
        "\" GB\"",
        "\"Attempting to get thumbnail\"",
        "\"You can only retrieve thumbnails for images and videos.\"",
        "\"Got thumb ID: \"",
        "\"video\"",
        "\"getThumbnail\"",
        "\"image/*\""
    ],
    "variables": [],
    "comments": [
        "private constructor to enforce Singleton pattern",
        "Set to true to enable logging",
        "No extension.",
        "no file to be split off. Return everything",
        "Construct path without file name.",
        "DocumentProvider",
        "LocalStorageProvider",
        "The path is the id",
        "ExternalStorageProvider",
        "TODO handle non-primary volumes",
        "DownloadsProvider",
        "MediaProvider",
        "MediaStore (and general)",
        "Return the remote address",
        "File",
        "Sort alphabetically by lower case, which is much cleaner",
        "Return files only (not directories) and skip hidden files",
        "Return directories only and skip hidden directories",
        "Implicitly allow the user to select a particular kind of data",
        "The MIME data type filter",
        "Only return URIs that can be opened with ContentResolver"
    ],
    "docstrings": [
        "TAG for log messages.",
        "* Gets the extension of a file name, like \".png\" or \".jpg\".\n     *\n     * @param uri\n     * @return Extension including the dot(\".\"); \"\" if there is no extension;\n     *         null if uri was null.",
        "* @return Whether the URI is a local one.",
        "* @return True if Uri is a MediaStore Uri.\n     * @author paulburke",
        "* Convert File into Uri.\n     *\n     * @param file\n     * @return uri",
        "* Returns the path only (without file name).\n     *\n     * @param file\n     * @return",
        "* @return The MIME type for the given file.",
        "* @return The MIME type for the give Uri.",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is {@link LocalStorageProvider}.\n     * @author paulburke",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is ExternalStorageProvider.\n     * @author paulburke",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is DownloadsProvider.\n     * @author paulburke",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is MediaProvider.\n     * @author paulburke",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is Google Photos.",
        "* Get the value of the data column for this Uri. This is useful for\n     * MediaStore Uris, and other file-based ContentProviders.\n     *\n     * @param context The context.\n     * @param uri The Uri to query.\n     * @param selection (Optional) Filter used in the query.\n     * @param selectionArgs (Optional) Selection arguments used in the query.\n     * @return The value of the _data column, which is typically a file path.\n     * @author paulburke",
        "* Get a file path from a Uri. This will get the the path for Storage Access\n     * Framework Documents, as well as the _data field for the MediaStore and\n     * other file-based ContentProviders.<br>\n     * <br>\n     * Callers should check whether the path is local before assuming it\n     * represents a local file.\n     *\n     * @param context The context.\n     * @param uri The Uri to query.\n     * @see #isLocal(String)\n     * @see #getFile(Context, Uri)\n     * @author paulburke",
        "* Convert Uri into File, if possible.\n     *\n     * @return file A local file that the Uri was pointing to, or null if the\n     *         Uri is unsupported or pointed to a remote resource.\n     * @see #getPath(Context, Uri)\n     * @author paulburke",
        "* Get the file size in a human-readable string.\n     *\n     * @param size\n     * @return\n     * @author paulburke",
        "* Attempt to retrieve the thumbnail of given File from the MediaStore. This\n     * should not be called on the UI thread.\n     *\n     * @param context\n     * @param file\n     * @return\n     * @author paulburke",
        "* Attempt to retrieve the thumbnail of given Uri from the MediaStore. This\n     * should not be called on the UI thread.\n     *\n     * @param context\n     * @param uri\n     * @return\n     * @author paulburke",
        "* Attempt to retrieve the thumbnail of given Uri from the MediaStore. This\n     * should not be called on the UI thread.\n     *\n     * @param context\n     * @param uri\n     * @param mimeType\n     * @return\n     * @author paulburke",
        "* File and folder comparator. TODO Expose sorting option method\n     *\n     * @author paulburke",
        "* File (not directories) filter.\n     *\n     * @author paulburke",
        "* Folder (directories) filter.\n     *\n     * @author paulburke",
        "* Get the Intent for selecting content to be used in an Intent Chooser.\n     *\n     * @return The intent for opening a file with Intent.createChooser()\n     * @author paulburke"
    ],
    "functions": [
        "FileUtils",
        "getExtension",
        "isLocal",
        "isMediaUri",
        "Uri",
        "getUri",
        "File",
        "getPathWithoutFilename",
        "getMimeType",
        "getMimeType",
        "isLocalStorageDocument",
        "isExternalStorageDocument",
        "isDownloadsDocument",
        "isMediaDocument",
        "isGooglePhotosUri",
        "getDataColumn",
        "getPath",
        "File",
        "getFile",
        "getReadableFileSize",
        "Bitmap",
        "getThumbnail",
        "Bitmap",
        "getThumbnail",
        "Bitmap",
        "getThumbnail",
        "compare",
        "accept",
        "accept",
        "Intent",
        "createGetContentIntent"
    ],
    "classes": [
        "FileUtils"
    ]
}