{
    "identifiers": [
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "device",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "security",
        "cert",
        "X509Certificate",
        "java",
        "time",
        "Instant",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Optional",
        "javax",
        "security",
        "auth",
        "x500",
        "X500Principal",
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "Id",
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "OperationResult",
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "Result",
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "credentials",
        "X509CertificateCredential",
        "org",
        "eclipse",
        "hono",
        "service",
        "management",
        "credentials",
        "X509CertificateSecret",
        "io",
        "opentracing",
        "io",
        "vertx",
        "core",
        "Future",
        "io",
        "vertx",
        "core",
        "AutoProvisioningEnabledDeviceBackend",
        "tenantId",
        "clientCertificate",
        "span",
        "Objects",
        "requireNonNull",
        "tenantId",
        "Objects",
        "requireNonNull",
        "clientCertificate",
        "Objects",
        "requireNonNull",
        "span",
        "span",
        "log",
        "comment",
        "Instant",
        "now",
        "toString",
        "device",
        "setEnabled",
        "putExtension",
        "comment",
        "createDeviceAttempt",
        "promise",
        "createDevice",
        "tenantId",
        "Optional",
        "empty",
        "device",
        "span",
        "createDeviceAttempt",
        "createDeviceAttempt",
        "future",
        "compose",
        "r",
        "r",
        "isError",
        "Future",
        "succeededFuture",
        "OperationResult",
        "ok",
        "r",
        "getStatus",
        "Optional",
        "empty",
        "Optional",
        "empty",
        "certCredential",
        "setSecrets",
        "of",
        "certCredential",
        "setEnabled",
        "setComment",
        "comment",
        "setAuthId",
        "clientCertificate",
        "getSubjectX500Principal",
        "getName",
        "X500Principal",
        "RFC2253",
        "deviceId",
        "r",
        "getPayload",
        "getId",
        "credPromise",
        "promise",
        "tenantId",
        "deviceId",
        "Optional",
        "empty",
        "of",
        "certCredential",
        "span",
        "credPromise",
        "credPromise",
        "future",
        "compose",
        "v",
        "v",
        "isError",
        "deleteDevicePromise",
        "promise",
        "deleteDevice",
        "tenantId",
        "deviceId",
        "Optional",
        "empty",
        "span",
        "deleteDevicePromise",
        "deleteDevicePromise",
        "future",
        "OperationResult",
        "ok",
        "v",
        "getStatus",
        "deviceId",
        "Optional",
        "empty",
        "Optional",
        "empty",
        "span",
        "log",
        "deviceId",
        "Future",
        "succeededFuture",
        "OperationResult",
        "empty",
        "HttpURLConnection",
        "HTTP_CREATED"
    ],
    "literals": [
        "\"Start auto-provisioning\"",
        "\"Auto-provisioned at \"",
        "\"comment\"",
        "\"Auto-provisioning failed: device could not be created\"",
        "\"Auto-provisioning failed: credentials could not be set for device [\"",
        "\"]\"",
        "\"Auto-provisioning successful for device [\"",
        "\"]\""
    ],
    "variables": [],
    "comments": [
        "1. create device",
        "2. set the certificate credential"
    ],
    "docstrings": [
        "*****************************************************************************\n * Copyright (c) 2020 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0\n *\n * SPDX-License-Identifier: EPL-2.0\n ******************************************************************************",
        "* Interface that adds automatic device provisioning to the DeviceBackend.\n * \n * @see <a href=\"https://www.eclipse.org/hono/docs/dev/concepts/device-provisioning/#automatic-device-provisioning\">\n *      Automatic Device Provisioning</a>",
        "* Registers a device together with a set of credentials for the given client certificate.\n     * \n     *\n     * @param tenantId The tenant to which the device belongs.\n     * @param clientCertificate The X.509 certificate of the device to be provisioned.\n     * @param span The active OpenTracing span for this operation. It is not to be closed in this method! An\n     *            implementation should log (error) events on this span and it may set tags and use this span as the\n     *            parent for any spans created in this method.\n     * @return A (succeeded) future containing the result of the operation. The <em>status</em> will be\n     *         <ul>\n     *         <li><em>201 CREATED</em> if the device has successfully been provisioned.</li>\n     *         <li><em>4XX</em> if the provisioning failed. The payload may contain an error description.</li>\n     *         </ul>\n     * @throws NullPointerException if any of the parameters is {@code null}."
    ],
    "functions": [
        "provisionDevice"
    ],
    "classes": []
}