{
    "identifiers": [
        "vscode",
        "RegisterAction",
        "BaseCommand",
        "CommandShowCommandHistory",
        "CommandShowSearchHistory",
        "Mode",
        "VimState",
        "commandLine",
        "globalState",
        "Register",
        "RegisterMode",
        "reportSearch",
        "RecordedState",
        "TextEditor",
        "StatusBar",
        "commandParsers",
        "getPathDetails",
        "readDirectory",
        "Clipboard",
        "Position",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "key",
        "key",
        "key",
        "vimState",
        "vimState",
        "Mode",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "key",
        "CommandShowCommandHistory",
        "position",
        "vimState",
        "key",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "key",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "vimState",
        "key",
        "key",
        "vimState",
        "key",
        "key",
        "vimState",
        "vimState",
        "key",
        "commandLine",
        "vimState",
        "vimState",
        "vimState",
        "Mode",
        "vimState",
        "key",
        "key",
        "commandLine",
        "commandLine",
        "commandLine",
        "commandLine",
        "commandLine",
        "vimState",
        "commandLine",
        "commandLine",
        "vimState",
        "vimState",
        "key",
        "key",
        "commandLine",
        "commandLine",
        "commandLine",
        "commandLine",
        "Mode",
        "vimState",
        "vimState",
        "commandLine",
        "commandLine",
        "vimState",
        "vimState",
        "vimState",
        "commandLine",
        "commandLine",
        "vimState",
        "commandLine",
        "commandLine",
        "vimState",
        "vimState",
        "key",
        "vimState",
        "modifiedString",
        "vimState",
        "key",
        "vimState",
        "modifiedString",
        "vimState",
        "key",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "globalState",
        "globalState",
        "key",
        "key",
        "key",
        "searchState",
        "CommandEscInSearchMode",
        "position",
        "vimState",
        "vimState",
        "vimState",
        "searchState",
        "searchState",
        "vimState",
        "searchState",
        "vimState",
        "vimState",
        "vimState",
        "key",
        "CommandShowSearchHistory",
        "globalState",
        "position",
        "vimState",
        "key",
        "searchState",
        "searchState",
        "vimState",
        "vimState",
        "key",
        "searchState",
        "searchState",
        "vimState",
        "searchState",
        "vimState",
        "key",
        "key",
        "vimState",
        "key",
        "key",
        "vimState",
        "globalState",
        "key",
        "vimState",
        "globalState",
        "searchState",
        "prevSearchList",
        "searchState",
        "prevSearchList",
        "prevSearchList",
        "globalState",
        "searchState",
        "searchState",
        "vimState",
        "vimState",
        "nextMatch",
        "globalState",
        "vimState",
        "Register",
        "searchState",
        "reportSearch",
        "nextMatch",
        "searchState",
        "vimState",
        "vimState",
        "key",
        "key",
        "globalState",
        "globalState",
        "globalState",
        "prevSearchList",
        "globalState",
        "searchState",
        "prevSearchList",
        "globalState",
        "vimState",
        "searchState",
        "key",
        "key",
        "globalState",
        "globalState",
        "globalState",
        "searchState",
        "globalState",
        "globalState",
        "vimState",
        "prevSearchList",
        "globalState",
        "searchState",
        "prevSearchList",
        "globalState",
        "vimState",
        "searchState",
        "searchState",
        "modifiedString",
        "vimState",
        "key",
        "searchState",
        "modifiedString",
        "vimState",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "vimState",
        "Mode",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "globalState",
        "vimState",
        "searchState",
        "globalState",
        "globalState",
        "prevSearchList",
        "prevSearchList",
        "prevSearchList",
        "vimState",
        "searchState",
        "vimState",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "vimState",
        "vimState",
        "Position",
        "cmdText",
        "pos",
        "characterAt",
        "vimState",
        "cmdText",
        "characterAt",
        "cmdText",
        "pos",
        "vimState",
        "pos",
        "pos",
        "characterAt",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "globalState",
        "vimState",
        "searchState",
        "Position",
        "searchString",
        "pos",
        "characterAt",
        "searchState",
        "searchString",
        "characterAt",
        "searchString",
        "pos",
        "vimState",
        "pos",
        "pos",
        "characterAt",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "vimState",
        "Register",
        "vimState",
        "register",
        "text",
        "register",
        "register",
        "RecordedState",
        "action",
        "register",
        "keyStrokes",
        "keyStrokes",
        "action",
        "text",
        "keyStrokes",
        "text",
        "register",
        "register",
        "RegisterMode",
        "text",
        "vimState",
        "text",
        "vimState",
        "text",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "vimState",
        "Register",
        "vimState",
        "register",
        "text",
        "register",
        "register",
        "RecordedState",
        "action",
        "register",
        "keyStrokes",
        "keyStrokes",
        "action",
        "text",
        "keyStrokes",
        "text",
        "register",
        "register",
        "RegisterMode",
        "text",
        "globalState",
        "searchState",
        "text",
        "vimState",
        "text",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "Mode",
        "position",
        "vimState",
        "TextEditor",
        "position",
        "position",
        "position",
        "TextEditor",
        "position",
        "word",
        "vimState",
        "Mode",
        "globalState",
        "searchState",
        "word",
        "vimState",
        "word",
        "vimState",
        "word",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "Mode",
        "StatusBar",
        "trimmedStatusBarText",
        "position",
        "vimState",
        "key",
        "vimState",
        "vimState",
        "statusBarText",
        "key",
        "vimState",
        "vimState",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "vimState",
        "isTabForward",
        "commandLine",
        "autoCompleteItems",
        "commandLine",
        "isTabForward",
        "commandLine",
        "autoCompleteItems",
        "commandLine",
        "autoCompleteItems",
        "autoCompleteItems",
        "commandLine",
        "commandLine",
        "lastCmd",
        "lastPos",
        "lastCmd",
        "lastPos",
        "vimState",
        "evalCmd",
        "autoCompleteItems",
        "commandLine",
        "restCmd",
        "vimState",
        "vimState",
        "restCmd",
        "position",
        "vimState",
        "key",
        "commandLine",
        "k",
        "commandLine",
        "k",
        "vimState",
        "isTabForward",
        "commandLine",
        "key",
        "vimState",
        "vimState",
        "vimState",
        "currentCmd",
        "cursorPos",
        "currentCmd",
        "cursorPos",
        "cmdRegex",
        "evalCmd",
        "newCompletionItems",
        "commandParsers",
        "cmd",
        "cmd",
        "evalCmd",
        "cmd",
        "cmd",
        "cmd",
        "evalCmd",
        "evalCmd",
        "fileRegex",
        "evalCmd",
        "evalCmd",
        "fileRegex",
        "vscode",
        "vscode",
        "getPathDetails",
        "filePathInCmd",
        "currentUri",
        "isRemote",
        "evalCmd",
        "evalCmd",
        "fileRegex",
        "partialPath",
        "baseName",
        "readDirectory",
        "fullDirPath",
        "p",
        "currentUri",
        "isRemote",
        "shouldAddDotItems",
        "newCompletionItems",
        "dirItems",
        "name",
        "name",
        "baseName",
        "name",
        "name",
        "name",
        "baseName",
        "baseName",
        "isTabForward",
        "newCompletionItems",
        "commandLine",
        "newIndex",
        "commandLine",
        "newCompletionItems",
        "newCompletionItems",
        "commandLine",
        "cursorPos",
        "commandLine",
        "evalCmd",
        "restCmd",
        "newCompletionItems",
        "newCompletionItems",
        "newIndex",
        "vimState",
        "evalCmd",
        "completion",
        "restCmd",
        "vimState",
        "vimState",
        "restCmd",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "vimState",
        "vimState",
        "Clipboard",
        "vimState",
        "cmdText",
        "pos",
        "textFromClipboard",
        "cmdText",
        "pos",
        "vimState",
        "textFromClipboard",
        "commandLine",
        "key",
        "vimState",
        "RegisterAction",
        "BaseCommand",
        "Mode",
        "position",
        "vimState",
        "globalState",
        "searchState",
        "vimState",
        "Clipboard",
        "searchState",
        "searchString",
        "pos",
        "textFromClipboard",
        "searchString",
        "pos",
        "vimState",
        "textFromClipboard",
        "vimState"
    ],
    "literals": [
        "\"vscode\"",
        "\"../base\"",
        "\"./actions\"",
        "\"../../mode/mode\"",
        "\"../../state/vimState\"",
        "\"../../cmd_line/commandLine\"",
        "\"../../state/globalState\"",
        "\"../../register/register\"",
        "\"../../util/statusBarTextUtils\"",
        "\"../../state/recordedState\"",
        "\"../../textEditor\"",
        "\"../../statusBar\"",
        "\"../../cmd_line/subparser\"",
        "\"../../util/path\"",
        "\"../../util/clipboard\"",
        "\"../../common/motion/position\"",
        "'<character>'",
        "'<up>'",
        "'<down>'",
        "'<C-b>'",
        "'<C-e>'",
        "'<C-h>'",
        "'<C-p>'",
        "'<C-n>'",
        "'<C-f>'",
        "'<C-u>'",
        "'<Home>'",
        "'<End>'",
        "'<Del>'",
        "'\\n'",
        "'<BS>'",
        "'<shift+BS>'",
        "'<C-h>'",
        "'<C-f>'",
        "'<C-u>'",
        "'<Del>'",
        "'<Home>'",
        "'<C-b>'",
        "'<End>'",
        "'<C-e>'",
        "'\\n'",
        "'<up>'",
        "'<C-p>'",
        "'<down>'",
        "'<C-n>'",
        "''",
        "\"'<,'>\"",
        "'<tab>'",
        "''",
        "''",
        "'<character>'",
        "'<up>'",
        "'<down>'",
        "'<C-b>'",
        "'<C-e>'",
        "'<C-h>'",
        "'<C-p>'",
        "'<C-n>'",
        "'<C-f>'",
        "'<C-u>'",
        "'<Home>'",
        "'<End>'",
        "'<Del>'",
        "'\\n'",
        "'<BS>'",
        "'<shift+BS>'",
        "'<C-h>'",
        "'<C-f>'",
        "'<C-u>'",
        "'<Del>'",
        "'<Home>'",
        "'<C-b>'",
        "'<End>'",
        "'<C-e>'",
        "'\\n'",
        "''",
        "'/'",
        "'<up>'",
        "'<C-p>'",
        "'<down>'",
        "'<C-n>'",
        "''",
        "''",
        "''",
        "'<Esc>'",
        "'<C-c>'",
        "'<C-[>'",
        "'\\n'",
        "'<Esc>'",
        "'<C-c>'",
        "'<C-[>'",
        "'\\n'",
        "'<C-w>'",
        "'<C-w>'",
        "'<C-r>'",
        "'<character>'",
        "string",
        "string",
        "'\\n'",
        "string",
        "'\\n'",
        "'\\n'",
        "'<C-r>'",
        "'<character>'",
        "string",
        "string",
        "'\\n'",
        "string",
        "'\\n'",
        "'\\n'",
        "'<C-r>'",
        "'<C-w>'",
        "'<left>'",
        "'<right>'",
        "'\\n'",
        "'$1$2'",
        "'$1'",
        "'<right>'",
        "'<left>'",
        "'<tab>'",
        "'<shift+tab>'",
        "'\\n'",
        "'<tab>'",
        "string",
        "''",
        "'<C-v>'",
        "'<D-v>'",
        "'<C-v>'",
        "'<D-v>'"
    ],
    "variables": [
        "key",
        "modifiedString",
        "key",
        "searchState",
        "prevSearchList",
        "nextMatch",
        "modifiedString",
        "key",
        "searchState",
        "prevSearchList",
        "key",
        "pos",
        "cmdText",
        "characterAt",
        "searchState",
        "pos",
        "searchString",
        "characterAt",
        "register",
        "text",
        "keyStrokes",
        "register",
        "text",
        "keyStrokes",
        "searchState",
        "word",
        "searchState",
        "trimmedStatusBarText",
        "key",
        "statusBarText",
        "autoCompleteItems",
        "lastPos",
        "lastCmd",
        "evalCmd",
        "restCmd",
        "key",
        "isTabForward",
        "newCompletionItems",
        "currentCmd",
        "cursorPos",
        "evalCmd",
        "restCmd",
        "cmdRegex",
        "fileRegex",
        "filePathInCmd",
        "currentUri",
        "isRemote",
        "p",
        "shouldAddDotItems",
        "dirItems",
        "newIndex",
        "completion",
        "key",
        "pos",
        "cmdText",
        "textFromClipboard",
        "searchState",
        "searchString",
        "pos",
        "textFromClipboard"
    ],
    "comments": [
        "TODO: Much of the code in this file is duplicated.",
        "We need an interface to the status bar which can be used by both modes.",
        "TODO: break up",
        "Beginning",
        "End",
        "Backspace",
        "Previous",
        "Next",
        "Find",
        "Delete to beginning",
        "handle special keys first",
        "Clamp the history index to stay within bounds of command history length",
        "If past the first history item, allow user to enter their own new command string (not using history)",
        "TODO: break up",
        "Beginning",
        "End",
        "Backspace",
        "Previous",
        "Next",
        "Find",
        "Delete to beginning",
        "handle special keys first",
        "Repeat the previous search if no new string is entered",
        "Move cursor to next match",
        "Clamp the history index to stay within bounds of search history length",
        "If past the first history item, allow user to enter their own search string (not using history)",
        "Needs explicit check undefined because zero is falsy and zero is a valid character pos.",
        "Needs explicit check undefined because zero is falsy and zero is a valid character pos.",
        "Skip forward to next word, not going past EOL",
        "first regex removes the : / and | from the string",
        "second regex removes a single space from the end of the string",
        "Command tab backward from behind shift tab",
        "Sub string since vim does completion before the cursor",
        "\\s* is the match the extra space before any character like ':  edit'",
        "Command completion",
        "Remove the already typed portion in the array",
        "File completion by searching if there is a space after the first word/command",
        "ideally it should be a process of white-listing to selected commands like :e and :vsp",
        "Update the evalCmd in case of windows, where we change / to \\",
        "test if the baseName is . or ..",
        "If here only one items we fill cmd direct, so the next tab will not cycle the one item array"
    ],
    "docstrings": [
        "* Commands that are only relevant when entering a command or search"
    ],
    "functions": [
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "exec",
        "exec",
        "exec",
        "runsOnceForEveryCursor",
        "getTrimmedStatusBarText",
        "exec",
        "runsOnceForEveryCursor",
        "cycleCompletion",
        "exec",
        "runsOnceForEveryCursor",
        "exec",
        "runsOnceForEveryCursor",
        "exec"
    ],
    "classes": [
        "CommandInsertInCommandline",
        "CommandInsertInSearchMode",
        "CommandEscInCommandline",
        "CommandEscInSearchMode",
        "CommandRemoveWordCommandline",
        "CommandRemoveWordInSearchMode",
        "CommandInsertRegisterContentInCommandLine",
        "CommandInsertRegisterContentInSearchMode",
        "CommandInsertWord",
        "CommandNavigateInCommandlineOrSearchMode",
        "CommandTabInCommandline",
        "CommandPasteInCommandline",
        "CommandPasteInSearchMode"
    ]
}