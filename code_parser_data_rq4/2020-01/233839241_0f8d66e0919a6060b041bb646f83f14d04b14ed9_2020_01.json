{
    "identifiers": [
        "datetime",
        "timedelta",
        "datetime",
        "airflow",
        "airflow",
        "DAG",
        "airflow",
        "hooks",
        "settings",
        "airflow",
        "hooks",
        "S3_hook",
        "S3Hook",
        "airflow",
        "contrib",
        "operators",
        "emr_create_job_flow_operator",
        "EmrCreateJobFlowOperator",
        "airflow",
        "contrib",
        "operators",
        "emr_add_steps_operator",
        "EmrAddStepsOperator",
        "airflow",
        "contrib",
        "sensors",
        "emr_step_sensor",
        "EmrStepSensor",
        "airflow",
        "contrib",
        "operators",
        "emr_terminate_job_flow_operator",
        "EmrTerminateJobFlowOperator",
        "airflow",
        "operators",
        "bash_operator",
        "BashOperator",
        "airflow",
        "operators",
        "python_operator",
        "PythonOperator",
        "pendulum",
        "pendulum",
        "timezone",
        "datetime",
        "tzinfo",
        "local_tz",
        "ds",
        "kwargs",
        "DAG",
        "catchup",
        "default_args",
        "default_args",
        "dagrun_timeout",
        "timedelta",
        "hours",
        "schedule_interval",
        "timedelta",
        "days",
        "run_this",
        "t2",
        "S3Hook",
        "aws_conn_id",
        "hook",
        "read_key",
        "key",
        "bucket_name",
        "st",
        "split",
        "loop",
        "loop",
        "len",
        "loop",
        "i",
        "X",
        "EmrAddStepsOperator",
        "task_id",
        "i",
        "job_flow_id",
        "aws_conn_id",
        "steps",
        "steps",
        "dag",
        "dag",
        "EmrStepSensor",
        "task_id",
        "i",
        "job_flow_id",
        "step_id",
        "aws_conn_id",
        "dag",
        "dag",
        "run_this",
        "step_addr",
        "step_checkr",
        "t2",
        "dag",
        "dag",
        "PythonOperator",
        "task_id",
        "provide_context",
        "python_callable",
        "print_context",
        "dag",
        "dag",
        "BashOperator",
        "task_id",
        "bash_command",
        "dag",
        "dag",
        "poke",
        "run_this",
        "t2"
    ],
    "literals": [
        "\"Asia/Kolkata\"",
        "'owner'",
        "'Airflow'",
        "'depends_on_past'",
        "'start_date'",
        "'email'",
        "'prakarsh2512@gmail.com'",
        "'email_on_failure'",
        "'email_on_retry'",
        "'retries'",
        "'Whatever you return gets printed in the logs'",
        "'check_steps2'",
        "'aws_s3'",
        "\"j-2ASQREUMPJ0Y7\"",
        "'aws_emr'",
        "'prod_deployment/conf/athena_all_tables'",
        "'bounce-data-platform'",
        "\",\"",
        "'Name'",
        "'test step'",
        "'ActionOnFailure'",
        "'CONTINUE'",
        "'HadoopJarStep'",
        "'Jar'",
        "'command-runner.jar'",
        "'Args'",
        "'hive'",
        "'-e'",
        "'msck repair table dataplatform.task_fact_daily_agg_entity'",
        "'add_steps_'",
        "\"j-2ASQREUMPJ0Y7\"",
        "'aws_emr'",
        "'watch_step_'",
        "\"j-2ASQREUMPJ0Y7\"",
        "\"{{ task_instance.xcom_pull('add_steps', key='return_value')[0] }}\"",
        "'aws_emr'",
        "'print_the_context'",
        "'againprint_date'",
        "'date'"
    ],
    "variables": [
        "local_tz",
        "default_args",
        "dag",
        "step_adder",
        "step_checker",
        "hook",
        "job_flow_id",
        "aws_conn_id",
        "st",
        "loop",
        "X",
        "steps",
        "step_addr",
        "step_checkr",
        "run_this",
        "t2"
    ],
    "comments": [
        "'queue': 'bash_queue',",
        "'pool': 'backfill',",
        "'priority_weight': 10,",
        "'end_date': datetime(2016, 1, 1),",
        "poke(ds)",
        "schedule_interval='0 3 * * *'",
        "X = 5 if not loop is None else len(loop)",
        "t3= BashOperator(",
        "task_id='ag' + str(i),",
        "bash_command='echo \"success\"',",
        "dag=dag)",
        "run_this>>t3>>t2",
        "def pk(a,b):",
        "l=[]",
        "for i in range(0,2) :",
        "t2= BashOperator(",
        "task_id='ag{}'.format(i),",
        "bash_command='echo \"success\"',",
        "dag=dag)",
        "a>>t2>>b",
        "run_this >> ll >> t2",
        "poke(run_this,t2)",
        "for i in step_adder:",
        "run_this>>i"
    ],
    "docstrings": [],
    "functions": [
        "print_context",
        "poke"
    ],
    "classes": []
}