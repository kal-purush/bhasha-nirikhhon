{
    "identifiers": [
        "MaskDDMMYYYDirective",
        "describe",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState",
        "it",
        "MaskDDMMYYYDirective",
        "expect",
        "newState"
    ],
    "literals": [
        "'./mask-ddmmyyy.directive'",
        "'MaskDDMMYYYDirective'",
        "'no key pressed'",
        "''",
        "''",
        "''",
        "'1 pressed'",
        "''",
        "'1'",
        "'1'",
        "'key pressed not digit nor /'",
        "''",
        "'d'",
        "''",
        "'digit pressed with existing string equals to 1, cursor at the end'",
        "'1'",
        "'1'",
        "'11/'",
        "'/ pressed with existing string equals to 1, cursor at the end'",
        "'1'",
        "'/'",
        "'01/'",
        "'digit pressed with existing string equals to 1, cursor at 0'",
        "'1'",
        "'0'",
        "'01/'",
        "'digit pressed with existing string equals to 15/, cursor at the end'",
        "'15/'",
        "'1'",
        "'15/1'",
        "'/ pressed with existing string equals to 15, cursor at the end'",
        "'15'",
        "'/'",
        "'15/'",
        "'1 pressed with existing string equals to 15/, cursor at the end'",
        "'15/'",
        "'1'",
        "'15/1'",
        "'/ pressed with existing string equals to 15/, cursor at the end'",
        "'15/'",
        "'/'",
        "'15/'",
        "'3 pressed with existing string equals to 15/, cursor at the start'",
        "'15/'",
        "'3'",
        "'35/'",
        "'2 pressed with existing string equals to 15/1, cursor at the end'",
        "'15/1'",
        "'2'",
        "'15/12/'",
        "'2 pressed with existing string equals to 15/1, cursor at the end - 1'",
        "'15/1'",
        "'2'",
        "'15/21/'",
        "'1 pressed with existing string equals to 15/12, cursor at the end'",
        "'15/12'",
        "'1'",
        "'15/12'",
        "'1 pressed with existing string equals to 11/02/, cursor at the end'",
        "'11/02/'",
        "'1'",
        "'11/12/'",
        "'1 pressed with existing string equals to 15/12/, cursor at the end'",
        "'15/12/'",
        "'1'",
        "'15/12/1'",
        "'0 pressed with existing string equals to 15/12/, cursor at the end'",
        "'15/12/'",
        "'0'",
        "'15/12/'",
        "'2 pressed with existing string equals to 15/12/1, cursor at the end'",
        "'15/12/1'",
        "'2'",
        "'15/12/12'",
        "'2 pressed with existing string equals to 15/12/1, cursor at the end - 1'",
        "'15/12/1'",
        "'2'",
        "'15/12/21'",
        "'/ pressed with existing string equals to 15/12/1, cursor at the end - 1'",
        "'15/12/1'",
        "'/'",
        "'15/12/1'",
        "'3 pressed with existing string equals to 15/12/12, cursor at the end'",
        "'15/12/12'",
        "'3'",
        "'15/12/123'",
        "'4 pressed with existing string equals to 15/12/123, cursor at the end'",
        "'15/12/123'",
        "'4'",
        "'15/12/1234'",
        "'5 pressed with existing string equals to 15/12/1234, cursor at the end'",
        "'15/12/1234'",
        "'5'",
        "'15/12/1234'",
        "'5 pressed with existing string equals to 15/12/1234, cursor at the end - 1'",
        "'15/12/1234'",
        "'5'",
        "'15/12/1235'",
        "'0 pressed with existing string equals to 0, cursor at the end'",
        "'0'",
        "'0'",
        "'0'",
        "'0 pressed with existing string equals to 12/0, cursor at the end'",
        "'12/0'",
        "'0'",
        "'12/0'",
        "'0 pressed with existing string equals to 01, cursor at the end - 1'",
        "'01'",
        "'0'",
        "'01'",
        "'0 pressed with existing string equals to 01/0, cursor at the end - 1'",
        "'01/0'",
        "'0'",
        "'01/0'",
        "'0 pressed with existing string equals to 01/01/2020, cursor at 1'",
        "'01/01/2020'",
        "'0'",
        "'01/01/2020'"
    ],
    "variables": [
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState",
        "newState"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}