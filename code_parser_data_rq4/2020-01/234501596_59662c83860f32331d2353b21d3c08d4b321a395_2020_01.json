{
    "identifiers": [
        "uint16Le",
        "uint16",
        "assertIsHexStr",
        "uint16",
        "ArrayBuffer",
        "DataView",
        "buf",
        "uint16",
        "Uint8Array",
        "buf",
        "v",
        "v",
        "uint32Le",
        "uint32",
        "assertIsHexStr",
        "uint32",
        "ArrayBuffer",
        "DataView",
        "buf",
        "uint32",
        "Uint8Array",
        "buf",
        "v",
        "v",
        "uint64Le",
        "uint64",
        "assertIsHexStr",
        "uint64",
        "uint64",
        "val",
        "val",
        "uint32Le",
        "valLeft",
        "uint32Le",
        "valRight",
        "viewRight",
        "viewLeft"
    ],
    "literals": [
        "string",
        "'string'",
        "'0x'",
        "Expect ${str} to be a hex string",
        "string",
        "0x${[...new Uint8Array(buf)].map(v => v.toString(16).padStart(2, '0')).join('')}",
        "'0'",
        "''",
        "string",
        "0x${[...new Uint8Array(buf)].map(v => v.toString(16).padStart(2, '0')).join('')}",
        "'0'",
        "''",
        "string",
        "'0'",
        "0x${val.slice(0, 8)}",
        "0x${val.slice(8)}",
        "0x${viewRight}${viewLeft}"
    ],
    "variables": [
        "uint16Le",
        "buf",
        "uint32Le",
        "buf",
        "uint64Le",
        "val",
        "valLeft",
        "valRight",
        "viewLeft",
        "viewRight"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "assertIsHexStr"
    ],
    "classes": []
}