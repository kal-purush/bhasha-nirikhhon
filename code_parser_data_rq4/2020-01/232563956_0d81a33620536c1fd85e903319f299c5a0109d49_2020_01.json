{
    "identifiers": [
        "logging",
        "certbot",
        "errors",
        "certbot",
        "interfaces",
        "certbot",
        "plugins",
        "dns_common",
        "exonetapi",
        "Client",
        "ExonetClient",
        "exonetapi",
        "structures",
        "ApiResource",
        "requests",
        "exceptions",
        "HTTPError",
        "tldextract",
        "extract",
        "tldextract",
        "zope",
        "logging",
        "getLogger",
        "zope",
        "implementer",
        "interfaces",
        "IAuthenticator",
        "zope",
        "provider",
        "interfaces",
        "IPluginFactory",
        "dns_common",
        "DNSAuthenticator",
        "args",
        "kwargs",
        "Authenticator",
        "args",
        "kwargs",
        "classmethod",
        "cls",
        "add",
        "Authenticator",
        "cls",
        "add_parser_arguments",
        "add",
        "add",
        "help",
        "_configure_credentials",
        "domain",
        "validation_name",
        "validation",
        "_get_exonet_client",
        "add_txt_record",
        "domain",
        "validation_name",
        "validation",
        "domain",
        "validation_name",
        "validation",
        "_get_exonet_client",
        "del_txt_record",
        "domain",
        "validation_name",
        "validation",
        "_ExonetClient",
        "credentials",
        "conf",
        "token",
        "ExonetClient",
        "manager",
        "authenticator",
        "set_token",
        "token",
        "domain_name",
        "record_name",
        "record_content",
        "_find_zone",
        "domain_name",
        "HTTPError",
        "exception",
        "exception",
        "response",
        "status_code",
        "format",
        "exception",
        "format",
        "hint",
        "hint",
        "logger",
        "debug",
        "error_message",
        "errors",
        "PluginError",
        "error_message",
        "logger",
        "debug",
        "ApiResource",
        "record",
        "attribute",
        "record",
        "attribute",
        "_compute_record_name",
        "domain",
        "record_name",
        "record",
        "attribute",
        "_compute_record_content",
        "record_content",
        "record",
        "attribute",
        "record",
        "relationship",
        "domain",
        "record",
        "post",
        "logger",
        "debug",
        "created_record",
        "id",
        "HTTPError",
        "exception",
        "format",
        "exception",
        "response",
        "text",
        "logger",
        "debug",
        "error_message",
        "errors",
        "PluginError",
        "error_message",
        "domain_name",
        "record_name",
        "record_content",
        "_find_zone",
        "domain_name",
        "HTTPError",
        "exception",
        "logger",
        "debug",
        "exception",
        "domain",
        "related",
        "get",
        "record",
        "record",
        "domain_records",
        "record",
        "attribute",
        "record",
        "attribute",
        "_compute_record_name",
        "domain",
        "record_name",
        "record",
        "attribute",
        "_compute_record_content",
        "record_content",
        "HTTPError",
        "exception",
        "logger",
        "debug",
        "exception",
        "response",
        "text",
        "record",
        "matching_records",
        "logger",
        "debug",
        "record",
        "id",
        "record",
        "HTTPError",
        "exception",
        "logger",
        "warning",
        "record",
        "id",
        "exception",
        "domain_name",
        "tldextract",
        "domain_name",
        "registered_domain",
        "manager",
        "resource",
        "domain",
        "get",
        "zone",
        "zone",
        "zones",
        "zone",
        "attribute",
        "domain",
        "matches",
        "matches",
        "logger",
        "debug",
        "zone",
        "attribute",
        "domain_name",
        "zone",
        "errors",
        "PluginError",
        "format",
        "domain_name",
        "domain",
        "staticmethod",
        "domain",
        "full_record_name",
        "full_record_name",
        "rpartition",
        "domain",
        "attribute",
        "staticmethod",
        "record_content",
        "record_content"
    ],
    "literals": [
        "'Obtain certificates using a DNS TXT record with the Exonet DNS.'",
        "'credentials'",
        "'Exonet credentials INI file.'",
        "'This plugin configures a DNS TXT record to respond to a dns-01 challenge using the \\\n            Exonet API.'",
        "'credentials'",
        "'Exonet credentials INI file'",
        "'token'",
        "'API token for Exonet API'",
        "'token'",
        "'Did you provide a valid API token?'",
        "'Error finding DNS zone using the Exonet API: {0}{1}'",
        "' ({0})'",
        "''",
        "'Adding TXT record to DNS.'",
        "'dns_records'",
        "'type'",
        "'TXT'",
        "'name'",
        "'content'",
        "'ttl'",
        "'zone'",
        "'Successfully added TXT record with id: %s'",
        "'Error adding TXT record using the Exonet API: {0}'",
        "'Error finding domain using the Exonet API: %s'",
        "'records'",
        "'type'",
        "'TXT'",
        "'name'",
        "'content'",
        "'Error removing TXT record from the Exonet API: %s'",
        "'Deleting DNS record with id: %s'",
        "'Error deleting TXT record %s using the Exonet API: %s'",
        "'dns_zones'",
        "'name'",
        "'name'",
        "'Found DNS zone %s for domain %s'",
        "'name'",
        "'Unable to find DNS zone for {0}. Zone {1} not found.'",
        "\".\"",
        "'name'",
        "\"\\\"\"",
        "\"\\\"\""
    ],
    "variables": [
        "logger",
        "description",
        "credentials",
        "credentials",
        "manager",
        "domain",
        "hint",
        "hint",
        "error_message",
        "record",
        "created_record",
        "error_message",
        "domain",
        "domain_records",
        "matching_records",
        "domain",
        "zones",
        "matches",
        "zone"
    ],
    "comments": [
        "pylint: disable=arguments-differ",
        "pylint: disable=missing-docstring,no-self-use",
        "Add the TXT record to the DNS.",
        "Convert to registered domain.",
        "Get all available zones.",
        "See if any zones match.",
        "If a match is found, return it.",
        "The name of the DNS record, without the DNS zone name.",
        "The DNS record content within quotes."
    ],
    "docstrings": [
        "\"\"\"DNS Authenticator for Exonet.\"\"\"",
        "\"\"\"DNS Authenticator for Exonet\n\n    This Authenticator uses the Exonet API to fulfill a dns-01 challenge.\n    \"\"\"",
        "\"\"\"\n    Encapsulates all communication with the Exonet API.\n    \"\"\"",
        "\"\"\"\n        Add a TXT record using the supplied information.\n\n        :param str domain_name: The domain to use to associate the record with.\n        :param str record_name: The record name (typically beginning with '_acme-challenge.').\n        :param str record_content: The record content (typically the challenge validation).\n        :raises certbot.errors.PluginError: if an error occurs communicating with the Exonet API.\n        \"\"\"",
        "\"\"\"\n        Delete a TXT record using the supplied information.\n\n        Note that both the record's name and content are used to ensure that similar records\n        created concurrently (e.g., due to concurrent invocations of this plugin) are not deleted.\n\n        Failures are logged, but not raised.\n\n        :param str domain_name: The domain to use to associate the record with.\n        :param str record_name: The record name (typically beginning with '_acme-challenge.').\n        :param str record_content: The record content (typically the challenge validation).\n        \"\"\"",
        "\"\"\"\n        Find the domain resource for a given domain name.\n\n        :param str domain_name: The domain name for which to find the corresponding Domain.\n        :returns: The Domain, if found.\n        :rtype: `~exonetapi.Resource`\n        :raises certbot.errors.PluginError: if no matching Domain is found.\n        \"\"\""
    ],
    "functions": [
        "add_parser_arguments",
        "more_info",
        "_setup_credentials",
        "_perform",
        "_cleanup",
        "_get_exonet_client",
        "add_txt_record",
        "del_txt_record",
        "_find_zone",
        "_compute_record_name",
        "_compute_record_content"
    ],
    "classes": [
        "Authenticator",
        "_ExonetClient"
    ]
}