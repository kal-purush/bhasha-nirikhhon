{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "unicode_literals",
        "numpy",
        "np",
        "utils",
        "make_quant",
        "file",
        "BaseFile",
        "BaseFile",
        "path",
        "path",
        "signal",
        "pulsar",
        "_get_signal_params",
        "signal",
        "pulsar",
        "path",
        "np",
        "sqrt",
        "len",
        "signal",
        "data",
        "np",
        "sum",
        "signal",
        "data",
        "path",
        "pulsar",
        "name",
        "nrows",
        "nchan",
        "npol",
        "nbin",
        "rms",
        "header",
        "npol",
        "ii",
        "nrows",
        "ii",
        "tsubint",
        "to",
        "value",
        "ff",
        "nchan",
        "signal",
        "dat_freq",
        "ff",
        "value",
        "mjd_mid",
        "tsubint",
        "value",
        "freq",
        "obsbw",
        "value",
        "nchan",
        "lines",
        "append",
        "pulse_header",
        "bb",
        "nbin",
        "lines",
        "append",
        "ii",
        "ff",
        "bb",
        "signal",
        "data",
        "ff",
        "bb",
        "dump_val",
        "dump_val",
        "np",
        "floor",
        "dump_val",
        "open",
        "path",
        "file_num",
        "pdv_file",
        "pdv_file",
        "writelines",
        "lines",
        "pdv_file",
        "close",
        "header",
        "np",
        "floor",
        "dump_val",
        "open",
        "path",
        "file_num",
        "pdv_file",
        "pdv_file",
        "writelines",
        "lines",
        "pdv_file",
        "close",
        "signal",
        "pulsar",
        "signal",
        "Nchan",
        "signal",
        "samprate",
        "signal",
        "samprate",
        "pulsar",
        "period",
        "decompose",
        "signal",
        "Npols",
        "signal",
        "nsub",
        "signal",
        "fcent",
        "signal",
        "bw",
        "signal",
        "bw",
        "signal",
        "Nchan",
        "signal",
        "sublen",
        "nrows",
        "property",
        "_tbin",
        "tbin",
        "setter",
        "value",
        "make_quant",
        "value",
        "property",
        "_npol",
        "npol",
        "setter",
        "value",
        "value",
        "property",
        "_nchan",
        "nchan",
        "setter",
        "value",
        "value",
        "property",
        "_nbin",
        "nbin",
        "setter",
        "value",
        "value",
        "property",
        "_nrows",
        "nrows",
        "setter",
        "value",
        "value",
        "property",
        "_obsfreq",
        "obsfreq",
        "setter",
        "value",
        "make_quant",
        "value",
        "property",
        "_obsbw",
        "obsbw",
        "setter",
        "value",
        "make_quant",
        "value",
        "property",
        "_chan_bw",
        "chan_bw",
        "setter",
        "value",
        "make_quant",
        "value",
        "property",
        "_tsubint",
        "tsubint",
        "setter",
        "value",
        "make_quant",
        "value"
    ],
    "literals": [
        "\"PsrSigSim_Simulated_Pulsar.ar\"",
        "\"# File: %s Src: %s Nsub: %s Nch: %s Npol: %s Nbin: %s RMS: %s \\n\"",
        "\"Only saving total intensity, multiple polarizations not yet implemented\"",
        "'day'",
        "\"# MJD(mid): %s Tsub: %s Freq: %s BW: %s \\n\"",
        "\"%s %s %s %s \\n\"",
        "\"_%s.txt\"",
        "'w'",
        "\"_%s.txt\"",
        "'w'",
        "'s'",
        "'MHz'",
        "'MHz'",
        "'MHz'",
        "'second'"
    ],
    "variables": [
        "_path",
        "_signal",
        "_file",
        "_path",
        "_tbin",
        "_nbin",
        "_nchan",
        "_npol",
        "_nrows",
        "_tsubint",
        "_chan_bw",
        "_obsbw",
        "_obsfreq",
        "_path",
        "rms",
        "header",
        "lines",
        "dump_val",
        "mjd_mid",
        "freq",
        "pulse_header",
        "file_num",
        "lines",
        "file_num",
        "nchan",
        "tbin",
        "nbin",
        "npol",
        "nrows",
        "obsfreq",
        "obsbw",
        "chan_bw",
        "tsubint",
        "nsubint",
        "_tbin",
        "_npol",
        "_nchan",
        "_nbin",
        "_nrows",
        "_obsfreq",
        "_obsbw",
        "_chan_bw",
        "_tsubint"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "encoding=utf8",
        "Get the signal parameters",
        "Check if there's a save path",
        "We first need to make the header",
        "Now we make a list of the lines to save",
        "We need to dump the data every so often to avoid files that are too big",
        "Now we need to loop through each subint, frequency channel, and polarization",
        "Now save the lines in a text file",
        "and then we want to dump the last few lines",
        "get parameters from signal class",
        "length of subint in seconds",
        "Define various PSRFITS parameters"
    ],
    "docstrings": [
        "\"\"\"A class for saving PsrSigSim signals as text files.\n    Multiple different text file data types may be supported, but currently\n    only the PSRCHIVE pdv function output is supported.\n    path: name and path of new text file that will be saved\n    \"\"\"",
        "\"\"\"\n        \"\"\"",
        "\"\"\"\n        Function to save simulated data in the same format as the PSRCHIVE pdf function.\n        To avoid large file sizes, every hundred pulses the data will be saved as a text file.\n        Currently one a single polarization (total intensity) is supported. Inputs are:\n        \n        signal [class] : signal class object, currently only filterbank is supported\n        pulsar [class] : pulsar class object\n        filename [string] : desired name of source/output file. Output files will be saved as\n                            `filename`_#.txt, where # is the chronological number of the \n                            files being saved.\n        \"\"\"",
        "\"\"\"\n        Retrieve the various parameters needed to save the file from\n        a PSS signal class.\n        \"\"\""
    ],
    "functions": [
        "save_psrchive_pdv",
        "_get_signal_params",
        "tbin",
        "tbin",
        "npol",
        "npol",
        "nchan",
        "nchan",
        "nbin",
        "nbin",
        "nrows",
        "nrows",
        "obsfreq",
        "obsfreq",
        "obsbw",
        "obsbw",
        "chan_bw",
        "chan_bw",
        "tsubint",
        "tsubint"
    ],
    "classes": [
        "TxtFile"
    ]
}