{
    "identifiers": [
        "codecs",
        "argparse",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "parse_args",
        "args",
        "file",
        "args",
        "sdl",
        "open",
        "filename",
        "fileHandle",
        "line",
        "fileHandle",
        "readlines",
        "line",
        "split",
        "hex_string",
        "strip",
        "rel_time",
        "c",
        "codecs",
        "decode",
        "hex_string",
        "dec_array",
        "append",
        "c",
        "packets",
        "append",
        "rel_time",
        "dec_array",
        "packet",
        "packets",
        "packet",
        "packet",
        "data",
        "len",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "sdl_out",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "axesbyte",
        "axesbyte",
        "axesbyte",
        "axesbyte",
        "format",
        "timestamp",
        "format",
        "channel",
        "format",
        "waveform",
        "format",
        "trigger",
        "format",
        "axes",
        "format",
        "duration",
        "format",
        "direction",
        "format",
        "timebetween",
        "format",
        "address1",
        "address1",
        "format",
        "address2",
        "address2",
        "format",
        "delay",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "effecttype",
        "format",
        "timestamp",
        "format",
        "channel",
        "format",
        "channel",
        "effect_sdl_name",
        "format",
        "channel",
        "effect_class",
        "duration",
        "format",
        "channel",
        "effect_class",
        "delay",
        "format",
        "channel",
        "effect_class",
        "trigger",
        "format",
        "channel",
        "effect_class",
        "timebetween",
        "format",
        "channel",
        "effect_class",
        "format",
        "channel",
        "effect_class",
        "direction",
        "address1",
        "address1",
        "sdl_params",
        "item",
        "sdl_params",
        "address1",
        "format",
        "channel",
        "effect_class",
        "item",
        "effect_class",
        "address2",
        "address2",
        "sdl_params",
        "item",
        "sdl_params",
        "address2",
        "format",
        "channel",
        "effect_class",
        "item",
        "format",
        "channel",
        "channel",
        "data",
        "len",
        "data",
        "data",
        "data",
        "data",
        "data",
        "signed",
        "data",
        "data",
        "data",
        "signed",
        "data",
        "sdl_out",
        "format",
        "timestamp",
        "format",
        "address",
        "format",
        "attack_duration",
        "format",
        "attack_level",
        "attack_level",
        "format",
        "fade_duration",
        "format",
        "fade_level",
        "fade_level",
        "format",
        "attack_duration",
        "format",
        "attack_level",
        "format",
        "fade_duration",
        "format",
        "fade_level",
        "data",
        "len",
        "data",
        "data",
        "data",
        "signed",
        "data",
        "sdl_out",
        "format",
        "timestamp",
        "format",
        "address",
        "format",
        "level",
        "level",
        "format",
        "level",
        "data",
        "len",
        "data",
        "data",
        "data",
        "signed",
        "data",
        "signed",
        "data",
        "data",
        "data",
        "data",
        "sdl_out",
        "format",
        "timestamp",
        "format",
        "address",
        "format",
        "level",
        "level",
        "format",
        "offset",
        "offset",
        "format",
        "phase",
        "phase",
        "format",
        "period",
        "format",
        "period",
        "format",
        "level",
        "format",
        "offset",
        "format",
        "phase",
        "data",
        "len",
        "data",
        "data",
        "data",
        "signed",
        "data",
        "signed",
        "data",
        "signed_short",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "sdl_out",
        "format",
        "timestamp",
        "format",
        "address",
        "format",
        "pos_coeff",
        "format",
        "neg_coeff",
        "format",
        "offset",
        "offset",
        "format",
        "deadband",
        "deadband",
        "format",
        "pos_sat",
        "pos_sat",
        "format",
        "neg_sat",
        "neg_sat",
        "format",
        "pos_sat",
        "format",
        "neg_sat",
        "format",
        "pos_coeff",
        "format",
        "neg_coeff",
        "format",
        "deadband",
        "format",
        "offset",
        "data",
        "len",
        "data",
        "data",
        "data",
        "data",
        "sdl_out",
        "val",
        "val",
        "val",
        "format",
        "timestamp",
        "format",
        "channel",
        "format",
        "mode",
        "format",
        "iterations",
        "format",
        "timestamp",
        "val",
        "format",
        "channel",
        "val",
        "format",
        "channel",
        "val",
        "format",
        "channel",
        "iterations",
        "data",
        "len",
        "data",
        "sdl_out",
        "data",
        "state",
        "data",
        "state",
        "data",
        "format",
        "timestamp",
        "format",
        "state",
        "format",
        "timestamp",
        "data",
        "data",
        "data",
        "data",
        "len",
        "data",
        "data",
        "sdl_out",
        "format",
        "timestamp",
        "format",
        "gain",
        "gain",
        "format",
        "gain"
    ],
    "literals": [
        "'Parse force feedback effect \\\n                                 descriptions from USB IForce dump to human readable text.'",
        "'file'",
        "'Filename of the dump (txt)'",
        "'--sdl'",
        "'Output SDL structs instead'",
        "\"store_true\"",
        "\"rt\"",
        "\"\\t\"",
        "\"hex\"",
        "\"Constant Force 0x00\"",
        "\"Square Wave 0x20\"",
        "\"Triangle Wave 0x21\"",
        "\"Sine Wave 0x22\"",
        "\"Sawtooth Up 0x23\"",
        "\"Sawtooth down 0x24\"",
        "\"Spring 40\"",
        "\"Friction And Inertia 0x41\"",
        "\"Unknown XX\"",
        "\"Directional 0x02\"",
        "\"X 0x04\"",
        "\"Y 0x08\"",
        "\"X and Y 0x0C\"",
        "\"Unknown XX\"",
        "'{:.2f} Force_effect'",
        "'\\tChannel: {}'",
        "'\\tWaveform: {}'",
        "'\\tTrigger: {}'",
        "'\\tAxes: {}'",
        "'\\tDuration: {} ms'",
        "'\\tDirection: {} degrees'",
        "'\\tTime between triggers: {} ms'",
        "'\\tParameter address 1: {}{}'",
        "' (not used)'",
        "''",
        "'\\tParameter address 2: {}{}'",
        "' (not used)'",
        "''",
        "'\\tDelay: {} ms'",
        "'SDL_HAPTIC_CONSTANT;'",
        "'constant'",
        "'SDL_HAPTIC_SQUARE; /* if supported by SDL */'",
        "'periodic'",
        "'SDL_HAPTIC_TRIANGLE;'",
        "'periodic'",
        "'SDL_HAPTIC_SINE;'",
        "'periodic'",
        "'SDL_HAPTIC_SAWTOOTHUP;'",
        "'periodic'",
        "'SDL_HAPTIC_SAWTOOTHDOWN;'",
        "'periodic'",
        "'SDL_HAPTIC_SPRING;'",
        "'condition'",
        "'SDL_HAPTIC_FRICTION; /* or SDL_HAPTIC_INERTIA */'",
        "'condition'",
        "'/* Unknown effect type */'",
        "'/* Time: {:.02f} */'",
        "'SDL_memset(&effect{}, 0, sizeof(SDL_HapticEffect));'",
        "'effect{}.type = {}'",
        "'effect{}.{}.length = {};'",
        "'effect{}.{}.delay = {};'",
        "'effect{}.{}.button = {};'",
        "'effect{}.{}.interval = {};'",
        "'effect{}.{}.direction.type = SDL_HAPTIC_POLAR;'",
        "'effect{}.{}.direction.dir[0] = {};'",
        "'effect{}.{}{}'",
        "'condition'",
        "'effect{}.{}{}'",
        "'effect_id{} = SDL_HapticNewEffect(haptic, &effect{})'",
        "'{:.2f} Parameter: Attack and fade'",
        "'\\tAddress: {}'",
        "'\\tAttack duration: {} ms'",
        "'\\tLevel at start of attack: {} ({:.1f} %)'",
        "'\\tFade duration: {} ms'",
        "'\\tLevel after fade: {} ({:.1f} %)'",
        "'.attack_length = {};'",
        "'.attack_level = {};'",
        "'.fade_length = {};'",
        "'.fade_level = {};'",
        "'{:.2f} Parameter: Magnitude'",
        "'\\tAddress: {}'",
        "'\\tLevel: {} ({:.1f} %)'",
        "'.level = {};'",
        "'{:.2f} Parameter: Period'",
        "'\\tAddress: {}'",
        "'\\tMagnitude: {} ({:.1f} %)'",
        "'\\tOffset: {} ({:.1f} %)'",
        "'\\tPhase: {} ({} deg)'",
        "'\\tPeriod: {} ms'",
        "'.period = {};'",
        "'.magnitude = {};'",
        "'.offset = {};'",
        "'.phase = {};'",
        "'{:.2f} Parameter: Interactive'",
        "'\\tAddress: {}'",
        "'\\tPositive coeff: {} %'",
        "'\\tNegative coeff: {} %'",
        "'\\tCenter offset: {} ({:.1f} %)'",
        "'\\tDead band: {} % ({})'",
        "'\\tPositive saturation: {} ({}, {:.1f} %)'",
        "'\\tNegative saturation: {} ({}, {:.1f} %)'",
        "'.right_sat = {};'",
        "'.left_sat = {};'",
        "'.right_coeff = {};'",
        "'.left_coeff = {};'",
        "'.deadband = {};'",
        "'.center = {};'",
        "\"Stop 0x00\"",
        "\"Play Once 0x01\"",
        "\"Play N Times 0x41\"",
        "\"Unknown XX\"",
        "'{:.2f} Control Command'",
        "'\\tChannel: {}'",
        "'\\tStart/stop: {}'",
        "'\\tIterations: {}'",
        "'/* Time: {:.02f} */'",
        "'SDL_HapticStopEffect(haptic, effect_id{});'",
        "'SDL_HapticRunEffect(haptic, effect_id{}, 1);'",
        "'SDL_HapticRunEffect(haptic, effect_id{}, {});'",
        "'Stop all'",
        "''",
        "' Enable FF'",
        "''",
        "' Pause FF'",
        "''",
        "'{:.2f} Set effect state'",
        "'\\tState: {}'",
        "'/* Time: {:.02f} */'",
        "'SDL_HapticStopAll(haptic);'",
        "'SDL_HapticUnpause(haptic);'",
        "'SDL_HapticPause(haptic);'",
        "'{:.2f} Set gain'",
        "'\\tGain: {} ({:.1f} %)'",
        "'SDL_SetGain(haptic, {});'"
    ],
    "variables": [
        "parser",
        "args",
        "filename",
        "sdl_out",
        "packets",
        "rel_time",
        "hex_string",
        "hex_string",
        "rel_time",
        "dec_array",
        "sdl_params",
        "timestamp",
        "data",
        "channel",
        "effecttype",
        "trigger",
        "axesbyte",
        "duration",
        "direction",
        "timebetween",
        "address1",
        "address2",
        "delay",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "waveform",
        "axes",
        "axes",
        "axes",
        "axes",
        "axes",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "effect_sdl_name",
        "effect_class",
        "address",
        "attack_duration",
        "attack_level",
        "fade_duration",
        "fade_level",
        "sdl_params",
        "address",
        "address",
        "level",
        "sdl_params",
        "address",
        "address",
        "level",
        "offset",
        "phase",
        "period",
        "sdl_params",
        "address",
        "address",
        "pos_coeff",
        "neg_coeff",
        "offset",
        "deadband",
        "pos_sat",
        "neg_sat",
        "sdl_params",
        "address",
        "channel",
        "val",
        "iterations",
        "mode",
        "mode",
        "mode",
        "mode",
        "state",
        "gain"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Read all the packets from the dump",
        "Not a timestamp, ignore",
        "Parse the hex string to array of decimals",
        "Something fishy, ignore",
        "Store",
        "Parse the packets, according to",
        "https://www.kernel.org/doc/html/latest/input/devices/iforce-protocol.html",
        "Store SDL parameter structs",
        "Force effect",
        "print('Erroneous packet length')",
        "print(packet)",
        "print(timestamp, data)",
        "TODO: Or other order?",
        "TODO: Or other order?",
        "Common",
        "TODO: Should maybe take axis into account, but so far the direction has",
        "always been more accurate, even if axis = X, direction may be 225 degrees or so",
        "Type dependent",
        "Attack and delay",
        "Attack & fade",
        "Magnitude",
        "Period",
        "Interactive params",
        "Control",
        "Set state",
        "Set gain"
    ],
    "docstrings": [
        "\"\"\"\nIForce force feedback effect parser\n\nThis script parses an USB data dump of communication between\na PC and a force feedback joystick speaking IForce (host to\ndevice communication only) and extracts the force effect \ndefinitions and start/stop commands.\n\nDump can be captured with e.g. USBPcap and Wireshark.\n\nText output formats every command with relative timestamp first and\nthen the command parameters.\n\nSDL output prints out SDL struct initialization and commands with time\nstamps in comments.\n\n\nCopyright (C) 2020 Lauri Peltonen\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n\"\"\""
    ],
    "functions": [
        "signed",
        "signed_short"
    ],
    "classes": []
}