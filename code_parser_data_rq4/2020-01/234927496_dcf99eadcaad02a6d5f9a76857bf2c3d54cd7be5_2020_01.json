{
    "identifiers": [
        "navigator",
        "gamepads",
        "gp",
        "i",
        "i",
        "gamepads",
        "i",
        "gp",
        "gamepads",
        "i",
        "gp",
        "gp",
        "requestAnimationFrame",
        "onFrame",
        "gp",
        "j",
        "j",
        "gp",
        "j",
        "buttons",
        "j",
        "j",
        "j",
        "l_stick",
        "j",
        "r_stick",
        "buttEle",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttdiv",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "buttons",
        "j",
        "j",
        "gp",
        "j",
        "gp",
        "j",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "val",
        "val",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "buttEle",
        "j",
        "j",
        "gp",
        "j",
        "axes",
        "j",
        "j",
        "axes_c",
        "b",
        "axisEle",
        "axisEle",
        "b",
        "buttdiv",
        "axisEle",
        "buttEle",
        "buttEle",
        "b",
        "l_stick",
        "buttEle",
        "b",
        "l_stick",
        "axisEle",
        "buttEle",
        "buttons",
        "b",
        "l_stick",
        "axes_c",
        "b",
        "axes",
        "j",
        "j",
        "b",
        "l_stick",
        "b",
        "j",
        "axisEleL",
        "gp",
        "j",
        "axisEleL",
        "gp",
        "j",
        "requestAnimationFrame",
        "onFrame",
        "requestAnimationFrame",
        "onFrame",
        "onLoad"
    ],
    "literals": [
        "\"undefined\"",
        "'buttons'",
        "\"undefined\"",
        "'span'",
        "'button'",
        "'button_'",
        "\"id\"",
        "'button_'",
        "'<svg id=\"button_9_border\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"0,0 30,9 1,18 0,0\"></polygon></svg>'",
        "'<svg id=\"button_12\" height=\"25\" width=\"25\" transform=\"rotate(0)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_13\" height=\"25\" width=\"25\" transform=\"rotate(180)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_14\" height=\"25\" width=\"25\" transform=\"rotate(270)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_15\" height=\"25\" width=\"25\" transform=\"rotate(90)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'button_'",
        "'<svg id=\"button_9_border\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(250,250,250,0.5)\" points=\"0,0 30,9 1,18 1,0\"></polygon></svg>'",
        "'linear-gradient(to top, rgba(255,255,255,0.5) '",
        "'%, rgba(170,70,70,0.5) '",
        "'%)'",
        "'<svg id=\"button_12\" height=\"25\" width=\"25\" transform=\"rotate(0)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(250,250,250,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_13\" height=\"25\" width=\"25\" transform=\"rotate(180)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(250,250,250,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_14\" height=\"25\" width=\"25\" transform=\"rotate(270)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(250,250,250,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_15\" height=\"25\" width=\"25\" transform=\"rotate(90)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(250,250,250,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_9_border\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"0,0 30,9 1,18 1,0\"></polygon></svg>'",
        "'rgba(70,70,70,0.5)'",
        "'<svg id=\"button_12\" height=\"25\" width=\"25\" transform=\"rotate(0)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_13\" height=\"25\" width=\"25\" transform=\"rotate(180)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_14\" height=\"25\" width=\"25\" transform=\"rotate(270)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "'<svg id=\"button_15\" height=\"25\" width=\"25\" transform=\"rotate(90)\"><polygon fill-rule=\"evenodd\" stroke=\"rgba(50,50,50,0.5)\" fill=\"rgba(70,70,70,0.5)\" points=\"1,3 3,1 22,1 24,3 24,15 14,24 12,24 1,15\"></polygon></svg>'",
        "\"undefined\"",
        "'div'",
        "'axisbox'",
        "'axisbox_'",
        "'span'",
        "'button'",
        "'button_'",
        "\"id\"",
        "'button_'",
        "'button_'",
        "'px'",
        "'px'",
        "'load'"
    ],
    "variables": [
        "buttons",
        "axes",
        "axes_c",
        "l_stick",
        "r_stick",
        "gamepads",
        "gp",
        "buttdiv",
        "buttEle",
        "buttEle",
        "val",
        "b",
        "axisEle",
        "buttEle",
        "b",
        "axisEleL"
    ],
    "comments": [
        "Copyright 2017 Brian \"Beej Jorgensen\" Hall <beej@beej.us>\n Copyright 2020 4aiman @ github.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
        "remembers if button was added",
        "remembers if axis was added (separate X and Y values)",
        "remembers if axis box was added (combines X and Y of one stick)",
        "L3 button id (change this to ID of L3 button and it will appear as the left stick)",
        "R3 button id (change this to ID of R3 button and it will appear as the right stick)",
        "gets repeatedly executed",
        "this gets *all* gamepads that your browser was able to detect",
        "note: gamepad may stay undetected until you press a button on it",
        "we start with the 1st gamepad",
        "but browsers can detect some NULL devices, so we check if there's really something",
        "cycling and checking every other gamepad seems good enough",
        "we get a gemapad",
        "and if there's nothing",
        "we check the next one",
        "but if there's a gamepad, we stop and work with what we just got",
        "in case all gamepads are NULL, we just start over",
        "seems unnecessary, but hey, we need to be sure a gamepad exists",
        "at this point gamepad is properly detected",
        "so, we get our container element (see index.html) and add 'buttons' to it",
        "we cycle through all detected buttons and add those to a 'buttons' array",
        "if jth button isn't added yet, we will do just that",
        "just be sure to skip weird non-existing buttons on your gamepad (PS3 Dualshock here)",
        "we also need to skip sticks to add those later (if your gamepad doesn't have 'pressable' sticks - comment this line)",
        "create a new element (a button)",
        "set it's class to 'button', so css can kick in",
        "set additional class to allow customization via css",
        "set new button's ID so we can get it later and change it's style",
        "add newly created button to the 'container'",
        "now to add SVG-generated graphics to some non-round-shaped buttons",
        "start",
        "up",
        "down",
        "left",
        "right",
        "remember that jth button has been added",
        "this part kick in when jth button has been added already",
        "we get correnponding element in our HTML document",
        "val keeps the value browser got from jth button (can be 0, 1 or smth in-between for analogue buttons)",
        "if current button is pressed we can alter it's style",
        "the 'start' button (as well as any other non-round-shaped button) has to have it's innerHTML rewritten",
        "sure, this could've been coded better, but what the heck, it works",
        "buttons with id lower that 12 are usually the round-shaped ones; on-stick buttons go here as well",
        "gradient really helps to visualize partial presses",
        "up",
        "down",
        "left",
        "right",
        "if current button is *not* pressed we should revert it's style",
        "once again, the 'start' button needs special attention",
        "round-shaped buttons can be processed similarly",
        "and of cource directional buttons: up",
        "down",
        "left",
        "right",
        "at this point we're done with the buttons",
        "all that is left is to process axes",
        "it's all the same for those except the need to 'combine' X and Y axes",
        "and here's why this 'b' is here: it will be incremented by 1 every other *even* j, thus enabling us to check for *pairs*",
        "so, if current pair hasn't been registered yet - do it now",
        "this is a rounded box around the bth stick",
        "we can add a basic class for styling purposes",
        "and a separete unique class to fine-tune that styling (wish polymer did that)",
        "finally add axes box to 'container'",
        "butons with l_stick and r_stick ids are being added here",
        "same treatments as the other buttons for class",
        "unique class",
        "and id (needed not only to colorize, but to move around these ones)",
        "and now to add these 'movable' buttons",
        "also, remeber those buttons are there",
        "as well as those axes pairs",
        "aaannd separate axis",
        "now this is for moving 'sticks' around",
        "just like before we determine what axes pair is this and",
        "get the correct id of a button to move",
        "if axis id is odd, then we are dealing with Y axis",
        "if it's even - with X axis",
        "at the end of a cycle we call onFrame once again",
        "this function gets called in an event listener and potentially may perform something else, but meh",
        "it just calls onFrame for the first time",
        "and the last (but not least): we need to actually tell our page to execute onLoad whrn the page is ready"
    ],
    "docstrings": [],
    "functions": [
        "onFrame",
        "onLoad"
    ],
    "classes": []
}