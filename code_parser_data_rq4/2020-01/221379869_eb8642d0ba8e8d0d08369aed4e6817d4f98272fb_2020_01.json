{
    "identifiers": [
        "fixtures",
        "modelflattening",
        "com",
        "azure",
        "core",
        "annotation",
        "BodyParam",
        "com",
        "azure",
        "core",
        "annotation",
        "ExpectedResponses",
        "com",
        "azure",
        "core",
        "annotation",
        "Get",
        "com",
        "azure",
        "core",
        "annotation",
        "Host",
        "com",
        "azure",
        "core",
        "annotation",
        "HostParam",
        "com",
        "azure",
        "core",
        "annotation",
        "PathParam",
        "com",
        "azure",
        "core",
        "annotation",
        "Post",
        "com",
        "azure",
        "core",
        "annotation",
        "Put",
        "com",
        "azure",
        "core",
        "annotation",
        "ReturnType",
        "com",
        "azure",
        "core",
        "annotation",
        "ServiceInterface",
        "com",
        "azure",
        "core",
        "annotation",
        "ServiceMethod",
        "com",
        "azure",
        "core",
        "annotation",
        "UnexpectedResponseExceptionType",
        "com",
        "azure",
        "core",
        "http",
        "HttpPipeline",
        "com",
        "azure",
        "core",
        "http",
        "HttpPipelineBuilder",
        "com",
        "azure",
        "core",
        "http",
        "policy",
        "CookiePolicy",
        "com",
        "azure",
        "core",
        "http",
        "policy",
        "RetryPolicy",
        "com",
        "azure",
        "core",
        "http",
        "policy",
        "UserAgentPolicy",
        "com",
        "azure",
        "core",
        "http",
        "rest",
        "Response",
        "com",
        "azure",
        "core",
        "http",
        "rest",
        "RestProxy",
        "com",
        "azure",
        "core",
        "http",
        "rest",
        "SimpleResponse",
        "fixtures",
        "modelflattening",
        "models",
        "ErrorException",
        "fixtures",
        "modelflattening",
        "models",
        "FlattenedProduct",
        "fixtures",
        "modelflattening",
        "models",
        "ProductWrapper",
        "fixtures",
        "modelflattening",
        "models",
        "Resource",
        "fixtures",
        "modelflattening",
        "models",
        "ResourceCollection",
        "fixtures",
        "modelflattening",
        "models",
        "SimpleProduct",
        "fixtures",
        "modelflattening",
        "models",
        "WrappedProduct",
        "java",
        "util",
        "java",
        "util",
        "reactor",
        "core",
        "publisher",
        "Mono",
        "service",
        "host",
        "host",
        "host",
        "host",
        "host",
        "httpPipeline",
        "httpPipeline",
        "policies",
        "build",
        "httpPipeline",
        "httpPipeline",
        "httpPipeline",
        "service",
        "RestProxy",
        "create",
        "httpPipeline",
        "Host",
        "ServiceInterface",
        "name",
        "AutoRestResourceFlatteningTestServiceService",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "resourceArray",
        "Get",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "resourceArray",
        "Get",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "resourceDictionary",
        "Get",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "resourceComplexObject",
        "Get",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "simpleBodyProduct",
        "Post",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "BodyParam",
        "simpleBodyProduct",
        "Put",
        "ExpectedResponses",
        "UnexpectedResponseExceptionType",
        "HostParam",
        "host",
        "PathParam",
        "name",
        "BodyParam",
        "simpleBodyProduct",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "getHost",
        "resourceArray",
        "resourceArray",
        "forEach",
        "e",
        "e",
        "validate",
        "service",
        "putArray",
        "getHost",
        "resourceArray",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "putArrayWithResponseAsync",
        "resourceArray",
        "flatMap",
        "res",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "putArrayAsync",
        "resourceArray",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getHost",
        "service",
        "getArray",
        "getHost",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getArrayWithResponseAsync",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getArrayAsync",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "getHost",
        "resourceArray",
        "resourceArray",
        "forEach",
        "e",
        "e",
        "validate",
        "service",
        "putWrappedArray",
        "getHost",
        "resourceArray",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "putWrappedArrayWithResponseAsync",
        "resourceArray",
        "flatMap",
        "res",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceArray",
        "putWrappedArrayAsync",
        "resourceArray",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getHost",
        "service",
        "getWrappedArray",
        "getHost",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getWrappedArrayWithResponseAsync",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getWrappedArrayAsync",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceDictionary",
        "getHost",
        "resourceDictionary",
        "resourceDictionary",
        "values",
        "forEach",
        "e",
        "e",
        "validate",
        "service",
        "putDictionary",
        "getHost",
        "resourceDictionary",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceDictionary",
        "putDictionaryWithResponseAsync",
        "resourceDictionary",
        "flatMap",
        "res",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceDictionary",
        "putDictionaryAsync",
        "resourceDictionary",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getHost",
        "service",
        "getDictionary",
        "getHost",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getDictionaryWithResponseAsync",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getDictionaryAsync",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceComplexObject",
        "getHost",
        "resourceComplexObject",
        "resourceComplexObject",
        "validate",
        "service",
        "putResourceCollection",
        "getHost",
        "resourceComplexObject",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceComplexObject",
        "putResourceCollectionWithResponseAsync",
        "resourceComplexObject",
        "flatMap",
        "res",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "resourceComplexObject",
        "putResourceCollectionAsync",
        "resourceComplexObject",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getHost",
        "service",
        "getResourceCollection",
        "getHost",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getResourceCollectionWithResponseAsync",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "getResourceCollectionAsync",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "simpleBodyProduct",
        "getHost",
        "simpleBodyProduct",
        "simpleBodyProduct",
        "validate",
        "service",
        "putSimpleProduct",
        "getHost",
        "simpleBodyProduct",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "simpleBodyProduct",
        "putSimpleProductWithResponseAsync",
        "simpleBodyProduct",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "simpleBodyProduct",
        "putSimpleProductAsync",
        "simpleBodyProduct",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "getHost",
        "simpleBodyProduct",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "simpleBodyProduct",
        "simpleBodyProduct",
        "setMaxProductDisplayName",
        "maxProductDisplayName",
        "simpleBodyProduct",
        "setGenericValue",
        "genericValue",
        "simpleBodyProduct",
        "setOdataValue",
        "odataValue",
        "service",
        "postFlattenedSimpleProduct",
        "getHost",
        "simpleBodyProduct",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "postFlattenedSimpleProductWithResponseAsync",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "postFlattenedSimpleProductAsync",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "block",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "name",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "getHost",
        "name",
        "simpleBodyProduct",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "simpleBodyProduct",
        "simpleBodyProduct",
        "setMaxProductDisplayName",
        "maxProductDisplayName",
        "simpleBodyProduct",
        "setGenericValue",
        "genericValue",
        "simpleBodyProduct",
        "setOdataValue",
        "odataValue",
        "service",
        "putSimpleProductWithGrouping",
        "getHost",
        "name",
        "simpleBodyProduct",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "name",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "putSimpleProductWithGroupingWithResponseAsync",
        "name",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "flatMap",
        "res",
        "res",
        "getValue",
        "Mono",
        "just",
        "res",
        "getValue",
        "Mono",
        "empty",
        "ServiceMethod",
        "returns",
        "ReturnType",
        "SINGLE",
        "name",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "putSimpleProductWithGroupingAsync",
        "name",
        "maxProductDisplayName",
        "genericValue",
        "odataValue",
        "block"
    ],
    "literals": [
        "\"{$host}\"",
        "\"AutoRestResourceFlatteningTestService\"",
        "\"/model-flatten/array\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/array\"",
        "\"$host\"",
        "\"/model-flatten/wrappedarray\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/wrappedarray\"",
        "\"$host\"",
        "\"/model-flatten/dictionary\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/dictionary\"",
        "\"$host\"",
        "\"/model-flatten/resourcecollection\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/resourcecollection\"",
        "\"$host\"",
        "\"/model-flatten/customFlattening\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/customFlattening\"",
        "\"$host\"",
        "\"application/json\"",
        "\"/model-flatten/customFlattening/parametergrouping/{name}/\"",
        "\"$host\"",
        "\"name\"",
        "\"application/json\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter this.getHost() is required and cannot be null.\"",
        "\"Parameter name is required and cannot be null.\""
    ],
    "variables": [
        "service",
        "host",
        "httpPipeline"
    ],
    "comments": [],
    "docstrings": [
        "* Initializes a new instance of the AutoRestResourceFlatteningTestService type.",
        "* The proxy service used to perform REST calls.",
        "* server parameter.",
        "* Gets server parameter.\n     * \n     * @return the host value.",
        "* Sets server parameter.\n     * \n     * @param host the host value.\n     * @return the service client itself.",
        "* The HTTP pipeline to send requests through.",
        "* Gets The HTTP pipeline to send requests through.\n     * \n     * @return the httpPipeline value.",
        "* Initializes an instance of AutoRestResourceFlatteningTestService client.",
        "* Initializes an instance of AutoRestResourceFlatteningTestService client.\n     * \n     * @param httpPipeline The HTTP pipeline to send requests through.",
        "* The interface defining all the services for\n     * AutoRestResourceFlatteningTestService to be used by the proxy service to\n     * perform REST calls.",
        "* Put External Resource as an Array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as an Array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as an Array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as an Array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as an Array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as an Array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @param resourceArray \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a Dictionary.\n     * \n     * @param resourceDictionary Dictionary of &lt;FlattenedProduct&gt;.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a Dictionary.\n     * \n     * @param resourceDictionary Dictionary of &lt;FlattenedProduct&gt;.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a Dictionary.\n     * \n     * @param resourceDictionary Dictionary of &lt;FlattenedProduct&gt;.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a Dictionary.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a Dictionary.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a Dictionary.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a ResourceCollection.\n     * \n     * @param resourceComplexObject \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a ResourceCollection.\n     * \n     * @param resourceComplexObject \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put External Resource as a ResourceCollection.\n     * \n     * @param resourceComplexObject \n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a ResourceCollection.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a ResourceCollection.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Get External Resource as a ResourceCollection.\n     * \n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param simpleBodyProduct The product documentation.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param simpleBodyProduct The product documentation.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param simpleBodyProduct The product documentation.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Flattened Simple Product with client flattening true on the parameter.\n     * \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Flattened Simple Product with client flattening true on the parameter.\n     * \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Flattened Simple Product with client flattening true on the parameter.\n     * \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param name \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param name \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.",
        "* Put Simple Product with client flattening true on the model.\n     * \n     * @param name \n     * @param maxProductDisplayName Display name of product.\n     * @param genericValue Generic URL value.\n     * @param odataValue URL value.\n     * @throws IllegalArgumentException thrown if parameters fail the validation.\n     * @throws ErrorException thrown if the request is rejected by server.\n     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent."
    ],
    "functions": [
        "getHost",
        "AutoRestResourceFlatteningTestService",
        "setHost",
        "HttpPipeline",
        "getHttpPipeline",
        "AutoRestResourceFlatteningTestService",
        "AutoRestResourceFlatteningTestService",
        "putArray",
        "getArray",
        "putWrappedArray",
        "getWrappedArray",
        "putDictionary",
        "getDictionary",
        "putResourceCollection",
        "getResourceCollection",
        "putSimpleProduct",
        "postFlattenedSimpleProduct",
        "putSimpleProductWithGrouping",
        "putArrayWithResponseAsync",
        "putArrayAsync",
        "putArray",
        "getArrayWithResponseAsync",
        "getArrayAsync",
        "getArray",
        "putWrappedArrayWithResponseAsync",
        "putWrappedArrayAsync",
        "putWrappedArray",
        "getWrappedArrayWithResponseAsync",
        "getWrappedArrayAsync",
        "getWrappedArray",
        "putDictionaryWithResponseAsync",
        "putDictionaryAsync",
        "putDictionary",
        "getDictionaryWithResponseAsync",
        "getDictionaryAsync",
        "getDictionary",
        "putResourceCollectionWithResponseAsync",
        "putResourceCollectionAsync",
        "putResourceCollection",
        "getResourceCollectionWithResponseAsync",
        "getResourceCollectionAsync",
        "ResourceCollection",
        "getResourceCollection",
        "putSimpleProductWithResponseAsync",
        "putSimpleProductAsync",
        "SimpleProduct",
        "putSimpleProduct",
        "postFlattenedSimpleProductWithResponseAsync",
        "postFlattenedSimpleProductAsync",
        "SimpleProduct",
        "postFlattenedSimpleProduct",
        "putSimpleProductWithGroupingWithResponseAsync",
        "putSimpleProductWithGroupingAsync",
        "SimpleProduct",
        "putSimpleProductWithGrouping"
    ],
    "classes": [
        "AutoRestResourceFlatteningTestService"
    ]
}