{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "oipProto",
        "oipProto",
        "express",
        "app",
        "express",
        "app",
        "apiKey",
        "apiKey",
        "NodeClient",
        "clientOptions",
        "WalletClient",
        "walletClientOptions",
        "client",
        "result",
        "client",
        "result",
        "id",
        "options",
        "walletClient",
        "id",
        "options",
        "result",
        "err",
        "err",
        "err",
        "id",
        "account",
        "walletClient",
        "id",
        "account",
        "result",
        "passphrase",
        "timeout",
        "timeout",
        "walletClient",
        "passphrase",
        "timeout",
        "result",
        "err",
        "err",
        "id",
        "walletClient",
        "id",
        "result",
        "passphrase",
        "id",
        "walletClient",
        "id",
        "walletClient",
        "passphrase",
        "result",
        "id",
        "walletClient",
        "id",
        "wallet",
        "result",
        "id",
        "account",
        "walletClient",
        "id",
        "wallet",
        "account",
        "result",
        "fpub",
        "id",
        "account",
        "resolve",
        "reject",
        "getwalletaccount",
        "id",
        "account",
        "result",
        "resolve",
        "fpub",
        "id",
        "address",
        "passphrase",
        "walletClient",
        "id",
        "wallet",
        "address",
        "passphrase",
        "result",
        "wif",
        "id",
        "walletClient",
        "id",
        "wallet",
        "result",
        "wif",
        "pubKey",
        "message",
        "network",
        "RPCWallet",
        "pubKey",
        "apiKey",
        "walletRPC",
        "message",
        "result",
        "data",
        "wif",
        "buildOipDetails",
        "data",
        "recordProtoBuilder",
        "signedMessage64",
        "err",
        "err",
        "options",
        "wallet",
        "options",
        "result",
        "floData",
        "publicAddress",
        "wif",
        "previousTransactionOutput",
        "network",
        "RPCWallet",
        "publicAddress",
        "apiKey",
        "walletRPC",
        "floData",
        "previousTransactionOutput",
        "result",
        "pubKey",
        "publisherName",
        "fpub",
        "wif",
        "wif",
        "publisherName",
        "fpub",
        "publisher",
        "registerPublisherData",
        "pubKey",
        "registerPublisherData",
        "registerPublisherData",
        "createRegistration",
        "registerPublisherData",
        "data",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "mpx",
        "sendFloDataToChain",
        "mpx",
        "pubKey",
        "wif",
        "transactionOutput",
        "floDataArr",
        "txid",
        "outputsArr",
        "transactionOutput",
        "mpx",
        "pubKey",
        "mpx",
        "signatureData",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig",
        "mpx",
        "sig",
        "mpx",
        "mpx",
        "mpx",
        "mpx",
        "mpx",
        "mpx",
        "floData",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "referenceTransactionOutput",
        "referenceTransactionOutput",
        "floDataArr",
        "referenceTxid",
        "outputsArr",
        "referenceTransactionOutput",
        "referenceTxid",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "referenceTxid",
        "mpx",
        "i",
        "pubKey",
        "signMessage",
        "wif",
        "pubKey",
        "mpx",
        "i",
        "mpx",
        "i",
        "sig",
        "time",
        "sendFloDataToChain",
        "mpx",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "mpx",
        "i",
        "pubKey",
        "wif",
        "outputsArr",
        "time",
        "floDataArr",
        "transactionOutput",
        "outputsArr",
        "transactionOutput",
        "sig",
        "transactionOutput",
        "values",
        "floDataArr",
        "recordTxidArray",
        "pubKey",
        "floData",
        "walletdata",
        "pubKey",
        "walletdata",
        "floData",
        "walletdata",
        "templateType",
        "templateType",
        "templateName",
        "descriptor",
        "templateName",
        "descriptor",
        "templateName",
        "descriptor",
        "templateName",
        "descriptor",
        "templateName",
        "descriptor",
        "templateName",
        "descriptor",
        "templateName",
        "templateInfo",
        "recordData",
        "recordData",
        "text",
        "textData",
        "record",
        "textData",
        "textData",
        "record",
        "textData",
        "record",
        "textData",
        "record",
        "textData",
        "record",
        "record",
        "record",
        "i",
        "embeddedImageQty",
        "i",
        "image",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "image",
        "record",
        "i",
        "embeddedImages",
        "image",
        "embeddedImageAddresses",
        "record",
        "i",
        "embeddedImageCaptions",
        "record",
        "i",
        "record",
        "record",
        "i",
        "embeddedVideoQty",
        "i",
        "video",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "record",
        "i",
        "video",
        "video",
        "video",
        "video",
        "embeddedVideos",
        "video",
        "embeddedVideocaptions",
        "record",
        "i",
        "article",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "record",
        "articleData",
        "embeddedImageAddresses",
        "articleData",
        "embeddedImageCaptions",
        "articleData",
        "embeddedVideocaptions",
        "articleData",
        "textData",
        "embeddedVideos",
        "embeddedImages",
        "response",
        "recordID",
        "record",
        "axios",
        "recordID",
        "e",
        "e",
        "record",
        "record",
        "app",
        "req",
        "res",
        "getinfo",
        "result",
        "result",
        "result",
        "res",
        "chainSync",
        "chainIsSynced",
        "result",
        "app",
        "req",
        "res",
        "getPeerInfo",
        "result",
        "res",
        "result",
        "app",
        "req",
        "res",
        "req",
        "body",
        "body",
        "body",
        "SHA1",
        "emailaddress",
        "passphrase",
        "passphrase",
        "res",
        "getwif",
        "id",
        "pubKey",
        "passphrase",
        "result",
        "res",
        "result",
        "app",
        "req",
        "res",
        "req",
        "req",
        "options",
        "options",
        "req",
        "SHA1",
        "emailaddress",
        "passphrase",
        "passphrase",
        "res",
        "createWallet",
        "id",
        "options",
        "wallet",
        "wallet",
        "res",
        "wallet",
        "createAddress",
        "id",
        "account",
        "address",
        "getMasterHDKey",
        "id",
        "masterHDKey",
        "getwif",
        "id",
        "address",
        "wif",
        "selectwallet",
        "id",
        "address",
        "wif",
        "null1",
        "encryptwallet",
        "passphrase",
        "null2",
        "getwalletinfo",
        "id",
        "walletinfo",
        "res",
        "emailaddress",
        "id",
        "address",
        "walletinfo",
        "masterHDKey",
        "masterHDKey",
        "walletinfo",
        "app",
        "req",
        "res",
        "req",
        "req",
        "createAddress",
        "id",
        "account",
        "result",
        "res",
        "result",
        "result",
        "app",
        "req",
        "res",
        "req",
        "req",
        "SHA1",
        "emailaddress",
        "walletClient",
        "id",
        "wallet",
        "id",
        "result",
        "res",
        "id",
        "result",
        "result",
        "app",
        "req",
        "res",
        "req",
        "req",
        "SHA1",
        "emailaddress",
        "walletClient",
        "id",
        "wallet",
        "id",
        "result",
        "res",
        "id",
        "result",
        "app",
        "req",
        "res",
        "req",
        "id",
        "walletClient",
        "id",
        "wallet",
        "id",
        "result",
        "result",
        "wallet",
        "result",
        "result",
        "res",
        "result",
        "app",
        "req",
        "res",
        "req",
        "req",
        "authData",
        "authData",
        "authData",
        "SHA1",
        "emailaddress",
        "publisherData",
        "publisherData",
        "getwif",
        "id",
        "pubKey",
        "passphrase",
        "getFpub",
        "id",
        "account",
        "fpub",
        "prepRegistration",
        "pubKey",
        "publisherName",
        "fpub",
        "wif",
        "data",
        "getSignedP64FloData",
        "data",
        "wif",
        "floData",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "wallet",
        "walletpassphrase",
        "passphrase",
        "resX",
        "getwalletinfo",
        "walletinfo",
        "sendFloDataToChain",
        "floData",
        "pubKey",
        "wif",
        "result",
        "res",
        "result",
        "pubKey",
        "publisherName",
        "e",
        "e",
        "res",
        "app",
        "req",
        "res",
        "req",
        "req",
        "authData",
        "authData",
        "authData",
        "SHA1",
        "emailaddress",
        "formattedRecordData",
        "formatRecord",
        "recordData",
        "formattedTextData",
        "formattedRecordData",
        "formattedArticleData",
        "formattedRecordData",
        "formattedEmbeddedImages",
        "formattedRecordData",
        "formattedEmbeddedVideos",
        "formattedRecordData",
        "embeddedVideoQty",
        "formattedRecordData",
        "embeddedImageQty",
        "formattedEmbeddedImages",
        "recordData",
        "wif",
        "getwif",
        "id",
        "pubKey",
        "passphrase",
        "err",
        "err",
        "res",
        "fpub",
        "getFpub",
        "id",
        "account",
        "wallet",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "unlock",
        "walletpassphrase",
        "passphrase",
        "walletinfo",
        "getwalletinfo",
        "embeddedVideoQty",
        "i",
        "embeddedVideoQty",
        "i",
        "formattedEmbeddedVideos",
        "i",
        "formattedEmbeddedVideos",
        "i",
        "formattedEmbeddedVideos",
        "i",
        "basic",
        "video",
        "youtube",
        "i",
        "templates",
        "i",
        "templates",
        "i",
        "getTemplateInfo",
        "templateType",
        "templateInfo",
        "templateInfo",
        "payload",
        "i",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "data",
        "template",
        "data",
        "data",
        "wif",
        "pubKey",
        "recordDataX",
        "makeRecord",
        "data",
        "signed64",
        "getSignedP64FloData",
        "recordDataX",
        "wif",
        "wallet",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "walletinfo",
        "getwalletinfo",
        "walletdata",
        "walletData",
        "pubKey",
        "signed64",
        "signed64",
        "Modules",
        "signed64",
        "mpx",
        "mpx",
        "signatureData1",
        "prepareFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "signMessage",
        "wif",
        "pubKey",
        "signatureData1",
        "floData1",
        "getFloDataForFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "sendFloDataToChain",
        "floData1",
        "pubKey",
        "wif",
        "referenceTxO",
        "sendRestOfTXsOfMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "referenceTxO",
        "recordTxidArray",
        "recordTxidArray",
        "embeddedVideoTXIDs",
        "referenceTxO",
        "embeddedVideoTXIDs",
        "res",
        "referenceTxO",
        "delay",
        "ms",
        "res",
        "setTimeout",
        "res",
        "ms",
        "delay",
        "i",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "previousTransactionOutput",
        "referenceTxO",
        "embeddedVideoTXIDs",
        "referenceTxO",
        "embeddedVideoTXs",
        "referenceTxO",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "referenceTxO",
        "embeddedVideoTXIDs",
        "referenceTxO",
        "embeddedVideoTXs",
        "referenceTxO",
        "delay",
        "ms",
        "res",
        "setTimeout",
        "res",
        "ms",
        "delay",
        "embeddedImageQty",
        "i",
        "embeddedImageQty",
        "i",
        "formattedEmbeddedImages",
        "i",
        "formattedEmbeddedImages",
        "i",
        "basic",
        "image",
        "ii",
        "templates",
        "ii",
        "templates",
        "ii",
        "getTemplateInfo",
        "templateType",
        "templateInfo",
        "templateInfo",
        "payload",
        "ii",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "imageData",
        "imageTemplate",
        "imageData",
        "imageData",
        "wif",
        "pubKey",
        "recordDataX",
        "makeImageRecord",
        "imageData",
        "signed64",
        "getSignedP64FloData",
        "recordDataX",
        "wif",
        "wallet",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "walletinfo",
        "getwalletinfo",
        "walletdata",
        "walletData",
        "pubKey",
        "signed64",
        "signed64",
        "Modules",
        "signed64",
        "mpx",
        "mpx",
        "signatureData1",
        "prepareFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "signMessage",
        "wif",
        "pubKey",
        "signatureData1",
        "floData1",
        "getFloDataForFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "sendFloDataToChain",
        "floData1",
        "pubKey",
        "wif",
        "referenceTxO",
        "sendRestOfTXsOfMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "referenceTxO",
        "recordTxidArray",
        "recordTxidArray",
        "embeddedImageTXIDs",
        "referenceTxO",
        "embeddedImageTXIDs",
        "res",
        "referenceTxO",
        "recordTxidArray",
        "delay",
        "ms",
        "res",
        "setTimeout",
        "res",
        "ms",
        "delay",
        "i",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "previousTransactionOutput",
        "referenceTxO",
        "embeddedImageTXIDs",
        "referenceTxO",
        "embeddedImageTXs",
        "referenceTxO",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "referenceTxO",
        "embeddedImageTXIDs",
        "referenceTxO",
        "embeddedImageTXs",
        "referenceTxO",
        "delay",
        "formattedTextData",
        "formattedTextData",
        "basic",
        "text",
        "i",
        "templates",
        "i",
        "templates",
        "i",
        "getTemplateInfo",
        "templateType",
        "templateInfo",
        "templateInfo",
        "payload",
        "i",
        "template",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "data",
        "template",
        "template",
        "data",
        "wif",
        "pubKey",
        "makeTextRecord",
        "template",
        "signed64",
        "getSignedP64FloData",
        "recordDataImage",
        "wif",
        "wallet",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "walletinfo",
        "getwalletinfo",
        "walletdata",
        "walletData",
        "pubKey",
        "signed64",
        "signed64",
        "Modules",
        "signed64",
        "mpx",
        "mpx",
        "signatureData1",
        "prepareFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "signMessage",
        "wif",
        "pubKey",
        "signatureData1",
        "floData1",
        "getFloDataForFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "sendFloDataToChain",
        "floData1",
        "pubKey",
        "wif",
        "referenceTxO",
        "sendRestOfTXsOfMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "referenceTxO",
        "recordTxidArray",
        "embeddedTextTXID",
        "referenceTxO",
        "delay",
        "ms",
        "res",
        "setTimeout",
        "res",
        "ms",
        "delay",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "referenceTxO",
        "embeddedTextTXID",
        "referenceTxO",
        "embeddedTextTX",
        "referenceTxO",
        "delay",
        "formattedArticleData",
        "basic",
        "formattedArticleData",
        "article",
        "embeddedVideoTXIDs",
        "article",
        "embeddedTextTXID",
        "article",
        "embeddedImageTXIDs",
        "payload",
        "basic",
        "article",
        "templates",
        "data",
        "z",
        "templates",
        "z",
        "templates",
        "z",
        "getTemplateInfo",
        "templateType",
        "templateInfo",
        "templateInfo",
        "payload",
        "z",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "data",
        "template",
        "data",
        "data",
        "wif",
        "pubKey",
        "recordDataMaster",
        "makeMasterRecord",
        "data",
        "signed64",
        "getSignedP64FloData",
        "recordDataMaster",
        "wif",
        "wallet",
        "selectwallet",
        "id",
        "pubKey",
        "wif",
        "walletinfo",
        "getwalletinfo",
        "walletdata",
        "walletData",
        "pubKey",
        "signed64",
        "signed64",
        "Modules",
        "signed64",
        "mpx",
        "mpx",
        "signatureData1",
        "prepareFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "signMessage",
        "wif",
        "pubKey",
        "signatureData1",
        "floData1",
        "getFloDataForFirstTXofMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "sig1",
        "sendFloDataToChain",
        "floData1",
        "pubKey",
        "wif",
        "referenceTxO",
        "sendRestOfTXsOfMP",
        "id",
        "pubKey",
        "wif",
        "mpx",
        "referenceTxO",
        "recordTxidArray",
        "embeddedArticleTXID",
        "referenceTxO",
        "embeddedArticleTXID",
        "res",
        "referenceTxO",
        "delay",
        "ms",
        "res",
        "setTimeout",
        "res",
        "ms",
        "delay",
        "sendFloDataToChain",
        "signed64",
        "pubKey",
        "wif",
        "referenceTxO",
        "embeddedArticleTXID",
        "referenceTxO",
        "referenceTxO",
        "res",
        "referenceTxO",
        "app",
        "req",
        "res",
        "req",
        "getRecord",
        "recordID",
        "record",
        "res",
        "record",
        "e",
        "e",
        "res",
        "recordID",
        "app",
        "req",
        "res",
        "req",
        "getRecord",
        "recordID",
        "mainRecord",
        "mainRecord",
        "mainRecord",
        "mainRecord",
        "bylineWriterIsRef",
        "Buffer",
        "bylineWriter",
        "articleTextIsRef",
        "Buffer",
        "articleText",
        "embeddedImagesIsRef",
        "embeddedImages",
        "Buffer",
        "embeddedImages",
        "embeddedVideosIsRef",
        "embeddedVideos",
        "Buffer",
        "embeddedVideos",
        "bylineWriterIsRef",
        "bylineWriter",
        "articleTextIsRef",
        "articleText",
        "embeddedImagesIsRef",
        "embeddedImages",
        "embeddedVideosIsRef",
        "embeddedVideos",
        "getRecord",
        "txids",
        "bylineWriterRecord",
        "getRecord",
        "txids",
        "articleTextRecord",
        "i",
        "txids",
        "i",
        "txids",
        "i",
        "getRecord",
        "video",
        "videoRecord",
        "videoRecords",
        "videoRecordResults",
        "i",
        "txids",
        "i",
        "txids",
        "i",
        "getRecord",
        "image",
        "imageRecord",
        "imageRecords",
        "imageRecordResults",
        "mainRecord",
        "bylineWriterResults",
        "videoRecords",
        "imageRecords",
        "articleTextResults",
        "res",
        "mainRecord",
        "e",
        "e",
        "res",
        "recordID"
    ],
    "literals": [
        "'express'",
        "'crypto-js/sha256'",
        "'crypto-js/sha1'",
        "'./node_modules/@oipwg/fclient'",
        "'dotenv'",
        "'js-oip/lib/modules/wallets'",
        "'axios'",
        "'js-oip'",
        "'express/lib/request'",
        "'express'",
        "'http'",
        "'https'",
        "'events'",
        "'oip-protobufjs'",
        "'OIP API listening on port 3000'",
        "'mainnet'",
        "'mainnet'",
        "'getpeerinfo'",
        "'error in createWallet:'",
        "'selectwallet'",
        "'encryptwallet'",
        "'mainnet'",
        "'127.0.0.1'",
        "'x'",
        "'mainnet'",
        "'p64:'",
        "'Failed at publishRecord: '",
        "'mainnet'",
        "'127.0.0.1'",
        "'x'",
        "'Ck4KB3AucHJvdG8SEm9pcFByb3RvLnRlbXBsYXRlcyInCgFQEgwKBG5hbWUYASABKAkSFAoMZmxvQmlwNDRYUHViGAIgASgJYgZwcm90bzM='",
        "'tmpl_433C2783'",
        "''",
        "'mpx is not array'",
        "${mpx[0].prefix}(${mpx[0].part},${mpx[0].max},${mpx[0].address},,${mpx[0].signature}):${mpx[0].data}",
        "${mpx[i].prefix}(${mpx[i].part},${mpx[i].max},${mpx[i].address},${mpx[i].reference},${mpx[i].signature}):${mpx[i].data}",
        "'basic'",
        "'tmpl_20AD45E7'",
        "'CpwSCgdwLnByb3RvEhJvaXBQcm90by50ZW1wbGF0ZXMi9BEKAVASDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIMCgRkYXRlGAMgASgEEhoKCGxhbmd1YWdlGAQgASgOMghMYW5ndWFnZRIUCgZhdmF0YXIYBSABKAsyBFR4aWQSDwoHdGFnTGlzdBgGIAMoCRIQCghub3RlTGlzdBgHIAMoCRIVCgd1cmxMaXN0GAggAygLMgRUeGlkGhMKBFR4aWQSCwoDcmF3GAEgASgMIrwQCghMYW5ndWFnZRIWChJMYW5ndWFnZV9VTkRFRklORUQQABIPCgtMYW5ndWFnZV9BRhABEg8KC0xhbmd1YWdlX0FNEAISDwoLTGFuZ3VhZ2VfQVIQAxIQCgxMYW5ndWFnZV9BUk4QBBIPCgtMYW5ndWFnZV9BUxAFEg8KC0xhbmd1YWdlX0FaEAYSDwoLTGFuZ3VhZ2VfQkEQBxIPCgtMYW5ndWFnZV9CRRAIEg8KC0xhbmd1YWdlX0JHEAkSDwoLTGFuZ3VhZ2VfQk4QChIPCgtMYW5ndWFnZV9CTxALEg8KC0xhbmd1YWdlX0JSEAwSDwoLTGFuZ3VhZ2VfQlMQDRIPCgtMYW5ndWFnZV9DQRAOEg8KC0xhbmd1YWdlX0NPEA8SDwoLTGFuZ3VhZ2VfQ1MQEBIPCgtMYW5ndWFnZV9DWRAREg8KC0xhbmd1YWdlX0RBEBISDwoLTGFuZ3VhZ2VfREUQExIQCgxMYW5ndWFnZV9EU0IQFBIPCgtMYW5ndWFnZV9EVhAVEg8KC0xhbmd1YWdlX0VMEBYSDwoLTGFuZ3VhZ2VfRU4QFxIPCgtMYW5ndWFnZV9FUxAYEg8KC0xhbmd1YWdlX0VUEBkSDwoLTGFuZ3VhZ2VfRVUQGhIPCgtMYW5ndWFnZV9GQRAbEg8KC0xhbmd1YWdlX0ZJEBwSEAoMTGFuZ3VhZ2VfRklMEB0SDwoLTGFuZ3VhZ2VfRk8QHhIPCgtMYW5ndWFnZV9GUhAfEg8KC0xhbmd1YWdlX0ZZECASDwoLTGFuZ3VhZ2VfR0EQIRIPCgtMYW5ndWFnZV9HRBAiEg8KC0xhbmd1YWdlX0dMECMSEAoMTGFuZ3VhZ2VfR1NXECQSDwoLTGFuZ3VhZ2VfR1UQJRIPCgtMYW5ndWFnZV9IQRAmEg8KC0xhbmd1YWdlX0hFECcSDwoLTGFuZ3VhZ2VfSEkQKBIPCgtMYW5ndWFnZV9IUhApEhAKDExhbmd1YWdlX0hTQhAqEg8KC0xhbmd1YWdlX0hVECsSDwoLTGFuZ3VhZ2VfSFkQLBIPCgtMYW5ndWFnZV9JRBAtEg8KC0xhbmd1YWdlX0lHEC4SDwoLTGFuZ3VhZ2VfSUkQLxIPCgtMYW5ndWFnZV9JUxAwEg8KC0xhbmd1YWdlX0lUEDESDwoLTGFuZ3VhZ2VfSVUQMhIPCgtMYW5ndWFnZV9KQRAzEg8KC0xhbmd1YWdlX0tBEDQSDwoLTGFuZ3VhZ2VfS0sQNRIPCgtMYW5ndWFnZV9LTBA2Eg8KC0xhbmd1YWdlX0tNEDcSDwoLTGFuZ3VhZ2VfS04QOBIQCgxMYW5ndWFnZV9LT0sQORIPCgtMYW5ndWFnZV9LTxA6Eg8KC0xhbmd1YWdlX0tZEDsSDwoLTGFuZ3VhZ2VfTEIQPBIPCgtMYW5ndWFnZV9MTxA9Eg8KC0xhbmd1YWdlX0xUED4SDwoLTGFuZ3VhZ2VfTFYQPxIPCgtMYW5ndWFnZV9NSRBAEg8KC0xhbmd1YWdlX01LEEESDwoLTGFuZ3VhZ2VfTUwQQhIPCgtMYW5ndWFnZV9NThBDEhAKDExhbmd1YWdlX01PSBBEEg8KC0xhbmd1YWdlX01SEEUSDwoLTGFuZ3VhZ2VfTVMQRhIPCgtMYW5ndWFnZV9NVBBHEg8KC0xhbmd1YWdlX05CEEgSDwoLTGFuZ3VhZ2VfTkUQSRIPCgtMYW5ndWFnZV9OTBBKEg8KC0xhbmd1YWdlX05OEEsSEAoMTGFuZ3VhZ2VfTlNPEEwSDwoLTGFuZ3VhZ2VfT0MQTRIPCgtMYW5ndWFnZV9PUhBOEg8KC0xhbmd1YWdlX1BBEE8SDwoLTGFuZ3VhZ2VfUEwQUBIQCgxMYW5ndWFnZV9QUlMQURIPCgtMYW5ndWFnZV9QVBBSEhAKDExhbmd1YWdlX1FVVBBTEhAKDExhbmd1YWdlX1FVWhBUEg8KC0xhbmd1YWdlX1JNEFUSDwoLTGFuZ3VhZ2VfUk8QVhIPCgtMYW5ndWFnZV9SVRBXEg8KC0xhbmd1YWdlX1JXEFgSEAoMTGFuZ3VhZ2VfU0FIEFkSDwoLTGFuZ3VhZ2VfU0EQWhIPCgtMYW5ndWFnZV9TRRBbEg8KC0xhbmd1YWdlX1NJEFwSDwoLTGFuZ3VhZ2VfU0sQXRIPCgtMYW5ndWFnZV9TTBBeEhAKDExhbmd1YWdlX1NNQRBfEhAKDExhbmd1YWdlX1NNShBgEhAKDExhbmd1YWdlX1NNThBhEg8KC0xhbmd1YWdlX1NREGISDwoLTGFuZ3VhZ2VfU1IQYxIPCgtMYW5ndWFnZV9TVhBkEg8KC0xhbmd1YWdlX1NXEGUSEAoMTGFuZ3VhZ2VfU1lSEGYSDwoLTGFuZ3VhZ2VfVEEQZxIPCgtMYW5ndWFnZV9URRBoEg8KC0xhbmd1YWdlX1RHEGkSDwoLTGFuZ3VhZ2VfVEgQahIPCgtMYW5ndWFnZV9USxBrEg8KC0xhbmd1YWdlX1ROEGwSDwoLTGFuZ3VhZ2VfVFIQbRIPCgtMYW5ndWFnZV9UVBBuEhAKDExhbmd1YWdlX1RaTRBvEg8KC0xhbmd1YWdlX1VHEHASDwoLTGFuZ3VhZ2VfVUsQcRIPCgtMYW5ndWFnZV9VUhByEg8KC0xhbmd1YWdlX1VaEHMSDwoLTGFuZ3VhZ2VfVkkQdBIPCgtMYW5ndWFnZV9XTxB1Eg8KC0xhbmd1YWdlX1hIEHYSDwoLTGFuZ3VhZ2VfWU8QdxIPCgtMYW5ndWFnZV9aSBB4Eg8KC0xhbmd1YWdlX1pVEHliBnByb3RvMw=='",
        "'video'",
        "'tmpl_9705FC0B'",
        "'CuABCgdwLnByb3RvEhJvaXBQcm90by50ZW1wbGF0ZXMiuAEKAVASEwoLcHVibGlzaERhdGUYASABKAQSGAoQYWRkcmVzc0RpcmVjdG9yeRgDIAEoCRIQCghmaWxlbmFtZRgEIAEoCRITCgtkaXNwbGF5TmFtZRgFIAEoCRIZChF0aHVtYm5haWxGaWxlbmFtZRgGIAEoCSJCCgdOZXR3b3JrEg0KCVVOREVGSU5FRBAAEhAKDE5ldHdvcmtfSVBGUxABEhYKEk5ldHdvcmtfQklUVE9SUkVOVBACYgZwcm90bzM='",
        "'text'",
        "'tmpl_769D8FBC'",
        "'CoYDCgdwLnByb3RvEhJvaXBQcm90by50ZW1wbGF0ZXMi3gIKAVASGAoHbmV0d29yaxgBIAEoDjIHTmV0d29yaxITCgt0ZXh0QWRkcmVzcxgCIAEoCRIiCgx0ZXh0RmlsZXR5cGUYAyABKA4yDFRleHRGaWxldHlwZRIRCglpc1ByZXZpZXcYBCABKAgibgoHTmV0d29yaxIVChFOZXR3b3JrX1VOREVGSU5FRBAAEhAKDE5ldHdvcmtfSVBGUxABEhYKEk5ldHdvcmtfQklUVE9SUkVOVBACEg8KC05ldHdvcmtfU0lBEAMSEQoNTmV0d29ya19TVE9SShAEIoIBCgxUZXh0RmlsZXR5cGUSGgoWVGV4dEZpbGV0eXBlX1VOREVGSU5FRBAAEhMKD1RleHRGaWxldHlwZV9NRBABEhQKEFRleHRGaWxldHlwZV9SVEYQAhIUChBUZXh0RmlsZXR5cGVfVFhUEAMSFQoRVGV4dEZpbGV0eXBlX0hUTUwQBGIGcHJvdG8z'",
        "'image'",
        "'tmpl_1AC73C98'",
        "'CrwCCgdwLnByb3RvEhJvaXBQcm90by50ZW1wbGF0ZXMilAIKAVASGAoHbmV0d29yaxgBIAEoDjIHTmV0d29yaxIQCghmaWxlbmFtZRgCIAEoCRIUCgxpbWFnZUFkZHJlc3MYAyABKAkSGAoQdGh1bWJuYWlsQWRkcmVzcxgEIAEoCRIZCgt0YWtlbkJ5TGlzdBgFIAMoCzIEVHhpZBIbCg10YWtlbldpdGhMaXN0GAYgAygLMgRUeGlkEhoKDHByb3RvY29sTGlzdBgHIAMoCzIEVHhpZBoTCgRUeGlkEgsKA3JhdxgBIAEoDCJKCgdOZXR3b3JrEhUKEU5ldHdvcmtfVU5ERUZJTkVEEAASEAoMTmV0d29ya19JUEZTEAESFgoSTmV0d29ya19CSVRUT1JSRU5UEAJiBnByb3RvMw=='",
        "'article'",
        "'tmpl_D019F2E1'",
        "'CpgCCgdwLnByb3RvEhJvaXBQcm90by50ZW1wbGF0ZXMi8AEKAVASGgoMYnlsaW5lV3JpdGVyGAEgASgLMgRUeGlkEhoKEmJ5bGluZVdyaXRlcnNUaXRsZRgCIAEoCRIdChVieWxpbmVXcml0ZXJzTG9jYXRpb24YAyABKAkSGQoLYXJ0aWNsZVRleHQYBCABKAsyBFR4aWQSFwoJaW1hZ2VMaXN0GAUgAygLMgRUeGlkEhgKEGltYWdlQ2FwdGlvbkxpc3QYBiADKAkSFwoJdmlkZW9MaXN0GAcgAygLMgRUeGlkEhgKEHZpZGVvQ2FwdGlvbkxpc3QYCCADKAkaEwoEVHhpZBILCgNyYXcYASABKAxiBnByb3RvMw=='",
        "'youtube'",
        "'tmpl_834772F4'",
        "'CkoKB3AucHJvdG8SEm9pcFByb3RvLnRlbXBsYXRlcyIjCgFQEgsKA3VybBgBIAEoCRIRCgl5b3VUdWJlSWQYAiABKAliBnByb3RvMw=='",
        "'basic'",
        "'name'",
        "''",
        "'description'",
        "''",
        "'language'",
        "''",
        "'date'",
        "''",
        "'avatar'",
        "''",
        "'tagList'",
        "''",
        "'article'",
        "'bylineWriter'",
        "''",
        "'bylineWritersTitle'",
        "''",
        "'bylineWritersLocation'",
        "''",
        "'articleText'",
        "''",
        "'imageList'",
        "''",
        "'imageCaptionList'",
        "''",
        "'videoList'",
        "''",
        "'videoCaptionList'",
        "''",
        "'basic'",
        "'language'",
        "''",
        "'date'",
        "''",
        "'text'",
        "'textAddress'",
        "''",
        "'isPreview'",
        "''",
        "'textFiletype'",
        "''",
        "'network'",
        "''",
        "''",
        "'false'",
        "\"TextFiletype_MD\"",
        "\"Network_IPFS\"",
        "\"Language_EN\"",
        "''",
        "'basic'",
        "'name'",
        "''",
        "'description'",
        "''",
        "'language'",
        "''",
        "'date'",
        "''",
        "'avatar'",
        "''",
        "'tagList'",
        "''",
        "'image'",
        "'filename'",
        "''",
        "'imageAddress'",
        "''",
        "'thumbnailAddress'",
        "''",
        "'network'",
        "''",
        "''",
        "''",
        "\"Language_EN\"",
        "''",
        "''",
        "''",
        "''",
        "\"Network_IPFS\"",
        "'basic'",
        "'name'",
        "''",
        "'description'",
        "''",
        "'language'",
        "''",
        "'date'",
        "''",
        "'avatar'",
        "''",
        "'tagList'",
        "''",
        "'video'",
        "'filename'",
        "''",
        "'addressDirectory'",
        "''",
        "'thumbnailFilename'",
        "''",
        "'displayName'",
        "''",
        "'publishDate'",
        "''",
        "'youtube'",
        "'url'",
        "''",
        "'youTubeId'",
        "''",
        "''",
        "''",
        "\"Language_EN\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "\"https://www.youtube.com\"",
        "'?v='",
        "'youtu.be/'",
        "''",
        "''",
        "''",
        "\"Language_EN\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'articleData'",
        "'textData'",
        "'embeddedVideos'",
        "'embeddedImages'",
        "https://api.oip.io/oip/o5/record/get/${recordID}",
        "'error'",
        "'/api/v1/getInfo'",
        "' %'",
        "\"currentTime\"",
        "\"chain sync progress\"",
        "\"chain synched\"",
        "\"info\"",
        "\"handling RPC call: getinfo\"",
        "'/api/v1/getPeerInfo'",
        "\"currentTime\"",
        "\"message\"",
        "\"All Systems Operational\"",
        "\"info\"",
        "\"handling RPC call: getpeerinfo\"",
        "'/api/v1/getWIF'",
        "''",
        "\"currentTime\"",
        "\"message\"",
        "\"Error: Passphrase is required\"",
        "\"currentTime\"",
        "\"message\"",
        "\"All Systems Operational\"",
        "\"wif\"",
        "\"handling RPC call: getWIF\"",
        "'/api/v1/createWallet'",
        "\"handling RPC call: createWallet\"",
        "''",
        "\"\"",
        "'default'",
        "\"currentTime\"",
        "\"message\"",
        "\"Error: Passphrase is required\"",
        "\"Error\"",
        "\"currentTime\"",
        "\"message\"",
        "\"currentTime\"",
        "\"result\"",
        "\"Wallet Created Successfully\"",
        "\"message\"",
        "\"emailAddress is the address associated with your walletID. pubKey is the address to send tokens to before you can publish. Please store your mnemonic, it will not be stored in our database and there is no way to ask for it again!\"",
        "\"emailAddress\"",
        "\"walletID\"",
        "\"pubKey\"",
        "\"encrypted\"",
        "\"mnemonic\"",
        "\"xprivkey\"",
        "\"walletinfo\"",
        "'/api/v1/generateReceivingAddress'",
        "\"currentTime\"",
        "\"message\"",
        "\"All Systems Operational\"",
        "\"send to this address\"",
        "\"info\"",
        "\"handling RPC call: createReceivingAddress\"",
        "'/api/v1/getWalletInfo'",
        "''",
        "\"currentTime\"",
        "\"wallet id\"",
        "\"wallet balance\"",
        "\"info\"",
        "\"handling RPC call: getWalletInfo\"",
        "'/api/v1/getWalletBalance'",
        "''",
        "\"currentTime\"",
        "\"wallet id\"",
        "\"wallet balance\"",
        "\"handling RPC call: getWalletInfo\"",
        "'/api/v1/getWalletTxHistory'",
        "\"id:\"",
        "\"currentTime\"",
        "\"message\"",
        "\"All Systems Operational\"",
        "\"info\"",
        "\"handling RPC call: getWalletInfo\"",
        "'/api/v1/registerPublisher'",
        "''",
        "''",
        "'default'",
        "\"currentTime\"",
        "\"message\"",
        "\"Publisher Registration Sent Successfully\"",
        "\"Registration TXID\"",
        "\"Publisher Address\"",
        "\"Publisher Name\"",
        "\"currentTime\"",
        "\"message\"",
        "\"Publisher Registration Failed\"",
        "\"cause\"",
        "'Incorrect Passphrase'",
        "'/api/v1/publishRecord'",
        "''",
        "''",
        "'default'",
        "'Error getting wif'",
        "\"currentTime\"",
        "\"message\"",
        "\"Publish Record Failed\"",
        "\"cause\"",
        "'Incorrect Passphrase'",
        "\"\"",
        "'basic'",
        "'video'",
        "'youtube'",
        "'uh oh'",
        "'recordTxidArray'",
        "'video reference record'",
        "\"current time\"",
        "\"message\"",
        "\"Published Successfully\"",
        "\"reference txid\"",
        "'no embedded videos, finish this part'",
        "'basic'",
        "'image'",
        "'uh oh'",
        "'recordTxidArray'",
        "'image reference record'",
        "\"current time\"",
        "\"message\"",
        "\"Published Successfully\"",
        "\"reference txid\"",
        "\"record txids\"",
        "'no embedded images, finish this part'",
        "'basic'",
        "'text'",
        "'uh oh'",
        "'basic'",
        "'article'",
        "'uh oh'",
        "'article reference record'",
        "\"current time\"",
        "\"message\"",
        "\"Published Successfully\"",
        "\"reference txid\"",
        "'article reference record'",
        "\"current time\"",
        "\"message\"",
        "\"Published Successfully\"",
        "\"article record txid\"",
        "'/api/v1/getRecord/:recordID'",
        "\"currentTime\"",
        "\"message\"",
        "\"Record Found\"",
        "\"Record\"",
        "\"currentTime\"",
        "\"message\"",
        "\"Record Not Found\"",
        "\"recordID\"",
        "'/api/v1/getExpandedRecord/:recordID'",
        "''",
        "''",
        "\"currentTime\"",
        "\"message\"",
        "\"Record Found\"",
        "\"Record\"",
        "\"currentTime\"",
        "\"message\"",
        "\"Record Not Found\"",
        "\"recordID\""
    ],
    "variables": [
        "express",
        "SHA256",
        "SHA1",
        "apiKey",
        "axios",
        "req",
        "http",
        "https",
        "oipProto",
        "buildOipDetails",
        "recordProtoBuilder",
        "app",
        "clientOptions",
        "walletClientOptions",
        "client",
        "walletClient",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "wallet",
        "result",
        "wallet",
        "result",
        "wallet",
        "result",
        "fpub",
        "fpub",
        "result",
        "wallet",
        "result",
        "wif",
        "wallet",
        "result",
        "walletRPC",
        "result",
        "details",
        "result",
        "walletRPC",
        "result",
        "publisher",
        "registerPublisherData",
        "data",
        "floDataArr",
        "outputsArr",
        "transactionOutput",
        "txid",
        "signatureData",
        "floData",
        "floDataArr",
        "outputsArr",
        "referenceTxid",
        "userRequests",
        "i",
        "time",
        "sig",
        "transactionOutput",
        "recordTxidArray",
        "walletdata",
        "templateInfo",
        "record",
        "article",
        "text",
        "textData",
        "embeddedImages",
        "embeddedImageAddresses",
        "embeddedImageCaptions",
        "embeddedImageQty",
        "i",
        "embeddedVideos",
        "embeddedVideocaptions",
        "embeddedVideoQty",
        "i",
        "articleData",
        "response",
        "record",
        "chainSync",
        "chainIsSynced",
        "body",
        "emailaddress",
        "pubKey",
        "passphrase",
        "id",
        "emailaddress",
        "options",
        "passphrase",
        "account",
        "id",
        "id",
        "account",
        "emailaddress",
        "id",
        "wallet",
        "emailaddress",
        "id",
        "wallet",
        "id",
        "wallet",
        "authData",
        "publisherData",
        "emailaddress",
        "passphrase",
        "account",
        "id",
        "pubKey",
        "publisherName",
        "wif",
        "authData",
        "recordData",
        "emailaddress",
        "passphrase",
        "account",
        "id",
        "pubKey",
        "recordDataX",
        "embeddedVideoTXIDs",
        "embeddedVideoTXs",
        "i",
        "basic",
        "video",
        "youtube",
        "payload",
        "templates",
        "data",
        "i",
        "templateType",
        "templateInfo",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "template",
        "mpx",
        "delay",
        "previousTransactionOutput",
        "embeddedVideoTXs",
        "delay",
        "embeddedImageTXIDs",
        "embeddedImageTXs",
        "i",
        "image",
        "basic",
        "payload",
        "templates",
        "imageData",
        "ii",
        "templateType",
        "templateInfo",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "imageTemplate",
        "mpx",
        "delay",
        "previousTransactionOutput",
        "embeddedImageTXs",
        "embeddedTextTX",
        "embeddedTextTXID",
        "text",
        "basic",
        "payload",
        "templates",
        "data",
        "i",
        "templateType",
        "templateInfo",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "recordDataImage",
        "mpx",
        "delay",
        "article",
        "embeddedArticleTXID",
        "z",
        "templateType",
        "templateInfo",
        "templateDescriptor",
        "templateName",
        "templatePayload",
        "template",
        "mpx",
        "delay",
        "recordID",
        "record",
        "testIfRecord",
        "recordID",
        "mainRecord",
        "bylineWriter",
        "embeddedImages",
        "embeddedVideos",
        "articleText",
        "txids",
        "bylineWriterRecord",
        "bylineWriterResults",
        "articleTextRecord",
        "articleTextResults",
        "videoRecords",
        "i",
        "video",
        "videoRecord",
        "videoRecordResults",
        "imageRecords",
        "i",
        "image",
        "imageRecord",
        "imageRecordResults"
    ],
    "comments": [
        "listen on port 3000",
        "--------------------------------------------------------------------------------",
        "Functions",
        "get blockchain info including sync status",
        "get info about connected peers",
        "create a wallet",
        "generate a receiving address",
        "console.log(result);",
        "unlock a wallet with passprhase",
        "select a wallet to use",
        "this is probably deprecated, turn it off for now and see if anything breaks",
        "async function getwalletinfo() {",
        "const result = await walletClient.execute('getwalletinfo');",
        "return result",
        "}",
        "encrypt a wallet",
        "console.log('result of encryptwallet', result);",
        "get master HD Key from wallet",
        "check whether this should just be renamed to getFpub and deprecate the other one",
        "get fpub",
        "get a wallets WIF (wallet import format - private key)",
        "get wallet info, including balance",
        "sign message with wallet private key",
        "take formatted data that needs to be published,",
        "turn it into oipDetails and then turn it into",
        "serialized protobuf hex64 data for publishing",
        "create a transaction, possibly deprecate this",
        "send floData to chain",
        "prepare and format publisher registration data",
        "prepare the first transaction of a multipart record",
        "Signed64 is less than 1040",
        "get floData for the first transaction of a multipart record",
        "send the rest of the transactions in a multipart record",
        "First post request has come back ok, start the loop post request",
        "this might be entirely moot, investigate",
        "gets info about a specified template",
        "format record data for publishing",
        "'name': '',",
        "'description': '',",
        "'avatar': '',",
        "'tagList': ''",
        "if record.embeddedImages.length is undefined, then it's a text record",
        "console.log('embeddedImages is not empty:', Array.isArray(record.embeddedImages))",
        "'p2PNetwork': '',",
        "console.log('articleData', articleData,'textData',textData,'embeddedVideos',embeddedVideos, 'embeddedImages',embeddedImages);",
        "get a record from the blockchain",
        "--------------------------------------------------------------------------------",
        "endpoints",
        "use this endpoint to check the chain sync status and other info",
        "use this endpoint to get info about connected blockchain peers",
        "use this endpoint to get wallet's WIF (private key)",
        "use this endpoint to create a new wallet",
        "console.log('create wallet response:', wallet);",
        "use this endpoint to generate a receiving address",
        "const options = req.body.options;",
        "console.log(\"id:\",id, \"account:\", account);",
        "use this endpoint to get wallet info including balance",
        "use this endpoint to get wallet balance",
        "const id = req.body.id || '';",
        "console.log(\"id:\",id);",
        "use this endpoint to get wallets history",
        "\"wallet id\": id,",
        "\"wallet balance\": (result.balance.confirmed/100000000).toFixed(8),",
        "use this endpoint to register a publisher",
        "console.log(\"fpub:\", fpub)",
        "console.log('data:', data)",
        "console.log('floData:', floData)",
        "console.log('wallet:', wallet)",
        "console.log('resX:', resX)",
        "console.log('walletinfo:', walletinfo)",
        "console.log(\"txidsX:\", txids);",
        "use this endpoint to publish a record",
        "first we check if there are any embedded videos and if so we loop thru them and create a new record for each one",
        "then we publish the text data record",
        "then we publish the article data with the text data record and embedded video records as references",
        "mpx",
        "single",
        "console.log('video reference records', embeddedVideoTXIDs);",
        "res.send({",
        "\"current time\": new Date().toISOString(),",
        "\"message\": \"Published Successfully\",",
        "\"record txid\": referenceTxO.txid",
        "});",
        "console.log('video reference record', referenceTxO.txid);",
        "res.send({",
        "\"current time\": new Date().toISOString(),",
        "\"message\": \"Published Successfully\",",
        "\"record txid\": referenceTxO.txid",
        "});",
        "no embedded videos",
        "next we publish the embedded images",
        "mpx",
        "single",
        "console.log('previous transaction output this loop',i, previousTransactionOutput)",
        "console.log('referenceTxO', referenceTxO);",
        "console.log('image reference records', embeddedImageTXIDs);",
        "res.send({",
        "\"current time\": new Date().toISOString(),",
        "\"message\": \"Published Successfully\",",
        "\"record txid\": referenceTxO.txid",
        "});",
        "console.log('referenceTxO', referenceTxO);",
        "console.log('image reference record', referenceTxO.txid);",
        "res.send({",
        "\"current time\": new Date().toISOString(),",
        "\"message\": \"Published Successfully\",",
        "\"record txid\": referenceTxO.txid",
        "});",
        "no embedded videos",
        "next we publish the text data record",
        "console.log('investigate this',template, data)",
        "this is fucking wierd, it shoudln't work",
        "function makeTextRecord(data) { // this should work, but it doesn't",
        "console.log('investigate this too',template, data)",
        "mpx",
        "single",
        "and now we publish the article with the reference to the video and text",
        "next we publish the text data record",
        "console.log('data', data);",
        "mpx",
        "console.log('recordTxidArray', recordTxidArray);",
        "single",
        "use this endpoint to get a record",
        "use this endpoint to get a record and expand all OIPRefs in it to their full records",
        "console.log('error', e);"
    ],
    "docstrings": [],
    "functions": [
        "getinfo",
        "getPeerInfo",
        "createWallet",
        "createAddress",
        "walletpassphrase",
        "selectwallet",
        "encryptwallet",
        "getMasterHDKey",
        "getwalletaccount",
        "getFpub",
        "getwif",
        "getwalletinfo",
        "signMessage",
        "getSignedP64FloData",
        "createTX",
        "sendFloDataToChain",
        "prepRegistration",
        "createRegistration",
        "prepareFirstTXofMP",
        "getFloDataForFirstTXofMP",
        "sendRestOfTXsOfMP",
        "walletData",
        "getTemplateInfo",
        "formatRecord",
        "getRecord",
        "makeRecord",
        "makeImageRecord",
        "makeTextRecord",
        "makeMasterRecord"
    ],
    "classes": []
}