{
    "identifiers": [
        "fastify",
        "Static",
        "Type",
        "swagger",
        "employees_gender",
        "employees",
        "PrismaClient",
        "SocketAddress",
        "Request",
        "PrismaClient",
        "gender",
        "Type",
        "Type",
        "Type",
        "Type",
        "Type",
        "Type",
        "Type",
        "select",
        "request",
        "fastify",
        "server",
        "swagger",
        "server",
        "request",
        "select",
        "request",
        "reply",
        "request",
        "prisma",
        "req",
        "timeStart",
        "req",
        "dbTime_process",
        "queryString",
        "result",
        "reply",
        "teste",
        "server",
        "err",
        "address",
        "err",
        "err",
        "process",
        "address"
    ],
    "literals": [
        "\"fastify\"",
        "\"@sinclair/typebox\"",
        "\"fastify-swagger\"",
        "\"@prisma/client\"",
        "\"net\"",
        "\".pnpm/light-my-request@4.9.0/node_modules/light-my-request\"",
        "\"BdProject\"",
        "\"0.0.1\"",
        "\"Selects\"",
        "\"...\"",
        "\"/docs\"",
        "\"/Selects\"",
        "\"Selects\"",
        "\"\"",
        "Server listening at ${address}"
    ],
    "variables": [
        "prisma",
        "request",
        "select",
        "server",
        "req",
        "timeStart",
        "result",
        "dbTime_process",
        "queryString",
        "teste"
    ],
    "comments": [
        "server.post<{ Body: EmployeeType; Reply: EmployeeType }>(\n  \"/test\",\n  {\n    schema: {\n      tags: [\"Selects\"],\n      body: Employee,\n      response: {\n        200: Employee,\n      },\n    },\n  },\n\n  async (request, reply) => {\n    const { body: Employee } = request;\n\n    console.log(\"user\");\n\n    return reply.status(200).send({\n      emp_no: 10,\n      birth_date: \"10/10/2021\",\n    });\n  }\n);"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}