{
    "identifiers": [
        "keyword",
        "collections",
        "OrderedDict",
        "Enum",
        "typing",
        "Any",
        "Dict",
        "Mapping",
        "MutableMapping",
        "MutableSequence",
        "MutableSet",
        "Sequence",
        "Tuple",
        "attr",
        "attr",
        "NOTHING",
        "make_class",
        "attr",
        "_make",
        "_CountingAttr",
        "hypothesis",
        "strategies",
        "st",
        "Any",
        "Tuple",
        "PosArg",
        "Dict",
        "Any",
        "st",
        "sampled_from",
        "st",
        "integers",
        "st",
        "floats",
        "allow_nan",
        "st",
        "text",
        "st",
        "binary",
        "st",
        "composite",
        "draw",
        "draw",
        "st",
        "sets",
        "st",
        "text",
        "min_size",
        "s",
        "s",
        "endswith",
        "min_size",
        "len",
        "names",
        "draw",
        "st",
        "one_of",
        "st",
        "sets",
        "st",
        "one_of",
        "st",
        "integers",
        "st",
        "floats",
        "allow_nan",
        "st",
        "text",
        "min_size",
        "min_size",
        "n",
        "max_size",
        "n",
        "Enum",
        "names",
        "vals",
        "st",
        "sampled_from",
        "Sequence",
        "MutableSequence",
        "st",
        "sampled_from",
        "MutableSet",
        "st",
        "composite",
        "draw",
        "draw",
        "primitive_strategies",
        "draw",
        "list_types",
        "list_t",
        "list_t",
        "t",
        "list_types",
        "draw",
        "st",
        "lists",
        "prim_strat",
        "list_t",
        "st",
        "composite",
        "draw",
        "draw",
        "primitive_strategies",
        "draw",
        "set_types",
        "set_t",
        "set_t",
        "t",
        "set_types",
        "draw",
        "st",
        "sets",
        "prim_strat",
        "set_t",
        "st",
        "composite",
        "draw",
        "draw",
        "primitive_strategies",
        "draw",
        "st",
        "just",
        "st",
        "just",
        "t",
        "draw",
        "st",
        "sets",
        "prim_strat",
        "set_t",
        "st",
        "sampled_from",
        "Tuple",
        "Sequence",
        "primitive_strategies",
        "flatmap",
        "e",
        "st",
        "tuples",
        "st",
        "lists",
        "e",
        "st",
        "one_of",
        "st",
        "sampled_from",
        "Tuple",
        "e",
        "Sequence",
        "e",
        "h_tuple_types",
        "e",
        "e",
        "e",
        "st",
        "sampled_from",
        "Dict",
        "MutableMapping",
        "Mapping",
        "st",
        "one_of",
        "lists_of_primitives",
        "h_tuples_of_primitives",
        "st",
        "one_of",
        "mut_sets_of_primitives",
        "frozen_sets_of_primitives",
        "type1",
        "type2",
        "st",
        "one_of",
        "dict_types",
        "dict_types",
        "t",
        "t",
        "type1",
        "type2",
        "dict_types",
        "t",
        "t",
        "Any",
        "type2",
        "dict_types",
        "t",
        "t",
        "type1",
        "Any",
        "tuple_of_strats",
        "prim_strat_1",
        "type_1",
        "prim_strat_2",
        "type_2",
        "tuple_of_strats",
        "st",
        "tuples",
        "st",
        "dictionaries",
        "prim_strat_1",
        "prim_strat_2",
        "create_generic_dict_type",
        "type_1",
        "type_2",
        "st",
        "tuples",
        "primitive_strategies",
        "primitive_strategies",
        "flatmap",
        "create_dict_and_type",
        "ascii_lowercase",
        "c",
        "lc",
        "c",
        "has_underscore",
        "c",
        "has_underscore",
        "outer",
        "lc",
        "inner",
        "lc",
        "outer",
        "inner",
        "keyword",
        "iskeyword",
        "res",
        "outer",
        "inner",
        "attrs_and_strategy",
        "Tuple",
        "_CountingAttr",
        "st",
        "SearchStrategy",
        "PosArgs",
        "frozen",
        "t",
        "t",
        "NOTHING",
        "t",
        "kw_only",
        "sorted",
        "attrs_and_strategy",
        "key",
        "key",
        "a",
        "a",
        "attrs_and_strat",
        "i",
        "a",
        "attrs",
        "i",
        "a",
        "a",
        "attrs_and_strat",
        "a",
        "kw_only",
        "attr_name",
        "attr_and_strat",
        "gen_attr_names",
        "attrs_and_strat",
        "attr_and_strat",
        "kw_only",
        "attr_name",
        "startswith",
        "attr_name",
        "attr_and_strat",
        "st",
        "tuples",
        "st",
        "builds",
        "f",
        "make_class",
        "OrderedDict",
        "gen_attr_names",
        "attrs",
        "frozen",
        "f",
        "st",
        "booleans",
        "frozen",
        "st",
        "just",
        "frozen",
        "st",
        "tuples",
        "vals",
        "st",
        "fixed_dictionaries",
        "kwargs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "nested_cl",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "nested_cl",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "nested_cl",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "_",
        "nested_cl",
        "takes_self",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "nested_cl",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "nested_cl",
        "nested_cl",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "nested_cl",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "nested_cl",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "nested_cl",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "tup",
        "tup",
        "attr",
        "Factory",
        "nested_cl",
        "tup",
        "combined_attrs",
        "append",
        "attr",
        "ib",
        "st",
        "just",
        "nested_cl",
        "_create_hyp_class",
        "combined_attrs",
        "simple_class_strategy",
        "st",
        "tuples",
        "lists_of_attrs",
        "defaults",
        "simple_class_strategy",
        "attrs_and_classes",
        "flatmap",
        "just_class",
        "attrs_and_classes",
        "flatmap",
        "just_class_with_type",
        "attrs_and_classes",
        "flatmap",
        "list_of_class",
        "attrs_and_classes",
        "flatmap",
        "list_of_class_with_type",
        "attrs_and_classes",
        "flatmap",
        "dict_of_class",
        "attrs_and_classes",
        "flatmap",
        "just_frozen_class_with_type",
        "attrs_and_classes",
        "flatmap",
        "just_class_with_type_takes_self",
        "st",
        "composite",
        "draw",
        "defaults",
        "kw_only",
        "NOTHING",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "st",
        "just",
        "st",
        "composite",
        "draw",
        "defaults",
        "kw_only",
        "NOTHING",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "draw",
        "st",
        "integers",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "st",
        "integers",
        "st",
        "composite",
        "draw",
        "defaults",
        "type_annotations",
        "kw_only",
        "NOTHING",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "draw",
        "st",
        "text",
        "type_annotations",
        "draw",
        "st",
        "booleans",
        "type_annotations",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "st",
        "text",
        "st",
        "composite",
        "draw",
        "defaults",
        "kw_only",
        "NOTHING",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "draw",
        "st",
        "floats",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "st",
        "floats",
        "allow_nan",
        "st",
        "composite",
        "draw",
        "defaults",
        "kw_only",
        "NOTHING",
        "st",
        "dictionaries",
        "keys",
        "st",
        "text",
        "values",
        "st",
        "integers",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "draw",
        "val_strat",
        "attr",
        "Factory",
        "default_val",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "val_strat",
        "st",
        "composite",
        "draw",
        "defaults",
        "kw_only",
        "NOTHING",
        "st",
        "integers",
        "st",
        "none",
        "defaults",
        "defaults",
        "draw",
        "st",
        "booleans",
        "draw",
        "val_strat",
        "attr",
        "ib",
        "kw_only",
        "draw",
        "st",
        "booleans",
        "kw_only",
        "kw_only",
        "val_strat",
        "defaults",
        "kw_only",
        "bare_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "int_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "str_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "float_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "dict_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "optional_attrs",
        "defaults",
        "kw_only",
        "kw_only",
        "defaults",
        "min_size",
        "kw_only",
        "st",
        "lists",
        "simple_attrs",
        "defaults",
        "kw_only",
        "min_size",
        "min_size",
        "max_size",
        "l",
        "sorted",
        "l",
        "key",
        "t",
        "t",
        "_default",
        "NOTHING",
        "defaults",
        "min_attrs",
        "frozen",
        "kw_only",
        "lists_of_attrs",
        "defaults",
        "min_size",
        "min_attrs",
        "kw_only",
        "kw_only",
        "flatmap",
        "attrs_and_strategy",
        "_create_hyp_class",
        "attrs_and_strategy",
        "frozen",
        "frozen",
        "st",
        "recursive",
        "simple_classes",
        "defaults",
        "_create_hyp_nested_strategy"
    ],
    "literals": [
        "\"_\"",
        "\"HypEnum\"",
        "\"_\"",
        "\"_\"",
        "\"HypClass\"",
        "\"cls\"",
        "\"cls\""
    ],
    "variables": [
        "PosArg",
        "PosArgs",
        "KwArgs",
        "primitive_strategies",
        "names",
        "n",
        "vals",
        "list_types",
        "set_types",
        "prim_strat",
        "t",
        "list_t",
        "prim_strat",
        "t",
        "set_t",
        "prim_strat",
        "t",
        "set_t",
        "h_tuple_types",
        "h_tuples_of_primitives",
        "dict_types",
        "seqs_of_primitives",
        "sets_of_primitives",
        "dicts_of_primitives",
        "lc",
        "has_underscore",
        "has_underscore",
        "res",
        "attrs_and_strat",
        "attrs",
        "a",
        "counter",
        "vals",
        "kwargs",
        "attr_name",
        "kwargs",
        "attr_name",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "nested_cl",
        "combined_attrs",
        "attrs_and_classes",
        "val_strat",
        "default_val",
        "val_strat",
        "nested_classes"
    ],
    "comments": [
        "A strategy producing tuples of the form ([list of attributes], <given",
        "class strategy>).",
        "Python functions support up to 255 arguments.",
        "Ok, so st.recursive works by taking a base strategy (in this case,",
        "simple_classes) and a special function. This function receives a strategy,",
        "and returns another strategy (building on top of the base strategy)."
    ],
    "docstrings": [
        "\"\"\"Strategies for attributes without types and accompanying classes.\"\"\"",
        "\"\"\"Generate enum classes with primitive values.\"\"\"",
        "\"\"\"Generate a strategy that yields tuples of list of primitives and types.\n\n    For example, a sample value might be ([1,2], List[int]).\n    \"\"\"",
        "\"\"\"A strategy that generates mutable sets of primitives.\"\"\"",
        "\"\"\"A strategy that generates frozen sets of primitives.\"\"\"",
        "\"\"\"Create a strategy for generating parameterized dict types.\"\"\"",
        "\"\"\"Map two primitive strategies into a strategy for dict and type.\"\"\"",
        "\"\"\"\n    Generate names for attributes, 'a'...'z', then 'aa'...'zz'.\n    ~702 different attribute names should be enough in practice.\n    Some short strings (such as 'as') are keywords, so we skip them.\n\n    Every second attribute name is private (starts with an underscore).\n    \"\"\"",
        "\"\"\"\n    A helper function for Hypothesis to generate attrs classes.\n\n    The result is a tuple: an attrs class, a tuple of values to\n    instantiate it, and a kwargs dict for kw-only attributes.\n    \"\"\"",
        "\"\"\"\n    Create a recursive attrs class.\n    Given a strategy for building (simpler) classes, create and return\n    a strategy for building classes that have as an attribute:\n        * just the simpler class\n        * a list of simpler classes\n        * a dict mapping the string \"cls\" to a simpler class.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields values\n    appropriate for that attribute.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields ints for that\n    attribute.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields strs for that\n    attribute.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields floats for that\n    attribute.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields dictionaries\n    for that attribute. The dictionaries map strings to integers.\n    \"\"\"",
        "\"\"\"\n    Generate a tuple of an attribute and a strategy that yields values\n    for that attribute. The strategy generates optional integers.\n    \"\"\"",
        "\"\"\"\n    Return a strategy that yields tuples of simple classes and values to\n    instantiate them.\n    \"\"\""
    ],
    "functions": [
        "enums_of_primitives",
        "lists_of_primitives",
        "mut_sets_of_primitives",
        "frozen_sets_of_primitives",
        "create_generic_dict_type",
        "create_dict_and_type",
        "gen_attr_names",
        "_create_hyp_class",
        "key",
        "just_class",
        "just_class_with_type",
        "just_class_with_type_takes_self",
        "just_frozen_class_with_type",
        "list_of_class",
        "list_of_class_with_type",
        "dict_of_class",
        "_create_hyp_nested_strategy",
        "bare_attrs",
        "int_attrs",
        "str_attrs",
        "float_attrs",
        "dict_attrs",
        "optional_attrs",
        "simple_attrs",
        "lists_of_attrs",
        "simple_classes"
    ],
    "classes": []
}