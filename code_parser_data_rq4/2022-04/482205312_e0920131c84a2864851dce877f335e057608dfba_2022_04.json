{
    "identifiers": [
        "Text",
        "Runtime",
        "InteropServices",
        "Reflection",
        "Windows",
        "Forms",
        "MouseKeyboardLibrary",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "DllImport",
        "CharSet",
        "CharSet",
        "Auto",
        "CallingConvention",
        "CallingConvention",
        "StdCall",
        "SetLastError",
        "idHook",
        "HookProc",
        "lpfn",
        "IntPtr",
        "hMod",
        "dwThreadId",
        "DllImport",
        "CharSet",
        "CharSet",
        "Auto",
        "CallingConvention",
        "CallingConvention",
        "StdCall",
        "SetLastError",
        "idHook",
        "DllImport",
        "CharSet",
        "CharSet",
        "Auto",
        "CallingConvention",
        "CallingConvention",
        "StdCall",
        "idHook",
        "nCode",
        "wParam",
        "IntPtr",
        "lParam",
        "DllImport",
        "uVirtKey",
        "uScanCode",
        "lpbKeyState",
        "lpwTransKey",
        "fuState",
        "DllImport",
        "pbKeyState",
        "DllImport",
        "CharSet",
        "CharSet",
        "Auto",
        "CallingConvention",
        "CallingConvention",
        "StdCall",
        "vKey",
        "HookProc",
        "nCode",
        "wParam",
        "IntPtr",
        "lParam",
        "_isStarted",
        "Application",
        "ApplicationExit",
        "EventHandler",
        "Application_ApplicationExit",
        "_isStarted",
        "_hookType",
        "_hookCallback",
        "HookProc",
        "HookCallbackProcedure",
        "_handleToHook",
        "SetWindowsHookEx",
        "_hookType",
        "_hookCallback",
        "Marshal",
        "GetHINSTANCE",
        "Assembly",
        "GetExecutingAssembly",
        "GetModules",
        "_handleToHook",
        "_isStarted",
        "_isStarted",
        "UnhookWindowsHookEx",
        "_handleToHook",
        "_isStarted",
        "nCode",
        "Int32",
        "wParam",
        "IntPtr",
        "lParam",
        "sender",
        "EventArgs",
        "e",
        "_isStarted",
        "Stop"
    ],
    "literals": [
        "\"user32.dll\"",
        "\"user32.dll\"",
        "\"user32.dll\"",
        "\"user32\"",
        "\"user32\"",
        "\"user32.dll\""
    ],
    "variables": [
        "x",
        "y",
        "POINT",
        "pt",
        "hwnd",
        "wHitTestCode",
        "dwExtraInfo",
        "POINT",
        "pt",
        "mouseData",
        "flags",
        "time",
        "dwExtraInfo",
        "vkCode",
        "scanCode",
        "flags",
        "time",
        "dwExtraInfo",
        "WH_MOUSE_LL",
        "WH_KEYBOARD_LL",
        "WH_MOUSE",
        "WH_KEYBOARD",
        "WM_MOUSEMOVE",
        "WM_LBUTTONDOWN",
        "WM_RBUTTONDOWN",
        "WM_MBUTTONDOWN",
        "WM_LBUTTONUP",
        "WM_RBUTTONUP",
        "WM_MBUTTONUP",
        "WM_LBUTTONDBLCLK",
        "WM_RBUTTONDBLCLK",
        "WM_MBUTTONDBLCLK",
        "WM_MOUSEWHEEL",
        "WM_KEYDOWN",
        "WM_KEYUP",
        "WM_SYSKEYDOWN",
        "WM_SYSKEYUP",
        "VK_SHIFT",
        "VK_CAPITAL",
        "VK_NUMLOCK",
        "VK_LSHIFT",
        "VK_RSHIFT",
        "VK_LCONTROL",
        "VK_RCONTROL",
        "VK_LALT",
        "VK_RALT",
        "LLKHF_ALTDOWN",
        "_hookType",
        "_handleToHook",
        "_isStarted",
        "HookProc",
        "_hookCallback",
        "IsStarted"
    ],
    "comments": [
        "Abstract base class for Mouse and Keyboard hooks",
        "</summary>",
        "声明一个point的封送类型",
        "当前鼠标坐标",
        "声明鼠标钩子的封送类型",
        "声明全局鼠标钩子的封送类型",
        "定义一个虚拟键码，该代码有一个值的范围0~254",
        "指定一个硬件扫描码",
        "键标志",
        "指定的时间戳记录这个标志",
        "指定额外的相关信息",
        "钩子的类型，即它处理的消息类型",
        "钩子子程的地址指针。如果dwThreadId参数为0",
        "或是一个由别的进程创建的线程的标识，",
        "lpfn必须指向DLL中的钩子子程。",
        "除此以外，lpfn可以指向当前进程的一段钩子子程代码。",
        "钩子函数的入口地址，当钩子钩到任何消息后便调用这个函数。",
        "应用程序实例的句柄。标识包含lpfn所指的子程的DLL。",
        "如果dwThreadId 标识当前进程创建的一个线程，",
        "而且子程代码位于当前进程，hMod必须为NULL。",
        "可以很简单的设定其为本应用程序的实例句柄。",
        "与安装的钩子子程相关联的线程的标识符。",
        "如果为0，钩子子程与所有的线程关联，即为全局钩子。",
        "使用该函数卸载钩子",
        "钩子的类型，即它处理的消息类型",
        "nCode为传给钩子过程的事件代码",
        "使用该函数获取下一个钩子",
        "指定虚拟关键代码进行翻译",
        "指定的硬件扫描码的关键须翻译成英文",
        "指针，以256字节数组，包含当前键盘的状态。",
        "每个元素（字节）的数组包含状态的一个关键。",
        "如果高阶位的字节是一套，关键是下跌（按下）。",
        "在低比特，如果设置表明，关键是对切换。",
        "在此功能，只有肘位的CAPS LOCK键是相关的。在切换状态的NUM个锁和滚动锁定键被忽略。",
        "[out] 指针的缓冲区收到翻译字符或字符。",
        "[in] Specifies whether a menu is active. This parameter must be 1 if a menu is active, or 0 otherwise.",
        "ToAscii职能的转换指定的虚拟键码和键盘状态的相应字符或字符",
        "获取按键状态",
        "在程序退出增加对钩子的卸载操作",
        "Make sure we keep a reference to this delegate!",
        "If not, GC randomly collects it, and a NullReference exception is thrown",
        "全局钩子此处传入modules handle",
        "全局钩子,需要引用空间(using System.Reflection;)",
        "Were we able to sucessfully start hook?",
        "This method must be overriden by each extending hook",
        "如果钩子安装失败，调用stop对其进行卸载"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "SetWindowsHookEx",
        "UnhookWindowsHookEx",
        "CallNextHookEx",
        "ToAscii",
        "GetKeyboardState",
        "GetKeyState",
        "GlobalHook",
        "Start",
        "Stop",
        "HookCallbackProcedure",
        "Application_ApplicationExit"
    ],
    "classes": [
        "GlobalHook",
        "POINT",
        "MouseHookStruct",
        "MouseLLHookStruct",
        "KeyboardHookStruct"
    ]
}