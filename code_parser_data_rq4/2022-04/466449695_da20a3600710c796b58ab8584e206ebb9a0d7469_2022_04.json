{
    "identifiers": [
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "order",
        "service",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "customer",
        "model",
        "entity",
        "Customer",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "exceptions",
        "BusinessException",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "order",
        "model",
        "entity",
        "Order",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "order",
        "model",
        "repository",
        "OrderRepository",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "order",
        "service",
        "orderServiceImpl",
        "OrderServiceImpl",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "parkingSpace",
        "model",
        "entity",
        "ParkingSpace",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "parkingSpace",
        "model",
        "spaceTypeENUM",
        "SpaceType",
        "com",
        "mikaelsonbraz",
        "parkingapi",
        "api",
        "renting",
        "model",
        "entity",
        "Renting",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayName",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "extension",
        "ExtendWith",
        "org",
        "mockito",
        "Mockito",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "orm",
        "jpa",
        "TestEntityManager",
        "org",
        "springframework",
        "boot",
        "test",
        "mock",
        "mockito",
        "MockBean",
        "org",
        "springframework",
        "test",
        "context",
        "ActiveProfiles",
        "org",
        "springframework",
        "test",
        "context",
        "junit",
        "jupiter",
        "SpringExtension",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "time",
        "temporal",
        "ChronoUnit",
        "java",
        "util",
        "Optional",
        "ExtendWith",
        "ActiveProfiles",
        "service",
        "MockBean",
        "repository",
        "Autowired",
        "MockBean",
        "entityManager",
        "Customer",
        "builder",
        "idCustomer",
        "name",
        "cpf",
        "build",
        "ParkingSpace",
        "builder",
        "idSpace",
        "spaceType",
        "occupied",
        "build",
        "Renting",
        "builder",
        "idRenting",
        "entryDate",
        "LocalDateTime",
        "of",
        "hourPrice",
        "dayPrice",
        "parkingSpace",
        "createSpace",
        "build",
        "Order",
        "builder",
        "idOrder",
        "customer",
        "createCustomer",
        "renting",
        "createRenting",
        "build",
        "BeforeEach",
        "service",
        "repository",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "Mockito",
        "when",
        "repository",
        "save",
        "order",
        "thenReturn",
        "order",
        "savedOrder",
        "service",
        "save",
        "order",
        "Assertions",
        "assertThat",
        "savedOrder",
        "getIdOrder",
        "isNotNull",
        "Assertions",
        "assertThat",
        "savedOrder",
        "getCustomer",
        "getIdCustomer",
        "isNotNull",
        "Assertions",
        "assertThat",
        "savedOrder",
        "getRenting",
        "getIdRenting",
        "isNotNull",
        "Assertions",
        "assertThat",
        "savedOrder",
        "getRenting",
        "getParkingSpace",
        "getIdSpace",
        "isNotNull",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "Mockito",
        "when",
        "repository",
        "findById",
        "Mockito",
        "anyInt",
        "thenReturn",
        "Optional",
        "of",
        "order",
        "foundOrder",
        "service",
        "getById",
        "order",
        "getIdOrder",
        "Assertions",
        "assertThat",
        "foundOrder",
        "isPresent",
        "isTrue",
        "Test",
        "DisplayName",
        "Mockito",
        "when",
        "repository",
        "findById",
        "Mockito",
        "anyInt",
        "thenReturn",
        "Optional",
        "empty",
        "foundOrder",
        "service",
        "getById",
        "Assertions",
        "assertThat",
        "foundOrder",
        "isPresent",
        "isFalse",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "Mockito",
        "when",
        "repository",
        "save",
        "Mockito",
        "thenReturn",
        "order",
        "updatedOrder",
        "service",
        "update",
        "order",
        "Assertions",
        "assertThat",
        "updatedOrder",
        "getIdOrder",
        "isEqualTo",
        "order",
        "getIdOrder",
        "Assertions",
        "assertThat",
        "updatedOrder",
        "getCustomer",
        "isEqualTo",
        "order",
        "getCustomer",
        "Assertions",
        "assertThat",
        "updatedOrder",
        "getRenting",
        "isEqualTo",
        "order",
        "getRenting",
        "Test",
        "DisplayName",
        "order",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertThrows",
        "service",
        "update",
        "order",
        "Mockito",
        "verify",
        "repository",
        "Mockito",
        "save",
        "order",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "entityManager",
        "persist",
        "order",
        "service",
        "order",
        "deletedOrder",
        "entityManager",
        "find",
        "order",
        "Mockito",
        "verify",
        "repository",
        "Mockito",
        "times",
        "order",
        "Assertions",
        "assertThat",
        "deletedOrder",
        "isNull",
        "Test",
        "DisplayName",
        "order",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertThrows",
        "service",
        "order",
        "Mockito",
        "verify",
        "repository",
        "Mockito",
        "order",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "hoje",
        "LocalDateTime",
        "of",
        "order",
        "getRenting",
        "setDepartureDate",
        "hoje",
        "Mockito",
        "when",
        "repository",
        "save",
        "Mockito",
        "thenReturn",
        "order",
        "updatedAmountOrder",
        "service",
        "updateAmount",
        "order",
        "Assertions",
        "assertThat",
        "updatedAmountOrder",
        "getIdOrder",
        "isNotNull",
        "Assertions",
        "assertThat",
        "updatedAmountOrder",
        "getAmount",
        "isEqualTo",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "hoje",
        "LocalDateTime",
        "of",
        "order",
        "getRenting",
        "setDepartureDate",
        "hoje",
        "order",
        "getRenting",
        "getParkingSpace",
        "setSpaceType",
        "SpaceType",
        "COVERED",
        "Mockito",
        "when",
        "repository",
        "save",
        "Mockito",
        "thenReturn",
        "order",
        "updatedAmountOrder",
        "service",
        "updateAmount",
        "order",
        "Assertions",
        "assertThat",
        "updatedAmountOrder",
        "getIdOrder",
        "isNotNull",
        "Assertions",
        "assertThat",
        "updatedAmountOrder",
        "getAmount",
        "isEqualTo",
        "Test",
        "DisplayName",
        "order",
        "createOrder",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertThrows",
        "service",
        "updateAmount",
        "order",
        "Mockito",
        "verify",
        "repository",
        "Mockito",
        "save",
        "order"
    ],
    "literals": [
        "\"test\"",
        "\"João\"",
        "\"111.222.333-44\"",
        "\"Must save a order\"",
        "\"Must get a order by id\"",
        "\"Must return Optional.empty() when not find a orderr by id\"",
        "\"Must update a order\"",
        "\"Must throw IllegalArgumentException when order is null trying update\"",
        "\"Must delete a order\"",
        "\"Must throw IllegalArgumentException when order id is null to delete\"",
        "\"Must update the order amount whe the order renting receives a departure date above 24h and unvered space type\"",
        "\"Must update the order amount when the renting receives a departure date less 24h and covered space type\"",
        "\"Must throw BusinessException when trying update order amount with no departure date\""
    ],
    "variables": [
        "service",
        "repository",
        "entityManager"
    ],
    "comments": [
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "cenário",
        "execução",
        "execução",
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "execução",
        "cenário",
        "execução",
        "verificação",
        "cenário",
        "execução",
        "verificação"
    ],
    "docstrings": [],
    "functions": [
        "Customer",
        "createCustomer",
        "ParkingSpace",
        "createSpace",
        "Renting",
        "createRenting",
        "Order",
        "createOrder",
        "setUp",
        "saveOrderTest",
        "getByIdTest",
        "orderNotFoundById",
        "updateOrderTest",
        "updateInvalidOrderTest",
        "deleteOrderTest",
        "deleteInvalidOrderTest",
        "updateOrderAmountTest",
        "updateOrderAmountTest2",
        "updateInvalidOrderAmountTest"
    ],
    "classes": [
        "OrderServiceTest"
    ]
}