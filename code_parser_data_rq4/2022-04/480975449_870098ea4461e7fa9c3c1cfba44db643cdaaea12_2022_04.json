{
    "identifiers": [
        "rich",
        "random",
        "choice",
        "word",
        "word_list",
        "rich",
        "prompt",
        "Prompt",
        "ALLOWED_GUESSES",
        "letter",
        "letter",
        "letter",
        "letter",
        "letter",
        "letter",
        "guess",
        "anwser",
        "i",
        "letter",
        "guess",
        "anwser",
        "i",
        "guess",
        "i",
        "guessed",
        "correct_place",
        "letter",
        "wordle_pattern",
        "append",
        "SQUARES",
        "letter",
        "anwser",
        "guessed",
        "correct_letter",
        "letter",
        "wordle_pattern",
        "append",
        "SQUARES",
        "guess",
        "i",
        "anwser",
        "i",
        "wordle_pattern",
        "append",
        "SQUARES",
        "guessed",
        "incorrect_letter",
        "letter",
        "wordle_pattern",
        "append",
        "SQUARES",
        "join",
        "guessed",
        "join",
        "wordle_pattern",
        "chosen_word",
        "end_of_game",
        "Prompt",
        "ask",
        "GUESS_STATEMENT",
        "upper",
        "len",
        "guess",
        "guess",
        "already_guessed",
        "guess",
        "already_guessed",
        "len",
        "guess",
        "Prompt",
        "ask",
        "GUESS_STATEMENT",
        "upper",
        "already_guessed",
        "append",
        "guess",
        "check_guess",
        "guess",
        "chosen_word",
        "all_words_guessed",
        "append",
        "guessed",
        "full_wordle_pattern",
        "append",
        "pattern",
        "all_words_guessed",
        "sep",
        "guess",
        "chosen_word",
        "len",
        "already_guessed",
        "ALLOWED_GUESSES",
        "len",
        "already_guessed",
        "ALLOWED_GUESSES",
        "guess",
        "chosen_word",
        "ALLOWED_GUESSES",
        "chosen_word",
        "len",
        "already_guessed",
        "ALLOWED_GUESSES",
        "full_wordle_pattern",
        "sep",
        "choice",
        "word_list",
        "PLAYER_INSTRUCTIONS",
        "game",
        "chosen_word"
    ],
    "literals": [
        "f'\\n[white on blue] WELCOME TO WORDLE [/] \\n'",
        "\"You may start guessing\\n\"",
        "f\"\\n[white on blue] the number of allowed_guesses are {ALLOWED_GUESSES} [/] \\n\"",
        "\"\\nEnter your guess\"",
        "'correct_place'",
        "'ðŸŸ©'",
        "'correct_letter'",
        "'ðŸŸ¨'",
        "'incorrect_letter'",
        "'â¬›'",
        "f'[black on green]{letter}[/]'",
        "f'[black on yellow]{letter}[/]'",
        "f'[black on white]{letter}[/]'",
        "'correct_place'",
        "'correct_letter'",
        "'incorrect_letter'",
        "'incorrect_letter'",
        "''",
        "''",
        "\"[red]You've already guessed this word!!\\n[/]\"",
        "\"[red]TOO LONG!!! Please enter a 5-letter word!!\\n[/]\"",
        "\"[red]TOO SHORT!!! Please enter a 5-letter word!!\\n[/]\"",
        "\"\\n\"",
        "f\"\\n[red]WORDLE X/{ALLOWED_GUESSES}[/]\"",
        "f\"\\n[green]Correct Word: {chosen_word}[/]\"",
        "f\"\\n[green]WORDLE {len(already_guessed)}/{ALLOWED_GUESSES}[/]\\n\"",
        "\"\\n\"",
        "'__main__'",
        "f'{word_list}'"
    ],
    "variables": [
        "WELCOME_MESSAGE",
        "PLAYER_INSTRUCTIONS",
        "ALLOWED_GUESSES",
        "NUMBER_GUESSES",
        "GUESS_STATEMENT",
        "SQUARES",
        "guessed",
        "wordle_pattern",
        "end_of_game",
        "already_guessed",
        "full_wordle_pattern",
        "all_words_guessed",
        "guess",
        "guess",
        "guessed",
        "pattern",
        "end_of_game",
        "chosen_word"
    ],
    "comments": [
        "1Â°) part consists of importing modules like rich, random and",
        "the list of words from the file word.py we are going to use",
        "for the game",
        "2Â°) part, we implement the welcome message with a simple print",
        "The instruction \"You may start guessing\" is a simple invitation to",
        "start guessing and the number of allowed guesses are set",
        "We can add a print to inform the player about the number of allowed guesses",
        "3Â°) We invite the player to start the game",
        "4Â°) We Set the color of the squares which rely on each result given by the player's action",
        "5Â°) We define the rules of the game with the following functions :",
        "6Â°) We define the function which will check the action 'guess' of the player with the current attended 'answer'",
        "We set a list of guessed letters",
        "We set a list for the wordle pattern",
        "we set a loop to retrieve each value of letter in the guess action taken by the player with the enumerate method",
        "We define a set of conditions in the loop for each 'answer param' and guess param to ensure its correct place",
        "We increment the guessed letter accordingly with its correct place, and we append the wordle pattern list",
        "Followed by the condition 'elif the letter already exists' in the attended answer",
        "We increment the guessed letter accordingly with the correct letter",
        "Lastly we set the incorrectness of the action in the else",
        "Then, when the loop is over, we return the joined answer of the guessed letters and its resulting wordle pattern",
        "We define here the method to process the instructions of the game",
        "Here we have a set of variables to start and end the game and lists to retrieve",
        "the already_guessed letters, the full wordle pattern and the all words guessed",
        "from the instructions processed in the while loop",
        "we change here the guess statement in upper case",
        "We start a while loop with the following conditions:"
    ],
    "docstrings": [
        "\"\"\"\nTHE FOLLOWING CODE IS A LITTLE WORDLE PROGRAM\nA SIMPLE GAME MADE TO PRACTICE CODE IN PYTHON\n\"\"\""
    ],
    "functions": [
        "correct_place",
        "correct_letter",
        "incorrect_letter",
        "check_guess",
        "game"
    ],
    "classes": []
}