{
    "identifiers": [
        "numpy",
        "np",
        "Bio",
        "PDB",
        "PDBExceptions",
        "PDBException",
        "coords1",
        "coords2",
        "natoms",
        "np",
        "trace",
        "np",
        "dot",
        "coords2",
        "coords2",
        "T",
        "np",
        "trace",
        "np",
        "dot",
        "coords1",
        "coords1",
        "T",
        "np",
        "dot",
        "coords2",
        "T",
        "coords1",
        "G1",
        "G2",
        "A",
        "flatten",
        "Sxx",
        "Sxx",
        "Syy",
        "Syy",
        "Szz",
        "Szz",
        "Sxy",
        "Sxy",
        "Syz",
        "Syz",
        "Sxz",
        "Sxz",
        "Syx",
        "Syx",
        "Szy",
        "Szy",
        "Szx",
        "Szx",
        "Syz",
        "Szy",
        "Syy",
        "Szz",
        "Syy2",
        "Szz2",
        "Sxx2",
        "Syz2",
        "Szy2",
        "Sxx2",
        "Syy2",
        "Szz2",
        "Sxy2",
        "Syx2",
        "Sxz2",
        "Szx2",
        "Syz2",
        "Szy2",
        "Sxx",
        "Syz",
        "Szy",
        "Syy",
        "Szx",
        "Sxz",
        "Szz",
        "Sxy",
        "Syx",
        "Sxx",
        "Syy",
        "Szz",
        "Syz",
        "Szx",
        "Sxy",
        "Szy",
        "Syx",
        "Sxz",
        "Sxz",
        "Szx",
        "Syz",
        "Szy",
        "Sxy",
        "Syx",
        "Syz",
        "Szy",
        "Sxz",
        "Szx",
        "Sxy",
        "Syx",
        "Sxx",
        "Syy",
        "Sxx",
        "Syy",
        "Sxy2",
        "Sxz2",
        "Syx2",
        "Szx2",
        "SxzpSzx",
        "SxzmSzx",
        "SxymSyx",
        "SxxpSyy",
        "Szz",
        "Sxy2Sxz2Syx2Szx2",
        "Sxy2Sxz2Syx2Szx2",
        "Sxx2Syy2Szz2Syz2Szy2",
        "SyzSzymSyySzz2",
        "Sxx2Syy2Szz2Syz2Szy2",
        "SyzSzymSyySzz2",
        "negSxzpSzx",
        "SyzmSzy",
        "SxymSyx",
        "SxxmSyy",
        "Szz",
        "negSxzmSzx",
        "SyzpSzy",
        "SxymSyx",
        "SxxmSyy",
        "Szz",
        "negSxzpSzx",
        "SyzpSzy",
        "SxypSyx",
        "SxxpSyy",
        "Szz",
        "negSxzmSzx",
        "SyzmSzy",
        "SxypSyx",
        "SxxpSyy_p_Szz",
        "SxypSyx",
        "SyzpSzy",
        "SxzpSzx",
        "SxxmSyy",
        "Szz",
        "negSxymSyx",
        "SyzmSzy",
        "SxzpSzx",
        "SxxpSyy_p_Szz",
        "SxypSyx",
        "SyzmSzy",
        "SxzmSzx",
        "SxxmSyy",
        "Szz",
        "negSxymSyx",
        "SyzpSzy",
        "SxzmSzx",
        "SxxpSyy",
        "Szz",
        "E0",
        "_",
        "nr_it",
        "mxEigenV",
        "mxEigenV",
        "mxEigenV",
        "x2",
        "C2",
        "mxEigenV",
        "b",
        "C1",
        "a",
        "mxEigenV",
        "C0",
        "x2",
        "mxEigenV",
        "b",
        "a",
        "mxEigenV",
        "delta",
        "abs",
        "mxEigenV",
        "oldg",
        "abs",
        "evalprec",
        "mxEigenV",
        "nr_it",
        "abs",
        "E0",
        "mxEigenV",
        "natoms",
        "SxxpSyy",
        "Szz",
        "mxEigenV",
        "SyzmSzy",
        "negSxzmSzx",
        "SxymSyx",
        "SyzmSzy",
        "SxxmSyy",
        "Szz",
        "mxEigenV",
        "SxypSyx",
        "SxzpSzx",
        "a13",
        "a23",
        "Syy",
        "Sxx",
        "Szz",
        "mxEigenV",
        "SyzpSzy",
        "a14",
        "a24",
        "a34",
        "Szz",
        "SxxpSyy",
        "mxEigenV",
        "a33",
        "a44",
        "a43",
        "a34",
        "a32",
        "a44",
        "a42",
        "a34",
        "a32",
        "a43",
        "a42",
        "a33",
        "a31",
        "a43",
        "a41",
        "a33",
        "a31",
        "a44",
        "a41",
        "a34",
        "a31",
        "a42",
        "a41",
        "a32",
        "a22",
        "a3344_4334",
        "a23",
        "a3244_4234",
        "a24",
        "a3243_4233",
        "a21",
        "a3344_4334",
        "a23",
        "a3144_4134",
        "a24",
        "a3143_4133",
        "a21",
        "a3244_4234",
        "a22",
        "a3144_4134",
        "a24",
        "a3142_4132",
        "a21",
        "a3243_4233",
        "a22",
        "a3143_4133",
        "a23",
        "a3142_4132",
        "q1",
        "q1",
        "q2",
        "q2",
        "q3",
        "q3",
        "q4",
        "q4",
        "qsqr",
        "evecprec",
        "a12",
        "a3344_4334",
        "a13",
        "a3244_4234",
        "a14",
        "a3243_4233",
        "a11",
        "a3344_4334",
        "a13",
        "a3144_4134",
        "a14",
        "a3143_4133",
        "a11",
        "a3244_4234",
        "a12",
        "a3144_4134",
        "a14",
        "a3142_4132",
        "a11",
        "a3243_4233",
        "a12",
        "a3143_4133",
        "a13",
        "a3142_4132",
        "q1",
        "q1",
        "q2",
        "q2",
        "q3",
        "q3",
        "q4",
        "q4",
        "qsqr",
        "evecprec",
        "a13",
        "a24",
        "a14",
        "a23",
        "a12",
        "a24",
        "a14",
        "a22",
        "a12",
        "a23",
        "a13",
        "a22",
        "a11",
        "a24",
        "a14",
        "a21",
        "a11",
        "a23",
        "a13",
        "a21",
        "a11",
        "a22",
        "a12",
        "a21",
        "a42",
        "a1324_1423",
        "a43",
        "a1224_1422",
        "a44",
        "a1223_1322",
        "a41",
        "a1324_1423",
        "a43",
        "a1124_1421",
        "a44",
        "a1123_1321",
        "a41",
        "a1224_1422",
        "a42",
        "a1124_1421",
        "a44",
        "a1122_1221",
        "a41",
        "a1223_1322",
        "a42",
        "a1123_1321",
        "a43",
        "a1122_1221",
        "q1",
        "q1",
        "q2",
        "q2",
        "q3",
        "q3",
        "q4",
        "q4",
        "qsqr",
        "evecprec",
        "a32",
        "a1324_1423",
        "a33",
        "a1224_1422",
        "a34",
        "a1223_1322",
        "a31",
        "a1324_1423",
        "a33",
        "a1124_1421",
        "a34",
        "a1123_1321",
        "a31",
        "a1224_1422",
        "a32",
        "a1124_1421",
        "a34",
        "a1122_1221",
        "a31",
        "a1223_1322",
        "a32",
        "a1123_1321",
        "a33",
        "a1122_1221",
        "q1",
        "q1",
        "q2",
        "q2",
        "q3",
        "q3",
        "q4",
        "q4",
        "qsqr",
        "evecprec",
        "np",
        "eye",
        "rmsd",
        "rot",
        "q1",
        "q2",
        "q3",
        "q4",
        "qsqr",
        "q1",
        "normq",
        "q2",
        "normq",
        "q3",
        "normq",
        "q4",
        "normq",
        "q1",
        "q1",
        "q2",
        "q2",
        "q3",
        "q3",
        "q4",
        "q4",
        "q2",
        "q3",
        "q1",
        "q4",
        "q4",
        "q2",
        "q1",
        "q3",
        "q3",
        "q4",
        "q1",
        "q2",
        "np",
        "zeros",
        "rot",
        "a2",
        "x2",
        "y2",
        "z2",
        "rot",
        "xy",
        "az",
        "rot",
        "zx",
        "ay",
        "rot",
        "xy",
        "az",
        "rot",
        "a2",
        "x2",
        "y2",
        "z2",
        "rot",
        "yz",
        "ax",
        "rot",
        "zx",
        "ay",
        "rot",
        "yz",
        "ax",
        "rot",
        "a2",
        "x2",
        "y2",
        "z2",
        "rmsd",
        "rot",
        "q1",
        "q2",
        "q3",
        "q4",
        "_reset_properties",
        "moving",
        "len",
        "len",
        "moving",
        "np",
        "array",
        "a",
        "get_coord",
        "a",
        "dtype",
        "np",
        "float64",
        "np",
        "array",
        "a",
        "get_coord",
        "a",
        "moving",
        "dtype",
        "np",
        "float64",
        "fix_coord",
        "mov_coord",
        "run",
        "get_rms",
        "get_rotran",
        "atom_list",
        "rotran",
        "PDBException",
        "rotran",
        "atom",
        "atom_list",
        "atom",
        "transform",
        "rot",
        "tran",
        "reference_coords",
        "coords",
        "_reset_properties",
        "reference_coords",
        "coords",
        "_natoms",
        "coords",
        "shape",
        "reference_coords",
        "shape",
        "coords",
        "shape",
        "PDBException",
        "n_dim",
        "PDBException",
        "coords",
        "reference_coords",
        "PDBException",
        "coords",
        "copy",
        "reference_coords",
        "copy",
        "np",
        "mean",
        "coords",
        "axis",
        "np",
        "mean",
        "coords_ref",
        "axis",
        "coords",
        "com1",
        "coords_ref",
        "com2",
        "rms",
        "rot",
        "lquart",
        "qcp",
        "coords_ref",
        "coords",
        "_natoms",
        "com2",
        "np",
        "dot",
        "com1",
        "rot",
        "coords",
        "reference_coords",
        "PDBException",
        "rot",
        "PDBException",
        "np",
        "dot",
        "coords",
        "rot",
        "tran",
        "transformed_coords",
        "rot",
        "PDBException",
        "rot",
        "tran",
        "coords",
        "PDBException",
        "init_rms",
        "coords",
        "reference_coords",
        "np",
        "sqrt",
        "np",
        "sum",
        "np",
        "dot",
        "diff",
        "diff",
        "axis",
        "_natoms",
        "init_rms",
        "rms",
        "PDBException",
        "rms"
    ],
    "literals": [
        "f\"Newton-Rhapson did not converge after {nr_it} iterations\"",
        "\"Fixed and moving atom lists differ in size\"",
        "\"No transformation has been calculated yet\"",
        "\"Coordinates must have the same dimensions.\"",
        "\"Coordinates must be Nx3 arrays.\"",
        "\"No coordinates set.\"",
        "\"No coordinates set.\"",
        "\"Nothing is superimposed yet.\"",
        "\"Nothing is superimposed yet.\"",
        "\"No coordinates set yet.\"",
        "\"Nothing superimposed yet.\""
    ],
    "variables": [
        "G1",
        "G2",
        "A",
        "E0",
        "Sxx",
        "Sxy",
        "Sxz",
        "Syx",
        "Syy",
        "Syz",
        "Szx",
        "Szy",
        "Szz",
        "Sxx2",
        "Syy2",
        "Szz2",
        "Sxy2",
        "Syz2",
        "Sxz2",
        "Syx2",
        "Szy2",
        "Szx2",
        "SyzSzymSyySzz2",
        "Sxx2Syy2Szz2Syz2Szy2",
        "C2",
        "C1",
        "SxzpSzx",
        "SyzpSzy",
        "SxypSyx",
        "SyzmSzy",
        "SxzmSzx",
        "SxymSyx",
        "SxxpSyy",
        "SxxmSyy",
        "Sxy2Sxz2Syx2Szx2",
        "negSxzpSzx",
        "negSxzmSzx",
        "negSxymSyx",
        "SxxpSyy_p_Szz",
        "C0",
        "nr_it",
        "mxEigenV",
        "evalprec",
        "oldg",
        "x2",
        "b",
        "a",
        "delta",
        "rmsd",
        "a11",
        "a12",
        "a13",
        "a14",
        "a21",
        "a22",
        "a23",
        "a24",
        "a31",
        "a32",
        "a33",
        "a34",
        "a41",
        "a42",
        "a43",
        "a44",
        "a3344_4334",
        "a3244_4234",
        "a3243_4233",
        "a3143_4133",
        "a3144_4134",
        "a3142_4132",
        "q1",
        "q2",
        "q3",
        "q4",
        "qsqr",
        "evecprec",
        "q1",
        "q2",
        "q3",
        "q4",
        "qsqr",
        "a1324_1423",
        "a1224_1422",
        "a1223_1322",
        "a1124_1421",
        "a1123_1321",
        "a1122_1221",
        "q1",
        "q2",
        "q3",
        "q4",
        "qsqr",
        "q1",
        "q2",
        "q3",
        "q4",
        "qsqr",
        "rot",
        "normq",
        "a2",
        "x2",
        "y2",
        "z2",
        "xy",
        "az",
        "zx",
        "ay",
        "yz",
        "ax",
        "rot",
        "reference_coords",
        "coords",
        "transformed_coords",
        "rot",
        "tran",
        "rms",
        "init_rms",
        "fix_coord",
        "mov_coord",
        "rms",
        "rotran",
        "rot",
        "tran",
        "reference_coords",
        "coords",
        "n_dim",
        "coords",
        "coords_ref",
        "com1",
        "com2",
        "tran",
        "transformed_coords",
        "diff",
        "init_rms"
    ],
    "comments": [
        "Copyright (C) 2022, Joao Rodrigues (j.p.g.l.m.rodrigues@gmail.com",
        "Anuj Sharma (anuj.sharma80@gmail.com)",
        "",
        "This file is part of the Biopython distribution and governed by your",
        "choice of the \"Biopython License Agreement\" or the \"BSD 3-Clause License\".",
        "Please see the LICENSE file that should have been included as part of this",
        "package.",
        "Original code has coords1 be the mobile. I think it makes more sense",
        "for it to be the reference, so I swapped here.",
        "referred to as M in the original paper.",
        "Newton-Rhapson",
        "Original paper mentions 5 iterations are sufficient (on average)",
        "for convergence up to 10^-6 precision but original code writes 50.",
        "I guess for robustness.",
        "The original code has a guard if minScore > 0 and rmsd < minScore, although",
        "the default value of minScore is -1. For simplicity, we ignore that check.",
        "Transposed rotation matrix.",
        "Private methods",
        "Public methods",
        "Grab coordinates in double precision",
        "Low(er) level functions",
        "store coordinates",
        "Center Coordinates",
        "Getters"
    ],
    "docstrings": [
        "\"\"\"Structural alignment using Quaternion Characteristic Polynomial (QCP).\n\nQCPSuperimposer finds the best rotation and translation to put\ntwo point sets on top of each other (minimizing the RMSD). This is\neg. useful to superimpose crystal structures. QCP stands for\nQuaternion Characteristic Polynomial, which is used in the algorithm.\n\nAlgorithm and original code described in:\n\nTheobald DL.\nRapid calculation of RMSDs using a quaternion-based characteristic polynomial.\nActa Crystallogr A. 2005 Jul;61(Pt 4):478-80. doi: 10.1107/S0108767305015266.\nEpub 2005 Jun 23. PMID: 15973002.\n\"\"\"",
        "\"\"\"Implementats of the QCP code in Python.\n\n    Input coordinate arrays must be centered at the origin and have\n    shape Nx3.\n\n    Variable names match (as much as possible) the C implementation.\n    \"\"\"",
        "\"\"\"Quaternion Characteristic Polynomial (QCP) Superimposer.\n\n    QCPSuperimposer finds the best rotation and translation to put\n    two point sets on top of each other (minimizing the RMSD). This is\n    eg. useful to superimposing 3D structures of proteins.\n\n    QCP stands for Quaternion Characteristic Polynomial, which is used\n    in the algorithm.\n\n    Reference:\n\n    Douglas L Theobald (2005), \"Rapid calculation of RMSDs using a\n    quaternion-based characteristic polynomial.\", Acta Crystallogr\n    A 61(4):478-480\n    \"\"\"",
        "\"\"\"Initialize the class.\"\"\"",
        "\"\"\"Reset all relevant properties to None to avoid conflicts between runs.\"\"\"",
        "\"\"\"Prepare alignment between two atom lists.\n\n        Put (translate/rotate) the atoms in fixed on the atoms in\n        moving, in such a way that the RMSD is minimized.\n\n        :param fixed: list of (fixed) atoms\n        :param moving: list of (moving) atoms\n        :type fixed,moving: [L{Atom}, L{Atom},...]\n        \"\"\"",
        "\"\"\"Apply the QCP rotation matrix/translation vector to a set of atoms.\"\"\"",
        "\"\"\"Set the coordinates to be superimposed.\n\n        coords will be put on top of reference_coords.\n\n        - reference_coords: an NxDIM array\n        - coords: an NxDIM array\n\n        DIM is the dimension of the points, N is the number\n        of points to be superimposed.\n        \"\"\"",
        "\"\"\"Superimpose the coordinate sets.\"\"\"",
        "\"\"\"Get the transformed coordinate set.\"\"\"",
        "\"\"\"Return right multiplying rotation matrix and translation vector.\"\"\"",
        "\"\"\"Return the root mean square deviation of untransformed coordinates.\"\"\"",
        "\"\"\"Root mean square deviation of superimposed coordinates.\"\"\""
    ],
    "functions": [
        "qcp",
        "_reset_properties",
        "set_atoms",
        "apply",
        "run",
        "get_transformed",
        "get_rotran",
        "get_init_rms",
        "get_rms"
    ],
    "classes": [
        "QCPSuperimposer"
    ]
}