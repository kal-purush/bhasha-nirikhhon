{
    "identifiers": [
        "asyncio",
        "logging",
        "pathlib",
        "Path",
        "pytest",
        "yaml",
        "helpers",
        "is_alertmanager_up",
        "pytest_operator",
        "plugin",
        "OpsTest",
        "logging",
        "getLogger",
        "yaml",
        "safe_load",
        "Path",
        "read_text",
        "METADATA",
        "METADATA",
        "pytest",
        "mark",
        "abort_on_fail",
        "ops_test",
        "OpsTest",
        "ops_test",
        "model",
        "set_config",
        "pytest",
        "mark",
        "abort_on_fail",
        "ops_test",
        "OpsTest",
        "charm_under_test",
        "logger",
        "info",
        "logger",
        "info",
        "asyncio",
        "gather",
        "ops_test",
        "model",
        "deploy",
        "charm_under_test",
        "application_name",
        "app_name",
        "resources",
        "resources",
        "num_units",
        "ops_test",
        "model",
        "deploy",
        "application_name",
        "channel",
        "asyncio",
        "gather",
        "ops_test",
        "model",
        "add_relation",
        "app_name",
        "ops_test",
        "model",
        "wait_for_idle",
        "status",
        "timeout",
        "is_alertmanager_up",
        "ops_test",
        "app_name",
        "pytest",
        "mark",
        "abort_on_fail",
        "ops_test",
        "OpsTest",
        "ops_test",
        "model",
        "applications",
        "remove",
        "ops_test",
        "model",
        "block_until",
        "ops_test",
        "model",
        "applications",
        "ops_test",
        "model",
        "wait_for_idle",
        "apps",
        "app_name",
        "status",
        "timeout",
        "is_alertmanager_up",
        "ops_test",
        "app_name",
        "pytest",
        "mark",
        "abort_on_fail",
        "ops_test",
        "OpsTest",
        "asyncio",
        "sleep",
        "ops_test",
        "model",
        "set_config",
        "ops_test",
        "model",
        "wait_for_idle",
        "apps",
        "app_name",
        "status",
        "timeout"
    ],
    "literals": [
        "\"./metadata.yaml\"",
        "\"name\"",
        "\"alertmanager-image\"",
        "\"resources\"",
        "\"alertmanager-image\"",
        "\"upstream-source\"",
        "\"update-status-hook-interval\"",
        "\"10s\"",
        "\"logging-config\"",
        "\"<root>=WARNING; unit=DEBUG\"",
        "\"build charm from local source folder\"",
        "\"deploy charms\"",
        "\"ch:prometheus-k8s\"",
        "\"prom\"",
        "\"edge\"",
        "\"prom\"",
        "\"active\"",
        "\"prom\"",
        "\"prom\"",
        "\"active\"",
        "\"update-status-hook-interval\"",
        "\"60m\"",
        "\"active\""
    ],
    "variables": [
        "logger",
        "METADATA",
        "app_name",
        "resources"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Copyright 2021 Canonical Ltd.",
        "See LICENSE file for licensing details.",
        "Block until it is really gone. Added after an itest failed when tried to redeploy:",
        "juju.errors.JujuError: ['cannot add application \"related-app\": application already exists']",
        "should be longer than the update-status period",
        "\"Disable\" update-status so the charm gets a chance to become idle for long enough for",
        "wait_for_idle to succeed"
    ],
    "docstrings": [
        "\"\"\"This test module tests common lifecycle behaviors under frequent update-status hook firing.\n\n0. Set update-status frequency to the minimum possible\n1. Deploys and relate the charm-under-test\n2. Remove related app(s)\n\"\"\"",
        "\"\"\"Deploy the charm-under-test.\"\"\""
    ],
    "functions": [
        "test_setup_env",
        "test_deploy_multiple_units",
        "test_remove_related_app",
        "test_wait_through_a_few_update_status_cycles"
    ],
    "classes": []
}