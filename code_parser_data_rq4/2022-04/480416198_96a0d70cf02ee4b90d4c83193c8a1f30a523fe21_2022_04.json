{
    "identifiers": [
        "argparse",
        "os",
        "sys",
        "pathlib",
        "Path",
        "torch",
        "torch",
        "backends",
        "cudnn",
        "cudnn",
        "Path",
        "resolve",
        "FILE",
        "parents",
        "ROOT",
        "sys",
        "path",
        "sys",
        "path",
        "append",
        "ROOT",
        "Path",
        "os",
        "path",
        "relpath",
        "ROOT",
        "Path",
        "cwd",
        "models",
        "common",
        "DetectMultiBackend",
        "utils",
        "datasets",
        "IMG_FORMATS",
        "VID_FORMATS",
        "LoadImages",
        "LoadStreams",
        "utils",
        "general",
        "LOGGER",
        "check_file",
        "check_img_size",
        "check_imshow",
        "check_requirements",
        "colorstr",
        "cv2",
        "increment_path",
        "non_max_suppression",
        "print_args",
        "scale_coords",
        "strip_optimizer",
        "xyxy2xywh",
        "utils",
        "plots",
        "Annotator",
        "colors",
        "save_one_box",
        "utils",
        "torch_utils",
        "select_device",
        "time_sync",
        "torch",
        "no_grad",
        "weights",
        "ROOT",
        "source",
        "ROOT",
        "data",
        "ROOT",
        "imgsz",
        "conf_thres",
        "iou_thres",
        "max_det",
        "device",
        "view_img",
        "save_txt",
        "save_conf",
        "save_crop",
        "nosave",
        "classes",
        "agnostic_nms",
        "augment",
        "visualize",
        "update",
        "project",
        "ROOT",
        "name",
        "exist_ok",
        "line_thickness",
        "hide_labels",
        "hide_conf",
        "half",
        "dnn",
        "source",
        "nosave",
        "source",
        "endswith",
        "Path",
        "source",
        "suffix",
        "IMG_FORMATS",
        "VID_FORMATS",
        "source",
        "lower",
        "startswith",
        "source",
        "isnumeric",
        "source",
        "endswith",
        "is_url",
        "is_file",
        "is_url",
        "is_file",
        "check_file",
        "source",
        "increment_path",
        "Path",
        "project",
        "name",
        "exist_ok",
        "exist_ok",
        "save_dir",
        "save_txt",
        "save_dir",
        "mkdir",
        "parents",
        "exist_ok",
        "select_device",
        "device",
        "DetectMultiBackend",
        "weights",
        "device",
        "device",
        "dnn",
        "dnn",
        "data",
        "data",
        "fp16",
        "half",
        "model",
        "stride",
        "model",
        "names",
        "model",
        "pt",
        "check_img_size",
        "imgsz",
        "s",
        "stride",
        "webcam",
        "check_imshow",
        "LoadStreams",
        "source",
        "img_size",
        "imgsz",
        "stride",
        "stride",
        "auto",
        "pt",
        "len",
        "dataset",
        "LoadImages",
        "source",
        "img_size",
        "imgsz",
        "stride",
        "stride",
        "auto",
        "pt",
        "bs",
        "bs",
        "model",
        "warmup",
        "imgsz",
        "pt",
        "bs",
        "imgsz",
        "path",
        "im",
        "im0s",
        "vid_cap",
        "s",
        "dataset",
        "time_sync",
        "torch",
        "from_numpy",
        "im",
        "to",
        "device",
        "im",
        "half",
        "model",
        "fp16",
        "im",
        "im",
        "len",
        "im",
        "shape",
        "im",
        "time_sync",
        "dt",
        "t2",
        "t1",
        "increment_path",
        "save_dir",
        "Path",
        "path",
        "stem",
        "mkdir",
        "visualize",
        "model",
        "im",
        "augment",
        "augment",
        "visualize",
        "visualize",
        "time_sync",
        "dt",
        "t3",
        "t2",
        "non_max_suppression",
        "pred",
        "conf_thres",
        "iou_thres",
        "classes",
        "agnostic_nms",
        "max_det",
        "max_det",
        "dt",
        "time_sync",
        "t3",
        "i",
        "det",
        "pred",
        "seen",
        "webcam",
        "path",
        "i",
        "im0s",
        "i",
        "copy",
        "dataset",
        "count",
        "s",
        "i",
        "path",
        "im0s",
        "copy",
        "getattr",
        "dataset",
        "Path",
        "p",
        "save_dir",
        "p",
        "name",
        "save_dir",
        "p",
        "stem",
        "dataset",
        "mode",
        "frame",
        "s",
        "im",
        "shape",
        "torch",
        "tensor",
        "im0",
        "shape",
        "im0",
        "copy",
        "save_crop",
        "im0",
        "Annotator",
        "im0",
        "line_width",
        "line_thickness",
        "example",
        "names",
        "len",
        "det",
        "scale_coords",
        "im",
        "shape",
        "det",
        "im0",
        "shape",
        "round",
        "c",
        "det",
        "unique",
        "det",
        "c",
        "sum",
        "s",
        "n",
        "names",
        "c",
        "n",
        "xyxy",
        "conf",
        "cls",
        "reversed",
        "det",
        "save_txt",
        "xyxy2xywh",
        "torch",
        "tensor",
        "xyxy",
        "view",
        "gn",
        "view",
        "tolist",
        "cls",
        "xywh",
        "conf",
        "save_conf",
        "cls",
        "xywh",
        "open",
        "txt_path",
        "f",
        "f",
        "write",
        "len",
        "line",
        "rstrip",
        "line",
        "save_img",
        "save_crop",
        "view_img",
        "cls",
        "hide_labels",
        "names",
        "c",
        "hide_conf",
        "names",
        "c",
        "conf",
        "annotator",
        "box_label",
        "xyxy",
        "label",
        "color",
        "colors",
        "c",
        "save_crop",
        "save_one_box",
        "xyxy",
        "imc",
        "file",
        "save_dir",
        "names",
        "c",
        "p",
        "stem",
        "BGR",
        "annotator",
        "result",
        "view_img",
        "cv2",
        "imshow",
        "p",
        "im0",
        "cv2",
        "waitKey",
        "save_img",
        "dataset",
        "mode",
        "cv2",
        "imwrite",
        "save_path",
        "im0",
        "vid_path",
        "i",
        "save_path",
        "save_path",
        "isinstance",
        "vid_writer",
        "i",
        "cv2",
        "VideoWriter",
        "vid_writer",
        "i",
        "release",
        "vid_cap",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FPS",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FRAME_WIDTH",
        "vid_cap",
        "get",
        "cv2",
        "CAP_PROP_FRAME_HEIGHT",
        "im0",
        "shape",
        "im0",
        "shape",
        "Path",
        "save_path",
        "with_suffix",
        "cv2",
        "VideoWriter",
        "save_path",
        "cv2",
        "VideoWriter_fourcc",
        "fps",
        "w",
        "h",
        "vid_writer",
        "i",
        "write",
        "im0",
        "LOGGER",
        "info",
        "s",
        "t3",
        "t2",
        "x",
        "seen",
        "x",
        "dt",
        "LOGGER",
        "info",
        "imgsz",
        "t",
        "save_txt",
        "save_img",
        "len",
        "save_dir",
        "glob",
        "save_dir",
        "save_txt",
        "LOGGER",
        "info",
        "colorstr",
        "save_dir",
        "s",
        "update",
        "strip_optimizer",
        "weights",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "nargs",
        "ROOT",
        "help",
        "parser",
        "add_argument",
        "ROOT",
        "help",
        "parser",
        "add_argument",
        "ROOT",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "ROOT",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "opt",
        "imgsz",
        "len",
        "opt",
        "imgsz",
        "print_args",
        "vars",
        "opt",
        "opt",
        "opt",
        "check_requirements",
        "exclude",
        "run",
        "vars",
        "opt",
        "parse_opt",
        "main",
        "opt"
    ],
    "literals": [
        "'yolov5s.pt'",
        "'data/images'",
        "'data/coco128.yaml'",
        "''",
        "'runs/detect'",
        "'exp'",
        "'.txt'",
        "'rtsp://'",
        "'rtmp://'",
        "'http://'",
        "'https://'",
        "'.txt'",
        "'labels'",
        "f'{i}: '",
        "'frame'",
        "'labels'",
        "''",
        "'image'",
        "f'_{frame}'",
        "'%gx%g '",
        "f\"{n} {names[int(c)]}{'s' * (n > 1)}, \"",
        "'s'",
        "'.txt'",
        "'a'",
        "'%g '",
        "'\\n'",
        "f'{names[c]} {conf:.2f}'",
        "'crops'",
        "f'{p.stem}.jpg'",
        "'image'",
        "'.mp4'",
        "'mp4v'",
        "f'{s}Done. ({t3 - t2:.3f}s)'",
        "f'Speed: %.1fms pre-process, %.1fms inference, %.1fms NMS per image at shape {(1, 3, *imgsz)}'",
        "f\"\\n{len(list(save_dir.glob('labels/*.txt')))} labels saved to {save_dir / 'labels'}\"",
        "'labels/*.txt'",
        "'labels'",
        "''",
        "f\"Results saved to {colorstr('bold', save_dir)}{s}\"",
        "'bold'",
        "'--weights'",
        "'+'",
        "'yolov5s.pt'",
        "'model path(s)'",
        "'--source'",
        "'data/images'",
        "'file/dir/URL/glob, 0 for webcam'",
        "'--data'",
        "'data/coco128.yaml'",
        "'(optional) dataset.yaml path'",
        "'--imgsz'",
        "'--img'",
        "'--img-size'",
        "'+'",
        "'inference size h,w'",
        "'--conf-thres'",
        "'confidence threshold'",
        "'--iou-thres'",
        "'NMS IoU threshold'",
        "'--max-det'",
        "'maximum detections per image'",
        "'--device'",
        "''",
        "'cuda device, i.e. 0 or 0,1,2,3 or cpu'",
        "'--view-img'",
        "'store_true'",
        "'show results'",
        "'--save-txt'",
        "'store_true'",
        "'save results to *.txt'",
        "'--save-conf'",
        "'store_true'",
        "'save confidences in --save-txt labels'",
        "'--save-crop'",
        "'store_true'",
        "'save cropped prediction boxes'",
        "'--nosave'",
        "'store_true'",
        "'do not save images/videos'",
        "'--classes'",
        "'+'",
        "'filter by class: --classes 0, or --classes 0 2 3'",
        "'--agnostic-nms'",
        "'store_true'",
        "'class-agnostic NMS'",
        "'--augment'",
        "'store_true'",
        "'augmented inference'",
        "'--visualize'",
        "'store_true'",
        "'visualize features'",
        "'--update'",
        "'store_true'",
        "'update all models'",
        "'--project'",
        "'runs/detect'",
        "'save results to project/name'",
        "'--name'",
        "'exp'",
        "'save results to project/name'",
        "'--exist-ok'",
        "'store_true'",
        "'existing project/name ok, do not increment'",
        "'--line-thickness'",
        "'bounding box thickness (pixels)'",
        "'--hide-labels'",
        "'store_true'",
        "'hide labels'",
        "'--hide-conf'",
        "'store_true'",
        "'hide confidences'",
        "'--half'",
        "'store_true'",
        "'use FP16 half-precision inference'",
        "'--dnn'",
        "'store_true'",
        "'use OpenCV DNN for ONNX inference'",
        "'tensorboard'",
        "'thop'",
        "\"__main__\""
    ],
    "variables": [
        "FILE",
        "ROOT",
        "ROOT",
        "source",
        "save_img",
        "is_file",
        "is_url",
        "webcam",
        "source",
        "save_dir",
        "device",
        "model",
        "stride",
        "names",
        "pt",
        "imgsz",
        "view_img",
        "cudnn",
        "benchmark",
        "dataset",
        "bs",
        "dataset",
        "bs",
        "vid_path",
        "vid_writer",
        "dt",
        "seen",
        "t1",
        "im",
        "im",
        "im",
        "t2",
        "visualize",
        "pred",
        "t3",
        "pred",
        "p",
        "im0",
        "frame",
        "p",
        "im0",
        "frame",
        "p",
        "save_path",
        "txt_path",
        "gn",
        "imc",
        "annotator",
        "det",
        "n",
        "xywh",
        "line",
        "c",
        "label",
        "im0",
        "vid_path",
        "i",
        "fps",
        "w",
        "h",
        "fps",
        "w",
        "h",
        "save_path",
        "vid_writer",
        "i",
        "t",
        "s",
        "parser",
        "opt",
        "opt"
    ],
    "comments": [
        "YOLOv5 🚀 by Ultralytics, GPL-3.0 license",
        "YOLOv5 root directory",
        "add ROOT to PATH",
        "relative",
        "model.pt path(s)",
        "file/dir/URL/glob, 0 for webcam",
        "dataset.yaml path",
        "inference size (height, width)",
        "confidence threshold",
        "NMS IOU threshold",
        "maximum detections per image",
        "cuda device, i.e. 0 or 0,1,2,3 or cpu",
        "show results",
        "save results to *.txt",
        "save confidences in --save-txt labels",
        "save cropped prediction boxes",
        "do not save images/videos",
        "filter by class: --class 0, or --class 0 2 3",
        "class-agnostic NMS",
        "augmented inference",
        "visualize features",
        "update all models",
        "save results to project/name",
        "save results to project/name",
        "existing project/name ok, do not increment",
        "bounding box thickness (pixels)",
        "hide labels",
        "hide confidences",
        "use FP16 half-precision inference",
        "use OpenCV DNN for ONNX inference",
        "save inference images",
        "download",
        "Directories",
        "increment run",
        "make dir",
        "Load model",
        "check image size",
        "Dataloader",
        "set True to speed up constant image size inference",
        "batch_size",
        "batch_size",
        "Run inference",
        "warmup",
        "uint8 to fp16/32",
        "0 - 255 to 0.0 - 1.0",
        "expand for batch dim",
        "Inference",
        "NMS",
        "Second-stage classifier (optional)",
        "pred = utils.general.apply_classifier(pred, classifier_model, im, im0s)",
        "Process predictions",
        "per image",
        "batch_size >= 1",
        "to Path",
        "im.jpg",
        "im.txt",
        "print string",
        "normalization gain whwh",
        "for save_crop",
        "Rescale boxes from img_size to im0 size",
        "Print results",
        "detections per class",
        "add to string",
        "Write results",
        "Write to file",
        "normalized xywh",
        "label format",
        "Add bbox to image",
        "integer class",
        "Stream results",
        "1 millisecond",
        "Save results (image with detections)",
        "'video' or 'stream'",
        "new video",
        "release previous video writer",
        "video",
        "stream",
        "force *.mp4 suffix on results videos",
        "Print time (inference-only)",
        "Print results",
        "speeds per image",
        "update model (to fix SourceChangeWarning)",
        "expand"
    ],
    "docstrings": [
        "\"\"\"\nRun inference on images, videos, directories, streams, etc.\n\nUsage - sources:\n    $ python path/to/detect.py --weights yolov5s.pt --source 0              # webcam\n                                                             img.jpg        # image\n                                                             vid.mp4        # video\n                                                             path/          # directory\n                                                             path/*.jpg     # glob\n                                                             'https://youtu.be/Zgi9g1ksQHc'  # YouTube\n                                                             'rtsp://example.com/media.mp4'  # RTSP, RTMP, HTTP stream\n\nUsage - formats:\n    $ python path/to/detect.py --weights yolov5s.pt                 # PyTorch\n                                         yolov5s.torchscript        # TorchScript\n                                         yolov5s.onnx               # ONNX Runtime or OpenCV DNN with --dnn\n                                         yolov5s.xml                # OpenVINO\n                                         yolov5s.engine             # TensorRT\n                                         yolov5s.mlmodel            # CoreML (MacOS-only)\n                                         yolov5s_saved_model        # TensorFlow SavedModel\n                                         yolov5s.pb                 # TensorFlow GraphDef\n                                         yolov5s.tflite             # TensorFlow Lite\n                                         yolov5s_edgetpu.tflite     # TensorFlow Edge TPU\n\"\"\""
    ],
    "functions": [
        "run",
        "parse_opt",
        "main"
    ],
    "classes": []
}