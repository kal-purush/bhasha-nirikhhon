{
    "identifiers": [
        "annotations",
        "BaseEstimator",
        "numpy",
        "np",
        "itertools",
        "product",
        "BaseEstimator",
        "DecisionStump",
        "threshold_",
        "j_",
        "sign_",
        "X",
        "np",
        "ndarray",
        "y",
        "np",
        "ndarray",
        "DecisionStump",
        "np",
        "inf",
        "j",
        "sign",
        "product",
        "X",
        "shape",
        "_find_threshold",
        "X",
        "j",
        "y",
        "sign",
        "thr_err",
        "err",
        "threshold_",
        "j_",
        "sign_",
        "thr",
        "j",
        "sign",
        "thr_err",
        "X",
        "np",
        "ndarray",
        "np",
        "ndarray",
        "np",
        "where",
        "X",
        "j_",
        "threshold_",
        "sign_",
        "sign_",
        "values",
        "np",
        "ndarray",
        "labels",
        "np",
        "ndarray",
        "sign",
        "np",
        "inf",
        "v",
        "values",
        "np",
        "mean",
        "np",
        "sign",
        "labels",
        "np",
        "where",
        "values",
        "v",
        "sign",
        "sign",
        "err",
        "thr_err",
        "v",
        "err",
        "thr",
        "thr_err",
        "X",
        "np",
        "ndarray",
        "y",
        "np",
        "ndarray",
        "metrics",
        "misclassification_error",
        "misclassification_error",
        "y_true",
        "y",
        "y_pred",
        "_predict",
        "X"
    ],
    "literals": [],
    "variables": [
        "err",
        "thr",
        "thr_err",
        "err",
        "thr",
        "thr_err",
        "err",
        "thr",
        "thr_err"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    A decision stump classifier for {-1,1} labels according to the CART algorithm\n\n    Attributes\n    ----------\n    self.threshold_ : float\n        The threshold by which the data is split\n\n    self.j_ : int\n        The index of the feature by which to split the data\n\n    self.sign_: int\n        The label to predict for samples where the value of the j'th feature is about the threshold\n    \"\"\"",
        "\"\"\"\n        Instantiate a Decision stump classifier\n        \"\"\"",
        "\"\"\"\n        fits a decision stump to the given data\n\n        Parameters\n        ----------\n        X : ndarray of shape (n_samples, n_features)\n            Input data to fit an estimator for\n\n        y : ndarray of shape (n_samples, )\n            Responses of input data to fit to\n        \"\"\"",
        "\"\"\"\n        Predict responses for given samples using fitted estimator\n\n        Parameters\n        ----------\n        X : ndarray of shape (n_samples, n_features)\n            Input data to predict responses for\n\n        y : ndarray of shape (n_samples, )\n            Responses of input data to fit to\n\n        Returns\n        -------\n        responses : ndarray of shape (n_samples, )\n            Predicted responses of given samples\n\n        Notes\n        -----\n        Feature values strictly below threshold are predicted as `-sign` whereas values which equal\n        to or above the threshold are predicted as `sign`\n        \"\"\"",
        "\"\"\"\n        Given a feature vector and labels, find a threshold by which to perform a split\n        The threshold is found according to the value minimizing the misclassification\n        error along this feature\n\n        Parameters\n        ----------\n        values: ndarray of shape (n_samples,)\n            A feature vector to find a splitting threshold for\n\n        labels: ndarray of shape (n_samples,)\n            The labels to compare against\n\n        sign: int\n            Predicted label assigned to values equal to or above threshold\n\n        Returns\n        -------\n        thr: float\n            Threshold by which to perform split\n\n        thr_err: float between 0 and 1\n            Misclassificaiton error of returned threshold\n\n        Notes\n        -----\n        For every tested threshold, values strictly below threshold are predicted as `-sign` whereas values\n        which equal to or above the threshold are predicted as `sign`\n        \"\"\"",
        "\"\"\"\n        Evaluate performance under misclassification loss function\n\n        Parameters\n        ----------\n        X : ndarray of shape (n_samples, n_features)\n            Test samples\n\n        y : ndarray of shape (n_samples, )\n            True labels of test samples\n\n        Returns\n        -------\n        loss : float\n            Performance under missclassification loss function\n        \"\"\""
    ],
    "functions": [
        "_fit",
        "_predict",
        "_find_threshold",
        "_loss"
    ],
    "classes": [
        "DecisionStump"
    ]
}