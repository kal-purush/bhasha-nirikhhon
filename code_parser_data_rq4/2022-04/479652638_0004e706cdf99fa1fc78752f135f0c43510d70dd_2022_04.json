{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "matplotlib",
        "plt",
        "pd",
        "read_csv",
        "mnist",
        "loc",
        "mnist",
        "matplotlib",
        "pyplot",
        "plt",
        "x",
        "iloc",
        "some_digit",
        "values",
        "reshape",
        "plt",
        "imshow",
        "some_digit_image",
        "cmap",
        "plt",
        "cm",
        "binary",
        "interpolation",
        "plt",
        "show",
        "x",
        "iloc",
        "y",
        "iloc",
        "x",
        "iloc",
        "y",
        "iloc",
        "np",
        "random",
        "permutation",
        "train_features",
        "iloc",
        "shuffle_index",
        "train_label",
        "iloc",
        "shuffle_index",
        "train_features",
        "train_label",
        "sklearn",
        "linear_model",
        "LogisticRegression",
        "LogisticRegression",
        "clf",
        "fit",
        "train_features",
        "train_label_2",
        "clf",
        "predict",
        "some_digit",
        "sklearn",
        "model_selection",
        "cross_val_score",
        "cross_val_score",
        "clf",
        "train_features",
        "train_label_2",
        "scoring",
        "scores",
        "mean",
        "sklearn",
        "model_selection",
        "cross_val_predict",
        "cross_val_predict",
        "clf",
        "train_features",
        "train_label_2",
        "cv",
        "scores_pred",
        "cross_val_predict",
        "clf",
        "train_features",
        "train_label_2",
        "cv",
        "method",
        "scores_pred2",
        "sklearn",
        "metrics",
        "confusion_matrix",
        "confusion_matrix",
        "train_label_2",
        "scores_pred",
        "sklearn",
        "metrics",
        "precision_score",
        "recall_score",
        "f1_score",
        "train_label_2",
        "scores_pred2",
        "precision_score",
        "train_label_2",
        "scores_pred2",
        "recall_score",
        "train_label_2",
        "scores_pred2",
        "f1_score",
        "sklearn",
        "metrics",
        "precision_recall_curve",
        "precision_recall_curve",
        "train_label_2",
        "scores_pred2",
        "theresolds",
        "shape",
        "plt",
        "plot",
        "theresolds",
        "precision",
        "label",
        "plt",
        "plot",
        "theresolds",
        "recalls",
        "label",
        "plt",
        "xlabel",
        "plt",
        "legend",
        "loc",
        "plt",
        "show"
    ],
    "literals": [
        "\"mnist_784.csv\"",
        "'pixel1'",
        "'pixel784'",
        "\"class\"",
        "\"nearest\"",
        "'accuracy'",
        "\"decision_function\"",
        "\"b--\"",
        "\"precisions\"",
        "\"g-\"",
        "\"recalls\"",
        "\"theresold\"",
        "\"upper left\""
    ],
    "variables": [
        "mnist",
        "x",
        "y",
        "some_digit",
        "some_digit_image",
        "train_features",
        "train_label",
        "test_feature",
        "test_label",
        "shuffle_index",
        "train_features",
        "train_label",
        "train_features_2",
        "train_label_2",
        "clf",
        "scores",
        "scores_pred",
        "scores_pred2",
        "precision_score",
        "recall_score",
        "f1_score",
        "precision",
        "recalls",
        "theresolds"
    ],
    "comments": [
        "mnist = fetch_openml('mnist_784')",
        "matplotlib to show image",
        "TRAIN TEST SPLIT",
        "SHUFFLING",
        "create a 2(two) Detector",
        "MODEL SELECTION",
        "CROSS VALIDATION",
        "Cross Validation Predict",
        "Cross Validation(give theresold Values)",
        "CALCULATING CONFUSION MATRIX",
        "PRECISION AND RECALL",
        "PRECISION RECALL VS THERESHOLD CURVE",
        "precision = precision_recall_curve(train_label_2)",
        "recall = precision_recall_curve(scores_pred)",
        "theresold = precision_recall_curve(scores_pred2)",
        "precision.shape",
        "recalls.shape",
        "FINAL RESULT",
        "precision and recall me 1 value jyada hain",
        "location",
        "plt.ylim([0,1])"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}