{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "ohlcv_data",
        "eps",
        "translate_cols",
        "len",
        "cols",
        "cols_num",
        "eps",
        "key",
        "value",
        "ohlcv_data",
        "items",
        "translate_cols",
        "value",
        "rename",
        "columns",
        "col_translation_kr",
        "value",
        "index",
        "rename",
        "inplace",
        "value",
        "cols",
        "value",
        "ohlcv_data",
        "ohlcv_data",
        "keys",
        "len",
        "assets",
        "pd",
        "concat",
        "value",
        "rename",
        "key",
        "key",
        "value",
        "ohlcv_data",
        "items",
        "axis",
        "price",
        "pct_change",
        "shift",
        "dropna",
        "returns",
        "key",
        "value",
        "ohlcv_data",
        "items",
        "np",
        "log",
        "value",
        "eps",
        "value",
        "diff",
        "iloc",
        "value",
        "iloc",
        "pd",
        "concat",
        "value",
        "value",
        "returns",
        "returns",
        "axis",
        "values",
        "features",
        "append",
        "feat",
        "dates",
        "value",
        "index",
        "values",
        "np",
        "array",
        "features",
        "reshape",
        "asset_num",
        "feature_num",
        "features",
        "dates",
        "features",
        "cols_num",
        "np",
        "zeros_like",
        "features",
        "num",
        "minmax_scaling",
        "features",
        "num",
        "axis",
        "num",
        "num",
        "minmax_scaling",
        "normalized",
        "num",
        "axis",
        "num",
        "num",
        "minmax_scaling",
        "features",
        "num",
        "num",
        "axis",
        "num",
        "num",
        "minmax_scaling",
        "features",
        "num",
        "num",
        "axis",
        "normalized",
        "features",
        "axis",
        "features",
        "max",
        "axis",
        "axis",
        "keepdims",
        "features",
        "min",
        "axis",
        "axis",
        "keepdims",
        "features",
        "nmin",
        "nmax",
        "nmin",
        "eps",
        "normalized",
        "returns",
        "st_weights",
        "fee",
        "initial_t",
        "_",
        "value",
        "st_weights",
        "items",
        "returns",
        "shape",
        "value",
        "shape",
        "returns",
        "st_weights",
        "fee",
        "initial_t",
        "st_weights",
        "keys",
        "calc_strategy_returns",
        "mode",
        "i",
        "returns",
        "shape",
        "mode",
        "st_returns",
        "iloc",
        "i",
        "values",
        "argmax",
        "mode",
        "st_returns",
        "iloc",
        "i",
        "values",
        "argmin",
        "best_strategies",
        "append",
        "idx",
        "np",
        "arange",
        "returns",
        "shape",
        "initial_t",
        "len",
        "pos_list",
        "len",
        "best_strategies",
        "np",
        "array",
        "best_strategies",
        "pos_list",
        "mode",
        "returns",
        "shape",
        "i",
        "r_length",
        "returns",
        "iloc",
        "i",
        "values",
        "s_idx",
        "strategy",
        "strategies",
        "calc_recent_weights",
        "st_weights",
        "strategy",
        "iloc",
        "i",
        "values",
        "returns",
        "iloc",
        "i",
        "values",
        "w_rec",
        "ret_i",
        "sum",
        "st_rets",
        "append",
        "bah_ret",
        "_",
        "next_st",
        "strategies",
        "st_weights",
        "next_st",
        "iloc",
        "i",
        "values",
        "abs",
        "w_next",
        "w_rec",
        "sum",
        "w_next",
        "ret_i",
        "sum",
        "wdiff",
        "fee",
        "st_rets",
        "append",
        "ret",
        "mode",
        "np",
        "argmax",
        "st_rets",
        "mode",
        "np",
        "argmin",
        "st_rets",
        "st_series",
        "append",
        "s_idx",
        "best_idx",
        "time_pos",
        "append",
        "i",
        "i",
        "np",
        "array",
        "st_series",
        "astype",
        "np",
        "array",
        "time_pos",
        "astype",
        "st_series",
        "reshape",
        "r_length",
        "time_pos",
        "reshape",
        "r_length",
        "initial_t",
        "st_series",
        "time_pos",
        "pd",
        "DataFrame",
        "index",
        "returns",
        "index",
        "key",
        "value",
        "st_weights",
        "items",
        "returns",
        "value",
        "sum",
        "rets",
        "st_returns",
        "weights",
        "rets",
        "weights",
        "rets",
        "weights_rec",
        "weights_rec",
        "sum",
        "weights_rec"
    ],
    "literals": [
        "'시가'",
        "'open'",
        "'고가'",
        "'high'",
        "'저가'",
        "'low'",
        "'종가'",
        "'close'",
        "'거래량'",
        "'volume'",
        "'거래대금'",
        "'value'",
        "'open'",
        "'high'",
        "'low'",
        "'close'",
        "'value'",
        "'date'",
        "'close'",
        "'buy_and_hold'",
        "'max'",
        "'max'",
        "'min'",
        "'max'",
        "'max'",
        "'min'"
    ],
    "variables": [
        "col_translation_kr",
        "cols",
        "cols_num",
        "feature_num",
        "eps",
        "value",
        "value",
        "ohlcv_data",
        "key",
        "ohlcv_data",
        "assets",
        "asset_num",
        "price",
        "returns",
        "features",
        "dates",
        "value",
        "returns",
        "value",
        "feat",
        "dates",
        "features",
        "num",
        "normalized",
        "normalized",
        "normalized",
        "normalized",
        "normalized",
        "nmax",
        "nmin",
        "normalized",
        "returns",
        "st_weights",
        "fee",
        "initial_t",
        "strategies",
        "bah_idx",
        "st_returns",
        "best_strategies",
        "idx",
        "idx",
        "pos_list",
        "st_series",
        "time_pos",
        "r_length",
        "ret_i",
        "st_rets",
        "w_rec",
        "bah_ret",
        "w_next",
        "wdiff",
        "ret",
        "best_idx",
        "best_idx",
        "st_series",
        "time_pos",
        "st_series",
        "time_pos",
        "st_returns",
        "rets",
        "st_returns",
        "key",
        "weights_rec",
        "weights_rec"
    ],
    "comments": [
        "데이터 크기 확인"
    ],
    "docstrings": [
        "\"\"\"\n    Data Processor for Trading\n\n    @author: Younghyun Kim\n    Created on 2022.04.16\n\"\"\"",
        "\"\"\"\n        Data Processor for Trading\n    \"\"\"",
        "\"\"\"\n            Initialization\n\n            Args:\n                ohlcv_data: dict of stock candle data series\n                    * dtype: dict\n                    * key: asset code\n                    * value: stock candle data series\n                        * dtype: pd.DataFrame\n                        * shape: (date_num, factor_num)\n                eps: tiny number\n                    * default: 1e-6\n                translate_cols: translate cols kor -> eng\n                    * default: False\n\n                데이터 정규화는 dataset에서 실시\n                1) price horizontal,\n                2) price cross-sectional,\n                3) return horizontal,\n                4) return cross-sectional\n        \"\"\"",
        "\"\"\"\n            calculate returns\n        \"\"\"",
        "\"\"\"\n            calculate asset feature data\n\n            Return:\n                features: feature data of all assets\n                    * dtype: np.array\n                    * shape: (asset_num, date_num, feature_num)\n                dates: date series\n                    * dtype: np.array\n                    * shape: (date_num)\n        \"\"\"",
        "\"\"\"\n            normalize features\n\n            Args:\n                features: feature data\n                    * dtype: np.array\n                    * shape: (asset_num, date_num, feature_num)\n        \"\"\"",
        "\"\"\"\n            minmax scaling\n\n            Args:\n                features: feature data\n                    * dtype: np.array\n                    * shape: (date_num, asset_num, feature_num)\n                axis: target axis\n                    * default: 0\n        \"\"\"",
        "\"\"\"\n        Strategy Processor for Learning Trading\n\n        추출 전략:\n            1) 단위 시점 최대 수익률 전략\n            2) 임의 전략 이후 시점 단위 시점 최대 수익률 전략\n    \"\"\"",
        "\"\"\"\n            Initialization\n\n            Args:\n                returns: asset returns\n                    * dtype: pd.DataFrame\n                    * shape: (date_num, asset_num)\n                    * 익일 수익률\n                st_weights: strategy weights based on each time\n                    * dtype: dict\n                    * keys: strategies\n                    * values: strategy weights\n                        * dtype: pd.DataFrame\n                        * shape: (date_num, asset_num)\n                fee: trading_fee\n                    * default: 0.004\n                initial_t: initial time position #\n                    * default: 0\n                    * 관찰 데이터를 고려하여, 관찰 데이터 마지막 시점 번호를 입력하여\n                    위치를 맞추기 위함\n        \"\"\"",
        "\"\"\"\n            calculate daily best strategies\n\n            Args:\n                mode: 수익률 목표\n                    'max': max returns\n                    'min': min returns\n            Return:\n                best_strategies: best strategy index list\n                    * dtype: pd.DataFrame\n                    * shape: (date_num, 1)\n                pos_list: time position list\n                    * dtype: np.array\n                    * shape: (date_num)\n        \"\"\"",
        "\"\"\"\n            calculate daily best strategies rebalanced\n\n            Args:\n                mode: 수익률 목표\n                    'max': max returns\n                    'min': min returns\n            Return:\n                st_series: 2-day strategies series\n                    * dtype: np.array\n                    * shape: (date_num - 1, strategy_num - 1, 2)\n                time_pos: 2-day data time position #\n                    * dtype: np.array\n                    * shape: (date_num - 1, strategy_num - 1, 2)\n        \"\"\"",
        "\"\"\"\n            calculate strategy returns\n        \"\"\"",
        "\"\"\"\n            calculate recent weights\n\n            Args:\n                weights: asset weights\n                    * dtype: np.array\n                    * shape: (asset_num)\n                rets: asset returns\n                    * dtype: np.array\n                    *shape: (asset_num)\n        \"\"\""
    ],
    "functions": [
        "calc_returns",
        "calc_feature_data",
        "normalize_features",
        "minmax_scaling",
        "calc_daily_best_strategies",
        "calc_daily_best_strategies_rebalanced",
        "calc_strategy_returns",
        "calc_recent_weights"
    ],
    "classes": [
        "OHLCVDataProcessor",
        "StrategyProcessor"
    ]
}