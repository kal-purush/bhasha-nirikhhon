{
    "identifiers": [
        "Asn1",
        "KrbRelayUp",
        "Asn1",
        "KrbRelayUp",
        "Kerberos",
        "KrbRelayUp",
        "Kerberos",
        "PAC",
        "KrbRelayUp",
        "lib",
        "Interop",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "KrbRelayUp",
        "message",
        "message",
        "KrbRelayUpException",
        "message",
        "KRB_ERROR",
        "krbError",
        "message",
        "krbError",
        "krbError",
        "userName",
        "domain",
        "keyString",
        "Interop",
        "KERB_ETYPE",
        "etype",
        "outfile",
        "ptt",
        "domainController",
        "LUID",
        "luid",
        "LUID",
        "describe",
        "opsec",
        "servicekey",
        "changepw",
        "pac",
        "proxyUrl",
        "AS_REQ",
        "NewASReq",
        "userName",
        "domain",
        "keyString",
        "etype",
        "opsec",
        "changepw",
        "pac",
        "InnerTGT",
        "userHashASREQ",
        "etype",
        "outfile",
        "ptt",
        "domainController",
        "luid",
        "describe",
        "opsec",
        "servicekey",
        "proxyUrl",
        "KerberosErrorException",
        "ex",
        "ex",
        "krbError",
        "WriteLine",
        "error",
        "error_code",
        "Interop",
        "KERBEROS_ERROR",
        "error",
        "error_code",
        "error",
        "e_text",
        "WriteLine",
        "error",
        "error_code",
        "Interop",
        "KERBEROS_ERROR",
        "error",
        "error_code",
        "KrbRelayUpException",
        "ex",
        "WriteLine",
        "ex",
        "Message",
        "ex",
        "WriteLine",
        "ex",
        "Message",
        "Environment",
        "Exit",
        "AS_REQ",
        "asReq",
        "Interop",
        "KERB_ETYPE",
        "etype",
        "outfile",
        "ptt",
        "domainController",
        "LUID",
        "luid",
        "LUID",
        "describe",
        "verbose",
        "opsec",
        "serviceKey",
        "getCredentials",
        "proxyUrl",
        "IsNullOrEmpty",
        "proxyUrl",
        "dcIP",
        "Networking",
        "GetDCIP",
        "domainController",
        "asReq",
        "req_body",
        "realm",
        "IsNullOrEmpty",
        "dcIP",
        "response",
        "Networking",
        "SendBytes",
        "dcIP",
        "asReq",
        "Encode",
        "Encode",
        "KDC_PROXY_MESSAGE",
        "asReq",
        "Encode",
        "Encode",
        "message",
        "target_domain",
        "asReq",
        "req_body",
        "realm",
        "response",
        "Networking",
        "MakeProxyRequest",
        "proxyUrl",
        "message",
        "response",
        "responseAsn",
        "AsnElt",
        "Decode",
        "response",
        "e",
        "e",
        "Convert",
        "ToBase64String",
        "response",
        "responseAsn",
        "TagValue",
        "responseTag",
        "Interop",
        "KERB_MESSAGE_TYPE",
        "AS_REP",
        "verbose",
        "WriteLine",
        "HandleASREP",
        "responseAsn",
        "etype",
        "asReq",
        "keyString",
        "outfile",
        "ptt",
        "luid",
        "describe",
        "verbose",
        "asReq",
        "serviceKey",
        "getCredentials",
        "dcIP",
        "kirbiBytes",
        "responseTag",
        "Interop",
        "KERB_MESSAGE_TYPE",
        "ERROR",
        "KRB_ERROR",
        "responseAsn",
        "Sub",
        "KerberosErrorException",
        "error",
        "responseTag",
        "AsnElt",
        "responseAsn",
        "Interop",
        "KERB_ETYPE",
        "etype",
        "keyString",
        "outfile",
        "ptt",
        "LUID",
        "luid",
        "LUID",
        "describe",
        "verbose",
        "AS_REQ",
        "asReq",
        "serviceKey",
        "getCredentials",
        "dcIP",
        "AS_REP",
        "responseAsn",
        "GetPKInitRequest",
        "asReq",
        "PA_PK_AS_REQ",
        "pkAsReq",
        "PA_PK_AS_REP",
        "rep",
        "padata",
        "value",
        "key",
        "pkAsReq",
        "Agreement",
        "GenerateKey",
        "pkAsRep",
        "DHRepInfo",
        "KDCDHKeyInfo",
        "SubjectPublicKey",
        "DepadLeft",
        "pkAsRep",
        "DHRepInfo",
        "ServerDHNonce",
        "GetKeySize",
        "etype",
        "key",
        "Helpers",
        "StringToByteArray",
        "keyString",
        "rep",
        "enc_part",
        "etype",
        "etype",
        "WriteLine",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "rep",
        "enc_part",
        "etype",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "des_cbc_md5",
        "outBytes",
        "Crypto",
        "KerberosDecrypt",
        "etype",
        "Interop",
        "KRB_KEY_USAGE_TGS_REP_EP_SESSION_KEY",
        "key",
        "rep",
        "enc_part",
        "cipher",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "rc4_hmac",
        "outBytes",
        "Crypto",
        "KerberosDecrypt",
        "etype",
        "Interop",
        "KRB_KEY_USAGE_TGS_REP_EP_SESSION_KEY",
        "key",
        "rep",
        "enc_part",
        "cipher",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "aes128_cts_hmac_sha1",
        "outBytes",
        "Crypto",
        "KerberosDecrypt",
        "etype",
        "Interop",
        "KRB_KEY_USAGE_AS_REP_EP_SESSION_KEY",
        "key",
        "rep",
        "enc_part",
        "cipher",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "aes256_cts_hmac_sha1",
        "outBytes",
        "Crypto",
        "KerberosDecrypt",
        "etype",
        "Interop",
        "KRB_KEY_USAGE_AS_REP_EP_SESSION_KEY",
        "key",
        "rep",
        "enc_part",
        "cipher",
        "etype",
        "ae",
        "AsnElt",
        "Decode",
        "outBytes",
        "ae",
        "TagValue",
        "decodeSuccess",
        "ex",
        "WriteLine",
        "ex",
        "Message",
        "decodeSuccess",
        "WriteLine",
        "EncKDCRepPart",
        "ae",
        "Sub",
        "KRB_CRED",
        "cred",
        "tickets",
        "Add",
        "rep",
        "ticket",
        "KrbCredInfo",
        "info",
        "key",
        "keytype",
        "encRepPart",
        "key",
        "keytype",
        "info",
        "key",
        "keyvalue",
        "encRepPart",
        "key",
        "keyvalue",
        "info",
        "prealm",
        "encRepPart",
        "realm",
        "info",
        "pname",
        "name_type",
        "rep",
        "cname",
        "name_type",
        "info",
        "pname",
        "name_string",
        "rep",
        "cname",
        "name_string",
        "info",
        "flags",
        "encRepPart",
        "flags",
        "info",
        "starttime",
        "encRepPart",
        "starttime",
        "info",
        "endtime",
        "encRepPart",
        "endtime",
        "info",
        "renew_till",
        "encRepPart",
        "renew_till",
        "info",
        "srealm",
        "encRepPart",
        "realm",
        "info",
        "sname",
        "name_type",
        "encRepPart",
        "sname",
        "name_type",
        "info",
        "sname",
        "name_string",
        "encRepPart",
        "sname",
        "name_string",
        "cred",
        "enc_part",
        "ticket_info",
        "Add",
        "info",
        "cred",
        "Encode",
        "Encode",
        "IsNullOrEmpty",
        "outfile",
        "outfile",
        "Helpers",
        "MakeValidFileName",
        "outfile",
        "Helpers",
        "WriteBytesToFile",
        "outfile",
        "kirbiBytes",
        "verbose",
        "WriteLine",
        "outfile",
        "ptt",
        "luid",
        "LSA",
        "ImportTicket",
        "kirbiBytes",
        "luid",
        "describe",
        "KRB_CRED",
        "kirbiBytes",
        "getCredentials",
        "WriteLine",
        "TGS_REQ",
        "NewTGSReq",
        "info",
        "pname",
        "name_string",
        "info",
        "prealm",
        "info",
        "pname",
        "name_string",
        "cred",
        "tickets",
        "info",
        "key",
        "keyvalue",
        "Interop",
        "KERB_ETYPE",
        "info",
        "key",
        "keytype",
        "Interop",
        "KERB_ETYPE",
        "subkey_keymaterial",
        "Empty",
        "cred",
        "Networking",
        "SendBytes",
        "dcIP",
        "u2uBytes",
        "u2uResponse",
        "AsnElt",
        "Decode",
        "u2uResponse",
        "u2uResponseAsn",
        "TagValue",
        "responseTag",
        "Interop",
        "KERB_MESSAGE_TYPE",
        "TGS_REP",
        "TGS_REP",
        "u2uResponseAsn",
        "u2uRep",
        "ticket",
        "Decrypt",
        "info",
        "key",
        "keyvalue",
        "key",
        "u2uEncTicketPart",
        "GetPac",
        "key",
        "pacInfoBuffer",
        "pt",
        "PacInfoBuffers",
        "pacInfoBuffer",
        "PacCredentialInfo",
        "ci",
        "WriteLine",
        "WriteLine",
        "ci",
        "Version",
        "WriteLine",
        "ci",
        "EncryptionType",
        "ci",
        "CredentialInfo",
        "HasValue",
        "WriteLine",
        "WriteLine",
        "ci",
        "CredentialInfo",
        "Value",
        "CredentialCount",
        "credData",
        "ci",
        "CredentialInfo",
        "Value",
        "Credentials",
        "Equals",
        "credData",
        "PackageName",
        "ToString",
        "BitConverter",
        "ToInt32",
        "credData",
        "Credentials",
        "BitConverter",
        "ToInt32",
        "credData",
        "Credentials",
        "flags",
        "hash",
        "Format",
        "Helpers",
        "ByteArrayToString",
        "credData",
        "Credentials",
        "Skip",
        "Take",
        "ToArray",
        "Helpers",
        "ByteArrayToString",
        "credData",
        "Credentials",
        "Skip",
        "Take",
        "ToArray",
        "hash",
        "Format",
        "Helpers",
        "ByteArrayToString",
        "credData",
        "Credentials",
        "Skip",
        "Take",
        "ToArray",
        "hash",
        "Helpers",
        "ByteArrayToString",
        "credData",
        "Credentials",
        "WriteLine",
        "credData",
        "PackageName",
        "hash",
        "WriteLine",
        "responseTag",
        "Interop",
        "KERB_MESSAGE_TYPE",
        "ERROR",
        "KRB_ERROR",
        "u2uResponseAsn",
        "Sub",
        "WriteLine",
        "error",
        "error_code",
        "Interop",
        "KERBEROS_ERROR",
        "error",
        "error_code",
        "WriteLine",
        "responseTag",
        "kirbiBytes",
        "AS_REQ",
        "asReq",
        "PA_PK_AS_REQ",
        "pkAsReq",
        "asReq",
        "asReq",
        "padata",
        "PA_DATA",
        "paData",
        "asReq",
        "padata",
        "paData",
        "Interop",
        "PADATA_TYPE",
        "PK_AS_REQ",
        "pkAsReq",
        "PA_PK_AS_REQ",
        "paData",
        "value",
        "pkAsReq",
        "Interop",
        "KERB_ETYPE",
        "etype",
        "etype",
        "Interop",
        "KERB_ETYPE",
        "des_cbc_md5",
        "Interop",
        "KERB_ETYPE",
        "rc4_hmac",
        "Interop",
        "KERB_ETYPE",
        "aes128_cts_hmac_sha1",
        "Interop",
        "KERB_ETYPE",
        "aes256_cts_hmac_sha1",
        "ArgumentException"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\\r\\n[-] KRB-ERROR ({0}) : {1}: {2}\\r\\n\"",
        "\"\\r\\n[-] KRB-ERROR ({0}) : {1}\\r\\n\"",
        "\"\\r\\n\"",
        "\"\\r\\n\"",
        "\"\\r\\n\"",
        "\"\"",
        "\"\"",
        "\"[-] Unable to get domain controller address\"",
        "\"[-] No answer from domain controller\"",
        "\"[+] TGT request successful!\"",
        "\"\"",
        "\"[-] Unknown application tag: \"",
        "\"\"",
        "\"\"",
        "\"[-] Encryption type \\\"\"",
        "\"\\\" not currently supported\"",
        "\"[-] Error parsing encrypted part of AS-REP: \"",
        "\"\\r\\n[*] Ticket written to {0}\\r\\n\"",
        "\"[*] Getting credentials using U2U\\r\\n\"",
        "\"\"",
        "\"  CredentialInfo         :\"",
        "\"    Version              : {0}\"",
        "\"    EncryptionType       : {0}\"",
        "\"    CredentialData       :\"",
        "\"      CredentialCount    : {0}\"",
        "\"\"",
        "\"NTLM\"",
        "\"{0}:{1}\"",
        "\"{0}\"",
        "\"       {0}              : {1}\"",
        "\"    CredentialData    :   *** NO KEY ***\"",
        "\"\\r\\n[X] KRB-ERROR ({0}) : {1}\\r\\n\"",
        "\"\\r\\n[X] Unknown application tag: {0}\"",
        "\"Only /des, /rc4, /aes128, and /aes256 are supported at this time\""
    ],
    "variables": [
        "KRB_ERROR",
        "krbError",
        "AS_REQ",
        "userHashASREQ",
        "KRB_ERROR",
        "error",
        "response",
        "dcIP",
        "KDC_PROXY_MESSAGE",
        "message",
        "AsnElt",
        "responseAsn",
        "responseTag",
        "kirbiBytes",
        "KRB_ERROR",
        "error",
        "AS_REP",
        "rep",
        "key",
        "PA_PK_AS_REP",
        "pkAsRep",
        "outBytes",
        "AsnElt",
        "ae",
        "decodeSuccess",
        "EncKDCRepPart",
        "encRepPart",
        "KRB_CRED",
        "cred",
        "KrbCredInfo",
        "info",
        "kirbiBytes",
        "KRB_CRED",
        "kirbi",
        "u2uBytes",
        "u2uResponse",
        "AsnElt",
        "u2uResponseAsn",
        "responseTag",
        "TGS_REP",
        "u2uRep",
        "EncTicketPart",
        "u2uEncTicketPart",
        "PACTYPE",
        "pt",
        "hash",
        "version",
        "flags",
        "KRB_ERROR",
        "error"
    ],
    "comments": [
        "decode the supplied bytes to an AsnElt object",
        "check the response value",
        "parse the response to an KRB-ERROR",
        "parse the response to an AS-REP",
        "convert the key string to bytes",
        "generate the decryption key using Diffie Hellman shared secret",
        "convert the key string to bytes",
        "maybe this should be a fatal error instead of just a warning?",
        "decrypt the enc_part containing the session key/etc.",
        "KRB_KEY_USAGE_TGS_REP_EP_SESSION_KEY = 8",
        "KRB_KEY_USAGE_TGS_REP_EP_SESSION_KEY = 8",
        "KRB_KEY_USAGE_AS_REP_EP_SESSION_KEY = 3",
        "KRB_KEY_USAGE_AS_REP_EP_SESSION_KEY = 3",
        "Make sure the data has expected value so we know decryption was successful (from kerberos spec: EncASRepPart ::= [APPLICATION 25] )",
        "now build the final KRB-CRED structure",
        "add the ticket",
        "build the EncKrbCredPart/KrbCredInfo parts from the ticket and the data in the encRepPart",
        "[0] add in the session key",
        "[1] prealm (domain)",
        "[2] pname (user)",
        "[3] flags",
        "[4] authtime (not required)",
        "[5] starttime",
        "[6] endtime",
        "[7] renew-till",
        "[8] srealm",
        "[9] sname",
        "add the ticket_info into the cred object",
        "pass-the-ticket -> import into LSASS",
        "LSA.DisplayTicket(kirbi, 2, false, false, false, false, string.IsNullOrEmpty(serviceKey) ? null : Helpers.StringToByteArray(serviceKey), key);",
        "check the response value",
        "parse the response to an TGS-REP and get the PAC",
        "look for the credential information and print",
        "parse the response to an KRB-ERROR"
    ],
    "docstrings": [],
    "functions": [
        "KrbRelayUpException",
        "KerberosErrorException",
        "TGT",
        "InnerTGT",
        "HandleASREP",
        "GetPKInitRequest",
        "GetKeySize"
    ],
    "classes": [
        "KrbRelayUpException",
        "KerberosErrorException",
        "AskTGT"
    ]
}