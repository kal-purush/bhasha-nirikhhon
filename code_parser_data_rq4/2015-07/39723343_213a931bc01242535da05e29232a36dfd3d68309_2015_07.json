{
    "identifiers": [
        "array",
        "sys",
        "round",
        "TR",
        "round",
        "TR",
        "round",
        "TR",
        "round",
        "TR",
        "tl_conflict_mask",
        "i",
        "straight",
        "i",
        "straight",
        "i",
        "left",
        "i",
        "pedestrian",
        "i",
        "straight",
        "left",
        "pedestrian",
        "i",
        "straight",
        "i",
        "left",
        "i",
        "left",
        "i",
        "pedestrian",
        "i",
        "i",
        "straight",
        "left",
        "pedestrian",
        "i",
        "j",
        "tl_conflict_mask",
        "j",
        "i",
        "tl_conflict_mask",
        "i",
        "j",
        "i",
        "j",
        "tl_conflict_mask",
        "i",
        "j",
        "tl_conflict_mask",
        "j",
        "i",
        "i",
        "j",
        "file",
        "sys",
        "stderr",
        "tl_conflict_mask",
        "file",
        "sys",
        "stderr",
        "bin",
        "tl_conflict_mask",
        "i",
        "bin",
        "tl_conflict_mask",
        "j",
        "file",
        "sys",
        "stderr",
        "exit",
        "tl_config_valid",
        "array",
        "array",
        "i",
        "j",
        "i",
        "j",
        "i",
        "tl_conflict_mask",
        "j",
        "tl_config_valid",
        "append",
        "valid",
        "seconds",
        "array",
        "array",
        "i",
        "seconds",
        "TR",
        "data",
        "append",
        "TLP_EAST",
        "TLP_NORTH",
        "TLP_WEST",
        "TLP_SOUTH",
        "data",
        "buffer_info",
        "i",
        "length",
        "TR",
        "offset",
        "TR",
        "TR",
        "offset",
        "TR",
        "make_green",
        "i",
        "offset",
        "tl",
        "make_green",
        "i",
        "offset",
        "tl",
        "make_green",
        "i",
        "offset",
        "TR",
        "tl",
        "make_green",
        "i",
        "offset",
        "TR",
        "tl",
        "j",
        "TR",
        "data",
        "i",
        "offset",
        "j",
        "data",
        "i",
        "offset",
        "TR",
        "j",
        "data",
        "i",
        "offset",
        "TR",
        "j",
        "data",
        "i",
        "offset",
        "TR",
        "j",
        "satisfied",
        "file",
        "sys",
        "stderr",
        "exit",
        "second",
        "traffic_light",
        "data",
        "second",
        "traffic_light",
        "data",
        "second",
        "tl_conflict_mask",
        "traffic_light",
        "verbose",
        "i",
        "length",
        "data",
        "i",
        "j",
        "configuration",
        "j",
        "green_time",
        "j",
        "green_time",
        "j",
        "green_time",
        "j",
        "TLP_MIN_GREEN_TIME",
        "j",
        "verbose",
        "file",
        "sys",
        "stderr",
        "i",
        "length",
        "tl_config_valid",
        "data",
        "i",
        "verbose",
        "file",
        "sys",
        "stderr",
        "i",
        "length",
        "data",
        "i",
        "last_configuration",
        "configuration",
        "last_configuration",
        "last_configuration",
        "configuration",
        "verbose",
        "file",
        "sys",
        "stderr",
        "file",
        "sys",
        "stderr",
        "i",
        "i",
        "first_totally_red",
        "TR",
        "verbose",
        "file",
        "sys",
        "stderr",
        "file",
        "sys",
        "stderr",
        "configuration",
        "i",
        "length",
        "data",
        "i",
        "j",
        "configuration",
        "j",
        "red_time",
        "j",
        "red_time",
        "j",
        "TR",
        "verbose",
        "file",
        "sys",
        "stderr",
        "build_conflict_mask",
        "Schedule",
        "rush",
        "initial_constraints"
    ],
    "literals": [
        "\"Error: Asymmetric conflict mask,\"",
        "\"and\"",
        "\"vs.\"",
        "'B'",
        "'h'",
        "\"Error: Initial schedule does not satisfy contraints\"",
        "\"Error: Schedule does not satisfy constraint A\"",
        "\"Error: Schedule does not satisfy contraints 0/B\"",
        "\"Error: Schedule does not satisfy constraint C\"",
        "\"(Immediate green to green switch)\"",
        "\"Error: Schedule does not satisfy constraint C\"",
        "\"(Intermediate red phase too short)\"",
        "\"Error: Schedule does not satisfy contraint D\""
    ],
    "variables": [
        "TR",
        "TLC_EAST_SR",
        "TLC_NORTH_SR",
        "TLC_WEST_SR",
        "TLC_SOUTH_SR",
        "TLC_EAST_L",
        "TLC_NORTH_L",
        "TLC_WEST_L",
        "TLC_SOUTH_L",
        "TLP_EAST",
        "TLP_NORTH",
        "TLP_WEST",
        "TLP_SOUTH",
        "TLP_MIN_GREEN_TIME",
        "tl_conflict_mask",
        "tl_config_valid",
        "tl_conflict_mask",
        "straight",
        "left",
        "pedestrian",
        "tl_conflict_mask",
        "i",
        "straight",
        "left",
        "pedestrian",
        "tl_conflict_mask",
        "tl_config_valid",
        "valid",
        "valid",
        "data",
        "tl",
        "green_time",
        "configuration",
        "last_configuration",
        "first_totally_red",
        "configuration",
        "first_totally_red",
        "last_configuration",
        "red_time",
        "configuration",
        "red_time",
        "j",
        "rush"
    ],
    "comments": [
        "!/usr/bin/python3",
        "Schedules are implemented as arrays of bit fields.",
        "Every traffic light has its own bit, with a 1 indicating the light being",
        "green. Thus, a bit field represents the state of all traffic lights at one",
        "point in time.",
        "(Note that \"yellow\" is just the end of the green phase for our purposes.)",
        "The schedule is thus an arrow of these fields, one for each point in time the",
        "schedule covers.",
        "time resolution",
        "schedule entries per second",
        "Bit shifts for each of the traffic lights",
        "(TLC_* .. traffic light for cars; TLP_* .. traffic light for pedestrians)",
        "(*_L .. left; *_SR .. straight/right)",
        "east:  21.45 s",
        "north: 13.50 s",
        "west:  19.20 s",
        "south: 16.80 s",
        "Every straight/right TL:",
        "- conflicts with every straight/right, except the opposite",
        "- conflicts with every left turn, except its own",
        "- conflicts with the opposite road's pedestrian TL",
        "Every left turn TL:",
        "- conflicts with every straight/right, except its own",
        "- conflicts with every left turn, except the opposite",
        "- conflicts with the target road's pedestrian TL",
        "Straight/right car traffic lights",
        "conflict masks",
        "Cannot conflict with itself",
        "Does not conflict with opposite",
        "Does not conflict with own left turn",
        "Conflicts with opposite road's pedestrian TL",
        "Left turn car traffic lights",
        "Does not conflict with own straight/right",
        "Cannot conflict with itself",
        "Does not conflict with opposite",
        "Does not conflict with the target road",
        "Pedestrian traffic lights",
        "They don't conflict with each other; so just collect the car TL",
        "conflicts from what we've built already",
        "Sanity check: Check symmetry",
        "Build tl_config_valid",
        "c) Between switching of green phases consider 3 sec of red phase for",
        "all directions.",
        "d) Consider a maximum waiting time of 2 min always",
        "TODO: Start with the bus/tram schedule. Maybe that's enough.",
        "XXX: This assumes the best strategy is having the following basic",
        "schedule:",
        "- east+west straight/right",
        "- east+west left",
        "- north+south straight/right",
        "- north+south left",
        "XXX: Also, it's really bad.",
        "d)",
        "c) -- switch off pedestrian lights",
        "Make it green",
        "Make all conflicting lights red",
        "a) Pedestrian lights need a minimal time of green phase",
        "Note: We don't have to care about the red phase for pedestrian TLs;",
        "just make the final ten seconds of their green phase red. It's the",
        "same thing.",
        "0) Two conflicting directions cannot be green at the same time",
        "b) It is not allowed to have green lights for pedestrians when the",
        "cars can cross their way, except if both go in the same direction.",
        "c) Between switching of green phases consider 3 sec of red phase for",
        "all directions.",
        "(Note: This breaks condition \"there needs to be a green light",
        "anywhere\", so we'll just ignore that one)",
        "d) Consider a maximum waiting time of 2 min always",
        "e) The Buses and Trams should always pass when they are scheduled",
        "(TODO)"
    ],
    "docstrings": [],
    "functions": [
        "build_conflict_mask",
        "length",
        "initial_constraints",
        "make_green",
        "satisfied"
    ],
    "classes": [
        "Schedule"
    ]
}