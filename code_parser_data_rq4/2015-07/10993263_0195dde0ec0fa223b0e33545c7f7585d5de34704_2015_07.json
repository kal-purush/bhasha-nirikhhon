{
    "identifiers": [
        "sys",
        "os",
        "glob",
        "argparse",
        "itemgetter",
        "subprocess",
        "Popen",
        "PIPE",
        "args",
        "reduce",
        "x",
        "y",
        "x",
        "extend",
        "y",
        "args",
        "vcf",
        "which",
        "args",
        "PASS",
        "cl",
        "append",
        "cl",
        "append",
        "vcf",
        "vcfs",
        "cl",
        "append",
        "cl",
        "append",
        "format",
        "vcf",
        "Popen",
        "cl",
        "stdin",
        "PIPE",
        "stdout",
        "PIPE",
        "stderr",
        "line",
        "p",
        "stdout",
        "line",
        "startswith",
        "line",
        "startswith",
        "line",
        "rstrip",
        "split",
        "item",
        "split",
        "item",
        "variation",
        "split",
        "args",
        "max_cov",
        "description",
        "args",
        "max_cov",
        "description",
        "args",
        "max_cov",
        "passed",
        "args",
        "min_cov",
        "description",
        "args",
        "min_cov",
        "description",
        "args",
        "min_cov",
        "passed",
        "args",
        "min_number_links",
        "description",
        "args",
        "min_number_links",
        "passed",
        "args",
        "min_ratio_links",
        "description",
        "description",
        "args",
        "min_ratio_links",
        "passed",
        "passed",
        "line",
        "program",
        "os",
        "fpath",
        "os",
        "path",
        "isfile",
        "fpath",
        "os",
        "access",
        "fpath",
        "os",
        "X_OK",
        "os",
        "path",
        "split",
        "program",
        "fpath",
        "is_exe",
        "program",
        "program",
        "path",
        "os",
        "environ",
        "split",
        "os",
        "pathsep",
        "path",
        "strip",
        "os",
        "path",
        "join",
        "path",
        "program",
        "is_exe",
        "exe_file",
        "exe_file",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "required",
        "action",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "action",
        "dest",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "main",
        "args"
    ],
    "literals": [
        "\"vcftools\"",
        "\"vcftools\"",
        "\"--recode\"",
        "\"--recode-INFO-all\"",
        "\"--stdout\"",
        "\"--keep-filtered\"",
        "\"PASS\"",
        "\"vcftools not available on commadn line, please install vcftools and add it to your $PATH variable\"",
        "\"--vcf\"",
        "\"{}\"",
        "\"#\"",
        "\"=\"",
        "\"\\t\"",
        "\"=\"",
        "\";\"",
        "\"COVA\"",
        "\"COVB\"",
        "\"COVA\"",
        "\"COVB\"",
        "\"LTE\"",
        "\"LTE\"",
        "\"LFW\"",
        "\"PATH\"",
        "'\"'",
        "'__main__'",
        "'--vcf'",
        "'append'",
        "'+'",
        "\"vcf file geenrated by find translocations\"",
        "'--keep-filtered'",
        "\"keep only PASS entries\"",
        "'store_true'",
        "'PASS'",
        "'--max-cov'",
        "\"max coverage on either window A and window B\"",
        "'--min-cov'",
        "\"min coverage on either window A and window B\"",
        "'--min-number-links'",
        "\"minimum number of proper link between  window A and window B\"",
        "'--min-ratio-links'",
        "\"min ration between the links leaving A and the number of link falling properly on window B\""
    ],
    "variables": [
        "vcfs",
        "cl",
        "p",
        "variation",
        "description",
        "passed",
        "passed",
        "passed",
        "passed",
        "passed",
        "fpath",
        "fname",
        "path",
        "exe_file",
        "parser",
        "args"
    ],
    "comments": [
        "check if vcftools are available",
        "build the command",
        "vcf_base_name = \".\".join(os.path.split(vcf)[-1].split(\".\")[0:-1]) # collect the base name without the final .vcf",
        "vcftools  P1426/P1426_104_intra_chr_events.vcf",
        "taken from http://stackoverflow.com/questions/377017/test-if-executable-exists-in-python"
    ],
    "docstrings": [
        "\"\"\"\n    This script takes as input a vcf file produced by FindTransloations and applies filters specifed as option. vcftools needs to be available on $PATH\"\n    \"\"\""
    ],
    "functions": [
        "main",
        "which",
        "is_exe"
    ],
    "classes": []
}