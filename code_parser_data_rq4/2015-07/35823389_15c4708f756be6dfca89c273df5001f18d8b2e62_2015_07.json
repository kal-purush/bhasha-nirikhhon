{
    "identifiers": [
        "com",
        "rhc",
        "lab",
        "drools",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "java",
        "util",
        "org",
        "drools",
        "core",
        "audit",
        "LogEvent",
        "org",
        "drools",
        "core",
        "audit",
        "RuleFlowNodeLogEvent",
        "org",
        "jbpm",
        "test",
        "JbpmJUnitBaseTestCase",
        "org",
        "jbpm",
        "workflow",
        "instance",
        "WorkflowProcessInstance",
        "org",
        "junit",
        "Before",
        "org",
        "kie",
        "api",
        "runtime",
        "KieSession",
        "org",
        "kie",
        "api",
        "runtime",
        "manager",
        "audit",
        "NodeInstanceLog",
        "org",
        "kie",
        "api",
        "runtime",
        "process",
        "NodeInstance",
        "org",
        "kie",
        "api",
        "runtime",
        "process",
        "NodeInstanceContainer",
        "org",
        "kie",
        "api",
        "runtime",
        "process",
        "ProcessInstance",
        "org",
        "kie",
        "api",
        "runtime",
        "process",
        "WorkItem",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "logger",
        "LoggerFactory",
        "getLogger",
        "HUMAN_TASK",
        "REST_TASK",
        "ksession",
        "processInstance",
        "processes",
        "processVars",
        "workItems",
        "Before",
        "logger",
        "info",
        "processes",
        "toString",
        "createRuntimeManager",
        "processes",
        "toArray",
        "processes",
        "size",
        "ksession",
        "getRuntimeEngine",
        "getKieSession",
        "ksession",
        "getWorkItemManager",
        "registerWorkItemHandler",
        "HUMAN_TASK",
        "getTestWorkItemHandler",
        "ksession",
        "getWorkItemManager",
        "registerWorkItemHandler",
        "REST_TASK",
        "getTestWorkItemHandler",
        "processVars",
        "clear",
        "logger",
        "info",
        "resources",
        "processes",
        "clear",
        "processes",
        "addAll",
        "Arrays",
        "asList",
        "resources",
        "itemName",
        "itemOutput",
        "itemExists",
        "workItems",
        "addAll",
        "getTestWorkItemHandler",
        "getWorkItems",
        "it",
        "workItems",
        "iterator",
        "it",
        "hasNext",
        "item",
        "it",
        "next",
        "item",
        "getParameter",
        "equalsIgnoreCase",
        "itemName",
        "itemExists",
        "ksession",
        "getWorkItemManager",
        "completeWorkItem",
        "item",
        "getId",
        "itemOutput",
        "item",
        "getState",
        "WorkItem",
        "COMPLETED",
        "it",
        "remove",
        "fail",
        "itemName",
        "itemExists",
        "fail",
        "itemName",
        "processInstanceId",
        "ksession",
        "name",
        "names",
        "activeNodes",
        "n",
        "name",
        "names",
        "add",
        "n",
        "processInstance",
        "ksession",
        "getProcessInstance",
        "processInstanceId",
        "processInstance",
        "activeNodes",
        "assertNodeNotActive",
        "processInstance",
        "names",
        "activeNodes",
        "isEmpty",
        "sb",
        "count",
        "activeNode",
        "activeNodes",
        "count",
        "sb",
        "append",
        "sb",
        "append",
        "activeNode",
        "count",
        "fail",
        "sb",
        "toString",
        "taskName",
        "owner",
        "itemExists",
        "workItems",
        "addAll",
        "getTestWorkItemHandler",
        "getWorkItems",
        "it",
        "workItems",
        "iterator",
        "it",
        "hasNext",
        "item",
        "it",
        "next",
        "item",
        "getParameter",
        "equalsIgnoreCase",
        "taskName",
        "item",
        "getParameter",
        "isEmpty",
        "owner",
        "owner",
        "item",
        "getParameter",
        "equalsIgnoreCase",
        "owner",
        "fail",
        "taskName",
        "owner",
        "item",
        "getParameter",
        "itemExists",
        "fail",
        "taskName",
        "container",
        "names",
        "activeNodes",
        "activeNodes",
        "activeNodes",
        "nodeInstance",
        "container",
        "getNodeInstances",
        "nodeName",
        "nodeInstance",
        "getNodeName",
        "names",
        "contains",
        "nodeName",
        "activeNodes",
        "add",
        "nodeName",
        "nodeInstance",
        "assertNodeNotActive",
        "nodeInstance",
        "names",
        "activeNodes",
        "activeNodes",
        "processInstanceId",
        "nodeNames",
        "names",
        "triggeredNodes",
        "nodeName",
        "nodeNames",
        "names",
        "add",
        "nodeName",
        "sessionPersistence",
        "logs",
        "getLogService",
        "findNodeInstances",
        "processInstanceId",
        "logs",
        "l",
        "logs",
        "nodeName",
        "l",
        "getNodeName",
        "l",
        "getType",
        "NodeInstanceLog",
        "TYPE_ENTER",
        "l",
        "getType",
        "NodeInstanceLog",
        "TYPE_EXIT",
        "names",
        "contains",
        "nodeName",
        "triggeredNodes",
        "add",
        "nodeName",
        "getInMemoryLogger",
        "getLogEvents",
        "nodeName",
        "getNodeName",
        "names",
        "contains",
        "nodeName",
        "triggeredNodes",
        "add",
        "nodeName",
        "triggeredNodes",
        "isEmpty",
        "s",
        "triggeredNodes",
        "get",
        "i",
        "i",
        "triggeredNodes",
        "size",
        "i",
        "s",
        "triggeredNodes",
        "get",
        "i",
        "fail",
        "s"
    ],
    "literals": [
        "\"Human Task\"",
        "\"Rest\"",
        "\"Setting up knowledge session for resources: \"",
        "\"Knowledge session created successfully.\"",
        "\"NodeName\"",
        "\"Failed to complete the Work Item: \"",
        "\"The following Work Item was not found or could not be completed: \"",
        "\", \"",
        "\"Node(s) active: \"",
        "\"NodeName\"",
        "\"ActorId\"",
        "\"\"",
        "\"ActorId\"",
        "\"Task \\\"\"",
        "\"\\\" expected owner \\\"\"",
        "\"\\\" but was \\\"\"",
        "\"ActorId\"",
        "\"\\\"\"",
        "\"The following Work Item was not found or could not be completed: \"",
        "\", \"",
        "\"Node(s) executed: \""
    ],
    "variables": [
        "ksession",
        "processInstance",
        "resources",
        "name",
        "nodeNames"
    ],
    "comments": [],
    "docstrings": [
        "* This class constructs a ksession for the given test resources (bpmn2\n * classpath resources) for use in each BPMN test case.",
        "* This field can be used by all tests which extend this class to\n\t * instantiate processes, complete tasks, etc.\n\t *",
        "* This field is used for reference in each test case to query process\n\t * variables, query tasks, etc.\n\t *",
        "* This list contains all of the bpmn2 classpath resources used in an\n\t * individual test case, and creates the runtime engine for each test.\n\t * \n\t * e.g. [\"myFirstProcess.bpmn2\", \"mySecondProcess.bpmn2\"]\n\t *",
        "* This map contains the process variables within each particular process\n\t *",
        "* This list contains active workItems, and needs to be kept since the\n\t * testWorkItemHandler deletes workItems from the JbpmJUnitBaseTestCase on\n\t * retrieval.",
        "* This method is run before each individual BPMN test to set a new\n\t * knowledge session with the resources required for the test to run\n\t * successfully.\n\t *",
        "* TODO: Register additional Work Item Handlers needed for the test\n\t\t * suite here",
        "* This method sets this base class with the resource names to be injected\n\t * in the ksession for each individual test.\n\t * \n\t * @param resources",
        "* This method loops through the ksession for outstanding work items with\n\t * the given name and completes the work item with the given data outputs.\n\t * \n\t * @param itemName\n\t * @param itemOutput\n\t *",
        "* This method is an opposite clone of the assertNodeActive method ootb in\n\t * the JbpmJUnitBaseTestCase.\n\t * \n\t * @param processInstanceId\n\t * @param ksession\n\t * @param name",
        "* This method asserts a given active task is owned by a particular username\n\t * \n\t * @param container\n\t * @param names\n\t * @param activeNodes",
        "* This method is an opposite clone of the assertNodeActive recursive helper\n\t * method ootb in the JbpmJUnitBaseTestCase.\n\t * \n\t * @param processInstanceId\n\t * @param ksession\n\t * @param name",
        "* This method is an opposite clone of the assertNodeTriggered ootb in the\n\t * JbpmJUnitBaseTestCase.\n\t * \n\t * @param processInstanceId\n\t * @param nodeNames"
    ],
    "functions": [
        "createKnowledgeSession",
        "setProcesses",
        "completeWorkItem",
        "assertNodeNotActive",
        "assertTaskOwnedBy",
        "assertNodeNotActive",
        "assertNodeNotTriggered"
    ],
    "classes": [
        "BaseBPMNTest"
    ]
}