{
    "identifiers": [
        "os",
        "sys",
        "glob",
        "shutil",
        "fileinput",
        "subprocess",
        "multiprocessing",
        "BUILD_UTILS_PKGS",
        "BUILD_UTILS_PKGS",
        "BUILD_UTILS_PKGS",
        "cmd",
        "ignore_failure",
        "failure_callback",
        "get_output",
        "get_output",
        "kwargs",
        "update",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "PIPE",
        "subprocess",
        "Popen",
        "cmd",
        "shell",
        "kwargs",
        "get_output",
        "line",
        "p",
        "stdout",
        "readline",
        "line",
        "output",
        "append",
        "line",
        "line",
        "line",
        "p",
        "stderr",
        "readlines",
        "line",
        "output",
        "append",
        "line",
        "line",
        "p",
        "wait",
        "retval",
        "cmd",
        "retval",
        "failure_callback",
        "failure_callback",
        "retval",
        "ignore_failure",
        "errmsg",
        "sys",
        "stderr",
        "write",
        "errmsg",
        "get_output",
        "retval",
        "join",
        "output",
        "retval",
        "cmd",
        "dpkg_opts",
        "cmd",
        "cmd",
        "run_command",
        "cmd",
        "pkgs",
        "apt_command",
        "pkgs",
        "directory",
        "glob",
        "glob",
        "directory",
        "o",
        "o",
        "opts",
        "os",
        "path",
        "isdir",
        "o",
        "len",
        "isdirlist",
        "directory",
        "os",
        "chdir",
        "isdirlist",
        "rules_file",
        "line",
        "fileinput",
        "input",
        "rules_file",
        "inplace",
        "line",
        "line",
        "open",
        "APT_SOURCES_FILE",
        "srcfile",
        "readlines",
        "srcfile",
        "close",
        "line",
        "contents",
        "line",
        "strip",
        "line",
        "startswith",
        "line",
        "split",
        "parts",
        "srclines",
        "append",
        "join",
        "parts",
        "strip",
        "open",
        "APT_SOURCES_FILE",
        "srcfile",
        "srcfile",
        "write",
        "join",
        "contents",
        "srcfile",
        "write",
        "join",
        "srclines",
        "open",
        "srcfile",
        "srcfile",
        "write",
        "CLOUDERA_APT",
        "srcfile",
        "write",
        "CLOUDERA_APT",
        "run_command",
        "run_command",
        "CLOUDERA_ARCHIVE_KEY",
        "apt_install",
        "ppa",
        "PPAS",
        "run_command",
        "ppa",
        "apt_command",
        "apt_command",
        "apt_install",
        "BUILD_UTILS_PKGS",
        "apt_install",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "os",
        "path",
        "isfile",
        "run_command",
        "run_command",
        "run_command",
        "GRID_SCHEDULER_GIT",
        "run_command",
        "get_output",
        "strip",
        "split",
        "chdir",
        "os",
        "path",
        "join",
        "SRC_DIR",
        "run_command",
        "java_home",
        "run_command",
        "env",
        "run_command",
        "env",
        "run_command",
        "env",
        "run_command",
        "env",
        "os",
        "mkdir",
        "sge_root",
        "env",
        "sge_root",
        "run_command",
        "env",
        "chdir",
        "SRC_DIR",
        "run_command",
        "apt_install",
        "chdir",
        "SRC_DIR",
        "run_command",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "glob",
        "glob",
        "run_command",
        "apt_command",
        "chdir",
        "run_command",
        "run_command",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "glob",
        "glob",
        "run_command",
        "apt_command",
        "chdir",
        "open",
        "rule_file",
        "write",
        "join",
        "lines",
        "rule_file",
        "close",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "install_pydrmaa",
        "install_pandas",
        "install_ipython",
        "apt_command",
        "pkgs",
        "run_command",
        "pkgs",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "apt_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "run_command",
        "chdir",
        "SRC_DIR",
        "apt_command",
        "apt_install",
        "glob",
        "glob",
        "run_command",
        "apt_command",
        "chdir",
        "line",
        "fileinput",
        "input",
        "inplace",
        "line",
        "line",
        "retval",
        "glob",
        "glob",
        "run_command",
        "run_command",
        "failure_callback",
        "_deb_failure_callback",
        "run_command",
        "run_command",
        "get_output",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "run_command",
        "chdir",
        "SRC_DIR",
        "pkg",
        "pkg",
        "hadoop_pkgs",
        "apt_install",
        "join",
        "pkgs",
        "run_command",
        "chdir",
        "SRC_DIR",
        "apt_install",
        "run_command",
        "apt_install",
        "f",
        "glob",
        "glob",
        "os",
        "unlink",
        "f",
        "open",
        "motd",
        "write",
        "STARCLUSTER_MOTD",
        "motd",
        "close",
        "os",
        "chmod",
        "motd",
        "name",
        "line",
        "fileinput",
        "input",
        "inplace",
        "line",
        "line",
        "startswith",
        "line",
        "replace",
        "completion_line_found",
        "line",
        "replace",
        "line",
        "open",
        "aliasfile",
        "write",
        "aliasfile",
        "close",
        "multiprocessing",
        "cpu_count",
        "os",
        "environ",
        "num_cpus",
        "os",
        "environ",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "islink",
        "run_command",
        "run_command",
        "chdir",
        "SRC_DIR",
        "run_command",
        "apt_install",
        "run_command",
        "open",
        "preseedf",
        "mysqlpreseed",
        "write",
        "preseeds",
        "mysqlpreseed",
        "close",
        "run_command",
        "mysqlpreseed",
        "name",
        "run_command",
        "mysqlpreseed",
        "name",
        "pkgs",
        "pkgs",
        "pkgs",
        "pkgs",
        "apt_install",
        "pkgs",
        "script",
        "scripts",
        "run_command",
        "script",
        "run_command",
        "run_command",
        "run_command",
        "dot",
        "glob",
        "glob",
        "dot",
        "exclude",
        "run_command",
        "dot",
        "path",
        "glob",
        "glob",
        "os",
        "path",
        "isdir",
        "path",
        "shutil",
        "rmtree",
        "path",
        "run_command",
        "run_command",
        "f",
        "glob",
        "glob",
        "f",
        "run_command",
        "f",
        "os",
        "path",
        "islink",
        "os",
        "path",
        "isfile",
        "run_command",
        "os",
        "getuid",
        "sys",
        "stderr",
        "write",
        "setup_environ",
        "configure_motd",
        "configure_bash",
        "configure_apt_sources",
        "upgrade_packages",
        "install_build_utils",
        "install_default_packages",
        "install_python_packages",
        "install_java",
        "install_gridscheduler",
        "install_condor",
        "install_hadoop",
        "configure_init",
        "cleanup",
        "main"
    ],
    "literals": [
        "\"/usr/local/src\"",
        "\"/etc/apt/sources.list\"",
        "\"build-essential devscripts debconf debconf-utils dpkg-dev \"",
        "\"python-dev python-setuptools python-pip python-nose \"",
        "\"python-distutils-extra gfortran unzip unace cdbs patch \"",
        "\"unrar-free\"",
        "'git://github.com/jtriley/gridscheduler.git'",
        "'http://archive.cloudera.com/debian/archive.key'",
        "'http://archive.cloudera.com/debian squeeze-cdh3u5 contrib'",
        "\"ppa:staticfloat/julia-deps\"",
        "\"ppa:staticfloat/julianightlies\"",
        "\"ppa:awstools-dev/awstools\"",
        "''",
        "''",
        "''",
        "\"command '%s' failed with status %d\"",
        "'\\n'",
        "''",
        "\"Dpkg::Options::='--force-confnew'\"",
        "\"apt-get -o %s -y --force-yes %s\"",
        "\"DEBIAN_FRONTEND='noninteractive' \"",
        "'install %s'",
        "\"more than one dir matches: %s\"",
        "'debian/rules'",
        "'ATLAS=None'",
        "'#'",
        "'deb'",
        "'deb-src'",
        "' '",
        "'w'",
        "''",
        "'\\n'",
        "'\\n'",
        "'/etc/apt/sources.list.d/cloudera-hadoop.list'",
        "'w'",
        "'deb %s\\n'",
        "'deb-src %s\\n'",
        "'gpg --keyserver keyserver.ubuntu.com --recv-keys 0F932C9C'",
        "'curl -s %s | sudo apt-key add -'",
        "'debian-archive-keyring'",
        "'add-apt-repository %s -y -s'",
        "'update'",
        "'upgrade'",
        "'openjdk-7-jre'",
        "'build-dep gridengine'",
        "'gridscheduler-scbuild.tar.gz'",
        "'tar xvzf gridscheduler-scbuild.tar.gz'",
        "'mv gridscheduler /opt/sge6-fresh'",
        "'git clone %s'",
        "'readlink -f `which java`'",
        "'/jre'",
        "'gridscheduler'",
        "'source'",
        "'git checkout -t -b develop origin/develop'",
        "'JAVA_HOME=%s'",
        "'%s ./aimk -only-depend'",
        "'%s scripts/zerodepend'",
        "'%s ./aimk depend'",
        "'%s ./aimk -no-secure -no-gui-inst -man'",
        "'/opt/sge6-fresh'",
        "' SGE_ROOT=%s'",
        "'%s scripts/distinst -all -local -noexit -y -- man'",
        "\"rm -f /var/lock\"",
        "'htcondor'",
        "'pip install drmaa'",
        "'build-dep atlas'",
        "\"*atlas*.deb\"",
        "'dpkg -i *atlas*.deb'",
        "'source atlas'",
        "'atlas-*'",
        "'fakeroot debian/rules custom'",
        "'dpkg -i ../*atlas*.deb'",
        "'build-dep libopenblas-dev'",
        "\"*openblas*.deb\"",
        "'dpkg -i *openblas*.deb'",
        "'source libopenblas-dev'",
        "'openblas-*'",
        "'Makefile.rule'",
        "'a'",
        "'DYNAMIC_ARCH=1'",
        "'NUM_THREADS=64'",
        "'NO_LAPACK=1'",
        "'NO_AFFINITY=1'",
        "'\\n'",
        "'fakeroot debian/rules custom'",
        "'dpkg -i ../*openblas*.deb'",
        "'echo libopenblas-base hold | dpkg --set-selections'",
        "'echo libopenblas-dev hold | dpkg --set-selections'",
        "\"ldconfig\"",
        "'build-dep python-imaging'",
        "\"virtualenv pillow boto matplotlib django mpi4py Cython \"",
        "\"pudb supervisor \"",
        "\"pip install %s\"",
        "'build-dep python-numpy'",
        "'build-dep python-scipy'",
        "'pip install -d . numpy'",
        "'tar xvzf numpy*.tar.gz'",
        "\"sed -i 's/return None #/pass #/' numpy*/numpy/core/setup.py\"",
        "\"cd numpy* && python setup.py install\"",
        "'pip install scipy'",
        "'build-dep pandas'",
        "'pip install pandas'",
        "'build-dep openmpi'",
        "'blcr-util'",
        "'*openmpi*.deb'",
        "'dpkg -i *openmpi*.deb'",
        "'source openmpi'",
        "'openmpi*'",
        "'debian/rules'",
        "'--enable-heterogeneous'",
        "'                        --with-sge \\\\'",
        "'../*openmpi*.deb'",
        "'dch --local=\\'+custom\\' '",
        "'\"custom build on: `uname -s -r -v -m -p -i -o`\"'",
        "'dpkg-buildpackage -rfakeroot -b'",
        "'dpkg -i ../*openmpi*.deb'",
        "'ompi_info | grep -i grid'",
        "'gridengine'",
        "\"failed to build OpenMPI with \"",
        "\"Open Grid Scheduler support\"",
        "'echo libopenmpi1.3 hold | dpkg --set-selections'",
        "'echo libopenmpi-dev hold | dpkg --set-selections'",
        "'echo libopenmpi-dbg hold | dpkg --set-selections'",
        "'echo openmpi-bin hold | dpkg --set-selections'",
        "'echo openmpi-checkpoint hold | dpkg --set-selections'",
        "'echo openmpi-common hold | dpkg --set-selections'",
        "'echo openmpi-doc hold | dpkg --set-selections'",
        "'ldconfig'",
        "'namenode'",
        "'datanode'",
        "'tasktracker'",
        "'jobtracker'",
        "'secondarynamenode'",
        "'hadoop-0.20'",
        "'hadoop-0.20-%s'",
        "' '",
        "'easy_install dumbo'",
        "'libzmq-dev'",
        "'pip install ipython[parallel,notebook]'",
        "\"julia\"",
        "'/etc/update-motd.d/*'",
        "'/etc/update-motd.d/00-starcluster'",
        "'w'",
        "'/etc/bash.bashrc'",
        "'bash_completion'",
        "'#'",
        "'#'",
        "''",
        "'#'",
        "''",
        "'/root/.bash_aliases'",
        "'w'",
        "\"alias ..='cd ..'\\n\"",
        "'MAKEFLAGS'",
        "'-j%d'",
        "'DEBIAN_FRONTEND'",
        "\"noninteractive\"",
        "'/sbin/initctl'",
        "'/sbin/initctl'",
        "'mv /sbin/initctl /sbin/initctl.bak'",
        "'ln -s /bin/true /sbin/initctl'",
        "'initctl reload-configuration'",
        "'nfs-kernel-server'",
        "'ln -s /etc/init.d/nfs-kernel-server /etc/init.d/nfs'",
        "'/tmp/mysql-preseed.txt'",
        "'w'",
        "'debconf-set-selections < %s'",
        "'rm %s'",
        "\"git vim mercurial subversion cvs encfs keychain screen tmux zsh \"",
        "\"ksh csh tcsh ec2-api-tools mysql-server mysql-client \"",
        "\"nginx apache2 libapache2-mod-wsgi sysv-rc-conf pssh emacs \"",
        "\"irssi htop vim-scripts mosh default-jdk mpich2 xvfb \"",
        "\"openmpi-bin libopenmpi-dev libopenblas-dev liblapack-dev julia\"",
        "'nfs-kernel-server'",
        "'hadoop'",
        "'condor'",
        "'apache'",
        "'mysql'",
        "'nginx'",
        "'find /etc/rc* -iname \\*%s\\* -delete'",
        "'rm -rf /run/resolvconf'",
        "'rm -f /etc/mtab'",
        "'rm -rf /root/*'",
        "'/root/.bashrc'",
        "'/root/.profile'",
        "'/root/.bash_aliases'",
        "\"/root/.*\"",
        "'rm -rf %s'",
        "'/usr/local/src/*'",
        "'rm -f /var/cache/apt/archives/*.deb'",
        "'rm -f /var/cache/apt/archives/partial/*'",
        "'/etc/profile.d'",
        "'byobu'",
        "'rm -f %s'",
        "'/sbin/initctl'",
        "'/sbin/initctl.bak'",
        "'mv -f /sbin/initctl.bak /sbin/initctl'",
        "'you must be root to run this script\\n'",
        "'__main__'"
    ],
    "variables": [
        "SRC_DIR",
        "APT_SOURCES_FILE",
        "BUILD_UTILS_PKGS",
        "GRID_SCHEDULER_GIT",
        "CLOUDERA_ARCHIVE_KEY",
        "CLOUDERA_APT",
        "PPAS",
        "STARCLUSTER_MOTD",
        "kwargs",
        "p",
        "output",
        "line",
        "line",
        "retval",
        "errmsg",
        "ignore_failure",
        "dpkg_opts",
        "cmd",
        "cmd",
        "opts",
        "isdirlist",
        "srcfile",
        "contents",
        "srclines",
        "parts",
        "parts",
        "sts",
        "java_home",
        "env",
        "sge_root",
        "rule_file",
        "lines",
        "pkgs",
        "sts",
        "hadoop_pkgs",
        "pkgs",
        "motd",
        "completion_line_found",
        "completion_line_found",
        "completion_line_found",
        "aliasfile",
        "num_cpus",
        "preseedf",
        "mysqlpreseed",
        "preseeds",
        "pkgs",
        "scripts",
        "exclude"
    ],
    "comments": [
        "!/usr/bin/env python",
        "apt_install('condor=7.7.2-1')",
        "run_command('echo condor hold | dpkg --set-selections')",
        "run_command('ln -s /etc/condor/condor_config /etc/condor_config.local')",
        "run_command('mkdir /var/lib/condor/log')",
        "run_command('mkdir /var/lib/condor/run')",
        "run_command('chown -R condor:condor /var/lib/condor/log')",
        "run_command('chown -R condor:condor /var/lib/condor/run')",
        "NO_AFFINITY=1 is required to utilize all cores on all non",
        "cluster-compute/GPU instance types due to the shared virtualization",
        "layer not supporting processor affinity properly. However, Cluster",
        "Compute/GPU instance types use a near-bare-metal hypervisor which",
        "that there is a ~20% increase in performance when using affinity on",
        "cc1/cg1 types implying NO_AFFINITY=1 should *not* be set for cluster",
        "compute/GPU AMIs.",
        "install_numpy_scipy()",
        "This is broken in IPy 1.1.0",
        "mjax_install = 'from IPython.external.mathjax import install_mathjax'",
        "mjax_install += '; install_mathjax()'",
        "run_command(\"python -c '%s'\" % mjax_install)",
        "chdir(SRC_DIR)",
        "apt_install('zlib1g-dev patchelf llvm-3.3-dev libsuitesparse-dev '",
        "'libncurses5-dev libopenblas-dev liblapack-dev '",
        "'libarpack2-dev libfftw3-dev libgmp-dev libpcre3-dev '",
        "'libunwind8-dev libreadline-dev libdouble-conversion-dev '",
        "'libopenlibm-dev librmath-dev libmpfr-dev')",
        "run_command('git clone git://github.com/JuliaLang/julia.git')",
        "buildopts = 'LLVM_CONFIG=llvm-config-3.3 VERBOSE=1 USE_BLAS64=0 '",
        "libs = ['LLVM', 'ZLIB', 'SUITESPARSE', 'ARPACK', 'BLAS', 'FFTW', 'LAPACK',",
        "'GMP', 'MPFR', 'PCRE', 'LIBUNWIND', 'READLINE', 'GRISU',",
        "'OPENLIBM', 'RMATH']",
        "buildopts += ' '.join(['USE_SYSTEM_%s=1' % lib for lib in libs])",
        "run_command('cd julia && make %s PREFIX=/usr install' % buildopts)",
        "stop mysql for interactively asking for password",
        "install_nfs()",
        "Only use these to build the packages locally",
        "These should normally be installed from the PPAs",
        "install_openblas()",
        "install_openmpi()",
        "install_julia()"
    ],
    "docstrings": [
        "\"\"\"\nThis script is meant to be run inside of a ubuntu cloud image available at\nuec-images.ubuntu.com::\n\n    $ EC2_UBUNTU_IMG_URL=http://uec-images.ubuntu.com/precise/current\n    $ wget $EC2_UBUNTU_IMG_URL/precise-server-cloudimg-amd64.tar.gz\n\nor::\n\n    $ wget $EC2_UBUNTU_IMG_URL/precise-server-cloudimg-i386.tar.gz\n\nAfter downloading a Ubuntu cloud image the next step is to extract the image::\n\n    $ tar xvzf precise-server-cloudimg-amd64.tar.gz\n\nThen resize it to 10GB::\n\n    $ e2fsck -f precise-server-cloudimg-amd64.img\n    $ resize2fs precise-server-cloudimg-amd64.img 10G\n\nNext you need to mount the image::\n\n    $ mkdir /tmp/img-mount\n    $ mount precise-server-cloudimg-amd64.img /tmp/img-mount\n    $ mount -t proc none /tmp/img-mount/proc\n    $ mount -t sysfs none /tmp/img-mount/sys\n    $ mount -o bind /dev /tmp/img-mount/dev\n    $ mount -t devpts none /tmp/img-mount/dev/pts\n    $ mount -o rbind /var/run/dbus /tmp/img-mount/var/run/dbus\n\nCopy /etc/resolv.conf and /etc/mtab to the image::\n\n    $ mkdir -p /tmp/img-mount/var/run/resolvconf\n    $ cp /etc/resolv.conf /tmp/img-mount/var/run/resolvconf/resolv.conf\n    $ grep -v rootfs /etc/mtab > /tmp/img-mount/etc/mtab\n\nNext copy this script inside the image::\n\n    $ cp /path/to/scimage.py /tmp/img-mount/root/scimage.py\n\nFinally chroot inside the image and run this script:\n\n    $ chroot /tmp/img-mount /bin/bash\n    $ cd $HOME\n    $ python scimage.py\n\"\"\"",
        "\"\"\"\\\n#!/bin/sh\ncat<<\"EOF\"\n          _                 _           _\n__/\\_____| |_ __ _ _ __ ___| |_   _ ___| |_ ___ _ __\n\\    / __| __/ _` | '__/ __| | | | / __| __/ _ \\ '__|\n/_  _\\__ \\ || (_| | | | (__| | |_| \\__ \\ ||  __/ |\n  \\/ |___/\\__\\__,_|_|  \\___|_|\\__,_|___/\\__\\___|_|\n\nStarCluster Ubuntu 14.04 AMI\nSoftware Tools for Academics and Researchers (STAR)\nHomepage: http://star.mit.edu/cluster\nDocumentation: http://star.mit.edu/cluster/docs/latest\nCode: https://github.com/jtriley/StarCluster\nMailing list: http://star.mit.edu/cluster/mailinglist.html\n\nThis AMI Contains:\n\n  * Open Grid Scheduler (OGS - formerly SGE) queuing system\n  * HTCondor workload management system\n  * OpenMPI compiled with Open Grid Scheduler support\n  * OpenBLAS - Highly optimized Basic Linear Algebra Routines\n  * NumPy/SciPy linked against OpenBlas\n  * Pandas - Data Analysis Library\n  * IPython 1.1.0 with parallel and notebook support\n  * Julia 0.3pre\n  * and more! (use 'dpkg -l' to show all installed packages)\n\nOpen Grid Scheduler/Condor cheat sheet:\n\n  * qstat/condor_q - show status of batch jobs\n  * qhost/condor_status- show status of hosts, queues, and jobs\n  * qsub/condor_submit - submit batch jobs (e.g. qsub -cwd ./job.sh)\n  * qdel/condor_rm - delete batch jobs (e.g. qdel 7)\n  * qconf - configure Open Grid Scheduler system\n\nCurrent System Stats:\n\nEOF\n\nlandscape-sysinfo | grep -iv 'graph this data'\n\"\"\"",
        "\"\"\"docstring for configure_build\"\"\"",
        "\"\"\"docstring for install_atlas\"\"\"",
        "\"\"\"docstring for install_openblas\"\"\"",
        "*does* support processor affinity. From minimal testing it appears",
        "\"\"\"docstring for install_numpy\"\"\"",
        "\"\"\"docstring for install_pandas\"\"\"",
        "\"\"\"\\\nmysql-server mysql-server/root_password select\nmysql-server mysql-server/root_password seen true\nmysql-server mysql-server/root_password_again select\nmysql-server mysql-server/root_password_again seen true\n    \"\"\"",
        "\"\"\"docstring for main\"\"\""
    ],
    "functions": [
        "run_command",
        "apt_command",
        "apt_install",
        "chdir",
        "_fix_atlas_rules",
        "configure_apt_sources",
        "upgrade_packages",
        "install_build_utils",
        "install_java",
        "install_gridscheduler",
        "install_condor",
        "install_pydrmaa",
        "install_atlas",
        "install_openblas",
        "install_python_packages",
        "install_numpy_scipy",
        "install_pandas",
        "install_openmpi",
        "_deb_failure_callback",
        "install_hadoop",
        "install_ipython",
        "install_julia",
        "configure_motd",
        "configure_bash",
        "setup_environ",
        "install_nfs",
        "install_default_packages",
        "configure_init",
        "cleanup",
        "main"
    ],
    "classes": []
}