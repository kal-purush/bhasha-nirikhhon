{
    "identifiers": [
        "Input",
        "Output",
        "get_data_from_source",
        "update_output",
        "field",
        "data",
        "isinstance",
        "data",
        "field",
        "invalid",
        "field",
        "data",
        "field",
        "opts",
        "field",
        "datum",
        "data",
        "_field",
        "marshal",
        "datum",
        "_output",
        "output",
        "append",
        "_output",
        "field",
        "name",
        "output",
        "field",
        "data",
        "field",
        "opts",
        "field",
        "datum",
        "data",
        "_field",
        "serialize",
        "datum",
        "_output",
        "output",
        "append",
        "_output",
        "field",
        "name",
        "output",
        "Input",
        "get_data_from_source",
        "is_list",
        "marshall_collection",
        "update_output",
        "Output",
        "get_data_from_source",
        "is_list",
        "serialize_collection",
        "update_output"
    ],
    "literals": [
        "\"invalid type\""
    ],
    "variables": [
        "_field",
        "output",
        "_output",
        "_field",
        "output",
        "_output",
        "input_pipes",
        "validation_pipes",
        "process_pipes",
        "output_pipes",
        "input_pipes",
        "validation_pipes",
        "process_pipes",
        "output_pipes"
    ],
    "comments": [
        "kim/pipelines/string.py",
        "Copyright (C) 2014-2015 the Kim authors and contributors",
        "<see AUTHORS file>",
        "",
        "This module is part of Kim and is released under",
        "the MIT License: http://www.opensource.org/licenses/mit-license.php"
    ],
    "docstrings": [
        "\"\"\"pipe used to determine if a value can be iterated.\n\n    :param field: instance of :py:class:``~.Field`` being pipelined\n    :param data: data being piplined for the instance of the field.\n    \"\"\""
    ],
    "functions": [
        "is_list",
        "marshall_collection",
        "serialize_collection"
    ],
    "classes": [
        "CollectionInput",
        "CollectionOutput"
    ]
}