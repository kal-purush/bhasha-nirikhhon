{
    "identifiers": [
        "d3",
        "select",
        "selector",
        "select",
        "node",
        "selectAll",
        "selector",
        "selectAll",
        "nodes",
        "selection",
        "selection",
        "index",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "name",
        "name",
        "value",
        "priority",
        "name",
        "value",
        "datum",
        "index",
        "priority",
        "obj",
        "key",
        "datum",
        "index",
        "priority",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "value",
        "value",
        "datum",
        "index",
        "value",
        "value",
        "datum",
        "index",
        "name",
        "name",
        "datum",
        "index",
        "name",
        "before",
        "name",
        "before",
        "datum",
        "index",
        "name",
        "datum",
        "index",
        "before",
        "name",
        "datum",
        "index",
        "before",
        "datum",
        "index",
        "data",
        "key",
        "datum",
        "index",
        "data",
        "datum",
        "index",
        "key",
        "datum",
        "index",
        "selector",
        "selector",
        "datum",
        "index",
        "value",
        "value",
        "datum",
        "index",
        "comparator",
        "a",
        "b",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "capture",
        "name",
        "name",
        "selector",
        "selector",
        "datum",
        "index",
        "selector",
        "selector",
        "datum",
        "index",
        "func",
        "datum",
        "index",
        "func",
        "sel",
        "args",
        "args",
        "name",
        "name",
        "datum",
        "index",
        "name",
        "before",
        "name",
        "before",
        "datum",
        "index",
        "name",
        "datum",
        "index",
        "before",
        "name",
        "datum",
        "index",
        "before",
        "datum",
        "index",
        "name",
        "datum",
        "index",
        "func",
        "selection",
        "args",
        "args",
        "index",
        "selection",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "name",
        "name",
        "value",
        "priority",
        "name",
        "value",
        "datum",
        "index",
        "priority",
        "obj",
        "key",
        "datum",
        "index",
        "priority",
        "name",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "value",
        "value",
        "datum",
        "index",
        "value",
        "value",
        "datum",
        "index",
        "name",
        "name",
        "datum",
        "index",
        "name",
        "before",
        "name",
        "before",
        "datum",
        "index",
        "name",
        "datum",
        "index",
        "before",
        "name",
        "datum",
        "index",
        "before",
        "datum",
        "index",
        "data",
        "key",
        "datum",
        "index",
        "selection",
        "data",
        "datum",
        "index",
        "key",
        "datum",
        "index",
        "selection",
        "selector",
        "selector",
        "datum",
        "index",
        "value",
        "datum",
        "index",
        "value",
        "comparator",
        "a",
        "b",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "capture",
        "name",
        "name",
        "selector",
        "selector",
        "datum",
        "index",
        "selector",
        "selector",
        "selector",
        "datum",
        "index",
        "selector",
        "datum",
        "index",
        "func",
        "datum",
        "index",
        "func",
        "sel",
        "args",
        "args",
        "transition",
        "transition",
        "delay",
        "delay",
        "datum",
        "index",
        "duration",
        "duration",
        "datum",
        "index",
        "t",
        "value",
        "args",
        "value",
        "t",
        "name",
        "value",
        "name",
        "value",
        "datum",
        "index",
        "obj",
        "key",
        "datum",
        "index",
        "name",
        "tween",
        "datum",
        "index",
        "attr",
        "name",
        "value",
        "priority",
        "name",
        "value",
        "datum",
        "index",
        "priority",
        "obj",
        "key",
        "datum",
        "index",
        "priority",
        "name",
        "tween",
        "datum",
        "index",
        "attr",
        "priority",
        "value",
        "value",
        "datum",
        "index",
        "name",
        "factory",
        "t",
        "selector",
        "selector",
        "d",
        "i",
        "selector",
        "selector",
        "d",
        "i",
        "selector",
        "selector",
        "d",
        "i",
        "listener",
        "d",
        "i",
        "listener",
        "d",
        "i",
        "func",
        "transition",
        "args",
        "args",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "k",
        "t",
        "ease",
        "k",
        "t",
        "ease",
        "k",
        "t",
        "ease",
        "k",
        "t",
        "ease",
        "k",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "a",
        "b",
        "t",
        "ease",
        "a",
        "b",
        "t",
        "ease",
        "a",
        "b",
        "t",
        "ease",
        "a",
        "b",
        "t",
        "ease",
        "a",
        "b",
        "t",
        "ease",
        "s",
        "t",
        "ease",
        "s",
        "t",
        "ease",
        "s",
        "t",
        "ease",
        "s",
        "t",
        "ease",
        "s",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "t",
        "ease",
        "args",
        "t",
        "timer",
        "func",
        "delay",
        "time",
        "timer",
        "flush",
        "mouse",
        "container",
        "touch",
        "container",
        "identifer",
        "touch",
        "container",
        "touches",
        "identifer",
        "touches",
        "container",
        "touches",
        "ascending",
        "a",
        "b",
        "descending",
        "a",
        "b",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "min",
        "array",
        "accessor",
        "datum",
        "index",
        "min",
        "array",
        "accessor",
        "datum",
        "index",
        "min",
        "array",
        "accessor",
        "datum",
        "index",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "max",
        "array",
        "accessor",
        "datum",
        "index",
        "max",
        "array",
        "accessor",
        "datum",
        "index",
        "max",
        "array",
        "accessor",
        "datum",
        "index",
        "extent",
        "array",
        "extent",
        "array",
        "extent",
        "array",
        "extent",
        "array",
        "extent",
        "array",
        "accessor",
        "datum",
        "index",
        "extent",
        "array",
        "accessor",
        "datum",
        "index",
        "extent",
        "array",
        "accessor",
        "datum",
        "index",
        "sum",
        "array",
        "sum",
        "array",
        "accessor",
        "datum",
        "index",
        "mean",
        "array",
        "mean",
        "array",
        "accessor",
        "datum",
        "index",
        "quantile",
        "array",
        "p",
        "variance",
        "array",
        "variance",
        "array",
        "accessor",
        "datum",
        "index",
        "deviation",
        "array",
        "deviation",
        "array",
        "accessor",
        "datum",
        "index",
        "bisectLeft",
        "array",
        "x",
        "lo",
        "hi",
        "bisectLeft",
        "array",
        "x",
        "lo",
        "hi",
        "bisectRight",
        "bisectRight",
        "array",
        "x",
        "lo",
        "hi",
        "bisector",
        "accessor",
        "x",
        "array",
        "x",
        "lo",
        "hi",
        "array",
        "x",
        "lo",
        "hi",
        "bisector",
        "comparator",
        "a",
        "b",
        "array",
        "x",
        "lo",
        "hi",
        "array",
        "x",
        "lo",
        "hi",
        "shuffle",
        "array",
        "lo",
        "hi",
        "keys",
        "values",
        "key",
        "values",
        "key",
        "values",
        "entries",
        "key",
        "entries",
        "key",
        "entries",
        "key",
        "key",
        "key",
        "value",
        "key",
        "func",
        "key",
        "value",
        "key",
        "key",
        "array",
        "key",
        "datum",
        "index",
        "value",
        "value",
        "value",
        "func",
        "value",
        "array",
        "merge",
        "arrays",
        "stop",
        "start",
        "stop",
        "step",
        "permute",
        "array",
        "key",
        "keys",
        "permute",
        "key",
        "keys",
        "arrays",
        "transpose",
        "matrix",
        "pairs",
        "array",
        "func",
        "datum",
        "comparator",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "func",
        "values",
        "array",
        "key",
        "array",
        "mapType",
        "d3",
        "array",
        "nest",
        "random",
        "normal",
        "mean",
        "deviation",
        "logNormal",
        "mean",
        "deviation",
        "bates",
        "count",
        "irwinHall",
        "count",
        "transform",
        "transform",
        "format",
        "specifier",
        "n",
        "n",
        "formatPrefix",
        "value",
        "precision",
        "round",
        "x",
        "n",
        "requote",
        "r",
        "g",
        "b",
        "color",
        "r",
        "g",
        "b",
        "color",
        "k",
        "k",
        "h",
        "s",
        "l",
        "color",
        "h",
        "s",
        "l",
        "color",
        "k",
        "k",
        "h",
        "c",
        "l",
        "color",
        "h",
        "c",
        "l",
        "color",
        "k",
        "k",
        "l",
        "a",
        "b",
        "color",
        "l",
        "a",
        "b",
        "color",
        "k",
        "k",
        "ns",
        "key",
        "qualify",
        "name",
        "functor",
        "value",
        "functor",
        "value",
        "rebind",
        "target",
        "source",
        "names",
        "dispatch",
        "names",
        "args",
        "listener",
        "args",
        "args",
        "scale",
        "identity",
        "n",
        "n",
        "numbers",
        "numbers",
        "count",
        "count",
        "format",
        "n",
        "linear",
        "linear",
        "linear",
        "x",
        "y",
        "numbers",
        "values",
        "values",
        "a",
        "b",
        "t",
        "factory",
        "a",
        "b",
        "t",
        "clamp",
        "count",
        "count",
        "count",
        "format",
        "n",
        "sqrt",
        "sqrt",
        "sqrt",
        "pow",
        "pow",
        "pow",
        "x",
        "y",
        "numbers",
        "values",
        "values",
        "k",
        "a",
        "b",
        "t",
        "factory",
        "a",
        "b",
        "t",
        "clamp",
        "m",
        "count",
        "count",
        "format",
        "n",
        "log",
        "log",
        "log",
        "x",
        "y",
        "numbers",
        "values",
        "values",
        "a",
        "b",
        "t",
        "factory",
        "a",
        "b",
        "t",
        "clamp",
        "count",
        "format",
        "t",
        "quantize",
        "x",
        "y",
        "numbers",
        "values",
        "quantile",
        "x",
        "y",
        "numbers",
        "values",
        "threshold",
        "threshold",
        "x",
        "y",
        "domain",
        "values",
        "ordinal",
        "ordinal",
        "category10",
        "category10",
        "category20",
        "category20",
        "category20b",
        "category20b",
        "category20c",
        "category20c",
        "x",
        "values",
        "values",
        "interval",
        "padding",
        "interval",
        "padding",
        "interval",
        "padding",
        "outerPadding",
        "interval",
        "padding",
        "outerPadding",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "b",
        "t",
        "interpolate",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolate",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolate",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolateNumber",
        "a",
        "b",
        "t",
        "interpolateRound",
        "a",
        "b",
        "t",
        "interpolateString",
        "a",
        "b",
        "t",
        "interpolateRgb",
        "a",
        "b",
        "t",
        "interpolateHsl",
        "a",
        "b",
        "t",
        "interpolateLab",
        "a",
        "b",
        "t",
        "interpolateHcl",
        "a",
        "b",
        "t",
        "interpolateArray",
        "a",
        "b",
        "t",
        "interpolateArray",
        "a",
        "b",
        "t",
        "interpolateArray",
        "a",
        "b",
        "t",
        "interpolateObject",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolateObject",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolateObject",
        "a",
        "key",
        "b",
        "key",
        "t",
        "key",
        "interpolateTransform",
        "a",
        "b",
        "t",
        "interpolateZoom",
        "a",
        "b",
        "t",
        "a",
        "b",
        "t",
        "time",
        "d",
        "d",
        "d",
        "d",
        "start",
        "stop",
        "step",
        "date",
        "step",
        "d",
        "d",
        "d",
        "d",
        "start",
        "stop",
        "step",
        "date",
        "step",
        "seconds",
        "start",
        "stop",
        "step",
        "minutes",
        "start",
        "stop",
        "step",
        "hours",
        "start",
        "stop",
        "step",
        "days",
        "start",
        "stop",
        "step",
        "weeks",
        "start",
        "stop",
        "step",
        "sundays",
        "start",
        "stop",
        "step",
        "mondays",
        "start",
        "stop",
        "step",
        "tuesdays",
        "start",
        "stop",
        "step",
        "wednesdays",
        "start",
        "stop",
        "step",
        "thursdays",
        "start",
        "stop",
        "step",
        "fridays",
        "start",
        "stop",
        "step",
        "saturdays",
        "start",
        "stop",
        "step",
        "months",
        "start",
        "stop",
        "step",
        "years",
        "start",
        "stop",
        "step",
        "dayOfYear",
        "d",
        "weekOfYear",
        "d",
        "sundayOfYear",
        "d",
        "mondayOfYear",
        "d",
        "tuesdayOfYear",
        "d",
        "wednesdayOfYear",
        "d",
        "fridayOfYear",
        "d",
        "saturdayOfYear",
        "d",
        "format",
        "specifier",
        "format",
        "multi",
        "formats",
        "d",
        "utc",
        "specifier",
        "d",
        "input",
        "scale",
        "scale",
        "scale",
        "scale",
        "utc",
        "utc",
        "utc",
        "x",
        "y",
        "dates",
        "dates",
        "interval",
        "step",
        "values",
        "values",
        "a",
        "b",
        "t",
        "factory",
        "a",
        "b",
        "t",
        "clamp",
        "interval",
        "step",
        "count",
        "count",
        "d",
        "behavior",
        "drag",
        "selection",
        "d",
        "i",
        "listener",
        "d",
        "i",
        "d",
        "i",
        "accessor",
        "d",
        "i",
        "zoom",
        "zoom",
        "values",
        "y",
        "values",
        "selection",
        "translate",
        "scale",
        "extent",
        "center",
        "size",
        "zoom",
        "x",
        "zoom",
        "zoom",
        "y",
        "zoom",
        "d",
        "i",
        "listener",
        "d",
        "i",
        "selection",
        "transition",
        "geo",
        "path",
        "feature",
        "index",
        "feature",
        "feature",
        "feature",
        "coordinates",
        "stream",
        "projection",
        "coordinates",
        "datum",
        "index",
        "radius",
        "radius",
        "datum",
        "index",
        "context",
        "graticule",
        "extent",
        "extent",
        "extent",
        "step",
        "step",
        "step",
        "precision",
        "circle",
        "args",
        "args",
        "origin",
        "origin",
        "args",
        "angle",
        "precision",
        "area",
        "feature",
        "centroid",
        "feature",
        "bounds",
        "feature",
        "distance",
        "a",
        "b",
        "length",
        "feature",
        "interpolate",
        "a",
        "b",
        "t",
        "rotation",
        "rotate",
        "location",
        "location",
        "stream",
        "listener",
        "x",
        "y",
        "z",
        "transform",
        "methods",
        "x",
        "y",
        "z",
        "stream",
        "clipExtent",
        "extent",
        "projection",
        "raw",
        "projection",
        "raw",
        "projectionMutator",
        "factory",
        "args",
        "args",
        "projectionMutator",
        "factory",
        "args",
        "args",
        "albers",
        "albersUsa",
        "azimuthalEqualArea",
        "azimuthalEqualArea",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "azimuthalEquidistant",
        "azimuthalEquidistant",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "conicConformal",
        "conicConformal",
        "raw",
        "phi0",
        "phi1",
        "conicEqualArea",
        "conicEqualArea",
        "raw",
        "phi0",
        "phi1",
        "conicEquidistant",
        "conicEquidistant",
        "raw",
        "phi0",
        "phi1",
        "equirectangular",
        "equirectangular",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "gnomonic",
        "gnomonic",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "mercator",
        "mercator",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "orthographic",
        "orthographic",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "stereographic",
        "stereographic",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "transverseMercator",
        "transverseMercator",
        "raw",
        "phi",
        "raw",
        "invert",
        "x",
        "y",
        "location",
        "rotation",
        "location",
        "point",
        "scale",
        "angle",
        "extent",
        "precision",
        "listener",
        "point",
        "parallels",
        "rotation",
        "location",
        "point",
        "scale",
        "angle",
        "extent",
        "precision",
        "phi",
        "x",
        "y",
        "svg",
        "line",
        "line",
        "data",
        "d",
        "i",
        "x",
        "x",
        "d",
        "i",
        "d",
        "i",
        "x",
        "y",
        "d",
        "i",
        "points",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "points",
        "tension",
        "d",
        "i",
        "defined",
        "d",
        "i",
        "line",
        "radial",
        "radial",
        "data",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "points",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "points",
        "tension",
        "d",
        "i",
        "defined",
        "d",
        "i",
        "area",
        "area",
        "data",
        "d",
        "i",
        "x",
        "x",
        "d",
        "i",
        "d",
        "i",
        "x0",
        "x0",
        "d",
        "i",
        "d",
        "i",
        "x1",
        "x1",
        "d",
        "i",
        "d",
        "i",
        "y",
        "y",
        "d",
        "i",
        "d",
        "i",
        "y0",
        "y0",
        "d",
        "i",
        "d",
        "i",
        "y1",
        "y1",
        "d",
        "i",
        "points",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "tension",
        "d",
        "i",
        "defined",
        "d",
        "i",
        "area",
        "radial",
        "radial",
        "data",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "innerRadius",
        "innerRadius",
        "d",
        "i",
        "d",
        "i",
        "outerRadius",
        "outerRadius",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "d",
        "i",
        "startAngle",
        "startAngle",
        "d",
        "i",
        "d",
        "i",
        "endAngle",
        "endAngle",
        "d",
        "i",
        "points",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "interpolate",
        "points",
        "tension",
        "d",
        "i",
        "defined",
        "d",
        "i",
        "arc",
        "arc",
        "arc",
        "arc",
        "d",
        "i",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "radius",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "d",
        "i",
        "symbol",
        "symbol",
        "d",
        "i",
        "d",
        "i",
        "d",
        "i",
        "d",
        "i",
        "size",
        "size",
        "d",
        "i",
        "chord",
        "chord",
        "chord",
        "chord",
        "chord",
        "chord",
        "chord",
        "chord",
        "d",
        "i",
        "d",
        "i",
        "source",
        "source",
        "d",
        "i",
        "d",
        "i",
        "target",
        "target",
        "d",
        "i",
        "d",
        "i",
        "radius",
        "radius",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "d",
        "i",
        "angle",
        "angle",
        "d",
        "i",
        "diagonal",
        "diagonal",
        "diagonal",
        "diagonal",
        "diagonal",
        "diagonal",
        "diagonal",
        "diagonal",
        "d",
        "i",
        "d",
        "i",
        "source",
        "source",
        "d",
        "i",
        "d",
        "i",
        "target",
        "target",
        "d",
        "i",
        "d",
        "i",
        "projection",
        "d",
        "i",
        "diagonal",
        "radial",
        "radial",
        "radial",
        "d",
        "i",
        "d",
        "i",
        "source",
        "source",
        "d",
        "i",
        "d",
        "i",
        "target",
        "target",
        "d",
        "i",
        "d",
        "i",
        "projection",
        "d",
        "i",
        "axis",
        "selection",
        "selection",
        "scale",
        "orientation",
        "args",
        "values",
        "size",
        "inner",
        "outer",
        "size",
        "size",
        "padding",
        "t",
        "format",
        "t",
        "brush",
        "brush",
        "brush",
        "domain",
        "y",
        "selection",
        "selection",
        "selection",
        "selection",
        "brush",
        "x",
        "brush",
        "brush",
        "y",
        "brush",
        "extent",
        "clamp",
        "datum",
        "index",
        "datum",
        "index",
        "datum",
        "index",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "listener",
        "datum",
        "index",
        "xhr",
        "url",
        "mimeType",
        "callback",
        "err",
        "data",
        "xhr",
        "url",
        "callback",
        "err",
        "data",
        "name",
        "name",
        "value",
        "request",
        "value",
        "request",
        "callback",
        "err",
        "data",
        "data",
        "callback",
        "err",
        "data",
        "callback",
        "err",
        "data",
        "method",
        "data",
        "callback",
        "err",
        "data",
        "method",
        "callback",
        "err",
        "data",
        "request",
        "request",
        "response",
        "err",
        "args",
        "listener",
        "request",
        "listener",
        "request",
        "listener",
        "response",
        "listener",
        "err",
        "listener",
        "args",
        "text",
        "url",
        "mimeType",
        "callback",
        "err",
        "data",
        "text",
        "url",
        "callback",
        "err",
        "data",
        "json",
        "url",
        "callback",
        "err",
        "data",
        "xml",
        "url",
        "mimeType",
        "callback",
        "err",
        "data",
        "xml",
        "url",
        "callback",
        "err",
        "data",
        "html",
        "url",
        "callback",
        "err",
        "data",
        "dsv",
        "delimiter",
        "mimeType",
        "url",
        "callback",
        "rows",
        "key",
        "key",
        "url",
        "callback",
        "error",
        "rows",
        "key",
        "key",
        "url",
        "key",
        "url",
        "accessor",
        "row",
        "key",
        "callback",
        "rows",
        "url",
        "accessor",
        "row",
        "key",
        "callback",
        "error",
        "rows",
        "url",
        "accessor",
        "row",
        "key",
        "key",
        "accessor",
        "row",
        "key",
        "index",
        "accessor",
        "row",
        "index",
        "rows",
        "rows",
        "row",
        "key",
        "accessor",
        "row",
        "key",
        "name",
        "name",
        "value",
        "request",
        "value",
        "request",
        "callback",
        "err",
        "data",
        "data",
        "callback",
        "err",
        "data",
        "callback",
        "err",
        "data",
        "method",
        "data",
        "callback",
        "err",
        "data",
        "method",
        "callback",
        "err",
        "data",
        "request",
        "request",
        "response",
        "err",
        "args",
        "listener",
        "request",
        "listener",
        "request",
        "listener",
        "response",
        "listener",
        "err",
        "listener",
        "args",
        "locale",
        "definition",
        "specifier",
        "n",
        "specifier",
        "time",
        "specifier",
        "time",
        "layout",
        "bundle",
        "bundle",
        "bundle",
        "bundle",
        "bundle",
        "bundle",
        "links",
        "bundle",
        "chord",
        "chord",
        "matrix",
        "padding",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "chord",
        "chord",
        "cluster",
        "cluster",
        "cluster",
        "cluster",
        "cluster",
        "cluster",
        "root",
        "root",
        "nodes",
        "cluster",
        "node",
        "accessor",
        "node",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "a",
        "b",
        "separation",
        "a",
        "b",
        "size",
        "nodeSize",
        "a",
        "value",
        "a",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "force",
        "size",
        "link",
        "index",
        "distance",
        "distance",
        "link",
        "index",
        "link",
        "index",
        "strength",
        "strength",
        "link",
        "index",
        "friction",
        "node",
        "index",
        "charge",
        "charge",
        "node",
        "index",
        "distance",
        "theta",
        "gravity",
        "nodes",
        "links",
        "links",
        "value",
        "force",
        "listener",
        "force",
        "behavior",
        "selection",
        "hierarchy",
        "hierarchy",
        "hierarchy",
        "hierarchy",
        "hierarchy",
        "hierarchy",
        "root",
        "node",
        "accessor",
        "node",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "node",
        "accessor",
        "node",
        "root",
        "histogram",
        "histogram",
        "histogram",
        "values",
        "index",
        "histogram",
        "datum",
        "index",
        "value",
        "datum",
        "index",
        "values",
        "index",
        "values",
        "index",
        "values",
        "index",
        "count",
        "thresholds",
        "func",
        "values",
        "index",
        "frequency",
        "pack",
        "pack",
        "pack",
        "pack",
        "pack",
        "pack",
        "root",
        "root",
        "nodes",
        "pack",
        "node",
        "depth",
        "children",
        "node",
        "depth",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "node",
        "value",
        "node",
        "size",
        "node",
        "radius",
        "radius",
        "node",
        "padding",
        "pie",
        "pie",
        "pie",
        "data",
        "index",
        "pie",
        "datum",
        "index",
        "accessor",
        "datum",
        "index",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "data",
        "index",
        "angle",
        "angle",
        "data",
        "index",
        "data",
        "index",
        "angle",
        "angle",
        "data",
        "index",
        "data",
        "index",
        "angle",
        "angle",
        "data",
        "index",
        "stack",
        "stack",
        "stack",
        "stack",
        "stack",
        "stack",
        "layers",
        "index",
        "layer",
        "index",
        "accessor",
        "layer",
        "index",
        "data",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "data",
        "data",
        "order",
        "order",
        "order",
        "order",
        "order",
        "data",
        "value",
        "index",
        "accessor",
        "value",
        "index",
        "value",
        "index",
        "accesor",
        "value",
        "index",
        "value",
        "y0",
        "y",
        "setter",
        "value",
        "y0",
        "y",
        "tree",
        "tree",
        "tree",
        "tree",
        "tree",
        "root",
        "index",
        "root",
        "index",
        "nodes",
        "tree",
        "datum",
        "index",
        "children",
        "datum",
        "index",
        "a",
        "b",
        "separation",
        "a",
        "b",
        "size",
        "size",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "datum",
        "index",
        "value",
        "datum",
        "index",
        "treemap",
        "treemap",
        "treemap",
        "treemap",
        "treemap",
        "treemap",
        "root",
        "index",
        "root",
        "index",
        "nodes",
        "treemap",
        "node",
        "depth",
        "children",
        "node",
        "depth",
        "a",
        "b",
        "comparator",
        "a",
        "b",
        "node",
        "index",
        "value",
        "node",
        "index",
        "size",
        "node",
        "depth",
        "treemap",
        "padding",
        "treemap",
        "padding",
        "node",
        "depth",
        "treemap",
        "round",
        "sticky",
        "mode",
        "mode",
        "mode",
        "mode",
        "mode",
        "ratio",
        "geom",
        "voronoi",
        "voronoi",
        "voronoi",
        "data",
        "vertex",
        "x",
        "vertex",
        "vertex",
        "y",
        "vertex",
        "extent",
        "data",
        "voronoi",
        "data",
        "delaunay",
        "vertices",
        "quadtree",
        "quadtree",
        "quadtree",
        "point",
        "callback",
        "node",
        "x1",
        "y1",
        "x2",
        "y2",
        "point",
        "points",
        "quadtree",
        "datum",
        "index",
        "x",
        "x",
        "datum",
        "index",
        "datum",
        "index",
        "y",
        "y",
        "datum",
        "index",
        "extent",
        "hull",
        "vertices",
        "hull",
        "hull",
        "vertices",
        "datum",
        "x",
        "datum",
        "datum",
        "y",
        "datum",
        "polygon",
        "vertices",
        "subject",
        "d3"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'linear'",
        "'linear-in'",
        "'linear-out'",
        "'linear-in-out'",
        "'linear-out-in'",
        "'poly'",
        "'poly-in'",
        "'poly-out'",
        "'poly-in-out'",
        "'poly-out-in'",
        "'quad'",
        "'quad-in'",
        "'quad-out'",
        "'quad-in-out'",
        "'quad-out-in'",
        "'cubic'",
        "'cubic-in'",
        "'cubic-out'",
        "'cubic-in-out'",
        "'cubic-out-in'",
        "'sin'",
        "'sin-in'",
        "'sin-out'",
        "'sin-in-out'",
        "'sin-out-in'",
        "'circle'",
        "'circle-in'",
        "'circle-out'",
        "'circle-in-out'",
        "'circle-out-in'",
        "'elastic'",
        "'elastic-in'",
        "'elastic-out'",
        "'elastic-in-out'",
        "'elastic-out-in'",
        "'back'",
        "'back-in'",
        "'back-out'",
        "'back-in-out'",
        "'back-out-in'",
        "'bounce'",
        "'bounce-in'",
        "'bounce-out'",
        "'bounce-in-out'",
        "'bounce-out-in'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"linear\"",
        "\"linear-closed\"",
        "\"step\"",
        "\"step-before\"",
        "\"step-after\"",
        "\"basis\"",
        "\"basis-open\"",
        "\"basis-closed\"",
        "\"bundle\"",
        "\"cardinal\"",
        "\"cardinal-open\"",
        "\"cardinal-closed\"",
        "\"monotone\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"linear\"",
        "\"linear-closed\"",
        "\"step\"",
        "\"step-before\"",
        "\"step-after\"",
        "\"basis\"",
        "\"basis-open\"",
        "\"basis-closed\"",
        "\"bundle\"",
        "\"cardinal\"",
        "\"cardinal-open\"",
        "\"cardinal-closed\"",
        "\"monotone\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"linear\"",
        "\"step\"",
        "\"step-before\"",
        "\"step-after\"",
        "\"basis\"",
        "\"basis-open\"",
        "\"cardinal\"",
        "\"cardinal-open\"",
        "\"monotone\"",
        "string",
        "string",
        "string",
        "string",
        "\"linear\"",
        "\"step\"",
        "\"step-before\"",
        "\"step-after\"",
        "\"basis\"",
        "\"basis-open\"",
        "\"cardinal\"",
        "\"cardinal-open\"",
        "\"monotone\"",
        "string",
        "string",
        "string",
        "string",
        "\"auto\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'brushstart'",
        "'brush'",
        "'brushend'",
        "string",
        "'brushstart'",
        "'brush'",
        "'brushend'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"beforesend\"",
        "\"progress\"",
        "\"load\"",
        "\"error\"",
        "string",
        "\"beforesend\"",
        "\"progress\"",
        "\"load\"",
        "\"error\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"beforesend\"",
        "\"progress\"",
        "\"load\"",
        "\"error\"",
        "string",
        "\"beforesend\"",
        "\"progress\"",
        "\"load\"",
        "\"error\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"silhouette\"",
        "\"wiggle\"",
        "\"expand\"",
        "\"zero\"",
        "string",
        "\"inside-out\"",
        "\"reverse\"",
        "\"default\"",
        "string",
        "string",
        "\"squarify\"",
        "\"slice\"",
        "\"dice\"",
        "\"slice-dice\"",
        "string",
        "'d3'"
    ],
    "variables": [
        "version",
        "prototype",
        "prototype",
        "bisect",
        "rgb",
        "hsl",
        "hcl",
        "lab",
        "color",
        "prefix",
        "interpolators",
        "second",
        "minute",
        "hour",
        "day",
        "week",
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday",
        "month",
        "year",
        "iso",
        "symbolTypes",
        "csv",
        "tsv"
    ],
    "comments": [
        "Type definitions for d3JS",
        "Project: http://d3js.org/",
        "Definitions by: Alex Ford <https://github.com/gustavderdrache>, Boris Yankov <https://github.com/borisyankov>",
        "Definitions: https://github.com/borisyankov/DefinitelyTyped",
        "NB. this is limited to primitive values due to D3's use of the <, >, and >= operators. Results get weird for object instances.",
        "TODO construct n-tuples from n input arrays",
        "we need this to exist"
    ],
    "docstrings": [
        "* The current version of D3.js.",
        "* Find the first element that matches the given selector string.",
        "* Create a selection from the given node reference.",
        "* Find all elements that match the given selector string.",
        "* Create a selection from the given list of nodes.",
        "* Returns the root selection (as if by d3.select(document.documentElement)). This function may be used for 'instanceof' tests, and extending its prototype will add properties to all selections.",
        "* Selections are grouped into arrays of nodes, with the parent tracked in the 'parentNode' property.",
        "* Retrieve a grouped selection.",
        "* The number of groups in this selection.",
        "* Retrieve the value of the given attribute for the first node in the selection.\n             *\n             * @param name The attribute name to query. May be prefixed (see d3.ns.prefix).",
        "* For all nodes, set the attribute to the specified constant value. Use null to remove.\n             *\n             * @param name The attribute name, optionally prefixed.\n             * @param value The attribute value to use. Note that this is coerced to a string automatically.",
        "* Derive an attribute value for each node in the selection based on bound data.\n             *\n             * @param name The attribute name, optionally prefixed.\n             * @param value The function of the datum (the bound data item) and index (the position in the subgrouping) which computes the attribute value. If the function returns null, the attribute is removed.",
        "* Set multiple properties at once using an Object. D3 iterates over all enumerable properties and either sets or computes the attribute's value based on the corresponding entry in the Object.\n             *\n             * @param obj A key-value mapping corresponding to attributes and values. If the value is a simple string or number, it is taken as a constant. Otherwise, it is a function that derives the attribute value.",
        "* Returns true if the first node in this selection has the given class list. If multiple classes are specified (i.e., \"foo bar\"), then returns true only if all classes match.\n             *\n             * @param name The class list to query.",
        "* Adds (or removes) the given class list.\n             *\n             * @param name The class list to toggle. Spaces separate class names: \"foo bar\" is a list of two classes.\n             * @param value If true, add the classes. If false, remove them.",
        "* Determine if the given class list should be toggled for each node in the selection.\n             *\n             * @param name The class list. Spaces separate multiple class names.\n             * @param value The function to run for each node. Should return true to add the class to the node, or false to remove it.",
        "* Set or derive classes for multiple class lists at once.\n             *\n             * @param obj An Object mapping class lists to values that are either plain booleans or functions that return booleans.",
        "* Retrieve the computed style value for the first node in the selection.\n             * @param name The CSS property name to query",
        "* Set a style property for all nodes in the selection.\n             * @param name the CSS property name\n             * @param value the property value\n             * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Derive a property value for each node in the selection.\n             * @param name the CSS property name\n             * @param value the function to derive the value\n             * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Set a large number of CSS properties from an object.\n             *\n             * @param obj an Object whose keys correspond to CSS property names and values are either constants or functions that derive property values\n             * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Retrieve an arbitrary node property such as the 'checked' property of checkboxes, or the 'value' of text boxes.\n             *\n             * @param name the node's property to retrieve",
        "* For each node, set the property value. Internally, this sets the node property directly (e.g., node[name] = value), so take care not to mutate special properties like __proto__.\n             *\n             * @param name the property name\n             * @param value the property value",
        "* For each node, derive the property value. Internally, this sets the node property directly (e.g., node[name] = value), so take care not to mutate special properties like __proto__.\n             *\n             * @param name the property name\n             * @param value the function used to derive the property's value",
        "* Set multiple node properties. Caveats apply: take care not to mutate special properties like __proto__.\n             *\n             * @param obj an Object whose keys correspond to node properties and values are either constants or functions that will compute a value.",
        "* Retrieve the textContent of the first node in the selection.",
        "* Set the textContent of each node in the selection.\n             * @param value the text to use for all nodes",
        "* Compute the textContent of each node in the selection.\n             * @param value the function which will compute the text",
        "* Retrieve the HTML content of the first node in the selection. Uses 'innerHTML' internally and will not work with SVG or other elements without a polyfill.",
        "* Set the HTML content of every node in the selection. Uses 'innerHTML' internally and thus will not work with SVG or other elements without a polyfill.\n             * @param value the HTML content to use.",
        "* Compute the HTML content for each node in the selection. Uses 'innerHTML' internally and thus will not work with SVG or other elements without a polyfill.\n             * @param value the function to compute HTML content",
        "* Appends a new child to each node in the selection. This child will inherit the parent's data (if available). Returns a fresh selection consisting of the newly-appended children.\n             *\n             * @param name the element name to append. May be prefixed (see d3.ns.prefix).",
        "* Appends a new child to each node in the selection by computing a new node. This child will inherit the parent's data (if available). Returns a fresh selection consisting of the newly-appended children.\n             *\n             * @param name the function to compute a new element",
        "* Inserts a new child to each node in the selection. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n             * @param name the element name to append. May be prefixed (see d3.ns.prefix).\n             * @param before the selector to determine position (e.g., \":first-child\")",
        "* Inserts a new child to each node in the selection. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n             * @param name the element name to append. May be prefixed (see d3.ns.prefix).\n             * @param before a function to determine the node to use as the next sibling",
        "* Inserts a new child to the end of each node in the selection by computing a new node. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n             * @param name the function to compute a new child\n             * @param before the selector to determine position (e.g., \":first-child\")",
        "* Inserts a new child to the end of each node in the selection by computing a new node. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n             * @param name the function to compute a new child\n             * @param before a function to determine the node to use as the next sibling",
        "* Removes the elements from the DOM. They are in a detached state and may be re-added (though there is currently no dedicated API for doing so).",
        "* Retrieves the data bound to the first group in this selection.",
        "* Binds data to this selection.\n             * @param data the array of data to bind to this selection\n             * @param key the optional function to determine the unique key for each piece of data. When unspecified, uses the index of the element.",
        "* Derives data to bind to this selection.\n             * @param data the function to derive data. Must return an array.\n             * @param key the optional function to determine the unique key for each data item. When unspecified, uses the index of the element.",
        "* Filters the selection, returning only those nodes that match the given CSS selector.\n             * @param selector the CSS selector",
        "* Filters the selection, returning only those nodes for which the given function returned true.\n             * @param selector the filter function",
        "* Return the data item bound to the first element in the selection.",
        "* Set the data item for each node in the selection.\n             * @param value the constant element to use for each node",
        "* Derive the data item for each node in the selection. Useful for situations such as the HTML5 'dataset' attribute.\n             * @param value the function to compute data for each node",
        "* Reorders nodes in the selection based on the given comparator. Nodes are re-inserted into the document once sorted.\n             * @param comparator the comparison function, which defaults to d3.ascending",
        "* Reorders nodes in the document to match the selection order. More efficient than calling sort() if the selection is already ordered.",
        "* Returns the listener (if any) for the given event.\n             * @param type the type of event to load the listener for. May have a namespace (e.g., \".foo\") at the end.",
        "* Adds a listener for the specified event. If one was already registered, it is removed before the new listener is added. The return value of the listener function is ignored.\n             * @param type the of event to listen to. May have a namespace (e.g., \".foo\") at the end.\n             * @param listener an event listener function, or null to unregister\n             * @param capture sets the DOM useCapture flag",
        "* Begins a new transition. Interrupts any active transitions of the same name.\n             * @param name the transition name (defaults to \"\")",
        "* Interrupts the active transition of the provided name. Does not cancel scheduled transitions.\n             * @param name the transition name (defaults to \"\")",
        "* Creates a subselection by finding the first descendent matching the selector string. Bound data is inherited.\n             * @param selector the CSS selector to match against",
        "* Creates a subselection by using a function to find descendent elements. Bound data is inherited.\n             * @param selector the function to find matching descendants",
        "* Creates a subselection by finding all descendents that match the given selector. Bound data is not inherited.\n             * @param selector the CSS selector to match against",
        "* Creates a subselection by using a function to find descendent elements. Bound data is not inherited.\n             * @param selector the function to find matching descendents",
        "* Invoke the given function for each element in the selection. The return value of the function is ignored.\n             * @param func the function to invoke",
        "* Call a function on the selection. sel.call(foo) is equivalent to foo(sel).\n             * @param func the function to call on the selection\n             * @param args any optional args",
        "* Returns true if the current selection is empty.",
        "* Returns the first non-null element in the selection, or null otherwise.",
        "* Returns the total number of elements in the selection.",
        "* Returns the placeholder nodes for each data element for which no corresponding DOM element was found.",
        "* Returns a selection for those DOM nodes for which no new data element was found.",
        "* Administrivia: JavaScript primitive types, or \"things that toString() predictably\".",
        "* Administrivia: anything with a valueOf(): number method is comparable, so we allow it in numeric operations",
        "* A grouped array of nodes.\n     * @param Datum the data bound to this selection.",
        "* Retrieve a grouped selection.",
        "* The number of groups in this selection.",
        "* Retrieve the value of the given attribute for the first node in the selection.\n         *\n         * @param name The attribute name to query. May be prefixed (see d3.ns.prefix).",
        "* For all nodes, set the attribute to the specified constant value. Use null to remove.\n         *\n         * @param name The attribute name, optionally prefixed.\n         * @param value The attribute value to use. Note that this is coerced to a string automatically.",
        "* Derive an attribute value for each node in the selection based on bound data.\n         *\n         * @param name The attribute name, optionally prefixed.\n         * @param value The function of the datum (the bound data item) and index (the position in the subgrouping) which computes the attribute value. If the function returns null, the attribute is removed.",
        "* Set multiple properties at once using an Object. D3 iterates over all enumerable properties and either sets or computes the attribute's value based on the corresponding entry in the Object.\n         *\n         * @param obj A key-value mapping corresponding to attributes and values. If the value is a simple string or number, it is taken as a constant. Otherwise, it is a function that derives the attribute value.",
        "* Returns true if the first node in this selection has the given class list. If multiple classes are specified (i.e., \"foo bar\"), then returns true only if all classes match.\n         *\n         * @param name The class list to query.",
        "* Adds (or removes) the given class list.\n         *\n         * @param name The class list to toggle. Spaces separate class names: \"foo bar\" is a list of two classes.\n         * @param value If true, add the classes. If false, remove them.",
        "* Determine if the given class list should be toggled for each node in the selection.\n         *\n         * @param name The class list. Spaces separate multiple class names.\n         * @param value The function to run for each node. Should return true to add the class to the node, or false to remove it.",
        "* Set or derive classes for multiple class lists at once.\n         *\n         * @param obj An Object mapping class lists to values that are either plain booleans or functions that return booleans.",
        "* Retrieve the computed style value for the first node in the selection.\n         * @param name The CSS property name to query",
        "* Set a style property for all nodes in the selection.\n         * @param name the CSS property name\n         * @param value the property value\n         * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Derive a property value for each node in the selection.\n         * @param name the CSS property name\n         * @param value the function to derive the value\n         * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Set a large number of CSS properties from an object.\n         *\n         * @param obj an Object whose keys correspond to CSS property names and values are either constants or functions that derive property values\n         * @param priority if specified, either null or the string \"important\" (no exclamation mark)",
        "* Retrieve an arbitrary node property such as the 'checked' property of checkboxes, or the 'value' of text boxes.\n         *\n         * @param name the node's property to retrieve",
        "* For each node, set the property value. Internally, this sets the node property directly (e.g., node[name] = value), so take care not to mutate special properties like __proto__.\n         *\n         * @param name the property name\n         * @param value the property value",
        "* For each node, derive the property value. Internally, this sets the node property directly (e.g., node[name] = value), so take care not to mutate special properties like __proto__.\n         *\n         * @param name the property name\n         * @param value the function used to derive the property's value",
        "* Set multiple node properties. Caveats apply: take care not to mutate special properties like __proto__.\n         *\n         * @param obj an Object whose keys correspond to node properties and values are either constants or functions that will compute a value.",
        "* Retrieve the textContent of the first node in the selection.",
        "* Set the textContent of each node in the selection.\n         * @param value the text to use for all nodes",
        "* Compute the textContent of each node in the selection.\n         * @param value the function which will compute the text",
        "* Retrieve the HTML content of the first node in the selection. Uses 'innerHTML' internally and will not work with SVG or other elements without a polyfill.",
        "* Set the HTML content of every node in the selection. Uses 'innerHTML' internally and thus will not work with SVG or other elements without a polyfill.\n         * @param value the HTML content to use.",
        "* Compute the HTML content for each node in the selection. Uses 'innerHTML' internally and thus will not work with SVG or other elements without a polyfill.\n         * @param value the function to compute HTML content",
        "* Appends a new child to each node in the selection. This child will inherit the parent's data (if available). Returns a fresh selection consisting of the newly-appended children.\n         *\n         * @param name the element name to append. May be prefixed (see d3.ns.prefix).",
        "* Appends a new child to each node in the selection by computing a new node. This child will inherit the parent's data (if available). Returns a fresh selection consisting of the newly-appended children.\n         *\n         * @param name the function to compute a new element",
        "* Inserts a new child to each node in the selection. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n         * @param name the element name to append. May be prefixed (see d3.ns.prefix).\n         * @param before the selector to determine position (e.g., \":first-child\")",
        "* Inserts a new child to each node in the selection. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n         * @param name the element name to append. May be prefixed (see d3.ns.prefix).\n         * @param before a function to determine the node to use as the next sibling",
        "* Inserts a new child to the end of each node in the selection by computing a new node. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n         * @param name the function to compute a new child\n         * @param before the selector to determine position (e.g., \":first-child\")",
        "* Inserts a new child to the end of each node in the selection by computing a new node. This child will inherit its parent's data (if available). Returns a fresh selection consisting of the newly-inserted children.\n         * @param name the function to compute a new child\n         * @param before a function to determine the node to use as the next sibling",
        "* Removes the elements from the DOM. They are in a detached state and may be re-added (though there is currently no dedicated API for doing so).",
        "* Retrieves the data bound to the first group in this selection.",
        "* Binds data to this selection.\n         * @param data the array of data to bind to this selection\n         * @param key the optional function to determine the unique key for each piece of data. When unspecified, uses the index of the element.",
        "* Derives data to bind to this selection.\n         * @param data the function to derive data. Must return an array.\n         * @param key the optional function to determine the unique key for each data item. When unspecified, uses the index of the element.",
        "* Filters the selection, returning only those nodes that match the given CSS selector.\n         * @param selector the CSS selector",
        "* Filters the selection, returning only those nodes for which the given function returned true.\n         * @param selector the filter function",
        "* Return the data item bound to the first element in the selection.",
        "* Derive the data item for each node in the selection. Useful for situations such as the HTML5 'dataset' attribute.\n         * @param value the function to compute data for each node",
        "* Set the data item for each node in the selection.\n         * @param value the constant element to use for each node",
        "* Reorders nodes in the selection based on the given comparator. Nodes are re-inserted into the document once sorted.\n         * @param comparator the comparison function, which defaults to d3.ascending",
        "* Reorders nodes in the document to match the selection order. More efficient than calling sort() if the selection is already ordered.",
        "* Returns the listener (if any) for the given event.\n         * @param type the type of event to load the listener for. May have a namespace (e.g., \".foo\") at the end.",
        "* Adds a listener for the specified event. If one was already registered, it is removed before the new listener is added. The return value of the listener function is ignored.\n         * @param type the of event to listen to. May have a namespace (e.g., \".foo\") at the end.\n         * @param listener an event listener function, or null to unregister\n         * @param capture sets the DOM useCapture flag",
        "* Begins a new transition. Interrupts any active transitions of the same name.\n         * @param name the transition name (defaults to \"\")",
        "* Interrupts the active transition of the provided name. Does not cancel scheduled transitions.\n         * @param name the transition name (defaults to \"\")",
        "* Creates a subselection by finding the first descendent matching the selector string. Bound data is inherited.\n         * @param selector the CSS selector to match against",
        "* Creates a subselection by using a function to find descendent elements. Bound data is inherited.\n         * @param selector the function to find matching descendants",
        "* Creates a subselection by finding all descendents that match the given selector. Bound data is not inherited.\n         * @param selector the CSS selector to match against",
        "* Creates a subselection by finding all descendants that match the given selector. Bound data is not inherited.\n         *\n         * Use this overload when data-binding a subselection (that is, sel.selectAll('.foo').data(d => ...)). The type will carry over.",
        "* Creates a subselection by using a function to find descendent elements. Bound data is not inherited.\n         * @param selector the function to find matching descendents",
        "* Creates a subselection by using a function to find descendent elements. Bound data is not inherited.\n         *\n         * Use this overload when data-binding a subselection (that is, sel.selectAll('.foo').data(d => ...)). The type will carry over.\n         * @param selector the function to find matching descendents",
        "* Invoke the given function for each element in the selection. The return value of the function is ignored.\n         * @param func the function to invoke",
        "* Call a function on the selection. sel.call(foo) is equivalent to foo(sel).\n         * @param func the function to call on the selection\n         * @param args any optional args",
        "* Returns true if the current selection is empty.",
        "* Returns the first non-null element in the selection, or null otherwise.",
        "* Returns the total number of elements in the selection.",
        "* Interface for any and all d3 events.",
        "* The current event's value. Use this variable in a handler registered with `selection.on`.",
        "* Returns the x and y coordinates of the mouse relative to the provided container element, using d3.event for the mouse's position on the page.\n     * @param container the container element (e.g. an SVG <g> element)",
        "* Given a container element and a touch identifier, determine the x and y coordinates of the touch.\n     * @param container the container element (e.g., an SVG <svg> element)\n     * @param identifier the given touch identifier",
        "* Given a container element, a list of touches, and a touch identifier, determine the x and y coordinates of the touch.\n     * @param container the container element (e.g., an SVG <svg> element)\n     * @param identifier the given touch identifier",
        "* Given a container element and an optional list of touches, return the position of every touch relative to the container.\n     * @param container the container element\n     * @param touches an optional list of touches (defaults to d3.event.touches)",
        "* Compares two primitive values for sorting (in ascending order).",
        "* Compares two primitive values for sorting (in ascending order).",
        "* Return the minimum value in the array using natural order.",
        "* Return the minimum value in the array using natural order.",
        "* Return the minimum value in the array using natural order.",
        "* Return the minimum value in the array using natural order.",
        "* Return the minimum value in the array using natural order.",
        "* Return the minimum value in the array using natural order.",
        "* Return the maximum value in the array of numbers using natural order.",
        "* Return the maximum value in the array of strings using natural order.",
        "* Return the maximum value in the array of numbers using natural order.",
        "* Return the maximum value in the array using natural order and a projection function to map values to numbers.",
        "* Return the maximum value in the array using natural order and a projection function to map values to strings.",
        "* Return the maximum value in the array using natural order and a projection function to map values to easily-sorted values.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Return the min and max simultaneously.",
        "* Compute the sum of an array of numbers.",
        "* Compute the sum of an array, using the given accessor to convert values to numbers.",
        "* Returns the enumerable property names of the specified object.\n     * @param object a JavaScript object",
        "* Returns an array containing the property values of the specified object.",
        "* Returns an array containing the property values of the specified object.",
        "* Returns an array containing the property values of the specified object.",
        "* Returns an array of key-value pairs containing the property values of the specified object.",
        "* Returns an array of key-value pairs containing the property values of the specified object.",
        "* Returns an array of key-value pairs containing the property values of the specified object.",
        "* A shim for ES6 maps. The implementation uses a JavaScript object internally, and thus keys are limited to strings.",
        "* Does the map contain the given key?",
        "* Retrieve the value for the given key. Returns undefined if there is no value stored.",
        "* Set the value for the given key. Returns the new value.",
        "* Remove the value for the given key. Returns true if there was a value and false otherwise.",
        "* Returns an array of all keys in arbitrary order.",
        "* Returns an array of all values in arbitrary order.",
        "* Returns an array of key-value objects in arbitrary order.",
        "* Calls the function for each key and value pair in the map. The 'this' context is the map itself.",
        "* Is this map empty?",
        "* Returns the number of elements stored in the map.",
        "* Constructs an initially empty map.",
        "* Construct a new map by copying keys and values from the given one.",
        "* Construct a new map by copying enumerable properties and values from the given object.",
        "* Construct a new map by copying enumerable properties and values from the given object.",
        "* Construct a new map by copying elements from the array. The key function is used to identify each object.",
        "* Construct a new map by copying enumerable properties and values from the given object.",
        "* A shim for ES6 sets. Is only able to store strings.",
        "* Is the given string stored in this set?",
        "* Add the string to this set. Returns the value.",
        "* Remove the given value from the set. Returns true if it was stored, and false otherwise.",
        "* Returns an array of the strings stored in this set.",
        "* Calls a given function for each value in the set. The return value of the function is ignored. The this context of the function is the set itself.",
        "* Is this set empty?",
        "* Returns the number of values stored in this set.",
        "* Creates an initially-empty set.",
        "* Initializes a set from the given array of strings.",
        "* Merges the specified arrays into a single array.",
        "* Generates a 0-based numeric sequence. The output range does not include 'stop'.",
        "* Generates a numeric sequence starting from the given start and stop values. 'step' defaults to 1. The output range does not include 'stop'.",
        "* Given the specified array, return an array corresponding to the list of indices in 'keys'.",
        "* Given the specified object, return an array corresponding to the list of property names in 'keys'.",
        "* For each adjacent pair of elements in the specified array, returns a new array of tuples of elements i and i - 1.\n     * Returns the empty array if the input array has fewer than two elements.",
        "* @deprecated use d3.geom.voronoi().triangles() instead"
    ],
    "functions": [],
    "classes": []
}