{
    "identifiers": [
        "sys",
        "exit",
        "raw_input",
        "choice",
        "choice",
        "isdigit",
        "score_adjust",
        "down",
        "score",
        "dead",
        "how_much",
        "score_adjust",
        "up",
        "how_much",
        "score",
        "score",
        "exit",
        "score_adjust",
        "down",
        "how_much",
        "score",
        "dead",
        "raw_input",
        "score",
        "choice",
        "score_adjust",
        "down",
        "score",
        "dead",
        "choice",
        "bear_moved",
        "score_adjust",
        "up",
        "score",
        "choice",
        "bear_moved",
        "score_adjust",
        "down",
        "score",
        "dead",
        "choice",
        "bear_moved",
        "score_adjust",
        "up",
        "score",
        "gold_room",
        "raw_input",
        "choice",
        "score_adjust",
        "up",
        "score",
        "start",
        "choice",
        "score_adjust",
        "up",
        "score",
        "dead",
        "cthulhu_room",
        "score",
        "raw_input",
        "choice",
        "extra_room",
        "choice",
        "choice",
        "score_adjust",
        "up",
        "score",
        "start",
        "score_adjust",
        "down",
        "score",
        "dead",
        "why",
        "why",
        "score",
        "exit",
        "updown",
        "points",
        "scr",
        "updown",
        "score",
        "scr",
        "points",
        "updown",
        "score",
        "scr",
        "points",
        "raw_input",
        "choice",
        "score_adjust",
        "up",
        "score",
        "bear_room",
        "choice",
        "score_adjust",
        "up",
        "score",
        "cthulhu_room",
        "choice",
        "score_adjust",
        "up",
        "score",
        "extra_room",
        "score_adjust",
        "down",
        "score",
        "start",
        "start"
    ],
    "literals": [
        "\"up\"",
        "\"down\"",
        "\"This room is full of gold.  How much do you take?\"",
        "\"> \"",
        "\"Man, learn to type a number.\"",
        "\"Nice, you're not greedy, you win!\"",
        "\"Your score: %d\"",
        "\"You greedy bastard! I hope it was worth it.\"",
        "\"There is a bear here.\"",
        "\"The bear has a bunch of honey.\"",
        "\"The fat bear is in front of another door.\"",
        "\"How are you going to move the bear?\"",
        "\"> \"",
        "\"take honey\"",
        "\"The bear looks at you then slaps your face off.\"",
        "\"taunt bear\"",
        "\"The bear has moved from the door. You can go through it now.\"",
        "\"taunt bear\"",
        "\"The bear gets pissed off and chews your leg off.\"",
        "\"open door\"",
        "\"I got no idea what that means.\"",
        "\"Here you see the great evil Cthulhu.\"",
        "\"He, it, whatever stares at you and you go insane.\"",
        "\"Do you flee for your life or eat your head?\"",
        "\"> \"",
        "\"flee\"",
        "\"head\"",
        "\"Well that was tasty!\"",
        "\"You WILL answer to Cthulhu.\"",
        "\"Hey look, another room.\"",
        "\"Your thoughts?\"",
        "\"> \"",
        "\"look\"",
        "\"Not much in here besides a bottomless pit. No one likes those.\"",
        "\"stupid\"",
        "\"dumb\"",
        "\"Agreed. Let's go back.\"",
        "\"Lost in your reverie, you fail to notice the bottomless pit in here.\"",
        "\"Look where you're going next time.\"",
        "\"Good job!\"",
        "\"Your score: %d\"",
        "\"up\"",
        "\"down\"",
        "\"You are in a dark room.\"",
        "\"There is a door to your right and left, and one straight ahead.\"",
        "\"Which one do you take?\"",
        "\"> \"",
        "\"left\"",
        "\"right\"",
        "\"straight\"",
        "\"Holy crap dude.\"",
        "\"Try doing it right this time.\"",
        "\"Type (left, right, straight)\"",
        "\"Now then, where were we?\""
    ],
    "variables": [
        "score",
        "up",
        "down",
        "choice",
        "how_much",
        "bear_moved",
        "choice",
        "bear_moved",
        "choice",
        "choice",
        "score",
        "score",
        "choice"
    ],
    "comments": [
        "choice in this and subsequent are local vars",
        "if \"0\" in choice or \"1\" in choice: old way, was stupid",
        "Also, int can turn strings into integers...boo",
        "I thought abt converting string values to hashes for a no-error solution",
        "but then I remembered I'm an asshole, and I searched far and wide through",
        "the builtins until I found the isdigit string method. I would've really",
        "had no idea how to write a typing function if one didn't exist.",
        "hey, it was a number! passed down here from first if",
        "takes no arguments",
        "for user's benefit",
        "of note that this func uses while, whereas Cthulhu recurs manually",
        "Really gonna feel like an asshole if I have to global in every loop",
        "womp womp",
        "True at outset",
        "fuck scope. The mouthwash and the principle of programming",
        "anyway",
        "obvious",
        "cant' have a text adventure w/o scoring",
        "Scoring function finally working. I don't even know what I learned,",
        "Other than I don't need return if I am already updating a value,",
        "and also that global variables have to be explicitly declared.",
        "I added the print lines so I could see the score update after each move",
        "as a way to troubleshoot.",
        "print score",
        "print score",
        "handles initial prompt and sends you to other rooms",
        "choice is always local to funcs",
        "enter the flowchart"
    ],
    "docstrings": [],
    "functions": [
        "gold_room",
        "bear_room",
        "cthulhu_room",
        "extra_room",
        "dead",
        "score_adjust",
        "start"
    ],
    "classes": []
}