{
    "identifiers": [
        "$",
        "that",
        "that",
        "that",
        "position",
        "select",
        "select",
        "that",
        "position",
        "select",
        "position",
        "position",
        "position",
        "position",
        "that",
        "position",
        "that",
        "position",
        "position",
        "position",
        "position",
        "that",
        "start",
        "end",
        "that",
        "that",
        "that",
        "r",
        "r",
        "end",
        "r",
        "start",
        "r",
        "that",
        "start",
        "that",
        "end",
        "$this",
        "settings",
        "$",
        "settings",
        "k",
        "val",
        "val",
        "settings",
        "k",
        "val",
        "$this",
        "settings",
        "k",
        "$this",
        "val",
        "settings",
        "k",
        "$this",
        "val",
        "$this",
        "settings",
        "k",
        "settings",
        "key",
        "settings",
        "key",
        "settings",
        "key",
        "$this",
        "settings",
        "runCallbacks",
        "$this",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "convertKeyToNumber",
        "settings",
        "convertKeyToNumber",
        "settings",
        "convertKeyToNumber",
        "settings",
        "settings",
        "settings",
        "settings",
        "vmax",
        "vmax",
        "vmin",
        "vmin",
        "settings",
        "vmax",
        "vmin",
        "settings",
        "vmax",
        "vmaxLength",
        "vmax",
        "vmin",
        "vminLength",
        "vmin",
        "settings",
        "vmaxLength",
        "vminLength",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "aNegReg",
        "settings",
        "aNegReg",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "allowed",
        "settings",
        "aNegReg",
        "settings",
        "settings",
        "settings",
        "settings",
        "s",
        "settings",
        "strip_zero",
        "settings",
        "s",
        "settings",
        "s",
        "s",
        "settings",
        "s",
        "s",
        "settings",
        "s",
        "s",
        "settings",
        "s",
        "s",
        "settings",
        "settings",
        "s",
        "s",
        "settings",
        "settings",
        "s",
        "settings",
        "s",
        "m",
        "m",
        "m",
        "m",
        "settings",
        "settings",
        "strip_zero",
        "parts",
        "s",
        "settings",
        "parts",
        "nSign",
        "parts",
        "parts",
        "parts",
        "settings",
        "parts",
        "parts",
        "parts",
        "s",
        "nSign",
        "parts",
        "settings",
        "strip_zero",
        "settings",
        "strip_zero",
        "settings",
        "settings",
        "settings",
        "strip_zero",
        "strip_reg",
        "strip_reg",
        "s",
        "s",
        "strip_reg",
        "s",
        "s",
        "nBracket",
        "oEvent",
        "nBracket",
        "nBracket",
        "oEvent",
        "oEvent",
        "s",
        "s",
        "s",
        "nBracket",
        "s",
        "nBracket",
        "oEvent",
        "oEvent",
        "oEvent",
        "s",
        "nBracket",
        "s",
        "s",
        "nBracket",
        "s",
        "s",
        "nBracket",
        "s",
        "s",
        "aDec",
        "mDec",
        "aDec",
        "mDec",
        "s",
        "aDec",
        "parts",
        "parts",
        "mDec",
        "mDec",
        "parts",
        "parts",
        "mDec",
        "s",
        "parts",
        "aDec",
        "s",
        "parts",
        "s",
        "s",
        "aDec",
        "aNeg",
        "aDec",
        "aDec",
        "s",
        "s",
        "aDec",
        "aNeg",
        "aNeg",
        "s",
        "s",
        "aNeg",
        "s",
        "s",
        "s",
        "value",
        "settings",
        "value",
        "value",
        "checkSmall",
        "checkSmall",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "parts",
        "parts",
        "value",
        "parts",
        "parts",
        "parts",
        "value",
        "parts",
        "settings",
        "value",
        "value",
        "s",
        "aDec",
        "aNeg",
        "aNeg",
        "aNeg",
        "s",
        "s",
        "aNeg",
        "aDec",
        "aDec",
        "s",
        "s",
        "aDec",
        "s",
        "s",
        "settings",
        "s",
        "autoStrip",
        "s",
        "settings",
        "s",
        "truncateDecimal",
        "s",
        "settings",
        "settings",
        "s",
        "fixNumber",
        "s",
        "settings",
        "settings",
        "s",
        "settings",
        "value",
        "settings",
        "value",
        "settings",
        "$",
        "value",
        "value",
        "settings",
        "value",
        "settings",
        "iv",
        "settings",
        "signOnEmpty",
        "iv",
        "iv",
        "settings",
        "settings",
        "iv",
        "settings",
        "signOnEmpty",
        "iv",
        "settings",
        "iv",
        "iv",
        "settings",
        "iv",
        "autoStrip",
        "iv",
        "settings",
        "iv",
        "checkEmpty",
        "iv",
        "settings",
        "empty",
        "empty",
        "settings",
        "digitalGroup",
        "settings",
        "digitalGroup",
        "digitalGroup",
        "iv",
        "settings",
        "settings",
        "ivSplit",
        "ivSplit",
        "iv",
        "settings",
        "ivSplit",
        "settings",
        "digitalGroup",
        "s",
        "s",
        "s",
        "digitalGroup",
        "settings",
        "settings",
        "ivSplit",
        "ivSplit",
        "settings",
        "ivSplit",
        "ivSplit",
        "settings",
        "iv",
        "s",
        "settings",
        "ivSplit",
        "iv",
        "s",
        "settings",
        "iv",
        "settings",
        "iv",
        "iv",
        "settings",
        "iv",
        "settings",
        "settings",
        "iv",
        "iv",
        "settings",
        "has_aNeg",
        "iv",
        "settings",
        "iv",
        "settings",
        "testNeg",
        "settings",
        "iv",
        "negativeBracket",
        "iv",
        "settings",
        "settings",
        "iv",
        "iv",
        "settings",
        "iv",
        "iv",
        "iv",
        "convertKeyToNumber",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "settings",
        "ivRounded",
        "rDec",
        "rDec",
        "rDec",
        "ivRounded",
        "ivRounded",
        "regex",
        "rDec",
        "ivRounded",
        "ivRounded",
        "ivRounded",
        "iv",
        "nSign",
        "iv",
        "iv",
        "iv",
        "iv",
        "iv",
        "nSign",
        "iv",
        "nSign",
        "iv",
        "settings",
        "iv",
        "settings",
        "iv",
        "iv",
        "iv",
        "dPos",
        "iv",
        "dPos",
        "iv",
        "vdPos",
        "cDec",
        "settings",
        "ivRounded",
        "iv",
        "cDec",
        "rDec",
        "dPos",
        "ivRounded",
        "cDec",
        "rDec",
        "rDec",
        "cDec",
        "ivRounded",
        "zeros",
        "cDec",
        "zeros",
        "cDec",
        "rDec",
        "ivRounded",
        "truncateZeros",
        "ivRounded",
        "cDec",
        "rDec",
        "ivRounded",
        "ivRounded",
        "nSign",
        "ivRounded",
        "dPos",
        "settings",
        "iv",
        "rLength",
        "iv",
        "rLength",
        "iv",
        "rLength",
        "iv",
        "rLength",
        "iv",
        "rLength",
        "tRound",
        "settings",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "tRound",
        "settings",
        "odd",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "nSign",
        "tRound",
        "settings",
        "i",
        "ivArray",
        "i",
        "i",
        "ivArray",
        "i",
        "ivArray",
        "i",
        "ivArray",
        "i",
        "ivArray",
        "i",
        "i",
        "ivArray",
        "i",
        "ivArray",
        "ivArray",
        "rLength",
        "ivRounded",
        "truncateZeros",
        "ivArray",
        "ivRounded",
        "ivRounded",
        "nSign",
        "ivRounded",
        "that",
        "settings",
        "settings",
        "that",
        "$",
        "that",
        "autoCode",
        "that",
        "AutoNumericHolder",
        "e",
        "autoCode",
        "e",
        "e",
        "e",
        "getElementSelection",
        "e",
        "e",
        "e",
        "e",
        "start",
        "end",
        "setReal",
        "start",
        "start",
        "end",
        "end",
        "start",
        "end",
        "end",
        "start",
        "setReal",
        "setReal",
        "setElementSelection",
        "start",
        "end",
        "pos",
        "setReal",
        "pos",
        "pos",
        "setReal",
        "value",
        "value",
        "value",
        "left",
        "right",
        "parts",
        "autoStrip",
        "parts",
        "parts",
        "autoStrip",
        "parts",
        "parts",
        "left",
        "right",
        "right",
        "autoStrip",
        "right",
        "settingsClone",
        "right",
        "left",
        "autoStrip",
        "left",
        "settingsClone",
        "strip",
        "left",
        "left",
        "settingsClone",
        "settingsClone",
        "right",
        "right",
        "right",
        "left",
        "right",
        "settingsClone",
        "new_value",
        "settingsClone",
        "settingsClone",
        "m",
        "left",
        "left",
        "m",
        "m",
        "new_value",
        "left",
        "right",
        "settingsClone",
        "new_value",
        "settingsClone",
        "new_value",
        "left",
        "left",
        "right",
        "left",
        "right",
        "left",
        "right",
        "parts",
        "parts",
        "autoCheck",
        "new_value",
        "settingsClone",
        "new_value",
        "truncateDecimal",
        "new_value",
        "settingsClone",
        "settingsClone",
        "position",
        "new_value",
        "position",
        "new_value",
        "new_value",
        "position",
        "left",
        "right",
        "left",
        "right",
        "parts",
        "parts",
        "new_value",
        "truncateDecimal",
        "new_value",
        "settingsClone",
        "settingsClone",
        "position",
        "new_value",
        "position",
        "new_value",
        "new_value",
        "position",
        "settingsClone",
        "aSign",
        "aSign",
        "settingsClone",
        "settingsClone",
        "that",
        "that",
        "settingsClone",
        "hasNeg",
        "aSignLen",
        "aSignLen",
        "that",
        "valueLen",
        "aSignLen",
        "valueLen",
        "setReal",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "setReal",
        "sign_position",
        "selection",
        "setReal",
        "selection",
        "sign_position",
        "selection",
        "sign_position",
        "setReal",
        "parts",
        "parts",
        "oldParts",
        "autoStrip",
        "parts",
        "oldParts",
        "parts",
        "parts",
        "oldParts",
        "oldParts",
        "e",
        "ctrlKey",
        "cmdKey",
        "e",
        "shiftKey",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "which",
        "which",
        "kdCode",
        "kdCode",
        "kdCode",
        "kdCode",
        "ctrlKey",
        "cmdKey",
        "kdCode",
        "ctrlKey",
        "cmdKey",
        "kdCode",
        "kdCode",
        "kdCode",
        "e",
        "kdCode",
        "kdCode",
        "e",
        "e",
        "e",
        "e",
        "kdCode",
        "ctrlKey",
        "cmdKey",
        "kdCode",
        "kdCode",
        "e",
        "aSep",
        "kdCode",
        "value",
        "start",
        "aSep",
        "start",
        "kdCode",
        "value",
        "start",
        "aSep",
        "start",
        "kdCode",
        "kdCode",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "settingsClone",
        "settingsClone",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "settingsClone",
        "settingsClone",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "parts",
        "cCode",
        "settingsClone",
        "settingsClone",
        "cCode",
        "settingsClone",
        "cCode",
        "cCode",
        "settingsClone",
        "settingsClone",
        "settingsClone",
        "right",
        "settingsClone",
        "left",
        "settingsClone",
        "right",
        "settingsClone",
        "right",
        "settingsClone",
        "right",
        "right",
        "left",
        "settingsClone",
        "right",
        "cCode",
        "cCode",
        "settingsClone",
        "left",
        "right",
        "settingsClone",
        "left",
        "settingsClone",
        "right",
        "right",
        "right",
        "left",
        "settingsClone",
        "left",
        "left",
        "left",
        "left",
        "cCode",
        "settingsClone",
        "left",
        "left",
        "left",
        "right",
        "cCode",
        "cCode",
        "settingsClone",
        "left",
        "right",
        "settingsClone",
        "left",
        "settingsClone",
        "right",
        "right",
        "right",
        "settingsClone",
        "settingsClone",
        "settingsClone",
        "settingsClone",
        "cCode",
        "left",
        "settingsClone",
        "left",
        "settingsClone",
        "settingsClone",
        "left",
        "cCode",
        "right",
        "left",
        "cCode",
        "right",
        "settingsClone",
        "settingsClone",
        "leftLength",
        "settingsClone",
        "settingsClone",
        "settingsClone",
        "leftLength",
        "settingsClone",
        "subParts",
        "leftLength",
        "settingsClone",
        "subParts",
        "nSign",
        "subParts",
        "subParts",
        "parts",
        "parts",
        "subParts",
        "settingsClone",
        "parts",
        "parts",
        "parts",
        "parts",
        "nSign",
        "parts",
        "autoGroup",
        "value",
        "value",
        "parts",
        "i",
        "i",
        "left_ar",
        "i",
        "left_ar",
        "i",
        "left_ar",
        "i",
        "left_ar",
        "i",
        "left_ar",
        "value",
        "leftReg",
        "newLeft",
        "position",
        "newLeft",
        "position",
        "value",
        "settingsClone",
        "position",
        "value",
        "settingsClone",
        "settingsClone",
        "settingsClone",
        "position",
        "value",
        "settingsClone",
        "settingsClone",
        "position",
        "settingsClone",
        "value",
        "position",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$",
        "obj",
        "$that",
        "settings",
        "update",
        "$that",
        "data",
        "data",
        "$that",
        "data",
        "data",
        "holder",
        "settings",
        "update",
        "holder",
        "AutoNumericHolder",
        "$that",
        "settings",
        "data",
        "holder",
        "holder",
        "options",
        "$",
        "$this",
        "$this",
        "settings",
        "settings",
        "$",
        "defaults",
        "tagData",
        "options",
        "settings",
        "settings",
        "$",
        "settings",
        "settings",
        "$this",
        "settings",
        "settings",
        "settings",
        "getHolder",
        "$this",
        "settings",
        "$",
        "$this",
        "settings",
        "$this",
        "$",
        "$this",
        "settings",
        "settings",
        "$this",
        "$this",
        "settings",
        "$this",
        "setValue",
        "$this",
        "settings",
        "$this",
        "settings",
        "setValue",
        "setValue",
        "$this",
        "$this",
        "$",
        "$this",
        "settings",
        "$this",
        "$this",
        "$this",
        "settings",
        "$this",
        "$this",
        "e",
        "holder",
        "getHolder",
        "$this",
        "holder",
        "holder",
        "$",
        "holder",
        "holder",
        "holder",
        "holder",
        "holder",
        "e",
        "holder",
        "holder",
        "e",
        "holder",
        "holder",
        "holder",
        "holder",
        "e",
        "holder",
        "$this",
        "e",
        "getHolder",
        "$this",
        "holder",
        "holder",
        "e",
        "holder",
        "holder",
        "e",
        "processed",
        "e",
        "holder",
        "holder",
        "holder",
        "e",
        "holder",
        "$this",
        "e",
        "getHolder",
        "$this",
        "holder",
        "e",
        "holder",
        "holder",
        "e",
        "holder",
        "holder",
        "$this",
        "holder",
        "holder",
        "setElementSelection",
        "setElementSelection",
        "holder",
        "holder",
        "skip",
        "holder",
        "holder",
        "$this",
        "getHolder",
        "$this",
        "holder",
        "holder",
        "$this",
        "$this",
        "negativeBracket",
        "checkVal",
        "holder",
        "holder",
        "holder",
        "$this",
        "checkEmpty",
        "holder",
        "holder",
        "onempty",
        "$this",
        "onempty",
        "holder",
        "setElementSelection",
        "setElementSelection",
        "holder",
        "holder",
        "$this",
        "getHolder",
        "$this",
        "holder",
        "$this",
        "holder",
        "settingsClone",
        "settingsClone",
        "strip_zero",
        "value",
        "value",
        "autoStrip",
        "value",
        "settingsClone",
        "strip_zero",
        "checkEmpty",
        "value",
        "settingsClone",
        "autoCheck",
        "value",
        "settingsClone",
        "$this",
        "value",
        "fixNumber",
        "value",
        "settingsClone",
        "settingsClone",
        "value",
        "autoRound",
        "value",
        "settingsClone",
        "value",
        "presentNumber",
        "value",
        "settingsClone",
        "settingsClone",
        "value",
        "checkEmpty",
        "value",
        "settingsClone",
        "groupedValue",
        "groupedValue",
        "autoGroup",
        "value",
        "settingsClone",
        "groupedValue",
        "origValue",
        "$this",
        "groupedValue",
        "groupedValue",
        "holder",
        "$this",
        "holder",
        "settingsClone",
        "$this",
        "holder",
        "$this",
        "negativeBracket",
        "$this",
        "settingsClone",
        "settingsClone",
        "$",
        "$",
        "$this",
        "$this",
        "options",
        "$",
        "autoGet",
        "$",
        "$this",
        "settings",
        "$",
        "$this",
        "settings",
        "$",
        "settings",
        "options",
        "getHolder",
        "$this",
        "settings",
        "settings",
        "settings",
        "$",
        "settings",
        "settings",
        "$this",
        "settings",
        "$this",
        "$this",
        "$this",
        "strip",
        "valueIn",
        "$",
        "autoGet",
        "$",
        "$this",
        "valueIn",
        "valueIn",
        "settings",
        "$",
        "testValue",
        "$this",
        "testValue",
        "$this",
        "settings",
        "value",
        "value",
        "testValue",
        "$this",
        "$this",
        "settings",
        "value",
        "autoStrip",
        "value",
        "settings",
        "$",
        "value",
        "value",
        "checkValue",
        "value",
        "settings",
        "settings",
        "settings",
        "value",
        "value",
        "value",
        "value",
        "autoRound",
        "value",
        "settings",
        "value",
        "presentNumber",
        "value",
        "settings",
        "settings",
        "autoCheck",
        "value",
        "settings",
        "value",
        "autoRound",
        "settings",
        "value",
        "autoGroup",
        "value",
        "settings",
        "$this",
        "$this",
        "value",
        "$",
        "$this",
        "settings",
        "$this",
        "value",
        "$",
        "$this",
        "autoGet",
        "$",
        "$this",
        "settings",
        "$",
        "settings",
        "$this",
        "getValue",
        "$this",
        "$",
        "$this",
        "settings",
        "getValue",
        "$this",
        "$",
        "$this",
        "getValue",
        "settings",
        "getValue",
        "settings",
        "settings",
        "settings",
        "settings",
        "getValue",
        "getValue",
        "negativeBracket",
        "getValue",
        "settings",
        "settings",
        "settings",
        "settings",
        "getValue",
        "autoStrip",
        "getValue",
        "settings",
        "getValue",
        "fixNumber",
        "getValue",
        "settings",
        "settings",
        "getValue",
        "settings",
        "getValue",
        "settings",
        "getValue",
        "getValue",
        "checkValue",
        "getValue",
        "settings",
        "getValue",
        "autoGet",
        "$",
        "$this",
        "i",
        "i",
        "parts",
        "i",
        "parts",
        "i",
        "$",
        "decodeURIComponent",
        "miniParts",
        "settings",
        "miniParts",
        "$",
        "decodeURIComponent",
        "miniParts",
        "miniParts",
        "$",
        "decodeURIComponent",
        "miniParts",
        "parts",
        "i",
        "miniParts",
        "isAutoNumeric",
        "isAutoNumeric",
        "parts",
        "$",
        "autoGet",
        "$",
        "$this",
        "$",
        "formFields",
        "i",
        "field",
        "$",
        "decodeURIComponent",
        "field",
        "settings",
        "field",
        "$",
        "decodeURIComponent",
        "field",
        "field",
        "$",
        "decodeURIComponent",
        "field",
        "isAutoNumeric",
        "isAutoNumeric",
        "formFields",
        "$",
        "autoGet",
        "$",
        "$this",
        "$",
        "method",
        "methods",
        "method",
        "methods",
        "method",
        "arguments",
        "method",
        "method",
        "methods",
        "arguments",
        "$",
        "method",
        "jQuery"
    ],
    "literals": [
        "\"use strict\"",
        "'character'",
        "'character'",
        "'character'",
        "'function'",
        "'function'",
        "'string'",
        "'B'",
        "'CAPTION'",
        "'CITE'",
        "'CODE'",
        "'DD'",
        "'DEL'",
        "'DIV'",
        "'DFN'",
        "'DT'",
        "'EM'",
        "'H1'",
        "'H2'",
        "'H3'",
        "'H4'",
        "'H5'",
        "'H6'",
        "'INS'",
        "'KDB'",
        "'LABEL'",
        "'LI'",
        "'OUTPUT'",
        "'P'",
        "'Q'",
        "'S'",
        "'SAMPLE'",
        "'SPAN'",
        "'STRONG'",
        "'TD'",
        "'TH'",
        "'U'",
        "'VAR'",
        "'.'",
        "'.'",
        "'vMax'",
        "'vMin'",
        "'mDec'",
        "'-'",
        "''",
        "'-'",
        "''",
        "'-'",
        "''",
        "'.'",
        "','",
        "','",
        "','",
        "'.'",
        "'.'",
        "'([-\\\\'",
        "']?)'",
        "'(-?)'",
        "'[^-'",
        "'\\\\'",
        "''",
        "'\\\\'",
        "'\\\\d]'",
        "'.*?(\\\\d|\\\\'",
        "'\\\\d)'",
        "'(\\\\d\\\\'",
        "'?)[^\\\\'",
        "'\\\\d]\\\\D*$'",
        "'-'",
        "'\\\\'",
        "'[^'",
        "']'",
        "'gi'",
        "'(?:\\\\'",
        "'?(\\\\d+\\\\'",
        "'\\\\d+)|(\\\\d*(?:\\\\'",
        "'\\\\d*)?))'",
        "''",
        "'$1$2'",
        "'$1'",
        "''",
        "''",
        "''",
        "'allow'",
        "'keep'",
        "'strip'",
        "''",
        "'-'",
        "'-'",
        "'-'",
        "''",
        "'0'",
        "'deny'",
        "'allow'",
        "'^'",
        "'0*(\\\\d'",
        "'leading'",
        "')'",
        "'|$)'",
        "'$1$2'",
        "','",
        "'set'",
        "'focusout'",
        "'-'",
        "''",
        "'get'",
        "'focusin'",
        "'pageLoad'",
        "'-'",
        "''",
        "'.'",
        "'.'",
        "'-'",
        "'-'",
        "'0'",
        "'.'",
        "'-'",
        "'.'",
        "''",
        "'.'",
        "'keep'",
        "'$1'",
        "'-'",
        "'-'",
        "'.'",
        "'.'",
        "'set'",
        "\"The value (\"",
        "\") from the 'set' method falls outside of the vMin / vMax range\"",
        "''",
        "'zero'",
        "'0'",
        "'sign'",
        "','",
        "'.'",
        "''",
        "'$1'",
        "'$2'",
        "''",
        "'p'",
        "'set'",
        "''",
        "'0'",
        "'mDec'",
        "''",
        "''",
        "'boolean'",
        "'(\\\\.\\\\d{'",
        "'}[1-9]*)0*$'",
        "'$1'",
        "''",
        "'-'",
        "'-'",
        "'-'",
        "''",
        "'0'",
        "'-'",
        "''",
        "'keep'",
        "'allow'",
        "'$1'",
        "'.'",
        "'.'",
        "'000000'",
        "''",
        "''",
        "'.'",
        "'S'",
        "'A'",
        "''",
        "'A'",
        "'-'",
        "'s'",
        "'a'",
        "''",
        "'a'",
        "'-'",
        "'B'",
        "'B'",
        "'C'",
        "''",
        "'F'",
        "'-'",
        "'U'",
        "'.'",
        "'0'",
        "''",
        "'keydown'",
        "'keyup'",
        "'leading'",
        "''",
        "'deny'",
        "''",
        "'$1'",
        "'^'",
        "'\\\\'",
        "'0'",
        "'zero'",
        "''",
        "'0'",
        "''",
        "''",
        "'p'",
        "''",
        "'keyup'",
        "'keydown'",
        "'keydown'",
        "'keypress'",
        "'keydown'",
        "'keypress'",
        "'keydown'",
        "'undefined'",
        "'undefined'",
        "'.'",
        "','",
        "'-'",
        "'+'",
        "''",
        "'-'",
        "'0'",
        "'9'",
        "''",
        "'0'",
        "'undefined'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'-'",
        "'-'",
        "'-'",
        "''",
        "'-'",
        "''",
        "'0'",
        "''",
        "'\\\\d'",
        "'\\\\'",
        "'^.*?'",
        "'.*?'",
        "'p'",
        "'-'",
        "'s'",
        "'string'",
        "\"\\\\[\"",
        "\"\\\\]\"",
        "'#'",
        "'\\\\$1'",
        "'autoNumeric'",
        "'autoNumeric'",
        "'autoNumeric'",
        "'object'",
        "'0123456789'",
        "','",
        "'3'",
        "'.'",
        "''",
        "'p'",
        "'999999999.99'",
        "'0.00'",
        "'S'",
        "'empty'",
        "'allow'",
        "\"autoNumeric will not function properly when the decimal character aDec: '\"",
        "\"' and thousand separator aSep: '\"",
        "\"' are the same character\"",
        "'autoNumeric'",
        "''",
        "'tagName'",
        "'tagName'",
        "'INPUT'",
        "\"The <\"",
        "'tagName'",
        "\"> is not supported by autoNumeric()\"",
        "'input[type=text], input[type=hidden], input:not([type])'",
        "''",
        "'empty'",
        "''",
        "''",
        "'sign'",
        "'set'",
        "'tagName'",
        "''",
        "'set'",
        "'input[type=text], input[type=hidden], input:not([type])'",
        "'keydown.autoNumeric'",
        "\"autoNumeric will not function properly when the decimal character aDec: '\"",
        "\"' and thousand separator aSep: '\"",
        "\"' are the same character\"",
        "'keydown'",
        "'keypress.autoNumeric'",
        "'keypress'",
        "'keyup.autoNumeric'",
        "'keyup'",
        "'s'",
        "''",
        "'focusin.autoNumeric'",
        "'focusin'",
        "'s'",
        "'focusout.autoNumeric'",
        "'focusout'",
        "''",
        "'allow'",
        "'leading'",
        "''",
        "''",
        "'get'",
        "'focusout'",
        "'.autoNumeric'",
        "'autoNumeric'",
        "'autoNumeric'",
        "'object'",
        "\"You must initialize autoNumeric('init', {options}) prior to calling the 'update' method\"",
        "'get'",
        "\"autoNumeric will not function properly when the decimal character aDec: '\"",
        "\"' and thousand separator aSep: '\"",
        "\"' are the same character\"",
        "'autoNumeric'",
        "''",
        "''",
        "'set'",
        "'autoNumeric'",
        "'object'",
        "\"You must initialize autoNumeric('init', {options}) prior to calling the 'set' method\"",
        "'value'",
        "','",
        "'.'",
        "'value'",
        "'tagName'",
        "'INPUT'",
        "''",
        "'set'",
        "''",
        "''",
        "'input[type=text], input[type=hidden], input:not([type])'",
        "'tagName'",
        "\"The <\"",
        "'tagName'",
        "\"> is not supported by autoNumeric()\"",
        "'autoNumeric'",
        "'object'",
        "\"You must initialize autoNumeric('init', {options}) prior to calling the 'get' method\"",
        "'get'",
        "''",
        "'input[type=text], input[type=hidden], input:not([type])'",
        "'tagName'",
        "\"The <\"",
        "'tagName'",
        "\"> is not supported by autoNumeric()\"",
        "''",
        "'empty'",
        "'sign'",
        "'empty'",
        "''",
        "''",
        "'keep'",
        "'0'",
        "'keep'",
        "'&'",
        "'='",
        "'*[name=\"'",
        "'\"]'",
        "'autoNumeric'",
        "'object'",
        "'*[name=\"'",
        "'\"]'",
        "'autoNumeric'",
        "'input[name=\"'",
        "'\"]'",
        "'get'",
        "'='",
        "'&'",
        "\"You must initialize autoNumeric('init', {options}) prior to calling the 'getString' method\"",
        "'*[name=\"'",
        "'\"]'",
        "'autoNumeric'",
        "'object'",
        "''",
        "'*[name=\"'",
        "'\"]'",
        "'autoNumeric'",
        "'input[name=\"'",
        "'\"]'",
        "'get'",
        "\"You must initialize autoNumeric('init', {options}) prior to calling the 'getArray' method\"",
        "'autoNumeric'",
        "'object'",
        "'Method \"'",
        "'\" is not supported by autoNumeric()'"
    ],
    "variables": [
        "position",
        "select",
        "r",
        "vmax",
        "vmin",
        "vmaxLength",
        "vminLength",
        "aNegReg",
        "allowed",
        "m",
        "parts",
        "nSign",
        "strip_reg",
        "parts",
        "checkSmall",
        "parts",
        "value",
        "testNeg",
        "empty",
        "digitalGroup",
        "ivSplit",
        "s",
        "has_aNeg",
        "ivRounded",
        "i",
        "nSign",
        "rDec",
        "truncateZeros",
        "regex",
        "dPos",
        "vdPos",
        "cDec",
        "zeros",
        "rLength",
        "tRound",
        "ivArray",
        "odd",
        "value",
        "left",
        "right",
        "parts",
        "settingsClone",
        "strip",
        "new_value",
        "m",
        "settingsClone",
        "parts",
        "new_value",
        "position",
        "settingsClone",
        "parts",
        "new_value",
        "position",
        "settingsClone",
        "aSign",
        "that",
        "aSignLen",
        "hasNeg",
        "valueLen",
        "sign_position",
        "selection",
        "parts",
        "oldParts",
        "kdCode",
        "which",
        "ctrlKey",
        "cmdKey",
        "shiftKey",
        "aSep",
        "start",
        "value",
        "settingsClone",
        "parts",
        "settingsClone",
        "cCode",
        "parts",
        "left",
        "right",
        "settingsClone",
        "parts",
        "leftLength",
        "subParts",
        "nSign",
        "value",
        "position",
        "left_ar",
        "i",
        "leftReg",
        "newLeft",
        "data",
        "holder",
        "methods",
        "$this",
        "settings",
        "tagData",
        "defaults",
        "holder",
        "setValue",
        "holder",
        "processed",
        "holder",
        "skip",
        "holder",
        "checkVal",
        "onempty",
        "holder",
        "settingsClone",
        "value",
        "origValue",
        "value",
        "strip_zero",
        "groupedValue",
        "$this",
        "$this",
        "settings",
        "strip",
        "$this",
        "settings",
        "value",
        "testValue",
        "$this",
        "settings",
        "getValue",
        "isAutoNumeric",
        "$this",
        "parts",
        "i",
        "miniParts",
        "settings",
        "isAutoNumeric",
        "$this",
        "formFields",
        "settings",
        "$this"
    ],
    "comments": [
        "jslint browser: true",
        "global jQuery: false",
        "Cross browser routine for getting selected range/cursor position",
        "set mDec if not defained by user",
        "set alternative decimal separator key",
        "cache regexps for autoStrip",
        "remove currency sign",
        "first replace anything before digits",
        "then replace anything after digits",
        "then remove any uninterested characters",
        "get only number string",
        "strip leading zero if need",
        "oEvent = settings.oEvent",
        "truncate decimal part to satisfying length\n             * cause we would round it anyway",
        "splits the string at the decimal string",
        "assigns the whole number to the a varibale (s)",
        "re-inserts the thousand sepparator via a regualer expression",
        "joins the whole number with the deciaml value",
        "if whole numbers only",
        "removes the negative sign and places brackets",
        "value to string",
        "set mDec to number needed when mDec set by 'update method",
        "truncate not needed zeros",
        "If there are no decimal places, we don't need a decimal point at the end",
        "Checks if the iv (input Value)is a negative value",
        "removes the negative sign will be added back later if required",
        "prepend a zero if first character is not a digit (then it is likely to be a dot)",
        "determines if the value is zero - if zero no negative sign",
        "trims leading zero's if needed",
        "virtual decimal position",
        "checks decimal places to determine if rounding is required",
        "check if no rounding is required",
        "check if we need to pad with zeros",
        "rounded length of the string after rounding",
        "test round",
        "Round up the last digit if required, and continue until no more 9's are found",
        "Reconstruct the string, converting any 10's to 0's",
        "return rounded value",
        "keypress event overwrites meaningful value of e.keyCode",
        "if right is not empty and first character is not aDec,",
        "we could strip all zeros, otherwise only leading",
        "prevents multiple leading zeros from being entered",
        "insert zero if has leading dot",
        "insert zero if number is empty and io.wEmpty == 'zero'",
        "if selection catches something except sign and catches only space from sign",
        "then select without empty space",
        "else select with whole sign",
        "try to strip pasted value first",
        "catch the ctrl up on ctrl-v",
        "codes are taken from http://www.cambiaresearch.com/c4/702b8cd1-e5b0-42e6-83ac-25f0306e3e25/Javascript-Char-Codes-Key-Codes.aspx\n             * skip Fx keys, windows keys, other special keys",
        "if select all (a=65)",
        "if copy (c=67) paste (v=86) or cut (x=88)",
        "try to prevent wrong paste",
        "jump over thousand separator",
        "process backspace or delete",
        "start rules when the decimal character key is pressed",
        "always use numeric pad dot to insert decimal separator",
        "do not allow decimal character if no decimal part allowed",
        "do not allow decimal character before aNeg character",
        "do not allow decimal character if other decimal character present",
        "start rule on negative sign",
        "prevent minus if not allowed",
        "caret is always after minus",
        "change sign of number, remove part if should",
        "digits",
        "if try to insert digit before minus",
        "prevent any other character",
        "strip leading zero if need",
        "prepare regexp which searches for cursor position from unformatted left part",
        "thanks Peter Kovari",
        "search cursor position in formatted value",
        "if we are just before sign which is in prefix position",
        "place carret after prefix sign",
        "if we could not find a place for cursor and have a sign as a suffix",
        "place carret before suffix currency sign",
        "thanks to Anthony & Evan C",
        "obj = '#' + obj.replace(/([;&,\\.\\+\\*\\~':\"\\!\\^#$%@\\[\\]\\(\\)=>\\|])/g, '\\\\$1');",
        "possible modification to replace the above 2 lines",
        "attempt to grab 'autoNumeric' settings, if they don't exist returns \"undefined\".",
        "attempt to grab HTML5 data, if they don't exist we'll get \"undefined\".",
        "If we couldn't grab settings, create them from defaults and passed options.",
        "allowed numeric values\n                         * please do not modify",
        "allowed thousand separator characters\n                         * comma = ','\n                         * period \"full stop\" = '.'\n                         * apostrophe is escaped = '\\''\n                         * space = ' '\n                         * none = ''\n                         * NOTE: do not use numeric characters",
        "digital grouping for the thousand separator used in Format\n                         * dGroup: '2', results in 99,99,99,999 common in India for values less than 1 billion and greater than -1 billion\n                         * dGroup: '3', results in 999,999,999 default\n                         * dGroup: '4', results in 9999,9999,9999 used in some Asian countries",
        "allowed decimal separator characters\n                         * period \"full stop\" = '.'\n                         * comma = ','",
        "allow to declare alternative decimal separator which is automatically replaced by aDec\n                         * developed for countries the use a comma ',' as the decimal character\n                         * and have keyboards\\numeric pads that have a period 'full stop' as the decimal characters (Spain is an example)",
        "allowed currency symbol\n                         * Must be in quotes aSign: '$', a space is allowed aSign: '$ '",
        "placement of currency sign\n                         * for prefix pSign: 'p',\n                         * for suffix pSign: 's',",
        "maximum possible value\n                         * value must be enclosed in quotes and use the period for the decimal point\n                         * value must be larger than vMin",
        "minimum possible value\n                         * value must be enclosed in quotes and use the period for the decimal point\n                         * value must be smaller than vMax",
        "max number of decimal places = used to override decimal places set by the vMin & vMax values\n                         * value must be enclosed in quotes example mDec: '3',\n                         * This can also set the value via a call back function mDec: 'css:#",
        "method used for rounding\n                         * mRound: 'S', Round-Half-Up Symmetric (default)\n                         * mRound: 'A', Round-Half-Up Asymmetric\n                         * mRound: 's', Round-Half-Down Symmetric (lower case s)\n                         * mRound: 'a', Round-Half-Down Asymmetric (lower case a)\n                         * mRound: 'B', Round-Half-Even \"Bankers Rounding\"\n                         * mRound: 'U', Round Up \"Round-Away-From-Zero\"\n                         * mRound: 'D', Round Down \"Round-Toward-Zero\" - same as truncate\n                         * mRound: 'C', Round to Ceiling \"Toward Positive Infinity\"\n                         * mRound: 'F', Round to Floor \"Toward Negative Infinity\"",
        "controls decimal padding\n                         * aPad: true - always Pad decimals with zeros\n                         * aPad: false - does not pad with zeros.\n                         * aPad: `some number` - pad decimals with zero to number different from mDec\n                         * thanks to Jonas Johansson for the suggestion",
        "places brackets on negative value -$ 999.99 to (999.99)\n                         * visible only when the field does NOT have focus the left and right symbols should be enclosed in quotes and seperated by a comma\n                         * nBracket: null, nBracket: '(,)', nBracket: '[,]', nBracket: '<,>' or nBracket: '{,}'",
        "Displayed on empty string\n                         * wEmpty: 'empty', - input can be blank\n                         * wEmpty: 'zero', - displays zero\n                         * wEmpty: 'sign', - displays the currency sign",
        "controls leading zero behavior\n                         * lZero: 'allow', - allows leading zeros to be entered. Zeros will be truncated when entering additional digits. On focusout zeros will be deleted.\n                         * lZero: 'deny', - allows only one leading zero on values less than one\n                         * lZero: 'keep', - allows leading zeros to be entered. on fousout zeros will be retained.",
        "determine if the default value will be formatted on page ready.\n                         * true = automatically formats the default value on page ready\n                         * false = will not format the default value",
        "future use",
        "Merge defaults, tagData and options",
        "Save our new settings",
        "routine to format default value on page load",
        "added hidden type",
        "The below streamed code / comment allows the \"enter\" keydown to throw a change() event",
        "if (e.keyCode === 13 && holder.inVal !== $this.val()){\n                            $this.change();\n                            holder.inVal = $this.val();\n                        }",
        "added to properly place the caret when only the currency is present",
        "added to control leading zero",
        "added to control leading zero",
        "method to remove settings and stop autoNumeric()",
        "method to update settings - can call as many times",
        "returns a formatted strings for \"input:text\" fields Uses jQuery's .val() method",
        "allows locale decimal separator to be a comma",
        "routine to handle page re-load from back button",
        "returns a empty string if the value being 'set' contains non-numeric characters and or more than decimal point (full stop) and will not be formatted",
        "saves the unrounded value from the set method - $('selector').data('autoNumeric').lastSetValue; - helpful when you need to change the rounding accuracy",
        "added hidden type",
        "method to get the unformatted value from a specific input field, returns a numeric value",
        "determine the element type then use .eq(0) selector to grab the value of the first element in selector",
        "added hidden type",
        "returned Numeric String",
        "method to get the unformatted value from multiple fields",
        "method to get the unformatted value from multiple fields",
        "returns the settings object for those who need to look under the hood"
    ],
    "docstrings": [
        "* autoNumeric.js\n* @author: Bob Knothe\n* @author: Sokolov Yura aka funny_falcon\n* @version: 1.9.18 - 2013-12-03 GMT 9:00 PM\n*\n* Created by Robert J. Knothe on 2010-10-25. Please report any bugs to https://github.com/BobKnothe/autoNumeric\n* Created by Sokolov Yura on 2010-11-07\n*\n* Copyright (c) 2011 Robert J. Knothe http://www.decorplanit.com/plugin/\n*\n* The MIT License (http://www.opensource.org/licenses/mit-license.php)\n*\n* Permission is hereby granted, free of charge, to any person\n* obtaining a copy of this software and associated documentation\n* files (the \"Software\"), to deal in the Software without\n* restriction, including without limitation the rights to use,\n* copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the\n* Software is furnished to do so, subject to the following\n* conditions:\n*\n* The above copyright notice and this permission notice shall be\n* included in all copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n* OTHER DEALINGS IN THE SOFTWARE.",
        "* Cross browser routine for setting selected range/cursor position",
        "* run callbacks in parameters if any\n     * any parameter could be a callback:\n     * - a function, which invoked with jQuery element, parameters and this parameter name and returns parameter value\n     * - a name of function, attached to $(selector).autoNumeric.functionName(){} - which was called previously",
        "* loops through the settings object (option array) to find the following\n         * k = option name example k=aNum\n         * val = option value example val=0123456789",
        "* calls the attached function from the html5 data example: data-a-sign=\"functionName\"",
        "* Preparing user defined options for further usage\n     * merge them with defaults appropriately",
        "* strip all unwanted characters and leave only a number alert",
        "* places or removes brackets on negative values",
        "* truncate decimal part of a number",
        "* prepare number string to be converted to real number",
        "* function to handle numbers less than 0 that are stored in Exponential notation ex: .0000001 stored as 1e-7",
        "* prepare real number to be converted to our format",
        "* checking that number satisfy format conditions\n     * and lays between settings.vMin and settings.vMax\n     * and the string length does not exceed the digits in settings.vMin and settings.vMax",
        "* private function to check for empty value",
        "* private function that formats our number",
        "* round number after setting by pasting or $().autoNumericSet()\n     * private function for round the number\n     * please note this handled as text - JavaScript math function can return inaccurate values\n     * also this offers multiple rounding methods that are not easily accomplished in JavaScript",
        "* Holder object for field properties",
        "* strip parts from excess characters and leading zeroes",
        "* set part of number to value keeping position of cursor",
        "* helper function for expandSelectionOnSign\n         * returns sign position of a formatted value",
        "* expands selection to cover whole sign\n         * prevents partial deletion/copying/overwriting of a sign",
        "* try to strip pasted value to digits",
        "* process pasting, cursor moving and skipping of not interesting keys\n         * if returns true, futher processing is not performed",
        "* process deletion of characters\n         * returns true if processing performed",
        "* process insertion of characters\n         * returns true if processing performed",
        "* formatting of just processed value with keeping of cursor position"
    ],
    "functions": [
        "getElementSelection",
        "setElementSelection",
        "runCallbacks",
        "convertKeyToNumber",
        "autoCode",
        "autoStrip",
        "negativeBracket",
        "truncateDecimal",
        "fixNumber",
        "checkValue",
        "presentNumber",
        "autoCheck",
        "checkEmpty",
        "autoGroup",
        "autoRound",
        "AutoNumericHolder",
        "autoGet",
        "getHolder"
    ],
    "classes": []
}