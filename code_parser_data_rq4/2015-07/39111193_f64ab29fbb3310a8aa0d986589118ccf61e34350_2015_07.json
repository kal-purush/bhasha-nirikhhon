{
    "identifiers": [
        "resolve",
        "Command",
        "start",
        "inspect",
        "LanguageService",
        "LanguageServiceHost",
        "readFileSync",
        "Module",
        "extend",
        "runInThisContext",
        "register",
        "createError",
        "getInlineSourceMap",
        "getDiagnostics",
        "Command",
        "require",
        "program",
        "program",
        "program",
        "program",
        "program",
        "program",
        "pkg",
        "program",
        "program",
        "process",
        "process",
        "program",
        "opts",
        "opts",
        "eval",
        "eval",
        "register",
        "opts",
        "filename",
        "code",
        "createService",
        "EVAL_FILENAME",
        "cwd",
        "Module",
        "Module",
        "_eval",
        "code",
        "result",
        "result",
        "inspect",
        "result",
        "process",
        "output",
        "program",
        "index",
        "process",
        "index",
        "skip",
        "skip",
        "process",
        "index",
        "arg",
        "opts",
        "arg",
        "value",
        "value",
        "skip",
        "process",
        "index",
        "args",
        "resolve",
        "args",
        "process",
        "args",
        "process",
        "__filename",
        "Module",
        "createService",
        "startRepl",
        "text",
        "filename",
        "files",
        "filename",
        "files",
        "filename",
        "files",
        "filename",
        "file",
        "text",
        "file",
        "service",
        "filename",
        "getDiagnostics",
        "service",
        "filename",
        "compiler",
        "diagnostics",
        "createError",
        "diagnostics",
        "compiler",
        "output",
        "output",
        "result",
        "filename",
        "getInlineSourceMap",
        "sourceMap",
        "filename",
        "text",
        "runInThisContext",
        "result",
        "filename",
        "files",
        "service",
        "ts",
        "config",
        "files",
        "fileName",
        "files",
        "fileName",
        "files",
        "fileName",
        "fileName",
        "files",
        "fileName",
        "file",
        "ts",
        "file",
        "ts",
        "readFileSync",
        "fileName",
        "e",
        "cwd",
        "extend",
        "config",
        "options",
        "ts",
        "options",
        "registry",
        "start",
        "process",
        "process",
        "replEval",
        "code",
        "context",
        "filename",
        "callback",
        "err",
        "result",
        "result",
        "_eval",
        "code",
        "EVAL_FILENAME",
        "e",
        "err",
        "e",
        "callback",
        "err",
        "result",
        "value",
        "value"
    ],
    "literals": [
        "'path'",
        "'commander'",
        "'repl'",
        "'util'",
        "'typescript'",
        "'fs'",
        "'module'",
        "'xtend'",
        "'vm'",
        "'../typescript-node'",
        "'ts-node'",
        "'../../package.json'",
        "'-e, --eval [code]'",
        "'Evaluate code'",
        "'-p, --print [code]'",
        "'Evaluate code and print result'",
        "'--compiler [name]'",
        "'Specify a custom TypeScript compiler'",
        "'--ignoreWarnings [codes]'",
        "'Specify a custom TypeScript compiler'",
        "'--configFile [path]'",
        "'Specify a custom TypeScript compiler'",
        "'[options] [ -e script | script.js ] [arguments]'",
        "'[eval].ts'",
        "string",
        "string",
        "string",
        "'string'",
        "'string'",
        "'\\n'",
        "'-'",
        "'node'",
        "string",
        "string",
        "''",
        "'//# sourceMappingURL='",
        "'.js.map'",
        "'//# sourceMappingURL='",
        "'utf-8'",
        "'> '",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "program",
        "pkg",
        "EVAL_FILENAME",
        "cwd",
        "opts",
        "eval",
        "code",
        "compiler",
        "files",
        "service",
        "result",
        "output",
        "index",
        "skip",
        "arg",
        "value",
        "args",
        "file",
        "output",
        "diagnostics",
        "result",
        "sourceMap",
        "code",
        "compiler",
        "file",
        "err",
        "result"
    ],
    "comments": [
        "TypeScript files must always end with `.ts`.",
        "Register returns environment options, helps creating a new language service.",
        "Defer creation of eval services.",
        "Skip over TS configuration options.",
        "Break on unknown argument value.",
        "Make the filename absolute.",
        "Initialize files object.",
        "Create language services for `eval`."
    ],
    "docstrings": [
        "* Evaluate the code snippet.",
        "* Create an inline eval service on demand.",
        "* Start a CLI REPL.",
        "* Eval code from the REPL.",
        "* Split a string of values into an array."
    ],
    "functions": [
        "_eval",
        "createService",
        "getScriptSnapshot",
        "startRepl",
        "replEval"
    ],
    "classes": []
}