{
    "identifiers": [
        "org",
        "apache",
        "zeppelin",
        "notebook",
        "repo",
        "java",
        "io",
        "java",
        "lang",
        "reflect",
        "Constructor",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "zeppelin",
        "conf",
        "ZeppelinConfiguration",
        "org",
        "apache",
        "zeppelin",
        "conf",
        "ZeppelinConfiguration",
        "ConfVars",
        "org",
        "apache",
        "zeppelin",
        "notebook",
        "Note",
        "org",
        "apache",
        "zeppelin",
        "notebook",
        "NoteInfo",
        "org",
        "apache",
        "zeppelin",
        "notebook",
        "Paragraph",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "repos",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "maxRepoNum",
        "pushKey",
        "pullKey",
        "conf",
        "allStorageClassNames",
        "conf",
        "getString",
        "ConfVars",
        "ZEPPELIN_NOTEBOOK_STORAGE",
        "trim",
        "allStorageClassNames",
        "isEmpty",
        "storageClassNames",
        "allStorageClassNames",
        "split",
        "storageClassNames",
        "length",
        "getMaxRepoNum",
        "storageClassNames",
        "length",
        "i",
        "i",
        "storageClassNames",
        "length",
        "i",
        "notebookStorageClass",
        "getClass",
        "forName",
        "storageClassNames",
        "i",
        "trim",
        "notebookStorageClass",
        "getConstructor",
        "repos",
        "add",
        "newInstance",
        "conf",
        "getRepoCount",
        "sync",
        "getRepo",
        "repoIndex",
        "getRepo",
        "repoIndex",
        "noteId",
        "getRepo",
        "get",
        "noteId",
        "repoIndex",
        "noteId",
        "getRepo",
        "repoIndex",
        "get",
        "noteId",
        "note",
        "getRepo",
        "save",
        "note",
        "getRepoCount",
        "getRepo",
        "save",
        "note",
        "e",
        "LOG",
        "info",
        "e",
        "getMessage",
        "repoIndex",
        "note",
        "getRepo",
        "repoIndex",
        "save",
        "note",
        "noteId",
        "repo",
        "repos",
        "repo",
        "remove",
        "noteId",
        "sourceRepoIndex",
        "destRepoIndex",
        "LOG",
        "info",
        "sourceRepo",
        "getRepo",
        "sourceRepoIndex",
        "destRepo",
        "getRepo",
        "destRepoIndex",
        "sourceNotes",
        "sourceRepo",
        "destNotes",
        "destRepo",
        "noteIDs",
        "notesCheckDiff",
        "sourceNotes",
        "sourceRepo",
        "destNotes",
        "destRepo",
        "pushNoteIDs",
        "noteIDs",
        "get",
        "pushKey",
        "pullNoteIDs",
        "noteIDs",
        "get",
        "pullKey",
        "pushNoteIDs",
        "isEmpty",
        "LOG",
        "info",
        "id",
        "pushNoteIDs",
        "LOG",
        "info",
        "id",
        "pushNotes",
        "pushNoteIDs",
        "sourceRepo",
        "destRepo",
        "LOG",
        "info",
        "pullNoteIDs",
        "isEmpty",
        "LOG",
        "info",
        "id",
        "pullNoteIDs",
        "LOG",
        "info",
        "id",
        "pushNotes",
        "pullNoteIDs",
        "destRepo",
        "sourceRepo",
        "LOG",
        "info",
        "LOG",
        "info",
        "sync",
        "ids",
        "localRepo",
        "remoteRepo",
        "id",
        "ids",
        "remoteRepo",
        "save",
        "localRepo",
        "get",
        "id",
        "repos",
        "size",
        "maxRepoNum",
        "repoIndex",
        "repoIndex",
        "repoIndex",
        "getRepoCount",
        "repos",
        "get",
        "repoIndex",
        "sourceNotes",
        "sourceRepo",
        "destNotes",
        "destRepo",
        "pushIDs",
        "pullIDs",
        "dnote",
        "sdate",
        "ddate",
        "snote",
        "sourceNotes",
        "dnote",
        "containsID",
        "destNotes",
        "snote",
        "getId",
        "dnote",
        "sdate",
        "lastModificationDate",
        "sourceRepo",
        "get",
        "snote",
        "getId",
        "ddate",
        "lastModificationDate",
        "destRepo",
        "get",
        "dnote",
        "getId",
        "sdate",
        "after",
        "ddate",
        "pushIDs",
        "add",
        "snote",
        "getId",
        "LOG",
        "info",
        "sdate",
        "sdate",
        "compareTo",
        "ddate",
        "LOG",
        "info",
        "ddate",
        "pullIDs",
        "add",
        "snote",
        "getId",
        "pushIDs",
        "add",
        "snote",
        "getId",
        "note",
        "destNotes",
        "dnote",
        "containsID",
        "sourceNotes",
        "note",
        "getId",
        "dnote",
        "pullIDs",
        "add",
        "note",
        "getId",
        "put",
        "pushKey",
        "pushIDs",
        "put",
        "pullKey",
        "pullIDs",
        "notes",
        "id",
        "note",
        "notes",
        "note",
        "getId",
        "equals",
        "id",
        "note",
        "note",
        "latest",
        "tempCreated",
        "tempStarted",
        "tempFinished",
        "paragraph",
        "note",
        "getParagraphs",
        "tempCreated",
        "paragraph",
        "getDateCreated",
        "tempStarted",
        "paragraph",
        "getDateStarted",
        "tempFinished",
        "paragraph",
        "getDateFinished",
        "tempCreated",
        "tempCreated",
        "after",
        "latest",
        "latest",
        "tempCreated",
        "tempStarted",
        "tempStarted",
        "after",
        "latest",
        "latest",
        "tempStarted",
        "tempFinished",
        "tempFinished",
        "after",
        "latest",
        "latest",
        "tempFinished",
        "latest",
        "note",
        "LOG",
        "info",
        "note",
        "getName",
        "LOG",
        "info",
        "note",
        "id",
        "p",
        "note",
        "getParagraphs",
        "printParagraph",
        "p",
        "paragraph",
        "LOG",
        "info",
        "paragraph",
        "getDateCreated",
        "LOG",
        "info",
        "paragraph",
        "getDateStarted",
        "LOG",
        "info",
        "paragraph",
        "getDateFinished",
        "LOG",
        "info",
        "paragraph",
        "getId",
        "LOG",
        "info",
        "paragraph",
        "getTitle",
        "notes",
        "LOG",
        "info",
        "note",
        "notes",
        "printNoteInfo",
        "note",
        "note",
        "LOG",
        "info",
        "note",
        "getName",
        "LOG",
        "info",
        "note",
        "getId",
        "configs",
        "note",
        "getConfig",
        "entry",
        "configs",
        "entrySet",
        "LOG",
        "info",
        "entry",
        "getKey",
        "entry",
        "getValue",
        "toString",
        "entry",
        "getClass"
    ],
    "literals": [
        "\"pushNoteIDs\"",
        "\"pullNoteIDs\"",
        "\"Empty ZEPPELIN_NOTEBOOK_STORAGE conf parameter\"",
        "\",\"",
        "\"Unsupported number of storage classes (\"",
        "\") in ZEPPELIN_NOTEBOOK_STORAGE\"",
        "\": Failed to write to secondary storage\"",
        "\"Sync started\"",
        "\"Notes with the following IDs will be pushed\"",
        "\"ID : \"",
        "\"Nothing to push\"",
        "\"Notes with the following IDs will be pulled\"",
        "\"ID : \"",
        "\"Nothing to pull\"",
        "\"Sync ended\"",
        "\"Storage repo index is out of range\"",
        "\"Modified note is added to push list : \"",
        "\"Modified note is added to pull list : \"",
        "\"Note name :  \"",
        "\"Note ID :  \"",
        "\"Date created :  \"",
        "\"Date started :  \"",
        "\"Date finished :  \"",
        "\"Paragraph ID : \"",
        "\"Paragraph title : \"",
        "\"The following is a list of note infos\"",
        "\"Note info of notebook with name : \"",
        "\"ID : \"",
        "\"Config Key = \"",
        "\"  , Value = \"",
        "\"of class \""
    ],
    "variables": [
        "dnote",
        "sdate",
        "ddate",
        "tempCreated",
        "tempStarted",
        "tempFinished"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Notebook repository sync with remote storage",
        "* @param (conf)\n   * @throws - Exception",
        "by default lists from first repository",
        "list from specific repo (for tests)",
        "by default returns from first repository",
        "get note from specific repo (for tests)",
        "by default saves to all repos",
        "save note to specific repo (for tests)",
        "TODO(khalid): handle case when removing from secondary storage fails",
        "* copy new/updated notes from source to destination storage \n   * @throws IOException",
        "note exists in source and destination storage systems",
        "source contains more up to date note - push",
        "destination contains more up to date note - pull",
        "note exists in source storage, and absent in destination\n         * view source as up to date - push\n         * (another scenario : note was deleted from destination - not considered)",
        "note exists in destination storage, and absent in source - pull",
        "* checks latest modification date based on Paragraph fields\n   * @return -Date"
    ],
    "functions": [
        "NotebookRepoSync",
        "Note",
        "get",
        "Note",
        "get",
        "save",
        "save",
        "remove",
        "sync",
        "sync",
        "pushNotes",
        "getRepoCount",
        "getMaxRepoNum",
        "NotebookRepo",
        "getRepo",
        "notesCheckDiff",
        "NoteInfo",
        "containsID",
        "lastModificationDate",
        "printParagraphs",
        "printParagraph",
        "printNoteInfos",
        "printNoteInfo"
    ],
    "classes": [
        "NotebookRepoSync"
    ]
}