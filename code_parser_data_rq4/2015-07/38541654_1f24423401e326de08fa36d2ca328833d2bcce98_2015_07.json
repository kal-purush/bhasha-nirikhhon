{
    "identifiers": [
        "index",
        "name",
        "callback",
        "context",
        "name",
        "name",
        "name",
        "callback",
        "context",
        "name",
        "callback",
        "name",
        "name",
        "listener",
        "listeners",
        "i",
        "i",
        "listener",
        "callback",
        "listeners",
        "i",
        "name",
        "args",
        "name",
        "name",
        "listener",
        "listeners",
        "i",
        "i",
        "listener",
        "listener",
        "args",
        "EventEmitter",
        "input_el",
        "ev",
        "ev",
        "ev",
        "ev",
        "query",
        "query",
        "el",
        "el",
        "el",
        "el",
        "el",
        "options",
        "query",
        "query",
        "results_el",
        "options",
        "options",
        "option",
        "option",
        "label",
        "option",
        "label",
        "option",
        "li",
        "label",
        "li",
        "option",
        "li",
        "li",
        "li",
        "li",
        "results_el",
        "li",
        "results_el",
        "results_el",
        "results_el",
        "input_el",
        "Dropdown",
        "input_el"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'ul'",
        "'class'",
        "'dropdown'",
        "'style'",
        "'position: absolute; display: none'",
        "'keydown'",
        "'keyup'",
        "'focus'",
        "'blur'",
        "'select'",
        "'value'",
        "'change'",
        "'selected'",
        "'selected'",
        "'preselect'",
        "'value'",
        "'none'",
        "string",
        "'block'",
        "'none'",
        "'string'",
        "string",
        "'li'",
        "'value'",
        "'mouseover'",
        "'mousedown'",
        "'mouseout'"
    ],
    "variables": [
        "listeners",
        "i",
        "listener",
        "listeners",
        "i",
        "listener",
        "query",
        "results_el",
        "label",
        "li"
    ],
    "comments": [
        "Does not raise an error if the given event does not exist, or the given\n  callback cannot be found.",
        "only remove one at a time",
        "Does not raise an error if there are no listeners for the given event.",
        "input_el:\n    the original text input element that listens for input\nresults_el:\n    the container element for results\nselected_el:\n    the currently element for results",
        "DOMLib.EventEmitter.call(this);",
        "initialize results element, even though we don't use it yet",
        "insert results element as a sibling to the input element",
        "if input_el.nextSibling is null, this works just like .appendChild",
        "attach events",
        "simply clicking or tabbing into the box should trigger the dropdown",
        "13 == ENTER",
        "38 == UP-arrow",
        "Don't go lower than 0 when clicking up",
        "40 == DOWN-arrow",
        "Don't go higher than the last available option when going down",
        "13 == ENTER",
        "is this the best place for this reset?",
        "set this.query so that we know when the input differs from the current query",
        "clear",
        "while (this.results_el.lastChild) {",
        "results_el.removeChild(this.results_el.lastChild);",
        "}",
        "label can be either a string or a DOM element",
        "I wish I could listen for mouseover / mousedown higher up, but it's",
        "harder, since it's hard to listen at a certain level",
        "MDN: var replacedNode = parentNode.replaceChild(newChild, oldChild);",
        "and set the current results element to the new one",
        "Dropdown.attach is the preferred API endpoint for initializing an\n  dropdown element. It sets up the controller object, all the listeners,\n  and returns the results list element, which has some custom event listeners."
    ],
    "docstrings": [],
    "functions": [
        "on",
        "off",
        "emit",
        "keydown",
        "keyup",
        "selected",
        "changed",
        "preselect",
        "reset",
        "setOptions",
        "attach"
    ],
    "classes": [
        "EventEmitter",
        "Dropdown"
    ]
}