{
    "identifiers": [
        "com",
        "conveyal",
        "osmlib",
        "com",
        "beust",
        "jcommander",
        "Sets",
        "junit",
        "framework",
        "TestCase",
        "java",
        "util",
        "N",
        "lo",
        "numbers",
        "Sets",
        "newHashSet",
        "tracker",
        "hi",
        "count",
        "i",
        "i",
        "i",
        "n",
        "i",
        "i",
        "lo",
        "numbers",
        "add",
        "n",
        "tracker",
        "add",
        "n",
        "hi",
        "n",
        "count",
        "assertTrue",
        "numbers",
        "size",
        "count",
        "i",
        "lo",
        "i",
        "hi",
        "i",
        "tracker",
        "contains",
        "i",
        "assertTrue",
        "numbers",
        "contains",
        "i",
        "assertFalse",
        "numbers",
        "contains",
        "i",
        "numbers",
        "contains",
        "i",
        "assertTrue",
        "tracker",
        "contains",
        "i",
        "assertFalse",
        "tracker",
        "contains",
        "i"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Set N numbers in each of four different ranges.",
        "Simultaneously set up a basic Set<Long> that will serve as a reference",
        "and a NodeTracker that we want to test.",
        "Check that the two set implementations match for every value in the range (including unset ones).",
        "Note that a Set<Long> containing 0L returns false for contains((int)0)."
    ],
    "docstrings": [
        "* Check the NodeTracker against a stock Set<Long>.\n     * This is done in ranges that will include numbers significantly greater than 2^32"
    ],
    "functions": [
        "testAgainstSet"
    ],
    "classes": [
        "NodeTrackerTest"
    ]
}