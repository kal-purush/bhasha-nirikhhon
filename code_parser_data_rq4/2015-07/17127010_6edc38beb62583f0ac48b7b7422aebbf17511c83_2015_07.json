{
    "identifiers": [
        "org",
        "wso2",
        "dss",
        "integration",
        "test",
        "jira",
        "issues",
        "org",
        "apache",
        "axiom",
        "om",
        "OMAbstractFactory",
        "org",
        "apache",
        "axiom",
        "om",
        "OMElement",
        "org",
        "apache",
        "axiom",
        "om",
        "OMFactory",
        "org",
        "apache",
        "axiom",
        "om",
        "OMNamespace",
        "org",
        "apache",
        "axis2",
        "AxisFault",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "testng",
        "Assert",
        "org",
        "testng",
        "annotations",
        "AfterClass",
        "org",
        "testng",
        "annotations",
        "BeforeClass",
        "org",
        "testng",
        "annotations",
        "Test",
        "org",
        "wso2",
        "carbon",
        "automation",
        "engine",
        "exceptions",
        "AutomationFrameworkException",
        "org",
        "wso2",
        "carbon",
        "automation",
        "extensions",
        "servers",
        "carbonserver",
        "TestServerManager",
        "org",
        "wso2",
        "carbon",
        "automation",
        "test",
        "utils",
        "axis2client",
        "AxisServiceClient",
        "org",
        "wso2",
        "carbon",
        "automation",
        "test",
        "utils",
        "http",
        "client",
        "HttpResponse",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "admin",
        "client",
        "AuthenticatorClient",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "admin",
        "client",
        "UserManagementClient",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "utils",
        "FileManager",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "utils",
        "LoginLogoutClient",
        "org",
        "wso2",
        "carbon",
        "integration",
        "common",
        "utils",
        "mgt",
        "ServerConfigurationManager",
        "org",
        "wso2",
        "dss",
        "integration",
        "common",
        "utils",
        "DSSTestCaseUtils",
        "org",
        "wso2",
        "dss",
        "integration",
        "test",
        "DSSIntegrationTest",
        "javax",
        "activation",
        "DataHandler",
        "javax",
        "xml",
        "xpath",
        "XPathExpressionException",
        "java",
        "io",
        "java",
        "net",
        "HttpURLConnection",
        "java",
        "net",
        "URL",
        "java",
        "rmi",
        "RemoteException",
        "java",
        "util",
        "org",
        "testng",
        "Assert",
        "assertFalse",
        "org",
        "testng",
        "Assert",
        "assertTrue",
        "log",
        "LogFactory",
        "getLog",
        "serviceName",
        "serviceEndPoint",
        "serverConfigurationManager",
        "userManagementClient",
        "backendUrl",
        "fac",
        "OMAbstractFactory",
        "getOMFactory",
        "omNs",
        "fac",
        "createOMNamespace",
        "carbonHome",
        "startupParameterMap",
        "testServerManager",
        "backupUserDir",
        "backupCarbonHome",
        "loginClient",
        "BeforeClass",
        "alwaysRun",
        "init",
        "startupParameterMap",
        "startupParameterMap",
        "put",
        "testServerManager",
        "dssContext",
        "startupParameterMap",
        "sourceFile",
        "getResourceLocation",
        "File",
        "separator",
        "File",
        "separator",
        "getParameter",
        "FileManager",
        "copyFile",
        "sourceFile",
        "getCarbonHome",
        "File",
        "separator",
        "File",
        "separator",
        "e",
        "e",
        "getMessage",
        "e",
        "e",
        "e",
        "getMessage",
        "e",
        "testServerManager",
        "setParameter",
        "testServerCarbonHome",
        "testServerManager",
        "startServer",
        "backupUserDir",
        "getProperty",
        "backupCarbonHome",
        "getProperty",
        "backupUserDir",
        "backupCarbonHome",
        "setProperty",
        "testServerCarbonHome",
        "loginClient",
        "backendUrl",
        "sessionCookie",
        "loginClient",
        "login",
        "userInfo",
        "getUserName",
        "userInfo",
        "getPassword",
        "sqlFileLis",
        "sqlFileLis",
        "add",
        "selectSqlFile",
        "deployService",
        "serviceName",
        "createArtifact",
        "getResourceLocation",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "serviceName",
        "sqlFileLis",
        "insertTimeStampToDb",
        "testServerManager",
        "stopServer",
        "testServerManager",
        "removeParameter",
        "testServerManager",
        "setParameter",
        "testServerManager",
        "configureServer",
        "testServerManager",
        "startServer",
        "sessionCookie",
        "loginClient",
        "login",
        "userInfo",
        "getUserName",
        "userInfo",
        "getPassword",
        "insertTimeStampToDb",
        "AfterClass",
        "alwaysRun",
        "setProperty",
        "backupCarbonHome",
        "setProperty",
        "backupUserDir",
        "cleanup",
        "Test",
        "groups",
        "description",
        "alwaysRun",
        "payload",
        "fac",
        "createOMElement",
        "omNs",
        "result",
        "sendReceive",
        "payload",
        "backendUrl",
        "serviceName",
        "iterator",
        "result",
        "getChildrenWithLocalName",
        "timeStampString",
        "iterator",
        "hasNext",
        "timeStamp",
        "iterator",
        "next",
        "timeStampString",
        "timeStampString",
        "timeStamp",
        "getChildrenWithLocalName",
        "next",
        "toString",
        "tempTimeStamp",
        "timeStamp",
        "getChildrenWithLocalName",
        "next",
        "toString",
        "Assert",
        "assertTrue",
        "timeStampString",
        "equals",
        "tempTimeStamp",
        "Assert",
        "assertNotNull",
        "result",
        "log",
        "debug",
        "result",
        "log",
        "info",
        "idString",
        "timeStamp",
        "payload",
        "fac",
        "createOMElement",
        "omNs",
        "idStringElmnt",
        "fac",
        "createOMElement",
        "omNs",
        "idStringElmnt",
        "setText",
        "idString",
        "payload",
        "addChild",
        "idStringElmnt",
        "timeStampElmnt",
        "fac",
        "createOMElement",
        "omNs",
        "timeStampElmnt",
        "setText",
        "timeStamp",
        "payload",
        "addChild",
        "timeStampElmnt",
        "sendRobust",
        "payload",
        "backendUrl",
        "serviceName",
        "serviceName",
        "dssConfiguration",
        "dssTest",
        "Assert",
        "assertTrue",
        "dssTest",
        "uploadArtifact",
        "backendUrl",
        "sessionCookie",
        "serviceName",
        "dssConfiguration",
        "Assert",
        "assertTrue",
        "dssTest",
        "isServiceDeployed",
        "backendUrl",
        "sessionCookie",
        "serviceName"
    ],
    "literals": [
        "\"TimStampDifference\"",
        "\"https://localhost:9453/services/\"",
        "\"http://ws.wso2.org/dataservice\"",
        "\"ns1\"",
        "\"-DportOffset\"",
        "\"10\"",
        "\"serverConfigs\"",
        "\"shFilename\"",
        "\"bin\"",
        "\"wso2server.sh\"",
        "\"shFilename\"",
        "\"wso2server.sh\"",
        "\"user.dir\"",
        "\"carbon.home\"",
        "\"****************  back up user dir   \"",
        "\"****************  back up carbonhome \"",
        "\"carbon.home\"",
        "\"localhost\"",
        "\"CreateTableWithTimeStamp.sql\"",
        "\"dbs\"",
        "\"rdbms\"",
        "\"h2\"",
        "\".dbs\"",
        "\"Insert With America/New_York Time Zone\"",
        "\"1970-01-02T12:00:00.000+02:00\"",
        "\"shFilename\"",
        "\"shFilename\"",
        "\"wso2server1.sh\"",
        "\"localhost\"",
        "\"Insert With America/New_York Time Zone\"",
        "\"1970-01-02T12:00:00.000+02:00\"",
        "\"carbon.home\"",
        "\"user.dir\"",
        "\"wso2.dss\"",
        "\"insert timestamp in America/New_York timezone and UTC timezone, retrieve all and compare whether all are same\"",
        "\"getTimeStamps\"",
        "\"getTimeStamps\"",
        "\"timeStamp\"",
        "\"testTimeStamp\"",
        "\"testTimeStamp\"",
        "\"Response message null \"",
        "\"data service insert same timestamp to the database when the server is in different timezones\"",
        "\"insertTimeStamp\"",
        "\"idString\"",
        "\"\"",
        "\"testTimeStamp\"",
        "\"\"",
        "\"insertTimeStamp\"",
        "\"Service File Uploading failed\"",
        "\"Service Not Found, Deployment time out \""
    ],
    "variables": [
        "serviceEndPoint",
        "serverConfigurationManager",
        "userManagementClient",
        "carbonHome",
        "startupParameterMap",
        "testServerManager",
        "backupUserDir",
        "backupCarbonHome",
        "loginClient"
    ],
    "comments": [
        "File destinationFile = new File(testServerManager.getCarbonHome() + File.separator + \"bin\" + File.separator + \"wso2server.sh\");",
        "copying wso2server.sh file to bin folder",
        "System.setProperty(\"user.dir\", testServerCarbonHome);",
        "backendUrl = dssContext.getContextUrls().getBackEndUrl();",
        "deleteService(serviceName);"
    ],
    "docstrings": [
        "*  Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n*\n*  WSO2 Inc. licenses this file to you under the Apache License,\n*  Version 2.0 (the \"License\"); you may not use this file except\n*  in compliance with the License.\n*  You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.",
        "* This test is to verify the fix for https://wso2.org/jira/browse/DS-1069\n * persisting TimeStamps when the server in different time zones inserts different values to DB.\n * this is to test this scenario in h2 db (this depends on database driver used, mysql driver doesn't\n * work with this solution. for that we have to add two parameters to connection url\n * \"useLegacyDatetimeCode=false&serverTimezone=UTC\" )",
        "* helper method to insert timestamp values to the database\n     *\n     * @param idString\n     * @param timeStamp\n     * @throws org.apache.axis2.AxisFault",
        "* helper method to deploy the service in custom new server\n     *\n     * @param serviceName\n     * @param dssConfiguration\n     * @throws Exception"
    ],
    "functions": [
        "serviceDeployment",
        "configureServer",
        "destroy",
        "insertAndTestTimeStampValuesInDbTest",
        "insertTimeStampToDb",
        "deployService"
    ],
    "classes": [
        "DS1069DifferentTimeStampStoreIssueTestCase"
    ]
}