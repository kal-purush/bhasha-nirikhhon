{
    "identifiers": [
        "A",
        "B",
        "a",
        "b",
        "a",
        "A",
        "b",
        "B",
        "digits",
        "cross",
        "rows",
        "cols",
        "cross",
        "rows",
        "c",
        "c",
        "cols",
        "cross",
        "r",
        "cols",
        "r",
        "rows",
        "cross",
        "rs",
        "cs",
        "rs",
        "cs",
        "s",
        "u",
        "u",
        "unitlist",
        "s",
        "u",
        "s",
        "squares",
        "s",
        "sum",
        "units",
        "s",
        "s",
        "s",
        "squares",
        "len",
        "squares",
        "len",
        "unitlist",
        "all",
        "len",
        "units",
        "s",
        "s",
        "squares",
        "all",
        "len",
        "peers",
        "s",
        "s",
        "squares",
        "units",
        "peers",
        "grid",
        "s",
        "digits",
        "s",
        "squares",
        "s",
        "d",
        "grid_values",
        "grid",
        "items",
        "d",
        "digits",
        "assign",
        "values",
        "s",
        "d",
        "values",
        "grid",
        "c",
        "c",
        "grid",
        "c",
        "digits",
        "c",
        "len",
        "chars",
        "squares",
        "chars",
        "values",
        "s",
        "d",
        "values",
        "s",
        "replace",
        "d",
        "all",
        "eliminate",
        "values",
        "s",
        "d2",
        "d2",
        "other_values",
        "values",
        "values",
        "s",
        "d",
        "d",
        "values",
        "s",
        "values",
        "values",
        "s",
        "replace",
        "d",
        "len",
        "values",
        "s",
        "len",
        "values",
        "s",
        "all",
        "eliminate",
        "values",
        "s2",
        "values",
        "s",
        "s2",
        "peers",
        "s",
        "u",
        "units",
        "s",
        "s",
        "s",
        "u",
        "d",
        "values",
        "s",
        "len",
        "dplaces",
        "len",
        "dplaces",
        "assign",
        "values",
        "dplaces",
        "d",
        "values",
        "values",
        "max",
        "len",
        "values",
        "s",
        "s",
        "squares",
        "join",
        "width",
        "r",
        "rows",
        "join",
        "values",
        "r",
        "c",
        "center",
        "width",
        "c",
        "c",
        "cols",
        "r",
        "line",
        "grid",
        "search",
        "parse_grid",
        "grid",
        "values",
        "values",
        "all",
        "len",
        "values",
        "s",
        "s",
        "squares",
        "values",
        "min",
        "len",
        "values",
        "s",
        "s",
        "s",
        "squares",
        "len",
        "values",
        "s",
        "some",
        "search",
        "assign",
        "values",
        "copy",
        "s",
        "d",
        "d",
        "values",
        "s",
        "seq",
        "e",
        "seq",
        "e",
        "e",
        "filename",
        "sep",
        "file",
        "filename",
        "read",
        "strip",
        "split",
        "sep",
        "seq",
        "seq",
        "random",
        "shuffle",
        "seq",
        "seq",
        "time",
        "random",
        "grids",
        "name",
        "showif",
        "grid",
        "time",
        "clock",
        "solve",
        "grid",
        "time",
        "clock",
        "start",
        "showif",
        "t",
        "showif",
        "display",
        "grid_values",
        "grid",
        "values",
        "display",
        "values",
        "t",
        "t",
        "solved",
        "values",
        "time_solve",
        "grid",
        "grid",
        "grids",
        "len",
        "grids",
        "N",
        "sum",
        "results",
        "N",
        "name",
        "sum",
        "times",
        "N",
        "N",
        "sum",
        "times",
        "max",
        "times",
        "values",
        "unit",
        "values",
        "s",
        "s",
        "unit",
        "digits",
        "values",
        "all",
        "unitsolved",
        "unit",
        "unit",
        "unitlist",
        "N",
        "s",
        "digits",
        "s",
        "squares",
        "s",
        "shuffled",
        "squares",
        "assign",
        "values",
        "s",
        "random",
        "choice",
        "values",
        "s",
        "values",
        "s",
        "s",
        "squares",
        "len",
        "values",
        "s",
        "len",
        "ds",
        "N",
        "len",
        "ds",
        "join",
        "values",
        "s",
        "len",
        "values",
        "s",
        "s",
        "squares",
        "random_puzzle",
        "N",
        "test",
        "solve_all",
        "from_file",
        "solve_all",
        "from_file",
        "solve_all",
        "from_file",
        "solve_all",
        "random_puzzle",
        "_"
    ],
    "literals": [
        "\"Cross product of elements in A and elements in B.\"",
        "'123456789'",
        "'ABCDEFGHI'",
        "'ABC'",
        "'DEF'",
        "'GHI'",
        "'123'",
        "'456'",
        "'789'",
        "\"A set of tests that must pass.\"",
        "'C2'",
        "'A2'",
        "'B2'",
        "'C2'",
        "'D2'",
        "'E2'",
        "'F2'",
        "'G2'",
        "'H2'",
        "'I2'",
        "'C1'",
        "'C2'",
        "'C3'",
        "'C4'",
        "'C5'",
        "'C6'",
        "'C7'",
        "'C8'",
        "'C9'",
        "'A1'",
        "'A2'",
        "'A3'",
        "'B1'",
        "'B2'",
        "'B3'",
        "'C1'",
        "'C2'",
        "'C3'",
        "'C2'",
        "'A2'",
        "'B2'",
        "'D2'",
        "'E2'",
        "'F2'",
        "'G2'",
        "'H2'",
        "'I2'",
        "'C1'",
        "'C3'",
        "'C4'",
        "'C5'",
        "'C6'",
        "'C7'",
        "'C8'",
        "'C9'",
        "'A1'",
        "'A3'",
        "'B1'",
        "'B3'",
        "'All tests pass.'",
        "\"Convert grid into a dict of {square: char} with '0' or '.' for empties.\"",
        "'0.'",
        "''",
        "''",
        "\"Display these values as a 2-D grid.\"",
        "'+'",
        "'-'",
        "''",
        "'|'",
        "'36'",
        "''",
        "'CF'",
        "\"Using depth-first search and propagation, try all possible values.\"",
        "\"Return some element of seq that is true.\"",
        "'\\n'",
        "\"Parse a file into a list of strings, separated by sep.\"",
        "\"Return a randomly shuffled copy of the input sequence.\"",
        "''",
        "'(%.2f seconds)\\n'",
        "\"Solved %d of %d %s puzzles (avg %.4f secs (%.2f Hz), max %.4f secs).\"",
        "\"A puzzle is solved if each unit is a permutation of the digits 1 to 9.\"",
        "''",
        "'.'",
        "'003020600900305001001806400008102900700000008006708200002609500800203009005010300'",
        "'4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......'",
        "'.....6....59.....82....8....45........3........6..3.54...325..6..................'",
        "'__main__'",
        "\"easy50.txt\"",
        "\"easy\"",
        "\"top95.txt\"",
        "\"hard\"",
        "\"hardest.txt\"",
        "\"hardest\"",
        "\"random\""
    ],
    "variables": [
        "digits",
        "rows",
        "cols",
        "squares",
        "unitlist",
        "units",
        "peers",
        "values",
        "chars",
        "other_values",
        "values",
        "s",
        "dplaces",
        "width",
        "line",
        "n",
        "s",
        "seq",
        "start",
        "values",
        "t",
        "times",
        "results",
        "N",
        "values",
        "ds",
        "grid1",
        "grid2",
        "hard1"
    ],
    "comments": [
        "Solve Every Sudoku Puzzle",
        "See http://norvig.com/sudoku.html",
        "Throughout this program we have:",
        "r is a row,    e.g. 'A'",
        "c is a column, e.g. '3'",
        "s is a square, e.g. 'A3'",
        "d is a digit,  e.g. '9'",
        "u is a unit,   e.g. ['A1','B1','C1','D1','E1','F1','G1','H1','I1']",
        "grid is a grid,e.g. 81 non-blank chars, e.g. starting with '.18...7...",
        "values is a dict of possible values, e.g. {'A1':'12349', 'A2':'8', ...}",
        "Unit Tests ################",
        "Parse a Grid ################",
        "To start, every square can be any digit; then assign values from the grid.",
        "(Fail if we can't assign d to square s.)",
        "Constraint Propagation ################",
        "Already eliminated",
        "(1) If a square s is reduced to one value d2, then eliminate d2 from the peers.",
        "Contradiction: removed last value",
        "(2) If a unit u is reduced to only one place for a value d, then put it there.",
        "Contradiction: no place for this value",
        "d can only be in one place in unit; assign it there",
        "Display as 2-D grid ################",
        "Search ################",
        "Failed earlier",
        "Solved!",
        "Chose the unfilled square s with the fewest possibilities",
        "Utilities ################",
        "System test ################",
        "Display puzzles that take long enough",
        "Give up and make a new puzzle",
        "References used:",
        "http://www.scanraid.com/BasicStrategies.htm",
        "http://www.sudokudragon.com/sudokustrategy.htm",
        "http://www.krazydad.com/blog/2005/09/29/an-index-of-sudoku-strategies/",
        "http://www2.warwick.ac.uk/fac/sci/moac/currentstudents/peter_cock/python/sudoku/"
    ],
    "docstrings": [
        "\"\"\"Convert grid to a dict of possible values, {square: digits}, or\n    return False if a contradiction is detected.\"\"\"",
        "\"\"\"Eliminate all the other values (except d) from values[s] and propagate.\n    Return values, except return False if a contradiction is detected.\"\"\"",
        "\"\"\"Eliminate d from values[s]; propagate when values or places <= 2.\n    Return values, except return False if a contradiction is detected.\"\"\"",
        "\"\"\"Attempt to solve a sequence of grids. Report results.\n    When showif is a number of seconds, display puzzles that take longer.\n    When showif is None, don't display any puzzles.\"\"\"",
        "\"\"\"Make a random puzzle with N or more assignments. Restart on contradictions.\n    Note the resulting puzzle is not guaranteed to be solvable, but empirically\n    about 99.8% of them are solvable. Some have multiple solutions.\"\"\""
    ],
    "functions": [
        "cross",
        "test",
        "parse_grid",
        "grid_values",
        "assign",
        "eliminate",
        "display",
        "solve",
        "search",
        "some",
        "from_file",
        "shuffled",
        "solve_all",
        "time_solve",
        "solved",
        "unitsolved",
        "random_puzzle"
    ],
    "classes": []
}