{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "cs231n",
        "classifiers",
        "cnn",
        "cs231n",
        "data_utils",
        "get_CIFAR10_data",
        "cs231n",
        "gradient_check",
        "eval_numerical_gradient_array",
        "eval_numerical_gradient",
        "cs231n",
        "layers",
        "cs231n",
        "fast_layers",
        "cs231n",
        "solver",
        "Solver",
        "plt",
        "rcParams",
        "plt",
        "rcParams",
        "plt",
        "rcParams",
        "x",
        "y",
        "np",
        "max",
        "np",
        "abs",
        "x",
        "y",
        "np",
        "maximum",
        "np",
        "abs",
        "x",
        "np",
        "abs",
        "y",
        "get_CIFAR10_data",
        "k",
        "v",
        "data",
        "items",
        "k",
        "v",
        "shape",
        "np",
        "linspace",
        "num",
        "np",
        "prod",
        "x_shape",
        "reshape",
        "x_shape",
        "np",
        "linspace",
        "num",
        "np",
        "prod",
        "w_shape",
        "reshape",
        "w_shape",
        "np",
        "linspace",
        "num",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "np",
        "array",
        "rel_error",
        "correct_out",
        "imageio",
        "imread",
        "PIL",
        "Image",
        "imread",
        "imread",
        "kitten",
        "shape",
        "kitten",
        "shape",
        "kitten",
        "d",
        "d",
        "np",
        "array",
        "Image",
        "fromarray",
        "puppy",
        "resize",
        "img_size",
        "img_size",
        "np",
        "array",
        "Image",
        "fromarray",
        "kitten_cropped",
        "resize",
        "img_size",
        "img_size",
        "np",
        "zeros",
        "img_size",
        "img_size",
        "resized_puppy",
        "transpose",
        "resized_kitten",
        "transpose",
        "np",
        "zeros",
        "np",
        "array",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "img",
        "normalize",
        "normalize",
        "np",
        "max",
        "img",
        "np",
        "min",
        "img",
        "img",
        "img_min",
        "img_max",
        "img_min",
        "plt",
        "imshow",
        "img",
        "astype",
        "plt",
        "gca",
        "axis",
        "plt",
        "subplot",
        "imshow_no_ax",
        "puppy",
        "normalize",
        "plt",
        "title",
        "plt",
        "subplot",
        "imshow_no_ax",
        "plt",
        "title",
        "plt",
        "subplot",
        "imshow_no_ax",
        "plt",
        "title",
        "plt",
        "subplot",
        "imshow_no_ax",
        "kitten_cropped",
        "normalize",
        "plt",
        "subplot",
        "imshow_no_ax",
        "plt",
        "subplot",
        "imshow_no_ax",
        "plt",
        "show",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "eval_numerical_gradient_array",
        "x",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "x",
        "dout",
        "eval_numerical_gradient_array",
        "w",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "w",
        "dout",
        "eval_numerical_gradient_array",
        "b",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "b",
        "dout",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "conv_backward_naive",
        "dout",
        "cache",
        "rel_error",
        "dx",
        "dx_num",
        "rel_error",
        "dw",
        "dw_num",
        "rel_error",
        "db",
        "db_num",
        "np",
        "linspace",
        "num",
        "np",
        "prod",
        "x_shape",
        "reshape",
        "x_shape",
        "max_pool_forward_naive",
        "x",
        "pool_param",
        "np",
        "array",
        "rel_error",
        "correct_out",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "eval_numerical_gradient_array",
        "x",
        "max_pool_forward_naive",
        "x",
        "pool_param",
        "x",
        "dout",
        "max_pool_forward_naive",
        "x",
        "pool_param",
        "max_pool_backward_naive",
        "dout",
        "cache",
        "rel_error",
        "dx",
        "dx_num",
        "cs231n",
        "fast_layers",
        "conv_forward_fast",
        "conv_backward_fast",
        "time",
        "time",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "time",
        "conv_forward_naive",
        "x",
        "w",
        "b",
        "conv_param",
        "time",
        "conv_forward_fast",
        "x",
        "w",
        "b",
        "conv_param",
        "time",
        "t1",
        "t0",
        "t2",
        "t1",
        "t1",
        "t0",
        "t2",
        "t1",
        "rel_error",
        "out_naive",
        "out_fast",
        "time",
        "conv_backward_naive",
        "dout",
        "cache_naive",
        "time",
        "conv_backward_fast",
        "dout",
        "cache_fast",
        "time",
        "t1",
        "t0",
        "t2",
        "t1",
        "t1",
        "t0",
        "t2",
        "t1",
        "rel_error",
        "dx_naive",
        "dx_fast",
        "rel_error",
        "dw_naive",
        "dw_fast",
        "rel_error",
        "db_naive",
        "db_fast",
        "cs231n",
        "layer_utils",
        "conv_relu_pool_forward",
        "conv_relu_pool_backward",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "conv_relu_pool_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "pool_param",
        "conv_relu_pool_backward",
        "dout",
        "cache",
        "eval_numerical_gradient_array",
        "x",
        "conv_relu_pool_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "pool_param",
        "x",
        "dout",
        "eval_numerical_gradient_array",
        "w",
        "conv_relu_pool_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "pool_param",
        "w",
        "dout",
        "eval_numerical_gradient_array",
        "b",
        "conv_relu_pool_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "pool_param",
        "b",
        "dout",
        "rel_error",
        "dx_num",
        "dx",
        "rel_error",
        "dw_num",
        "dw",
        "rel_error",
        "db_num",
        "db",
        "cs231n",
        "layer_utils",
        "conv_relu_forward",
        "conv_relu_backward",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "np",
        "random",
        "randn",
        "conv_relu_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "conv_relu_backward",
        "dout",
        "cache",
        "eval_numerical_gradient_array",
        "x",
        "conv_relu_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "x",
        "dout",
        "eval_numerical_gradient_array",
        "w",
        "conv_relu_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "w",
        "dout",
        "eval_numerical_gradient_array",
        "b",
        "conv_relu_forward",
        "x",
        "w",
        "b",
        "conv_param",
        "b",
        "dout",
        "rel_error",
        "dx_num",
        "dx",
        "rel_error",
        "dw_num",
        "dw",
        "rel_error",
        "db_num",
        "db",
        "ThreeLayerConvNet",
        "np",
        "random",
        "randn",
        "N",
        "np",
        "random",
        "randint",
        "size",
        "N",
        "model",
        "loss",
        "X",
        "y",
        "loss",
        "model",
        "loss",
        "X",
        "y",
        "loss",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "num_inputs",
        "input_dim",
        "np",
        "random",
        "randint",
        "num_classes",
        "size",
        "num_inputs",
        "ThreeLayerConvNet",
        "num_filters",
        "filter_size",
        "input_dim",
        "input_dim",
        "hidden_dim",
        "dtype",
        "np",
        "float64",
        "model",
        "loss",
        "X",
        "y",
        "param_name",
        "sorted",
        "grads",
        "_",
        "model",
        "loss",
        "X",
        "y",
        "eval_numerical_gradient",
        "f",
        "model",
        "param_name",
        "verbose",
        "h",
        "rel_error",
        "param_grad_num",
        "grads",
        "param_name",
        "param_name",
        "rel_error",
        "param_grad_num",
        "grads",
        "param_name",
        "np",
        "random",
        "seed",
        "data",
        "num_train",
        "data",
        "num_train",
        "data",
        "data",
        "ThreeLayerConvNet",
        "weight_scale",
        "Solver",
        "model",
        "small_data",
        "num_epochs",
        "batch_size",
        "update_rule",
        "optim_config",
        "verbose",
        "print_every",
        "solver",
        "train",
        "plt",
        "subplot",
        "plt",
        "plot",
        "solver",
        "loss_history",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "subplot",
        "plt",
        "plot",
        "solver",
        "train_acc_history",
        "plt",
        "plot",
        "solver",
        "val_acc_history",
        "plt",
        "legend",
        "loc",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "show",
        "ThreeLayerConvNet",
        "weight_scale",
        "hidden_dim",
        "reg",
        "Solver",
        "model",
        "data",
        "num_epochs",
        "batch_size",
        "update_rule",
        "optim_config",
        "verbose",
        "print_every",
        "solver",
        "train",
        "cs231n",
        "vis_utils",
        "visualize_grid",
        "visualize_grid",
        "model",
        "transpose",
        "plt",
        "imshow",
        "grid",
        "astype",
        "plt",
        "axis",
        "plt",
        "gcf",
        "set_size_inches",
        "plt",
        "show",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "x",
        "shape",
        "x",
        "mean",
        "axis",
        "x",
        "std",
        "axis",
        "np",
        "ones",
        "C",
        "np",
        "zeros",
        "C",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "shape",
        "mean",
        "axis",
        "std",
        "axis",
        "np",
        "asarray",
        "np",
        "asarray",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "shape",
        "mean",
        "axis",
        "std",
        "axis",
        "np",
        "random",
        "seed",
        "np",
        "ones",
        "C",
        "np",
        "zeros",
        "C",
        "t",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "a_norm",
        "mean",
        "axis",
        "a_norm",
        "std",
        "axis",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "np",
        "random",
        "randn",
        "C",
        "np",
        "random",
        "randn",
        "C",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "x",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "a",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "b",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "eval_numerical_gradient_array",
        "fx",
        "x",
        "dout",
        "eval_numerical_gradient_array",
        "fg",
        "gamma",
        "dout",
        "eval_numerical_gradient_array",
        "fb",
        "beta",
        "dout",
        "spatial_batchnorm_forward",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "spatial_batchnorm_backward",
        "dout",
        "cache",
        "rel_error",
        "dx_num",
        "dx",
        "rel_error",
        "da_num",
        "dgamma",
        "rel_error",
        "db_num",
        "dbeta",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "x",
        "reshape",
        "N",
        "G",
        "x",
        "shape",
        "x_g",
        "mean",
        "axis",
        "x_g",
        "std",
        "axis",
        "np",
        "ones",
        "C",
        "np",
        "zeros",
        "C",
        "spatial_groupnorm_forward",
        "x",
        "gamma",
        "beta",
        "G",
        "bn_param",
        "reshape",
        "N",
        "G",
        "shape",
        "out_g",
        "mean",
        "axis",
        "out_g",
        "std",
        "axis",
        "np",
        "random",
        "seed",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "np",
        "random",
        "randn",
        "C",
        "np",
        "random",
        "randn",
        "C",
        "np",
        "random",
        "randn",
        "N",
        "C",
        "H",
        "W",
        "x",
        "spatial_groupnorm_forward",
        "x",
        "gamma",
        "beta",
        "G",
        "gn_param",
        "a",
        "spatial_groupnorm_forward",
        "x",
        "gamma",
        "beta",
        "G",
        "gn_param",
        "b",
        "spatial_groupnorm_forward",
        "x",
        "gamma",
        "beta",
        "G",
        "gn_param",
        "eval_numerical_gradient_array",
        "fx",
        "x",
        "dout",
        "eval_numerical_gradient_array",
        "fg",
        "gamma",
        "dout",
        "eval_numerical_gradient_array",
        "fb",
        "beta",
        "dout",
        "spatial_groupnorm_forward",
        "x",
        "gamma",
        "beta",
        "G",
        "gn_param",
        "spatial_groupnorm_backward",
        "dout",
        "cache",
        "rel_error",
        "dx_num",
        "dx",
        "rel_error",
        "da_num",
        "dgamma",
        "rel_error",
        "db_num",
        "dbeta"
    ],
    "literals": [
        "'figure.figsize'",
        "'image.interpolation'",
        "'nearest'",
        "'image.cmap'",
        "'gray'",
        "'%s: '",
        "'stride'",
        "'pad'",
        "'Testing conv_forward_naive'",
        "'difference: '",
        "'notebook_images/kitten.jpg'",
        "'notebook_images/puppy.jpg'",
        "'stride'",
        "'pad'",
        "'uint8'",
        "'off'",
        "'Original image'",
        "'Grayscale'",
        "'Edges'",
        "'stride'",
        "'pad'",
        "'Testing conv_backward_naive function'",
        "'dx error: '",
        "'dw error: '",
        "'db error: '",
        "'pool_width'",
        "'pool_height'",
        "'stride'",
        "'Testing max_pool_forward_naive function:'",
        "'difference: '",
        "'pool_height'",
        "'pool_width'",
        "'stride'",
        "'Testing max_pool_backward_naive function:'",
        "'dx error: '",
        "'stride'",
        "'pad'",
        "'Testing conv_forward_fast:'",
        "'Naive: %fs'",
        "'Fast: %fs'",
        "'Speedup: %fx'",
        "'Difference: '",
        "'\\nTesting conv_backward_fast:'",
        "'Naive: %fs'",
        "'Fast: %fs'",
        "'Speedup: %fx'",
        "'dx difference: '",
        "'dw difference: '",
        "'db difference: '",
        "'stride'",
        "'pad'",
        "'pool_height'",
        "'pool_width'",
        "'stride'",
        "'Testing conv_relu_pool'",
        "'dx error: '",
        "'dw error: '",
        "'db error: '",
        "'stride'",
        "'pad'",
        "'Testing conv_relu:'",
        "'dx error: '",
        "'dw error: '",
        "'db error: '",
        "'Initial loss (no regularization): '",
        "'Initial loss (with regularization): '",
        "'%s max relative error: %e'",
        "'X_train'",
        "'X_train'",
        "'y_train'",
        "'y_train'",
        "'X_val'",
        "'X_val'",
        "'y_val'",
        "'y_val'",
        "'adam'",
        "'learning_rate'",
        "'o'",
        "'iteration'",
        "'loss'",
        "'-o'",
        "'-o'",
        "'train'",
        "'val'",
        "'upper left'",
        "'epoch'",
        "'accuracy'",
        "'adam'",
        "'learning_rate'",
        "'W1'",
        "'uint8'",
        "'off'",
        "'Before spatial batch normalization:'",
        "'  Shape: '",
        "'  Means: '",
        "'  Stds: '",
        "'mode'",
        "'train'",
        "'After spatial batch normalization:'",
        "'  Shape: '",
        "'  Means: '",
        "'  Stds: '",
        "'After spatial batch normalization (nontrivial gamma, beta):'",
        "'  Shape: '",
        "'  Means: '",
        "'  Stds: '",
        "'mode'",
        "'train'",
        "'mode'",
        "'test'",
        "'After spatial batch normalization (test-time):'",
        "'  means: '",
        "'  stds: '",
        "'mode'",
        "'train'",
        "'dx error: '",
        "'dgamma error: '",
        "'dbeta error: '",
        "'Before spatial group normalization:'",
        "'  Shape: '",
        "'  Means: '",
        "'  Stds: '",
        "'mode'",
        "'train'",
        "'After spatial group normalization:'",
        "'  Shape: '",
        "'  Means: '",
        "'  Stds: '",
        "'mode'",
        "'train'",
        "'dx error: '",
        "'dgamma error: '",
        "'dbeta error: '"
    ],
    "variables": [
        "data",
        "x_shape",
        "w_shape",
        "x",
        "w",
        "b",
        "conv_param",
        "_",
        "correct_out",
        "kitten",
        "puppy",
        "d",
        "kitten_cropped",
        "img_size",
        "resized_puppy",
        "resized_kitten",
        "x",
        "x",
        "x",
        "w",
        "w",
        "w",
        "w",
        "w",
        "b",
        "_",
        "img_max",
        "img_min",
        "img",
        "x",
        "w",
        "b",
        "dout",
        "conv_param",
        "dx_num",
        "dw_num",
        "db_num",
        "cache",
        "dx",
        "dw",
        "db",
        "x_shape",
        "x",
        "pool_param",
        "_",
        "correct_out",
        "x",
        "dout",
        "pool_param",
        "dx_num",
        "cache",
        "dx",
        "x",
        "w",
        "b",
        "dout",
        "conv_param",
        "t0",
        "out_naive",
        "cache_naive",
        "t1",
        "out_fast",
        "cache_fast",
        "t2",
        "t0",
        "dx_naive",
        "dw_naive",
        "db_naive",
        "t1",
        "dx_fast",
        "dw_fast",
        "db_fast",
        "t2",
        "x",
        "w",
        "b",
        "dout",
        "conv_param",
        "pool_param",
        "cache",
        "dx",
        "dw",
        "db",
        "dx_num",
        "dw_num",
        "db_num",
        "x",
        "w",
        "b",
        "dout",
        "conv_param",
        "cache",
        "dx",
        "dw",
        "db",
        "dx_num",
        "dw_num",
        "db_num",
        "model",
        "N",
        "X",
        "y",
        "loss",
        "grads",
        "model",
        "reg",
        "loss",
        "grads",
        "num_inputs",
        "input_dim",
        "reg",
        "num_classes",
        "X",
        "y",
        "model",
        "loss",
        "grads",
        "f",
        "param_grad_num",
        "e",
        "num_train",
        "small_data",
        "model",
        "solver",
        "model",
        "solver",
        "grid",
        "N",
        "C",
        "H",
        "W",
        "x",
        "gamma",
        "beta",
        "bn_param",
        "_",
        "gamma",
        "beta",
        "_",
        "N",
        "C",
        "H",
        "W",
        "bn_param",
        "gamma",
        "beta",
        "x",
        "bn_param",
        "x",
        "a_norm",
        "_",
        "N",
        "C",
        "H",
        "W",
        "x",
        "gamma",
        "beta",
        "dout",
        "bn_param",
        "fx",
        "fg",
        "fb",
        "dx_num",
        "da_num",
        "db_num",
        "_",
        "cache",
        "dx",
        "dgamma",
        "dbeta",
        "N",
        "C",
        "H",
        "W",
        "G",
        "x",
        "x_g",
        "gamma",
        "beta",
        "bn_param",
        "_",
        "out_g",
        "N",
        "C",
        "H",
        "W",
        "G",
        "x",
        "gamma",
        "beta",
        "dout",
        "gn_param",
        "fx",
        "fg",
        "fb",
        "dx_num",
        "da_num",
        "db_num",
        "_",
        "cache",
        "dx",
        "dgamma",
        "dbeta"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "As usual, a bit of setup",
        "%matplotlib inline",
        "set default size of plots",
        "for auto-reloading external modules",
        "see http://stackoverflow.com/questions/1907993/autoreload-of-modules-in-ipython",
        "%load_ext autoreload",
        "%autoreload 2",
        "Load the (preprocessed) CIFAR10 data.",
        "%% Convolution: Naive forward pass",
        "Compare your output to ours; difference should be around e-8",
        "SEE COMMENTS BELOW.",
        "%% Aside: Image processing via convolutions.",
        "kitten is wide, and puppy is already square",
        "Make this smaller if it runs too slow",
        "Set up a convolutional weights holding 2 filters, each 3x3",
        "The first filter converts the image to grayscale.",
        "Set up the red, green, and blue channels of the filter.",
        "Second filter detects horizontal edges in the blue channel.",
        "Vector of biases. We don't need any bias for the grayscale",
        "filter, but for the edge detection filter we want to add 128",
        "to each output so that nothing is negative.",
        "Compute the result of convolving each input in x with each filter in w,",
        "offsetting by b, and storing the results in out.",
        "Show the original images and the results of the conv operation",
        "%% Convolution: Naive backward pass",
        "Your errors should be around e-8 or less.",
        "%% max-pooling: naive forward",
        "Compare your output with ours. Difference should be on the order of e-8.",
        "%% max-pooling naive backward",
        "Your error should be on the order of e-12",
        "%% FAST LAYERS",
        "Rel errors should be around e-9 or less",
        "%% Sandwich layers",
        "Relative errors should be around e-8 or less",
        "%%",
        "Relative errors should be around e-8 or less",
        "%%  Three-layer ConvNet, sanity check loss",
        "%% Gradient check",
        "Errors should be small, but correct implementations may have",
        "relative errors up to the order of e-2",
        "%%",
        "%%",
        "%%  Visualize filter",
        "%% Spatial batch normalization: forward",
        "Check the training-time forward pass by checking means and variances",
        "of features both before and after spatial batch normalization",
        "Means should be close to zero and stds close to one",
        "Means should be close to beta and stds close to gamma",
        "Check the test-time forward pass by running the training-time",
        "forward pass many times to warm up the running averages, and then",
        "checking the means and variances of activations after a test-time",
        "forward pass.",
        "Means should be close to zero and stds close to one, but will be",
        "noisier than training-time forward passes.",
        "%% Spatial batch normalization: backward",
        "You should expect errors of magnitudes between 1e-12~1e-06",
        "%%  Group normalization: forward",
        "Check the training-time forward pass by checking means and variances",
        "of features both before and after spatial batch normalization",
        "Means should be close to zero and stds close to one",
        "%% spatial group normalization: backward",
        "You should expect errors of magnitudes between 1e-12~1e-07"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Wed Dec  4 10:10:52 2019\n\n@author: Mingming\n\n\nQ4 Conv networks\n\"\"\"",
        "\"\"\" returns relative error \"\"\"",
        "'''\nAs fun way to both check your implementation and gain a better understanding of \nthe type of operation that convolutional layers can perform, we will set up\n an input containing two images and manually set up filters that perform common \n image processing operations (grayscale conversion and edge detection). \n The convolution forward pass will apply these operations to each of the input images. \n We can then visualize the results as a sanity check.\n'''",
        "\"\"\" Tiny helper to show images as uint8 and remove axis labels \"\"\"",
        "'''\nA nice trick is to train your model with just a few training samples. You should be able to overfit \nsmall datasets, which will result in very high training accuracy and comparatively low validation accuracy.\n'''",
        "'''\n\nTrain the net\nBy training the three-layer convolutional network for one epoch, you should achieve \ngreater than 40% accuracy on the training set:\n'''"
    ],
    "functions": [
        "rel_error",
        "imshow_no_ax"
    ],
    "classes": []
}