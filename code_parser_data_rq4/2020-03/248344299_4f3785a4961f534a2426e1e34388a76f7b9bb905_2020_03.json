{
    "identifiers": [
        "scipy",
        "optimize",
        "linprog",
        "time",
        "time",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "n",
        "N2",
        "np",
        "zeros",
        "n",
        "n",
        "j",
        "n",
        "c2",
        "append",
        "j",
        "n",
        "j",
        "i",
        "n",
        "j",
        "i",
        "A2",
        "i",
        "j",
        "j",
        "i",
        "j",
        "A2",
        "i",
        "i",
        "i",
        "b2",
        "append",
        "i",
        "c2",
        "append",
        "np",
        "concatenate",
        "A2",
        "np",
        "eye",
        "n",
        "axis",
        "time",
        "linprog",
        "c2",
        "A2",
        "b2",
        "method",
        "options",
        "time",
        "stop_time2",
        "start_time2",
        "time_list2",
        "append",
        "calc_time2",
        "niter_list2",
        "append",
        "res2",
        "nit",
        "res2",
        "calc_time2",
        "line",
        "plt",
        "figure",
        "plt",
        "plot",
        "N2",
        "time_list2",
        "plt",
        "title",
        "plt",
        "xlabel",
        "plt",
        "figure",
        "plt",
        "plot",
        "N2",
        "niter_list2",
        "color",
        "plt",
        "title",
        "plt",
        "show"
    ],
    "literals": [
        "'----------------------------------\\n'",
        "'revised simplex'",
        "'maxiter'",
        "'temps de calcul = '",
        "' s'",
        "'temps de calcul en fonction de N (avec changement de variable)'",
        "''",
        "'r'",
        "\"nombre d'itératons en fonction de N (avec changement de variable\""
    ],
    "variables": [
        "time_list2",
        "niter_list2",
        "N2",
        "c2",
        "A2",
        "b2",
        "A2",
        "start_time2",
        "res2",
        "stop_time2",
        "calc_time2"
    ],
    "comments": [
        "--------------------------------------------------------------------------------"
    ],
    "docstrings": [
        "'''\ntime_list = []\nniter_list = []\nN = range(2, 18)\nfor n in N:\n    c = []\n    A = np.zeros((n, n))\n    b = []\n\n    for j in range(1, n + 1):\n        c.append(-1 * 10 ** (n - j))\n    for i in range(1, n + 1):\n        for j in range(1, i):\n            A[i - 1][j - 1] = 2 * 10 ** (i - j)\n        A[i - 1][i - 1] = 1\n        b.append(100 ** (i - 1))\n        c.append(0)\n    A = np.concatenate((A, np.eye(n)), axis=1)\n\n    start_time = time()\n\n    res = linprog(c, A, b, method='revised simplex', options={'maxiter': 100000000000})\n\n    stop_time = time()\n    calc_time = stop_time - start_time\n\n    time_list.append(calc_time)\n    niter_list.append(res.nit)\n\n    print(res)\n    print('temps de calcul = ', calc_time, ' s')\n    line()\n\nplt.figure(1)\nplt.plot(N, time_list)\nplt.title('temps de calcul en fonction de N')\nplt.xlabel('')\nplt.figure(2)\nplt.plot(N, niter_list, color='r')\nplt.title(\"nombre d'itératons en fonction de N\")\nplt.show()\n'''"
    ],
    "functions": [
        "line"
    ],
    "classes": []
}