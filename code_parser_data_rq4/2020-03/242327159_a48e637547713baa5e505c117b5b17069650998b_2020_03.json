{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "pandas",
        "pd",
        "gdal",
        "skimage",
        "functions",
        "fu",
        "year",
        "year",
        "gdal",
        "Open",
        "labels_folder_path",
        "gdal",
        "Open",
        "labels_folder_path",
        "crop_name",
        "mask_suffix",
        "gdal",
        "Open",
        "labels_folder_path",
        "crop_name",
        "mask_suffix",
        "gdal",
        "Open",
        "labels_folder_path",
        "crop_name",
        "mask_suffix",
        "cotton_tif",
        "corn_tif",
        "peanuts_tif",
        "np",
        "array",
        "crops_only_tif",
        "GetRasterBand",
        "ReadAsArray",
        "np",
        "array",
        "cotton_tif",
        "GetRasterBand",
        "ReadAsArray",
        "np",
        "array",
        "peanuts_tif",
        "GetRasterBand",
        "ReadAsArray",
        "np",
        "array",
        "corn_tif",
        "GetRasterBand",
        "ReadAsArray",
        "cotton_array",
        "corn_array",
        "peanuts_array",
        "pd",
        "read_csv",
        "labels_folder_path",
        "labels",
        "rename",
        "columns",
        "x",
        "x",
        "strip",
        "pd",
        "read_csv",
        "labels_folder_path",
        "existing_labels",
        "rename",
        "columns",
        "x",
        "x",
        "strip",
        "pd",
        "Index",
        "existing_labels",
        "union",
        "np",
        "unique",
        "crops_only",
        "labels",
        "labels",
        "isin",
        "idx1",
        "labels",
        "labels",
        "isin",
        "idx2",
        "input",
        "threshold",
        "testing",
        "crops_arrays_list",
        "skimage",
        "morphology",
        "area_opening",
        "testing",
        "connectivity",
        "area_threshold",
        "threshold",
        "skimage",
        "morphology",
        "area_opening",
        "testing",
        "connectivity",
        "area_threshold",
        "threshold",
        "parcel_list_1",
        "append",
        "skimage",
        "morphology",
        "area_closing",
        "opened_image_1",
        "connectivity",
        "area_threshold",
        "threshold",
        "parcel_list_2",
        "append",
        "skimage",
        "morphology",
        "area_closing",
        "opened_image_2",
        "connectivity",
        "area_threshold",
        "threshold",
        "idx",
        "crop",
        "parcel_list_1",
        "plt",
        "figure",
        "figsize",
        "plt",
        "imshow",
        "crops_arrays_list",
        "idx",
        "plt",
        "figure",
        "figsize",
        "plt",
        "imshow",
        "crop",
        "plt",
        "figure",
        "figsize",
        "plt",
        "imshow",
        "parcel_list_2",
        "idx",
        "plt",
        "show",
        "input",
        "save_shapefiles",
        "sys",
        "exit",
        "parcel_list_1",
        "idx",
        "crop",
        "crop_name",
        "fu",
        "array_to_raster",
        "parcel_list",
        "idx",
        "crops_tifs",
        "idx",
        "data_folder_path",
        "crop_masks_folder",
        "crop",
        "threshold",
        "fu",
        "raster_to_vector_polygonize",
        "temp",
        "data_folder_path",
        "shapefile_folder",
        "crop",
        "threshold"
    ],
    "literals": [
        "'_2018/'",
        "'/home/chris/Desktop/diploma/Diploma-Workspace/Data'",
        "'/home/chris/Desktop/diploma/Diploma-Workspace/Ground_Truth_Data'",
        "'Shapefiles/'",
        "'Crop_Masks/'",
        "'cropped_data/'",
        "'Cotton'",
        "'Corn'",
        "'Peanuts'",
        "'_mask.tif'",
        "'CDL_CROPS_ONLY.tif'",
        "'CDL_data.tif.vat.csv'",
        "'cdl_existing_labels.csv'",
        "'Value'",
        "'VALUE'",
        "'VALUE'",
        "\"Enter threshold of number of pixels per parcel. (press enter for default=200): \"",
        "''",
        "\"Save Shapefiles? (y/n)? \"",
        "'n'",
        "'_parcel_mask_'",
        "'_shapefile_'"
    ],
    "variables": [
        "year",
        "data_folder_path",
        "labels_folder_path",
        "shapefile_folder",
        "crop_masks_folder",
        "cropped_data",
        "crop_name",
        "mask_suffix",
        "crops_only_tif",
        "cotton_tif",
        "peanuts_tif",
        "corn_tif",
        "crops_tifs",
        "crops_only",
        "cotton_array",
        "peanuts_array",
        "corn_array",
        "crops_arrays_list",
        "labels",
        "labels",
        "existing_labels",
        "existing_labels",
        "idx1",
        "idx2",
        "all_existing_labels",
        "crop_existing_labels",
        "parcel_list_1",
        "parcel_list_2",
        "threshold",
        "threshold",
        "opened_image_1",
        "opened_image_2",
        "save_shapefiles",
        "parcel_list",
        "temp",
        "temp"
    ],
    "comments": [
        "!/usr/bin/env python",
        "coding: utf-8",
        "In[1]:",
        "custom files import",
        "year = '_2019/'",
        "IMPORT LABELS",
        "Read as TIF",
        "crop_data_tif = gdal.Open(labels_folder_path + 'CDL.tif')",
        "crop_mask_tif = gdal.Open(labels_folder_path + 'CMASK.tif')",
        "fallow_2_tif = gdal.Open(labels_folder_path + 'CDL_FALLOW_2.tif')",
        "other_hay_4_tif = gdal.Open(labels_folder_path + 'CDL_OTHER_HAY_NO_ALFALA_4.tif')",
        "Read as Arrays",
        "crop_data = np.array(crop_data_tif.GetRasterBand(1).ReadAsArray())# crop_data_tif.read(1).astype('float64')",
        "crop_mask = np.array(crop_mask_tif.GetRasterBand(1).ReadAsArray()) #crop_mask_tif.read(1).astype('float64')",
        "crops_only_tif.read(1).astype('float64')",
        "cotton_1_tif.read(1).astype('float64')",
        "fallow_2 = np.array(fallow_2_tif.GetRasterBand(1).ReadAsArray()) #fallow_2_tif.read(1).astype('float64')",
        "peanuts_3_tif.read(1).astype('float64')",
        "other_hay_4 = np.array(other_hay_4_tif.GetRasterBand(1).ReadAsArray()) #other_hay_4_tif.read(1).astype('float64')",
        "corn_5_tif.read(1).astype('float64')",
        "read csv with crops type",
        "existing_crop_labels = pd.read_csv(labels_folder_path + 'cdl_existing_crop_labels.csv')",
        "existing_crop_labels = existing_labels.rename(columns=lambda x: x.strip())",
        "print((idx1))",
        "print((idx2))",
        "print(all_existing_labels)",
        "print(crop_existing_labels)",
        "In[2]:",
        "binary_opened_image = skimage.morphology.binary_opening(mask)",
        "closed_image = skimage.morphology.area_closing(testing,connectivity=2,area_threshold=256)",
        "binary_closed_image = skimage.morphology.binary_closing(binary_opened_image)",
        "opening_followed_by_closing = skimage.morphology.area_closing(opened_image,connectivity=2,area_threshold=256)",
        "summed_map = parcel_list[0] + parcel_list[1] + parcel_list[2]",
        "plt.figure(figsize=(50,20))",
        "plot.show(summed_map)",
        "In[4]:",
        "4-way connectivity",
        "8-way connectivity",
        "parcel_list = parcel_list_2"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}