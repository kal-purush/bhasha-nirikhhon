{
    "identifiers": [
        "query",
        "client",
        "events",
        "users",
        "describe",
        "ids",
        "client",
        "sql",
        "ids",
        "rows",
        "rows",
        "rows",
        "beforeEach",
        "client",
        "afterEach",
        "client",
        "test",
        "query",
        "users",
        "client",
        "data",
        "expect",
        "insertResult",
        "data",
        "queryUsers",
        "expect",
        "queryResult",
        "data",
        "describe",
        "test",
        "query",
        "users",
        "client",
        "insertData",
        "expect",
        "insertResult",
        "expect",
        "insertData",
        "expect",
        "insertResult",
        "queryUsers",
        "insertResult",
        "expect",
        "queryResult",
        "expect",
        "insertData",
        "test",
        "insertData",
        "query",
        "users",
        "client",
        "insertDataWithAdditionalUndefined",
        "expect",
        "insertResult",
        "expect",
        "insertData",
        "expect",
        "insertResult",
        "test",
        "query",
        "users",
        "client",
        "insertData",
        "expect",
        "insertResult",
        "expect",
        "insertData",
        "test",
        "query",
        "users",
        "client",
        "insertData",
        "expect",
        "insertResult",
        "expect",
        "insertData",
        "test",
        "query",
        "users",
        "client",
        "data",
        "expect",
        "insertResult",
        "data",
        "i",
        "data",
        "i",
        "expect",
        "insertResult",
        "i",
        "expect",
        "data",
        "i",
        "queryUsers",
        "insertResult",
        "r",
        "r",
        "i",
        "data",
        "i",
        "expect",
        "queryResult",
        "i",
        "expect",
        "data",
        "i",
        "test",
        "query",
        "users",
        "client",
        "data",
        "expect",
        "insertResult",
        "test",
        "query",
        "events",
        "client",
        "expect",
        "result",
        "test",
        "expect",
        "query",
        "users",
        "client",
        "data",
        "test",
        "expect",
        "query",
        "users",
        "client",
        "data",
        "test",
        "expect",
        "query",
        "events",
        "client"
    ],
    "literals": [
        "'../src'",
        "'./testSchema'",
        "'insert'",
        "'SELECT id as \"userId\", avatar as \"userAvatar\", email as \"userEmail\", name as \"userName\" FROM users WHERE id = ANY($1::int[]) ORDER BY id'",
        "'BEGIN'",
        "'ROLLBACK'",
        "'basic insert'",
        "'foo.png'",
        "'foo@foo'",
        "'foo'",
        "'default values'",
        "'foo'",
        "'foo@foo'",
        "'foo.png'",
        "'with omitting the key'",
        "'number'",
        "'with explicit undefined key'",
        "'number'",
        "'with explicit undefined key that is actually a null'",
        "'with null for a default key'",
        "'multi row insert'",
        "'f0.png'",
        "'f0@f0'",
        "'f0'",
        "'f1'",
        "'f1@f1'",
        "'f2@f2'",
        "'f2'",
        "'f2.png'",
        "'returning partial results'",
        "'foo.png'",
        "'foo@foo'",
        "'foo'",
        "'userId'",
        "'json insert'",
        "'eventPayload'",
        "'foo string payload'",
        "'A'",
        "'foo string payload'",
        "'data validation'",
        "'foo@foo'",
        "'foo'",
        "'userId'",
        "'expected a string but got: 123'",
        "'null data validation'",
        "'foo.png'",
        "'foo@foo'",
        "'foo'",
        "'userId'",
        "'expected an integer but got: null'",
        "'json data validation'",
        "'eventPayload'",
        "'A'",
        "'expected a data:string attribute'"
    ],
    "variables": [
        "sql",
        "rows",
        "data",
        "insertResult",
        "queryResult",
        "insertData",
        "insertResult",
        "queryResult",
        "insertDataWithAdditionalUndefined",
        "insertResult",
        "insertResult",
        "insertResult",
        "data",
        "insertResult",
        "i",
        "queryResult",
        "i",
        "data",
        "insertResult",
        "result",
        "data",
        "data"
    ],
    "comments": [
        "id has a default (generated primary key)",
        "nullable, implies null as the default",
        "this is okay bc. missing key types to the same as a key set to undefined",
        "this is okay bc. missing key types to the same as a key set to undefined",
        "this is okay bc. missing key types to the same as a key set to undefined",
        "(different key order)",
        "(different key order)",
        "not sure whether I like this feature ...",
        "not sure whether I like this feature ...",
        "not sure whether I like this feature ...",
        "should throw this",
        "TODO what about non-base tables?",
        "e.g. query(users.selectAsJsonAgg(..)).insert(..) ?",
        "or query(users.select(...).join(...).table()).insert ?"
    ],
    "docstrings": [],
    "functions": [
        "queryUsers"
    ],
    "classes": []
}