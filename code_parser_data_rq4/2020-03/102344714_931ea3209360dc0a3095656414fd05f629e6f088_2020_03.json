{
    "identifiers": [
        "ch",
        "ethz",
        "matsim",
        "discrete_mode_choice",
        "replanning",
        "time_interpreter",
        "java",
        "util",
        "org",
        "matsim",
        "api",
        "core",
        "v01",
        "population",
        "Activity",
        "org",
        "matsim",
        "api",
        "core",
        "v01",
        "population",
        "Leg",
        "org",
        "matsim",
        "api",
        "core",
        "v01",
        "population",
        "PlanElement",
        "org",
        "matsim",
        "core",
        "utils",
        "misc",
        "Time",
        "currentTime",
        "previousTime",
        "onlyAdvance",
        "currentTime",
        "previousTime",
        "onlyAdvance",
        "currentTime",
        "currentTime",
        "previousTime",
        "previousTime",
        "onlyAdvance",
        "onlyAdvance",
        "Override",
        "currentTime",
        "Override",
        "previousTime",
        "updatedTime",
        "previousTime",
        "currentTime",
        "currentTime",
        "updatedTime",
        "onlyAdvance",
        "currentTime",
        "max",
        "previousTime",
        "currentTime",
        "verify",
        "Time",
        "isUndefinedTime",
        "currentTime",
        "Time",
        "isUndefinedTime",
        "previousTime",
        "onlyAdvance",
        "currentTime",
        "previousTime",
        "Override",
        "time",
        "advance",
        "time",
        "Override",
        "duration",
        "advance",
        "currentTime",
        "duration",
        "Override",
        "leg",
        "leg",
        "getRoute",
        "advance",
        "currentTime",
        "leg",
        "getTravelTime",
        "advance",
        "currentTime",
        "leg",
        "getRoute",
        "getTravelTime",
        "Override",
        "element",
        "element",
        "addActivity",
        "element",
        "element",
        "addLeg",
        "element",
        "Override",
        "elements",
        "element",
        "elements",
        "addPlanElement",
        "element"
    ],
    "literals": [
        "\"Illegal current time while interpreting times\"",
        "\"Illegal previous time while interpreting times\"",
        "\"Illegal leg/activity duration while interpreting times\""
    ],
    "variables": [
        "currentTime",
        "previousTime",
        "onlyAdvance"
    ],
    "comments": [],
    "docstrings": [
        "* This class provides an abstract implementation for time interpretation. It\n * knows how to handle legs but leaves the handling of activities for more\n * specific implementations.\n * \n * There is a \"onlyAdvance\" flag which decides if the specific implementation is\n * allows to \"go back\" in time, or if time can only be advanced further.\n * \n * @author sebhoerl"
    ],
    "functions": [
        "AbstractTimeInterpreter",
        "getCurrentTime",
        "getPreviousTime",
        "advance",
        "verify",
        "setTime",
        "addTime",
        "addLeg",
        "addPlanElement",
        "addPlanElements"
    ],
    "classes": [
        "AbstractTimeInterpreter"
    ]
}