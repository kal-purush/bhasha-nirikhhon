{
    "identifiers": [
        "sys",
        "subprocess",
        "random",
        "sys",
        "path",
        "append",
        "qiling",
        "qiling",
        "exception",
        "qiling",
        "os",
        "posix",
        "syscall",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "ql",
        "read_fd",
        "read_buf",
        "read_count",
        "args",
        "ql",
        "file_des",
        "read_fd",
        "name",
        "split",
        "pathname",
        "read_fd",
        "pathname",
        "read_count",
        "syscall",
        "ql_syscall_read",
        "ql",
        "read_fd",
        "read_buf",
        "read_count",
        "args",
        "target",
        "ql",
        "file_des",
        "read_fd",
        "name",
        "open",
        "real_path",
        "fd",
        "fd",
        "read",
        "ql",
        "mem_read",
        "read_buf",
        "read_count",
        "decode",
        "os",
        "remove",
        "real_path",
        "ql",
        "write_fd",
        "write_buf",
        "write_count",
        "args",
        "ql",
        "file_des",
        "write_fd",
        "name",
        "split",
        "pathname",
        "write_fd",
        "pathname",
        "write_count",
        "syscall",
        "ql_syscall_write",
        "ql",
        "write_fd",
        "write_buf",
        "write_count",
        "args",
        "target",
        "ql",
        "file_des",
        "write_fd",
        "name",
        "open",
        "real_path",
        "fd",
        "fd",
        "read",
        "os",
        "remove",
        "real_path",
        "ql",
        "openat_fd",
        "openat_path",
        "openat_flags",
        "openat_mode",
        "args",
        "ql_read_string",
        "ql",
        "openat_path",
        "pathname",
        "openat_fd",
        "pathname",
        "openat_flags",
        "openat_mode",
        "syscall",
        "ql_syscall_openat",
        "ql",
        "openat_fd",
        "openat_path",
        "openat_flags",
        "openat_mode",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "path",
        "isfile",
        "real_path",
        "os",
        "remove",
        "real_path",
        "ql",
        "unlink_pathname",
        "args",
        "ql_read_string",
        "ql",
        "unlink_pathname",
        "pathname",
        "pathname",
        "syscall",
        "ql_syscall_unlink",
        "ql",
        "unlink_pathname",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "path",
        "isfile",
        "real_path",
        "ql",
        "trunc_pathname",
        "trunc_length",
        "args",
        "ql_read_string",
        "ql",
        "trunc_pathname",
        "pathname",
        "pathname",
        "trunc_length",
        "syscall",
        "ql_syscall_truncate",
        "ql",
        "trunc_pathname",
        "trunc_length",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "stat",
        "real_path",
        "st_size",
        "os",
        "remove",
        "real_path",
        "ql",
        "ftrunc_fd",
        "ftrunc_length",
        "args",
        "ql",
        "file_des",
        "ftrunc_fd",
        "name",
        "split",
        "pathname",
        "ftrunc_fd",
        "ftrunc_length",
        "syscall",
        "ql_syscall_ftruncate",
        "ql",
        "ftrunc_fd",
        "ftrunc_length",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "stat",
        "real_path",
        "st_size",
        "os",
        "remove",
        "real_path",
        "Qiling",
        "output",
        "ql",
        "set_syscall",
        "test_syscall_read",
        "ql",
        "set_syscall",
        "test_syscall_write",
        "ql",
        "set_syscall",
        "test_syscall_openat",
        "ql",
        "set_syscall",
        "test_syscall_unlink",
        "ql",
        "set_syscall",
        "test_syscall_truncate",
        "ql",
        "set_syscall",
        "test_syscall_ftruncate",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "log_dir",
        "log_split",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "size",
        "chars",
        "ascii_uppercase",
        "digits",
        "join",
        "random",
        "choice",
        "chars",
        "x",
        "size",
        "Qiling",
        "random_generator",
        "random",
        "randint",
        "ql",
        "run",
        "ql",
        "size",
        "chars",
        "ascii_uppercase",
        "digits",
        "join",
        "random",
        "choice",
        "chars",
        "x",
        "size",
        "Qiling",
        "random_generator",
        "random",
        "randint",
        "ql",
        "run",
        "ql",
        "size",
        "chars",
        "ascii_uppercase",
        "digits",
        "join",
        "random",
        "choice",
        "chars",
        "x",
        "size",
        "Qiling",
        "random_generator",
        "random",
        "randint",
        "ql",
        "run",
        "ql",
        "size",
        "chars",
        "ascii_uppercase",
        "digits",
        "join",
        "random",
        "choice",
        "chars",
        "x",
        "size",
        "Qiling",
        "random_generator",
        "random",
        "randint",
        "ql",
        "run",
        "ql",
        "ql",
        "read_fd",
        "read_buf",
        "read_count",
        "args",
        "ql",
        "file_des",
        "read_fd",
        "name",
        "split",
        "pathname",
        "read_fd",
        "pathname",
        "read_count",
        "syscall",
        "ql_syscall_read",
        "ql",
        "read_fd",
        "read_buf",
        "read_count",
        "args",
        "target",
        "ql",
        "file_des",
        "read_fd",
        "name",
        "open",
        "real_path",
        "fd",
        "fd",
        "read",
        "ql",
        "mem_read",
        "read_buf",
        "read_count",
        "decode",
        "os",
        "remove",
        "real_path",
        "ql",
        "write_fd",
        "write_buf",
        "write_count",
        "args",
        "ql",
        "file_des",
        "write_fd",
        "name",
        "split",
        "pathname",
        "write_fd",
        "pathname",
        "write_count",
        "syscall",
        "ql_syscall_write",
        "ql",
        "write_fd",
        "write_buf",
        "write_count",
        "args",
        "target",
        "ql",
        "file_des",
        "write_fd",
        "name",
        "open",
        "real_path",
        "fd",
        "fd",
        "read",
        "os",
        "remove",
        "real_path",
        "ql",
        "open_pathname",
        "open_flags",
        "open_mode",
        "args",
        "ql_read_string",
        "ql",
        "open_pathname",
        "pathname",
        "pathname",
        "open_flags",
        "open_mode",
        "syscall",
        "ql_syscall_open",
        "ql",
        "open_pathname",
        "open_flags",
        "open_mode",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "path",
        "isfile",
        "real_path",
        "os",
        "remove",
        "real_path",
        "ql",
        "unlink_pathname",
        "args",
        "ql_read_string",
        "ql",
        "unlink_pathname",
        "pathname",
        "pathname",
        "syscall",
        "ql_syscall_unlink",
        "ql",
        "unlink_pathname",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "path",
        "isfile",
        "real_path",
        "ql",
        "trunc_pathname",
        "trunc_length",
        "args",
        "ql_read_string",
        "ql",
        "trunc_pathname",
        "pathname",
        "pathname",
        "trunc_length",
        "syscall",
        "ql_syscall_truncate",
        "ql",
        "trunc_pathname",
        "trunc_length",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "stat",
        "real_path",
        "st_size",
        "os",
        "remove",
        "real_path",
        "ql",
        "ftrunc_fd",
        "ftrunc_length",
        "args",
        "ql",
        "file_des",
        "ftrunc_fd",
        "name",
        "split",
        "pathname",
        "ftrunc_fd",
        "ftrunc_length",
        "syscall",
        "ql_syscall_ftruncate",
        "ql",
        "ftrunc_fd",
        "ftrunc_length",
        "args",
        "target",
        "ql_transform_to_real_path",
        "ql",
        "pathname",
        "os",
        "stat",
        "real_path",
        "st_size",
        "os",
        "remove",
        "real_path",
        "Qiling",
        "output",
        "ql",
        "set_syscall",
        "test_syscall_read",
        "ql",
        "set_syscall",
        "test_syscall_write",
        "ql",
        "set_syscall",
        "test_syscall_open",
        "ql",
        "set_syscall",
        "test_syscall_unlink",
        "ql",
        "set_syscall",
        "test_syscall_truncate",
        "ql",
        "set_syscall",
        "test_syscall_ftruncate",
        "ql",
        "run",
        "ql",
        "write_fd",
        "write_buf",
        "write_count",
        "null0",
        "null1",
        "null2",
        "ql",
        "uc",
        "mem_read",
        "write_buf",
        "write_count",
        "ql",
        "nprint",
        "write_fd",
        "write_buf",
        "write_count",
        "regreturn",
        "ql",
        "file_des",
        "write_fd",
        "write",
        "buf",
        "write_count",
        "ql",
        "nprint",
        "write_fd",
        "write_buf",
        "write_count",
        "regreturn",
        "ql",
        "output",
        "QL_OUT_DEBUG",
        "QL_OUT_DUMP",
        "ql_definesyscall_return",
        "ql",
        "regreturn",
        "Qiling",
        "ql",
        "set_syscall",
        "my_syscall_write",
        "ql",
        "run",
        "ql",
        "s",
        "buf",
        "s",
        "l",
        "l",
        "len",
        "buf",
        "buf",
        "l",
        "buf",
        "l",
        "buf",
        "ret",
        "os",
        "fstat",
        "sys",
        "stdin",
        "fileno",
        "outpipe",
        "close",
        "ql",
        "address",
        "size",
        "user_data",
        "user_data",
        "payload",
        "MyPipe",
        "Qiling",
        "output",
        "stdin",
        "stdin",
        "ql",
        "hook_code",
        "instruction_count",
        "ins_count",
        "stdin",
        "write",
        "payload",
        "ql",
        "run",
        "stdin",
        "ins_count",
        "run_one_round",
        "flag",
        "idx",
        "idx_list",
        "i",
        "flag",
        "idx",
        "chr",
        "i",
        "encode",
        "flag",
        "idx",
        "run_one_round",
        "flag",
        "tmp",
        "old_count",
        "tmp",
        "flag",
        "solve",
        "Qiling",
        "output",
        "ql",
        "run",
        "ql",
        "test_elf_freebsd_x8664",
        "test_elf_linux_x8664",
        "test_elf_linux_x8664_static",
        "test_elf_linux_x86",
        "test_elf_linux_x86_static",
        "test_elf_linux_x86_posix_syscall",
        "test_elf_linux_arm",
        "test_elf_linux_arm_static",
        "test_elf_linux_arm64",
        "test_elf_linux_arm64_static",
        "test_elf_linux_mips32el",
        "test_elf_linux_mips32el_static",
        "test_elf_linux_mips32",
        "test_elf_linux_mips32_static",
        "test_elf_linux_mips32el_posix_syscall",
        "test_elf_linux_arm_custom_syscall",
        "test_elf_linux_x86_crackme",
        "test_elf_linux_execve_x8664"
    ],
    "literals": [
        "\"..\"",
        "\"../examples/rootfs/x8664_freebsd/bin/x8664_hello_asm\"",
        "\"../examples/rootfs/x8664_freebsd\"",
        "\"disasm\"",
        "\"../examples/rootfs/x8664_linux/bin/x8664_args\"",
        "\"1234test\"",
        "\"12345678\"",
        "\"bin/x8664_hello\"",
        "\"../examples/rootfs/x8664_linux\"",
        "\"debug\"",
        "\"../examples/rootfs/x8664_linux/bin/x8664_hello_static\"",
        "\"../examples/rootfs/x8664_linux\"",
        "\"debug\"",
        "\"../examples/rootfs/x86_linux/bin/x86_hello\"",
        "\"../examples/rootfs/x86_linux\"",
        "\"debug\"",
        "\"../examples/rootfs/x86_linux/bin/x86_hello_static\"",
        "\"../examples/rootfs/x86_linux\"",
        "\"debug\"",
        "'/'",
        "\"test_syscall_read.txt\"",
        "\"test => read(%d, %s, %d)\"",
        "'/'",
        "\"test_syscall_write.txt\"",
        "\"test => write(%d, %s, %d)\"",
        "'Hello testing\\x00'",
        "\"test_syscall_open.txt\"",
        "\"test => openat(%d, %s, 0x%x, 0%o)\"",
        "\"test_syscall_unlink.txt\"",
        "\"test => unlink(%s)\"",
        "\"test_syscall_truncate.txt\"",
        "\"test => truncate(%s, 0x%x)\"",
        "'/'",
        "\"test_syscall_ftruncate.txt\"",
        "\"test => ftruncate(%d, 0x%x)\"",
        "\"../examples/rootfs/x86_linux/bin/x86_posix_syscall\"",
        "\"../examples/rootfs/x86_linux\"",
        "\"debug\"",
        "\"../examples/rootfs/arm_linux/bin/arm_hello\"",
        "\"../examples/rootfs/arm_linux\"",
        "\"debug\"",
        "'logs'",
        "\"../examples/rootfs/arm_linux/bin/arm_hello_static\"",
        "\"../examples/rootfs/arm_linux\"",
        "\"default\"",
        "\"../examples/rootfs/arm64_linux/bin/arm64_hello\"",
        "\"../examples/rootfs/arm64_linux\"",
        "\"debug\"",
        "\"../examples/rootfs/arm64_linux/bin/arm64_hello_static\"",
        "\"../examples/rootfs/arm64_linux\"",
        "\"default\"",
        "''",
        "\"../examples/rootfs/mips32el_linux/bin/mips32el_hello\"",
        "\"../examples/rootfs/mips32el_linux\"",
        "''",
        "\"../examples/rootfs/mips32el_linux/bin/mips32el_hello_static\"",
        "\"../examples/rootfs/mips32el_linux\"",
        "''",
        "\"../examples/rootfs/mips32_linux/bin/mips32_hello\"",
        "\"../examples/rootfs/mips32_linux\"",
        "''",
        "\"../examples/rootfs/mips32_linux/bin/mips32_hello_static\"",
        "\"../examples/rootfs/mips32_linux\"",
        "'/'",
        "\"test_syscall_read.txt\"",
        "\"test => read(%d, %s, %d)\"",
        "'/'",
        "\"test_syscall_write.txt\"",
        "\"test => write(%d, %s, %d)\"",
        "'Hello testing\\x00'",
        "\"test_syscall_open.txt\"",
        "\"test => open(%s, 0x%x, 0%o)\"",
        "\"test_syscall_unlink.txt\"",
        "\"test => unlink(%s)\"",
        "\"test_syscall_truncate.txt\"",
        "\"test => truncate(%s, 0x%x)\"",
        "'/'",
        "\"test_syscall_ftruncate.txt\"",
        "\"test => ftruncate(%d, 0x%x)\"",
        "\"../examples/rootfs/mips32el_linux/bin/mips32el_posix_syscall\"",
        "\"../examples/rootfs/mips32el_linux\"",
        "\"debug\"",
        "\"\\n+++++++++\\nmy write(%d,%x,%i) = %d\\n+++++++++\"",
        "\"\\n+++++++++\\nmy write(%d,%x,%i) = %d\\n+++++++++\"",
        "\"../examples/rootfs/arm_linux/bin/arm_hello\"",
        "\"../examples/rootfs/arm_linux\"",
        "b''",
        "''",
        "\"../examples/rootfs/x86_linux/bin/crackme_linux\"",
        "\"../examples/rootfs/x86_linux\"",
        "\"off\"",
        "b'\\x00\\x00\\x00\\x00\\x00\\n'",
        "b'L1NUX\\\\n'",
        "\"\\n\\n Linux Simple Crackme Brute Force, This Will Take Some Time ...\"",
        "\"../examples/rootfs/x8664_linux/bin/posix_syscall_execve\"",
        "\"../examples/rootfs/x8664_linux\"",
        "\"debug\"",
        "\"__main__\""
    ],
    "variables": [
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "ql",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "target",
        "pathname",
        "target",
        "real_path",
        "ql",
        "regreturn",
        "buf",
        "buf",
        "regreturn",
        "regreturn",
        "ql",
        "buf",
        "ret",
        "buf",
        "ret",
        "buf",
        "stdin",
        "ql",
        "ins_count",
        "idx_list",
        "flag",
        "old_count",
        "flag",
        "tmp",
        "old_count",
        "ql"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "",
        "Cross Platform and Multi Architecture Advanced Binary Emulation Framework",
        "Built on top of Unicorn emulator (www.unicorn-engine.org)",
        "Not Stable, not suitable to use it as test",
        "def test_multithread_elf_linux_x86(self):",
        "ql = Qiling([\"../examples/rootfs/x86_linux/bin/x86_multithreading\"], \"../examples/rootfs/x86_linux\", output=\"debug\")",
        "ql.run()",
        "if idx == 2:",
        "break"
    ],
    "docstrings": [],
    "functions": [
        "test_elf_freebsd_x8664",
        "test_elf_linux_x8664",
        "test_elf_linux_x8664_static",
        "test_elf_linux_x86",
        "test_elf_linux_x86_static",
        "test_elf_linux_x86_posix_syscall",
        "test_syscall_read",
        "test_syscall_write",
        "test_syscall_openat",
        "test_syscall_unlink",
        "test_syscall_truncate",
        "test_syscall_ftruncate",
        "test_elf_linux_arm",
        "test_elf_linux_arm_static",
        "test_elf_linux_arm64",
        "test_elf_linux_arm64_static",
        "test_elf_linux_mips32el",
        "random_generator",
        "test_elf_linux_mips32el_static",
        "random_generator",
        "test_elf_linux_mips32",
        "random_generator",
        "test_elf_linux_mips32_static",
        "random_generator",
        "test_elf_linux_mips32el_posix_syscall",
        "test_syscall_read",
        "test_syscall_write",
        "test_syscall_open",
        "test_syscall_unlink",
        "test_syscall_truncate",
        "test_syscall_ftruncate",
        "test_elf_linux_arm_custom_syscall",
        "my_syscall_write",
        "test_elf_linux_x86_crackme",
        "write",
        "read",
        "fileno",
        "fstat",
        "show",
        "clear",
        "flush",
        "close",
        "instruction_count",
        "run_one_round",
        "solve",
        "test_elf_linux_execve_x8664"
    ],
    "classes": [
        "MyPipe"
    ]
}