{
    "identifiers": [
        "datetime",
        "io",
        "sys",
        "time",
        "unittest",
        "xml",
        "sax",
        "saxutils",
        "fp",
        "fp",
        "s",
        "fp",
        "write",
        "s",
        "lines",
        "fp",
        "writelines",
        "lines",
        "fp",
        "flush",
        "OutputRedirector",
        "sys",
        "stdout",
        "OutputRedirector",
        "sys",
        "stderr",
        "unittest",
        "TestResult",
        "TestResult",
        "verbosity",
        "TestResult",
        "verbosity",
        "test",
        "TestResult",
        "startTest",
        "test",
        "io",
        "StringIO",
        "outputBuffer",
        "outputBuffer",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "stdout_redirector",
        "stderr_redirector",
        "stdout0",
        "stdout0",
        "stderr0",
        "outputBuffer",
        "getvalue",
        "test",
        "complete_output",
        "test",
        "success_count",
        "TestResult",
        "addSuccess",
        "test",
        "complete_output",
        "result",
        "append",
        "test",
        "output",
        "verbosity",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "test",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "success_count",
        "test",
        "err",
        "error_count",
        "TestResult",
        "addError",
        "test",
        "err",
        "errors",
        "complete_output",
        "result",
        "append",
        "test",
        "output",
        "_exc_str",
        "verbosity",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "test",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "test",
        "err",
        "failure_count",
        "TestResult",
        "addFailure",
        "test",
        "err",
        "failures",
        "complete_output",
        "result",
        "append",
        "test",
        "output",
        "_exc_str",
        "verbosity",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "test",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "Template_mixin",
        "stream",
        "sys",
        "stdout",
        "verbosity",
        "title",
        "description",
        "stream",
        "verbosity",
        "title",
        "DEFAULT_TITLE",
        "title",
        "description",
        "DEFAULT_DESCRIPTION",
        "description",
        "datetime",
        "datetime",
        "now",
        "test",
        "_TestResult",
        "verbosity",
        "test",
        "result",
        "datetime",
        "datetime",
        "now",
        "generateReport",
        "test",
        "result",
        "result",
        "result_list",
        "n",
        "t",
        "o",
        "e",
        "result_list",
        "t",
        "__class__",
        "cls",
        "rmap",
        "classes",
        "append",
        "cls",
        "rmap",
        "cls",
        "append",
        "n",
        "t",
        "o",
        "e",
        "cls",
        "rmap",
        "cls",
        "cls",
        "classes",
        "r",
        "result",
        "startTime",
        "stopTime",
        "startTime",
        "result",
        "success_count",
        "status",
        "append",
        "result",
        "success_count",
        "result",
        "failure_count",
        "status",
        "append",
        "result",
        "failure_count",
        "result",
        "error_count",
        "status",
        "append",
        "result",
        "error_count",
        "status",
        "join",
        "status",
        "startTime",
        "duration",
        "status",
        "test",
        "result",
        "getReportAttributes",
        "result",
        "__version__",
        "_generate_stylesheet",
        "_generate_heading",
        "report_attrs",
        "_generate_report",
        "result",
        "_generate_ending",
        "_generate_chart",
        "result",
        "HTML_TMPL",
        "title",
        "saxutils",
        "escape",
        "title",
        "generator",
        "generator",
        "stylesheet",
        "stylesheet",
        "heading",
        "heading",
        "report",
        "report",
        "ending",
        "ending",
        "chart_script",
        "chart",
        "stream",
        "write",
        "output",
        "encode",
        "STYLESHEET_TMPL",
        "report_attrs",
        "name",
        "value",
        "report_attrs",
        "HEADING_ATTRIBUTE_TMPL",
        "name",
        "saxutils",
        "escape",
        "name",
        "value",
        "saxutils",
        "escape",
        "value",
        "a_lines",
        "append",
        "line",
        "HEADING_TMPL",
        "title",
        "saxutils",
        "escape",
        "title",
        "parameters",
        "join",
        "a_lines",
        "description",
        "saxutils",
        "escape",
        "description",
        "heading",
        "result",
        "sortResult",
        "result",
        "result",
        "cid",
        "cls",
        "cls_results",
        "sortedResult",
        "n",
        "t",
        "o",
        "e",
        "cls_results",
        "n",
        "np",
        "n",
        "nf",
        "ne",
        "cls",
        "__module__",
        "cls",
        "cls",
        "__module__",
        "cls",
        "cls",
        "__doc__",
        "doc",
        "name",
        "doc",
        "name",
        "REPORT_CLASS_TMPL",
        "style",
        "ne",
        "nf",
        "desc",
        "desc",
        "count",
        "np",
        "nf",
        "ne",
        "Pass",
        "np",
        "fail",
        "nf",
        "error",
        "ne",
        "cid",
        "cid",
        "rows",
        "append",
        "row",
        "tid",
        "n",
        "t",
        "o",
        "e",
        "cls_results",
        "_generate_report_test",
        "rows",
        "cid",
        "tid",
        "n",
        "t",
        "o",
        "e",
        "REPORT_TMPL",
        "test_list",
        "join",
        "rows",
        "count",
        "result",
        "success_count",
        "result",
        "failure_count",
        "result",
        "error_count",
        "Pass",
        "result",
        "success_count",
        "fail",
        "result",
        "failure_count",
        "error",
        "result",
        "error_count",
        "report",
        "result",
        "ECHARTS_SCRIPT",
        "Pass",
        "result",
        "success_count",
        "fail",
        "result",
        "failure_count",
        "error",
        "result",
        "error_count",
        "chart",
        "rows",
        "cid",
        "tid",
        "n",
        "t",
        "o",
        "e",
        "o",
        "e",
        "n",
        "cid",
        "tid",
        "t",
        "id",
        "split",
        "t",
        "shortDescription",
        "doc",
        "name",
        "doc",
        "name",
        "has_output",
        "REPORT_TEST_WITH_OUTPUT_TMPL",
        "REPORT_TEST_NO_OUTPUT_TMPL",
        "isinstance",
        "o",
        "o",
        "o",
        "isinstance",
        "e",
        "e",
        "e",
        "REPORT_TEST_OUTPUT_TMPL",
        "id",
        "tid",
        "output",
        "saxutils",
        "escape",
        "uo",
        "ue",
        "tmpl",
        "tid",
        "tid",
        "Class",
        "n",
        "style",
        "n",
        "n",
        "desc",
        "desc",
        "script",
        "script",
        "status",
        "STATUS",
        "n",
        "rows",
        "append",
        "row",
        "has_output",
        "ENDING_TMPL",
        "unittest",
        "TestProgram",
        "testRunner",
        "HTMLTestRunner",
        "verbosity",
        "verbosity",
        "unittest",
        "TestProgram",
        "runTests",
        "TestProgram",
        "main"
    ],
    "literals": [
        "\"Wai Yip Tung , bugmaster\"",
        "\"0.8.2\"",
        "'pass'",
        "'fail'",
        "'error'",
        "'Unit Test Report'",
        "''",
        "r\"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n    <title>%(title)s</title>\n    <meta name=\"generator\" content=\"%(generator)s\"/>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\n    <link rel=\"stylesheet\" href=\"http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css\">\n    <script src=\"http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js\"></script>\n    <script src=\"http://apps.bdimg.com/libs/Chart.js/0.2.0/Chart.min.js\"></script>\n    <!-- <link href=\"https://cdn.bootcss.com/echarts/3.8.5/echarts.common.min.js\" rel=\"stylesheet\">   -->\n    \n    %(stylesheet)s\n</head>\n<body>\n<script language=\"javascript\" type=\"text/javascript\"><!--\noutput_list = Array();\n/* level - 0:Summary; 1:Failed; 2:All */\nfunction showCase(level) {\n    trs = document.getElementsByTagName(\"tr\");\n    for (var i = 0; i < trs.length; i++) {\n        tr = trs[i];\n        id = tr.id;\n        if (id.substr(0,2) == 'ft') {\n            if (level < 1) {\n                tr.className = 'hiddenRow';\n            }\n            else {\n                tr.className = '';\n            }\n        }\n        if (id.substr(0,2) == 'pt') {\n            if (level > 1) {\n                tr.className = '';\n            }\n            else {\n                tr.className = 'hiddenRow';\n            }\n        }\n    }\n}\nfunction showClassDetail(cid, count) {\n    var id_list = Array(count);\n    var toHide = 1;\n    for (var i = 0; i < count; i++) {\n        tid0 = 't' + cid.substr(1) + '.' + (i+1);\n        tid = 'f' + tid0;\n        tr = document.getElementById(tid);\n        if (!tr) {\n            tid = 'p' + tid0;\n            tr = document.getElementById(tid);\n        }\n        id_list[i] = tid;\n        if (tr.className) {\n            toHide = 0;\n        }\n    }\n    for (var i = 0; i < count; i++) {\n        tid = id_list[i];\n        if (toHide) {\n            document.getElementById('div_'+tid).style.display = 'none'\n            document.getElementById(tid).className = 'hiddenRow';\n        }\n        else {\n            document.getElementById(tid).className = '';\n        }\n    }\n}\nfunction showTestDetail(div_id){\n    var details_div = document.getElementById(div_id)\n    var displayState = details_div.style.display\n    // alert(displayState)\n    if (displayState != 'block' ) {\n        displayState = 'block'\n        details_div.style.display = 'block'\n    }\n    else {\n        details_div.style.display = 'none'\n    }\n}\nfunction html_escape(s) {\n    s = s.replace(/&/g,'&amp;');\n    s = s.replace(/</g,'&lt;');\n    s = s.replace(/>/g,'&gt;');\n    return s;\n}\n/* obsoleted by detail in <div>\nfunction showOutput(id, name) {\n    var w = window.open(\"\", //url\n                    name,\n                    \"resizable,scrollbars,status,width=800,height=450\");\n    d = w.document;\n    d.write(\"<pre>\");\n    d.write(html_escape(output_list[id]));\n    d.write(\"\\n\");\n    d.write(\"<a href='javascript:window.close()'>close</a>\\n\");\n    d.write(\"</pre>\\n\");\n    d.close();\n}\n*/\n--></script>\n%(heading)s\n%(report)s\n%(ending)s\n%(chart_script)s\n</body>\n</html>\n\"\"\"",
        "r\"\"\"\n<tr class='%(style)s'>\n    <td>%(desc)s</td>\n    <td>%(count)s</td>\n    <td>%(Pass)s</td>\n    <td>%(fail)s</td>\n    <td>%(error)s</td>\n    <td><a href=\"javascript:showClassDetail('%(cid)s',%(count)s)\">Detail</a></td>\n</tr>\n\"\"\"",
        "r\"\"\"\n<tr id='%(tid)s' class='%(Class)s'>\n    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>\n    <td colspan='5' align='center'>\n    <!--css div popup start-->\n    <a class=\"popup_link\" onfocus='this.blur();' href=\"javascript:showTestDetail('div_%(tid)s')\" >\n        %(status)s</a>\n    <div id='div_%(tid)s' class=\"popup_window\">\n        <div style='text-align: right; color:red;cursor:pointer'>\n        <a onfocus='this.blur();' onclick=\"document.getElementById('div_%(tid)s').style.display = 'none' \" >\n           [x]</a>\n        </div>\n        <pre>\n        %(script)s\n        </pre>\n    </div>\n    <!--css div popup end-->\n    </td>\n</tr>\n\"\"\"",
        "r\"\"\"\n<tr id='%(tid)s' class='%(Class)s'>\n    <td class='%(style)s'><div class='testcase'>%(desc)s</div></td>\n    <td colspan='5' align='center'>%(status)s</td>\n</tr>\n\"\"\"",
        "r\"\"\"\n%(id)s: %(output)s\n\"\"\"",
        "''",
        "'ok '",
        "'\\n'",
        "'.'",
        "'E  '",
        "'\\n'",
        "'E'",
        "'F  '",
        "'\\n'",
        "'F'",
        "\"Run the given test case or test suite.\"",
        "'Pass %s'",
        "'Failure %s'",
        "'Error %s'",
        "' '",
        "'none'",
        "'Start Time'",
        "'Duration'",
        "'Status'",
        "'HTMLTestRunner %s'",
        "'utf8'",
        "''",
        "\"__main__\"",
        "\"%s.%s\"",
        "\"\"",
        "'%s: %s'",
        "'errorClass'",
        "'failClass'",
        "'passClass'",
        "'c%s'",
        "''",
        "'p'",
        "'f'",
        "'t%s.%s'",
        "'.'",
        "\"\"",
        "'%s: %s'",
        "'hiddenRow'",
        "'none'",
        "'errorCase'",
        "'failCase'",
        "'none'",
        "\"__main__\""
    ],
    "variables": [
        "__author__",
        "__version__",
        "fp",
        "stdout_redirector",
        "stderr_redirector",
        "STATUS",
        "DEFAULT_TITLE",
        "DEFAULT_DESCRIPTION",
        "HTML_TMPL",
        "STYLESHEET_TMPL",
        "HEADING_TMPL",
        "ECHARTS_SCRIPT",
        "HEADING_ATTRIBUTE_TMPL",
        "REPORT_TMPL",
        "REPORT_CLASS_TMPL",
        "REPORT_TEST_WITH_OUTPUT_TMPL",
        "REPORT_TEST_NO_OUTPUT_TMPL",
        "REPORT_TEST_OUTPUT_TMPL",
        "ENDING_TMPL",
        "TestResult",
        "stdout0",
        "stderr0",
        "success_count",
        "failure_count",
        "error_count",
        "verbosity",
        "result",
        "outputBuffer",
        "stdout_redirector",
        "fp",
        "stderr_redirector",
        "fp",
        "stdout0",
        "stderr0",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "stdout0",
        "stderr0",
        "output",
        "_",
        "_exc_str",
        "output",
        "_",
        "_exc_str",
        "output",
        "stream",
        "verbosity",
        "title",
        "title",
        "description",
        "description",
        "startTime",
        "result",
        "stopTime",
        "rmap",
        "classes",
        "cls",
        "rmap",
        "cls",
        "r",
        "startTime",
        "duration",
        "status",
        "status",
        "status",
        "report_attrs",
        "generator",
        "stylesheet",
        "heading",
        "report",
        "ending",
        "chart",
        "output",
        "a_lines",
        "line",
        "heading",
        "rows",
        "sortedResult",
        "np",
        "nf",
        "ne",
        "name",
        "name",
        "doc",
        "desc",
        "row",
        "report",
        "chart",
        "has_output",
        "tid",
        "name",
        "doc",
        "desc",
        "tmpl",
        "uo",
        "uo",
        "ue",
        "ue",
        "script",
        "row",
        "testRunner",
        "main"
    ],
    "comments": [
        "coding=utf-8",
        "URL: http://tungwaiyip.info/software/HTMLTestRunner.html",
        "TODO: color stderr",
        "TODO: simplify javascript using ,ore than 1 class in the class attribute?",
        "------------------------------------------------------------------------",
        "The redirectors below are used to capture output during testing. Output",
        "sent to sys.stdout and sys.stderr are automatically captured. However",
        "in some cases sys.stdout is already cached before HTMLTestRunner is",
        "invoked (e.g. calling logging.basicConfig). In order to capture those",
        "output, use the redirectors for the cached stream.",
        "",
        "e.g.",
        ">>> logging.basicConfig(stream=HTMLTestRunner.stdout_redirector)",
        ">>>",
        "----------------------------------------------------------------------",
        "Template",
        "------------------------------------------------------------------------",
        "HTML Template",
        "variables: (title, generator, stylesheet, heading, report, ending)",
        "------------------------------------------------------------------------",
        "Stylesheet",
        "",
        "alternatively use a <link> for external style sheet, e.g.",
        "<link rel=\"stylesheet\" href=\"$url\" type=\"text/css\">",
        "------------------------------------------------------------------------",
        "Heading",
        "",
        "variables: (title, parameters, description)",
        "------------------------------------------------------------------------",
        "Pie chart",
        "",
        "variables: (name, value)",
        "------------------------------------------------------------------------",
        "Report",
        "",
        "variables: (test_list, count, Pass, fail, error)",
        "variables: (style, desc, count, Pass, fail, error, cid)",
        "variables: (tid, Class, style, desc, status)",
        "variables: (tid, Class, style, desc, status)",
        "variables: (id, output)",
        "------------------------------------------------------------------------",
        "ENDING",
        "",
        "-------------------- The end of the Template class -------------------",
        "note: _TestResult is a pure representation of results.",
        "It lacks the output and reporting ability compares to unittest._TextTestResult.",
        "result is a list of result in 4 tuple",
        "(",
        "result code (0: success; 1: fail; 2: error),",
        "TestCase object,",
        "Test output (byte string),",
        "stack trace,",
        ")",
        "just one buffer for both stdout and stderr",
        "Usually one of addSuccess, addError or addFailure would have been called.",
        "But there are some path in unittest that would bypass this.",
        "We must disconnect stdout in stopTest(), which is guaranteed to be called.",
        "print(sys.stderr, '\\nTime Elapsed: %s' % (self.stopTime-self.startTime))",
        "unittest does not seems to run in any particular order.",
        "Here at least we want to group them together by class.",
        "subtotal for a class",
        "format class description",
        "e.g. 'pt1.1', 'ft1.1', etc",
        "o and e should be byte string because they are collected from stdout and stderr?",
        "TODO: some problem with 'string_escape': it escape \\n and mess up formating",
        "uo = unicode(o.encode('string_escape'))",
        "TODO: some problem with 'string_escape': it escape \\n and mess up formating",
        "ue = unicode(e.encode('string_escape'))",
        "",
        "Facilities for running tests from the command line",
        "",
        "Note: Reuse unittest.TestProgram to launch test. In the future we may",
        "build our own launcher to support more specific command line",
        "parameters like test title, CSS, etc.",
        "Pick HTMLTestRunner as the default test runner.",
        "base class's testRunner parameter is not useful because it means",
        "we have to instantiate HTMLTestRunner before we know self.verbosity.",
        "",
        "Executing this module from the command line",
        ""
    ],
    "docstrings": [
        "\"\"\"\nA TestRunner for use with the Python unit testing framework. It\ngenerates a HTML report to show the result at a glance.\nThe simplest way to use this is to invoke its main method. E.g.\n    import unittest\n    import HTMLTestRunner\n    ... define your tests ...\n    if __name__ == '__main__':\n        HTMLTestRunner.main()\nFor more customization options, instantiates a HTMLTestRunner object.\nHTMLTestRunner is a counterpart to unittest's TextTestRunner. E.g.\n    # output to a file\n    fp = file('my_report.html', 'wb')\n    runner = HTMLTestRunner.HTMLTestRunner(\n                stream=fp,\n                title='My unit test',\n                description='This demonstrates the report output by HTMLTestRunner.'\n                )\n    # Use an external stylesheet.\n    # See the Template_mixin class for more customizable options\n    runner.STYLESHEET_TMPL = '<link rel=\"stylesheet\" href=\"my_stylesheet.css\" type=\"text/css\">'\n    # run the test\n    runner.run(my_test_suite)\n------------------------------------------------------------------------\nCopyright (c) 2004-2007, Wai Yip Tung\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n* Redistributions of source code must retain the above copyright notice,\n  this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n* Neither the name Wai Yip Tung nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\nIS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\nTO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\"\"\"",
        "\"\"\"\nChange History\nVersion 0.8.2\n* Show output inline instead of popup window (Viorel Lupu).\nVersion in 0.8.1\n* Validated XHTML (Wolfgang Borgert).\n* Added description of test classes and test cases.\nVersion in 0.8.0\n* Define Template_mixin class for customization.\n* Workaround a IE 6 bug that it does not treat <script> block as CDATA.\nVersion in 0.7.1\n* Back port to Python 2.3 (Frank Horowitz).\n* Fix missing scroll bars in detail log (Podi).\n\"\"\"",
        "\"\"\" Wrapper to redirect stdout or stderr \"\"\"",
        "\"\"\"\n    Define a HTML template for report customerization and generation.\n    Overall structure of an HTML report\n    HTML\n    +------------------------+\n    |<html>                  |\n    |  <head>                |\n    |                        |\n    |   STYLESHEET           |\n    |   +----------------+   |\n    |   |                |   |\n    |   +----------------+   |\n    |                        |\n    |  </head>               |\n    |                        |\n    |  <body>                |\n    |                        |\n    |   HEADING              |\n    |   +----------------+   |\n    |   |                |   |\n    |   +----------------+   |\n    |                        |\n    |   REPORT               |\n    |   +----------------+   |\n    |   |                |   |\n    |   +----------------+   |\n    |                        |\n    |   ENDING               |\n    |   +----------------+   |\n    |   |                |   |\n    |   +----------------+   |\n    |                        |\n    |  </body>               |\n    |</html>                 |\n    +------------------------+\n    \"\"\"",
        "\"\"\"\n<style type=\"text/css\" media=\"screen\">\nbody        { font-family: verdana, arial, helvetica, sans-serif; font-size: 80%; }\ntable       { font-size: 100%; }\npre         {  }\n/* -- heading ---------------------------------------------------------------------- */\nh1 {\n\tfont-size: 16pt;\n\tcolor: gray;\n}\n.heading {\n    font-size: 12px;\n    margin-top: 0ex;\n    margin-bottom: 1ex;\n\tmargin-left: 10px;\n}\n.heading .attribute {\n    font-size: 12px;\n    margin-top: 1ex;\n    margin-bottom: 0;\n}\n.heading .description {\n    font-size: 12px;\n    margin-top: 4ex;\n    margin-bottom: 6ex;\n}\n/* -- css div popup ------------------------------------------------------------------------ */\na.popup_link {\n}\na.popup_link:hover {\n    color: red;\n}\n.popup_window {\n    display: none;\n    position: relative;\n    left: 0px;\n    top: 0px;\n    /*border: solid #627173 1px; */\n    font-family: \"Lucida Console\", \"Courier New\", Courier, monospace;\n    text-align: left;\n    font-size: 12pt;\n    width: 500px;\n}\n}\n/* -- report ------------------------------------------------------------------------ */\n#show_detail_line {\n    margin-top: 3ex;\n    margin-bottom: 1ex;\n    margin-left: 10px;\n}\n#result_table {\n    width: 80%;\n    border-collapse: collapse;\n    border: 1px solid #777;\n    margin-left: 10px;\n}\n#header_row {\n    font-weight: bold;T\n    color: #606060;\n    background-color: #f5f5f5;\n    border-top-width: 10px;\n    border-color: #d6e9c6;\n\tfont-size: 12px;\n}\n#result_table td {\n    font-size:10px\n    border: 1px solid #f5f5f5;\n    padding: 2px;\n}\n#total_row  { font-weight: bold; }\n.passClass  { background-color: #d6e9c6; }\n.failClass  { background-color: #faebcc; }\n.errorClass { background-color: #ebccd1; }\n.passCase   { color: #6c6; }\n.failCase   { color: #c60; font-weight: bold; }\n.errorCase  { color: #c00; font-weight: bold; }\n.hiddenRow  { display: none; }\n.testcase   { margin-left: 2em; }\n/* -- ending ---------------------------------------------------------------------- */\n#ending {\n}\n/* -- chars ---------------------------------------------------------------------- */\n.testChars {margin-left: 150px; font-size:10px; text-align:center;}\n.btn-info1 {\n    color: #fff;\n    background-color: #28B463;\n    border-color: #d6e9c6;\n}\n.btn-info2 {\n    color: #fff;\n    background-color: #D4AC0D;\n    border-color: #faebcc;\n}\n.btn-info3 {\n    color: #fff;\n    background-color: #D35400;\n    border-color: #ebccd1;\n}\n</style>\n\"\"\"",
        "\"\"\"<div class='heading'>\n<h1>%(title)s</h1>\n%(parameters)s\n<p class='description'>%(description)s</p>\n</div>\n<div style=\"float:left; margin-left: 10px; font-size:12px\">\n\t<p> Test Case Pie charts </p>\n\t<a class=\"btn btn-xs btn-info1\">-Pass-</a><br>\n\t<a class=\"btn btn-xs btn-info2\">-Faild-</a><br>\n\t<a class=\"btn btn-xs btn-info3\">-Error-</a><br>\n</div>\n<div class=\"testChars\" style=\"center\">\n\t<canvas id=\"myChart\" width=\"250\" height=\"250\"></canvas>\n</div>\n\"\"\"",
        "\"\"\"\n    <script type=\"text/javascript\">\nvar data = [\n\t{   \n\t    name: 'error',\n\t\tvalue: %(error)s,\n\t\tcolor: \"#D35400\",\n\t\tlabel: \"Error\",\n\t\tlabelColor: 'white',\n\t\tlabelFontSize: '16'\n\t},\n\t{\n\t    name: 'fail',\n\t\tvalue : %(fail)s,\n\t\tcolor : \"#D4AC0D\",\n\t\tlabel: \"Fail\",\n\t\tlabelColor: 'white',\n\t\tlabelFontSize: '16'\n\t},\n\t{\n\t    name : 'pass',\n\t\tvalue : %(Pass)s,\n\t\tcolor : \"#28B463\",\n\t\tlabel : \"Pass\",\n\t\tlabelColor: 'white',\n\t\tlabelFontSize: '16'\n\t}\t\t\t\n]\nvar newopts = {\n     animationSteps: 100,\n \t\tanimationEasing: 'easeInOutQuart',\n}\n//Get the context of the canvas element we want to select\nvar ctx = document.getElementById(\"myChart\").getContext(\"2d\");\nvar myNewChart = new Chart(ctx).Pie(data,newopts);\n</script>\n\t\"\"\"",
        "\"\"\"<p class='attribute'><strong>%(name)s:</strong> %(value)s</p>\n\"\"\"",
        "\"\"\"\n<p id='show_detail_line' style=\"margin-left: 16px; font-size:12px\">Show\n<a href='javascript:showCase(0)' class=\"btn btn-xs btn-primary\">Summary</a>\n<a href='javascript:showCase(1)' class=\"btn btn-xs btn-danger\">Failed</a>\n<a href='javascript:showCase(2)' class=\"btn btn-xs btn-info\">All</a>\n</p>\n<table id='result_table'>\n<colgroup>\n<col align='left' />\n<col align='right' />\n<col align='right' />\n<col align='right' />\n<col align='right' />\n<col align='right' />\n</colgroup>\n<tr id='header_row' class=\"panel-title\">\n    <td>Test Group/Test case</td>\n    <td>Count</td>\n    <td>Pass</td>\n    <td>Fail</td>\n    <td>Error</td>\n    <td>View</td>\n</tr>\n%(test_list)s\n<tr id='total_row'>\n    <td>Total</td>\n    <td>%(count)s</td>\n    <td class=\"text text-success\">%(Pass)s</td>\n    <td class=\"text text-danger\">%(fail)s</td>\n    <td class=\"text text-warning\">%(error)s</td>\n    <td>&nbsp;</td>\n</tr>\n</table>\n\"\"\"",
        "\"\"\"<div id='ending'>&nbsp;</div>\"\"\"",
        "\"\"\"\n        Disconnect output redirection and return buffer.\n        Safe to call multiple times.\n        \"\"\"",
        "\"\"\"\n    \"\"\"",
        "\"\"\"\n        Return report attributes as a list of (name, value).\n        Override this to add custom attributes.\n        \"\"\"",
        "\"\"\"\n    A variation of the unittest.TestProgram. Please refer to the base\n    class for command line parameters.\n    \"\"\""
    ],
    "functions": [
        "write",
        "writelines",
        "flush",
        "startTest",
        "complete_output",
        "stopTest",
        "addSuccess",
        "addError",
        "addFailure",
        "run",
        "sortResult",
        "getReportAttributes",
        "generateReport",
        "_generate_stylesheet",
        "_generate_heading",
        "_generate_report",
        "_generate_chart",
        "_generate_report_test",
        "_generate_ending",
        "runTests"
    ],
    "classes": [
        "OutputRedirector",
        "Template_mixin",
        "_TestResult",
        "HTMLTestRunner",
        "TestProgram"
    ]
}