{
    "identifiers": [
        "Net",
        "Text",
        "Json",
        "Threading",
        "Tasks",
        "Application",
        "Errors",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "Extensions",
        "Logging",
        "API",
        "Middleware",
        "ILogger",
        "ErrorHandlingMiddleware",
        "RequestDelegate",
        "next",
        "ILogger",
        "ErrorHandlingMiddleware",
        "logger",
        "_next",
        "next",
        "_logger",
        "logger",
        "HttpContext",
        "context",
        "_next",
        "context",
        "ex",
        "HandleExpectionAsync",
        "context",
        "ex",
        "_logger",
        "HttpContext",
        "context",
        "ex",
        "ILogger",
        "ErrorHandlingMiddleware",
        "logger",
        "ex",
        "RestException",
        "re",
        "logger",
        "LogError",
        "ex",
        "errors",
        "re",
        "Errors",
        "context",
        "Response",
        "StatusCode",
        "re",
        "Code",
        "e",
        "logger",
        "LogError",
        "ex",
        "errors",
        "IsNullOrWhiteSpace",
        "e",
        "Message",
        "e",
        "Message",
        "context",
        "Response",
        "StatusCode",
        "HttpStatusCode",
        "InternalServerError",
        "context",
        "Response",
        "ContentType",
        "errors",
        "JsonSerializer",
        "Serialize",
        "errors",
        "context",
        "Response",
        "WriteAsync",
        "result"
    ],
    "literals": [
        "\"REST ERROR\"",
        "\"SERVER ERROR\"",
        "\"Error\"",
        "\"application/json\""
    ],
    "variables": [
        "_logger",
        "RequestDelegate",
        "_next",
        "errors",
        "result"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "ErrorHandlingMiddleware",
        "Invoke",
        "HandleExpectionAsync"
    ],
    "classes": [
        "ErrorHandlingMiddleware"
    ]
}