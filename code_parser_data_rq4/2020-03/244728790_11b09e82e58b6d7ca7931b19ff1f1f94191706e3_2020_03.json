{
    "identifiers": [
        "require",
        "require",
        "require",
        "fetch",
        "dash",
        "options",
        "parser",
        "options",
        "opts",
        "opts",
        "opts",
        "options",
        "key",
        "order",
        "order",
        "key",
        "order",
        "value",
        "fetch",
        "url",
        "bodyObj",
        "res",
        "res",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "headers",
        "obj",
        "data",
        "key",
        "data",
        "key",
        "data",
        "key",
        "fs",
        "output",
        "Headers",
        "myHeader"
    ],
    "literals": [
        "'dashdash'",
        "'node-fetch'",
        "'fs'",
        "'output'",
        "'o'",
        "'string'",
        "'file in which to store the fetched data'",
        "'version'",
        "'bool'",
        "'Print tool version and exit.'",
        "'help'",
        "'h'",
        "'bool'",
        "'Print this help and exit.'",
        "'verbose'",
        "'v'",
        "'arrayOfBool'",
        "'Verbose output. Use multiple times for more verbose.'",
        "'file'",
        "'f'",
        "'string'",
        "'File to process'",
        "'FILE'",
        "'header'",
        "'H'",
        "'string'",
        "'Adding info to header'",
        "'A'",
        "'string'",
        "'Set the user agent header'",
        "'e'",
        "'string'",
        "'Set referer header'",
        "'dump-header'",
        "'string'",
        "'putting meta-data information in file'",
        "'data'",
        "'d'",
        "'string'",
        "'data for body of fetch request'",
        "'Options are:'",
        "'string'",
        "'headers'",
        "'content-length'",
        "'content-type'",
        "'server'",
        "'date'",
        "'via'",
        "'content-length'",
        "'content-length'",
        "'content-type'",
        "'content-type'",
        "'server'",
        "'sever'",
        "'date'",
        "'date'",
        "'via'",
        "'via'",
        "''",
        "\":\"",
        "'\\n'",
        "'Content-Type'",
        "'application / json'"
    ],
    "variables": [
        "dash",
        "fetch",
        "fs",
        "Headers",
        "options",
        "parser",
        "opts",
        "output",
        "url",
        "order",
        "bodyObj",
        "headers",
        "obj",
        "myHeader"
    ],
    "comments": [
        "const http = require('http');",
        "fetch('.herokuapp.com/make?text')",
        "// .then(res => {",
        "//   // console.log(Headers);",
        "//   // console.log(res.headers.raw());",
        "//   console.log(res.body);",
        "// });",
        ".then(res => res.text())",
        ".then(text => console.log(text))",
        "// .then(fsPromise)",
        ".catch(reason => console.log(reason));",
        "console.log(output, url);",
        "const data = JSON.stringify(obj);",
        "for (let key in res) {",
        "if (key === 'headers') {",
        "console.log(res[key]);",
        "let header = res[key];",
        "for (let keys in header) {",
        "console.log(keys);",
        "console.log(header[keys]);",
        "}",
        "}",
        "console.log(key);",
        "console.log(res[key]);",
        "}",
        ".then(res => res.text())",
        ".then(text => fs.promises.writeFile(output, text))",
        ".catch(reason => console.log(reason));",
        "const option = {",
        "hostname: 'https://artii.herokuapp.com/make?text=curl++this',",
        "port: 443,",
        "path: '',",
        "method: 'GET'",
        "}",
        "const req = http.request(option, res => {",
        "console.log(`statusCode: ${res.statusCode}`)",
        "res.on('data', d => {",
        "process.stdout.write(d)",
        "});",
        "});",
        "req.on('error', error => {",
        "console.error(error)",
        "});",
        "req.end();",
        "console.log(myHeader.append('Accept', 'application / json'));",
        "console.log(myHeader);",
        "for (let key in myHeader) {",
        "console.log(key);",
        "console.log(myHeader.key);",
        "}"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}