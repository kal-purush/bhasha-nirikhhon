{
    "identifiers": [
        "e",
        "n",
        "t",
        "i",
        "f",
        "n",
        "i",
        "e",
        "i",
        "require",
        "require",
        "f",
        "c",
        "c",
        "i",
        "u",
        "u",
        "i",
        "i",
        "a",
        "a",
        "n",
        "i",
        "e",
        "i",
        "p",
        "r",
        "e",
        "i",
        "r",
        "o",
        "n",
        "r",
        "p",
        "p",
        "r",
        "e",
        "n",
        "t",
        "n",
        "i",
        "require",
        "require",
        "i",
        "t",
        "i",
        "o",
        "t",
        "i",
        "o",
        "r",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "ALPHABET",
        "ALPHABET",
        "ALPHABET",
        "z",
        "ALPHABET",
        "z",
        "ALPHABET",
        "z",
        "ALPHABET_MAP",
        "x",
        "x",
        "ALPHABET_MAP",
        "x",
        "z",
        "source",
        "source",
        "i",
        "source",
        "i",
        "source",
        "i",
        "j",
        "digits",
        "j",
        "carry",
        "digits",
        "j",
        "digits",
        "j",
        "carry",
        "BASE",
        "carry",
        "carry",
        "BASE",
        "carry",
        "digits",
        "carry",
        "BASE",
        "carry",
        "carry",
        "BASE",
        "source",
        "k",
        "k",
        "source",
        "k",
        "LEADER",
        "digits",
        "q",
        "q",
        "ALPHABET",
        "digits",
        "q",
        "Buffer",
        "i",
        "i",
        "ALPHABET_MAP",
        "i",
        "value",
        "j",
        "j",
        "carry",
        "j",
        "BASE",
        "j",
        "carry",
        "carry",
        "carry",
        "carry",
        "carry",
        "k",
        "LEADER",
        "k",
        "k",
        "Buffer",
        "decodeUnsafe",
        "buffer",
        "buffer",
        "BASE",
        "encode",
        "decodeUnsafe",
        "decode",
        "require",
        "exports",
        "z",
        "ALPHABET",
        "z",
        "ALPHABET",
        "z",
        "ALPHABET_MAP",
        "x",
        "x",
        "ALPHABET_MAP",
        "x",
        "z",
        "pre",
        "pre",
        "pre",
        "b",
        "b",
        "b",
        "b",
        "b",
        "prefix",
        "i",
        "prefix",
        "i",
        "prefix",
        "i",
        "c",
        "c",
        "prefix",
        "chk",
        "polymodStep",
        "chk",
        "c",
        "chk",
        "polymodStep",
        "chk",
        "i",
        "i",
        "prefix",
        "i",
        "prefix",
        "i",
        "chk",
        "polymodStep",
        "chk",
        "v",
        "chk",
        "prefix",
        "words",
        "LIMIT",
        "LIMIT",
        "LIMIT",
        "prefix",
        "words",
        "LIMIT",
        "prefix",
        "prefix",
        "prefixChk",
        "prefix",
        "prefix",
        "i",
        "words",
        "i",
        "words",
        "i",
        "x",
        "chk",
        "polymodStep",
        "chk",
        "x",
        "result",
        "ALPHABET",
        "x",
        "i",
        "i",
        "i",
        "chk",
        "polymodStep",
        "chk",
        "chk",
        "i",
        "i",
        "i",
        "chk",
        "i",
        "result",
        "ALPHABET",
        "v",
        "result",
        "LIMIT",
        "LIMIT",
        "LIMIT",
        "LIMIT",
        "lowered",
        "uppered",
        "lowered",
        "split",
        "split",
        "split",
        "split",
        "wordChars",
        "prefixChk",
        "prefix",
        "i",
        "wordChars",
        "i",
        "wordChars",
        "i",
        "ALPHABET_MAP",
        "c",
        "v",
        "c",
        "chk",
        "polymodStep",
        "chk",
        "v",
        "i",
        "wordChars",
        "words",
        "v",
        "chk",
        "prefix",
        "words",
        "data",
        "inBits",
        "outBits",
        "pad",
        "outBits",
        "i",
        "data",
        "i",
        "value",
        "value",
        "inBits",
        "data",
        "i",
        "bits",
        "inBits",
        "bits",
        "outBits",
        "bits",
        "outBits",
        "result",
        "value",
        "bits",
        "maxV",
        "pad",
        "bits",
        "result",
        "value",
        "outBits",
        "bits",
        "maxV",
        "bits",
        "inBits",
        "value",
        "outBits",
        "bits",
        "maxV",
        "result",
        "convert",
        "words",
        "convert",
        "words",
        "decode",
        "encode",
        "toWords",
        "fromWords",
        "require",
        "exports",
        "require",
        "require",
        "buffer",
        "createHash",
        "createHash",
        "buffer",
        "key",
        "data",
        "createHmac",
        "key",
        "data",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "d",
        "Q",
        "chainCode",
        "network",
        "typeforce",
        "NETWORK_TYPE",
        "network",
        "d",
        "Q",
        "chainCode",
        "network",
        "BIP32",
        "crypto",
        "BIP32",
        "BIP32",
        "BIP32",
        "ecc",
        "BIP32",
        "BIP32",
        "fromPublicKey",
        "neutered",
        "neutered",
        "neutered",
        "neutered",
        "BIP32",
        "network",
        "network",
        "Buffer",
        "buffer",
        "version",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "bs58check",
        "buffer",
        "BIP32",
        "wif",
        "BIP32",
        "index",
        "typeforce",
        "typeforce",
        "index",
        "index",
        "HIGHEST_BIT",
        "Buffer",
        "isHardened",
        "data",
        "data",
        "data",
        "index",
        "data",
        "data",
        "index",
        "crypto",
        "data",
        "I",
        "I",
        "ecc",
        "IL",
        "index",
        "ecc",
        "IL",
        "ki",
        "index",
        "hd",
        "fromPrivateKey",
        "ki",
        "IR",
        "ecc",
        "IL",
        "Ki",
        "index",
        "hd",
        "fromPublicKey",
        "Ki",
        "IR",
        "hd",
        "hd",
        "index",
        "hd",
        "hd",
        "value",
        "typeforce",
        "value",
        "value",
        "UINT31_MAX",
        "BIP32",
        "index",
        "typeforce",
        "UInt31",
        "index",
        "index",
        "HIGHEST_BIT",
        "value",
        "typeforce",
        "value",
        "value",
        "BIP32",
        "path",
        "typeforce",
        "BIP32Path",
        "path",
        "path",
        "splitPath",
        "splitPath",
        "splitPath",
        "splitPath",
        "prevHd",
        "indexStr",
        "indexStr",
        "index",
        "parseInt",
        "indexStr",
        "prevHd",
        "index",
        "index",
        "parseInt",
        "indexStr",
        "prevHd",
        "index",
        "BIP32",
        "hash",
        "ecc",
        "hash",
        "BIP32",
        "hash",
        "signature",
        "ecc",
        "hash",
        "signature",
        "network",
        "bs58check",
        "buffer",
        "network",
        "network",
        "BITCOIN",
        "buffer",
        "version",
        "network",
        "version",
        "network",
        "buffer",
        "buffer",
        "depth",
        "parentFingerprint",
        "buffer",
        "depth",
        "index",
        "buffer",
        "version",
        "network",
        "buffer",
        "buffer",
        "hd",
        "fromPrivateKey",
        "k",
        "chainCode",
        "network",
        "buffer",
        "hd",
        "fromPublicKey",
        "X",
        "chainCode",
        "network",
        "hd",
        "depth",
        "hd",
        "index",
        "hd",
        "parentFingerprint",
        "hd",
        "privateKey",
        "chainCode",
        "network",
        "typeforce",
        "UINT256_TYPE",
        "UINT256_TYPE",
        "network",
        "network",
        "BITCOIN",
        "ecc",
        "privateKey",
        "BIP32",
        "privateKey",
        "chainCode",
        "network",
        "publicKey",
        "chainCode",
        "network",
        "typeforce",
        "typeforce",
        "UINT256_TYPE",
        "network",
        "network",
        "BITCOIN",
        "ecc",
        "publicKey",
        "BIP32",
        "publicKey",
        "chainCode",
        "network",
        "seed",
        "network",
        "typeforce",
        "typeforce",
        "seed",
        "seed",
        "seed",
        "network",
        "network",
        "BITCOIN",
        "crypto",
        "seed",
        "I",
        "I",
        "fromPrivateKey",
        "IL",
        "IR",
        "network",
        "require",
        "exports",
        "require",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "lenR",
        "lenR",
        "buffer",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "lenS",
        "lenR",
        "lenS",
        "buffer",
        "buffer",
        "lenR",
        "buffer",
        "buffer",
        "buffer",
        "lenR",
        "lenS",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "lenR",
        "lenR",
        "buffer",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "lenS",
        "lenR",
        "lenS",
        "buffer",
        "buffer",
        "lenR",
        "buffer",
        "buffer",
        "buffer",
        "lenR",
        "lenS",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "buffer",
        "lenR",
        "r",
        "s",
        "r",
        "s",
        "lenR",
        "lenS",
        "lenR",
        "lenS",
        "r",
        "s",
        "lenR",
        "r",
        "r",
        "lenS",
        "s",
        "s",
        "Buffer",
        "lenR",
        "lenS",
        "signature",
        "signature",
        "signature",
        "signature",
        "signature",
        "r",
        "r",
        "signature",
        "signature",
        "lenR",
        "signature",
        "lenR",
        "s",
        "s",
        "signature",
        "lenR",
        "signature",
        "check",
        "decode",
        "encode",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "op",
        "OPS",
        "OPS",
        "op",
        "code",
        "op",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "address",
        "bs58check",
        "address",
        "payload",
        "address",
        "payload",
        "address",
        "payload",
        "payload",
        "version",
        "hash",
        "address",
        "bech32",
        "address",
        "bech32",
        "result",
        "result",
        "result",
        "Buffer",
        "data",
        "hash",
        "version",
        "typeforce",
        "types",
        "types",
        "types",
        "arguments",
        "Buffer",
        "payload",
        "version",
        "hash",
        "payload",
        "bs58check",
        "payload",
        "data",
        "version",
        "prefix",
        "bech32",
        "data",
        "words",
        "version",
        "bech32",
        "prefix",
        "words",
        "output",
        "network",
        "network",
        "network",
        "networks",
        "payments",
        "e",
        "payments",
        "e",
        "payments",
        "e",
        "payments",
        "e",
        "bscript",
        "output",
        "address",
        "network",
        "network",
        "network",
        "networks",
        "decode",
        "fromBase58Check",
        "address",
        "e",
        "decode",
        "decode",
        "network",
        "payments",
        "decode",
        "decode",
        "network",
        "payments",
        "decode",
        "decode",
        "fromBech32",
        "address",
        "e",
        "decode",
        "decode",
        "network",
        "address",
        "decode",
        "decode",
        "payments",
        "decode",
        "decode",
        "payments",
        "decode",
        "address",
        "fromBase58Check",
        "fromBech32",
        "fromOutputScript",
        "toBase58Check",
        "toBech32",
        "toOutputScript",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Block",
        "buffer",
        "buffer",
        "n",
        "offset",
        "n",
        "buffer",
        "offset",
        "n",
        "offset",
        "buffer",
        "offset",
        "offset",
        "i",
        "buffer",
        "offset",
        "offset",
        "i",
        "Block",
        "block",
        "readInt32",
        "block",
        "readSlice",
        "block",
        "readSlice",
        "block",
        "readUInt32",
        "block",
        "readUInt32",
        "block",
        "readUInt32",
        "buffer",
        "block",
        "varuint",
        "buffer",
        "offset",
        "offset",
        "varuint",
        "vi",
        "Transaction",
        "buffer",
        "offset",
        "offset",
        "tx",
        "tx",
        "readVarInt",
        "block",
        "i",
        "nTransactions",
        "i",
        "readTransaction",
        "block",
        "tx",
        "block",
        "Block",
        "headersOnly",
        "headersOnly",
        "varuint",
        "a",
        "x",
        "a",
        "x",
        "Block",
        "hex",
        "Block",
        "Buffer",
        "hex",
        "Block",
        "bcrypto",
        "Block",
        "Block",
        "date",
        "date",
        "Block",
        "headersOnly",
        "Buffer",
        "headersOnly",
        "buffer",
        "offset",
        "offset",
        "i",
        "buffer",
        "i",
        "offset",
        "offset",
        "i",
        "buffer",
        "i",
        "offset",
        "offset",
        "writeInt32",
        "writeSlice",
        "writeSlice",
        "writeUInt32",
        "writeUInt32",
        "writeUInt32",
        "headersOnly",
        "buffer",
        "varuint",
        "buffer",
        "offset",
        "offset",
        "varuint",
        "tx",
        "tx",
        "tx",
        "buffer",
        "offset",
        "offset",
        "txSize",
        "buffer",
        "Block",
        "headersOnly",
        "headersOnly",
        "Block",
        "bits",
        "bits",
        "bits",
        "Buffer",
        "target",
        "mantissa",
        "exponent",
        "target",
        "Block",
        "transactions",
        "typeforce",
        "types",
        "transactions",
        "transactions",
        "transactions",
        "transaction",
        "transaction",
        "fastMerkleRoot",
        "hashes",
        "bcrypto",
        "Block",
        "Block",
        "actualMerkleRoot",
        "Block",
        "Block",
        "hash",
        "target",
        "Block",
        "require",
        "exports",
        "value",
        "max",
        "value",
        "value",
        "value",
        "max",
        "value",
        "value",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "b",
        "verifuint",
        "b",
        "a",
        "b",
        "a",
        "buffer",
        "value",
        "offset",
        "verifuint",
        "value",
        "buffer",
        "value",
        "offset",
        "buffer",
        "value",
        "offset",
        "offset",
        "readUInt64LE",
        "writeUInt64LE",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "script",
        "witnessPubKeyHash",
        "script",
        "types",
        "witnessScriptHash",
        "script",
        "types",
        "pubKeyHash",
        "script",
        "types",
        "scriptHash",
        "script",
        "types",
        "decompile",
        "script",
        "chunks",
        "multisig",
        "chunks",
        "types",
        "pubKey",
        "chunks",
        "types",
        "witnessCommitment",
        "chunks",
        "types",
        "nullData",
        "chunks",
        "types",
        "types",
        "script",
        "allowIncomplete",
        "decompile",
        "script",
        "chunks",
        "pubKeyHash",
        "chunks",
        "types",
        "scriptHash",
        "chunks",
        "allowIncomplete",
        "types",
        "multisig",
        "chunks",
        "allowIncomplete",
        "types",
        "pubKey",
        "chunks",
        "types",
        "types",
        "script",
        "allowIncomplete",
        "decompile",
        "script",
        "chunks",
        "witnessPubKeyHash",
        "chunks",
        "types",
        "witnessScriptHash",
        "chunks",
        "allowIncomplete",
        "types",
        "types",
        "classifyInput",
        "classifyOutput",
        "classifyWitness",
        "types",
        "require",
        "exports",
        "require",
        "buffer",
        "createHash",
        "buffer",
        "buffer",
        "createHash",
        "buffer",
        "buffer",
        "createHash",
        "buffer",
        "buffer",
        "ripemd160",
        "sha256",
        "buffer",
        "buffer",
        "sha256",
        "sha256",
        "buffer",
        "hash160",
        "hash256",
        "ripemd160",
        "sha1",
        "sha256",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "typeforce",
        "typeforce",
        "types",
        "types",
        "types",
        "types",
        "d",
        "Q",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "NETWORKS",
        "d",
        "Q",
        "ecc",
        "Q",
        "ECPair",
        "ECPair",
        "ecc",
        "ECPair",
        "wif",
        "ECPair",
        "hash",
        "ecc",
        "hash",
        "ECPair",
        "hash",
        "signature",
        "ecc",
        "hash",
        "signature",
        "buffer",
        "options",
        "typeforce",
        "types",
        "buffer",
        "ecc",
        "buffer",
        "typeforce",
        "isOptions",
        "options",
        "ECPair",
        "buffer",
        "options",
        "buffer",
        "options",
        "typeforce",
        "ecc",
        "buffer",
        "typeforce",
        "isOptions",
        "options",
        "ECPair",
        "buffer",
        "options",
        "network",
        "wif",
        "decoded",
        "types",
        "network",
        "network",
        "network",
        "x",
        "version",
        "x",
        "network",
        "network",
        "network",
        "NETWORKS",
        "version",
        "network",
        "fromPrivateKey",
        "decoded",
        "decoded",
        "network",
        "options",
        "typeforce",
        "isOptions",
        "options",
        "options",
        "options",
        "options",
        "randomBytes",
        "d",
        "rng",
        "typeforce",
        "types",
        "d",
        "ecc",
        "d",
        "fromPrivateKey",
        "d",
        "options",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "script",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "a",
        "b",
        "a",
        "b",
        "a",
        "x",
        "i",
        "x",
        "b",
        "i",
        "a",
        "opts",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "o",
        "a",
        "bscript",
        "OPS",
        "a",
        "lazy",
        "o",
        "a",
        "bscript",
        "a",
        "opts",
        "a",
        "bscript",
        "a",
        "chunks",
        "OPS",
        "chunks",
        "typef",
        "a",
        "stacksEqual",
        "a",
        "o",
        "o",
        "a",
        "p2data",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "exports",
        "name",
        "f",
        "name",
        "f",
        "name",
        "value",
        "value",
        "value",
        "name",
        "value",
        "f",
        "value",
        "value",
        "value",
        "f",
        "value",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "OPS",
        "a",
        "b",
        "a",
        "b",
        "a",
        "x",
        "i",
        "x",
        "b",
        "i",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "x",
        "bscript",
        "x",
        "opts",
        "x",
        "OPS",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "ecc",
        "typef",
        "typef",
        "isAcceptableSignature",
        "typef",
        "typef",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "output",
        "decoded",
        "decoded",
        "chunks",
        "bscript",
        "output",
        "o",
        "chunks",
        "OP_INT_BASE",
        "o",
        "chunks",
        "chunks",
        "OP_INT_BASE",
        "o",
        "chunks",
        "lazy",
        "o",
        "a",
        "o",
        "a",
        "bscript",
        "OP_INT_BASE",
        "a",
        "a",
        "OP_INT_BASE",
        "o",
        "OPS",
        "lazy",
        "o",
        "o",
        "decode",
        "o",
        "o",
        "lazy",
        "o",
        "o",
        "o",
        "lazy",
        "o",
        "a",
        "decode",
        "a",
        "o",
        "lazy",
        "o",
        "a",
        "bscript",
        "a",
        "lazy",
        "o",
        "a",
        "bscript",
        "OPS",
        "a",
        "lazy",
        "o",
        "o",
        "opts",
        "a",
        "decode",
        "a",
        "typef",
        "chunks",
        "typef",
        "chunks",
        "chunks",
        "chunks",
        "chunks",
        "OPS",
        "o",
        "o",
        "o",
        "o",
        "o",
        "chunks",
        "o",
        "x",
        "ecc",
        "x",
        "a",
        "a",
        "o",
        "a",
        "a",
        "o",
        "a",
        "stacksEqual",
        "a",
        "o",
        "a",
        "a",
        "a",
        "a",
        "o",
        "a",
        "o",
        "o",
        "a",
        "a",
        "o",
        "a",
        "o",
        "a",
        "a",
        "OPS",
        "o",
        "o",
        "isAcceptableSignature",
        "a",
        "stacksEqual",
        "a",
        "o",
        "a",
        "a",
        "a",
        "o",
        "a",
        "p2ms",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "ecc",
        "typef",
        "bscript",
        "typef",
        "typef",
        "a",
        "lazy",
        "bscript",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "o",
        "a",
        "bscript",
        "a",
        "OPS",
        "lazy",
        "o",
        "a",
        "a",
        "lazy",
        "o",
        "a",
        "_chunks",
        "lazy",
        "o",
        "a",
        "bscript",
        "a",
        "lazy",
        "o",
        "o",
        "opts",
        "a",
        "a",
        "a",
        "OPS",
        "ecc",
        "o",
        "a",
        "a",
        "o",
        "a",
        "a",
        "a",
        "o",
        "a",
        "_chunks",
        "bscript",
        "o",
        "o",
        "a",
        "p2pk",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "ecc",
        "typef",
        "bscript",
        "typef",
        "typef",
        "a",
        "lazy",
        "bs58check",
        "a",
        "payload",
        "payload",
        "lazy",
        "bscript",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "o",
        "o",
        "Buffer",
        "payload",
        "network",
        "o",
        "payload",
        "bs58check",
        "payload",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "_address",
        "a",
        "o",
        "bcrypto",
        "a",
        "o",
        "lazy",
        "o",
        "o",
        "bscript",
        "OPS",
        "OPS",
        "o",
        "OPS",
        "OPS",
        "lazy",
        "o",
        "a",
        "_chunks",
        "lazy",
        "o",
        "a",
        "_chunks",
        "lazy",
        "o",
        "a",
        "a",
        "bscript",
        "a",
        "a",
        "lazy",
        "o",
        "o",
        "opts",
        "a",
        "_address",
        "network",
        "_address",
        "hash",
        "_address",
        "a",
        "hash",
        "hash",
        "a",
        "hash",
        "a",
        "a",
        "a",
        "a",
        "OPS",
        "a",
        "OPS",
        "a",
        "a",
        "OPS",
        "a",
        "OPS",
        "a",
        "hash",
        "hash",
        "hash2",
        "hash",
        "hash2",
        "a",
        "bcrypto",
        "a",
        "hash",
        "hash",
        "pkh",
        "hash",
        "pkh",
        "a",
        "_chunks",
        "chunks",
        "bscript",
        "chunks",
        "ecc",
        "chunks",
        "a",
        "a",
        "chunks",
        "a",
        "a",
        "chunks",
        "bcrypto",
        "chunks",
        "hash",
        "hash",
        "pkh",
        "o",
        "a",
        "p2pkh",
        "require",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "a",
        "b",
        "a",
        "b",
        "a",
        "x",
        "i",
        "x",
        "b",
        "i",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "bs58check",
        "a",
        "payload",
        "payload",
        "lazy",
        "bscript",
        "a",
        "lazy",
        "_chunks",
        "chunks",
        "chunks",
        "bscript",
        "chunks",
        "a",
        "lazy",
        "o",
        "o",
        "Buffer",
        "payload",
        "network",
        "o",
        "payload",
        "bs58check",
        "payload",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "_address",
        "o",
        "o",
        "bcrypto",
        "o",
        "lazy",
        "o",
        "o",
        "bscript",
        "OPS",
        "o",
        "OPS",
        "lazy",
        "o",
        "a",
        "_redeem",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "bscript",
        "bscript",
        "a",
        "a",
        "lazy",
        "o",
        "o",
        "o",
        "o",
        "o",
        "opts",
        "a",
        "_address",
        "network",
        "_address",
        "hash",
        "_address",
        "a",
        "hash",
        "hash",
        "a",
        "hash",
        "a",
        "a",
        "a",
        "a",
        "OPS",
        "a",
        "a",
        "OPS",
        "a",
        "hash",
        "hash",
        "hash2",
        "hash",
        "hash2",
        "redeem",
        "redeem",
        "bscript",
        "redeem",
        "decompile",
        "decompile",
        "bcrypto",
        "redeem",
        "hash",
        "hash",
        "hash2",
        "hash",
        "hash2",
        "redeem",
        "redeem",
        "redeem",
        "redeem",
        "hasInput",
        "hasWitness",
        "hasInput",
        "hasWitness",
        "hasInput",
        "bscript",
        "redeem",
        "bscript",
        "richunks",
        "a",
        "_chunks",
        "chunks",
        "chunks",
        "Buffer",
        "_redeem",
        "checkRedeem",
        "_redeem",
        "a",
        "a",
        "a",
        "network",
        "a",
        "_redeem",
        "a",
        "a",
        "redeem",
        "a",
        "a",
        "redeem",
        "checkRedeem",
        "a",
        "a",
        "a",
        "a",
        "stacksEqual",
        "a",
        "a",
        "o",
        "a",
        "p2sh",
        "require",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Buffer",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "ecc",
        "typef",
        "bscript",
        "typef",
        "typef",
        "typef",
        "a",
        "lazy",
        "bech32",
        "a",
        "result",
        "bech32",
        "result",
        "result",
        "Buffer",
        "data",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "o",
        "o",
        "bech32",
        "o",
        "words",
        "bech32",
        "network",
        "words",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "_address",
        "a",
        "o",
        "bcrypto",
        "a",
        "o",
        "lazy",
        "o",
        "o",
        "bscript",
        "OPS",
        "o",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "a",
        "lazy",
        "o",
        "a",
        "a",
        "lazy",
        "o",
        "o",
        "EMPTY_BUFFER",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "a",
        "network",
        "network",
        "_address",
        "_address",
        "_address",
        "hash",
        "_address",
        "a",
        "hash",
        "hash",
        "a",
        "hash",
        "a",
        "a",
        "a",
        "a",
        "OPS",
        "a",
        "hash",
        "hash",
        "a",
        "hash",
        "a",
        "a",
        "bcrypto",
        "a",
        "hash",
        "hash",
        "pkh",
        "hash",
        "pkh",
        "a",
        "a",
        "bscript",
        "a",
        "ecc",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "bcrypto",
        "a",
        "hash",
        "hash",
        "pkh",
        "o",
        "a",
        "p2wpkh",
        "require",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Buffer",
        "a",
        "b",
        "a",
        "b",
        "a",
        "x",
        "i",
        "x",
        "b",
        "i",
        "a",
        "opts",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "opts",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "typef",
        "a",
        "lazy",
        "bech32",
        "a",
        "result",
        "bech32",
        "result",
        "result",
        "Buffer",
        "data",
        "lazy",
        "bscript",
        "a",
        "a",
        "BITCOIN_NETWORK",
        "lazy",
        "o",
        "o",
        "bech32",
        "o",
        "words",
        "bech32",
        "network",
        "words",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "_address",
        "o",
        "o",
        "bcrypto",
        "o",
        "lazy",
        "o",
        "o",
        "bscript",
        "OPS",
        "o",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "EMPTY_BUFFER",
        "a",
        "lazy",
        "o",
        "o",
        "EMPTY_BUFFER",
        "lazy",
        "o",
        "a",
        "a",
        "a",
        "a",
        "a",
        "bscript",
        "_rchunks",
        "o",
        "stack",
        "a",
        "o",
        "EMPTY_BUFFER",
        "stack",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "opts",
        "a",
        "_address",
        "network",
        "_address",
        "_address",
        "hash",
        "_address",
        "a",
        "hash",
        "hash",
        "a",
        "hash",
        "a",
        "a",
        "a",
        "a",
        "OPS",
        "a",
        "a",
        "hash",
        "hash",
        "hash2",
        "hash",
        "hash2",
        "a",
        "a",
        "a",
        "network",
        "a",
        "a",
        "a",
        "a",
        "a",
        "bscript",
        "a",
        "bcrypto",
        "a",
        "hash",
        "hash",
        "hash2",
        "hash",
        "hash2",
        "a",
        "bscript",
        "_rchunks",
        "a",
        "a",
        "stacksEqual",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "a",
        "o",
        "a",
        "p2wsh",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "OPS",
        "value",
        "types",
        "value",
        "value",
        "OPS",
        "value",
        "OPS",
        "value",
        "OPS",
        "value",
        "OPS",
        "value",
        "types",
        "value",
        "isOPInt",
        "value",
        "value",
        "types",
        "value",
        "value",
        "isPushOnlyChunk",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "buffer",
        "buffer",
        "OP_INT_BASE",
        "buffer",
        "buffer",
        "OPS",
        "chunks",
        "Buffer",
        "chunks",
        "chunks",
        "typeforce",
        "types",
        "chunks",
        "chunks",
        "accum",
        "chunk",
        "Buffer",
        "chunk",
        "chunk",
        "asMinimalOP",
        "chunk",
        "accum",
        "accum",
        "pushdata",
        "chunk",
        "chunk",
        "accum",
        "Buffer",
        "bufferSize",
        "chunks",
        "chunk",
        "Buffer",
        "chunk",
        "asMinimalOP",
        "chunk",
        "opcode",
        "buffer",
        "opcode",
        "offset",
        "offset",
        "offset",
        "pushdata",
        "buffer",
        "chunk",
        "offset",
        "chunk",
        "buffer",
        "offset",
        "offset",
        "chunk",
        "buffer",
        "chunk",
        "offset",
        "offset",
        "offset",
        "buffer",
        "buffer",
        "buffer",
        "types",
        "buffer",
        "buffer",
        "typeforce",
        "types",
        "buffer",
        "i",
        "buffer",
        "buffer",
        "i",
        "opcode",
        "OPS",
        "opcode",
        "OPS",
        "pushdata",
        "buffer",
        "i",
        "d",
        "i",
        "d",
        "i",
        "d",
        "buffer",
        "buffer",
        "i",
        "i",
        "d",
        "i",
        "d",
        "asMinimalOP",
        "data",
        "op",
        "chunks",
        "op",
        "chunks",
        "data",
        "chunks",
        "opcode",
        "i",
        "chunks",
        "chunks",
        "Buffer",
        "chunks",
        "chunks",
        "decompile",
        "chunks",
        "chunks",
        "chunk",
        "Buffer",
        "chunk",
        "asMinimalOP",
        "chunk",
        "op",
        "chunk",
        "chunk",
        "op",
        "REVERSE_OPS",
        "chunk",
        "asm",
        "typeforce",
        "types",
        "asm",
        "compile",
        "asm",
        "chunkStr",
        "OPS",
        "chunkStr",
        "OPS",
        "chunkStr",
        "typeforce",
        "types",
        "chunkStr",
        "Buffer",
        "chunkStr",
        "chunks",
        "chunks",
        "decompile",
        "chunks",
        "typeforce",
        "isPushOnly",
        "chunks",
        "chunks",
        "op",
        "Buffer",
        "op",
        "op",
        "op",
        "OPS",
        "Buffer",
        "scriptNumber",
        "op",
        "OP_INT_BASE",
        "buffer",
        "ecc",
        "buffer",
        "hashType",
        "hashType",
        "hashTypeMod",
        "hashTypeMod",
        "buffer",
        "Buffer",
        "buffer",
        "isDefinedHashType",
        "buffer",
        "buffer",
        "bip66",
        "buffer",
        "compile",
        "decompile",
        "fromASM",
        "toASM",
        "toStack",
        "require",
        "require",
        "isCanonicalPubKey",
        "isCanonicalScriptSignature",
        "isPushOnly",
        "isDefinedHashType",
        "require",
        "exports",
        "require",
        "buffer",
        "maxLength",
        "minimal",
        "maxLength",
        "maxLength",
        "minimal",
        "minimal",
        "minimal",
        "buffer",
        "length",
        "length",
        "maxLength",
        "minimal",
        "buffer",
        "length",
        "length",
        "buffer",
        "length",
        "length",
        "buffer",
        "buffer",
        "b",
        "b",
        "a",
        "b",
        "a",
        "i",
        "length",
        "i",
        "result",
        "buffer",
        "i",
        "i",
        "buffer",
        "length",
        "result",
        "length",
        "result",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "number",
        "number",
        "scriptNumSize",
        "value",
        "Buffer",
        "size",
        "number",
        "i",
        "size",
        "i",
        "buffer",
        "value",
        "i",
        "value",
        "buffer",
        "size",
        "buffer",
        "negative",
        "size",
        "negative",
        "buffer",
        "size",
        "buffer",
        "decode",
        "encode",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "Buffer",
        "x",
        "x",
        "i",
        "i",
        "i",
        "x",
        "ZERO",
        "x",
        "x",
        "i",
        "x",
        "Buffer",
        "ZERO",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "Buffer",
        "x",
        "x",
        "buffer",
        "bstart",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "hashType",
        "hashTypeMod",
        "hashTypeMod",
        "hashType",
        "bip66",
        "buffer",
        "fromDER",
        "decode",
        "fromDER",
        "decode",
        "Buffer",
        "r",
        "s",
        "hashType",
        "signature",
        "hashType",
        "typeforce",
        "types",
        "types",
        "hashType",
        "hashTypeMod",
        "hashTypeMod",
        "hashType",
        "Buffer",
        "hashTypeBuffer",
        "hashType",
        "toDER",
        "signature",
        "toDER",
        "signature",
        "Buffer",
        "bip66",
        "r",
        "s",
        "hashTypeBuffer",
        "decode",
        "encode",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "value",
        "value",
        "OPS",
        "bscript",
        "value",
        "script",
        "allowIncomplete",
        "bscript",
        "script",
        "chunks",
        "chunks",
        "OPS",
        "allowIncomplete",
        "chunks",
        "partialSignature",
        "chunks",
        "bscript",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "OPS",
        "script",
        "allowIncomplete",
        "bscript",
        "script",
        "chunks",
        "chunks",
        "chunks",
        "OPS",
        "types",
        "chunks",
        "types",
        "chunks",
        "chunks",
        "chunks",
        "OP_INT_BASE",
        "chunks",
        "chunks",
        "OP_INT_BASE",
        "m",
        "n",
        "m",
        "n",
        "n",
        "chunks",
        "allowIncomplete",
        "chunks",
        "keys",
        "bscript",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "check",
        "check",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "require",
        "script",
        "bscript",
        "script",
        "chunks",
        "bscript",
        "chunks",
        "check",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "chunks",
        "bscript",
        "chunks",
        "chunks",
        "OPS",
        "check",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "require",
        "script",
        "bscript",
        "script",
        "chunks",
        "bscript",
        "chunks",
        "bscript",
        "chunks",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "OPS",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "OPS",
        "check",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "script",
        "allowIncomplete",
        "bscript",
        "script",
        "chunks",
        "chunks",
        "chunks",
        "Buffer",
        "lastChunk",
        "bscript",
        "bscript",
        "chunks",
        "bscript",
        "lastChunk",
        "redeemScriptChunks",
        "bscript",
        "scriptSigChunks",
        "chunks",
        "p2wsho",
        "redeemScriptChunks",
        "p2wpkho",
        "redeemScriptChunks",
        "p2pkh",
        "scriptSigChunks",
        "p2pkh",
        "redeemScriptChunks",
        "p2ms",
        "scriptSigChunks",
        "allowIncomplete",
        "p2ms",
        "redeemScriptChunks",
        "p2pk",
        "scriptSigChunks",
        "p2pk",
        "redeemScriptChunks",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "buffer",
        "OPS",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Buffer",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "buffer",
        "HEADER",
        "check",
        "commitment",
        "typeforce",
        "types",
        "commitment",
        "Buffer",
        "HEADER",
        "buffer",
        "commitment",
        "buffer",
        "bscript",
        "OPS",
        "buffer",
        "buffer",
        "typeforce",
        "check",
        "buffer",
        "bscript",
        "buffer",
        "check",
        "decode",
        "encode",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "require",
        "pubKey",
        "bscript",
        "pubKey",
        "pubKey",
        "script",
        "bscript",
        "script",
        "chunks",
        "bscript",
        "chunks",
        "isCompressedCanonicalPubKey",
        "chunks",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "check",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "chunks",
        "allowIncomplete",
        "typeforce",
        "types",
        "chunks",
        "chunks",
        "chunks",
        "chunks",
        "Buffer",
        "witnessScript",
        "bscript",
        "witnessScript",
        "witnessScriptChunks",
        "witnessScriptChunks",
        "bscript",
        "chunks",
        "p2pkh",
        "witnessRawScriptSig",
        "p2pkh",
        "witnessScriptChunks",
        "p2ms",
        "witnessRawScriptSig",
        "allowIncomplete",
        "p2ms",
        "witnessScriptChunks",
        "p2pk",
        "witnessRawScriptSig",
        "p2pk",
        "witnessScriptChunks",
        "check",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "script",
        "bscript",
        "script",
        "buffer",
        "buffer",
        "OPS",
        "buffer",
        "check",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "someScript",
        "someScript",
        "varuint",
        "length",
        "length",
        "someVector",
        "someVector",
        "varuint",
        "length",
        "someVector",
        "sum",
        "witness",
        "sum",
        "varSliceSize",
        "witness",
        "Transaction",
        "Transaction",
        "Transaction",
        "Transaction",
        "Transaction",
        "Transaction",
        "Transaction",
        "Buffer",
        "Buffer",
        "Buffer",
        "Buffer",
        "EMPTY_SCRIPT",
        "VALUE_UINT64_MAX",
        "Transaction",
        "buffer",
        "__noStrict",
        "n",
        "offset",
        "n",
        "buffer",
        "offset",
        "n",
        "offset",
        "buffer",
        "offset",
        "offset",
        "i",
        "buffer",
        "offset",
        "offset",
        "i",
        "bufferutils",
        "buffer",
        "offset",
        "offset",
        "i",
        "varuint",
        "buffer",
        "offset",
        "offset",
        "varuint",
        "vi",
        "readSlice",
        "readVarInt",
        "readVarInt",
        "i",
        "count",
        "i",
        "vector",
        "readVarSlice",
        "vector",
        "Transaction",
        "tx",
        "readInt32",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "marker",
        "Transaction",
        "flag",
        "Transaction",
        "offset",
        "hasWitnesses",
        "readVarInt",
        "i",
        "vinLen",
        "i",
        "tx",
        "readSlice",
        "readUInt32",
        "readVarSlice",
        "readUInt32",
        "EMPTY_WITNESS",
        "readVarInt",
        "i",
        "i",
        "voutLen",
        "i",
        "tx",
        "readUInt64",
        "readVarSlice",
        "hasWitnesses",
        "i",
        "i",
        "vinLen",
        "i",
        "tx",
        "i",
        "readVector",
        "tx",
        "tx",
        "readUInt32",
        "__noStrict",
        "tx",
        "offset",
        "buffer",
        "tx",
        "Transaction",
        "hex",
        "Transaction",
        "Buffer",
        "hex",
        "Transaction",
        "buffer",
        "typeforce",
        "types",
        "buffer",
        "i",
        "i",
        "buffer",
        "i",
        "Transaction",
        "Transaction",
        "Transaction",
        "hash",
        "index",
        "sequence",
        "scriptSig",
        "typeforce",
        "types",
        "types",
        "types",
        "types",
        "types",
        "types",
        "types",
        "arguments",
        "types",
        "sequence",
        "sequence",
        "Transaction",
        "hash",
        "index",
        "scriptSig",
        "EMPTY_SCRIPT",
        "sequence",
        "EMPTY_WITNESS",
        "Transaction",
        "scriptPubKey",
        "value",
        "typeforce",
        "types",
        "types",
        "types",
        "arguments",
        "scriptPubKey",
        "value",
        "Transaction",
        "x",
        "x",
        "Transaction",
        "total",
        "Transaction",
        "Transaction",
        "Transaction",
        "__allowWitness",
        "__allowWitness",
        "hasWitnesses",
        "varuint",
        "varuint",
        "sum",
        "input",
        "sum",
        "varSliceSize",
        "input",
        "sum",
        "output",
        "sum",
        "varSliceSize",
        "output",
        "hasWitnesses",
        "sum",
        "input",
        "sum",
        "vectorSize",
        "input",
        "Transaction",
        "Transaction",
        "newTx",
        "newTx",
        "newTx",
        "txIn",
        "txIn",
        "txIn",
        "txIn",
        "txIn",
        "txIn",
        "newTx",
        "txOut",
        "txOut",
        "txOut",
        "newTx",
        "Transaction",
        "inIndex",
        "prevOutScript",
        "hashType",
        "typeforce",
        "types",
        "types",
        "types",
        "types",
        "arguments",
        "inIndex",
        "ONE",
        "bscript",
        "bscript",
        "prevOutScript",
        "x",
        "x",
        "opcodes",
        "hashType",
        "Transaction",
        "txTmp",
        "txTmp",
        "input",
        "i",
        "i",
        "inIndex",
        "input",
        "hashType",
        "Transaction",
        "inIndex",
        "ONE",
        "txTmp",
        "inIndex",
        "i",
        "inIndex",
        "i",
        "txTmp",
        "i",
        "BLANK_OUTPUT",
        "txTmp",
        "input",
        "y",
        "y",
        "inIndex",
        "input",
        "hashType",
        "Transaction",
        "txTmp",
        "txTmp",
        "inIndex",
        "txTmp",
        "ourScript",
        "txTmp",
        "input",
        "input",
        "EMPTY_SCRIPT",
        "txTmp",
        "inIndex",
        "ourScript",
        "Buffer",
        "txTmp",
        "buffer",
        "hashType",
        "buffer",
        "txTmp",
        "buffer",
        "bcrypto",
        "buffer",
        "Transaction",
        "inIndex",
        "prevOutScript",
        "value",
        "hashType",
        "typeforce",
        "types",
        "types",
        "types",
        "types",
        "types",
        "arguments",
        "toffset",
        "tbuffer",
        "toffset",
        "i",
        "toffset",
        "tbuffer",
        "i",
        "toffset",
        "i",
        "toffset",
        "bufferutils",
        "tbuffer",
        "i",
        "toffset",
        "i",
        "varuint",
        "i",
        "tbuffer",
        "toffset",
        "toffset",
        "varuint",
        "writeVarInt",
        "writeSlice",
        "hashType",
        "Transaction",
        "tbuffer",
        "Buffer",
        "toffset",
        "txIn",
        "writeSlice",
        "txIn",
        "writeUInt32",
        "txIn",
        "hashPrevouts",
        "bcrypto",
        "tbuffer",
        "hashType",
        "Transaction",
        "hashType",
        "Transaction",
        "hashType",
        "Transaction",
        "tbuffer",
        "Buffer",
        "toffset",
        "txIn",
        "writeUInt32",
        "txIn",
        "hashSequence",
        "bcrypto",
        "tbuffer",
        "hashType",
        "Transaction",
        "hashType",
        "Transaction",
        "sum",
        "output",
        "sum",
        "varSliceSize",
        "output",
        "tbuffer",
        "Buffer",
        "txOutsSize",
        "toffset",
        "writeUInt64",
        "writeVarSlice",
        "hashOutputs",
        "bcrypto",
        "tbuffer",
        "hashType",
        "Transaction",
        "inIndex",
        "inIndex",
        "tbuffer",
        "Buffer",
        "varSliceSize",
        "output",
        "toffset",
        "writeUInt64",
        "output",
        "writeVarSlice",
        "output",
        "hashOutputs",
        "bcrypto",
        "tbuffer",
        "tbuffer",
        "Buffer",
        "varSliceSize",
        "prevOutScript",
        "toffset",
        "inIndex",
        "writeUInt32",
        "writeSlice",
        "hashPrevouts",
        "writeSlice",
        "hashSequence",
        "writeSlice",
        "input",
        "writeUInt32",
        "input",
        "writeVarSlice",
        "prevOutScript",
        "writeUInt64",
        "value",
        "writeUInt32",
        "input",
        "writeSlice",
        "hashOutputs",
        "writeUInt32",
        "writeUInt32",
        "hashType",
        "bcrypto",
        "tbuffer",
        "Transaction",
        "bcrypto",
        "Transaction",
        "Transaction",
        "buffer",
        "initialOffset",
        "buffer",
        "initialOffset",
        "Transaction",
        "buffer",
        "initialOffset",
        "__allowWitness",
        "buffer",
        "buffer",
        "Buffer",
        "__allowWitness",
        "initialOffset",
        "offset",
        "buffer",
        "offset",
        "i",
        "offset",
        "buffer",
        "i",
        "offset",
        "i",
        "offset",
        "buffer",
        "i",
        "offset",
        "i",
        "offset",
        "buffer",
        "i",
        "offset",
        "i",
        "offset",
        "bufferutils",
        "buffer",
        "i",
        "offset",
        "i",
        "varuint",
        "i",
        "buffer",
        "offset",
        "offset",
        "varuint",
        "writeVarInt",
        "writeSlice",
        "vector",
        "writeVarInt",
        "vector",
        "vector",
        "writeVarSlice",
        "writeInt32",
        "__allowWitness",
        "hasWitnesses",
        "writeUInt8",
        "Transaction",
        "writeUInt8",
        "Transaction",
        "writeVarInt",
        "txIn",
        "writeSlice",
        "txIn",
        "writeUInt32",
        "txIn",
        "writeVarSlice",
        "txIn",
        "writeUInt32",
        "txIn",
        "writeVarInt",
        "txOut",
        "txOut",
        "writeUInt64",
        "txOut",
        "writeSlice",
        "txOut",
        "writeVarSlice",
        "txOut",
        "hasWitnesses",
        "input",
        "writeVector",
        "input",
        "writeUInt32",
        "initialOffset",
        "buffer",
        "initialOffset",
        "offset",
        "buffer",
        "Transaction",
        "Transaction",
        "index",
        "scriptSig",
        "typeforce",
        "types",
        "types",
        "types",
        "arguments",
        "index",
        "scriptSig",
        "Transaction",
        "index",
        "witness",
        "typeforce",
        "types",
        "types",
        "types",
        "arguments",
        "index",
        "witness",
        "Transaction",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "classify",
        "require",
        "require",
        "scriptSig",
        "witnessStack",
        "scriptPubKey",
        "scriptSig",
        "witnessStack",
        "classify",
        "scriptSig",
        "classify",
        "witnessStack",
        "ssType",
        "SCRIPT_TYPES",
        "ssType",
        "wsType",
        "SCRIPT_TYPES",
        "wsType",
        "ssType",
        "wsType",
        "SCRIPT_TYPES",
        "payments",
        "witnessStack",
        "output",
        "SCRIPT_TYPES",
        "pubkey",
        "signature",
        "SCRIPT_TYPES",
        "payments",
        "scriptSig",
        "output",
        "SCRIPT_TYPES",
        "pubkey",
        "signature",
        "SCRIPT_TYPES",
        "payments",
        "scriptSig",
        "SCRIPT_TYPES",
        "signature",
        "SCRIPT_TYPES",
        "payments",
        "scriptSig",
        "scriptPubKey",
        "SCRIPT_TYPES",
        "pubkeys",
        "signatures",
        "SCRIPT_TYPES",
        "payments",
        "scriptSig",
        "witnessStack",
        "classify",
        "redeem",
        "expandInput",
        "redeem",
        "redeem",
        "outputType",
        "redeem",
        "expanded",
        "output",
        "SCRIPT_TYPES",
        "redeem",
        "expanded",
        "expanded",
        "expanded",
        "expanded",
        "expanded",
        "SCRIPT_TYPES",
        "payments",
        "scriptSig",
        "witnessStack",
        "classify",
        "redeem",
        "outputType",
        "SCRIPT_TYPES",
        "expanded",
        "expandInput",
        "redeem",
        "redeem",
        "outputType",
        "expanded",
        "expandInput",
        "bscript",
        "redeem",
        "outputType",
        "redeem",
        "expanded",
        "output",
        "SCRIPT_TYPES",
        "redeem",
        "expanded",
        "expanded",
        "expanded",
        "SCRIPT_TYPES",
        "scriptSig",
        "input",
        "transaction",
        "vin",
        "input",
        "SCRIPT_TYPES",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "pubKey",
        "ECPair",
        "pubKey",
        "unmatched",
        "signature",
        "i",
        "signature",
        "bscript",
        "signature",
        "transaction",
        "vin",
        "input",
        "parsed",
        "keyPair",
        "hash",
        "parsed",
        "unmatched",
        "i",
        "match",
        "signature",
        "match",
        "script",
        "ourPubKey",
        "typeforce",
        "types",
        "script",
        "classify",
        "script",
        "SCRIPT_TYPES",
        "ourPubKey",
        "payments",
        "script",
        "bcrypto",
        "ourPubKey",
        "pkh1",
        "pkh2",
        "ourPubKey",
        "SCRIPT_TYPES",
        "ourPubKey",
        "payments",
        "script",
        "bcrypto",
        "ourPubKey",
        "wpkh1",
        "wpkh2",
        "ourPubKey",
        "SCRIPT_TYPES",
        "payments",
        "script",
        "p2pk",
        "SCRIPT_TYPES",
        "payments",
        "script",
        "p2ms",
        "p2ms",
        "input",
        "ourPubKey",
        "redeemScript",
        "witnessValue",
        "witnessScript",
        "redeemScript",
        "witnessScript",
        "payments",
        "witnessScript",
        "payments",
        "redeemScript",
        "payments",
        "redeemScript",
        "payments",
        "p2wsh",
        "p2wsh",
        "p2wshAlt",
        "p2sh",
        "p2shAlt",
        "expandOutput",
        "p2wsh",
        "ourPubKey",
        "expanded",
        "expanded",
        "bscript",
        "witnessScript",
        "input",
        "input",
        "x",
        "x",
        "expanded",
        "input",
        "expanded",
        "SCRIPT_TYPES",
        "SCRIPT_TYPES",
        "expanded",
        "SCRIPT_TYPES",
        "p2sh",
        "expanded",
        "expanded",
        "expanded",
        "redeemScript",
        "payments",
        "redeemScript",
        "input",
        "p2shAlt",
        "payments",
        "input",
        "e",
        "p2sh",
        "p2shAlt",
        "expandOutput",
        "p2sh",
        "ourPubKey",
        "expanded",
        "expanded",
        "bscript",
        "redeemScript",
        "input",
        "input",
        "x",
        "x",
        "expanded",
        "input",
        "expanded",
        "SCRIPT_TYPES",
        "signScript",
        "payments",
        "expanded",
        "expanded",
        "SCRIPT_TYPES",
        "p2sh",
        "expanded",
        "SCRIPT_TYPES",
        "expanded",
        "expanded",
        "expanded",
        "witnessScript",
        "payments",
        "witnessScript",
        "input",
        "payments",
        "input",
        "p2wsh",
        "p2wshAlt",
        "expandOutput",
        "p2wsh",
        "ourPubKey",
        "expanded",
        "expanded",
        "bscript",
        "witnessScript",
        "input",
        "input",
        "x",
        "x",
        "expanded",
        "input",
        "expanded",
        "SCRIPT_TYPES",
        "expanded",
        "SCRIPT_TYPES",
        "p2wsh",
        "expanded",
        "expanded",
        "expanded",
        "input",
        "input",
        "input",
        "SCRIPT_TYPES",
        "input",
        "input",
        "SCRIPT_TYPES",
        "input",
        "input",
        "expandOutput",
        "input",
        "ourPubKey",
        "expanded",
        "expanded",
        "bscript",
        "input",
        "input",
        "input",
        "x",
        "x",
        "expanded",
        "input",
        "input",
        "expanded",
        "SCRIPT_TYPES",
        "signScript",
        "payments",
        "expanded",
        "expanded",
        "input",
        "expanded",
        "SCRIPT_TYPES",
        "expanded",
        "expanded",
        "expanded",
        "payments",
        "ourPubKey",
        "SCRIPT_TYPES",
        "prevOutScript",
        "prevOutScript",
        "SCRIPT_TYPES",
        "ourPubKey",
        "input",
        "allowIncomplete",
        "input",
        "input",
        "SCRIPT_TYPES",
        "pubkeys",
        "signatures",
        "payments",
        "pubkeys",
        "signatures",
        "SCRIPT_TYPES",
        "pubkeys",
        "signatures",
        "payments",
        "pubkeys",
        "signatures",
        "SCRIPT_TYPES",
        "pubkeys",
        "signatures",
        "payments",
        "signatures",
        "SCRIPT_TYPES",
        "allowIncomplete",
        "signatures",
        "signatures",
        "x",
        "x",
        "ops",
        "signatures",
        "signatures",
        "x",
        "x",
        "payments",
        "SCRIPT_TYPES",
        "build",
        "input",
        "input",
        "allowIncomplete",
        "redeem",
        "payments",
        "redeem",
        "input",
        "redeem",
        "redeem",
        "SCRIPT_TYPES",
        "build",
        "input",
        "input",
        "allowIncomplete",
        "redeem",
        "payments",
        "input",
        "redeem",
        "redeem",
        "network",
        "maximumFeeRate",
        "network",
        "networks",
        "maximumFeeRate",
        "Transaction",
        "TransactionBuilder",
        "locktime",
        "typeforce",
        "types",
        "locktime",
        "input",
        "input",
        "input",
        "s",
        "s",
        "locktime",
        "TransactionBuilder",
        "version",
        "typeforce",
        "types",
        "version",
        "version",
        "TransactionBuilder",
        "transaction",
        "network",
        "TransactionBuilder",
        "network",
        "txb",
        "transaction",
        "txb",
        "transaction",
        "transaction",
        "txOut",
        "txb",
        "txOut",
        "txOut",
        "transaction",
        "txIn",
        "txb",
        "txIn",
        "txIn",
        "txIn",
        "txIn",
        "txIn",
        "txb",
        "input",
        "i",
        "fixMultisigOrder",
        "input",
        "transaction",
        "i",
        "txb",
        "TransactionBuilder",
        "txHash",
        "vout",
        "sequence",
        "prevOutScript",
        "txHash",
        "txHash",
        "Buffer",
        "txHash",
        "txHash",
        "Transaction",
        "txHash",
        "vout",
        "prevOutScript",
        "txOut",
        "value",
        "txOut",
        "txHash",
        "txHash",
        "txHash",
        "vout",
        "sequence",
        "prevOutScript",
        "value",
        "TransactionBuilder",
        "txHash",
        "vout",
        "options",
        "Transaction",
        "txHash",
        "txHash",
        "vout",
        "prevTxOut",
        "prevTxOut",
        "options",
        "input",
        "expandInput",
        "options",
        "options",
        "options",
        "input",
        "options",
        "input",
        "options",
        "input",
        "input",
        "expandOutput",
        "options",
        "expanded",
        "input",
        "expanded",
        "input",
        "expanded",
        "prevOutType",
        "expanded",
        "input",
        "options",
        "input",
        "prevOutType",
        "classify",
        "options",
        "txHash",
        "vout",
        "options",
        "options",
        "vin",
        "input",
        "prevTxOut",
        "vin",
        "TransactionBuilder",
        "scriptPubKey",
        "value",
        "scriptPubKey",
        "scriptPubKey",
        "baddress",
        "scriptPubKey",
        "scriptPubKey",
        "value",
        "TransactionBuilder",
        "TransactionBuilder",
        "TransactionBuilder",
        "allowIncomplete",
        "allowIncomplete",
        "input",
        "i",
        "input",
        "allowIncomplete",
        "build",
        "input",
        "input",
        "allowIncomplete",
        "result",
        "allowIncomplete",
        "input",
        "SCRIPT_TYPES",
        "allowIncomplete",
        "tx",
        "i",
        "result",
        "tx",
        "i",
        "result",
        "allowIncomplete",
        "tx",
        "tx",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "TransactionBuilder",
        "vin",
        "keyPair",
        "redeemScript",
        "hashType",
        "witnessValue",
        "witnessScript",
        "keyPair",
        "keyPair",
        "vin",
        "vin",
        "hashType",
        "hashType",
        "Transaction",
        "vin",
        "input",
        "redeemScript",
        "input",
        "redeemScript",
        "keyPair",
        "keyPair",
        "canSign",
        "input",
        "witnessValue",
        "input",
        "input",
        "witnessValue",
        "typeforce",
        "types",
        "witnessValue",
        "input",
        "witnessValue",
        "canSign",
        "input",
        "prepareInput",
        "input",
        "ourPubKey",
        "redeemScript",
        "witnessValue",
        "witnessScript",
        "input",
        "prepared",
        "canSign",
        "input",
        "input",
        "input",
        "signatureHash",
        "vin",
        "input",
        "input",
        "hashType",
        "signatureHash",
        "vin",
        "input",
        "hashType",
        "input",
        "pubKey",
        "i",
        "ourPubKey",
        "pubKey",
        "input",
        "i",
        "ourPubKey",
        "input",
        "keyPair",
        "signatureHash",
        "input",
        "i",
        "bscript",
        "signature",
        "hashType",
        "signed",
        "buffer",
        "buffer",
        "buffer",
        "TransactionBuilder",
        "input",
        "input",
        "input",
        "signature",
        "signature",
        "signatureHashType",
        "signature",
        "hashType",
        "Transaction",
        "TransactionBuilder",
        "input",
        "input",
        "input",
        "signature",
        "signature",
        "signatureHashType",
        "signature",
        "hashType",
        "hashTypeMod",
        "Transaction",
        "hashTypeMod",
        "Transaction",
        "nInputs",
        "nOutputs",
        "TransactionBuilder",
        "a",
        "x",
        "a",
        "x",
        "a",
        "x",
        "a",
        "x",
        "incoming",
        "outgoing",
        "fee",
        "feeRate",
        "TransactionBuilder",
        "require",
        "exports",
        "require",
        "value",
        "typeforce",
        "value",
        "value",
        "UINT31_MAX",
        "value",
        "typeforce",
        "value",
        "value",
        "BIP32Path",
        "value",
        "typeforce",
        "value",
        "value",
        "SATOSHI_MAX",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "typeforce",
        "BIP32Path",
        "typeforce",
        "ECPoint",
        "typeforce",
        "typeforce",
        "Network",
        "Satoshi",
        "UInt31",
        "typeName",
        "typeforce",
        "types",
        "typeName",
        "typeforce",
        "typeName",
        "types",
        "require",
        "exports",
        "exports",
        "val",
        "msg",
        "val",
        "msg",
        "ctor",
        "superCtor",
        "ctor",
        "superCtor",
        "TempCtor",
        "superCtor",
        "ctor",
        "TempCtor",
        "ctor",
        "ctor",
        "number",
        "endian",
        "BN",
        "number",
        "number",
        "number",
        "endian",
        "number",
        "endian",
        "BN",
        "exports",
        "BN",
        "BN",
        "BN",
        "BN",
        "Buffer",
        "require",
        "e",
        "BN",
        "isBN",
        "num",
        "num",
        "BN",
        "num",
        "num",
        "num",
        "BN",
        "num",
        "BN",
        "max",
        "left",
        "right",
        "left",
        "right",
        "left",
        "right",
        "BN",
        "min",
        "left",
        "right",
        "left",
        "right",
        "left",
        "right",
        "BN",
        "init",
        "number",
        "endian",
        "number",
        "number",
        "endian",
        "number",
        "number",
        "endian",
        "number",
        "number",
        "number",
        "start",
        "number",
        "start",
        "number",
        "start",
        "number",
        "endian",
        "endian",
        "BN",
        "_initNumber",
        "number",
        "endian",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "number",
        "endian",
        "endian",
        "BN",
        "_initArray",
        "number",
        "endian",
        "number",
        "number",
        "number",
        "i",
        "i",
        "i",
        "endian",
        "i",
        "number",
        "j",
        "i",
        "i",
        "w",
        "number",
        "i",
        "number",
        "i",
        "number",
        "i",
        "j",
        "w",
        "off",
        "j",
        "w",
        "off",
        "off",
        "off",
        "off",
        "j",
        "endian",
        "i",
        "j",
        "i",
        "number",
        "i",
        "w",
        "number",
        "i",
        "number",
        "i",
        "number",
        "i",
        "j",
        "w",
        "off",
        "j",
        "w",
        "off",
        "off",
        "off",
        "off",
        "j",
        "start",
        "end",
        "end",
        "i",
        "len",
        "i",
        "i",
        "r",
        "c",
        "c",
        "r",
        "c",
        "c",
        "c",
        "r",
        "c",
        "r",
        "c",
        "r",
        "BN",
        "_parseHex",
        "number",
        "start",
        "number",
        "start",
        "i",
        "i",
        "i",
        "i",
        "number",
        "j",
        "i",
        "start",
        "i",
        "w",
        "parseHex",
        "number",
        "i",
        "i",
        "j",
        "w",
        "off",
        "j",
        "w",
        "off",
        "off",
        "off",
        "off",
        "j",
        "i",
        "start",
        "w",
        "parseHex",
        "number",
        "start",
        "i",
        "j",
        "w",
        "off",
        "j",
        "w",
        "off",
        "start",
        "end",
        "mul",
        "end",
        "i",
        "len",
        "i",
        "i",
        "r",
        "mul",
        "c",
        "r",
        "c",
        "c",
        "r",
        "c",
        "r",
        "c",
        "r",
        "BN",
        "_parseBase",
        "number",
        "start",
        "limbPow",
        "limbPow",
        "limbLen",
        "limbLen",
        "limbPow",
        "limbPow",
        "number",
        "start",
        "total",
        "limbLen",
        "total",
        "total",
        "mod",
        "start",
        "i",
        "end",
        "i",
        "limbLen",
        "word",
        "parseBase",
        "number",
        "i",
        "i",
        "limbLen",
        "limbPow",
        "word",
        "word",
        "word",
        "mod",
        "word",
        "parseBase",
        "number",
        "i",
        "number",
        "i",
        "i",
        "mod",
        "i",
        "pow",
        "pow",
        "word",
        "word",
        "word",
        "BN",
        "copy",
        "dest",
        "dest",
        "i",
        "i",
        "dest",
        "i",
        "i",
        "dest",
        "dest",
        "dest",
        "BN",
        "clone",
        "BN",
        "r",
        "r",
        "BN",
        "_expand",
        "size",
        "size",
        "BN",
        "strip",
        "BN",
        "_normSign",
        "BN",
        "inspect",
        "BN",
        "toString",
        "padding",
        "padding",
        "padding",
        "i",
        "i",
        "i",
        "w",
        "off",
        "carry",
        "carry",
        "w",
        "off",
        "carry",
        "i",
        "zeros",
        "word",
        "word",
        "word",
        "off",
        "off",
        "off",
        "i",
        "carry",
        "carry",
        "padding",
        "groupSizes",
        "groupBases",
        "c",
        "c",
        "c",
        "groupBase",
        "c",
        "c",
        "groupBase",
        "c",
        "zeros",
        "groupSize",
        "r",
        "r",
        "r",
        "padding",
        "BN",
        "toNumber",
        "ret",
        "ret",
        "ret",
        "ret",
        "BN",
        "toJSON",
        "BN",
        "toBuffer",
        "endian",
        "length",
        "Buffer",
        "Buffer",
        "endian",
        "length",
        "BN",
        "toArray",
        "endian",
        "length",
        "endian",
        "length",
        "BN",
        "toArrayLike",
        "ArrayType",
        "endian",
        "length",
        "length",
        "byteLength",
        "byteLength",
        "reqLength",
        "reqLength",
        "endian",
        "ArrayType",
        "reqLength",
        "littleEndian",
        "i",
        "i",
        "reqLength",
        "byteLength",
        "i",
        "res",
        "i",
        "i",
        "q",
        "i",
        "b",
        "q",
        "q",
        "res",
        "reqLength",
        "i",
        "b",
        "i",
        "q",
        "i",
        "b",
        "q",
        "q",
        "res",
        "i",
        "b",
        "i",
        "reqLength",
        "i",
        "res",
        "i",
        "res",
        "BN",
        "_countBits",
        "w",
        "w",
        "BN",
        "_countBits",
        "w",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "r",
        "t",
        "BN",
        "_zeroBits",
        "w",
        "w",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "t",
        "r",
        "t",
        "t",
        "r",
        "r",
        "BN",
        "bitLength",
        "w",
        "hi",
        "num",
        "num",
        "bit",
        "w",
        "bit",
        "bit",
        "bit",
        "w",
        "bit",
        "num",
        "off",
        "wbit",
        "wbit",
        "w",
        "BN",
        "zeroBits",
        "i",
        "i",
        "i",
        "r",
        "b",
        "b",
        "r",
        "BN",
        "byteLength",
        "BN",
        "toTwos",
        "width",
        "width",
        "BN",
        "fromTwos",
        "width",
        "width",
        "width",
        "BN",
        "isNeg",
        "BN",
        "neg",
        "BN",
        "ineg",
        "BN",
        "iuor",
        "num",
        "num",
        "i",
        "num",
        "i",
        "i",
        "i",
        "num",
        "i",
        "BN",
        "ior",
        "num",
        "num",
        "num",
        "BN",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "uor",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "iuand",
        "num",
        "num",
        "b",
        "num",
        "b",
        "i",
        "b",
        "i",
        "i",
        "i",
        "num",
        "i",
        "b",
        "BN",
        "iand",
        "num",
        "num",
        "num",
        "BN",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "uand",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "iuxor",
        "num",
        "num",
        "a",
        "b",
        "num",
        "a",
        "num",
        "b",
        "i",
        "b",
        "i",
        "i",
        "a",
        "i",
        "b",
        "i",
        "a",
        "i",
        "a",
        "i",
        "i",
        "a",
        "i",
        "a",
        "BN",
        "ixor",
        "num",
        "num",
        "num",
        "BN",
        "xor",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "uxor",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "inotn",
        "width",
        "width",
        "width",
        "width",
        "width",
        "bytesNeeded",
        "bitsLeft",
        "bytesNeeded",
        "i",
        "bytesNeeded",
        "i",
        "i",
        "i",
        "bitsLeft",
        "i",
        "i",
        "bitsLeft",
        "BN",
        "notn",
        "width",
        "width",
        "BN",
        "setn",
        "bit",
        "val",
        "bit",
        "bit",
        "bit",
        "bit",
        "off",
        "val",
        "off",
        "off",
        "wbit",
        "off",
        "off",
        "wbit",
        "BN",
        "iadd",
        "num",
        "num",
        "r",
        "num",
        "num",
        "num",
        "r",
        "num",
        "num",
        "r",
        "num",
        "a",
        "b",
        "num",
        "a",
        "num",
        "b",
        "i",
        "b",
        "i",
        "r",
        "a",
        "i",
        "b",
        "i",
        "carry",
        "i",
        "r",
        "carry",
        "r",
        "carry",
        "i",
        "a",
        "i",
        "r",
        "a",
        "i",
        "carry",
        "i",
        "r",
        "carry",
        "r",
        "a",
        "carry",
        "carry",
        "a",
        "i",
        "a",
        "i",
        "i",
        "a",
        "i",
        "BN",
        "add",
        "num",
        "num",
        "num",
        "res",
        "num",
        "num",
        "res",
        "num",
        "res",
        "num",
        "res",
        "num",
        "num",
        "num",
        "BN",
        "isub",
        "num",
        "num",
        "num",
        "num",
        "num",
        "r",
        "num",
        "num",
        "cmp",
        "cmp",
        "a",
        "b",
        "num",
        "a",
        "num",
        "b",
        "i",
        "b",
        "i",
        "r",
        "a",
        "i",
        "b",
        "i",
        "carry",
        "carry",
        "r",
        "i",
        "r",
        "carry",
        "i",
        "a",
        "i",
        "r",
        "a",
        "i",
        "carry",
        "carry",
        "r",
        "i",
        "r",
        "carry",
        "i",
        "a",
        "a",
        "i",
        "a",
        "i",
        "i",
        "a",
        "i",
        "i",
        "a",
        "BN",
        "sub",
        "num",
        "num",
        "num",
        "num",
        "num",
        "len",
        "len",
        "len",
        "num",
        "a",
        "b",
        "r",
        "r",
        "lo",
        "k",
        "len",
        "k",
        "carry",
        "carry",
        "k",
        "num",
        "k",
        "j",
        "maxJ",
        "j",
        "k",
        "j",
        "a",
        "i",
        "b",
        "num",
        "j",
        "r",
        "a",
        "b",
        "rword",
        "ncarry",
        "r",
        "rword",
        "r",
        "k",
        "rword",
        "carry",
        "ncarry",
        "carry",
        "k",
        "carry",
        "comb10MulTo",
        "num",
        "num",
        "a",
        "a0",
        "a0",
        "a",
        "a1",
        "a1",
        "a",
        "a2",
        "a2",
        "a",
        "a3",
        "a3",
        "a",
        "a4",
        "a4",
        "a",
        "a5",
        "a5",
        "a",
        "a6",
        "a6",
        "a",
        "a7",
        "a7",
        "a",
        "a8",
        "a8",
        "a",
        "a9",
        "a9",
        "b",
        "b0",
        "b0",
        "b",
        "b1",
        "b1",
        "b",
        "b2",
        "b2",
        "b",
        "b3",
        "b3",
        "b",
        "b4",
        "b4",
        "b",
        "b5",
        "b5",
        "b",
        "b6",
        "b6",
        "b",
        "b7",
        "b7",
        "b",
        "b8",
        "b8",
        "b",
        "b9",
        "b9",
        "num",
        "lo",
        "al0",
        "bl0",
        "mid",
        "al0",
        "bh0",
        "mid",
        "mid",
        "ah0",
        "bl0",
        "hi",
        "ah0",
        "bh0",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w0",
        "w0",
        "lo",
        "al1",
        "bl0",
        "mid",
        "al1",
        "bh0",
        "mid",
        "mid",
        "ah1",
        "bl0",
        "hi",
        "ah1",
        "bh0",
        "lo",
        "lo",
        "al0",
        "bl1",
        "mid",
        "mid",
        "al0",
        "bh1",
        "mid",
        "mid",
        "ah0",
        "bl1",
        "hi",
        "hi",
        "ah0",
        "bh1",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w1",
        "w1",
        "lo",
        "al2",
        "bl0",
        "mid",
        "al2",
        "bh0",
        "mid",
        "mid",
        "ah2",
        "bl0",
        "hi",
        "ah2",
        "bh0",
        "lo",
        "lo",
        "al1",
        "bl1",
        "mid",
        "mid",
        "al1",
        "bh1",
        "mid",
        "mid",
        "ah1",
        "bl1",
        "hi",
        "hi",
        "ah1",
        "bh1",
        "lo",
        "lo",
        "al0",
        "bl2",
        "mid",
        "mid",
        "al0",
        "bh2",
        "mid",
        "mid",
        "ah0",
        "bl2",
        "hi",
        "hi",
        "ah0",
        "bh2",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w2",
        "w2",
        "lo",
        "al3",
        "bl0",
        "mid",
        "al3",
        "bh0",
        "mid",
        "mid",
        "ah3",
        "bl0",
        "hi",
        "ah3",
        "bh0",
        "lo",
        "lo",
        "al2",
        "bl1",
        "mid",
        "mid",
        "al2",
        "bh1",
        "mid",
        "mid",
        "ah2",
        "bl1",
        "hi",
        "hi",
        "ah2",
        "bh1",
        "lo",
        "lo",
        "al1",
        "bl2",
        "mid",
        "mid",
        "al1",
        "bh2",
        "mid",
        "mid",
        "ah1",
        "bl2",
        "hi",
        "hi",
        "ah1",
        "bh2",
        "lo",
        "lo",
        "al0",
        "bl3",
        "mid",
        "mid",
        "al0",
        "bh3",
        "mid",
        "mid",
        "ah0",
        "bl3",
        "hi",
        "hi",
        "ah0",
        "bh3",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w3",
        "w3",
        "lo",
        "al4",
        "bl0",
        "mid",
        "al4",
        "bh0",
        "mid",
        "mid",
        "ah4",
        "bl0",
        "hi",
        "ah4",
        "bh0",
        "lo",
        "lo",
        "al3",
        "bl1",
        "mid",
        "mid",
        "al3",
        "bh1",
        "mid",
        "mid",
        "ah3",
        "bl1",
        "hi",
        "hi",
        "ah3",
        "bh1",
        "lo",
        "lo",
        "al2",
        "bl2",
        "mid",
        "mid",
        "al2",
        "bh2",
        "mid",
        "mid",
        "ah2",
        "bl2",
        "hi",
        "hi",
        "ah2",
        "bh2",
        "lo",
        "lo",
        "al1",
        "bl3",
        "mid",
        "mid",
        "al1",
        "bh3",
        "mid",
        "mid",
        "ah1",
        "bl3",
        "hi",
        "hi",
        "ah1",
        "bh3",
        "lo",
        "lo",
        "al0",
        "bl4",
        "mid",
        "mid",
        "al0",
        "bh4",
        "mid",
        "mid",
        "ah0",
        "bl4",
        "hi",
        "hi",
        "ah0",
        "bh4",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w4",
        "w4",
        "lo",
        "al5",
        "bl0",
        "mid",
        "al5",
        "bh0",
        "mid",
        "mid",
        "ah5",
        "bl0",
        "hi",
        "ah5",
        "bh0",
        "lo",
        "lo",
        "al4",
        "bl1",
        "mid",
        "mid",
        "al4",
        "bh1",
        "mid",
        "mid",
        "ah4",
        "bl1",
        "hi",
        "hi",
        "ah4",
        "bh1",
        "lo",
        "lo",
        "al3",
        "bl2",
        "mid",
        "mid",
        "al3",
        "bh2",
        "mid",
        "mid",
        "ah3",
        "bl2",
        "hi",
        "hi",
        "ah3",
        "bh2",
        "lo",
        "lo",
        "al2",
        "bl3",
        "mid",
        "mid",
        "al2",
        "bh3",
        "mid",
        "mid",
        "ah2",
        "bl3",
        "hi",
        "hi",
        "ah2",
        "bh3",
        "lo",
        "lo",
        "al1",
        "bl4",
        "mid",
        "mid",
        "al1",
        "bh4",
        "mid",
        "mid",
        "ah1",
        "bl4",
        "hi",
        "hi",
        "ah1",
        "bh4",
        "lo",
        "lo",
        "al0",
        "bl5",
        "mid",
        "mid",
        "al0",
        "bh5",
        "mid",
        "mid",
        "ah0",
        "bl5",
        "hi",
        "hi",
        "ah0",
        "bh5",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w5",
        "w5",
        "lo",
        "al6",
        "bl0",
        "mid",
        "al6",
        "bh0",
        "mid",
        "mid",
        "ah6",
        "bl0",
        "hi",
        "ah6",
        "bh0",
        "lo",
        "lo",
        "al5",
        "bl1",
        "mid",
        "mid",
        "al5",
        "bh1",
        "mid",
        "mid",
        "ah5",
        "bl1",
        "hi",
        "hi",
        "ah5",
        "bh1",
        "lo",
        "lo",
        "al4",
        "bl2",
        "mid",
        "mid",
        "al4",
        "bh2",
        "mid",
        "mid",
        "ah4",
        "bl2",
        "hi",
        "hi",
        "ah4",
        "bh2",
        "lo",
        "lo",
        "al3",
        "bl3",
        "mid",
        "mid",
        "al3",
        "bh3",
        "mid",
        "mid",
        "ah3",
        "bl3",
        "hi",
        "hi",
        "ah3",
        "bh3",
        "lo",
        "lo",
        "al2",
        "bl4",
        "mid",
        "mid",
        "al2",
        "bh4",
        "mid",
        "mid",
        "ah2",
        "bl4",
        "hi",
        "hi",
        "ah2",
        "bh4",
        "lo",
        "lo",
        "al1",
        "bl5",
        "mid",
        "mid",
        "al1",
        "bh5",
        "mid",
        "mid",
        "ah1",
        "bl5",
        "hi",
        "hi",
        "ah1",
        "bh5",
        "lo",
        "lo",
        "al0",
        "bl6",
        "mid",
        "mid",
        "al0",
        "bh6",
        "mid",
        "mid",
        "ah0",
        "bl6",
        "hi",
        "hi",
        "ah0",
        "bh6",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w6",
        "w6",
        "lo",
        "al7",
        "bl0",
        "mid",
        "al7",
        "bh0",
        "mid",
        "mid",
        "ah7",
        "bl0",
        "hi",
        "ah7",
        "bh0",
        "lo",
        "lo",
        "al6",
        "bl1",
        "mid",
        "mid",
        "al6",
        "bh1",
        "mid",
        "mid",
        "ah6",
        "bl1",
        "hi",
        "hi",
        "ah6",
        "bh1",
        "lo",
        "lo",
        "al5",
        "bl2",
        "mid",
        "mid",
        "al5",
        "bh2",
        "mid",
        "mid",
        "ah5",
        "bl2",
        "hi",
        "hi",
        "ah5",
        "bh2",
        "lo",
        "lo",
        "al4",
        "bl3",
        "mid",
        "mid",
        "al4",
        "bh3",
        "mid",
        "mid",
        "ah4",
        "bl3",
        "hi",
        "hi",
        "ah4",
        "bh3",
        "lo",
        "lo",
        "al3",
        "bl4",
        "mid",
        "mid",
        "al3",
        "bh4",
        "mid",
        "mid",
        "ah3",
        "bl4",
        "hi",
        "hi",
        "ah3",
        "bh4",
        "lo",
        "lo",
        "al2",
        "bl5",
        "mid",
        "mid",
        "al2",
        "bh5",
        "mid",
        "mid",
        "ah2",
        "bl5",
        "hi",
        "hi",
        "ah2",
        "bh5",
        "lo",
        "lo",
        "al1",
        "bl6",
        "mid",
        "mid",
        "al1",
        "bh6",
        "mid",
        "mid",
        "ah1",
        "bl6",
        "hi",
        "hi",
        "ah1",
        "bh6",
        "lo",
        "lo",
        "al0",
        "bl7",
        "mid",
        "mid",
        "al0",
        "bh7",
        "mid",
        "mid",
        "ah0",
        "bl7",
        "hi",
        "hi",
        "ah0",
        "bh7",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w7",
        "w7",
        "lo",
        "al8",
        "bl0",
        "mid",
        "al8",
        "bh0",
        "mid",
        "mid",
        "ah8",
        "bl0",
        "hi",
        "ah8",
        "bh0",
        "lo",
        "lo",
        "al7",
        "bl1",
        "mid",
        "mid",
        "al7",
        "bh1",
        "mid",
        "mid",
        "ah7",
        "bl1",
        "hi",
        "hi",
        "ah7",
        "bh1",
        "lo",
        "lo",
        "al6",
        "bl2",
        "mid",
        "mid",
        "al6",
        "bh2",
        "mid",
        "mid",
        "ah6",
        "bl2",
        "hi",
        "hi",
        "ah6",
        "bh2",
        "lo",
        "lo",
        "al5",
        "bl3",
        "mid",
        "mid",
        "al5",
        "bh3",
        "mid",
        "mid",
        "ah5",
        "bl3",
        "hi",
        "hi",
        "ah5",
        "bh3",
        "lo",
        "lo",
        "al4",
        "bl4",
        "mid",
        "mid",
        "al4",
        "bh4",
        "mid",
        "mid",
        "ah4",
        "bl4",
        "hi",
        "hi",
        "ah4",
        "bh4",
        "lo",
        "lo",
        "al3",
        "bl5",
        "mid",
        "mid",
        "al3",
        "bh5",
        "mid",
        "mid",
        "ah3",
        "bl5",
        "hi",
        "hi",
        "ah3",
        "bh5",
        "lo",
        "lo",
        "al2",
        "bl6",
        "mid",
        "mid",
        "al2",
        "bh6",
        "mid",
        "mid",
        "ah2",
        "bl6",
        "hi",
        "hi",
        "ah2",
        "bh6",
        "lo",
        "lo",
        "al1",
        "bl7",
        "mid",
        "mid",
        "al1",
        "bh7",
        "mid",
        "mid",
        "ah1",
        "bl7",
        "hi",
        "hi",
        "ah1",
        "bh7",
        "lo",
        "lo",
        "al0",
        "bl8",
        "mid",
        "mid",
        "al0",
        "bh8",
        "mid",
        "mid",
        "ah0",
        "bl8",
        "hi",
        "hi",
        "ah0",
        "bh8",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w8",
        "w8",
        "lo",
        "al9",
        "bl0",
        "mid",
        "al9",
        "bh0",
        "mid",
        "mid",
        "ah9",
        "bl0",
        "hi",
        "ah9",
        "bh0",
        "lo",
        "lo",
        "al8",
        "bl1",
        "mid",
        "mid",
        "al8",
        "bh1",
        "mid",
        "mid",
        "ah8",
        "bl1",
        "hi",
        "hi",
        "ah8",
        "bh1",
        "lo",
        "lo",
        "al7",
        "bl2",
        "mid",
        "mid",
        "al7",
        "bh2",
        "mid",
        "mid",
        "ah7",
        "bl2",
        "hi",
        "hi",
        "ah7",
        "bh2",
        "lo",
        "lo",
        "al6",
        "bl3",
        "mid",
        "mid",
        "al6",
        "bh3",
        "mid",
        "mid",
        "ah6",
        "bl3",
        "hi",
        "hi",
        "ah6",
        "bh3",
        "lo",
        "lo",
        "al5",
        "bl4",
        "mid",
        "mid",
        "al5",
        "bh4",
        "mid",
        "mid",
        "ah5",
        "bl4",
        "hi",
        "hi",
        "ah5",
        "bh4",
        "lo",
        "lo",
        "al4",
        "bl5",
        "mid",
        "mid",
        "al4",
        "bh5",
        "mid",
        "mid",
        "ah4",
        "bl5",
        "hi",
        "hi",
        "ah4",
        "bh5",
        "lo",
        "lo",
        "al3",
        "bl6",
        "mid",
        "mid",
        "al3",
        "bh6",
        "mid",
        "mid",
        "ah3",
        "bl6",
        "hi",
        "hi",
        "ah3",
        "bh6",
        "lo",
        "lo",
        "al2",
        "bl7",
        "mid",
        "mid",
        "al2",
        "bh7",
        "mid",
        "mid",
        "ah2",
        "bl7",
        "hi",
        "hi",
        "ah2",
        "bh7",
        "lo",
        "lo",
        "al1",
        "bl8",
        "mid",
        "mid",
        "al1",
        "bh8",
        "mid",
        "mid",
        "ah1",
        "bl8",
        "hi",
        "hi",
        "ah1",
        "bh8",
        "lo",
        "lo",
        "al0",
        "bl9",
        "mid",
        "mid",
        "al0",
        "bh9",
        "mid",
        "mid",
        "ah0",
        "bl9",
        "hi",
        "hi",
        "ah0",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w9",
        "w9",
        "lo",
        "al9",
        "bl1",
        "mid",
        "al9",
        "bh1",
        "mid",
        "mid",
        "ah9",
        "bl1",
        "hi",
        "ah9",
        "bh1",
        "lo",
        "lo",
        "al8",
        "bl2",
        "mid",
        "mid",
        "al8",
        "bh2",
        "mid",
        "mid",
        "ah8",
        "bl2",
        "hi",
        "hi",
        "ah8",
        "bh2",
        "lo",
        "lo",
        "al7",
        "bl3",
        "mid",
        "mid",
        "al7",
        "bh3",
        "mid",
        "mid",
        "ah7",
        "bl3",
        "hi",
        "hi",
        "ah7",
        "bh3",
        "lo",
        "lo",
        "al6",
        "bl4",
        "mid",
        "mid",
        "al6",
        "bh4",
        "mid",
        "mid",
        "ah6",
        "bl4",
        "hi",
        "hi",
        "ah6",
        "bh4",
        "lo",
        "lo",
        "al5",
        "bl5",
        "mid",
        "mid",
        "al5",
        "bh5",
        "mid",
        "mid",
        "ah5",
        "bl5",
        "hi",
        "hi",
        "ah5",
        "bh5",
        "lo",
        "lo",
        "al4",
        "bl6",
        "mid",
        "mid",
        "al4",
        "bh6",
        "mid",
        "mid",
        "ah4",
        "bl6",
        "hi",
        "hi",
        "ah4",
        "bh6",
        "lo",
        "lo",
        "al3",
        "bl7",
        "mid",
        "mid",
        "al3",
        "bh7",
        "mid",
        "mid",
        "ah3",
        "bl7",
        "hi",
        "hi",
        "ah3",
        "bh7",
        "lo",
        "lo",
        "al2",
        "bl8",
        "mid",
        "mid",
        "al2",
        "bh8",
        "mid",
        "mid",
        "ah2",
        "bl8",
        "hi",
        "hi",
        "ah2",
        "bh8",
        "lo",
        "lo",
        "al1",
        "bl9",
        "mid",
        "mid",
        "al1",
        "bh9",
        "mid",
        "mid",
        "ah1",
        "bl9",
        "hi",
        "hi",
        "ah1",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w10",
        "w10",
        "lo",
        "al9",
        "bl2",
        "mid",
        "al9",
        "bh2",
        "mid",
        "mid",
        "ah9",
        "bl2",
        "hi",
        "ah9",
        "bh2",
        "lo",
        "lo",
        "al8",
        "bl3",
        "mid",
        "mid",
        "al8",
        "bh3",
        "mid",
        "mid",
        "ah8",
        "bl3",
        "hi",
        "hi",
        "ah8",
        "bh3",
        "lo",
        "lo",
        "al7",
        "bl4",
        "mid",
        "mid",
        "al7",
        "bh4",
        "mid",
        "mid",
        "ah7",
        "bl4",
        "hi",
        "hi",
        "ah7",
        "bh4",
        "lo",
        "lo",
        "al6",
        "bl5",
        "mid",
        "mid",
        "al6",
        "bh5",
        "mid",
        "mid",
        "ah6",
        "bl5",
        "hi",
        "hi",
        "ah6",
        "bh5",
        "lo",
        "lo",
        "al5",
        "bl6",
        "mid",
        "mid",
        "al5",
        "bh6",
        "mid",
        "mid",
        "ah5",
        "bl6",
        "hi",
        "hi",
        "ah5",
        "bh6",
        "lo",
        "lo",
        "al4",
        "bl7",
        "mid",
        "mid",
        "al4",
        "bh7",
        "mid",
        "mid",
        "ah4",
        "bl7",
        "hi",
        "hi",
        "ah4",
        "bh7",
        "lo",
        "lo",
        "al3",
        "bl8",
        "mid",
        "mid",
        "al3",
        "bh8",
        "mid",
        "mid",
        "ah3",
        "bl8",
        "hi",
        "hi",
        "ah3",
        "bh8",
        "lo",
        "lo",
        "al2",
        "bl9",
        "mid",
        "mid",
        "al2",
        "bh9",
        "mid",
        "mid",
        "ah2",
        "bl9",
        "hi",
        "hi",
        "ah2",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w11",
        "w11",
        "lo",
        "al9",
        "bl3",
        "mid",
        "al9",
        "bh3",
        "mid",
        "mid",
        "ah9",
        "bl3",
        "hi",
        "ah9",
        "bh3",
        "lo",
        "lo",
        "al8",
        "bl4",
        "mid",
        "mid",
        "al8",
        "bh4",
        "mid",
        "mid",
        "ah8",
        "bl4",
        "hi",
        "hi",
        "ah8",
        "bh4",
        "lo",
        "lo",
        "al7",
        "bl5",
        "mid",
        "mid",
        "al7",
        "bh5",
        "mid",
        "mid",
        "ah7",
        "bl5",
        "hi",
        "hi",
        "ah7",
        "bh5",
        "lo",
        "lo",
        "al6",
        "bl6",
        "mid",
        "mid",
        "al6",
        "bh6",
        "mid",
        "mid",
        "ah6",
        "bl6",
        "hi",
        "hi",
        "ah6",
        "bh6",
        "lo",
        "lo",
        "al5",
        "bl7",
        "mid",
        "mid",
        "al5",
        "bh7",
        "mid",
        "mid",
        "ah5",
        "bl7",
        "hi",
        "hi",
        "ah5",
        "bh7",
        "lo",
        "lo",
        "al4",
        "bl8",
        "mid",
        "mid",
        "al4",
        "bh8",
        "mid",
        "mid",
        "ah4",
        "bl8",
        "hi",
        "hi",
        "ah4",
        "bh8",
        "lo",
        "lo",
        "al3",
        "bl9",
        "mid",
        "mid",
        "al3",
        "bh9",
        "mid",
        "mid",
        "ah3",
        "bl9",
        "hi",
        "hi",
        "ah3",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w12",
        "w12",
        "lo",
        "al9",
        "bl4",
        "mid",
        "al9",
        "bh4",
        "mid",
        "mid",
        "ah9",
        "bl4",
        "hi",
        "ah9",
        "bh4",
        "lo",
        "lo",
        "al8",
        "bl5",
        "mid",
        "mid",
        "al8",
        "bh5",
        "mid",
        "mid",
        "ah8",
        "bl5",
        "hi",
        "hi",
        "ah8",
        "bh5",
        "lo",
        "lo",
        "al7",
        "bl6",
        "mid",
        "mid",
        "al7",
        "bh6",
        "mid",
        "mid",
        "ah7",
        "bl6",
        "hi",
        "hi",
        "ah7",
        "bh6",
        "lo",
        "lo",
        "al6",
        "bl7",
        "mid",
        "mid",
        "al6",
        "bh7",
        "mid",
        "mid",
        "ah6",
        "bl7",
        "hi",
        "hi",
        "ah6",
        "bh7",
        "lo",
        "lo",
        "al5",
        "bl8",
        "mid",
        "mid",
        "al5",
        "bh8",
        "mid",
        "mid",
        "ah5",
        "bl8",
        "hi",
        "hi",
        "ah5",
        "bh8",
        "lo",
        "lo",
        "al4",
        "bl9",
        "mid",
        "mid",
        "al4",
        "bh9",
        "mid",
        "mid",
        "ah4",
        "bl9",
        "hi",
        "hi",
        "ah4",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w13",
        "w13",
        "lo",
        "al9",
        "bl5",
        "mid",
        "al9",
        "bh5",
        "mid",
        "mid",
        "ah9",
        "bl5",
        "hi",
        "ah9",
        "bh5",
        "lo",
        "lo",
        "al8",
        "bl6",
        "mid",
        "mid",
        "al8",
        "bh6",
        "mid",
        "mid",
        "ah8",
        "bl6",
        "hi",
        "hi",
        "ah8",
        "bh6",
        "lo",
        "lo",
        "al7",
        "bl7",
        "mid",
        "mid",
        "al7",
        "bh7",
        "mid",
        "mid",
        "ah7",
        "bl7",
        "hi",
        "hi",
        "ah7",
        "bh7",
        "lo",
        "lo",
        "al6",
        "bl8",
        "mid",
        "mid",
        "al6",
        "bh8",
        "mid",
        "mid",
        "ah6",
        "bl8",
        "hi",
        "hi",
        "ah6",
        "bh8",
        "lo",
        "lo",
        "al5",
        "bl9",
        "mid",
        "mid",
        "al5",
        "bh9",
        "mid",
        "mid",
        "ah5",
        "bl9",
        "hi",
        "hi",
        "ah5",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w14",
        "w14",
        "lo",
        "al9",
        "bl6",
        "mid",
        "al9",
        "bh6",
        "mid",
        "mid",
        "ah9",
        "bl6",
        "hi",
        "ah9",
        "bh6",
        "lo",
        "lo",
        "al8",
        "bl7",
        "mid",
        "mid",
        "al8",
        "bh7",
        "mid",
        "mid",
        "ah8",
        "bl7",
        "hi",
        "hi",
        "ah8",
        "bh7",
        "lo",
        "lo",
        "al7",
        "bl8",
        "mid",
        "mid",
        "al7",
        "bh8",
        "mid",
        "mid",
        "ah7",
        "bl8",
        "hi",
        "hi",
        "ah7",
        "bh8",
        "lo",
        "lo",
        "al6",
        "bl9",
        "mid",
        "mid",
        "al6",
        "bh9",
        "mid",
        "mid",
        "ah6",
        "bl9",
        "hi",
        "hi",
        "ah6",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w15",
        "w15",
        "lo",
        "al9",
        "bl7",
        "mid",
        "al9",
        "bh7",
        "mid",
        "mid",
        "ah9",
        "bl7",
        "hi",
        "ah9",
        "bh7",
        "lo",
        "lo",
        "al8",
        "bl8",
        "mid",
        "mid",
        "al8",
        "bh8",
        "mid",
        "mid",
        "ah8",
        "bl8",
        "hi",
        "hi",
        "ah8",
        "bh8",
        "lo",
        "lo",
        "al7",
        "bl9",
        "mid",
        "mid",
        "al7",
        "bh9",
        "mid",
        "mid",
        "ah7",
        "bl9",
        "hi",
        "hi",
        "ah7",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w16",
        "w16",
        "lo",
        "al9",
        "bl8",
        "mid",
        "al9",
        "bh8",
        "mid",
        "mid",
        "ah9",
        "bl8",
        "hi",
        "ah9",
        "bh8",
        "lo",
        "lo",
        "al8",
        "bl9",
        "mid",
        "mid",
        "al8",
        "bh9",
        "mid",
        "mid",
        "ah8",
        "bl9",
        "hi",
        "hi",
        "ah8",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w17",
        "w17",
        "lo",
        "al9",
        "bl9",
        "mid",
        "al9",
        "bh9",
        "mid",
        "mid",
        "ah9",
        "bl9",
        "hi",
        "ah9",
        "bh9",
        "c",
        "lo",
        "mid",
        "c",
        "hi",
        "mid",
        "w18",
        "w18",
        "o",
        "w0",
        "o",
        "w1",
        "o",
        "w2",
        "o",
        "w3",
        "o",
        "w4",
        "o",
        "w5",
        "o",
        "w6",
        "o",
        "w7",
        "o",
        "w8",
        "o",
        "w9",
        "o",
        "w10",
        "o",
        "w11",
        "o",
        "w12",
        "o",
        "w13",
        "o",
        "w14",
        "o",
        "w15",
        "o",
        "w16",
        "o",
        "w17",
        "o",
        "w18",
        "c",
        "o",
        "c",
        "comb10MulTo",
        "smallMulTo",
        "num",
        "num",
        "num",
        "k",
        "k",
        "hncarry",
        "carry",
        "k",
        "num",
        "k",
        "j",
        "maxJ",
        "j",
        "k",
        "j",
        "i",
        "num",
        "j",
        "a",
        "b",
        "r",
        "ncarry",
        "ncarry",
        "r",
        "lo",
        "lo",
        "rword",
        "rword",
        "lo",
        "ncarry",
        "ncarry",
        "lo",
        "hncarry",
        "ncarry",
        "ncarry",
        "k",
        "rword",
        "carry",
        "ncarry",
        "ncarry",
        "hncarry",
        "carry",
        "k",
        "carry",
        "num",
        "FFTM",
        "fftm",
        "num",
        "BN",
        "mulTo",
        "num",
        "num",
        "num",
        "res",
        "comb10MulTo",
        "num",
        "len",
        "res",
        "smallMulTo",
        "num",
        "len",
        "res",
        "bigMulTo",
        "num",
        "res",
        "jumboMulTo",
        "num",
        "res",
        "x",
        "y",
        "x",
        "y",
        "FFTM",
        "makeRBT",
        "N",
        "N",
        "BN",
        "N",
        "i",
        "N",
        "i",
        "t",
        "i",
        "i",
        "l",
        "N",
        "t",
        "FFTM",
        "revBin",
        "x",
        "l",
        "N",
        "x",
        "x",
        "N",
        "x",
        "i",
        "l",
        "i",
        "rb",
        "x",
        "l",
        "i",
        "x",
        "rb",
        "FFTM",
        "permute",
        "rbt",
        "rws",
        "iws",
        "rtws",
        "itws",
        "N",
        "i",
        "N",
        "i",
        "rtws",
        "i",
        "rws",
        "rbt",
        "i",
        "itws",
        "i",
        "iws",
        "rbt",
        "i",
        "FFTM",
        "transform",
        "rws",
        "iws",
        "rtws",
        "itws",
        "N",
        "rbt",
        "rbt",
        "rws",
        "iws",
        "rtws",
        "itws",
        "N",
        "s",
        "N",
        "s",
        "s",
        "l",
        "l",
        "p",
        "N",
        "p",
        "l",
        "j",
        "s",
        "j",
        "rtws",
        "p",
        "j",
        "itws",
        "p",
        "j",
        "rtws",
        "p",
        "j",
        "s",
        "itws",
        "p",
        "j",
        "s",
        "rtwdf_",
        "ro",
        "itwdf_",
        "io",
        "io",
        "rtwdf_",
        "io",
        "itwdf_",
        "ro",
        "ro",
        "rx",
        "rtws",
        "p",
        "j",
        "re",
        "ro",
        "itws",
        "p",
        "j",
        "ie",
        "io",
        "rtws",
        "p",
        "j",
        "s",
        "re",
        "ro",
        "itws",
        "p",
        "j",
        "s",
        "ie",
        "io",
        "j",
        "l",
        "rx",
        "rtwdf",
        "rtwdf_",
        "itwdf",
        "itwdf_",
        "itwdf_",
        "rtwdf",
        "itwdf_",
        "itwdf",
        "rtwdf_",
        "rtwdf_",
        "rx",
        "FFTM",
        "guessLen13b",
        "n",
        "m",
        "m",
        "n",
        "N",
        "N",
        "N",
        "N",
        "N",
        "N",
        "i",
        "i",
        "odd",
        "FFTM",
        "conjugate",
        "rws",
        "iws",
        "N",
        "N",
        "i",
        "N",
        "i",
        "rws",
        "i",
        "rws",
        "i",
        "rws",
        "N",
        "i",
        "rws",
        "N",
        "i",
        "t",
        "t",
        "iws",
        "i",
        "iws",
        "i",
        "iws",
        "N",
        "i",
        "iws",
        "N",
        "i",
        "t",
        "FFTM",
        "normalize13b",
        "ws",
        "N",
        "i",
        "N",
        "i",
        "ws",
        "i",
        "N",
        "ws",
        "i",
        "N",
        "carry",
        "ws",
        "i",
        "w",
        "w",
        "carry",
        "carry",
        "w",
        "ws",
        "FFTM",
        "convert13b",
        "ws",
        "len",
        "rws",
        "N",
        "i",
        "len",
        "i",
        "carry",
        "carry",
        "ws",
        "i",
        "rws",
        "i",
        "carry",
        "carry",
        "carry",
        "rws",
        "i",
        "carry",
        "carry",
        "carry",
        "i",
        "len",
        "i",
        "N",
        "i",
        "rws",
        "i",
        "carry",
        "carry",
        "FFTM",
        "stub",
        "N",
        "N",
        "i",
        "N",
        "i",
        "ph",
        "i",
        "ph",
        "FFTM",
        "mulp",
        "x",
        "y",
        "x",
        "y",
        "N",
        "N",
        "N",
        "N",
        "N",
        "N",
        "N",
        "N",
        "rmws",
        "N",
        "x",
        "x",
        "rws",
        "N",
        "y",
        "y",
        "nrws",
        "N",
        "rws",
        "_",
        "rwst",
        "iwst",
        "N",
        "rbt",
        "nrws",
        "_",
        "nrwst",
        "niwst",
        "N",
        "rbt",
        "i",
        "N",
        "i",
        "rwst",
        "i",
        "nrwst",
        "i",
        "iwst",
        "i",
        "niwst",
        "i",
        "iwst",
        "i",
        "rwst",
        "i",
        "niwst",
        "i",
        "iwst",
        "i",
        "nrwst",
        "i",
        "rwst",
        "i",
        "rx",
        "rwst",
        "iwst",
        "N",
        "rwst",
        "iwst",
        "rmws",
        "_",
        "N",
        "rbt",
        "rmws",
        "_",
        "N",
        "rmws",
        "N",
        "x",
        "y",
        "x",
        "y",
        "BN",
        "mul",
        "num",
        "BN",
        "num",
        "num",
        "BN",
        "mulf",
        "num",
        "BN",
        "num",
        "jumboMulTo",
        "num",
        "BN",
        "imul",
        "num",
        "num",
        "BN",
        "imuln",
        "num",
        "num",
        "num",
        "i",
        "i",
        "i",
        "num",
        "w",
        "carry",
        "carry",
        "carry",
        "w",
        "carry",
        "lo",
        "i",
        "lo",
        "carry",
        "i",
        "carry",
        "BN",
        "muln",
        "num",
        "num",
        "BN",
        "sqr",
        "BN",
        "isqr",
        "BN",
        "pow",
        "num",
        "toBitArray",
        "num",
        "w",
        "BN",
        "i",
        "w",
        "i",
        "res",
        "res",
        "w",
        "i",
        "i",
        "w",
        "res",
        "i",
        "w",
        "i",
        "q",
        "q",
        "w",
        "i",
        "res",
        "res",
        "q",
        "res",
        "BN",
        "iushln",
        "bits",
        "bits",
        "bits",
        "bits",
        "bits",
        "r",
        "r",
        "r",
        "r",
        "i",
        "i",
        "i",
        "i",
        "carryMask",
        "i",
        "newCarry",
        "r",
        "i",
        "c",
        "carry",
        "carry",
        "newCarry",
        "r",
        "carry",
        "i",
        "carry",
        "s",
        "i",
        "i",
        "i",
        "i",
        "s",
        "i",
        "i",
        "i",
        "s",
        "i",
        "i",
        "s",
        "BN",
        "ishln",
        "bits",
        "bits",
        "BN",
        "iushrn",
        "bits",
        "hint",
        "extended",
        "bits",
        "bits",
        "hint",
        "h",
        "hint",
        "hint",
        "h",
        "bits",
        "bits",
        "r",
        "r",
        "r",
        "h",
        "s",
        "h",
        "h",
        "maskedWords",
        "i",
        "s",
        "i",
        "maskedWords",
        "i",
        "i",
        "maskedWords",
        "s",
        "s",
        "s",
        "s",
        "i",
        "i",
        "i",
        "i",
        "i",
        "s",
        "i",
        "i",
        "carry",
        "i",
        "h",
        "i",
        "i",
        "i",
        "carry",
        "r",
        "word",
        "r",
        "carry",
        "word",
        "mask",
        "maskedWords",
        "carry",
        "maskedWords",
        "maskedWords",
        "carry",
        "BN",
        "ishrn",
        "bits",
        "hint",
        "extended",
        "bits",
        "hint",
        "extended",
        "BN",
        "shln",
        "bits",
        "bits",
        "BN",
        "ushln",
        "bits",
        "bits",
        "BN",
        "shrn",
        "bits",
        "bits",
        "BN",
        "ushrn",
        "bits",
        "bits",
        "BN",
        "testn",
        "bit",
        "bit",
        "bit",
        "bit",
        "bit",
        "r",
        "r",
        "s",
        "s",
        "w",
        "q",
        "BN",
        "imaskn",
        "bits",
        "bits",
        "bits",
        "bits",
        "bits",
        "r",
        "s",
        "r",
        "s",
        "s",
        "r",
        "r",
        "r",
        "mask",
        "BN",
        "maskn",
        "bits",
        "bits",
        "BN",
        "iaddn",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "BN",
        "_iaddn",
        "num",
        "num",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "BN",
        "isubn",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "i",
        "i",
        "i",
        "i",
        "i",
        "BN",
        "addn",
        "num",
        "num",
        "BN",
        "subn",
        "num",
        "num",
        "BN",
        "iabs",
        "BN",
        "abs",
        "BN",
        "_ishlnsubmul",
        "num",
        "mul",
        "shift",
        "num",
        "shift",
        "len",
        "i",
        "i",
        "num",
        "i",
        "w",
        "i",
        "shift",
        "carry",
        "num",
        "i",
        "mul",
        "w",
        "right",
        "carry",
        "w",
        "right",
        "i",
        "shift",
        "w",
        "i",
        "shift",
        "i",
        "w",
        "i",
        "shift",
        "carry",
        "carry",
        "w",
        "i",
        "shift",
        "w",
        "carry",
        "carry",
        "carry",
        "i",
        "i",
        "i",
        "w",
        "i",
        "carry",
        "carry",
        "w",
        "i",
        "w",
        "BN",
        "_wordDiv",
        "num",
        "mode",
        "num",
        "b",
        "b",
        "bhi",
        "shift",
        "bhiBits",
        "shift",
        "b",
        "b",
        "shift",
        "a",
        "shift",
        "bhi",
        "b",
        "b",
        "a",
        "b",
        "mode",
        "q",
        "BN",
        "q",
        "m",
        "q",
        "q",
        "i",
        "q",
        "i",
        "q",
        "i",
        "a",
        "b",
        "m",
        "diff",
        "a",
        "diff",
        "q",
        "q",
        "m",
        "m",
        "j",
        "j",
        "a",
        "b",
        "j",
        "a",
        "b",
        "j",
        "qj",
        "qj",
        "bhi",
        "a",
        "b",
        "qj",
        "j",
        "a",
        "qj",
        "a",
        "a",
        "b",
        "j",
        "a",
        "a",
        "q",
        "q",
        "j",
        "qj",
        "q",
        "q",
        "a",
        "mode",
        "shift",
        "a",
        "shift",
        "q",
        "a",
        "BN",
        "divmod",
        "num",
        "mode",
        "positive",
        "num",
        "BN",
        "BN",
        "num",
        "res",
        "num",
        "mode",
        "mode",
        "div",
        "res",
        "mode",
        "mod",
        "res",
        "positive",
        "mod",
        "mod",
        "num",
        "div",
        "mod",
        "num",
        "res",
        "num",
        "mode",
        "mode",
        "div",
        "res",
        "div",
        "res",
        "num",
        "res",
        "num",
        "mode",
        "mode",
        "mod",
        "res",
        "positive",
        "mod",
        "mod",
        "num",
        "res",
        "mod",
        "num",
        "num",
        "BN",
        "num",
        "mode",
        "num",
        "mode",
        "BN",
        "num",
        "num",
        "BN",
        "num",
        "num",
        "mode",
        "BN",
        "div",
        "num",
        "num",
        "BN",
        "mod",
        "num",
        "num",
        "BN",
        "umod",
        "num",
        "num",
        "BN",
        "divRound",
        "num",
        "num",
        "dm",
        "dm",
        "dm",
        "dm",
        "num",
        "dm",
        "num",
        "num",
        "mod",
        "half",
        "cmp",
        "r2",
        "cmp",
        "dm",
        "dm",
        "dm",
        "dm",
        "BN",
        "modn",
        "num",
        "num",
        "num",
        "i",
        "i",
        "acc",
        "p",
        "acc",
        "i",
        "num",
        "acc",
        "BN",
        "idivn",
        "num",
        "num",
        "i",
        "i",
        "i",
        "carry",
        "i",
        "w",
        "num",
        "carry",
        "w",
        "num",
        "BN",
        "divn",
        "num",
        "num",
        "BN",
        "egcd",
        "p",
        "p",
        "p",
        "p",
        "x",
        "x",
        "x",
        "p",
        "x",
        "x",
        "BN",
        "BN",
        "BN",
        "BN",
        "x",
        "y",
        "x",
        "y",
        "g",
        "y",
        "x",
        "x",
        "x",
        "im",
        "i",
        "i",
        "im",
        "i",
        "x",
        "i",
        "i",
        "A",
        "B",
        "A",
        "yp",
        "B",
        "xp",
        "A",
        "B",
        "y",
        "jm",
        "j",
        "j",
        "jm",
        "j",
        "y",
        "j",
        "j",
        "C",
        "D",
        "C",
        "yp",
        "D",
        "xp",
        "C",
        "D",
        "x",
        "y",
        "x",
        "y",
        "A",
        "C",
        "B",
        "D",
        "y",
        "x",
        "C",
        "A",
        "D",
        "B",
        "C",
        "D",
        "y",
        "g",
        "BN",
        "_invmp",
        "p",
        "p",
        "p",
        "p",
        "a",
        "a",
        "a",
        "p",
        "a",
        "a",
        "BN",
        "BN",
        "b",
        "a",
        "b",
        "a",
        "im",
        "i",
        "i",
        "im",
        "i",
        "a",
        "i",
        "i",
        "x1",
        "x1",
        "delta",
        "x1",
        "b",
        "jm",
        "j",
        "j",
        "jm",
        "j",
        "b",
        "j",
        "j",
        "x2",
        "x2",
        "delta",
        "x2",
        "a",
        "b",
        "a",
        "b",
        "x1",
        "x2",
        "b",
        "a",
        "x2",
        "x1",
        "a",
        "res",
        "x1",
        "res",
        "x2",
        "res",
        "res",
        "p",
        "res",
        "BN",
        "gcd",
        "num",
        "num",
        "num",
        "num",
        "a",
        "b",
        "a",
        "b",
        "shift",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "b",
        "r",
        "a",
        "b",
        "b",
        "t",
        "r",
        "b",
        "a",
        "b",
        "b",
        "shift",
        "BN",
        "invm",
        "num",
        "num",
        "num",
        "BN",
        "isEven",
        "BN",
        "isOdd",
        "BN",
        "andln",
        "num",
        "num",
        "BN",
        "bincn",
        "bit",
        "bit",
        "bit",
        "bit",
        "r",
        "r",
        "s",
        "s",
        "s",
        "q",
        "carry",
        "i",
        "i",
        "i",
        "w",
        "carry",
        "carry",
        "w",
        "w",
        "i",
        "w",
        "carry",
        "i",
        "carry",
        "BN",
        "isZero",
        "BN",
        "cmpn",
        "num",
        "num",
        "negative",
        "negative",
        "res",
        "negative",
        "num",
        "num",
        "num",
        "res",
        "w",
        "num",
        "w",
        "num",
        "res",
        "res",
        "BN",
        "cmp",
        "num",
        "num",
        "num",
        "num",
        "res",
        "res",
        "BN",
        "ucmp",
        "num",
        "num",
        "num",
        "i",
        "i",
        "i",
        "num",
        "i",
        "a",
        "b",
        "a",
        "b",
        "res",
        "a",
        "b",
        "res",
        "res",
        "BN",
        "gtn",
        "num",
        "num",
        "BN",
        "gt",
        "num",
        "num",
        "BN",
        "gten",
        "num",
        "num",
        "BN",
        "gte",
        "num",
        "num",
        "BN",
        "ltn",
        "num",
        "num",
        "BN",
        "lt",
        "num",
        "num",
        "BN",
        "lten",
        "num",
        "num",
        "BN",
        "lte",
        "num",
        "num",
        "BN",
        "eqn",
        "num",
        "num",
        "BN",
        "eq",
        "num",
        "num",
        "BN",
        "red",
        "num",
        "Red",
        "num",
        "BN",
        "toRed",
        "ctx",
        "ctx",
        "ctx",
        "BN",
        "fromRed",
        "BN",
        "_forceRed",
        "ctx",
        "ctx",
        "BN",
        "forceRed",
        "ctx",
        "ctx",
        "BN",
        "redAdd",
        "num",
        "num",
        "BN",
        "redIAdd",
        "num",
        "num",
        "BN",
        "redSub",
        "num",
        "num",
        "BN",
        "redISub",
        "num",
        "num",
        "BN",
        "redShl",
        "num",
        "num",
        "BN",
        "redMul",
        "num",
        "num",
        "num",
        "BN",
        "redIMul",
        "num",
        "num",
        "num",
        "BN",
        "redSqr",
        "BN",
        "redISqr",
        "BN",
        "redSqrt",
        "BN",
        "redInvm",
        "BN",
        "redNeg",
        "BN",
        "redPow",
        "num",
        "num",
        "num",
        "name",
        "p",
        "name",
        "BN",
        "p",
        "BN",
        "MPrime",
        "_tmp",
        "BN",
        "tmp",
        "tmp",
        "MPrime",
        "ireduce",
        "num",
        "r",
        "r",
        "r",
        "r",
        "r",
        "rlen",
        "r",
        "rlen",
        "rlen",
        "r",
        "cmp",
        "r",
        "r",
        "cmp",
        "r",
        "r",
        "r",
        "MPrime",
        "split",
        "input",
        "input",
        "MPrime",
        "imulK",
        "num",
        "num",
        "MPrime",
        "inherits",
        "K256",
        "MPrime",
        "K256",
        "split",
        "input",
        "output",
        "input",
        "i",
        "outLen",
        "i",
        "output",
        "i",
        "input",
        "i",
        "output",
        "outLen",
        "input",
        "input",
        "input",
        "input",
        "output",
        "output",
        "prev",
        "mask",
        "i",
        "i",
        "input",
        "i",
        "input",
        "i",
        "input",
        "i",
        "next",
        "mask",
        "prev",
        "prev",
        "next",
        "prev",
        "input",
        "i",
        "prev",
        "prev",
        "input",
        "input",
        "input",
        "K256",
        "imulK",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "i",
        "num",
        "i",
        "num",
        "i",
        "lo",
        "w",
        "num",
        "i",
        "lo",
        "lo",
        "w",
        "lo",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "MPrime",
        "inherits",
        "P224",
        "MPrime",
        "MPrime",
        "inherits",
        "P192",
        "MPrime",
        "MPrime",
        "inherits",
        "P25519",
        "MPrime",
        "P25519",
        "imulK",
        "num",
        "i",
        "num",
        "i",
        "num",
        "i",
        "carry",
        "hi",
        "hi",
        "num",
        "i",
        "lo",
        "carry",
        "hi",
        "carry",
        "num",
        "num",
        "carry",
        "num",
        "BN",
        "prime",
        "name",
        "primes",
        "name",
        "primes",
        "name",
        "name",
        "prime",
        "K256",
        "name",
        "prime",
        "P224",
        "name",
        "prime",
        "P192",
        "name",
        "prime",
        "P25519",
        "name",
        "primes",
        "name",
        "prime",
        "prime",
        "m",
        "m",
        "BN",
        "m",
        "prime",
        "prime",
        "m",
        "m",
        "Red",
        "_verify1",
        "a",
        "a",
        "a",
        "Red",
        "_verify2",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "Red",
        "imod",
        "a",
        "a",
        "a",
        "Red",
        "neg",
        "a",
        "a",
        "a",
        "a",
        "Red",
        "add",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "res",
        "res",
        "res",
        "Red",
        "iadd",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "res",
        "res",
        "res",
        "Red",
        "sub",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "res",
        "res",
        "res",
        "Red",
        "isub",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "res",
        "res",
        "res",
        "Red",
        "shl",
        "a",
        "num",
        "a",
        "a",
        "num",
        "Red",
        "imul",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "Red",
        "mul",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "Red",
        "isqr",
        "a",
        "a",
        "a",
        "Red",
        "sqr",
        "a",
        "a",
        "a",
        "Red",
        "sqrt",
        "a",
        "a",
        "a",
        "mod3",
        "mod3",
        "BN",
        "a",
        "pow",
        "q",
        "q",
        "s",
        "q",
        "q",
        "BN",
        "one",
        "z",
        "BN",
        "z",
        "z",
        "z",
        "lpow",
        "nOne",
        "z",
        "nOne",
        "z",
        "q",
        "a",
        "q",
        "a",
        "q",
        "t",
        "one",
        "tmp",
        "one",
        "i",
        "tmp",
        "tmp",
        "i",
        "m",
        "c",
        "BN",
        "m",
        "i",
        "r",
        "r",
        "b",
        "c",
        "b",
        "t",
        "t",
        "c",
        "m",
        "i",
        "r",
        "Red",
        "invm",
        "a",
        "a",
        "inv",
        "inv",
        "inv",
        "inv",
        "Red",
        "pow",
        "a",
        "num",
        "num",
        "BN",
        "num",
        "a",
        "windowSize",
        "wnd",
        "BN",
        "wnd",
        "a",
        "i",
        "wnd",
        "i",
        "wnd",
        "i",
        "wnd",
        "i",
        "a",
        "wnd",
        "num",
        "start",
        "start",
        "i",
        "num",
        "i",
        "i",
        "num",
        "i",
        "start",
        "j",
        "j",
        "word",
        "j",
        "res",
        "wnd",
        "res",
        "res",
        "bit",
        "current",
        "currentLen",
        "current",
        "current",
        "bit",
        "currentLen",
        "currentLen",
        "windowSize",
        "i",
        "j",
        "res",
        "res",
        "wnd",
        "current",
        "currentLen",
        "current",
        "start",
        "res",
        "Red",
        "convertTo",
        "num",
        "num",
        "r",
        "num",
        "r",
        "r",
        "Red",
        "convertFrom",
        "num",
        "num",
        "res",
        "res",
        "BN",
        "mont",
        "num",
        "Mont",
        "num",
        "m",
        "Red",
        "m",
        "BN",
        "inherits",
        "Mont",
        "Red",
        "Mont",
        "convertTo",
        "num",
        "num",
        "Mont",
        "convertFrom",
        "num",
        "num",
        "r",
        "r",
        "Mont",
        "imul",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "a",
        "a",
        "b",
        "t",
        "t",
        "c",
        "u",
        "res",
        "u",
        "u",
        "res",
        "u",
        "res",
        "Mont",
        "mul",
        "a",
        "b",
        "a",
        "b",
        "BN",
        "a",
        "b",
        "t",
        "t",
        "c",
        "u",
        "res",
        "u",
        "u",
        "res",
        "u",
        "res",
        "Mont",
        "invm",
        "a",
        "a",
        "res",
        "require",
        "exports",
        "rand",
        "len",
        "r",
        "r",
        "Rand",
        "r",
        "len",
        "rand",
        "rand",
        "Rand",
        "Rand",
        "generate",
        "len",
        "len",
        "Rand",
        "_rand",
        "n",
        "n",
        "Uint8Array",
        "n",
        "i",
        "res",
        "i",
        "res",
        "i",
        "res",
        "Rand",
        "_rand",
        "n",
        "Uint8Array",
        "n",
        "arr",
        "arr",
        "Rand",
        "_rand",
        "n",
        "Uint8Array",
        "n",
        "arr",
        "arr",
        "Rand",
        "require",
        "crypto",
        "Rand",
        "_rand",
        "n",
        "crypto",
        "n",
        "e",
        "require",
        "exports",
        "require",
        "basex",
        "ALPHABET",
        "require",
        "exports",
        "require",
        "require",
        "checksumFn",
        "payload",
        "checksumFn",
        "payload",
        "base58",
        "Buffer",
        "payload",
        "checksum",
        "payload",
        "buffer",
        "buffer",
        "buffer",
        "checksumFn",
        "payload",
        "checksum",
        "newChecksum",
        "checksum",
        "newChecksum",
        "checksum",
        "newChecksum",
        "checksum",
        "newChecksum",
        "payload",
        "base58",
        "buffer",
        "decodeRaw",
        "buffer",
        "base58",
        "decodeRaw",
        "buffer",
        "checksumFn",
        "payload",
        "payload",
        "encode",
        "decode",
        "decodeUnsafe",
        "require",
        "exports",
        "require",
        "require",
        "buffer",
        "createHash",
        "buffer",
        "createHash",
        "tmp",
        "bs58checkBase",
        "sha256x2",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "hashMode",
        "Transform",
        "hashMode",
        "hashMode",
        "inherits",
        "CipherBase",
        "Transform",
        "CipherBase",
        "data",
        "inputEnc",
        "outputEnc",
        "data",
        "data",
        "Buffer",
        "data",
        "inputEnc",
        "data",
        "outputEnc",
        "outData",
        "outData",
        "outputEnc",
        "outData",
        "CipherBase",
        "CipherBase",
        "CipherBase",
        "CipherBase",
        "CipherBase",
        "data",
        "_",
        "next",
        "data",
        "data",
        "e",
        "err",
        "e",
        "next",
        "err",
        "CipherBase",
        "done",
        "e",
        "err",
        "e",
        "done",
        "err",
        "CipherBase",
        "outputEnc",
        "Buffer",
        "outputEnc",
        "outData",
        "outData",
        "outputEnc",
        "outData",
        "CipherBase",
        "value",
        "enc",
        "fin",
        "StringDecoder",
        "enc",
        "enc",
        "enc",
        "value",
        "fin",
        "CipherBase",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "hash",
        "Base",
        "hash",
        "inherits",
        "Hash",
        "Base",
        "Hash",
        "data",
        "data",
        "Hash",
        "createHash",
        "alg",
        "alg",
        "alg",
        "alg",
        "MD5",
        "alg",
        "alg",
        "RIPEMD160",
        "Hash",
        "sha",
        "alg",
        "require",
        "exports",
        "require",
        "buffer",
        "MD5",
        "buffer",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "Buffer",
        "alg",
        "key",
        "Base",
        "key",
        "key",
        "Buffer",
        "key",
        "alg",
        "alg",
        "alg",
        "key",
        "key",
        "blocksize",
        "alg",
        "RIPEMD160",
        "sha",
        "alg",
        "key",
        "hash",
        "key",
        "key",
        "blocksize",
        "key",
        "Buffer",
        "key",
        "ZEROS",
        "blocksize",
        "Buffer",
        "blocksize",
        "Buffer",
        "blocksize",
        "i",
        "blocksize",
        "i",
        "ipad",
        "i",
        "key",
        "i",
        "opad",
        "i",
        "key",
        "i",
        "alg",
        "RIPEMD160",
        "sha",
        "alg",
        "ipad",
        "inherits",
        "Hmac",
        "Base",
        "Hmac",
        "data",
        "data",
        "Hmac",
        "RIPEMD160",
        "sha",
        "hash",
        "h",
        "createHmac",
        "alg",
        "key",
        "alg",
        "alg",
        "alg",
        "alg",
        "Hmac",
        "key",
        "alg",
        "Legacy",
        "md5",
        "key",
        "Hmac",
        "alg",
        "key",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "Buffer",
        "alg",
        "key",
        "Base",
        "key",
        "key",
        "Buffer",
        "key",
        "alg",
        "key",
        "key",
        "blocksize",
        "key",
        "alg",
        "key",
        "key",
        "blocksize",
        "key",
        "Buffer",
        "key",
        "ZEROS",
        "blocksize",
        "Buffer",
        "blocksize",
        "Buffer",
        "blocksize",
        "i",
        "blocksize",
        "i",
        "ipad",
        "i",
        "key",
        "i",
        "opad",
        "i",
        "key",
        "i",
        "ipad",
        "inherits",
        "Hmac",
        "Base",
        "Hmac",
        "data",
        "data",
        "Hmac",
        "Buffer",
        "Buffer",
        "h",
        "Hmac",
        "require",
        "exports",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "elliptic",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "utils",
        "utils",
        "utils",
        "conf",
        "BN",
        "conf",
        "conf",
        "BN",
        "conf",
        "BN",
        "BN",
        "BN",
        "BN",
        "conf",
        "BN",
        "conf",
        "conf",
        "conf",
        "conf",
        "adjustCount",
        "adjustCount",
        "BaseCurve",
        "BaseCurve",
        "point",
        "BaseCurve",
        "validate",
        "BaseCurve",
        "_fixedNafMul",
        "p",
        "k",
        "p",
        "p",
        "getNAF",
        "k",
        "doubles",
        "doubles",
        "I",
        "j",
        "naf",
        "j",
        "doubles",
        "j",
        "doubles",
        "k",
        "j",
        "k",
        "nafW",
        "nafW",
        "naf",
        "k",
        "repr",
        "nafW",
        "i",
        "i",
        "j",
        "repr",
        "j",
        "repr",
        "j",
        "nafW",
        "i",
        "b",
        "b",
        "doubles",
        "j",
        "nafW",
        "i",
        "b",
        "b",
        "doubles",
        "j",
        "a",
        "a",
        "b",
        "a",
        "BaseCurve",
        "_wnafMul",
        "p",
        "k",
        "p",
        "w",
        "w",
        "nafPoints",
        "nafPoints",
        "getNAF",
        "k",
        "w",
        "naf",
        "i",
        "i",
        "i",
        "naf",
        "i",
        "i",
        "k",
        "i",
        "k",
        "acc",
        "acc",
        "k",
        "i",
        "naf",
        "i",
        "z",
        "p",
        "z",
        "acc",
        "acc",
        "wnd",
        "z",
        "acc",
        "acc",
        "wnd",
        "z",
        "z",
        "acc",
        "acc",
        "wnd",
        "z",
        "acc",
        "acc",
        "wnd",
        "z",
        "p",
        "acc",
        "acc",
        "BaseCurve",
        "_wnafMulAdd",
        "defW",
        "points",
        "coeffs",
        "len",
        "jacobianResult",
        "i",
        "len",
        "i",
        "points",
        "i",
        "p",
        "defW",
        "wndWidth",
        "i",
        "nafPoints",
        "wnd",
        "i",
        "nafPoints",
        "len",
        "i",
        "i",
        "i",
        "wndWidth",
        "a",
        "wndWidth",
        "b",
        "naf",
        "a",
        "getNAF",
        "coeffs",
        "a",
        "wndWidth",
        "a",
        "naf",
        "b",
        "getNAF",
        "coeffs",
        "b",
        "wndWidth",
        "b",
        "max",
        "naf",
        "a",
        "max",
        "max",
        "naf",
        "b",
        "max",
        "points",
        "a",
        "points",
        "b",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "comb",
        "points",
        "a",
        "points",
        "b",
        "getJSF",
        "coeffs",
        "a",
        "coeffs",
        "b",
        "max",
        "jsf",
        "max",
        "naf",
        "a",
        "max",
        "naf",
        "b",
        "max",
        "j",
        "max",
        "j",
        "jsf",
        "j",
        "jsf",
        "j",
        "naf",
        "a",
        "j",
        "index",
        "ja",
        "jb",
        "naf",
        "b",
        "j",
        "wnd",
        "a",
        "comb",
        "i",
        "i",
        "i",
        "j",
        "len",
        "j",
        "tmp",
        "j",
        "naf",
        "j",
        "i",
        "tmp",
        "j",
        "zero",
        "zero",
        "k",
        "i",
        "i",
        "k",
        "acc",
        "acc",
        "k",
        "i",
        "j",
        "len",
        "j",
        "tmp",
        "j",
        "z",
        "z",
        "p",
        "wnd",
        "j",
        "z",
        "z",
        "p",
        "wnd",
        "j",
        "z",
        "p",
        "acc",
        "acc",
        "p",
        "acc",
        "acc",
        "p",
        "i",
        "len",
        "i",
        "wnd",
        "i",
        "jacobianResult",
        "acc",
        "acc",
        "curve",
        "curve",
        "BaseCurve",
        "BasePoint",
        "BasePoint",
        "eq",
        "BasePoint",
        "validate",
        "BaseCurve",
        "decodePoint",
        "enc",
        "utils",
        "enc",
        "len",
        "len",
        "len",
        "len",
        "res",
        "len",
        "len",
        "BasePoint",
        "encodeCompressed",
        "enc",
        "enc",
        "BasePoint",
        "_encode",
        "compact",
        "len",
        "compact",
        "x",
        "x",
        "len",
        "BasePoint",
        "encode",
        "enc",
        "compact",
        "utils",
        "compact",
        "enc",
        "BasePoint",
        "precompute",
        "power",
        "precomputed",
        "precomputed",
        "power",
        "precomputed",
        "precomputed",
        "BasePoint",
        "_hasDoubles",
        "k",
        "doubles",
        "doubles",
        "k",
        "doubles",
        "BasePoint",
        "_getDoubles",
        "step",
        "power",
        "i",
        "power",
        "i",
        "step",
        "j",
        "step",
        "j",
        "acc",
        "acc",
        "doubles",
        "acc",
        "step",
        "doubles",
        "BasePoint",
        "_getNAFPoints",
        "wnd",
        "wnd",
        "max",
        "i",
        "max",
        "i",
        "res",
        "i",
        "res",
        "i",
        "dbl",
        "wnd",
        "res",
        "BasePoint",
        "_getBeta",
        "BasePoint",
        "dblp",
        "k",
        "i",
        "k",
        "i",
        "r",
        "r",
        "r",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "curve",
        "elliptic",
        "conf",
        "conf",
        "conf",
        "Base",
        "conf",
        "BN",
        "conf",
        "BN",
        "conf",
        "BN",
        "conf",
        "conf",
        "inherits",
        "EdwardsCurve",
        "Base",
        "EdwardsCurve",
        "EdwardsCurve",
        "_mulA",
        "num",
        "num",
        "num",
        "EdwardsCurve",
        "_mulC",
        "num",
        "num",
        "num",
        "EdwardsCurve",
        "jpoint",
        "x",
        "y",
        "z",
        "t",
        "x",
        "y",
        "z",
        "t",
        "EdwardsCurve",
        "pointFromX",
        "x",
        "odd",
        "x",
        "BN",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x2",
        "x2",
        "rhs",
        "lhs",
        "y2",
        "y",
        "y2",
        "y",
        "odd",
        "isOdd",
        "odd",
        "isOdd",
        "y",
        "y",
        "x",
        "y",
        "EdwardsCurve",
        "pointFromY",
        "y",
        "odd",
        "y",
        "BN",
        "y",
        "y",
        "y",
        "y",
        "y",
        "y2",
        "y2",
        "lhs",
        "rhs",
        "x2",
        "odd",
        "y",
        "x2",
        "x",
        "x2",
        "x",
        "odd",
        "x",
        "x",
        "x",
        "y",
        "EdwardsCurve",
        "validate",
        "point",
        "point",
        "point",
        "point",
        "point",
        "x2",
        "y2",
        "x2",
        "y2",
        "lhs",
        "rhs",
        "curve",
        "x",
        "y",
        "z",
        "t",
        "Base",
        "curve",
        "x",
        "y",
        "z",
        "BN",
        "x",
        "BN",
        "y",
        "z",
        "BN",
        "z",
        "t",
        "BN",
        "t",
        "inherits",
        "Point",
        "Base",
        "EdwardsCurve",
        "pointFromJSON",
        "obj",
        "Point",
        "obj",
        "EdwardsCurve",
        "point",
        "x",
        "y",
        "z",
        "t",
        "Point",
        "x",
        "y",
        "z",
        "t",
        "Point",
        "fromJSON",
        "curve",
        "obj",
        "Point",
        "curve",
        "obj",
        "obj",
        "obj",
        "Point",
        "inspect",
        "Point",
        "isInfinity",
        "Point",
        "_extDbl",
        "c",
        "c",
        "c",
        "a",
        "a",
        "b",
        "d",
        "b",
        "g",
        "c",
        "d",
        "b",
        "e",
        "f",
        "g",
        "h",
        "e",
        "h",
        "f",
        "g",
        "nx",
        "ny",
        "nz",
        "nt",
        "Point",
        "_projDbl",
        "c",
        "e",
        "d",
        "nx",
        "b",
        "c",
        "d",
        "f",
        "ny",
        "f",
        "e",
        "d",
        "nz",
        "f",
        "f",
        "f",
        "f",
        "h",
        "h",
        "nx",
        "b",
        "c",
        "d",
        "j",
        "ny",
        "f",
        "e",
        "d",
        "nz",
        "f",
        "j",
        "c",
        "d",
        "e",
        "h",
        "h",
        "nx",
        "b",
        "e",
        "j",
        "ny",
        "e",
        "c",
        "d",
        "nz",
        "e",
        "j",
        "nx",
        "ny",
        "nz",
        "Point",
        "dbl",
        "Point",
        "_extAdd",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "b",
        "a",
        "d",
        "c",
        "d",
        "c",
        "b",
        "a",
        "e",
        "f",
        "g",
        "h",
        "e",
        "h",
        "f",
        "g",
        "nx",
        "ny",
        "nz",
        "nt",
        "Point",
        "_projAdd",
        "p",
        "p",
        "a",
        "p",
        "p",
        "c",
        "d",
        "b",
        "e",
        "b",
        "e",
        "p",
        "p",
        "c",
        "d",
        "a",
        "f",
        "tmp",
        "ny",
        "a",
        "g",
        "d",
        "c",
        "nz",
        "f",
        "g",
        "ny",
        "a",
        "g",
        "d",
        "c",
        "nz",
        "f",
        "g",
        "nx",
        "ny",
        "nz",
        "Point",
        "add",
        "p",
        "p",
        "p",
        "p",
        "p",
        "Point",
        "mul",
        "k",
        "k",
        "k",
        "k",
        "Point",
        "mulAdd",
        "k1",
        "p",
        "k2",
        "p",
        "k1",
        "k2",
        "Point",
        "jmulAdd",
        "k1",
        "p",
        "k2",
        "p",
        "k1",
        "k2",
        "Point",
        "normalize",
        "zi",
        "zi",
        "zi",
        "Point",
        "neg",
        "Point",
        "getX",
        "Point",
        "getY",
        "Point",
        "eq",
        "other",
        "other",
        "other",
        "other",
        "Point",
        "eqXToP",
        "x",
        "x",
        "rx",
        "x",
        "xc",
        "xc",
        "rx",
        "t",
        "rx",
        "Point",
        "Point",
        "Point",
        "Point",
        "require",
        "exports",
        "curve",
        "require",
        "curve",
        "require",
        "curve",
        "require",
        "curve",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "curve",
        "require",
        "elliptic",
        "conf",
        "Base",
        "conf",
        "BN",
        "conf",
        "BN",
        "conf",
        "BN",
        "BN",
        "inherits",
        "MontCurve",
        "Base",
        "MontCurve",
        "MontCurve",
        "validate",
        "point",
        "point",
        "x",
        "x2",
        "x",
        "x2",
        "x",
        "rhs",
        "y",
        "rhs",
        "curve",
        "x",
        "z",
        "Base",
        "curve",
        "x",
        "z",
        "BN",
        "x",
        "BN",
        "z",
        "inherits",
        "Point",
        "Base",
        "MontCurve",
        "decodePoint",
        "enc",
        "utils",
        "enc",
        "MontCurve",
        "point",
        "x",
        "z",
        "Point",
        "x",
        "z",
        "MontCurve",
        "pointFromJSON",
        "obj",
        "Point",
        "obj",
        "Point",
        "precompute",
        "Point",
        "_encode",
        "Point",
        "fromJSON",
        "curve",
        "obj",
        "Point",
        "curve",
        "obj",
        "obj",
        "curve",
        "Point",
        "inspect",
        "Point",
        "isInfinity",
        "Point",
        "dbl",
        "a",
        "b",
        "aa",
        "bb",
        "aa",
        "bb",
        "c",
        "bb",
        "c",
        "nx",
        "nz",
        "Point",
        "add",
        "Point",
        "diffAdd",
        "p",
        "diff",
        "p",
        "p",
        "p",
        "p",
        "d",
        "a",
        "c",
        "b",
        "diff",
        "da",
        "cb",
        "diff",
        "da",
        "cb",
        "nx",
        "nz",
        "Point",
        "mul",
        "k",
        "k",
        "t",
        "t",
        "bits",
        "t",
        "bits",
        "i",
        "i",
        "bits",
        "i",
        "a",
        "a",
        "b",
        "c",
        "b",
        "b",
        "b",
        "a",
        "b",
        "c",
        "a",
        "a",
        "b",
        "Point",
        "mulAdd",
        "Point",
        "jumlAdd",
        "Point",
        "eq",
        "other",
        "other",
        "Point",
        "normalize",
        "Point",
        "getX",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "curve",
        "elliptic",
        "conf",
        "Base",
        "conf",
        "BN",
        "conf",
        "BN",
        "conf",
        "conf",
        "inherits",
        "ShortCurve",
        "Base",
        "ShortCurve",
        "ShortCurve",
        "_getEndomorphism",
        "conf",
        "conf",
        "beta",
        "BN",
        "conf",
        "beta",
        "betas",
        "betas",
        "betas",
        "betas",
        "beta",
        "beta",
        "conf",
        "BN",
        "conf",
        "lambdas",
        "beta",
        "lambdas",
        "lambdas",
        "beta",
        "conf",
        "basis",
        "conf",
        "vec",
        "BN",
        "vec",
        "BN",
        "vec",
        "basis",
        "beta",
        "basis",
        "ShortCurve",
        "_getEndoRoots",
        "num",
        "num",
        "BN",
        "num",
        "BN",
        "red",
        "tinv",
        "BN",
        "red",
        "tinv",
        "ntinv",
        "s",
        "ntinv",
        "s",
        "l1",
        "l2",
        "ShortCurve",
        "_getEndoBasis",
        "BN",
        "BN",
        "BN",
        "BN",
        "u",
        "v",
        "u",
        "r",
        "v",
        "q",
        "u",
        "x",
        "x2",
        "q",
        "x1",
        "y2",
        "q",
        "y1",
        "a1",
        "r",
        "aprxSqrt",
        "a0",
        "prevR",
        "b0",
        "x1",
        "a1",
        "r",
        "b1",
        "x",
        "a1",
        "i",
        "prevR",
        "r",
        "v",
        "u",
        "u",
        "r",
        "x2",
        "x1",
        "x1",
        "x",
        "y2",
        "y1",
        "y1",
        "y",
        "a2",
        "r",
        "b2",
        "x",
        "a1",
        "b1",
        "a2",
        "b2",
        "len2",
        "len1",
        "a2",
        "a0",
        "b2",
        "b0",
        "a1",
        "a1",
        "a1",
        "b1",
        "b1",
        "a2",
        "a2",
        "a2",
        "b2",
        "b2",
        "a1",
        "b1",
        "a2",
        "b2",
        "ShortCurve",
        "_endoSplit",
        "k",
        "basis",
        "basis",
        "v2",
        "k",
        "v1",
        "k",
        "c1",
        "v1",
        "c2",
        "v2",
        "c1",
        "v1",
        "c2",
        "v2",
        "k",
        "p1",
        "p2",
        "q1",
        "q2",
        "k1",
        "k2",
        "ShortCurve",
        "pointFromX",
        "x",
        "odd",
        "x",
        "BN",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "y2",
        "y",
        "y2",
        "y",
        "odd",
        "isOdd",
        "odd",
        "isOdd",
        "y",
        "y",
        "x",
        "y",
        "ShortCurve",
        "validate",
        "point",
        "point",
        "point",
        "point",
        "x",
        "x",
        "x",
        "ax",
        "y",
        "rhs",
        "ShortCurve",
        "_endoWnafMulAdd",
        "points",
        "coeffs",
        "jacobianResult",
        "i",
        "points",
        "i",
        "coeffs",
        "i",
        "points",
        "i",
        "p",
        "split",
        "split",
        "p",
        "p",
        "split",
        "split",
        "beta",
        "beta",
        "npoints",
        "i",
        "p",
        "npoints",
        "i",
        "beta",
        "ncoeffs",
        "i",
        "split",
        "ncoeffs",
        "i",
        "split",
        "npoints",
        "ncoeffs",
        "i",
        "jacobianResult",
        "j",
        "i",
        "j",
        "npoints",
        "j",
        "ncoeffs",
        "j",
        "res",
        "curve",
        "x",
        "y",
        "isRed",
        "Base",
        "curve",
        "x",
        "y",
        "BN",
        "x",
        "BN",
        "y",
        "isRed",
        "inherits",
        "Point",
        "Base",
        "ShortCurve",
        "point",
        "x",
        "y",
        "isRed",
        "Point",
        "x",
        "y",
        "isRed",
        "ShortCurve",
        "pointFromJSON",
        "obj",
        "red",
        "Point",
        "obj",
        "red",
        "Point",
        "_getBeta",
        "pre",
        "pre",
        "pre",
        "pre",
        "p",
        "curve",
        "p",
        "curve",
        "p",
        "pre",
        "beta",
        "beta",
        "pre",
        "pre",
        "pre",
        "endoMul",
        "pre",
        "pre",
        "pre",
        "endoMul",
        "beta",
        "Point",
        "toJSON",
        "Point",
        "fromJSON",
        "curve",
        "obj",
        "red",
        "obj",
        "obj",
        "obj",
        "curve",
        "obj",
        "obj",
        "red",
        "obj",
        "res",
        "obj",
        "curve",
        "obj",
        "obj",
        "red",
        "obj",
        "res",
        "pre",
        "pre",
        "res",
        "pre",
        "obj2point",
        "pre",
        "pre",
        "res",
        "pre",
        "obj2point",
        "res",
        "Point",
        "inspect",
        "Point",
        "isInfinity",
        "Point",
        "add",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "c",
        "c",
        "c",
        "p",
        "c",
        "p",
        "c",
        "nx",
        "nx",
        "ny",
        "Point",
        "dbl",
        "ys1",
        "ys1",
        "x2",
        "x2",
        "x2",
        "a",
        "dyinv",
        "c",
        "c",
        "nx",
        "nx",
        "ny",
        "Point",
        "getX",
        "Point",
        "getY",
        "Point",
        "mul",
        "k",
        "k",
        "BN",
        "k",
        "k",
        "k",
        "k",
        "k",
        "Point",
        "mulAdd",
        "k1",
        "p2",
        "k2",
        "p2",
        "k1",
        "k2",
        "points",
        "coeffs",
        "points",
        "coeffs",
        "Point",
        "jmulAdd",
        "k1",
        "p2",
        "k2",
        "p2",
        "k1",
        "k2",
        "points",
        "coeffs",
        "points",
        "coeffs",
        "Point",
        "eq",
        "p",
        "p",
        "p",
        "p",
        "p",
        "Point",
        "neg",
        "_precompute",
        "_precompute",
        "p",
        "p",
        "res",
        "pre",
        "pre",
        "pre",
        "negate",
        "pre",
        "pre",
        "pre",
        "negate",
        "res",
        "Point",
        "toJ",
        "res",
        "curve",
        "x",
        "y",
        "z",
        "Base",
        "curve",
        "x",
        "y",
        "z",
        "BN",
        "BN",
        "x",
        "BN",
        "y",
        "BN",
        "z",
        "inherits",
        "JPoint",
        "Base",
        "ShortCurve",
        "jpoint",
        "x",
        "y",
        "z",
        "JPoint",
        "x",
        "y",
        "z",
        "JPoint",
        "toP",
        "zinv",
        "zinv2",
        "zinv2",
        "zinv",
        "ax",
        "ay",
        "JPoint",
        "neg",
        "JPoint",
        "add",
        "p",
        "p",
        "p",
        "p",
        "pz2",
        "p",
        "z2",
        "pz2",
        "p",
        "p",
        "z2",
        "u1",
        "u2",
        "s1",
        "s2",
        "h",
        "r",
        "h",
        "h2",
        "h",
        "u1",
        "h2",
        "r",
        "h3",
        "v",
        "v",
        "r",
        "v",
        "nx",
        "s1",
        "h3",
        "p",
        "h",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "mixedAdd",
        "p",
        "p",
        "p",
        "p",
        "z2",
        "p",
        "z2",
        "u1",
        "u2",
        "s1",
        "s2",
        "h",
        "r",
        "h",
        "h2",
        "h",
        "u1",
        "h2",
        "r",
        "h3",
        "v",
        "v",
        "r",
        "v",
        "nx",
        "s1",
        "h3",
        "h",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "dblp",
        "pow",
        "pow",
        "pow",
        "i",
        "pow",
        "i",
        "r",
        "r",
        "r",
        "jz",
        "jy",
        "jy",
        "i",
        "pow",
        "i",
        "jx",
        "jyd",
        "jyd2",
        "jx2",
        "jx2",
        "jx2",
        "a",
        "jz4",
        "jx",
        "jyd2",
        "c",
        "t1",
        "t1",
        "t1",
        "nx",
        "c",
        "t2",
        "dny",
        "dny",
        "dny",
        "jyd4",
        "jyd",
        "jz",
        "i",
        "pow",
        "jz4",
        "jz4",
        "jyd4",
        "jx",
        "nx",
        "jz",
        "nz",
        "jyd",
        "dny",
        "jx",
        "jyd",
        "tinv",
        "jz",
        "JPoint",
        "dbl",
        "JPoint",
        "_zeroDbl",
        "yy",
        "yy",
        "xx",
        "yyyy",
        "s",
        "s",
        "s",
        "xx",
        "xx",
        "xx",
        "m",
        "s",
        "s",
        "yyyy",
        "yyyy",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "nx",
        "t",
        "ny",
        "m",
        "s",
        "t",
        "yyyy8",
        "nz",
        "b",
        "b",
        "a",
        "c",
        "d",
        "d",
        "d",
        "a",
        "a",
        "a",
        "e",
        "c",
        "c",
        "c8",
        "c8",
        "c8",
        "c8",
        "c8",
        "c8",
        "nx",
        "f",
        "d",
        "d",
        "ny",
        "e",
        "d",
        "nx",
        "c8",
        "nz",
        "nz",
        "nz",
        "nz",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "_threeDbl",
        "yy",
        "yy",
        "xx",
        "yyyy",
        "s",
        "s",
        "s",
        "xx",
        "xx",
        "xx",
        "m",
        "s",
        "s",
        "nx",
        "t",
        "yyyy",
        "yyyy",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "yyyy8",
        "ny",
        "m",
        "s",
        "t",
        "yyyy8",
        "nz",
        "gamma",
        "delta",
        "delta",
        "alpha",
        "alpha",
        "alpha",
        "alpha",
        "beta",
        "beta",
        "beta4",
        "beta4",
        "beta4",
        "beta4",
        "beta4",
        "nx",
        "alpha",
        "beta8",
        "nz",
        "gamma",
        "delta",
        "gamma",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ggamma8",
        "ny",
        "alpha",
        "beta4",
        "nx",
        "ggamma8",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "_dbl",
        "jz",
        "jx",
        "jy",
        "jx2",
        "jx2",
        "jx2",
        "a",
        "jz4",
        "jx",
        "jx",
        "jxd4",
        "jxd4",
        "jxd4",
        "jxd4",
        "jy2",
        "c",
        "t1",
        "t1",
        "t1",
        "nx",
        "jy2",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "jyd8",
        "c",
        "t2",
        "jyd8",
        "jy",
        "jy",
        "jz",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "trpl",
        "yy",
        "xx",
        "xx",
        "xx",
        "m",
        "yy",
        "xx",
        "yyyy",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "mm",
        "e",
        "yyyy",
        "yyyy",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "m",
        "e",
        "mm",
        "ee",
        "t",
        "yy",
        "u",
        "yyu4",
        "yyu4",
        "yyu4",
        "yyu4",
        "yyu4",
        "yyu4",
        "ee",
        "yyu4",
        "nx",
        "nx",
        "nx",
        "nx",
        "nx",
        "nx",
        "u",
        "t",
        "u",
        "e",
        "ee",
        "ny",
        "ny",
        "ny",
        "ny",
        "ny",
        "ny",
        "ny",
        "ny",
        "ny",
        "e",
        "zz",
        "ee",
        "nx",
        "ny",
        "nz",
        "JPoint",
        "mul",
        "k",
        "kbase",
        "k",
        "BN",
        "k",
        "kbase",
        "k",
        "JPoint",
        "eq",
        "p",
        "p",
        "p",
        "p",
        "p",
        "pz2",
        "p",
        "z2",
        "z2",
        "pz2",
        "p",
        "pz3",
        "p",
        "z3",
        "JPoint",
        "eqXToP",
        "x",
        "x",
        "zs",
        "rx",
        "x",
        "zs",
        "xc",
        "xc",
        "rx",
        "t",
        "rx",
        "JPoint",
        "inspect",
        "JPoint",
        "isInfinity",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "options",
        "options",
        "elliptic",
        "options",
        "options",
        "elliptic",
        "options",
        "elliptic",
        "options",
        "options",
        "curves",
        "PresetCurve",
        "name",
        "options",
        "curves",
        "name",
        "PresetCurve",
        "options",
        "curves",
        "name",
        "curve",
        "curve",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "defineCurve",
        "hash",
        "pre",
        "require",
        "e",
        "pre",
        "defineCurve",
        "hash",
        "pre",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "elliptic",
        "utils",
        "require",
        "require",
        "options",
        "EC",
        "EC",
        "options",
        "options",
        "elliptic",
        "options",
        "options",
        "options",
        "elliptic",
        "options",
        "options",
        "elliptic",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "EC",
        "EC",
        "keyPair",
        "options",
        "KeyPair",
        "options",
        "EC",
        "keyFromPrivate",
        "priv",
        "enc",
        "KeyPair",
        "priv",
        "enc",
        "EC",
        "keyFromPublic",
        "pub",
        "enc",
        "KeyPair",
        "pub",
        "enc",
        "EC",
        "genKeyPair",
        "options",
        "options",
        "options",
        "HmacDRBG",
        "options",
        "options",
        "options",
        "elliptic",
        "options",
        "options",
        "BN",
        "BN",
        "drbg",
        "priv",
        "ns2",
        "priv",
        "priv",
        "EC",
        "truncateToN",
        "msg",
        "truncOnly",
        "msg",
        "delta",
        "msg",
        "msg",
        "delta",
        "truncOnly",
        "msg",
        "msg",
        "msg",
        "EC",
        "sign",
        "msg",
        "key",
        "enc",
        "options",
        "enc",
        "options",
        "enc",
        "enc",
        "options",
        "options",
        "key",
        "key",
        "enc",
        "msg",
        "BN",
        "msg",
        "key",
        "msg",
        "HmacDRBG",
        "bkey",
        "nonce",
        "options",
        "options",
        "BN",
        "iter",
        "options",
        "options",
        "iter",
        "BN",
        "drbg",
        "k",
        "k",
        "k",
        "k",
        "ns1",
        "k",
        "kp",
        "kp",
        "kpX",
        "r",
        "k",
        "r",
        "key",
        "msg",
        "s",
        "s",
        "s",
        "kp",
        "kpX",
        "r",
        "options",
        "s",
        "s",
        "s",
        "recoveryParam",
        "Signature",
        "r",
        "s",
        "recoveryParam",
        "EC",
        "verify",
        "msg",
        "signature",
        "key",
        "enc",
        "msg",
        "BN",
        "msg",
        "key",
        "key",
        "enc",
        "signature",
        "Signature",
        "signature",
        "signature",
        "signature",
        "r",
        "r",
        "s",
        "s",
        "s",
        "sinv",
        "msg",
        "sinv",
        "r",
        "u1",
        "key",
        "u2",
        "p",
        "p",
        "r",
        "u1",
        "key",
        "u2",
        "p",
        "p",
        "r",
        "EC",
        "msg",
        "signature",
        "j",
        "enc",
        "j",
        "j",
        "signature",
        "Signature",
        "signature",
        "enc",
        "BN",
        "msg",
        "signature",
        "signature",
        "j",
        "j",
        "r",
        "isSecondKey",
        "isSecondKey",
        "r",
        "r",
        "isYOdd",
        "r",
        "r",
        "isYOdd",
        "signature",
        "n",
        "n",
        "e",
        "rInv",
        "n",
        "s",
        "rInv",
        "n",
        "s1",
        "r",
        "s2",
        "EC",
        "e",
        "signature",
        "Q",
        "enc",
        "signature",
        "Signature",
        "signature",
        "enc",
        "signature",
        "signature",
        "i",
        "i",
        "Qprime",
        "e",
        "signature",
        "i",
        "e",
        "Qprime",
        "Q",
        "i",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "utils",
        "ec",
        "options",
        "ec",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "KeyPair",
        "KeyPair",
        "fromPublic",
        "ec",
        "pub",
        "enc",
        "pub",
        "KeyPair",
        "pub",
        "KeyPair",
        "ec",
        "pub",
        "enc",
        "KeyPair",
        "fromPrivate",
        "ec",
        "priv",
        "enc",
        "priv",
        "KeyPair",
        "priv",
        "KeyPair",
        "ec",
        "priv",
        "enc",
        "KeyPair",
        "validate",
        "pub",
        "pub",
        "pub",
        "KeyPair",
        "getPublic",
        "compact",
        "enc",
        "compact",
        "enc",
        "compact",
        "compact",
        "enc",
        "enc",
        "compact",
        "KeyPair",
        "getPrivate",
        "enc",
        "enc",
        "KeyPair",
        "_importPrivate",
        "key",
        "enc",
        "BN",
        "key",
        "enc",
        "KeyPair",
        "_importPublic",
        "key",
        "enc",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "enc",
        "KeyPair",
        "derive",
        "pub",
        "pub",
        "KeyPair",
        "sign",
        "msg",
        "enc",
        "options",
        "msg",
        "enc",
        "options",
        "KeyPair",
        "verify",
        "msg",
        "signature",
        "msg",
        "signature",
        "KeyPair",
        "inspect",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "utils",
        "options",
        "enc",
        "options",
        "Signature",
        "options",
        "options",
        "enc",
        "options",
        "options",
        "BN",
        "options",
        "BN",
        "options",
        "options",
        "options",
        "Signature",
        "buf",
        "p",
        "buf",
        "p",
        "initial",
        "initial",
        "initial",
        "p",
        "i",
        "octetLen",
        "i",
        "off",
        "val",
        "val",
        "buf",
        "off",
        "p",
        "off",
        "val",
        "buf",
        "buf",
        "buf",
        "i",
        "buf",
        "i",
        "i",
        "len",
        "i",
        "i",
        "buf",
        "buf",
        "i",
        "Signature",
        "_importDER",
        "data",
        "enc",
        "data",
        "utils",
        "data",
        "enc",
        "Position",
        "data",
        "p",
        "getLength",
        "data",
        "p",
        "len",
        "p",
        "data",
        "data",
        "p",
        "getLength",
        "data",
        "p",
        "data",
        "p",
        "rlen",
        "p",
        "p",
        "rlen",
        "data",
        "p",
        "getLength",
        "data",
        "p",
        "data",
        "slen",
        "p",
        "data",
        "p",
        "slen",
        "p",
        "r",
        "r",
        "r",
        "r",
        "s",
        "s",
        "s",
        "s",
        "BN",
        "r",
        "BN",
        "s",
        "arr",
        "len",
        "len",
        "arr",
        "len",
        "len",
        "arr",
        "octets",
        "octets",
        "arr",
        "len",
        "octets",
        "arr",
        "len",
        "Signature",
        "toDER",
        "enc",
        "r",
        "r",
        "r",
        "s",
        "s",
        "s",
        "r",
        "rmPadding",
        "r",
        "s",
        "rmPadding",
        "s",
        "s",
        "s",
        "s",
        "s",
        "constructLength",
        "arr",
        "r",
        "arr",
        "arr",
        "r",
        "arr",
        "constructLength",
        "arr",
        "s",
        "arr",
        "s",
        "constructLength",
        "res",
        "backHalf",
        "res",
        "res",
        "backHalf",
        "utils",
        "res",
        "enc",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "utils",
        "utils",
        "require",
        "require",
        "curve",
        "curve",
        "EDDSA",
        "EDDSA",
        "curve",
        "elliptic",
        "curve",
        "curve",
        "curve",
        "curve",
        "curve",
        "curve",
        "hash",
        "EDDSA",
        "EDDSA",
        "sign",
        "message",
        "secret",
        "message",
        "parseBytes",
        "message",
        "secret",
        "key",
        "message",
        "r",
        "R",
        "Rencoded",
        "key",
        "message",
        "key",
        "r",
        "s_",
        "R",
        "S",
        "Rencoded",
        "EDDSA",
        "verify",
        "message",
        "sig",
        "pub",
        "message",
        "parseBytes",
        "message",
        "sig",
        "sig",
        "pub",
        "sig",
        "key",
        "message",
        "sig",
        "sig",
        "key",
        "h",
        "RplusAh",
        "SG",
        "EDDSA",
        "hashInt",
        "i",
        "arguments",
        "i",
        "hash",
        "arguments",
        "i",
        "utils",
        "hash",
        "EDDSA",
        "keyFromPublic",
        "pub",
        "KeyPair",
        "pub",
        "EDDSA",
        "keyFromSecret",
        "secret",
        "KeyPair",
        "secret",
        "EDDSA",
        "makeSignature",
        "sig",
        "sig",
        "Signature",
        "sig",
        "Signature",
        "sig",
        "EDDSA",
        "encodePoint",
        "point",
        "point",
        "enc",
        "point",
        "enc",
        "EDDSA",
        "decodePoint",
        "utils",
        "lastIx",
        "lastIx",
        "lastIx",
        "utils",
        "normed",
        "y",
        "xIsOdd",
        "EDDSA",
        "encodeInt",
        "num",
        "num",
        "EDDSA",
        "decodeInt",
        "utils",
        "EDDSA",
        "isPoint",
        "val",
        "val",
        "require",
        "exports",
        "require",
        "elliptic",
        "utils",
        "utils",
        "utils",
        "eddsa",
        "eddsa",
        "parseBytes",
        "eddsa",
        "parseBytes",
        "KeyPair",
        "fromPublic",
        "eddsa",
        "pub",
        "pub",
        "KeyPair",
        "pub",
        "KeyPair",
        "eddsa",
        "pub",
        "KeyPair",
        "fromSecret",
        "eddsa",
        "secret",
        "secret",
        "KeyPair",
        "secret",
        "KeyPair",
        "eddsa",
        "secret",
        "KeyPair",
        "secret",
        "cachedProperty",
        "KeyPair",
        "pubBytes",
        "cachedProperty",
        "KeyPair",
        "pub",
        "cachedProperty",
        "KeyPair",
        "privBytes",
        "eddsa",
        "hash",
        "eddsa",
        "a",
        "a",
        "lastIx",
        "a",
        "lastIx",
        "a",
        "cachedProperty",
        "KeyPair",
        "priv",
        "cachedProperty",
        "KeyPair",
        "hash",
        "cachedProperty",
        "KeyPair",
        "messagePrefix",
        "KeyPair",
        "sign",
        "message",
        "message",
        "KeyPair",
        "verify",
        "message",
        "sig",
        "message",
        "sig",
        "KeyPair",
        "getSecret",
        "enc",
        "utils",
        "enc",
        "KeyPair",
        "getPublic",
        "enc",
        "utils",
        "enc",
        "KeyPair",
        "require",
        "exports",
        "require",
        "require",
        "elliptic",
        "utils",
        "utils",
        "utils",
        "eddsa",
        "sig",
        "eddsa",
        "sig",
        "sig",
        "parseBytes",
        "sig",
        "sig",
        "sig",
        "sig",
        "eddsa",
        "sig",
        "eddsa",
        "sig",
        "sig",
        "eddsa",
        "sig",
        "sig",
        "sig",
        "BN",
        "sig",
        "sig",
        "sig",
        "sig",
        "sig",
        "sig",
        "sig",
        "cachedProperty",
        "Signature",
        "S",
        "cachedProperty",
        "Signature",
        "R",
        "cachedProperty",
        "Signature",
        "Rencoded",
        "cachedProperty",
        "Signature",
        "Sencoded",
        "Signature",
        "toBytes",
        "Signature",
        "toHex",
        "utils",
        "Signature",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "utils",
        "minAssert",
        "utils",
        "minUtils",
        "utils",
        "minUtils",
        "utils",
        "minUtils",
        "utils",
        "minUtils",
        "num",
        "w",
        "w",
        "num",
        "k",
        "k",
        "k",
        "ws",
        "mod",
        "ws",
        "z",
        "ws",
        "mod",
        "z",
        "mod",
        "k",
        "z",
        "z",
        "naf",
        "z",
        "k",
        "k",
        "ws",
        "w",
        "i",
        "shift",
        "i",
        "naf",
        "k",
        "shift",
        "naf",
        "utils",
        "getNAF",
        "k1",
        "k2",
        "k1",
        "k1",
        "k2",
        "k2",
        "k1",
        "d1",
        "k2",
        "d2",
        "k1",
        "d1",
        "k2",
        "d2",
        "m14",
        "m14",
        "m24",
        "m24",
        "m14",
        "u1",
        "k1",
        "d1",
        "m8",
        "m8",
        "m24",
        "u1",
        "m14",
        "u1",
        "m14",
        "jsf",
        "u1",
        "m24",
        "u2",
        "k2",
        "d2",
        "m8",
        "m8",
        "m14",
        "u2",
        "m24",
        "u2",
        "m24",
        "jsf",
        "u2",
        "d1",
        "u1",
        "d1",
        "d1",
        "d2",
        "u2",
        "d2",
        "d2",
        "k1",
        "k2",
        "jsf",
        "utils",
        "getJSF",
        "obj",
        "name",
        "computer",
        "name",
        "obj",
        "name",
        "cachedProperty",
        "key",
        "key",
        "key",
        "computer",
        "utils",
        "cachedProperty",
        "utils",
        "utils",
        "parseBytes",
        "BN",
        "utils",
        "intFromLE",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "val",
        "prefix",
        "Buffer",
        "val",
        "val",
        "prefix",
        "blockSize",
        "Transform",
        "Buffer",
        "blockSize",
        "blockSize",
        "inherits",
        "HashBase",
        "Transform",
        "HashBase",
        "chunk",
        "encoding",
        "callback",
        "chunk",
        "encoding",
        "err",
        "error",
        "err",
        "callback",
        "error",
        "HashBase",
        "callback",
        "err",
        "error",
        "err",
        "callback",
        "error",
        "HashBase",
        "data",
        "encoding",
        "throwIfNotStringOrBuffer",
        "data",
        "Buffer",
        "data",
        "data",
        "Buffer",
        "data",
        "encoding",
        "data",
        "offset",
        "i",
        "block",
        "i",
        "data",
        "offset",
        "offset",
        "data",
        "block",
        "data",
        "offset",
        "data",
        "carry",
        "j",
        "j",
        "carry",
        "carry",
        "j",
        "carry",
        "j",
        "carry",
        "HashBase",
        "HashBase",
        "encoding",
        "encoding",
        "digest",
        "digest",
        "encoding",
        "i",
        "i",
        "i",
        "digest",
        "HashBase",
        "HashBase",
        "require",
        "exports",
        "hash",
        "require",
        "hash",
        "require",
        "hash",
        "require",
        "hash",
        "require",
        "hash",
        "require",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "hash",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "BlockHash",
        "BlockHash",
        "update",
        "msg",
        "enc",
        "msg",
        "utils",
        "msg",
        "enc",
        "msg",
        "msg",
        "msg",
        "msg",
        "msg",
        "msg",
        "msg",
        "r",
        "msg",
        "msg",
        "utils",
        "msg",
        "msg",
        "r",
        "i",
        "msg",
        "i",
        "msg",
        "i",
        "i",
        "BlockHash",
        "digest",
        "enc",
        "enc",
        "BlockHash",
        "pad",
        "len",
        "k",
        "res",
        "i",
        "k",
        "i",
        "res",
        "i",
        "len",
        "t",
        "t",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "len",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "res",
        "i",
        "t",
        "t",
        "t",
        "res",
        "i",
        "res",
        "require",
        "exports",
        "require",
        "require",
        "hash",
        "key",
        "enc",
        "Hmac",
        "Hmac",
        "hash",
        "key",
        "enc",
        "hash",
        "hash",
        "hash",
        "utils",
        "key",
        "enc",
        "Hmac",
        "Hmac",
        "init",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "i",
        "i",
        "key",
        "i",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "Hmac",
        "update",
        "msg",
        "enc",
        "msg",
        "enc",
        "Hmac",
        "digest",
        "enc",
        "enc",
        "require",
        "exports",
        "require",
        "require",
        "utils",
        "utils",
        "utils",
        "utils",
        "common",
        "RIPEMD160",
        "RIPEMD160",
        "BlockHash",
        "utils",
        "RIPEMD160",
        "BlockHash",
        "exports",
        "RIPEMD160",
        "RIPEMD160",
        "RIPEMD160",
        "RIPEMD160",
        "RIPEMD160",
        "RIPEMD160",
        "update",
        "msg",
        "start",
        "j",
        "j",
        "sum32",
        "rotl32",
        "sum32_4",
        "A",
        "f",
        "j",
        "B",
        "C",
        "D",
        "msg",
        "r",
        "j",
        "start",
        "K",
        "j",
        "s",
        "j",
        "E",
        "A",
        "E",
        "E",
        "D",
        "D",
        "rotl32",
        "C",
        "C",
        "B",
        "B",
        "T",
        "T",
        "sum32",
        "rotl32",
        "sum32_4",
        "Ah",
        "f",
        "j",
        "Bh",
        "Ch",
        "Dh",
        "msg",
        "rh",
        "j",
        "start",
        "Kh",
        "j",
        "sh",
        "j",
        "Eh",
        "Ah",
        "Eh",
        "Eh",
        "Dh",
        "Dh",
        "rotl32",
        "Ch",
        "Ch",
        "Bh",
        "Bh",
        "T",
        "T",
        "sum32_3",
        "C",
        "Dh",
        "sum32_3",
        "D",
        "Eh",
        "sum32_3",
        "E",
        "Ah",
        "sum32_3",
        "A",
        "Bh",
        "sum32_3",
        "B",
        "Ch",
        "T",
        "RIPEMD160",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "j",
        "x",
        "y",
        "z",
        "j",
        "x",
        "y",
        "z",
        "j",
        "x",
        "y",
        "x",
        "z",
        "j",
        "x",
        "y",
        "z",
        "j",
        "x",
        "z",
        "y",
        "z",
        "x",
        "y",
        "z",
        "j",
        "j",
        "j",
        "j",
        "j",
        "j",
        "j",
        "j",
        "j",
        "j",
        "require",
        "exports",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "utils",
        "utils",
        "utils",
        "shaCommon",
        "common",
        "SHA1",
        "SHA1",
        "BlockHash",
        "utils",
        "SHA1",
        "BlockHash",
        "SHA1",
        "SHA1",
        "SHA1",
        "SHA1",
        "SHA1",
        "SHA1",
        "_update",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "W",
        "i",
        "rotl32",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "i",
        "i",
        "W",
        "i",
        "i",
        "sum32_5",
        "rotl32",
        "a",
        "ft_1",
        "s",
        "b",
        "c",
        "d",
        "e",
        "W",
        "i",
        "sha1_K",
        "s",
        "e",
        "d",
        "d",
        "c",
        "c",
        "rotl32",
        "b",
        "b",
        "a",
        "a",
        "t",
        "sum32",
        "a",
        "sum32",
        "b",
        "sum32",
        "c",
        "sum32",
        "d",
        "sum32",
        "e",
        "SHA1",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "require",
        "exports",
        "require",
        "require",
        "SHA224",
        "SHA224",
        "SHA256",
        "utils",
        "SHA224",
        "SHA256",
        "SHA224",
        "SHA224",
        "SHA224",
        "SHA224",
        "SHA224",
        "SHA224",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "utils",
        "utils",
        "utils",
        "shaCommon",
        "shaCommon",
        "shaCommon",
        "shaCommon",
        "shaCommon",
        "shaCommon",
        "common",
        "SHA256",
        "SHA256",
        "BlockHash",
        "sha256_K",
        "utils",
        "SHA256",
        "BlockHash",
        "SHA256",
        "SHA256",
        "SHA256",
        "SHA256",
        "SHA256",
        "SHA256",
        "_update",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "W",
        "i",
        "sum32_4",
        "g1_256",
        "W",
        "i",
        "W",
        "i",
        "g0_256",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "i",
        "W",
        "i",
        "sum32_5",
        "h",
        "s1_256",
        "e",
        "ch32",
        "e",
        "f",
        "g",
        "i",
        "W",
        "i",
        "sum32",
        "s0_256",
        "a",
        "maj32",
        "a",
        "b",
        "c",
        "h",
        "g",
        "g",
        "f",
        "f",
        "e",
        "e",
        "sum32",
        "d",
        "T1",
        "d",
        "c",
        "c",
        "b",
        "b",
        "a",
        "a",
        "sum32",
        "T1",
        "T2",
        "sum32",
        "a",
        "sum32",
        "b",
        "sum32",
        "c",
        "sum32",
        "d",
        "sum32",
        "e",
        "sum32",
        "f",
        "sum32",
        "g",
        "sum32",
        "h",
        "SHA256",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "require",
        "exports",
        "require",
        "require",
        "SHA384",
        "SHA384",
        "SHA512",
        "utils",
        "SHA384",
        "SHA512",
        "SHA384",
        "SHA384",
        "SHA384",
        "SHA384",
        "SHA384",
        "SHA384",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "utils",
        "common",
        "SHA512",
        "SHA512",
        "BlockHash",
        "sha512_K",
        "utils",
        "SHA512",
        "BlockHash",
        "SHA512",
        "SHA512",
        "SHA512",
        "SHA512",
        "SHA512",
        "SHA512",
        "_prepareBlock",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "msg",
        "start",
        "i",
        "i",
        "W",
        "i",
        "g1_512_hi",
        "W",
        "i",
        "W",
        "i",
        "g1_512_lo",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "g0_512_hi",
        "W",
        "i",
        "W",
        "i",
        "g0_512_lo",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "sum64_4_hi",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "W",
        "i",
        "sum64_4_lo",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "SHA512",
        "_update",
        "msg",
        "start",
        "msg",
        "start",
        "W",
        "i",
        "W",
        "i",
        "s1_512_hi",
        "eh",
        "el",
        "s1_512_lo",
        "eh",
        "el",
        "ch64_hi",
        "eh",
        "el",
        "fh",
        "fl",
        "gh",
        "gl",
        "ch64_lo",
        "eh",
        "el",
        "fh",
        "fl",
        "gh",
        "gl",
        "i",
        "i",
        "W",
        "i",
        "W",
        "i",
        "sum64_5_hi",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "c4_hi",
        "c4_lo",
        "sum64_5_lo",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "c4_hi",
        "c4_lo",
        "c0_hi",
        "s0_512_hi",
        "ah",
        "al",
        "c0_lo",
        "s0_512_lo",
        "ah",
        "al",
        "c1_hi",
        "maj64_hi",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "c1_lo",
        "maj64_lo",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "sum64_hi",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "sum64_lo",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "hh",
        "gh",
        "hl",
        "gl",
        "gh",
        "fh",
        "gl",
        "fl",
        "fh",
        "eh",
        "fl",
        "el",
        "eh",
        "sum64_hi",
        "dh",
        "dl",
        "T1_hi",
        "T1_lo",
        "el",
        "sum64_lo",
        "dl",
        "dl",
        "T1_hi",
        "T1_lo",
        "dh",
        "ch",
        "dl",
        "cl",
        "ch",
        "bh",
        "cl",
        "bl",
        "bh",
        "ah",
        "bl",
        "al",
        "ah",
        "sum64_hi",
        "T1_hi",
        "T1_lo",
        "T2_hi",
        "T2_lo",
        "al",
        "sum64_lo",
        "T1_hi",
        "T1_lo",
        "T2_hi",
        "T2_lo",
        "sum64",
        "ah",
        "al",
        "sum64",
        "bh",
        "bl",
        "sum64",
        "ch",
        "cl",
        "sum64",
        "dh",
        "dl",
        "sum64",
        "eh",
        "el",
        "sum64",
        "fh",
        "fl",
        "sum64",
        "gh",
        "gl",
        "sum64",
        "hh",
        "hl",
        "SHA512",
        "digest",
        "enc",
        "enc",
        "utils",
        "utils",
        "xh",
        "xl",
        "yh",
        "yl",
        "zh",
        "xh",
        "yh",
        "xh",
        "zh",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "yh",
        "yl",
        "zh",
        "zl",
        "xl",
        "yl",
        "xl",
        "zl",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "yh",
        "yl",
        "zh",
        "xh",
        "yh",
        "xh",
        "zh",
        "yh",
        "zh",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "yh",
        "yl",
        "zh",
        "zl",
        "xl",
        "yl",
        "xl",
        "zl",
        "yl",
        "zl",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "rotr64_hi",
        "xl",
        "xh",
        "rotr64_hi",
        "xl",
        "xh",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "rotr64_lo",
        "xl",
        "xh",
        "rotr64_lo",
        "xl",
        "xh",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "rotr64_hi",
        "xl",
        "xh",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "rotr64_lo",
        "xl",
        "xh",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "shr64_hi",
        "xh",
        "xl",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "shr64_lo",
        "xh",
        "xl",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_hi",
        "xh",
        "xl",
        "rotr64_hi",
        "xl",
        "xh",
        "shr64_hi",
        "xh",
        "xl",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "r",
        "r",
        "xh",
        "xl",
        "rotr64_lo",
        "xh",
        "xl",
        "rotr64_lo",
        "xl",
        "xh",
        "shr64_lo",
        "xh",
        "xl",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "r",
        "r",
        "require",
        "exports",
        "require",
        "utils",
        "s",
        "x",
        "y",
        "z",
        "s",
        "ch32",
        "x",
        "y",
        "z",
        "s",
        "s",
        "p32",
        "x",
        "y",
        "z",
        "s",
        "maj32",
        "x",
        "y",
        "z",
        "exports",
        "ft_1",
        "x",
        "y",
        "z",
        "x",
        "y",
        "x",
        "z",
        "exports",
        "ch32",
        "x",
        "y",
        "z",
        "x",
        "y",
        "x",
        "z",
        "y",
        "z",
        "exports",
        "maj32",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "exports",
        "p32",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "exports",
        "s0_256",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "exports",
        "s1_256",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "x",
        "exports",
        "g0_256",
        "x",
        "rotr32",
        "x",
        "rotr32",
        "x",
        "x",
        "exports",
        "g1_256",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "inherits",
        "msg",
        "enc",
        "msg",
        "msg",
        "msg",
        "msg",
        "enc",
        "i",
        "msg",
        "i",
        "msg",
        "i",
        "c",
        "c",
        "hi",
        "res",
        "hi",
        "lo",
        "res",
        "lo",
        "enc",
        "msg",
        "msg",
        "msg",
        "msg",
        "msg",
        "i",
        "i",
        "msg",
        "i",
        "res",
        "parseInt",
        "msg",
        "i",
        "msg",
        "i",
        "i",
        "i",
        "msg",
        "i",
        "res",
        "i",
        "msg",
        "i",
        "res",
        "exports",
        "toArray",
        "msg",
        "i",
        "msg",
        "i",
        "res",
        "zero2",
        "msg",
        "i",
        "res",
        "exports",
        "toHex",
        "w",
        "w",
        "w",
        "w",
        "w",
        "res",
        "exports",
        "htonl",
        "msg",
        "endian",
        "i",
        "msg",
        "i",
        "msg",
        "i",
        "endian",
        "w",
        "htonl",
        "w",
        "res",
        "zero8",
        "w",
        "res",
        "exports",
        "toHex32",
        "word",
        "word",
        "word",
        "word",
        "exports",
        "zero2",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "word",
        "exports",
        "zero8",
        "msg",
        "start",
        "end",
        "endian",
        "end",
        "start",
        "len",
        "len",
        "i",
        "res",
        "i",
        "k",
        "endian",
        "w",
        "msg",
        "k",
        "msg",
        "k",
        "msg",
        "k",
        "msg",
        "k",
        "w",
        "msg",
        "k",
        "msg",
        "k",
        "msg",
        "k",
        "msg",
        "k",
        "res",
        "i",
        "w",
        "res",
        "exports",
        "join32",
        "msg",
        "endian",
        "msg",
        "i",
        "msg",
        "i",
        "k",
        "msg",
        "i",
        "endian",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "k",
        "m",
        "res",
        "exports",
        "split32",
        "w",
        "b",
        "w",
        "b",
        "w",
        "b",
        "exports",
        "rotr32",
        "w",
        "b",
        "w",
        "b",
        "w",
        "b",
        "exports",
        "rotl32",
        "a",
        "b",
        "a",
        "b",
        "exports",
        "sum32",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "exports",
        "sum32_3",
        "a",
        "b",
        "c",
        "d",
        "a",
        "b",
        "c",
        "d",
        "exports",
        "sum32_4",
        "a",
        "b",
        "c",
        "d",
        "e",
        "a",
        "b",
        "c",
        "d",
        "e",
        "exports",
        "sum32_5",
        "buf",
        "pos",
        "ah",
        "al",
        "buf",
        "pos",
        "buf",
        "pos",
        "al",
        "bl",
        "lo",
        "al",
        "ah",
        "bh",
        "buf",
        "pos",
        "hi",
        "buf",
        "pos",
        "lo",
        "exports",
        "sum64",
        "ah",
        "al",
        "bh",
        "bl",
        "al",
        "bl",
        "lo",
        "al",
        "ah",
        "bh",
        "hi",
        "exports",
        "sum64_hi",
        "ah",
        "al",
        "bh",
        "bl",
        "al",
        "bl",
        "lo",
        "exports",
        "sum64_lo",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "dh",
        "dl",
        "lo",
        "lo",
        "bl",
        "carry",
        "lo",
        "al",
        "lo",
        "lo",
        "cl",
        "carry",
        "lo",
        "cl",
        "lo",
        "lo",
        "dl",
        "carry",
        "lo",
        "dl",
        "ah",
        "bh",
        "ch",
        "dh",
        "carry",
        "hi",
        "exports",
        "sum64_4_hi",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "dh",
        "dl",
        "al",
        "bl",
        "cl",
        "dl",
        "lo",
        "exports",
        "sum64_4_lo",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "dh",
        "dl",
        "eh",
        "el",
        "lo",
        "lo",
        "bl",
        "carry",
        "lo",
        "al",
        "lo",
        "lo",
        "cl",
        "carry",
        "lo",
        "cl",
        "lo",
        "lo",
        "dl",
        "carry",
        "lo",
        "dl",
        "lo",
        "lo",
        "el",
        "carry",
        "lo",
        "el",
        "ah",
        "bh",
        "ch",
        "dh",
        "eh",
        "carry",
        "hi",
        "exports",
        "sum64_5_hi",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "dh",
        "dl",
        "eh",
        "el",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "lo",
        "exports",
        "sum64_5_lo",
        "ah",
        "al",
        "num",
        "al",
        "num",
        "ah",
        "num",
        "r",
        "exports",
        "rotr64_hi",
        "ah",
        "al",
        "num",
        "ah",
        "num",
        "al",
        "num",
        "r",
        "exports",
        "rotr64_lo",
        "ah",
        "al",
        "num",
        "ah",
        "num",
        "exports",
        "shr64_hi",
        "ah",
        "al",
        "num",
        "ah",
        "num",
        "al",
        "num",
        "r",
        "exports",
        "shr64_lo",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "options",
        "HmacDRBG",
        "HmacDRBG",
        "options",
        "options",
        "options",
        "options",
        "utils",
        "options",
        "options",
        "utils",
        "options",
        "options",
        "utils",
        "options",
        "options",
        "entropy",
        "entropy",
        "nonce",
        "pers",
        "HmacDRBG",
        "HmacDRBG",
        "init",
        "entropy",
        "nonce",
        "pers",
        "entropy",
        "nonce",
        "pers",
        "i",
        "i",
        "i",
        "i",
        "seed",
        "HmacDRBG",
        "hmac",
        "hash",
        "HmacDRBG",
        "update",
        "seed",
        "seed",
        "kmac",
        "kmac",
        "seed",
        "kmac",
        "seed",
        "seed",
        "HmacDRBG",
        "reseed",
        "entropy",
        "entropyEnc",
        "add",
        "addEnc",
        "entropyEnc",
        "addEnc",
        "add",
        "add",
        "entropyEnc",
        "entropyEnc",
        "entropy",
        "utils",
        "entropy",
        "entropyEnc",
        "add",
        "utils",
        "add",
        "addEnc",
        "entropy",
        "entropy",
        "add",
        "HmacDRBG",
        "generate",
        "len",
        "enc",
        "add",
        "addEnc",
        "enc",
        "addEnc",
        "add",
        "add",
        "enc",
        "enc",
        "add",
        "add",
        "utils",
        "add",
        "addEnc",
        "add",
        "temp",
        "len",
        "temp",
        "temp",
        "temp",
        "len",
        "add",
        "utils",
        "res",
        "enc",
        "require",
        "exports",
        "inherits",
        "ctor",
        "superCtor",
        "ctor",
        "superCtor",
        "ctor",
        "superCtor",
        "ctor",
        "inherits",
        "ctor",
        "superCtor",
        "ctor",
        "superCtor",
        "TempCtor",
        "superCtor",
        "ctor",
        "TempCtor",
        "ctor",
        "ctor",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "HashBase",
        "inherits",
        "MD5",
        "HashBase",
        "MD5",
        "i",
        "i",
        "M",
        "i",
        "i",
        "a",
        "fnF",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnF",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnF",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnF",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnF",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnF",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnF",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnF",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnF",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnF",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnF",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnF",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnF",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnF",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnF",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnF",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnG",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnG",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnG",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnG",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnG",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnG",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnG",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnG",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnG",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnG",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnG",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnG",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnG",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnG",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnG",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnG",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnH",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnH",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnH",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnH",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnH",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnH",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnH",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnH",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnH",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnH",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnH",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnH",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnH",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnH",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnH",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnH",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnI",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnI",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnI",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnI",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnI",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnI",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnI",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnI",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnI",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnI",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnI",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnI",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "fnI",
        "a",
        "b",
        "c",
        "d",
        "M",
        "d",
        "fnI",
        "d",
        "a",
        "b",
        "c",
        "M",
        "c",
        "fnI",
        "c",
        "d",
        "a",
        "b",
        "M",
        "b",
        "fnI",
        "b",
        "c",
        "d",
        "a",
        "M",
        "a",
        "b",
        "c",
        "d",
        "MD5",
        "Buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "x",
        "n",
        "x",
        "n",
        "x",
        "n",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "b",
        "d",
        "m",
        "k",
        "s",
        "b",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "d",
        "c",
        "d",
        "m",
        "k",
        "s",
        "b",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "b",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "c",
        "b",
        "d",
        "m",
        "k",
        "s",
        "b",
        "MD5",
        "require",
        "require",
        "exports",
        "Buffer",
        "fastRoot",
        "values",
        "digestFn",
        "values",
        "digestFn",
        "values",
        "values",
        "length",
        "i",
        "length",
        "i",
        "j",
        "results",
        "i",
        "i",
        "length",
        "left",
        "results",
        "i",
        "Buffer",
        "left",
        "right",
        "results",
        "j",
        "digestFn",
        "data",
        "length",
        "j",
        "results",
        "require",
        "require",
        "exports",
        "val",
        "msg",
        "val",
        "msg",
        "assertEqual",
        "l",
        "r",
        "msg",
        "l",
        "r",
        "msg",
        "l",
        "r",
        "require",
        "exports",
        "msg",
        "enc",
        "msg",
        "msg",
        "msg",
        "msg",
        "i",
        "msg",
        "i",
        "res",
        "i",
        "msg",
        "i",
        "res",
        "enc",
        "msg",
        "msg",
        "msg",
        "msg",
        "msg",
        "i",
        "msg",
        "i",
        "res",
        "parseInt",
        "msg",
        "i",
        "msg",
        "i",
        "i",
        "msg",
        "i",
        "msg",
        "i",
        "c",
        "c",
        "hi",
        "res",
        "hi",
        "lo",
        "res",
        "lo",
        "res",
        "utils",
        "toArray",
        "word",
        "word",
        "word",
        "word",
        "utils",
        "zero2",
        "msg",
        "i",
        "msg",
        "i",
        "res",
        "zero2",
        "msg",
        "i",
        "res",
        "utils",
        "toHex",
        "utils",
        "encode",
        "arr",
        "enc",
        "enc",
        "toHex",
        "arr",
        "arr",
        "require",
        "exports",
        "require",
        "i",
        "i",
        "OPS",
        "i",
        "i",
        "buffer",
        "number",
        "offset",
        "encodingLength",
        "number",
        "size",
        "buffer",
        "number",
        "offset",
        "size",
        "buffer",
        "OPS",
        "offset",
        "buffer",
        "number",
        "offset",
        "size",
        "buffer",
        "OPS",
        "offset",
        "buffer",
        "number",
        "offset",
        "buffer",
        "OPS",
        "offset",
        "buffer",
        "number",
        "offset",
        "size",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "opcode",
        "OPS",
        "number",
        "opcode",
        "size",
        "opcode",
        "OPS",
        "offset",
        "buffer",
        "number",
        "buffer",
        "offset",
        "size",
        "opcode",
        "OPS",
        "offset",
        "buffer",
        "number",
        "buffer",
        "offset",
        "size",
        "offset",
        "buffer",
        "opcode",
        "OPS",
        "number",
        "buffer",
        "offset",
        "size",
        "opcode",
        "number",
        "size",
        "encodingLength",
        "encode",
        "decode",
        "require",
        "exports",
        "process",
        "require",
        "crypto",
        "crypto",
        "randomBytes",
        "oldBrowser",
        "size",
        "cb",
        "size",
        "size",
        "size",
        "crypto",
        "rawBytes",
        "Buffer",
        "rawBytes",
        "cb",
        "process",
        "cb",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "HashBase",
        "inherits",
        "RIPEMD160",
        "HashBase",
        "RIPEMD160",
        "j",
        "j",
        "words",
        "j",
        "j",
        "i",
        "i",
        "i",
        "tl",
        "fn1",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "words",
        "zl",
        "i",
        "hl",
        "sl",
        "i",
        "tr",
        "fn5",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "words",
        "zr",
        "i",
        "hr",
        "sr",
        "i",
        "i",
        "tl",
        "fn2",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "words",
        "zl",
        "i",
        "hl",
        "sl",
        "i",
        "tr",
        "fn4",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "words",
        "zr",
        "i",
        "hr",
        "sr",
        "i",
        "i",
        "tl",
        "fn3",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "words",
        "zl",
        "i",
        "hl",
        "sl",
        "i",
        "tr",
        "fn3",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "words",
        "zr",
        "i",
        "hr",
        "sr",
        "i",
        "i",
        "tl",
        "fn4",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "words",
        "zl",
        "i",
        "hl",
        "sl",
        "i",
        "tr",
        "fn2",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "words",
        "zr",
        "i",
        "hr",
        "sr",
        "i",
        "tl",
        "fn5",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "words",
        "zl",
        "i",
        "hl",
        "sl",
        "i",
        "tr",
        "fn1",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "words",
        "zr",
        "i",
        "hr",
        "sr",
        "i",
        "al",
        "el",
        "el",
        "dl",
        "dl",
        "rotl",
        "cl",
        "cl",
        "bl",
        "bl",
        "tl",
        "ar",
        "er",
        "er",
        "dr",
        "dr",
        "rotl",
        "cr",
        "cr",
        "br",
        "br",
        "tr",
        "cl",
        "dr",
        "dl",
        "er",
        "el",
        "ar",
        "al",
        "br",
        "bl",
        "cr",
        "t",
        "RIPEMD160",
        "Buffer",
        "Buffer",
        "Buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "x",
        "n",
        "x",
        "n",
        "x",
        "n",
        "a",
        "b",
        "c",
        "d",
        "e",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "e",
        "a",
        "b",
        "c",
        "d",
        "e",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "b",
        "d",
        "m",
        "k",
        "s",
        "e",
        "a",
        "b",
        "c",
        "d",
        "e",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "e",
        "a",
        "b",
        "c",
        "d",
        "e",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "d",
        "c",
        "d",
        "m",
        "k",
        "s",
        "e",
        "a",
        "b",
        "c",
        "d",
        "e",
        "m",
        "k",
        "s",
        "rotl",
        "a",
        "b",
        "c",
        "d",
        "m",
        "k",
        "s",
        "e",
        "RIPEMD160",
        "require",
        "exports",
        "require",
        "buffer",
        "src",
        "dst",
        "key",
        "src",
        "dst",
        "key",
        "src",
        "key",
        "Buffer",
        "Buffer",
        "Buffer",
        "Buffer",
        "buffer",
        "copyProps",
        "buffer",
        "exports",
        "exports",
        "SafeBuffer",
        "arg",
        "encodingOrOffset",
        "length",
        "Buffer",
        "arg",
        "encodingOrOffset",
        "length",
        "copyProps",
        "Buffer",
        "SafeBuffer",
        "SafeBuffer",
        "arg",
        "encodingOrOffset",
        "length",
        "arg",
        "Buffer",
        "arg",
        "encodingOrOffset",
        "length",
        "SafeBuffer",
        "size",
        "fill",
        "encoding",
        "size",
        "Buffer",
        "size",
        "fill",
        "encoding",
        "buf",
        "fill",
        "encoding",
        "buf",
        "fill",
        "buf",
        "buf",
        "SafeBuffer",
        "size",
        "size",
        "Buffer",
        "size",
        "SafeBuffer",
        "size",
        "size",
        "buffer",
        "size",
        "require",
        "exports",
        "require",
        "blockSize",
        "finalSize",
        "Buffer",
        "blockSize",
        "finalSize",
        "blockSize",
        "Hash",
        "data",
        "enc",
        "data",
        "enc",
        "enc",
        "data",
        "Buffer",
        "data",
        "enc",
        "data",
        "offset",
        "length",
        "accum",
        "blockSize",
        "length",
        "offset",
        "blockSize",
        "assigned",
        "i",
        "remainder",
        "i",
        "block",
        "assigned",
        "i",
        "data",
        "offset",
        "i",
        "accum",
        "remainder",
        "offset",
        "remainder",
        "accum",
        "blockSize",
        "block",
        "length",
        "Hash",
        "enc",
        "rem",
        "rem",
        "rem",
        "bits",
        "bits",
        "bits",
        "bits",
        "lowBits",
        "highBits",
        "lowBits",
        "enc",
        "hash",
        "enc",
        "hash",
        "Hash",
        "Hash",
        "require",
        "exports",
        "SHA",
        "algorithm",
        "algorithm",
        "algorithm",
        "exports",
        "algorithm",
        "Algorithm",
        "algorithm",
        "Algorithm",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha",
        "Hash",
        "Sha",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "s",
        "b",
        "c",
        "d",
        "s",
        "b",
        "c",
        "b",
        "d",
        "s",
        "b",
        "c",
        "b",
        "d",
        "c",
        "d",
        "b",
        "c",
        "d",
        "Sha",
        "M",
        "i",
        "i",
        "W",
        "i",
        "M",
        "i",
        "i",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "j",
        "j",
        "j",
        "rotl5",
        "a",
        "ft",
        "s",
        "b",
        "c",
        "d",
        "e",
        "W",
        "j",
        "K",
        "s",
        "e",
        "d",
        "d",
        "c",
        "c",
        "rotl30",
        "b",
        "b",
        "a",
        "a",
        "t",
        "a",
        "b",
        "c",
        "d",
        "e",
        "Sha",
        "Buffer",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "Sha",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha1",
        "Hash",
        "Sha1",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "s",
        "b",
        "c",
        "d",
        "s",
        "b",
        "c",
        "b",
        "d",
        "s",
        "b",
        "c",
        "b",
        "d",
        "c",
        "d",
        "b",
        "c",
        "d",
        "Sha1",
        "M",
        "i",
        "i",
        "W",
        "i",
        "M",
        "i",
        "i",
        "i",
        "W",
        "i",
        "rotl1",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "j",
        "j",
        "j",
        "rotl5",
        "a",
        "ft",
        "s",
        "b",
        "c",
        "d",
        "e",
        "W",
        "j",
        "K",
        "s",
        "e",
        "d",
        "d",
        "c",
        "c",
        "rotl30",
        "b",
        "b",
        "a",
        "a",
        "t",
        "a",
        "b",
        "c",
        "d",
        "e",
        "Sha1",
        "Buffer",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "Sha1",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha224",
        "Sha256",
        "Sha224",
        "Sha224",
        "Buffer",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "Sha224",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha256",
        "Hash",
        "Sha256",
        "x",
        "y",
        "z",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "Sha256",
        "M",
        "i",
        "i",
        "W",
        "i",
        "M",
        "i",
        "i",
        "i",
        "W",
        "i",
        "gamma1",
        "W",
        "i",
        "W",
        "i",
        "gamma0",
        "W",
        "i",
        "W",
        "i",
        "j",
        "j",
        "h",
        "sigma1",
        "e",
        "ch",
        "e",
        "f",
        "g",
        "K",
        "j",
        "W",
        "j",
        "sigma0",
        "a",
        "maj",
        "a",
        "b",
        "c",
        "h",
        "g",
        "g",
        "f",
        "f",
        "e",
        "e",
        "d",
        "T1",
        "d",
        "c",
        "c",
        "b",
        "b",
        "a",
        "a",
        "T1",
        "T2",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "Sha256",
        "Buffer",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "H",
        "Sha256",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha384",
        "SHA512",
        "Sha384",
        "Sha384",
        "Buffer",
        "h",
        "l",
        "offset",
        "H",
        "h",
        "offset",
        "H",
        "l",
        "offset",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "H",
        "Sha384",
        "require",
        "exports",
        "require",
        "require",
        "require",
        "W",
        "Hash",
        "inherits",
        "Sha512",
        "Hash",
        "Sha512",
        "x",
        "y",
        "z",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "z",
        "x",
        "y",
        "x",
        "xl",
        "x",
        "xl",
        "xl",
        "x",
        "xl",
        "x",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "xl",
        "x",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "x",
        "xl",
        "xl",
        "x",
        "x",
        "x",
        "xl",
        "x",
        "xl",
        "xl",
        "x",
        "x",
        "xl",
        "a",
        "b",
        "a",
        "b",
        "Sha512",
        "M",
        "i",
        "i",
        "W",
        "i",
        "M",
        "i",
        "W",
        "i",
        "M",
        "i",
        "i",
        "i",
        "W",
        "i",
        "W",
        "i",
        "Gamma0",
        "xh",
        "xl",
        "Gamma0l",
        "xl",
        "xh",
        "xh",
        "W",
        "i",
        "xl",
        "W",
        "i",
        "Gamma1",
        "xh",
        "xl",
        "Gamma1l",
        "xl",
        "xh",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "W",
        "i",
        "gamma0l",
        "Wi7l",
        "gamma0",
        "Wi7h",
        "getCarry",
        "Wil",
        "gamma0l",
        "Wil",
        "Wil",
        "gamma1l",
        "Wih",
        "Wih",
        "gamma1",
        "getCarry",
        "Wil",
        "gamma1l",
        "Wil",
        "Wil",
        "Wi16l",
        "Wih",
        "Wih",
        "Wi16h",
        "getCarry",
        "Wil",
        "Wi16l",
        "W",
        "i",
        "Wih",
        "W",
        "i",
        "Wil",
        "j",
        "j",
        "Wih",
        "W",
        "j",
        "Wil",
        "W",
        "j",
        "maj",
        "ah",
        "bh",
        "ch",
        "maj",
        "al",
        "bl",
        "cl",
        "sigma0",
        "ah",
        "al",
        "sigma0",
        "al",
        "ah",
        "sigma1",
        "eh",
        "el",
        "sigma1",
        "el",
        "eh",
        "K",
        "j",
        "K",
        "j",
        "Ch",
        "eh",
        "fh",
        "gh",
        "Ch",
        "el",
        "fl",
        "gl",
        "hl",
        "sigma1l",
        "hh",
        "sigma1h",
        "getCarry",
        "t1l",
        "hl",
        "t1l",
        "t1l",
        "chl",
        "t1h",
        "t1h",
        "chh",
        "getCarry",
        "t1l",
        "chl",
        "t1l",
        "t1l",
        "Kil",
        "t1h",
        "t1h",
        "Kih",
        "getCarry",
        "t1l",
        "Kil",
        "t1l",
        "t1l",
        "Wil",
        "t1h",
        "t1h",
        "Wih",
        "getCarry",
        "t1l",
        "Wil",
        "sigma0l",
        "majl",
        "sigma0h",
        "majh",
        "getCarry",
        "t2l",
        "sigma0l",
        "hh",
        "gh",
        "hl",
        "gl",
        "gh",
        "fh",
        "gl",
        "fl",
        "fh",
        "eh",
        "fl",
        "el",
        "el",
        "dl",
        "t1l",
        "eh",
        "dh",
        "t1h",
        "getCarry",
        "el",
        "dl",
        "dh",
        "ch",
        "dl",
        "cl",
        "ch",
        "bh",
        "cl",
        "bl",
        "bh",
        "ah",
        "bl",
        "al",
        "al",
        "t1l",
        "t2l",
        "ah",
        "t1h",
        "t2h",
        "getCarry",
        "al",
        "t1l",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "fl",
        "gl",
        "hl",
        "ah",
        "getCarry",
        "al",
        "bh",
        "getCarry",
        "bl",
        "ch",
        "getCarry",
        "cl",
        "dh",
        "getCarry",
        "dl",
        "eh",
        "getCarry",
        "el",
        "fh",
        "getCarry",
        "fl",
        "gh",
        "getCarry",
        "gl",
        "hh",
        "getCarry",
        "hl",
        "Sha512",
        "Buffer",
        "h",
        "l",
        "offset",
        "H",
        "h",
        "offset",
        "H",
        "l",
        "offset",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "writeInt64BE",
        "H",
        "Sha512",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "EC",
        "require",
        "Buffer",
        "Buffer",
        "Buffer",
        "secp256k1",
        "n",
        "secp256k1",
        "x",
        "Buffer",
        "x",
        "x",
        "x",
        "isScalar",
        "x",
        "x",
        "EC_GROUP_ORDER",
        "p",
        "Buffer",
        "p",
        "p",
        "p",
        "p",
        "x",
        "ZERO32",
        "x",
        "EC_P",
        "t",
        "t",
        "p",
        "p",
        "y",
        "ZERO32",
        "y",
        "EC_P",
        "t",
        "p",
        "p",
        "p",
        "p",
        "isPoint",
        "p",
        "__isPointCompressed",
        "p",
        "x",
        "isScalar",
        "x",
        "x",
        "ZERO32",
        "x",
        "EC_GROUP_ORDER",
        "value",
        "value",
        "value",
        "Buffer",
        "value",
        "value",
        "r",
        "EC_GROUP_ORDER",
        "s",
        "EC_GROUP_ORDER",
        "value",
        "pubkey",
        "value",
        "pubkey",
        "__isPointCompressed",
        "pubkey",
        "value",
        "value",
        "d",
        "BN",
        "d",
        "d",
        "d",
        "Buffer",
        "P",
        "secp256k1",
        "P",
        "P",
        "compressed",
        "Buffer",
        "P",
        "compressed",
        "pA",
        "pB",
        "__compressed",
        "isPoint",
        "pA",
        "THROW_BAD_POINT",
        "isPoint",
        "pB",
        "THROW_BAD_POINT",
        "decodeFrom",
        "pA",
        "decodeFrom",
        "pB",
        "a",
        "b",
        "pp",
        "assumeCompression",
        "__compressed",
        "pA",
        "getEncoded",
        "pp",
        "compressed",
        "p",
        "tweak",
        "__compressed",
        "isPoint",
        "p",
        "THROW_BAD_POINT",
        "isOrderScalar",
        "tweak",
        "THROW_BAD_TWEAK",
        "assumeCompression",
        "__compressed",
        "p",
        "decodeFrom",
        "p",
        "tweak",
        "ZERO32",
        "getEncoded",
        "pp",
        "compressed",
        "fromBuffer",
        "tweak",
        "G",
        "tt",
        "pp",
        "qq",
        "uu",
        "getEncoded",
        "uu",
        "compressed",
        "p",
        "compressed",
        "isPoint",
        "p",
        "THROW_BAD_POINT",
        "decodeFrom",
        "p",
        "pp",
        "THROW_BAD_POINT",
        "getEncoded",
        "pp",
        "compressed",
        "d",
        "__compressed",
        "isPrivate",
        "d",
        "THROW_BAD_PRIVATE",
        "fromBuffer",
        "d",
        "G",
        "dd",
        "pp",
        "assumeCompression",
        "__compressed",
        "getEncoded",
        "pp",
        "compressed",
        "p",
        "tweak",
        "__compressed",
        "isPoint",
        "p",
        "THROW_BAD_POINT",
        "isOrderScalar",
        "tweak",
        "THROW_BAD_TWEAK",
        "assumeCompression",
        "__compressed",
        "p",
        "decodeFrom",
        "p",
        "fromBuffer",
        "tweak",
        "pp",
        "tt",
        "qq",
        "getEncoded",
        "qq",
        "compressed",
        "d",
        "tweak",
        "isPrivate",
        "d",
        "THROW_BAD_PRIVATE",
        "isOrderScalar",
        "tweak",
        "THROW_BAD_TWEAK",
        "fromBuffer",
        "d",
        "fromBuffer",
        "tweak",
        "toBuffer",
        "dd",
        "tt",
        "n",
        "isPrivate",
        "dt",
        "dt",
        "d",
        "tweak",
        "isPrivate",
        "d",
        "THROW_BAD_PRIVATE",
        "isOrderScalar",
        "tweak",
        "THROW_BAD_TWEAK",
        "fromBuffer",
        "d",
        "fromBuffer",
        "tweak",
        "toBuffer",
        "dd",
        "tt",
        "n",
        "isPrivate",
        "dt",
        "dt",
        "hash",
        "x",
        "isScalar",
        "hash",
        "THROW_BAD_HASH",
        "isPrivate",
        "x",
        "THROW_BAD_PRIVATE",
        "fromBuffer",
        "x",
        "fromBuffer",
        "hash",
        "deterministicGenerateK",
        "hash",
        "x",
        "k",
        "fromBuffer",
        "k",
        "G",
        "kI",
        "Q",
        "r",
        "Q",
        "n",
        "r",
        "s",
        "kI",
        "n",
        "e",
        "d",
        "r",
        "n",
        "s",
        "isPrivate",
        "s",
        "nDiv2",
        "s",
        "n",
        "s",
        "Buffer",
        "toBuffer",
        "r",
        "buffer",
        "toBuffer",
        "s",
        "buffer",
        "buffer",
        "hash",
        "q",
        "signature",
        "isScalar",
        "hash",
        "THROW_BAD_HASH",
        "isPoint",
        "q",
        "THROW_BAD_POINT",
        "isSignature",
        "signature",
        "THROW_BAD_SIGNATURE",
        "decodeFrom",
        "q",
        "fromBuffer",
        "signature",
        "fromBuffer",
        "signature",
        "r",
        "s",
        "fromBuffer",
        "hash",
        "s",
        "n",
        "e",
        "sInv",
        "n",
        "r",
        "sInv",
        "n",
        "G",
        "u1",
        "Q",
        "u2",
        "R",
        "R",
        "xR",
        "n",
        "v",
        "r",
        "require",
        "require",
        "exports",
        "Buffer",
        "require",
        "Buffer",
        "Buffer",
        "hash",
        "x",
        "checkSig",
        "isPrivate",
        "Buffer",
        "Buffer",
        "k",
        "createHmac",
        "k",
        "v",
        "ZERO1",
        "x",
        "hash",
        "v",
        "createHmac",
        "k",
        "v",
        "k",
        "createHmac",
        "k",
        "v",
        "ONE1",
        "x",
        "hash",
        "v",
        "createHmac",
        "k",
        "v",
        "v",
        "createHmac",
        "k",
        "v",
        "isPrivate",
        "T",
        "checkSig",
        "T",
        "k",
        "createHmac",
        "k",
        "v",
        "ZERO1",
        "v",
        "createHmac",
        "k",
        "v",
        "v",
        "createHmac",
        "k",
        "v",
        "T",
        "v",
        "T",
        "deterministicGenerateK",
        "require",
        "require",
        "exports",
        "require",
        "fn",
        "fn",
        "fn",
        "value",
        "value",
        "getTypeName",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "getTypeName",
        "value",
        "valueTypeName",
        "getValue",
        "value",
        "tfJSON",
        "valueTypeName",
        "valueTypeName",
        "valueJson",
        "valueJson",
        "value",
        "valueTypeName",
        "valueTypeName",
        "valueTypeName",
        "getValueTypeName",
        "value",
        "tfErrorString",
        "value",
        "valueTypeName",
        "TfTypeError",
        "value",
        "valueTypeName",
        "TfTypeError",
        "TfTypeError",
        "TfTypeError",
        "label",
        "name",
        "value",
        "valueTypeName",
        "label",
        "description",
        "tfErrorString",
        "tfJSON",
        "name",
        "description",
        "tfJSON",
        "value",
        "valueTypeName",
        "property",
        "label",
        "value",
        "valueTypeName",
        "valueTypeName",
        "valueTypeName",
        "getValueTypeName",
        "value",
        "tfPropertyErrorString",
        "label",
        "property",
        "value",
        "valueTypeName",
        "property",
        "TfTypeError",
        "label",
        "property",
        "value",
        "valueTypeName",
        "TfPropertyTypeError",
        "TfPropertyTypeError",
        "TfTypeError",
        "expected",
        "actual",
        "TfTypeError",
        "expected",
        "actual",
        "e",
        "property",
        "label",
        "e",
        "TfPropertyTypeError",
        "property",
        "property",
        "e",
        "e",
        "TfPropertyTypeError",
        "e",
        "property",
        "e",
        "e",
        "e",
        "e",
        "TfTypeError",
        "e",
        "TfPropertyTypeError",
        "e",
        "property",
        "label",
        "e",
        "e",
        "e",
        "e",
        "TfTypeError",
        "TfPropertyTypeError",
        "tfCustomError",
        "tfSubError",
        "tfJSON",
        "getValueTypeName",
        "require",
        "exports",
        "Buffer",
        "require",
        "require",
        "value",
        "Buffer",
        "value",
        "value",
        "value",
        "value",
        "length",
        "value",
        "value",
        "value",
        "length",
        "ERRORS",
        "name",
        "length",
        "name",
        "value",
        "Length",
        "name",
        "Length",
        "_LengthN",
        "NATIVE",
        "_LengthN",
        "_Buffer",
        "_LengthN",
        "Hex",
        "_LengthN",
        "NATIVE",
        "value",
        "value",
        "isFinite",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "UINT53_MAX",
        "value",
        "value",
        "_ArrayN",
        "_Buffer",
        "_BufferN",
        "Finite",
        "Hex",
        "_HexN",
        "Int8",
        "Int16",
        "Int32",
        "_StringN",
        "UInt8",
        "UInt16",
        "UInt32",
        "UInt53",
        "typeName",
        "types",
        "types",
        "typeName",
        "t",
        "t",
        "typeName",
        "types",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "ERRORS",
        "ERRORS",
        "ERRORS",
        "ERRORS",
        "ERRORS",
        "arrayOf",
        "compile",
        "array",
        "strict",
        "NATIVE",
        "array",
        "NATIVE",
        "array",
        "array",
        "value",
        "i",
        "typeforce",
        "value",
        "strict",
        "e",
        "tfSubError",
        "e",
        "i",
        "_arrayOf",
        "tfJSON",
        "_arrayOf",
        "maybe",
        "compile",
        "value",
        "strict",
        "NATIVE",
        "value",
        "value",
        "strict",
        "maybe",
        "_maybe",
        "tfJSON",
        "_maybe",
        "propertyType",
        "propertyKeyType",
        "propertyType",
        "compile",
        "propertyType",
        "propertyKeyType",
        "propertyKeyType",
        "compile",
        "propertyKeyType",
        "value",
        "strict",
        "NATIVE",
        "value",
        "NATIVE",
        "value",
        "propertyName",
        "value",
        "propertyKeyType",
        "typeforce",
        "propertyKeyType",
        "propertyName",
        "strict",
        "e",
        "tfSubError",
        "e",
        "propertyName",
        "value",
        "propertyName",
        "typeforce",
        "propertyType",
        "propertyValue",
        "strict",
        "e",
        "tfSubError",
        "e",
        "propertyName",
        "propertyKeyType",
        "_map",
        "tfJSON",
        "propertyKeyType",
        "tfJSON",
        "propertyType",
        "_map",
        "tfJSON",
        "propertyType",
        "_map",
        "uncompiled",
        "typePropertyName",
        "uncompiled",
        "typePropertyName",
        "compile",
        "uncompiled",
        "typePropertyName",
        "value",
        "strict",
        "NATIVE",
        "value",
        "NATIVE",
        "value",
        "propertyName",
        "propertyName",
        "value",
        "propertyName",
        "typeforce",
        "propertyType",
        "propertyValue",
        "strict",
        "e",
        "tfSubError",
        "e",
        "propertyName",
        "strict",
        "propertyName",
        "value",
        "propertyName",
        "TfPropertyTypeError",
        "propertyName",
        "_object",
        "tfJSON",
        "_object",
        "oneOf",
        "arguments",
        "compile",
        "value",
        "strict",
        "types",
        "typeforce",
        "value",
        "strict",
        "e",
        "_oneOf",
        "types",
        "tfJSON",
        "_oneOf",
        "quacksLike",
        "value",
        "getValueTypeName",
        "value",
        "_quacksLike",
        "_quacksLike",
        "arguments",
        "compile",
        "values",
        "strict",
        "NATIVE",
        "values",
        "NATIVE",
        "values",
        "strict",
        "values",
        "types",
        "types",
        "i",
        "typeforce",
        "values",
        "i",
        "strict",
        "e",
        "tfSubError",
        "e",
        "i",
        "_tuple",
        "types",
        "tfJSON",
        "_tuple",
        "value",
        "expected",
        "actual",
        "actual",
        "expected",
        "_value",
        "expected",
        "_value",
        "NATIVE",
        "TYPES",
        "NATIVE",
        "TYPES",
        "NATIVE",
        "NATIVE",
        "TYPES",
        "TYPES",
        "NATIVE",
        "TYPES",
        "value",
        "strict",
        "surrogate",
        "NATIVE",
        "value",
        "strict",
        "TfTypeError",
        "surrogate",
        "value",
        "typeforce",
        "compile",
        "value",
        "strict",
        "typeName",
        "NATIVE",
        "typeforce",
        "typeName",
        "NATIVE",
        "typeName",
        "typeName",
        "TYPES",
        "typeforce",
        "typeName",
        "TYPES",
        "typeName",
        "require",
        "typeName",
        "EXTRA",
        "typeforce",
        "typeName",
        "EXTRA",
        "typeName",
        "value",
        "strict",
        "callback",
        "strict",
        "__async",
        "value",
        "strict",
        "typeforce",
        "value",
        "strict",
        "e",
        "callback",
        "e",
        "callback",
        "typeforce",
        "__async",
        "typeforce",
        "compile",
        "typeforce",
        "TfTypeError",
        "typeforce",
        "TfPropertyTypeError",
        "typeforce",
        "require",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "types",
        "types",
        "typeName",
        "types",
        "types",
        "typeName",
        "t",
        "t",
        "typeName",
        "types",
        "require",
        "exports",
        "require",
        "n",
        "n",
        "n",
        "MAX_SAFE_INTEGER",
        "n",
        "RangeError",
        "number",
        "buffer",
        "offset",
        "checkUInt53",
        "number",
        "buffer",
        "buffer",
        "Buffer",
        "encodingLength",
        "number",
        "Buffer",
        "buffer",
        "offset",
        "offset",
        "number",
        "buffer",
        "number",
        "offset",
        "encode",
        "number",
        "buffer",
        "offset",
        "buffer",
        "number",
        "offset",
        "encode",
        "number",
        "buffer",
        "offset",
        "buffer",
        "number",
        "offset",
        "encode",
        "buffer",
        "offset",
        "buffer",
        "number",
        "offset",
        "buffer",
        "number",
        "offset",
        "encode",
        "buffer",
        "buffer",
        "offset",
        "Buffer",
        "buffer",
        "offset",
        "offset",
        "buffer",
        "offset",
        "first",
        "decode",
        "first",
        "first",
        "decode",
        "buffer",
        "offset",
        "first",
        "decode",
        "buffer",
        "offset",
        "decode",
        "buffer",
        "offset",
        "buffer",
        "offset",
        "hi",
        "lo",
        "checkUInt53",
        "number",
        "number",
        "number",
        "checkUInt53",
        "number",
        "number",
        "number",
        "number",
        "encode",
        "decode",
        "encodingLength",
        "require",
        "exports",
        "Buffer",
        "require",
        "buffer",
        "version",
        "version",
        "buffer",
        "version",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "buffer",
        "version",
        "privateKey",
        "compressed",
        "Buffer",
        "compressed",
        "result",
        "version",
        "privateKey",
        "result",
        "compressed",
        "result",
        "result",
        "version",
        "decodeRaw",
        "bs58check",
        "version",
        "version",
        "privateKey",
        "compressed",
        "version",
        "bs58check",
        "encodeRaw",
        "version",
        "privateKey",
        "compressed",
        "bs58check",
        "encodeRaw",
        "version",
        "version",
        "version",
        "decode",
        "decodeRaw",
        "encode",
        "encodeRaw",
        "require",
        "require",
        "exports",
        "exports",
        "byteLength",
        "exports",
        "toByteArray",
        "exports",
        "fromByteArray",
        "Uint8Array",
        "Uint8Array",
        "code",
        "i",
        "len",
        "i",
        "lookup",
        "i",
        "code",
        "i",
        "revLookup",
        "code",
        "i",
        "i",
        "revLookup",
        "revLookup",
        "b64",
        "b64",
        "len",
        "b64",
        "validLen",
        "validLen",
        "len",
        "validLen",
        "len",
        "validLen",
        "validLen",
        "placeHoldersLen",
        "b64",
        "getLens",
        "b64",
        "lens",
        "lens",
        "validLen",
        "placeHoldersLen",
        "placeHoldersLen",
        "b64",
        "validLen",
        "placeHoldersLen",
        "validLen",
        "placeHoldersLen",
        "placeHoldersLen",
        "b64",
        "getLens",
        "b64",
        "lens",
        "lens",
        "Arr",
        "_byteLength",
        "b64",
        "validLen",
        "placeHoldersLen",
        "placeHoldersLen",
        "validLen",
        "validLen",
        "i",
        "len",
        "i",
        "tmp",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "arr",
        "curByte",
        "tmp",
        "arr",
        "curByte",
        "tmp",
        "arr",
        "curByte",
        "tmp",
        "placeHoldersLen",
        "tmp",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "arr",
        "curByte",
        "tmp",
        "placeHoldersLen",
        "tmp",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "revLookup",
        "b64",
        "i",
        "arr",
        "curByte",
        "tmp",
        "arr",
        "curByte",
        "tmp",
        "arr",
        "num",
        "lookup",
        "num",
        "lookup",
        "num",
        "lookup",
        "num",
        "lookup",
        "num",
        "uint8",
        "start",
        "end",
        "i",
        "end",
        "i",
        "tmp",
        "uint8",
        "i",
        "uint8",
        "i",
        "uint8",
        "i",
        "output",
        "tripletToBase64",
        "tmp",
        "output",
        "uint8",
        "uint8",
        "len",
        "len",
        "extraBytes",
        "i",
        "len2",
        "i",
        "maxChunkLength",
        "parts",
        "encodeChunk",
        "uint8",
        "i",
        "i",
        "maxChunkLength",
        "len2",
        "len2",
        "i",
        "maxChunkLength",
        "extraBytes",
        "tmp",
        "uint8",
        "len",
        "parts",
        "lookup",
        "tmp",
        "lookup",
        "tmp",
        "extraBytes",
        "tmp",
        "uint8",
        "len",
        "uint8",
        "len",
        "parts",
        "lookup",
        "tmp",
        "lookup",
        "tmp",
        "lookup",
        "tmp",
        "parts",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "Buffer",
        "exports",
        "SlowBuffer",
        "exports",
        "exports",
        "K_MAX_LENGTH",
        "Buffer",
        "typedArraySupport",
        "Buffer",
        "Uint8Array",
        "arr",
        "Uint8Array",
        "arr",
        "e",
        "Buffer",
        "Buffer",
        "Buffer",
        "Buffer",
        "length",
        "length",
        "K_MAX_LENGTH",
        "RangeError",
        "length",
        "Uint8Array",
        "length",
        "buf",
        "Buffer",
        "buf",
        "arg",
        "encodingOrOffset",
        "length",
        "arg",
        "encodingOrOffset",
        "allocUnsafe",
        "arg",
        "arg",
        "encodingOrOffset",
        "length",
        "Buffer",
        "Buffer",
        "Buffer",
        "Buffer",
        "value",
        "encodingOrOffset",
        "length",
        "value",
        "fromString",
        "value",
        "encodingOrOffset",
        "ArrayBuffer",
        "value",
        "fromArrayLike",
        "value",
        "value",
        "value",
        "isInstance",
        "value",
        "ArrayBuffer",
        "value",
        "isInstance",
        "value",
        "ArrayBuffer",
        "fromArrayBuffer",
        "value",
        "encodingOrOffset",
        "length",
        "value",
        "value",
        "value",
        "valueOf",
        "valueOf",
        "value",
        "Buffer",
        "valueOf",
        "encodingOrOffset",
        "length",
        "fromObject",
        "value",
        "b",
        "b",
        "value",
        "Buffer",
        "value",
        "encodingOrOffset",
        "length",
        "value",
        "Buffer",
        "value",
        "encodingOrOffset",
        "length",
        "value",
        "encodingOrOffset",
        "length",
        "Buffer",
        "Uint8Array",
        "Buffer",
        "Uint8Array",
        "size",
        "size",
        "size",
        "RangeError",
        "size",
        "size",
        "fill",
        "encoding",
        "assertSize",
        "size",
        "size",
        "createBuffer",
        "size",
        "fill",
        "encoding",
        "createBuffer",
        "size",
        "fill",
        "encoding",
        "createBuffer",
        "size",
        "fill",
        "createBuffer",
        "size",
        "Buffer",
        "size",
        "fill",
        "encoding",
        "alloc",
        "size",
        "fill",
        "encoding",
        "size",
        "assertSize",
        "size",
        "createBuffer",
        "size",
        "size",
        "Buffer",
        "size",
        "allocUnsafe",
        "size",
        "Buffer",
        "size",
        "allocUnsafe",
        "size",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "Buffer",
        "encoding",
        "encoding",
        "byteLength",
        "encoding",
        "createBuffer",
        "length",
        "buf",
        "encoding",
        "actual",
        "length",
        "buf",
        "buf",
        "actual",
        "buf",
        "array",
        "array",
        "array",
        "createBuffer",
        "length",
        "i",
        "length",
        "i",
        "buf",
        "i",
        "array",
        "i",
        "buf",
        "array",
        "byteOffset",
        "length",
        "byteOffset",
        "array",
        "byteOffset",
        "RangeError",
        "array",
        "byteOffset",
        "length",
        "RangeError",
        "byteOffset",
        "length",
        "buf",
        "Uint8Array",
        "array",
        "length",
        "buf",
        "Uint8Array",
        "array",
        "byteOffset",
        "buf",
        "Uint8Array",
        "array",
        "byteOffset",
        "length",
        "buf",
        "Buffer",
        "buf",
        "obj",
        "Buffer",
        "obj",
        "obj",
        "createBuffer",
        "len",
        "buf",
        "buf",
        "obj",
        "buf",
        "len",
        "buf",
        "obj",
        "obj",
        "numberIsNaN",
        "obj",
        "createBuffer",
        "fromArrayLike",
        "obj",
        "obj",
        "obj",
        "fromArrayLike",
        "obj",
        "length",
        "length",
        "K_MAX_LENGTH",
        "RangeError",
        "K_MAX_LENGTH",
        "length",
        "length",
        "length",
        "length",
        "length",
        "Buffer",
        "length",
        "Buffer",
        "isBuffer",
        "b",
        "b",
        "b",
        "b",
        "Buffer",
        "Buffer",
        "compare",
        "a",
        "b",
        "isInstance",
        "a",
        "Uint8Array",
        "a",
        "Buffer",
        "a",
        "a",
        "a",
        "isInstance",
        "b",
        "Uint8Array",
        "b",
        "Buffer",
        "b",
        "b",
        "b",
        "Buffer",
        "a",
        "Buffer",
        "b",
        "a",
        "b",
        "a",
        "b",
        "x",
        "y",
        "i",
        "len",
        "i",
        "a",
        "i",
        "b",
        "i",
        "x",
        "a",
        "i",
        "y",
        "b",
        "i",
        "x",
        "y",
        "y",
        "x",
        "Buffer",
        "isEncoding",
        "encoding",
        "encoding",
        "Buffer",
        "concat",
        "length",
        "Buffer",
        "length",
        "length",
        "i",
        "i",
        "i",
        "length",
        "i",
        "Buffer",
        "length",
        "i",
        "i",
        "i",
        "i",
        "isInstance",
        "buf",
        "Uint8Array",
        "buf",
        "Buffer",
        "buf",
        "Buffer",
        "buf",
        "buf",
        "buffer",
        "pos",
        "pos",
        "buf",
        "buffer",
        "encoding",
        "Buffer",
        "ArrayBuffer",
        "isInstance",
        "ArrayBuffer",
        "arguments",
        "arguments",
        "mustMatch",
        "len",
        "encoding",
        "len",
        "utf8ToBytes",
        "len",
        "len",
        "base64ToBytes",
        "loweredCase",
        "mustMatch",
        "utf8ToBytes",
        "encoding",
        "encoding",
        "loweredCase",
        "Buffer",
        "byteLength",
        "encoding",
        "start",
        "end",
        "start",
        "start",
        "start",
        "start",
        "end",
        "end",
        "end",
        "end",
        "end",
        "start",
        "end",
        "start",
        "encoding",
        "encoding",
        "encoding",
        "hexSlice",
        "start",
        "end",
        "utf8Slice",
        "start",
        "end",
        "asciiSlice",
        "start",
        "end",
        "latin1Slice",
        "start",
        "end",
        "base64Slice",
        "start",
        "end",
        "utf16leSlice",
        "start",
        "end",
        "loweredCase",
        "encoding",
        "encoding",
        "encoding",
        "loweredCase",
        "Buffer",
        "b",
        "n",
        "m",
        "b",
        "n",
        "b",
        "n",
        "b",
        "m",
        "b",
        "m",
        "i",
        "Buffer",
        "swap16",
        "len",
        "RangeError",
        "i",
        "len",
        "i",
        "swap",
        "i",
        "i",
        "Buffer",
        "swap32",
        "len",
        "RangeError",
        "i",
        "len",
        "i",
        "swap",
        "i",
        "i",
        "swap",
        "i",
        "i",
        "Buffer",
        "swap64",
        "len",
        "RangeError",
        "i",
        "len",
        "i",
        "swap",
        "i",
        "i",
        "swap",
        "i",
        "i",
        "swap",
        "i",
        "i",
        "swap",
        "i",
        "i",
        "Buffer",
        "toString",
        "length",
        "arguments",
        "utf8Slice",
        "length",
        "slowToString",
        "arguments",
        "Buffer",
        "Buffer",
        "Buffer",
        "equals",
        "b",
        "Buffer",
        "b",
        "b",
        "Buffer",
        "b",
        "Buffer",
        "inspect",
        "exports",
        "max",
        "max",
        "Buffer",
        "compare",
        "target",
        "start",
        "end",
        "thisStart",
        "thisEnd",
        "isInstance",
        "target",
        "Uint8Array",
        "target",
        "Buffer",
        "target",
        "target",
        "target",
        "Buffer",
        "target",
        "target",
        "start",
        "start",
        "end",
        "end",
        "target",
        "target",
        "thisStart",
        "thisStart",
        "thisEnd",
        "thisEnd",
        "start",
        "end",
        "target",
        "thisStart",
        "thisEnd",
        "RangeError",
        "thisStart",
        "thisEnd",
        "start",
        "end",
        "thisStart",
        "thisEnd",
        "start",
        "end",
        "start",
        "end",
        "thisStart",
        "thisEnd",
        "target",
        "thisEnd",
        "thisStart",
        "end",
        "start",
        "x",
        "y",
        "thisStart",
        "thisEnd",
        "target",
        "start",
        "end",
        "i",
        "len",
        "i",
        "thisCopy",
        "i",
        "targetCopy",
        "i",
        "x",
        "thisCopy",
        "i",
        "y",
        "targetCopy",
        "i",
        "x",
        "y",
        "y",
        "x",
        "buffer",
        "val",
        "byteOffset",
        "encoding",
        "dir",
        "buffer",
        "byteOffset",
        "encoding",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "byteOffset",
        "numberIsNaN",
        "byteOffset",
        "byteOffset",
        "dir",
        "buffer",
        "byteOffset",
        "byteOffset",
        "buffer",
        "byteOffset",
        "byteOffset",
        "buffer",
        "dir",
        "byteOffset",
        "buffer",
        "byteOffset",
        "dir",
        "byteOffset",
        "val",
        "val",
        "Buffer",
        "val",
        "encoding",
        "Buffer",
        "val",
        "val",
        "arrayIndexOf",
        "buffer",
        "val",
        "byteOffset",
        "encoding",
        "dir",
        "val",
        "val",
        "val",
        "Uint8Array",
        "dir",
        "Uint8Array",
        "buffer",
        "val",
        "byteOffset",
        "Uint8Array",
        "buffer",
        "val",
        "byteOffset",
        "arrayIndexOf",
        "buffer",
        "val",
        "byteOffset",
        "encoding",
        "dir",
        "arr",
        "val",
        "byteOffset",
        "encoding",
        "dir",
        "arr",
        "val",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "arr",
        "val",
        "indexSize",
        "arrLength",
        "valLength",
        "byteOffset",
        "buf",
        "i",
        "indexSize",
        "buf",
        "i",
        "buf",
        "i",
        "indexSize",
        "dir",
        "i",
        "byteOffset",
        "i",
        "arrLength",
        "i",
        "read",
        "arr",
        "i",
        "read",
        "val",
        "foundIndex",
        "i",
        "foundIndex",
        "foundIndex",
        "foundIndex",
        "i",
        "i",
        "foundIndex",
        "valLength",
        "foundIndex",
        "indexSize",
        "foundIndex",
        "i",
        "i",
        "foundIndex",
        "foundIndex",
        "byteOffset",
        "valLength",
        "arrLength",
        "byteOffset",
        "arrLength",
        "valLength",
        "i",
        "byteOffset",
        "i",
        "i",
        "j",
        "valLength",
        "j",
        "read",
        "arr",
        "i",
        "j",
        "read",
        "val",
        "j",
        "found",
        "found",
        "i",
        "Buffer",
        "includes",
        "val",
        "byteOffset",
        "encoding",
        "val",
        "byteOffset",
        "encoding",
        "Buffer",
        "indexOf",
        "val",
        "byteOffset",
        "encoding",
        "bidirectionalIndexOf",
        "val",
        "byteOffset",
        "encoding",
        "Buffer",
        "lastIndexOf",
        "val",
        "byteOffset",
        "encoding",
        "bidirectionalIndexOf",
        "val",
        "byteOffset",
        "encoding",
        "buf",
        "offset",
        "length",
        "offset",
        "offset",
        "buf",
        "offset",
        "length",
        "length",
        "remaining",
        "length",
        "length",
        "length",
        "remaining",
        "length",
        "remaining",
        "length",
        "strLen",
        "length",
        "strLen",
        "i",
        "length",
        "i",
        "parseInt",
        "i",
        "numberIsNaN",
        "parsed",
        "i",
        "buf",
        "offset",
        "i",
        "parsed",
        "i",
        "buf",
        "offset",
        "length",
        "blitBuffer",
        "utf8ToBytes",
        "buf",
        "offset",
        "buf",
        "offset",
        "length",
        "buf",
        "offset",
        "length",
        "blitBuffer",
        "asciiToBytes",
        "buf",
        "offset",
        "length",
        "buf",
        "offset",
        "length",
        "asciiWrite",
        "buf",
        "offset",
        "length",
        "buf",
        "offset",
        "length",
        "blitBuffer",
        "base64ToBytes",
        "buf",
        "offset",
        "length",
        "buf",
        "offset",
        "length",
        "blitBuffer",
        "utf16leToBytes",
        "buf",
        "offset",
        "buf",
        "offset",
        "length",
        "Buffer",
        "write",
        "offset",
        "length",
        "encoding",
        "offset",
        "encoding",
        "length",
        "offset",
        "length",
        "offset",
        "encoding",
        "offset",
        "length",
        "offset",
        "isFinite",
        "offset",
        "offset",
        "offset",
        "isFinite",
        "length",
        "length",
        "length",
        "encoding",
        "encoding",
        "encoding",
        "length",
        "length",
        "offset",
        "length",
        "length",
        "remaining",
        "length",
        "remaining",
        "length",
        "offset",
        "offset",
        "RangeError",
        "encoding",
        "encoding",
        "encoding",
        "hexWrite",
        "offset",
        "length",
        "utf8Write",
        "offset",
        "length",
        "asciiWrite",
        "offset",
        "length",
        "latin1Write",
        "offset",
        "length",
        "base64Write",
        "offset",
        "length",
        "ucs2Write",
        "offset",
        "length",
        "loweredCase",
        "encoding",
        "encoding",
        "encoding",
        "loweredCase",
        "Buffer",
        "toJSON",
        "buf",
        "start",
        "end",
        "start",
        "end",
        "buf",
        "base64",
        "buf",
        "base64",
        "buf",
        "start",
        "end",
        "buf",
        "start",
        "end",
        "end",
        "buf",
        "end",
        "i",
        "end",
        "buf",
        "i",
        "firstByte",
        "firstByte",
        "firstByte",
        "i",
        "bytesPerSequence",
        "end",
        "bytesPerSequence",
        "firstByte",
        "codePoint",
        "firstByte",
        "secondByte",
        "buf",
        "i",
        "secondByte",
        "tempCodePoint",
        "firstByte",
        "secondByte",
        "tempCodePoint",
        "codePoint",
        "tempCodePoint",
        "secondByte",
        "buf",
        "i",
        "thirdByte",
        "buf",
        "i",
        "secondByte",
        "thirdByte",
        "tempCodePoint",
        "firstByte",
        "secondByte",
        "thirdByte",
        "tempCodePoint",
        "tempCodePoint",
        "tempCodePoint",
        "codePoint",
        "tempCodePoint",
        "secondByte",
        "buf",
        "i",
        "thirdByte",
        "buf",
        "i",
        "fourthByte",
        "buf",
        "i",
        "secondByte",
        "thirdByte",
        "fourthByte",
        "tempCodePoint",
        "firstByte",
        "secondByte",
        "thirdByte",
        "fourthByte",
        "tempCodePoint",
        "tempCodePoint",
        "codePoint",
        "tempCodePoint",
        "codePoint",
        "codePoint",
        "bytesPerSequence",
        "codePoint",
        "codePoint",
        "res",
        "codePoint",
        "codePoint",
        "codePoint",
        "res",
        "codePoint",
        "i",
        "bytesPerSequence",
        "decodeCodePointsArray",
        "res",
        "codePoints",
        "codePoints",
        "len",
        "MAX_ARGUMENTS_LENGTH",
        "codePoints",
        "i",
        "len",
        "res",
        "codePoints",
        "i",
        "i",
        "MAX_ARGUMENTS_LENGTH",
        "res",
        "buf",
        "start",
        "end",
        "end",
        "buf",
        "end",
        "i",
        "end",
        "i",
        "ret",
        "buf",
        "i",
        "ret",
        "buf",
        "start",
        "end",
        "end",
        "buf",
        "end",
        "i",
        "end",
        "i",
        "ret",
        "buf",
        "i",
        "ret",
        "buf",
        "start",
        "end",
        "buf",
        "start",
        "start",
        "start",
        "end",
        "end",
        "end",
        "len",
        "end",
        "len",
        "i",
        "end",
        "i",
        "toHex",
        "buf",
        "i",
        "buf",
        "start",
        "end",
        "buf",
        "start",
        "end",
        "i",
        "i",
        "res",
        "i",
        "i",
        "res",
        "Buffer",
        "start",
        "end",
        "start",
        "start",
        "end",
        "end",
        "len",
        "end",
        "start",
        "start",
        "len",
        "start",
        "start",
        "start",
        "len",
        "start",
        "len",
        "end",
        "end",
        "len",
        "end",
        "end",
        "end",
        "len",
        "end",
        "len",
        "end",
        "start",
        "end",
        "start",
        "start",
        "end",
        "newBuf",
        "Buffer",
        "newBuf",
        "offset",
        "ext",
        "length",
        "offset",
        "offset",
        "RangeError",
        "offset",
        "ext",
        "length",
        "RangeError",
        "Buffer",
        "readUIntLE",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "checkOffset",
        "offset",
        "byteLength",
        "offset",
        "i",
        "byteLength",
        "mul",
        "val",
        "offset",
        "i",
        "mul",
        "val",
        "Buffer",
        "readUIntBE",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "checkOffset",
        "offset",
        "byteLength",
        "offset",
        "byteLength",
        "byteLength",
        "mul",
        "val",
        "offset",
        "byteLength",
        "mul",
        "val",
        "Buffer",
        "readUInt8",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "Buffer",
        "readUInt16LE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readUInt16BE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readUInt32LE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readUInt32BE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readIntLE",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "checkOffset",
        "offset",
        "byteLength",
        "offset",
        "i",
        "byteLength",
        "mul",
        "val",
        "offset",
        "i",
        "mul",
        "mul",
        "val",
        "mul",
        "val",
        "byteLength",
        "val",
        "Buffer",
        "readIntBE",
        "offset",
        "byteLength",
        "noAssert",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "checkOffset",
        "offset",
        "byteLength",
        "offset",
        "i",
        "i",
        "mul",
        "val",
        "offset",
        "i",
        "mul",
        "mul",
        "val",
        "mul",
        "val",
        "byteLength",
        "val",
        "Buffer",
        "readInt8",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readInt16LE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "val",
        "val",
        "val",
        "Buffer",
        "readInt16BE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "val",
        "val",
        "val",
        "Buffer",
        "readInt32LE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readInt32BE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "Buffer",
        "readFloatLE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "ieee754",
        "offset",
        "Buffer",
        "readFloatBE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "ieee754",
        "offset",
        "Buffer",
        "readDoubleLE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "ieee754",
        "offset",
        "Buffer",
        "readDoubleBE",
        "offset",
        "noAssert",
        "offset",
        "offset",
        "noAssert",
        "checkOffset",
        "offset",
        "ieee754",
        "offset",
        "buf",
        "value",
        "offset",
        "ext",
        "max",
        "min",
        "Buffer",
        "buf",
        "value",
        "max",
        "value",
        "min",
        "RangeError",
        "offset",
        "ext",
        "buf",
        "RangeError",
        "Buffer",
        "writeUIntLE",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "byteLength",
        "checkInt",
        "value",
        "offset",
        "byteLength",
        "maxBytes",
        "offset",
        "value",
        "i",
        "byteLength",
        "mul",
        "offset",
        "i",
        "value",
        "mul",
        "offset",
        "byteLength",
        "Buffer",
        "writeUIntBE",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "byteLength",
        "byteLength",
        "noAssert",
        "byteLength",
        "checkInt",
        "value",
        "offset",
        "byteLength",
        "maxBytes",
        "byteLength",
        "offset",
        "i",
        "value",
        "i",
        "mul",
        "offset",
        "i",
        "value",
        "mul",
        "offset",
        "byteLength",
        "Buffer",
        "writeUInt8",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeUInt16LE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeUInt16BE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeUInt32LE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeUInt32BE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeIntLE",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "byteLength",
        "checkInt",
        "value",
        "offset",
        "byteLength",
        "limit",
        "limit",
        "offset",
        "value",
        "i",
        "byteLength",
        "mul",
        "value",
        "sub",
        "offset",
        "i",
        "sub",
        "offset",
        "i",
        "value",
        "mul",
        "sub",
        "offset",
        "byteLength",
        "Buffer",
        "writeIntBE",
        "value",
        "offset",
        "byteLength",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "byteLength",
        "checkInt",
        "value",
        "offset",
        "byteLength",
        "limit",
        "limit",
        "byteLength",
        "offset",
        "i",
        "value",
        "i",
        "mul",
        "value",
        "sub",
        "offset",
        "i",
        "sub",
        "offset",
        "i",
        "value",
        "mul",
        "sub",
        "offset",
        "byteLength",
        "Buffer",
        "writeInt8",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "value",
        "value",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeInt16LE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeInt16BE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeInt32LE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "Buffer",
        "writeInt32BE",
        "value",
        "offset",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkInt",
        "value",
        "offset",
        "value",
        "value",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "value",
        "offset",
        "buf",
        "value",
        "offset",
        "ext",
        "max",
        "min",
        "offset",
        "ext",
        "buf",
        "RangeError",
        "offset",
        "RangeError",
        "buf",
        "value",
        "offset",
        "littleEndian",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkIEEE754",
        "buf",
        "value",
        "offset",
        "ieee754",
        "buf",
        "value",
        "offset",
        "littleEndian",
        "offset",
        "Buffer",
        "writeFloatLE",
        "value",
        "offset",
        "noAssert",
        "writeFloat",
        "value",
        "offset",
        "noAssert",
        "Buffer",
        "writeFloatBE",
        "value",
        "offset",
        "noAssert",
        "writeFloat",
        "value",
        "offset",
        "noAssert",
        "buf",
        "value",
        "offset",
        "littleEndian",
        "noAssert",
        "value",
        "value",
        "offset",
        "offset",
        "noAssert",
        "checkIEEE754",
        "buf",
        "value",
        "offset",
        "ieee754",
        "buf",
        "value",
        "offset",
        "littleEndian",
        "offset",
        "Buffer",
        "writeDoubleLE",
        "value",
        "offset",
        "noAssert",
        "writeDouble",
        "value",
        "offset",
        "noAssert",
        "Buffer",
        "writeDoubleBE",
        "value",
        "offset",
        "noAssert",
        "writeDouble",
        "value",
        "offset",
        "noAssert",
        "Buffer",
        "copy",
        "target",
        "targetStart",
        "start",
        "end",
        "Buffer",
        "target",
        "start",
        "start",
        "end",
        "end",
        "end",
        "targetStart",
        "target",
        "targetStart",
        "target",
        "targetStart",
        "targetStart",
        "end",
        "end",
        "start",
        "end",
        "start",
        "end",
        "start",
        "target",
        "targetStart",
        "RangeError",
        "start",
        "start",
        "RangeError",
        "end",
        "RangeError",
        "end",
        "end",
        "target",
        "targetStart",
        "end",
        "start",
        "end",
        "target",
        "targetStart",
        "start",
        "end",
        "start",
        "target",
        "Uint8Array",
        "targetStart",
        "start",
        "end",
        "target",
        "start",
        "targetStart",
        "targetStart",
        "end",
        "len",
        "i",
        "i",
        "target",
        "i",
        "targetStart",
        "i",
        "start",
        "Uint8Array",
        "target",
        "start",
        "end",
        "targetStart",
        "len",
        "Buffer",
        "fill",
        "val",
        "start",
        "end",
        "encoding",
        "val",
        "start",
        "encoding",
        "start",
        "start",
        "end",
        "end",
        "encoding",
        "end",
        "end",
        "encoding",
        "encoding",
        "encoding",
        "Buffer",
        "encoding",
        "encoding",
        "val",
        "val",
        "encoding",
        "code",
        "encoding",
        "val",
        "code",
        "val",
        "val",
        "val",
        "start",
        "start",
        "end",
        "RangeError",
        "end",
        "start",
        "start",
        "start",
        "end",
        "end",
        "end",
        "val",
        "val",
        "val",
        "i",
        "start",
        "i",
        "end",
        "i",
        "i",
        "val",
        "Buffer",
        "val",
        "val",
        "Buffer",
        "val",
        "encoding",
        "len",
        "val",
        "i",
        "i",
        "end",
        "start",
        "i",
        "i",
        "start",
        "i",
        "len",
        "INVALID_BASE64_RE",
        "n",
        "n",
        "n",
        "n",
        "units",
        "units",
        "units",
        "Infinity",
        "i",
        "length",
        "i",
        "codePoint",
        "i",
        "codePoint",
        "codePoint",
        "leadSurrogate",
        "codePoint",
        "units",
        "i",
        "length",
        "units",
        "leadSurrogate",
        "codePoint",
        "codePoint",
        "units",
        "leadSurrogate",
        "codePoint",
        "codePoint",
        "leadSurrogate",
        "codePoint",
        "leadSurrogate",
        "units",
        "leadSurrogate",
        "codePoint",
        "units",
        "codePoint",
        "codePoint",
        "units",
        "codePoint",
        "codePoint",
        "codePoint",
        "units",
        "codePoint",
        "codePoint",
        "codePoint",
        "codePoint",
        "units",
        "codePoint",
        "codePoint",
        "codePoint",
        "codePoint",
        "i",
        "i",
        "byteArray",
        "i",
        "byteArray",
        "units",
        "i",
        "i",
        "units",
        "c",
        "i",
        "hi",
        "c",
        "lo",
        "c",
        "byteArray",
        "lo",
        "byteArray",
        "hi",
        "byteArray",
        "base64",
        "base64clean",
        "src",
        "dst",
        "offset",
        "length",
        "i",
        "length",
        "i",
        "i",
        "offset",
        "dst",
        "i",
        "src",
        "dst",
        "i",
        "offset",
        "src",
        "i",
        "i",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "require",
        "exports",
        "Buffer",
        "arg",
        "arg",
        "objectToString",
        "arg",
        "exports",
        "isArray",
        "arg",
        "arg",
        "exports",
        "isBoolean",
        "arg",
        "arg",
        "exports",
        "isNull",
        "arg",
        "arg",
        "exports",
        "isNullOrUndefined",
        "arg",
        "arg",
        "exports",
        "isNumber",
        "arg",
        "arg",
        "exports",
        "isString",
        "arg",
        "arg",
        "exports",
        "isSymbol",
        "arg",
        "arg",
        "exports",
        "isUndefined",
        "re",
        "objectToString",
        "re",
        "exports",
        "isRegExp",
        "arg",
        "arg",
        "arg",
        "exports",
        "isObject",
        "d",
        "objectToString",
        "d",
        "exports",
        "isDate",
        "e",
        "objectToString",
        "e",
        "e",
        "exports",
        "isError",
        "arg",
        "arg",
        "exports",
        "isFunction",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "exports",
        "isPrimitive",
        "exports",
        "Buffer",
        "o",
        "o",
        "require",
        "require",
        "exports",
        "objectCreatePolyfill",
        "objectKeysPolyfill",
        "functionBindPolyfill",
        "objectCreate",
        "EventEmitter",
        "EventEmitter",
        "EventEmitter",
        "EventEmitter",
        "EventEmitter",
        "o",
        "hasDefineProperty",
        "o",
        "err",
        "hasDefineProperty",
        "hasDefineProperty",
        "EventEmitter",
        "defaultMaxListeners",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "defaultMaxListeners",
        "arg",
        "EventEmitter",
        "defaultMaxListeners",
        "EventEmitter",
        "setMaxListeners",
        "n",
        "n",
        "n",
        "isNaN",
        "n",
        "n",
        "that",
        "that",
        "EventEmitter",
        "that",
        "EventEmitter",
        "getMaxListeners",
        "$getMaxListeners",
        "handler",
        "isFn",
        "isFn",
        "handler",
        "handler",
        "arrayClone",
        "handler",
        "len",
        "i",
        "len",
        "i",
        "listeners",
        "i",
        "handler",
        "isFn",
        "arg1",
        "isFn",
        "handler",
        "arg1",
        "handler",
        "arrayClone",
        "handler",
        "len",
        "i",
        "len",
        "i",
        "listeners",
        "i",
        "arg1",
        "handler",
        "isFn",
        "arg1",
        "arg2",
        "isFn",
        "handler",
        "arg1",
        "arg2",
        "handler",
        "arrayClone",
        "handler",
        "len",
        "i",
        "len",
        "i",
        "listeners",
        "i",
        "arg1",
        "arg2",
        "handler",
        "isFn",
        "arg1",
        "arg2",
        "arg3",
        "isFn",
        "handler",
        "arg1",
        "arg2",
        "arg3",
        "handler",
        "arrayClone",
        "handler",
        "len",
        "i",
        "len",
        "i",
        "listeners",
        "i",
        "arg1",
        "arg2",
        "arg3",
        "handler",
        "isFn",
        "args",
        "isFn",
        "handler",
        "args",
        "handler",
        "arrayClone",
        "handler",
        "len",
        "i",
        "len",
        "i",
        "listeners",
        "i",
        "args",
        "EventEmitter",
        "emit",
        "events",
        "events",
        "doError",
        "doError",
        "events",
        "doError",
        "doError",
        "arguments",
        "er",
        "arguments",
        "er",
        "er",
        "er",
        "err",
        "er",
        "err",
        "handler",
        "events",
        "handler",
        "handler",
        "len",
        "arguments",
        "len",
        "emitNone",
        "handler",
        "isFn",
        "emitOne",
        "handler",
        "isFn",
        "arguments",
        "emitTwo",
        "handler",
        "isFn",
        "arguments",
        "arguments",
        "emitThree",
        "handler",
        "isFn",
        "arguments",
        "arguments",
        "arguments",
        "args",
        "len",
        "i",
        "i",
        "len",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "emitMany",
        "handler",
        "isFn",
        "args",
        "target",
        "listener",
        "prepend",
        "listener",
        "events",
        "target",
        "events",
        "events",
        "target",
        "objectCreate",
        "target",
        "events",
        "target",
        "listener",
        "listener",
        "listener",
        "events",
        "target",
        "existing",
        "events",
        "existing",
        "existing",
        "events",
        "listener",
        "target",
        "existing",
        "existing",
        "events",
        "prepend",
        "listener",
        "existing",
        "existing",
        "listener",
        "prepend",
        "existing",
        "listener",
        "existing",
        "listener",
        "existing",
        "m",
        "$getMaxListeners",
        "target",
        "m",
        "m",
        "existing",
        "m",
        "existing",
        "existing",
        "w",
        "w",
        "target",
        "w",
        "w",
        "existing",
        "w",
        "w",
        "target",
        "EventEmitter",
        "addListener",
        "listener",
        "_addListener",
        "listener",
        "EventEmitter",
        "EventEmitter",
        "EventEmitter",
        "prependListener",
        "listener",
        "_addListener",
        "listener",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "i",
        "args",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "args",
        "target",
        "listener",
        "target",
        "listener",
        "bind",
        "onceWrapper",
        "state",
        "wrapped",
        "listener",
        "state",
        "wrapped",
        "wrapped",
        "EventEmitter",
        "once",
        "listener",
        "listener",
        "_onceWrap",
        "listener",
        "EventEmitter",
        "prependOnceListener",
        "listener",
        "listener",
        "_onceWrap",
        "listener",
        "EventEmitter",
        "removeListener",
        "listener",
        "listener",
        "events",
        "events",
        "events",
        "listener",
        "listener",
        "objectCreate",
        "events",
        "events",
        "listener",
        "position",
        "i",
        "i",
        "i",
        "i",
        "listener",
        "i",
        "listener",
        "originalListener",
        "i",
        "position",
        "i",
        "position",
        "position",
        "spliceOne",
        "position",
        "events",
        "events",
        "originalListener",
        "listener",
        "EventEmitter",
        "removeAllListeners",
        "events",
        "events",
        "events",
        "arguments",
        "objectCreate",
        "events",
        "objectCreate",
        "events",
        "arguments",
        "objectKeys",
        "events",
        "i",
        "i",
        "keys",
        "i",
        "key",
        "keys",
        "i",
        "key",
        "key",
        "objectCreate",
        "listeners",
        "events",
        "listeners",
        "listeners",
        "listeners",
        "i",
        "listeners",
        "i",
        "i",
        "listeners",
        "i",
        "target",
        "unwrap",
        "target",
        "events",
        "events",
        "evlistener",
        "evlistener",
        "unwrap",
        "evlistener",
        "evlistener",
        "evlistener",
        "unwrap",
        "unwrapListeners",
        "evlistener",
        "arrayClone",
        "evlistener",
        "evlistener",
        "EventEmitter",
        "listeners",
        "_listeners",
        "EventEmitter",
        "rawListeners",
        "_listeners",
        "EventEmitter",
        "emitter",
        "emitter",
        "emitter",
        "listenerCount",
        "emitter",
        "EventEmitter",
        "listenerCount",
        "events",
        "events",
        "evlistener",
        "evlistener",
        "evlistener",
        "EventEmitter",
        "eventNames",
        "index",
        "i",
        "k",
        "n",
        "i",
        "k",
        "i",
        "k",
        "arr",
        "n",
        "n",
        "i",
        "n",
        "i",
        "copy",
        "i",
        "arr",
        "i",
        "copy",
        "arr",
        "arr",
        "i",
        "ret",
        "i",
        "ret",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "ret",
        "proto",
        "F",
        "proto",
        "F",
        "obj",
        "k",
        "obj",
        "obj",
        "k",
        "keys",
        "k",
        "k",
        "context",
        "fn",
        "context",
        "arguments",
        "require",
        "exports",
        "exports",
        "buffer",
        "offset",
        "isLE",
        "mLen",
        "nBytes",
        "nBytes",
        "mLen",
        "eLen",
        "eMax",
        "isLE",
        "nBytes",
        "isLE",
        "buffer",
        "offset",
        "i",
        "i",
        "d",
        "e",
        "s",
        "nBits",
        "s",
        "nBits",
        "nBits",
        "eLen",
        "nBits",
        "e",
        "e",
        "buffer",
        "offset",
        "i",
        "i",
        "d",
        "nBits",
        "m",
        "e",
        "nBits",
        "e",
        "nBits",
        "nBits",
        "mLen",
        "nBits",
        "m",
        "m",
        "buffer",
        "offset",
        "i",
        "i",
        "d",
        "nBits",
        "e",
        "e",
        "eBias",
        "e",
        "eMax",
        "m",
        "NaN",
        "s",
        "Infinity",
        "m",
        "m",
        "mLen",
        "e",
        "e",
        "eBias",
        "s",
        "m",
        "e",
        "mLen",
        "exports",
        "buffer",
        "value",
        "offset",
        "isLE",
        "mLen",
        "nBytes",
        "nBytes",
        "mLen",
        "eLen",
        "eMax",
        "mLen",
        "isLE",
        "nBytes",
        "isLE",
        "value",
        "value",
        "value",
        "value",
        "value",
        "isNaN",
        "value",
        "value",
        "Infinity",
        "m",
        "isNaN",
        "value",
        "e",
        "eMax",
        "e",
        "value",
        "value",
        "c",
        "e",
        "e",
        "c",
        "e",
        "eBias",
        "value",
        "rt",
        "c",
        "value",
        "rt",
        "eBias",
        "value",
        "c",
        "e",
        "c",
        "e",
        "eBias",
        "eMax",
        "m",
        "e",
        "eMax",
        "e",
        "eBias",
        "m",
        "value",
        "c",
        "mLen",
        "e",
        "e",
        "eBias",
        "m",
        "value",
        "eBias",
        "mLen",
        "e",
        "mLen",
        "buffer",
        "offset",
        "i",
        "m",
        "i",
        "d",
        "m",
        "mLen",
        "e",
        "e",
        "mLen",
        "m",
        "eLen",
        "mLen",
        "eLen",
        "buffer",
        "offset",
        "i",
        "e",
        "i",
        "d",
        "e",
        "eLen",
        "buffer",
        "offset",
        "i",
        "d",
        "s",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "obj",
        "obj",
        "isBuffer",
        "obj",
        "isSlowBuffer",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "isBuffer",
        "obj",
        "require",
        "exports",
        "arr",
        "toString",
        "arr",
        "require",
        "exports",
        "process",
        "process",
        "process",
        "process",
        "process",
        "nextTick",
        "process",
        "fn",
        "arg1",
        "arg2",
        "arg3",
        "fn",
        "arguments",
        "len",
        "process",
        "fn",
        "process",
        "afterTickOne",
        "fn",
        "arg1",
        "process",
        "afterTickTwo",
        "fn",
        "arg1",
        "arg2",
        "process",
        "afterTickThree",
        "fn",
        "arg1",
        "arg2",
        "arg3",
        "args",
        "len",
        "i",
        "i",
        "args",
        "args",
        "i",
        "arguments",
        "i",
        "process",
        "afterTick",
        "fn",
        "args",
        "require",
        "require",
        "exports",
        "setTimeout",
        "cachedSetTimeout",
        "setTimeout",
        "cachedSetTimeout",
        "defaultSetTimout",
        "e",
        "cachedSetTimeout",
        "defaultSetTimout",
        "clearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "e",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "fun",
        "cachedSetTimeout",
        "setTimeout",
        "setTimeout",
        "fun",
        "cachedSetTimeout",
        "defaultSetTimout",
        "cachedSetTimeout",
        "setTimeout",
        "cachedSetTimeout",
        "setTimeout",
        "setTimeout",
        "fun",
        "cachedSetTimeout",
        "fun",
        "e",
        "cachedSetTimeout",
        "fun",
        "e",
        "cachedSetTimeout",
        "fun",
        "marker",
        "cachedClearTimeout",
        "clearTimeout",
        "clearTimeout",
        "marker",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "clearTimeout",
        "marker",
        "cachedClearTimeout",
        "marker",
        "e",
        "cachedClearTimeout",
        "marker",
        "e",
        "cachedClearTimeout",
        "marker",
        "draining",
        "currentQueue",
        "draining",
        "currentQueue",
        "queue",
        "currentQueue",
        "queue",
        "queueIndex",
        "queue",
        "drainQueue",
        "draining",
        "runTimeout",
        "cleanUpNextTick",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "queueIndex",
        "len",
        "currentQueue",
        "currentQueue",
        "queueIndex",
        "queueIndex",
        "len",
        "queue",
        "currentQueue",
        "draining",
        "runClearTimeout",
        "timeout",
        "process",
        "fun",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "queue",
        "Item",
        "fun",
        "args",
        "queue",
        "draining",
        "runTimeout",
        "drainQueue",
        "fun",
        "array",
        "fun",
        "array",
        "Item",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "obj",
        "key",
        "obj",
        "keys",
        "key",
        "keys",
        "Duplex",
        "require",
        "util",
        "require",
        "require",
        "require",
        "util",
        "Duplex",
        "Readable",
        "objectKeys",
        "Writable",
        "v",
        "keys",
        "v",
        "keys",
        "v",
        "Duplex",
        "method",
        "Duplex",
        "method",
        "Writable",
        "method",
        "options",
        "Duplex",
        "Duplex",
        "options",
        "Readable",
        "options",
        "Writable",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "onend",
        "Duplex",
        "pna",
        "onEndNT",
        "Duplex",
        "value",
        "value",
        "value",
        "Duplex",
        "err",
        "cb",
        "pna",
        "cb",
        "err",
        "require",
        "exports",
        "PassThrough",
        "require",
        "require",
        "util",
        "require",
        "util",
        "PassThrough",
        "Transform",
        "options",
        "PassThrough",
        "PassThrough",
        "options",
        "Transform",
        "options",
        "PassThrough",
        "chunk",
        "encoding",
        "cb",
        "cb",
        "chunk",
        "require",
        "exports",
        "process",
        "require",
        "Readable",
        "require",
        "Readable",
        "ReadableState",
        "require",
        "emitter",
        "emitter",
        "require",
        "require",
        "chunk",
        "Buffer",
        "chunk",
        "obj",
        "Buffer",
        "obj",
        "obj",
        "OurUint8Array",
        "require",
        "util",
        "require",
        "require",
        "debugUtil",
        "debugUtil",
        "debug",
        "debugUtil",
        "debug",
        "require",
        "require",
        "util",
        "Readable",
        "Stream",
        "emitter",
        "fn",
        "emitter",
        "emitter",
        "fn",
        "emitter",
        "emitter",
        "emitter",
        "fn",
        "isArray",
        "emitter",
        "emitter",
        "fn",
        "emitter",
        "fn",
        "emitter",
        "options",
        "stream",
        "Duplex",
        "Duplex",
        "require",
        "options",
        "options",
        "stream",
        "Duplex",
        "options",
        "isDuplex",
        "options",
        "options",
        "options",
        "hwm",
        "hwm",
        "hwm",
        "isDuplex",
        "readableHwm",
        "readableHwm",
        "readableHwm",
        "defaultHwm",
        "BufferList",
        "options",
        "options",
        "StringDecoder",
        "StringDecoder",
        "require",
        "StringDecoder",
        "options",
        "options",
        "options",
        "Duplex",
        "Duplex",
        "require",
        "Readable",
        "Readable",
        "options",
        "ReadableState",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "Stream",
        "Readable",
        "value",
        "value",
        "Readable",
        "destroyImpl",
        "Readable",
        "destroyImpl",
        "Readable",
        "err",
        "cb",
        "cb",
        "err",
        "Readable",
        "chunk",
        "encoding",
        "state",
        "chunk",
        "encoding",
        "encoding",
        "state",
        "encoding",
        "state",
        "chunk",
        "Buffer",
        "chunk",
        "encoding",
        "encoding",
        "skipChunkCheck",
        "skipChunkCheck",
        "readableAddChunk",
        "chunk",
        "encoding",
        "skipChunkCheck",
        "Readable",
        "chunk",
        "readableAddChunk",
        "chunk",
        "stream",
        "chunk",
        "encoding",
        "addToFront",
        "skipChunkCheck",
        "stream",
        "chunk",
        "state",
        "onEofChunk",
        "stream",
        "state",
        "skipChunkCheck",
        "er",
        "chunkInvalid",
        "state",
        "chunk",
        "er",
        "stream",
        "er",
        "state",
        "chunk",
        "chunk",
        "chunk",
        "state",
        "chunk",
        "Buffer",
        "chunk",
        "_uint8ArrayToBuffer",
        "chunk",
        "addToFront",
        "state",
        "stream",
        "addChunk",
        "stream",
        "state",
        "chunk",
        "state",
        "stream",
        "state",
        "state",
        "encoding",
        "chunk",
        "state",
        "chunk",
        "state",
        "chunk",
        "addChunk",
        "stream",
        "state",
        "chunk",
        "maybeReadMore",
        "stream",
        "state",
        "addChunk",
        "stream",
        "state",
        "chunk",
        "addToFront",
        "state",
        "needMoreData",
        "state",
        "stream",
        "state",
        "chunk",
        "addToFront",
        "state",
        "state",
        "state",
        "stream",
        "chunk",
        "stream",
        "state",
        "state",
        "chunk",
        "addToFront",
        "state",
        "chunk",
        "state",
        "chunk",
        "state",
        "emitReadable",
        "stream",
        "maybeReadMore",
        "stream",
        "state",
        "state",
        "chunk",
        "_isUint8Array",
        "chunk",
        "chunk",
        "chunk",
        "state",
        "er",
        "er",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "Readable",
        "Readable",
        "enc",
        "StringDecoder",
        "StringDecoder",
        "require",
        "StringDecoder",
        "enc",
        "enc",
        "n",
        "n",
        "MAX_HWM",
        "n",
        "MAX_HWM",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "state",
        "n",
        "state",
        "state",
        "state",
        "n",
        "n",
        "state",
        "state",
        "state",
        "state",
        "n",
        "state",
        "state",
        "computeNewHighWaterMark",
        "n",
        "n",
        "state",
        "n",
        "state",
        "state",
        "state",
        "Readable",
        "n",
        "debug",
        "n",
        "n",
        "parseInt",
        "n",
        "n",
        "state",
        "n",
        "state",
        "state",
        "state",
        "state",
        "debug",
        "state",
        "state",
        "state",
        "state",
        "endReadable",
        "emitReadable",
        "n",
        "howMuchToRead",
        "n",
        "state",
        "n",
        "state",
        "state",
        "endReadable",
        "state",
        "debug",
        "doRead",
        "state",
        "state",
        "n",
        "state",
        "doRead",
        "debug",
        "doRead",
        "state",
        "state",
        "doRead",
        "debug",
        "doRead",
        "doRead",
        "debug",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "n",
        "howMuchToRead",
        "nOrig",
        "state",
        "n",
        "ret",
        "fromList",
        "n",
        "state",
        "ret",
        "ret",
        "state",
        "n",
        "state",
        "n",
        "state",
        "state",
        "state",
        "nOrig",
        "n",
        "state",
        "endReadable",
        "ret",
        "ret",
        "ret",
        "stream",
        "state",
        "state",
        "state",
        "state",
        "chunk",
        "chunk",
        "state",
        "chunk",
        "state",
        "state",
        "chunk",
        "state",
        "emitReadable",
        "stream",
        "stream",
        "stream",
        "state",
        "state",
        "debug",
        "state",
        "state",
        "state",
        "pna",
        "emitReadable_",
        "stream",
        "emitReadable_",
        "stream",
        "stream",
        "debug",
        "stream",
        "flow",
        "stream",
        "stream",
        "state",
        "state",
        "state",
        "pna",
        "maybeReadMore_",
        "stream",
        "state",
        "stream",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "debug",
        "stream",
        "len",
        "state",
        "len",
        "state",
        "state",
        "Readable",
        "n",
        "Readable",
        "dest",
        "pipeOpts",
        "state",
        "state",
        "dest",
        "state",
        "state",
        "dest",
        "state",
        "dest",
        "state",
        "debug",
        "state",
        "pipeOpts",
        "pipeOpts",
        "pipeOpts",
        "dest",
        "process",
        "dest",
        "process",
        "doEnd",
        "onend",
        "unpipe",
        "state",
        "pna",
        "endFn",
        "src",
        "endFn",
        "dest",
        "onunpipe",
        "readable",
        "unpipeInfo",
        "debug",
        "readable",
        "src",
        "unpipeInfo",
        "unpipeInfo",
        "unpipeInfo",
        "cleanup",
        "debug",
        "dest",
        "pipeOnDrain",
        "src",
        "dest",
        "ondrain",
        "debug",
        "dest",
        "onclose",
        "dest",
        "onfinish",
        "dest",
        "ondrain",
        "dest",
        "onerror",
        "dest",
        "onunpipe",
        "src",
        "onend",
        "src",
        "unpipe",
        "src",
        "ondata",
        "cleanedUp",
        "state",
        "dest",
        "dest",
        "ondrain",
        "src",
        "ondata",
        "chunk",
        "debug",
        "increasedAwaitDrain",
        "dest",
        "chunk",
        "ret",
        "increasedAwaitDrain",
        "state",
        "state",
        "dest",
        "state",
        "indexOf",
        "state",
        "dest",
        "cleanedUp",
        "debug",
        "src",
        "src",
        "increasedAwaitDrain",
        "src",
        "er",
        "debug",
        "er",
        "unpipe",
        "dest",
        "onerror",
        "EElistenerCount",
        "dest",
        "dest",
        "er",
        "prependListener",
        "dest",
        "onerror",
        "dest",
        "onfinish",
        "unpipe",
        "dest",
        "onclose",
        "debug",
        "dest",
        "onclose",
        "unpipe",
        "dest",
        "onfinish",
        "debug",
        "src",
        "dest",
        "dest",
        "src",
        "state",
        "debug",
        "src",
        "dest",
        "src",
        "src",
        "debug",
        "state",
        "state",
        "state",
        "state",
        "EElistenerCount",
        "src",
        "state",
        "flow",
        "src",
        "Readable",
        "dest",
        "state",
        "state",
        "dest",
        "dest",
        "state",
        "dest",
        "dest",
        "state",
        "state",
        "state",
        "state",
        "dest",
        "dest",
        "unpipeInfo",
        "dest",
        "state",
        "state",
        "state",
        "state",
        "state",
        "i",
        "len",
        "i",
        "dests",
        "i",
        "unpipeInfo",
        "indexOf",
        "state",
        "dest",
        "index",
        "state",
        "index",
        "state",
        "state",
        "state",
        "state",
        "dest",
        "unpipeInfo",
        "Readable",
        "ev",
        "fn",
        "Stream",
        "ev",
        "fn",
        "ev",
        "ev",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "pna",
        "nReadingNextTick",
        "state",
        "emitReadable",
        "res",
        "Readable",
        "Readable",
        "debug",
        "Readable",
        "state",
        "debug",
        "state",
        "resume",
        "state",
        "stream",
        "state",
        "state",
        "state",
        "pna",
        "resume_",
        "stream",
        "state",
        "stream",
        "state",
        "state",
        "debug",
        "stream",
        "state",
        "state",
        "stream",
        "flow",
        "stream",
        "state",
        "state",
        "stream",
        "Readable",
        "debug",
        "debug",
        "stream",
        "stream",
        "debug",
        "state",
        "state",
        "stream",
        "Readable",
        "stream",
        "stream",
        "debug",
        "state",
        "state",
        "state",
        "chunk",
        "chunk",
        "_this",
        "chunk",
        "_this",
        "stream",
        "chunk",
        "debug",
        "state",
        "chunk",
        "state",
        "chunk",
        "state",
        "chunk",
        "chunk",
        "state",
        "chunk",
        "chunk",
        "_this",
        "chunk",
        "ret",
        "paused",
        "stream",
        "i",
        "stream",
        "i",
        "stream",
        "i",
        "i",
        "method",
        "stream",
        "method",
        "stream",
        "arguments",
        "i",
        "n",
        "kProxyEvents",
        "n",
        "stream",
        "kProxyEvents",
        "n",
        "kProxyEvents",
        "n",
        "n",
        "debug",
        "n",
        "paused",
        "paused",
        "stream",
        "Readable",
        "Readable",
        "fromList",
        "n",
        "state",
        "state",
        "state",
        "ret",
        "state",
        "n",
        "n",
        "state",
        "state",
        "ret",
        "state",
        "state",
        "ret",
        "state",
        "ret",
        "state",
        "state",
        "state",
        "ret",
        "fromListPartial",
        "n",
        "state",
        "state",
        "ret",
        "n",
        "hasStrings",
        "n",
        "ret",
        "n",
        "n",
        "n",
        "ret",
        "ret",
        "hasStrings",
        "copyFromBufferString",
        "n",
        "copyFromBuffer",
        "n",
        "ret",
        "n",
        "p",
        "n",
        "ret",
        "p",
        "p",
        "p",
        "n",
        "n",
        "nb",
        "ret",
        "ret",
        "n",
        "n",
        "nb",
        "n",
        "nb",
        "c",
        "p",
        "p",
        "p",
        "p",
        "nb",
        "c",
        "c",
        "ret",
        "n",
        "Buffer",
        "n",
        "p",
        "ret",
        "n",
        "p",
        "p",
        "p",
        "p",
        "n",
        "buf",
        "buf",
        "n",
        "buf",
        "ret",
        "ret",
        "n",
        "nb",
        "n",
        "nb",
        "n",
        "nb",
        "buf",
        "c",
        "p",
        "p",
        "p",
        "p",
        "buf",
        "nb",
        "c",
        "c",
        "ret",
        "stream",
        "stream",
        "state",
        "state",
        "state",
        "pna",
        "endReadableNT",
        "state",
        "stream",
        "state",
        "stream",
        "state",
        "state",
        "state",
        "stream",
        "stream",
        "xs",
        "x",
        "xs",
        "i",
        "l",
        "i",
        "xs",
        "i",
        "x",
        "i",
        "require",
        "require",
        "exports",
        "Transform",
        "require",
        "require",
        "util",
        "require",
        "util",
        "Transform",
        "Duplex",
        "er",
        "data",
        "ts",
        "ts",
        "cb",
        "ts",
        "ts",
        "data",
        "data",
        "cb",
        "er",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "options",
        "Transform",
        "Transform",
        "options",
        "Duplex",
        "options",
        "afterTransform",
        "options",
        "options",
        "options",
        "options",
        "options",
        "prefinish",
        "er",
        "data",
        "done",
        "_this",
        "er",
        "data",
        "done",
        "Transform",
        "chunk",
        "encoding",
        "Duplex",
        "chunk",
        "encoding",
        "Transform",
        "chunk",
        "encoding",
        "cb",
        "Transform",
        "chunk",
        "encoding",
        "cb",
        "ts",
        "cb",
        "ts",
        "chunk",
        "ts",
        "encoding",
        "ts",
        "ts",
        "rs",
        "rs",
        "rs",
        "rs",
        "Transform",
        "n",
        "ts",
        "ts",
        "ts",
        "ts",
        "ts",
        "ts",
        "ts",
        "ts",
        "Transform",
        "err",
        "cb",
        "Duplex",
        "err",
        "err2",
        "cb",
        "err2",
        "_this2",
        "stream",
        "er",
        "data",
        "er",
        "stream",
        "er",
        "data",
        "stream",
        "data",
        "stream",
        "stream",
        "stream",
        "require",
        "exports",
        "process",
        "setImmediate",
        "require",
        "Writable",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "encoding",
        "cb",
        "state",
        "onCorkedFinish",
        "_this",
        "state",
        "process",
        "process",
        "setImmediate",
        "pna",
        "Writable",
        "WritableState",
        "require",
        "util",
        "require",
        "require",
        "require",
        "require",
        "chunk",
        "Buffer",
        "chunk",
        "obj",
        "Buffer",
        "obj",
        "obj",
        "OurUint8Array",
        "require",
        "util",
        "Writable",
        "Stream",
        "options",
        "stream",
        "Duplex",
        "Duplex",
        "require",
        "options",
        "options",
        "stream",
        "Duplex",
        "options",
        "isDuplex",
        "options",
        "options",
        "options",
        "hwm",
        "hwm",
        "hwm",
        "isDuplex",
        "writableHwm",
        "writableHwm",
        "writableHwm",
        "defaultHwm",
        "options",
        "noDecode",
        "options",
        "er",
        "onwrite",
        "stream",
        "er",
        "CorkedRequest",
        "WritableState",
        "getBuffer",
        "current",
        "current",
        "current",
        "current",
        "WritableState",
        "internalUtil",
        "_",
        "realHasInstance",
        "Writable",
        "realHasInstance",
        "Writable",
        "WritableState",
        "realHasInstance",
        "options",
        "Duplex",
        "Duplex",
        "require",
        "realHasInstance",
        "Writable",
        "Duplex",
        "Writable",
        "options",
        "WritableState",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "Stream",
        "Writable",
        "stream",
        "cb",
        "stream",
        "er",
        "pna",
        "cb",
        "er",
        "stream",
        "state",
        "chunk",
        "cb",
        "chunk",
        "er",
        "chunk",
        "chunk",
        "state",
        "er",
        "er",
        "stream",
        "er",
        "pna",
        "cb",
        "er",
        "valid",
        "valid",
        "Writable",
        "chunk",
        "encoding",
        "cb",
        "state",
        "_isUint8Array",
        "chunk",
        "isBuf",
        "Buffer",
        "chunk",
        "chunk",
        "_uint8ArrayToBuffer",
        "chunk",
        "encoding",
        "cb",
        "encoding",
        "encoding",
        "isBuf",
        "encoding",
        "encoding",
        "encoding",
        "state",
        "cb",
        "cb",
        "nop",
        "state",
        "writeAfterEnd",
        "cb",
        "isBuf",
        "validChunk",
        "state",
        "chunk",
        "cb",
        "state",
        "ret",
        "writeOrBuffer",
        "state",
        "isBuf",
        "chunk",
        "encoding",
        "cb",
        "ret",
        "Writable",
        "state",
        "Writable",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "clearBuffer",
        "state",
        "Writable",
        "setDefaultEncoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "state",
        "chunk",
        "encoding",
        "state",
        "state",
        "chunk",
        "chunk",
        "Buffer",
        "chunk",
        "encoding",
        "chunk",
        "Writable",
        "stream",
        "state",
        "isBuf",
        "chunk",
        "encoding",
        "cb",
        "isBuf",
        "decodeChunk",
        "state",
        "chunk",
        "encoding",
        "chunk",
        "newChunk",
        "isBuf",
        "encoding",
        "chunk",
        "newChunk",
        "state",
        "chunk",
        "state",
        "len",
        "state",
        "state",
        "ret",
        "state",
        "state",
        "state",
        "state",
        "state",
        "chunk",
        "encoding",
        "isBuf",
        "cb",
        "last",
        "last",
        "state",
        "state",
        "state",
        "state",
        "doWrite",
        "stream",
        "state",
        "len",
        "chunk",
        "encoding",
        "cb",
        "ret",
        "stream",
        "state",
        "writev",
        "len",
        "chunk",
        "encoding",
        "cb",
        "state",
        "len",
        "state",
        "cb",
        "state",
        "state",
        "writev",
        "stream",
        "chunk",
        "state",
        "stream",
        "chunk",
        "encoding",
        "state",
        "state",
        "stream",
        "state",
        "sync",
        "er",
        "cb",
        "state",
        "sync",
        "pna",
        "cb",
        "er",
        "pna",
        "finishMaybe",
        "stream",
        "state",
        "stream",
        "stream",
        "er",
        "cb",
        "er",
        "stream",
        "stream",
        "er",
        "finishMaybe",
        "stream",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "stream",
        "er",
        "stream",
        "state",
        "state",
        "onwriteStateUpdate",
        "state",
        "er",
        "onwriteError",
        "stream",
        "state",
        "sync",
        "er",
        "cb",
        "needFinish",
        "state",
        "finished",
        "state",
        "state",
        "state",
        "clearBuffer",
        "stream",
        "state",
        "sync",
        "asyncWrite",
        "afterWrite",
        "stream",
        "state",
        "finished",
        "cb",
        "afterWrite",
        "stream",
        "state",
        "finished",
        "cb",
        "stream",
        "state",
        "finished",
        "cb",
        "finished",
        "onwriteDrain",
        "stream",
        "state",
        "state",
        "cb",
        "finishMaybe",
        "stream",
        "state",
        "stream",
        "state",
        "state",
        "state",
        "state",
        "stream",
        "stream",
        "state",
        "state",
        "state",
        "stream",
        "entry",
        "entry",
        "state",
        "l",
        "state",
        "holder",
        "entry",
        "entry",
        "buffer",
        "count",
        "entry",
        "entry",
        "allBuffers",
        "entry",
        "entry",
        "count",
        "buffer",
        "allBuffers",
        "doWrite",
        "stream",
        "state",
        "state",
        "buffer",
        "holder",
        "state",
        "state",
        "holder",
        "state",
        "holder",
        "holder",
        "state",
        "CorkedRequest",
        "state",
        "state",
        "entry",
        "entry",
        "entry",
        "entry",
        "state",
        "chunk",
        "doWrite",
        "stream",
        "state",
        "len",
        "chunk",
        "encoding",
        "cb",
        "entry",
        "entry",
        "state",
        "state",
        "entry",
        "state",
        "state",
        "entry",
        "state",
        "Writable",
        "chunk",
        "encoding",
        "cb",
        "cb",
        "Writable",
        "Writable",
        "chunk",
        "encoding",
        "cb",
        "chunk",
        "cb",
        "chunk",
        "chunk",
        "encoding",
        "encoding",
        "cb",
        "encoding",
        "encoding",
        "chunk",
        "chunk",
        "chunk",
        "encoding",
        "state",
        "state",
        "state",
        "state",
        "endWritable",
        "state",
        "cb",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "stream",
        "state",
        "stream",
        "err",
        "state",
        "err",
        "stream",
        "err",
        "state",
        "stream",
        "finishMaybe",
        "stream",
        "state",
        "stream",
        "state",
        "state",
        "state",
        "stream",
        "state",
        "state",
        "pna",
        "callFinal",
        "stream",
        "state",
        "state",
        "stream",
        "stream",
        "state",
        "needFinish",
        "state",
        "need",
        "prefinish",
        "stream",
        "state",
        "state",
        "state",
        "stream",
        "need",
        "stream",
        "state",
        "cb",
        "state",
        "finishMaybe",
        "stream",
        "state",
        "cb",
        "state",
        "pna",
        "cb",
        "stream",
        "cb",
        "state",
        "stream",
        "corkReq",
        "state",
        "err",
        "corkReq",
        "corkReq",
        "entry",
        "entry",
        "state",
        "cb",
        "err",
        "entry",
        "entry",
        "state",
        "state",
        "corkReq",
        "state",
        "corkReq",
        "Writable",
        "value",
        "value",
        "Writable",
        "destroyImpl",
        "Writable",
        "destroyImpl",
        "Writable",
        "err",
        "cb",
        "cb",
        "err",
        "require",
        "require",
        "require",
        "exports",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "require",
        "require",
        "src",
        "target",
        "offset",
        "src",
        "target",
        "offset",
        "_classCallCheck",
        "BufferList",
        "BufferList",
        "push",
        "v",
        "v",
        "entry",
        "entry",
        "entry",
        "BufferList",
        "unshift",
        "v",
        "v",
        "entry",
        "entry",
        "BufferList",
        "shift",
        "ret",
        "BufferList",
        "clear",
        "BufferList",
        "join",
        "s",
        "p",
        "p",
        "p",
        "ret",
        "s",
        "p",
        "ret",
        "BufferList",
        "concat",
        "n",
        "Buffer",
        "Buffer",
        "n",
        "p",
        "copyBuffer",
        "p",
        "ret",
        "i",
        "i",
        "p",
        "p",
        "p",
        "ret",
        "BufferList",
        "util",
        "util",
        "util",
        "util",
        "util",
        "obj",
        "require",
        "exports",
        "require",
        "err",
        "cb",
        "readableDestroyed",
        "writableDestroyed",
        "cb",
        "cb",
        "err",
        "err",
        "pna",
        "emitErrorNT",
        "err",
        "err",
        "err",
        "cb",
        "err",
        "pna",
        "emitErrorNT",
        "_this",
        "err",
        "_this",
        "_this",
        "cb",
        "cb",
        "err",
        "err",
        "err",
        "destroy",
        "undestroy",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "exports",
        "require",
        "exports",
        "exports",
        "exports",
        "exports",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "require",
        "require",
        "exports",
        "arguments",
        "exports",
        "arguments",
        "require",
        "exports",
        "Stream",
        "require",
        "require",
        "inherits",
        "Stream",
        "EE",
        "Stream",
        "require",
        "Stream",
        "require",
        "Stream",
        "require",
        "Stream",
        "require",
        "Stream",
        "require",
        "Stream",
        "Stream",
        "EE",
        "Stream",
        "dest",
        "options",
        "chunk",
        "dest",
        "dest",
        "chunk",
        "source",
        "source",
        "source",
        "ondata",
        "source",
        "source",
        "source",
        "dest",
        "ondrain",
        "dest",
        "options",
        "options",
        "source",
        "onend",
        "source",
        "onclose",
        "didOnEnd",
        "didOnEnd",
        "dest",
        "didOnEnd",
        "didOnEnd",
        "dest",
        "dest",
        "er",
        "cleanup",
        "EE",
        "er",
        "source",
        "onerror",
        "dest",
        "onerror",
        "source",
        "ondata",
        "dest",
        "ondrain",
        "source",
        "onend",
        "source",
        "onclose",
        "source",
        "onerror",
        "dest",
        "onerror",
        "source",
        "cleanup",
        "source",
        "cleanup",
        "dest",
        "cleanup",
        "source",
        "cleanup",
        "source",
        "cleanup",
        "dest",
        "cleanup",
        "dest",
        "source",
        "dest",
        "require",
        "exports",
        "require",
        "Buffer",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "encoding",
        "enc",
        "enc",
        "enc",
        "enc",
        "retried",
        "enc",
        "enc",
        "retried",
        "enc",
        "_normalizeEncoding",
        "enc",
        "nenc",
        "Buffer",
        "isEncoding",
        "isEncoding",
        "enc",
        "enc",
        "nenc",
        "enc",
        "exports",
        "StringDecoder",
        "encoding",
        "normalizeEncoding",
        "encoding",
        "utf16Text",
        "utf16End",
        "nb",
        "utf8FillLast",
        "nb",
        "base64Text",
        "base64End",
        "nb",
        "simpleWrite",
        "simpleEnd",
        "Buffer",
        "nb",
        "StringDecoder",
        "buf",
        "buf",
        "r",
        "buf",
        "r",
        "i",
        "i",
        "i",
        "buf",
        "r",
        "r",
        "buf",
        "i",
        "buf",
        "i",
        "r",
        "StringDecoder",
        "utf8End",
        "StringDecoder",
        "utf8Text",
        "StringDecoder",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "i",
        "buf",
        "j",
        "i",
        "utf8CheckByte",
        "buf",
        "j",
        "nb",
        "nb",
        "nb",
        "nb",
        "j",
        "i",
        "nb",
        "nb",
        "utf8CheckByte",
        "buf",
        "j",
        "nb",
        "nb",
        "nb",
        "nb",
        "j",
        "i",
        "nb",
        "nb",
        "utf8CheckByte",
        "buf",
        "j",
        "nb",
        "nb",
        "nb",
        "nb",
        "nb",
        "nb",
        "buf",
        "p",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "utf8CheckExtraBytes",
        "buf",
        "p",
        "r",
        "r",
        "buf",
        "buf",
        "p",
        "buf",
        "p",
        "buf",
        "buf",
        "buf",
        "i",
        "utf8CheckIncomplete",
        "buf",
        "i",
        "buf",
        "i",
        "total",
        "buf",
        "total",
        "buf",
        "end",
        "buf",
        "i",
        "end",
        "buf",
        "buf",
        "buf",
        "buf",
        "r",
        "r",
        "buf",
        "i",
        "buf",
        "i",
        "buf",
        "i",
        "r",
        "r",
        "r",
        "c",
        "c",
        "buf",
        "buf",
        "buf",
        "buf",
        "r",
        "r",
        "buf",
        "buf",
        "buf",
        "i",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "r",
        "end",
        "r",
        "buf",
        "i",
        "buf",
        "i",
        "n",
        "buf",
        "i",
        "n",
        "n",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "i",
        "buf",
        "n",
        "buf",
        "buf",
        "buf",
        "buf",
        "r",
        "r",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "buf",
        "require",
        "exports",
        "setImmediate",
        "clearImmediate",
        "require",
        "exports",
        "Timeout",
        "apply",
        "setTimeout",
        "arguments",
        "clearTimeout",
        "exports",
        "Timeout",
        "apply",
        "setInterval",
        "arguments",
        "clearInterval",
        "exports",
        "exports",
        "timeout",
        "timeout",
        "id",
        "clearFn",
        "id",
        "clearFn",
        "Timeout",
        "Timeout",
        "Timeout",
        "exports",
        "item",
        "msecs",
        "clearTimeout",
        "item",
        "item",
        "msecs",
        "exports",
        "item",
        "clearTimeout",
        "item",
        "item",
        "exports",
        "exports",
        "item",
        "clearTimeout",
        "item",
        "item",
        "msecs",
        "item",
        "setTimeout",
        "onTimeout",
        "item",
        "item",
        "msecs",
        "exports",
        "setImmediate",
        "setImmediate",
        "fn",
        "nextImmediateId",
        "arguments",
        "arguments",
        "immediateIds",
        "id",
        "nextTick",
        "onNextTick",
        "immediateIds",
        "id",
        "args",
        "fn",
        "args",
        "fn",
        "exports",
        "id",
        "id",
        "exports",
        "clearImmediate",
        "clearImmediate",
        "id",
        "immediateIds",
        "id",
        "require",
        "require",
        "require",
        "exports",
        "deprecate",
        "fn",
        "msg",
        "config",
        "fn",
        "warned",
        "config",
        "msg",
        "config",
        "msg",
        "msg",
        "warned",
        "fn",
        "arguments",
        "deprecated",
        "name",
        "_",
        "name",
        "val",
        "val"
    ],
    "literals": [
        "\"function\"",
        "\"Cannot find module '\"",
        "\"'\"",
        "\"MODULE_NOT_FOUND\"",
        "\"function\"",
        "'bitcoinjs-lib'",
        "\"bitcoinjs-lib\"",
        "'safe-buffer'",
        "' is ambiguous'",
        "''",
        "''",
        "'string'",
        "'Expected String'",
        "'Non-base'",
        "' character'",
        "\"safe-buffer\"",
        "'use strict'",
        "'qpzry9x8gf2tvdw0s3jn54khce6mua7l'",
        "' is ambiguous'",
        "'Invalid prefix ('",
        "')'",
        "'Exceeds length limit'",
        "'1'",
        "'Non 5-bit word'",
        "' too short'",
        "'Exceeds length limit'",
        "'Mixed-case string '",
        "'1'",
        "'No separator character for '",
        "'Missing prefix for '",
        "'Data too short'",
        "'Unknown character '",
        "'Invalid checksum for '",
        "'Excess padding'",
        "'Non-zero padding'",
        "'create-hash'",
        "'create-hmac'",
        "'rmd160'",
        "'sha256'",
        "'sha512'",
        "\"create-hash\"",
        "\"create-hmac\"",
        "'safe-buffer'",
        "'bs58check'",
        "'./crypto'",
        "'tiny-secp256k1'",
        "'typeforce'",
        "'wif'",
        "'identifier'",
        "'fingerprint'",
        "'privateKey'",
        "'publicKey'",
        "'Missing private key'",
        "'Missing private key for hardened child key'",
        "'/'",
        "'m'",
        "'Expected master, got child'",
        "\"'\"",
        "'Invalid buffer length'",
        "'Invalid network version'",
        "'Invalid parent fingerprint'",
        "'Invalid index'",
        "'Invalid private key'",
        "'Private key not in range [1, n)'",
        "'Point is not on the curve'",
        "'Seed should be at least 128 bits'",
        "'Seed should be at most 512 bits'",
        "'Bitcoin seed'",
        "\"./crypto\"",
        "\"bs58check\"",
        "\"safe-buffer\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "\"wif\"",
        "'safe-buffer'",
        "'DER sequence length is too short'",
        "'DER sequence length is too long'",
        "'Expected DER sequence'",
        "'DER sequence length is invalid'",
        "'Expected DER integer'",
        "'R length is zero'",
        "'R length is too long'",
        "'Expected DER integer (2)'",
        "'S length is zero'",
        "'S length is invalid'",
        "'R value is negative'",
        "'R value excessively padded'",
        "'S value is negative'",
        "'S value excessively padded'",
        "'R length is zero'",
        "'S length is zero'",
        "'R length is too long'",
        "'S length is too long'",
        "'R value is negative'",
        "'S value is negative'",
        "'R value excessively padded'",
        "'S value excessively padded'",
        "\"safe-buffer\"",
        "\"OP_FALSE\"",
        "\"OP_0\"",
        "\"OP_PUSHDATA1\"",
        "\"OP_PUSHDATA2\"",
        "\"OP_PUSHDATA4\"",
        "\"OP_1NEGATE\"",
        "\"OP_RESERVED\"",
        "\"OP_TRUE\"",
        "\"OP_1\"",
        "\"OP_2\"",
        "\"OP_3\"",
        "\"OP_4\"",
        "\"OP_5\"",
        "\"OP_6\"",
        "\"OP_7\"",
        "\"OP_8\"",
        "\"OP_9\"",
        "\"OP_10\"",
        "\"OP_11\"",
        "\"OP_12\"",
        "\"OP_13\"",
        "\"OP_14\"",
        "\"OP_15\"",
        "\"OP_16\"",
        "\"OP_NOP\"",
        "\"OP_VER\"",
        "\"OP_IF\"",
        "\"OP_NOTIF\"",
        "\"OP_VERIF\"",
        "\"OP_VERNOTIF\"",
        "\"OP_ELSE\"",
        "\"OP_ENDIF\"",
        "\"OP_VERIFY\"",
        "\"OP_RETURN\"",
        "\"OP_TOALTSTACK\"",
        "\"OP_FROMALTSTACK\"",
        "\"OP_2DROP\"",
        "\"OP_2DUP\"",
        "\"OP_3DUP\"",
        "\"OP_2OVER\"",
        "\"OP_2ROT\"",
        "\"OP_2SWAP\"",
        "\"OP_IFDUP\"",
        "\"OP_DEPTH\"",
        "\"OP_DROP\"",
        "\"OP_DUP\"",
        "\"OP_NIP\"",
        "\"OP_OVER\"",
        "\"OP_PICK\"",
        "\"OP_ROLL\"",
        "\"OP_ROT\"",
        "\"OP_SWAP\"",
        "\"OP_TUCK\"",
        "\"OP_CAT\"",
        "\"OP_SUBSTR\"",
        "\"OP_LEFT\"",
        "\"OP_RIGHT\"",
        "\"OP_SIZE\"",
        "\"OP_INVERT\"",
        "\"OP_AND\"",
        "\"OP_OR\"",
        "\"OP_XOR\"",
        "\"OP_EQUAL\"",
        "\"OP_EQUALVERIFY\"",
        "\"OP_RESERVED1\"",
        "\"OP_RESERVED2\"",
        "\"OP_1ADD\"",
        "\"OP_1SUB\"",
        "\"OP_2MUL\"",
        "\"OP_2DIV\"",
        "\"OP_NEGATE\"",
        "\"OP_ABS\"",
        "\"OP_NOT\"",
        "\"OP_0NOTEQUAL\"",
        "\"OP_ADD\"",
        "\"OP_SUB\"",
        "\"OP_MUL\"",
        "\"OP_DIV\"",
        "\"OP_MOD\"",
        "\"OP_LSHIFT\"",
        "\"OP_RSHIFT\"",
        "\"OP_BOOLAND\"",
        "\"OP_BOOLOR\"",
        "\"OP_NUMEQUAL\"",
        "\"OP_NUMEQUALVERIFY\"",
        "\"OP_NUMNOTEQUAL\"",
        "\"OP_LESSTHAN\"",
        "\"OP_GREATERTHAN\"",
        "\"OP_LESSTHANOREQUAL\"",
        "\"OP_GREATERTHANOREQUAL\"",
        "\"OP_MIN\"",
        "\"OP_MAX\"",
        "\"OP_WITHIN\"",
        "\"OP_RIPEMD160\"",
        "\"OP_SHA1\"",
        "\"OP_SHA256\"",
        "\"OP_HASH160\"",
        "\"OP_HASH256\"",
        "\"OP_CODESEPARATOR\"",
        "\"OP_CHECKSIG\"",
        "\"OP_CHECKSIGVERIFY\"",
        "\"OP_CHECKMULTISIG\"",
        "\"OP_CHECKMULTISIGVERIFY\"",
        "\"OP_NOP1\"",
        "\"OP_NOP2\"",
        "\"OP_CHECKLOCKTIMEVERIFY\"",
        "\"OP_NOP3\"",
        "\"OP_CHECKSEQUENCEVERIFY\"",
        "\"OP_NOP4\"",
        "\"OP_NOP5\"",
        "\"OP_NOP6\"",
        "\"OP_NOP7\"",
        "\"OP_NOP8\"",
        "\"OP_NOP9\"",
        "\"OP_NOP10\"",
        "\"OP_PUBKEYHASH\"",
        "\"OP_PUBKEY\"",
        "\"OP_INVALIDOPCODE\"",
        "'./index.json'",
        "\"./index.json\"",
        "'safe-buffer'",
        "'bech32'",
        "'bs58check'",
        "'./script'",
        "'./networks'",
        "'typeforce'",
        "'./types'",
        "'./payments'",
        "' is too short'",
        "' is too long'",
        "' has no matching Address'",
        "' has an invalid prefix'",
        "' has no matching Script'",
        "\"./networks\"",
        "\"./payments\"",
        "\"./script\"",
        "\"./types\"",
        "\"bech32\"",
        "\"bs58check\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "'safe-buffer'",
        "'./crypto'",
        "'merkle-lib/fastRoot'",
        "'typeforce'",
        "'./types'",
        "'varuint-bitcoin'",
        "'./transaction'",
        "'Buffer too small (< 80 bytes)'",
        "'hex'",
        "'hex'",
        "'hex'",
        "'Cannot compute merkle root for zero transactions'",
        "\"./crypto\"",
        "\"./transaction\"",
        "\"./types\"",
        "\"merkle-lib/fastRoot\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "\"varuint-bitcoin\"",
        "'number'",
        "'cannot write a non-number as a number'",
        "'specified a negative value for writing an unsigned value'",
        "'RangeError: value out of range'",
        "'value has a fractional component'",
        "'./script'",
        "'./templates/multisig'",
        "'./templates/nulldata'",
        "'./templates/pubkey'",
        "'./templates/pubkeyhash'",
        "'./templates/scripthash'",
        "'./templates/witnesspubkeyhash'",
        "'./templates/witnessscripthash'",
        "'./templates/witnesscommitment'",
        "'multisig'",
        "'nonstandard'",
        "'nulldata'",
        "'pubkey'",
        "'pubkeyhash'",
        "'scripthash'",
        "'witnesspubkeyhash'",
        "'witnessscripthash'",
        "'witnesscommitment'",
        "'Invalid script'",
        "'Invalid script'",
        "'Invalid script'",
        "\"./script\"",
        "\"./templates/multisig\"",
        "\"./templates/nulldata\"",
        "\"./templates/pubkey\"",
        "\"./templates/pubkeyhash\"",
        "\"./templates/scripthash\"",
        "\"./templates/witnesscommitment\"",
        "\"./templates/witnesspubkeyhash\"",
        "\"./templates/witnessscripthash\"",
        "'create-hash'",
        "'rmd160'",
        "'sha1'",
        "'sha256'",
        "\"create-hash\"",
        "'tiny-secp256k1'",
        "'randombytes'",
        "'typeforce'",
        "'./types'",
        "'wif'",
        "'./networks'",
        "'privateKey'",
        "'publicKey'",
        "'Missing private key'",
        "'Missing private key'",
        "'Private key not in range [1, n)'",
        "'Unknown network version'",
        "'Invalid network version'",
        "\"./networks\"",
        "\"./types\"",
        "\"randombytes\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "\"wif\"",
        "'./script'",
        "'./block'",
        "'./ecpair'",
        "'./transaction'",
        "'./transaction_builder'",
        "'./address'",
        "'bip32'",
        "'./crypto'",
        "'./networks'",
        "'bitcoin-ops'",
        "'./payments'",
        "\"./address\"",
        "\"./block\"",
        "\"./crypto\"",
        "\"./ecpair\"",
        "\"./networks\"",
        "\"./payments\"",
        "\"./script\"",
        "\"./transaction\"",
        "\"./transaction_builder\"",
        "\"bip32\"",
        "\"bitcoin-ops\"",
        "'\\x18Bitcoin Signed Message:\\n'",
        "'bc'",
        "'\\x18Bitcoin Signed Message:\\n'",
        "'tb'",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'../script'",
        "'../networks'",
        "'Not enough data'",
        "'output'",
        "'data'",
        "'Output is invalid'",
        "'Output is invalid'",
        "'Data mismatch'",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bitcoin-ops\"",
        "\"typeforce\"",
        "'./embed'",
        "'./p2ms'",
        "'./p2pk'",
        "'./p2pkh'",
        "'./p2sh'",
        "'./p2wpkh'",
        "'./p2wsh'",
        "\"./embed\"",
        "\"./p2ms\"",
        "\"./p2pk\"",
        "\"./p2pkh\"",
        "\"./p2sh\"",
        "\"./p2wpkh\"",
        "\"./p2wsh\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'tiny-secp256k1'",
        "'../script'",
        "'../networks'",
        "'Not enough data'",
        "'output'",
        "'m'",
        "'n'",
        "'pubkeys'",
        "'signatures'",
        "'input'",
        "'witness'",
        "'Output is invalid'",
        "'Output is invalid'",
        "'Output is invalid'",
        "'Output is invalid'",
        "'Output is invalid'",
        "'m mismatch'",
        "'n mismatch'",
        "'Pubkeys mismatch'",
        "'Pubkey count mismatch'",
        "'Pubkey count cannot be less than m'",
        "'Not enough signatures provided'",
        "'Too many signatures provided'",
        "'Input is invalid'",
        "'Input has invalid signature(s)'",
        "'Signature mismatch'",
        "'Signature count mismatch'",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bitcoin-ops\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'tiny-secp256k1'",
        "'../script'",
        "'../networks'",
        "'Not enough data'",
        "'output'",
        "'pubkey'",
        "'signature'",
        "'input'",
        "'witness'",
        "'Output is invalid'",
        "'Output pubkey is invalid'",
        "'Pubkey mismatch'",
        "'Signature mismatch'",
        "'Input is invalid'",
        "'Input has invalid signature'",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bitcoin-ops\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'tiny-secp256k1'",
        "'../crypto'",
        "'../script'",
        "'../networks'",
        "'bs58check'",
        "'Not enough data'",
        "'address'",
        "'hash'",
        "'output'",
        "'pubkey'",
        "'signature'",
        "'input'",
        "'witness'",
        "'Invalid version or Network mismatch'",
        "'Invalid address'",
        "'Hash mismatch'",
        "'Output is invalid'",
        "'Hash mismatch'",
        "'Hash mismatch'",
        "'Input is invalid'",
        "'Input has invalid signature'",
        "'Input has invalid pubkey'",
        "'Signature mismatch'",
        "'Pubkey mismatch'",
        "'Hash mismatch'",
        "\"buffer\"",
        "\"../crypto\"",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bitcoin-ops\"",
        "\"bs58check\"",
        "\"buffer\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'../crypto'",
        "'../script'",
        "'../networks'",
        "'bs58check'",
        "'Not enough data'",
        "'address'",
        "'hash'",
        "'output'",
        "'redeem'",
        "'input'",
        "'witness'",
        "'Invalid version or Network mismatch'",
        "'Invalid address'",
        "'Hash mismatch'",
        "'Output is invalid'",
        "'Hash mismatch'",
        "'Redeem.output too short'",
        "'Hash mismatch'",
        "'Empty input'",
        "'Input and witness provided'",
        "'Non push-only scriptSig'",
        "'Input too short'",
        "'Input is invalid'",
        "'Network mismatch'",
        "'Redeem.output mismatch'",
        "'Redeem.input mismatch'",
        "'Witness and redeem.witness mismatch'",
        "\"buffer\"",
        "\"../crypto\"",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bitcoin-ops\"",
        "\"bs58check\"",
        "\"buffer\"",
        "\"typeforce\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'tiny-secp256k1'",
        "'../crypto'",
        "'bech32'",
        "'../script'",
        "'../networks'",
        "'Not enough data'",
        "'address'",
        "'hash'",
        "'output'",
        "'pubkey'",
        "'signature'",
        "'input'",
        "'witness'",
        "'Invalid prefix or Network mismatch'",
        "'Invalid address version'",
        "'Invalid address data'",
        "'Hash mismatch'",
        "'Output is invalid'",
        "'Hash mismatch'",
        "'Hash mismatch'",
        "'Witness is invalid'",
        "'Witness has invalid signature'",
        "'Witness has invalid pubkey'",
        "'Signature mismatch'",
        "'Pubkey mismatch'",
        "'Hash mismatch'",
        "\"buffer\"",
        "\"../crypto\"",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bech32\"",
        "\"bitcoin-ops\"",
        "\"buffer\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "'./lazy'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'bech32'",
        "'../crypto'",
        "'../script'",
        "'../networks'",
        "'Not enough data'",
        "'address'",
        "'hash'",
        "'output'",
        "'redeem'",
        "'input'",
        "'witness'",
        "'Invalid prefix or Network mismatch'",
        "'Invalid address version'",
        "'Invalid address data'",
        "'Hash mismatch'",
        "'Output is invalid'",
        "'Hash mismatch'",
        "'Network mismatch'",
        "'Ambiguous witness source'",
        "'Redeem.output is invalid'",
        "'Hash mismatch'",
        "'Non push-only scriptSig'",
        "'Witness and redeem.witness mismatch'",
        "'Witness and redeem.output mismatch'",
        "\"buffer\"",
        "\"../crypto\"",
        "\"../networks\"",
        "\"../script\"",
        "\"./lazy\"",
        "\"bech32\"",
        "\"bitcoin-ops\"",
        "\"buffer\"",
        "\"typeforce\"",
        "'safe-buffer'",
        "'bip66'",
        "'tiny-secp256k1'",
        "'pushdata-bitcoin'",
        "'typeforce'",
        "'./types'",
        "'./script_number'",
        "'bitcoin-ops'",
        "'bitcoin-ops/map'",
        "'Could not decode chunks'",
        "'hex'",
        "' '",
        "' '",
        "'hex'",
        "'./script_number'",
        "'./script_signature'",
        "\"./script_number\"",
        "\"./script_signature\"",
        "\"./types\"",
        "\"bip66\"",
        "\"bitcoin-ops\"",
        "\"bitcoin-ops/map\"",
        "\"pushdata-bitcoin\"",
        "\"safe-buffer\"",
        "\"tiny-secp256k1\"",
        "\"typeforce\"",
        "'safe-buffer'",
        "'Script number overflow'",
        "'Non-minimally encoded script number'",
        "\"safe-buffer\"",
        "'bip66'",
        "'safe-buffer'",
        "'typeforce'",
        "'./types'",
        "'Invalid hashType '",
        "'Invalid hashType '",
        "\"./types\"",
        "\"bip66\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "'./input'",
        "'./output'",
        "\"./input\"",
        "\"./output\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'multisig input'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "'../../script'",
        "'../../types'",
        "'bitcoin-ops'",
        "'multi-sig output'",
        "\"../../script\"",
        "\"../../types\"",
        "\"bitcoin-ops\"",
        "'../script'",
        "'bitcoin-ops'",
        "'null data output'",
        "\"../script\"",
        "\"bitcoin-ops\"",
        "\"./input\"",
        "\"./output\"",
        "\"dup\"",
        "'../../script'",
        "'pubKey input'",
        "\"../../script\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'pubKey output'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "\"./input\"",
        "\"./output\"",
        "\"dup\"",
        "'../../script'",
        "'pubKeyHash input'",
        "\"../../script\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'pubKeyHash output'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "\"./input\"",
        "\"./output\"",
        "\"dup\"",
        "'safe-buffer'",
        "'../../script'",
        "'../multisig/'",
        "'../pubkey/'",
        "'../pubkeyhash/'",
        "'../witnesspubkeyhash/output'",
        "'../witnessscripthash/output'",
        "'scriptHash input'",
        "\"../../script\"",
        "\"../multisig/\"",
        "\"../pubkey/\"",
        "\"../pubkeyhash/\"",
        "\"../witnesspubkeyhash/output\"",
        "\"../witnessscripthash/output\"",
        "\"safe-buffer\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'scriptHash output'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "'./output'",
        "\"./output\"",
        "'safe-buffer'",
        "'../../script'",
        "'../../types'",
        "'typeforce'",
        "'bitcoin-ops'",
        "'aa21a9ed'",
        "'hex'",
        "'Witness commitment output'",
        "\"../../script\"",
        "\"../../types\"",
        "\"bitcoin-ops\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "\"./input\"",
        "\"./output\"",
        "\"dup\"",
        "'../../script'",
        "'witnessPubKeyHash input'",
        "\"../../script\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'Witness pubKeyHash output'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "\"./input\"",
        "\"./output\"",
        "\"dup\"",
        "'../../script'",
        "'../../types'",
        "'typeforce'",
        "'../multisig/'",
        "'../pubkey/'",
        "'../pubkeyhash/'",
        "'witnessScriptHash input'",
        "\"isBuffer\"",
        "\"../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/is-buffer/index.js\"",
        "\"../../../../../../../../../usr/local/lib/node_modules/browserify/node_modules/is-buffer/index.js\"",
        "\"../../script\"",
        "\"../../types\"",
        "\"../multisig/\"",
        "\"../pubkey/\"",
        "\"../pubkeyhash/\"",
        "\"typeforce\"",
        "'../../script'",
        "'bitcoin-ops'",
        "'Witness scriptHash output'",
        "\"../../script\"",
        "\"bitcoin-ops\"",
        "'safe-buffer'",
        "'./crypto'",
        "'./script'",
        "'./bufferutils'",
        "'bitcoin-ops'",
        "'typeforce'",
        "'./types'",
        "'varuint-bitcoin'",
        "'0000000000000000000000000000000000000000000000000000000000000000'",
        "'hex'",
        "'0000000000000000000000000000000000000000000000000000000000000001'",
        "'hex'",
        "'ffffffffffffffff'",
        "'hex'",
        "'Transaction has superfluous witness data'",
        "'Transaction has unexpected data'",
        "'hex'",
        "'hex'",
        "'hex'",
        "\"./bufferutils\"",
        "\"./crypto\"",
        "\"./script\"",
        "\"./types\"",
        "\"bitcoin-ops\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "\"varuint-bitcoin\"",
        "'safe-buffer'",
        "'./address'",
        "'./crypto'",
        "'./script'",
        "'./networks'",
        "'bitcoin-ops'",
        "'./payments'",
        "'typeforce'",
        "'./types'",
        "'./classify'",
        "'./ecpair'",
        "'./transaction'",
        "'Witness script inconsistent with prevOutScript'",
        "'Redeem script inconsistent with prevOutScript'",
        "' not supported as witnessScript ('",
        "')'",
        "'P2SH(P2WSH(P2WPKH)) is a consensus failure'",
        "'PrevOutScript must be P2SH'",
        "'Redeem script inconsistent with prevOutScript'",
        "' not supported as redeemScript ('",
        "')'",
        "'Witness script inconsistent with prevOutScript'",
        "' not supported as witnessScript ('",
        "')'",
        "'P2WSH(P2WPKH) is a consensus failure'",
        "'PrevOutScript is '",
        "', requires redeemScript'",
        "'PrevOutScript is '",
        "', requires witnessScript'",
        "'PrevOutScript is missing'",
        "' not supported ('",
        "')'",
        "'No, this would invalidate signatures'",
        "'No, this would invalidate signatures'",
        "'string'",
        "'hex'",
        "'coinbase inputs not supported'",
        "'hex'",
        "':'",
        "'Duplicate TxOut: '",
        "'No, this would invalidate signatures'",
        "'string'",
        "'Transaction has no inputs'",
        "'Transaction has no outputs'",
        "'Transaction is not complete'",
        "'Unknown input type'",
        "'Not enough information'",
        "'Transaction has absurd fees'",
        "'Inconsistent network'",
        "'No input at index: '",
        "'Inconsistent redeemScript'",
        "'Input didn\\'t match witnessValue'",
        "' not supported'",
        "'Signature already exists'",
        "'BIP143 rejects uncompressed public keys in P2WPKH or P2WSH'",
        "'Key pair cannot sign for this input'",
        "\"./address\"",
        "\"./classify\"",
        "\"./crypto\"",
        "\"./ecpair\"",
        "\"./networks\"",
        "\"./payments\"",
        "\"./script\"",
        "\"./transaction\"",
        "\"./types\"",
        "\"bitcoin-ops\"",
        "\"safe-buffer\"",
        "\"typeforce\"",
        "'typeforce'",
        "'BIP32 derivation path'",
        "'Point'",
        "\"typeforce\"",
        "'use strict'",
        "'Assertion failed'",
        "'le'",
        "'be'",
        "'be'",
        "'object'",
        "'buffer'",
        "'object'",
        "'number'",
        "'object'",
        "'hex'",
        "''",
        "'-'",
        "'-'",
        "'le'",
        "'le'",
        "'number'",
        "'be'",
        "'le'",
        "'<BN-R: '",
        "'<BN: '",
        "'>'",
        "''",
        "'0'",
        "'00'",
        "'000'",
        "'0000'",
        "'00000'",
        "'000000'",
        "'0000000'",
        "'00000000'",
        "'000000000'",
        "'0000000000'",
        "'00000000000'",
        "'000000000000'",
        "'0000000000000'",
        "'00000000000000'",
        "'000000000000000'",
        "'0000000000000000'",
        "'00000000000000000'",
        "'000000000000000000'",
        "'0000000000000000000'",
        "'00000000000000000000'",
        "'000000000000000000000'",
        "'0000000000000000000000'",
        "'00000000000000000000000'",
        "'000000000000000000000000'",
        "'0000000000000000000000000'",
        "'hex'",
        "''",
        "'0'",
        "'-'",
        "''",
        "'0'",
        "'0'",
        "'-'",
        "'Base should be between 2 and 36'",
        "'Number can only safely store up to 53 bits'",
        "'undefined'",
        "'byte array longer than desired length'",
        "'Requested array length <= 0'",
        "'le'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'imaskn works only with positive numbers'",
        "'number'",
        "'number'",
        "'mod'",
        "'div'",
        "'mod'",
        "'div'",
        "'mod'",
        "'div'",
        "'div'",
        "'mod'",
        "'div'",
        "'mod'",
        "'mod'",
        "'number'",
        "'Number is too big'",
        "'Already a number in reduction context'",
        "'red works only with positives'",
        "'fromRed works only with numbers in reduction context'",
        "'Already a number in reduction context'",
        "'redAdd works only with red numbers'",
        "'redIAdd works only with red numbers'",
        "'redSub works only with red numbers'",
        "'redISub works only with red numbers'",
        "'redShl works only with red numbers'",
        "'redMul works only with red numbers'",
        "'redMul works only with red numbers'",
        "'redSqr works only with red numbers'",
        "'redISqr works only with red numbers'",
        "'redSqrt works only with red numbers'",
        "'redInvm works only with red numbers'",
        "'redNeg works only with red numbers'",
        "'redPow(normalNum)'",
        "'k256'",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'",
        "'p224'",
        "'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'",
        "'p192'",
        "'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'",
        "'25519'",
        "'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'",
        "'k256'",
        "'p224'",
        "'p192'",
        "'p25519'",
        "'Unknown prime '",
        "'string'",
        "'modulus must be greater than 1'",
        "'red works only with positives'",
        "'red works only with red numbers'",
        "'red works only with positives'",
        "'red works only with red numbers'",
        "'undefined'",
        "\"buffer\"",
        "'object'",
        "'object'",
        "'Not implemented yet'",
        "'crypto'",
        "'function'",
        "'Not supported'",
        "\"crypto\"",
        "'base-x'",
        "'123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'",
        "\"base-x\"",
        "'use strict'",
        "'bs58'",
        "'safe-buffer'",
        "'Invalid checksum'",
        "\"bs58\"",
        "\"safe-buffer\"",
        "'use strict'",
        "'create-hash'",
        "'./base'",
        "'sha256'",
        "'sha256'",
        "\"./base\"",
        "\"create-hash\"",
        "'safe-buffer'",
        "'stream'",
        "'string_decoder'",
        "'inherits'",
        "'string'",
        "'string'",
        "'trying to get auth tag in unsupported state'",
        "'trying to set auth tag in unsupported state'",
        "'trying to set aad in unsupported state'",
        "'can\\'t switch encodings'",
        "\"inherits\"",
        "\"safe-buffer\"",
        "\"stream\"",
        "\"string_decoder\"",
        "'use strict'",
        "'inherits'",
        "'md5.js'",
        "'ripemd160'",
        "'sha.js'",
        "'cipher-base'",
        "'digest'",
        "'md5'",
        "'rmd160'",
        "'ripemd160'",
        "\"cipher-base\"",
        "\"inherits\"",
        "\"md5.js\"",
        "\"ripemd160\"",
        "\"sha.js\"",
        "'md5.js'",
        "\"md5.js\"",
        "'use strict'",
        "'inherits'",
        "'./legacy'",
        "'cipher-base'",
        "'safe-buffer'",
        "'create-hash/md5'",
        "'ripemd160'",
        "'sha.js'",
        "'digest'",
        "'string'",
        "'sha512'",
        "'sha384'",
        "'rmd160'",
        "'rmd160'",
        "'rmd160'",
        "'rmd160'",
        "'ripemd160'",
        "'rmd160'",
        "'md5'",
        "\"./legacy\"",
        "\"cipher-base\"",
        "\"create-hash/md5\"",
        "\"inherits\"",
        "\"ripemd160\"",
        "\"safe-buffer\"",
        "\"sha.js\"",
        "'use strict'",
        "'inherits'",
        "'safe-buffer'",
        "'cipher-base'",
        "'digest'",
        "'string'",
        "\"cipher-base\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'use strict'",
        "'../package.json'",
        "'./elliptic/utils'",
        "'brorand'",
        "'./elliptic/curve'",
        "'./elliptic/curves'",
        "'./elliptic/ec'",
        "'./elliptic/eddsa'",
        "\"../package.json\"",
        "\"./elliptic/curve\"",
        "\"./elliptic/curves\"",
        "\"./elliptic/ec\"",
        "\"./elliptic/eddsa\"",
        "\"./elliptic/utils\"",
        "\"brorand\"",
        "'use strict'",
        "'bn.js'",
        "'../../elliptic'",
        "'Not implemented'",
        "'Not implemented'",
        "'affine'",
        "'affine'",
        "'affine'",
        "'Not implemented'",
        "'Unknown point format'",
        "'be'",
        "'be'",
        "\"../../elliptic\"",
        "\"bn.js\"",
        "'use strict'",
        "'../curve'",
        "'../../elliptic'",
        "'bn.js'",
        "'inherits'",
        "'edwards'",
        "'invalid point'",
        "'invalid point'",
        "'invalid point'",
        "'projective'",
        "'<EC Point Infinity>'",
        "'<EC Point x: '",
        "' y: '",
        "' z: '",
        "'>'",
        "\"../../elliptic\"",
        "\"../curve\"",
        "\"bn.js\"",
        "\"inherits\"",
        "'use strict'",
        "'./base'",
        "'./short'",
        "'./mont'",
        "'./edwards'",
        "\"./base\"",
        "\"./edwards\"",
        "\"./mont\"",
        "\"./short\"",
        "'use strict'",
        "'../curve'",
        "'bn.js'",
        "'inherits'",
        "'../../elliptic'",
        "'mont'",
        "'projective'",
        "'be'",
        "'<EC Point Infinity>'",
        "'<EC Point x: '",
        "' z: '",
        "'>'",
        "'Not supported on Montgomery curve'",
        "'Not supported on Montgomery curve'",
        "'Not supported on Montgomery curve'",
        "\"../../elliptic\"",
        "\"../curve\"",
        "\"bn.js\"",
        "\"inherits\"",
        "'use strict'",
        "'../curve'",
        "'../../elliptic'",
        "'bn.js'",
        "'inherits'",
        "'short'",
        "'invalid point'",
        "'affine'",
        "'string'",
        "'<EC Point Infinity>'",
        "'<EC Point x: '",
        "' y: '",
        "'>'",
        "'jacobian'",
        "'affine'",
        "'<EC JPoint Infinity>'",
        "'<EC JPoint x: '",
        "' y: '",
        "' z: '",
        "'>'",
        "\"../../elliptic\"",
        "\"../curve\"",
        "\"bn.js\"",
        "\"inherits\"",
        "'use strict'",
        "'hash.js'",
        "'../elliptic'",
        "'short'",
        "'edwards'",
        "'Invalid curve'",
        "'Invalid curve, G*N != O'",
        "'p192'",
        "'short'",
        "'p192'",
        "'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff'",
        "'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc'",
        "'64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1'",
        "'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831'",
        "'188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012'",
        "'07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'",
        "'p224'",
        "'short'",
        "'p224'",
        "'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001'",
        "'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe'",
        "'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4'",
        "'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d'",
        "'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21'",
        "'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'",
        "'p256'",
        "'short'",
        "'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff'",
        "'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc'",
        "'5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b'",
        "'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551'",
        "'6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296'",
        "'4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'",
        "'p384'",
        "'short'",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'fffffffe ffffffff 00000000 00000000 ffffffff'",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'fffffffe ffffffff 00000000 00000000 fffffffc'",
        "'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f '",
        "'5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef'",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 '",
        "'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973'",
        "'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 '",
        "'5502f25d bf55296c 3a545e38 72760ab7'",
        "'3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 '",
        "'0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'",
        "'p521'",
        "'short'",
        "'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff'",
        "'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'ffffffff ffffffff ffffffff ffffffff fffffffc'",
        "'00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b '",
        "'99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd '",
        "'3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00'",
        "'000001ff ffffffff ffffffff ffffffff ffffffff ffffffff '",
        "'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 '",
        "'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409'",
        "'000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 '",
        "'053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 '",
        "'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66'",
        "'00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 '",
        "'579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 '",
        "'3fad0761 353c7086 a272c240 88be9476 9fd16650'",
        "'curve25519'",
        "'mont'",
        "'p25519'",
        "'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'",
        "'76d06'",
        "'1'",
        "'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed'",
        "'9'",
        "'ed25519'",
        "'edwards'",
        "'p25519'",
        "'7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed'",
        "'-1'",
        "'1'",
        "'52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3'",
        "'1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed'",
        "'216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a'",
        "'6666666666666666666666666666666666666666666666666666666666666658'",
        "'./precomputed/secp256k1'",
        "'secp256k1'",
        "'short'",
        "'k256'",
        "'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f'",
        "'0'",
        "'7'",
        "'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141'",
        "'1'",
        "'7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'",
        "'5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72'",
        "'3086d221a7d46bcde86c90e49284eb15'",
        "'-e4437ed6010e88286f547fa90abfe4c3'",
        "'114ca50f7a8e2f3f657c1108d9d44cfd8'",
        "'3086d221a7d46bcde86c90e49284eb15'",
        "'79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'",
        "'483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'",
        "\"../elliptic\"",
        "\"./precomputed/secp256k1\"",
        "\"hash.js\"",
        "'use strict'",
        "'bn.js'",
        "'hmac-drbg'",
        "'../../elliptic'",
        "'./key'",
        "'./signature'",
        "'string'",
        "'Unknown curve '",
        "'utf8'",
        "'utf8'",
        "'object'",
        "'be'",
        "'be'",
        "'utf8'",
        "'hex'",
        "'The recovery param is more than two bits'",
        "'Unable to find sencond key candinate'",
        "'Unable to find valid recovery factor'",
        "\"../../elliptic\"",
        "\"./key\"",
        "\"./signature\"",
        "\"bn.js\"",
        "\"hmac-drbg\"",
        "'use strict'",
        "'bn.js'",
        "'../../elliptic'",
        "'Invalid public key'",
        "'Public key is not a point'",
        "'Public key * N != O'",
        "'string'",
        "'hex'",
        "'mont'",
        "'Need x coordinate'",
        "'short'",
        "'edwards'",
        "'Need both x and y coordinate'",
        "'<Key priv: '",
        "' pub: '",
        "' >'",
        "\"../../elliptic\"",
        "\"bn.js\"",
        "'use strict'",
        "'bn.js'",
        "'../../elliptic'",
        "'Signature without r or s'",
        "\"../../elliptic\"",
        "\"bn.js\"",
        "'use strict'",
        "'hash.js'",
        "'../../elliptic'",
        "'./key'",
        "'./signature'",
        "'ed25519'",
        "'only tested with ed25519 so far'",
        "'le'",
        "'le'",
        "\"../../elliptic\"",
        "\"./key\"",
        "\"./signature\"",
        "\"hash.js\"",
        "'use strict'",
        "'../../elliptic'",
        "'pubBytes'",
        "'pub'",
        "'privBytes'",
        "'priv'",
        "'hash'",
        "'messagePrefix'",
        "'KeyPair can only verify'",
        "'KeyPair is public only'",
        "\"../../elliptic\"",
        "'use strict'",
        "'bn.js'",
        "'../../elliptic'",
        "'object'",
        "'Signature without R or S'",
        "'S'",
        "'R'",
        "'Rencoded'",
        "'Sencoded'",
        "'hex'",
        "\"../../elliptic\"",
        "\"bn.js\"",
        "'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a'",
        "'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'",
        "'8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508'",
        "'11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'",
        "'175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739'",
        "'d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'",
        "'363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640'",
        "'4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'",
        "'8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c'",
        "'4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'",
        "'723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda'",
        "'96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'",
        "'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa'",
        "'5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'",
        "'100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0'",
        "'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'",
        "'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d'",
        "'9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'",
        "'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d'",
        "'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'",
        "'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1'",
        "'9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'",
        "'53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0'",
        "'5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'",
        "'8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047'",
        "'10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'",
        "'385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862'",
        "'283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'",
        "'6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7'",
        "'7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'",
        "'3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd'",
        "'56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'",
        "'85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83'",
        "'7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'",
        "'948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a'",
        "'53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'",
        "'6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8'",
        "'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'",
        "'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d'",
        "'4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'",
        "'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725'",
        "'7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'",
        "'213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754'",
        "'4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'",
        "'4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c'",
        "'17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'",
        "'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6'",
        "'6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'",
        "'76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39'",
        "'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'",
        "'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891'",
        "'893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'",
        "'d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b'",
        "'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'",
        "'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03'",
        "'2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'",
        "'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d'",
        "'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'",
        "'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070'",
        "'7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'",
        "'90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4'",
        "'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'",
        "'8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da'",
        "'662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'",
        "'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11'",
        "'1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'",
        "'8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e'",
        "'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'",
        "'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41'",
        "'2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'",
        "'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef'",
        "'67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'",
        "'d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8'",
        "'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'",
        "'324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d'",
        "'648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'",
        "'4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96'",
        "'35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'",
        "'9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd'",
        "'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'",
        "'6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5'",
        "'9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'",
        "'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266'",
        "'40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'",
        "'7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71'",
        "'34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'",
        "'928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac'",
        "'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'",
        "'85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751'",
        "'1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'",
        "'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e'",
        "'493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'",
        "'827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241'",
        "'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'",
        "'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3'",
        "'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'",
        "'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f'",
        "'4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'",
        "'1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19'",
        "'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'",
        "'146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be'",
        "'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'",
        "'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9'",
        "'6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'",
        "'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2'",
        "'8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'",
        "'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13'",
        "'7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'",
        "'174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c'",
        "'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'",
        "'959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba'",
        "'2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'",
        "'d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151'",
        "'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'",
        "'64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073'",
        "'d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'",
        "'8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458'",
        "'38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'",
        "'13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b'",
        "'69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'",
        "'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366'",
        "'d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'",
        "'8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa'",
        "'40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'",
        "'8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0'",
        "'620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'",
        "'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787'",
        "'7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'",
        "'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e'",
        "'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'",
        "'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9'",
        "'388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'",
        "'2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4'",
        "'d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'",
        "'5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc'",
        "'6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'",
        "'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe'",
        "'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'",
        "'774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb'",
        "'d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'",
        "'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8'",
        "'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'",
        "'d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e'",
        "'581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'",
        "'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34'",
        "'4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'",
        "'2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c'",
        "'85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'",
        "'352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5'",
        "'321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'",
        "'2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f'",
        "'2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'",
        "'9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714'",
        "'73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'",
        "'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729'",
        "'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'",
        "'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db'",
        "'2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'",
        "'6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4'",
        "'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'",
        "'1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5'",
        "'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'",
        "'605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479'",
        "'2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'",
        "'62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d'",
        "'80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'",
        "'80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f'",
        "'1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'",
        "'7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb'",
        "'d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'",
        "'d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9'",
        "'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'",
        "'49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963'",
        "'758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'",
        "'77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74'",
        "'958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'",
        "'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530'",
        "'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'",
        "'463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b'",
        "'5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'",
        "'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247'",
        "'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'",
        "'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1'",
        "'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'",
        "'2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120'",
        "'4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'",
        "'7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435'",
        "'91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'",
        "'754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18'",
        "'673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'",
        "'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8'",
        "'59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'",
        "'186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb'",
        "'3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'",
        "'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f'",
        "'55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'",
        "'5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143'",
        "'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'",
        "'290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba'",
        "'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'",
        "'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45'",
        "'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'",
        "'766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a'",
        "'744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'",
        "'59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e'",
        "'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'",
        "'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8'",
        "'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'",
        "'7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c'",
        "'30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'",
        "'948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519'",
        "'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'",
        "'7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab'",
        "'100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'",
        "'3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca'",
        "'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'",
        "'d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf'",
        "'8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'",
        "'1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610'",
        "'68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'",
        "'733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4'",
        "'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'",
        "'15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c'",
        "'d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'",
        "'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940'",
        "'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'",
        "'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980'",
        "'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'",
        "'311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3'",
        "'66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'",
        "'34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf'",
        "'9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'",
        "'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63'",
        "'4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'",
        "'d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448'",
        "'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'",
        "'32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf'",
        "'5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'",
        "'7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5'",
        "'8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'",
        "'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6'",
        "'8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'",
        "'16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5'",
        "'5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'",
        "'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99'",
        "'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'",
        "'78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51'",
        "'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'",
        "'494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5'",
        "'42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'",
        "'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5'",
        "'204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'",
        "'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997'",
        "'4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'",
        "'841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881'",
        "'73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'",
        "'5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5'",
        "'39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'",
        "'36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66'",
        "'d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'",
        "'336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726'",
        "'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'",
        "'8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede'",
        "'6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'",
        "'1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94'",
        "'60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'",
        "'85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31'",
        "'3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'",
        "'29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51'",
        "'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'",
        "'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252'",
        "'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'",
        "'4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5'",
        "'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'",
        "'d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b'",
        "'6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'",
        "'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4'",
        "'322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'",
        "'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f'",
        "'6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'",
        "'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889'",
        "'2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'",
        "'591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246'",
        "'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'",
        "'11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984'",
        "'998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'",
        "'3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a'",
        "'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'",
        "'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030'",
        "'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'",
        "'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197'",
        "'6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'",
        "'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593'",
        "'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'",
        "'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef'",
        "'21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'",
        "'347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38'",
        "'60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'",
        "'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a'",
        "'49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'",
        "'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111'",
        "'5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'",
        "'4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502'",
        "'7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'",
        "'3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea'",
        "'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'",
        "'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26'",
        "'8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'",
        "'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986'",
        "'39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'",
        "'d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e'",
        "'62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'",
        "'48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4'",
        "'25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'",
        "'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda'",
        "'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'",
        "'6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859'",
        "'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'",
        "'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f'",
        "'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'",
        "'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c'",
        "'6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'",
        "'13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942'",
        "'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'",
        "'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a'",
        "'1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'",
        "'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80'",
        "'5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'",
        "'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d'",
        "'438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'",
        "'8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1'",
        "'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'",
        "'52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63'",
        "'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'",
        "'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352'",
        "'6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'",
        "'7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193'",
        "'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'",
        "'5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00'",
        "'9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'",
        "'32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58'",
        "'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'",
        "'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7'",
        "'d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'",
        "'8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8'",
        "'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'",
        "'4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e'",
        "'67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'",
        "'3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d'",
        "'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'",
        "'674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b'",
        "'299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'",
        "'d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f'",
        "'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'",
        "'30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6'",
        "'462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'",
        "'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297'",
        "'62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'",
        "'93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a'",
        "'7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'",
        "'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c'",
        "'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'",
        "'d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52'",
        "'4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'",
        "'d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb'",
        "'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'",
        "'463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065'",
        "'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'",
        "'7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917'",
        "'603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'",
        "'74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9'",
        "'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'",
        "'30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3'",
        "'553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'",
        "'9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57'",
        "'712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'",
        "'176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66'",
        "'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'",
        "'75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8'",
        "'9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'",
        "'809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721'",
        "'9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'",
        "'1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180'",
        "'4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'",
        "'use strict'",
        "'bn.js'",
        "'minimalistic-assert'",
        "'minimalistic-crypto-utils'",
        "'_'",
        "'string'",
        "'hex'",
        "'hex'",
        "'le'",
        "\"bn.js\"",
        "\"minimalistic-assert\"",
        "\"minimalistic-crypto-utils\"",
        "\"_from\"",
        "\"elliptic@^6.4.0\"",
        "\"_id\"",
        "\"elliptic@6.4.1\"",
        "\"_inBundle\"",
        "\"_integrity\"",
        "\"sha512-BsXLz5sqX8OHcsh7CqBMztyXARmGQ3LWPtGjJi6DiJHq5C/qvi9P3OqgswKSDftbu8+IoI/QDTAm2fFnQ9SZSQ==\"",
        "\"_location\"",
        "\"/elliptic\"",
        "\"_phantomChildren\"",
        "\"_requested\"",
        "\"type\"",
        "\"range\"",
        "\"registry\"",
        "\"raw\"",
        "\"elliptic@^6.4.0\"",
        "\"name\"",
        "\"elliptic\"",
        "\"escapedName\"",
        "\"elliptic\"",
        "\"rawSpec\"",
        "\"^6.4.0\"",
        "\"saveSpec\"",
        "\"fetchSpec\"",
        "\"^6.4.0\"",
        "\"_requiredBy\"",
        "\"/tiny-secp256k1\"",
        "\"_resolved\"",
        "\"https://registry.npmjs.org/elliptic/-/elliptic-6.4.1.tgz\"",
        "\"_shasum\"",
        "\"c2d0b7776911b86722c632c3c06c60f2f819939a\"",
        "\"_spec\"",
        "\"elliptic@^6.4.0\"",
        "\"_where\"",
        "\"/home/david/web/bitcoin/node_modules/tiny-secp256k1\"",
        "\"author\"",
        "\"name\"",
        "\"Fedor Indutny\"",
        "\"email\"",
        "\"fedor@indutny.com\"",
        "\"bugs\"",
        "\"url\"",
        "\"https://github.com/indutny/elliptic/issues\"",
        "\"bundleDependencies\"",
        "\"dependencies\"",
        "\"bn.js\"",
        "\"^4.4.0\"",
        "\"brorand\"",
        "\"^1.0.1\"",
        "\"hash.js\"",
        "\"^1.0.0\"",
        "\"hmac-drbg\"",
        "\"^1.0.0\"",
        "\"inherits\"",
        "\"^2.0.1\"",
        "\"minimalistic-assert\"",
        "\"^1.0.0\"",
        "\"minimalistic-crypto-utils\"",
        "\"^1.0.0\"",
        "\"deprecated\"",
        "\"description\"",
        "\"EC cryptography\"",
        "\"devDependencies\"",
        "\"brfs\"",
        "\"^1.4.3\"",
        "\"coveralls\"",
        "\"^2.11.3\"",
        "\"grunt\"",
        "\"^0.4.5\"",
        "\"grunt-browserify\"",
        "\"^5.0.0\"",
        "\"grunt-cli\"",
        "\"^1.2.0\"",
        "\"grunt-contrib-connect\"",
        "\"^1.0.0\"",
        "\"grunt-contrib-copy\"",
        "\"^1.0.0\"",
        "\"grunt-contrib-uglify\"",
        "\"^1.0.1\"",
        "\"grunt-mocha-istanbul\"",
        "\"^3.0.1\"",
        "\"grunt-saucelabs\"",
        "\"^8.6.2\"",
        "\"istanbul\"",
        "\"^0.4.2\"",
        "\"jscs\"",
        "\"^2.9.0\"",
        "\"jshint\"",
        "\"^2.6.0\"",
        "\"mocha\"",
        "\"^2.1.0\"",
        "\"files\"",
        "\"lib\"",
        "\"homepage\"",
        "\"https://github.com/indutny/elliptic\"",
        "\"keywords\"",
        "\"EC\"",
        "\"Elliptic\"",
        "\"curve\"",
        "\"Cryptography\"",
        "\"license\"",
        "\"MIT\"",
        "\"main\"",
        "\"lib/elliptic.js\"",
        "\"name\"",
        "\"elliptic\"",
        "\"repository\"",
        "\"type\"",
        "\"git\"",
        "\"url\"",
        "\"git+ssh://git@github.com/indutny/elliptic.git\"",
        "\"scripts\"",
        "\"jscs\"",
        "\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\"",
        "\"jshint\"",
        "\"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\"",
        "\"lint\"",
        "\"npm run jscs && npm run jshint\"",
        "\"test\"",
        "\"npm run lint && npm run unit\"",
        "\"unit\"",
        "\"istanbul test _mocha --reporter=spec test/index.js\"",
        "\"version\"",
        "\"grunt dist && git add dist/\"",
        "\"version\"",
        "\"6.4.1\"",
        "'use strict'",
        "'safe-buffer'",
        "'stream'",
        "'inherits'",
        "'string'",
        "' must be a string or a buffer'",
        "'Data'",
        "'Digest already called'",
        "'_update is not implemented'",
        "'Digest already called'",
        "'_digest is not implemented'",
        "\"inherits\"",
        "\"safe-buffer\"",
        "\"stream\"",
        "'./hash/utils'",
        "'./hash/common'",
        "'./hash/sha'",
        "'./hash/ripemd'",
        "'./hash/hmac'",
        "\"./hash/common\"",
        "\"./hash/hmac\"",
        "\"./hash/ripemd\"",
        "\"./hash/sha\"",
        "\"./hash/utils\"",
        "'use strict'",
        "'./utils'",
        "'minimalistic-assert'",
        "'big'",
        "'big'",
        "\"./utils\"",
        "\"minimalistic-assert\"",
        "'use strict'",
        "'./utils'",
        "'minimalistic-assert'",
        "\"./utils\"",
        "\"minimalistic-assert\"",
        "'use strict'",
        "'./utils'",
        "'./common'",
        "'little'",
        "'hex'",
        "'little'",
        "'little'",
        "\"./common\"",
        "\"./utils\"",
        "'use strict'",
        "'./sha/1'",
        "'./sha/224'",
        "'./sha/256'",
        "'./sha/384'",
        "'./sha/512'",
        "\"./sha/1\"",
        "\"./sha/224\"",
        "\"./sha/256\"",
        "\"./sha/384\"",
        "\"./sha/512\"",
        "'use strict'",
        "'../utils'",
        "'../common'",
        "'./common'",
        "'hex'",
        "'big'",
        "'big'",
        "\"../common\"",
        "\"../utils\"",
        "\"./common\"",
        "'use strict'",
        "'../utils'",
        "'./256'",
        "'hex'",
        "'big'",
        "'big'",
        "\"../utils\"",
        "\"./256\"",
        "'use strict'",
        "'../utils'",
        "'../common'",
        "'./common'",
        "'minimalistic-assert'",
        "'hex'",
        "'big'",
        "'big'",
        "\"../common\"",
        "\"../utils\"",
        "\"./common\"",
        "\"minimalistic-assert\"",
        "'use strict'",
        "'../utils'",
        "'./512'",
        "'hex'",
        "'big'",
        "'big'",
        "\"../utils\"",
        "\"./512\"",
        "'use strict'",
        "'../utils'",
        "'../common'",
        "'minimalistic-assert'",
        "'hex'",
        "'big'",
        "'big'",
        "\"../common\"",
        "\"../utils\"",
        "\"minimalistic-assert\"",
        "'use strict'",
        "'../utils'",
        "\"../utils\"",
        "'use strict'",
        "'minimalistic-assert'",
        "'inherits'",
        "'string'",
        "'hex'",
        "''",
        "'0'",
        "''",
        "''",
        "'little'",
        "'0'",
        "'0'",
        "'00'",
        "'000'",
        "'0000'",
        "'00000'",
        "'000000'",
        "'0000000'",
        "'big'",
        "'big'",
        "\"inherits\"",
        "\"minimalistic-assert\"",
        "'use strict'",
        "'hash.js'",
        "'minimalistic-crypto-utils'",
        "'minimalistic-assert'",
        "'hex'",
        "'hex'",
        "'hex'",
        "'Not enough entropy. Minimum is: '",
        "' bits'",
        "'string'",
        "'Not enough entropy. Minimum is: '",
        "' bits'",
        "'Reseed is required'",
        "'string'",
        "'hex'",
        "\"hash.js\"",
        "\"minimalistic-assert\"",
        "\"minimalistic-crypto-utils\"",
        "'function'",
        "'use strict'",
        "'inherits'",
        "'hash-base'",
        "\"buffer\"",
        "\"buffer\"",
        "\"hash-base\"",
        "\"inherits\"",
        "'Expected values Array'",
        "'function'",
        "'Expected digest Function'",
        "\"buffer\"",
        "\"buffer\"",
        "'Assertion failed'",
        "'Assertion failed: '",
        "' != '",
        "'use strict'",
        "'string'",
        "'hex'",
        "''",
        "'0'",
        "'0'",
        "''",
        "'hex'",
        "'bitcoin-ops'",
        "'Unexpected opcode'",
        "\"bitcoin-ops\"",
        "'use strict'",
        "'Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11'",
        "'safe-buffer'",
        "'requested too many random bytes'",
        "'function'",
        "'_process'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"_process\"",
        "\"safe-buffer\"",
        "'use strict'",
        "'buffer'",
        "'inherits'",
        "'hash-base'",
        "\"buffer\"",
        "\"hash-base\"",
        "\"inherits\"",
        "'buffer'",
        "'number'",
        "'Argument must not be a number'",
        "'number'",
        "'Argument must be a number'",
        "'string'",
        "'number'",
        "'Argument must be a number'",
        "'number'",
        "'Argument must be a number'",
        "\"buffer\"",
        "'safe-buffer'",
        "'string'",
        "'utf8'",
        "'_update must be implemented by subclass'",
        "\"safe-buffer\"",
        "' is not supported (we accept pull requests)'",
        "'./sha'",
        "'./sha1'",
        "'./sha224'",
        "'./sha256'",
        "'./sha384'",
        "'./sha512'",
        "\"./sha\"",
        "\"./sha1\"",
        "\"./sha224\"",
        "\"./sha256\"",
        "\"./sha384\"",
        "\"./sha512\"",
        "'inherits'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'inherits'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'inherits'",
        "'./sha256'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"./sha256\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'inherits'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'inherits'",
        "'./sha512'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"./sha512\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'inherits'",
        "'./hash'",
        "'safe-buffer'",
        "\"./hash\"",
        "\"inherits\"",
        "\"safe-buffer\"",
        "'bn.js'",
        "'elliptic'",
        "'secp256k1'",
        "'./rfc6979'",
        "'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'",
        "'hex'",
        "'fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'",
        "'hex'",
        "'Expected Private'",
        "'Expected Point'",
        "'Expected Tweak'",
        "'Expected Hash'",
        "'Expected Signature'",
        "'be'",
        "\"buffer\"",
        "\"./rfc6979\"",
        "\"bn.js\"",
        "\"buffer\"",
        "\"elliptic\"",
        "'create-hmac'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "'sha256'",
        "\"buffer\"",
        "\"buffer\"",
        "\"create-hmac\"",
        "'./native'",
        "''",
        "''",
        "''",
        "'Array'",
        "'Object'",
        "''",
        "'Expected '",
        "', got'",
        "''",
        "' '",
        "''",
        "''",
        "' '",
        "''",
        "'\" of type '",
        "'key'",
        "'\" with key type '",
        "'property \"'",
        "'Unexpected property \"'",
        "'\"'",
        "'.'",
        "\"./native\"",
        "'./native'",
        "'./errors'",
        "'string'",
        "'(Length: '",
        "')'",
        "'(Length: '",
        "')'",
        "'number'",
        "'number'",
        "\"isBuffer\"",
        "\"../../../../../../usr/local/lib/node_modules/browserify/node_modules/is-buffer/index.js\"",
        "\"../../../../../../usr/local/lib/node_modules/browserify/node_modules/is-buffer/index.js\"",
        "\"./errors\"",
        "\"./native\"",
        "'./errors'",
        "'./native'",
        "'['",
        "']'",
        "'?'",
        "'key'",
        "'{'",
        "': '",
        "'}'",
        "'{'",
        "'}'",
        "'|'",
        "'('",
        "', '",
        "')'",
        "'?'",
        "'./extra'",
        "'function'",
        "\"./errors\"",
        "\"./extra\"",
        "\"./native\"",
        "'boolean'",
        "'function'",
        "'number'",
        "'object'",
        "'string'",
        "''",
        "'use strict'",
        "'safe-buffer'",
        "'value out of range'",
        "'buffer must be a Buffer instance'",
        "'buffer must be a Buffer instance'",
        "\"safe-buffer\"",
        "'bs58check'",
        "'Invalid network version'",
        "'Invalid WIF length'",
        "'Invalid compression flag'",
        "'number'",
        "\"buffer\"",
        "\"bs58check\"",
        "\"buffer\"",
        "'use strict'",
        "'undefined'",
        "'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'",
        "'-'",
        "'_'",
        "'Invalid string. Length must be a multiple of 4'",
        "'='",
        "''",
        "'=='",
        "'='",
        "''",
        "'use strict'",
        "'base64-js'",
        "'ieee754'",
        "'undefined'",
        "'function'",
        "'This browser lacks typed array (Uint8Array) support which is required by '",
        "'`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'",
        "'parent'",
        "'offset'",
        "'The value \"'",
        "'\" is invalid for option \"size\"'",
        "'number'",
        "'string'",
        "'The \"string\" argument must be of type string. Received type number'",
        "'undefined'",
        "'string'",
        "'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '",
        "'or Array-like Object. Received type '",
        "'number'",
        "'The \"value\" argument must not be of type number. Received type number'",
        "'undefined'",
        "'function'",
        "'string'",
        "'The first argument must be one of type string, Buffer, ArrayBuffer, Array, '",
        "'or Array-like Object. Received type '",
        "'number'",
        "'\"size\" argument must be of type number'",
        "'The value \"'",
        "'\" is invalid for option \"size\"'",
        "'string'",
        "'string'",
        "''",
        "'utf8'",
        "'Unknown encoding: '",
        "'\"offset\" is outside of buffer bounds'",
        "'\"length\" is outside of buffer bounds'",
        "'number'",
        "'Buffer'",
        "'Attempt to allocate Buffer larger than maximum '",
        "'size: 0x'",
        "' bytes'",
        "'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'",
        "'hex'",
        "'utf8'",
        "'utf-8'",
        "'ascii'",
        "'latin1'",
        "'binary'",
        "'base64'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'\"list\" argument must be an Array of Buffers'",
        "'\"list\" argument must be an Array of Buffers'",
        "'string'",
        "'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '",
        "'Received type '",
        "'ascii'",
        "'latin1'",
        "'binary'",
        "'utf8'",
        "'utf-8'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'hex'",
        "'base64'",
        "''",
        "''",
        "''",
        "''",
        "'utf8'",
        "'hex'",
        "'utf8'",
        "'utf-8'",
        "'ascii'",
        "'latin1'",
        "'binary'",
        "'base64'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'Unknown encoding: '",
        "''",
        "'Buffer size must be a multiple of 16-bits'",
        "'Buffer size must be a multiple of 32-bits'",
        "'Buffer size must be a multiple of 64-bits'",
        "''",
        "'Argument must be a Buffer'",
        "''",
        "'hex'",
        "'$1 '",
        "' ... '",
        "'<Buffer '",
        "'>'",
        "'The \"target\" argument must be one of type Buffer or Uint8Array. '",
        "'Received type '",
        "'out of range index'",
        "'string'",
        "'string'",
        "'number'",
        "'function'",
        "'val must be string, number or Buffer'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'utf8'",
        "'string'",
        "'utf8'",
        "'Buffer.write(string, encoding, offset[, length]) is no longer supported'",
        "'Attempt to write outside buffer bounds'",
        "'utf8'",
        "'hex'",
        "'utf8'",
        "'utf-8'",
        "'ascii'",
        "'latin1'",
        "'binary'",
        "'base64'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'Unknown encoding: '",
        "''",
        "'Buffer'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'offset is not uint'",
        "'Trying to access beyond buffer length'",
        "'\"buffer\" argument must be a Buffer instance'",
        "'\"value\" argument is out of bounds'",
        "'Index out of range'",
        "'Index out of range'",
        "'Index out of range'",
        "'argument should be a Buffer'",
        "'targetStart out of bounds'",
        "'Index out of range'",
        "'sourceEnd out of bounds'",
        "'function'",
        "'string'",
        "'string'",
        "'string'",
        "'string'",
        "'encoding must be a string'",
        "'string'",
        "'Unknown encoding: '",
        "'utf8'",
        "'latin1'",
        "'number'",
        "'Out of range index'",
        "'number'",
        "'The value \"'",
        "'\" is invalid for argument \"value\"'",
        "'='",
        "''",
        "''",
        "'='",
        "'0'",
        "'Invalid code point'",
        "\"base64-js\"",
        "\"ieee754\"",
        "'[object Array]'",
        "'boolean'",
        "'number'",
        "'string'",
        "'symbol'",
        "'[object RegExp]'",
        "'object'",
        "'[object Date]'",
        "'[object Error]'",
        "'function'",
        "'boolean'",
        "'number'",
        "'string'",
        "'symbol'",
        "'undefined'",
        "\"isBuffer\"",
        "\"../../is-buffer/index.js\"",
        "\"../../is-buffer/index.js\"",
        "'_events'",
        "'x'",
        "'defaultMaxListeners'",
        "'number'",
        "'\"defaultMaxListeners\" must be a positive number'",
        "'number'",
        "'\"n\" argument must be a positive number'",
        "'error'",
        "'Unhandled \"error\" event. ('",
        "')'",
        "'function'",
        "'function'",
        "'\"listener\" argument must be a function'",
        "'newListener'",
        "'function'",
        "'Possible EventEmitter memory leak detected. '",
        "' \"'",
        "'\" listeners '",
        "'added. Use emitter.setMaxListeners() to '",
        "'increase limit.'",
        "'MaxListenersExceededWarning'",
        "'object'",
        "'%s: %s'",
        "'function'",
        "'\"listener\" argument must be a function'",
        "'function'",
        "'\"listener\" argument must be a function'",
        "'function'",
        "'\"listener\" argument must be a function'",
        "'removeListener'",
        "'function'",
        "'removeListener'",
        "'removeListener'",
        "'removeListener'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "\"dup\"",
        "'function'",
        "'function'",
        "'function'",
        "'[object Array]'",
        "'use strict'",
        "'v0.'",
        "'v1.'",
        "'v1.8.'",
        "'function'",
        "'\"callback\" argument must be a function'",
        "'_process'",
        "\"_process\"",
        "'setTimeout has not been defined'",
        "'clearTimeout has not been defined'",
        "'function'",
        "'function'",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "'./lib/_stream_duplex.js'",
        "\"./lib/_stream_duplex.js\"",
        "'use strict'",
        "'process-nextick-args'",
        "'core-util-is'",
        "'inherits'",
        "'./_stream_readable'",
        "'./_stream_writable'",
        "'end'",
        "'writableHighWaterMark'",
        "'destroyed'",
        "\"./_stream_readable\"",
        "\"./_stream_writable\"",
        "\"core-util-is\"",
        "\"inherits\"",
        "\"process-nextick-args\"",
        "'use strict'",
        "'./_stream_transform'",
        "'core-util-is'",
        "'inherits'",
        "\"./_stream_transform\"",
        "\"core-util-is\"",
        "\"inherits\"",
        "'use strict'",
        "'process-nextick-args'",
        "'isarray'",
        "'events'",
        "'./internal/streams/stream'",
        "'safe-buffer'",
        "'core-util-is'",
        "'inherits'",
        "'util'",
        "'stream'",
        "'./internal/streams/BufferList'",
        "'./internal/streams/destroy'",
        "'error'",
        "'close'",
        "'destroy'",
        "'pause'",
        "'resume'",
        "'function'",
        "'./_stream_duplex'",
        "'utf8'",
        "'string_decoder/'",
        "'./_stream_duplex'",
        "'function'",
        "'function'",
        "'destroyed'",
        "'string'",
        "''",
        "'error'",
        "'string'",
        "'error'",
        "'stream.unshift() after end event'",
        "'error'",
        "'stream.push() after EOF'",
        "'data'",
        "'string'",
        "'Invalid non-string/buffer chunk'",
        "'string_decoder/'",
        "'read'",
        "'read: emitReadable'",
        "'need readable'",
        "'length less than watermark'",
        "'reading or ended'",
        "'do read'",
        "'data'",
        "'emitReadable'",
        "'emit readable'",
        "'readable'",
        "'maybeReadMore read 0'",
        "'error'",
        "'_read() is not implemented'",
        "'pipe count=%d opts=%j'",
        "'end'",
        "'unpipe'",
        "'onunpipe'",
        "'onend'",
        "'drain'",
        "'cleanup'",
        "'close'",
        "'finish'",
        "'drain'",
        "'error'",
        "'unpipe'",
        "'end'",
        "'end'",
        "'data'",
        "'data'",
        "'ondata'",
        "'false write response, pause'",
        "'onerror'",
        "'error'",
        "'error'",
        "'error'",
        "'error'",
        "'finish'",
        "'close'",
        "'onfinish'",
        "'close'",
        "'finish'",
        "'unpipe'",
        "'pipe'",
        "'pipe resume'",
        "'pipeOnDrain'",
        "'data'",
        "'unpipe'",
        "'unpipe'",
        "'unpipe'",
        "'data'",
        "'readable'",
        "'readable nexttick read 0'",
        "'resume'",
        "'resume read 0'",
        "'resume'",
        "'call pause flowing=%j'",
        "'pause'",
        "'pause'",
        "'flow'",
        "'end'",
        "'wrapped end'",
        "'data'",
        "'wrapped data'",
        "'function'",
        "'wrapped _read'",
        "'readableHighWaterMark'",
        "''",
        "'\"endReadable()\" called on non-empty stream'",
        "'end'",
        "'_process'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"./_stream_duplex\"",
        "\"./internal/streams/BufferList\"",
        "\"./internal/streams/destroy\"",
        "\"./internal/streams/stream\"",
        "\"_process\"",
        "\"core-util-is\"",
        "\"events\"",
        "\"inherits\"",
        "\"isarray\"",
        "\"process-nextick-args\"",
        "\"safe-buffer\"",
        "\"string_decoder/\"",
        "\"util\"",
        "'use strict'",
        "'./_stream_duplex'",
        "'core-util-is'",
        "'inherits'",
        "'error'",
        "'write callback called multiple times'",
        "'function'",
        "'function'",
        "'prefinish'",
        "'function'",
        "'_transform() is not implemented'",
        "'close'",
        "'error'",
        "'Calling transform done when ws.length != 0'",
        "'Calling transform done when still transforming'",
        "\"./_stream_duplex\"",
        "\"core-util-is\"",
        "\"inherits\"",
        "'use strict'",
        "'process-nextick-args'",
        "'v0.10'",
        "'v0.9.'",
        "'core-util-is'",
        "'inherits'",
        "'util-deprecate'",
        "'./internal/streams/stream'",
        "'safe-buffer'",
        "'./internal/streams/destroy'",
        "'./_stream_duplex'",
        "'utf8'",
        "'buffer'",
        "'_writableState.buffer is deprecated. Use _writableState.getBuffer '",
        "'instead.'",
        "'DEP0003'",
        "'function'",
        "'function'",
        "'./_stream_duplex'",
        "'function'",
        "'function'",
        "'function'",
        "'function'",
        "'error'",
        "'Cannot pipe, not readable'",
        "'write after end'",
        "'error'",
        "'May not write null values to stream'",
        "'string'",
        "'Invalid non-string/buffer chunk'",
        "'error'",
        "'function'",
        "'buffer'",
        "'function'",
        "'string'",
        "'hex'",
        "'utf8'",
        "'utf-8'",
        "'ascii'",
        "'binary'",
        "'base64'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'raw'",
        "''",
        "'Unknown encoding: '",
        "'string'",
        "'writableHighWaterMark'",
        "'buffer'",
        "'error'",
        "'error'",
        "'drain'",
        "''",
        "'_write() is not implemented'",
        "'function'",
        "'function'",
        "'error'",
        "'prefinish'",
        "'function'",
        "'prefinish'",
        "'finish'",
        "'finish'",
        "'destroyed'",
        "'_process'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"timers\"",
        "\"./_stream_duplex\"",
        "\"./internal/streams/destroy\"",
        "\"./internal/streams/stream\"",
        "\"_process\"",
        "\"core-util-is\"",
        "\"inherits\"",
        "\"process-nextick-args\"",
        "\"safe-buffer\"",
        "\"timers\"",
        "\"util-deprecate\"",
        "'use strict'",
        "\"Cannot call a class as a function\"",
        "'safe-buffer'",
        "'util'",
        "''",
        "''",
        "' '",
        "\"safe-buffer\"",
        "\"util\"",
        "'use strict'",
        "'process-nextick-args'",
        "'error'",
        "\"process-nextick-args\"",
        "'events'",
        "\"events\"",
        "'./readable'",
        "\"./readable\"",
        "'./lib/_stream_readable.js'",
        "'./lib/_stream_writable.js'",
        "'./lib/_stream_duplex.js'",
        "'./lib/_stream_transform.js'",
        "'./lib/_stream_passthrough.js'",
        "\"./lib/_stream_duplex.js\"",
        "\"./lib/_stream_passthrough.js\"",
        "\"./lib/_stream_readable.js\"",
        "\"./lib/_stream_transform.js\"",
        "\"./lib/_stream_writable.js\"",
        "'./readable'",
        "\"./readable\"",
        "'./lib/_stream_writable.js'",
        "\"./lib/_stream_writable.js\"",
        "\"buffer\"",
        "\"dup\"",
        "'events'",
        "'inherits'",
        "'readable-stream/readable.js'",
        "'readable-stream/writable.js'",
        "'readable-stream/duplex.js'",
        "'readable-stream/transform.js'",
        "'readable-stream/passthrough.js'",
        "'data'",
        "'drain'",
        "'end'",
        "'close'",
        "'function'",
        "'error'",
        "'error'",
        "'error'",
        "'data'",
        "'drain'",
        "'end'",
        "'close'",
        "'error'",
        "'error'",
        "'end'",
        "'close'",
        "'close'",
        "'end'",
        "'close'",
        "'close'",
        "'pipe'",
        "\"events\"",
        "\"inherits\"",
        "\"readable-stream/duplex.js\"",
        "\"readable-stream/passthrough.js\"",
        "\"readable-stream/readable.js\"",
        "\"readable-stream/transform.js\"",
        "\"readable-stream/writable.js\"",
        "'use strict'",
        "'safe-buffer'",
        "''",
        "'hex'",
        "'utf8'",
        "'utf-8'",
        "'ascii'",
        "'binary'",
        "'base64'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'raw'",
        "'utf8'",
        "'utf8'",
        "'utf-8'",
        "'utf8'",
        "'ucs2'",
        "'ucs-2'",
        "'utf16le'",
        "'utf-16le'",
        "'utf16le'",
        "'latin1'",
        "'binary'",
        "'latin1'",
        "'base64'",
        "'ascii'",
        "'hex'",
        "''",
        "'string'",
        "'Unknown encoding: '",
        "'utf16le'",
        "'utf8'",
        "'base64'",
        "''",
        "''",
        "''",
        "'\\ufffd'",
        "'\\ufffd'",
        "'\\ufffd'",
        "'utf8'",
        "'utf8'",
        "''",
        "'\\ufffd'",
        "'utf16le'",
        "'utf16le'",
        "''",
        "'utf16le'",
        "'base64'",
        "'base64'",
        "''",
        "'base64'",
        "''",
        "\"safe-buffer\"",
        "'process/browser.js'",
        "\"function\"",
        "\"function\"",
        "\"timers\"",
        "\"timers\"",
        "\"process/browser.js\"",
        "\"timers\"",
        "'noDeprecation'",
        "'throwDeprecation'",
        "'traceDeprecation'",
        "'true'",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\""
    ],
    "variables": [
        "c",
        "a",
        "p",
        "n",
        "u",
        "i",
        "Buffer",
        "ALPHABET_MAP",
        "BASE",
        "LEADER",
        "z",
        "x",
        "digits",
        "i",
        "j",
        "carry",
        "k",
        "q",
        "i",
        "value",
        "j",
        "carry",
        "value",
        "k",
        "buffer",
        "ALPHABET",
        "ALPHABET_MAP",
        "z",
        "x",
        "b",
        "chk",
        "i",
        "c",
        "v",
        "chk",
        "result",
        "i",
        "x",
        "v",
        "lowered",
        "uppered",
        "split",
        "prefix",
        "wordChars",
        "chk",
        "words",
        "i",
        "c",
        "v",
        "value",
        "bits",
        "maxV",
        "result",
        "i",
        "createHash",
        "createHmac",
        "Buffer",
        "bs58check",
        "crypto",
        "ecc",
        "typeforce",
        "wif",
        "UINT256_TYPE",
        "NETWORK_TYPE",
        "BITCOIN",
        "neutered",
        "network",
        "version",
        "buffer",
        "HIGHEST_BIT",
        "isHardened",
        "data",
        "I",
        "IL",
        "IR",
        "hd",
        "ki",
        "Ki",
        "UINT31_MAX",
        "splitPath",
        "index",
        "buffer",
        "version",
        "depth",
        "parentFingerprint",
        "index",
        "chainCode",
        "hd",
        "k",
        "X",
        "I",
        "IL",
        "IR",
        "Buffer",
        "lenR",
        "lenS",
        "lenR",
        "lenS",
        "lenR",
        "lenS",
        "signature",
        "OPS",
        "code",
        "Buffer",
        "bech32",
        "bs58check",
        "bscript",
        "networks",
        "typeforce",
        "types",
        "payments",
        "payload",
        "version",
        "hash",
        "result",
        "data",
        "payload",
        "words",
        "decode",
        "Buffer",
        "bcrypto",
        "fastMerkleRoot",
        "typeforce",
        "types",
        "varuint",
        "Transaction",
        "offset",
        "i",
        "i",
        "block",
        "vi",
        "tx",
        "nTransactions",
        "i",
        "tx",
        "date",
        "buffer",
        "offset",
        "txSize",
        "exponent",
        "mantissa",
        "target",
        "hashes",
        "actualMerkleRoot",
        "hash",
        "target",
        "a",
        "b",
        "decompile",
        "multisig",
        "nullData",
        "pubKey",
        "pubKeyHash",
        "scriptHash",
        "witnessPubKeyHash",
        "witnessScriptHash",
        "witnessCommitment",
        "types",
        "chunks",
        "chunks",
        "chunks",
        "createHash",
        "ecc",
        "randomBytes",
        "typeforce",
        "types",
        "wif",
        "NETWORKS",
        "isOptions",
        "decoded",
        "version",
        "rng",
        "d",
        "script",
        "lazy",
        "typef",
        "OPS",
        "bscript",
        "BITCOIN_NETWORK",
        "network",
        "o",
        "chunks",
        "embed",
        "p2ms",
        "p2pk",
        "p2pkh",
        "p2sh",
        "p2wpkh",
        "p2wsh",
        "value",
        "value",
        "lazy",
        "typef",
        "OPS",
        "ecc",
        "bscript",
        "BITCOIN_NETWORK",
        "OP_INT_BASE",
        "network",
        "o",
        "chunks",
        "decoded",
        "lazy",
        "typef",
        "OPS",
        "ecc",
        "bscript",
        "BITCOIN_NETWORK",
        "_chunks",
        "network",
        "o",
        "lazy",
        "typef",
        "OPS",
        "ecc",
        "bcrypto",
        "bscript",
        "BITCOIN_NETWORK",
        "bs58check",
        "_address",
        "payload",
        "version",
        "hash",
        "_chunks",
        "network",
        "o",
        "payload",
        "hash",
        "hash2",
        "pkh",
        "chunks",
        "pkh",
        "lazy",
        "typef",
        "OPS",
        "bcrypto",
        "bscript",
        "BITCOIN_NETWORK",
        "bs58check",
        "network",
        "o",
        "_address",
        "payload",
        "version",
        "hash",
        "_chunks",
        "_redeem",
        "chunks",
        "payload",
        "hash",
        "hash2",
        "checkRedeem",
        "decompile",
        "hash2",
        "hasInput",
        "hasWitness",
        "richunks",
        "chunks",
        "redeem",
        "lazy",
        "typef",
        "OPS",
        "ecc",
        "bcrypto",
        "bech32",
        "bscript",
        "BITCOIN_NETWORK",
        "EMPTY_BUFFER",
        "_address",
        "result",
        "version",
        "data",
        "network",
        "o",
        "words",
        "hash",
        "pkh",
        "pkh",
        "lazy",
        "typef",
        "OPS",
        "bech32",
        "bcrypto",
        "bscript",
        "BITCOIN_NETWORK",
        "EMPTY_BUFFER",
        "_address",
        "result",
        "version",
        "data",
        "_rchunks",
        "network",
        "o",
        "words",
        "stack",
        "hash",
        "hash2",
        "hash2",
        "Buffer",
        "bip66",
        "ecc",
        "pushdata",
        "typeforce",
        "types",
        "scriptNumber",
        "OPS",
        "REVERSE_OPS",
        "OP_INT_BASE",
        "bufferSize",
        "buffer",
        "offset",
        "opcode",
        "chunks",
        "i",
        "opcode",
        "d",
        "data",
        "op",
        "op",
        "hashTypeMod",
        "Buffer",
        "length",
        "a",
        "b",
        "result",
        "i",
        "value",
        "size",
        "buffer",
        "negative",
        "i",
        "bip66",
        "Buffer",
        "typeforce",
        "types",
        "ZERO",
        "i",
        "buffer",
        "bstart",
        "hashType",
        "hashTypeMod",
        "decode",
        "r",
        "s",
        "hashTypeMod",
        "hashTypeBuffer",
        "r",
        "s",
        "bscript",
        "OPS",
        "chunks",
        "bscript",
        "types",
        "OPS",
        "OP_INT_BASE",
        "chunks",
        "m",
        "n",
        "keys",
        "bscript",
        "OPS",
        "buffer",
        "bscript",
        "chunks",
        "bscript",
        "OPS",
        "chunks",
        "bscript",
        "chunks",
        "bscript",
        "OPS",
        "buffer",
        "Buffer",
        "bscript",
        "p2ms",
        "p2pk",
        "p2pkh",
        "p2wpkho",
        "p2wsho",
        "chunks",
        "lastChunk",
        "scriptSigChunks",
        "redeemScriptChunks",
        "bscript",
        "OPS",
        "buffer",
        "Buffer",
        "bscript",
        "types",
        "typeforce",
        "OPS",
        "HEADER",
        "buffer",
        "buffer",
        "bscript",
        "chunks",
        "bscript",
        "OPS",
        "buffer",
        "bscript",
        "types",
        "typeforce",
        "p2ms",
        "p2pk",
        "p2pkh",
        "witnessScript",
        "witnessScriptChunks",
        "witnessRawScriptSig",
        "bscript",
        "OPS",
        "buffer",
        "Buffer",
        "bcrypto",
        "bscript",
        "bufferutils",
        "opcodes",
        "typeforce",
        "types",
        "varuint",
        "length",
        "length",
        "EMPTY_SCRIPT",
        "EMPTY_WITNESS",
        "ZERO",
        "ONE",
        "VALUE_UINT64_MAX",
        "BLANK_OUTPUT",
        "offset",
        "i",
        "i",
        "i",
        "vi",
        "count",
        "vector",
        "i",
        "tx",
        "marker",
        "flag",
        "hasWitnesses",
        "vinLen",
        "i",
        "voutLen",
        "i",
        "total",
        "hasWitnesses",
        "newTx",
        "ourScript",
        "txTmp",
        "i",
        "buffer",
        "tbuffer",
        "toffset",
        "hashOutputs",
        "ZERO",
        "hashPrevouts",
        "ZERO",
        "hashSequence",
        "ZERO",
        "txOutsSize",
        "output",
        "input",
        "offset",
        "hasWitnesses",
        "Buffer",
        "baddress",
        "bcrypto",
        "bscript",
        "networks",
        "ops",
        "payments",
        "typeforce",
        "types",
        "classify",
        "SCRIPT_TYPES",
        "ECPair",
        "Transaction",
        "ssType",
        "wsType",
        "outputType",
        "expanded",
        "outputType",
        "expanded",
        "unmatched",
        "keyPair",
        "match",
        "parsed",
        "hash",
        "pkh1",
        "pkh2",
        "wpkh1",
        "wpkh2",
        "p2pk",
        "p2ms",
        "p2wsh",
        "p2wshAlt",
        "p2sh",
        "p2shAlt",
        "expanded",
        "signScript",
        "witnessScript",
        "p2sh",
        "p2shAlt",
        "expanded",
        "signScript",
        "redeemScript",
        "p2wsh",
        "p2wshAlt",
        "expanded",
        "signScript",
        "witnessScript",
        "expanded",
        "signScript",
        "prevOutScript",
        "pubkeys",
        "signatures",
        "redeem",
        "redeem",
        "txb",
        "value",
        "txOut",
        "prevTxOut",
        "input",
        "prevOutType",
        "expanded",
        "vin",
        "tx",
        "result",
        "input",
        "ourPubKey",
        "prepared",
        "signatureHash",
        "signed",
        "signature",
        "hashType",
        "nInputs",
        "nOutputs",
        "hashType",
        "hashTypeMod",
        "incoming",
        "outgoing",
        "fee",
        "feeRate",
        "typeforce",
        "UINT31_MAX",
        "SATOSHI_MAX",
        "ECPoint",
        "Network",
        "types",
        "TempCtor",
        "Buffer",
        "start",
        "i",
        "j",
        "w",
        "off",
        "r",
        "len",
        "i",
        "start",
        "c",
        "i",
        "j",
        "w",
        "off",
        "r",
        "len",
        "i",
        "start",
        "c",
        "limbLen",
        "limbPow",
        "total",
        "mod",
        "end",
        "word",
        "i",
        "start",
        "pow",
        "i",
        "r",
        "zeros",
        "groupSizes",
        "groupBases",
        "off",
        "carry",
        "i",
        "w",
        "word",
        "groupSize",
        "groupBase",
        "c",
        "r",
        "ret",
        "byteLength",
        "reqLength",
        "littleEndian",
        "res",
        "b",
        "i",
        "q",
        "t",
        "w",
        "r",
        "t",
        "w",
        "r",
        "w",
        "hi",
        "w",
        "bit",
        "off",
        "wbit",
        "r",
        "i",
        "b",
        "i",
        "b",
        "i",
        "a",
        "b",
        "i",
        "bytesNeeded",
        "bitsLeft",
        "i",
        "off",
        "wbit",
        "r",
        "a",
        "b",
        "carry",
        "i",
        "res",
        "r",
        "cmp",
        "a",
        "b",
        "carry",
        "i",
        "len",
        "a",
        "b",
        "r",
        "lo",
        "carry",
        "k",
        "ncarry",
        "rword",
        "maxJ",
        "j",
        "i",
        "comb10MulTo",
        "a",
        "b",
        "o",
        "c",
        "lo",
        "mid",
        "hi",
        "a0",
        "al0",
        "ah0",
        "a1",
        "al1",
        "ah1",
        "a2",
        "al2",
        "ah2",
        "a3",
        "al3",
        "ah3",
        "a4",
        "al4",
        "ah4",
        "a5",
        "al5",
        "ah5",
        "a6",
        "al6",
        "ah6",
        "a7",
        "al7",
        "ah7",
        "a8",
        "al8",
        "ah8",
        "a9",
        "al9",
        "ah9",
        "b0",
        "bl0",
        "bh0",
        "b1",
        "bl1",
        "bh1",
        "b2",
        "bl2",
        "bh2",
        "b3",
        "bl3",
        "bh3",
        "b4",
        "bl4",
        "bh4",
        "b5",
        "bl5",
        "bh5",
        "b6",
        "bl6",
        "bh6",
        "b7",
        "bl7",
        "bh7",
        "b8",
        "bl8",
        "bh8",
        "b9",
        "bl9",
        "bh9",
        "w0",
        "w1",
        "w2",
        "w3",
        "w4",
        "w5",
        "w6",
        "w7",
        "w8",
        "w9",
        "w10",
        "w11",
        "w12",
        "w13",
        "w14",
        "w15",
        "w16",
        "w17",
        "w18",
        "carry",
        "hncarry",
        "k",
        "ncarry",
        "hncarry",
        "rword",
        "maxJ",
        "j",
        "i",
        "a",
        "b",
        "r",
        "lo",
        "fftm",
        "res",
        "len",
        "t",
        "l",
        "i",
        "rb",
        "i",
        "i",
        "s",
        "l",
        "rtwdf",
        "itwdf",
        "p",
        "rtwdf_",
        "rtwdf",
        "itwdf_",
        "itwdf",
        "j",
        "re",
        "ie",
        "ro",
        "io",
        "rx",
        "N",
        "odd",
        "i",
        "i",
        "t",
        "carry",
        "i",
        "w",
        "carry",
        "i",
        "ph",
        "i",
        "N",
        "rbt",
        "_",
        "rws",
        "rwst",
        "iwst",
        "nrws",
        "nrwst",
        "niwst",
        "rmws",
        "i",
        "rx",
        "carry",
        "i",
        "w",
        "lo",
        "w",
        "res",
        "i",
        "q",
        "r",
        "s",
        "carryMask",
        "i",
        "carry",
        "newCarry",
        "c",
        "h",
        "r",
        "s",
        "mask",
        "maskedWords",
        "extended",
        "i",
        "carry",
        "word",
        "r",
        "s",
        "q",
        "w",
        "r",
        "s",
        "mask",
        "i",
        "i",
        "len",
        "i",
        "w",
        "carry",
        "right",
        "shift",
        "a",
        "b",
        "num",
        "bhi",
        "bhiBits",
        "m",
        "q",
        "i",
        "diff",
        "j",
        "qj",
        "div",
        "mod",
        "res",
        "dm",
        "mod",
        "half",
        "r2",
        "cmp",
        "p",
        "acc",
        "i",
        "carry",
        "i",
        "w",
        "x",
        "y",
        "A",
        "B",
        "C",
        "D",
        "g",
        "yp",
        "xp",
        "i",
        "im",
        "j",
        "jm",
        "a",
        "b",
        "x1",
        "x2",
        "delta",
        "i",
        "im",
        "j",
        "jm",
        "res",
        "a",
        "b",
        "shift",
        "r",
        "t",
        "a",
        "r",
        "s",
        "q",
        "carry",
        "q",
        "i",
        "s",
        "w",
        "negative",
        "res",
        "w",
        "res",
        "res",
        "i",
        "a",
        "b",
        "primes",
        "tmp",
        "r",
        "num",
        "rlen",
        "cmp",
        "mask",
        "outLen",
        "i",
        "prev",
        "next",
        "lo",
        "i",
        "w",
        "carry",
        "i",
        "hi",
        "lo",
        "prime",
        "prime",
        "res",
        "res",
        "res",
        "res",
        "mod3",
        "pow",
        "q",
        "s",
        "one",
        "nOne",
        "lpow",
        "z",
        "c",
        "r",
        "t",
        "m",
        "s",
        "tmp",
        "t",
        "i",
        "b",
        "inv",
        "windowSize",
        "wnd",
        "i",
        "res",
        "current",
        "currentLen",
        "start",
        "word",
        "j",
        "bit",
        "r",
        "res",
        "r",
        "t",
        "c",
        "u",
        "res",
        "u",
        "t",
        "c",
        "u",
        "res",
        "u",
        "res",
        "r",
        "res",
        "i",
        "arr",
        "arr",
        "crypto",
        "basex",
        "ALPHABET",
        "base58",
        "Buffer",
        "checksum",
        "payload",
        "checksum",
        "newChecksum",
        "buffer",
        "buffer",
        "payload",
        "createHash",
        "bs58checkBase",
        "tmp",
        "Buffer",
        "Transform",
        "StringDecoder",
        "inherits",
        "outData",
        "err",
        "err",
        "outData",
        "inherits",
        "MD5",
        "RIPEMD160",
        "sha",
        "Base",
        "MD5",
        "inherits",
        "Legacy",
        "Base",
        "Buffer",
        "md5",
        "RIPEMD160",
        "sha",
        "ZEROS",
        "blocksize",
        "hash",
        "ipad",
        "opad",
        "i",
        "h",
        "hash",
        "inherits",
        "Buffer",
        "Base",
        "ZEROS",
        "blocksize",
        "ipad",
        "opad",
        "i",
        "h",
        "elliptic",
        "exports",
        "BN",
        "elliptic",
        "utils",
        "getNAF",
        "getJSF",
        "adjustCount",
        "doubles",
        "naf",
        "I",
        "repr",
        "j",
        "nafW",
        "k",
        "a",
        "b",
        "i",
        "I",
        "j",
        "nafW",
        "w",
        "nafPoints",
        "wnd",
        "naf",
        "acc",
        "i",
        "k",
        "z",
        "wndWidth",
        "wnd",
        "naf",
        "max",
        "i",
        "p",
        "nafPoints",
        "i",
        "a",
        "b",
        "i",
        "comb",
        "index",
        "jsf",
        "j",
        "ja",
        "jb",
        "acc",
        "tmp",
        "i",
        "max",
        "k",
        "zero",
        "j",
        "j",
        "z",
        "p",
        "i",
        "len",
        "res",
        "len",
        "x",
        "precomputed",
        "doubles",
        "doubles",
        "acc",
        "i",
        "j",
        "res",
        "max",
        "dbl",
        "i",
        "r",
        "i",
        "curve",
        "elliptic",
        "BN",
        "inherits",
        "Base",
        "x2",
        "rhs",
        "lhs",
        "y2",
        "y",
        "isOdd",
        "y2",
        "lhs",
        "rhs",
        "x2",
        "x",
        "x2",
        "y2",
        "lhs",
        "rhs",
        "a",
        "b",
        "c",
        "d",
        "e",
        "g",
        "f",
        "h",
        "nx",
        "ny",
        "nt",
        "nz",
        "b",
        "c",
        "d",
        "nx",
        "ny",
        "nz",
        "e",
        "f",
        "h",
        "j",
        "e",
        "h",
        "j",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "nx",
        "ny",
        "nt",
        "nz",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "tmp",
        "nx",
        "ny",
        "nz",
        "zi",
        "rx",
        "xc",
        "t",
        "curve",
        "exports",
        "curve",
        "BN",
        "inherits",
        "Base",
        "elliptic",
        "utils",
        "x",
        "x2",
        "rhs",
        "y",
        "a",
        "aa",
        "b",
        "bb",
        "c",
        "nx",
        "nz",
        "a",
        "b",
        "c",
        "d",
        "da",
        "cb",
        "nx",
        "nz",
        "t",
        "a",
        "b",
        "c",
        "bits",
        "i",
        "curve",
        "elliptic",
        "BN",
        "inherits",
        "Base",
        "beta",
        "betas",
        "lambdas",
        "basis",
        "red",
        "tinv",
        "ntinv",
        "s",
        "l1",
        "l2",
        "aprxSqrt",
        "u",
        "v",
        "x1",
        "y1",
        "x2",
        "y2",
        "a0",
        "b0",
        "a1",
        "b1",
        "a2",
        "b2",
        "prevR",
        "i",
        "r",
        "x",
        "q",
        "y",
        "len1",
        "len2",
        "basis",
        "v1",
        "v2",
        "c1",
        "c2",
        "p1",
        "p2",
        "q1",
        "q2",
        "k1",
        "k2",
        "y2",
        "y",
        "isOdd",
        "x",
        "y",
        "ax",
        "rhs",
        "npoints",
        "ncoeffs",
        "i",
        "split",
        "p",
        "beta",
        "res",
        "j",
        "pre",
        "beta",
        "curve",
        "endoMul",
        "res",
        "pre",
        "c",
        "nx",
        "ny",
        "ys1",
        "a",
        "x2",
        "dyinv",
        "c",
        "nx",
        "ny",
        "points",
        "coeffs",
        "points",
        "coeffs",
        "res",
        "pre",
        "negate",
        "res",
        "zinv",
        "zinv2",
        "ax",
        "ay",
        "pz2",
        "z2",
        "u1",
        "u2",
        "s1",
        "s2",
        "h",
        "r",
        "h2",
        "h3",
        "v",
        "nx",
        "ny",
        "nz",
        "z2",
        "u1",
        "u2",
        "s1",
        "s2",
        "h",
        "r",
        "h2",
        "h3",
        "v",
        "nx",
        "ny",
        "nz",
        "r",
        "i",
        "a",
        "tinv",
        "jx",
        "jy",
        "jz",
        "jz4",
        "jyd",
        "i",
        "jx2",
        "jyd2",
        "jyd4",
        "c",
        "t1",
        "nx",
        "t2",
        "dny",
        "nz",
        "nx",
        "ny",
        "nz",
        "xx",
        "yy",
        "yyyy",
        "s",
        "m",
        "t",
        "yyyy8",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "c8",
        "nx",
        "ny",
        "nz",
        "xx",
        "yy",
        "yyyy",
        "s",
        "m",
        "t",
        "yyyy8",
        "delta",
        "gamma",
        "beta",
        "alpha",
        "beta4",
        "beta8",
        "ggamma8",
        "a",
        "jx",
        "jy",
        "jz",
        "jz4",
        "jx2",
        "jy2",
        "c",
        "jxd4",
        "t1",
        "nx",
        "t2",
        "jyd8",
        "ny",
        "nz",
        "xx",
        "yy",
        "zz",
        "yyyy",
        "m",
        "mm",
        "e",
        "ee",
        "t",
        "u",
        "yyu4",
        "nx",
        "ny",
        "nz",
        "z2",
        "pz2",
        "z3",
        "pz3",
        "zs",
        "rx",
        "xc",
        "t",
        "curves",
        "exports",
        "hash",
        "elliptic",
        "curve",
        "pre",
        "BN",
        "HmacDRBG",
        "elliptic",
        "utils",
        "KeyPair",
        "Signature",
        "drbg",
        "ns2",
        "priv",
        "delta",
        "bkey",
        "nonce",
        "drbg",
        "ns1",
        "iter",
        "k",
        "kp",
        "kpX",
        "r",
        "s",
        "recoveryParam",
        "r",
        "s",
        "sinv",
        "u1",
        "u2",
        "p",
        "p",
        "n",
        "e",
        "r",
        "s",
        "isYOdd",
        "isSecondKey",
        "rInv",
        "s1",
        "s2",
        "i",
        "Qprime",
        "BN",
        "elliptic",
        "utils",
        "pub",
        "BN",
        "elliptic",
        "utils",
        "initial",
        "octetLen",
        "val",
        "i",
        "off",
        "i",
        "len",
        "p",
        "len",
        "rlen",
        "r",
        "slen",
        "s",
        "octets",
        "r",
        "s",
        "arr",
        "backHalf",
        "res",
        "hash",
        "elliptic",
        "utils",
        "parseBytes",
        "KeyPair",
        "Signature",
        "curve",
        "key",
        "r",
        "R",
        "Rencoded",
        "s_",
        "S",
        "key",
        "h",
        "SG",
        "RplusAh",
        "hash",
        "i",
        "enc",
        "lastIx",
        "normed",
        "xIsOdd",
        "y",
        "elliptic",
        "utils",
        "parseBytes",
        "cachedProperty",
        "eddsa",
        "hash",
        "lastIx",
        "a",
        "BN",
        "elliptic",
        "utils",
        "cachedProperty",
        "parseBytes",
        "utils",
        "exports",
        "BN",
        "minAssert",
        "minUtils",
        "naf",
        "ws",
        "k",
        "z",
        "mod",
        "shift",
        "i",
        "jsf",
        "d1",
        "d2",
        "m14",
        "m24",
        "u1",
        "m8",
        "u2",
        "m8",
        "key",
        "Buffer",
        "Transform",
        "inherits",
        "error",
        "error",
        "block",
        "offset",
        "i",
        "j",
        "carry",
        "digest",
        "i",
        "hash",
        "exports",
        "utils",
        "r",
        "i",
        "len",
        "k",
        "res",
        "i",
        "t",
        "utils",
        "i",
        "utils",
        "common",
        "rotl32",
        "sum32",
        "sum32_3",
        "sum32_4",
        "BlockHash",
        "A",
        "B",
        "C",
        "D",
        "E",
        "Ah",
        "A",
        "Bh",
        "B",
        "Ch",
        "C",
        "Dh",
        "D",
        "Eh",
        "E",
        "j",
        "T",
        "r",
        "rh",
        "s",
        "sh",
        "utils",
        "common",
        "shaCommon",
        "rotl32",
        "sum32",
        "sum32_5",
        "ft_1",
        "BlockHash",
        "sha1_K",
        "W",
        "i",
        "a",
        "b",
        "c",
        "d",
        "e",
        "s",
        "t",
        "utils",
        "SHA256",
        "utils",
        "common",
        "shaCommon",
        "sum32",
        "sum32_4",
        "sum32_5",
        "ch32",
        "maj32",
        "s0_256",
        "s1_256",
        "g0_256",
        "g1_256",
        "BlockHash",
        "sha256_K",
        "W",
        "i",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "T1",
        "T2",
        "utils",
        "SHA512",
        "utils",
        "common",
        "rotr64_hi",
        "rotr64_lo",
        "shr64_hi",
        "shr64_lo",
        "sum64",
        "sum64_hi",
        "sum64_lo",
        "sum64_4_hi",
        "sum64_4_lo",
        "sum64_5_hi",
        "sum64_5_lo",
        "BlockHash",
        "sha512_K",
        "W",
        "i",
        "c0_hi",
        "c0_lo",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "W",
        "ah",
        "al",
        "bh",
        "bl",
        "ch",
        "cl",
        "dh",
        "dl",
        "eh",
        "el",
        "fh",
        "fl",
        "gh",
        "gl",
        "hh",
        "hl",
        "i",
        "c0_hi",
        "hh",
        "c0_lo",
        "hl",
        "c1_hi",
        "c1_lo",
        "c2_hi",
        "c2_lo",
        "c3_hi",
        "c3_lo",
        "c4_hi",
        "c4_lo",
        "T1_hi",
        "T1_lo",
        "T2_hi",
        "T2_lo",
        "r",
        "r",
        "r",
        "r",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "c0_hi",
        "c1_hi",
        "c2_hi",
        "r",
        "c0_lo",
        "c1_lo",
        "c2_lo",
        "r",
        "utils",
        "rotr32",
        "inherits",
        "res",
        "i",
        "c",
        "hi",
        "lo",
        "res",
        "i",
        "res",
        "res",
        "i",
        "w",
        "len",
        "res",
        "i",
        "k",
        "start",
        "w",
        "res",
        "i",
        "k",
        "m",
        "bh",
        "bl",
        "lo",
        "hi",
        "lo",
        "hi",
        "lo",
        "carry",
        "lo",
        "al",
        "hi",
        "lo",
        "carry",
        "lo",
        "al",
        "hi",
        "lo",
        "r",
        "r",
        "r",
        "hash",
        "utils",
        "entropy",
        "nonce",
        "pers",
        "seed",
        "i",
        "kmac",
        "temp",
        "res",
        "TempCtor",
        "inherits",
        "HashBase",
        "ARRAY16",
        "M",
        "ARRAY16",
        "i",
        "a",
        "b",
        "c",
        "d",
        "buffer",
        "length",
        "results",
        "j",
        "i",
        "left",
        "right",
        "data",
        "utils",
        "exports",
        "res",
        "i",
        "i",
        "i",
        "c",
        "hi",
        "lo",
        "res",
        "i",
        "OPS",
        "size",
        "opcode",
        "number",
        "size",
        "Buffer",
        "crypto",
        "rawBytes",
        "Buffer",
        "inherits",
        "HashBase",
        "ARRAY16",
        "zl",
        "zr",
        "sl",
        "sr",
        "hl",
        "hr",
        "words",
        "ARRAY16",
        "j",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "ar",
        "br",
        "cr",
        "dr",
        "er",
        "i",
        "tl",
        "tr",
        "t",
        "buffer",
        "buffer",
        "Buffer",
        "buf",
        "Buffer",
        "block",
        "blockSize",
        "length",
        "accum",
        "offset",
        "assigned",
        "remainder",
        "i",
        "rem",
        "bits",
        "lowBits",
        "highBits",
        "hash",
        "exports",
        "Algorithm",
        "inherits",
        "Hash",
        "Buffer",
        "K",
        "W",
        "W",
        "a",
        "b",
        "c",
        "d",
        "e",
        "i",
        "j",
        "s",
        "t",
        "H",
        "inherits",
        "Hash",
        "Buffer",
        "K",
        "W",
        "W",
        "a",
        "b",
        "c",
        "d",
        "e",
        "i",
        "j",
        "s",
        "t",
        "H",
        "inherits",
        "Sha256",
        "Hash",
        "Buffer",
        "W",
        "H",
        "inherits",
        "Hash",
        "Buffer",
        "K",
        "W",
        "W",
        "a",
        "b",
        "c",
        "d",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "T1",
        "T2",
        "H",
        "inherits",
        "SHA512",
        "Hash",
        "Buffer",
        "W",
        "H",
        "inherits",
        "Hash",
        "Buffer",
        "K",
        "W",
        "W",
        "ah",
        "bh",
        "ch",
        "dh",
        "eh",
        "fh",
        "gh",
        "hh",
        "al",
        "bl",
        "cl",
        "dl",
        "el",
        "fl",
        "gl",
        "hl",
        "i",
        "xh",
        "xl",
        "gamma0",
        "gamma0l",
        "gamma1",
        "gamma1l",
        "Wi7h",
        "Wi7l",
        "Wi16h",
        "Wi16l",
        "Wil",
        "Wih",
        "j",
        "majh",
        "majl",
        "sigma0h",
        "sigma0l",
        "sigma1h",
        "sigma1l",
        "Kih",
        "Kil",
        "chh",
        "chl",
        "t1l",
        "t1h",
        "t2l",
        "t2h",
        "H",
        "BN",
        "EC",
        "secp256k1",
        "deterministicGenerateK",
        "ZERO32",
        "EC_GROUP_ORDER",
        "EC_P",
        "n",
        "nDiv2",
        "G",
        "THROW_BAD_PRIVATE",
        "THROW_BAD_POINT",
        "THROW_BAD_TWEAK",
        "THROW_BAD_HASH",
        "THROW_BAD_SIGNATURE",
        "t",
        "x",
        "y",
        "r",
        "s",
        "a",
        "b",
        "pp",
        "compressed",
        "compressed",
        "pp",
        "tt",
        "qq",
        "uu",
        "pp",
        "dd",
        "pp",
        "compressed",
        "compressed",
        "pp",
        "tt",
        "qq",
        "dd",
        "tt",
        "dt",
        "dd",
        "tt",
        "dt",
        "d",
        "e",
        "r",
        "s",
        "kI",
        "Q",
        "buffer",
        "Q",
        "r",
        "s",
        "e",
        "sInv",
        "u1",
        "u2",
        "R",
        "xR",
        "v",
        "createHmac",
        "ONE1",
        "ZERO1",
        "k",
        "v",
        "T",
        "v",
        "valueJson",
        "description",
        "NATIVE",
        "ERRORS",
        "name",
        "_ArrayN",
        "_BufferN",
        "_HexN",
        "_StringN",
        "UINT53_MAX",
        "types",
        "ERRORS",
        "NATIVE",
        "tfJSON",
        "TfTypeError",
        "TfPropertyTypeError",
        "tfSubError",
        "getValueTypeName",
        "TYPES",
        "propertyValue",
        "propertyName",
        "propertyType",
        "propertyValue",
        "types",
        "types",
        "EXTRA",
        "types",
        "Buffer",
        "MAX_SAFE_INTEGER",
        "first",
        "lo",
        "hi",
        "number",
        "bs58check",
        "result",
        "lookup",
        "revLookup",
        "Arr",
        "code",
        "i",
        "len",
        "len",
        "validLen",
        "placeHoldersLen",
        "lens",
        "validLen",
        "placeHoldersLen",
        "tmp",
        "lens",
        "validLen",
        "placeHoldersLen",
        "arr",
        "curByte",
        "len",
        "i",
        "tmp",
        "output",
        "i",
        "start",
        "tmp",
        "len",
        "extraBytes",
        "parts",
        "maxChunkLength",
        "i",
        "len2",
        "base64",
        "ieee754",
        "K_MAX_LENGTH",
        "arr",
        "buf",
        "valueOf",
        "b",
        "length",
        "buf",
        "actual",
        "length",
        "buf",
        "i",
        "buf",
        "len",
        "buf",
        "x",
        "y",
        "i",
        "len",
        "i",
        "buffer",
        "pos",
        "buf",
        "len",
        "mustMatch",
        "loweredCase",
        "loweredCase",
        "i",
        "len",
        "i",
        "len",
        "i",
        "len",
        "i",
        "length",
        "max",
        "x",
        "y",
        "len",
        "thisCopy",
        "targetCopy",
        "i",
        "indexSize",
        "arrLength",
        "valLength",
        "i",
        "foundIndex",
        "found",
        "j",
        "remaining",
        "strLen",
        "i",
        "parsed",
        "remaining",
        "loweredCase",
        "res",
        "i",
        "start",
        "firstByte",
        "codePoint",
        "bytesPerSequence",
        "secondByte",
        "thirdByte",
        "fourthByte",
        "tempCodePoint",
        "MAX_ARGUMENTS_LENGTH",
        "len",
        "res",
        "i",
        "ret",
        "i",
        "start",
        "ret",
        "i",
        "start",
        "len",
        "i",
        "start",
        "res",
        "i",
        "len",
        "newBuf",
        "val",
        "mul",
        "i",
        "val",
        "mul",
        "val",
        "mul",
        "i",
        "i",
        "byteLength",
        "mul",
        "val",
        "val",
        "val",
        "maxBytes",
        "mul",
        "i",
        "maxBytes",
        "i",
        "mul",
        "limit",
        "i",
        "mul",
        "sub",
        "limit",
        "i",
        "mul",
        "sub",
        "len",
        "i",
        "code",
        "i",
        "len",
        "INVALID_BASE64_RE",
        "codePoint",
        "length",
        "leadSurrogate",
        "i",
        "byteArray",
        "i",
        "c",
        "hi",
        "lo",
        "byteArray",
        "i",
        "i",
        "objectCreate",
        "objectKeys",
        "bind",
        "defaultMaxListeners",
        "hasDefineProperty",
        "o",
        "len",
        "listeners",
        "i",
        "len",
        "listeners",
        "i",
        "len",
        "listeners",
        "i",
        "len",
        "listeners",
        "i",
        "len",
        "listeners",
        "i",
        "er",
        "handler",
        "len",
        "args",
        "i",
        "events",
        "doError",
        "err",
        "isFn",
        "m",
        "events",
        "existing",
        "w",
        "args",
        "i",
        "state",
        "wrapped",
        "events",
        "position",
        "i",
        "originalListener",
        "listeners",
        "events",
        "i",
        "keys",
        "key",
        "events",
        "evlistener",
        "events",
        "evlistener",
        "i",
        "index",
        "k",
        "n",
        "copy",
        "i",
        "ret",
        "i",
        "F",
        "keys",
        "fn",
        "e",
        "m",
        "eLen",
        "eMax",
        "eBias",
        "nBits",
        "i",
        "d",
        "s",
        "e",
        "m",
        "c",
        "eLen",
        "eMax",
        "eBias",
        "rt",
        "i",
        "d",
        "s",
        "toString",
        "len",
        "args",
        "i",
        "process",
        "cachedSetTimeout",
        "cachedClearTimeout",
        "queue",
        "draining",
        "currentQueue",
        "queueIndex",
        "timeout",
        "len",
        "args",
        "i",
        "pna",
        "objectKeys",
        "keys",
        "util",
        "Readable",
        "Writable",
        "keys",
        "v",
        "method",
        "Transform",
        "util",
        "pna",
        "isArray",
        "Duplex",
        "EE",
        "EElistenerCount",
        "Stream",
        "Buffer",
        "OurUint8Array",
        "util",
        "debugUtil",
        "debug",
        "BufferList",
        "destroyImpl",
        "StringDecoder",
        "kProxyEvents",
        "isDuplex",
        "hwm",
        "readableHwm",
        "defaultHwm",
        "state",
        "skipChunkCheck",
        "state",
        "er",
        "er",
        "MAX_HWM",
        "state",
        "nOrig",
        "n",
        "doRead",
        "ret",
        "chunk",
        "state",
        "len",
        "src",
        "state",
        "doEnd",
        "endFn",
        "ondrain",
        "cleanedUp",
        "increasedAwaitDrain",
        "ret",
        "state",
        "state",
        "unpipeInfo",
        "dests",
        "len",
        "i",
        "index",
        "res",
        "state",
        "state",
        "state",
        "_this",
        "state",
        "paused",
        "chunk",
        "ret",
        "n",
        "ret",
        "ret",
        "p",
        "c",
        "ret",
        "nb",
        "ret",
        "p",
        "c",
        "buf",
        "nb",
        "state",
        "i",
        "l",
        "Duplex",
        "util",
        "ts",
        "cb",
        "rs",
        "_this",
        "ts",
        "rs",
        "ts",
        "_this2",
        "pna",
        "_this",
        "asyncWrite",
        "Duplex",
        "util",
        "internalUtil",
        "Stream",
        "Buffer",
        "OurUint8Array",
        "destroyImpl",
        "isDuplex",
        "hwm",
        "writableHwm",
        "defaultHwm",
        "noDecode",
        "current",
        "realHasInstance",
        "er",
        "valid",
        "er",
        "state",
        "ret",
        "isBuf",
        "state",
        "state",
        "newChunk",
        "len",
        "ret",
        "last",
        "state",
        "sync",
        "cb",
        "finished",
        "entry",
        "l",
        "buffer",
        "holder",
        "count",
        "allBuffers",
        "chunk",
        "encoding",
        "cb",
        "len",
        "state",
        "need",
        "entry",
        "cb",
        "Buffer",
        "util",
        "entry",
        "entry",
        "ret",
        "p",
        "ret",
        "ret",
        "p",
        "i",
        "obj",
        "pna",
        "_this",
        "readableDestroyed",
        "writableDestroyed",
        "EE",
        "inherits",
        "source",
        "didOnEnd",
        "Buffer",
        "isEncoding",
        "retried",
        "nenc",
        "nb",
        "r",
        "i",
        "j",
        "nb",
        "p",
        "r",
        "total",
        "end",
        "r",
        "r",
        "c",
        "r",
        "end",
        "n",
        "r",
        "nextTick",
        "apply",
        "immediateIds",
        "nextImmediateId",
        "msecs",
        "id",
        "args",
        "warned",
        "val"
    ],
    "comments": [
        "base-x encoding",
        "Forked from https://github.com/cryptocoinjs/bs58",
        "Originally written by Mike Hearn for BitcoinJ",
        "Copyright (c) 2011 Google Inc",
        "Ported to JavaScript by Stefan Thomas",
        "Merged Buffer refactorings from base58-native by Stephen Pair",
        "Copyright (c) 2013 BitPay Inc",
        "pre-compute lookup table",
        "deal with leading zeros",
        "convert digits to a string",
        "deal with leading zeros",
        "pre-compute lookup table",
        "determine chk mod",
        "don't allow mixed case",
        "not in the checksum?",
        "Private === not neutered",
        "Public === neutered",
        "4 bytes: version bytes",
        "1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....",
        "4 bytes: the fingerprint of the parent's key (0x00000000 if master key)",
        "4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.",
        "This is encoded in big endian. (0x00000000 if master key)",
        "32 bytes: the chain code",
        "33 bytes: the public key or private key data",
        "0x00 + k for private keys",
        "33 bytes: the public key",
        "X9.62 encoding for public keys",
        "https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions",
        "Hardened child",
        "data = 0x00 || ser256(kpar) || ser32(index)",
        "Normal child",
        "data = serP(point(kpar)) || ser32(index)",
        "= serP(Kpar) || ser32(index)",
        "if parse256(IL) >= n, proceed with the next value for i",
        "Private parent key -> private child key",
        "ki = parse256(IL) + kpar (mod n)",
        "In case ki == 0, proceed with the next value for i",
        "Public parent key -> public child key",
        "Ki = point(parse256(IL)) + Kpar",
        "= G*IL + Kpar",
        "In case Ki is the point at infinity, proceed with the next value for i",
        "Only derives hardened private keys by default",
        "4 bytes: version bytes",
        "1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...",
        "4 bytes: the fingerprint of the parent's key (0x00000000 if master key)",
        "4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.",
        "This is encoded in MSB order. (0x00000000 if master key)",
        "32 bytes: the chain code",
        "33 bytes: private key data (0x00 + k)",
        "33 bytes: public key data (0x02 + X or 0x03 + X)",
        "verify the X coordinate is a point on the curve",
        "Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki",
        "Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]",
        "NOTE: SIGHASH byte ignored AND restricted, truncate before use",
        "non-BIP66 - extract R, S values",
        "0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]",
        "TODO: 4.0.0, move to \"toOutputScript\"",
        "epoch",
        "TODO: buffer, offset compatibility",
        "TODO: extract from toBuffer?",
        "https://github.com/feross/buffer/blob/master/index.js#L1127",
        "XXX: optimization, below functions .decompile before use",
        "XXX: optimization, below functions .decompile before use",
        "XXX: optimization, below functions .decompile before use",
        "list of networks?",
        "otherwise, assume a network object (or default to bitcoin)",
        "https://en.bitcoin.it/wiki/List_of_address_prefixes",
        "Dogecoin BIP32 is a proposed standard: https://bitcointalk.org/index.php?topic=409731",
        "output: OP_RETURN ...",
        "extended validation",
        "TODO",
        "witness commitment",
        "OP_1 - 1",
        "input: OP_0 [signatures ...]",
        "output: m [pubKeys ...] n OP_CHECKMULTISIG",
        "extended validation",
        "input: {signature}",
        "output: {pubKey} OP_CHECKSIG",
        "extended validation",
        "input: {signature} {pubkey}",
        "output: OP_DUP OP_HASH160 {hash160(pubkey)} OP_EQUALVERIFY OP_CHECKSIG",
        "extended validation",
        "input: [redeemScriptSig ...] {redeemScript}",
        "witness: <?>",
        "output: OP_HASH160 {hash160(redeemScript)} OP_EQUAL",
        "output dependents",
        "in order of least effort",
        "input dependents",
        "inlined to prevent 'no-inner-declarations' failing",
        "is the redeem output empty/invalid?",
        "match hash against other sources",
        "witness: {signature} {pubKey}",
        "input: <>",
        "output: OP_0 {pubKeyHash}",
        "extended validation",
        "input: <>",
        "witness: [redeemScriptSig ...] {redeemScript}",
        "output: OP_0 {sha256(redeemScript)}",
        "transform redeem input to witness stack?",
        "assign, and blank the existing input",
        "extended validation",
        "is there two redeem sources?",
        "is the redeem output non-empty?",
        "match hash against other sources",
        "OP_1 - 1",
        "TODO: remove me",
        "data chunk",
        "adhere to BIP62.3, minimal push policy",
        "opcode",
        "data chunk",
        "adhere to BIP62.3, minimal push policy",
        "opcode",
        "TODO: remove me",
        "data chunk",
        "did reading a pushDataInt fail?",
        "attempt to read too much data?",
        "decompile minimally",
        "opcode",
        "data?",
        "opcode!",
        "opcode?",
        "data!",
        "return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE",
        "40-bit",
        "32-bit / 24-bit / 16-bit / 8-bit",
        "BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)",
        "OP_0 [signatures ...]",
        "m [pubKeys ...] n OP_CHECKMULTISIG",
        "OP_1 - 1",
        "OP_RETURN {data}",
        "{signature}",
        "{pubKey} OP_CHECKSIG",
        "{signature} {pubKey}",
        "OP_DUP OP_HASH160 {pubKeyHash} OP_EQUALVERIFY OP_CHECKSIG",
        "<scriptSig> {serialized scriptPubKey script}",
        "is redeemScript a valid script?",
        "is redeemScriptSig push only?",
        "is witness?",
        "match types",
        "OP_HASH160 {scriptHash} OP_EQUAL",
        "OP_RETURN {aa21a9ed} {commitment}",
        "{signature} {pubKey}",
        "OP_0 {pubKeyHash}",
        "<scriptSig> {serialized scriptPubKey script}",
        "is witnessScript a valid script?",
        "match types",
        "OP_0 {scriptHash}",
        "was this pointless?",
        "Add the input and return the input's index",
        "Add the output and return the output's index",
        "types.UInt8",
        "https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29",
        "ignore OP_CODESEPARATOR",
        "SIGHASH_NONE: ignore all outputs? (wildcard payee)",
        "ignore sequence numbers (except at inIndex)",
        "SIGHASH_SINGLE: ignore all outputs, except at the same index?",
        "https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60",
        "truncate outputs after",
        "\"blank\" outputs before",
        "ignore sequence numbers (except at inIndex)",
        "SIGHASH_ANYONECANPAY: ignore inputs entirely?",
        "SIGHASH_ALL: only ignore input scripts",
        "\"blank\" others input scripts",
        "serialize and hash",
        "transaction hash's are displayed in reverse order",
        "avoid slicing unless necessary",
        "could be done in expandInput, but requires the original Transaction for hashForSignature",
        "check for a signature",
        "skip if undefined || OP_0",
        "TODO: avoid O(n) hashForSignature",
        "skip if signature does not match pubKey",
        "remove matched signature from unmatched",
        "does our hash160(pubKey) match the output scripts?",
        "does our hash160(pubKey) match the output scripts?",
        "enforces P2SH(P2WSH(...))",
        "embedded scripts are not possible without extra information",
        "WARNING: This is __NOT__ to be relied on, its just another potential safety mechanism (safety in-depth)",
        "if any signatures exist, throw",
        "XXX: this might eventually become more complex depending on what the versions represent",
        "Copy transaction fields",
        "Copy outputs (done first to avoid signature invalidation)",
        "Copy inputs",
        "fix some things not possible through the public API",
        "is it a hex string?",
        "transaction hashs's are displayed in reverse order, un-reverse it",
        "is it a Transaction object?",
        "derive what we can from the scriptSig",
        "if an input value was given, retain it",
        "derive what we can from the previous transactions output script",
        "Attempt to get a script if it's a base58 or bech32 address string",
        "create script signatures from inputs",
        "do not rely on this, its merely a last resort",
        "TODO: remove keyPair.network matching in 4.0.0",
        "if redeemScript was previously provided, enforce consistency",
        "updates inline",
        "ready to sign",
        "enforce in order signing of public keys",
        "TODO: add tests",
        "any signatures?",
        "if SIGHASH_ANYONECANPAY is set, signatures would not",
        "be invalidated by more inputs",
        "if SIGHASH_SINGLE is set, and nInputs > nOutputs",
        "some signatures would be invalidated by the addition",
        "of more outputs",
        "not all inputs will have .value defined",
        "but all outputs do, and if we have any input value",
        "we can immediately determine if the outputs are too small",
        "external dependent types",
        "exposed, external API",
        "extend typeforce types with ours",
        "Utils",
        "Could use `inherits` module, but don't want to move from single file",
        "architecture yet.",
        "BN",
        "Reduction context",
        "2 ^ 53 (unsafe)",
        "Reverse the bytes",
        "Perhaps a Uint8Array",
        "'a' - 'f'",
        "'A' - 'F'",
        "'0' - '9'",
        "Create possibly bigger array to ensure that it fits the number",
        "Scan 24-bit chunks and add them to the number",
        "NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb",
        "'a'",
        "'A'",
        "'0' - '9'",
        "Initialize as zero",
        "Find length of limb in base",
        "Remove leading `0` from `this`",
        "-0 = 0",
        "var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }",
        "var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));",
        "var groupBase = Math.pow(base, groupSize);",
        "NOTE: at this stage it is known that the top bit is set",
        "Assume big-endian",
        "Short-cut",
        "Return number of used bits in a BN",
        "Number of trailing zero bits",
        "Return negative clone of `this`",
        "Or `num` with `this` in-place",
        "Or `num` with `this`",
        "And `num` with `this` in-place",
        "b = min-length(num, this)",
        "And `num` with `this`",
        "Xor `num` with `this` in-place",
        "a.length > b.length",
        "Xor `num` with `this`",
        "Not ``this`` with ``width`` bitwidth",
        "Extend the buffer with leading zeroes",
        "Handle complete words",
        "Handle the residue",
        "And remove leading zeroes",
        "Set `bit` of `this`",
        "Add `num` to `this` in-place",
        "negative + positive",
        "positive + negative",
        "a.length > b.length",
        "Copy the rest of the words",
        "Add `num` to `this`",
        "Subtract `num` from `this` in-place",
        "this - (-num) = this + num",
        "-this - num = -(this + num)",
        "At this point both numbers are positive",
        "Optimization - zeroify",
        "a > b",
        "Copy rest of the words",
        "Subtract `num` from `this`",
        "Peel one iteration (compiler can't do it, because of code complexity)",
        "Sum all words with the same `i + j = k` and accumulate `ncarry`,",
        "note that ncarry could be >= 0x3ffffff",
        "TODO(indutny): it may be reasonable to omit it for users who don't need",
        "to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit",
        "multiplication (like elliptic secp256k1).",
        "k = 0",
        "k = 1",
        "k = 2",
        "k = 3",
        "k = 4",
        "k = 5",
        "k = 6",
        "k = 7",
        "k = 8",
        "k = 9",
        "k = 10",
        "k = 11",
        "k = 12",
        "k = 13",
        "k = 14",
        "k = 15",
        "k = 16",
        "k = 17",
        "k = 18",
        "Polyfill comb",
        "Sum all words with the same `i + j = k` and accumulate `ncarry`,",
        "note that ncarry could be >= 0x3ffffff",
        "Cooley-Tukey algorithm for FFT",
        "slightly revisited to rely on looping instead of recursion",
        "Returns binary-reversed representation of `x`",
        "Performs \"tweedling\" phase, therefore 'emulating'",
        "behaviour of the recursive algorithm",
        "jshint maxdepth : false",
        "Pad with zeroes",
        "Multiply `this` by `num`",
        "Multiply employing FFT",
        "In-place Multiplication",
        "Carry",
        "NOTE: lo is 27bit maximum",
        "`this` * `this`",
        "`this` * `this` in-place",
        "Math.pow(`this`, `num`)",
        "Skip leading zeroes",
        "Shift-left in-place",
        "TODO(indutny): implement me",
        "Shift-right in-place",
        "NOTE: `hint` is a lowest bit before trailing zeroes",
        "NOTE: if `extended` is present - it will be filled with destroyed bits",
        "Extended mode, copy masked part",
        "No-op, we should not move anything at all",
        "Push carried bits as a mask",
        "TODO(indutny): implement me",
        "Shift-left",
        "Shift-right",
        "Test if n bit is set",
        "Fast case: bit is much higher than all existing words",
        "Check bit and return",
        "Return only lowers bits of number (in-place)",
        "Return only lowers bits of number",
        "Add plain number `num` to `this`",
        "Possible sign change",
        "Add without checks",
        "Carry",
        "Subtract plain number `num` from `this`",
        "Carry",
        "Subtraction overflow",
        "Normalize",
        "Initialize quotient",
        "NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max",
        "(0x7ffffff)",
        "Denormalize",
        "NOTE: 1) `mode` can be set to `mod` to request mod only,",
        "to `div` to request div only, or be absent to",
        "request both div & mod",
        "2) `positive` is true if unsigned mod is requested",
        "Both numbers are positive at this point",
        "Strip both numbers to approximate shift value",
        "Very short reduction",
        "Find `this` / `num`",
        "Find `this` % `num`",
        "Find Round(`this` / `num`)",
        "Fast case - exact division",
        "Round down",
        "Round up",
        "In-place division by number",
        "A * x + B * y = x",
        "C * x + D * y = y",
        "This is reduced incarnation of the binary EEA",
        "above, designated to invert members of the",
        "_prime_ fields F(p) at a maximal speed",
        "Remove common factor of two",
        "Swap `a` and `b` to make `a` always bigger than `b`",
        "Invert number in the field F(num)",
        "And first word and num",
        "Increment at the bit position in-line",
        "Fast case: bit is much higher than all existing words",
        "Add bit and propagate, if needed",
        "Compare two numbers and return:",
        "1 - if `this` > `num`",
        "0 - if `this` == `num`",
        "-1 - if `this` < `num`",
        "Unsigned comparison",
        "At this point both numbers have the same sign",
        "",
        "A reduce context, could be using montgomery or something better, depending",
        "on the `m` itself.",
        "",
        "Square root over p",
        "Return negative clone of `this` % `red modulo`",
        "Prime numbers with efficient reduction",
        "Pseudo-Mersenne prime",
        "P = 2 ^ N - K",
        "Assumes that `num` is less than `P^2`",
        "num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)",
        "256 = 9 * 26 + 22",
        "Shift by 9 limbs",
        "K = 0x1000003d1 = [ 0x40, 0x3d1 ]",
        "bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390",
        "Fast length reduction",
        "2 ^ 255 - 19",
        "K = 0x13",
        "Exported mostly for testing purposes, use plain name instead",
        "Cached version of prime",
        "",
        "Base reduction engine",
        "",
        "Fast case",
        "Tonelli-Shanks algorithm (Totally unoptimized and slow)",
        "",
        "Find Q and S, that Q * 2 ^ S = (P - 1)",
        "Find quadratic non-residue",
        "NOTE: Max is such because of generalized Riemann hypothesis.",
        "",
        "Montgomery method engine",
        "",
        "(AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R",
        "Emulate crypto API using randy",
        "Modern browsers",
        "IE",
        "Safari's WebWorkers do not have `crypto`",
        "Old junk",
        "Node.js or Web worker with no crypto support",
        "Encode a buffer as a base58-check encoded string",
        "Decode a base58-check encoded string to a buffer, no result if checksum is wrong",
        "SHA256(SHA256(buffer))",
        "Protocols",
        "Use Montgomery, when there is no fast reduction for the prime",
        "Useful for many curves",
        "Curve configuration, optional",
        "Temporary arrays",
        "Generalized Greg Maxwell's trick",
        "Translate into more windowed form",
        "Precompute window",
        "Get NAF form",
        "Add `this`*(N+1) for every w-NAF index",
        "Count zeroes",
        "J +- P",
        "J +- J",
        "Fill all arrays",
        "Comb small window NAFs",
        "1",
        "3",
        "5",
        "7",
        "Try to avoid Projective points, if possible",
        "-1 -1",
        "-1 0",
        "-1 1",
        "0 -1",
        "0 0",
        "0 1",
        "1 -1",
        "1 0",
        "1 1",
        "Zeroify references",
        "other",
        "uncompressed, hybrid-odd, hybrid-even",
        "NOTE: Important as we are creating point in Base.call()",
        "Just for compatibility with Short curve",
        "x^2 = (y^2 - c^2) / (c^2 d y^2 - a)",
        "Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)",
        "Use extended coordinates",
        "XXX This code assumes that zero is always zero in red",
        "hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html",
        "#doubling-dbl-2008-hwcd",
        "4M + 4S",
        "A = X1^2",
        "B = Y1^2",
        "C = 2 * Z1^2",
        "D = a * A",
        "E = (X1 + Y1)^2 - A - B",
        "G = D + B",
        "F = G - C",
        "H = D - B",
        "X3 = E * F",
        "Y3 = G * H",
        "T3 = E * H",
        "Z3 = F * G",
        "hyperelliptic.org/EFD/g1p/auto-twisted-projective.html",
        "#doubling-dbl-2008-bbjlp",
        "#doubling-dbl-2007-bl",
        "and others",
        "Generally 3M + 4S or 2M + 4S",
        "B = (X1 + Y1)^2",
        "C = X1^2",
        "D = Y1^2",
        "E = a * C",
        "F = E + D",
        "X3 = (B - C - D) * (F - 2)",
        "Y3 = F * (E - D)",
        "Z3 = F^2 - 2 * F",
        "H = Z1^2",
        "J = F - 2 * H",
        "X3 = (B-C-D)*J",
        "Y3 = F * (E - D)",
        "Z3 = F * J",
        "E = C + D",
        "H = (c * Z1)^2",
        "J = E - 2 * H",
        "X3 = c * (B - E) * J",
        "Y3 = c * E * (C - D)",
        "Z3 = E * J",
        "Double in extended coordinates",
        "hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html",
        "#addition-add-2008-hwcd-3",
        "8M",
        "A = (Y1 - X1) * (Y2 - X2)",
        "B = (Y1 + X1) * (Y2 + X2)",
        "C = T1 * k * T2",
        "D = Z1 * 2 * Z2",
        "E = B - A",
        "F = D - C",
        "G = D + C",
        "H = B + A",
        "X3 = E * F",
        "Y3 = G * H",
        "T3 = E * H",
        "Z3 = F * G",
        "hyperelliptic.org/EFD/g1p/auto-twisted-projective.html",
        "#addition-add-2008-bbjlp",
        "#addition-add-2007-bl",
        "10M + 1S",
        "A = Z1 * Z2",
        "B = A^2",
        "C = X1 * X2",
        "D = Y1 * Y2",
        "E = d * C * D",
        "F = B - E",
        "G = B + E",
        "X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)",
        "Y3 = A * G * (D - a * C)",
        "Z3 = F * G",
        "Y3 = A * G * (D - C)",
        "Z3 = c * F * G",
        "Normalize coordinates",
        "Compatibility with BaseCurve",
        "No-op",
        "XXX This code assumes that zero is always zero in red",
        "http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3",
        "2M + 2S + 4A",
        "A = X1 + Z1",
        "AA = A^2",
        "B = X1 - Z1",
        "BB = B^2",
        "C = AA - BB",
        "X3 = AA * BB",
        "Z3 = C * (BB + A24 * C)",
        "http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3",
        "4M + 2S + 6A",
        "A = X2 + Z2",
        "B = X2 - Z2",
        "C = X3 + Z3",
        "D = X3 - Z3",
        "DA = D * A",
        "CB = C * B",
        "X5 = Z1 * (DA + CB)^2",
        "Z5 = X1 * (DA - CB)^2",
        "(N / 2) * Q + Q",
        "(N / 2) * Q",
        "Q",
        "N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q",
        "N * Q = 2 * ((N / 2) * Q + Q))",
        "N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)",
        "N * Q + Q = 2 * ((N / 2) * Q + Q)",
        "Normalize coordinates",
        "If the curve is endomorphic, precalculate beta and lambda",
        "No efficient endomorphism",
        "Compute beta and lambda, that lambda * P = (beta * Px; Py)",
        "Choose the smallest beta",
        "Choose the lambda that is matching selected beta",
        "Get basis vectors, used for balanced length-two representation",
        "Find roots of for x^2 + x + 1 in F",
        "Root = (-1 +- Sqrt(-3)) / 2",
        "",
        "aprxSqrt >= sqrt(this.n)",
        "3.74",
        "Run EGCD, until r(L + 1) < aprxSqrt",
        "NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)",
        "First vector",
        "Second vector",
        "Normalize signs",
        "Calculate answer",
        "XXX Is there any way to tell if the number is odd without converting it",
        "to non-red form?",
        "Clean-up references to points and coefficients",
        "Force redgomery representation when loading from JSON",
        "O + P = P",
        "P + O = P",
        "P + P = 2P",
        "P + (-P) = O",
        "P + Q = O",
        "2P = O",
        "O + P = P",
        "P + O = P",
        "12M + 4S + 7A",
        "O + P = P",
        "P + O = P",
        "8M + 3S + 7A",
        "1M + 2S + 1A + N * (4S + 5M + 8A)",
        "N = 1 => 6M + 6S + 9A",
        "Reuse results",
        "Z = 1",
        "hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html",
        "#doubling-mdbl-2007-bl",
        "1M + 5S + 14A",
        "XX = X1^2",
        "YY = Y1^2",
        "YYYY = YY^2",
        "S = 2 * ((X1 + YY)^2 - XX - YYYY)",
        "M = 3 * XX + a; a = 0",
        "T = M ^ 2 - 2*S",
        "8 * YYYY",
        "X3 = T",
        "Y3 = M * (S - T) - 8 * YYYY",
        "Z3 = 2*Y1",
        "hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html",
        "#doubling-dbl-2009-l",
        "2M + 5S + 13A",
        "A = X1^2",
        "B = Y1^2",
        "C = B^2",
        "D = 2 * ((X1 + B)^2 - A - C)",
        "E = 3 * A",
        "F = E^2",
        "8 * C",
        "X3 = F - 2 * D",
        "Y3 = E * (D - X3) - 8 * C",
        "Z3 = 2 * Y1 * Z1",
        "Z = 1",
        "hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html",
        "#doubling-mdbl-2007-bl",
        "1M + 5S + 15A",
        "XX = X1^2",
        "YY = Y1^2",
        "YYYY = YY^2",
        "S = 2 * ((X1 + YY)^2 - XX - YYYY)",
        "M = 3 * XX + a",
        "T = M^2 - 2 * S",
        "X3 = T",
        "Y3 = M * (S - T) - 8 * YYYY",
        "Z3 = 2 * Y1",
        "hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b",
        "3M + 5S",
        "delta = Z1^2",
        "gamma = Y1^2",
        "beta = X1 * gamma",
        "alpha = 3 * (X1 - delta) * (X1 + delta)",
        "X3 = alpha^2 - 8 * beta",
        "Z3 = (Y1 + Z1)^2 - gamma - delta",
        "Y3 = alpha * (4 * beta - X3) - 8 * gamma^2",
        "4M + 6S + 10A",
        "hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl",
        "5M + 10S + ...",
        "XX = X1^2",
        "YY = Y1^2",
        "ZZ = Z1^2",
        "YYYY = YY^2",
        "M = 3 * XX + a * ZZ2; a = 0",
        "MM = M^2",
        "E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM",
        "EE = E^2",
        "T = 16*YYYY",
        "U = (M + E)^2 - MM - EE - T",
        "X3 = 4 * (X1 * EE - 4 * YY * U)",
        "Y3 = 8 * Y1 * (U * (T - U) - E * EE)",
        "Z3 = (Z1 + E)^2 - ZZ - EE",
        "x1 * z2^2 == x2 * z1^2",
        "y1 * z2^3 == y2 * z1^3",
        "XXX This code assumes that zero is always zero in red",
        "-121665 * (121666^(-1)) (mod P)",
        "4/5",
        "Precomputed endomorphism",
        "Shortcut `elliptic.ec(curve-name)`",
        "Shortcut for `elliptic.ec(elliptic.curves.curveName)`",
        "Point on curve",
        "Hash for function for DRBG",
        "Instantiate Hmac_DRBG",
        "Zero-extend key to provide enough entropy",
        "Zero-extend nonce to have the same byte size as N",
        "Instantiate Hmac_DRBG",
        "Number of bytes to generate",
        "Use complement of `s`, if it is > `n / 2`",
        "Perform primitive values validation",
        "Validate signature",
        "NOTE: Greg Maxwell's trick, inspired by:",
        "https://git.io/vad3K",
        "Compare `p.x` of Jacobian point with `r`,",
        "this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the",
        "inverse of `p.z^2`",
        "A set LSB signifies that the y-coordinate is odd",
        "1.1. Let x = r + jn.",
        "1.6.1 Compute Q = r^-1 (sR -  eG)",
        "Q = r^-1 (sR + -eG)",
        "KeyPair(ec, { priv: ..., pub: ... })",
        "compact is optional argument",
        "Ensure that the priv won't be bigger than n, otherwise we may fail",
        "in fixed multiplication method",
        "Montgomery points only have an `x` coordinate.",
        "Weierstrass/Edwards points on the other hand have both `x` and",
        "`y` coordinates.",
        "ECDH",
        "ECDSA",
        "Pad values",
        "Pad values",
        "Represent num in a w-NAF form",
        "Optimization, shift by word if possible",
        "Represent k1, k2 in a Joint Sparse Form",
        "First phase",
        "Second phase",
        "consume data",
        "update length",
        "reset state",
        "Proxy hash functions to the main object",
        "Convert message to array, pad it, and join into 32bit blocks",
        "Enough data, try updating",
        "Process pending data in blocks",
        "Append length",
        "Shorten key, if needed",
        "Add padding to key",
        "0x36 ^ 0x5c = 0x6a",
        "Just truncate output",
        "32 x 32bit words",
        "i - 2",
        "i - 7",
        "i - 15",
        "i - 16",
        "34",
        "39",
        "34",
        "39",
        "41",
        "41",
        "61",
        "61",
        "2^48",
        "Optional entropy enc",
        "Optional encoding",
        "Optional additional data",
        "implementation from standard node.js 'util' module",
        "old school shim for old browsers",
        "state",
        "create padding and handle blocks",
        "produce result",
        "constant-space merkle root calculation algorithm",
        "~6 bit",
        "8 bit",
        "16 bit",
        "32 bit",
        "~6 bit",
        "8 bit",
        "16 bit",
        "32 bit",
        "phantomjs needs to throw",
        "in case browserify  isn't using the Uint8Array version",
        "This will not work in older browsers.",
        "See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues",
        "getRandomValues fails on IE if size == 0",
        "XXX: phantomjs doesn't like a buffer being passed here",
        "state",
        "computation",
        "if (i<80) {",
        "update state",
        "create padding and handle blocks",
        "produce result",
        "eslint-disable node/no-deprecated-api",
        "alternative to using Object.keys for old browsers",
        "Copy properties from require('buffer')",
        "Copy static methods from Buffer",
        "prototype class for hash functions",
        "zero (rem + 1) trailing bits, where (rem + 1) is the smallest",
        "non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize",
        "uint32",
        "uint64",
        "new Array(64)",
        "new Array(64)",
        "W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]",
        "t1 = h + sigma1 + ch + K[j] + W[j]",
        "t2 = sigma0 + maj",
        "< G",
        "> 0",
        "< G",
        "enforce low S values, see bip62: 'low s values in signatures'",
        "1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')",
        "1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')",
        "|| r.compareTo(n) >= 0",
        "|| s.compareTo(n) >= 0",
        "1.4.2 H = Hash(M), already done by the user",
        "1.4.3 e = H",
        "Compute s^-1",
        "1.4.4 Compute u1 = es^−1 mod n",
        "u2 = rs^−1 mod n",
        "1.4.5 Compute R = (xR, yR)",
        "R = u1G + u2Q",
        "1.4.5 (cont.) Enforce R is not at infinity",
        "1.4.6 Convert the field element R.x to an integer",
        "1.4.7 Set v = xR mod n",
        "1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"",
        "https://tools.ietf.org/html/rfc6979#section-3.2",
        "Step A, ignored as hash already provided",
        "Step B",
        "Step C",
        "Step D",
        "Step E",
        "Step F",
        "Step G",
        "Step H1/H2a, ignored as tlen === qlen (256 bit)",
        "Step H2b",
        "Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA",
        "Step H1/H2a, again, ignored as tlen === qlen (256 bit)",
        "Step H2b again",
        "sub child?",
        "child?",
        "short-hand",
        "JIT",
        "assign types to typeforce function",
        "async wrapper",
        "default to falsy strict if using shorthand overload",
        "TODO: deprecate",
        "Number.MAX_SAFE_INTEGER",
        "8 bit",
        "16 bit",
        "32 bit",
        "64 bit",
        "8 bit",
        "16 bit",
        "32 bit",
        "64 bit",
        "check version only if defined",
        "uncompressed",
        "invalid length",
        "invalid compression flag",
        "Support decoding URL-safe base64 strings, as Node.js does.",
        "See: https://en.wikipedia.org/wiki/Base64#URL_applications",
        "Trim off extra bytes after placeholder bytes are found",
        "See: https://github.com/beatgammit/base64-js/issues/42",
        "base64 is 4/3 + up to two characters of the original data",
        "if there are placeholders, only get up to the last complete 4 chars",
        "if we have 1 byte left, pad 2 bytes",
        "must be multiple of 3",
        "go through the array every three bytes, we'll deal with trailing stuff later",
        "pad the end with zeros, but make sure to not forget the extra bytes",
        "!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT",
        "eslint-disable no-proto",
        "Can typed array instances can be augmented?",
        "Return an augmented `Uint8Array` instance",
        "Common case.",
        "Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97",
        "not used by this implementation",
        "Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:",
        "https://github.com/feross/buffer/pull/148",
        "Only pay attention to encoding if it's a string. This",
        "prevents accidentally sending in a number that would",
        "be interpretted as a start offset.",
        "Writing a hex string, for example, that contains invalid characters will",
        "cause everything after the first invalid character to be ignored. (e.g.",
        "'abxxcd' will be treated as 'ab')",
        "Return an augmented `Uint8Array` instance",
        "Note: cannot use `length < K_MAX_LENGTH` here because that fails when",
        "length is NaN (which is otherwise coerced to zero.)",
        "eslint-disable-line eqeqeq",
        "so Buffer.isBuffer(Buffer.prototype) will be false",
        "Use a for loop to avoid recursion",
        "assume utf8",
        "No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only",
        "property of a typed array.",
        "This behaves neither like String nor Uint8Array in that we set start/end",
        "to their upper/lower bounds if the value passed is out of range.",
        "undefined is handled specially as per ECMA-262 6th Edition,",
        "Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.",
        "Return early if start > this.length. Done here to prevent potential uint32",
        "coercion fail below.",
        "Force coersion to uint32. This will also coerce falsey/NaN values to 0.",
        "This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)",
        "to detect a Buffer instance. It's not possible to use `instanceof Buffer`",
        "reliably in a browserify context because there could be multiple different",
        "copies of the 'buffer' package in use. This method works even for Buffer",
        "instances that were created from another copy of the `buffer` package.",
        "See: https://github.com/feross/buffer/issues/154",
        "Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,",
        "OR the last index of `val` in `buffer` at offset <= `byteOffset`.",
        "",
        "Arguments:",
        "- buffer - a Buffer to search",
        "- val - a string, Buffer, or number",
        "- byteOffset - an index into `buffer`; will be clamped to an int32",
        "- encoding - an optional encoding, relevant is val is a string",
        "- dir - true for indexOf, false for lastIndexOf",
        "Empty buffer means no match",
        "Normalize byteOffset",
        "Coerce to Number.",
        "byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer",
        "Normalize byteOffset: negative offsets start from the end of the buffer",
        "Normalize val",
        "Finally, search either indexOf (if dir is true) or lastIndexOf",
        "Special case: looking for empty string/buffer always fails",
        "Search for a byte value [0-255]",
        "Buffer#write(string)",
        "Buffer#write(string, encoding)",
        "Buffer#write(string, offset[, length][, encoding])",
        "Warning: maxLength not taken into account in base64Write",
        "we did not generate a valid codePoint so insert a",
        "replacement char (U+FFFD) and advance only 1 byte",
        "encode to utf16 (surrogate pair dance)",
        "Based on http://stackoverflow.com/a/22747272/680742, the browser with",
        "the lowest limit is Chrome, with 0x10000 args.",
        "We go 1 magnitude less, for safety",
        "avoid extra slice()",
        "Decode in chunks to avoid \"call stack size exceeded\".",
        "Return an augmented `Uint8Array` instance",
        "copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)",
        "Copy 0 bytes; we're done",
        "Fatal error conditions",
        "Are we oob?",
        "Use built-in when available, missing from IE11",
        "descending copy from end",
        "Usage:",
        "buffer.fill(number[, offset[, end]])",
        "buffer.fill(buffer[, offset[, end]])",
        "buffer.fill(string[, offset[, end]][, encoding])",
        "Handle string cases:",
        "Fast path: If `val` fits into a single byte, use that numeric value.",
        "Invalid ranges are not set to a default, so can range check early.",
        "HELPER FUNCTIONS",
        "================",
        "Node takes equal signs as end of the Base64 encoding",
        "Node strips out invalid characters like \\n and \\t from the string, base64-js does not",
        "Node converts strings with length < 2 to ''",
        "Node allows for non-padded base64 strings (missing trailing ===), base64-js does not",
        "is surrogate component",
        "last char was a lead",
        "no lead yet",
        "unexpected trail",
        "unpaired lead",
        "valid lead",
        "2 leads in a row",
        "valid surrogate pair",
        "valid bmp char, but last char was a lead",
        "encode utf8",
        "Node's code seems to be doing this and not & 0x7F..",
        "ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass",
        "the `instanceof` check but they should be treated as of that type.",
        "See: https://github.com/feross/buffer/issues/166",
        "For IE11 support",
        "eslint-disable-line no-self-compare",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "NOTE: These type checking functions intentionally don't use `instanceof`",
        "because it is fragile and can be easily faked with `Object.create()`.",
        "ES6 symbol",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "Backwards-compat with node 0.10.x",
        "By default EventEmitters will print a warning if more than 10 listeners are",
        "added to it. This is a useful default which helps finding memory leaks.",
        "check whether the input is a positive number (whose value is zero or",
        "greater and not a NaN).",
        "Obviously not all Emitters should be limited to 10. This function allows",
        "that to be increased. Set to zero for unlimited.",
        "These standalone emit* functions are used to optimize calling of event",
        "handlers for fast cases because emit() itself often has a variable number of",
        "arguments and can be deoptimized because of that. These functions always have",
        "the same number of arguments and thus do not get deoptimized, so the code",
        "inside them can execute faster.",
        "If there is no 'error' event listener then throw.",
        "Unhandled 'error' event",
        "At least give some kind of context to the user",
        "fast cases",
        "slower",
        "To avoid recursion in the case that type === \"newListener\"! Before",
        "adding it to the listeners, first emit \"newListener\".",
        "Re-assign `events` because a newListener handler could have caused the",
        "this._events to be assigned to a new object",
        "Optimize the case of one listener. Don't need the extra array object.",
        "Adding the second element, need to change to array.",
        "If we've already got an array, just append.",
        "Check for listener leak",
        "Emits a 'removeListener' event if and only if the listener was removed.",
        "not listening for removeListener, no need to emit",
        "emit removeListener for all listeners on all events",
        "LIFO order",
        "About 1.5x faster than the two-arg version of Array#splice().",
        "!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT",
        "The _isBuffer check is for Safari 5-7 support, because it's missing",
        "Object.prototype.constructor. Remove this eventually",
        "For Node v0.10 support. Remove this eventually.",
        "shim for using process in browser",
        "cached from whatever global is present so that test runners that stub it",
        "don't break things.  But we need to wrap it in a try catch in case it is",
        "wrapped in strict mode code which doesn't define any globals.  It's inside a",
        "function because try/catches deoptimize in certain engines.",
        "normal enviroments in sane situations",
        "if setTimeout wasn't available but was latter defined",
        "when when somebody has screwed with setTimeout but no I.E. maddness",
        "When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally",
        "same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error",
        "normal enviroments in sane situations",
        "if clearTimeout wasn't available but was latter defined",
        "when when somebody has screwed with setTimeout but no I.E. maddness",
        "When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally",
        "same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.",
        "Some versions of I.E. have different rules for clearTimeout vs setTimeout",
        "v8 likes predictible objects",
        "empty string to avoid regexp issues",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "a duplex stream is just a stream that is both readable and writable.",
        "Since JS doesn't have multiple prototypal inheritance, this class",
        "prototypally inherits from Readable, and then parasitically from",
        "Writable.",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "avoid scope creep, the keys array can then be collected",
        "making it explicit this property is not enumerable",
        "because otherwise some prototype manipulation in",
        "userland will fail",
        "the no-half-open enforcer",
        "if we allow half-open state, or if the writable side ended,",
        "then we're ok.",
        "no more data can be written.",
        "But allow more writes to happen in this tick.",
        "we ignore the value if the stream",
        "has not been initialized yet",
        "backward compatibility, the user is explicitly",
        "managing destroyed",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "a passthrough stream.",
        "basically just the most minimal sort of Transform stream.",
        "Every written chunk gets output as-is.",
        "<replacement>",
        "</replacement>",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "Sadly this is not cacheable as some libraries bundle their own",
        "event emitter implementation with them.",
        "This is a hack to make sure that our error handler is attached before any",
        "userland ones.  NEVER DO THIS. This is here only because this code needs",
        "to continue to work with older versions of Node.js that do not include",
        "the prependListener() method. The goal is to eventually remove this hack.",
        "Duplex streams are both readable and writable, but share",
        "the same options object.",
        "However, some cases require setting options to different",
        "values for the readable and the writable sides of the duplex stream.",
        "These options can be provided separately as readableXXX and writableXXX.",
        "object stream flag. Used to make read(n) ignore n and to",
        "make all the buffer merging and length checks go away",
        "the point at which it stops calling _read() to fill the buffer",
        "Note: 0 is a valid value, means \"don't call _read preemptively ever\"",
        "cast to ints.",
        "A linked list is used to store data chunks instead of an array because the",
        "linked list can remove elements from the beginning faster than",
        "array.shift()",
        "a flag to be able to tell if the event 'readable'/'data' is emitted",
        "immediately, or on a later tick.  We set this to true at first, because",
        "any actions that shouldn't happen until \"later\" should generally also",
        "not happen before the first read call.",
        "whenever we return null, then we set a flag to say",
        "that we're awaiting a 'readable' event emission.",
        "has it been destroyed",
        "Crypto is kind of old and crusty.  Historically, its default string",
        "encoding is 'binary' so we have to make this configurable.",
        "Everything else in the universe uses 'utf8', though.",
        "the number of writers that are awaiting a drain event in .pipe()s",
        "if true, a maybeReadMore has been scheduled",
        "legacy",
        "we ignore the value if the stream",
        "has not been initialized yet",
        "backward compatibility, the user is explicitly",
        "managing destroyed",
        "Manually shove something into the read() buffer.",
        "This returns true if the highWaterMark has not been hit yet,",
        "similar to how Writable.write() returns true if you should",
        "write() some more.",
        "Unshift should *always* be something directly out of read()",
        "update the buffer info.",
        "if it's past the high water mark, we can push in some more.",
        "Also, if we have no data yet, we can stand some",
        "more bytes.  This is to work around cases where hwm=0,",
        "such as the repl.  Also, if the push() triggered a",
        "readable event, and the user called read(largeNumber) such that",
        "needReadable was set, then we ought to push more, so that another",
        "'readable' event will be triggered.",
        "backwards compatibility.",
        "Don't raise the hwm > 8MB",
        "Get the next highest power of 2 to prevent increasing hwm excessively in",
        "tiny amounts",
        "This function is designed to be inlinable, so please take care when making",
        "changes to the function body.",
        "Only flow one buffer at a time",
        "If we're asking for more than the current hwm, then raise the hwm.",
        "Don't have enough",
        "you can override either this method, or the async _read(n) below.",
        "if we're doing read(0) to trigger a readable event, but we",
        "already have a bunch of data in the buffer, then just trigger",
        "the 'readable' event and move on.",
        "if we've ended, and we're now clear, then finish it up.",
        "All the actual chunk generation logic needs to be",
        "synthetic stream cases, such as passthrough streams, _read",
        "may be a completely synchronous operation which may change",
        "the state of the read buffer, providing enough data when",
        "before there was *not* enough.",
        "",
        "So, the steps are:",
        "1. Figure out what the state of things will be after we do",
        "a read from the buffer.",
        "",
        "2. If that resulting state will trigger a _read, then call _read.",
        "Note that this may be asynchronous, or synchronous.  Yes, it is",
        "deeply ugly to write APIs this way, but that still doesn't mean",
        "that the Readable class should behave improperly, as streams are",
        "designed to be sync/async agnostic.",
        "Take note if the _read call is sync or async (ie, if the read call",
        "has returned yet), so that we know whether or not it's safe to emit",
        "'readable' etc.",
        "",
        "3. Actually pull the requested chunks out of the buffer and return.",
        "if we need a readable event, then we need to do some reading.",
        "if we currently have less than the highWaterMark, then also read some",
        "however, if we've ended, then there's no point, and if we're already",
        "reading, then it's unnecessary.",
        "if the length is currently zero, then we *need* a readable event.",
        "call internal read method",
        "If _read pushed data synchronously, then `reading` will be false,",
        "and we need to re-evaluate how much data we can return to the user.",
        "If we have nothing in the buffer, then we want to know",
        "as soon as we *do* get something into the buffer.",
        "If we tried to read() past the EOF, then emit end on the next tick.",
        "emit 'readable' now to make sure it gets picked up.",
        "Don't emit readable right away in sync mode, because this can trigger",
        "another read() call => stack overflow.  This way, it might trigger",
        "a nextTick recursion warning, but that's not so bad.",
        "at this point, the user has presumably seen the 'readable' event,",
        "and called read() to consume some data.  that may have triggered",
        "in turn another _read(n) call, in which case reading = true if",
        "it's in progress.",
        "However, if we're not ended, or reading, and the length < hwm,",
        "then go ahead and try to read some more preemptively.",
        "didn't get any data, stop spinning.",
        "abstract method.  to be overridden in specific implementation classes.",
        "call cb(er, data) where data is <= n in length.",
        "for virtual (non-string, non-buffer) streams, \"length\" is somewhat",
        "arbitrary, and perhaps not very meaningful.",
        "when the dest drains, it reduces the awaitDrain counter",
        "on the source.  This would be more elegant with a .once()",
        "handler in flow(), but adding and removing repeatedly is",
        "too slow.",
        "cleanup event handlers once the pipe is broken",
        "if the reader is waiting for a drain event from this",
        "specific writer, then it would cause it to never start",
        "flowing again.",
        "So, if this is awaiting a drain, then we just call it now.",
        "If we don't know, then assume that we are waiting for one.",
        "If the user pushes more data while we're writing to dest then we'll end up",
        "in ondata again. However, we only want to increase awaitDrain once because",
        "dest will only emit one 'drain' event for the multiple writes.",
        "=> Introduce a guard on increasing awaitDrain.",
        "If the user unpiped during `dest.write()`, it is possible",
        "to get stuck in a permanently paused state if that write",
        "also returned false.",
        "=> Check whether `dest` is still a piping destination.",
        "if the dest has an error, then stop piping into it.",
        "however, don't suppress the throwing behavior for this.",
        "Make sure our error handler is attached before userland ones.",
        "Both close and finish should trigger unpipe, but only once.",
        "tell the dest that it's being piped to",
        "start the flow if it hasn't been started already.",
        "if we're not piping anywhere, then do nothing.",
        "just one destination.  most common case.",
        "passed in one, but it's not the right one.",
        "got a match.",
        "slow case. multiple pipe destinations.",
        "remove all.",
        "try to find the right one.",
        "set up data events if they are asked for",
        "Ensure readable listeners eventually get something",
        "Start flowing on next tick if stream isn't explicitly paused",
        "pause() and resume() are remnants of the legacy readable stream API",
        "If the user uses them, then switch into old mode.",
        "wrap an old-style stream as the async data source.",
        "This is *not* part of the readable stream interface.",
        "It is an ugly unfortunate mess of history.",
        "don't skip over falsy values in objectMode",
        "proxy all the other methods.",
        "important when wrapping filters and duplexes.",
        "proxy certain important events.",
        "when we try to consume some more bytes, simply unpause the",
        "underlying stream.",
        "making it explicit this property is not enumerable",
        "because otherwise some prototype manipulation in",
        "userland will fail",
        "exposed for testing purposes only.",
        "Pluck off n bytes from an array of buffers.",
        "Length is the combined lengths of all the buffers in the list.",
        "This function is designed to be inlinable, so please take care when making",
        "changes to the function body.",
        "nothing buffered",
        "read it all, truncate the list",
        "read part of list",
        "Extracts only enough buffered data to satisfy the amount requested.",
        "This function is designed to be inlinable, so please take care when making",
        "changes to the function body.",
        "slice is the same for buffers and strings",
        "first chunk is a perfect match",
        "result spans more than one buffer",
        "Copies a specified amount of characters from the list of buffered data",
        "chunks.",
        "This function is designed to be inlinable, so please take care when making",
        "changes to the function body.",
        "Copies a specified amount of bytes from the list of buffered data chunks.",
        "This function is designed to be inlinable, so please take care when making",
        "changes to the function body.",
        "If we get here before consuming all the bytes, then that is a",
        "bug in node.  Should never happen.",
        "Check that we didn't get one last unshift.",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "a transform stream is a readable/writable stream where you do",
        "something with the data.  Sometimes it's called a \"filter\",",
        "but that's not a great name for it, since that implies a thing where",
        "some bits pass through, and others are simply ignored.  (That would",
        "be a valid example of a transform, of course.)",
        "",
        "While the output is causally related to the input, it's not a",
        "necessarily symmetric or synchronous transformation.  For example,",
        "a zlib stream might take multiple plain-text writes(), and then",
        "emit a single compressed chunk some time in the future.",
        "",
        "Here's how this works:",
        "",
        "The Transform stream has all the aspects of the readable and writable",
        "stream classes.  When you write(chunk), that calls _write(chunk,cb)",
        "internally, and returns false if there's a lot of pending writes",
        "buffered up.  When you call read(), that calls _read(n) until",
        "there's enough pending readable data buffered up.",
        "",
        "In a transform stream, the written data is placed in a buffer.  When",
        "_read(n) is called, it transforms the queued up data, calling the",
        "buffered _write cb's as it consumes chunks.  If consuming a single",
        "written chunk would result in multiple output chunks, then the first",
        "outputted bit calls the readcb, and subsequent chunks just go into",
        "the read buffer, and will cause it to emit 'readable' if necessary.",
        "",
        "This way, back-pressure is actually determined by the reading side,",
        "since _read has to be called to start processing a new chunk.  However,",
        "a pathological inflate type of transform can cause excessive buffering",
        "here.  For example, imagine a stream where every byte of input is",
        "interpreted as an integer from 0-255, and then results in that many",
        "bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in",
        "1kb of data being output.  In this case, you could write a very small",
        "amount of input, and end up with a very large amount of output.  In",
        "such a pathological inflating mechanism, there'd be no way to tell",
        "the system to stop doing the transform.  A single 4MB write could",
        "cause the system to run out of memory.",
        "",
        "However, even in such a pathological case, only a single written chunk",
        "would be consumed, and then the rest would wait (un-transformed) until",
        "the results of the previous transformed chunk were consumed.",
        "<replacement>",
        "</replacement>",
        "single equals check for both `null` and `undefined`",
        "start out asking for a readable event once data is transformed.",
        "we have implemented the _read method, and done the other things",
        "that Readable wants before the first _read call, so unset the",
        "sync guard flag.",
        "When the writable side finishes, then flush out anything remaining.",
        "This is the part where you do stuff!",
        "override this function in implementation classes.",
        "'chunk' is an input chunk.",
        "",
        "Call `push(newChunk)` to pass along transformed output",
        "to the readable side.  You may call 'push' zero or more times.",
        "",
        "Call `cb(err)` when you are done with this chunk.  If you pass",
        "an error, then that'll put the hurt on the whole operation.  If you",
        "never call cb(), then you'll never get another chunk.",
        "Doesn't matter what the args are here.",
        "_transform does all the work.",
        "That we got here means that the readable side wants more data.",
        "mark that we need a transform, so that any data that comes in",
        "will get processed, now that we've asked for it.",
        "single equals check for both `null` and `undefined`",
        "if there's nothing in the write buffer, then that means",
        "that nothing more will ever be provided",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "A bit simpler than readable streams.",
        "Implement an async ._write(chunk, encoding, cb), and it'll handle all",
        "the drain event emission and buffering.",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "It seems a linked list but it is not",
        "there will be only 2 of these for each stream",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "<replacement>",
        "</replacement>",
        "Duplex streams are both readable and writable, but share",
        "the same options object.",
        "However, some cases require setting options to different",
        "values for the readable and the writable sides of the duplex stream.",
        "These options can be provided separately as readableXXX and writableXXX.",
        "object stream flag to indicate whether or not this stream",
        "contains buffers or objects.",
        "the point at which write() starts returning false",
        "Note: 0 is a valid value, means that we always return false if",
        "the entire buffer is not flushed immediately on write()",
        "cast to ints.",
        "if _final has been called",
        "drain event flag.",
        "at the start of calling end()",
        "when end() has been called, and returned",
        "when 'finish' is emitted",
        "has it been destroyed",
        "should we decode strings into buffers before passing to _write?",
        "this is here so that some node-core streams can optimize string",
        "handling at a lower level.",
        "Crypto is kind of old and crusty.  Historically, its default string",
        "encoding is 'binary' so we have to make this configurable.",
        "Everything else in the universe uses 'utf8', though.",
        "not an actual buffer we keep track of, but a measurement",
        "of how much we're waiting to get pushed to some underlying",
        "socket or file.",
        "a flag to see when we're in the middle of a write.",
        "when true all writes will be buffered until .uncork() call",
        "a flag to be able to tell if the onwrite cb is called immediately,",
        "or on a later tick.  We set this to true at first, because any",
        "actions that shouldn't happen until \"later\" should generally also",
        "not happen before the first write call.",
        "a flag to know if we're processing previously buffered items, which",
        "may call the _write() callback in the same tick, so that we don't",
        "end up in an overlapped onwrite situation.",
        "the callback that's passed to _write(chunk,cb)",
        "the callback that the user supplies to write(chunk,encoding,cb)",
        "the amount that is being written when _write is called.",
        "number of pending user-supplied write callbacks",
        "this must be 0 before 'finish' can be emitted",
        "emit prefinish if the only thing we're waiting for is _write cbs",
        "This is relevant for synchronous Transform streams",
        "True if the error was already emitted and should not be thrown again",
        "count buffered requests",
        "allocate the first CorkedRequest, there is always",
        "one allocated and free to use, and we maintain at most two",
        "Test _writableState for inheritance to account for Duplex streams,",
        "whose prototype chain only points to Readable.",
        "Writable ctor is applied to Duplexes, too.",
        "`realHasInstance` is necessary because using plain `instanceof`",
        "would return false, as no `_writableState` property is attached.",
        "Trying to use the custom `instanceof` for Writable here will also break the",
        "Node.js LazyTransform implementation, which has a non-trivial getter for",
        "`_writableState` that would lead to infinite recursion.",
        "legacy.",
        "Otherwise people can pipe Writable streams, which is just wrong.",
        "TODO: defer error events consistently everywhere, not just the cb",
        "Checks that a user-supplied chunk is valid, especially for the particular",
        "mode the stream is in. Currently this means that `null` is never accepted",
        "and undefined/non-string values are only allowed in object mode.",
        "node::ParseEncoding() requires lower case.",
        "making it explicit this property is not enumerable",
        "because otherwise some prototype manipulation in",
        "userland will fail",
        "if we're already writing something, then just put this",
        "in the queue, and wait our turn.  Otherwise, call _write",
        "If we return false, then we need a drain event, so set that flag.",
        "we must ensure that previous needDrain will not be reset to false.",
        "defer the callback if we are being called synchronously",
        "to avoid piling up things on the stack",
        "this can emit finish, and it will always happen",
        "after error",
        "the caller expect this to happen before if",
        "it is async",
        "this can emit finish, but finish must",
        "always follow error",
        "Check if we're actually ready to finish, but don't emit yet",
        "<replacement>",
        "</replacement>",
        "Must force callback to be called on nextTick, so that we don't",
        "emit 'drain' before the write() consumer gets the 'false' return",
        "value, and has a chance to attach a 'drain' listener.",
        "if there's something in the buffer waiting, then process it",
        "Fast case, write everything using _writev()",
        "doWrite is almost always async, defer these to save a bit of time",
        "as the hot path ends with doWrite",
        "Slow case, write chunks one-by-one",
        "if we didn't call the onwrite immediately, then",
        "it means that we need to wait until it does.",
        "also, that means that the chunk and cb are currently",
        "being processed, so move the buffer counter past them.",
        ".end() fully uncorks",
        "ignore unnecessary end() calls.",
        "we ignore the value if the stream",
        "has not been initialized yet",
        "backward compatibility, the user is explicitly",
        "managing destroyed",
        "<replacement>",
        "</replacement>",
        "undocumented cb() API, needed for core, not for public API",
        "we set destroyed to true before firing error callbacks in order",
        "to make it re-entrance safe in case destroy() is called within callbacks",
        "if this is a duplex stream mark the writable part as destroyed as well",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "Backwards-compat with node 0.4.x",
        "old-style streams.  Note that the pipe method (the only relevant",
        "part of this class) is overridden in the Readable class.",
        "If the 'end' option is not supplied, dest.end() will be called when",
        "source gets the 'end' or 'close' events.  Only dest.end() once.",
        "don't leave dangling pipes when there are errors.",
        "Unhandled stream error in pipe.",
        "remove all the event listeners that were added.",
        "Allow for unix-like usage: A.pipe(B).pipe(C)",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "<replacement>",
        "</replacement>",
        "undefined",
        "Do not cache `Buffer.isEncoding` when checking encoding names as some",
        "modules monkey-patch it to support additional encodings",
        "StringDecoder provides an interface for efficiently splitting a series of",
        "buffers into a series of JS strings without breaking apart multi-byte",
        "characters.",
        "Returns only complete characters in a Buffer",
        "Attempts to complete a partial non-UTF-8 character using bytes from a Buffer",
        "Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a",
        "continuation byte. If an invalid byte is detected, -2 is returned.",
        "Checks at most 3 bytes at the end of a Buffer in order to detect an",
        "incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)",
        "needed to complete the UTF-8 character (if applicable) are returned.",
        "Validates as many continuation bytes for a multi-byte UTF-8 character as",
        "needed or are available. If we see a non-continuation byte where we expect",
        "one, we \"replace\" the validated continuation bytes we've seen so far with",
        "a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding",
        "behavior. The continuation byte check is included three times in the case",
        "where all of the continuation bytes for a character exist in the same buffer.",
        "It is also done this way as a slight performance increase instead of using a",
        "loop.",
        "Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.",
        "Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a",
        "partial character, the character's bytes are buffered until the required",
        "number of bytes are available.",
        "For UTF-8, a replacement character is added when ending on a partial",
        "character.",
        "UTF-16LE typically needs two bytes per character, but even if we have an even",
        "number of bytes available, we need to check if we end on a leading/high",
        "surrogate. In that case, we need to wait for the next two bytes in order to",
        "decode the last character properly.",
        "For UTF-16LE we do not explicitly append special replacement characters if we",
        "end on a partial character, we simply let v8 handle that.",
        "Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)",
        "DOM APIs, for completeness",
        "Does not start the time, just sets up the members needed.",
        "That's not how node.js implements it but the exposed api is the same.",
        "fn.call() is faster so we optimize for the common use-case",
        "@see http://jsperf.com/call-apply-segu",
        "Prevent ids from leaking",
        "accessing global.localStorage can trigger a DOMException in sandboxed iframes"
    ],
    "docstrings": [
        "* Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4",
        "* Hash transaction for signing a specific input.\n *\n * Bitcoin uses a different hash for each signed transaction input.\n * This method copies the transaction, makes the necessary changes based on the\n * hashType, and then hashes the result.\n * This hash can then be used to sign the provided transaction input.",
        "* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature",
        "* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message",
        "* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*",
        "* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*",
        "* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded",
        "* A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.",
        "* A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.",
        "* A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *",
        "* A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *",
        "* If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.",
        "* The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.",
        "* Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n *",
        "* Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n *",
        "* Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n *",
        "* Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.",
        "* Need to make sure that buffer isn't trying to write out of bounds.",
        "*below* the call to _read.  The reason is that in certain",
        "* Module exports.",
        "* Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public",
        "* Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private"
    ],
    "functions": [
        "r",
        "o",
        "encode",
        "decodeUnsafe",
        "decode",
        "polymodStep",
        "prefixChk",
        "encode",
        "decode",
        "convert",
        "toWords",
        "fromWords",
        "hash160",
        "hmacSHA512",
        "BIP32",
        "UInt31",
        "BIP32Path",
        "fromBase58",
        "fromPrivateKey",
        "fromPublicKey",
        "fromSeed",
        "check",
        "decode",
        "encode",
        "fromBase58Check",
        "fromBech32",
        "toBase58Check",
        "toBech32",
        "fromOutputScript",
        "toOutputScript",
        "Block",
        "readSlice",
        "readUInt32",
        "readInt32",
        "readVarInt",
        "readTransaction",
        "writeSlice",
        "writeInt32",
        "writeUInt32",
        "verifuint",
        "readUInt64LE",
        "writeUInt64LE",
        "classifyOutput",
        "classifyInput",
        "classifyWitness",
        "ripemd160",
        "sha1",
        "sha256",
        "hash160",
        "hash256",
        "ECPair",
        "fromPrivateKey",
        "fromPublicKey",
        "fromWIF",
        "makeRandom",
        "stacksEqual",
        "p2data",
        "prop",
        "value",
        "stacksEqual",
        "p2ms",
        "isAcceptableSignature",
        "decode",
        "p2pk",
        "p2pkh",
        "stacksEqual",
        "p2sh",
        "p2wpkh",
        "stacksEqual",
        "p2wsh",
        "isOPInt",
        "isPushOnlyChunk",
        "isPushOnly",
        "asMinimalOP",
        "compile",
        "decompile",
        "toASM",
        "fromASM",
        "toStack",
        "isCanonicalPubKey",
        "isDefinedHashType",
        "isCanonicalScriptSignature",
        "decode",
        "scriptNumSize",
        "encode",
        "toDER",
        "fromDER",
        "decode",
        "encode",
        "partialSignature",
        "check",
        "check",
        "check",
        "check",
        "check",
        "check",
        "check",
        "check",
        "check",
        "check",
        "encode",
        "decode",
        "isCompressedCanonicalPubKey",
        "check",
        "check",
        "check",
        "check",
        "varSliceSize",
        "vectorSize",
        "Transaction",
        "readSlice",
        "readUInt32",
        "readInt32",
        "readUInt64",
        "readVarInt",
        "readVarSlice",
        "readVector",
        "writeSlice",
        "writeUInt32",
        "writeUInt64",
        "writeVarInt",
        "writeVarSlice",
        "writeSlice",
        "writeUInt8",
        "writeUInt32",
        "writeInt32",
        "writeUInt64",
        "writeVarInt",
        "writeVarSlice",
        "writeVector",
        "expandInput",
        "fixMultisigOrder",
        "expandOutput",
        "prepareInput",
        "build",
        "TransactionBuilder",
        "canSign",
        "signatureHashType",
        "UInt31",
        "BIP32Path",
        "Satoshi",
        "inherits",
        "BN",
        "parseHex",
        "parseBase",
        "toBitArray",
        "smallMulTo",
        "bigMulTo",
        "jumboMulTo",
        "FFTM",
        "MPrime",
        "K256",
        "P224",
        "P192",
        "P25519",
        "Red",
        "Mont",
        "Rand",
        "encode",
        "decodeRaw",
        "decodeUnsafe",
        "decode",
        "sha256x2",
        "CipherBase",
        "Hash",
        "Hmac",
        "Hmac",
        "BaseCurve",
        "BasePoint",
        "EdwardsCurve",
        "Point",
        "MontCurve",
        "Point",
        "ShortCurve",
        "Point",
        "obj2point",
        "JPoint",
        "PresetCurve",
        "defineCurve",
        "EC",
        "KeyPair",
        "Signature",
        "Position",
        "getLength",
        "rmPadding",
        "constructLength",
        "EDDSA",
        "KeyPair",
        "Signature",
        "getNAF",
        "getJSF",
        "cachedProperty",
        "parseBytes",
        "intFromLE",
        "throwIfNotStringOrBuffer",
        "HashBase",
        "BlockHash",
        "Hmac",
        "RIPEMD160",
        "f",
        "K",
        "Kh",
        "SHA1",
        "SHA224",
        "SHA256",
        "SHA384",
        "SHA512",
        "ch64_hi",
        "ch64_lo",
        "maj64_hi",
        "maj64_lo",
        "s0_512_hi",
        "s0_512_lo",
        "s1_512_hi",
        "s1_512_lo",
        "g0_512_hi",
        "g0_512_lo",
        "g1_512_hi",
        "g1_512_lo",
        "ft_1",
        "ch32",
        "maj32",
        "p32",
        "s0_256",
        "s1_256",
        "g0_256",
        "g1_256",
        "toArray",
        "toHex",
        "htonl",
        "toHex32",
        "zero2",
        "zero8",
        "join32",
        "split32",
        "rotr32",
        "rotl32",
        "sum32",
        "sum32_3",
        "sum32_4",
        "sum32_5",
        "sum64",
        "sum64_hi",
        "sum64_lo",
        "sum64_4_hi",
        "sum64_4_lo",
        "sum64_5_hi",
        "sum64_5_lo",
        "rotr64_hi",
        "rotr64_lo",
        "shr64_hi",
        "shr64_lo",
        "HmacDRBG",
        "MD5",
        "rotl",
        "fnF",
        "fnG",
        "fnH",
        "fnI",
        "toArray",
        "zero2",
        "toHex",
        "encodingLength",
        "encode",
        "decode",
        "oldBrowser",
        "randomBytes",
        "RIPEMD160",
        "rotl",
        "fn1",
        "fn2",
        "fn3",
        "fn4",
        "fn5",
        "copyProps",
        "SafeBuffer",
        "Hash",
        "Sha",
        "rotl5",
        "rotl30",
        "ft",
        "Sha1",
        "rotl1",
        "rotl5",
        "rotl30",
        "ft",
        "Sha224",
        "Sha256",
        "ch",
        "maj",
        "sigma0",
        "sigma1",
        "gamma0",
        "gamma1",
        "Sha384",
        "writeInt64BE",
        "Sha512",
        "Ch",
        "maj",
        "sigma0",
        "sigma1",
        "Gamma0",
        "Gamma0l",
        "Gamma1",
        "Gamma1l",
        "getCarry",
        "writeInt64BE",
        "isScalar",
        "isOrderScalar",
        "isPoint",
        "__isPointCompressed",
        "isPointCompressed",
        "isPrivate",
        "isSignature",
        "assumeCompression",
        "fromBuffer",
        "toBuffer",
        "decodeFrom",
        "getEncoded",
        "pointAdd",
        "pointAddScalar",
        "pointCompress",
        "pointFromScalar",
        "pointMultiply",
        "privateAdd",
        "privateSub",
        "sign",
        "verify",
        "deterministicGenerateK",
        "getTypeName",
        "getValueTypeName",
        "getValue",
        "tfJSON",
        "tfErrorString",
        "TfTypeError",
        "tfPropertyErrorString",
        "TfPropertyTypeError",
        "tfCustomError",
        "tfSubError",
        "_Buffer",
        "Hex",
        "_LengthN",
        "Length",
        "Finite",
        "Int8",
        "Int16",
        "Int32",
        "UInt8",
        "UInt16",
        "UInt32",
        "UInt53",
        "_arrayOf",
        "_maybe",
        "_map",
        "_object",
        "_oneOf",
        "_quacksLike",
        "_tuple",
        "_value",
        "compile",
        "typeforce",
        "__async",
        "checkUInt53",
        "encode",
        "decode",
        "encodingLength",
        "decodeRaw",
        "encodeRaw",
        "decode",
        "encode",
        "getLens",
        "byteLength",
        "_byteLength",
        "toByteArray",
        "tripletToBase64",
        "encodeChunk",
        "fromByteArray",
        "typedArraySupport",
        "createBuffer",
        "Buffer",
        "assertSize",
        "alloc",
        "allocUnsafe",
        "fromString",
        "fromArrayLike",
        "fromArrayBuffer",
        "fromObject",
        "SlowBuffer",
        "byteLength",
        "slowToString",
        "swap",
        "bidirectionalIndexOf",
        "arrayIndexOf",
        "read",
        "hexWrite",
        "utf8Write",
        "asciiWrite",
        "latin1Write",
        "base64Write",
        "ucs2Write",
        "base64Slice",
        "utf8Slice",
        "decodeCodePointsArray",
        "asciiSlice",
        "latin1Slice",
        "hexSlice",
        "utf16leSlice",
        "checkOffset",
        "checkInt",
        "checkIEEE754",
        "writeFloat",
        "writeDouble",
        "base64clean",
        "toHex",
        "utf8ToBytes",
        "asciiToBytes",
        "utf16leToBytes",
        "base64ToBytes",
        "blitBuffer",
        "isInstance",
        "numberIsNaN",
        "isArray",
        "isBoolean",
        "isNull",
        "isNullOrUndefined",
        "isNumber",
        "isString",
        "isSymbol",
        "isUndefined",
        "isRegExp",
        "isObject",
        "isDate",
        "isError",
        "isFunction",
        "isPrimitive",
        "objectToString",
        "EventEmitter",
        "$getMaxListeners",
        "emitNone",
        "emitOne",
        "emitTwo",
        "emitThree",
        "emitMany",
        "_addListener",
        "onceWrapper",
        "_onceWrap",
        "_listeners",
        "listenerCount",
        "spliceOne",
        "arrayClone",
        "unwrapListeners",
        "objectCreatePolyfill",
        "objectKeysPolyfill",
        "functionBindPolyfill",
        "isBuffer",
        "isSlowBuffer",
        "nextTick",
        "defaultSetTimout",
        "defaultClearTimeout",
        "runTimeout",
        "runClearTimeout",
        "cleanUpNextTick",
        "drainQueue",
        "Item",
        "noop",
        "Duplex",
        "onend",
        "onEndNT",
        "PassThrough",
        "_uint8ArrayToBuffer",
        "_isUint8Array",
        "prependListener",
        "ReadableState",
        "Readable",
        "readableAddChunk",
        "addChunk",
        "chunkInvalid",
        "needMoreData",
        "computeNewHighWaterMark",
        "howMuchToRead",
        "onEofChunk",
        "emitReadable",
        "emitReadable_",
        "maybeReadMore",
        "maybeReadMore_",
        "onunpipe",
        "onend",
        "cleanup",
        "ondata",
        "onerror",
        "onclose",
        "onfinish",
        "unpipe",
        "pipeOnDrain",
        "nReadingNextTick",
        "resume",
        "resume_",
        "flow",
        "fromList",
        "fromListPartial",
        "copyFromBufferString",
        "copyFromBuffer",
        "endReadable",
        "endReadableNT",
        "indexOf",
        "afterTransform",
        "Transform",
        "prefinish",
        "done",
        "WriteReq",
        "CorkedRequest",
        "_uint8ArrayToBuffer",
        "_isUint8Array",
        "nop",
        "WritableState",
        "Writable",
        "writeAfterEnd",
        "validChunk",
        "decodeChunk",
        "writeOrBuffer",
        "doWrite",
        "onwriteError",
        "onwriteStateUpdate",
        "onwrite",
        "afterWrite",
        "onwriteDrain",
        "clearBuffer",
        "needFinish",
        "callFinal",
        "prefinish",
        "finishMaybe",
        "endWritable",
        "onCorkedFinish",
        "_classCallCheck",
        "copyBuffer",
        "BufferList",
        "destroy",
        "undestroy",
        "emitErrorNT",
        "Stream",
        "ondata",
        "ondrain",
        "onend",
        "onclose",
        "onerror",
        "cleanup",
        "_normalizeEncoding",
        "normalizeEncoding",
        "StringDecoder",
        "utf8CheckByte",
        "utf8CheckIncomplete",
        "utf8CheckExtraBytes",
        "utf8FillLast",
        "utf8Text",
        "utf8End",
        "utf16Text",
        "utf16End",
        "base64Text",
        "base64End",
        "simpleWrite",
        "simpleEnd",
        "Timeout",
        "deprecate",
        "deprecated",
        "config"
    ],
    "classes": []
}