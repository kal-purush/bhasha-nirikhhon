{
    "identifiers": [
        "gc",
        "numpy",
        "np",
        "pandas",
        "pd",
        "scipy",
        "stats",
        "skew",
        "kurtosis",
        "generic_tools",
        "utils",
        "timing",
        "df",
        "df",
        "memory_usage",
        "sum",
        "format",
        "start_mem",
        "col",
        "df",
        "columns",
        "df",
        "col",
        "dtype",
        "col_type",
        "df",
        "col",
        "min",
        "df",
        "col",
        "max",
        "col_type",
        "c_min",
        "np",
        "iinfo",
        "np",
        "int8",
        "min",
        "c_max",
        "np",
        "iinfo",
        "np",
        "int8",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "int8",
        "c_min",
        "np",
        "iinfo",
        "np",
        "int16",
        "min",
        "c_max",
        "np",
        "iinfo",
        "np",
        "int16",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "int16",
        "c_min",
        "np",
        "iinfo",
        "np",
        "int32",
        "min",
        "c_max",
        "np",
        "iinfo",
        "np",
        "int32",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "int32",
        "c_min",
        "np",
        "iinfo",
        "np",
        "int64",
        "min",
        "c_max",
        "np",
        "iinfo",
        "np",
        "int64",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "int64",
        "c_min",
        "np",
        "finfo",
        "np",
        "float16",
        "min",
        "c_max",
        "np",
        "finfo",
        "np",
        "float16",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "float16",
        "c_min",
        "np",
        "finfo",
        "np",
        "float32",
        "min",
        "c_max",
        "np",
        "finfo",
        "np",
        "float32",
        "max",
        "df",
        "col",
        "astype",
        "np",
        "float32",
        "df",
        "col",
        "astype",
        "np",
        "float64",
        "df",
        "memory_usage",
        "sum",
        "format",
        "end_mem",
        "format",
        "start_mem",
        "end_mem",
        "start_mem",
        "df",
        "df",
        "df",
        "isnull",
        "sum",
        "sort_values",
        "ascending",
        "df",
        "isnull",
        "sum",
        "df",
        "shape",
        "sort_values",
        "ascending",
        "na_relative_values",
        "x",
        "round",
        "x",
        "pd",
        "concat",
        "na_absolute_values",
        "na_relative_values",
        "axis",
        "keys",
        "missing_data",
        "missing_data",
        "reset_index",
        "rename",
        "columns",
        "format",
        "missing_data",
        "loc",
        "missing_data",
        "shape",
        "missing_data",
        "train_df",
        "test_df",
        "feature",
        "train_df",
        "feature",
        "isnull",
        "sum",
        "round",
        "train_df",
        "shape",
        "test_df",
        "feature",
        "isnull",
        "sum",
        "round",
        "test_df",
        "shape",
        "format",
        "feature",
        "pct_missing_train",
        "pct_missing_test",
        "df",
        "categorical_cols",
        "col",
        "categorical_cols",
        "df",
        "col",
        "fillna",
        "inplace",
        "df",
        "col",
        "astype",
        "df",
        "train_df",
        "test_df",
        "cols_groupby",
        "nan_cols_handler",
        "pd",
        "concat",
        "train_df",
        "test_df",
        "axis",
        "train_df",
        "test_df",
        "cols_nan",
        "agg_type",
        "nan_cols_handler",
        "col",
        "cols_nan",
        "df_temp",
        "loc",
        "df_temp",
        "col",
        "notnull",
        "groupby",
        "cols_groupby",
        "agg",
        "col",
        "agg_type",
        "data_set",
        "data_sets",
        "item",
        "row",
        "data_set",
        "loc",
        "data_set",
        "col",
        "isnull",
        "col",
        "cols_groupby",
        "iterrows",
        "grouped",
        "loc",
        "row",
        "x",
        "x",
        "cols_groupby",
        "values",
        "data_set",
        "loc",
        "new_value",
        "df_temp",
        "gc",
        "collect",
        "data_sets",
        "train_df",
        "test_df",
        "nan_cols_handler",
        "pd",
        "concat",
        "train_df",
        "test_df",
        "axis",
        "train_df",
        "test_df",
        "data_set",
        "data_sets",
        "cols_nan",
        "agg_type",
        "nan_cols_handler",
        "col",
        "cols_nan",
        "data_set",
        "col",
        "fillna",
        "agg_type",
        "df_temp",
        "loc",
        "df_temp",
        "col",
        "notnull",
        "col",
        "values",
        "inplace",
        "df_temp",
        "gc",
        "collect",
        "data_sets",
        "df",
        "nan_as_category",
        "uppercase",
        "df",
        "columns",
        "col",
        "col",
        "df",
        "columns",
        "df",
        "col",
        "dtype",
        "pd",
        "get_dummies",
        "df",
        "columns",
        "categorical_columns",
        "dummy_na",
        "nan_as_category",
        "uppercase",
        "df",
        "columns",
        "x",
        "x",
        "upper",
        "c",
        "c",
        "df",
        "columns",
        "c",
        "original_columns",
        "df",
        "new_columns",
        "df",
        "df",
        "select_dtypes",
        "include",
        "dtypes_to_include",
        "columns",
        "col",
        "columns",
        "skew",
        "df",
        "col",
        "nan_policy",
        "pd",
        "DataFrame",
        "index",
        "skew_of_features",
        "keys",
        "data",
        "skew_of_features",
        "values",
        "columns",
        "sort_values",
        "by",
        "skewness_df",
        "round",
        "decimals",
        "df",
        "feature",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "df",
        "df",
        "feature",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "feature",
        "df",
        "feature",
        "x",
        "x",
        "df",
        "new_skew",
        "original_skew",
        "threshold",
        "abs",
        "abs",
        "new_skew",
        "abs",
        "original_skew",
        "threshold",
        "df",
        "feature",
        "skew",
        "df",
        "feature",
        "values",
        "nan_policy",
        "kurtosis",
        "df",
        "feature",
        "values",
        "skew_val",
        "kurtosis_val",
        "timing",
        "df",
        "min_skew_improvement",
        "verbose",
        "get_skewness_each_num_feature",
        "df",
        "skew_df",
        "index",
        "len",
        "feats_to_transform",
        "skew_df",
        "isnull",
        "sum",
        "feature",
        "feats_to_transform",
        "df",
        "feature",
        "copy",
        "df_temp",
        "dropna",
        "to_frame",
        "name",
        "feature",
        "df_temp",
        "feature",
        "min",
        "df_temp",
        "feature",
        "max",
        "compute_skew_kurtosis",
        "df_temp",
        "feature",
        "verbose",
        "format",
        "feature",
        "min_val",
        "max_val",
        "skew_val",
        "kurtosis_val",
        "min_val",
        "max_val",
        "verbose",
        "df_temp",
        "feature",
        "apply",
        "abs",
        "df_temp",
        "feature",
        "compute_skew_kurtosis",
        "df_temp",
        "feature",
        "verbose",
        "format",
        "skew_val",
        "kurtosis_val",
        "features_applied_abs",
        "append",
        "feature",
        "skew_val",
        "verbose",
        "format",
        "feature",
        "df_temp",
        "feature",
        "feature",
        "df_temp",
        "feature",
        "x",
        "np",
        "log1p",
        "x",
        "feature",
        "df_temp",
        "feature",
        "x",
        "np",
        "log",
        "x",
        "skew_val",
        "_transform_right_skewed_distribution",
        "df_temp",
        "feature",
        "skew_val",
        "_transform_left_skewed_distribution",
        "df_temp",
        "feature",
        "col",
        "abs",
        "skew",
        "df_temp",
        "col",
        "values",
        "nan_policy",
        "col",
        "df_temp",
        "columns",
        "verbose",
        "results",
        "min",
        "results",
        "key",
        "results",
        "get",
        "results",
        "column_min_skew",
        "column_min_skew",
        "feature",
        "_skew_improved",
        "min_skew",
        "skew_val",
        "min_skew_improvement",
        "verbose",
        "format",
        "column_min_skew",
        "min_skew",
        "skew_val",
        "column_min_skew",
        "df_temp",
        "column_min_skew",
        "verbose",
        "skew_df",
        "gc",
        "collect",
        "len",
        "features_transformed",
        "len",
        "feats_to_transform",
        "len",
        "features_transformed",
        "len",
        "features_applied_abs",
        "df",
        "features_transformed",
        "features_applied_abs"
    ],
    "literals": [
        "'Memory usage of dataframe is {:.2f} MB'",
        "'int'",
        "'Memory usage after optimization is: {:.2f} MB'",
        "'Decreased by {:.1f}%'",
        "'Total'",
        "'Percent'",
        "'Total'",
        "\"index\"",
        "\"Feature\"",
        "'Number of features with missing values: {0}'",
        "'Total'",
        "'Feature {0}. Missing values: {1:0.2f}% - Train, {2:0.2f}% - Test'",
        "'category'",
        "'object'",
        "'float64'",
        "'float32'",
        "'float16'",
        "'omit'",
        "'SKEWNESS'",
        "'SKEWNESS'",
        "'^1/2'",
        "'^1/3'",
        "'^1/4'",
        "'^2'",
        "'^3'",
        "'^4'",
        "'omit'",
        "'\\nNumber of features to transform: %d'",
        "'Number of columns with NAN skew: %d\\n'",
        "'\\nFeature {0}; \\nmin: {1}; max: {2}; skew: {3}; kurtosis: {4}'",
        "'All values <=0. Applying abs() to make distribution positive.'",
        "'New values: skew: {0}; kurtosis: {1}'",
        "'No transformation is needed for feature {0}.'",
        "'_LOG1P'",
        "'_LOG'",
        "'omit'",
        "'{0} transformation: skew {1} vs original {2}'",
        "'Transformations did not improve skewness of distribution as compared to the threshold'",
        "'='",
        "'Number of features transformed: %d'",
        "'Number of features where transformation did not improve skewness: %d'",
        "'Number of features applied abs(): %d'",
        "'='"
    ],
    "variables": [
        "start_mem",
        "col_type",
        "c_min",
        "c_max",
        "df",
        "col",
        "df",
        "col",
        "df",
        "col",
        "df",
        "col",
        "df",
        "col",
        "df",
        "col",
        "df",
        "col",
        "end_mem",
        "na_absolute_values",
        "na_relative_values",
        "na_relative_values",
        "missing_data",
        "missing_data",
        "pct_missing_train",
        "pct_missing_test",
        "df",
        "col",
        "df_temp",
        "data_sets",
        "grouped",
        "new_value",
        "item",
        "col",
        "df_temp",
        "data_sets",
        "original_columns",
        "categorical_columns",
        "df",
        "df",
        "columns",
        "new_columns",
        "skew_of_features",
        "dtypes_to_include",
        "columns",
        "skew_of_features",
        "col",
        "skewness_df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "skew_val",
        "kurtosis_val",
        "skew_df",
        "feats_to_transform",
        "features_applied_abs",
        "features_transformed",
        "df_temp",
        "df_temp",
        "min_val",
        "max_val",
        "skew_val",
        "kurtosis_val",
        "df_temp",
        "feature",
        "df",
        "feature",
        "skew_val",
        "kurtosis_val",
        "df_temp",
        "df_temp",
        "df_temp",
        "df_temp",
        "results",
        "column_min_skew",
        "min_skew",
        "features_transformed",
        "feature",
        "df",
        "column_min_skew"
    ],
    "comments": [
        "======================================================================",
        "Functions to optimize data types and gather stats on missing values",
        "======================================================================",
        "type: (pd.DataFrame) -> pd.DataFrame",
        "type: (pd.DataFrame) -> pd.DataFrame",
        "type: (pd.DataFrame, pd.DataFrame, str) -> None",
        "type: (pd.DataFrame, list) -> pd.DataFrame",
        "type: (pd.DataFrame, pd.DataFrame, list, list(tuple)) -> list",
        "type: (pd.DataFrame, pd.DataFrame, list(tuple)) -> list(pd.DataFrame)",
        "type: (pd.DataFrame, bool) -> (pd.DataFrame, list)",
        "======================================================================",
        "Functions transform skewed data",
        "======================================================================",
        "type: (pd.DataFrame) -> pd.DataFrame",
        "type: (pd.DataFrame, str) -> pd.DataFrame",
        "type: (pd.DataFrame, str) -> pd.DataFrame",
        "type: (float, float, float) -> bool",
        "type: (pd.DataFrame, str) -> (float, float)",
        "type: (pd.DataFrame, float, bool) -> (pd.DataFrame, dict, list)",
        "list of features where abs() was applied",
        "dict containing original<->best transformed features",
        "removing nan values",
        "update original dataframe",
        "If zero in values -> use np.log1p to avoid -inf after transformation",
        "The data are right-skewed (clustered at lower values) move down the ladder of powers",
        "(e.g. square root, cube root, logarithmic, etc. transformations)",
        "The data are left-skewed (clustered at higher values) move up the ladder of powers",
        "(cube, square, etc)"
    ],
    "docstrings": [
        "\"\"\"\n    Optimizes data-types in a pandas DF to reduce memory allocation\n    :param df: input pandas DF\n    :return: pandas DF with optimized data-types\n    \"\"\"",
        "\"\"\"\n    Construct DF with missing values (absolute number / pct)\n    :param df: input pandas DF to be analysed for missing values\n    :return: pandas DF with feature as index and number/pct of missing values (only cols with NAN values)\n    \"\"\"",
        "\"\"\"\n    Converts given object columns to category data-type\n    :param df: input pandas DF\n    :param categorical_cols: list of features to be transformed to categorical data-type\n    :return: output pandas DF\n    \"\"\"",
        "\"\"\"\n    Imputing NAN values using information from other columns through groupby\n    :param train_df: pandas DF containing train data set\n    :param test_df: pandas DF containing test data set\n    :param cols_groupby: columns to groupby concatenated train and test data set (e.g. SEX: F, M) ->\n    :param nan_cols_handler: e.g. [(['feat_1', 'feat_2'], np.mean)]\n    :return: list with train and test DF inside\n    \"\"\"",
        "\"\"\"\n    Imputing NAN values with aggregation function\n    :param train_df: \n    :param test_df: \n    :param nan_cols_handler: e.g. [(['feat_1', 'feat_2'], np.mean)]\n    :return: \n    \"\"\"",
        "\"\"\"\n    One-hot encoding for categorical columns with pandas get_dummies()\n    :param df: input pandas DF\n    :param nan_as_category: encode nan as category flag (default True)\n    :return: updated pandas DF with added OHE columns + list of added columns\n    \"\"\"",
        "\"\"\"\n    Get skewness of the distribution of each numerical feature in a pandas DF\n    :param df: input pandas DF\n    :return: output DF with skewness per column\n    \"\"\"",
        "\"\"\"\n    This method applies transformations to right skewed (skew > 0) features distribution.\n    :param df: pandas DF with original feature data\n    :param feature: name of the feature to which apply transformation\n    :return: pandas DF with original feature data + additional columns for corresponding transformations\n    \"\"\"",
        "\"\"\"\n    This method applies transformations to left skewed (skew < 0) features distribution.\n    :param df: pandas DF with original feature data\n    :param feature: name of the feature to which apply transformation\n    :return: pandas DF with original feature data + additional columns for corresponding transformations\n    \"\"\"",
        "\"\"\"\n    This method checks whether skewness improvement due to transformation is above the threshold\n    :param new_skew: skewness of distribution after applied transformation\n    :param original_skew: skewness of distribution prior applied transformation\n    :param threshold: min improvement of skewness (to filter cases with insignificant improvement)\n    :return: True if skewness improvement is above the threshold, else False\n    \"\"\"",
        "\"\"\"\n\n    :param df: pandas DF with original feature data\n    :param feature: name of the feature to which compute skew and kurtosis\n    :return: skew and kurtosis\n    \"\"\"",
        "\"\"\"\n    This method apply transformations to numerical features so to reduce skewness of distributions. It employs logic\n    described in http://seismo.berkeley.edu/~kirchner/eps_120/Toolkits/Toolkit_03.pdf. This method\n    :param df: pandas DF to be processed\n    :param min_skew_improvement: threshold for min skew improvement. If not sufficient -> leave the feature as it is\n    :param verbose: set True if one need to debug (will print all intermediate steps information)\n    :return: pandas DF with added columns for modified features, list of transformed features, and list\n            of features to which abs() was applied\n    \"\"\""
    ],
    "functions": [
        "downcast_datatypes",
        "missing_data",
        "pct_missing_values_train_test",
        "convert_object_to_category_type",
        "impute_nan_values_with_group_by",
        "impute_nan_values",
        "one_hot_encoder",
        "get_skewness_each_num_feature",
        "_transform_right_skewed_distribution",
        "_transform_left_skewed_distribution",
        "_skew_improved",
        "compute_skew_kurtosis",
        "transform_skewed_features"
    ],
    "classes": []
}