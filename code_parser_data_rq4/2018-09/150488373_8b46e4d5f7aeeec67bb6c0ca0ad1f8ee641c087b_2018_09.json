{
    "identifiers": [
        "pypodman",
        "lib",
        "BooleanAction",
        "UnitAction",
        "classmethod",
        "cls",
        "parser",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "choices",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "lower",
        "parser",
        "add_mutually_exclusive_group",
        "volume_group",
        "add_argument",
        "vol_args",
        "volume_group",
        "add_argument",
        "vol_args",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "UnitAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "choices",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "UnitAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "UnitAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "UnitAction",
        "help",
        "parser",
        "add_argument",
        "choices",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "choices",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "UnitAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "BooleanAction",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "action",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help"
    ],
    "literals": [
        "'--add-host'",
        "'append'",
        "'HOST'",
        "'Add a line to /etc/hosts.'",
        "' The option can be set multiple times.'",
        "' (format: hostname:ip)'",
        "'--annotation'",
        "'append'",
        "'Add an annotation to the container.'",
        "'The option can be set multiple times.'",
        "'(format: key=value)'",
        "'--attach'",
        "'-a'",
        "'append'",
        "'FD'",
        "'Attach to STDIN, STDOUT or STDERR. The option can be set'",
        "' for each of stdin, stdout, and stderr.'",
        "'--blkio-weight'",
        "'[10-1000]'",
        "'Block IO weight (relative weight) accepts a'",
        "' weight value between 10 and 1000.'",
        "'--blkio-weight-device'",
        "'append'",
        "'WEIGHT'",
        "'Block IO weight, relative device weight.'",
        "' (format: DEVICE_NAME:WEIGHT)'",
        "'--cap-add'",
        "'append'",
        "'CAP'",
        "'Add Linux capabilities'",
        "'The option can be set multiple times.'",
        "'--cap-drop'",
        "'append'",
        "'CAP'",
        "'Drop Linux capabilities'",
        "'The option can be set multiple times.'",
        "'--cgroup-parent'",
        "'PATH'",
        "'Path to cgroups under which the cgroup for the'",
        "' container will be created. If the path is not'",
        "' absolute, the path is considered to be relative'",
        "' to the cgroups path of the init process. Cgroups'",
        "' will be created if they do not already exist.'",
        "'--cidfile'",
        "'PATH'",
        "'Write the container ID to the file, on the remote host.'",
        "'--conmon-pidfile'",
        "'PATH'",
        "'Write the pid of the conmon process to a file,'",
        "' on the remote host.'",
        "'--cpu-period'",
        "'PERIOD'",
        "'Limit the CPU CFS (Completely Fair Scheduler) period.'",
        "'--cpu-quota'",
        "'QUOTA'",
        "'Limit the CPU CFS (Completely Fair Scheduler) quota.'",
        "'--cpu-rt-period'",
        "'PERIOD'",
        "'Limit the CPU real-time period in microseconds.'",
        "'--cpu-rt-runtime'",
        "'LIMIT'",
        "'Limit the CPU real-time runtime in microseconds.'",
        "'--cpu-shares'",
        "'SHARES'",
        "'CPU shares (relative weight)'",
        "'--cpus'",
        "'Number of CPUs. The default is 0.0 which means no limit'",
        "'--cpuset-cpus'",
        "'LIST'",
        "'CPUs in which to allow execution (0-3, 0,1)'",
        "'--cpuset-mems'",
        "'NODES'",
        "'Memory nodes (MEMs) in which to allow execution (0-3, 0,1).'",
        "' Only effective on NUMA systems'",
        "'--detach'",
        "'-d'",
        "'Detached mode: run the container in the background and'",
        "' print the new container ID. (default: False)'",
        "'--detach-keys'",
        "'KEY(s)'",
        "'Override the key sequence for detaching a container.'",
        "' (format: a single character [a-Z] or ctrl-<value> where'",
        "' <value> is one of: a-z, @, ^, [, , or _)'",
        "'--device'",
        "'append'",
        "'Add a host device to the container'",
        "'The option can be set multiple times.'",
        "'--device-read-bps'",
        "'append'",
        "'LIMIT'",
        "'Limit read rate (bytes per second) from a device'",
        "' (e.g. --device-read-bps=/dev/sda:1mb)'",
        "'The option can be set multiple times.'",
        "'--device-read-iops'",
        "'append'",
        "'LIMIT'",
        "'Limit read rate (IO per second) from a device'",
        "' (e.g. --device-read-iops=/dev/sda:1000)'",
        "'The option can be set multiple times.'",
        "'--device-write-bps'",
        "'append'",
        "'LIMIT'",
        "'Limit write rate (bytes per second) to a device'",
        "' (e.g. --device-write-bps=/dev/sda:1mb)'",
        "'The option can be set multiple times.'",
        "'--device-write-iops'",
        "'append'",
        "'LIMIT'",
        "'Limit write rate (IO per second) to a device'",
        "' (e.g. --device-write-iops=/dev/sda:1000)'",
        "'The option can be set multiple times.'",
        "'--dns'",
        "'append'",
        "'SERVER'",
        "'Set custom DNS servers.'",
        "'The option can be set multiple times.'",
        "'--dns-option'",
        "'append'",
        "'OPT'",
        "'Set custom DNS options.'",
        "'The option can be set multiple times.'",
        "'--dns-search'",
        "'append'",
        "'DOMAIN'",
        "'Set custom DNS search domains.'",
        "'The option can be set multiple times.'",
        "'--entrypoint'",
        "'Overwrite the default ENTRYPOINT of the image.'",
        "'--env'",
        "'-e'",
        "'append'",
        "'Set environment variables.'",
        "'--env-file'",
        "'Read in a line delimited file of environment variables,'",
        "' on the remote host.'",
        "'--expose'",
        "'append'",
        "'RANGE'",
        "'Expose a port, or a range of ports'",
        "' (e.g. --expose=3300-3310) to set up port redirection.'",
        "'--gidmap'",
        "'MAP'",
        "'append'",
        "'GID map for the user namespace'",
        "'--group-add'",
        "'append'",
        "'GROUP'",
        "'Add additional groups to run as'",
        "'--hostname'",
        "'Container host name'",
        "'choices'",
        "'bind'",
        "'tmpfs'",
        "'ignore'",
        "'metavar'",
        "'MODE'",
        "'type'",
        "'help'",
        "'Tells podman how to handle the builtin image volumes'",
        "'--image-volume'",
        "'--builtin-volume'",
        "'--interactive'",
        "'-i'",
        "'Keep STDIN open even if not attached. (default: False)'",
        "'--ipc'",
        "'Create namespace'",
        "'--kernel-memory'",
        "'Kernel memory limit'",
        "'--label'",
        "'-l'",
        "'append'",
        "'Add metadata to a container'",
        "' (e.g., --label com.example.key=value)'",
        "'--label-file'",
        "'Read in a line delimited file of labels'",
        "'--log-driver'",
        "'json-file'",
        "'json-file'",
        "'json-file'",
        "'Logging driver for the container. (default: %(default)s)'",
        "'--log-opt'",
        "'append'",
        "'Logging driver specific options'",
        "'--memory'",
        "'-m'",
        "'Memory limit'",
        "'--memory-reservation'",
        "'Memory soft limit'",
        "'--memory-swap'",
        "'A limit value equal to memory plus swap.'",
        "'Must be used with the --memory flag'",
        "'--memory-swappiness'",
        "'[0-100]'",
        "\"Tune a container's memory swappiness behavior\"",
        "'--name'",
        "'Assign a name to the container'",
        "'--network'",
        "'--net'",
        "'BRIDGE'",
        "'Set the Network mode for the container.'",
        "' (format: bridge, host, container:UUID, ns:PATH, none)'",
        "'--oom-kill-disable'",
        "'Whether to disable OOM Killer for the container or not'",
        "'--oom-score-adj'",
        "'[-1000-1000]'",
        "\"Tune the host's OOM preferences for containers\"",
        "'--pid'",
        "'Set the PID Namespace mode for the container.'",
        "'(format: host, container:UUID, ns:PATH)'",
        "'--pids-limit'",
        "'LIMIT'",
        "\"Tune the container's pids limit.\"",
        "\" Set -1 to have unlimited pids for the container.\"",
        "'--pod'",
        "'Run container in an existing pod'",
        "'--privileged'",
        "'Give extended privileges to this container.'",
        "'--publish'",
        "'-p'",
        "'RANGE'",
        "\"Publish a container's port, or range of ports, to the host\"",
        "'--publish-all'",
        "'-P'",
        "'Publish all exposed ports to random'",
        "' ports on the host interfaces'",
        "'(default: False)'",
        "'--quiet'",
        "'-q'",
        "'store_true'",
        "'Suppress output information when pulling images'",
        "'--read-only'",
        "\"Mount the container's root filesystem as read only.\"",
        "'--rm'",
        "'Automatically remove the container when it exits.'",
        "'--rootfs'",
        "'store_true'",
        "'If specified, the first argument refers to an'",
        "' exploded container on the file system of remote host.'",
        "'--security-opt'",
        "'append'",
        "'OPT'",
        "'Set security options.'",
        "'--shm-size'",
        "'Size of /dev/shm'",
        "'--sig-proxy'",
        "'Proxy signals sent to the podman run'",
        "' command to the container process'",
        "'--stop-signal'",
        "'SIGTERM'",
        "'Signal to stop a container'",
        "'--stop-timeout'",
        "'TIMEOUT'",
        "'Seconds to wait on stopping container.'",
        "'--subgidname'",
        "'MAP'",
        "'Name for GID map from the /etc/subgid file'",
        "'--subuidname'",
        "'MAP'",
        "'Name for UID map from the /etc/subuid file'",
        "'--sysctl'",
        "'append'",
        "'Configure namespaced kernel parameters at runtime'",
        "'--tmpfs'",
        "'append'",
        "'MOUNT'",
        "'Create a tmpfs mount.'",
        "' (default: rw,noexec,nosuid,nodev,size=65536k.)'",
        "'--tty'",
        "'-t'",
        "'Allocate a pseudo-TTY for standard input of container.'",
        "'--uidmap'",
        "'append'",
        "'MAP'",
        "'UID map for the user namespace'",
        "'--ulimit'",
        "'append'",
        "'OPT'",
        "'Ulimit options'",
        "'--user'",
        "'-u'",
        "'Sets the username or UID used and optionally'",
        "' the groupname or GID for the specified command.'",
        "'--userns'",
        "'NAMESPACE'",
        "'Set the user namespace mode for the container'",
        "'--uts'",
        "'host'",
        "'ns'",
        "'Set the UTS mode for the container'",
        "'--volume'",
        "'-v'",
        "'Create a bind mount.'",
        "'--volumes-from'",
        "'append'",
        "'Mount volumes from the specified container(s).'",
        "'--workdir'",
        "'-w'",
        "'PATH'",
        "'Working directory inside the container'"
    ],
    "variables": [
        "vol_args",
        "volume_group"
    ],
    "comments": [
        "only way for argparse to handle these options."
    ],
    "docstrings": [
        "\"\"\"Implement common create container arguments together.\"\"\"",
        "\"\"\"Helper to add all the create flags to a command.\"\"\"",
        "\"\"\"Add CreateArguments to parser.\"\"\""
    ],
    "functions": [
        "add_arguments"
    ],
    "classes": [
        "CreateArguments"
    ]
}