{
    "identifiers": [
        "algo",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "BufferedWriter",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "OutputStreamWriter",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "StringTokenizer",
        "N",
        "arr",
        "dp",
        "args",
        "InputClass",
        "input",
        "run",
        "InputClass",
        "close",
        "BR",
        "BW",
        "st",
        "st",
        "getStringTokenizer",
        "N",
        "parseInt",
        "st",
        "nextToken",
        "arr",
        "N",
        "dp",
        "N",
        "i",
        "i",
        "N",
        "i",
        "st",
        "getStringTokenizer",
        "j",
        "j",
        "j",
        "arr",
        "i",
        "j",
        "parseInt",
        "st",
        "nextToken",
        "BR",
        "close",
        "BW",
        "close",
        "InputClass",
        "BR",
        "readLine",
        "i",
        "i",
        "N",
        "i",
        "dp",
        "i",
        "min",
        "dp",
        "i",
        "dp",
        "i",
        "arr",
        "i",
        "dp",
        "i",
        "min",
        "dp",
        "i",
        "dp",
        "i",
        "arr",
        "i",
        "dp",
        "i",
        "min",
        "dp",
        "i",
        "dp",
        "i",
        "arr",
        "i",
        "InputClass",
        "BW",
        "write",
        "valueOf",
        "min",
        "min",
        "dp",
        "N",
        "dp",
        "N",
        "dp",
        "N"
    ],
    "literals": [
        "\" \""
    ],
    "variables": [
        "N",
        "arr",
        "dp"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "main",
        "input",
        "close",
        "StringTokenizer",
        "getStringTokenizer",
        "run"
    ],
    "classes": [
        "Main",
        "InputClass",
        "Solution"
    ]
}