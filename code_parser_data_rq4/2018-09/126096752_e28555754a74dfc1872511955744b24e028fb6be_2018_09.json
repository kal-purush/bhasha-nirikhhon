{
    "identifiers": [
        "functools",
        "os",
        "flask",
        "g",
        "request",
        "web3",
        "Web3",
        "HTTPProvider",
        "web3",
        "middleware",
        "geth_poa_middleware",
        "polyswarmd",
        "response",
        "failure",
        "polyswarmd",
        "config",
        "config_location",
        "chain_id",
        "id_chains",
        "eth_uri",
        "eth_chains",
        "nectar_token_address",
        "nectar_chains",
        "bounty_registry_address",
        "bounty_chains",
        "offer_registry_address",
        "free",
        "free_chains",
        "erc20_relay_address",
        "erc20_relay_chains",
        "polyswarmd",
        "eth",
        "bind_contract",
        "chain",
        "eth_chains",
        "get",
        "chain",
        "bounty_chains",
        "get",
        "chain",
        "nectar_chains",
        "get",
        "chain",
        "eth_uri",
        "bounty_registry_address",
        "nectar_token_address",
        "Web3",
        "HTTPProvider",
        "eth_uri",
        "web3",
        "middleware_stack",
        "inject",
        "geth_poa_middleware",
        "layer",
        "web3",
        "bind_contract",
        "web3",
        "nectar_token_address",
        "os",
        "path",
        "join",
        "config_location",
        "bind_contract",
        "web3",
        "bounty_registry_address",
        "os",
        "path",
        "join",
        "config_location",
        "bind_contract",
        "web3",
        "bounty_registry_chains",
        "chain",
        "functions",
        "staking",
        "call",
        "os",
        "path",
        "join",
        "config_location",
        "chain",
        "bind_contract",
        "web3",
        "offer_registry_address",
        "chain",
        "os",
        "path",
        "join",
        "config_location",
        "offer_registry",
        "functions",
        "offerLib",
        "call",
        "bind_contract",
        "web3",
        "offer_lib_address",
        "os",
        "path",
        "join",
        "config_location",
        "_func",
        "chain_name",
        "functools",
        "wraps",
        "_func",
        "func",
        "functools",
        "wraps",
        "func",
        "args",
        "kwargs",
        "chain_name",
        "chain_name",
        "request",
        "args",
        "get",
        "chain_name",
        "chain_name",
        "failure",
        "chain_name",
        "chain_name",
        "nectar_chains",
        "keys",
        "failure",
        "id_chains",
        "get",
        "chain_name",
        "nectar_chains",
        "get",
        "chain_name",
        "bounty_chains",
        "get",
        "chain_name",
        "erc20_relay_chains",
        "get",
        "chain_name",
        "eth_chains",
        "get",
        "chain_name",
        "free_chains",
        "get",
        "chain_name",
        "bounty_registry_chains",
        "get",
        "chain_name",
        "nectar_token_chains",
        "get",
        "chain_name",
        "arbiter_staking_chains",
        "get",
        "chain_name",
        "web3_chains",
        "get",
        "chain_name",
        "chain_name",
        "offer_lib_home",
        "offer_registry_home",
        "validate",
        "chain_data",
        "k",
        "v",
        "chain_data",
        "items",
        "g",
        "setdefault",
        "k",
        "v",
        "g",
        "get",
        "g",
        "get",
        "func",
        "args",
        "kwargs",
        "failure",
        "chain_name",
        "wrapper",
        "_func",
        "decorator_wrapper",
        "decorator_wrapper",
        "_func",
        "chain_data",
        "v",
        "chain_data",
        "v"
    ],
    "literals": [
        "'home'",
        "'side'",
        "'contracts'",
        "'NectarToken.json'",
        "'contracts'",
        "'BountyRegistry.json'",
        "'contracts'",
        "'ArbiterStaking.json'",
        "'home'",
        "'contracts'",
        "'OfferRegistry.json'",
        "'contracts'",
        "'OfferLib.json'",
        "'chain'",
        "'home'",
        "\"home\"",
        "\"side\"",
        "'Chain must be either home or side'",
        "\"side\"",
        "'Side chain not supported in this instance of polyswarmd'",
        "\"chain_id\"",
        "\"nectar_token_address\"",
        "\"bounty_registry_address\"",
        "\"erc20_relay_address\"",
        "\"eth_uri\"",
        "\"free\"",
        "\"bounty_registry\"",
        "\"nectar_token\"",
        "\"arbiter_staking\"",
        "\"web3\"",
        "\"home\"",
        "\"offer_lib\"",
        "\"offer_registry\"",
        "'offer_lib'",
        "'offer_registry'",
        "\"Server experienced an error finding %s chain values\""
    ],
    "variables": [
        "web3_chains",
        "bounty_registry_chains",
        "nectar_token_chains",
        "arbiter_staking_chains",
        "offer_registry_home",
        "offer_lib_home",
        "eth_uri",
        "bounty_registry_address",
        "nectar_token_address",
        "web3",
        "web3_chains",
        "chain",
        "nectar_token_chains",
        "chain",
        "bounty_registry_chains",
        "chain",
        "arbiter_staking_chains",
        "chain",
        "offer_registry",
        "offer_lib_address",
        "offer_lib",
        "chain_name",
        "chain_data",
        "chain_data",
        "chain_data",
        "g",
        "offer_lib",
        "g",
        "offer_registry"
    ],
    "comments": [
        "Create token bindings for each chain",
        "exists only on home",
        "Grab all the values for the chain. If they aren't defined, skip",
        "Add all validated fields to g",
        "Add these if not defined (which means we are not on the home chain, because that is already validated)"
    ],
    "docstrings": [
        "\"\"\"This decorator takes the chain passed as a request arg and modifies a set of globals.\n       There are a few guarantees made by this function.\n\n       If any of the values for the given chain are missing, the decorator will skip the function and return an error to the user. (500)\n       If the chain is not recognized, it will return an error to the user. (400)\n       If it is the home chain, the offer contract address and  bindings will also be validated, or an error returned. (500)\n    \"\"\""
    ],
    "functions": [
        "select_chain",
        "decorator_wrapper",
        "wrapper",
        "validate"
    ],
    "classes": []
}