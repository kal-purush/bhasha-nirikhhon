{
    "identifiers": [
        "nl",
        "knokko",
        "util",
        "socket",
        "server",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "OutputStream",
        "java",
        "net",
        "ServerSocket",
        "java",
        "net",
        "Socket",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collection",
        "nl",
        "knokko",
        "util",
        "bits",
        "BitHelper",
        "nl",
        "knokko",
        "util",
        "bits",
        "BitOutput",
        "nl",
        "knokko",
        "util",
        "bits",
        "ByteArrayBitInput",
        "nl",
        "knokko",
        "util",
        "bits",
        "ByteArrayBitOutput",
        "nl",
        "knokko",
        "util",
        "protocol",
        "BitProtocol",
        "nl",
        "knokko",
        "util",
        "random",
        "PseudoRandom",
        "port",
        "socket",
        "isStopping",
        "listener",
        "clientHandlers",
        "random",
        "listener",
        "listener",
        "listener",
        "clientHandlers",
        "random",
        "port",
        "port",
        "port",
        "start",
        "isStopping",
        "socket",
        "close",
        "ioex",
        "Override",
        "socket",
        "port",
        "onOpen",
        "client",
        "socket",
        "accept",
        "shouldAccept",
        "client",
        "getInetAddress",
        "getAddress",
        "handler",
        "client",
        "createState",
        "clientHandlers",
        "add",
        "handler",
        "handler",
        "start",
        "ioex",
        "isStopping",
        "onError",
        "ioex",
        "onClose",
        "clientHandlers",
        "client",
        "clientHandlers",
        "client",
        "socket",
        "close",
        "ioex",
        "clientHandlers",
        "clear",
        "socket",
        "socket",
        "isClosed",
        "port",
        "socket",
        "getInetAddress",
        "getAddress",
        "clientAddress",
        "ioex",
        "handler",
        "handler",
        "ioex",
        "handler",
        "socket",
        "state",
        "output",
        "socket",
        "state",
        "socket",
        "socket",
        "state",
        "state",
        "state",
        "socket",
        "Override",
        "input",
        "socket",
        "getInputStream",
        "output",
        "socket",
        "getOutputStream",
        "addressCheck",
        "random",
        "nextBytes",
        "output",
        "write",
        "addressCheck",
        "response",
        "input",
        "read",
        "response",
        "Arrays",
        "equals",
        "addressCheck",
        "response",
        "socket",
        "close",
        "onHandlerOpen",
        "size1",
        "input",
        "read",
        "size",
        "size1",
        "size1",
        "size1",
        "size",
        "BitHelper",
        "makeChar",
        "input",
        "read",
        "input",
        "read",
        "size1",
        "size",
        "BitHelper",
        "makeInt",
        "input",
        "read",
        "input",
        "read",
        "input",
        "read",
        "input",
        "read",
        "size",
        "size1",
        "inputBytes",
        "size",
        "input",
        "read",
        "inputBytes",
        "listener",
        "process",
        "inputBytes",
        "size1",
        "input",
        "read",
        "ioex",
        "onHandlerError",
        "ioex",
        "ex",
        "ex",
        "getMessage",
        "ex",
        "printStackTrace",
        "onHandlerClose",
        "clientHandlers",
        "clientHandlers",
        "remove",
        "socket",
        "socket",
        "isConnected",
        "socket",
        "isClosed",
        "reason",
        "socket",
        "close",
        "ioex",
        "reason",
        "Override",
        "messageBytes",
        "getBytes",
        "messageBytes",
        "length",
        "messageBytes",
        "length",
        "output",
        "write",
        "messageBytes",
        "length",
        "messageBytes",
        "length",
        "MAX_VALUE",
        "c",
        "messageBytes",
        "length",
        "output",
        "write",
        "BitHelper",
        "char0",
        "c",
        "BitHelper",
        "char1",
        "c",
        "output",
        "write",
        "BitHelper",
        "int0",
        "messageBytes",
        "length",
        "BitHelper",
        "int1",
        "messageBytes",
        "length",
        "BitHelper",
        "int2",
        "messageBytes",
        "length",
        "BitHelper",
        "int3",
        "messageBytes",
        "length",
        "output",
        "write",
        "messageBytes",
        "ioex",
        "onError",
        "ioex"
    ],
    "literals": [
        "\"A TCP socket was closed because an exception was thrown: \"",
        "\"Closed connection because: \"",
        "\"Empty messages are not supported\""
    ],
    "variables": [
        "port",
        "socket",
        "isStopping",
        "listener",
        "clientHandlers",
        "random",
        "socket",
        "state",
        "output",
        "size"
    ],
    "comments": [
        "verify that the address specified by the client is its real address by sending random bytes and asking the client to return the same bytes",
        "no 0 length messages",
        "next 2 bytes determine length",
        "next 4 bytes determine length",
        "length is smaller than 255"
    ],
    "docstrings": [
        "* The MIT License\n *\n * Copyright 2018 20182191.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE."
    ],
    "functions": [
        "TCPServerSocket",
        "start",
        "stop",
        "run",
        "isOnline",
        "getLocalPort",
        "getAddress",
        "State",
        "createState",
        "shouldAccept",
        "onOpen",
        "onError",
        "onClose",
        "onHandlerOpen",
        "onHandlerError",
        "onHandlerClose",
        "Handler",
        "State",
        "getState",
        "Socket",
        "getClient",
        "run",
        "isConnected",
        "BitOutput",
        "createOutput",
        "stop",
        "terminate"
    ],
    "classes": [
        "TCPServerSocket",
        "Handler",
        "Output"
    ]
}