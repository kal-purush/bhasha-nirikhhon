{
    "identifiers": [
        "fs",
        "path",
        "BUILD_TOOLS",
        "OFFLINE_PATH",
        "PYTHON",
        "error",
        "getBuildToolsInstallerPath",
        "getPythonInstallerPath",
        "path",
        "OFFLINE_PATH",
        "PYTHON",
        "path",
        "OFFLINE_PATH",
        "BUILD_TOOLS",
        "installerPath",
        "installerName",
        "fs",
        "installerPath",
        "OFFLINE_PATH",
        "message",
        "installerName",
        "message",
        "error",
        "message",
        "process",
        "OFFLINE_PATH",
        "ensureInstaller",
        "PYTHON_INSTALLER",
        "PYTHON",
        "ensureInstaller",
        "VS_INSTALLER",
        "BUILD_TOOLS",
        "fs",
        "PYTHON_INSTALLER",
        "getPythonInstallerPath",
        "fs",
        "VS_INSTALLER",
        "getBuildToolsInstallerPath",
        "error",
        "message",
        "message",
        "error",
        "error",
        "message",
        "process"
    ],
    "literals": [
        "'fs-extra'",
        "'path'",
        "'./constants'",
        "'./logging'",
        "'./utils/get-build-tools-installer-path'",
        "'./utils/get-python-installer-path'",
        "''",
        "''",
        "string",
        "string",
        "Offline installation: Offline path ${OFFLINE_PATH} was passed,",
        "but we could not find ${installerName} in that path.",
        "Aborting installation now.",
        "npm_config_offline_installers not found!",
        "Offline installation: Could not copy over installers.",
        "Aborting installation now.\\n"
    ],
    "variables": [
        "PYTHON_INSTALLER",
        "VS_INSTALLER",
        "message",
        "message"
    ],
    "comments": [],
    "docstrings": [
        "* Check if the installer at a given path can be found and error out if\n * it does not exist.\n *\n * @param {string} installerPath\n * @param {string} installerName\n * @returns {boolean}",
        "* Copy the installers from their offline directory to their target directory.\n *\n * @returns {Promise.void}"
    ],
    "functions": [
        "ensureInstaller",
        "copyInstallers"
    ],
    "classes": []
}