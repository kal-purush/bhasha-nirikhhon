{
    "identifiers": [
        "exports",
        "target",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "key",
        "source",
        "source",
        "key",
        "target",
        "key",
        "source",
        "key",
        "target",
        "require",
        "_interopRequireDefault",
        "_react",
        "require",
        "_interopRequireDefault",
        "_propTypes",
        "require",
        "require",
        "require",
        "require",
        "_interopRequireDefault",
        "_classnames",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "call",
        "ReferenceError",
        "call",
        "call",
        "call",
        "call",
        "subClass",
        "superClass",
        "superClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "_React$Component",
        "_inherits",
        "GridItem",
        "_React$Component",
        "_classCallCheck",
        "GridItem",
        "arguments",
        "_len",
        "_key",
        "_len",
        "_key",
        "args",
        "_key",
        "arguments",
        "_key",
        "_ret",
        "_temp",
        "_this",
        "_possibleConstructorReturn",
        "_React$Component",
        "_React$Component",
        "args",
        "_this",
        "_this",
        "_temp",
        "_possibleConstructorReturn",
        "_this",
        "_ret",
        "GridItem",
        "calcColWidth",
        "_props",
        "_props",
        "_props",
        "_props",
        "containerWidth",
        "margin",
        "cols",
        "containerPadding",
        "cols",
        "GridItem",
        "calcPosition",
        "x",
        "y",
        "w",
        "h",
        "state",
        "_props2",
        "_props2",
        "_props2",
        "w",
        "h",
        "w",
        "h",
        "colWidth",
        "margin",
        "x",
        "containerPadding",
        "rowHeight",
        "margin",
        "y",
        "containerPadding",
        "w",
        "Infinity",
        "w",
        "colWidth",
        "wh",
        "wh",
        "margin",
        "h",
        "Infinity",
        "h",
        "rowHeight",
        "wh",
        "wh",
        "margin",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "GridItem",
        "calcXY",
        "top",
        "left",
        "_props3",
        "_props3",
        "_props3",
        "_props3",
        "_props3",
        "_props3",
        "left",
        "margin",
        "colWidth",
        "margin",
        "top",
        "margin",
        "rowHeight",
        "margin",
        "x",
        "x",
        "cols",
        "w",
        "y",
        "y",
        "maxRows",
        "h",
        "x",
        "y",
        "GridItem",
        "calcWH",
        "_ref",
        "_ref",
        "_ref",
        "_props4",
        "_props4",
        "_props4",
        "_props4",
        "_props4",
        "_props4",
        "width",
        "margin",
        "colWidth",
        "margin",
        "height",
        "margin",
        "rowHeight",
        "margin",
        "w",
        "w",
        "cols",
        "x",
        "h",
        "h",
        "maxRows",
        "y",
        "w",
        "h",
        "GridItem",
        "createStyle",
        "pos",
        "_props5",
        "_props5",
        "_props5",
        "useCSSTransforms",
        "style",
        "_utils",
        "pos",
        "style",
        "_utils",
        "pos",
        "usePercentages",
        "style",
        "_utils",
        "pos",
        "containerWidth",
        "style",
        "_utils",
        "pos",
        "containerWidth",
        "style",
        "pos",
        "pos",
        "style",
        "GridItem",
        "mixinDraggable",
        "child",
        "_react2",
        "_reactDraggable",
        "child",
        "GridItem",
        "mixinResizable",
        "child",
        "position",
        "_props6",
        "_props6",
        "_props6",
        "_props6",
        "_props6",
        "_props6",
        "_props6",
        "cols",
        "x",
        "cols",
        "y",
        "minW",
        "minH",
        "maxW",
        "maxH",
        "mins",
        "mins",
        "maxes",
        "maxWidth",
        "maxes",
        "maxHeight",
        "mW",
        "mH",
        "mH",
        "mW",
        "param",
        "param",
        "_react2",
        "_reactResizable",
        "position",
        "position",
        "minConstraints",
        "maxConstraints",
        "child",
        "GridItem",
        "onDragHandler",
        "handlerName",
        "e",
        "_ref2",
        "_ref2",
        "_ref2",
        "_ref2",
        "_this2",
        "handlerName",
        "handler",
        "handlerName",
        "node",
        "offsetParent",
        "offsetParent",
        "node",
        "newPosition",
        "clientRect",
        "parentRect",
        "offsetParent",
        "newPosition",
        "clientRect",
        "parentRect",
        "offsetParent",
        "_this2",
        "newPosition",
        "_this2",
        "newPosition",
        "_this2",
        "deltaX",
        "newPosition",
        "_this2",
        "deltaY",
        "_this2",
        "newPosition",
        "_this2",
        "newPosition",
        "_this2",
        "newPosition",
        "_this2",
        "_this2",
        "handlerName",
        "_this2",
        "newPosition",
        "newPosition",
        "_calcXY",
        "_calcXY",
        "handler",
        "_this2",
        "_this2",
        "x",
        "y",
        "e",
        "node",
        "newPosition",
        "GridItem",
        "onResizeHandler",
        "handlerName",
        "e",
        "_ref3",
        "_ref3",
        "_ref3",
        "_this3",
        "handlerName",
        "handler",
        "_this3",
        "_props7",
        "_props7",
        "_props7",
        "_props7",
        "_props7",
        "_props7",
        "_props7",
        "_this3",
        "size",
        "_calcWH",
        "_calcWH",
        "w",
        "w",
        "cols",
        "x",
        "w",
        "w",
        "w",
        "w",
        "maxW",
        "minW",
        "h",
        "h",
        "maxH",
        "minH",
        "_this3",
        "handlerName",
        "size",
        "handler",
        "_this3",
        "i",
        "w",
        "h",
        "e",
        "node",
        "size",
        "GridItem",
        "render",
        "_props8",
        "_props8",
        "_props8",
        "_props8",
        "_props8",
        "_props8",
        "_props8",
        "x",
        "y",
        "w",
        "h",
        "_react2",
        "_react2",
        "child",
        "_classnames2",
        "child",
        "isDraggable",
        "useCSSTransforms",
        "_extends",
        "child",
        "pos",
        "isResizable",
        "newChild",
        "newChild",
        "pos",
        "isDraggable",
        "newChild",
        "newChild",
        "newChild",
        "GridItem",
        "_react2",
        "GridItem",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "minW",
        "props",
        "propName",
        "props",
        "propName",
        "value",
        "value",
        "props",
        "value",
        "props",
        "maxW",
        "props",
        "propName",
        "props",
        "propName",
        "value",
        "value",
        "props",
        "value",
        "props",
        "minH",
        "props",
        "propName",
        "props",
        "propName",
        "value",
        "value",
        "props",
        "value",
        "props",
        "maxH",
        "props",
        "propName",
        "props",
        "propName",
        "value",
        "value",
        "props",
        "value",
        "props",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "_propTypes2",
        "GridItem",
        "Infinity",
        "Infinity",
        "exports",
        "GridItem"
    ],
    "literals": [
        "\"use strict\"",
        "\"react\"",
        "\"prop-types\"",
        "\"react-draggable\"",
        "\"react-resizable\"",
        "\"./utils\"",
        "\"classnames\"",
        "\"Cannot call a class as a function\"",
        "\"this hasn't been initialised - super() hasn't been called\"",
        "\"object\"",
        "\"function\"",
        "\"function\"",
        "\"Super expression must either be null or a function, not \"",
        "\"\"",
        "${Math.round(Math.min(pos.width, pos.height))}px",
        "\"onDragStart\"",
        "\"onDrag\"",
        "\"onDragStop\"",
        "\".react-resizable-handle\"",
        "\",\"",
        "\"\"",
        "\"onResizeStop\"",
        "\"onResizeStart\"",
        "\"onResize\"",
        "\"onDragStart\"",
        "\"onDrag\"",
        "\"onDrag called before onDragStart.\"",
        "\"onDragStop\"",
        "\"onDragEnd called before onDragStart.\"",
        "\"onDragHandler called with unrecognized handlerName: \"",
        "\"onResizeStop\"",
        "\"react-grid-item\"",
        "\"react-draggable\"",
        "\"react-draggable-dragging\"",
        "\"number\"",
        "\"minWidth not Number\"",
        "\"minWidth larger than item width/maxWidth\"",
        "\"number\"",
        "\"maxWidth not Number\"",
        "\"maxWidth smaller than item width/minWidth\"",
        "\"number\"",
        "\"minHeight not Number\"",
        "\"minHeight larger than item height/maxHeight\"",
        "\"number\"",
        "\"maxHeight not Number\"",
        "\"maxHeight smaller than item height/minHeight\"",
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "_extends",
        "i",
        "source",
        "_react",
        "_react2",
        "_propTypes",
        "_propTypes2",
        "_reactDraggable",
        "_reactResizable",
        "_utils",
        "_classnames",
        "_classnames2",
        "GridItem",
        "_temp",
        "_this",
        "_ret",
        "_len",
        "args",
        "_key",
        "_props",
        "margin",
        "containerPadding",
        "containerWidth",
        "cols",
        "_props2",
        "margin",
        "containerPadding",
        "rowHeight",
        "colWidth",
        "wh",
        "_props3",
        "margin",
        "cols",
        "rowHeight",
        "w",
        "h",
        "maxRows",
        "colWidth",
        "x",
        "y",
        "height",
        "width",
        "_props4",
        "margin",
        "maxRows",
        "cols",
        "rowHeight",
        "x",
        "y",
        "colWidth",
        "w",
        "h",
        "_props5",
        "usePercentages",
        "containerWidth",
        "useCSSTransforms",
        "style",
        "_props6",
        "cols",
        "x",
        "y",
        "minW",
        "minH",
        "maxW",
        "maxH",
        "maxWidth",
        "maxHeight",
        "mins",
        "maxes",
        "minConstraints",
        "mW",
        "mH",
        "param",
        "maxConstraints",
        "_this2",
        "node",
        "deltaX",
        "deltaY",
        "handler",
        "newPosition",
        "offsetParent",
        "parentRect",
        "clientRect",
        "_calcXY",
        "x",
        "y",
        "_this3",
        "node",
        "size",
        "handler",
        "_props7",
        "cols",
        "x",
        "i",
        "maxW",
        "minW",
        "maxH",
        "minH",
        "_calcWH",
        "w",
        "h",
        "_props8",
        "x",
        "y",
        "w",
        "h",
        "isDraggable",
        "isResizable",
        "useCSSTransforms",
        "pos",
        "child",
        "newChild",
        "value",
        "value",
        "value",
        "value"
    ],
    "comments": [
        "Helper for generating column width",
        "0 * Infinity === NaN, which causes problems with resize constraints;",
        "Fix this if it occurs.",
        "Note we do it here rather than later because Math.round(Infinity) causes deopt",
        "left = colWidth * x + margin * (x + 1)",
        "l = cx + m(x+1)",
        "l = cx + mx + m",
        "l - m = cx + mx",
        "l - m = x(c + m)",
        "(l - m) / (c + m) = x",
        "x = (left - margin) / (coldWidth + margin)",
        "Capping",
        "y = Math.max(Math.min(y, cols - h), 0);",
        "width = colWidth * w - (margin * (w - 1))",
        "...",
        "w = (width + margin) / (colWidth + margin)",
        "Capping",
        "CSS Transforms support (default)",
        "top,left (slow)",
        "This is used for server rendering.",
        "This is the max possible width - doesn't go to infinity because of the width of the window",
        "console.log(maxWidth, maxHeight)",
        "Calculate min/max constraints using our min & maxes",
        "присваиваем минимальное maxWidth maxHeight или ширины ширине тили высоте",
        "ограничиваем ресайз за границу мозаики",
        "console.log(maxes.width,maxes.height)",
        "Get new XY",
        "TODO: this wont work on nested parents",
        "Get new XY",
        "Cap w at numCols",
        "Ensure w is at least 1",
        "Min/max capping",
        "Create the child element. We clone the existing element but modify its className and style.",
        "We can set the width and height on the child, but unfortunately we can't set the position.",
        "Resizable support. This is usually on but the user can toggle it off.",
        "Draggable support. This is always on, except for with placeholders.",
        "Children must be only a single element",
        "General grid attributes",
        "These are all in grid units",
        "All optional",
        "ID is nice to have for callbacks",
        "Functions",
        "Flags",
        "Use CSS transforms instead of top/left",
        "Others",
        "Selector for draggable handle",
        "Selector for draggable cancel (see react-draggable)"
    ],
    "docstrings": [
        "* An individual item within a ReactGridLayout.",
        "* Return position on the page given an x, y, w, h.\n   * left, top, width, height are all in pixels.\n   * @param  {Number}  x             X coordinate in grid units.\n   * @param  {Number}  y             Y coordinate in grid units.\n   * @param  {Number}  w             W coordinate in grid units.\n   * @param  {Number}  h             H coordinate in grid units.\n   * @return {Object}                Object containing coords.",
        "* Translate x and y coordinates from pixels to grid units.\n   * @param  {Number} top  Top position (relative to parent) in pixels.\n   * @param  {Number} left Left position (relative to parent) in pixels.\n   * @return {Object} x and y in grid units.",
        "* Given a height and width in pixel values, calculate grid units.\n   * @param  {Number} height Height in pixels.\n   * @param  {Number} width  Width in pixels.\n   * @return {Object} w, h as grid units.",
        "* This is where we set the grid item's absolute placement. It gets a little tricky because we want to do it\n   * well when server rendering, and the only way to do that properly is to use percentage width/left because\n   * we don't know exactly what the browser viewport is.\n   * Unfortunately, CSS Transforms, which are great for performance, break in this instance because a percentage\n   * left is relative to the item itself, not its container! So we cannot use them on the server rendering pass.\n   *\n   * @param  {Object} pos Position object with width, height, left, top.\n   * @return {Object}     Style object.",
        "* Mix a Draggable instance into a child.\n   * @param  {Element} child    Child element.\n   * @return {Element}          Child wrapped in Draggable.",
        "* Mix a Resizable instance into a child.\n   * @param  {Element} child    Child element.\n   * @param  {Object} position  Position object (pixel values)\n   * @return {Element}          Child wrapped in Resizable.",
        "* Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.",
        "* Wrapper around drag events to provide more useful data.\n   * All drag events call the function with the given handler name,\n   * with the signature (index, x, y).\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function."
    ],
    "functions": [
        "_interopRequireDefault",
        "_classCallCheck",
        "_possibleConstructorReturn",
        "_inherits",
        "GridItem"
    ],
    "classes": []
}