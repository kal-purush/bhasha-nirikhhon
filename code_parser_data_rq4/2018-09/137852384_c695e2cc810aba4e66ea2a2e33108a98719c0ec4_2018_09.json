{
    "identifiers": [
        "async",
        "ComponentFixture",
        "TestBed",
        "fakeAsync",
        "tick",
        "NewElementComponent",
        "NewElementConfig",
        "Component",
        "ViewChild",
        "By",
        "Component",
        "ViewChild",
        "NewElementComponent",
        "describe",
        "beforeEach",
        "async",
        "TestBed",
        "TestHostComponent",
        "NewElementComponent",
        "beforeEach",
        "fixture",
        "TestBed",
        "TestHostComponent",
        "hostComponent",
        "fixture",
        "fixture",
        "it",
        "expect",
        "hostComponent",
        "it",
        "fixture",
        "By",
        "inputField",
        "expect",
        "hostComponent",
        "it",
        "fakeAsync",
        "hostComponent",
        "name",
        "nameToValidate",
        "name",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "tick",
        "expect",
        "nameToValidate",
        "expect",
        "fixture",
        "By",
        "expect",
        "inputField",
        "it",
        "fakeAsync",
        "hostComponent",
        "name",
        "nameToValidate",
        "name",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "fixture",
        "tick",
        "fixture",
        "By",
        "expect",
        "errorField",
        "expect",
        "errorField",
        "expect",
        "inputField",
        "it",
        "fakeAsync",
        "hostComponent",
        "hostComponent",
        "name",
        "hostComponent",
        "parentNode",
        "name",
        "actualParentNode",
        "parentNode",
        "actualName",
        "name",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "tick",
        "expect",
        "fixture",
        "By",
        "expect",
        "inputField",
        "expect",
        "actualParentNode",
        "hostComponent",
        "expect",
        "actualName",
        "it",
        "fakeAsync",
        "hostComponent",
        "hostComponent",
        "name",
        "hostComponent",
        "parentNode",
        "name",
        "createNewElementWasCalled",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "tick",
        "fixture",
        "expect",
        "createNewElementWasCalled",
        "fixture",
        "By",
        "expect",
        "errorField",
        "expect",
        "errorField",
        "expect",
        "inputField",
        "it",
        "fakeAsync",
        "hostComponent",
        "hostComponent",
        "name",
        "hostComponent",
        "parentNode",
        "name",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "tick",
        "expect",
        "fixture",
        "By",
        "expect",
        "inputField",
        "expect",
        "hostComponent",
        "it",
        "fakeAsync",
        "hostComponent",
        "hostComponent",
        "name",
        "hostComponent",
        "parentNode",
        "name",
        "fixture",
        "By",
        "inputField",
        "inputField",
        "Event",
        "inputField",
        "tick",
        "fixture",
        "expect",
        "hostComponent",
        "fixture",
        "By",
        "expect",
        "errorField",
        "expect",
        "errorField",
        "expect",
        "inputField"
    ],
    "literals": [
        "'@angular/core/testing'",
        "'./new-element.component'",
        "'@angular/core'",
        "'@angular/platform-browser'",
        "app-host-component",
        "<app-new-element [config]=\"config\" (cancelled)=\"onCancelled()\" (succeeded)=\"onSucceeded()\"></app-new-element>",
        "''",
        "'0px'",
        "'NewElementComponent'",
        "'should create'",
        "'should emit cancel event when ESC is pressed'",
        "'.navNewElement > input'",
        "'keyup.escape'",
        "'should validate the input on keyup'",
        "''",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup'",
        "'Hello, World'",
        "'.alert'",
        "'error field should not be present!'",
        "'input-error'",
        "'input field should not contain \"input-error\" css class.'",
        "'should display error message when the input is not valid'",
        "''",
        "'invalid name!'",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup'",
        "'.alert'",
        "'error field was not found'",
        "'invalid name!'",
        "'input-error'",
        "'input field should contain \"input-error\" css class.'",
        "'should call \"createNewElement\" callback when enter key is pressed and the input is valid'",
        "''",
        "'parent'",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup.enter'",
        "'.alert'",
        "'error field should not be present!'",
        "'input-error'",
        "'input field should not contain \"input-error\" css class.'",
        "'Hello, World'",
        "'should not call \"createNewElement\" callback when enter key is pressed and the input is invalid'",
        "'parent'",
        "'invalid input!'",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup.enter'",
        "'.alert'",
        "'error field was not found'",
        "'invalid input!'",
        "'input-error'",
        "'input field should contain \"input-error\" css class.'",
        "'should emit \"succeeded\" event when pressing enter and \"createNewElement\" returns true'",
        "'parent'",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup.enter'",
        "'.alert'",
        "'error field should not be present!'",
        "'input-error'",
        "'input field should not contain \"input-error\" css class.'",
        "'must not emit \"succeeded\" event when pressing enter and \"createNewElement\" returns false'",
        "'parent'",
        "'.navNewElement > input'",
        "'Hello, World'",
        "'input'",
        "'keyup.enter'",
        "'.alert'",
        "'error field was not found'",
        "'Error while creating element!'",
        "'input-error'",
        "'input field should contain \"input-error\" css class.'"
    ],
    "variables": [
        "hostComponent",
        "fixture",
        "inputField",
        "nameToValidate",
        "inputField",
        "nameToValidate",
        "inputField",
        "errorField",
        "actualParentNode",
        "actualName",
        "inputField",
        "createNewElementWasCalled",
        "inputField",
        "errorField",
        "inputField",
        "inputField",
        "errorField"
    ],
    "comments": [
        "given",
        "when",
        "then",
        "given",
        "when",
        "then",
        "given",
        "when",
        "then",
        "given",
        "when",
        "then",
        "given",
        "when",
        "then",
        "given",
        "when",
        "then",
        "given",
        "when",
        "then"
    ],
    "docstrings": [],
    "functions": [
        "onCancelled",
        "onSucceeded"
    ],
    "classes": [
        "TestHostComponent"
    ]
}