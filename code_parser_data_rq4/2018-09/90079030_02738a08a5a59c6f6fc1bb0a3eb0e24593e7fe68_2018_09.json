{
    "identifiers": [
        "Catalyst",
        "Fabric",
        "Authorization",
        "Models",
        "Fabric",
        "Authorization",
        "API",
        "Constants",
        "Fabric",
        "Authorization",
        "Persistence",
        "SqlServer",
        "Configuration",
        "Nancy",
        "Nancy",
        "Testing",
        "Newtonsoft",
        "Json",
        "Collections",
        "Generic",
        "Security",
        "Claims",
        "Text",
        "Threading",
        "Tasks",
        "Xunit",
        "Linq",
        "Fabric",
        "Authorization",
        "IntegrationTests",
        "Modules",
        "IClassFixture",
        "IntegrationTestsFixture",
        "IntegrationTestsFixture",
        "fixture",
        "storageProvider",
        "StorageProviders",
        "InMemory",
        "ConnectionStrings",
        "connectionStrings",
        "connectionStrings",
        "fixture",
        "ConnectionStrings",
        "connectionStrings",
        "_clientId",
        "ClaimsPrincipal",
        "ClaimsIdentity",
        "Claim",
        "Claim",
        "Claims",
        "Scope",
        "Scopes",
        "ManageClientsScope",
        "Claim",
        "Claims",
        "Scope",
        "Scopes",
        "ReadScope",
        "Claim",
        "Claims",
        "Scope",
        "Scopes",
        "WriteScope",
        "Claim",
        "Claims",
        "Scope",
        "Scopes",
        "ManageDosScope",
        "Claim",
        "Claims",
        "ClientId",
        "_clientId",
        "_storageProvider",
        "storageProvider",
        "_fixture",
        "fixture",
        "_browser",
        "fixture",
        "GetBrowser",
        "principal",
        "storageProvider",
        "fixture",
        "CreateClient",
        "_browser",
        "_clientId",
        "Fact",
        "GroupUserApiModel",
        "GroupName",
        "_browser",
        "Post",
        "JsonBody",
        "group",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "NotFound",
        "result",
        "StatusCode",
        "Fact",
        "CreateRoleAsync",
        "CreateGroupAsync",
        "AssociateGroupToRoleAsync",
        "group",
        "role",
        "CreateUserAsync",
        "AssociateUserToGroupAsync",
        "user",
        "group",
        "_browser",
        "Delete",
        "group",
        "GroupName",
        "HttpRequest",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "NoContent",
        "deleteGroupResponse",
        "StatusCode",
        "_browser",
        "Post",
        "group",
        "GroupName",
        "JsonBody",
        "group",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "NoContent",
        "result",
        "StatusCode",
        "RoleApiModel",
        "_browser",
        "Post",
        "HttpRequest",
        "JsonBody",
        "Grain",
        "SecurableItem",
        "_clientId",
        "Name",
        "DisplayName",
        "Description",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "Created",
        "roleResponse",
        "StatusCode",
        "JsonConvert",
        "DeserializeObject",
        "RoleApiModel",
        "roleResponse",
        "Body",
        "AsString",
        "role",
        "GroupRoleApiModel",
        "_browser",
        "Post",
        "HttpRequest",
        "JsonBody",
        "GroupName",
        "Guid",
        "NewGuid",
        "GroupSource",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "Created",
        "groupResponse",
        "StatusCode",
        "JsonConvert",
        "DeserializeObject",
        "GroupRoleApiModel",
        "groupResponse",
        "Body",
        "AsString",
        "group",
        "GroupRoleApiModel",
        "group",
        "RoleApiModel",
        "role",
        "_browser",
        "Post",
        "group",
        "GroupName",
        "HttpRequest",
        "JsonBody",
        "role",
        "Grain",
        "role",
        "SecurableItem",
        "role",
        "Name",
        "role",
        "Id",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "OK",
        "groupRoleResponse",
        "StatusCode",
        "UserApiModel",
        "_browser",
        "Post",
        "JsonBody",
        "identityProvider",
        "subjectId",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "Created",
        "userResponse",
        "StatusCode",
        "JsonConvert",
        "DeserializeObject",
        "UserApiModel",
        "userResponse",
        "Body",
        "AsString",
        "user",
        "UserApiModel",
        "user",
        "GroupRoleApiModel",
        "group",
        "_browser",
        "Post",
        "group",
        "GroupName",
        "HttpRequest",
        "Header",
        "JsonBody",
        "user",
        "SubjectId",
        "user",
        "IdentityProvider",
        "Assert",
        "Equal",
        "HttpStatusCode",
        "OK",
        "groupUserResponse",
        "StatusCode"
    ],
    "literals": [
        "\"fabric-installer\"",
        "\"testprincipal\"",
        "\"group\"",
        "\"/edw/group/roles\"",
        "\"/roles\"",
        "\"dos\"",
        "\"jobsadmin\"",
        "\"dosadmindisplay\"",
        "\"dosadmindescription\"",
        "\"/groups\"",
        "\"dosadmins\"",
        "\"Custom\"",
        "\"/user\"",
        "\"temp\"",
        "\"tempUser\"",
        "\"Accept\"",
        "\"application/json\""
    ],
    "variables": [
        "Browser",
        "_browser",
        "IntegrationTestsFixture",
        "_fixture",
        "_storageProvider",
        "_clientId",
        "principal",
        "group",
        "result",
        "role",
        "group",
        "user",
        "deleteGroupResponse",
        "result",
        "roleResponse",
        "role",
        "groupResponse",
        "group",
        "groupRoleResponse",
        "userResponse",
        "user",
        "groupUserResponse"
    ],
    "comments": [
        "TODO: Find a way to verify the roles are updated correctly",
        "TODO: SyncService is disabled",
        "TODO: Get group even if group is deleted",
        "create role",
        "create group",
        "add role to group",
        "create user",
        "add user to group",
        "delete group",
        "Test SyncService",
        "get role",
        "var roleResponse = await _browser.Get(\"/roles/dos/datamarts/datamartadmin\", with =>",
        "{",
        "with.HttpRequest();",
        "});",
        "Assert.Equal(HttpStatusCode.OK, roleResponse.StatusCode);",
        "var role = JsonConvert.DeserializeObject<List<RoleApiModel>>(roleResponse.Body.AsString()).First();",
        "Assert.Equal(\"datamartadmin\", role.Name);"
    ],
    "docstrings": [],
    "functions": [
        "EdwAdminTests",
        "SyncPermissions_NotFoundAsync",
        "SyncPermissionsOnDeletedGroup_SucceedsAsync",
        "CreateRoleAsync",
        "CreateGroupAsync",
        "AssociateGroupToRoleAsync",
        "CreateUserAsync",
        "AssociateUserToGroupAsync"
    ],
    "classes": [
        "EdwAdminTests"
    ]
}