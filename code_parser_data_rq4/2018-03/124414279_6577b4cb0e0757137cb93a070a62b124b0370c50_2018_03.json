{
    "identifiers": [
        "Linq",
        "IdentityModel",
        "Tokens",
        "Jwt",
        "Security",
        "Claims",
        "Text",
        "Threading",
        "Tasks",
        "Microsoft",
        "AspNetCore",
        "Authorization",
        "Microsoft",
        "AspNetCore",
        "Cors",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "EntityFrameworkCore",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "IdentityModel",
        "Tokens",
        "EpicGameAPI",
        "Models",
        "EpicGameAPI",
        "Data",
        "EpicGameAPI",
        "Controllers",
        "Route",
        "Controller",
        "SignInManager",
        "User",
        "ApplicationDbContext",
        "ctx",
        "SignInManager",
        "User",
        "signInManager",
        "_context",
        "ctx",
        "_signInManager",
        "signInManager",
        "HttpGet",
        "Authorize",
        "ObjectResult",
        "Username",
        "User",
        "Identity",
        "Name",
        "HttpPut",
        "Authorize",
        "ObjectResult",
        "GenerateToken",
        "User",
        "Identity",
        "Name",
        "role",
        "HttpPost",
        "IActionResult",
        "username",
        "password",
        "IsValidUserAndPasswordCombination",
        "username",
        "password",
        "isValid",
        "_context",
        "User",
        "SingleOrDefault",
        "u",
        "UserName",
        "username",
        "user",
        "_signInManager",
        "PasswordSignInAsync",
        "username",
        "password",
        "lockoutOnFailure",
        "result",
        "Succeeded",
        "ObjectResult",
        "GenerateToken",
        "user",
        "UserName",
        "role",
        "UserStore",
        "User",
        "_context",
        "user",
        "User",
        "UserName",
        "username",
        "NormalizedUserName",
        "username",
        "ToUpper",
        "Email",
        "username",
        "NormalizedEmail",
        "username",
        "ToUpper",
        "EmailConfirmed",
        "LockoutEnabled",
        "SecurityStamp",
        "Guid",
        "NewGuid",
        "ToString",
        "PasswordHasher",
        "User",
        "user",
        "PasswordHash",
        "passwordHash",
        "HashPassword",
        "user",
        "password",
        "userstore",
        "CreateAsync",
        "user",
        "userstore",
        "AddToRoleAsync",
        "user",
        "role",
        "_context",
        "SaveChanges",
        "ObjectResult",
        "GenerateToken",
        "user",
        "UserName",
        "role",
        "BadRequest",
        "username",
        "password",
        "IsNullOrEmpty",
        "username",
        "username",
        "password",
        "username",
        "role",
        "Claim",
        "Claim",
        "ClaimTypes",
        "Name",
        "username",
        "Claim",
        "JwtRegisteredClaimNames",
        "Nbf",
        "DateTimeOffset",
        "Now",
        "ToUnixTimeSeconds",
        "ToString",
        "Claim",
        "JwtRegisteredClaimNames",
        "Exp",
        "DateTimeOffset",
        "Now",
        "AddDays",
        "ToUnixTimeSeconds",
        "ToString",
        "Claim",
        "ClaimTypes",
        "Role",
        "role",
        "JwtSecurityToken",
        "JwtHeader",
        "SigningCredentials",
        "SymmetricSecurityKey",
        "Encoding",
        "UTF8",
        "GetBytes",
        "SecurityAlgorithms",
        "HmacSha256",
        "JwtPayload",
        "claims",
        "JwtSecurityTokenHandler",
        "WriteToken",
        "token"
    ],
    "literals": [
        "\"/api/token\"",
        "\"Administrator\"",
        "\"Administrator\"",
        "\"D\"",
        "\"7A735D7B-1A19-4D8A-9CFA-99F55483013F\""
    ],
    "variables": [
        "ApplicationDbContext",
        "_context",
        "_signInManager",
        "role",
        "role",
        "isValid",
        "User",
        "user",
        "result",
        "userstore",
        "passwordHash",
        "claims",
        "token"
    ],
    "comments": [
        "Hard coding role here for now",
        "Check simplistic username and password validation rules",
        "Does the user already exist?",
        "Found the user, verify credentials",
        "Password is correct, generate token and return it",
        "User does not exist, create one"
    ],
    "docstrings": [],
    "functions": [
        "TokenController",
        "IActionResult",
        "Get",
        "IActionResult",
        "Put",
        "Create",
        "IsValidUserAndPasswordCombination",
        "GenerateToken"
    ],
    "classes": [
        "TokenController"
    ]
}