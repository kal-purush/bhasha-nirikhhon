{
    "identifiers": [
        "math",
        "numpy",
        "np",
        "pandas",
        "pd",
        "collections",
        "Counter",
        "sklearn",
        "decomposition",
        "PCA",
        "scipy",
        "stats",
        "st",
        "data",
        "isinstance",
        "data",
        "k",
        "v",
        "k",
        "v",
        "data",
        "items",
        "v",
        "values",
        "Counter",
        "data",
        "values",
        "ValueError",
        "sum",
        "data",
        "sum",
        "x",
        "n",
        "math",
        "log2",
        "x",
        "n",
        "x",
        "data",
        "data",
        "max_length",
        "max_shown",
        "ascending",
        "pd",
        "DataFrame",
        "data",
        "dataframe",
        "col_name",
        "cols",
        "np",
        "maximum",
        "min_shown",
        "len",
        "dataframe",
        "col_name",
        "value_counts",
        "dropna",
        "max_shown",
        "max_shown",
        "min_shown",
        "np",
        "minimum",
        "min_shown",
        "max_shown",
        "max_shown",
        "idx_arr",
        "pd",
        "DataFrame",
        "index",
        "row_index",
        "columns",
        "cols",
        "col_name",
        "cols",
        "dataframe",
        "col_name",
        "col",
        "value_counts",
        "dropna",
        "count",
        "index",
        "tolist",
        "ascending",
        "count",
        "vals",
        "col",
        "isnull",
        "sum",
        "len",
        "col",
        "np",
        "minimum",
        "max_shown",
        "len",
        "vals",
        "df",
        "at",
        "col",
        "dtype",
        "df",
        "at",
        "len",
        "col",
        "df",
        "at",
        "len",
        "vals",
        "i",
        "number_values_shown",
        "vals",
        "i",
        "count",
        "iloc",
        "i",
        "length",
        "max_length",
        "len",
        "val",
        "max_length",
        "val",
        "max_length",
        "df",
        "at",
        "i",
        "format",
        "val",
        "count",
        "iloc",
        "i",
        "val_count",
        "nans",
        "df",
        "at",
        "format",
        "nans",
        "nans",
        "length",
        "df",
        "at",
        "df",
        "fillna",
        "style",
        "set_properties",
        "sr",
        "threshold",
        "robust",
        "verbose",
        "robust",
        "sr",
        "robust",
        "x",
        "x",
        "median",
        "abs",
        "x",
        "median",
        "mad",
        "x",
        "x",
        "mean",
        "x",
        "mad",
        "x",
        "x",
        "mean",
        "abs",
        "x",
        "std",
        "format",
        "sr",
        "x",
        "threshold",
        "verbose",
        "format",
        "len",
        "x",
        "mask",
        "method",
        "threshold",
        "sr",
        "name",
        "sr",
        "mask",
        "index",
        "x",
        "y",
        "order",
        "x",
        "coef",
        "c",
        "len",
        "coef",
        "result",
        "coef",
        "c",
        "x",
        "len",
        "coef",
        "c",
        "result",
        "pd",
        "concat",
        "x",
        "y",
        "axis",
        "data",
        "dropna",
        "axis",
        "how",
        "inplace",
        "np",
        "polyfit",
        "data",
        "x",
        "name",
        "data",
        "y",
        "name",
        "deg",
        "order",
        "format",
        "x",
        "name",
        "x",
        "apply",
        "x",
        "transform_x",
        "x",
        "coef",
        "format",
        "x",
        "name",
        "input_df",
        "cols",
        "dummy_na",
        "verbose",
        "input_df",
        "cols",
        "df",
        "select_dtypes",
        "include",
        "columns",
        "cols",
        "cols",
        "len",
        "cols",
        "col",
        "cols",
        "pd",
        "get_dummies",
        "df",
        "col",
        "col",
        "drop_first",
        "dummy_na",
        "dummy_na",
        "n_dummy_cols",
        "dummy_cols",
        "shape",
        "all_dummy_cols",
        "dummy_cols",
        "columns",
        "verbose",
        "col",
        "dummy",
        "dummy_cols",
        "verbose",
        "dummy",
        "dummy_cols",
        "dummy",
        "df",
        "col",
        "verbose",
        "n_dummified_cols",
        "n_dummy_cols",
        "df",
        "all_dummy_cols",
        "x",
        "y",
        "order",
        "verbose",
        "suppress_warnings",
        "suppress_warnings",
        "warnings",
        "warnings",
        "simplefilter",
        "np",
        "RankWarning",
        "corrs",
        "append",
        "pd",
        "concat",
        "x",
        "y",
        "axis",
        "corr",
        "values",
        "i",
        "order",
        "corrs",
        "append",
        "pd",
        "concat",
        "polytrans",
        "x",
        "y",
        "order",
        "i",
        "y",
        "axis",
        "corr",
        "values",
        "max",
        "corrs",
        "abs",
        "max_corr",
        "abs",
        "corrs",
        "corrs",
        "index",
        "max_corr",
        "verbose",
        "order",
        "format",
        "corrs",
        "max_corr",
        "poly",
        "x",
        "name",
        "y",
        "name",
        "format",
        "corrs",
        "x",
        "name",
        "y",
        "name",
        "corrs",
        "max_corr",
        "corr_gain",
        "poly",
        "vals",
        "target",
        "force",
        "sort",
        "verbose",
        "order",
        "vals",
        "name",
        "target",
        "name",
        "pd",
        "concat",
        "vals",
        "target",
        "axis",
        "groupby",
        "x",
        "as_index",
        "y",
        "mean",
        "categories",
        "sort_values",
        "y",
        "sort",
        "categories",
        "sort_values",
        "x",
        "categories",
        "x",
        "values",
        "verbose",
        "categories",
        "correlation",
        "vals",
        "target",
        "order",
        "order",
        "verbose",
        "verbose",
        "i",
        "len",
        "categories",
        "categories",
        "i",
        "categories",
        "i",
        "vals",
        "pd",
        "options",
        "mode",
        "temp",
        "apply",
        "n",
        "n",
        "cat0",
        "verbose",
        "format",
        "cat0",
        "cat1",
        "len",
        "cat0",
        "len",
        "cat1",
        "temp",
        "sum",
        "len",
        "temp",
        "temp",
        "sum",
        "len",
        "temp",
        "correlation",
        "temp",
        "target",
        "order",
        "order",
        "verbose",
        "verbose",
        "abs",
        "corrs",
        "abs",
        "best_corr",
        "force",
        "len",
        "best_corr",
        "cat0",
        "corrs",
        "verbose",
        "len",
        "best_corr",
        "format",
        "best_corr",
        "format",
        "best_corr",
        "len",
        "best_corr",
        "force",
        "c",
        "categories",
        "c",
        "best_corr",
        "cat_dict",
        "df",
        "cols",
        "labels",
        "label_nan",
        "cols",
        "cols",
        "label_nan",
        "labels",
        "insert",
        "np",
        "nan",
        "c",
        "cols",
        "l",
        "labels",
        "df",
        "c",
        "replace",
        "l",
        "rank",
        "rank",
        "format",
        "c",
        "df",
        "threshold",
        "dropna",
        "verbose",
        "c",
        "df",
        "columns",
        "df",
        "c",
        "value_counts",
        "ascending",
        "dropna",
        "dropna",
        "len",
        "counts",
        "counts",
        "iloc",
        "len",
        "df",
        "c",
        "frequency",
        "threshold",
        "verbose",
        "c",
        "counts",
        "index",
        "frequency",
        "result",
        "append",
        "c",
        "verbose",
        "c",
        "result",
        "append",
        "c",
        "verbose",
        "format",
        "len",
        "result",
        "len",
        "df",
        "columns",
        "threshold",
        "result",
        "df",
        "components",
        "svd",
        "whiten",
        "PCA",
        "n_components",
        "components",
        "svd_solver",
        "svd",
        "whiten",
        "whiten",
        "pca",
        "fit",
        "df",
        "pd",
        "DataFrame",
        "pca",
        "transform",
        "df",
        "index",
        "df",
        "index",
        "i",
        "i",
        "len",
        "result",
        "columns",
        "result",
        "sr",
        "threshold",
        "verbose",
        "sr",
        "abs",
        "x",
        "skew",
        "threshold",
        "verbose",
        "format",
        "x",
        "name",
        "x",
        "skew",
        "x",
        "min",
        "x",
        "x",
        "min",
        "st",
        "boxcox",
        "x",
        "x",
        "join",
        "x",
        "x",
        "isdigit",
        "df",
        "max_nan",
        "verbose",
        "df",
        "shape",
        "max_nan",
        "max_nan",
        "n_features",
        "max",
        "min",
        "n_features",
        "max_nan",
        "df",
        "isnull",
        "sum",
        "axis",
        "max_nan",
        "df",
        "shape",
        "df",
        "filter_sparse_samples",
        "shape",
        "verbose",
        "n_sparse",
        "n_samples",
        "max_nan",
        "max_nan",
        "filter_sparse_samples",
        "df",
        "threshold",
        "df",
        "corr",
        "corr_mat",
        "loc",
        "np",
        "tril",
        "corr_mat",
        "k",
        "col",
        "corr_mat",
        "corr_mat",
        "col",
        "corr_mat",
        "col",
        "threshold",
        "index",
        "tolist",
        "perfect_corr",
        "col",
        "already_in",
        "already_in",
        "update",
        "perfect_corr",
        "perfect_corr",
        "append",
        "col",
        "result",
        "append",
        "perfect_corr",
        "f",
        "f",
        "result",
        "i",
        "j",
        "select_nested",
        "i",
        "j",
        "select_flat"
    ],
    "literals": [
        "'type'",
        "'count'",
        "'unique'",
        "'NaN'",
        "'type'",
        "'count'",
        "'unique'",
        "u'\\u2026'",
        "'{}<br>{}<br>{:.1%}'",
        "'NaN'",
        "'{}<br>{:.1%}'",
        "'NaN'",
        "\"\"",
        "''",
        "'word-wrap'",
        "'break-word'",
        "'line-height'",
        "'125%'",
        "'MAD/MeanAd'",
        "'SD'",
        "'Found no outliers in {}'",
        "'Found {:,} outliers ({} > {}) in {}'",
        "'any'",
        "'Could not polyfit {}'",
        "'Could not polytrans {}'",
        "'all'",
        "'all'",
        "'object'",
        "f'Creating dummies for column {col}'",
        "f'...creating dummy column {dummy}'",
        "f'{n_dummified_cols:,} feature columns were replaced by {n_dummy_cols:,} dummy columns'",
        "'ignore'",
        "'{:.2%} ({:.2%}, order={}) correlation between {} and {}'",
        "'{:.2%} correlation between {} and {}'",
        "'(no bins)'",
        "'\\n{} | {} = {} | {} = {:.2%} | {:.2%}'",
        "'\\nHighest correlation: {:.2%}'",
        "'\\nInital correlation is highest: {:.2%}'",
        "'Could not label \\'{}\\''",
        "f'column {c} has value {counts.index[0]} with a frequency of {frequency:.2%}'",
        "f'column {c} has no non-NaN values'",
        "'{:,}/{:,} columns have a value with a frequency of {:.2%} or higher.'",
        "'auto'",
        "'pca_%i'",
        "'De-skewing {} ({:.2} skewness)'",
        "''",
        "f'{n_sparse:,} out of {n_samples:,} samples contained more than {max_nan} NaN value{\"s\" if max_nan > 1 else \"\"} and were dropped'",
        "\"s\"",
        "\"\""
    ],
    "variables": [
        "data",
        "data",
        "n",
        "dataframe",
        "cols",
        "min_shown",
        "min_shown",
        "max_shown",
        "max_shown",
        "idx_arr",
        "row_index",
        "df",
        "col",
        "count",
        "vals",
        "count",
        "vals",
        "nans",
        "length",
        "number_values_shown",
        "col_name",
        "col_name",
        "col_name",
        "val",
        "val_count",
        "val",
        "col_name",
        "col_name",
        "col_name",
        "method",
        "x",
        "x",
        "mad",
        "x",
        "mask",
        "result",
        "data",
        "coef",
        "df",
        "n_dummified_cols",
        "n_dummy_cols",
        "all_dummy_cols",
        "cols",
        "cols",
        "n_dummified_cols",
        "dummy_cols",
        "df",
        "dummy",
        "corrs",
        "max_corr",
        "corr_gain",
        "poly",
        "x",
        "y",
        "categories",
        "categories",
        "categories",
        "cat_dict",
        "best_corr",
        "cat0",
        "cat1",
        "temp",
        "chained_assignment",
        "temp",
        "corrs",
        "best_corr",
        "improved_corr",
        "cat_dict",
        "c",
        "cols",
        "rank",
        "df",
        "c",
        "result",
        "counts",
        "frequency",
        "pca",
        "result",
        "result",
        "columns",
        "x",
        "x",
        "n_samples",
        "n_features",
        "max_nan",
        "max_nan",
        "filter_sparse_samples",
        "n_sparse",
        "corr_mat",
        "already_in",
        "result",
        "perfect_corr",
        "select_nested",
        "select_flat"
    ],
    "comments": [
        "Determine the maximum number of unique values that will be shown",
        "Then create the dataframe",
        "Fill the dataframe",
        "Absolute distances from the mean",
        "Median distance from the mean",
        "Current correlation",
        "0 <= max_nan <= n_features",
        "drop samples with nan > max_nan"
    ],
    "docstrings": [
        "\"\"\"\n    Calculates the entropy in a dictionary, list or string\n    Args:\n        data, which can be:\n            * A dictionary of classes and their counts, e.g. {'apple': 2, 'pear': 1}\n            * A list of objects, e.g. ['apple', 'apple', 'pear']\n            * A string (to be converted into a list of characters), e.g. 'aap'\n\n    Returns:\n        The entropy of the data, calculated using log2\n    \"\"\"",
        "\"\"\"\n    Ranks the unique values in a dataframe's columns\n\n    Args:\n        dataframe: Pandas dataframe/series to be analysed\n        max_length: maximum display length of unique values (0 = no limit)\n        max_shown: maximum number of unique values shown (0 = no limit)\n        ascending: show values from least to most common, or vice versa\n\n    Returns:\n        A table that decribes for each column in the dataframe:\n        * The total number of values\n        * The type of the values\n        * The number of unique values, exluding NaN entries\n        * The unique non-NaN values, ordered by count\n        * The number of NaN entries (if any) and their count\n    \"\"\"",
        "\"\"\"\n    Finds the outliers in a Pandas series and returns a list with their indices.\n\n    Args:\n        sr: Pandas series\n        threshold: maximum deviation to be tolerated\n        robust: use median absolute deviation instead of standard deviation\n        verbose: print the number of columns dropped\n\n    Returns:\n        A list with the indices of the outliers\n    \"\"\"",
        "\"\"\"\n    Fits values in Pandas series x to the values in series y using an\n    nth-order polynomial.\n\n    Args:\n        x: Pandas series to be fitted\n        y: Pandas series against which x will be fitted\n        order: the maximum order polynomial used in the fitting\n\n    Returns:\n        The transformed Pandas series x\n    \"\"\"",
        "\"\"\"\n    Creates dummy values for selected columns in a Pandas dataframe.\n\n    Args:\n        df: Pandas dataframe\n        cols: column or list of columns to be 'dummified'. If set to 'All',\n            all columns with dtype 'object' will be dummified.\n\n    Returns:\n        A Pandas dataframe with dummy columns\n    \"\"\"",
        "\"\"\"\n    Finds the maximum correlation between Pandas series x and y after fitting x to y\n    using the polytrans function.\n    \"\"\"",
        "\"\"\"\n    Transforms a multiclass Pandas series x into a bivariate one, binning the\n    values in x in such a way as to maximise x's correlation to Pandas series y.\n    \"\"\"",
        "\"\"\"\n    Maps non-numerical values in a Pandas dataframe/series to numeric labels.\n\n    Args:\n        df: Pandas dataframe/series\n        cols: list of columns with values to be mapped\n        labels: array with values ('labels') to be mapped to numbers (equal to their index)\n        label_nan: map NaN values to label 0\n\n    Returns:\n        A Pandas dataframe/series in which the 'labelled' values have been mapped to numbers\n    \"\"\"",
        "\"\"\"\n    Returns a list of highly imbalanced columns, i.e. columns that\n    have a single value whose frequency is highter than the frequency threshold.\n    By default, columns in which a single value occurs more than 90 % of the time are dropped.\n\n    Args:\n        df: Pandas dataframe/series\n        threshold: maximum value frequency to be tolerated\n        dropna: ignore NaN values\n        verbose: print the number of columns dropped\n\n    Returns:\n        A dataframe without the imbalanced columns\n        \"\"\"",
        "\"\"\"\n    Applies PCA to reduce the dimensions of a Pandas dataframe.\n\n    Args:\n        df: Pandas dataframe/series\n        components: the target number of dimensions (if integer) OR\n            the variance to be retained (if float). Setting components=1.0 will retain all\n            variance while still trying to reduce dimensionality\n        svd: the solver to be used, see See Scikit Learn documentation for details\n        whiten: use a transformation that may improve the accuracy of the estimators\n            at the cost of losing some information\n\n    Returns:\n        A dataframe with reduced dimensions\n    \"\"\"",
        "\"\"\"\n    Returns a Pandas dataframe whose skewed columns are deskewed using a Box-Cox transformation.\n    By default, columns with skewness over 2 are transformed.\n\n    Args:\n        sr: Pandas series\n        threshold: maximum tolerated skewness. Columns that are more skewed will be deskewed.\n        verbose: print info on the deskwed columns\n\n    Returns:\n        A dataframe without the imbalanced columns\n    \"\"\"",
        "\"\"\"\n    Tries to extract all digits from a string.\n\n    Args:\n        string: a string\n\n    Returns:\n        An integer consisting of all the digits in the string, in order,\n        or False\n    \"\"\"",
        "\"\"\"\n    Removes samples (rows) from a Pandas dataframe whose number of NaN values exceeds the set number.\n\n    Args:\n        df: Pandas dataframe\n        max_nan: maximum tolerated NaN values. If a float, this is a percentage of the features (columns).\n        verbose: print number of dropped samples\n\n    Returns:\n        A True/False series indicating the sparse samples\n    \"\"\"",
        "\"\"\"\n    Finds highly correlated features in a Pandas dataframe\n\n    Args:\n        df: Pandas DataFrame\n        threshold: correlation threshold; one of a pair of features with a\n            correlation greater than this value will be added to the list\n\n    Returns:\n        select_flat: list of columns to be removed\n    \"\"\""
    ],
    "functions": [
        "entropy",
        "uniques",
        "outliers",
        "polytrans",
        "transform_x",
        "dummify",
        "correlation",
        "binary_labels",
        "label_numeric",
        "frequency_selection",
        "pca_df",
        "deskew",
        "extract_int_from_str",
        "filter_sparse_samples",
        "find_correlation"
    ],
    "classes": []
}