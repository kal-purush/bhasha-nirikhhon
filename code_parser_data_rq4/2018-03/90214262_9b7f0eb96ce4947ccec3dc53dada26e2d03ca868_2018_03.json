{
    "identifiers": [
        "createGetEnvForTrafficSplitting",
        "GetEnvForTrafficSplitting",
        "times",
        "uniq",
        "countBy",
        "mapValues",
        "bluebird",
        "describe",
        "beforeEach",
        "getEnvForTrafficSplitting",
        "createGetEnvForTrafficSplitting",
        "describe",
        "it",
        "bluebird",
        "times",
        "numTests",
        "getEnvForTrafficSplitting",
        "expect",
        "uniq",
        "results",
        "expect",
        "uniq",
        "results",
        "mapValues",
        "countBy",
        "results",
        "name",
        "v",
        "v",
        "numTests",
        "expect",
        "counts",
        "expect",
        "counts",
        "it",
        "bluebird",
        "times",
        "getEnvForTrafficSplitting",
        "expect",
        "name",
        "expect",
        "url",
        "describe",
        "it",
        "getEnvForTrafficSplitting",
        "expect",
        "name",
        "expect",
        "url",
        "describe",
        "it",
        "expect",
        "getEnvForTrafficSplitting",
        "expect",
        "expect"
    ],
    "literals": [
        "'./createGetEnvForTrafficSplitting'",
        "'lodash'",
        "'bluebird'",
        "'`getEnvForTrafficSplitting`'",
        "'master'",
        "'master'",
        "'https://master.example.com'",
        "'beta'",
        "'https://beta.example.com'",
        "'If no specific environment is requested'",
        "'picks a random environment based on specified weights for regular users'",
        "'master'",
        "'https://master.example.com'",
        "'beta'",
        "'https://beta.example.com'",
        "'always picks the default environment for bots'",
        "'Googlebot'",
        "'master'",
        "'https://master.example.com'",
        "'If the requested environment exists'",
        "'returns the requested environment'",
        "'beta'",
        "'beta'",
        "'https://beta.example.com'",
        "'If the requested environment does not exist'",
        "'does not throw, instead falls back to one of the existing environments'",
        "'nonExistent'"
    ],
    "variables": [
        "getEnvForTrafficSplitting",
        "numTests",
        "results",
        "counts"
    ],
    "comments": [
        "tslint:disable no-floating-promises no-implicit-dependencies"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}