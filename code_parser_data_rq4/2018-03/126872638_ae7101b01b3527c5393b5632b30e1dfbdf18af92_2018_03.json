{
    "identifiers": [
        "os",
        "random",
        "time",
        "flask",
        "Flask",
        "g",
        "redirect",
        "render_template",
        "request",
        "session",
        "url_for",
        "application",
        "extend",
        "authorize",
        "application",
        "models",
        "Customer",
        "application",
        "views",
        "views",
        "application",
        "views",
        "view",
        "omnibus",
        "filename",
        "os",
        "path",
        "join",
        "omnibus",
        "instance_path",
        "filename",
        "omnibus",
        "config",
        "open",
        "pathname",
        "read",
        "IOError",
        "os",
        "path",
        "dirname",
        "pathname",
        "os",
        "path",
        "isdir",
        "parent_directory",
        "os",
        "system",
        "format",
        "parent_directory",
        "os",
        "system",
        "format",
        "pathname",
        "Flask",
        "omnibus",
        "config",
        "omnibus",
        "config",
        "omnibus",
        "register_blueprint",
        "views",
        "keymaker",
        "omnibus",
        "Customer",
        "omnibus",
        "before_request",
        "session",
        "session",
        "customer",
        "get_customer",
        "session",
        "omnibus",
        "route",
        "methods",
        "render_template",
        "omnibus",
        "route",
        "methods",
        "request",
        "method",
        "render_template",
        "random",
        "uniform",
        "request",
        "form",
        "request",
        "form",
        "username",
        "password",
        "time",
        "sleep",
        "fuzz",
        "sqlite3",
        "sqlite3",
        "connect",
        "check_same_thread",
        "connection",
        "cursor",
        "cursor",
        "execute",
        "format",
        "username",
        "password",
        "cursor",
        "fetchall",
        "tally",
        "tally",
        "tally",
        "time",
        "sleep",
        "fuzz",
        "omnibus",
        "route",
        "methods",
        "request",
        "method",
        "render_template",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "username",
        "password",
        "password_confirm",
        "password",
        "password_confirm",
        "random",
        "uniform",
        "time",
        "sleep",
        "fuzz",
        "customer",
        "register",
        "username",
        "password",
        "customer_id",
        "redirect",
        "url_for",
        "omnibus",
        "route",
        "methods",
        "render_template"
    ],
    "literals": [
        "'secret_key'",
        "'SECRET_KEY'",
        "\"rb\"",
        "'mkdir -p {0}'",
        "'head -c 24 /dev/urandom > {0}'",
        "\"SQLALCHEMY_DATABASE_URI\"",
        "\"sqlite:///sql.db\"",
        "\"SQLALCHEMY_TRACK_MODIFICATIONS\"",
        "'customer_id'",
        "'customer_id'",
        "'customer_id'",
        "'/'",
        "'GET'",
        "'index.html'",
        "'/login'",
        "'GET'",
        "'POST'",
        "'GET'",
        "'login.html'",
        "'username'",
        "'password'",
        "'run/datastore/sql.db'",
        "'SELECT COUNT(*), MIN(id) FROM users WHERE username=\"{0}\" AND password=\"{1}\";'",
        "'/register'",
        "'GET'",
        "'POST'",
        "'GET'",
        "'register.html'",
        "'username'",
        "'password'",
        "'password_confirm'",
        "'logged_in'",
        "'customer_id'",
        "'views.dashboard'",
        "'/404'",
        "'GET'",
        "'404.html'"
    ],
    "variables": [
        "pathname",
        "parent_directory",
        "omnibus",
        "customer",
        "g",
        "customer",
        "g",
        "customer",
        "fuzz",
        "username",
        "password",
        "connection",
        "cursor",
        "tally",
        "customer_id",
        "username",
        "password",
        "password_confirm",
        "fuzz",
        "customer_id",
        "session",
        "session"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "This is our controller.",
        "customer.setup(omnibus)",
        "FIXME TO BE CONTINUED...",
        "Front page",
        "FIXME Login page",
        "# Check if the username and password were submitted",
        "# Check if the username exists",
        "# Check if the submitted password is the stored password for the username",
        "return render_template('login.html')",
        "Check if the username and password were submitted",
        "Check if the passwords match",
        "Check if the username exists (in the database)",
        "TODO Re-factor the following into an ORM for PostgreSQL",
        "--> Open up a connection and cursor objects",
        "--> Execute a query",
        "bad creds",
        "corrupt database",
        "good creds",
        "FIXME Assign objects to `g` and `session`",
        "State: Username doesn't exist",
        "Store submitted username and password in the database",
        "TODO Mitigate a hypothetical SQL injection attack by",
        "replacing the format invocation with something else.",
        "cursor.execute('INSERT INTO users(username, password) VALUES(\"{0}\",\"{1}\");'.format(username, password))",
        "connection.commit()",
        "cursor.close()",
        "connection.close()",
        "return redirect(url_for('views.dashboard'))",
        "State: Username exists",
        "FIXME",
        "Close the aforementioned connection and cursor objects",
        "FIXME",
        "close this",
        "close that",
        "FIXME",
        "FIXME Register page",
        "Check if the username and passwords were submitted",
        "Check if the passwords match",
        "TODO Modularize the following PRNG.",
        "Note: This is an attempt to mitigate a timing attack, by Eve,",
        "which would hypothetically calculate the Levenshtien",
        "distance between the submitted password and the",
        "submitted username for an existing user.",
        "FIXME",
        "FIXME",
        "FIXME",
        "TODO 404 page"
    ],
    "docstrings": [],
    "functions": [
        "keymaker",
        "before_request",
        "front",
        "login",
        "register",
        "error_404"
    ],
    "classes": []
}