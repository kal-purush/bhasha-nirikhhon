{
    "identifiers": [
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "factory",
        "jQuery",
        "$",
        "option",
        "$container",
        "$",
        "defaultOption",
        "option",
        "$container",
        "$",
        "$",
        "Miniview",
        "that",
        "that",
        "that",
        "that",
        "that",
        "that",
        "$",
        "that",
        "that",
        "$miniElemContainer",
        "$",
        "$nodes",
        "key",
        "item",
        "$",
        "item",
        "$",
        "item",
        "$",
        "item",
        "nodeArr",
        "offsetL",
        "offsetT",
        "nodeId",
        "viewInfo",
        "miniview",
        "nodeArr",
        "that",
        "viewInfo",
        "that",
        "viewInfo",
        "that",
        "viewInfo",
        "that",
        "viewInfo",
        "that",
        "that",
        "$nodes",
        "$nodes",
        "$",
        "that",
        "$",
        "that",
        "that",
        "that",
        "that",
        "that",
        "nodeW",
        "that",
        "that",
        "that",
        "that",
        "nodeH",
        "scaleDiffW",
        "that",
        "that",
        "nodeGapX",
        "scaleDiffH",
        "that",
        "that",
        "nodeGapY",
        "miniFlag",
        "scaleDiffW",
        "scaleDiffH",
        "that",
        "miniScale",
        "miniFlag",
        "miniW",
        "scaleDiffW",
        "miniH",
        "scaleDiffH",
        "miniNodeW",
        "parseInt",
        "nodeW",
        "miniScale",
        "miniNodeH",
        "parseInt",
        "nodeH",
        "miniScale",
        "that",
        "miniNodeW",
        "miniNodeH",
        "$miniElemContainer",
        "parseInt",
        "miniScale",
        "scaleDiffW",
        "parseInt",
        "miniScale",
        "scaleDiffH",
        "parseInt",
        "miniScale",
        "scaleDiffW",
        "parseInt",
        "miniScale",
        "scaleDiffH",
        "that",
        "that",
        "that",
        "that",
        "i",
        "nodeArr",
        "i",
        "$",
        "nodeArr",
        "i",
        "parseInt",
        "nodeItem",
        "subtractL",
        "miniScale",
        "parseInt",
        "nodeItem",
        "subtractT",
        "miniScale",
        "$node",
        "miniNodeW",
        "miniNodeH",
        "tmpL",
        "tmpT",
        "$node",
        "nodeItem",
        "$miniElemContainer",
        "$node",
        "nodeItem",
        "that",
        "that",
        "$node",
        "nodeItem",
        "that",
        "that",
        "$node",
        "nodeItem",
        "that",
        "that",
        "$node",
        "nodeItem",
        "that",
        "that",
        "$node",
        "$miniElemContainer",
        "$miniElemContainer",
        "miniPadding",
        "$containL",
        "miniPadding",
        "$containT",
        "that",
        "parseInt",
        "canvasW",
        "miniScale",
        "parseInt",
        "canvasH",
        "miniScale",
        "parseInt",
        "miniGap",
        "subtractL",
        "miniScale",
        "parseInt",
        "miniGap",
        "subtractT",
        "miniScale",
        "that",
        "that",
        "that",
        "miniGap",
        "that",
        "that",
        "that",
        "that",
        "miniGap",
        "that",
        "that",
        "miniGap",
        "that",
        "that",
        "that",
        "that",
        "miniGap",
        "that",
        "that",
        "that",
        "that",
        "$port",
        "$port",
        "$",
        "that",
        "$port",
        "ev",
        "posParams",
        "posParams",
        "ev",
        "posParams",
        "ev",
        "$",
        "ev",
        "posParams",
        "posParams",
        "$port",
        "posParams",
        "$port",
        "$",
        "ev",
        "that",
        "that",
        "that",
        "posParams",
        "ev",
        "posParams",
        "ev",
        "posParams",
        "posParams",
        "disX",
        "posParams",
        "disY",
        "$port",
        "parseInt",
        "portL",
        "moveRange",
        "moveRange",
        "portL",
        "moveRange",
        "moveRange",
        "portL",
        "parseInt",
        "portT",
        "moveRange",
        "moveRange",
        "portT",
        "moveRange",
        "moveRange",
        "portT",
        "$container",
        "$port",
        "originPort",
        "that",
        "$port",
        "originPort",
        "that",
        "ev",
        "$",
        "ev",
        "that",
        "nodeArr",
        "$",
        "nodeArr",
        "$",
        "nodeArr",
        "i",
        "nodeArr",
        "i",
        "nodeArr",
        "i",
        "nodeArr",
        "i",
        "nodeArr",
        "i",
        "i",
        "i",
        "t",
        "t",
        "maxminT",
        "t",
        "tempT",
        "nodeT",
        "maxminT",
        "t",
        "maxminT",
        "t",
        "maxminT",
        "t",
        "nodeArr",
        "i",
        "i",
        "i",
        "i",
        "t",
        "t",
        "maxminL",
        "t",
        "tempL",
        "nodeL",
        "maxminL",
        "t",
        "maxminL",
        "t",
        "maxminL",
        "t",
        "nodeArr",
        "i",
        "i",
        "maxminL",
        "maxminL",
        "nodeArr",
        "maxminT",
        "maxminT",
        "nodeArr",
        "$",
        "option",
        "$container",
        "data",
        "option",
        "data",
        "option",
        "data",
        "option",
        "option",
        "$container",
        "Miniview",
        "option",
        "$container",
        "data",
        "option",
        "data",
        "option",
        "data",
        "args",
        "result",
        "$container",
        "result"
    ],
    "literals": [
        "'function'",
        "'jQuery'",
        "'object'",
        "'jQuery'",
        "\"use strict\"",
        "'.item'",
        "'#canvasWrapper'",
        "'<div class=\"port\"></div>'",
        "'<div class=\"view\"><ul></ul></div>'",
        "'px'",
        "'px'",
        "'5px'",
        "'ul'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'<li class=\"miniview-element\"></li>'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'id'",
        "'mini'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'cursor'",
        "'-webkit-grab'",
        "'#canvas'",
        "'mousedown'",
        "'mouseup'",
        "'mousemove'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'resize'",
        "'miniview'",
        "'string'",
        "'Miniview is uninitialized.'",
        "'object'",
        "'Miniview is initialized.'",
        "'object'",
        "'undefined'",
        "'miniview'",
        "'string'",
        "'undefined'"
    ],
    "variables": [
        "defaultOption",
        "that",
        "that",
        "$nodes",
        "nodeArr",
        "viewInfo",
        "$miniElemContainer",
        "offsetL",
        "offsetT",
        "nodeId",
        "scaleDiffW",
        "scaleDiffH",
        "miniW",
        "miniH",
        "miniScale",
        "nodeW",
        "nodeH",
        "canvasW",
        "canvasH",
        "nodeGapX",
        "nodeGapY",
        "miniNodeW",
        "miniNodeH",
        "miniFlag",
        "subtractL",
        "subtractT",
        "i",
        "$node",
        "nodeItem",
        "tmpL",
        "tmpT",
        "$containL",
        "$containT",
        "miniPadding",
        "miniGap",
        "that",
        "$port",
        "posParams",
        "$container",
        "miniGap",
        "moveRange",
        "originPort",
        "disX",
        "disY",
        "portL",
        "portT",
        "miniview",
        "that",
        "maxminL",
        "maxminT",
        "i",
        "nodeL",
        "nodeT",
        "nodeId",
        "t",
        "tempT",
        "t",
        "tempL",
        "$container",
        "args",
        "arguments",
        "result",
        "data"
    ],
    "comments": [
        "缓存边缘四个点",
        "确定画布边缘四个点，并渲染miniview",
        "获取画布点范围rect",
        "获取miniview显示比例",
        "根据比例确定miniview点大小",
        "居中显示nodebox",
        "渲染miniview上的点",
        "记录可视区与范围比例",
        "记录点的相对位置",
        "确认port范围",
        "确定port位置",
        "miniview事件管理",
        "移动对象",
        "确定边缘的四个点",
        "缓存边缘四个点"
    ],
    "docstrings": [],
    "functions": [
        "Miniview"
    ],
    "classes": []
}