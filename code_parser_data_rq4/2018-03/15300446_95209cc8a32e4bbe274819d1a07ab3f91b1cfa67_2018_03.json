{
    "identifiers": [
        "print_function",
        "warnings",
        "signal",
        "signal",
        "signal",
        "signal",
        "SIGPIPE",
        "signal",
        "SIG_DFL",
        "sys",
        "numpy",
        "np",
        "vcf",
        "warnings",
        "catch_warnings",
        "ImportWarning",
        "ete2",
        "Tree",
        "warnings",
        "filterwarnings",
        "utils",
        "filename",
        "maxn",
        "vcf",
        "Reader",
        "open",
        "filename",
        "v",
        "vcffile",
        "i",
        "i",
        "i",
        "end",
        "file",
        "sys",
        "stderr",
        "v",
        "REF",
        "bases",
        "v",
        "ALT",
        "bases",
        "variants",
        "append",
        "v",
        "CHROM",
        "v",
        "POS",
        "v",
        "REF",
        "np",
        "array",
        "v",
        "genotype",
        "s",
        "data",
        "AD",
        "s",
        "vcffile",
        "samples",
        "dtype",
        "np",
        "uint16",
        "ADs",
        "append",
        "ad",
        "b",
        "b",
        "v",
        "ALT",
        "b",
        "bases",
        "s",
        "insert",
        "v",
        "REF",
        "len",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "len",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "len",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "join",
        "sorted",
        "s",
        "s",
        "s",
        "s",
        "v",
        "genotype",
        "s",
        "data",
        "PL",
        "s",
        "vcffile",
        "samples",
        "j",
        "p",
        "pl",
        "o",
        "len",
        "find_geno",
        "find_geno",
        "o",
        "p",
        "o",
        "len",
        "pl_dict",
        "sorted",
        "pl_dict",
        "keys",
        "np",
        "array",
        "geno_pl",
        "geno",
        "geno_pl",
        "sorted",
        "pl_dict",
        "items",
        "dtype",
        "np",
        "longdouble",
        "np",
        "array",
        "pl",
        "pl",
        "shape",
        "len",
        "vcffile",
        "samples",
        "pl",
        "shape",
        "PLs",
        "append",
        "pl",
        "np",
        "array",
        "variants",
        "np",
        "array",
        "PLs",
        "PLs",
        "shape",
        "num_samp",
        "len",
        "vcffile",
        "samples",
        "num_geno",
        "variants",
        "ADs",
        "PLs",
        "vcffile",
        "samples",
        "args",
        "np",
        "array",
        "read_vcf_records",
        "args",
        "vcf",
        "Tree",
        "args",
        "tree",
        "node",
        "tree",
        "traverse",
        "strategy",
        "node",
        "is_leaf",
        "samplenames",
        "index",
        "node",
        "name",
        "init_tree",
        "tree",
        "make_base_prior",
        "args",
        "het",
        "GTYPE10",
        "make_mut_matrix_gtype10",
        "args",
        "mu",
        "genotype",
        "PLs",
        "tree",
        "variants",
        "mm",
        "mm0",
        "mm1",
        "base_prior",
        "samplenames",
        "open",
        "args",
        "output",
        "fout",
        "write",
        "join",
        "fout",
        "write",
        "np",
        "savetxt",
        "fout",
        "records2",
        "fmt",
        "delimiter",
        "fout",
        "close",
        "PLs",
        "tree",
        "variants",
        "mm",
        "mm0",
        "mm1",
        "base_prior",
        "leaves",
        "np",
        "array",
        "populate_tree_PL",
        "tree",
        "copy",
        "PLs",
        "mm",
        "tree",
        "PL",
        "base_prior",
        "populate_tree_PL",
        "tree",
        "copy",
        "PLs",
        "mm0",
        "tree",
        "PL0",
        "base_prior",
        "calc_mut_likelihoods",
        "tree",
        "copy",
        "mm0",
        "mm1",
        "np",
        "swapaxes",
        "tree",
        "PLm",
        "mut_PLs",
        "base_prior",
        "mut_PLs",
        "shape",
        "np",
        "arange",
        "n",
        "tree_PL",
        "argmin",
        "axis",
        "phred2p",
        "tree_PL",
        "sum",
        "axis",
        "tree_PL0",
        "argmin",
        "axis",
        "tree_PL0",
        "nn",
        "k0",
        "phred2p",
        "tree_PL0",
        "sum",
        "axis",
        "np",
        "array",
        "np",
        "unravel_index",
        "s",
        "argmin",
        "l",
        "g",
        "s",
        "mut_PLs",
        "k1",
        "k1",
        "mut_PLs",
        "nn",
        "k1l",
        "k1g",
        "phred2p",
        "mut_PLs",
        "sum",
        "axis",
        "np",
        "array",
        "node",
        "PL0",
        "node",
        "tree",
        "iter_descendants",
        "strategy",
        "null_PLs",
        "k1l",
        "nn",
        "argmin",
        "axis",
        "np",
        "array",
        "join",
        "node",
        "sid",
        "node",
        "tree",
        "iter_descendants",
        "strategy",
        "np",
        "array",
        "join",
        "leaves",
        "sid",
        "sid",
        "node",
        "sid",
        "node",
        "tree",
        "iter_descendants",
        "strategy",
        "np",
        "array",
        "variants",
        "nn",
        "variants",
        "nn",
        "variants",
        "nn",
        "null_P_per_site",
        "tree_P_per_site",
        "mut_P_per_site",
        "tree_P_per_site",
        "GTYPE10",
        "k0",
        "phred2p",
        "null_PL",
        "tree_P_per_site",
        "GTYPE10",
        "k1g",
        "GTYPE10",
        "k2",
        "phred2p",
        "mut_PL",
        "tree_P_per_site",
        "k1l",
        "node_sids",
        "k1l",
        "dtype",
        "p2phred",
        "records",
        "records",
        "sum",
        "np",
        "array",
        "variants",
        "nn",
        "variants",
        "nn",
        "variants",
        "nn",
        "null_P_per_site",
        "tree_P_per_site",
        "mut_P_per_site",
        "tree_P_per_site",
        "GTYPE10",
        "k0",
        "phred2p",
        "null_PL",
        "tree_P_per_site",
        "GTYPE10",
        "k1g",
        "GTYPE10",
        "k2",
        "phred2p",
        "mut_PL",
        "tree_P_per_site",
        "k1l",
        "node_sids_byname",
        "k1l",
        "dtype",
        "records",
        "records2",
        "score"
    ],
    "literals": [
        "'error'",
        "'r'",
        "'A'",
        "'C'",
        "'G'",
        "'T'",
        "'.'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'AA'",
        "'AC'",
        "'AG'",
        "'AT'",
        "'CC'",
        "'CG'",
        "'CT'",
        "'GG'",
        "'GT'",
        "'TT'",
        "'AA'",
        "'AC'",
        "'AG'",
        "'AT'",
        "'CC'",
        "'CG'",
        "'CT'",
        "'GG'",
        "'GT'",
        "'TT'",
        "'postorder'",
        "'w'",
        "'\\t'",
        "'chrom'",
        "'pos'",
        "'ref'",
        "'null_P'",
        "'mut_P'",
        "'MLE_null_base_gtype'",
        "'MLE_null_base_gtype_P'",
        "'MLE_mut_base_gtype'",
        "'MLE_alt_gtype'",
        "'MLE_mut_base_gtype_P'",
        "'MLE_mut_location'",
        "'MLE_mut_samples'",
        "\"\\n\"",
        "'%s'",
        "'%d'",
        "'%s'",
        "'%.2e'",
        "'%.2e'",
        "'%s'",
        "'%.2e'",
        "'%s'",
        "'%s'",
        "'%.2e'",
        "'%d'",
        "'%s'",
        "'\\t'",
        "'AA'",
        "'AC'",
        "'AG'",
        "'AT'",
        "'CC'",
        "'CG'",
        "'CT'",
        "'GG'",
        "'GT'",
        "'TT'",
        "'PL'",
        "'PL0'",
        "'postorder'",
        "','",
        "'postorder'",
        "','",
        "'postorder'",
        "'chrom'",
        "'a10'",
        "'pos'",
        "'i4'",
        "'ref'",
        "'a1'",
        "'null_p'",
        "'f8'",
        "'mut_p'",
        "'f8'",
        "'null_base'",
        "'a2'",
        "'null_base_p'",
        "'f8'",
        "'mut_base'",
        "'a2'",
        "'mut_alt'",
        "'a2'",
        "'mut_conf_p'",
        "'f8'",
        "'mut_loc'",
        "'i4'",
        "'mut_smpl'",
        "'a128'",
        "'mut_p'",
        "'null_p'",
        "'chrom'",
        "'a10'",
        "'pos'",
        "'i4'",
        "'ref'",
        "'a1'",
        "'null_p'",
        "'f8'",
        "'mut_p'",
        "'f8'",
        "'null_base'",
        "'a2'",
        "'null_base_p'",
        "'f8'",
        "'mut_base'",
        "'a2'",
        "'mut_alt'",
        "'a2'",
        "'mut_conf_p'",
        "'f8'",
        "'mut_loc'",
        "'i4'",
        "'mut_smpl'",
        "'a128'"
    ],
    "variables": [
        "vcffile",
        "variants",
        "ADs",
        "PLs",
        "bases",
        "i",
        "ad",
        "s",
        "find_geno",
        "find_geno",
        "find_geno",
        "pl",
        "pl_dict",
        "g",
        "pl_dict",
        "g",
        "pl",
        "j",
        "pl",
        "variants",
        "PLs",
        "num_var",
        "num_samp",
        "num_geno",
        "GTYPE10",
        "variants",
        "DPRs",
        "PLs",
        "samplenames",
        "tree",
        "node",
        "name",
        "tree",
        "base_prior",
        "mm",
        "mm0",
        "mm1",
        "records",
        "records2",
        "score",
        "fout",
        "GTYPE10",
        "tree",
        "tree_PL",
        "tree",
        "tree_PL0",
        "tree",
        "mut_PLs",
        "n",
        "l",
        "g",
        "nn",
        "k",
        "tree_P_per_site",
        "k0",
        "null_PL",
        "null_P_per_site",
        "k1",
        "k1l",
        "k1g",
        "mut_PL",
        "mut_P_per_site",
        "null_PLs",
        "k2",
        "node_sids",
        "node_sids_byname",
        "records",
        "score",
        "records2"
    ],
    "comments": [
        "!/usr/bin/env python2",
        "Author: Ni Huang <nihuang at genetics dot wustl dot edu>",
        "Author: Rachel Schwartz <Rachel dot Schwartz at asu dot edu>",
        "Author: Kael Dai <Kael dot Dai at asu dot edu>",
        "print('read sites', end = ' ', file=sys.stderr)",
        "ad for each sample for each allele",
        "filter X",
        "this is a silly way to find the correct genotypes in the pls",
        "get pl for ref and alts",
        "list of lists",
        "all genos are unlikely",
        "triallelic the PL pattern is RR,RA1,A1A1,RA2,A1A2,A2A2",
        "pl for that geno",
        "get PL for all 10 in alpha order as np",
        "float, but should be np array longdouble",
        "DPRs = np.array(ADs)",
        "print(' done', file=sys.stderr)",
        "print(args, file=sys.stderr)",
        "leaf names need to be from 0 -",
        "leaves = tree.get_leaf_names()",
        "tree nodes now have nid and sid where nid is node num from 0-",
        "sid is node name if leaf (numbered 0-) or names of children if not",
        "base genotype prior",
        ", GTYPE10) # substitution rate matrix, with non-diagonal set to 0, with diagonal set to 0",
        "records are: chrom,pos,ref,null_P,mut_P,MLE_null_base_gtype,MLE_null_base_gtype_P,MLE_mut_base_gtype,MLE_mut_base_gtype_P,MLE_mut_location,MLE_mut_samples",
        "fout = open(args.output, 'w')",
        "fout.write('\\t'.join(['chrom','pos','ref','null_P','mut_P','MLE_null_base_gtype','MLE_null_base_gtype_P','MLE_mut_base_gtype','MLE_alt_gtype','MLE_mut_base_gtype_P','MLE_mut_location','MLE_mut_samples']))",
        "fout.write(\"\\n\")",
        "#fout = open(args.output, 'a')",
        "np.savetxt(fout, records, fmt=['%s','%d','%s','%.2e','%.2e','%s','%.2e','%s','%s','%.2e','%d','%s'], delimiter='\\t')",
        "fout.close()",
        "print('sum(PL) = %.2f' % score)",
        "output with human readable leaf get_leaf_names    fout = open(args.output, 'w')",
        "fout = open(args.output, 'a')",
        "calculate total likelihoods for each genotypes",
        "dim(tree.PL) = site x gtype",
        "calculate no-mutation likelihoods for each genotypes",
        "try:",
        "dim(tree.PL0) = site x gtype",
        "except Exception as e:",
        "print('populate_tree_PL():', e, file=sys.stderr)",
        "sys.exit(1)",
        "calculate mutation likelihoods for each genotypes and mutation locations",
        "site x location x gtype",
        "n sites, l locations, g gtypes",
        "most likely base genotype for each site",
        "total tree likelihood",
        "most likely non-mutation base genotype for each site",
        "best non-mutation likelihood (across genotypes) for each site",
        "total non-mutation likelihood",
        "site x 2, most likely mutation event for each site",
        "most likely location",
        "most likely base genotype",
        "best mutation likelihood (across location and genotypes) for each site",
        "total mutation likelihood",
        "get most likely mutation mutant genotype",
        "node_sids are numbers that correspond to the order of leaves in the vcf",
        "node_sids with leaf labels for human readability",
        "chrom",
        "pos",
        "ref",
        "null_P",
        "mut_P",
        "GTYPE10[k],                             # MLE_base_gtype",
        "phred2p(tree_PL[nn,k])/tree_P_per_site, # MLE_base_gtype_P",
        "MLE_null_base_gtype",
        "MLE_null_base_gtype_P",
        "MLE_mut_base_gtype",
        "MLE_mut_alt_gtype",
        "MLE_mut_base_gtype_P",
        "MLE_mut_location",
        "MLE_mut_samples",
        "chrom",
        "pos",
        "ref",
        "null_P",
        "mut_P",
        "GTYPE10[k],                             # MLE_base_gtype",
        "phred2p(tree_PL[nn,k])/tree_P_per_site, # MLE_base_gtype_P",
        "MLE_null_base_gtype",
        "MLE_null_base_gtype_P",
        "MLE_mut_base_gtype",
        "MLE_mut_alt_gtype",
        "MLE_mut_base_gtype_P",
        "MLE_mut_location",
        "MLE_mut_samples"
    ],
    "docstrings": [
        "\"\"\"Read vcf file - get info about variants - need to clarify how this is different from read_vcf\n\n    Args:\n        filename: name of vcf file to read\n        maxn (int): number of lines / sites in file to process\n\n    Returns:\n        np.array (tuple): variant info (chrom, pos, ref)\n        np.array (int): Number of high-quality bases observed for each of the alleles\n        np.array (double): List of Phred-scaled genotype likelihoods for all 10 possible genotypes\n        vcffile.samples = list of sample names\n\n    \"\"\"",
        "\"\"\"\n    uses init_tree, make_base_prior, make_mut_matrix, read_vcf_records, genotype\n    \n    Args:\n        vcf: input vcf/vcf.gz file, \"-\" for stdin\n        output: output basename\n        tree: file containing lineage tree'\n        nsite: number of sites processed once, default 1000\n        mu: mutation rate in Phred scale, default 80\n        het: heterozygous rate in Phred scale, default 30, 0 for uninformative\n    \"\"\"",
        "\"\"\"\n    uses populate_tree_PL, calc_mut_likelihoods, phred2p\n    \"\"\""
    ],
    "functions": [
        "read_vcf_records",
        "genotype_main",
        "genotype"
    ],
    "classes": []
}