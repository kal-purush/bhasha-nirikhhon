{
    "identifiers": [
        "require",
        "require",
        "config",
        "require",
        "user",
        "jsonwebtoken",
        "user",
        "user",
        "user",
        "secretKey",
        "token",
        "app",
        "express",
        "express",
        "api",
        "req",
        "res",
        "USER",
        "req",
        "req",
        "req",
        "user",
        "err",
        "err",
        "err",
        "res",
        "err",
        "res",
        "api",
        "err",
        "res",
        "USER",
        "err",
        "users",
        "err",
        "res",
        "err",
        "res",
        "users",
        "api",
        "req",
        "res",
        "USER",
        "req",
        "err",
        "user",
        "err",
        "err",
        "user",
        "res",
        "user",
        "user",
        "req",
        "passwordValidation",
        "res",
        "createToken",
        "user",
        "res",
        "token",
        "api",
        "req",
        "res",
        "USER",
        "req",
        "err",
        "user",
        "err",
        "err",
        "user",
        "res",
        "USER",
        "user",
        "req",
        "err",
        "doc",
        "err",
        "res",
        "err",
        "res",
        "api"
    ],
    "literals": [
        "\"../models/users-table\"",
        "\"../../port-config\"",
        "'jsonwebtoken'",
        "'/signup'",
        "'User has been created!'",
        "'/all-users'",
        "'/login'",
        "'password'",
        "\"User does not exist.\"",
        "\"error\"",
        "\"Invalid Password.\"",
        "\"OK\"",
        "\"login successfuly.\"",
        "'/forget-password'",
        "'password'",
        "\"error\"",
        "\"Invalid EmailId\"",
        "\"password updated successfuly\""
    ],
    "variables": [
        "USER",
        "config",
        "secretKey",
        "jsonwebtoken",
        "token",
        "api",
        "user",
        "passwordValidation",
        "token"
    ],
    "comments": [
        "save data in mongoose for new users.",
        "get all users data",
        "check auth user",
        "get token",
        "update password"
    ],
    "docstrings": [],
    "functions": [
        "createToken"
    ],
    "classes": []
}