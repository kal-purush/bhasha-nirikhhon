{
    "identifiers": [
        "vscode",
        "mkdirp",
        "pify",
        "fs",
        "pify",
        "mkdirp",
        "pify",
        "fs",
        "context",
        "vscode",
        "vscode",
        "process",
        "homeDir",
        "now",
        "rootDir",
        "date",
        "date",
        "date",
        "mkdirpp",
        "dirName",
        "dirName",
        "filename",
        "vscode",
        "path",
        "statp",
        "path",
        "isExist",
        "vscode",
        "path",
        "isExist",
        "vscode",
        "uri",
        "vscode",
        "path",
        "vscode",
        "err",
        "err",
        "vscode",
        "err",
        "vscode",
        "edit",
        "fileuri",
        "vscode",
        "vscode",
        "edit",
        "context",
        "disposable"
    ],
    "literals": [
        "'use strict'",
        "'vscode'",
        "'mkdirp'",
        "'pify'",
        "'fs'",
        "'Congratulations, your extension \"temporary-memo\" is now active!'",
        "'extension.tempMemo'",
        "${homeDir}/my-test-directory",
        "${rootDir}/${date.getFullYear()}${date.getMonth()}${date.getDate()}",
        "'test-file.md'",
        "${dirName}/${filename}",
        "untitled:${path}",
        "New file created! : ${path}",
        "'\\n'"
    ],
    "variables": [
        "mkdirpp",
        "statp",
        "disposable",
        "homeDir",
        "rootDir",
        "now",
        "date",
        "dirName",
        "filename",
        "path",
        "uri",
        "isExist",
        "fileuri",
        "edit"
    ],
    "comments": [
        "The module 'vscode' contains the VS Code extensibility API",
        "Import the module and reference it with the alias vscode in your code below",
        "this method is called when your extension is activated",
        "your extension is activated the very first time the command is executed",
        "Use the console to output diagnostic information (console.log) and errors (console.error)",
        "This line of code will only be executed once when your extension is activated",
        "The command has been defined in the package.json file",
        "Now provide the implementation of the command with  registerCommand",
        "The commandId parameter must match the command field in package.json",
        "The code you place here will be executed every time your command is executed",
        "make today's directory if needed",
        "wait editing filename",
        "if filename is empty then set the date string .md",
        "this method is called when your extension is deactivated"
    ],
    "docstrings": [],
    "functions": [
        "activate",
        "deactivate"
    ],
    "classes": []
}