{
    "identifiers": [
        "os",
        "json",
        "httplib",
        "ssl",
        "urllib",
        "host",
        "request",
        "body",
        "headers",
        "port",
        "use_https",
        "use_cert",
        "cert_file",
        "os",
        "getenv",
        "use_post",
        "host",
        "split",
        "len",
        "check_for_port",
        "check_for_port",
        "check_for_port",
        "port",
        "port",
        "use_cert",
        "httplib",
        "HTTPSConnection",
        "host",
        "use_port",
        "cert_file",
        "cert_file",
        "key_file",
        "cert_file",
        "context",
        "ssl",
        "_create_unverified_context",
        "AttributeError",
        "httplib",
        "HTTPSConnection",
        "host",
        "use_port",
        "cert_file",
        "cert_file",
        "key_file",
        "cert_file",
        "use_https",
        "httplib",
        "HTTPSConnection",
        "host",
        "use_port",
        "context",
        "ssl",
        "_create_unverified_context",
        "AttributeError",
        "httplib",
        "HTTPSConnection",
        "host",
        "use_port",
        "port",
        "httplib",
        "HTTPConnection",
        "host",
        "use_port",
        "body",
        "use_post",
        "request",
        "urllib",
        "urlencode",
        "request",
        "conn",
        "request",
        "method",
        "full_request",
        "json",
        "dumps",
        "body",
        "headers",
        "conn",
        "getresponse",
        "res",
        "status",
        "res",
        "reason",
        "json",
        "loads",
        "res",
        "read",
        "conn",
        "close",
        "result"
    ],
    "literals": [
        "''",
        "''",
        "''",
        "'X509_USER_PROXY'",
        "':'",
        "\"POST\"",
        "\"GET\"",
        "'%s?%s'",
        "\"STATUS\"",
        "\"REASON\""
    ],
    "variables": [
        "check_for_port",
        "host",
        "port",
        "use_port",
        "use_port",
        "conn",
        "conn",
        "conn",
        "conn",
        "use_port",
        "conn",
        "use_post",
        "method",
        "full_request",
        "res",
        "result"
    ],
    "comments": [
        "pylint: disable=protected-access, unexpected-keyword-arg"
    ],
    "docstrings": [
        "\"\"\"\nA high-level module for getting JSON information from web services.\nThe HTTP vs HTTPS and certificate handling is done here.\n\n:author: Daniel Abercrombie <dabercro@mit.edu>\n\"\"\"",
        "\"\"\"\n    Function for getting JSON from a URL that handles the connection\n    and certificates with just a couple of bools.\n\n    :param str host: The name of the host to connect to\n    :param str request: The request to make to the host\n    :param dict params: The parameters to pass to the request\n    :param dict headers: Headers to pass to request\n    :param str port: The port to access, if a not default value\n    :param bool use_https: Uses HTTP connection by default\n    :param bool use_cert: Does not pass a certificate by default\n    :param str cert_file: The location of the certificate file.\n                          Default is ``$X509_USER_PROXY``.\n    :param bool use_post: Determines whether to use POST or GET.\n    :returns: The JSON from the query\n    :rtype: dict\n    \"\"\""
    ],
    "functions": [
        "get_json"
    ],
    "classes": []
}