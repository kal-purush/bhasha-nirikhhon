{
    "identifiers": [
        "os",
        "json",
        "time",
        "logging",
        "argparse",
        "pprint",
        "urllib",
        "pgoapi",
        "PGoApi",
        "pgoapi",
        "utilities",
        "util",
        "google",
        "protobuf",
        "encoder",
        "geopy",
        "geocoders",
        "GoogleV3",
        "s2sphere",
        "CellId",
        "LatLng",
        "logging",
        "getLogger",
        "location_name",
        "GoogleV3",
        "geolocator",
        "geocode",
        "location_name",
        "loc",
        "log",
        "info",
        "loc",
        "address",
        "encode",
        "log",
        "info",
        "loc",
        "latitude",
        "loc",
        "longitude",
        "loc",
        "altitude",
        "loc",
        "latitude",
        "loc",
        "longitude",
        "loc",
        "altitude",
        "lat",
        "longi",
        "radius",
        "CellId",
        "from_lat_lng",
        "LatLng",
        "from_degrees",
        "lat",
        "longi",
        "parent",
        "origin",
        "id",
        "origin",
        "next",
        "origin",
        "prev",
        "i",
        "radius",
        "walk",
        "append",
        "right",
        "id",
        "walk",
        "append",
        "left",
        "id",
        "right",
        "next",
        "left",
        "prev",
        "sorted",
        "walk",
        "cellid",
        "encoder",
        "_VarintEncoder",
        "output",
        "append",
        "cellid",
        "join",
        "output",
        "argparse",
        "ArgumentParser",
        "os",
        "path",
        "isfile",
        "config_file",
        "open",
        "config_file",
        "data",
        "load",
        "update",
        "json",
        "load",
        "data",
        "x",
        "x",
        "load",
        "parser",
        "add_argument",
        "help",
        "required",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "required",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "set_defaults",
        "DEBUG",
        "TEST",
        "parser",
        "parse_args",
        "key",
        "config",
        "__dict__",
        "key",
        "load",
        "config",
        "__dict__",
        "key",
        "config",
        "__dict__",
        "load",
        "key",
        "config",
        "auth_service",
        "log",
        "error",
        "config",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "format",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "WARNING",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "INFO",
        "init_config",
        "config",
        "config",
        "debug",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "getLogger",
        "setLevel",
        "logging",
        "DEBUG",
        "get_pos_by_name",
        "config",
        "location",
        "position",
        "config",
        "test",
        "PGoApi",
        "api",
        "set_position",
        "position",
        "api",
        "login",
        "config",
        "auth_service",
        "config",
        "username",
        "config",
        "password",
        "time",
        "sleep",
        "api",
        "get_player",
        "time",
        "sleep",
        "find_poi",
        "api",
        "position",
        "position",
        "time",
        "sleep",
        "api",
        "lat",
        "lng",
        "api",
        "set_position",
        "lat",
        "lng",
        "get_cell_ids",
        "lat",
        "lng",
        "len",
        "cell_ids",
        "api",
        "get_map_objects",
        "latitude",
        "util",
        "f2i",
        "lat",
        "longitude",
        "util",
        "f2i",
        "lng",
        "since_timestamp_ms",
        "timestamps",
        "cell_id",
        "cell_ids",
        "response_dict",
        "response_dict",
        "response_dict",
        "map_cell",
        "response_dict",
        "map_cell",
        "fort",
        "map_cell",
        "fort",
        "forts",
        "append",
        "fort",
        "print_gmaps_dbug",
        "forts",
        "fortlist",
        "format",
        "pprint",
        "PrettyPrinter",
        "indent",
        "pformat",
        "fortlist",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "url_string",
        "fort",
        "fortlist",
        "url_string",
        "format",
        "fort",
        "url_string",
        "format",
        "fort",
        "fort",
        "fort",
        "url_string",
        "url_string",
        "format",
        "fort",
        "fort",
        "url_string",
        "url_string",
        "len",
        "url_string",
        "urllib",
        "urlretrieve",
        "url_string",
        "main"
    ],
    "literals": [
        "'Your given location: %s'",
        "'utf-8'",
        "'lat/long/alt: %s %s %s'",
        "''",
        "\"config.json\"",
        "\"-a\"",
        "\"--auth_service\"",
        "\"Auth Service ('ptc' or 'google')\"",
        "\"auth_service\"",
        "\"-u\"",
        "\"--username\"",
        "\"Username\"",
        "\"username\"",
        "\"-p\"",
        "\"--password\"",
        "\"Password\"",
        "\"password\"",
        "\"-l\"",
        "\"--location\"",
        "\"Location\"",
        "\"location\"",
        "\"-d\"",
        "\"--debug\"",
        "\"Debug Mode\"",
        "'store_true'",
        "\"-t\"",
        "\"--test\"",
        "\"Only parse the specified location\"",
        "'store_true'",
        "'ptc'",
        "'google'",
        "\"Invalid Auth service specified! ('ptc' or 'google')\"",
        "'%(asctime)s [%(module)10s] [%(levelname)5s] %(message)s'",
        "\"requests\"",
        "\"pgoapi\"",
        "\"rpc_api\"",
        "\"requests\"",
        "\"pgoapi\"",
        "\"rpc_api\"",
        "'responses'",
        "'status'",
        "'responses'",
        "'GET_MAP_OBJECTS'",
        "'responses'",
        "'GET_MAP_OBJECTS'",
        "'status'",
        "'responses'",
        "'GET_MAP_OBJECTS'",
        "'map_cells'",
        "'forts'",
        "'forts'",
        "'owned_by_team'",
        "'Fort: \\n\\r{}'",
        "'http://maps.googleapis.com/maps/api/staticmap?size=640x640&zoom=16&'",
        "'style=feature:poi%7Celement:geometry%7Ccolor:0x4dff6d&'",
        "'style=feature:all%7Celement:labels%7Cvisibility:off&'",
        "'style=feature:road%7Cvisibility:simplified%7Celement:geometry%7Ccolor:0x51988f&'",
        "'style=feature:landscape.man_made%7Cvisibility:on%7Celement:geometry.fill%7Ccolor:0x49e096&'",
        "'style=feature:landscape.man_made%7Celement:geometry.stroke%7Ccolor:0x93ce92%7Cweight:1&'",
        "'style=feature:landscape.natural%7Cvisibility:on%7Celement:geometry%7Ccolor:0x4dfe7c&'",
        "'style=feature:poi.park%7Cvisibility:on%7Celement:geometry%7Ccolor:0x04aa90&'",
        "'style=feature:water%7Cvisibility:on%7Celement:geometry%7Ccolor:0x1379d2&'",
        "'style=feature:transit%7Cvisibility:off&'",
        "'markers=icon:http%3A%2F%2Fweb.mit.edu%2Fphilip%2Fwww%2Fgym%2F{}.png|'",
        "'owned_by_team'",
        "'{},{}&'",
        "'latitude'",
        "'longitude'",
        "'is_in_battle'",
        "'markers=icon:http%3A%2F%2Fweb.mit.edu%2Fphilip%2Fwww%2Fgym%2F0.png|'",
        "'{},{}&'",
        "'latitude'",
        "'longitude'",
        "'key=AIzaSyD4mQr7-Fxfw6Vg6RxnFpjDi65Wml_5MaM'",
        "\"gym_map.png\"",
        "'__main__'"
    ],
    "variables": [
        "log",
        "geolocator",
        "loc",
        "origin",
        "walk",
        "right",
        "left",
        "right",
        "left",
        "output",
        "parser",
        "config_file",
        "load",
        "required",
        "config",
        "key",
        "config",
        "position",
        "api",
        "response_dict",
        "forts",
        "cell_ids",
        "timestamps",
        "response_dict",
        "url_string"
    ],
    "comments": [
        "!/usr/bin/env python",
        "import webbrowser",
        "Search around provided radius",
        "Return everything",
        "If config file exists, load variables from json",
        "Read passed in Arguments",
        "Passed in arguments shoud trump",
        "log settings",
        "log format",
        "log level for http request class",
        "log level for main pgoapi class",
        "log level for internal pgoapi class",
        "instantiate pgoapi",
        "provide player position on the earth",
        "chain subrequests (methods) into one RPC call",
        "get player profile call",
        "-----------------------",
        "step_size = 0.0015",
        "step_limit = 1",
        "get_cellid was buggy -> replaced through get_cell_ids from pokecli",
        "timestamp gets computed a different way:",
        "It's a gym!",
        "print('Fort: \\n\\r{}'.format(pprint.PrettyPrinter(indent=4).pformat(fort)))",
        "webbrowser.open(url_string, new = 0, autoraise = True)"
    ],
    "docstrings": [
        "\"\"\"\npgoapi - Pokemon Go API\nCopyright (c) 2016 tjado <https://github.com/tejado>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE\nOR OTHER DEALINGS IN THE SOFTWARE.\n\nAuthor: tjado <https://github.com/tejado>\n\"\"\""
    ],
    "functions": [
        "get_pos_by_name",
        "get_cell_ids",
        "encode",
        "init_config",
        "main",
        "find_poi",
        "print_gmaps_dbug"
    ],
    "classes": []
}