{
    "identifiers": [
        "os",
        "jinja2",
        "webapp2",
        "re",
        "random",
        "hashlib",
        "hmac",
        "logging",
        "google",
        "appengine",
        "ext",
        "db",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "jinja2",
        "Environment",
        "loader",
        "jinja2",
        "FileSystemLoader",
        "template_dir",
        "autoescape",
        "logging",
        "info",
        "template",
        "jinja_env",
        "get_template",
        "template",
        "t",
        "render",
        "length",
        "join",
        "random",
        "choice",
        "letters",
        "x",
        "xrange",
        "length",
        "val",
        "val",
        "hmac",
        "secret",
        "val",
        "hexdigest",
        "secure_val",
        "secure_val",
        "split",
        "secure_val",
        "make_secure_val",
        "val",
        "val",
        "user_id",
        "salt",
        "salt",
        "make_salt",
        "hashlib",
        "sha256",
        "user_id",
        "salt",
        "hexdigest",
        "hash",
        "salt",
        "user_id",
        "hash",
        "hash",
        "split",
        "hash",
        "make_user_id_hash",
        "user_id",
        "salt",
        "response",
        "post",
        "response",
        "write",
        "post",
        "subject",
        "re",
        "compile",
        "username",
        "username",
        "USER_RE",
        "match",
        "username",
        "username",
        "username",
        "USER_RE",
        "match",
        "username",
        "re",
        "compile",
        "password",
        "password",
        "PASS_RE",
        "match",
        "password",
        "password",
        "password",
        "PASS_RE",
        "match",
        "password",
        "re",
        "compile",
        "email",
        "email",
        "EMAIL_RE",
        "match",
        "email",
        "username",
        "password",
        "salt",
        "salt",
        "make_salt",
        "hashlib",
        "sha256",
        "username",
        "password",
        "salt",
        "hexdigest",
        "hsh",
        "salt",
        "username",
        "password",
        "hsh",
        "hsh",
        "split",
        "hsh",
        "make_pw_hash",
        "username",
        "password",
        "salt",
        "name",
        "db",
        "Key",
        "from_path",
        "name",
        "group",
        "db",
        "Key",
        "from_path",
        "group",
        "group",
        "db",
        "Key",
        "from_path",
        "group",
        "group",
        "db",
        "Key",
        "from_path",
        "group",
        "group",
        "db",
        "Key",
        "from_path",
        "group",
        "db",
        "Model",
        "db",
        "StringProperty",
        "required",
        "db",
        "TextProperty",
        "required",
        "db",
        "DateTimeProperty",
        "auto_now_add",
        "db",
        "DateTimeProperty",
        "auto_now",
        "db",
        "StringProperty",
        "required",
        "user",
        "is_static",
        "render_str",
        "post",
        "user",
        "user",
        "is_static",
        "is_static",
        "classmethod",
        "cls",
        "post_id",
        "BlogPosts",
        "get_by_id",
        "post_id",
        "parent",
        "blog_key",
        "classmethod",
        "cls",
        "user_id",
        "Users",
        "by_id",
        "user_id",
        "user",
        "name",
        "classmethod",
        "cls",
        "post_id",
        "Comments",
        "all",
        "ancestor",
        "comments_key",
        "post_id",
        "classmethod",
        "cls",
        "post_id",
        "Comments",
        "all",
        "ancestor",
        "comments_key",
        "post_id",
        "run",
        "limit",
        "classmethod",
        "cls",
        "like",
        "dislike",
        "post_id",
        "user_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "like",
        "post",
        "has_user_liked_post",
        "user_id",
        "post_id",
        "post_id",
        "Likes",
        "parent",
        "likes_key",
        "post_id",
        "post_id",
        "user_id",
        "user_id",
        "like",
        "put",
        "post",
        "has_user_disliked_post",
        "user_id",
        "post_id",
        "post",
        "get_dislike_by_user",
        "user_id",
        "post_id",
        "has_disliked",
        "dislike",
        "post",
        "has_user_disliked_post",
        "user_id",
        "post_id",
        "post_id",
        "Dislikes",
        "parent",
        "dislikes_key",
        "post_id",
        "post_id",
        "user_id",
        "user_id",
        "dislike",
        "put",
        "post",
        "has_user_liked_post",
        "user_id",
        "post_id",
        "post",
        "get_like_by_user",
        "user_id",
        "post_id",
        "has_liked",
        "error",
        "classmethod",
        "cls",
        "post_id",
        "Likes",
        "all",
        "ancestor",
        "likes_key",
        "post_id",
        "classmethod",
        "cls",
        "post_id",
        "Dislikes",
        "all",
        "ancestor",
        "dislikes_key",
        "post_id",
        "classmethod",
        "cls",
        "post_id",
        "cls",
        "get_post_likes",
        "post_id",
        "like",
        "likes",
        "like",
        "post_id",
        "post_id",
        "count",
        "count",
        "classmethod",
        "cls",
        "post_id",
        "cls",
        "get_post_dislikes",
        "post_id",
        "dislike",
        "dislikes",
        "dislike",
        "post_id",
        "post_id",
        "count",
        "count",
        "classmethod",
        "cls",
        "user_id",
        "post_id",
        "cls",
        "get_post_likes",
        "post_id",
        "like",
        "likes_with_post_id",
        "run",
        "like",
        "user_id",
        "user_id",
        "has_liked",
        "classmethod",
        "cls",
        "user_id",
        "post_id",
        "cls",
        "get_post_dislikes",
        "post_id",
        "dislike",
        "dislikes_with_post_id",
        "run",
        "dislike",
        "user_id",
        "user_id",
        "has_disliked",
        "classmethod",
        "cls",
        "user_id",
        "post_id",
        "cls",
        "get_post_likes",
        "post_id",
        "run",
        "like",
        "likes",
        "like",
        "user_id",
        "user_id",
        "like",
        "classmethod",
        "cls",
        "user_id",
        "post_id",
        "cls",
        "get_post_dislikes",
        "post_id",
        "run",
        "dislike",
        "dislikes",
        "dislike",
        "user_id",
        "user_id",
        "dislike",
        "classmethod",
        "cls",
        "post",
        "disabled",
        "render_str",
        "disabled",
        "disabled",
        "post",
        "post",
        "classmethod",
        "cls",
        "post",
        "disabled",
        "render_str",
        "disabled",
        "disabled",
        "post",
        "post",
        "db",
        "Model",
        "db",
        "StringProperty",
        "required",
        "db",
        "TextProperty",
        "required",
        "db",
        "StringProperty",
        "required",
        "db",
        "StringProperty",
        "required",
        "db",
        "DateTimeProperty",
        "auto_now_add",
        "classmethod",
        "cls",
        "comment_id",
        "Comments",
        "get_by_id",
        "comment_id",
        "parent",
        "comments_key",
        "classmethod",
        "cls",
        "subject",
        "content",
        "post_id",
        "user_id",
        "subject",
        "content",
        "post_id",
        "user_id",
        "Comments",
        "parent",
        "comments_key",
        "subject",
        "subject",
        "content",
        "content",
        "created_user_id",
        "user_id",
        "related_post_id",
        "post_id",
        "comment",
        "put",
        "classmethod",
        "cls",
        "comment_id",
        "comment_id",
        "cls",
        "key",
        "id",
        "cls",
        "by_id",
        "comment_id",
        "Users",
        "by_id",
        "comment",
        "created_user_id",
        "user",
        "name",
        "classmethod",
        "cls",
        "comment_id",
        "user",
        "is_static",
        "is_static",
        "render_str",
        "comment_renderer",
        "comment",
        "cls",
        "by_id",
        "comment_id",
        "user",
        "user",
        "db",
        "Model",
        "db",
        "StringProperty",
        "required",
        "db",
        "StringProperty",
        "required",
        "db",
        "Model",
        "db",
        "StringProperty",
        "required",
        "db",
        "StringProperty",
        "required",
        "db",
        "Model",
        "db",
        "StringProperty",
        "required",
        "db",
        "StringProperty",
        "required",
        "db",
        "StringProperty",
        "db",
        "DateTimeProperty",
        "auto_now_add",
        "classmethod",
        "cls",
        "uid",
        "Users",
        "get_by_id",
        "uid",
        "parent",
        "users_key",
        "classmethod",
        "cls",
        "name",
        "Users",
        "all",
        "name",
        "get",
        "user",
        "classmethod",
        "cls",
        "name",
        "password",
        "email",
        "Users",
        "parent",
        "users_key",
        "name",
        "name",
        "password",
        "password",
        "email",
        "email",
        "classmethod",
        "cls",
        "name",
        "password",
        "logging",
        "info",
        "name",
        "logging",
        "info",
        "password",
        "cls",
        "by_name",
        "name",
        "logging",
        "info",
        "user",
        "user",
        "validate_password",
        "name",
        "password",
        "user",
        "password",
        "user",
        "classmethod",
        "cls",
        "user_id",
        "user_id",
        "classmethod",
        "cls",
        "user_id",
        "BlogPosts",
        "all",
        "ancestor",
        "blog_key",
        "user_id",
        "users_posts",
        "get",
        "users_posts",
        "run",
        "posts",
        "classmethod",
        "cls",
        "subject",
        "content",
        "error",
        "render_str",
        "subject",
        "subject",
        "content",
        "content",
        "error",
        "error",
        "webapp2",
        "RequestHandler",
        "a",
        "kw",
        "response",
        "write",
        "a",
        "kw",
        "template",
        "jinja_env",
        "get_template",
        "template",
        "t",
        "render",
        "template",
        "kw",
        "write",
        "render_str",
        "template",
        "kw",
        "Handler",
        "name",
        "val",
        "make_secure_val",
        "val",
        "response",
        "headers",
        "add_header",
        "name",
        "cookie_val",
        "name",
        "request",
        "cookies",
        "get",
        "name",
        "cookie_val",
        "check_secure_val",
        "cookie_val",
        "user",
        "set_secure_cookie",
        "user",
        "key",
        "id",
        "response",
        "headers",
        "add_header",
        "read_secure_cookie",
        "previous_page",
        "previous_page",
        "edit_post",
        "delete_post",
        "add_comment",
        "page",
        "post_id",
        "edit_post",
        "delete_post",
        "add_comment",
        "set_secure_cookie",
        "post_id",
        "set_secure_cookie",
        "page",
        "edit_post",
        "redirect",
        "delete_post",
        "redirect",
        "add_comment",
        "redirect",
        "edit_comment",
        "delete_comment",
        "comment_id",
        "page",
        "edit_comment",
        "delete_comment",
        "set_secure_cookie",
        "comment_id",
        "set_secure_cookie",
        "page",
        "edit_comment",
        "redirect",
        "delete_comment",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "data",
        "args",
        "kwargs",
        "webapp2",
        "RequestHandler",
        "initialize",
        "args",
        "kwargs",
        "read_secure_cookie",
        "uid",
        "Users",
        "by_id",
        "uid",
        "BlogHandler",
        "error",
        "BlogPosts",
        "all",
        "ancestor",
        "blog_key",
        "order",
        "fetch",
        "limit",
        "render",
        "user",
        "user",
        "posts",
        "posts",
        "error",
        "error",
        "render_front",
        "get_post_data",
        "data",
        "data",
        "BlogPosts",
        "add_like_or_dislike",
        "like",
        "data",
        "dislike",
        "data",
        "post_id",
        "data",
        "user_id",
        "data",
        "render_front",
        "error",
        "data",
        "data",
        "data",
        "edit_post_redirect",
        "edit_post",
        "data",
        "delete_post",
        "data",
        "add_comment",
        "data",
        "page",
        "post_id",
        "data",
        "data",
        "data",
        "request",
        "get",
        "edit_comment_redirect",
        "edit_comment",
        "data",
        "delete_comment",
        "data",
        "comment_id",
        "comment_id",
        "page",
        "BlogHandler",
        "subject",
        "content",
        "error",
        "render",
        "subject",
        "subject",
        "content",
        "content",
        "error",
        "error",
        "user",
        "user",
        "user",
        "render_new_post",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "subject",
        "content",
        "BlogPosts",
        "parent",
        "blog_key",
        "subject",
        "subject",
        "content",
        "content",
        "created_user_id",
        "user",
        "key",
        "id",
        "post",
        "put",
        "redirect",
        "post",
        "key",
        "id",
        "render_new_post",
        "subject",
        "content",
        "error",
        "BlogHandler",
        "post_id",
        "error",
        "BlogPosts",
        "by_id",
        "post_id",
        "post",
        "render",
        "post",
        "post",
        "user",
        "user",
        "error",
        "error",
        "is_static",
        "post_id",
        "render_static_page",
        "post_id",
        "post_id",
        "post_id",
        "get_post_data",
        "data",
        "data",
        "BlogPosts",
        "add_like_or_dislike",
        "like",
        "data",
        "dislike",
        "data",
        "post_id",
        "data",
        "user_id",
        "data",
        "render_static_page",
        "post_id",
        "data",
        "error",
        "error",
        "data",
        "data",
        "data",
        "edit_post_redirect",
        "edit_post",
        "data",
        "delete_post",
        "data",
        "add_comment",
        "data",
        "page",
        "data",
        "post_id",
        "data",
        "data",
        "data",
        "request",
        "get",
        "edit_comment_redirect",
        "edit_comment",
        "data",
        "delete_comment",
        "data",
        "comment_id",
        "comment_id",
        "page",
        "data",
        "BlogHandler",
        "user",
        "redirect",
        "render",
        "db",
        "GqlQuery",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "username",
        "username",
        "email",
        "email",
        "is_valid_username",
        "username",
        "get_username_error",
        "username",
        "is_valid_password",
        "password",
        "get_password_error",
        "password",
        "password",
        "verify_password",
        "make_pw_hash",
        "username",
        "password",
        "email",
        "is_valid_email",
        "email",
        "are_errors",
        "render",
        "Users",
        "by_name",
        "username",
        "user",
        "render",
        "Users",
        "register",
        "username",
        "hashed_password",
        "email",
        "user",
        "put",
        "page_login",
        "user",
        "redirect",
        "BlogHandler",
        "user",
        "render",
        "user",
        "user",
        "redirect",
        "BlogHandler",
        "error",
        "user",
        "user",
        "get_users_posts",
        "user",
        "key",
        "id",
        "render",
        "user",
        "user",
        "posts",
        "posts",
        "error",
        "error",
        "user",
        "render_my_posts",
        "redirect",
        "get_post_data",
        "data",
        "data",
        "data",
        "edit_post_redirect",
        "edit_post",
        "data",
        "delete_post",
        "data",
        "add_comment",
        "data",
        "page",
        "post_id",
        "data",
        "data",
        "data",
        "request",
        "get",
        "edit_comment_redirect",
        "edit_comment",
        "data",
        "delete_comment",
        "data",
        "comment_id",
        "comment_id",
        "page",
        "BlogHandler",
        "read_secure_cookie",
        "get_previous_page",
        "post_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "user",
        "key",
        "id",
        "post",
        "created_user_id",
        "redirect",
        "render",
        "user",
        "user",
        "post_id",
        "post_id",
        "redirect",
        "previous_page",
        "user",
        "render_delete_post_page",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "get_previous_page",
        "resp_yes",
        "previous_page",
        "post_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "post",
        "set_secure_cookie",
        "set_secure_cookie",
        "redirect",
        "previous_page",
        "BlogHandler",
        "subject",
        "content",
        "error",
        "read_secure_cookie",
        "get_previous_page",
        "subject",
        "content",
        "post_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "user",
        "key",
        "id",
        "post",
        "created_user_id",
        "redirect",
        "previous_page",
        "post",
        "subject",
        "post",
        "content",
        "redirect",
        "previous_page",
        "render",
        "user",
        "user",
        "subject",
        "subject",
        "content",
        "content",
        "error",
        "error",
        "user",
        "render_edit_page",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "read_secure_cookie",
        "get_previous_page",
        "subject",
        "content",
        "post_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "subject",
        "content",
        "post",
        "put",
        "set_secure_cookie",
        "set_secure_cookie",
        "redirect",
        "previous_page",
        "render_edit_page",
        "subject",
        "content",
        "error",
        "render_edit_page",
        "subject",
        "content",
        "error",
        "BlogHandler",
        "subject",
        "content",
        "error",
        "read_secure_cookie",
        "post_id",
        "BlogPosts",
        "by_id",
        "post_id",
        "post",
        "redirect",
        "render",
        "subject",
        "subject",
        "content",
        "content",
        "error",
        "error",
        "user",
        "user",
        "redirect",
        "user",
        "render_new_comment_page",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "read_secure_cookie",
        "get_previous_page",
        "subject",
        "content",
        "Comments",
        "add_comment",
        "subject",
        "subject",
        "content",
        "content",
        "post_id",
        "post_id",
        "user_id",
        "user",
        "key",
        "id",
        "set_secure_cookie",
        "set_secure_cookie",
        "redirect",
        "previous_page",
        "render_new_post",
        "subject",
        "content",
        "error",
        "BlogHandler",
        "subject",
        "content",
        "error",
        "read_secure_cookie",
        "get_previous_page",
        "subject",
        "content",
        "comment_id",
        "Comments",
        "by_id",
        "comment_id",
        "comment",
        "user",
        "key",
        "id",
        "comment",
        "created_user_id",
        "redirect",
        "previous_page",
        "comment",
        "subject",
        "comment",
        "content",
        "redirect",
        "previous_page",
        "redirect",
        "previous_page",
        "render",
        "user",
        "user",
        "subject",
        "subject",
        "content",
        "content",
        "error",
        "error",
        "user",
        "render_edit_comment",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "read_secure_cookie",
        "get_previous_page",
        "subject",
        "content",
        "comment_id",
        "Comments",
        "by_id",
        "comment_id",
        "subject",
        "content",
        "comment",
        "put",
        "set_secure_cookie",
        "set_secure_cookie",
        "redirect",
        "previous_page",
        "render_edit_comment",
        "subject",
        "content",
        "error",
        "render_edit_comment",
        "subject",
        "content",
        "error",
        "BlogHandler",
        "read_secure_cookie",
        "get_previous_page",
        "comment_id",
        "Comments",
        "by_id",
        "comment_id",
        "comment",
        "user",
        "key",
        "id",
        "comment",
        "created_user_id",
        "redirect",
        "previous_page",
        "render",
        "user",
        "user",
        "comment_id",
        "comment_id",
        "redirect",
        "previous_page",
        "redirect",
        "previous_page",
        "user",
        "render_delete_comment_page",
        "redirect",
        "request",
        "get",
        "request",
        "get",
        "request",
        "get",
        "get_previous_page",
        "resp_yes",
        "Comments",
        "by_id",
        "comment_id",
        "comment",
        "set_secure_cookie",
        "set_secure_cookie",
        "redirect",
        "previous_page",
        "BlogHandler",
        "password_error",
        "render",
        "user",
        "redirect",
        "render_login_page",
        "request",
        "get",
        "request",
        "get",
        "logging",
        "info",
        "logging",
        "info",
        "username",
        "logging",
        "info",
        "password",
        "Users",
        "user_login",
        "username",
        "password",
        "user",
        "page_login",
        "user",
        "redirect",
        "logging",
        "info",
        "render_login_page",
        "password_error",
        "BlogHandler",
        "logout",
        "redirect",
        "BlogHandler",
        "redirect",
        "webapp2",
        "WSGIApplication",
        "BlogFrontPageHandler",
        "NewPostPageHandler",
        "StaticPostPageHandler",
        "UserSignUpHandler",
        "WelcomePageHandler",
        "LoginPageHandler",
        "LogoutHandler",
        "HomePageHandler",
        "MyPostsPageHandler",
        "DeletePostPage",
        "EditPageHandler",
        "NewCommentPageHandler",
        "EditCommentHandler",
        "DeleteCommentPageHandler",
        "debug"
    ],
    "literals": [
        "'templates'",
        "\"UElMsOPfxYrvaz2w\"",
        "\"\"",
        "'%s|%s'",
        "'|'",
        "'%s|%s'",
        "'|'",
        "'<b>'",
        "'</b><br>'",
        "r\"^[a-zA-Z0-9_-]{3,20}$\"",
        "\"Please enter a username.\"",
        "\"Please enter a username of between 3 to 20 alphanumeric\"",
        "\" characters.\"",
        "r\"^.{3,20}$\"",
        "\"Please enter a password.\"",
        "\"Please enter a password of between 3 to 20 characters.\"",
        "r\"^[\\S]+@[\\S]+.[\\S]+$\"",
        "'%s|%s'",
        "'|'",
        "'default'",
        "'blogs'",
        "'default'",
        "'users'",
        "'default'",
        "'comments'",
        "'default'",
        "'likes'",
        "'default'",
        "'dislikes'",
        "\"post.html\"",
        "'related_post_id ='",
        "'related_post_id ='",
        "\"text\"",
        "\"You can't like a post twice.\"",
        "\"post\"",
        "\"text\"",
        "\"You can't dislike a post twice.\"",
        "\"post\"",
        "'post_id ='",
        "'post_id ='",
        "'like.html'",
        "'dislike.html'",
        "\"\"",
        "\"comment_sml.html\"",
        "\"comment.html\"",
        "'name ='",
        "'username = %s'",
        "'password = %s'",
        "'user = %s'",
        "\"created_user_id =\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'post_editor.html'",
        "'Set-Cookie'",
        "'%s=%s; Path=/'",
        "'user_id'",
        "'Set-Cookie'",
        "'user_id=; Path=/'",
        "\"page\"",
        "\"\"",
        "'post_id'",
        "'page'",
        "'/editpost'",
        "'/deletepost'",
        "'/newcomment'",
        "'comment_id'",
        "'page'",
        "'/editcomment'",
        "'/deletecomment'",
        "\"like\"",
        "\"Likes\"",
        "\"dislike\"",
        "\"Dislikes\"",
        "\"post_id\"",
        "\"post_id\"",
        "\"user_id\"",
        "\"user_id\"",
        "\"edit_post\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"add_comment\"",
        "\"edit_comment\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"delete_comment\"",
        "'user_id'",
        "\"\"",
        "'-created'",
        "\"blog_front.html\"",
        "\"like\"",
        "\"dislike\"",
        "\"like\"",
        "\"dislike\"",
        "\"post_id\"",
        "\"user_id\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"blog\"",
        "\"post_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"comment_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"blog\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"new_post.html\"",
        "'/signup'",
        "\"subject\"",
        "\"content\"",
        "\"/%s\"",
        "\"We need both a subject and some content!\"",
        "\"\"",
        "\"text\"",
        "\"Sorry, we can't find that post.\"",
        "\"code\"",
        "\"404\"",
        "'static_post.html'",
        "\"like\"",
        "\"dislike\"",
        "\"like\"",
        "\"dislike\"",
        "\"post_id\"",
        "\"user_id\"",
        "\"post_id\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"post_id\"",
        "\"post_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"comment_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"post_id\"",
        "'/welcome'",
        "'signup.html'",
        "\"SELECT * FROM Users \"",
        "\"ORDER BY created DESC \"",
        "'username'",
        "'password'",
        "'verify'",
        "'email'",
        "'username_error'",
        "'password_error'",
        "'verify_password_error'",
        "\"Please enter a matching password.\"",
        "'email_error'",
        "\"That's not a valid email.\"",
        "'signup.html'",
        "'username_error'",
        "\"That user already exists.\"",
        "'signup.html'",
        "'/welcome'",
        "'welcome.html'",
        "'/signup'",
        "\"\"",
        "'my_posts.html'",
        "'/signup'",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"edit_post\"",
        "\"delete_post\"",
        "\"add_comment\"",
        "\"myposts\"",
        "\"post_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"comment_id\"",
        "\"edit_comment\"",
        "\"delete_comment\"",
        "\"myposts\"",
        "\"post_id\"",
        "'/'",
        "'deletepost.html'",
        "'/%s'",
        "'/signup'",
        "\"post_id\"",
        "\"yes\"",
        "\"/\"",
        "'page'",
        "\"\"",
        "'post_id'",
        "\"\"",
        "'/%s'",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"post_id\"",
        "'/%s'",
        "'/%s'",
        "'edit_post.html'",
        "'/signup'",
        "\"subject\"",
        "\"content\"",
        "\"post_id\"",
        "\"post_id\"",
        "\"\"",
        "\"page\"",
        "\"\"",
        "'/%s'",
        "\"We need both a subject and some content!\"",
        "\"We need both a subject and some content!\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"post_id\"",
        "'/'",
        "\"new_comment.html\"",
        "'/'",
        "'/signup'",
        "\"subject\"",
        "\"content\"",
        "\"post_id\"",
        "\"post_id\"",
        "\"\"",
        "\"page\"",
        "\"\"",
        "\"/%s\"",
        "\"We need both a subject and some content!\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"comment_id\"",
        "'/%s'",
        "'/%s'",
        "'/%s'",
        "'edit_comment.html'",
        "'/signup'",
        "\"subject\"",
        "\"content\"",
        "\"comment_id\"",
        "\"We need both a subject and some content!\"",
        "\"comment_id\"",
        "\"\"",
        "\"page\"",
        "\"\"",
        "'/%s'",
        "\"comment_id\"",
        "'/%s'",
        "'delete_comment.html'",
        "'/%s'",
        "'/%s'",
        "'/signup'",
        "\"comment_id\"",
        "\"yes\"",
        "\"no\"",
        "'page'",
        "\"\"",
        "'post_id'",
        "\"\"",
        "'/%s'",
        "\"\"",
        "'login.html'",
        "'/welcome'",
        "'username'",
        "'password'",
        "\"attempting login\"",
        "'username is %s'",
        "'password is %s'",
        "'/welcome'",
        "\"login failed\"",
        "\"Invalid Login\"",
        "'/blog'",
        "'/blog'",
        "'/blog'",
        "'/newpost'",
        "'/(\\d+)'",
        "'/signup'",
        "'/welcome'",
        "'/login'",
        "'/logout'",
        "'/'",
        "'/myposts'",
        "'/deletepost'",
        "'/editpost'",
        "'/newcomment'",
        "'/editcomment'",
        "'/deletecomment'"
    ],
    "variables": [
        "template_dir",
        "jinja_env",
        "secret",
        "BASE_LIKES",
        "t",
        "val",
        "salt",
        "hash",
        "salt",
        "USER_RE",
        "PASS_RE",
        "EMAIL_RE",
        "salt",
        "hsh",
        "salt",
        "subject",
        "content",
        "created",
        "modified",
        "created_user_id",
        "user",
        "post",
        "error",
        "error",
        "error",
        "like",
        "has_disliked",
        "error",
        "error",
        "dislike",
        "has_liked",
        "likes",
        "count",
        "dislikes",
        "count",
        "likes_with_post_id",
        "has_liked",
        "has_liked",
        "dislikes_with_post_id",
        "has_disliked",
        "has_disliked",
        "likes",
        "dislikes",
        "subject",
        "content",
        "created_user_id",
        "related_post_id",
        "created",
        "comment",
        "comment_id",
        "comment",
        "user",
        "comment_renderer",
        "comment_renderer",
        "post_id",
        "user_id",
        "post_id",
        "user_id",
        "name",
        "password",
        "email",
        "created",
        "user",
        "user",
        "users_posts",
        "posts",
        "posts",
        "t",
        "cookie_val",
        "cookie_val",
        "previous_page",
        "previous_page",
        "data",
        "uid",
        "user",
        "posts",
        "data",
        "error",
        "error",
        "comment_id",
        "subject",
        "content",
        "post",
        "error",
        "post",
        "error",
        "data",
        "error",
        "error",
        "comment_id",
        "users",
        "username",
        "password",
        "verify_password",
        "email",
        "are_errors",
        "are_errors",
        "are_errors",
        "are_errors",
        "hashed_password",
        "are_errors",
        "user",
        "user",
        "user",
        "posts",
        "data",
        "comment_id",
        "post_id",
        "previous_page",
        "post",
        "post_id",
        "resp_yes",
        "previous_page",
        "previous_page",
        "post",
        "post_id",
        "previous_page",
        "post",
        "subject",
        "content",
        "subject",
        "content",
        "post_id",
        "previous_page",
        "post",
        "post",
        "subject",
        "post",
        "content",
        "error",
        "error",
        "post_id",
        "post",
        "subject",
        "content",
        "post_id",
        "previous_page",
        "error",
        "comment_id",
        "previous_page",
        "comment",
        "subject",
        "content",
        "subject",
        "content",
        "comment_id",
        "previous_page",
        "error",
        "comment",
        "comment",
        "subject",
        "comment",
        "content",
        "comment_id",
        "previous_page",
        "comment",
        "comment_id",
        "resp_yes",
        "resp_no",
        "previous_page",
        "comment",
        "username",
        "password",
        "user",
        "app"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "Copyright 2007 Google Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "Helper functions",
        "Deprecated cookie functions",
        "User functions",
        "Keys",
        "Database models",
        "Get associated post",
        "Page handlers",
        "Create users db",
        "Get user info",
        "Check the user's input",
        "hash the password as soon as we decide it's valid",
        "Check if the username entered already exists",
        "Create the user in the db",
        "If the user came from the post page, redirect to the front page",
        "delete previous cookies",
        "delete previous cookies"
    ],
    "docstrings": [
        "\"\"\"Returns True if the username is valid and False otherwise.\"\"\"",
        "\"\"\"\n    If the username is invalid, returns an error related to how it's\n    invalid. Otherwise, does nothing.\n    \"\"\"",
        "\"\"\"\n    If the password is invalid, returns an error related to how it's\n    invalid. Otherwise, does nothing.\n    \"\"\"",
        "\"\"\"\n    Database model for BlogPosts. Also contains many related functions\n    that interact with other databases. Does the bulk of heavy lifting\n    in terms of rendering blog posts, likes, and dislikes.\n    \"\"\"",
        "\"\"\"\n        Renders the page. Passes through user and is_static for\n        other renderers to use.\n        \"\"\"",
        "\"\"\"Returns the BlogPost entity with the given post_id\"\"\"",
        "\"\"\"\n        Returns the username of the given user_id that created the\n        given post_id.\n        \"\"\"",
        "\"\"\"Returns the comments with the given post id.\"\"\"",
        "\"\"\"Returns the top three comments for the given post_id.\"\"\"",
        "\"\"\"\n        Takes the results of posting Like, Dislike, user_id, and\n        post_id. Adds a like or dislike depending which exists in\n        what's passed. Returns a dictionary composed of error and\n        post id.\n        \"\"\"",
        "\"\"\"\n        Returns the filter for likes associated with the post. Use\n        `.run()` on the result.\n        \"\"\"",
        "\"\"\"\n        Returns the filter for dislikes associated with the post. Use\n        `.run()` on the result.\n        \"\"\"",
        "\"\"\"Returns the number of likes.\"\"\"",
        "\"\"\"Returns the number dislikes.\"\"\"",
        "\"\"\"\n        Returns True if the given user has created a like for the\n        given post and False otherwise.\n        \"\"\"",
        "\"\"\"\n        Returns True if the given user has created a dislike the given\n        post and False otherwise.\n        \"\"\"",
        "\"\"\"\n        Returns a Likes entity with the given user_id for the\n        given post_id.\n        \"\"\"",
        "\"\"\"\n        Returns a Dislikes entity with the given user_id for the\n        given post_id.\n        \"\"\"",
        "\"\"\"\n        Renders the like for the post. If disabled is True, renders\n        the disabled version.\n        \"\"\"",
        "\"\"\"\n        Renders the dislike for the post. If disabled is True, renders\n        the disabled version.\n        \"\"\"",
        "\"\"\"\n    Database model for Comments. Also contains several related\n    functions, some of which interact with other models.\n    \"\"\"",
        "\"\"\"Returns the Comments entity with the given comment_id.\"\"\"",
        "\"\"\"Adds a comment for the given post.\"\"\"",
        "\"\"\"\n        Gets the creator username of the given comment id. If no\n        comment ID is given, attempts to use the current comment's\n        created_user_id.\n        \"\"\"",
        "\"\"\"\n        Renders the given comment for the given post. If no comment ID\n        is given, attempts to render the current comment. If small is\n        True renders the condensed version for pages with multipl\n        posts.\n        \"\"\"",
        "\"\"\"\n    Database model for Likes. Simply contains likes and is called\n    by other classes.\n    \"\"\"",
        "\"\"\"\n    Database model for Dislikes. Simply contains dislikes and is\n    called by other classes.\n    \"\"\"",
        "\"\"\"Users database model.\"\"\"",
        "\"\"\"Returns the user with the given id.\"\"\"",
        "\"\"\"\n        Returns the user with the given username. It's preferred to\n        use id when possible.\n        \"\"\"",
        "\"\"\"\n        Calls registering the given data as a User entity. Still need\n        to put() after calling.\n        \"\"\"",
        "\"\"\"Validates user's password given the username.\"\"\"",
        "\"\"\"\n        Returns a string version of the user_id. Used for comparing\n        strings in html.\n        \"\"\"",
        "\"\"\"Returns the posts of the given user_id.\"\"\"",
        "\"\"\"\n        Renders the page editor. For new posts or comments and post\n        or comment editing.\n        \"\"\"",
        "\"\"\"Base Handler class. Has writing and rendering basics.\"\"\"",
        "\"\"\"\n    Base class for handling requests. Contains functions that would\n    otherwise be duplicated in individual handlers.\n    \"\"\"",
        "\"\"\"Adds the cookie with the given name and value.\"\"\"",
        "\"\"\"Validates the cookie and returns it's value.\"\"\"",
        "\"\"\"Sets the user's cookie.\"\"\"",
        "\"\"\"Removes the users's cookie.\"\"\"",
        "\"\"\"\n        Checks if there's a previous page cookie set. If so, returns\n        it. Otherwise, returns an empty string.\n        \"\"\"",
        "\"\"\"\n        If edit_post, delete_post, or add_comment exist, will redirect\n        the user to those pages while setting the requisite cookies.\n        Otherwise, does nothing.\n        \"\"\"",
        "\"\"\"\n        If edit_comment or delete_comment exist, will direct the user\n        to those pages while setting the requisite cookies.\n        Otherwise, does nothing.\n        \"\"\"",
        "\"\"\"Gets the data in the post needed for\"\"\"",
        "\"\"\"If user is logged in allows the handler to call the user.\"\"\"",
        "\"\"\"Handler for './blog'. \"\"\"",
        "\"\"\"Gets the 10 most recent posts and sends them blog_front.\"\"\"",
        "\"\"\"Called when the page loads. Calls render_front.\"\"\"",
        "\"\"\"\n        Gets the data sent by the f/e, then checks whether to add\n        likes/dislikes, edit/ delete the post, add/ edit/ delete\n        comments.\n        \"\"\"",
        "\"\"\"Handler for './newpost'.\"\"\"",
        "\"\"\"Renders the new post page.\"\"\"",
        "\"\"\"\n        If the user is logged in renders the new post page. Otherwise\n        redirects the user to sign up.\n        \"\"\"",
        "\"\"\"\n        Takes the subject and content strings. If there's data in\n        both, creates the post and navigates to the static post page.\n        Otherwise, renders the page with the error.\n        \"\"\"",
        "\"\"\"Handler for individual post pages.\"\"\"",
        "\"\"\"\n        Checks that the post exists. If it does, renders the page.\n        If the page does not renders the page with a simple 404\n        message.\n        \"\"\"",
        "\"\"\"Renders static page on page load.\"\"\"",
        "\"\"\"\n        Gets the posted data, then check whether the to add a like/\n        dislike, edit/ delete the post, or add/ edit/ delete a comment.\n        \"\"\"",
        "\"\"\"Handler for './signup'.\"\"\"",
        "\"\"\"\n        Checks if the user is logged in. If so, redirects to the\n        welcome page. Otherwise, renders the signup form.\n        \"\"\"",
        "\"\"\"\n        Gets all the users. Then validates the inputs. If they're\n        valid, create the user and redirect the user to the welcome\n        page. Otherwise, render the page with errors.\n        \"\"\"",
        "\"\"\"Handler for './welcome'.\"\"\"",
        "\"\"\"\n        Checks whether the user is logged in. If so, renders the\n        welcome page. If not, redirects the user to the signup page.\n        \"\"\"",
        "\"\"\"Handler for './myposts'.\"\"\"",
        "\"\"\"Gets the users posts, then renders the my posts page.\"\"\"",
        "\"\"\"\n        Checks if the user is logged in. If so, renders the my posts\n        page. Otherwise, redirects to the signup page.\n        \"\"\"",
        "\"\"\"\n        Gets the posted data, then checks whether to edit/delete a\n        post, or add/ edit/ delete a comment.\n        \"\"\"",
        "\"\"\"Handler for './deletepost'.\"\"\"",
        "\"\"\"\n        Renders the delete post page.\n\n        Checks if the post exists. If it does, checks if the user\n        created the post. If so, renders the delete post page.\n        Otherwise, redirects to the previous page.\n        \"\"\"",
        "\"\"\"\n        Checks if the user is logged in. If so, renders the delete\n        post page. Otherwise, redirects the user to signup page.\n        \"\"\"",
        "\"\"\"\n        Gets the post data, then checks if the response was yes. If\n        so, deletes the page. Otherwise redirects to the previous page.\n        \"\"\"",
        "\"\"\"Handler for './editpost'.\"\"\"",
        "\"\"\"\n        Renders the edit post page.\n\n        Gets the post id, then checks that,\n        if subject or content hasn't been sent. If either hasn't, then\n        checks if the post id has data. If it does, checks that is was\n        created by the current user. If it wasn't, then the user is\n        redirected to the previous page. If it was, then sets the\n        subject and content for the post and renders the page.\n        Otherwise, redirects the user to previous page.\n        \"\"\"",
        "\"\"\"\n        For the first time rendering the page. Checks if the user is\n        logged in. If so, renders the edit page. Otherwise, redirects\n        to the signup page.\n        \"\"\"",
        "\"\"\"\n        Gets the posted/ cookie data, then checks if both subject\n        and content have data. If they do, edits the post, deletes\n        the cookies, and redirects to the previous page. Otherwise,\n        renders the page with the error.\n        \"\"\"",
        "\"\"\"Handler for the './newcomment' page.\"\"\"",
        "\"\"\"Renders the new comment page with the given content.\"\"\"",
        "\"\"\"\n        Checks if the user is signed it. If so, renders the new\n        comment page. Otherwise, redirects to the sign up page.\n        \"\"\"",
        "\"\"\"\n        Gets the submitted data, then checks if both subject and\n        content exist. If so, adds the comment, deletes the cookies,\n        and redirects to the previous page. Otherwise, renders the\n        page with errors.\n        \"\"\"",
        "\"\"\"Handler for the './editcomment' page.\"\"\"",
        "\"\"\"\n        Renders the edit comments page.\n\n        Checks if theres a subject\n        or content. If neither then checks if there's a comment id.\n        If there's not, redirects to the the previous page. If there\n        is, gets the comment from the db, then checks that the user\n        created the comment. If not, redirects to the previous page.\n        If so, sets the comment subject and content, then renders\n        the edit comment page.\n        \"\"\"",
        "\"\"\"\n        Checks if the user is signed it. If so, renders the edit\n        comment page. Otherwise, redirects to the sign up page.\n        \"\"\"",
        "\"\"\"\n        Gets the submitted data, then checks if subject and content\n        have data. If so, edits the comment, delets the comment_id\n        and page cookies, then redirects to the previous page.\n        Otherwise, renders the page with the error.\n        \"\"\"",
        "\"\"\"Handler for './deletecomment' page.\"\"\"",
        "\"\"\"\n        Renders the delete comment page.\n\n        Gets the cookies, checks that the comment with the comment id\n        exists and was created by the user. If it was, renders the\n        delete comment page. Otherwise, redirects the user to the\n        previous page.\n        \"\"\"",
        "\"\"\"\n        Checks if the user is logged in. If so, renders the delete\n        comment page. Otherwise, renders the delete comment page.\n        \"\"\"",
        "\"\"\"Handler for the login page, './login'.\"\"\"",
        "\"\"\"Renders the login page.\"\"\"",
        "\"\"\"\n        Checks if the user is logged in. If so, redirects to the\n        welcome page. Otherwise, renders the login page.\n        \"\"\"",
        "\"\"\"\n        Gets the posted data, then attempts to log the user in. If\n        it's successful, redirect the user to the welcome page.\n        Otherwise, render the login page with the error.\n        \"\"\"",
        "\"\"\"\n    Handler for './logout'. Deletes the user cookie and redirects to\n    the front page.\n    \"\"\"",
        "\"\"\"\n    Handler for the base url. Redirects the user to the blog\n    front page.\n    \"\"\""
    ],
    "functions": [
        "log",
        "render_str",
        "make_salt",
        "make_secure_val",
        "check_secure_val",
        "make_user_id_hash",
        "validate_user_id",
        "render_post",
        "is_valid_username",
        "get_username_error",
        "is_valid_password",
        "get_password_error",
        "is_valid_email",
        "make_pw_hash",
        "validate_password",
        "blog_key",
        "users_key",
        "comments_key",
        "likes_key",
        "dislikes_key",
        "render",
        "by_id",
        "get_post_creator_name",
        "get_post_comments",
        "get_top_comments",
        "add_like_or_dislike",
        "get_post_likes",
        "get_post_dislikes",
        "get_num_likes",
        "get_num_dislikes",
        "has_user_liked_post",
        "has_user_disliked_post",
        "get_like_by_user",
        "get_dislike_by_user",
        "render_like",
        "render_dislike",
        "by_id",
        "add_comment",
        "get_creator_username",
        "render_comment",
        "by_id",
        "by_name",
        "register",
        "user_login",
        "user_id_str",
        "get_users_posts",
        "render_post_editor",
        "write",
        "render_str",
        "render",
        "set_secure_cookie",
        "read_secure_cookie",
        "page_login",
        "logout",
        "get_previous_page",
        "edit_post_redirect",
        "edit_comment_redirect",
        "get_post_data",
        "initialize",
        "render_front",
        "get",
        "post",
        "render_new_post",
        "get",
        "post",
        "render_static_page",
        "get",
        "post",
        "get",
        "post",
        "get",
        "render_my_posts",
        "get",
        "post",
        "render_delete_post_page",
        "get",
        "post",
        "render_edit_page",
        "get",
        "post",
        "render_new_comment_page",
        "get",
        "post",
        "render_edit_comment",
        "get",
        "post",
        "render_delete_comment_page",
        "get",
        "post",
        "render_login_page",
        "get",
        "post",
        "get",
        "get"
    ],
    "classes": [
        "BlogPosts",
        "Comments",
        "Likes",
        "Dislikes",
        "Users",
        "Handler",
        "BlogHandler",
        "BlogFrontPageHandler",
        "NewPostPageHandler",
        "StaticPostPageHandler",
        "UserSignUpHandler",
        "WelcomePageHandler",
        "MyPostsPageHandler",
        "DeletePostPage",
        "EditPageHandler",
        "NewCommentPageHandler",
        "EditCommentHandler",
        "DeleteCommentPageHandler",
        "LoginPageHandler",
        "LogoutHandler",
        "HomePageHandler"
    ]
}