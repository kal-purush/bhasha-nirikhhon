{
    "identifiers": [
        "unittest",
        "unittest",
        "TestCase",
        "Concatenate",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "Concatenate",
        "first_value",
        "second_value",
        "third_value",
        "assertEqual",
        "actual_value",
        "expected_value",
        "unittest",
        "main"
    ],
    "literals": [
        "\"aaaa\"",
        "\"a\"",
        "\"b\"",
        "'ab'",
        "\"A\"",
        "\"B\"",
        "'AB'",
        "\"a\"",
        "\"B\"",
        "'aB'",
        "\"A\"",
        "\"b\"",
        "'Ab'",
        "\"a\"",
        "\"1\"",
        "'a1'",
        "\"1\"",
        "\"A\"",
        "'1A'",
        "\"1\"",
        "\"!\"",
        "'1!'",
        "\"A\"",
        "\"!\"",
        "'A!'",
        "\"A\"",
        "'A2'",
        "\"!\"",
        "'!2'",
        "\"A\"",
        "'A2.1'",
        "\"!\"",
        "'!2.1'",
        "\"!\"",
        "\"\"",
        "'!'",
        "\"a\"",
        "\"\"",
        "'a'",
        "\"\"",
        "'2'",
        "\"a\"",
        "\"a\"",
        "\"1\"",
        "\"A\"",
        "\"!\"",
        "\"1A!\"",
        "'__main__'"
    ],
    "variables": [
        "Concatenate",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "actual_value",
        "expected_value",
        "first_value",
        "second_value",
        "third_value",
        "actual_value",
        "expected_value"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"This module aims to test Concatenate() method.\nIt is just the first version, I did not include yet the any exceptions.\"\"\""
    ],
    "functions": [
        "test_concatenate_existence",
        "test_concatenate_two_lowercase_letters",
        "test_concatenate_two_uppercase_letters",
        "test_concatenate_lowercase_letter_and_uppercase_letter",
        "test_concatenate_uppercase_letter_and_lowercase_letter",
        "test_concatenate_letter_and_string",
        "test_concatenate_string_and_letter",
        "test_concatenate_string_and_special_character",
        "test_concatenate_letter_and_special_character",
        "test_concatenate_letter_and_integer",
        "test_concatenate_special_character_and_integer",
        "test_concatenate_letter_and_float",
        "test_concatenate_special_character_and_float",
        "test_concatenate_special_character_and_empty_value",
        "test_concatenate_letter_and_empty_value",
        "test_concatenate_empty_value_and_integer",
        "test_concatenate_string_and_null_atr",
        "test_concatenate_three_strings"
    ],
    "classes": [
        "ConcatenationTests"
    ]
}