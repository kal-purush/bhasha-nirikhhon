{
    "identifiers": [
        "sklearn",
        "decomposition",
        "PCA",
        "PCA",
        "nothing",
        "nothing",
        "nothing",
        "data",
        "PCA",
        "n_component",
        "len",
        "data",
        "len",
        "data",
        "np",
        "zeros",
        "n_samples",
        "n_features",
        "i",
        "n_samples",
        "j",
        "n_features",
        "training",
        "data",
        "i",
        "j",
        "model",
        "fit",
        "training",
        "events",
        "eigenvectors",
        "model",
        "components_",
        "eigenvalues",
        "mean",
        "model",
        "mean_",
        "data",
        "data",
        "sample",
        "model",
        "NotTrainedException",
        "validation_data",
        "sample",
        "model",
        "mean_",
        "fun",
        "events",
        "NoSignalException",
        "events",
        "fun",
        "kwargs"
    ],
    "literals": [
        "\"trained\"",
        "\"validated\"",
        "\"classified\"",
        "\"sample\"",
        "\"sample\"",
        "\"trained\""
    ],
    "variables": [
        "model",
        "events",
        "model",
        "n_features",
        "n_samples",
        "training",
        "i",
        "j"
    ],
    "comments": [
        "TODO"
    ],
    "docstrings": [
        "\"\"\"\n        data: list of dicts with 'label' and 'sample'\n        \"\"\"",
        "\"\"\"\n        Connect to signal emmited by model \n\n        Signals can be:\n\n        trained: function gets keyword arguments 'eigenvectors', 'eigenvalues', 'mean' and 'data' where each element is dict {'label', 'sample'}\n        validated: function gets keyword argument 'precision', 'accuracy' and 'validation_data' where each element is dict {'label', 'sample'}\n        classified: function with keyword argument 'sample' and 'label' \n        \"\"\""
    ],
    "functions": [
        "train",
        "classify",
        "validate",
        "project",
        "get_eigenvectors",
        "get_mean",
        "connect",
        "nothing"
    ],
    "classes": [
        "NoSignalException",
        "NotTrainedException",
        "PCAModel"
    ]
}