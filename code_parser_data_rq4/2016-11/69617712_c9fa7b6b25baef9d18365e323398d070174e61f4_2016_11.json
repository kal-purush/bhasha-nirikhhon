{
    "identifiers": [
        "parse5",
        "ParsedHtmlDocument",
        "SourceRange",
        "SourcePosition",
        "parse5",
        "parse5",
        "parse5",
        "parse5",
        "parse5",
        "parse5",
        "parse5",
        "parse5",
        "position",
        "_getLocationInfoForPosition",
        "position",
        "location",
        "location",
        "node",
        "parse5",
        "position",
        "node",
        "node",
        "sourceRange",
        "location",
        "_findLocationInChildren",
        "node",
        "position",
        "isPositionInsideRange",
        "position",
        "sourceRange",
        "_findLocationInChildren",
        "node",
        "position",
        "locationInChildren",
        "locationInChildren",
        "getAttributeLocation",
        "node",
        "position",
        "location",
        "attributeLocation",
        "attributeLocation",
        "node",
        "node",
        "isPositionInsideRange",
        "position",
        "endTagRange",
        "node",
        "startTagRange",
        "isPositionInsideRange",
        "position",
        "startTagRange",
        "position",
        "startTagRange",
        "position",
        "startTagRange",
        "node",
        "node",
        "node",
        "parse5",
        "node",
        "isPositionInsideRange",
        "position",
        "sourceRange",
        "node",
        "parse5",
        "node",
        "node",
        "parent",
        "parent",
        "node",
        "parent",
        "parent",
        "node",
        "node",
        "isPositionInsideRange",
        "position",
        "sourceRange",
        "startTagRange",
        "endTagRange",
        "comparePositionAndRange",
        "position",
        "startTagRange",
        "comparePositionAndRange",
        "position",
        "endTagRange",
        "node",
        "node",
        "node",
        "position",
        "sourceRange",
        "node",
        "node",
        "node",
        "position",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "position",
        "position",
        "position",
        "includeEdges",
        "position",
        "position",
        "position",
        "includeEdges",
        "position",
        "position",
        "node",
        "parse5",
        "position",
        "child",
        "node",
        "_getLocationInfoForPosition",
        "child",
        "position",
        "result",
        "result",
        "node",
        "parse5",
        "node",
        "_getLocationInfoForPosition",
        "content",
        "position",
        "result",
        "result",
        "position",
        "includeEdges",
        "comparePositionAndRange",
        "position",
        "includeEdges",
        "location",
        "parse5",
        "parse5",
        "location",
        "parse5",
        "location",
        "location",
        "parse5",
        "parse5",
        "node",
        "parse5",
        "position",
        "location",
        "parse5",
        "isElementLocationInfo",
        "location",
        "location",
        "location",
        "attrName",
        "attrs",
        "node",
        "attrName",
        "isPositionInsideRange",
        "position",
        "isPositionInsideRange",
        "position",
        "node",
        "attrName",
        "attrName",
        "node",
        "attrName",
        "node"
    ],
    "literals": [
        "'parse5'",
        "'polymer-analyzer/lib/html/html-document'",
        "'polymer-analyzer/lib/model/model'",
        "'./editor-service'",
        "'tagName'",
        "'endTag'",
        "'attribute'",
        "string",
        "'attributeValue'",
        "string",
        "'text'",
        "'scriptTagContents'",
        "'styleTagContents'",
        "'comment'",
        "'text'",
        "'endTag'",
        "''",
        "'tagName'",
        "'attribute'",
        "'comment'",
        "'script'",
        "'scriptTagContents'",
        "'style'",
        "'styleTagContents'",
        "'text'",
        "'script'",
        "'scriptTagContents'",
        "'style'",
        "'styleTagContents'",
        "'text'",
        "'tagName'",
        "'attribute'",
        "'template'",
        "'startTag'",
        "'endTag'",
        "'attrs'",
        "'attributeValue'",
        "'attribute'"
    ],
    "variables": [
        "location",
        "sourceRange",
        "location",
        "locationInChildren",
        "attributeLocation",
        "startTagRange",
        "endTagRange",
        "parent",
        "result",
        "content",
        "result",
        "attrs"
    ],
    "comments": [
        "In the tagname of a start tag.",
        "In an end tag.",
        "In the attributes section of a start tag. Maybe in an attribute name.",
        "The attribute name that we're hovering over, if any.",
        "The element whose start tag we're in.",
        "In the value of an attribute of a start tag.",
        "In a text node.",
        "In the text of a <script>",
        "In the text of a <style>",
        "In a <!-- comment -->",
        "Eh, we're probably in a text node.",
        "definitively not in this node or any of its children",
        "If we're in the end tag... we're in the end tag.",
        "If the cursor is in the \"<my-elem\" part of the start tag.",
        "Otherwise we're in the start tag, but not in the tag name or any",
        "particular attribute, but definitely in the attributes section.",
        "The edges of a comment aren't part of the comment.",
        "Usually we want to include the edges of a range as part",
        "of the thing, but sometimes, e.g. for start and end tags,",
        "we'd rather not."
    ],
    "docstrings": [
        "* Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt",
        "* Given a position and an HTML document, try to describe what new text typed\n * at the given position would be.\n *\n * Where possible we try to return the ASTNode describing that position, but\n * sometimes there does not actually exist one. (for a simple case, the empty\n * string should be interpreted as a text node, but there is no text node in\n * an empty document, but there would be after the first character was typed).",
        "* An HTML5 parser must hallucinate certain nodes, even if they don't exist\n   * in the original source text. e.g. <html> or <body>. So we might have\n   * elements that have no sourceRange (because they don't exist in the text)\n   * but they do have children that do. So we should check those children.",
        "* This is tricky. Consider the position inside an empty element, i.e.\n     * here:\n     *    <script>|</script>.\n     *\n     * You can be between the start and end tags, but there won't be a text\n     * node to attach to, but if you started typeing, there would be, so we\n     * want to treat you as though you are.",
        "* Ok, we're in this node, we're not in any of its children, but we're not\n     * obviously in any attribute, tagname, start tag, or end tag. We might be\n     * part of a unclosed tag in a mostly empty document. parse5 doesn't give\n     * us much explicit signal in this case, but we can kinda infer it from the\n     * tagName.",
        "* If the position is inside the range, returns 0. If it comes before the range,\n * it returns -1. If it comes after the range, it returns 1.",
        "* If the position is inside of the node's attributes section, return the\n * correct LocationResult.",
        "* TODO(rictic): upstream to @types the fact that regular locations (not just\n   * element locations) can have attrs sometimes."
    ],
    "functions": [
        "getLocationInfoForPosition",
        "_getLocationInfoForPosition",
        "comparePositionAndRange",
        "_findLocationInChildren",
        "isPositionInsideRange",
        "isElementLocationInfo",
        "getAttributeLocation"
    ],
    "classes": []
}