{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "unicode_literals",
        "os",
        "sys",
        "sys",
        "path",
        "append",
        "os",
        "getenv",
        "pylab",
        "plt",
        "numpy",
        "np",
        "scipy",
        "sparse",
        "matplotlib",
        "mpl",
        "matplotlib",
        "mlab",
        "griddata",
        "matplotlib",
        "ticker",
        "MaxNLocator",
        "matplotlib",
        "patches",
        "Ellipse",
        "scipy",
        "sparse",
        "coo_matrix",
        "scipy",
        "signal",
        "convolve2d",
        "convolve",
        "gaussian",
        "copy",
        "deepcopy",
        "re",
        "faststats",
        "sys",
        "version_info",
        "PY3",
        "methodcaller",
        "methodcaller",
        "xrange",
        "itertools",
        "izip",
        "methodcaller",
        "methodcaller",
        "unicode",
        "matplotlib",
        "get_backend",
        "pylab",
        "gcf",
        "get_backend",
        "lower",
        "gcf",
        "set_tight_layout",
        "plt",
        "tight_layout",
        "ax",
        "minorticks",
        "matplotlib",
        "ticker",
        "AutoMinorLocator",
        "pylab",
        "rcParams",
        "gca",
        "tick_params",
        "minorticks",
        "ax",
        "gca",
        "ax",
        "yaxis",
        "set_minor_locator",
        "AutoMinorLocator",
        "ax",
        "xaxis",
        "set_minor_locator",
        "AutoMinorLocator",
        "tick_params",
        "which",
        "width",
        "rcParams",
        "x",
        "y",
        "x",
        "x",
        "np",
        "zeros",
        "len",
        "dx",
        "dtype",
        "np",
        "zeros",
        "len",
        "y",
        "dtype",
        "xx",
        "xx",
        "dx",
        "dx",
        "yy",
        "yy",
        "y",
        "y",
        "np",
        "concatenate",
        "x",
        "dx",
        "x",
        "xx",
        "x",
        "x",
        "dx",
        "xx",
        "yy",
        "data",
        "vmin",
        "vmax",
        "cmap",
        "plt",
        "cm",
        "Spectral",
        "matplotlib",
        "colors",
        "Normalize",
        "ImportError",
        "matplotlib",
        "colors",
        "normalize",
        "Normalize",
        "vmin",
        "min",
        "data",
        "vmax",
        "max",
        "data",
        "Normalize",
        "vmin",
        "_vmin",
        "vmax",
        "_vmax",
        "plt",
        "cm",
        "ScalarMappable",
        "norm",
        "cNorm",
        "cmap",
        "cmap",
        "scalarMap",
        "to_rgba",
        "data",
        "scalarMap",
        "to_rgba",
        "data",
        "colors",
        "scalarMap",
        "ax",
        "dpi",
        "transparent",
        "matplotlib",
        "transforms",
        "Bbox",
        "matplotlib",
        "image",
        "io",
        "BytesIO",
        "StringIO",
        "ImportError",
        "cStringIO",
        "StringIO",
        "ImportError",
        "StringIO",
        "StringIO",
        "ax",
        "plt",
        "gca",
        "ax",
        "figure",
        "ax",
        "axis",
        "t",
        "get_visible",
        "t",
        "ax",
        "texts",
        "k",
        "ax",
        "spines",
        "ax",
        "spines",
        "k",
        "get_visible",
        "ax",
        "spines",
        "k",
        "set_visible",
        "t",
        "ax",
        "texts",
        "t",
        "set_visible",
        "ax",
        "xaxis",
        "get_visible",
        "ax",
        "yaxis",
        "get_visible",
        "ax",
        "axesPatch",
        "get_visible",
        "ax",
        "axesPatch",
        "set_visible",
        "ax",
        "xaxis",
        "set_visible",
        "ax",
        "yaxis",
        "set_visible",
        "ax",
        "bbox",
        "extents",
        "fig",
        "dpi",
        "StringIO",
        "plt",
        "savefig",
        "sio",
        "format",
        "dpi",
        "dpi",
        "transparent",
        "transparent",
        "bbox_inches",
        "Bbox",
        "extents",
        "extents",
        "sio",
        "seek",
        "image",
        "imread",
        "sio",
        "ax",
        "imshow",
        "im",
        "extent",
        "axlim",
        "aspect",
        "interpolation",
        "k",
        "ax",
        "spines",
        "ax",
        "spines",
        "k",
        "set_visible",
        "_sp",
        "k",
        "t",
        "v",
        "ax",
        "texts",
        "_txt_vis",
        "t",
        "set_visible",
        "v",
        "ax",
        "axesPatch",
        "set_visible",
        "_patch",
        "ax",
        "xaxis",
        "set_visible",
        "_xax",
        "ax",
        "yaxis",
        "set_visible",
        "_yax",
        "plt",
        "isinteractive",
        "plt",
        "draw",
        "ax",
        "x",
        "xerr",
        "bins",
        "normed",
        "step",
        "kwargs",
        "scipy",
        "integrate",
        "len",
        "x",
        "len",
        "xerr",
        "np",
        "asarray",
        "x",
        "astype",
        "np",
        "asarray",
        "xerr",
        "astype",
        "bins",
        "hasattr",
        "bins",
        "_x",
        "_xerr",
        "min",
        "_x",
        "_xerr",
        "max",
        "M",
        "m",
        "m",
        "dx",
        "M",
        "dx",
        "bins",
        "bins",
        "np",
        "linspace",
        "m",
        "M",
        "N",
        "bins",
        "bins",
        "v",
        "mu",
        "sig",
        "np",
        "sqrt",
        "np",
        "pi",
        "sig",
        "np",
        "exp",
        "v",
        "mu",
        "sig",
        "norm_pdf",
        "integrate",
        "simps",
        "norm_pdf",
        "v",
        "np",
        "array",
        "normal",
        "_xp",
        "xk",
        "xerrk",
        "xk",
        "xerrk",
        "_x",
        "_xerr",
        "sum",
        "axis",
        "normed",
        "_yp",
        "integrate",
        "simps",
        "_yp",
        "_xp",
        "step",
        "steppify",
        "_xp",
        "_yp",
        "_xp",
        "_yp",
        "x",
        "xerr",
        "bins",
        "normed",
        "nsample",
        "step",
        "kwargs",
        "hist_with_err",
        "x",
        "xerr",
        "bins",
        "bins",
        "normed",
        "normed",
        "step",
        "step",
        "kwargs",
        "np",
        "empty",
        "nsample",
        "len",
        "y0",
        "dtype",
        "y0",
        "k",
        "nsample",
        "np",
        "random",
        "randint",
        "len",
        "x",
        "len",
        "x",
        "hist_with_err",
        "x",
        "idx",
        "xerr",
        "idx",
        "bins",
        "bins",
        "normed",
        "normed",
        "step",
        "step",
        "kwargs",
        "x0",
        "yn",
        "_x",
        "_xerr",
        "bins",
        "margin",
        "bins",
        "hasattr",
        "bins",
        "_x",
        "_xerr",
        "min",
        "_x",
        "_xerr",
        "max",
        "M",
        "m",
        "m",
        "margin",
        "dx",
        "M",
        "margin",
        "dx",
        "bins",
        "bins",
        "np",
        "linspace",
        "m",
        "M",
        "N",
        "bins",
        "bins",
        "_xp",
        "x",
        "y",
        "levels",
        "bins",
        "threshold",
        "log_counts",
        "histogram2d_args",
        "plot_args",
        "contour_args",
        "ax",
        "ax",
        "plt",
        "gca",
        "np",
        "histogram2d",
        "x",
        "y",
        "histogram2d_args",
        "log_counts",
        "np",
        "log10",
        "H",
        "np",
        "log10",
        "threshold",
        "np",
        "asarray",
        "levels",
        "levels",
        "size",
        "np",
        "linspace",
        "threshold",
        "H",
        "max",
        "levels",
        "xbins",
        "xbins",
        "ybins",
        "ybins",
        "np",
        "argmin",
        "levels",
        "ax",
        "contour",
        "H",
        "T",
        "levels",
        "i_min",
        "i_min",
        "linewidths",
        "extent",
        "extent",
        "outline",
        "allsegs",
        "ax",
        "contourf",
        "H",
        "T",
        "levels",
        "extent",
        "extent",
        "contour_args",
        "np",
        "hstack",
        "x",
        "y",
        "matplotlib",
        "path",
        "Path",
        "Path",
        "outer_poly",
        "contains_points",
        "X",
        "matplotlib",
        "nxutils",
        "nx",
        "nx",
        "points_inside_poly",
        "X",
        "outer_poly",
        "X",
        "points_inside",
        "ax",
        "plot",
        "Xplot",
        "Xplot",
        "zorder",
        "plot_args",
        "IndexError",
        "ax",
        "plot",
        "x",
        "y",
        "zorder",
        "plot_args",
        "f",
        "precision",
        "delimiter",
        "precision",
        "format",
        "f",
        "float_str",
        "float_str",
        "split",
        "delimiter",
        "format",
        "exponent",
        "float_str",
        "fontSize",
        "lineWidth",
        "labelSize",
        "tickmajorsize",
        "tickminorsize",
        "figsize",
        "pylab",
        "rc",
        "rcParams",
        "labelSize",
        "fontSize",
        "rc",
        "figsize",
        "figsize",
        "rc",
        "linewidth",
        "lineWidth",
        "lineWidth",
        "rc",
        "size",
        "fontSize",
        "family",
        "weight",
        "rc",
        "linewidth",
        "lineWidth",
        "labelsize",
        "labelSize",
        "rc",
        "borderpad",
        "markerscale",
        "fancybox",
        "rc",
        "usetex",
        "rc",
        "aspect",
        "rc",
        "useafm",
        "fonttype",
        "tickmajorsize",
        "tickminorsize",
        "tickmajorsize",
        "tickminorsize",
        "where",
        "ax",
        "ax",
        "plt",
        "gca",
        "where",
        "where",
        "where",
        "sk",
        "set_color",
        "k",
        "sk",
        "ax",
        "spines",
        "items",
        "k",
        "_w",
        "_w",
        "_w",
        "ax",
        "xaxis",
        "set_ticks_position",
        "_w",
        "ax",
        "xaxis",
        "set_ticks_position",
        "_w",
        "ax",
        "xaxis",
        "set_ticks_position",
        "_w",
        "_w",
        "ax",
        "yaxis",
        "set_ticks_position",
        "_w",
        "ax",
        "yaxis",
        "set_ticks_position",
        "_w",
        "ax",
        "yaxis",
        "set_ticks_position",
        "plt",
        "draw_if_interactive",
        "fig",
        "ax",
        "top",
        "right",
        "left",
        "bottom",
        "fig",
        "ax",
        "plt",
        "gcf",
        "axes",
        "fig",
        "fig",
        "axes",
        "ax",
        "ax",
        "ax_i",
        "axes",
        "side",
        "ax_i",
        "spines",
        "side",
        "set_visible",
        "locals",
        "side",
        "which",
        "delta",
        "where",
        "ax",
        "ax",
        "plt",
        "gca",
        "which",
        "which",
        "which",
        "ax",
        "xaxis",
        "get_scale",
        "ax",
        "yaxis",
        "get_scale",
        "ax",
        "xaxis",
        "get_label",
        "ax",
        "yaxis",
        "get_label",
        "wk",
        "_w",
        "ax",
        "spines",
        "wk",
        "set_position",
        "where",
        "delta",
        "ax",
        "set_xscale",
        "scales",
        "ax",
        "set_yscale",
        "scales",
        "ax",
        "xaxis",
        "set_label",
        "lbls",
        "ax",
        "yaxis",
        "set_label",
        "lbls",
        "plt",
        "draw_if_interactive",
        "MaxNLocator",
        "nbins",
        "steps",
        "kwargs",
        "MaxNLocator",
        "nbins",
        "nbins",
        "steps",
        "steps",
        "kwargs",
        "left",
        "bottom",
        "right",
        "top",
        "wspace",
        "hspace",
        "plt",
        "subplots_adjust",
        "left",
        "bottom",
        "right",
        "top",
        "wspace",
        "hspace",
        "plt",
        "draw_if_interactive",
        "xval",
        "yval",
        "ax",
        "mode",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "mode",
        "xval",
        "ax",
        "xaxis",
        "set_major_locator",
        "MaxNLocator",
        "xval",
        "kwargs",
        "yval",
        "ax",
        "yaxis",
        "set_major_locator",
        "MaxNLocator",
        "yval",
        "kwargs",
        "mode",
        "xval",
        "ax",
        "xaxis",
        "set_major_locator",
        "AutoLocator",
        "xval",
        "kwargs",
        "yval",
        "ax",
        "yaxis",
        "set_major_locator",
        "AutoLocator",
        "yval",
        "kwargs",
        "plt",
        "draw_if_interactive",
        "x",
        "y",
        "bins",
        "weights",
        "reduce_w",
        "NULL",
        "reinterp",
        "bins",
        "bins",
        "weights",
        "np",
        "ones",
        "x",
        "size",
        "reduce_w",
        "np",
        "sum",
        "hasattr",
        "reduce_w",
        "np",
        "isfinite",
        "x",
        "np",
        "isfinite",
        "y",
        "np",
        "isfinite",
        "weights",
        "np",
        "asarray",
        "x",
        "finite_inds",
        "np",
        "asarray",
        "y",
        "finite_inds",
        "np",
        "asarray",
        "weights",
        "finite_inds",
        "len",
        "_x",
        "len",
        "_y",
        "len",
        "_y",
        "len",
        "_w",
        "ValueError",
        "format",
        "_x",
        "shape",
        "_y",
        "shape",
        "_w",
        "shape",
        "_x",
        "min",
        "_x",
        "max",
        "_y",
        "min",
        "_y",
        "max",
        "xmax",
        "xmin",
        "nx",
        "ymax",
        "ymin",
        "ny",
        "np",
        "vstack",
        "_x",
        "_y",
        "T",
        "xyi",
        "xmin",
        "ymin",
        "xyi",
        "dx",
        "dy",
        "np",
        "floor",
        "xyi",
        "xyi",
        "T",
        "e",
        "k",
        "xyi",
        "T",
        "k",
        "k",
        "key",
        "d",
        "d",
        "key",
        "append",
        "_w",
        "e",
        "_w",
        "e",
        "np",
        "array",
        "d",
        "keys",
        "T",
        "np",
        "array",
        "reduce_w",
        "v",
        "v",
        "d",
        "values",
        "sparse",
        "coo_matrix",
        "_w",
        "_xyi",
        "shape",
        "nx",
        "ny",
        "reinterp",
        "NULL",
        "_grid",
        "toarray",
        "np",
        "zeros",
        "_grid",
        "shape",
        "dtype",
        "_grid",
        "dtype",
        "B",
        "fill",
        "NULL",
        "x",
        "y",
        "v",
        "_grid",
        "col",
        "_grid",
        "row",
        "_grid",
        "data",
        "v",
        "np",
        "arange",
        "nx",
        "dtype",
        "np",
        "arange",
        "ny",
        "dtype",
        "griddata",
        "_grid",
        "col",
        "astype",
        "_grid",
        "row",
        "astype",
        "_grid",
        "data",
        "xi",
        "yi",
        "interp",
        "reinterp",
        "B",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "dx",
        "dy",
        "data",
        "bins",
        "normed",
        "weights",
        "density",
        "ax",
        "kwargs",
        "np",
        "histogram",
        "data",
        "bins",
        "normed",
        "weights",
        "density",
        "ax",
        "plt",
        "gca",
        "b",
        "b",
        "ax",
        "plot",
        "x",
        "h",
        "kwargs",
        "ax",
        "xaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "spines",
        "side",
        "set_visible",
        "side",
        "_w",
        "wk",
        "ax",
        "spines",
        "wk",
        "set_position",
        "ax",
        "get_ylim",
        "ax",
        "plot",
        "data",
        "max",
        "ylim",
        "np",
        "ones",
        "len",
        "data",
        "color",
        "l",
        "get_color",
        "ax",
        "set_ylim",
        "max",
        "ylim",
        "max",
        "ylim",
        "x",
        "y",
        "ellipse",
        "levels",
        "color",
        "ax",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "faststats",
        "faststats",
        "fastkde",
        "fastkde",
        "x",
        "y",
        "adjust",
        "im",
        "max",
        "np",
        "asarray",
        "levels",
        "plt",
        "contour",
        "im",
        "T",
        "levels",
        "V",
        "origin",
        "extent",
        "e",
        "linewidths",
        "colors",
        "color",
        "ax",
        "plot",
        "x",
        "y",
        "alpha",
        "zorder",
        "rasterized",
        "ellipse",
        "np",
        "vstack",
        "x",
        "y",
        "np",
        "mean",
        "data",
        "axis",
        "np",
        "cov",
        "data",
        "error_ellipse",
        "mu",
        "cov",
        "ax",
        "plt",
        "gca",
        "edgecolor",
        "ls",
        "lw",
        "zorder",
        "mu",
        "cov",
        "ax",
        "factor",
        "kwargs",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "mu",
        "np",
        "linalg",
        "svd",
        "cov",
        "np",
        "degrees",
        "np",
        "arctan2",
        "U",
        "U",
        "Ellipse",
        "xy",
        "x",
        "y",
        "width",
        "np",
        "sqrt",
        "S",
        "factor",
        "height",
        "np",
        "sqrt",
        "S",
        "factor",
        "angle",
        "theta",
        "facecolor",
        "facecolor",
        "edgecolor",
        "edgecolor",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "ax",
        "add_patch",
        "ellipsePlot",
        "ellipsePlot",
        "t",
        "np",
        "sort",
        "t",
        "t",
        "size",
        "np",
        "concatenate",
        "t",
        "t",
        "t",
        "t",
        "t",
        "edges",
        "np",
        "ones",
        "N",
        "np",
        "zeros",
        "N",
        "dtype",
        "np",
        "zeros",
        "N",
        "dtype",
        "K",
        "N",
        "block_length",
        "K",
        "block_length",
        "K",
        "np",
        "cumsum",
        "nn_vec",
        "K",
        "count_vec",
        "np",
        "log",
        "count_vec",
        "np",
        "log",
        "width",
        "fit_vec",
        "fit_vec",
        "best",
        "K",
        "np",
        "argmax",
        "fit_vec",
        "i_max",
        "fit_vec",
        "i_max",
        "np",
        "zeros",
        "N",
        "dtype",
        "N",
        "N",
        "i_cp",
        "ind",
        "ind",
        "last",
        "ind",
        "change_points",
        "i_cp",
        "edges",
        "change_points",
        "x",
        "qlist",
        "x",
        "copy",
        "x",
        "ndim",
        "np",
        "transpose",
        "np",
        "sort",
        "np",
        "transpose",
        "x",
        "np",
        "sort",
        "x",
        "sx",
        "len",
        "sx",
        "q",
        "q",
        "qlist",
        "qlist",
        "quants",
        "IndexError",
        "data",
        "method",
        "ret",
        "np",
        "asarray",
        "data",
        "x",
        "size",
        "x",
        "max",
        "x",
        "min",
        "n",
        "np",
        "log",
        "n",
        "r",
        "k",
        "h",
        "k",
        "np",
        "std",
        "x",
        "n",
        "r",
        "h",
        "h",
        "k",
        "quantiles",
        "x",
        "q",
        "q",
        "n",
        "r",
        "h",
        "h",
        "k",
        "bayesian_blocks",
        "x",
        "np",
        "diff",
        "r",
        "r",
        "sturge",
        "scott",
        "freedman",
        "bayesian",
        "method",
        "lower",
        "m",
        "m",
        "method",
        "lower",
        "ret",
        "lower",
        "s",
        "ret",
        "lower",
        "s",
        "x",
        "ax",
        "error",
        "frac",
        "usehpd",
        "hist",
        "vlines",
        "fill",
        "optbins",
        "args",
        "kwargs",
        "np",
        "ravel",
        "x",
        "ax",
        "plt",
        "gca",
        "hist",
        "get_optbins",
        "x",
        "method",
        "optbins",
        "ret",
        "ax",
        "hist",
        "_x",
        "bins",
        "bins",
        "args",
        "hist",
        "ax",
        "hist",
        "_x",
        "args",
        "hist",
        "b",
        "b",
        "n",
        "argmax",
        "ax",
        "get_ylim",
        "usehpd",
        "hpd",
        "_x",
        "ax",
        "vlines",
        "_hpd",
        "_ylim",
        "_ylim",
        "vlines",
        "k",
        "frac",
        "hpd",
        "_x",
        "k",
        "ax",
        "fill_between",
        "nx",
        "_ylim",
        "_ylim",
        "alpha",
        "len",
        "frac",
        "zorder",
        "fill",
        "ax",
        "vlines",
        "c",
        "ind",
        "_ylim",
        "_ylim",
        "vlines",
        "c",
        "n",
        "argsort",
        "n",
        "n",
        "argsort",
        "cumsum",
        "k",
        "frac",
        "cx",
        "np",
        "where",
        "cn",
        "cn",
        "k",
        "sx",
        "min",
        "sx",
        "max",
        "ax",
        "fill_between",
        "sx",
        "_ylim",
        "_ylim",
        "alpha",
        "len",
        "frac",
        "zorder",
        "fill",
        "theme",
        "ax",
        "ax",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "x",
        "alpha",
        "len",
        "x",
        "n",
        "alpha",
        "np",
        "inf",
        "end",
        "n",
        "x",
        "end",
        "x",
        "start",
        "hi",
        "lo",
        "width",
        "min_width",
        "width",
        "lo",
        "hi",
        "start",
        "end",
        "min_int",
        "IndexError",
        "h",
        "frac",
        "getattr",
        "frac",
        "np",
        "asarray",
        "getPercentileLevels",
        "h",
        "fk",
        "fk",
        "frac",
        "frac",
        "frac",
        "ValueError",
        "frac",
        "h",
        "ravel",
        "val",
        "sort",
        "val",
        "rval",
        "cumsum",
        "cval",
        "cval",
        "cval",
        "cval",
        "np",
        "where",
        "cval",
        "cval",
        "frac",
        "max",
        "rval",
        "ind",
        "val",
        "cval",
        "ind",
        "rval",
        "res",
        "x",
        "y",
        "gridsize",
        "extents",
        "nocorrelation",
        "weights",
        "adjust",
        "np",
        "asarray",
        "x",
        "np",
        "asarray",
        "y",
        "np",
        "squeeze",
        "x",
        "np",
        "squeeze",
        "y",
        "x",
        "size",
        "y",
        "size",
        "ValueError",
        "x",
        "size",
        "weights",
        "np",
        "ones",
        "n",
        "np",
        "squeeze",
        "np",
        "asarray",
        "weights",
        "weights",
        "size",
        "x",
        "size",
        "ValueError",
        "gridsize",
        "np",
        "asarray",
        "np",
        "max",
        "len",
        "x",
        "np",
        "max",
        "len",
        "y",
        "np",
        "ceil",
        "np",
        "log2",
        "gridsize",
        "gridsize",
        "extents",
        "x",
        "min",
        "x",
        "max",
        "y",
        "min",
        "y",
        "max",
        "extents",
        "xmax",
        "xmin",
        "nx",
        "ymax",
        "ymin",
        "ny",
        "np",
        "vstack",
        "x",
        "y",
        "T",
        "xyi",
        "xmin",
        "ymin",
        "xyi",
        "dx",
        "dy",
        "np",
        "floor",
        "xyi",
        "xyi",
        "T",
        "coo_matrix",
        "weights",
        "xyi",
        "shape",
        "nx",
        "ny",
        "toarray",
        "np",
        "cov",
        "xyi",
        "nocorrelation",
        "n",
        "adjust",
        "np",
        "sqrt",
        "np",
        "diag",
        "cov",
        "np",
        "round",
        "scotts_factor",
        "np",
        "pi",
        "std_devs",
        "np",
        "linalg",
        "inv",
        "cov",
        "scotts_factor",
        "np",
        "arange",
        "kern_nx",
        "dtype",
        "np",
        "kern_nx",
        "np",
        "arange",
        "kern_ny",
        "dtype",
        "np",
        "kern_ny",
        "np",
        "meshgrid",
        "xx",
        "yy",
        "np",
        "vstack",
        "xx",
        "flatten",
        "yy",
        "flatten",
        "np",
        "dot",
        "inv_cov",
        "kernel",
        "kernel",
        "np",
        "sum",
        "kernel",
        "axis",
        "np",
        "exp",
        "kernel",
        "kernel",
        "reshape",
        "kern_ny",
        "kern_nx",
        "convolve2d",
        "grid",
        "kernel",
        "mode",
        "boundary",
        "np",
        "pi",
        "cov",
        "scotts_factor",
        "np",
        "linalg",
        "det",
        "norm_factor",
        "n",
        "dx",
        "dy",
        "np",
        "sqrt",
        "norm_factor",
        "grid",
        "norm_factor",
        "grid",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "dx",
        "dy",
        "data",
        "percentiles",
        "weights",
        "weights",
        "np",
        "percentile",
        "data",
        "percentiles",
        "np",
        "equal",
        "weights",
        "all",
        "np",
        "percentile",
        "data",
        "percentiles",
        "np",
        "greater_equal",
        "percentiles",
        "all",
        "ValueError",
        "np",
        "less_equal",
        "percentiles",
        "all",
        "ValueError",
        "np",
        "shape",
        "data",
        "len",
        "data",
        "len",
        "shape",
        "ValueError",
        "len",
        "weights",
        "n",
        "n",
        "len",
        "weights",
        "ValueError",
        "np",
        "greater_equal",
        "weights",
        "all",
        "ValueError",
        "np",
        "asarray",
        "data",
        "dtype",
        "hasattr",
        "percentiles",
        "np",
        "asarray",
        "percentiles",
        "dtype",
        "np",
        "asarray",
        "percentiles",
        "dtype",
        "np",
        "asarray",
        "weights",
        "dtype",
        "len",
        "_p",
        "np",
        "empty",
        "n",
        "dtype",
        "np",
        "empty",
        "n",
        "dtype",
        "np",
        "empty",
        "n",
        "dtype",
        "np",
        "empty",
        "len_p",
        "dtype",
        "np",
        "argsort",
        "_data",
        "np",
        "take",
        "_data",
        "i",
        "axis",
        "sd",
        "np",
        "take",
        "_wt",
        "i",
        "axis",
        "sw",
        "np",
        "add",
        "accumulate",
        "sw",
        "aw",
        "aw",
        "ValueError",
        "aw",
        "sw",
        "aw",
        "np",
        "searchsorted",
        "w",
        "_p",
        "pk",
        "s",
        "p",
        "len_p",
        "spots",
        "_p",
        "s",
        "sd",
        "s",
        "n",
        "sd",
        "n",
        "w",
        "s",
        "p",
        "w",
        "s",
        "w",
        "s",
        "p",
        "w",
        "s",
        "w",
        "s",
        "w",
        "s",
        "sd",
        "s",
        "f1",
        "sd",
        "s",
        "f2",
        "o",
        "x",
        "y",
        "gridsize",
        "extents",
        "nocorrelation",
        "weights",
        "adjust",
        "fastkde",
        "x",
        "y",
        "gridsize",
        "gridsize",
        "extents",
        "extents",
        "nocorrelation",
        "nocorrelation",
        "weights",
        "weights",
        "adjust",
        "adjust",
        "x",
        "y",
        "im",
        "e",
        "dx",
        "dy",
        "property",
        "im",
        "e",
        "dx",
        "dy",
        "im",
        "argmax",
        "im",
        "shape",
        "im",
        "argmax",
        "im",
        "shape",
        "best_idx",
        "dx",
        "e",
        "best_idx",
        "dy",
        "e",
        "best",
        "N",
        "np",
        "exp",
        "np",
        "arange",
        "N",
        "im",
        "flatten",
        "np",
        "argsort",
        "Hflat",
        "Hflat",
        "inds",
        "np",
        "cumsum",
        "Hflat",
        "sm",
        "sm",
        "i",
        "v0",
        "V",
        "Hflat",
        "sm",
        "v0",
        "Hflat",
        "np",
        "sort",
        "V",
        "frac",
        "getPercentileLevels",
        "im",
        "frac",
        "frac",
        "kwargs",
        "plt",
        "cm",
        "Greys",
        "defaults",
        "update",
        "kwargs",
        "kwargs",
        "pop",
        "plt",
        "gca",
        "ax",
        "imshow",
        "im",
        "T",
        "extent",
        "e",
        "defaults",
        "args",
        "kwargs",
        "plt",
        "cm",
        "Greys",
        "np",
        "sort",
        "nice_levels",
        "defaults",
        "update",
        "kwargs",
        "kwargs",
        "pop",
        "plt",
        "gca",
        "ax",
        "contour",
        "im",
        "T",
        "args",
        "extent",
        "e",
        "defaults",
        "args",
        "kwargs",
        "plt",
        "cm",
        "Greys",
        "nice_levels",
        "defaults",
        "update",
        "kwargs",
        "kwargs",
        "pop",
        "plt",
        "gca",
        "ax",
        "contourf",
        "im",
        "T",
        "args",
        "extent",
        "e",
        "defaults",
        "lvl",
        "kwargs",
        "defaults",
        "update",
        "kwargs",
        "e",
        "dx",
        "np",
        "arange",
        "im",
        "shape",
        "e",
        "dy",
        "np",
        "arange",
        "im",
        "shape",
        "x",
        "y",
        "lvl",
        "np",
        "ceil",
        "np",
        "interp",
        "x",
        "xe",
        "xe",
        "len",
        "xe",
        "np",
        "ceil",
        "np",
        "interp",
        "y",
        "ye",
        "ye",
        "len",
        "ye",
        "im",
        "nx",
        "k",
        "ny",
        "k",
        "k",
        "len",
        "x",
        "np",
        "where",
        "nh",
        "np",
        "min",
        "lvl",
        "plt",
        "scatter",
        "x",
        "ind",
        "y",
        "ind",
        "kwargs",
        "plt",
        "scatter",
        "x",
        "y",
        "kwargs",
        "contour",
        "scatter",
        "kwargs",
        "nice_levels",
        "plt",
        "cm",
        "Greys_r",
        "levels",
        "c_defaults",
        "update",
        "contour",
        "contourf",
        "c_defaults",
        "np",
        "sort",
        "c",
        "levels",
        "s_defaults",
        "update",
        "scatter",
        "scatter",
        "lvl",
        "lvls",
        "s_defaults",
        "x",
        "y",
        "gridsize",
        "extents",
        "nocorrelation",
        "weights",
        "adjust",
        "kwargs",
        "KDE_2d",
        "x",
        "y",
        "gridsize",
        "gridsize",
        "extents",
        "extents",
        "nocorrelation",
        "nocorrelation",
        "weights",
        "weights",
        "adjust",
        "adjust",
        "kde",
        "plot",
        "kwargs",
        "xin",
        "gridsize",
        "extents",
        "weights",
        "adjust",
        "np",
        "squeeze",
        "np",
        "asarray",
        "xin",
        "extents",
        "x",
        "min",
        "x",
        "max",
        "extents",
        "x",
        "x",
        "xmax",
        "x",
        "xmin",
        "x",
        "size",
        "weights",
        "np",
        "ones",
        "n",
        "np",
        "squeeze",
        "np",
        "asarray",
        "weights",
        "weights",
        "size",
        "x",
        "size",
        "ValueError",
        "gridsize",
        "np",
        "max",
        "len",
        "x",
        "np",
        "ceil",
        "np",
        "log2",
        "gridsize",
        "gridsize",
        "xmax",
        "xmin",
        "nx",
        "x",
        "xmin",
        "xyi",
        "dx",
        "np",
        "floor",
        "xyi",
        "xyi",
        "np",
        "vstack",
        "xyi",
        "np",
        "zeros",
        "n",
        "dtype",
        "coo_matrix",
        "weights",
        "xyi",
        "shape",
        "nx",
        "toarray",
        "np",
        "std",
        "xyi",
        "n",
        "adjust",
        "np",
        "round",
        "scotts_factor",
        "np",
        "pi",
        "std_x",
        "np",
        "reshape",
        "gaussian",
        "kern_nx",
        "scotts_factor",
        "std_x",
        "kern_nx",
        "np",
        "min",
        "nx",
        "kern_nx",
        "np",
        "vstack",
        "grid",
        "npad",
        "grid",
        "grid",
        "nx",
        "nx",
        "npad",
        "convolve",
        "grid",
        "kernel",
        "mode",
        "npad",
        "npad",
        "nx",
        "np",
        "pi",
        "std_x",
        "std_x",
        "scotts_factor",
        "n",
        "dx",
        "np",
        "sqrt",
        "norm_factor",
        "grid",
        "norm_factor",
        "np",
        "squeeze",
        "grid",
        "xmin",
        "xmax",
        "dx",
        "x",
        "gridsize",
        "extents",
        "weights",
        "adjust",
        "fastkde1D",
        "x",
        "gridsize",
        "gridsize",
        "extents",
        "extents",
        "weights",
        "weights",
        "adjust",
        "adjust",
        "x",
        "dx",
        "im",
        "e",
        "property",
        "im",
        "e",
        "dx",
        "im",
        "argmax",
        "dx",
        "e",
        "best",
        "ax",
        "where",
        "orientation",
        "jitter",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "kwargs",
        "orientation",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "kwargs",
        "keys",
        "orientation",
        "jitter",
        "np",
        "random",
        "uniform",
        "low",
        "where",
        "jitter",
        "high",
        "where",
        "jitter",
        "size",
        "len",
        "x",
        "ax",
        "plot",
        "x",
        "pos",
        "kwargs",
        "ax",
        "plot",
        "x",
        "where",
        "np",
        "ones",
        "len",
        "x",
        "kwargs",
        "plt",
        "draw_if_interactive",
        "orientation",
        "jitter",
        "np",
        "random",
        "uniform",
        "low",
        "where",
        "jitter",
        "high",
        "where",
        "jitter",
        "size",
        "len",
        "x",
        "ax",
        "plot",
        "pos",
        "x",
        "kwargs",
        "ax",
        "plot",
        "where",
        "np",
        "ones",
        "len",
        "x",
        "x",
        "marker",
        "kwargs",
        "plt",
        "draw_if_interactive",
        "ax",
        "orientation",
        "cutoff",
        "log",
        "cutoff_type",
        "cutoff_val",
        "pos",
        "pos_marker",
        "pos_width",
        "pos_kwargs",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "keys",
        "kwargs",
        "kwargs",
        "kwargs",
        "im",
        "e",
        "np",
        "linspace",
        "e",
        "e",
        "len",
        "violin",
        "np",
        "hstack",
        "xvals",
        "xvals",
        "xvals",
        "np",
        "hstack",
        "violin",
        "orientation",
        "ax",
        "fill",
        "xvals",
        "violin",
        "kwargs",
        "orientation",
        "ax",
        "fill_betweenx",
        "xvals",
        "violin",
        "kwargs",
        "plt",
        "draw_if_interactive",
        "x",
        "gridsize",
        "extents",
        "weights",
        "adjust",
        "kwargs",
        "KDE_1d",
        "x",
        "gridsize",
        "gridsize",
        "extents",
        "extents",
        "weights",
        "weights",
        "adjust",
        "adjust",
        "plot",
        "kwargs",
        "x",
        "y",
        "bins",
        "ax",
        "Nlevels",
        "levels",
        "frac",
        "contour",
        "contourf",
        "plt",
        "cm",
        "Greys_r",
        "scatter",
        "args",
        "kwargs",
        "ax",
        "plt",
        "gca",
        "kwargs",
        "bins",
        "np",
        "histogram2d",
        "x",
        "y",
        "args",
        "kwargs",
        "Nlevels",
        "levels",
        "frac",
        "np",
        "sort",
        "getPercentileLevels",
        "h",
        "Nlevels",
        "levels",
        "frac",
        "np",
        "linspace",
        "h",
        "max",
        "Nlevels",
        "tolist",
        "h",
        "max",
        "frac",
        "getPercentileLevels",
        "h",
        "frac",
        "frac",
        "getattr",
        "levels",
        "AttributeError",
        "levels",
        "h",
        "max",
        "levels",
        "h",
        "max",
        "isinstance",
        "contourf",
        "ax",
        "contourf",
        "h",
        "T",
        "extent",
        "xe",
        "xe",
        "ye",
        "ye",
        "levels",
        "levels",
        "contourf",
        "isinstance",
        "contour",
        "ax",
        "contour",
        "h",
        "T",
        "extent",
        "xe",
        "xe",
        "ye",
        "ye",
        "levels",
        "levels",
        "contour",
        "np",
        "asarray",
        "len",
        "x",
        "cont",
        "np",
        "ceil",
        "np",
        "interp",
        "x",
        "xe",
        "xe",
        "len",
        "xe",
        "np",
        "ceil",
        "np",
        "interp",
        "y",
        "ye",
        "ye",
        "len",
        "ye",
        "h",
        "nx",
        "k",
        "ny",
        "k",
        "k",
        "len",
        "x",
        "np",
        "where",
        "nh",
        "np",
        "min",
        "levels",
        "ax",
        "scatter",
        "x",
        "ind",
        "y",
        "ind",
        "scatter",
        "ax",
        "plot",
        "x",
        "y",
        "scatter",
        "dimensions",
        "len",
        "dimensions",
        "level",
        "dimensions",
        "level",
        "j",
        "dimensions",
        "level",
        "_indices",
        "j",
        "i",
        "i",
        "indices",
        "_indices",
        "level",
        "i",
        "i",
        "indices",
        "indices",
        "x",
        "alpha",
        "x",
        "copy",
        "x",
        "ndim",
        "np",
        "transpose",
        "x",
        "x",
        "ndim",
        "np",
        "shape",
        "tx",
        "np",
        "resize",
        "dims",
        "index",
        "make_indices",
        "dims",
        "index",
        "np",
        "sort",
        "tx",
        "index",
        "calc_min_interval",
        "sx",
        "alpha",
        "np",
        "array",
        "intervals",
        "l",
        "pars",
        "plotfunc",
        "lbls",
        "limits",
        "triangle",
        "devectorize",
        "args",
        "kwargs",
        "lbls",
        "pars",
        "limits",
        "len",
        "pars",
        "fontmap",
        "len",
        "pars",
        "np",
        "empty",
        "len",
        "pars",
        "len",
        "pars",
        "dtype",
        "j",
        "len",
        "pars",
        "i",
        "len",
        "pars",
        "j",
        "i",
        "axes",
        "j",
        "i",
        "i",
        "j",
        "plt",
        "subplot",
        "len",
        "pars",
        "len",
        "pars",
        "k",
        "ax",
        "l",
        "pars",
        "i",
        "ax",
        "hist",
        "data",
        "bins",
        "histtype",
        "color",
        "kwargs",
        "get",
        "triangle",
        "ax",
        "set_xlabel",
        "lbls",
        "i",
        "ax",
        "set_ylabel",
        "lbls",
        "i",
        "ax",
        "xaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "xaxis",
        "set_ticks_position",
        "hide_axis",
        "ax",
        "ax",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "ax",
        "get_yticklabels",
        "visible",
        "limits",
        "get",
        "pars",
        "i",
        "data",
        "min",
        "data",
        "max",
        "ax",
        "set_xlim",
        "xlim",
        "triangle",
        "l",
        "pars",
        "i",
        "l",
        "pars",
        "j",
        "i",
        "j",
        "i",
        "j",
        "axes",
        "j",
        "i",
        "plt",
        "subplot",
        "len",
        "pars",
        "len",
        "pars",
        "k",
        "sharey",
        "sharey",
        "sharex",
        "sharex",
        "ax",
        "plotfunc",
        "plt",
        "plot",
        "data_x",
        "data_y",
        "kwargs",
        "plotfunc",
        "data_x",
        "data_y",
        "ax",
        "ax",
        "args",
        "kwargs",
        "limits",
        "get",
        "pars",
        "i",
        "limits",
        "get",
        "pars",
        "j",
        "xlim",
        "ax",
        "set_xlim",
        "xlim",
        "ylim",
        "ax",
        "set_ylim",
        "ylim",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "ax",
        "get_yticklabels",
        "visible",
        "devectorize",
        "devectorize_axes",
        "ax",
        "ax",
        "triangle",
        "l",
        "pars",
        "i",
        "l",
        "pars",
        "j",
        "i",
        "j",
        "i",
        "j",
        "axes",
        "j",
        "i",
        "plt",
        "subplot",
        "len",
        "pars",
        "len",
        "pars",
        "k",
        "sharey",
        "sharey",
        "sharex",
        "sharex",
        "ax",
        "plotfunc",
        "plt",
        "plot",
        "data_x",
        "data_y",
        "kwargs",
        "plotfunc",
        "data_x",
        "data_y",
        "ax",
        "ax",
        "args",
        "kwargs",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "ax",
        "get_yticklabels",
        "visible",
        "limits",
        "get",
        "pars",
        "i",
        "limits",
        "get",
        "pars",
        "j",
        "xlim",
        "ax",
        "set_ylim",
        "xlim",
        "ylim",
        "ax",
        "set_ylim",
        "ylim",
        "devectorize",
        "devectorize_axes",
        "ax",
        "ax",
        "i",
        "ax",
        "set_ylabel",
        "lbls",
        "j",
        "plt",
        "setp",
        "ax",
        "get_yticklabels",
        "visible",
        "j",
        "len",
        "pars",
        "ax",
        "set_xlabel",
        "lbls",
        "i",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "visible",
        "fontmap",
        "len",
        "pars",
        "N",
        "setNmajors",
        "N",
        "N",
        "ax",
        "ax",
        "prune",
        "k",
        "setMargins",
        "hspace",
        "wspace",
        "W",
        "bg",
        "facecolors",
        "W",
        "shape",
        "np",
        "array",
        "np",
        "array",
        "plt",
        "isinteractive",
        "plt",
        "ioff",
        "plt",
        "fill",
        "N",
        "N",
        "M",
        "M",
        "bg",
        "np",
        "abs",
        "W",
        "max",
        "m",
        "Wrow",
        "W",
        "n",
        "w",
        "Wrow",
        "plt",
        "signbit",
        "w",
        "facecolors",
        "facecolors",
        "plt",
        "fill",
        "square_x",
        "w",
        "Wmax",
        "n",
        "square_y",
        "w",
        "Wmax",
        "m",
        "c",
        "edgecolor",
        "c",
        "plt",
        "ylim",
        "M",
        "plt",
        "xlim",
        "M",
        "ioff",
        "plt",
        "ion",
        "plt",
        "draw_if_interactive",
        "d",
        "labels",
        "orientation",
        "positions",
        "ax",
        "kwargs",
        "labels",
        "hasattr",
        "d",
        "d",
        "keys",
        "np",
        "array",
        "d",
        "values",
        "T",
        "hasattr",
        "d",
        "d",
        "dtype",
        "names",
        "d",
        "dtype",
        "names",
        "format",
        "k",
        "k",
        "len",
        "d",
        "format",
        "k",
        "k",
        "len",
        "d",
        "np",
        "array",
        "d",
        "astype",
        "labels",
        "np",
        "array",
        "d",
        "astype",
        "len",
        "labels",
        "len",
        "data",
        "format",
        "k",
        "k",
        "len",
        "data",
        "positions",
        "np",
        "arange",
        "len",
        "names",
        "np",
        "array",
        "positions",
        "positions",
        "positions",
        "min",
        "np",
        "ptp",
        "positions",
        "data",
        "data",
        "mean",
        "axis",
        "data",
        "ptp",
        "axis",
        "np",
        "argsort",
        "positions",
        "data",
        "order",
        "positions",
        "order",
        "np",
        "array",
        "names",
        "order",
        "tolist",
        "ax",
        "plt",
        "subplot",
        "orientation",
        "lower",
        "ax",
        "vlines",
        "positions",
        "color",
        "ax",
        "plot",
        "positions",
        "data",
        "T",
        "kwargs",
        "hide_axis",
        "ax",
        "ax",
        "plt",
        "setp",
        "ax",
        "get_yticklabels",
        "visible",
        "ax",
        "set_xticks",
        "positions",
        "ax",
        "set_xticklabels",
        "names",
        "ax",
        "set_xlim",
        "positions",
        "min",
        "dyn",
        "positions",
        "max",
        "dyn",
        "ax",
        "hlines",
        "positions",
        "color",
        "ax",
        "plot",
        "data",
        "T",
        "positions",
        "kwargs",
        "hide_axis",
        "ax",
        "ax",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "visible",
        "ax",
        "set_yticks",
        "positions",
        "ax",
        "set_yticklabels",
        "names",
        "ax",
        "set_ylim",
        "positions",
        "min",
        "dyn",
        "positions",
        "max",
        "dyn",
        "seq",
        "s",
        "s",
        "replace",
        "replace",
        "replace",
        "r",
        "f",
        "k",
        "k",
        "seq",
        "bins",
        "bins",
        "bins",
        "im",
        "sigs",
        "np",
        "exp",
        "np",
        "array",
        "sigs",
        "im",
        "flatten",
        "np",
        "argsort",
        "Hflat",
        "Hflat",
        "inds",
        "np",
        "cumsum",
        "Hflat",
        "sm",
        "sm",
        "i",
        "v0",
        "V",
        "Hflat",
        "sm",
        "v0",
        "Hflat",
        "V",
        "H",
        "N",
        "np",
        "exp",
        "np",
        "arange",
        "N",
        "H",
        "flatten",
        "np",
        "argsort",
        "Hflat",
        "Hflat",
        "inds",
        "np",
        "cumsum",
        "Hflat",
        "sm",
        "sm",
        "i",
        "v0",
        "V",
        "Hflat",
        "sm",
        "v0",
        "Hflat",
        "V",
        "x",
        "y",
        "xbins",
        "ybins",
        "Nlevels",
        "cbar",
        "weights",
        "np",
        "histogram2d",
        "x",
        "y",
        "bins",
        "xbins",
        "ybins",
        "weights",
        "weights",
        "astype",
        "T",
        "get_centers_from_bins",
        "xbins",
        "get_centers_from_bins",
        "ybins",
        "np",
        "meshgrid",
        "lt",
        "lm",
        "np",
        "meshgrid",
        "xbins",
        "ybins",
        "plt",
        "pcolor",
        "X",
        "Y",
        "Z",
        "cmap",
        "plt",
        "cm",
        "Blues",
        "plt",
        "contour",
        "cX",
        "cY",
        "Z",
        "levels",
        "nice_levels",
        "Z",
        "Nlevels",
        "cmap",
        "plt",
        "cm",
        "Greys_r",
        "cbar",
        "plt",
        "colorbar",
        "im",
        "plt",
        "xlim",
        "xbins",
        "xbins",
        "plt",
        "ylim",
        "ybins",
        "ybins",
        "plt",
        "tight_layout",
        "e",
        "e",
        "plt",
        "gca",
        "cb",
        "d",
        "keys",
        "bins",
        "kwargs",
        "len",
        "keys",
        "len",
        "keys",
        "nlines",
        "ncols",
        "np",
        "empty",
        "nlines",
        "ncols",
        "dtype",
        "kwargs",
        "pop",
        "keys",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "kwargs",
        "pop",
        "bins",
        "k",
        "keys",
        "d",
        "k",
        "np",
        "std",
        "x",
        "bins",
        "append",
        "np",
        "arange",
        "x",
        "min",
        "dx",
        "x",
        "max",
        "dx",
        "dx",
        "hasattr",
        "bins",
        "bins",
        "len",
        "keys",
        "len",
        "bins",
        "len",
        "keys",
        "AttributeError",
        "k",
        "nlines",
        "ncols",
        "np",
        "unravel_index",
        "k",
        "shape",
        "keys",
        "xk",
        "keys",
        "yk",
        "xk",
        "yk",
        "xk",
        "axes",
        "xk",
        "xk",
        "axes",
        "yk",
        "plt",
        "subplot",
        "nlines",
        "ncols",
        "k",
        "sharey",
        "sharey",
        "sharex",
        "sharex",
        "yk",
        "xk",
        "ax",
        "_drop",
        "append",
        "ax",
        "yk",
        "xk",
        "usekde",
        "KDE_2d",
        "d",
        "kxk",
        "d",
        "kyk",
        "gridsize",
        "len",
        "bins",
        "xk",
        "len",
        "bins",
        "yk",
        "adjust",
        "weights",
        "weights",
        "kde",
        "imshow",
        "kde",
        "contour",
        "cmap",
        "plt",
        "cm",
        "Greys_r",
        "plot_density_map",
        "d",
        "kxk",
        "d",
        "kyk",
        "bins",
        "xk",
        "bins",
        "yk",
        "cbar",
        "weights",
        "weights",
        "kwargs",
        "gaussian_ellipse",
        "weights",
        "np",
        "vstack",
        "d",
        "kxk",
        "d",
        "kyk",
        "np",
        "mean",
        "data",
        "axis",
        "np",
        "cov",
        "data",
        "mu",
        "error_ellipse",
        "mu",
        "cov",
        "ax",
        "ax",
        "edgecolor",
        "lw",
        "xk",
        "ax",
        "set_ylabel",
        "lbls",
        "yk",
        "l",
        "set_rotation",
        "ticksrotation",
        "l",
        "ax",
        "get_yticklabels",
        "plt",
        "setp",
        "ax",
        "get_yticklabels",
        "visible",
        "yk",
        "nlines",
        "ax",
        "set_xlabel",
        "lbls",
        "xk",
        "l",
        "set_rotation",
        "ticksrotation",
        "l",
        "ax",
        "get_xticklabels",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "visible",
        "ax",
        "xaxis",
        "set_major_locator",
        "MaxNLocator",
        "max_n_ticks",
        "prune",
        "ax",
        "yaxis",
        "set_major_locator",
        "MaxNLocator",
        "max_n_ticks",
        "prune",
        "ax",
        "set_ylim",
        "bins",
        "yk",
        "bins",
        "yk",
        "ax",
        "set_xlim",
        "bins",
        "xk",
        "bins",
        "xk",
        "ax",
        "xaxis",
        "set_label_coords",
        "ax",
        "yaxis",
        "set_label_coords",
        "yk",
        "xk",
        "usekde",
        "KDE_1d",
        "d",
        "kxk",
        "gridsize",
        "len",
        "bins",
        "xk",
        "weights",
        "weights",
        "kde",
        "plot",
        "ec",
        "alpha",
        "lw",
        "fc",
        "facecolor",
        "plt",
        "vlines",
        "kde",
        "peak",
        "ymin",
        "ymax",
        "kde",
        "im",
        "max",
        "color",
        "np",
        "histogram",
        "d",
        "kxk",
        "bins",
        "bins",
        "xk",
        "weights",
        "weights",
        "get_centers_from_bins",
        "bins",
        "xk",
        "ax",
        "fill_between",
        "xn",
        "len",
        "xn",
        "n",
        "astype",
        "edgecolor",
        "facecolor",
        "alpha",
        "lw",
        "plt",
        "vlines",
        "xn",
        "n",
        "argmax",
        "ymin",
        "ymax",
        "n",
        "max",
        "color",
        "lw",
        "zorder",
        "hpd",
        "ax",
        "get_ylim",
        "percentile",
        "d",
        "kxk",
        "weights",
        "weights",
        "plt",
        "vlines",
        "xn",
        "ymin",
        "ymax",
        "ylim",
        "color",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "ax",
        "set_ylim",
        "ylim",
        "plt",
        "setp",
        "ax",
        "get_yticklabels",
        "visible",
        "yk",
        "nlines",
        "ax",
        "set_xlabel",
        "lbls",
        "xk",
        "l",
        "set_rotation",
        "ticksrotation",
        "l",
        "ax",
        "get_xticklabels",
        "plt",
        "setp",
        "ax",
        "get_xticklabels",
        "visible",
        "plt",
        "setp",
        "ax",
        "get_yticklines",
        "visible",
        "hide_axis",
        "where",
        "ax",
        "ax",
        "ax",
        "set_xlim",
        "bins",
        "xk",
        "bins",
        "xk",
        "ax",
        "xaxis",
        "set_major_locator",
        "MaxNLocator",
        "max_n_ticks",
        "prune",
        "ax",
        "xaxis",
        "set_label_coords",
        "plt",
        "tight_layout",
        "e",
        "e",
        "ax",
        "_drop",
        "ax",
        "set_visible",
        "plt",
        "subplots_adjust",
        "hspace",
        "wspace",
        "k",
        "k",
        "axes",
        "ravel",
        "k",
        "d",
        "lbls",
        "ticksrotation",
        "hpd",
        "figout",
        "usekde",
        "bins",
        "weights",
        "ncols",
        "kwargs",
        "lbls",
        "bins",
        "k",
        "lbls",
        "d",
        "k",
        "np",
        "std",
        "x",
        "bins",
        "append",
        "np",
        "arange",
        "x",
        "min",
        "dx",
        "x",
        "max",
        "dx",
        "dx",
        "hasattr",
        "bins",
        "bins",
        "len",
        "lbls",
        "len",
        "bins",
        "len",
        "lbls",
        "AttributeError",
        "kwargs",
        "pop",
        "lbls",
        "len",
        "lbls",
        "max",
        "ndim",
        "ncols",
        "ndim",
        "ndim",
        "ncols",
        "nlines",
        "ncols",
        "len",
        "lbls",
        "nlines",
        "plt",
        "figure",
        "figsize",
        "ncols",
        "nlines",
        "xk",
        "kxk",
        "lbls",
        "plt",
        "subplot",
        "nlines",
        "ncols",
        "xk",
        "usekde",
        "KDE_1d",
        "d",
        "kxk",
        "gridsize",
        "len",
        "bins",
        "xk",
        "weights",
        "weights",
        "kde",
        "plot",
        "ec",
        "alpha",
        "lw",
        "fc",
        "facecolor",
        "plt",
        "vlines",
        "kde",
        "peak",
        "ymin",
        "ymax",
        "kde",
        "im",
        "max",
        "color",
        "np",
        "histogram",
        "d",
        "kxk",
        "bins",
        "bins",
        "xk",
        "weights",
        "weights",
        "get_centers_from_bins",
        "bins",
        "xk",
        "ax",
        "fill_between",
        "xn",
        "len",
        "xn",
        "n",
        "astype",
        "edgecolor",
        "facecolor",
        "alpha",
        "lw",
        "plt",
        "vlines",
        "xn",
        "n",
        "argmax",
        "ymin",
        "ymax",
        "n",
        "max",
        "color",
        "lw",
        "zorder",
        "hpd",
        "ax",
        "get_ylim",
        "percentile",
        "d",
        "kxk",
        "weights",
        "weights",
        "plt",
        "vlines",
        "xn",
        "ymin",
        "ymax",
        "ylim",
        "color",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "plt",
        "fill_between",
        "xn",
        "xn",
        "ylim",
        "color",
        "alpha",
        "zorder",
        "ax",
        "set_ylim",
        "ylim",
        "plt",
        "setp",
        "ax",
        "get_yticklabels",
        "visible",
        "l",
        "set_rotation",
        "ticksrotation",
        "l",
        "ax",
        "get_xticklabels",
        "hide_axis",
        "where",
        "ax",
        "ax",
        "ax",
        "set_xlabel",
        "xlabels",
        "xk",
        "ax",
        "set_ylim",
        "ax",
        "get_ylim",
        "axes",
        "append",
        "ax",
        "tight_layout",
        "e",
        "e",
        "axes",
        "plt",
        "rcParams",
        "keys",
        "args",
        "kwargs",
        "update",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "k",
        "v",
        "args",
        "kwargs",
        "items",
        "__setitem__",
        "k",
        "v",
        "k",
        "v",
        "k",
        "_allowed_keys",
        "_rcParams",
        "v",
        "regexp",
        "full_match",
        "sorted",
        "_rcParams",
        "keys",
        "regexp",
        "regexp",
        "keys",
        "regexp",
        "basestring",
        "full_match",
        "re",
        "fullmatch",
        "re",
        "match",
        "regexp",
        "count",
        "regexp",
        "split",
        "regexp",
        "count",
        "regexp",
        "split",
        "regexp",
        "_rk",
        "_re",
        "_keys",
        "k",
        "k",
        "keys",
        "fn",
        "_rk",
        "k",
        "_keys",
        "hasattr",
        "regexp",
        "k",
        "regexp",
        "_keys",
        "keys",
        "k",
        "_keys",
        "ValueError",
        "format",
        "regexp",
        "ax",
        "deepcopy",
        "_rcParams",
        "rcParams",
        "other",
        "isinstance",
        "other",
        "Theme",
        "deepcopy",
        "theme",
        "update",
        "other",
        "get_rcParams",
        "theme",
        "args",
        "kwargs",
        "deepcopy",
        "plt",
        "rcParams",
        "plt",
        "rcParams",
        "update",
        "get_rcParams",
        "plt",
        "rcParams",
        "update",
        "_rcstate",
        "deepcopy",
        "plt",
        "rcParams",
        "plt",
        "rcParams",
        "update",
        "get_rcParams",
        "args",
        "kwargs",
        "post_callback",
        "plt",
        "rcParams",
        "update",
        "_rcstate",
        "args",
        "kwargs",
        "post_callback",
        "args",
        "kwargs",
        "Theme",
        "style",
        "gridweight",
        "context",
        "__class__",
        "style",
        "gridweight",
        "context",
        "_set_theme_seaborn_rcparams",
        "_rcParams",
        "style",
        "gridweight",
        "context",
        "rcParams",
        "style",
        "gridweight",
        "context",
        "gridweight",
        "context",
        "gridweights",
        "gridweights",
        "np",
        "isreal",
        "gridweight",
        "gridweight",
        "gridweights",
        "gridweight",
        "style",
        "context",
        "glw",
        "style",
        "context",
        "lw",
        "glw",
        "style",
        "style",
        "context",
        "context",
        "tickwidth",
        "tickwidth",
        "tickwidth",
        "tickwidth",
        "ticksize",
        "ticksize",
        "ticksize",
        "ticksize",
        "rcParams",
        "update",
        "ax_params",
        "context",
        "context",
        "context",
        "context",
        "rcParams",
        "update",
        "font_params",
        "rcParams",
        "update",
        "context",
        "context",
        "context",
        "context",
        "ax",
        "child",
        "ax",
        "get_children",
        "isinstance",
        "child",
        "mpl",
        "spines",
        "Spine",
        "child",
        "set_alpha",
        "line",
        "ax",
        "get_xticklines",
        "ax",
        "get_yticklines",
        "line",
        "set_markersize",
        "line",
        "set_markeredgewidth",
        "ax",
        "xaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "grid",
        "color",
        "linestyle",
        "linewidth",
        "isinstance",
        "ax",
        "xaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "xaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "isinstance",
        "ax",
        "yaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "yaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "Theme",
        "__class__",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "ax",
        "child",
        "ax",
        "get_children",
        "isinstance",
        "child",
        "mpl",
        "spines",
        "Spine",
        "child",
        "set_alpha",
        "line",
        "ax",
        "get_xticklines",
        "ax",
        "get_yticklines",
        "line",
        "set_markersize",
        "line",
        "set_markeredgewidth",
        "ax",
        "xaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "grid",
        "color",
        "linestyle",
        "linewidth",
        "isinstance",
        "ax",
        "xaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "xaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "isinstance",
        "ax",
        "yaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "yaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "Theme",
        "__class__",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "_rcParams",
        "ax",
        "child",
        "ax",
        "get_children",
        "isinstance",
        "child",
        "mpl",
        "spines",
        "Spine",
        "child",
        "set_alpha",
        "line",
        "ax",
        "get_xticklines",
        "ax",
        "get_yticklines",
        "line",
        "set_markersize",
        "line",
        "set_markeredgewidth",
        "ax",
        "xaxis",
        "set_ticks_position",
        "ax",
        "yaxis",
        "set_ticks_position",
        "ax",
        "grid",
        "color",
        "linestyle",
        "linewidth",
        "isinstance",
        "ax",
        "xaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "xaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "isinstance",
        "ax",
        "yaxis",
        "get_major_locator",
        "mpl",
        "ticker",
        "LogLocator",
        "ax",
        "yaxis",
        "set_minor_locator",
        "mpl",
        "ticker",
        "AutoMinorLocator",
        "Theme",
        "kwargs",
        "__class__",
        "kwargs",
        "update",
        "plt",
        "rcParamsDefault",
        "plt",
        "ion",
        "Theme",
        "fontSize",
        "lineWidth",
        "labelSize",
        "tickmajorsize",
        "tickminorsize",
        "figsize",
        "labelSize",
        "fontSize",
        "figsize",
        "lineWidth",
        "lineWidth",
        "fontSize",
        "lineWidth",
        "labelSize",
        "tickmajorsize",
        "tickminorsize",
        "tickmajorsize",
        "tickminorsize",
        "__class__",
        "rcParams",
        "plt",
        "ion",
        "Theme",
        "fontSize",
        "labelSize",
        "fontSize",
        "labelSize",
        "fontSize",
        "fontSize",
        "labelSize",
        "labelSize",
        "labelSize",
        "labelSize",
        "fontSize",
        "labelSize",
        "__class__",
        "rcParams",
        "plt",
        "ion",
        "Theme",
        "kwargs",
        "kwargs",
        "__class__",
        "args",
        "kwargs",
        "kwargs",
        "update",
        "kwargs",
        "tight_layout",
        "kwargs",
        "matplotlib",
        "colors",
        "LinearSegmentedColormap",
        "matplotlib",
        "cm",
        "LinearSegmentedColormap",
        "from_list",
        "cm_data",
        "cm",
        "register_cmap",
        "cmap",
        "parula_map",
        "cm",
        "__dict__",
        "cm",
        "get_cmap",
        "LinearSegmentedColormap",
        "from_list",
        "cm_data",
        "cm",
        "register_cmap",
        "cmap",
        "parula_r_map",
        "cm",
        "__dict__",
        "cm",
        "get_cmap",
        "LinearSegmentedColormap",
        "from_list",
        "cm_data",
        "cm",
        "register_cmap",
        "cmap",
        "parula_map",
        "cm",
        "__dict__",
        "cm",
        "get_cmap",
        "LinearSegmentedColormap",
        "from_list",
        "cm_data",
        "cm",
        "register_cmap",
        "cmap",
        "parula_r_map",
        "cm",
        "__dict__",
        "cm",
        "get_cmap"
    ],
    "literals": [
        "'HOME'",
        "'/bin/python/libs'",
        "'items'",
        "'values'",
        "'iteritems'",
        "'itervalues'",
        "'agg'",
        "'macosx'",
        "'both'",
        "'lines.linewidth'",
        "'png'",
        "'auto'",
        "'nearest'",
        "'data size mismatch'",
        "'__iter__'",
        "'__iter__'",
        "r'\\times'",
        "\"{0:\"",
        "\"g}\"",
        "\"e\"",
        "\"e\"",
        "r\"{0}\"",
        "\"10^{{{1}}}\"",
        "'figure'",
        "'lines'",
        "'grid.linewidth'",
        "'font.sans-serif'",
        "'Helvetica'",
        "'font.serif'",
        "'Helvetica'",
        "'font.family'",
        "'Times New Roman'",
        "'font'",
        "'serif'",
        "'bold'",
        "'axes'",
        "'legend'",
        "'text'",
        "'image'",
        "'auto'",
        "'ps'",
        "'xtick.major.size'",
        "'xtick.minor.size'",
        "'ytick.major.size'",
        "'ytick.minor.size'",
        "'text.latex.preamble'",
        "\"\\\\usepackage{amsmath}\"",
        "'None'",
        "'top'",
        "'bottom'",
        "'none'",
        "'top'",
        "'bottom'",
        "'bottom'",
        "'top'",
        "'left'",
        "'right'",
        "'none'",
        "'left'",
        "'right'",
        "'right'",
        "'left'",
        "\"top\"",
        "\"right\"",
        "\"left\"",
        "\"bottom\"",
        "'outward'",
        "'auto'",
        "'fixed'",
        "'auto'",
        "'__call__'",
        "'reduce function is not callable'",
        "'Shape mismatch between x, y, and weights: {}, {}, {}'",
        "'bottom'",
        "'left'",
        "'top'",
        "'right'",
        "'bottom'",
        "'left'",
        "'outward'",
        "'|'",
        "'w'",
        "'lower'",
        "'b,'",
        "\"g\"",
        "\"dashed\"",
        "'facecolor'",
        "'none'",
        "'edgecolor'",
        "'k'",
        "\"Too few elements for quantile calculation\"",
        "'freedman'",
        "'N'",
        "\"Warning: Sturge estimator can perform poorly for small samples\"",
        "'sturge'",
        "'scott'",
        "'freedman'",
        "'bayesian'",
        "'n'",
        "'w'",
        "'histtype'",
        "'step'",
        "'method'",
        "'freedman'",
        "'bins'",
        "'method'",
        "'N'",
        "r'Values'",
        "r'Counts'",
        "'Too few elements for interval calculation'",
        "'__iter__'",
        "\"Expecting a sample fraction in 'frac' and got %f\"",
        "'Input x & y arrays must be the same size!'",
        "'Input weights must be an array of the same size as input x & y arrays!'",
        "'same'",
        "'symm'",
        "\"Percentiles less than 0\"",
        "\"Percentiles greater than 100\"",
        "\"wrong data shape, expecting 1d\"",
        "\"weights must be the same shape as data\"",
        "\"Not all weights are non-negative.\"",
        "'__iter__'",
        "\"Nonpositive weight sum\"",
        "'origin'",
        "'lower'",
        "'cmap'",
        "'interpolation'",
        "'nearest'",
        "'aspect'",
        "'auto'",
        "'ax'",
        "'origin'",
        "'lower'",
        "'cmap'",
        "'levels'",
        "'ax'",
        "'origin'",
        "'lower'",
        "'cmap'",
        "'levels'",
        "'ax'",
        "'c'",
        "'0.0'",
        "'color'",
        "'k'",
        "'facecolor'",
        "'k'",
        "'edgecolor'",
        "'None'",
        "'origin'",
        "'lower'",
        "'cmap'",
        "'levels'",
        "'c'",
        "'0.0'",
        "'edgecolor'",
        "'None'",
        "'s'",
        "'Input weights must be an array of the same size as input x & y arrays!'",
        "'same'",
        "'horizontal'",
        "'marker'",
        "'horizontal'",
        "'marker'",
        "'|'",
        "'marker'",
        "'_'",
        "'facecolor'",
        "'fc'",
        "'markerfacecolor'",
        "'mfc'",
        "'markerfacecolor'",
        "'None'",
        "'edgecolor'",
        "'ec'",
        "'markeredgecolor'",
        "'mec'",
        "'markeredgecolor'",
        "'k'",
        "'linestyle'",
        "'ls'",
        "'linestyle'",
        "'None'",
        "'size'",
        "'markersize'",
        "'markersize'",
        "'horizontal'",
        "'vertical'",
        "'_'",
        "'horizontal'",
        "'std'",
        "'line'",
        "'facecolor'",
        "'fc'",
        "'facecolor'",
        "'y'",
        "'edgecolor'",
        "'ec'",
        "'edgecolor'",
        "'k'",
        "'alpha'",
        "'alpha'",
        "'color'",
        "'edgecolor'",
        "'color'",
        "'facecolor'",
        "'color'",
        "'horizontal'",
        "'vertical'",
        "'colors'",
        "'0.0'",
        "'linewidths'",
        "'cmap'",
        "'c'",
        "'0.0'",
        "'s'",
        "'edgecolor'",
        "'None'",
        "'bins'",
        "'bins'",
        "'__iter__'",
        "\"Expecting levels variable to be iterable\"",
        "'lower'",
        "\"step\"",
        "\"color\"",
        "\"k\"",
        "'upper'",
        "'bottom'",
        "'none'",
        "'none'",
        "'bottom'",
        "'right'",
        "'top'",
        "'left'",
        "'upper'",
        "','",
        "'lower'",
        "','",
        "'both'",
        "'grey'",
        "'w'",
        "'k'",
        "'horizontal'",
        "'keys'",
        "'dtype'",
        "'p{0:d}'",
        "'p{0:d}'",
        "'p{0:d}'",
        "'horizontal'",
        "'0.8'",
        "'left'",
        "'right'",
        "'top'",
        "'bottom'",
        "'0.8'",
        "'left'",
        "'right'",
        "'top'",
        "'bottom'",
        "'\\\\'",
        "'\\\\\\\\'",
        "'_'",
        "'\\_'",
        "'^'",
        "'\\^'",
        "'labels'",
        "'usekde'",
        "'ticksrotation'",
        "'gaussian_ellipse'",
        "'hpd'",
        "'weights'",
        "'max_n_ticks'",
        "'__iter__'",
        "'bins are not the same length as dimensions'",
        "\"r\"",
        "\"lower\"",
        "\"lower\"",
        "'k'",
        "'w'",
        "'w'",
        "'r'",
        "'k'",
        "'w'",
        "'r'",
        "'b'",
        "'b'",
        "'b'",
        "'b'",
        "'b'",
        "'top'",
        "'left'",
        "'right'",
        "\"lower\"",
        "'__iter__'",
        "'bins are not the same length as dimensions'",
        "'labels'",
        "'k'",
        "'w'",
        "'w'",
        "'r'",
        "'k'",
        "'w'",
        "'r'",
        "'b'",
        "'b'",
        "'b'",
        "'b'",
        "'b'",
        "'top'",
        "'left'",
        "'right'",
        "'*'",
        "','",
        "','",
        "' '",
        "'__iter__'",
        "'Unexpected type {0} for regexp'",
        "\"whitegrid\"",
        "\"notebook\"",
        "'extra heavy'",
        "'heavy'",
        "'medium'",
        "'light'",
        "\"paper\"",
        "\"medium\"",
        "'extra heavy'",
        "\"darkgrid\"",
        "\"paper\"",
        "\"axes.facecolor\"",
        "\"#EAEAF2\"",
        "\"axes.edgecolor\"",
        "\"white\"",
        "\"axes.linewidth\"",
        "\"axes.grid\"",
        "\"axes.axisbelow\"",
        "\"grid.color\"",
        "\"w\"",
        "\"grid.linestyle\"",
        "\"-\"",
        "\"grid.linewidth\"",
        "\"whitegrid\"",
        "\"paper\"",
        "\"axes.facecolor\"",
        "\"white\"",
        "\"axes.edgecolor\"",
        "\"#CCCCCC\"",
        "\"axes.linewidth\"",
        "\"axes.grid\"",
        "\"axes.axisbelow\"",
        "\"grid.color\"",
        "\"#DDDDDD\"",
        "\"grid.linestyle\"",
        "\"-\"",
        "\"grid.linewidth\"",
        "\"nogrid\"",
        "\"axes.grid\"",
        "\"axes.facecolor\"",
        "\"white\"",
        "\"axes.edgecolor\"",
        "\"black\"",
        "\"axes.linewidth\"",
        "\"ticks\"",
        "\"paper\"",
        "\"paper\"",
        "\"axes.grid\"",
        "\"axes.facecolor\"",
        "\"white\"",
        "\"axes.edgecolor\"",
        "\"black\"",
        "\"axes.linewidth\"",
        "\"xtick.direction\"",
        "\"out\"",
        "\"ytick.direction\"",
        "\"out\"",
        "\"xtick.major.width\"",
        "\"ytick.major.width\"",
        "\"xtick.minor.width\"",
        "\"xtick.minor.width\"",
        "\"xtick.major.size\"",
        "\"xtick.minor.size\"",
        "\"ytick.major.size\"",
        "\"ytick.minor.size\"",
        "\"talk\"",
        "\"axes.labelsize\"",
        "\"axes.titlesize\"",
        "\"xtick.labelsize\"",
        "\"ytick.labelsize\"",
        "\"legend.fontsize\"",
        "\"notebook\"",
        "\"axes.labelsize\"",
        "\"axes.titlesize\"",
        "\"xtick.labelsize\"",
        "\"ytick.labelsize\"",
        "\"legend.fontsize\"",
        "\"poster\"",
        "\"axes.labelsize\"",
        "\"axes.titlesize\"",
        "\"xtick.labelsize\"",
        "\"ytick.labelsize\"",
        "\"legend.fontsize\"",
        "\"paper\"",
        "\"axes.labelsize\"",
        "\"axes.titlesize\"",
        "\"xtick.labelsize\"",
        "\"ytick.labelsize\"",
        "\"legend.fontsize\"",
        "\"lines.linewidth\"",
        "\"paper\"",
        "\"patch.linewidth\"",
        "\"paper\"",
        "\"xtick.major.pad\"",
        "\"paper\"",
        "\"ytick.major.pad\"",
        "\"paper\"",
        "\"timezone\"",
        "\"UTC\"",
        "\"patch.antialiased\"",
        "\"True\"",
        "\"font.family\"",
        "\"sans-serif\"",
        "\"font.size\"",
        "\"12.0\"",
        "\"font.serif\"",
        "\"Times\"",
        "\"Palatino\"",
        "\"New Century Schoolbook\"",
        "\"Bookman\"",
        "\"Computer Modern Roman\"",
        "\"Times New Roman\"",
        "\"font.sans-serif\"",
        "\"Helvetica\"",
        "\"Avant Garde\"",
        "\"Computer Modern Sans serif\"",
        "\"Arial\"",
        "\"axes.color_cycle\"",
        "\"#333333\"",
        "\"348ABD\"",
        "\"7A68A6\"",
        "\"A60628\"",
        "\"467821\"",
        "\"CF4457\"",
        "\"188487\"",
        "\"E24A33\"",
        "\"legend.fancybox\"",
        "\"True\"",
        "\"figure.figsize\"",
        "\"11, 8\"",
        "\"figure.facecolor\"",
        "\"1.0\"",
        "\"figure.edgecolor\"",
        "\"0.50\"",
        "\"figure.subplot.hspace\"",
        "\"0.5\"",
        "'bottom'",
        "'left'",
        "'minor'",
        "'#F2F2F2'",
        "'-'",
        "\"lines.linewidth\"",
        "\"2.0\"",
        "\"patch.linewidth\"",
        "\"0.5\"",
        "\"legend.fancybox\"",
        "\"True\"",
        "\"axes.color_cycle\"",
        "\"#30a2da\"",
        "\"#fc4f30\"",
        "\"#e5ae38\"",
        "\"#6d904f\"",
        "\"#8b8b8b\"",
        "\"axes.facecolor\"",
        "\"#f0f0f0\"",
        "\"axes.labelsize\"",
        "\"large\"",
        "\"axes.axisbelow\"",
        "\"True\"",
        "\"axes.grid\"",
        "\"True\"",
        "\"patch.edgecolor\"",
        "\"#f0f0f0\"",
        "\"axes.titlesize\"",
        "\"x-large\"",
        "\"svg.embed_char_paths\"",
        "\"path\"",
        "\"figure.facecolor\"",
        "\"#f0f0f0\"",
        "\"grid.linestyle\"",
        "\"-\"",
        "\"grid.linewidth\"",
        "\"1.0\"",
        "\"grid.color\"",
        "\"#cbcbcb\"",
        "\"axes.edgecolor\"",
        "\"#f0f0f0\"",
        "\"xtick.major.size\"",
        "\"0\"",
        "\"xtick.minor.size\"",
        "\"0\"",
        "\"ytick.major.size\"",
        "\"0\"",
        "\"ytick.minor.size\"",
        "\"0\"",
        "\"axes.linewidth\"",
        "\"3.0\"",
        "\"font.size\"",
        "\"14.0\"",
        "\"lines.linewidth\"",
        "\"4\"",
        "\"lines.solid_capstyle\"",
        "\"butt\"",
        "\"savefig.edgecolor\"",
        "\"#f0f0f0\"",
        "\"savefig.facecolor\"",
        "\"#f0f0f0\"",
        "\"figure.subplot.left\"",
        "\"0.08\"",
        "\"figure.subplot.right\"",
        "\"0.95\"",
        "\"figure.subplot.bottom\"",
        "\"0.07\"",
        "'bottom'",
        "'left'",
        "'minor'",
        "'#F2F2F2'",
        "'-'",
        "\"timezone\"",
        "\"UTC\"",
        "\"lines.linewidth\"",
        "\"1.0\"",
        "\"lines.antialiased\"",
        "\"True\"",
        "\"patch.linewidth\"",
        "\"0.5\"",
        "\"patch.facecolor\"",
        "\"348ABD\"",
        "\"patch.edgecolor\"",
        "\"#E5E5E5\"",
        "\"patch.antialiased\"",
        "\"True\"",
        "\"font.family\"",
        "\"sans-serif\"",
        "\"font.size\"",
        "\"12.0\"",
        "\"font.serif\"",
        "\"Times\"",
        "\"Palatino\"",
        "\"New Century Schoolbook\"",
        "\"Bookman\"",
        "\"Computer Modern Roman\"",
        "\"Times New Roman\"",
        "\"font.sans-serif\"",
        "\"Helvetica\"",
        "\"Avant Garde\"",
        "\"Computer Modern Sans serif\"",
        "\"Arial\"",
        "\"axes.facecolor\"",
        "\"#E5E5E5\"",
        "\"axes.edgecolor\"",
        "\"bcbcbc\"",
        "\"axes.linewidth\"",
        "\"1\"",
        "\"axes.grid\"",
        "\"True\"",
        "\"axes.titlesize\"",
        "\"x-large\"",
        "\"axes.labelsize\"",
        "\"large\"",
        "\"axes.labelcolor\"",
        "\"black\"",
        "\"axes.axisbelow\"",
        "\"True\"",
        "\"axes.color_cycle\"",
        "\"#333333\"",
        "\"348ABD\"",
        "\"7A68A6\"",
        "\"A60628\"",
        "\"467821\"",
        "\"CF4457\"",
        "\"188487\"",
        "\"E24A33\"",
        "\"grid.color\"",
        "\"white\"",
        "\"grid.linewidth\"",
        "\"1.4\"",
        "\"grid.linestyle\"",
        "\"solid\"",
        "\"xtick.major.size\"",
        "\"0\"",
        "\"xtick.minor.size\"",
        "\"0\"",
        "\"xtick.major.pad\"",
        "\"6\"",
        "\"xtick.minor.pad\"",
        "\"6\"",
        "\"xtick.color\"",
        "\"#444444\"",
        "\"xtick.direction\"",
        "\"out\"",
        "\"ytick.major.size\"",
        "\"0\"",
        "\"ytick.minor.size\"",
        "\"0\"",
        "\"ytick.major.pad\"",
        "\"6\"",
        "\"ytick.minor.pad\"",
        "\"6\"",
        "\"ytick.color\"",
        "\"#444444\"",
        "\"ytick.direction\"",
        "\"out\"",
        "\"legend.fancybox\"",
        "\"True\"",
        "\"figure.figsize\"",
        "\"11, 8\"",
        "\"figure.facecolor\"",
        "\"1.0\"",
        "\"figure.edgecolor\"",
        "\"0.50\"",
        "\"figure.subplot.hspace\"",
        "\"0.5\"",
        "'bottom'",
        "'left'",
        "'minor'",
        "'#F2F2F2'",
        "'-'",
        "'figure.figsize'",
        "'lines.linewidth'",
        "'grid.linewidth'",
        "'font.sans-serif'",
        "'Helvetica'",
        "'font.serif'",
        "'Helvetica'",
        "'font.family'",
        "'Times New Roman'",
        "'font.size'",
        "'font.family'",
        "'serif'",
        "'font.weight'",
        "'bold'",
        "'axes.linewidth'",
        "'axes.labelsize'",
        "'legend.borderpad'",
        "'legend.markerscale'",
        "'legend.fancybox'",
        "'text.usetex'",
        "'image.aspect'",
        "'auto'",
        "'ps.useafm'",
        "'ps.fonttype'",
        "'xtick.major.size'",
        "'xtick.minor.size'",
        "'ytick.major.size'",
        "'ytick.minor.size'",
        "'text.latex.preamble'",
        "\"\\\\usepackage{amsmath}\"",
        "'font.sans-serif'",
        "'Helvetica'",
        "'font.serif'",
        "'Helvetica'",
        "'font.family'",
        "'Times New Roman'",
        "'font.size'",
        "\"axes.labelsize\"",
        "\"axes.titlesize\"",
        "\"xtick.labelsize\"",
        "\"ytick.labelsize\"",
        "\"legend.fontsize\"",
        "'font.family'",
        "'serif'",
        "'font.weight'",
        "'bold'",
        "'axes.labelsize'",
        "'text.usetex'",
        "'ps.useafm'",
        "'ps.fonttype'",
        "'text.latex.preamble'",
        "\"\\\\usepackage{amsmath}\"",
        "'parula'",
        "'parula'",
        "'parula'",
        "'parula'",
        "'parula_r'",
        "'parula_r'",
        "'parula_r'",
        "'parula_r'",
        "'parulaW'",
        "'parulaW'",
        "'parulaW'",
        "'parulaW'",
        "'parulaW_r'",
        "'parulaW_r'",
        "'parulaW_r'",
        "'parulaW_r'"
    ],
    "variables": [
        "faststats",
        "PY3",
        "iteritems",
        "itervalues",
        "basestring",
        "iteritems",
        "itervalues",
        "basestring",
        "ax",
        "dx",
        "xx",
        "yy",
        "xx",
        "_vmin",
        "_vmax",
        "cNorm",
        "scalarMap",
        "colors",
        "colors",
        "ax",
        "fig",
        "axlim",
        "_sp",
        "_txt_vis",
        "_sp",
        "k",
        "_xax",
        "_yax",
        "_patch",
        "extents",
        "sio",
        "im",
        "ax",
        "lines",
        "ax",
        "patches",
        "ax",
        "tables",
        "ax",
        "artists",
        "ax",
        "images",
        "ax",
        "collections",
        "_x",
        "_xerr",
        "m",
        "M",
        "dx",
        "N",
        "N",
        "_xp",
        "_xp",
        "norm_pdf",
        "_yp",
        "x0",
        "y0",
        "yn",
        "yn",
        "idx",
        "yn",
        "k",
        "m",
        "M",
        "dx",
        "N",
        "N",
        "_xp",
        "_xp",
        "ax",
        "H",
        "xbins",
        "ybins",
        "H",
        "threshold",
        "levels",
        "levels",
        "extent",
        "i_min",
        "outline",
        "outer_poly",
        "X",
        "points_inside",
        "points_inside",
        "Xplot",
        "float_str",
        "exponent",
        "labelSize",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "ax",
        "_w",
        "_w",
        "axes",
        "axes",
        "axes",
        "ax",
        "_w",
        "_w",
        "scales",
        "lbls",
        "ax",
        "nx",
        "ny",
        "nx",
        "ny",
        "weights",
        "reduce_w",
        "finite_inds",
        "_x",
        "_y",
        "_w",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "dx",
        "dy",
        "xyi",
        "xyi",
        "d",
        "key",
        "d",
        "key",
        "_xyi",
        "_w",
        "_grid",
        "B",
        "B",
        "B",
        "y",
        "x",
        "xi",
        "yi",
        "B",
        "h",
        "b",
        "ax",
        "x",
        "l",
        "_w",
        "ylim",
        "ax",
        "im",
        "e",
        "V",
        "data",
        "mu",
        "cov",
        "facecolor",
        "edgecolor",
        "x",
        "y",
        "U",
        "S",
        "V",
        "theta",
        "ellipsePlot",
        "ax",
        "t",
        "N",
        "edges",
        "block_length",
        "nn_vec",
        "best",
        "last",
        "width",
        "count_vec",
        "fit_vec",
        "i_max",
        "last",
        "K",
        "best",
        "K",
        "change_points",
        "i_cp",
        "ind",
        "change_points",
        "i_cp",
        "ind",
        "change_points",
        "x",
        "sx",
        "sx",
        "quants",
        "x",
        "n",
        "r",
        "k",
        "h",
        "h",
        "k",
        "q",
        "h",
        "k",
        "r",
        "m",
        "s",
        "_x",
        "ax",
        "bins",
        "n",
        "b",
        "p",
        "n",
        "b",
        "p",
        "c",
        "ind",
        "_ylim",
        "_hpd",
        "nx",
        "cx",
        "cn",
        "sx",
        "sx",
        "min_int",
        "n",
        "start",
        "end",
        "min_width",
        "hi",
        "lo",
        "width",
        "min_width",
        "min_int",
        "val",
        "rval",
        "cval",
        "cval",
        "ind",
        "res",
        "x",
        "y",
        "x",
        "y",
        "n",
        "weights",
        "weights",
        "gridsize",
        "gridsize",
        "nx",
        "ny",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "xmin",
        "xmax",
        "ymin",
        "ymax",
        "dx",
        "dy",
        "xyi",
        "xyi",
        "grid",
        "cov",
        "cov",
        "cov",
        "scotts_factor",
        "std_devs",
        "kern_nx",
        "kern_ny",
        "inv_cov",
        "xx",
        "yy",
        "xx",
        "yy",
        "kernel",
        "kernel",
        "kernel",
        "kernel",
        "kernel",
        "grid",
        "norm_factor",
        "norm_factor",
        "norm_factor",
        "shape",
        "n",
        "_data",
        "_p",
        "_p",
        "_wt",
        "len_p",
        "sd",
        "sw",
        "aw",
        "o",
        "i",
        "w",
        "spots",
        "o",
        "pk",
        "o",
        "pk",
        "f1",
        "f2",
        "o",
        "pk",
        "im",
        "e",
        "dx",
        "dy",
        "x",
        "y",
        "im",
        "e",
        "dx",
        "dy",
        "im",
        "e",
        "dx",
        "dy",
        "best_idx",
        "best",
        "V",
        "Hflat",
        "inds",
        "Hflat",
        "sm",
        "V",
        "i",
        "V",
        "i",
        "defaults",
        "ax",
        "defaults",
        "ax",
        "defaults",
        "ax",
        "defaults",
        "xe",
        "ye",
        "x",
        "y",
        "nx",
        "ny",
        "nh",
        "ind",
        "levels",
        "c_defaults",
        "c",
        "lvls",
        "s_defaults",
        "kde",
        "x",
        "xmin",
        "xmax",
        "xmin",
        "xmax",
        "x",
        "n",
        "weights",
        "weights",
        "gridsize",
        "gridsize",
        "nx",
        "dx",
        "xyi",
        "xyi",
        "xyi",
        "grid",
        "std_x",
        "scotts_factor",
        "kern_nx",
        "kernel",
        "npad",
        "grid",
        "grid",
        "norm_factor",
        "norm_factor",
        "im",
        "e",
        "dx",
        "x",
        "dx",
        "im",
        "e",
        "im",
        "e",
        "dx",
        "best",
        "ax",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "pos",
        "pos",
        "ax",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "violin",
        "e",
        "xvals",
        "xvals",
        "violin",
        "ax",
        "kwargs",
        "h",
        "xe",
        "ye",
        "levels",
        "levels",
        "levels",
        "levels",
        "cont",
        "cont",
        "ind",
        "nx",
        "ny",
        "nh",
        "ind",
        "level",
        "indices",
        "_indices",
        "indices",
        "x",
        "tx",
        "dims",
        "intervals",
        "index",
        "sx",
        "intervals",
        "index",
        "lbls",
        "limits",
        "fontmap",
        "fontmap",
        "k",
        "axes",
        "sharex",
        "sharex",
        "ax",
        "axes",
        "j",
        "i",
        "data",
        "n",
        "b",
        "p",
        "xlim",
        "data_x",
        "data_y",
        "sharey",
        "sharey",
        "ax",
        "axes",
        "j",
        "i",
        "xlim",
        "ylim",
        "data_x",
        "data_y",
        "sharey",
        "sharey",
        "ax",
        "axes",
        "j",
        "i",
        "xlim",
        "ylim",
        "N",
        "N",
        "M",
        "N",
        "square_x",
        "square_y",
        "ioff",
        "ioff",
        "Wmax",
        "c",
        "names",
        "data",
        "names",
        "names",
        "names",
        "data",
        "names",
        "data",
        "names",
        "positions",
        "positions",
        "dyn",
        "data",
        "order",
        "data",
        "positions",
        "names",
        "ax",
        "r",
        "V",
        "Hflat",
        "inds",
        "Hflat",
        "sm",
        "V",
        "i",
        "V",
        "i",
        "V",
        "Hflat",
        "inds",
        "Hflat",
        "sm",
        "V",
        "i",
        "V",
        "i",
        "Z",
        "lt",
        "lm",
        "cX",
        "cY",
        "X",
        "Y",
        "im",
        "cb",
        "cb",
        "_drop",
        "ncols",
        "nlines",
        "shape",
        "axes",
        "lbls",
        "usekde",
        "ticksrotation",
        "gaussian_ellipse",
        "hpd",
        "weights",
        "max_n_ticks",
        "bins",
        "x",
        "dx",
        "bins",
        "yk",
        "xk",
        "kxk",
        "kyk",
        "sharex",
        "sharey",
        "sharey",
        "sharex",
        "ax",
        "axes",
        "yk",
        "xk",
        "kde",
        "data",
        "mu",
        "cov",
        "kde",
        "n",
        "_",
        "xn",
        "ylim",
        "xn",
        "lbls",
        "bins",
        "x",
        "dx",
        "bins",
        "xlabels",
        "ndim",
        "nlines",
        "axes",
        "ax",
        "kde",
        "n",
        "_",
        "xn",
        "ylim",
        "xn",
        "_allowed_keys",
        "_rcParams",
        "k",
        "keys",
        "fn",
        "fn",
        "_re",
        "_re",
        "_re",
        "_keys",
        "_keys",
        "rcParams",
        "theme",
        "_rcstate",
        "_rcstate",
        "style",
        "gridweight",
        "context",
        "gridweights",
        "glw",
        "glw",
        "glw",
        "glw",
        "lw",
        "ax_params",
        "lw",
        "ax_params",
        "ax_params",
        "ticksize",
        "tickwidth",
        "ax_params",
        "ax_params",
        "font_params",
        "font_params",
        "font_params",
        "font_params",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "labelSize",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "labelSize",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "rcParams",
        "kwargs",
        "cm_data",
        "parula_map",
        "parula_r_map",
        "parula_map",
        "parula_r_map"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "just in case notebook was not launched with the option",
        "%pylab inline",
        "==============================================================================",
        "Python 3 compatibility behavior",
        "==============================================================================",
        "remap some python 2 built-ins on to py3k behavior or equivalent",
        "Most of them become generators",
        "==============================================================================",
        "============= FIGURE SETUP FUNCTIONS =========================================",
        "==============================================================================",
        "old mpl",
        "setup: make all visible spines (axes & ticks) & text invisible",
        "we need to set these back later, so we save their current state",
        "convert canvas to PNG",
        "clear everything on axis (but not text)",
        "Show the image",
        "restore all the spines & text",
        "check inputs",
        "def the evaluation points",
        "draw a zero-width line: this gives us the outer polygon to",
        "reduce the number of points we draw",
        "somewhat hackish... we could probably get the same info from",
        "the filled contour below.",
        "this works in newer matplotlib versions",
        "this works in older matplotlib versions",
        "==============================================================================",
        "==============================================================================",
        "==============================================================================",
        "define the bins (do anything you want here but needs edges and sizes of the 2d bins)",
        "values you want to be reported",
        "culling nans",
        "Basically, this is just doing what np.digitize does with one less copy",
        "xyi contains the bins of each point as a 2d array [(xi,yi)]",
        "exploit a sparse coo_matrix to build the 2D histogram...",
        "convert sparse to array with filled value",
        "grid.toarray() does not account for filled value",
        "sparse.coo.coo_todense() does actually add the values to the existing ones, i.e. not what we want -> brute force",
        "Brute force only went needed",
        "reinterp",
        "some sane defaults",
        "copy and sort the array",
        "create length-(N + 1) array of cell edges",
        "arrays needed for the iteration",
        "-----------------------------------------------------------------",
        "Start with first data cell; add one cell at each iteration",
        "-----------------------------------------------------------------",
        "Compute the width and count of the final bin for all possible",
        "locations of the K^th changepoint",
        "evaluate fitness function for these possibilities",
        "4 comes from the prior on the number of changepoints",
        "find the max of the fitness: this is the K^th changepoint",
        "-----------------------------------------------------------------",
        "Recover changepoints by iteratively peeling off the last block",
        "-----------------------------------------------------------------",
        "Make a copy of trace",
        "For multivariate node",
        "Transpose first, then sort, then transpose back",
        "Sort univariate node",
        "Generate specified quantiles",
        "dc = 0.5 * (b[:-1] - b[1:])",
        "Initialize interval",
        "Number of elements in trace",
        "Start at far left",
        "Initialize minimum width to large value",
        "Endpoints of interval",
        "Width of interval",
        "Check to see if width is narrower than minimum",
        "Increment endpoints",
        "flatten the array to a 1d list",
        "inplace sort",
        "reverse order",
        "cumulative values",
        "retrieve the largest indice up to the fraction of the sample we want",
        "Variable check",
        "Default: Weight all points equally",
        "Optimize gridsize ------------------------------------------------------",
        "Make grid and discretize the data and round it to the next power of 2",
        "to optimize with the fft usage",
        "round to next power of 2",
        "Make the sparse 2d-histogram -------------------------------------------",
        "Default extents are the extent of the data",
        "Basically, this is just doing what np.digitize does with one less copy",
        "xyi contains the bins of each point as a 2d array [(xi,yi)]",
        "Next, make a 2D histogram of x & y.",
        "Exploit a sparse coo_matrix avoiding np.histogram2d due to excessive",
        "memory usage with many points",
        "Kernel Preliminary Calculations ---------------------------------------",
        "Calculate the covariance matrix (in pixel coords)",
        "Scaling factor for bandwidth",
        "For 2D",
        "Make the gaussian kernel ---------------------------------------------",
        "First, determine the bandwidth using Scott's rule",
        "(note that Silvermann's rule gives the # same value for 2d datasets)",
        "Determine the bandwidth to use for the gaussian kernel",
        "x & y (pixel) coords of the kernel grid, with <x,y> = <0,0> in center",
        "Then evaluate the gaussian function on the kernel grid",
        "Convolve the histogram with the gaussian kernel",
        "use boundary=symm to correct for data boundaries in the kde",
        "Normalization factor to divide result by so that units are in the same",
        "units as scipy.stats.kde.gaussian_kde's output.",
        "Normalize the result",
        "check if actually weighted percentiles is needed",
        "make sure percentiles are fractions between 0 and 1",
        "Make sure data is in correct shape",
        "levels = np.linspace(self.im.min(), self.im.max(), 10)[1:]",
        "Variable check",
        "Default extents are the extent of the data",
        "Default: Weight all points equally",
        "Optimize gridsize ------------------------------------------------------",
        "Make grid and discretize the data and round it to the next power of 2",
        "to optimize with the fft usage",
        "round to next power of 2",
        "Make the sparse 2d-histogram -------------------------------------------",
        "Basically, this is just doing what np.digitize does with one less copy",
        "xyi contains the bins of each point as a 2d array [(xi,yi)]",
        "Next, make a 2D histogram of x & y.",
        "Exploit a sparse coo_matrix avoiding np.histogram2d due to excessive",
        "memory usage with many points",
        "Kernel Preliminary Calculations ---------------------------------------",
        "Scaling factor for bandwidth",
        "For n ** (-1. / (d + 4))",
        "Silvermann n * (d + 2) / 4.)**(-1. / (d + 4)).",
        "Make the gaussian kernel ---------------------------------------------",
        "First, determine the bandwidth using Scott's rule",
        "(note that Silvermann's rule gives the # same value for 2d datasets)",
        "Then evaluate the gaussian function on the kernel grid",
        "---- Produce the kernel density estimate --------------------------------",
        "Convolve the histogram with the gaussian kernel",
        "use symmetric padding to correct for data boundaries in the kde",
        "Normalization factor to divide result by so that units are in the same",
        "units as scipy.stats.kde.gaussian_kde's output.",
        "Normalize the result",
        "draw the positions",
        "Draw the lines",
        "Draw the lines",
        "Draw the violin.",
        "Kernel density estimate for data at this position.",
        "Make a copy of trace",
        "For multivariate node",
        "Transpose first, then sort",
        "Container list for intervals",
        "Sort trace",
        "Append to list",
        "Transpose back before returning",
        "Plot the histograms.",
        "central values",
        "gaussian_corner = kwargs.pop('gaussian_corner', False)",
        "elif not gaussian_corner:",
        "ax.set_xlim(bins[xk][0], bins[xk][1])",
        "=============================================================================",
        "Implementing THEMES in plt",
        "=============================================================================",
        "select grid line width:",
        "Determine the font sizes",
        "Set other parameters",
        "Remove axis border",
        "Restyle the tick lines",
        "Only show bottom left ticks",
        "Set minor grid lines",
        "Remove axis border",
        "Restyle the tick lines",
        "Only show bottom left ticks",
        "Set minor grid lines",
        "pointing out of axis",
        "pointing out of axis",
        "Remove axis border",
        "Restyle the tick lines",
        "Only show bottom left ticks",
        "Set minor grid lines"
    ],
    "docstrings": [
        "\"\"\" update plot to make it nice and uniform \"\"\"",
        "\"\"\" Steppify a curve (x,y). Useful for manually filling histograms \"\"\"",
        "\"\"\" Associate a color map to a quantity vector \"\"\"",
        "\"\"\"Convert axes contents to a png.\n\n    This is useful when plotting many points, as the size of the saved file\n    can become very large otherwise.\n\n    Parameters\n    ----------\n    ax : Axes instance (optional)\n        Axes to de-vectorize.  If None, this uses the current active axes\n        (plt.gca())\n    dpi: int (optional)\n        resolution of the png image.  If not specified, the default from\n        'savefig.dpi' in rcParams will be used\n    transparent : bool (optional)\n        if True (default) then the PNG will be made transparent\n\n    Returns\n    -------\n    ax : Axes instance\n        the in-place modified Axes instance\n\n    Examples\n    --------\n    The code can be used in the following way::\n\n        import matplotlib.pyplot as plt\n        fig, ax = plt.subplots()\n        x, y = np.random.random((2, 10000))\n        ax.scatter(x, y)\n        devectorize_axes(ax)\n        plt.savefig('devectorized.pdf')\n\n    The resulting figure will be much smaller than the vectorized version.\n    \"\"\"",
        "\"\"\"Scatter plot with contour over dense regions\n\n    Parameters\n    ----------\n    x, y : arrays\n        x and y data for the contour plot\n    levels : integer or array (optional, default=10)\n        number of contour levels, or array of contour levels\n    threshold : float (default=100)\n        number of points per 2D bin at which to begin drawing contours\n    log_counts :boolean (optional)\n        if True, contour levels are the base-10 logarithm of bin counts.\n    histogram2d_args : dict\n        keyword arguments passed to numpy.histogram2d\n        see doc string of numpy.histogram2d for more information\n    plot_args : dict\n        keyword arguments passed to pylab.scatter\n        see doc string of pylab.scatter for more information\n    contourf_args : dict\n        keyword arguments passed to pylab.contourf\n        see doc string of pylab.contourf for more information\n    ax : pylab.Axes instance\n        the axes on which to plot.  If not specified, the current\n        axes will be used\n    \"\"\"",
        "\"\"\"\n    slides - Define params to make pretty fig for slides\n    \"\"\"",
        "\"\"\"Remove the top and right spines from plot(s).\n\n    fig : matplotlib figure\n        figure to despine all axes of, default uses current figure\n    ax : matplotlib axes\n        specific axes object to despine\n    top, right, left, bottom : boolean\n        if True, remove that spine\n\n    \"\"\"",
        "\"\"\"\n        Tune the subplot layout via the meanings (and suggested defaults) are::\n\n            left  = 0.125  # the left side of the subplots of the figure\n            right = 0.9    # the right side of the subplots of the figure\n            bottom = 0.1   # the bottom of the subplots of the figure\n            top = 0.9      # the top of the subplots of the figure\n            wspace = 0.2   # the amount of width reserved for blank space between subplots\n            hspace = 0.2   # the amount of height reserved for white space between subplots\n\n        The actual defaults are controlled by the rc file\n\n        \"\"\"",
        "\"\"\"\n        setNmajors - set major tick number\n        see figure.MaxNLocator for kwargs\n        \"\"\"",
        "\"\"\"\n    Compute the sparse bi-dimensional histogram of two data samples where *x*,\n    and *y* are 1-D sequences of the same length. If *weights* is None\n    (default), this is a histogram of the number of occurences of the\n    observations at (x[i], y[i]).\n\n    If *weights* is specified, it specifies values at the coordinate (x[i],\n    y[i]). These values are accumulated for each bin and then reduced according\n    to *reduce_w* function, which defaults to numpy's sum function (np.sum).\n    (If *weights* is specified, it must also be a 1-D sequence of the same\n    length as *x* and *y*.)\n\n    INPUTS:\n        x       ndarray[ndim=1]         first data sample coordinates\n        y       ndarray[ndim=1]         second data sample coordinates\n\n    KEYWORDS:\n        bins                            the bin specification\n                   int                     the number of bins for the two dimensions (nx=ny=bins)\n                or [int, int]              the number of bins in each dimension (nx, ny = bins)\n        weights     ndarray[ndim=1]     values *w_i* weighing each sample *(x_i, y_i)*\n                                        accumulated and reduced (using reduced_w) per bin\n        reduce_w    callable            function that will reduce the *weights* values accumulated per bin\n                                        defaults to numpy's sum function (np.sum)\n        NULL        value type          filling missing data value\n        reinterp    str                 values are [None, 'nn', linear']\n                                        if set, reinterpolation is made using mlab.griddata to fill missing data\n                                        within the convex polygone that encloses the data\n\n    OUTPUTS:\n        B           ndarray[ndim=2]     bi-dimensional histogram\n        extent      tuple(4)            (xmin, xmax, ymin, ymax) entension of the histogram\n        steps       tuple(2)            (dx, dy) bin size in x and y direction\n\n    \"\"\"",
        "\"\"\" plot an histogram of data `a la R`: only bottom and left axis, with\n    dots at the bottom to represent the sample\n\n    Example\n    -------\n        import numpy as np\n        x = np.random.normal(0, 1, 1e3)\n        histplot(x, bins=50, density=True, ls='steps-mid')\n    \"\"\"",
        "\"\"\"\n    Plot the error ellipse at a point given its covariance matrix.\n\n    \"\"\"",
        "\"\"\"Bayesian Blocks Implementation\n\n    By Jake Vanderplas.  License: BSD\n    Based on algorithm outlined in http://adsabs.harvard.edu/abs/2012arXiv1207.5578S\n\n    Parameters\n    ----------\n    t : ndarray, length N\n        data to be histogrammed\n\n    Returns\n    -------\n    bins : ndarray\n        array containing the (N+1) bin edges\n\n    Notes\n    -----\n    This is an incomplete implementation: it may fail for some\n    datasets.  Alternate fitness functions and prior forms can\n    be found in the paper listed above.\n    \"\"\"",
        "\"\"\"computes quantiles from an array\n\n    Quantiles :=  points taken at regular intervals from the cumulative\n    distribution function (CDF) of a random variable. Dividing ordered data\n    into q essentially equal-sized data subsets is the motivation for\n    q-quantiles; the quantiles are the data values marking the boundaries\n    between consecutive subsets.\n\n    The quantile with a fraction 50 is called the median\n    (50% of the distribution)\n\n    Inputs:\n        x     - variable to evaluate from\n        qlist - quantiles fraction to estimate (in %)\n\n    Outputs:\n        Returns a dictionary of requested quantiles from array\n    \"\"\"",
        "\"\"\" Determine the optimal binning of the data based on common estimators\n    and returns either the number of bins of the width to use.\n\n    input:\n        data    1d dataset to estimate from\n    keywords:\n        method  the method to use: str in {sturge, scott, freedman}\n        ret set to N will return the number of bins / edges\n            set to W will return the width\n    refs:\n        Sturges, H. A. (1926).\"The choice of a class interval\". J. American Statistical Association, 65-66\n        Scott, David W. (1979), \"On optimal and data-based histograms\". Biometrika, 66, 605-610\n        Freedman, D.; Diaconis, P. (1981). \"On the histogram as a density estimator: L2 theory\".\n                Zeitschrift fur Wahrscheinlichkeitstheorie und verwandte Gebiete, 57, 453-476\n        Scargle, J.D. et al (2012) \"Studies in Astronomical Time Series Analysis. VI. Bayesian\n        Block Representations.\"\n    \"\"\"",
        "\"\"\" Plot the MAP of a given sample and add statistical info\n    If not specified, binning is assumed from the error value or using\n    mystats.optbins if available.\n    if mystats module is not available, hpd keyword has no effect\n\n    inputs:\n        x   dataset\n    keywords\n        ax  axe object to use during plotting\n        error   error to consider on the estimations\n        frac    fractions of sample to highlight (def 65%, 95%, 97.5%)\n        hpd if set, uses mystats.hpd to estimate the confidence intervals\n\n        hist    keywords forwarded to hist command\n        optbins keywords forwarded to mystats.optbins command\n        vlines  keywords forwarded to vlines command\n        fill    keywords forwarded to fill command\n        \"\"\"",
        "\"\"\"Internal method to determine the minimum interval of\n    a given width\"\"\"",
        "\"\"\"\n    Return image levels that corresponds to given percentiles values\n    Uses the cumulative distribution of the sorted image density values\n    Hence this works also for any nd-arrays\n    inputs:\n        h   array\n    outputs:\n        res array containing level values\n    keywords:\n        frac    sample fractions (percentiles)\n            could be scalar or iterable\n            default: 50%, 65%, 95%, and 97.5%\n\n    \"\"\"",
        "\"\"\"\n    A fft-based Gaussian kernel density estimate (KDE)\n    for computing the KDE on a regular grid\n\n    Note that this is a different use case than scipy's original\n    scipy.stats.kde.gaussian_kde\n\n    IMPLEMENTATION\n    --------------\n\n    Performs a gaussian kernel density estimate over a regular grid using a\n    convolution of the gaussian kernel with a 2D histogram of the data.\n\n    It computes the sparse bi-dimensional histogram of two data samples where\n    *x*, and *y* are 1-D sequences of the same length. If *weights* is None\n    (default), this is a histogram of the number of occurences of the\n    observations at (x[i], y[i]).\n    histogram of the data is a faster implementation than numpy.histogram as it\n    avoids intermediate copies and excessive memory usage!\n\n\n    This function is typically *several orders of magnitude faster* than\n    scipy.stats.kde.gaussian_kde.  For large (>1e7) numbers of points, it\n    produces an essentially identical result.\n\n    Boundary conditions on the data is corrected by using a symmetric /\n    reflection condition. Hence the limits of the dataset does not affect the\n    pdf estimate.\n\n    Parameters\n    ----------\n\n        x, y:  ndarray[ndim=1]\n            The x-coords, y-coords of the input data points respectively\n\n        gridsize: tuple\n            A (nx,ny) tuple of the size of the output grid (default: 200x200)\n\n        extents: (xmin, xmax, ymin, ymax) tuple\n            tuple of the extents of output grid (default: extent of input data)\n\n        nocorrelation: bool\n            If True, the correlation between the x and y coords will be ignored\n            when preforming the KDE. (default: False)\n\n        weights: ndarray[ndim=1]\n            An array of the same shape as x & y that weights each sample (x_i,\n            y_i) by each value in weights (w_i).  Defaults to an array of ones\n            the same size as x & y. (default: None)\n\n        adjust : float\n            An adjustment factor for the bw. Bandwidth becomes bw * adjust.\n\n    Returns\n    -------\n        g: ndarray[ndim=2]\n            A gridded 2D kernel density estimate of the input points.\n\n        e: (xmin, xmax, ymin, ymax) tuple\n            Extents of g\n\n    \"\"\"",
        "\"\"\"Compute weighted percentiles.\n\n    If the weights are equal, this is the same as normal percentiles.\n    Elements of the data and wt arrays correspond to each other and must have\n    equal length.\n    If wt is None, this function calls numpy's percentile instead (faster)\n\n\n    Implementation\n    --------------\n\n    The method implemented here extends the commom percentile estimation method\n    (linear interpolation beteeen closest ranks) approach in a natural way.\n    Suppose we have positive weights, W= [W_i], associated, respectively, with\n    our N sorted sample values, D=[d_i]. Let S_n = Sum_i=0..n {w_i} the\n    the n-th partial sum of the weights. Then the n-th percentile value is\n    given by the interpolation between its closest values v_k, v_{k+1}:\n\n        v = v_k + (p - p_k) / (p_{k+1} - p_k) * (v_{k+1} - v_k)\n\n    where\n        p_n = 100/S_n * (S_n - w_n/2)\n\n    Note that the 50th weighted percentile is known as the weighted median.\n\n\n    Parameters\n    ----------\n    data: ndarray[float, ndim=1]\n        data points\n\n    percentiles: ndarray[float, ndim=1]\n        percentiles to use. (between 0 and 100)\n\n    weights: ndarray[float, ndim=1] or None\n        Weights of each point in data\n        All the weights must be non-negative and the sum must be\n        greater than zero.\n\n    Returns\n    -------\n    val: ndarray\n        the weighted percentiles of the data.\n    \"\"\"",
        "\"\"\" Generates N sigma levels from a image map\n\n        Parameters\n        ----------\n\n        H: ndarray\n            values to find levels from\n\n        N: int\n            number of sigma levels to find\n\n        Returns\n        -------\n        lvls: sequence\n            Levels corresponding to 1..(N + 1) sigma levels\n        \"\"\"",
        "\"\"\"\n    A fft-based Gaussian kernel density estimate (KDE)\n    for computing the KDE on a regular grid\n\n    Note that this is a different use case than scipy's original\n    scipy.stats.kde.gaussian_kde\n\n    IMPLEMENTATION\n    --------------\n\n    Performs a gaussian kernel density estimate over a regular grid using a\n    convolution of the gaussian kernel with a 2D histogram of the data.\n\n    It computes the sparse bi-dimensional histogram of two data samples where\n    *x*, and *y* are 1-D sequences of the same length. If *weights* is None\n    (default), this is a histogram of the number of occurences of the\n    observations at (x[i], y[i]).\n    histogram of the data is a faster implementation than numpy.histogram as it\n    avoids intermediate copies and excessive memory usage!\n\n\n    This function is typically *several orders of magnitude faster* than\n    scipy.stats.kde.gaussian_kde.  For large (>1e7) numbers of points, it\n    produces an essentially identical result.\n\n    **Example usage and timing**\n\n        from scipy.stats import gaussian_kde\n\n        def npkde(x, xe):\n            kde = gaussian_kde(x)\n            r = kde.evaluate(xe)\n            return r\n        x = np.random.normal(0, 1, 1e6)\n\n        %timeit fastkde1D(x)\n        10 loops, best of 3: 31.9 ms per loop\n\n        %timeit npkde(x, xe)\n        1 loops, best of 3: 11.8 s per loop\n\n        ~ 1e4 speed up!!! However gaussian_kde is not optimized for this application\n\n    Boundary conditions on the data is corrected by using a symmetric /\n    reflection condition. Hence the limits of the dataset does not affect the\n    pdf estimate.\n\n    INPUTS\n    ------\n\n        xin:  ndarray[ndim=1]\n            The x-coords, y-coords of the input data points respectively\n\n        gridsize: int\n            A nx integer of the size of the output grid (default: 200x200)\n\n        extents: (xmin, xmax) tuple\n            tuple of the extents of output grid (default: extent of input data)\n\n        weights: ndarray[ndim=1]\n            An array of the same shape as x that weights each sample x_i\n            by w_i.  Defaults to an array of ones the same size as x (default: None)\n\n        adjust : float\n            An adjustment factor for the bw. Bandwidth becomes bw * adjust.\n\n    OUTPUTS\n    -------\n        g: ndarray[ndim=2]\n            A gridded 2D kernel density estimate of the input points.\n\n        e: (xmin, xmax, ymin, ymax) tuple\n            Extents of g\n\n    \"\"\"",
        "\"\"\"\n    Plot a the density of x,y given certain contour paramters and includes\n    individual points (not represented by contours)\n\n    inputs:\n        x,y data to plot\n\n    keywords:\n        bins    bin definition for the density histogram\n        ax  use a specific axis\n        Nlevels the number of levels to use with contour\n        levels  levels\n        frac    percentiles to contour if specified\n\n        Extra keywords:\n        *args, **kwargs forwarded to histogram2d\n        **contour       forwarded to contour function\n        **contourf      forwarded to contourf function\n        **plot          forwarded to contourf function\n\n    \"\"\"",
        "\"\"\" Generates complete set of indices for given dimensions \"\"\"",
        "\"\"\"Calculate HPD (minimum width BCI) of array for given alpha\"\"\"",
        "\"\"\" Plot correlation matrix between variables\n        inputs\n        -------\n        l: dict\n            dictionary of variables (could be a Table)\n\n        pars: sequence of str\n            parameters to use\n\n        plotfunc: callable\n            function to be called when doing the scatter plots\n\n        lbls: sequence of str\n            sequence of string to use instead of dictionary keys\n\n        limits: dict\n            impose limits for some paramters. Each limit should be pairs of values.\n            No need to define each parameter limits\n\n        triangle: str in ['upper', 'lower']\n            Which side of the triangle to use.\n\n        devectorize: bool\n            if set, rasterize the figure to reduce its size\n\n        *args, **kwargs are forwarded to the plot function\n\n        Example\n        -------\n            import numpy as np\n            figrc.ezrc(16, 1, 16, 5)\n\n            d = {}\n\n            for k in range(4):\n                d[k] = np.random.normal(0, k+1, 1e4)\n\n            plt.figure(figsize=(8 * 1.5, 7 * 1.5))\n            plotCorr(d, d.keys(), plotfunc=figrc.scatter_plot)\n            #plotCorr(d, d.keys(), alpha=0.2)\n        \"\"\"",
        "\"\"\"Draw a hinton diagram of the matrix W on the current pylab axis\n\n    Hinton diagrams are a way of visualizing numerical values in a matrix/vector,\n    popular in the neural networks and machine learning literature. The area\n    occupied by a square is proportional to a value's magnitude, and the colour\n    indicates its sign (positive/negative).\n\n    Example usage:\n\n        R = np.random.normal(0, 1, (2,1000))\n        h, ex, ey = np.histogram2d(R[0], R[1], bins=15)\n        hh = h - h.T\n        hinton.hinton(hh)\n    \"\"\"",
        "\"\"\" Plot parallel coordinates of a data set\n\n    Each dimension is normalized and then plot either vertically or horizontally\n\n    Parameters\n    ----------\n    d: ndarray, recarray or dict\n        data to plot (one column or key per coordinate)\n\n    labels: sequence\n        sequence of string to use to define the label of each coordinate\n        default p{:d}\n\n    orientation: str\n        'horizontal' of 'vertical' to set the plot orientation accordingly\n\n    positions: sequence(float)\n        position of each plane on the main axis. Default is equivalent to\n        equidistant positioning.\n\n    ax: plt.Axes instance\n        axes to use for the figure, default plt.subplot(111)\n\n    **kwargs: dict\n        forwarded to :func:`plt.plot`\n    \"\"\"",
        "\"\"\" make a sequence of strings raw to avoid latex interpretation \"\"\"",
        "\"\"\" Filter latex \"\"\"",
        "\"\"\" return centers from bin sequence \"\"\"",
        "\"\"\" Generates N sigma levels from a image map\n\n        Parameters\n        ----------\n\n        H: ndarray\n            values to find levels from\n\n        sigs: sequence\n            sigma levels to find\n\n        Returns\n        -------\n        lvls: sequence\n            Levels values corresponding to requested sigmas\n        \"\"\"",
        "\"\"\" Generates N sigma levels from a image map\n\n    Parameters\n    ----------\n\n    H: ndarray\n        values to find levels from\n\n    N: int\n        number of sigma levels to find\n\n    Returns\n    -------\n    lvls: sequence\n        Levels corresponding to 1..(N + 1) sigma levels\n    \"\"\"",
        "\"\"\"\n    Plot density maps all elements of gx against all elements of gy\n\n    Parameters\n    ----------\n    d: dictionnary like structure\n        data structure\n\n    keys: sequence(str)\n        keys from d to plot\n\n    bins: sequence, optional\n        bins to use per dimension\n        default is adapted from the stddev\n\n    labels: sequence(str)\n        string to use as labels on the plots\n\n    usekde: bool, optional, default: true\n        if set use KDE to estimate densities, histograms otherwise\n\n    tickrotation: float, optional, default: 0\n        rotate the tick labels on the x-axis\n\n    gaussian_ellipse: bool, optional, default: True\n        if set, display the Gaussian error ellipse on top of each plot\n\n    hpd: bool, optional, default: True\n        if set display 1 and 3 sigma equivalent range on the 1d pdfs\n\n    weights: ndarray\n        weights to apply to each point\n\n    returns\n    -------\n    axes: sequence\n        all axes defined in the plot\n\n    .. note::\n\n        Other parameters are forwarded to :func:`plot_density_map`\n        1d pdfs calls :func:`plot_1d_PDFs`\n    \"\"\"",
        "\"\"\"\n    Parameters\n    ----------\n    d: dictionnary like structure\n        data structure\n\n    keys: sequence(str)\n        keys from d to plot\n\n    bins: sequence, optional\n        bins to use per dimension\n        default is adapted from the stddev\n\n    labels: sequence(str)\n        string to use as labels on the plots\n\n    usekde: bool, optional, default: true\n        if set use KDE to estimate densities, histograms otherwise\n\n    tickrotation: float, optional, default: 0\n        rotate the tick labels on the x-axis\n\n    hpd: bool, optional, default: True\n        if set display 1 and 3 sigma equivalent range on the 1d pdfs\n\n    weights: ndarray\n        weights to apply on each point\n\n    ncols: int\n        number of columns\n\n    returns\n    -------\n    axes: sequence\n        all axes defined in the plot\n    \"\"\"",
        "\"\"\"This is an abstract base class for themes.\n\n    In general, only complete themes should should subclass this class.\n\n\n    Notes\n    -----\n    When subclassing there are really only two methods that need to be\n    implemented.\n\n    __init__: This should call super().__init__ which will define\n    self._rcParams. Subclasses should customize self._rcParams after calling\n    super().__init__. That will ensure that the rcParams are applied at\n    the appropriate time.\n\n    The other method is apply_theme(ax). This method takes an axes object that\n    has been created during the plot process. The theme should modify the\n    axes according.\n\n    \"\"\"",
        "\"\"\"\n        Provide ggplot2 themeing capabilities.\n\n        Parameters\n        -----------\n        kwargs**: theme_element\n            kwargs are theme_elements based on http://docs.ggplot2.org/current/theme.html.\n            Currently only a subset of the elements are implemented. In addition,\n            Python does not allow using '.' in argument names, so we are using '_'\n            instead.\n\n            For example, ggplot2 axis.ticks.y will be  axis_ticks_y in Python ggplot.\n\n        \"\"\"",
        "\"\"\"\n        Return the data column names or a subset of it\n\n        Parameters\n        ----------\n        regexp: str\n            pattern to filter the keys with\n\n        full_match: bool\n            if set, use :func:`re.fullmatch` instead of :func:`re.match`\n\n        Try to apply the pattern at the start of the string, returning\n        a match object, or None if no match was found.\n\n        returns\n        -------\n        seq: sequence\n            sequence of keys\n        \"\"\"",
        "\"\"\"apply_theme will be called with an axes object after plot has completed.\n\n        Complete themes should implement this method if post plot themeing is\n        required.\n        \"\"\"",
        "\"\"\"Get an rcParams dict for this theme.\n\n        Notes\n        -----\n        Subclasses should not need to override this method method as long as\n        self._rcParams is constructed properly.\n\n        rcParams are used during plotting. Sometimes the same theme can be\n        achieved by setting rcParams before plotting or a post_plot_callback\n        after plotting. The choice of how to implement it is is a matter of\n        convenience in that case.\n\n        There are certain things can only be themed after plotting. There\n        may not be an rcParam to control the theme or the act of plotting\n        may cause an entity to come into existence before it can be themed.\n\n        \"\"\"",
        "\"\"\"\n    Theme for seaborn.\n    Copied from mwaskom's seaborn:\n        https://github.com/mwaskom/seaborn/blob/master/seaborn/rcmod.py\n    Parameters\n    ----------\n    style: whitegrid | darkgrid | nogrid | ticks\n        Style of axis background.\n    context: notebook | talk | paper | poster\n        Intended context for resulting figures.\n    gridweight: extra heavy | heavy | medium | light\n        Width of the grid lines. None\n    \"\"\"",
        "\"\"\"helper method to set the default rcParams and other theming relevant\n        things\n        \"\"\"",
        "\"\"\"\"Styles x,y axes to appear like ggplot2\n        Must be called after all plot and axis manipulation operations have\n        been carried out (needs to know final tick spacing)\n        From: https://github.com/wrobstory/climatic/blob/master/climatic/stylers.py\n        \"\"\"",
        "\"\"\"\n    Theme for 538.\n    http://dataorigami.net/blogs/napkin-folding/17543615-replicating-538s-plot-styles-in-matplotlib\n    \"\"\"",
        "'''Styles x,y axes to appear like ggplot2\n        Must be called after all plot and axis manipulation operations have\n        been carried out (needs to know final tick spacing)\n        From: https://github.com/wrobstory/climatic/blob/master/climatic/stylers.py\n        '''",
        "\"\"\"\n    Standard theme for ggplot. Gray background w/ white gridlines.\n    Copied from the the ggplot2 codebase:\n        https://github.com/hadley/ggplot2/blob/master/R/theme-defaults.r\n    \"\"\"",
        "'''Styles x,y axes to appear like ggplot2\n        Must be called after all plot and axis manipulation operations have\n        been carried out (needs to know final tick spacing)\n        From: https://github.com/wrobstory/climatic/blob/master/climatic/stylers.py\n        '''"
    ],
    "functions": [
        "tight_layout",
        "theme",
        "steppify",
        "colorify",
        "devectorize_axes",
        "hist_with_err",
        "normal",
        "hist_with_err_bootstrap",
        "__get_hesse_bins__",
        "scatter_contour",
        "latex_float",
        "ezrc",
        "hide_axis",
        "despine",
        "shift_axis",
        "setMargins",
        "setNmajors",
        "crazy_histogram2d",
        "histplot",
        "scatter_plot",
        "error_ellipse",
        "bayesian_blocks",
        "quantiles",
        "get_optbins",
        "sturge",
        "scott",
        "freedman",
        "bayesian",
        "plotMAP",
        "calc_min_interval",
        "getPercentileLevels",
        "fastkde",
        "percentile",
        "peak",
        "nice_levels",
        "percentiles_lvl",
        "imshow",
        "contour",
        "contourf",
        "scatter",
        "plot",
        "plot_kde2d",
        "fastkde1D",
        "peak",
        "add_markers",
        "plot",
        "plot_kde1d",
        "plotDensity",
        "make_indices",
        "hpd",
        "plotCorr",
        "hinton",
        "parallel_coordinates",
        "raw_string",
        "f",
        "get_centers_from_bins",
        "nice_sigma_levels",
        "nice_levels",
        "plot_density_map",
        "triangle_plot",
        "plot_1d_PDFs",
        "update",
        "__setitem__",
        "keys",
        "apply_theme",
        "get_rcParams",
        "__add__",
        "post_callback",
        "apply",
        "restore",
        "__enter__",
        "__exit__",
        "__call__",
        "_set_theme_seaborn_rcparams",
        "apply_theme",
        "apply_theme",
        "apply_theme",
        "post_callback",
        "declare_parula"
    ],
    "classes": [
        "AutoLocator",
        "KDE_2d",
        "KDE_1d",
        "Theme",
        "Theme_Seaborn",
        "Theme_538",
        "Theme_Gray",
        "Theme_Matplotlib",
        "Theme_Ezrc",
        "Theme_Latex",
        "Theme_TightLayout"
    ]
}