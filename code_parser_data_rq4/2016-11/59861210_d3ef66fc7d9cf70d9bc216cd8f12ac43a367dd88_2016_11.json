{
    "identifiers": [
        "UnityEngine",
        "Collections",
        "Collections",
        "Generic",
        "Controller",
        "IAudioController",
        "AudioSource",
        "AudioSource",
        "AudioData",
        "AudioData",
        "AudioData",
        "AudioData",
        "AudioData",
        "AudioData",
        "RandomizedQueue",
        "AudioFile",
        "RandomizedQueue",
        "AudioFile",
        "AudioSource",
        "AudioSource",
        "Header",
        "Init",
        "UnsubscribeEvents",
        "eventName",
        "playEvents",
        "ContainsKey",
        "eventName",
        "PlayAudioList",
        "playEvents",
        "eventName",
        "stopEvents",
        "ContainsKey",
        "eventName",
        "StopAudioList",
        "stopEvents",
        "eventName",
        "AudioFile",
        "file",
        "GetChannel",
        "file",
        "Channel",
        "CheckMute",
        "file",
        "source",
        "file",
        "TypeAsEnum",
        "AudioType",
        "FX",
        "source",
        "clip",
        "source",
        "isPlaying",
        "AudioUtil",
        "IsMuted",
        "AudioType",
        "FX",
        "StartCoroutine",
        "CompleteOnTempChannel",
        "source",
        "clip",
        "source",
        "time",
        "source",
        "volume",
        "file",
        "TypeAsEnum",
        "AudioType",
        "Music",
        "source",
        "clip",
        "file",
        "Clip",
        "shouldResumeClip",
        "clipTime",
        "source",
        "time",
        "source",
        "clip",
        "file",
        "Clip",
        "source",
        "loop",
        "file",
        "Loop",
        "source",
        "volume",
        "file",
        "Volumef",
        "shouldResumeClip",
        "source",
        "time",
        "clipTime",
        "source",
        "Play",
        "AudioFile",
        "file",
        "ChannelExists",
        "file",
        "Channel",
        "GetChannel",
        "file",
        "Channel",
        "source",
        "clip",
        "file",
        "Clip",
        "source",
        "Stop",
        "SettingsUtil",
        "ToggleSFXMuted",
        "SettingsUtil",
        "SFXMuted",
        "SettingsUtil",
        "SFXMuted",
        "StopAllCoroutines",
        "TeardownTempSFXChannels",
        "SettingsUtil",
        "ToggleMusicMuted",
        "SettingsUtil",
        "MusicMuted",
        "AudioFile",
        "file",
        "AudioSource",
        "source",
        "source",
        "mute",
        "AudioUtil",
        "IsMuted",
        "file",
        "TypeAsEnum",
        "channelNumber",
        "channels",
        "ContainsKey",
        "channelNumber",
        "channelNumber",
        "channels",
        "ContainsKey",
        "channelNumber",
        "channels",
        "channelNumber",
        "gameObject",
        "AddComponent",
        "AudioSource",
        "channels",
        "Add",
        "channelNumber",
        "newSource",
        "newSource",
        "SingletonUtil",
        "TryInit",
        "Instance",
        "gameObject",
        "loader",
        "AudioLoader",
        "path",
        "fileList",
        "loader",
        "Load",
        "fileList",
        "AreEventsSubscribed",
        "fileList",
        "SubscribeEvents",
        "fileList",
        "PopulateGroups",
        "InitFileDictionary",
        "fileList",
        "AddAudioEvents",
        "SubscribeEvents",
        "isAudioListener",
        "AddAudioListener",
        "PreloadFiles",
        "fileList",
        "Files",
        "AudioList",
        "audioFiles",
        "i",
        "audioFiles",
        "Length",
        "i",
        "data",
        "Add",
        "audioFiles",
        "i",
        "Name",
        "audioFiles",
        "i",
        "i",
        "fileList",
        "Length",
        "i",
        "AddPlayEvents",
        "fileList",
        "i",
        "AddStopEvents",
        "fileList",
        "i",
        "AddGroupEvents",
        "fileList",
        "AudioList",
        "AudioGroup",
        "Groups",
        "i",
        "groups",
        "Length",
        "i",
        "AddPlayEvents",
        "groups",
        "i",
        "AddStopEvents",
        "groups",
        "i",
        "AudioData",
        "file",
        "j",
        "file",
        "Events",
        "Length",
        "j",
        "playEvents",
        "ContainsKey",
        "file",
        "Events",
        "j",
        "playEvents",
        "file",
        "Events",
        "j",
        "Add",
        "file",
        "AudioData",
        "AudioData",
        "files",
        "Add",
        "file",
        "playEvents",
        "Add",
        "file",
        "Events",
        "j",
        "files",
        "AudioData",
        "file",
        "j",
        "file",
        "StopEvents",
        "Length",
        "j",
        "stopEvents",
        "ContainsKey",
        "file",
        "StopEvents",
        "j",
        "stopEvents",
        "file",
        "StopEvents",
        "j",
        "Add",
        "file",
        "AudioData",
        "AudioData",
        "files",
        "Add",
        "file",
        "stopEvents",
        "Add",
        "file",
        "StopEvents",
        "j",
        "files",
        "SubscribeEvents",
        "EventController",
        "OnAudioEvent",
        "HandleAudioEvent",
        "UnusbscribeEvents",
        "EventController",
        "OnAudioEvent",
        "HandleAudioEvent",
        "AudioActionType",
        "actionType",
        "AudioType",
        "audioType",
        "AudioUtil",
        "IsMuteAction",
        "actionType",
        "HandleMuteAction",
        "actionType",
        "audioType",
        "AudioActionType",
        "actionType",
        "AudioType",
        "audioType",
        "AudioSource",
        "source",
        "channels",
        "Values",
        "fileList",
        "GetAudioType",
        "source",
        "clip",
        "audioType",
        "source",
        "mute",
        "AudioUtil",
        "MutedBoolFromAudioAction",
        "actionType",
        "AudioData",
        "data",
        "i",
        "data",
        "Count",
        "i",
        "Play",
        "data",
        "i",
        "GetNextFile",
        "AudioData",
        "data",
        "i",
        "data",
        "Count",
        "i",
        "data",
        "i",
        "HasCurrentFile",
        "Stop",
        "data",
        "i",
        "GetCurrentFile",
        "gameObject",
        "AddComponent",
        "AudioListener",
        "_sweetenerCoroutine",
        "cycleTracksFrequenecyRange",
        "_sweeteners",
        "ShortestSweetenerPlayFrequenecy",
        "LongestSweetenerPlayFrequenecy",
        "_swellCoroutine",
        "cycleTracksContinuous",
        "_swells",
        "startCoroutines",
        "_sweetenerCoroutine",
        "_swellCoroutine",
        "_sweeteners",
        "RandomizedQueue",
        "AudioFile",
        "_swells",
        "RandomizedQueue",
        "AudioFile",
        "startTrackCycling",
        "RandomizedQueue",
        "AudioFile",
        "files",
        "_coroutinesActive",
        "files",
        "Cycle",
        "Play",
        "nextTrack",
        "WaitForSeconds",
        "nextTrack",
        "Clip",
        "length",
        "RandomizedQueue",
        "AudioFile",
        "files",
        "frequenecy",
        "_coroutinesActive",
        "Play",
        "files",
        "Cycle",
        "WaitForSeconds",
        "frequenecy",
        "RandomizedQueue",
        "AudioFile",
        "files",
        "minFrequency",
        "maxFrequency",
        "_coroutinesActive",
        "Play",
        "files",
        "Cycle",
        "WaitForSeconds",
        "UnityEngine",
        "Random",
        "Range",
        "minFrequency",
        "maxFrequency",
        "IEnumerator",
        "coroutines",
        "i",
        "coroutines",
        "Length",
        "i",
        "StartCoroutine",
        "coroutines",
        "i",
        "AudioClip",
        "clip",
        "timeStamp",
        "volume",
        "fileList",
        "GetAudioType",
        "clip",
        "clip",
        "length",
        "timeStamp",
        "remainingTime",
        "tempChannel",
        "gameObject",
        "AddComponent",
        "AudioSource",
        "clipType",
        "AudioType",
        "FX",
        "tempSFXChannels",
        "Add",
        "tempChannel",
        "tempChannel",
        "clip",
        "clip",
        "tempChannel",
        "time",
        "Mathf",
        "Clamp",
        "timeStamp",
        "clip",
        "length",
        "tempChannel",
        "volume",
        "volume",
        "tempChannel",
        "Play",
        "Debug",
        "LogFormat",
        "timeStamp",
        "clip",
        "length",
        "WaitForSeconds",
        "remainingTime",
        "tempChannel",
        "clipType",
        "AudioType",
        "FX",
        "tempSFXChannels",
        "Remove",
        "tempChannel",
        "Destroy",
        "tempChannel",
        "AudioFile",
        "audioFiles",
        "i",
        "audioFiles",
        "Length",
        "i",
        "StartCoroutine",
        "PreloadAudioClip",
        "audioFiles",
        "i",
        "i",
        "tempSFXChannels",
        "Count",
        "i",
        "tempSFXChannels",
        "i",
        "Stop",
        "Destroy",
        "tempSFXChannels",
        "i",
        "tempSFXChannels",
        "Clear",
        "AudioFile",
        "audioFile",
        "AudioLoader",
        "GetClipAsync",
        "audioFile",
        "Name",
        "request",
        "isDone",
        "audioFile",
        "ClipIsSet",
        "WaitForEndOfFrame",
        "audioFile",
        "ClipIsSet",
        "audioFile",
        "SetClip",
        "AudioClip",
        "request",
        "asset",
        "e",
        "Debug",
        "LogError",
        "e",
        "request",
        "asset",
        "jsonText",
        "NotImplementedException",
        "jsonPath",
        "NotImplementedException"
    ],
    "literals": [
        "\"Audio/AudioList\"",
        "\"Sweeteners\"",
        "\"Seek time is this: {0} and the clip length is this: {1}\"",
        "\": \"",
        "\" is not a valid AudioClip\""
    ],
    "variables": [
        "isAudioListener",
        "AudioController",
        "Instance",
        "path",
        "AudioList",
        "fileList",
        "AudioLoader",
        "loader",
        "channels",
        "data",
        "playEvents",
        "stopEvents",
        "_swells",
        "_sweeteners",
        "IEnumerator",
        "_swellCoroutine",
        "IEnumerator",
        "_sweetenerCoroutine",
        "tempSFXChannels",
        "_coroutinesActive",
        "ShortestSweetenerPlayFrequenecy",
        "LongestSweetenerPlayFrequenecy",
        "AudioSource",
        "source",
        "shouldResumeClip",
        "clipTime",
        "AudioSource",
        "source",
        "AudioSource",
        "newSource",
        "i",
        "i",
        "groups",
        "i",
        "j",
        "files",
        "j",
        "files",
        "i",
        "i",
        "AudioFile",
        "nextTrack",
        "i",
        "AudioSource",
        "tempChannel",
        "AudioType",
        "clipType",
        "remainingTime",
        "i",
        "i",
        "ResourceRequest",
        "request"
    ],
    "comments": [
        "Singleton implementation",
        "Stores all the audio sources and audio data inside dictionaries",
        "Stores all the audio events inside dictionaries",
        "Audio Control Patterns",
        "Backup channels that are dynamically created to allow SFX to finish without being cut off (empty when no SFX are playing)",
        "Set to false to halt active coroutines",
        "Checks if the AudioSource corresponding to the channel integer has been initialized",
        "Adds a new audiosource if channel is not present in dictionary",
        "Must be colled to setup the class's functionality",
        "Singleton method returns a bool depending on whether this object is the instance of the class",
        "TODO: Enable after tracks have been delivered",
        "initCyclingAudio();",
        "Uses C#'s delegate system",
        "Used to loop through lists of tracks in pseudo-random order",
        "TODO: Init Queue's with sound files once they're delivered",
        "Plays audio files back to back",
        "Plays audio files on a set frequenecy",
        "Coroutine that varies the frequency with which it plays audio files",
        "Starts an arbitrary amount of coroutines",
        "Preloads certain audio files",
        "Instantly kills temp channels (standard use is for mute toggled on)",
        "Asynchronous loading to improve game load times"
    ],
    "docstrings": [
        "* Author(s): Isaiah Mann\n * Description: Used to control the audio in the game\n * Is a Singleton (only one instance can exist at once)\n * Attached to a GameObject that stores all AudioSources and AudioListeners for the game\n * Dependencies: AudioFile, AudioLoader, AudioList, AudioUtil, RandomizedQueue<AudioFile>"
    ],
    "functions": [
        "SetReferences",
        "FetchReferences",
        "CleanupReferences",
        "HandleNamedEvent",
        "Play",
        "Stop",
        "ToggleFXMute",
        "ToggleMusicMute",
        "CheckMute",
        "ChannelExists",
        "AudioSource",
        "GetChannel",
        "Init",
        "InitFileDictionary",
        "AddAudioEvents",
        "AddGroupEvents",
        "AddPlayEvents",
        "AddStopEvents",
        "SubscribeEvents",
        "UnsubscribeEvents",
        "HandleAudioEvent",
        "HandleMuteAction",
        "PlayAudioList",
        "StopAudioList",
        "AddAudioListener",
        "startTrackCycling",
        "initCyclingAudio",
        "IEnumerator",
        "cycleTracksContinuous",
        "IEnumerator",
        "cycleTracksFrequenecy",
        "IEnumerator",
        "cycleTracksFrequenecyRange",
        "startCoroutines",
        "IEnumerator",
        "CompleteOnTempChannel",
        "PreloadFiles",
        "TeardownTempSFXChannels",
        "IEnumerator",
        "PreloadAudioClip",
        "DeserializeFromJSON",
        "DeserializeFromJSONAtPath"
    ],
    "classes": [
        "AudioController"
    ]
}