{
    "identifiers": [
        "org",
        "cojen",
        "dirmi",
        "org",
        "junit",
        "java",
        "io",
        "java",
        "net",
        "InetSocketAddress",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "org",
        "junit",
        "Assert",
        "env",
        "listener",
        "acceptor",
        "remoteServer",
        "BeforeClass",
        "env",
        "t",
        "e",
        "t",
        "getName",
        "e",
        "e",
        "e",
        "printStackTrace",
        "AfterClass",
        "env",
        "env",
        "close",
        "env",
        "Before",
        "remoteServer",
        "acceptor",
        "env",
        "newSessionAcceptor",
        "listener",
        "Override",
        "session",
        "acceptor",
        "accept",
        "session",
        "send",
        "remoteServer",
        "e",
        "session",
        "close",
        "e2",
        "Override",
        "cause",
        "acceptor",
        "accept",
        "Override",
        "cause",
        "acceptor",
        "accept",
        "listener",
        "After",
        "acceptor",
        "acceptor",
        "close",
        "acceptor",
        "connectTimeoutMillis",
        "localSession",
        "env",
        "newSessionConnector",
        "acceptor",
        "getLocalAddress",
        "connect",
        "connectTimeoutMillis",
        "TimeUnit",
        "MILLISECONDS",
        "localServer",
        "localSession",
        "receive",
        "reply",
        "localServer",
        "echoObject",
        "assertEquals",
        "reply",
        "localSession",
        "close",
        "connectTimeoutMillis",
        "localSession",
        "env",
        "newSessionConnector",
        "acceptor",
        "getLocalAddress",
        "connect",
        "connectTimeoutMillis",
        "TimeUnit",
        "MILLISECONDS",
        "localServer",
        "localSession",
        "receive",
        "localSession",
        "close",
        "Test",
        "SUCCESS_TIMEOUT_MS",
        "ping",
        "SUCCESS_TIMEOUT_MS",
        "start",
        "currentTimeMillis",
        "i",
        "i",
        "i",
        "connectAndClose",
        "SUCCESS_TIMEOUT_MS",
        "end",
        "currentTimeMillis",
        "avgTime",
        "end",
        "start",
        "timeouts",
        "p",
        "p",
        "p",
        "ping",
        "avgTime",
        "p",
        "e",
        "timeouts",
        "ping",
        "SUCCESS_TIMEOUT_MS",
        "assertNotSame",
        "timeouts"
    ],
    "literals": [
        "\"Exception in thread \\\"\"",
        "\"\\\" \"",
        "\"127.0.0.1\"",
        "\"test\"",
        "\"test\"",
        "\"None of the calls timed out\""
    ],
    "variables": [
        "env",
        "listener",
        "acceptor",
        "remoteServer"
    ],
    "comments": [
        "Reduce output when testing broken serializable objects.",
        "Ignore.",
        "A large connect timeout. The timeout is high enough that the call should easily",
        "finish without timing out. For this test to cover the right paths, this timeout",
        "(when converted to seconds) must be lower than",
        "StandardSession.CREATE_TIMEOUT_SECONDS.",
        "Call ping() once without timing it, to warm up the caches",
        "Now get an estimate of how long each call takes",
        "Call ping again, but use a connect timeout. p is a percentage of avgTime.",
        "This test purposely uses a timeout that is too low, so this exception is",
        "expected. Now that the client has timed out, verify the server is still",
        "healthy."
    ],
    "docstrings": [
        "* Tests for the SessionAcceptor class.\n *\n * Created by kstemen on 11/21/16.",
        "* Verify when a client times out while trying to connect to the acceptor, that doesn't\n     * break the acceptor. Specifically the acceptor must be able to accept new connections\n     * afterwards."
    ],
    "functions": [
        "createEnv",
        "uncaughtException",
        "closeEnv",
        "setUp",
        "established",
        "establishFailed",
        "acceptFailed",
        "tearDown",
        "ping",
        "connectAndClose",
        "connectTimeout"
    ],
    "classes": [
        "TestSessionAcceptor"
    ]
}