{
    "identifiers": [
        "time",
        "logging",
        "threading",
        "cloudbrain",
        "modules",
        "ModuleInterface",
        "logging",
        "getLogger",
        "publisher",
        "metric_name",
        "data_to_send",
        "bpm",
        "publisher",
        "publish",
        "metric_name",
        "data_to_send",
        "bpm",
        "time",
        "sleep",
        "beat_sleep_interval_in_s",
        "ModuleInterface",
        "subscribers",
        "publishers",
        "beat_amplitude",
        "bpm",
        "BeatSource",
        "subscribers",
        "publishers",
        "_LOGGER",
        "debug",
        "subscribers",
        "_LOGGER",
        "debug",
        "publishers",
        "beat_amplitude",
        "bpm",
        "publisher",
        "publishers",
        "pub_metric_buffer",
        "publisher",
        "metric_buffers",
        "values",
        "pub_metric_buffer",
        "name",
        "pub_metric_buffer",
        "num_channels",
        "time",
        "time",
        "_NANOSECONDS",
        "i",
        "num_channels",
        "i",
        "beat_amplitude",
        "threading",
        "target",
        "_publish",
        "args",
        "publisher",
        "metric_name",
        "data_to_send",
        "bpm",
        "threads",
        "append",
        "t",
        "t",
        "start",
        "t",
        "threads",
        "t",
        "join"
    ],
    "literals": [
        "\"Subscribers: %s\"",
        "\"Publishers: %s\"",
        "'timestamp'",
        "'channel_%s'"
    ],
    "variables": [
        "_NANOSECONDS",
        "_LOGGER",
        "beat_sleep_interval_in_s",
        "beat_amplitude",
        "bpm",
        "threads",
        "metric_name",
        "num_channels",
        "data_to_send",
        "channel_name",
        "data_to_send",
        "channel_name",
        "t"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nPublish constant values at regular intervals on each channel.\nNote that this module could be easily turned into a transformer that turns\nbpm in beats by subscribing to the BPMTransformer output.\n\"\"\""
    ],
    "functions": [
        "_publish",
        "start",
        "stop"
    ],
    "classes": [
        "BeatSource"
    ]
}