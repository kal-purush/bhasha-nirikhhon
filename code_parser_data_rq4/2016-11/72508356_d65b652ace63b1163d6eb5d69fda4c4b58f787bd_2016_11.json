{
    "identifiers": [
        "GroupConsumer",
        "RoundRobinAssignment",
        "error",
        "Kafka",
        "EventEmitter",
        "message",
        "message",
        "topic",
        "partition",
        "EventEmitter",
        "topic",
        "schemas",
        "handler",
        "consumerOptions",
        "Kafka",
        "GroupConsumer",
        "consumerOptions",
        "rawMessage",
        "topic",
        "partition",
        "Kafka",
        "rawMessage",
        "message",
        "rawMessage",
        "err",
        "error",
        "topic",
        "partition",
        "error",
        "err",
        "error",
        "rawMessage",
        "offset",
        "schema",
        "schema",
        "message",
        "offset",
        "message",
        "topic",
        "partition",
        "offset",
        "rawMessages",
        "topic",
        "partition",
        "rawMessages",
        "rawMessage",
        "rawMessage",
        "topic",
        "partition",
        "RoundRobinAssignment"
    ],
    "literals": [
        "\"no-kafka\"",
        "\"no-kafka\"",
        "\"./log\"",
        "\"no-kafka\"",
        "\"events\"",
        "string",
        "string",
        "'invoker'",
        "'error parsing message on topic'",
        "'ConsumerStrategy'"
    ],
    "variables": [
        "offset",
        "message"
    ],
    "comments": [],
    "docstrings": [
        "* Implementing classes take an ApexFunction and consume messages from the\n * kafka topics for that ApexFunction that match the schemas."
    ],
    "functions": [
        "rawMessageHandler",
        "dataHandler",
        "init",
        "end"
    ],
    "classes": [
        "SchemaConsumer"
    ]
}