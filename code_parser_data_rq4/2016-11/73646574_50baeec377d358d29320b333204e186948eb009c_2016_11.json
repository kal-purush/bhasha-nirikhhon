{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "scipy",
        "sp",
        "numpy",
        "random",
        "ran",
        "ran",
        "uniform",
        "np",
        "log",
        "p",
        "tau_s",
        "dist",
        "phi",
        "dist",
        "np",
        "cos",
        "phi",
        "dist",
        "np",
        "sin",
        "phi",
        "x",
        "y",
        "A",
        "B",
        "axis",
        "axis",
        "arrow",
        "A",
        "A",
        "B",
        "A",
        "B",
        "A",
        "head_width",
        "length_includes_head",
        "X",
        "Y",
        "axis",
        "i",
        "xrange",
        "len",
        "X",
        "np",
        "array",
        "X",
        "i",
        "Y",
        "i",
        "np",
        "array",
        "X",
        "i",
        "Y",
        "i",
        "drawArrow",
        "A",
        "B",
        "axis",
        "np",
        "array",
        "Ax",
        "Ay",
        "A",
        "M",
        "N",
        "I0",
        "R",
        "w",
        "init",
        "np",
        "linspace",
        "num",
        "np",
        "linspace",
        "num",
        "ran",
        "random",
        "X",
        "ran",
        "random",
        "Y",
        "A",
        "A",
        "plt",
        "figure",
        "fig1",
        "add_subplot",
        "plt",
        "Circle",
        "A",
        "R",
        "color",
        "fill",
        "ax1",
        "add_artist",
        "circle",
        "ax1",
        "plot",
        "X",
        "Y",
        "ax1",
        "plot",
        "X",
        "Y",
        "drawAllArrows",
        "X",
        "Y",
        "ax1",
        "plt",
        "show",
        "main"
    ],
    "literals": [
        "'r'",
        "'g*'",
        "'r.'"
    ],
    "variables": [
        "p",
        "tau_s",
        "x",
        "y",
        "A",
        "B",
        "Ax",
        "Ay",
        "A",
        "M",
        "N",
        "I0",
        "R",
        "w",
        "A",
        "M",
        "N",
        "I0",
        "R",
        "w",
        "X",
        "Y",
        "X",
        "Y",
        "X",
        "Y",
        "fig1",
        "ax1",
        "circle"
    ],
    "comments": [
        "--------------------",
        "tau_scatter",
        "Returns the possible optical depth to the next scattering depth",
        "INPUT: none",
        "Returns: tau_s",
        "-------------------",
        "phi-to-xy",
        "Returns xy coordinates based on given angle",
        "NOTE: add to prev xy value to get new position",
        "INPUT:",
        "distance: path length xi of the ray",
        "phi: the angle at whish the ray is cast",
        "Returns:",
        "x,y: xy values corresponding to the change in position",
        "---------------------",
        "drawArrow",
        "Draws an arrow representing the path and direction between 2 points",
        "input A,B, axis",
        "A,B: 2 points with the form [x,y] coordinates",
        "axis: the axis that you want to draw said arrow on",
        "returns: none",
        "---------------------",
        "drawAllArrows",
        "Draws all the arrows of the path",
        "input: X,Y,axis",
        "X,Y: 1-D Arrays of same size, containing series of x,y coordinates with matching indices",
        "axis: axis you want these drawn on",
        "returns: none",
        "-------------",
        "init",
        "Initializes all initial values",
        "returns:",
        "A : Point of observer",
        "M : Samplings/direction",
        "N : Number of directions",
        "I0: Initial intensity of ray",
        "R : Radius of circle from from A",
        "w : Albedo of the gas",
        "",
        "Generate testing points",
        "Plotting the final points"
    ],
    "docstrings": [
        "'''\nPlotting functions\n'''",
        "'''\nPseudocode steps\n1) Get initial point position and cloud info\n2) generate tau of ray\n3) Sample xi (path length) from tau\n4) Calculate new angle of scatter\n5) calculate new position and advance the ray\n6) repeat 2-5 until ray reaches cloud boundary ( num trajectories=N)\n7) repeat 2-6 for M rays\n8) Calculate mean relative intensity at A(initial point)\n\nA   : Observor placement point (const)\nkhat: Direction of ray - uniformly distributed over 4pi sr\nN: Number of directions\nM: Number of samplings of each direction\n\n\n\n'''"
    ],
    "functions": [
        "tau_scatter",
        "phitoxy",
        "drawArrow",
        "drawAllArrows",
        "init",
        "main"
    ],
    "classes": []
}