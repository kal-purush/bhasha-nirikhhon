{
    "identifiers": [
        "mock",
        "unittest",
        "plugins",
        "discovery",
        "linode",
        "Discover",
        "text",
        "status_code",
        "errors",
        "text",
        "status_code",
        "errors",
        "args",
        "kwargs",
        "ResponseMock",
        "response",
        "return_code",
        "args",
        "kwargs",
        "ResponseMock",
        "response",
        "return_code",
        "args",
        "kwargs",
        "ResponseMock",
        "response",
        "return_code",
        "args",
        "kwargs",
        "ResponseMock",
        "response",
        "return_code",
        "args",
        "kwargs",
        "ResponseMock",
        "errors",
        "unittest",
        "TestCase",
        "mock",
        "Mock",
        "mock",
        "Mock",
        "DiscoveryTest",
        "mock",
        "patch",
        "side_effect",
        "mocked_get_success",
        "mock_get",
        "mock",
        "MagicMock",
        "Discover",
        "config",
        "config",
        "dbc",
        "dbc",
        "assertTrue",
        "find",
        "start",
        "assertTrue",
        "dbc",
        "new_discovery",
        "called",
        "assertEqual",
        "dbc",
        "new_discovery",
        "call_count",
        "format",
        "dbc",
        "new_discovery",
        "call_count",
        "DiscoveryTest",
        "mock",
        "patch",
        "side_effect",
        "mocked_get_bad_json",
        "mock_get",
        "mock",
        "MagicMock",
        "Discover",
        "config",
        "config",
        "dbc",
        "dbc",
        "assertTrue",
        "find",
        "start",
        "assertFalse",
        "dbc",
        "new_discovery",
        "called",
        "DiscoveryTest",
        "mock",
        "patch",
        "side_effect",
        "mocked_get_no_json",
        "mock_get",
        "mock",
        "MagicMock",
        "Discover",
        "config",
        "config",
        "dbc",
        "dbc",
        "assertTrue",
        "find",
        "start",
        "assertFalse",
        "dbc",
        "new_discovery",
        "called",
        "DiscoveryTest",
        "mock",
        "patch",
        "side_effect",
        "mocked_get_status_error",
        "mock_get",
        "mock",
        "MagicMock",
        "Discover",
        "config",
        "config",
        "dbc",
        "dbc",
        "assertTrue",
        "find",
        "start",
        "assertFalse",
        "dbc",
        "new_discovery",
        "called",
        "DiscoveryTest",
        "mock",
        "patch",
        "side_effect",
        "mocked_get_raise",
        "mock_get",
        "mock",
        "MagicMock",
        "Discover",
        "config",
        "config",
        "dbc",
        "dbc",
        "find",
        "start",
        "e",
        "e",
        "message",
        "e",
        "message"
    ],
    "literals": [
        "\"Unit testing is good\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'discovery'",
        "'plugins'",
        "'linode'",
        "'url'",
        "'https://example.com/'",
        "'api_key'",
        "'executing_unit_test'",
        "'interval'",
        "'1'",
        "'unit_testing'",
        "'logging'",
        "'debug'",
        "'plugins'",
        "'console'",
        "'info.return_value'",
        "'debug.return_value'",
        "'critical.return_value'",
        "'warn.return_value'",
        "'error.return_value'",
        "'plugins.discovery.linode.requests.get'",
        "'new_discovery.return_value'",
        "\"dbc.new_discovery was not called\"",
        "\"dbc.new_discovery call count is not 2: {0}\"",
        "'plugins.discovery.linode.requests.get'",
        "'new_discovery.return_value'",
        "\"dbc.new_discovery was called in error\"",
        "'plugins.discovery.linode.requests.get'",
        "'new_discovery.return_value'",
        "\"dbc.new_discovery was called in error\"",
        "'plugins.discovery.linode.requests.get'",
        "'new_discovery.return_value'",
        "\"dbc.new_discovery was called in error\"",
        "'plugins.discovery.linode.requests.get'",
        "'new_discovery.return_value'",
        "\"Unit testing\"",
        "\"Unit test failed to create exception\""
    ],
    "variables": [
        "text",
        "status_code",
        "response",
        "return_code",
        "response",
        "return_code",
        "response",
        "return_code",
        "response",
        "return_code",
        "config",
        "logger",
        "dbc",
        "config",
        "logger",
        "dbc",
        "dbc",
        "find",
        "dbc",
        "find",
        "dbc",
        "find",
        "dbc",
        "find",
        "dbc",
        "find"
    ],
    "comments": [],
    "docstrings": [
        "'''\nTest plugins/discovery/linode/__init__.py Discovery() class\n'''",
        "''' Mocked Class for requests '''",
        "''' Run with example json from API docs '''",
        "\"\"\"\n        {\n           \"ERRORARRAY\":[],\n           \"ACTION\":\"linode.ip.list\",\n           \"DATA\":[\n              {\n                 \"LINODEID\":8098,\n                 \"ISPUBLIC\":1,\n                 \"IPADDRESS\":\"75.127.96.54\",\n                 \"RDNS_NAME\":\"li22-54.members.linode.com\",\n                 \"IPADDRESSID\":5384\n              },\n              {\n                 \"LINODEID\":8099,\n                 \"ISPUBLIC\":1,\n                 \"IPADDRESS\":\"75.127.96.245\",\n                 \"RDNS_NAME\":\"li22-245.members.linode.com\",\n                 \"IPADDRESSID\":5575\n              }\n           ]\n        }\n    \"\"\"",
        "''' Run with bad json from API docs '''",
        "\"\"\"\n        {asdfasdjaflsdjflksj}\n    \"\"\"",
        "''' Run with no json from API docs '''",
        "''' Run with Status Code Error '''",
        "''' Run with Exception '''",
        "''' Run unit tests against the Discovery() class '''",
        "''' Setup mocked data '''",
        "''' Destroy mocked data '''",
        "''' Test with valid reply '''",
        "''' Execute test '''",
        "''' Test with invalid JSON reply '''",
        "''' Execute test '''",
        "''' Test with invalid reply '''",
        "''' Execute test '''",
        "''' Test with error reply '''",
        "''' Execute test '''",
        "''' Test with error reply '''",
        "''' Execute test '''"
    ],
    "functions": [
        "mocked_get_success",
        "mocked_get_bad_json",
        "mocked_get_no_json",
        "mocked_get_status_error",
        "mocked_get_raise",
        "setUp",
        "tearDown",
        "runTest",
        "runTest",
        "runTest",
        "runTest",
        "runTest"
    ],
    "classes": [
        "ResponseMock",
        "DiscoveryTest",
        "RunwithValidReply",
        "RunwithInValidJSON",
        "RunwithNoJSON",
        "RunwithStatusError",
        "RunwithException"
    ]
}