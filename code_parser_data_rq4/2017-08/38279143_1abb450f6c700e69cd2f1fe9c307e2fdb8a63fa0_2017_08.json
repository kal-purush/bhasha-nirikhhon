{
    "identifiers": [
        "com",
        "yahoo",
        "sketches",
        "pig",
        "com",
        "yahoo",
        "memory",
        "Memory",
        "com",
        "yahoo",
        "sketches",
        "ArrayOfDoublesSketch",
        "com",
        "yahoo",
        "sketches",
        "ArrayOfDoublesSketches",
        "java",
        "io",
        "org",
        "apache",
        "commons",
        "math3",
        "stat",
        "inference",
        "TTest",
        "org",
        "apache",
        "commons",
        "math3",
        "stat",
        "StatUtils",
        "org",
        "apache",
        "pig",
        "EvalFunc",
        "org",
        "apache",
        "pig",
        "data",
        "DataByteArray",
        "org",
        "apache",
        "pig",
        "data",
        "Tuple",
        "Override",
        "input",
        "input",
        "input",
        "size",
        "dbaA",
        "input",
        "get",
        "dbaB",
        "input",
        "get",
        "sketchA",
        "ArrayOfDoublesSketches",
        "wrapSketch",
        "Memory",
        "wrap",
        "dbaA",
        "get",
        "sketchB",
        "ArrayOfDoublesSketches",
        "wrapSketch",
        "Memory",
        "wrap",
        "dbaB",
        "get",
        "sketchA",
        "getNumValues",
        "sketchB",
        "getNumValues",
        "sketchA",
        "isEmpty",
        "sketchB",
        "isEmpty",
        "sketchA",
        "getRetainedEntries",
        "sketchB",
        "getRetainedEntries",
        "valuesA",
        "sketchA",
        "getValues",
        "valuesB",
        "sketchB",
        "getValues",
        "valuesA",
        "rotateMatrix",
        "valuesA",
        "valuesB",
        "rotateMatrix",
        "valuesB",
        "pValues",
        "valuesA",
        "length",
        "tTest",
        "i",
        "i",
        "valuesA",
        "length",
        "i",
        "meanA",
        "StatUtils",
        "sum",
        "valuesA",
        "i",
        "sketchA",
        "getTheta",
        "sketchA",
        "getEstimate",
        "meanB",
        "StatUtils",
        "sum",
        "valuesB",
        "i",
        "sketchB",
        "getTheta",
        "sketchB",
        "getEstimate",
        "varianceA",
        "StatUtils",
        "variance",
        "valuesA",
        "i",
        "varianceB",
        "StatUtils",
        "variance",
        "valuesB",
        "i",
        "numA",
        "sketchA",
        "getEstimate",
        "numB",
        "sketchB",
        "getEstimate",
        "pValues",
        "i",
        "tTest",
        "callTTest",
        "meanA",
        "meanB",
        "varianceA",
        "varianceB",
        "numA",
        "numB",
        "Util",
        "doubleArrayToTuple",
        "pValues",
        "m",
        "width",
        "m",
        "length",
        "height",
        "m",
        "length",
        "result",
        "height",
        "width",
        "i",
        "i",
        "width",
        "i",
        "j",
        "j",
        "height",
        "j",
        "result",
        "j",
        "width",
        "i",
        "m",
        "i",
        "j",
        "result",
        "m1",
        "m2",
        "v1",
        "v2",
        "n1",
        "n2",
        "tTest",
        "m1",
        "m2",
        "v1",
        "v2",
        "n1",
        "n2"
    ],
    "literals": [
        "\"Both sketches must have the same number of values\""
    ],
    "variables": [],
    "comments": [
        "Get the two sketches",
        "Check that the size of the arrays in the sketches are the same",
        "Check if either sketch is empty",
        "Check that each sketch has at least 2 values",
        "Get the values from each sketch",
        "Calculate the p-values",
        "Do some special math to get an accurate mean from the sketches",
        "Take the sum of the values, divide by theta, then divide by the",
        "estimate number of records. Note, this only counts the number",
        "of distinct records, not the total number of records.",
        "Variance is based only on the samples we have in the tuple sketch",
        "Use the estimated number of uniques",
        "Not completely accurate, as repeats that share the same ID won't be in the estimate"
    ],
    "docstrings": [
        "* Copyright 2016, Yahoo! Inc.\n * Licensed under the terms of the Apache License 2.0. See LICENSE file at the project root for terms.",
        "* Calculate p-values given two ArrayOfDoublesSketch. Each value in the sketch\n * is treated as a separate metric measurement, and a p-value will be generated\n * for each metric.\n *\n * The t-statistic is calculated as follows: t = (m1 - m2) / sqrt(var1/n1 + var2/n2)\n *\n * Degrees of freedom is approximated by Welch-Satterthwaite.",
        "* Perform a clockwise rotation the output values from the tuple sketch.\n     *\n     * @param m Input matrix to rotate\n     * @return Rotated matrix",
        "* This class exists to get around the protected tTest method.",
        "* Call the protected tTest method."
    ],
    "functions": [
        "Tuple",
        "exec",
        "rotateMatrix",
        "callTTest"
    ],
    "classes": [
        "ArrayOfDoublesSketchesToPValueEstimates",
        "TTestWithSketch"
    ]
}