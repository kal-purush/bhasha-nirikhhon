{
    "identifiers": [
        "os",
        "setuptools",
        "setup",
        "Extension",
        "numpy",
        "numpy",
        "distutils",
        "misc_util",
        "glob",
        "tempfile",
        "subprocess",
        "shutil",
        "sys",
        "distutils",
        "command",
        "sdist",
        "sdist",
        "_sdist",
        "_sdist",
        "Cython",
        "Build",
        "cythonize",
        "f",
        "glob",
        "glob",
        "cythonize",
        "f",
        "_sdist",
        "run",
        "sdist",
        "tempfile",
        "mkdtemp",
        "os",
        "getcwd",
        "os",
        "chdir",
        "tmpdir",
        "os",
        "environ",
        "get",
        "distutils",
        "sysconfig",
        "get_config_var",
        "compiler",
        "split",
        "open",
        "filename",
        "f",
        "f",
        "write",
        "open",
        "os",
        "devnull",
        "fnull",
        "subprocess",
        "call",
        "compiler",
        "filename",
        "stdout",
        "fnull",
        "stderr",
        "fnull",
        "OSError",
        "os",
        "chdir",
        "curdir",
        "shutil",
        "rmtree",
        "tmpdir",
        "exit_code",
        "tempfile",
        "mkdtemp",
        "os",
        "getcwd",
        "os",
        "chdir",
        "tmpdir",
        "os",
        "environ",
        "get",
        "distutils",
        "sysconfig",
        "get_config_var",
        "compiler",
        "split",
        "open",
        "filename",
        "f",
        "f",
        "write",
        "open",
        "os",
        "devnull",
        "fnull",
        "subprocess",
        "call",
        "compiler",
        "filename",
        "stdout",
        "fnull",
        "stderr",
        "fnull",
        "OSError",
        "os",
        "chdir",
        "curdir",
        "shutil",
        "rmtree",
        "tmpdir",
        "exit_code",
        "multiprocessing",
        "platform",
        "multiprocessing",
        "cpu_count",
        "cpus",
        "platform",
        "uname",
        "cython",
        "cython",
        "__version__",
        "cython_version",
        "partition",
        "ImportError",
        "Cython",
        "Distutils",
        "build_ext",
        "build_ext",
        "distutils",
        "command",
        "build_py",
        "distutils",
        "command",
        "build_py",
        "build_py_2to3",
        "AttributeError",
        "distutils",
        "command",
        "build_py",
        "build_py",
        "check_for_openmp",
        "check_for_pthread",
        "have_openmp",
        "sys",
        "version_info",
        "extra_compile_args",
        "append",
        "have_pthread",
        "extra_compile_args",
        "append",
        "numpy",
        "distutils",
        "misc_util",
        "get_numpy_include_dirs",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "undef_macros",
        "libraries",
        "libraries",
        "extra_compile_args",
        "extra_compile_args",
        "extra_link_args",
        "extra_link_args",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "extra_compile_args",
        "openmp_args",
        "extra_link_args",
        "openmp_args",
        "Extension",
        "sources",
        "openmp_module_source",
        "include_dirs",
        "incdir",
        "extra_compile_args",
        "openmp_args",
        "extra_link_args",
        "openmp_args",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "extra_compile_args",
        "openmp_args",
        "extra_link_args",
        "openmp_args",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "extra_compile_args",
        "openmp_args",
        "extra_link_args",
        "openmp_args",
        "Extension",
        "sources",
        "include_dirs",
        "incdir",
        "extra_compile_args",
        "openmp_args",
        "extra_link_args",
        "openmp_args",
        "ext_modules",
        "kdmain",
        "gravity",
        "chunkscan",
        "sph_render",
        "halo_pyx",
        "bridge_pyx",
        "util_pyx",
        "interpolate3d_pyx",
        "omp_commands",
        "build_cython",
        "mod",
        "ext_modules",
        "source",
        "source",
        "replace",
        "mod",
        "sources",
        "src",
        "mod",
        "sources",
        "os",
        "path",
        "isfile",
        "src",
        "format",
        "src",
        "cython_version",
        "sys",
        "exit",
        "setup",
        "name",
        "install_requires",
        "author",
        "author_email",
        "version",
        "description",
        "url",
        "package_dir",
        "packages",
        "package_data",
        "ext_modules",
        "ext_modules",
        "cmdclass",
        "cmdclass",
        "classifiers"
    ],
    "literals": [
        "\"pynbody/openmp/*.pyx\"",
        "'sdist'",
        "'CC'",
        "'CC'",
        "r'test.c'",
        "'w'",
        "\"#include <pthread.h>\\n\"",
        "\"#include <stdio.h>\\n\"",
        "\"int main() {\\n\"",
        "\"}\"",
        "'w'",
        "'CC'",
        "'CC'",
        "r'test.c'",
        "'w'",
        "\"#include <omp.h>\\n\"",
        "\"#include <stdio.h>\\n\"",
        "\"int main() {\\n\"",
        "\"#pragma omp parallel\\n\"",
        "\"printf(\\\"Hello from thread %d, nthreads %d\\\\n\\\", omp_get_thread_num(), omp_get_num_threads());\\n\"",
        "\"}\"",
        "'w'",
        "'-fopenmp'",
        "'Darwin'",
        "\".\"",
        "'build_ext'",
        "'build_py'",
        "'build_py'",
        "\"openmp/openmp_real\"",
        "'-fopenmp'",
        "\"openmp/openmp_null\"",
        "''",
        "'-ftree-vectorize'",
        "'-fno-omit-frame-pointer'",
        "'-funroll-loops'",
        "'-fprefetch-loop-arrays'",
        "'-fstrict-aliasing'",
        "'-g'",
        "\"-Wno-error=declaration-after-statement\"",
        "'-DKDT_THREADING'",
        "'pynbody/sph/kdmain'",
        "'pynbody/sph/kdmain.cpp'",
        "'pynbody/sph/kd.cpp'",
        "'pynbody/sph/smooth.cpp'",
        "'DEBUG'",
        "'pynbody.gravity._gravity'",
        "\"pynbody/gravity/_gravity.pyx\"",
        "'pynbody.openmp'",
        "\"pynbody/\"",
        "\".pyx\"",
        "'pynbody.chunk.scan'",
        "'pynbody/chunk/scan.pyx'",
        "'pynbody.sph._render'",
        "'pynbody/sph/_render.pyx'",
        "'pynbody.analysis._com'",
        "'pynbody/analysis/_com.pyx'",
        "'pynbody.bridge._bridge'",
        "'pynbody/bridge/_bridge.pyx'",
        "'pynbody._util'",
        "'pynbody/_util.pyx'",
        "'pynbody.analysis._interpolate3d'",
        "'pynbody/analysis/_interpolate3d.pyx'",
        "\".pyx\"",
        "\".c\"",
        "'pynbody'",
        "'numpy>=1.5'",
        "'extinction'",
        "'healpy'",
        "'The pynbody team'",
        "'pynbody@googlegroups.com'",
        "'0.41'",
        "'Light-weight astronomical N-body/SPH analysis for python'",
        "'https://github.com/pynbody/pynbody/releases'",
        "'pynbody/'",
        "''",
        "'pynbody'",
        "'pynbody/analysis'",
        "'pynbody/bc_modules'",
        "'pynbody/plot'",
        "'pynbody/gravity'",
        "'pynbody/chunk'",
        "'pynbody/sph'",
        "'pynbody/snapshot'",
        "'pynbody/bridge'",
        "'pynbody'",
        "'default_config.ini'",
        "'pynbody/analysis'",
        "'cmdlum.npz'",
        "'h1.hdf5'",
        "'ionfracs.npz'",
        "'CAMB_WMAP7'",
        "'cambtemplate.ini'",
        "'pynbody/plot'",
        "'tollerud2008mw'",
        "\"Development Status :: 4 - Beta\"",
        "\"Intended Audience :: Developers\"",
        "\"Intended Audience :: Science/Research\"",
        "\"License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)\"",
        "\"Programming Language :: Python :: 2\"",
        "\"Programming Language :: Python :: 3\"",
        "\"Topic :: Scientific/Engineering :: Astronomy\"",
        "\"Topic :: Scientific/Engineering :: Visualization\""
    ],
    "variables": [
        "cmdclass",
        "tmpdir",
        "curdir",
        "compiler",
        "compiler",
        "filename",
        "exit_code",
        "exit_code",
        "tmpdir",
        "curdir",
        "compiler",
        "compiler",
        "filename",
        "exit_code",
        "exit_code",
        "cpus",
        "cython_version",
        "cython_version",
        "build_cython",
        "cmdclass",
        "build_cython",
        "cmdclass",
        "cmdclass",
        "have_openmp",
        "have_pthread",
        "openmp_module_source",
        "openmp_args",
        "openmp_module_source",
        "openmp_args",
        "ext_modules",
        "libraries",
        "extra_compile_args",
        "extra_link_args",
        "incdir",
        "kdmain",
        "gravity",
        "omp_commands",
        "chunkscan",
        "sph_render",
        "halo_pyx",
        "bridge_pyx",
        "util_pyx",
        "interpolate3d_pyx",
        "mod",
        "sources",
        "dist"
    ],
    "comments": [
        "Patch the sdist command to ensure both versions of the openmp module are",
        "included with source distributions",
        "",
        "Solution from http://stackoverflow.com/questions/4505747/how-should-i-structure-a-python-package-that-contains-cython-code",
        "Make sure the compiled Cython files in the distribution are up-to-date",
        "Create a temporary directory",
        "Get compiler invocation",
        "make sure to use just the compiler name without flags",
        "Attempt to compile a test script.",
        "See http://openmp.org/wp/openmp-compilers/",
        "Clean up",
        "Create a temporary directory",
        "Get compiler invocation",
        "make sure to use just the compiler name without flags",
        "Attempt to compile a test script.",
        "See http://openmp.org/wp/openmp-compilers/",
        "Clean up",
        "check that cython version is > 0.21",
        "this fixes the following bug with the python 3.4 build:",
        "http://bugs.python.org/issue21121",
        "if dist.have_run.get('install'):",
        "install = dist.get_command_obj('install')"
    ],
    "docstrings": [
        "\"\"\"Check  whether the default compiler supports OpenMP.\n\n    This routine is adapted from yt, thanks to Nathan\n    Goldbaum. See https://github.com/pynbody/pynbody/issues/124\"\"\"",
        "\"\"\"WARNING\n\nOpenMP support is not available in your default C compiler, even though\nyour machine has more than one core available.\n\nSome routines in pynbody are parallelized using OpenMP and these will\nonly run on one core with your current configuration.\n\"\"\"",
        "\"\"\"Since you are running on Mac OS, it's likely that the problem here\nis Apple's Clang, which does not support OpenMP at all. The easiest\nway to get around this is to download the latest version of gcc from\nhere: http://hpc.sourceforge.net. After downloading, just point the\nCC environment variable to the real gcc and OpenMP support should\nget enabled automatically. Something like this -\n\nsudo tar -xzf /path/to/download.tar.gz /\nexport CC='/usr/local/bin/gcc'\npython setup.py clean\npython setup.py build\n\n\"\"\"",
        "\"\"\"Continuing your build without OpenMP...\\n\"\"\"",
        "\"\"\"\nYou are attempting to install pynbody without a recent version of cython.\nUnfortunately this pynbody package does not include the generated .c files that\nare required to do so.\n\nYou have two options. Either:\n\n 1. Get a 'release' version of pynbody from\n    https://github.com/pynbody/pynbody/releases\n\nor\n\n 2. Install Cython version 0.21 or higher.\n\n    This can normally be accomplished by typing\n\n    pip install --upgrade cython.\n\n\nIf you already did one of the above, you've encountered a bug. Please\nopen an issue on github to let us know. The missing file is {0}\nand the detected cython version is {1}.\n\"\"\""
    ],
    "functions": [
        "run",
        "check_for_pthread",
        "check_for_openmp"
    ],
    "classes": [
        "sdist"
    ]
}