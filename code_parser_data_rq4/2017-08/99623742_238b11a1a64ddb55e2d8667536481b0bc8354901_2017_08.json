{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "app",
        "bodyParser",
        "Conversation",
        "Conversation",
        "app",
        "req",
        "res",
        "res",
        "keyboard",
        "app",
        "req",
        "res",
        "decodeURIComponent",
        "req",
        "decodeURIComponent",
        "req",
        "process",
        "workspace",
        "workspace",
        "res",
        "user_key",
        "request",
        "reqOptions",
        "response",
        "workspace",
        "context",
        "content",
        "resolve",
        "reject",
        "conversation",
        "payload",
        "err",
        "data",
        "err",
        "reject",
        "err",
        "resolve",
        "data",
        "sendMessage",
        "wcs_response",
        "wcs_response",
        "wcs_response",
        "output",
        "user_key",
        "new_context",
        "request",
        "reqOptions",
        "response",
        "response",
        "res",
        "message",
        "err",
        "err",
        "res",
        "message",
        "err",
        "err",
        "err",
        "res",
        "message",
        "app",
        "req",
        "res",
        "app"
    ],
    "literals": [
        "'use strict'",
        "'express'",
        "'body-parser'",
        "'watson-developer-cloud/conversation/v1'",
        "'bluemix-autoscaling-agent'",
        "'request-promise'",
        "'ca3d49c3-1d6e-4d9d-a1b1-7b65c7119469'",
        "'6LPA0DnoXqkR'",
        "'https://gateway.watsonplatform.net/conversation/api'",
        "'/keyboard'",
        "\"type\"",
        "\"text\"",
        "'/message'",
        "'11298b60-486d-4dad-961a-d2537f8e6070'",
        "'<workspace_id>'",
        "'message'",
        "'text'",
        "'유효하지 않은 워크스페이스 아이디입니다.'",
        "'GET'",
        "'http://125.180.251.251:3000/wcs/'",
        "'/getContext'",
        "'User-Agent'",
        "'Request-Promise'",
        "\"text\"",
        "\"message\"",
        "\"text\"",
        "'GET'",
        "'http://125.180.251.251:3000/wcs/'",
        "'/'",
        "'User-Agent'",
        "'Request-Promise'",
        "\"message\"",
        "\"text\"",
        "\"api error : \"",
        "\"message\"",
        "\"text\"",
        "\"api error : \"",
        "'/friend'"
    ],
    "variables": [
        "express",
        "bodyParser",
        "Conversation",
        "agent",
        "request",
        "app",
        "conversation",
        "keyboard",
        "content",
        "user_key",
        "workspace",
        "reqOptions",
        "context",
        "response",
        "payload",
        "sendMessage",
        "output",
        "new_context",
        "message",
        "reqOptions",
        "message",
        "message"
    ],
    "comments": [
        "app server",
        "parser for post requests",
        "conversation middleware",
        "autoscaling middleware",
        "var XMLHttpRequest = require(\"xmlhttprequest\").XMLHttpRequest; // xhr의 요청은 loding으로 인한 예외발생",
        "var xhr = new XMLHttpRequest();",
        "watson conversation 생성",
        "If unspecified here, the CONVERSATION_USERNAME and CONVERSATION_PASSWORD env properties will be checked",
        "After that, the SDK will fall back to the bluemix-provided VCAP_SERVICES environment property",
        "Conversation 서비스 신임정보의 username, password",
        "process.env을 사용하셔도 됩니다",
        "latest version 2017_05_26",
        "end of watson conversation 생성",
        "kakao init",
        "or button",
        "kakao message",
        "recieve text from user",
        "user's key",
        "workspace id check",
        "watson 내 DB구축 제한 사항이 있어 외부 DB Server 구축하여 api로 작업했습니다",
        "user_key, context 필드를 참조하여 필요한 정보 가져오기, 갱신합니다",
        "아래 코드는 프로토타입으로 작성한 코드이므로 논리적 결함이 있을 수 있으니",
        "사용중인 DB로 로직 작성하시거나 api부분을 대체하시면 됩니다",
        "user_key에 해당하는 context 정보를 가져옴",
        "payload init",
        "output.text는 배열",
        "wcs 응답 context",
        "update context",
        "user_key에 해당하는 context 정보를 가져옴",
        "context 갱신 성공 시 kakao에 답변 전달",
        "외부DB서버 api 요청 에러",
        "외부DB서버 api 요청 에러",
        "xhr.open(\"GET\",'http://125.180.251.251:3000/wcs/'+user_key+'/getContext', true);\n  xhr.onreadystatechange=function(){\n  if (xhr.readyState==4 && xhr.status==200){\n    var context=JSON.parse(xhr.responseText);\n  //console.log(context);\n\n    var payload = { // make payload\n      workspace_id: workspace,\n      context: {\"context\":context},\n      input: {\"text\":content}\n    };\n\n    var sendMessage = new Promise((resolve, reject)=>\n      conversation.message(payload, function(err, data) {\n        if (err) {\n          reject(err);\n        }else{\n          resolve(data);\n        }\n      })\n    );\n\n    sendMessage.then(response=>{\n      var output = response.output.text[0];\n      var message={\n        \"message\":{\n          \"text\" : output\n        }\n      };\n    res.send(message);\n    });\n    //res.json(context);\n  }else{\n    var message={\n      \"message\":{\n        \"text\" : \"xhr error \"+xhr.readyState+' '+xhr.status\n      }\n    };\n    res.send(message);\n  }\n}\nxhr.send();",
        "var payload = { // make payload\n    workspace_id: workspace,\n    context: req.body.context || {},\n    input: {\"text\":content}\n  };"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}