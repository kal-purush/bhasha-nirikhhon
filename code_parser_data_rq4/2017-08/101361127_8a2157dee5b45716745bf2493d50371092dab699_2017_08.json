{
    "identifiers": [
        "cv2",
        "os",
        "PIL",
        "Image",
        "glob",
        "pasta",
        "os",
        "chdir",
        "pasta",
        "glob",
        "glob",
        "file",
        "jpgFiles",
        "Image",
        "open",
        "file",
        "im",
        "save",
        "file",
        "os",
        "remove",
        "file",
        "glob",
        "glob",
        "file",
        "jpgFiles",
        "Image",
        "open",
        "file",
        "im",
        "save",
        "file",
        "os",
        "remove",
        "file",
        "glob",
        "glob",
        "file",
        "gifFiles",
        "Image",
        "open",
        "file",
        "im",
        "save",
        "file",
        "os",
        "remove",
        "file",
        "glob",
        "glob",
        "filename",
        "pngFiles",
        "cv2",
        "imread",
        "filename",
        "image",
        "shape",
        "h",
        "w",
        "os",
        "remove",
        "filename",
        "glob",
        "glob",
        "len",
        "pngFiles"
    ],
    "literals": [
        "\"/Users/fegvilela/Documents/Unb/TCC/baseDados/\"",
        "\"Random/letrasSeparadas/\"",
        "\"*.jpeg\"",
        "\"%s.png\"",
        "\"*.jpg\"",
        "\"%s.png\"",
        "\"*.gif\"",
        "\"%s.png\"",
        "\"*.png\"",
        "\"*.png\""
    ],
    "variables": [
        "jpgFiles",
        "im",
        "jpgFiles",
        "im",
        "gifFiles",
        "im",
        "pngFiles",
        "image",
        "h",
        "w",
        "_",
        "pngFiles"
    ],
    "comments": [
        "",
        "Lê todas as imagens de um diretório (específico de cada tipografia)",
        "Reconhece o local de cada letra na imagem e recorta, formando nova ########## imagem para cada letra reconhecida",
        "",
        "transforma todos jpg em png",
        "print(jpgFiles)",
        "print(file[:-4])",
        "abre imagem com nome do arquivo",
        "remove jpg",
        "transforma todos jpg em png",
        "print(jpgFiles)",
        "print(file[:-4])",
        "abre imagem com nome do arquivo",
        "remove jpg",
        "transforma todos gif em png",
        "print(jpgFiles)",
        "print(file[:-4])",
        "abre imagem com nome do arquivo",
        "remove gif",
        "todos arquivos png do diretório (ou seja, todas imagens do diretório)",
        "print(pngFiles)",
        "print(\"%d %d\" %(h,w))"
    ],
    "docstrings": [
        "'''\n\n\n\n##########\n#HELVETICA\n##########\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/helveticaRandom/letrasSeparadas/\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n\n\n\n###########\n# GARAMOND\n############\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/garamondRandom/letrasSeparadas\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n\n\n\n\n###########\n# CLARENDON\n############\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/clarendonRandom/denovo/\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n\n\n\n\n###########\n# BASKERVILLE\n############\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/baskervilleRandom/denovo/\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n\n\n###########\n# DIDOT\n############\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/didotRandom/\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n\n\n###########\n# FUTURA\n############\n\nos.chdir(\"/Users/fegvilela/Documents/Unb/TCC/baseDados/futuraRandom/letrasSeparadas2/\")\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpeg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n#transforma todos jpg em png\njpgFiles = glob.glob(\"*.jpg\")\n#print(jpgFiles)\nfor file in jpgFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove jpg\n\n\n#transforma todos gif em png\ngifFiles = glob.glob(\"*.gif\")\n#print(jpgFiles)\nfor file in gifFiles:\n    #print(file[:-4])\n    im = Image.open(file) #abre imagem com nome do arquivo\n    im.save(\"%s.png\" %file[:-4])\n    os.remove(file) #remove gif\n\n#todos arquivos png do diretório (ou seja, todas imagens do diretório)\npngFiles = glob.glob(\"*.png\")\n#print(pngFiles)\n\n\nfor filename in pngFiles:\n\n    image = cv2.imread(filename)\n    h, w,_ = image.shape\n\n    if h <= 40 or w <= 40:\n        os.remove(filename)\n\n    #print(\"%d %d\" %(h,w))\n\npngFiles = glob.glob(\"*.png\")\nprint(len(pngFiles))\n'''"
    ],
    "functions": [
        "imApaga"
    ],
    "classes": []
}