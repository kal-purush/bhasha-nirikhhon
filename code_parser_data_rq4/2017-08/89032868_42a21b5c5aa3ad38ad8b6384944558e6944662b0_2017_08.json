{
    "identifiers": [
        "GitHub",
        "Tag",
        "semver",
        "existsSync",
        "join",
        "tag",
        "index",
        "array",
        "project",
        "version",
        "join",
        "project",
        "version",
        "project",
        "version",
        "join",
        "project",
        "version",
        "project",
        "directory",
        "tag",
        "existsSync",
        "getHtmlApiPath",
        "directory",
        "project",
        "tag",
        "project",
        "directory",
        "tag",
        "existsSync",
        "getJsonApiPath",
        "directory",
        "project",
        "tag",
        "_tag",
        "index",
        "array",
        "index",
        "array",
        "comp",
        "tag",
        "semver",
        "tag",
        "semver",
        "version",
        "comp",
        "repo",
        "filters",
        "repo",
        "tag",
        "semver",
        "tag",
        "a",
        "b",
        "semver",
        "a",
        "semver",
        "b",
        "semver",
        "left",
        "right",
        "tag",
        "index",
        "array",
        "filters",
        "tag",
        "index",
        "array"
    ],
    "literals": [
        "'../util/GitHub'",
        "'semver'",
        "'fs'",
        "'path'",
        "string",
        "string",
        "string",
        "${ project }/${ version }",
        "string",
        "string",
        "string",
        "${ project }-${ version }.json",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "version",
        "left",
        "right"
    ],
    "comments": [],
    "docstrings": [
        "* creates a path to HTML API docs",
        "* creates a path to JSON API docs",
        "* @param project project name\n * @param directory the base directory where html api docs are stored\n * @return a filter for existing html api docs",
        "* @param project project name\n * @param directory the base directory where json api docs are stored\n * @return a filter for existing json api docs",
        "* A filters only the latest\n * @param index the index of the tag\n * @return if the tag is the latest",
        "* @param comp a semver comparison\n * @return a filter to check if the tag satisfies the semver",
        "* Get a list of GitHub tags that pass the supplied filters\n * @param repo the GitHub repository\n * @param filters Tag filters to apply to the tag\n * @return a list of tags"
    ],
    "functions": [
        "getHtmlApiPath",
        "getJsonApiPath",
        "createHtmlApiMissingFilter",
        "createJsonApiMissingFilter",
        "latestFilter",
        "createVersionFilter",
        "getTags"
    ],
    "classes": []
}