{
    "identifiers": [
        "javaeetutorial",
        "dukesbookstore",
        "components",
        "javaeetutorial",
        "dukesbookstore",
        "model",
        "ImageArea",
        "javax",
        "faces",
        "component",
        "FacesComponent",
        "javax",
        "faces",
        "component",
        "UIOutput",
        "FacesComponent",
        "PropertyKeys",
        "alt",
        "coords",
        "shape",
        "targetImage",
        "getStateHelper",
        "eval",
        "PropertyKeys",
        "alt",
        "alt",
        "getStateHelper",
        "put",
        "PropertyKeys",
        "alt",
        "alt",
        "getStateHelper",
        "eval",
        "PropertyKeys",
        "coords",
        "coords",
        "getStateHelper",
        "put",
        "PropertyKeys",
        "coords",
        "coords",
        "getStateHelper",
        "eval",
        "PropertyKeys",
        "shape",
        "shape",
        "getStateHelper",
        "put",
        "PropertyKeys",
        "shape",
        "shape",
        "getStateHelper",
        "eval",
        "PropertyKeys",
        "targetImage",
        "targetImage",
        "getStateHelper",
        "put",
        "PropertyKeys",
        "targetImage",
        "targetImage",
        "Override",
        "Override",
        "getValue",
        "setValue",
        "getAlt",
        "getCoords",
        "getShape",
        "getValue"
    ],
    "literals": [
        "\"DemoArea\"",
        "\"Area\""
    ],
    "variables": [],
    "comments": [
        "UIOutput Methods"
    ],
    "docstrings": [
        "* Copyright (c) 2014 Oracle and/or its affiliates. All rights reserved.\n *\n * You may not modify, use, reproduce, or distribute this software except in\n * compliance with  the terms of the License at:\n * http://java.net/projects/javaeetutorial/pages/BerkeleyLicense",
        "* <p>{@link AreaComponent} is a JavaServer Faces component that represents a\n * particular hotspot in a client-side image map defined by our parent\n * {@link MapComponent}. The\n * <code>valueRef</code> property (if present) must point at a JavaBean of type\n * <code>components.model.ImageArea</code>; if not present, an\n * <code>ImageArea</code> instance will be synthesized from the values of the\n * <code>alt</code>,\n * <code>coords</code>, and\n * <code>shape</code> properties, and assigned to the\n * <code>value</code> property.</p>\n *\n * <p>Use of the javax.faces.component.StateHelper interface allows the use of\n * expressions and also makes it unnecessary to implement saveState() and\n * restoreState().</p>",
        "* @return the alternate text for our synthesized {@link ImageArea}",
        "* <p>Set the alternate text for our synthesized {@link ImageArea}.</p>\n     *\n     * @param alt The new alternate text",
        "* @return the hotspot coordinates for our synthesized {@link ImageArea}",
        "* <p>Set the hotspot coordinates for our synthesized {@link ImageArea}.</p>\n     *\n     * @param coords The new coordinates",
        "* @return the shape for our synthesized {@link ImageArea}",
        "* <p>Set the shape for our synthesized {@link ImageArea}.</p>\n     *\n     * @param shape The new shape (default, rect, circle, poly)",
        "* <p>Return the image that is the target of this\n     * <code>AreaComponent</code>.</p>\n     *\n     * @return the target image of this AreaComponent",
        "* <p>Set the image that is the target of this\n     * <code>AreaComponent</code>.</p>\n     *\n     * @param targetImage the ID of the target of this\n     * <code>AreaComponent</code>",
        "* @return the component family for this component",
        "* <p>Synthesize and return an {@link ImageArea} bean for this hotspot, if\n     * there is no\n     * <code>valueRef</code> property on this component.</p>"
    ],
    "functions": [
        "getAlt",
        "setAlt",
        "getCoords",
        "setCoords",
        "getShape",
        "setShape",
        "getTargetImage",
        "setTargetImage",
        "getFamily",
        "getValue"
    ],
    "classes": [
        "AreaComponent"
    ]
}