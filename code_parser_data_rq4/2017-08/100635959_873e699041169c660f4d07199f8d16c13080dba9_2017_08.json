{
    "identifiers": [
        "cmd2",
        "Cmd",
        "socket",
        "time",
        "IPy",
        "IP",
        "random",
        "os",
        "sys",
        "pprint",
        "varint",
        "pm_proto_pb2",
        "ValueError",
        "sock",
        "n",
        "n",
        "sock",
        "recv",
        "n",
        "data",
        "RuntimeError",
        "buf",
        "data",
        "n",
        "len",
        "data",
        "buf",
        "stream",
        "unpack",
        "stream",
        "recv",
        "result",
        "i",
        "shift",
        "shift",
        "i",
        "result",
        "msg",
        "prometheus_ip",
        "prometheus_ip",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "s",
        "connect",
        "prometheus_ip",
        "PM_PROTO_PORT",
        "varint",
        "encode",
        "len",
        "msg",
        "len",
        "msg",
        "s",
        "send",
        "packed_len",
        "msg",
        "s",
        "settimeout",
        "decode_socket",
        "s",
        "socket_read_n",
        "s",
        "msg_len",
        "msg_buf",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "PING",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "ip_address",
        "prometheus_ip",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "PING",
        "ip_address",
        "message",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "s",
        "connect",
        "ip_address",
        "PM_PROTO_PORT",
        "message",
        "SerializeToString",
        "len",
        "msg",
        "varint",
        "encode",
        "len",
        "msg",
        "s",
        "send",
        "packed_len",
        "msg",
        "s",
        "settimeout",
        "decode_socket",
        "s",
        "socket_read_n",
        "s",
        "msg_len",
        "message",
        "ParseFromString",
        "msg_buf",
        "len",
        "msg_buf",
        "msg_len",
        "message",
        "msg_len",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "PING",
        "ip_address",
        "s",
        "settimeout",
        "nputstr",
        "x",
        "strip",
        "x",
        "nputstr",
        "split",
        "i",
        "tokens",
        "selection",
        "add",
        "i",
        "k",
        "strip",
        "k",
        "i",
        "split",
        "len",
        "token",
        "token",
        "sort",
        "token",
        "token",
        "len",
        "token",
        "x",
        "first",
        "last",
        "selection",
        "add",
        "x",
        "invalid",
        "add",
        "i",
        "selection",
        "int_string",
        "int_string",
        "int_string",
        "int_string",
        "color_string",
        "color_type",
        "color_type",
        "color_string",
        "colors",
        "colors",
        "color_string",
        "colors",
        "color_string",
        "colors",
        "color_string",
        "colors",
        "color_string",
        "start",
        "end",
        "f",
        "start",
        "end",
        "f",
        "fix_patch",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "format",
        "f",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "f",
        "start",
        "end",
        "f",
        "fix_patch",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "format",
        "fix_patch",
        "f",
        "cRGB",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "f",
        "start",
        "end",
        "f",
        "fix_patch",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "format",
        "fix_patch",
        "f",
        "intensity",
        "fix_patch",
        "f",
        "captured",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "the_cue",
        "tspec",
        "mode",
        "cue_stacks",
        "mode",
        "the_cue",
        "cue_stacks",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "CueStep",
        "tspec",
        "fix",
        "fix_patch",
        "fix_count",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "append",
        "CueFix",
        "fix",
        "tspec",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "fix_patch",
        "fix",
        "level",
        "fix_patch",
        "fix",
        "rgb",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "fix_patch",
        "fix",
        "cRGB",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "fix_count",
        "the_cue",
        "Cuestack",
        "the_cue",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "CueStep",
        "tspec",
        "fix",
        "fix_patch",
        "fix_count",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "append",
        "CueFix",
        "fix",
        "tspec",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "fix_patch",
        "fix",
        "level",
        "fix_patch",
        "fix",
        "rgb",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "cue_fix",
        "fix_patch",
        "fix",
        "cRGB",
        "cue_stacks",
        "the_cue",
        "cuesteps",
        "the_cue",
        "fix_count",
        "Cmd",
        "random",
        "choice",
        "quotes",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "ping_pm",
        "line",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "s",
        "bind",
        "PM_DISC_PORT",
        "s",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_BROADCAST",
        "s",
        "sendto",
        "PM_DISC_PORT",
        "s",
        "settimeout",
        "s",
        "recvfrom",
        "data",
        "disc_prometheus",
        "append",
        "addr",
        "s",
        "settimeout",
        "prom",
        "disc_prometheus",
        "prom",
        "line",
        "line",
        "len",
        "disc_prometheus",
        "disc_prometheus",
        "len",
        "disc_prometheus",
        "select",
        "join",
        "disc_prometheus",
        "IP",
        "line",
        "which",
        "create_connection",
        "which",
        "line",
        "line",
        "split",
        "line",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "GO",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "GO",
        "cmdline",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "line",
        "line",
        "split",
        "line",
        "tty_columns",
        "max",
        "fix_patch",
        "cols",
        "f",
        "xrange",
        "max_fix",
        "print_fix_line",
        "f",
        "f",
        "f",
        "xrange",
        "max_fix",
        "print_fix_line",
        "f",
        "f",
        "cmdline",
        "fix_patch",
        "key",
        "fix_patch",
        "key",
        "fix_patch",
        "key",
        "cmdline",
        "key",
        "colors",
        "key",
        "colors",
        "key",
        "cmdline",
        "key",
        "cue_stacks",
        "key",
        "cue_stacks",
        "key",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "split",
        "len",
        "cmdline",
        "argc",
        "cmdline",
        "split",
        "len",
        "colorslices",
        "cmdline",
        "lower",
        "colorslices",
        "len",
        "colorslices",
        "is_float",
        "colorslices",
        "cmdline",
        "lower",
        "colorslices",
        "colorslices",
        "colorslices",
        "cmdline",
        "lower",
        "colorslices",
        "colorslices",
        "colorslices",
        "line",
        "line",
        "line",
        "split",
        "len",
        "cmdline",
        "parseIntSet",
        "cmdline",
        "argc",
        "cmdline",
        "lower",
        "cmdline",
        "lower",
        "cmdline",
        "lower",
        "cmdline",
        "lower",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "argc",
        "cmdline",
        "lower",
        "cmdline",
        "lower",
        "cmdline",
        "cmdline",
        "argc",
        "has_as",
        "has_at",
        "fix_at",
        "fix",
        "fix_list",
        "fixture_types",
        "fix_type",
        "this_fix_type",
        "this_fix_type",
        "this_fix_type",
        "this_fix_type",
        "this_fix_type",
        "this_fix_type",
        "this_fix_type",
        "Patch",
        "fixture_type",
        "address_ptr",
        "fix_patch",
        "fix",
        "fix_label",
        "fix_patch",
        "fix",
        "fix_nc",
        "fix_patch",
        "fix",
        "fix_int",
        "fix_patch",
        "fix",
        "fix_vw",
        "fix_patch",
        "fix",
        "fix_rgb",
        "fix_patch",
        "fix",
        "fix_cm",
        "address_ptr",
        "fix_nc",
        "fix_patch",
        "fix",
        "line",
        "current_cue",
        "line",
        "split",
        "len",
        "cmdline",
        "argc",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "argc",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "has_q",
        "qnum",
        "split",
        "real_q",
        "real_q",
        "has_t",
        "tspec",
        "split",
        "real_tspec",
        "real_tspec",
        "record_a_cue",
        "current_cue",
        "tspec",
        "current_cue",
        "current_cue",
        "line",
        "line",
        "parseIntSet",
        "line",
        "fix",
        "fix_list",
        "fix_patch",
        "fix",
        "line",
        "line",
        "line",
        "split",
        "len",
        "cmdline",
        "parseIntSet",
        "cmdline",
        "argc",
        "cmdline",
        "lower",
        "cmdline",
        "cmdline",
        "lower",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "cmdline",
        "argc",
        "cmdline",
        "lower",
        "cmdline",
        "cmdline",
        "cmdline",
        "fix",
        "fix_list",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "FIXTURE",
        "fix",
        "fix_patch",
        "fix",
        "has_i",
        "fix_patch",
        "fix",
        "parse_intensity",
        "intensity",
        "parse_intensity",
        "intensity",
        "has_at",
        "fix_patch",
        "fix",
        "parse_color",
        "fix_at",
        "parse_color",
        "fix_at",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "line",
        "line",
        "line",
        "split",
        "len",
        "cmdline",
        "argc",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "LOAD",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "argc",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "LOAD",
        "cmdline",
        "cmdline",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "line",
        "line",
        "line",
        "split",
        "len",
        "cmdline",
        "argc",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "LOAD",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "argc",
        "pm_proto_pb2",
        "pmproto",
        "pm_proto_pb2",
        "pmproto",
        "LOAD",
        "cmdline",
        "cmdline",
        "message",
        "SerializeToString",
        "transact_message",
        "msg",
        "msg",
        "message",
        "ParseFromString",
        "msg",
        "message",
        "pm_proto_pb2",
        "pmproto",
        "ACK",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "fixture_type",
        "start_address",
        "fixture_type",
        "start_address",
        "label",
        "fixture_type",
        "start_address",
        "num_channels",
        "step",
        "cuesteps",
        "retstr",
        "step",
        "retstr",
        "cuesteps",
        "step",
        "retstr",
        "retstr",
        "cuestack_id",
        "num_cuesteps",
        "cuestack_id",
        "num_cuesteps",
        "wait_time",
        "retstr",
        "fix_count",
        "step",
        "cue_fix",
        "retstr",
        "step",
        "retstr",
        "wait_time",
        "fix_count",
        "wait_time",
        "fix_count",
        "fixture_id",
        "fade_time",
        "intensity",
        "retstr",
        "intensity",
        "crgb",
        "retstr",
        "crgb",
        "retstr",
        "fixture_id",
        "fade_time",
        "fixture_id",
        "fade_time",
        "os",
        "popen",
        "read",
        "split",
        "prometheus_ip",
        "App",
        "app",
        "cmdloop"
    ],
    "literals": [
        "'dim'",
        "'label'",
        "'Single Channel Dimmer'",
        "'type'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "'\\x01\\x00'",
        "'rgb'",
        "'label'",
        "'Generic 3-channel RGB'",
        "'type'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "'\\x02\\x03\\x04'",
        "'rgbw'",
        "'label'",
        "'Generic 4-channel RGBW'",
        "'type'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "'\\x02\\x03\\x04\\x05'",
        "'vw'",
        "'label'",
        "'Generic 2-channel VW'",
        "'type'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "'\\x06\\x07'",
        "'gantom_precision'",
        "'label'",
        "'Gantom 7-channel Precision DMX'",
        "'type'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "'\\x02\\x03\\x04\\x00\\x00\\x00\\x00\\x00'",
        "'.'",
        "''",
        "''",
        "'unexpected connection close'",
        "\"!B\"",
        "\"Connect first!\"",
        "\"Connecting to \"",
        "\"sending\"",
        "\"bytes\"",
        "\"sent\"",
        "\"bytes\"",
        "\"Got\"",
        "\"bytes\"",
        "\"Msg len: \"",
        "\"No response!\"",
        "\"\"",
        "','",
        "'-'",
        "'%'",
        "'rgb'",
        "'rgb'",
        "'rgb'",
        "'rgb'",
        "'\\033[;7m'",
        "'   {0:<3} '",
        "'\\033[0;0m'",
        "'       '",
        "'\\n'",
        "'\\033[;7m'",
        "'{0:06X} '",
        "'\\033[0;0m'",
        "'       '",
        "'\\n'",
        "'\\033[;7m'",
        "'{0:>6} '",
        "'\\033[0;0m'",
        "'       '",
        "'\\n'",
        "'\\n'",
        "'Q0.0: '",
        "'-'",
        "\"Open \"",
        "\"Save \"",
        "\"Delete \"",
        "\"OK\"",
        "\"No response\"",
        "''",
        "\"ping\"",
        "'<broadcast>'",
        "'ping'",
        "\"Found: \"",
        "\"\"",
        "\"Run Discovery First, or Specify an IP\"",
        "\" \"",
        "\"Which one?\"",
        "' '",
        "\"\"",
        "\"ACK\"",
        "\"NAK\"",
        "\"ACK\"",
        "\"NAK\"",
        "' '",
        "\"\"",
        "\"patch\"",
        "\"Listing Patch:\"",
        "\": \"",
        "\"palette\"",
        "\"Listing Palettes:\"",
        "\": \"",
        "'q'",
        "\"Listing Cuestack:\"",
        "\": \"",
        "\"List \"",
        "\"Load \"",
        "\"Only Record \"",
        "\"Only Update \"",
        "\"Only Update \"",
        "' '",
        "','",
        "'ct'",
        "'xyz'",
        "'rgb'",
        "\"Uhh, wtf mate?\"",
        "\"Palette \"",
        "' '",
        "'as'",
        "'as'",
        "'@'",
        "'@'",
        "'as'",
        "'@'",
        "'type'",
        "'label'",
        "'num_channels'",
        "'intensity'",
        "'vw'",
        "'rgb'",
        "'channel_map'",
        "' '",
        "'q'",
        "'q'",
        "'t'",
        "'t'",
        "'q'",
        "'t'",
        "'.'",
        "','",
        "'Q'",
        "'.'",
        "': '",
        "\"Record \"",
        "\"Release \"",
        "' '",
        "'i'",
        "'i'",
        "'@'",
        "'@'",
        "'as'",
        "'@'",
        "\"ACK\"",
        "\"NAK\"",
        "\"Set \"",
        "' '",
        "\"ACK\"",
        "\"NAK\"",
        "\"ACK\"",
        "\"NAK\"",
        "\"Load Cue \"",
        "' '",
        "\"ACK\"",
        "\"NAK\"",
        "\"ACK\"",
        "\"NAK\"",
        "\"Load and Go Cue \"",
        "\"Unpatch \"",
        "\"Update \"",
        "\"\"",
        "\": \"",
        "\"/\"",
        "\" [\"",
        "\"]\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Cuestep: \"",
        "\"\\n\"",
        "\"=====\"",
        "\"\"",
        "\"Wait: \"",
        "\"\\n\"",
        "\"Fix_count: \"",
        "\"\\n\"",
        "\"Fix: \"",
        "\" Fade: \"",
        "\"\\n\"",
        "\"Int: \"",
        "\"\\n\"",
        "\"Color: \"",
        "\"\\n\"",
        "'stty size'",
        "'r'",
        "'__main__'"
    ],
    "variables": [
        "PM_DISC_PORT",
        "PM_PROTO_PORT",
        "fixture_types",
        "buf",
        "data",
        "shift",
        "result",
        "i",
        "s",
        "packed_len",
        "msg_len",
        "msg_buf",
        "message",
        "message",
        "msg",
        "message",
        "message",
        "s",
        "msg",
        "packed_len",
        "msg_len",
        "msg_buf",
        "prometheus_ip",
        "selection",
        "invalid",
        "tokens",
        "token",
        "first",
        "last",
        "quotes",
        "colors",
        "fix_count",
        "intensity",
        "crgb",
        "fix_count",
        "cue_stacks",
        "intensity",
        "crgb",
        "fix_count",
        "prompt",
        "intro",
        "ruler",
        "disc_prometheus",
        "s",
        "disc_prometheus",
        "data",
        "addr",
        "which",
        "which",
        "which",
        "which",
        "cmdline",
        "message",
        "message",
        "message",
        "go",
        "msg",
        "msg",
        "message",
        "message",
        "message",
        "go",
        "message",
        "cuestack",
        "msg",
        "msg",
        "cmdline",
        "cols",
        "max_fix",
        "cmdline",
        "argc",
        "colorslices",
        "colors",
        "colors",
        "colors",
        "cmdline",
        "argc",
        "fix_list",
        "has_at",
        "has_as",
        "has_as",
        "fix_type",
        "has_as",
        "fix_type",
        "has_at",
        "fix_at",
        "has_at",
        "fix_at",
        "has_as",
        "fix_type",
        "has_at",
        "fix_at",
        "address_ptr",
        "this_fix_type",
        "fixture_type",
        "fix_label",
        "fix_nc",
        "fix_int",
        "fix_vw",
        "fix_rgb",
        "fix_cm",
        "fix_patch",
        "fix",
        "label",
        "num_channels",
        "intensity",
        "vw",
        "rgb",
        "channel_map",
        "cmdline",
        "argc",
        "has_t",
        "has_q",
        "t_spec",
        "qnum",
        "has_q",
        "qnum",
        "has_q",
        "tspec",
        "has_t",
        "tspec",
        "has_t",
        "qnum",
        "has_q",
        "tspec",
        "has_t",
        "real_q",
        "current_cue",
        "real_tspec",
        "tspec",
        "prompt",
        "fix_list",
        "captured",
        "cmdline",
        "argc",
        "has_i",
        "has_at",
        "fix_list",
        "has_i",
        "intensity",
        "has_i",
        "intensity",
        "has_at",
        "fix_at",
        "has_at",
        "fix_at",
        "has_i",
        "intensity",
        "has_at",
        "fix_at",
        "message",
        "message",
        "message",
        "fixture_id",
        "captured",
        "intensity",
        "message",
        "intensity",
        "cRGB",
        "message",
        "colorspec",
        "msg",
        "msg",
        "cmdline",
        "argc",
        "message",
        "message",
        "message",
        "go",
        "message",
        "cuestack",
        "msg",
        "msg",
        "message",
        "message",
        "message",
        "go",
        "message",
        "cuestack",
        "message",
        "fixture_id",
        "msg",
        "msg",
        "cmdline",
        "argc",
        "message",
        "message",
        "message",
        "go",
        "message",
        "cuestack",
        "msg",
        "msg",
        "message",
        "message",
        "message",
        "go",
        "message",
        "cuestack",
        "message",
        "fixture_id",
        "msg",
        "msg",
        "label",
        "fixture_type",
        "start_address",
        "intensity",
        "rgb",
        "vw",
        "num_channels",
        "channel_map",
        "vw_cool",
        "vw_warm",
        "cVW",
        "cRGB",
        "cXYZ",
        "level",
        "captured",
        "fixture_type",
        "start_address",
        "cue_stacks",
        "label",
        "cuestack_id",
        "tweet",
        "num_cuesteps",
        "loop",
        "current_step",
        "cuesteps",
        "retstr",
        "cuestack_id",
        "num_cuesteps",
        "label",
        "wait_time",
        "fix_count",
        "cue_fix",
        "retstr",
        "wait_time",
        "fix_count",
        "crgb",
        "cvw",
        "white",
        "intensity",
        "fixture_id",
        "fade_time",
        "retstr",
        "fixture_id",
        "fade_time",
        "tty_rows",
        "tty_columns",
        "fix_patch",
        "prometheus_ip",
        "app"
    ],
    "comments": [
        "!/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python",
        "True if string is a number with a dot",
        "if string is not a number",
        "s.sendto(\"hello\",(ip_address,PM_PROTO_PORT))",
        "try:",
        "From http://thoughtsbyclayg.blogspot.com/2008/10/parsing-list-of-numbers-in-python.html",
        "tokens are comma seperated values",
        "typically tokens are plain old integers",
        "if not, then it might be a range",
        "we have items seperated by a dash",
        "try to build a valid range",
        "not an int and not a range...",
        "Report invalid tokens before returning valid selection",
        "print \"Invalid set: \" + str(invalid)",
        "end parseIntSet",
        "RGB",
        "print data",
        "print addr",
        "Then we have a color temperature",
        "We have XYZ coordinates",
        "print this_fix_type",
        "print \"Patch \" + line"
    ],
    "docstrings": [
        "\"\"\"\ndim : \"single channel dimmer\"\ntype = 1\nnum_channels = 1\nintensity = true\nvw = false\nrgb = false\nchannel_map = 0x01 0x00...\n\nrgb : \"3-channel rgb fixture\"\ntype = 2\nnum_chnanels = 3\nintensity = false\nvw = false\nrgb = true\nchannel_map = 0x02 0x03 0x04 0x00...\n\nrgbw : \"4-channel rgbw fixture\"\ntype = 3\nnum_chnanels = 4\nintensity = false\nvw = false\nrgb = true\nchannel_map = 0x02 0x03 0x04 0x05 0x00...\n\nvw : \"2-channel vw fixture\"\ntype = 4\nnum_chnanels = 2\nintensity = false\nvw = true\nrgb = false\nchannel_map = 0x06 0x07 0x00 0x00 0x00...\n\ngantom_precision : \"Gantom 7-channel Precision DMX\"\ntype = 41\nnum_chnanels = 7\nintensity = false\nvw = false\nrgb = true\nchannel_map = 0x02 0x03 0x04 0x00 0x00...\n\"\"\"",
        "\"\"\" Read exactly n bytes from the socket.\n        Raise RuntimeError if the connection closed before\n        n bytes were read.\n    \"\"\"",
        "\"\"\"Read a varint from `stream`\"\"\"",
        "\"\"\"O dear Ophelia!\nI am ill at these numbers:\nI have not art to reckon my groans.\"\"\"",
        "\"\"\"There wanted not some beams of light\nto guide men in the exercise of their Stocastick faculty.\"\"\"",
        "\"\"\"By means of the thread one understands the ball of yarn,\nso we'll be satisfied and assured by having this sample.\"\"\"",
        "\"\"\"If the numbers are not random,\nthey are at least higgledy-piggledy.\"\"\"",
        "\"\"\"Attempt the end and never stand to doubt;\nNothing's so hard, but search will find it out.\"\"\"",
        "\"\"\"Always palletize your color! - CTW\"\"\"",
        "\"\"\"Simple command processor example.\"\"\"",
        "\"\"\"\nPrometheus Commandline Programmer v0.0\n\n\"\"\"",
        "\"\"\"\n\n\"\"\"",
        "\"\"\"\n        palette 255,255,255 as white\n\n        Store an RGB value as a named color\n\n        palette 11.65,6.634,12.72 as potato\n\n        Store an XYZ color as named color\n\n        palette 3700 as nice_white\n\n        store a color temperature as a named color\n\n        [pal]ette spec as name\n\n        \"\"\"",
        "\"\"\"\n        [pat]ch fixture @ position as type\n                   0    1     2     3  4\n        patch 1-3 @ 1 as RGB\n        \"\"\"",
        "\"\"\"record q # t [timespec]\n\n        # is a dotted pair of cue.cuestep\n\n        timespec is comma separated decimal seconds\n\n        wait_time , fade_time\n\n        \"\"\"",
        "\"\"\"\n        [s]et fixture spec [@ color] [i intensity]\n                0           1  2      3   4\n        \"\"\"",
        "\"\"\"\nmessage fixture {\n  required uint32 fixture_id = 1;\n  optional string label = 2 [(nanopb).max_size = 20];\n  required uint32 fixture_type = 3;\n  required uint32 start_address = 4;\n  optional bool intensity = 10;\n  optional bool rgb = 11;\n  optional bool vw = 12;\n  optional uint32 num_channels = 20;\n  optional bytes channel_map = 21 [(nanopb).max_size = 32];\n  optional uint32 vw_cool = 30;\n  optional uint32 vw_warm = 31;\n}\ntypedef struct _fixture_fader {\n  char label[20];\n  uint16_t fixture_type;\n  uint16_t start_address;\n  uint8_t num_channels;\n  bool intensity;\n  bool rgb;\n  bool vw;\n  uint16_t vw_cool; // Cool CT\n  uint16_t vw_warm; // Warm CT\n  uint32_t cVW_t; // CT target\n  uint32_t cVW_s; // CT inital\n  uint32_t cVW; // CT current\n  uint64_t cVW_start; // CT start time\n  uint64_t cVW_time; // CT target time\n  uint32_t cRGB; // 8-bit RGB current\n  uint32_t cRGB_t; // 8-bit RGB target\n  uint32_t cRGB_s; // 8-bit RGB start\n  uint64_t cRGB_start; // RGB start time\n  uint64_t cRGB_time; // RGB target time\n  uint16_t level; // Overall level current from 0-65k\n  uint16_t level_t; // Level target\n  uint16_t level_s; // Level start\n  uint64_t level_start; // Level start time\n  uint64_t level_time; // Level target time\n  uint8_t channel_map[32]; // Channel map\n\n  #ifdef USE_XYZ\n  cXYZ cXYZ_t;\n  cXYZ cXYZ_s;\n  #endif\n\n  #ifdef USE_LAB\n  cLAB cLAB_t;\n  cLAB cLAB_s;\n  #endif USE_LAB\n\n} fixture_fader;\n\"\"\""
    ],
    "functions": [
        "is_float",
        "socket_read_n",
        "decode_socket",
        "transact_message",
        "ping_pm",
        "create_connection",
        "parseIntSet",
        "parse_intensity",
        "parse_color",
        "print_fix_line",
        "record_a_cue",
        "do_open",
        "do_save",
        "do_delete",
        "do_ping",
        "do_find",
        "do_connect",
        "do_go",
        "do_list",
        "do_load",
        "do_orecord",
        "do_oupdate",
        "do_oupdate",
        "do_palette",
        "do_patch",
        "do_record",
        "do_release",
        "do_fixture",
        "do_loadcue",
        "do_loadandgo",
        "do_unpatch",
        "do_update",
        "do_EOF",
        "__str__",
        "__str__",
        "__str__",
        "__str__"
    ],
    "classes": [
        "App",
        "Patch",
        "Cuestack",
        "CueStep",
        "CueFix"
    ]
}