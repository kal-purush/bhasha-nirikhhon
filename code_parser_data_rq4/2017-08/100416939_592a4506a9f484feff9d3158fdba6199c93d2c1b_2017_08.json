{
    "identifiers": [
        "UnityEngine",
        "Reflection",
        "ConsoleClearMethod",
        "ConsoleClearMethod",
        "Invoke",
        "inLog",
        "inFilterName",
        "Debug",
        "Log",
        "inLog",
        "inFilterName",
        "inName",
        "inValue",
        "Debug",
        "Log",
        "inName",
        "inValue",
        "inName",
        "_consoleClearMethod",
        "_checkedConsoleClearMethod",
        "_checkedConsoleClearMethod",
        "ConsoleWindowType",
        "_consoleClearMethod",
        "ConsoleWindowType",
        "GetMethod",
        "BindingFlags",
        "Static",
        "BindingFlags",
        "Public",
        "_consoleClearMethod",
        "_consoleWindowType",
        "_checkedConsoleWindowType",
        "_checkedConsoleWindowType",
        "Assembly",
        "AppDomain",
        "CurrentDomain",
        "GetAssemblies",
        "iAssembly",
        "assemblies",
        "Length",
        "iAssembly",
        "Type",
        "assemblies",
        "iAssembly",
        "GetTypes",
        "iType",
        "types",
        "Length",
        "iType",
        "types",
        "iType",
        "Name",
        "_consoleWindowType",
        "types",
        "iType",
        "_consoleWindowType"
    ],
    "literals": [
        "\"\\nCPAPI:{\\\"cmd\\\":\\\"Filter\\\" \\\"name\\\":\\\"\"",
        "\"\\\"}\"",
        "\" : \"",
        "\"\\nCPAPI:{\\\"cmd\\\":\\\"Watch\\\" \\\"name\\\":\\\"\"",
        "\"\\\"}\"",
        "\"ClearEntries\"",
        "\"ConsolePro3Window\""
    ],
    "variables": [
        "_checkedConsoleClearMethod",
        "MethodInfo",
        "_consoleClearMethod",
        "MethodInfo",
        "ConsoleClearMethod",
        "_checkedConsoleWindowType",
        "Type",
        "_consoleWindowType",
        "Type",
        "ConsoleWindowType",
        "assemblies",
        "iAssembly",
        "types",
        "iType"
    ],
    "comments": [
        "Clear the console and the native console",
        "Send a log to a specific filter regardless of contents",
        "Ex: ConsoleProDebug.LogToFilter(\"Hi\", \"CustomFilter\");",
        "Watch a variable. This will only produce one log entry regardless of how many times it is logged, allowing you to track variables without spam.",
        "Ex:",
        "void Update() {",
        "ConsoleProDebug.Watch(\"Player X Position\", transform.position.x);",
        "}",
        "Reflection calls to access Console Pro from runtime"
    ],
    "docstrings": [],
    "functions": [
        "Clear",
        "LogToFilter",
        "Watch"
    ],
    "classes": [
        "ConsoleProDebug"
    ]
}