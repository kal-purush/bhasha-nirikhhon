{
    "identifiers": [
        "S3",
        "fs",
        "AuthStorage",
        "AwsS3",
        "S3",
        "fs",
        "AwsS3",
        "AwsS3",
        "AwsS3",
        "zipReadStream",
        "uploadParams",
        "err",
        "data",
        "err",
        "AwsS3",
        "err",
        "AwsS3",
        "data",
        "data",
        "syncToken",
        "AwsS3",
        "syncToken",
        "callback",
        "AwsS3",
        "dataBody",
        "dataBody",
        "token",
        "callback",
        "token",
        "key",
        "authData",
        "key",
        "authData",
        "key",
        "callback",
        "key",
        "dataBody",
        "dataBody",
        "callback",
        "jsonAuth",
        "key",
        "bodyContent",
        "contentType",
        "encrypt",
        "AwsS3",
        "err",
        "data",
        "bodyContent",
        "bodyContent",
        "bodyContent",
        "AwsS3",
        "key",
        "bodyContent",
        "contentType",
        "encrypt",
        "putParams",
        "putParams",
        "err",
        "data",
        "err",
        "key",
        "err",
        "key",
        "data",
        "key",
        "callback",
        "doesExist",
        "doesExist",
        "AwsS3",
        "key",
        "getParams",
        "err",
        "data",
        "err",
        "key",
        "err",
        "callback",
        "data",
        "doesExist",
        "doesExist",
        "AwsS3",
        "createParams",
        "err",
        "data",
        "err",
        "err",
        "AwsS3",
        "data",
        "callback",
        "AwsS3",
        "err",
        "data",
        "err",
        "err",
        "callback",
        "callback"
    ],
    "literals": [
        "\"aws-sdk\"",
        "\"fs\"",
        "\"./AuthStorage\"",
        "\"dream-swing-automation-scripts\"",
        "\"google-calendar-sync-token\"",
        "\"google-calendar-to-trello.zip\"",
        "\"out/\"",
        "Storing '${AwsS3.ZIP_FILENAME}' to S3 failed. ${err}",
        "Storing '${AwsS3.ZIP_FILENAME}' to S3 succeeded. ETag: ${data.ETag}. Location: ${data.Location}",
        "string",
        "\"text/plain\"",
        "\"token from storage: \"",
        "string",
        "\"application/json\"",
        "string",
        "string",
        "string",
        "string",
        "\"bucketExists\"",
        "\"string\"",
        "\"ServerSideEncryption\"",
        "\"AES256\"",
        "Storing data to key ${key} failed. ${err}",
        "${key} data stored successfully. ETag: ${data.ETag}",
        "string",
        "\"Bucket does not exist, can't retrieve data.\"",
        "Could not retrieve data for ${key}. ${err}",
        "\"us-east-1\"",
        "\"Error creating S3 bucket. \"",
        "Bucket ${AwsS3.BUCKET_NAME} created in location: ${data.Location}",
        "\"headBucket returned error. \""
    ],
    "variables": [
        "zipReadStream",
        "uploadParams",
        "token",
        "jsonAuth",
        "putParams",
        "getParams",
        "createParams"
    ],
    "comments": [
        "credentials stored locally in ~/.aws/credentials",
        "encrypt",
        "encrypt"
    ],
    "docstrings": [],
    "functions": [
        "uploadZip",
        "storeSyncToken",
        "getSyncToken",
        "storeEncryptedAuth",
        "getEncryptedAuth",
        "storeData",
        "getData",
        "ensureBucketExist",
        "bucketExist"
    ],
    "classes": [
        "AwsS3"
    ]
}