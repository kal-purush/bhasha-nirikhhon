{
    "identifiers": [
        "print_function",
        "unicode_literals",
        "datetime",
        "os",
        "time",
        "requests",
        "bgmi",
        "config",
        "LANG",
        "MAX_PAGE",
        "COVER_URL",
        "BANGUMI_MOE_URL",
        "bgmi",
        "utils",
        "utils",
        "print_info",
        "print_error",
        "bug_report",
        "bgmi",
        "models",
        "Bangumi",
        "bgmi",
        "website",
        "BaseWebsite",
        "BANGUMI_MOE_URL",
        "endswith",
        "format",
        "BANGUMI_MOE_URL",
        "__split",
        "format",
        "BANGUMI_MOE_URL",
        "__split",
        "format",
        "BANGUMI_MOE_URL",
        "__split",
        "format",
        "BANGUMI_MOE_URL",
        "__split",
        "format",
        "BANGUMI_MOE_URL",
        "__split",
        "url",
        "method",
        "kwargs",
        "os",
        "environ",
        "get",
        "print_info",
        "format",
        "url",
        "os",
        "environ",
        "get",
        "getattr",
        "requests",
        "method",
        "lower",
        "url",
        "kwargs",
        "text",
        "getattr",
        "requests",
        "method",
        "lower",
        "url",
        "kwargs",
        "json",
        "requests",
        "ConnectionError",
        "print_error",
        "ValueError",
        "print_error",
        "data",
        "LANG",
        "LANG",
        "i",
        "i",
        "lang",
        "i",
        "data",
        "data",
        "s",
        "data",
        "s",
        "s",
        "result",
        "data",
        "b",
        "b",
        "data",
        "get_response",
        "TEAM_URL",
        "json",
        "ids",
        "process_name",
        "get_response",
        "NAME_URL",
        "json",
        "ids",
        "bangumi_item",
        "data",
        "process_subtitle",
        "subtitle",
        "get",
        "bangumi_item",
        "subtitle_of_bangumi",
        "keys",
        "name",
        "bangumi_item",
        "bangumi_item",
        "Bangumi",
        "week",
        "bangumi_item",
        "bangumi_item",
        "key",
        "value",
        "subtitle_of_bangumi",
        "items",
        "subtitle_group_list",
        "append",
        "key",
        "value",
        "weekly_list",
        "append",
        "item",
        "weekly_list",
        "bug_report",
        "weekly_list",
        "subtitle_group_list",
        "BaseWebsite",
        "COVER_URL",
        "bangumi_id",
        "subtitle_list",
        "max_page",
        "MAX_PAGE",
        "subtitle_list",
        "subtitle_id",
        "subtitle_list",
        "bangumi_id",
        "subtitle_id",
        "BANGUMI_TAG",
        "get_response",
        "DETAIL_URL",
        "json",
        "data",
        "response_data",
        "extend",
        "response",
        "i",
        "max_page",
        "max_page",
        "print_info",
        "format",
        "i",
        "bangumi_id",
        "BANGUMI_TAG",
        "i",
        "get_response",
        "DETAIL_URL",
        "json",
        "data",
        "response",
        "response_data",
        "extend",
        "response",
        "index",
        "bangumi",
        "response_data",
        "bangumi",
        "bangumi",
        "bangumi",
        "parse_episode",
        "bangumi",
        "time",
        "mktime",
        "datetime",
        "datetime",
        "strptime",
        "bangumi",
        "split",
        "timetuple",
        "response_data",
        "get_response",
        "FETCH_URL",
        "response",
        "parser_bangumi",
        "response",
        "bangumi_result",
        "subtitile_result",
        "keyword",
        "count",
        "i",
        "count",
        "get_response",
        "SEARCH_URL",
        "json",
        "keyword",
        "i",
        "rows",
        "extend",
        "data",
        "info",
        "rows",
        "result",
        "append",
        "info",
        "keyword",
        "info",
        "info",
        "parse_episode",
        "info",
        "time",
        "mktime",
        "datetime",
        "datetime",
        "strptime",
        "info",
        "split",
        "timetuple",
        "result",
        "result"
    ],
    "literals": [
        "'549ef207fe682f7549f1ea90'",
        "'/'",
        "'/'",
        "''",
        "'{0}{1}api/bangumi/current'",
        "'{0}{1}api/team/working'",
        "'{0}{1}api/tag/fetch'",
        "'{0}{1}api/torrent/search'",
        "'{0}{1}api/v2/torrent/search'",
        "'GET'",
        "'proxies'",
        "'http'",
        "\"http://localhost:1080\"",
        "'DEBUG'",
        "'Request URL: {0}'",
        "'DEBUG'",
        "'error: failed to establish a new connection'",
        "'error: server returned data maybe not be json, please contact ricterzheng@gmail.com'",
        "'zh_cn'",
        "'zh_cn'",
        "'zh_tw'",
        "'ja'",
        "'en'",
        "'_id'",
        "'locale'",
        "'tag_id'",
        "'name'",
        "'tag_id'",
        "'POST'",
        "'tag_ids'",
        "'POST'",
        "'_ids'",
        "'tag_id'",
        "'status'",
        "'subtitle_group'",
        "'name'",
        "'tag_id'",
        "'keyword'",
        "'tag_id'",
        "'update_time'",
        "'showOn'",
        "'cover'",
        "'cover'",
        "'id'",
        "'name'",
        "'tag_id'",
        "'POST'",
        "'torrents'",
        "'Fetch page {0} ...'",
        "'tag_id'",
        "'p'",
        "'POST'",
        "'torrents'",
        "'download'",
        "'magnet'",
        "'subtitle_group'",
        "'team_id'",
        "'title'",
        "'title'",
        "'episode'",
        "'title'",
        "'time'",
        "'publish_time'",
        "'.'",
        "\"%Y-%m-%dT%H:%M:%S\"",
        "'POST'",
        "'query'",
        "'p'",
        "'torrents'",
        "'download'",
        "'magnet'",
        "'name'",
        "'subtitle_group'",
        "'team_id'",
        "'title'",
        "'title'",
        "'episode'",
        "'title'",
        "'time'",
        "'publish_time'",
        "'.'",
        "\"%Y-%m-%dT%H:%M:%S\""
    ],
    "variables": [
        "BANGUMI_TAG",
        "__split",
        "FETCH_URL",
        "TEAM_URL",
        "NAME_URL",
        "DETAIL_URL",
        "SEARCH_URL",
        "kwargs",
        "lang",
        "result",
        "result",
        "ids",
        "subtitle",
        "name",
        "weekly_list",
        "subtitle_group_list",
        "subtitle_of_bangumi",
        "item",
        "cover_url",
        "response_data",
        "data",
        "response",
        "data",
        "response",
        "response_data",
        "index",
        "response",
        "bangumi_result",
        "subtitile_result",
        "rows",
        "result",
        "data",
        "result"
    ],
    "comments": [
        "coding=utf-8",
        "tag of bangumi on bangumi.moe",
        "pprint(data)",
        "f = Subtitle(id=s['tag_id'], name=s['name'])",
        "if not f.select():",
        "f.save()",
        "Avoid bangumi collection. It's ok but it will waste your traffic and bandwidth."
    ],
    "docstrings": [
        "\"\"\"get subtitle group name from links\n    \"\"\"",
        "\"\"\"match weekly bangumi list from data\n    \"\"\"",
        "\"\"\"\n        get all episode by bangumi id\n        example\n        ```\n            [\n                {\n                    \"download\": \"magnet:?xt=urn:btih:e43b3b6b53dd9fd6af1199e112d3c7ff15cab82c\",\n                    \"name\": \"来自深渊\",\n                    \"subtitle_group\": \"58a9c1c9f5dc363606ab42ec\",\n                    \"title\": \"【喵萌奶茶屋】★七月新番★[来自深渊/Made in Abyss][07][GB][720P]\",\n                    \"episode\": 0,\n                    \"time\": 1503301292\n                },\n            ]\n        ```\n\n        :param bangumi_id: bangumi_id\n        :param subtitle_list: list of subtitle group\n        :type subtitle_list: list\n        :param max_page: how many page you want to crawl if there is no subtitle list\n        :type max_page: int\n        :return: list of bangumi\n        :rtype: list[dict]\n        \"\"\"",
        "\"\"\"\n        return a list of all bangumi and a list of all subtitle group\n\n        list of bangumi dict:\n        update time should be one of ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n        example:\n        ```\n            [\n                {\n                    \"status\": 0,\n                    \"subtitle_group\": [\n                        \"123\",\n                        \"456\"\n                    ],\n                    \"name\": \"名侦探柯南\",\n                    \"keyword\": \"1234\", #bangumi id\n                    \"update_time\": \"Sat\",\n                    \"cover\": \"data/images/cover1.jpg\"\n                },\n            ]\n        ```\n\n        list of subtitle group dict:\n        example:\n        ```\n            [\n                {\n                    'id': '233',\n                    'name': 'bgmi字幕组'\n                }\n            ]\n        ```\n\n\n        :return: list of bangumi, list of subtitile group\n        :rtype: (list[dict], list[dict])\n        \"\"\"",
        "\"\"\"\n        return a list of dict with at least 4 key: download, name, title, episode\n        example:\n        ```\n            [\n                {\n                    'name':\"路人女主的养成方法\",\n                    'download': 'magnet:?xt=urn:btih:what ever',\n                    'title': \"[澄空学园] 路人女主的养成方法 第12话 MP4 720p  完\",\n                    'episode': 12\n                },\n            ]\n\n        :param keyword: search key word\n        :type keyword: str\n        :param count: how many page to fetch from website\n        :type count: int\n\n        :return: list of episode search result\n        :rtype: list[dict]\n        \"\"\""
    ],
    "functions": [
        "get_response",
        "process_name",
        "process_subtitle",
        "parser_bangumi",
        "fetch_episode_of_bangumi",
        "fetch_bangumi_calendar_and_subtitle_group",
        "search_by_keyword"
    ],
    "classes": [
        "BangumiMoe"
    ]
}