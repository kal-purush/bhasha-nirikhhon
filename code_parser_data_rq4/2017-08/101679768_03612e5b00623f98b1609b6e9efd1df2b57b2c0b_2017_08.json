{
    "identifiers": [
        "os",
        "urllib",
        "hashlib",
        "argparse",
        "numpy",
        "np",
        "pandas",
        "pd",
        "skimage",
        "io",
        "multiprocessing",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "example_dirname",
        "os",
        "path",
        "join",
        "caffe_dirname",
        "args_tuple",
        "args_tuple",
        "os",
        "path",
        "exists",
        "filename",
        "urllib",
        "urlretrieve",
        "url",
        "filename",
        "open",
        "filename",
        "f",
        "hashlib",
        "sha1",
        "f",
        "read",
        "hexdigest",
        "MISSING_IMAGE_SHA1",
        "io",
        "imread",
        "filename",
        "KeyboardInterrupt",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "np",
        "random",
        "seed",
        "args",
        "seed",
        "os",
        "path",
        "join",
        "example_dirname",
        "pd",
        "read_csv",
        "csv_filename",
        "index_col",
        "compression",
        "df",
        "iloc",
        "np",
        "random",
        "permutation",
        "df",
        "shape",
        "args",
        "labels",
        "df",
        "loc",
        "df",
        "args",
        "labels",
        "args",
        "images",
        "args",
        "images",
        "df",
        "shape",
        "df",
        "iloc",
        "args",
        "images",
        "training_dirname",
        "os",
        "path",
        "join",
        "caffe_dirname",
        "os",
        "path",
        "join",
        "training_dirname",
        "os",
        "path",
        "exists",
        "images_dirname",
        "os",
        "makedirs",
        "images_dirname",
        "os",
        "path",
        "join",
        "images_dirname",
        "_",
        "split",
        "_",
        "df",
        "args",
        "workers",
        "num_workers",
        "multiprocessing",
        "cpu_count",
        "num_workers",
        "format",
        "df",
        "shape",
        "num_workers",
        "multiprocessing",
        "Pool",
        "processes",
        "num_workers",
        "df",
        "df",
        "pool",
        "download_image",
        "map_args",
        "df",
        "results",
        "split",
        "df",
        "df",
        "split",
        "os",
        "path",
        "join",
        "training_dirname",
        "format",
        "split",
        "split_df",
        "to_csv",
        "filename",
        "sep",
        "header",
        "index",
        "format",
        "df",
        "shape"
    ],
    "literals": [
        "'6a92790b1c2a301c6e7ddef645dca1f53ea97ac2'",
        "'../..'",
        "'data/flickr_style'",
        "\"For use with multiprocessing map. Returns filename on fail.\"",
        "'__main__'",
        "'Download a subset of Flickr Style to a directory'",
        "'-s'",
        "'--seed'",
        "\"random seed\"",
        "'-i'",
        "'--images'",
        "\"number of images to use (-1 for all [default])\"",
        "'-w'",
        "'--workers'",
        "\"num workers used to download images. -x uses (all - x) cores [-1 default].\"",
        "'-l'",
        "'--labels'",
        "\"if set to a positive value, only sample images from the first number of labels.\"",
        "'flickr_style.csv.gz'",
        "'gzip'",
        "'label'",
        "'data/flickr_style'",
        "'images'",
        "'image_filename'",
        "'/'",
        "'image_url'",
        "'Downloading {} images with {} workers...'",
        "'image_url'",
        "'image_filename'",
        "'train'",
        "'test'",
        "'_split'",
        "'{}.txt'",
        "'image_filename'",
        "'label'",
        "' '",
        "'Writing train/val for {} successfully downloaded images.'"
    ],
    "variables": [
        "MISSING_IMAGE_SHA1",
        "example_dirname",
        "caffe_dirname",
        "training_dirname",
        "url",
        "filename",
        "test_read_image",
        "parser",
        "args",
        "csv_filename",
        "df",
        "df",
        "df",
        "df",
        "training_dirname",
        "images_dirname",
        "df",
        "num_workers",
        "num_workers",
        "pool",
        "map_args",
        "results",
        "df",
        "split_df",
        "filename"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Flickr returns a special image if the request is unavailable.",
        "multiprocessing doesn't catch keyboard exceptions",
        "Read data, shuffle order, and subsample.",
        "Make directory for images and get local filenames.",
        "Download images.",
        "Only keep rows with valid images, and write out training file lists."
    ],
    "docstrings": [
        "\"\"\"\nForm a subset of the Flickr Style data, download images to dirname, and write\nCaffe ImagesDataLayer training file.\n\"\"\""
    ],
    "functions": [
        "download_image"
    ],
    "classes": []
}