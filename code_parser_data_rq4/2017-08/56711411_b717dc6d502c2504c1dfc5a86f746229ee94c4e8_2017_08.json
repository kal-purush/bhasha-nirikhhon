{
    "identifiers": [
        "unittest",
        "TestCase",
        "flask",
        "url_for",
        "tests",
        "FrontendDataTestBase",
        "InvalidateHadesLogsMixin",
        "tests",
        "fixtures",
        "permissions",
        "UserData",
        "MembershipData",
        "PropertyData",
        "tests",
        "fixtures",
        "config",
        "ConfigData",
        "FrontendDataTestBase",
        "MembershipData",
        "PropertyData",
        "ConfigData",
        "UserData",
        "user1_admin",
        "login",
        "UserData",
        "user1_admin",
        "password",
        "setUp",
        "InvalidateHadesLogsMixin",
        "UserShowTestBase",
        "kw",
        "url_for",
        "user_id",
        "user_id",
        "kw",
        "assert_response_code",
        "log_endpoint",
        "code",
        "assertIn",
        "response",
        "content_type",
        "lower",
        "response",
        "json",
        "assertIsNotNone",
        "json",
        "get",
        "json",
        "get_logs",
        "assertEqual",
        "len",
        "items",
        "get_logs",
        "assertFalse",
        "len",
        "items",
        "get_logs",
        "assertFalse",
        "len",
        "items"
    ],
    "literals": [
        "'user.user_show_logs_json'",
        "\"json\"",
        "'items'",
        "'items'",
        "'hades'",
        "'user'",
        "'room'"
    ],
    "variables": [
        "datasets",
        "login",
        "password",
        "log_endpoint",
        "response",
        "json",
        "items",
        "items",
        "items"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Test base providing access to `user_show`\n\n    The user being logged in is :py:cls:`UserData.user1_admin`.\n    \"\"\"",
        "\"\"\"Request the logs, assert validity, and return the response.\n\n        The following assertions are made:\n          * The response code is 200\n          * The response content_type contains ``\"json\"``\n          * The response's JSON contains an ``\"items\"`` key\n\n        :returns: ``response.json['items']``\n        \"\"\""
    ],
    "functions": [
        "setUp",
        "get_logs",
        "test_warning_log_returned",
        "test_no_user_logs",
        "test_no_room_logs"
    ],
    "classes": [
        "UserShowTestBase",
        "AppWithoutHadesLogsTestCase"
    ]
}