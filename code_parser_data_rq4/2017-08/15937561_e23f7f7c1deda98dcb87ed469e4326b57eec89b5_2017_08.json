{
    "identifiers": [
        "urllib",
        "neo",
        "rawio",
        "PlexonRawIO",
        "Spike2RawIO",
        "urllib",
        "request",
        "urlretrieve",
        "distantfile",
        "localfile",
        "PlexonRawIO",
        "filename",
        "reader",
        "parse_header",
        "reader",
        "reader",
        "header",
        "k",
        "v",
        "reader",
        "header",
        "items",
        "k",
        "v",
        "reader",
        "get_analogsignal_chunk",
        "block_index",
        "seg_index",
        "i_start",
        "i_stop",
        "channel_indexes",
        "channel_indexes",
        "reader",
        "rescale_signal_raw_to_float",
        "raw_sigs",
        "dtype",
        "reader",
        "get_signal_sampling_rate",
        "reader",
        "get_signal_t_start",
        "block_index",
        "seg_index",
        "reader",
        "header",
        "raw_sigs",
        "shape",
        "raw_sigs",
        "dtype",
        "float_sigs",
        "shape",
        "float_sigs",
        "dtype",
        "sampling_rate",
        "t_start",
        "units"
    ],
    "literals": [
        "'https://portal.g-node.org/neo/plexon/File_plexon_3.plx'",
        "'./File_plexon_3.plx'",
        "'File_plexon_3.plx'",
        "'float64'",
        "'signal_channels'",
        "'units'"
    ],
    "variables": [
        "distantfile",
        "localfile",
        "reader",
        "channel_indexes",
        "raw_sigs",
        "float_sigs",
        "sampling_rate",
        "t_start",
        "units"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Plexon files",
        "create a reader",
        "Read signal chunks",
        "could be channel_indexes = [0]",
        "read the blocks",
        "~ blks = reader.read(cascade=True, lazy=False)",
        "~ print (blks)",
        "~ # access to segments",
        "~ for blk in blks:",
        "~ for seg in blk.segments:",
        "~ print (seg)",
        "~ for asig in seg.analogsignals:",
        "~ print (asig)",
        "~ for st in seg.spiketrains:",
        "~ print (st)",
        "~ # CED Spike2 files",
        "~ distantfile = 'https://portal.g-node.org/neo/spike2/File_spike2_1.smr'",
        "~ localfile = './File_spike2_1.smr'",
        "~ urllib.request.urlretrieve(distantfile, localfile)",
        "~ # create a reader",
        "~ reader = neo.io.Spike2IO(filename='File_spike2_1.smr')",
        "~ # read the block",
        "~ bl = reader.read(cascade=True, lazy=False)[0]",
        "~ print (bl)",
        "~ # access to segments",
        "~ for seg in bl.segments:",
        "~ print (seg)",
        "~ for asig in seg.analogsignals:",
        "~ print (asig)",
        "~ for st in seg.spiketrains:",
        "~ print (st)"
    ],
    "docstrings": [
        "\"\"\"\nThis is an example for reading files with neo.io\n\"\"\""
    ],
    "functions": [],
    "classes": []
}