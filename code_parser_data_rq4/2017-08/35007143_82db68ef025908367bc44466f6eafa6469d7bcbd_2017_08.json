{
    "identifiers": [
        "com",
        "kogitune",
        "intellij",
        "codeinsight",
        "postfix",
        "templates",
        "surround",
        "com",
        "intellij",
        "codeInsight",
        "template",
        "Template",
        "com",
        "intellij",
        "codeInsight",
        "template",
        "impl",
        "ConstantNode",
        "com",
        "intellij",
        "codeInsight",
        "template",
        "impl",
        "EmptyNode",
        "com",
        "intellij",
        "codeInsight",
        "template",
        "impl",
        "MacroCallNode",
        "com",
        "intellij",
        "codeInsight",
        "template",
        "macro",
        "VariableOfTypeMacro",
        "com",
        "intellij",
        "openapi",
        "util",
        "Condition",
        "com",
        "intellij",
        "psi",
        "PsiElement",
        "com",
        "kogitune",
        "intellij",
        "codeinsight",
        "postfix",
        "AbstractRichStringBasedPostfixTemplate",
        "com",
        "kogitune",
        "intellij",
        "codeinsight",
        "postfix",
        "macro",
        "ToStringIfNeedMacro",
        "com",
        "kogitune",
        "intellij",
        "codeinsight",
        "postfix",
        "utils",
        "AndroidPostfixTemplatesUtils",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "jetbrains",
        "annotations",
        "com",
        "kogitune",
        "intellij",
        "codeinsight",
        "postfix",
        "utils",
        "AndroidClassName",
        "VIEW",
        "mWithAction",
        "AndroidPostfixTemplatesUtils",
        "IS_NON_NULL",
        "withAction",
        "AndroidPostfixTemplatesUtils",
        "IS_NON_NULL",
        "mWithAction",
        "withAction",
        "NotNull",
        "name",
        "NotNull",
        "example",
        "NotNull",
        "typeChecker",
        "name",
        "example",
        "typeChecker",
        "Override",
        "NotNull",
        "element",
        "mWithAction",
        "Override",
        "NotNull",
        "expr",
        "template",
        "toStringIfNeedMacro",
        "macroCallNode",
        "toStringIfNeedMacro",
        "macroCallNode",
        "addParameter",
        "expr",
        "getText",
        "node",
        "node",
        "addParameter",
        "VIEW",
        "toString",
        "template",
        "addVariable",
        "node",
        "template",
        "addVariable",
        "macroCallNode",
        "mWithAction",
        "template",
        "addVariable",
        "template",
        "addVariable"
    ],
    "literals": [
        "\"snack\"",
        "\"Snackbar.make(view, expr, Snackbar.LENGTH_SHORT).show();\"",
        "\"snackaction\"",
        "\"Snackbar.make(view, expr, Snackbar.LENGTH_LONG)\\n\"",
        "\"                .setAction(actionText, new View.OnClickListener() {\\n\"",
        "\"                    @Override\\n\"",
        "\"                    public void onClick(View v) {\\n\"",
        "\"                        \"",
        "\"                    }\\n\"",
        "\"                })\\n\"",
        "\"                .show();\"",
        "\"Snackbar.make($view$, $expr$, Snackbar.LENGTH_LONG)\\n\"",
        "\"                .setAction($actionText$, new View.OnClickListener() {\\n\"",
        "\"                    @Override\\n\"",
        "\"                    public void onClick(View v) {\\n\"",
        "\"                        $action$\\n\"",
        "\"                    }\\n\"",
        "\"                })\\n\"",
        "\"                .show();$END$\"",
        "\"Snackbar.make($view$, $expr$, Snackbar.LENGTH_SHORT).show();$END$\"",
        "\"view\"",
        "\"expr\"",
        "\"actionText\"",
        "\"action\""
    ],
    "variables": [
        "mWithAction"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "SnackbarTemplate",
        "SnackbarTemplate",
        "SnackbarTemplate",
        "getTemplateString",
        "addExprVariable"
    ],
    "classes": [
        "SnackbarTemplate"
    ]
}