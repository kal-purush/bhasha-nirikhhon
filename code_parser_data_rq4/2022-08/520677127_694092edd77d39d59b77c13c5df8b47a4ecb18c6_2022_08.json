{
    "identifiers": [
        "core",
        "github",
        "process",
        "token",
        "core",
        "tagName",
        "core",
        "input",
        "isYes",
        "input",
        "input",
        "core",
        "input",
        "isYes",
        "input",
        "createRelease",
        "createTag",
        "createTag",
        "createRelease",
        "input",
        "core",
        "input",
        "isYes",
        "input",
        "github",
        "core",
        "ownerRepo",
        "ownerRepo",
        "ownerRepoItems",
        "owner",
        "ownerRepoItems",
        "repo",
        "ownerRepoItems",
        "owner",
        "repo",
        "github",
        "token",
        "core",
        "sha",
        "sha",
        "core",
        "branch",
        "octokit",
        "branchInfo",
        "sha",
        "branchInfo",
        "sha",
        "sha",
        "github",
        "createRelease",
        "isYes",
        "core",
        "isYes",
        "core",
        "isYes",
        "core",
        "core",
        "name",
        "name",
        "prerelease",
        "tagName",
        "core",
        "body",
        "body",
        "name",
        "core",
        "tagName",
        "octokit",
        "tagName",
        "releaseInfo",
        "core",
        "releaseId",
        "releaseInfo",
        "releaseUrl",
        "releaseInfo",
        "releaseUploadUrl",
        "releaseInfo",
        "err",
        "err",
        "err",
        "err",
        "releaseId",
        "octokit",
        "tagName",
        "sha",
        "releaseInfo",
        "releaseId",
        "releaseInfo",
        "releaseUrl",
        "releaseInfo",
        "releaseUploadUrl",
        "releaseInfo",
        "core",
        "releaseId",
        "core",
        "releaseUrl",
        "core",
        "releaseUploadUrl",
        "core",
        "core",
        "tagName",
        "core",
        "octokit",
        "tagName",
        "tagInfo",
        "ignoreExisting",
        "tagInfo",
        "core",
        "commitHash",
        "tagInfo",
        "err",
        "err",
        "err",
        "err",
        "commitHash",
        "octokit",
        "tagName",
        "sha",
        "tagInfo",
        "octokit",
        "tagName",
        "tagInfo",
        "tagRef",
        "commitHash",
        "tagRef",
        "core",
        "core",
        "core",
        "core",
        "commitHash",
        "err",
        "err",
        "core",
        "err",
        "err",
        "core",
        "err",
        "core",
        "input",
        "input",
        "input",
        "input",
        "input",
        "run"
    ],
    "literals": [
        "'@actions/core'",
        "'@actions/github'",
        "'GITHUB_TOKEN environment variable not found. pass `GITHUB_TOKEN` as env'",
        "'tag'",
        "'no `tag` input'",
        "'create_release'",
        "'create_tag'",
        "'no action to execute'",
        "'ignore_existing'",
        "'repo'",
        "'/'",
        "'the specified `repo` is invalid'",
        "'the specified `repo` is invalid'",
        "'sha'",
        "'the specified `sha` is invalid'",
        "'branch'",
        "'Failed to retrieve last branch tag'",
        "'The specified branch has no commits'",
        "'draft'",
        "'pre_release'",
        "'auto_notes'",
        "'name'",
        "'Pre-release '",
        "'Release '",
        "'body'",
        "'Creating release: '",
        "''",
        "''",
        "'-> found existing'",
        "'Not Found'",
        "'Failed to create release'",
        "'id'",
        "'url'",
        "'upload_url'",
        "'tag_sha'",
        "''",
        "'Creating tag: '",
        "'message'",
        "''",
        "'refs/tags/'",
        "'A tag with the same name already exists'",
        "'commit'",
        "'Existing tag does not point to a commit'",
        "'-> found existing'",
        "'Not Found'",
        "'commit'",
        "'Failed to create tag object'",
        "'refs/tags/'",
        "'Failed to create tag reference'",
        "'id'",
        "''",
        "'url'",
        "''",
        "'upload_url'",
        "''",
        "'tag_sha'",
        "'unknown error'",
        "string",
        "'true'",
        "'yes'",
        "'y'",
        "'1'"
    ],
    "variables": [
        "token",
        "tagName",
        "input",
        "createRelease",
        "createTag",
        "ignoreExisting",
        "ownerRepo",
        "ownerRepoItems",
        "octokit",
        "sha",
        "branch",
        "branchInfo",
        "draft",
        "prerelease",
        "generate_release_notes",
        "name",
        "body",
        "releaseId",
        "releaseUrl",
        "releaseUploadUrl",
        "releaseInfo",
        "releaseInfo",
        "message",
        "commitHash",
        "tagInfo",
        "tagInfo",
        "tagRef"
    ],
    "comments": [
        "-----------------------------------------------------------------------------",
        "Ensure the github token is passed through environment variables",
        "Get tag to delete",
        "Get creation flags",
        "Get some other flags",
        "Get target owner and repository",
        "Create the GitHub accessor",
        "Get commit hash to use if one was specified",
        "Validate hash",
        "If no hash is provided, check if a branch is specified",
        "Get the last commit of the given branch",
        "If none a hash nor a branch is provided, use the context hash",
        "Execute action",
        "Create a release of the given tag",
        "Create a release of the given tag",
        "Initialize variables to save output",
        "Check if the release already exists",
        "Found an existing release",
        "Handle release not found error",
        "If we have no id, the release does not exist so create it",
        "Check status to ensure the release was created",
        "Set action's output",
        "if (createTag)",
        "If we reach here, only a tag must be created",
        "Get tag's message",
        "Initialize variables to save output",
        "Check if tag already exists",
        "Found an existing release",
        "Handle release not found error",
        "If we have commit hash, the tag does not exist so create it",
        "Create tag",
        "Check status to ensure the tag was created",
        "Create the reference to the created tag",
        "Check status to ensure the tag reference was created",
        "Set action's output",
        "-----------------------------------------------------------------------------"
    ],
    "docstrings": [],
    "functions": [
        "run",
        "isYes"
    ],
    "classes": []
}