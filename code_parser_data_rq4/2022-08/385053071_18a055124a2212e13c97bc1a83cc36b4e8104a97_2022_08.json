{
    "identifiers": [
        "mypy",
        "checkmember",
        "analyze_member_access",
        "mypy",
        "errorcodes",
        "ATTR_DEFINED",
        "mypy",
        "nodes",
        "CallExpr",
        "MemberExpr",
        "mypy",
        "plugin",
        "AttributeContext",
        "mypy",
        "types",
        "AnyType",
        "Instance",
        "mypy",
        "types",
        "Type",
        "MypyType",
        "mypy",
        "types",
        "TypeOfAny",
        "mypy_django_plugin",
        "lib",
        "helpers",
        "ctx",
        "AttributeContext",
        "MypyType",
        "isinstance",
        "ctx",
        "context",
        "MemberExpr",
        "ctx",
        "context",
        "name",
        "isinstance",
        "ctx",
        "context",
        "CallExpr",
        "isinstance",
        "ctx",
        "context",
        "callee",
        "MemberExpr",
        "ctx",
        "context",
        "callee",
        "name",
        "ctx",
        "api",
        "fail",
        "ctx",
        "ctx",
        "context",
        "code",
        "ATTR_DEFINED",
        "AnyType",
        "TypeOfAny",
        "from_error",
        "helpers",
        "lookup_fully_qualified_typeinfo",
        "helpers",
        "get_typechecker_api",
        "ctx",
        "str_info",
        "Instance",
        "str_info",
        "analyze_member_access",
        "method_name",
        "str_type",
        "ctx",
        "context",
        "is_lvalue",
        "is_super",
        "is_operator",
        "msg",
        "ctx",
        "api",
        "msg",
        "original_type",
        "ctx",
        "chk",
        "helpers",
        "get_typechecker_api",
        "ctx"
    ],
    "literals": [
        "f'Cannot resolve the attribute of \"{ctx.type}\"'",
        "f\"builtins.str\""
    ],
    "variables": [
        "method_name",
        "method_name",
        "str_info",
        "str_type"
    ],
    "comments": [
        "operators are already handled with magic methods defined in the stubs for _StrPromise"
    ],
    "docstrings": [],
    "functions": [
        "resolve_str_promise_attribute"
    ],
    "classes": []
}