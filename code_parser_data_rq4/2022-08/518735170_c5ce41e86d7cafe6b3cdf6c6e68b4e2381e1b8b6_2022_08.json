{
    "identifiers": [
        "os",
        "isaacgym",
        "gymapi",
        "isaacgym",
        "gymutil",
        "asset",
        "name",
        "name",
        "gym",
        "get_asset_rigid_body_count",
        "asset",
        "gym",
        "get_asset_joint_count",
        "asset",
        "gym",
        "get_asset_dof_count",
        "asset",
        "num_bodies",
        "num_joints",
        "num_dofs",
        "i",
        "num_bodies",
        "gym",
        "get_asset_rigid_body_name",
        "asset",
        "i",
        "i",
        "name",
        "i",
        "num_joints",
        "gym",
        "get_asset_joint_name",
        "asset",
        "i",
        "gym",
        "get_asset_joint_type",
        "asset",
        "i",
        "gym",
        "get_joint_type_string",
        "i",
        "name",
        "type_name",
        "i",
        "num_dofs",
        "gym",
        "get_asset_dof_name",
        "asset",
        "i",
        "gym",
        "get_asset_dof_type",
        "asset",
        "i",
        "gym",
        "get_dof_type_string",
        "i",
        "name",
        "type_name",
        "gym",
        "env",
        "actor_handle",
        "gym",
        "get_actor_name",
        "env",
        "actor_handle",
        "gym",
        "get_actor_rigid_body_names",
        "env",
        "actor_handle",
        "gym",
        "get_actor_rigid_body_dict",
        "env",
        "actor_handle",
        "gym",
        "get_actor_joint_names",
        "env",
        "actor_handle",
        "gym",
        "get_actor_joint_dict",
        "env",
        "actor_handle",
        "gym",
        "get_actor_dof_names",
        "env",
        "actor_handle",
        "gym",
        "get_actor_dof_dict",
        "env",
        "actor_handle",
        "name",
        "body_names",
        "body_dict",
        "joint_names",
        "joint_dict",
        "dof_names",
        "dof_dict",
        "gym",
        "get_actor_rigid_body_states",
        "env",
        "actor_handle",
        "gymapi",
        "STATE_ALL",
        "body_states",
        "body_states",
        "body_states",
        "i",
        "len",
        "body_names",
        "body_names",
        "i",
        "body_positions",
        "i",
        "gym",
        "get_actor_dof_states",
        "env",
        "actor_handle",
        "gymapi",
        "STATE_ALL",
        "dof_states",
        "dof_states",
        "i",
        "len",
        "dof_names",
        "dof_names",
        "i",
        "dof_positions",
        "i",
        "gymapi",
        "acquire_gym",
        "gymutil",
        "parse_arguments",
        "description",
        "gymapi",
        "SimParams",
        "args",
        "use_gpu_pipeline",
        "gym",
        "create_sim",
        "args",
        "compute_device_id",
        "args",
        "graphics_device_id",
        "args",
        "physics_engine",
        "sim_params",
        "sim",
        "quit",
        "os",
        "getcwd",
        "asset",
        "asset_files",
        "asset",
        "asset_root",
        "gym",
        "load_asset",
        "sim",
        "asset_root",
        "asset",
        "current_asset",
        "asset",
        "asset_root",
        "quit",
        "loaded_assets",
        "append",
        "current_asset",
        "i",
        "len",
        "loaded_assets",
        "print_asset_info",
        "loaded_assets",
        "i",
        "asset_names",
        "i",
        "gymapi",
        "Vec3",
        "spacing",
        "spacing",
        "gymapi",
        "Vec3",
        "spacing",
        "spacing",
        "spacing",
        "gym",
        "create_env",
        "sim",
        "lower",
        "upper",
        "gymapi",
        "Transform",
        "i",
        "len",
        "loaded_assets",
        "gymapi",
        "Vec3",
        "i",
        "gymapi",
        "Quat",
        "gym",
        "create_actor",
        "env",
        "loaded_assets",
        "i",
        "pose",
        "asset_names",
        "i",
        "gym",
        "get_actor_count",
        "env",
        "actor_count",
        "i",
        "actor_count",
        "gym",
        "get_actor_handle",
        "env",
        "i",
        "print_actor_info",
        "gym",
        "env",
        "actor_handle",
        "gym",
        "destroy_sim",
        "sim"
    ],
    "literals": [
        "\"======== Asset info %s: ========\"",
        "\"Got %d bodies, %d joints, and %d DOFs\"",
        "\"Bodies:\"",
        "\" %2d: '%s'\"",
        "\"Joints:\"",
        "\" %2d: '%s' (%s)\"",
        "\"DOFs:\"",
        "\" %2d: '%s' (%s)\"",
        "\"===== Actor: %s =======================================\"",
        "\"\\nBodies\"",
        "\"\\nJoints\"",
        "\"\\n Degrees Of Freedom (DOFs)\"",
        "\"Poses from Body State:\"",
        "'pose'",
        "\"\\nVelocities from Body State:\"",
        "'vel'",
        "'pose'",
        "'p'",
        "\"Body '%s' has position\"",
        "\"\\nDOF states:\"",
        "'pos'",
        "\"DOF '%s' has position\"",
        "\"Asset and Environment Information\"",
        "\"WARNING: Forcing CPU pipeline.\"",
        "\"*** Failed to create sim\"",
        "\"Working directory: %s\"",
        "\"assets\"",
        "\"urdf/dvrk_description/psm/psm_for_issacgym.urdf\"",
        "\"dvrk\"",
        "\"Loading asset '%s' from '%s'\"",
        "\"*** Failed to load asset '%s'\"",
        "\"=== Environment info: ================================================\"",
        "\"%d actors total\""
    ],
    "variables": [
        "num_bodies",
        "num_joints",
        "num_dofs",
        "name",
        "name",
        "type_name",
        "name",
        "type_name",
        "name",
        "body_names",
        "body_dict",
        "joint_names",
        "joint_dict",
        "dof_names",
        "dof_dict",
        "body_states",
        "body_positions",
        "dof_states",
        "dof_positions",
        "gym",
        "args",
        "sim_params",
        "sim_params",
        "use_gpu_pipeline",
        "sim",
        "asset_root",
        "asset_files",
        "asset_names",
        "loaded_assets",
        "current_asset",
        "spacing",
        "lower",
        "upper",
        "env",
        "pose",
        "pose",
        "p",
        "pose",
        "r",
        "actor_count",
        "actor_handle"
    ],
    "comments": [
        "Iterate through bodies",
        "Iterate through joints",
        "iterate through degrees of freedom (DOFs)",
        "Get body state information",
        "Print some state slices",
        "print just the poses",
        "print just the velocities",
        "iterate through bodies and print name and position",
        "get DOF states",
        "print some state slices",
        "Print all states for each degree of freedom",
        "iterate through DOFs and print name and position",
        "initialize gym",
        "parse arguments",
        "create simulation context",
        "Print out the working directory",
        "helpful in determining the relative location that assets will be loaded from",
        "Path where assets are searched, relative to the current working directory",
        "List of assets that will be loaded, both URDF and MJCF files are supported",
        "Load the assets and ensure that we are successful",
        "Setup environment spacing",
        "Create one environment",
        "Add actors to environment",
        "Iterate through all actors for the environment",
        "Cleanup the simulator"
    ],
    "docstrings": [
        "\"\"\"\nCopyright (c) 2020, NVIDIA CORPORATION. All rights reserved.\n\nNVIDIA CORPORATION and its licensors retain all intellectual property\nand proprietary rights in and to this software, related documentation\nand any modifications thereto. Any use, reproduction, disclosure or\ndistribution of this software and related documentation without an express\nlicense agreement from NVIDIA CORPORATION is strictly prohibited.\n\n\nAsset and Environment Information\n---------------------------------\nDemonstrates introspection capabilities of the gym api at the asset and environment levels\n- Once an asset is loaded its properties can be queried\n- Assets in environments can be queried and their current states be retrieved\n\"\"\""
    ],
    "functions": [
        "print_asset_info",
        "print_actor_info"
    ],
    "classes": []
}