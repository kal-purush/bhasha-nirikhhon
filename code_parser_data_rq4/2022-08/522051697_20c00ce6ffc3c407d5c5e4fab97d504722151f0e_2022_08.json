{
    "identifiers": [
        "overpy",
        "geopy",
        "distance",
        "geocoder",
        "get_location",
        "loc",
        "loc",
        "overpy",
        "Overpass",
        "api",
        "query",
        "loc_str",
        "way",
        "result",
        "ways",
        "way",
        "tags",
        "get",
        "round",
        "way",
        "nodes",
        "lat",
        "round",
        "way",
        "nodes",
        "lon",
        "data",
        "update",
        "way",
        "tags",
        "get",
        "round",
        "geopy",
        "distance",
        "geodesic",
        "loc",
        "lat_lon",
        "miles",
        "lat_lon",
        "k",
        "v",
        "data",
        "items",
        "k",
        "v",
        "v",
        "geocoder",
        "ip",
        "g",
        "latlng",
        "main"
    ],
    "literals": [
        "f'{str(loc[0])}, {str(loc[1])}'",
        "f'[out:json][timeout:25];(nwr[\"building\"=\"yes\"](around: 10000, {loc_str}););out body;>;out skel qt;'",
        "'name'",
        "'n/a'",
        "'n/a'",
        "f'{round(way.nodes[0].lat, 5)}, {round(way.nodes[0].lon, 5)}'",
        "'name'",
        "'n/a'",
        "f'Building: {k}, distance: {v[0]} miles, loc: {v[1]}'",
        "'me'"
    ],
    "variables": [
        "loc",
        "loc_str",
        "api",
        "result",
        "data",
        "lat_lon",
        "g"
    ],
    "comments": [
        "A program to find the closest building withing a 10000 meter radius of computer",
        "get current location of computer",
        "convert into string format",
        "establish the API",
        "use API to query openStreetMaps",
        "create dict to store builduing name and distance/location",
        "iterate through way objects and if there is a building name grab it and the coordinates",
        "print out closest building",
        "function to get current computer location using IP address"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "get_location"
    ],
    "classes": []
}