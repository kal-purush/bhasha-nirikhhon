{
    "identifiers": [
        "diff",
        "Markdoc",
        "format",
        "source",
        "expected",
        "options",
        "expected",
        "format",
        "Markdoc",
        "source",
        "options",
        "diff",
        "a",
        "b",
        "d",
        "d",
        "d",
        "source",
        "check",
        "source",
        "source",
        "describe",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected",
        "it",
        "check",
        "source",
        "expected",
        "stable",
        "expected"
    ],
    "literals": [
        "'jest-diff'",
        "'../index'",
        "'./formatter'",
        "---\n\n\ntitle: What is Markdoc?\n\n---\n\n# {% $markdoc.frontmatter.title %} {% #overview %}\n\nMarkdoc is a **Markdown**-based \\`syntax\\` and _toolchain_ for creating ~~custom~~ documentation sites. Stripe created Markdoc to power [our public docs](http://stripe.com/docs).\n\n> Blockquote {% .special %}\n\n---\n\n    ![Alt](/image)\n\n{% callout #id   .class  .class2   a=\"check\" b={\"e\":{f: 5}} c=8 d=[1,    \"2\",true] %}\nMarkdoc is open-source—check out it's [source](http://github.com/markdoc/markdoc) to see how it works.\n{% /callout %}\n\n\\`\\`\\`js {% .class #id x=\"test\"   render=false %}\nCode!\n\\`\\`\\`\n\n## How is {% markdoc(\"test\", 1) %} different? {% .classname %}\n\nfoo\\\\\nbaz\n\nSoft \n break\nMarkdoc uses…",
        "---\ntitle: What is Markdoc?\n---\n\n# {% $markdoc.frontmatter.title %} {% #overview %}\n\nMarkdoc is a **Markdown**-based \\`syntax\\` and _toolchain_ for creating ~~custom~~ documentation sites. Stripe created Markdoc to power [our public docs](http://stripe.com/docs).\n\n> Blockquote {% .special %}\n\n---\n\n![Alt](/image)\n\n{% callout #id .class .class2 a=\"check\" b={e: {f: 5}} c=8 d=[1, \"2\", true] %}\nMarkdoc is open-source—check out it's [source](http://github.com/markdoc/markdoc) to see how it works.\n{% /callout %}\n\n\\`\\`\\`js {% .class #id x=\"test\" render=false %}\nCode!\n\\`\\`\\`\n\n## How is {% markdoc(\"test\", 1) %} different? {% .classname %}\n\nfoo\\\\\nbaz\n\nSoft\nbreak\nMarkdoc uses…",
        "'Compared values have no visual difference.'",
        "'Formatter'",
        "'basics'",
        "'attribute edge cases'",
        "{% key id=$user.name class=default($y, \"test\") %}Child{% /key %}",
        "{% key id=$user.name class=default($y, \"test\") %}Child{% /key %}",
        "'variables'",
        "{% $user.name %}\n{% key x=$user.name new=$flag /%}",
        "{% $user.name %}\n\n{% key x=$user.name new=$flag /%}",
        "'functions'",
        "{% markdoc(\"test\", 1) %}\n{% key x=default($x, 1) /%}",
        "{% markdoc(\"test\", 1) %}\n{% key x=default($x, 1) /%}",
        "'tags'",
        "{% key /%}\n  \n{% checkout %}\n  {% if true %}\n  Yes!\n  {% /if %}\n{% /checkout %}",
        "{% key /%}\n\n{% checkout %}\n{% if true %}\nYes!\n{% /if %}\n{% /checkout %}",
        "'long tags'",
        "{% tag a=true b=\"My very long text well over 80 characters in total\" c=123456789 d=false /%}",
        "{% tag\n   a=true\n   b=\"My very long text well over 80 characters in total\"\n   c=123456789\n   d=false /%}",
        "'nested tags — allowIndentation: true'",
        "{% checkout %}\n  {% if true %}\n  Yes!\n  {% /if %}\n{% /checkout %}",
        "{% checkout %}\n  {% if true %}\n    Yes!\n  {% /if %}\n{% /checkout %}",
        "'tables'",
        "| Syntax      | Description |\n| ------ | ---- |\n| Header      | Title  |\n| Paragraph        | Text        |\n\n{% table %}\n\n- One {% align=\"middle\" %}\n- Two\n\n\n---\n- Three\n- Four {% align=\"end\" %}\n\n---\n\n* **Five**\n*\n  A bunch of words\n  \n  And more words\n\n{% /table %}\n\n{% table %}\n---\n- H1\n- H2\n{% /table %}",
        "| Syntax      | Description |\n| ----------- | ----------- |\n| Header      | Title       |\n| Paragraph   | Text        |\n\n{% table %}\n- One {% align=\"middle\" %}\n- Two\n---\n- Three\n- Four {% align=\"end\" %}\n---\n- **Five**\n- A bunch of words\n\n  And more words\n{% /table %}\n\n{% table %}\n---\n- H1\n- H2\n{% /table %}",
        "'lists'",
        "- [Install Markdoc](/docs/getting-started)\n- [Try it out online](/sandbox)\n\n1. One {% align=\"left\" %}\n2. Two\n3. Three\n\n- A\n- B\n  - B2\n- C",
        "- [Install Markdoc](/docs/getting-started)\n- [Try it out online](/sandbox)\n\n1. One {% align=\"left\" %}\n1. Two\n1. Three\n\n- A\n- B\n  - B2\n- C",
        "'\"loose\" lists'",
        "- One\n\n  My first paragraph\n  Test\n\n  {% tag %} \n    Indented tag\n  {% /tag %} \n\n  \\`\\`\\`\n  {% $code %}\n  \\`\\`\\`\n\n- Two\n\n  My second paragraph\n  \n  ---\n  \n  ## Indented header\n\n  > Indented blockquote",
        "- One\n\n  My first paragraph\n  Test\n\n  {% tag %}\n  Indented tag\n  {% /tag %}\n\n  \\`\\`\\`\n  {% $code %}\n  \\`\\`\\`\n\n- Two\n\n  My second paragraph\n\n  ---\n\n  ## Indented header\n\n  > Indented blockquote",
        "'complicated nested lists'",
        "* Create your CNAME record\n\n  1. Click **Add record**.\n  1. Enter these values in the form that opens:\n\n      {% table %}\n      * Field\n      * Value to enter\n      * Description\n      ---\n      * Type\n      * Select \\`CNAME\\` from the dropdown\n      * What kind of DNS record this is.\n      ---\n      * Target\n      * If your custom subdomain is checkout.powdur.me, enter \\`checkout\\`\n      * For CNAME records, this field is the first part of your subdomain (the part leading up to the first period).\n      ---\n      * Value\n      * {% code %}hosted-checkout.stripecdn.com{% /code %}\n      * This is what the new subdomain record points to-in this case, Stripe Checkout.\n      ---\n      * TTL\n      * \\`5 min\\`\n      * An expiration of 5 minutes (300 seconds) is OK.\n      ---\n      * Proxy status\n      * \\`Off\\`\n      * Set the proxy status to \\`off\\` to avoid issues during setup.\n      {% /table %}",
        "- Create your CNAME record\n\n  1. Click **Add record**.\n  1. Enter these values in the form that opens:\n\n     {% table %}\n     - Field\n     - Value to enter\n     - Description\n     ---\n     - Type\n     - Select \\`CNAME\\` from the dropdown\n     - What kind of DNS record this is.\n     ---\n     - Target\n     - If your custom subdomain is checkout.powdur.me, enter \\`checkout\\`\n     - For CNAME records, this field is the first part of your subdomain (the part leading up to the first period).\n     ---\n     - Value\n     - {% code %}hosted-checkout.stripecdn.com{% /code %}\n     - This is what the new subdomain record points to-in this case, Stripe Checkout.\n     ---\n     - TTL\n     - \\`5 min\\`\n     - An expiration of 5 minutes (300 seconds) is OK.\n     ---\n     - Proxy status\n     - \\`Off\\`\n     - Set the proxy status to \\`off\\` to avoid issues during setup.\n     {% /table %}"
    ],
    "variables": [
        "source",
        "expected",
        "a",
        "b",
        "d",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected",
        "source",
        "expected"
    ],
    "comments": [
        "console.log(a, b);"
    ],
    "docstrings": [],
    "functions": [
        "check",
        "stable"
    ],
    "classes": []
}