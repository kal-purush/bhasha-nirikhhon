{
    "identifiers": [
        "numpy",
        "np",
        "nidaqmx",
        "ni",
        "nidaqmx",
        "constants",
        "WAIT_INFINITELY",
        "ni",
        "system",
        "local",
        "device",
        "local",
        "devices",
        "device",
        "name",
        "device",
        "product_type",
        "chan",
        "name",
        "chan",
        "device",
        "ai_physical_chans",
        "chan",
        "name",
        "chan",
        "device",
        "ao_physical_chans",
        "data",
        "samplerate",
        "input_mapping",
        "output_mapping",
        "ni",
        "system",
        "local",
        "devices",
        "np",
        "asarray",
        "data",
        "T",
        "data",
        "shape",
        "ni",
        "read_task",
        "ni",
        "write_task",
        "i",
        "o",
        "output_mapping",
        "write_task",
        "ao_channels",
        "add_ao_voltage_chan",
        "o",
        "min_val",
        "devices",
        "o",
        "ao_voltage_rngs",
        "max_val",
        "devices",
        "o",
        "ao_voltage_rngs",
        "np",
        "min",
        "data",
        "i",
        "np",
        "max",
        "data",
        "i",
        "max_data",
        "aochan",
        "ao_max",
        "min_data",
        "aochan",
        "ao_min",
        "ValueError",
        "min_data",
        "max_data",
        "o",
        "aochan",
        "ao_min",
        "aochan",
        "ao_max",
        "i",
        "input_mapping",
        "read_task",
        "ai_channels",
        "add_ai_voltage_chan",
        "i",
        "task",
        "read_task",
        "write_task",
        "task",
        "timing",
        "cfg_samp_clk_timing",
        "rate",
        "samplerate",
        "source",
        "samps_per_chan",
        "nsamples",
        "write_task",
        "triggers",
        "start_trigger",
        "cfg_dig_edge_start_trig",
        "read_task",
        "triggers",
        "start_trigger",
        "term",
        "write_task",
        "write",
        "data",
        "squeeze",
        "auto_start",
        "write_task",
        "start",
        "read_task",
        "read",
        "nsamples",
        "timeout",
        "WAIT_INFINITELY",
        "np",
        "asarray",
        "indata",
        "T",
        "query_devices",
        "np",
        "random",
        "normal",
        "size",
        "playrec",
        "outdata",
        "samplerate",
        "input_mapping",
        "output_mapping"
    ],
    "literals": [
        "f'Device Name: {device.name}, Product Type: {device.product_type}'",
        "'Input channels:'",
        "'Output channels:'",
        "f\"Data range ({min_data:.2f}, {max_data:.2f}) exceeds output range of \"",
        "f\"{o} ({aochan.ao_min:.2f}, {aochan.ao_max:.2f}).\"",
        "'OnboardClock'",
        "'__main__'",
        "'Dev2/ai0'",
        "'Dev2/ai1'",
        "'Dev2/ai2'",
        "'Dev2/ao0'"
    ],
    "variables": [
        "local",
        "devices",
        "data",
        "nsamples",
        "aochan",
        "min_data",
        "max_data",
        "indata",
        "outdata",
        "indata"
    ],
    "comments": [
        "trigger write_task as soon as read_task starts",
        "squeeze as Task.write expects 1d array for 1 channel",
        "write_task doesn't start at read_task's start_trigger without this",
        "do not time out for long inputs",
        "Prints in this example:",
        "Device Name: Dev2, Product Type: USB-4431",
        "Input channels: ['Dev2/ai0', 'Dev2/ai1', 'Dev2/ai2', 'Dev2/ai3']",
        "Output channels: ['Dev2/ao0']",
        "excite through one output and record at three inputs"
    ],
    "docstrings": [
        "\"\"\"Simultaneous read and write with NI USB-4431 or similar device.\"\"\"",
        "\"\"\"Simultaneous playback and recording though NI device.\n\n  Parameters:\n  -----------\n  data: array_like, shape (nsamples, len(output_mapping))\n    Data to be send to output channels.  \n  samplerate: int\n    Samplerate\n  input_mapping: list of str\n    Input device channels\n  output_mapping: list of str\n    Output device channels\n\n  Returns\n  -------\n  ndarray, shape (nsamples, len(input_mapping))\n    Recorded data\n\n  \"\"\""
    ],
    "functions": [
        "query_devices",
        "playrec"
    ],
    "classes": []
}