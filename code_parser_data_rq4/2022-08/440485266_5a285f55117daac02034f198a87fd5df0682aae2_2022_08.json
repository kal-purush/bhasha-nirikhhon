{
    "identifiers": [
        "com",
        "redhat",
        "notifications",
        "splunkintegration",
        "javax",
        "enterprise",
        "context",
        "ApplicationScoped",
        "org",
        "apache",
        "camel",
        "Exchange",
        "org",
        "apache",
        "camel",
        "Processor",
        "org",
        "eclipse",
        "microprofile",
        "config",
        "Config",
        "org",
        "eclipse",
        "microprofile",
        "config",
        "ConfigProvider",
        "org",
        "eclipse",
        "microprofile",
        "config",
        "inject",
        "ConfigProperty",
        "ApplicationScoped",
        "LOGGER_NAME",
        "COMPONENT_NAME",
        "CE_TYPE",
        "COMPONENT_NAME",
        "ConfigProperty",
        "name",
        "kafkaBrokers",
        "ConfigProperty",
        "name",
        "kafkaIngressTopic",
        "ConfigProperty",
        "name",
        "kafkaIngressGroupId",
        "ConfigProperty",
        "name",
        "kafkaReturnTopic",
        "ConfigProperty",
        "name",
        "kafkaReturnGroupId",
        "RETURN_TYPE",
        "Override",
        "configure",
        "getContext",
        "getGlobalOptions",
        "put",
        "Exchange",
        "LOG_EIP_NAME",
        "LOGGER_NAME",
        "configureIngress",
        "configureReturn",
        "configureSuccessHandler",
        "kafka",
        "kafkaIngressTopic",
        "groupId",
        "kafkaIngressGroupId",
        "routeId",
        "process",
        "log",
        "CE_TYPE",
        "simple",
        "CE_TYPE",
        "to",
        "log",
        "to",
        "direct",
        "end",
        "direct",
        "routeId",
        "to",
        "kafka",
        "kafkaReturnTopic",
        "ceEncoder",
        "COMPONENT_NAME",
        "RETURN_TYPE",
        "resultTransformer",
        "direct",
        "routeId",
        "log",
        "setBody",
        "simple",
        "setHeader",
        "simple",
        "process",
        "resultTransformer",
        "marshal",
        "json",
        "process",
        "ceEncoder",
        "to",
        "direct"
    ],
    "literals": [
        "\"com.redhat.console.notification.toCamel.\"",
        "\"com.redhat.console.notification.toCamel.\"",
        "\"kafka.bootstrap.servers\"",
        "\"kafka.ingress.topic\"",
        "\"kafka.ingress.group.id\"",
        "\"kafka.return.topic\"",
        "\"kafka.return.group.id\"",
        "\"com.redhat.console.notifications.history\"",
        "\"ingress\"",
        "\"${header.ce-type} == '\"",
        "\"'\"",
        "\"${header.ce-type} == '\"",
        "\"'\"",
        "\"com.redhat.console.notifications.splunkintegration?level=DEBUG\"",
        "\"handler\"",
        "\"return\"",
        "\"return\"",
        "\"success\"",
        "\"success\"",
        "\"Delivered event ${header.ce-id} (orgId ${header.orgId} account ${header.accountId})\"",
        "\" to ${header.targetUrl}\"",
        "\"Success: Event ${header.ce-id} sent successfully\"",
        "\"outcome-fail\"",
        "\"false\"",
        "\"return\""
    ],
    "variables": [
        "kafkaBrokers",
        "kafkaIngressTopic",
        "kafkaIngressGroupId",
        "kafkaReturnTopic",
        "kafkaReturnGroupId"
    ],
    "comments": [
        "Only accept/listen on these CloudEvent types",
        "Event incoming kafka brokers",
        "Event incoming Kafka topic",
        "Event incoming kafka group id",
        "Event return Kafka topic",
        "Event return kafka group id",
        "The return type",
        "Decode CloudEvent",
        "We check that this is our type.",
        "Otherwise, we ignore the message there will be another component that takes",
        "care",
        "Log the parsed cloudevent message.",
        "If Event was sent successfully, send success reply to return kafka"
    ],
    "docstrings": [],
    "functions": [
        "configure",
        "configureIngress",
        "configureReturn",
        "configureSuccessHandler"
    ],
    "classes": [
        "MainRoutes"
    ]
}