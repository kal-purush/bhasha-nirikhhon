{
    "identifiers": [
        "typing",
        "NamedTuple",
        "Dict",
        "Tuple",
        "functools",
        "reduce",
        "NamedTuple",
        "Dict",
        "Tuple",
        "id",
        "message",
        "name",
        "reason",
        "messages",
        "Message",
        "Dict",
        "Tuple",
        "reduce",
        "x",
        "y",
        "x",
        "y",
        "to_dict",
        "messages",
        "Message",
        "id",
        "name",
        "message",
        "reason",
        "Message",
        "id",
        "name",
        "message",
        "reason",
        "Message",
        "id",
        "name",
        "message",
        "reason",
        "Message",
        "id",
        "name",
        "message",
        "reason",
        "Message",
        "id",
        "name",
        "message",
        "reason"
    ],
    "literals": [
        "\"W0001\"",
        "\"pytest-raises-without-match\"",
        "\"`pytest.raises` must be called with `match` argument`.\"",
        "\"`pytest.raises` without `match` argument can lead to false positives.\"",
        "\"W0002\"",
        "\"print-function\"",
        "\"`print()` should not be used. Consider using a logger instead.\"",
        "\"`print()` should not be used.\"",
        "\"W0003\"",
        "\"unittest-assert-raises\"",
        "\"Use `pytest.raises` instead of `unittest.TestCase.assertRaises`.\"",
        "\"To enforce 'pytest-raises-multiple-statements' Message.\"",
        "\"W0004\"",
        "\"pytest-raises-multiple-statements\"",
        "\"`with pytest.raises` should not contain multiple statements. \"",
        "\"It should only contain a single statement that throws an exception.\"",
        "\"To prevent unreachable assertions and make it easier to tell which line is \"",
        "\"expected to throw.\"",
        "\"W0005\"",
        "\"use-set-literal\"",
        "\"Use set literal (e.g. `{'a', 'b'}`) instead of applying `set()` on \"",
        "\"list or tuple literal (e.g. `set(['a', 'b'])`)\"",
        "\"`{1, 2}` is more efficient than `set([1, 2])`.\""
    ],
    "variables": [
        "id",
        "name",
        "message",
        "reason",
        "PYTEST_RAISES_WITHOUT_MATCH",
        "PRINT_FUNCTION",
        "UNITTEST_PYTEST_RAISES",
        "PYTEST_RAISES_MULTIPLE_STATEMENTS",
        "USE_SET_LITERAL"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "to_dict",
        "to_msgs"
    ],
    "classes": [
        "Message"
    ]
}