{
    "identifiers": [
        "flow",
        "controllers",
        "GridRouter",
        "IDMController",
        "RLController",
        "flow",
        "controllers",
        "routing_controllers",
        "MinicityRouter",
        "flow",
        "core",
        "SumoParams",
        "EnvParams",
        "InitialConfig",
        "NetParams",
        "flow",
        "core",
        "VehicleParams",
        "PersonParams",
        "flow",
        "core",
        "TrafficLightParams",
        "flow",
        "core",
        "SumoCarFollowingParams",
        "SumoLaneChangeParams",
        "flow",
        "core",
        "InFlows",
        "flow",
        "envs",
        "dispatch_and_reposition",
        "DispatchAndRepositionEnv",
        "ADDITIONAL_ENV_PARAMS",
        "flow",
        "networks",
        "GridnxmNetwork",
        "inner_length",
        "n_rows",
        "n_columns",
        "enter_speed",
        "add_net_params",
        "enter_speed",
        "InitialConfig",
        "x0",
        "spacing",
        "min_gap",
        "additional_params",
        "additional_init_params",
        "NetParams",
        "additional_params",
        "add_net_params",
        "initial",
        "net",
        "PersonParams",
        "VehicleParams",
        "vehicles",
        "add",
        "veh_id",
        "acceleration_controller",
        "IDMController",
        "routing_controller",
        "MinicityRouter",
        "car_following_params",
        "SumoCarFollowingParams",
        "speed_mode",
        "min_gap",
        "decel",
        "max_speed",
        "lane_change_params",
        "SumoLaneChangeParams",
        "lane_change_mode",
        "initial_speed",
        "num_vehicles",
        "vehicles",
        "add",
        "veh_id",
        "initial_speed",
        "acceleration_controller",
        "RLController",
        "car_following_params",
        "SumoCarFollowingParams",
        "speed_mode",
        "min_gap",
        "decel",
        "max_speed",
        "lane_change_params",
        "SumoLaneChangeParams",
        "lane_change_mode",
        "num_vehicles",
        "is_taxi",
        "TrafficLightParams",
        "baseline",
        "tl_logic",
        "add",
        "phases",
        "phases",
        "tl_logic",
        "add",
        "phases",
        "phases",
        "tl_logic",
        "add",
        "phases",
        "phases",
        "tl_logic",
        "add",
        "phases",
        "phases",
        "grid_array",
        "get_non_flow_params",
        "enter_speed",
        "v_enter",
        "add_net_params",
        "additional_net_params",
        "ADDITIONAL_ENV_PARAMS",
        "copy",
        "exp_tag",
        "env_name",
        "DispatchAndRepositionEnv",
        "network",
        "GridnxmNetwork",
        "simulator",
        "sim",
        "SumoParams",
        "sim_step",
        "render",
        "print_warnings",
        "restart_instance",
        "env",
        "EnvParams",
        "horizon",
        "additional_params",
        "additional_params",
        "net",
        "net_params",
        "veh",
        "vehicles",
        "per",
        "persons",
        "initial",
        "initial_config",
        "tls",
        "tl_logic"
    ],
    "literals": [
        "\"inner_length\"",
        "\"row_num\"",
        "\"col_num\"",
        "\"sub_edge_num\"",
        "\"random_reposition\"",
        "\"no_mid_edge\"",
        "'enter_speed'",
        "'uniform'",
        "\"idm\"",
        "'all_checks'",
        "\"no_lc_safe\"",
        "\"taxi\"",
        "'all_checks'",
        "\"sumo_default\"",
        "\"duration\"",
        "\"10\"",
        "\"minDur\"",
        "\"10\"",
        "\"maxDur\"",
        "\"10\"",
        "\"state\"",
        "\"GGggrrrrGGggrrrr\"",
        "\"duration\"",
        "\"1\"",
        "\"minDur\"",
        "\"1\"",
        "\"maxDur\"",
        "\"1\"",
        "\"state\"",
        "\"yyyyrrrryyyyrrrr\"",
        "\"duration\"",
        "\"10\"",
        "\"minDur\"",
        "\"10\"",
        "\"maxDur\"",
        "\"10\"",
        "\"state\"",
        "\"rrrrGGggrrrrGGgg\"",
        "\"duration\"",
        "\"1\"",
        "\"minDur\"",
        "\"1\"",
        "\"maxDur\"",
        "\"1\"",
        "\"state\"",
        "\"rrrryyyyrrrryyyy\"",
        "\"center9\"",
        "\"center10\"",
        "\"center5\"",
        "\"center6\"",
        "\"grid_array\"",
        "\"speed_limit\"",
        "\"horizontal_lanes\"",
        "\"vertical_lanes\"",
        "\"print_warnings\"",
        "\"time_price\"",
        "\"distance_price\"",
        "\"pickup_price\"",
        "\"wait_penalty\"",
        "\"tle_penalty\"",
        "\"person_prob\"",
        "\"max_waiting_time\"",
        "\"free_pickup_time\"",
        "\"distribution\"",
        "'mode-X1'",
        "'distribution_random_ratio'",
        "\"n_mid_edge\"",
        "'grid-intersection'",
        "'traci'"
    ],
    "variables": [
        "v_enter",
        "inner_length",
        "n_rows",
        "n_columns",
        "grid_array",
        "additional_init_params",
        "initial",
        "net",
        "persons",
        "vehicles",
        "tl_logic",
        "phases",
        "additional_net_params",
        "initial_config",
        "net_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "additional_params",
        "flow_params"
    ],
    "comments": [
        "from flow.envs.ring.accel import AccelEnv, ADDITIONAL_ENV_PARAMS",
        "\"nearest_dispatch\": True,",
        "\"random_dispatch\": True,",
        "gap needs to be large enough",
        "avoid collisions at emergency stops",
        "routing_controller=(MinicityRouter, {}),",
        "avoid collisions at emergency stops",
        "warnings in building net",
        "name of the experiment",
        "name of the flow environment the experiment is running on",
        "name of the network class the experiment is running on",
        "simulator that is used by the experiment",
        "sumo-related parameters (see flow.core.params.SumoParams)",
        "taxi_dispatch_alg=\"greedy\"",
        "environment related parameters (see flow.core.params.EnvParams)",
        "network-related parameters (see flow.core.params.NetParams and the",
        "network's documentation or ADDITIONAL_NET_PARAMS component)",
        "vehicles to be placed in the network at the start of a rollout (see",
        "flow.core.params.VehicleParams)",
        "parameters specifying the positioning of vehicles upon initialization/",
        "reset (see flow.core.params.InitialConfig)",
        "traffic lights to be introduced to specific nodes (see",
        "flow.core.params.TrafficLightParams)"
    ],
    "docstrings": [
        "\"\"\"Grid example.\"\"\"",
        "\"\"\"Define the network and initial params in the absence of inflows.\n\n    Note that when a vehicle leaves a network in this case, it is immediately\n    returns to the start of the row/column it was traversing, and in the same\n    direction as it was before.\n\n    Parameters\n    ----------\n    enter_speed : float\n        initial speed of vehicles as they enter the network.\n    add_net_params: dict\n        additional network-specific parameters (unique to the grid)\n\n    Returns\n    -------\n    flow.core.params.InitialConfig\n        parameters specifying the initial configuration of vehicles in the\n        network\n    flow.core.params.NetParams\n        network-specific parameters used to generate the network\n    \"\"\""
    ],
    "functions": [
        "get_non_flow_params"
    ],
    "classes": []
}