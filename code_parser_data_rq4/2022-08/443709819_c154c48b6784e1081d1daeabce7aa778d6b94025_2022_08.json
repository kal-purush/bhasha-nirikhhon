{
    "identifiers": [
        "TestEnv",
        "makeSuite",
        "MockBNFTMinter",
        "deployAirdropFlashLoanReceiverV3",
        "deployMockAirdrop",
        "deployMockBNFTMinter",
        "AirdropFlashLoanReceiverV3",
        "MockAirdropProject",
        "getMintableERC1155",
        "getMintableERC20",
        "getMintableERC721",
        "ethers",
        "waitForTx",
        "getEthersSignerByAddress",
        "require",
        "makeSuite",
        "testEnv",
        "before",
        "_airdropFlashLoanReceiver",
        "deployAirdropFlashLoanReceiverV3",
        "testEnv",
        "bnftRegistry",
        "_mockAirdropProject",
        "deployMockAirdrop",
        "bnftRegistry",
        "_mockBNFTMinter",
        "deployMockBNFTMinter",
        "bayc",
        "bBAYC",
        "afterEach",
        "it",
        "users",
        "users",
        "users",
        "_mockAirdropProject",
        "getMintableERC20",
        "mockAirdropERC20Address",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "getMintableERC1155",
        "mockAirdropERC1155Address",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC20Token",
        "user3",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC721Token",
        "user3",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC721Token",
        "user3",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC1155Token",
        "user3",
        "it",
        "users",
        "_mockAirdropProject",
        "getMintableERC20",
        "mockAirdropERC20Address",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "getMintableERC1155",
        "mockAirdropERC1155Address",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC20Token",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC721Token",
        "expect",
        "_airdropFlashLoanReceiver",
        "user2",
        "mockAirdropERC1155Token",
        "it",
        "users",
        "waitForTx",
        "bayc",
        "_mockBNFTMinter",
        "testEnv",
        "waitForTx",
        "bayc",
        "tokenId",
        "waitForTx",
        "_mockBNFTMinter",
        "nftOwner",
        "tokenId",
        "_mockAirdropProject",
        "getMintableERC20",
        "mockAirdropERC20Address",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "getMintableERC1155",
        "mockAirdropERC1155Address",
        "_mockAirdropProject",
        "tokenId",
        "tokenId",
        "erc1155Id",
        "nftOwner",
        "_mockAirdropProject",
        "bayc",
        "tokenId",
        "applyAirdropEncodedData",
        "ethers",
        "mockAirdropERC20Address",
        "mockAirdropERC721Address",
        "mockAirdropERC1155Address",
        "erc1155Id",
        "_mockAirdropProject",
        "applyAirdropEncodedData",
        "receiverEncodedData",
        "waitForTx",
        "bBAYC",
        "nftOwner",
        "_airdropFlashLoanReceiver",
        "tokenId",
        "receiverEncodedData",
        "mockAirdropERC20Token",
        "nftOwner",
        "mockAirdropERC721Token",
        "nftOwner",
        "mockAirdropERC1155Token",
        "nftOwner",
        "erc1155Id",
        "expect",
        "mockAirdropERC20Token",
        "nftOwner",
        "_mockAirdropProject",
        "expect",
        "mockAirdropERC721Token",
        "nftOwner",
        "_mockAirdropProject",
        "expect",
        "mockAirdropERC1155Token",
        "nftOwner",
        "erc1155Id",
        "_mockAirdropProject",
        "it",
        "users",
        "waitForTx",
        "bayc",
        "_mockBNFTMinter",
        "testEnv",
        "waitForTx",
        "bayc",
        "tokenId",
        "waitForTx",
        "_mockBNFTMinter",
        "nftOwner",
        "tokenId",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "_mockAirdropProject",
        "bayc",
        "tokenId",
        "applyAirdropEncodedData",
        "ethers",
        "mockAirdropERC721Address",
        "tokenId",
        "_mockAirdropProject",
        "applyAirdropEncodedData",
        "receiverEncodedData",
        "mockAirdropERC721Token",
        "nftOwner",
        "waitForTx",
        "bBAYC",
        "nftOwner",
        "_airdropFlashLoanReceiver",
        "tokenId",
        "receiverEncodedData",
        "mockAirdropERC721Token",
        "nftOwner",
        "mockAirdropERC721Token",
        "nftOwner",
        "expect",
        "erc721BalanceAfter",
        "erc721Bonus",
        "erc721BalanceBefore",
        "it",
        "users",
        "expect",
        "_airdropFlashLoanReceiver",
        "user3",
        "_mockAirdropProject",
        "it",
        "users",
        "users",
        "_airdropFlashLoanReceiver",
        "getEthersSignerByAddress",
        "receiverOwnerAddress",
        "waitForTx",
        "bayc",
        "_mockBNFTMinter",
        "testEnv",
        "waitForTx",
        "bayc",
        "tokenId",
        "bayc",
        "tokenId",
        "getEthersSignerByAddress",
        "tokenOwner",
        "waitForTx",
        "bayc",
        "tokenSigner",
        "tokenOwner",
        "_airdropFlashLoanReceiver",
        "tokenId",
        "_mockAirdropProject",
        "getMintableERC20",
        "mockAirdropERC20Address",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "getMintableERC1155",
        "mockAirdropERC1155Address",
        "_mockAirdropProject",
        "tokenId",
        "tokenId",
        "erc1155Id",
        "nftOwner",
        "_mockAirdropProject",
        "bayc",
        "tokenId",
        "applyAirdropEncodedData",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "_mockAirdropProject",
        "applyAirdropEncodedData",
        "mockAirdropERC20Token",
        "_airdropFlashLoanReceiver",
        "mockAirdropERC721Token",
        "_airdropFlashLoanReceiver",
        "mockAirdropERC1155Token",
        "_airdropFlashLoanReceiver",
        "erc1155Id",
        "claimErc20Balance",
        "claimErc721Balance",
        "claimErc1155Balance",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC20Token",
        "claimErc20Balance",
        "airdropERC721TokenId",
        "tokenId",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC721Token",
        "tokenId",
        "airdropERC1155TokenId",
        "erc1155Id",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC1155Token",
        "erc1155Id",
        "claimErc1155Balance",
        "it",
        "users",
        "users",
        "users",
        "_airdropFlashLoanReceiver",
        "getEthersSignerByAddress",
        "receiverOwnerAddress",
        "_mockAirdropProject",
        "getMintableERC20",
        "mockAirdropERC20Address",
        "_mockAirdropProject",
        "getMintableERC721",
        "mockAirdropERC721Address",
        "_mockAirdropProject",
        "getMintableERC1155",
        "mockAirdropERC1155Address",
        "waitForTx",
        "mockAirdropERC20Token",
        "nftOwner",
        "_airdropFlashLoanReceiver",
        "waitForTx",
        "mockAirdropERC721Token",
        "nftOwner",
        "nftOwner",
        "_airdropFlashLoanReceiver",
        "airdropERC721TokenId",
        "waitForTx",
        "mockAirdropERC1155Token",
        "nftOwner",
        "nftOwner",
        "_airdropFlashLoanReceiver",
        "airdropERC1155TokenId",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC20Token",
        "user3",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC721Token",
        "user3",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC1155Token",
        "user3",
        "waitForTx",
        "mockAirdropERC20Token",
        "user3",
        "_airdropFlashLoanReceiver",
        "user4",
        "waitForTx",
        "mockAirdropERC721Token",
        "user3",
        "_airdropFlashLoanReceiver",
        "user4",
        "airdropERC721TokenId",
        "waitForTx",
        "mockAirdropERC1155Token",
        "user3",
        "_airdropFlashLoanReceiver",
        "user4",
        "airdropERC1155TokenId",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC20Token",
        "user3",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC721Token",
        "user3",
        "waitForTx",
        "_airdropFlashLoanReceiver",
        "receiverOwnerSigner",
        "mockAirdropERC1155Token",
        "user3",
        "mockAirdropERC20Token",
        "_airdropFlashLoanReceiver",
        "user3",
        "mockAirdropERC721Token",
        "_airdropFlashLoanReceiver",
        "user3",
        "mockAirdropERC1155Token",
        "_airdropFlashLoanReceiver",
        "user3",
        "expect",
        "erc20Allowance",
        "expect",
        "erc721IsApproved",
        "expect",
        "erc1155Approved"
    ],
    "literals": [
        "\"./helpers/make-suite\"",
        "\"../types/MockBNFTMinter\"",
        "\"../helpers/contracts-deployments\"",
        "\"../types\"",
        "\"../helpers/contracts-getters\"",
        "\"ethers\"",
        "\"../helpers/misc-utils\"",
        "\"../helpers/contracts-helpers\"",
        "\"chai\"",
        "\"Airdrop: FlashLoan V3\"",
        "string",
        "string",
        "\"0\"",
        "\"Tries to approve token - invalid owner (revert expected)\"",
        "\"Ownable: caller is not the owner\"",
        "\"Ownable: caller is not the owner\"",
        "\"Ownable: caller is not the owner\"",
        "\"Ownable: caller is not the owner\"",
        "\"Tries to transfer token - invalid owner (revert expected)\"",
        "\"Ownable: caller is not the owner\"",
        "\"Ownable: caller is not the owner\"",
        "\"Ownable: caller is not the owner\"",
        "\"Apply airdrop using flashLoan - ERC20/ERC721/ERC1155\"",
        "\"tokenId:\"",
        "\"erc1155Id:\"",
        "\"owner:\"",
        "\"nativeApplyAirdrop\"",
        "\"applyAirdropEncodedData:\"",
        "\"uint256[]\"",
        "\"address[]\"",
        "\"uint256[]\"",
        "\"address\"",
        "\"bytes\"",
        "\"receiverEncodedData:\"",
        "\"Airdrop ERC20 Balance:\"",
        "\"Airdrop ERC721 Balance:\"",
        "\"Airdrop ERC1155 Balance:\"",
        "\"Apply airdrop using flashLoan - ERC721 without Enumerate\"",
        "\"nativeApplyAirdrop\"",
        "\"applyAirdropEncodedData:\"",
        "\"uint256[]\"",
        "\"address[]\"",
        "\"uint256[]\"",
        "\"address\"",
        "\"bytes\"",
        "\"receiverEncodedData:\"",
        "\"Airdrop ERC721 Balance:\"",
        "\"Tries to call claim - invalid owner (revert expected)\"",
        "\"Ownable: caller is not the owner\"",
        "\"Apply airdrop using claim - ERC20/ERC721/ERC1155\"",
        "\"tokenId:\"",
        "\"erc1155Id:\"",
        "\"owner:\"",
        "\"nativeApplyAirdrop\"",
        "\"applyAirdropEncodedData:\"",
        "\"Claim ERC20 Balance:\"",
        "\"Claim ERC721 Balance:\"",
        "\"Claim ERC1155 Balance:\"",
        "\"Approve user3 to transfer token - ERC20/ERC721/ERC1155\"",
        "\"nft owner transfer token to receiver\"",
        "\"receiver owner approve to user3\"",
        "\"user3 transfer receiver token to user4\"",
        "\"receiver owner remove approve to user3\""
    ],
    "variables": [
        "_airdropFlashLoanReceiver",
        "_mockAirdropProject",
        "_mockBNFTMinter",
        "airdropERC721TokenId",
        "airdropERC1155TokenId",
        "testEnv",
        "testEnv",
        "user0",
        "user2",
        "user3",
        "mockAirdropERC20Address",
        "mockAirdropERC20Token",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "mockAirdropERC1155Address",
        "mockAirdropERC1155Token",
        "testEnv",
        "user2",
        "mockAirdropERC20Address",
        "mockAirdropERC20Token",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "mockAirdropERC1155Address",
        "mockAirdropERC1155Token",
        "testEnv",
        "nftOwner",
        "tokenId",
        "mockAirdropERC20Address",
        "mockAirdropERC20Token",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "mockAirdropERC1155Address",
        "mockAirdropERC1155Token",
        "erc1155Id",
        "applyAirdropEncodedData",
        "receiverEncodedData",
        "testEnv",
        "nftOwner",
        "tokenId",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "erc721Bonus",
        "applyAirdropEncodedData",
        "receiverEncodedData",
        "erc721BalanceBefore",
        "erc721BalanceAfter",
        "testEnv",
        "user3",
        "testEnv",
        "nftOwner",
        "user3",
        "receiverOwnerAddress",
        "receiverOwnerSigner",
        "tokenId",
        "tokenOwner",
        "tokenSigner",
        "mockAirdropERC20Address",
        "mockAirdropERC20Token",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "mockAirdropERC1155Address",
        "mockAirdropERC1155Token",
        "erc1155Id",
        "applyAirdropEncodedData",
        "claimErc20Balance",
        "claimErc721Balance",
        "claimErc1155Balance",
        "testEnv",
        "nftOwner",
        "user3",
        "user4",
        "receiverOwnerAddress",
        "receiverOwnerSigner",
        "mockAirdropERC20Address",
        "mockAirdropERC20Token",
        "mockAirdropERC721Address",
        "mockAirdropERC721Token",
        "mockAirdropERC1155Address",
        "mockAirdropERC1155Token",
        "erc20Allowance",
        "erc721IsApproved",
        "erc1155Approved"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}