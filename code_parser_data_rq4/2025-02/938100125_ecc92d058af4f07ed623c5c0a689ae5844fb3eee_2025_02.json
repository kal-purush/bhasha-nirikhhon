{
    "identifiers": [
        "os",
        "pathlib",
        "platform",
        "zipfile",
        "urllib",
        "request",
        "shutil",
        "hashlib",
        "argparse",
        "sys",
        "pathlib",
        "Path",
        "platform",
        "platform",
        "startswith",
        "platform",
        "platform",
        "startswith",
        "platform",
        "platform",
        "startswith",
        "windows",
        "hbb_name",
        "windows",
        "osx",
        "flutter_build_dir",
        "os",
        "environ",
        "get",
        "custom_arch",
        "custom_arch",
        "os",
        "environ",
        "get",
        "custom_arch",
        "cmd",
        "os",
        "system",
        "cmd",
        "exit_code",
        "sys",
        "stderr",
        "write",
        "cmd",
        "sys",
        "exit",
        "open",
        "encoding",
        "fh",
        "line",
        "fh",
        "line",
        "startswith",
        "line",
        "replace",
        "replace",
        "replace",
        "strip",
        "feature",
        "feature",
        "platforms",
        "windows",
        "platforms",
        "osx",
        "platforms",
        "platforms",
        "feat",
        "feat_info",
        "available_features",
        "items",
        "platform_check",
        "feat_info",
        "features",
        "append",
        "feat",
        "features",
        "isinstance",
        "feature",
        "feature",
        "upper",
        "get_all_features",
        "isinstance",
        "feature",
        "windows",
        "feat",
        "feature",
        "isinstance",
        "feat",
        "feat",
        "upper",
        "get_all_features",
        "feat",
        "available_features",
        "platform_check",
        "available_features",
        "feat",
        "available_features",
        "feat",
        "feat",
        "apply_features",
        "feature",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "dest",
        "metavar",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "windows",
        "osx",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "windows",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "osx",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "open",
        "f",
        "f",
        "write",
        "system2",
        "system2",
        "features",
        "res_dir",
        "re",
        "url",
        "proxy",
        "url",
        "urllib",
        "request",
        "Request",
        "url",
        "r",
        "set_proxy",
        "proxy",
        "r",
        "set_proxy",
        "proxy",
        "r",
        "feat",
        "feat_info",
        "features",
        "items",
        "feat_info",
        "feat_info",
        "feat_info",
        "re",
        "compile",
        "p",
        "p",
        "includes",
        "feat_info",
        "feat_info",
        "feat_info",
        "re",
        "compile",
        "p",
        "p",
        "excludes",
        "feat",
        "feat_info",
        "split",
        "urllib",
        "request",
        "urlopen",
        "req",
        "feat_info",
        "line",
        "checksum_md5_response",
        "read",
        "decode",
        "splitlines",
        "line",
        "split",
        "download_filename",
        "line",
        "split",
        "urllib",
        "request",
        "urlretrieve",
        "feat_info",
        "download_filename",
        "hashlib",
        "md5",
        "open",
        "filename",
        "read",
        "hexdigest",
        "checksum_md5",
        "md5",
        "feat",
        "feat",
        "zipfile",
        "ZipFile",
        "filename",
        "zip_file",
        "namelist",
        "f",
        "zip_list",
        "p",
        "excludes",
        "p",
        "match",
        "f",
        "file_exclude",
        "includes",
        "p",
        "includes",
        "p",
        "match",
        "f",
        "file_include",
        "f",
        "zip_file",
        "extract",
        "f",
        "res_dir",
        "zip_file",
        "close",
        "os",
        "remove",
        "download_filename",
        "feat",
        "flutter",
        "args",
        "res_dir",
        "parse_rc_features",
        "args",
        "feature",
        "features",
        "features",
        "keys",
        "os",
        "path",
        "isdir",
        "res_dir",
        "os",
        "path",
        "islink",
        "res_dir",
        "shutil",
        "rmtree",
        "res_dir",
        "os",
        "path",
        "exists",
        "res_dir",
        "res_dir",
        "os",
        "makedirs",
        "res_dir",
        "exist_ok",
        "download_extract_features",
        "features",
        "res_dir",
        "flutter",
        "os",
        "makedirs",
        "flutter_build_dir_2",
        "exist_ok",
        "f",
        "pathlib",
        "Path",
        "res_dir",
        "iterdir",
        "f",
        "f",
        "is_file",
        "shutil",
        "copy2",
        "f",
        "flutter_build_dir_2",
        "shutil",
        "copytree",
        "f",
        "flutter_build_dir_2",
        "f",
        "stem",
        "args",
        "args",
        "flutter",
        "args",
        "hwcodec",
        "features",
        "append",
        "args",
        "vram",
        "features",
        "append",
        "args",
        "flutter",
        "features",
        "append",
        "args",
        "unix_file_copy_paste",
        "features",
        "append",
        "osx",
        "args",
        "screencapturekit",
        "features",
        "append",
        "features",
        "features",
        "version",
        "system2",
        "control_file_path",
        "version",
        "get_deb_arch",
        "get_deb_extra_depends",
        "open",
        "control_file_path",
        "file",
        "write",
        "content",
        "file",
        "close",
        "system2",
        "version",
        "features",
        "skip_cargo",
        "system2",
        "features",
        "ffi_bindgen_function_refactor",
        "os",
        "chdir",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "flutter_build_dir",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "generate_control_file",
        "version",
        "system2",
        "md5_file_folder",
        "system2",
        "system2",
        "system2",
        "os",
        "rename",
        "version",
        "os",
        "chdir",
        "version",
        "binary_folder",
        "os",
        "chdir",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "binary_folder",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "generate_control_file",
        "version",
        "system2",
        "md5_file_folder",
        "system2",
        "system2",
        "system2",
        "os",
        "rename",
        "version",
        "os",
        "chdir",
        "version",
        "features",
        "skip_cargo",
        "system2",
        "features",
        "system2",
        "os",
        "chdir",
        "system2",
        "system2",
        "os",
        "chdir",
        "version",
        "features",
        "skip_cargo",
        "system2",
        "features",
        "ffi_bindgen_function_refactor",
        "os",
        "chdir",
        "system2",
        "system2",
        "flutter_build_dir",
        "os",
        "chdir",
        "system2",
        "version",
        "features",
        "skip_portable_pack",
        "skip_cargo",
        "system2",
        "features",
        "os",
        "path",
        "exists",
        "exit",
        "os",
        "chdir",
        "system2",
        "os",
        "chdir",
        "shutil",
        "copy2",
        "flutter_build_dir_2",
        "skip_portable_pack",
        "os",
        "chdir",
        "system2",
        "system2",
        "flutter_build_dir_2",
        "flutter_build_dir_2",
        "os",
        "chdir",
        "os",
        "path",
        "exists",
        "os",
        "replace",
        "os",
        "rename",
        "os",
        "path",
        "abspath",
        "os",
        "curdir",
        "os",
        "rename",
        "version",
        "os",
        "path",
        "abspath",
        "os",
        "curdir",
        "version",
        "skip_cargo",
        "make_parser",
        "parser",
        "parse_args",
        "os",
        "path",
        "exists",
        "exe_path",
        "os",
        "unlink",
        "exe_path",
        "os",
        "path",
        "isfile",
        "system2",
        "get_version",
        "join",
        "get_features",
        "args",
        "args",
        "flutter",
        "flutter",
        "system2",
        "args",
        "skip_cargo",
        "args",
        "skip_cargo",
        "args",
        "portable",
        "args",
        "build_deb_from_folder",
        "version",
        "external_resources",
        "flutter",
        "args",
        "res_dir",
        "windows",
        "os",
        "chdir",
        "system2",
        "os",
        "chdir",
        "flutter",
        "build_flutter_windows",
        "version",
        "features",
        "args",
        "skip_portable_pack",
        "system2",
        "features",
        "system2",
        "os",
        "environ",
        "get",
        "pa",
        "system2",
        "pa",
        "system2",
        "res_dir",
        "os",
        "chdir",
        "system2",
        "system2",
        "res_dir",
        "res_dir",
        "version",
        "system2",
        "os",
        "path",
        "isfile",
        "system2",
        "version",
        "flutter",
        "build_flutter_arch_manjaro",
        "version",
        "features",
        "system2",
        "features",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "version",
        "version",
        "os",
        "path",
        "isfile",
        "system2",
        "features",
        "system2",
        "system2",
        "version",
        "system2",
        "system2",
        "version",
        "version",
        "os",
        "path",
        "isfile",
        "system2",
        "features",
        "system2",
        "system2",
        "version",
        "system2",
        "system2",
        "version",
        "version",
        "flutter",
        "osx",
        "build_flutter_dmg",
        "version",
        "features",
        "build_flutter_deb",
        "version",
        "features",
        "system2",
        "features",
        "osx",
        "system2",
        "system2",
        "system2",
        "os",
        "environ",
        "get",
        "pa",
        "system2",
        "format",
        "pa",
        "system2",
        "version",
        "os",
        "rename",
        "version",
        "version",
        "pa",
        "system2",
        "format",
        "pa",
        "version",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "system2",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "system2",
        "system2",
        "system2",
        "system2",
        "md5_file_folder",
        "system2",
        "os",
        "rename",
        "version",
        "fn",
        "hashlib",
        "md5",
        "open",
        "fn",
        "read",
        "hexdigest",
        "system2",
        "md5",
        "fn",
        "base_dir",
        "Path",
        "base_dir",
        "file",
        "base_path",
        "rglob",
        "file",
        "is_file",
        "file",
        "parts",
        "file",
        "relative_to",
        "base_path",
        "md5_file",
        "relative_path",
        "main"
    ],
    "literals": [
        "'Windows'",
        "'Darwin'",
        "\"macOS\"",
        "'rustdesk'",
        "'.exe'",
        "''",
        "'target/release/'",
        "'build/windows/x64/runner/Release/'",
        "'build/macos/Build/Products/Release/'",
        "'build/linux/x64/release/bundle/'",
        "f'flutter/{flutter_build_dir}'",
        "\"DEB_ARCH\"",
        "\"amd64\"",
        "\"DEB_ARCH\"",
        "\"armhf\"",
        "\", libatomic1\"",
        "\"\"",
        "f\"Error occurred when executing: `{cmd}`. Exiting.\\n\"",
        "\"Cargo.toml\"",
        "\"utf-8\"",
        "\"version\"",
        "\"version\"",
        "\"\"",
        "\"=\"",
        "\"\"",
        "'\"'",
        "''",
        "''",
        "'windows'",
        "'osx'",
        "'linux'",
        "'platform'",
        "'ALL'",
        "'ALL'",
        "'platform'",
        "f'Unrecognized feature {feat}'",
        "f'Unsupported features param {feature}'",
        "'Build script.'",
        "'-f'",
        "'--feature'",
        "'feature'",
        "'N'",
        "'+'",
        "''",
        "'Integrate features, windows only.'",
        "'Available: [Not used for now]. Special value is \"ALL\" and empty \"\". Default is empty.'",
        "'--flutter'",
        "'store_true'",
        "'Build flutter package'",
        "'--hwcodec'",
        "'store_true'",
        "'Enable feature hwcodec'",
        "''",
        "', need libva-dev.'",
        "'--vram'",
        "'store_true'",
        "'Enable feature vram, only available on windows now.'",
        "'--portable'",
        "'store_true'",
        "'Build windows portable'",
        "'--unix-file-copy-paste'",
        "'store_true'",
        "'Build with unix file copy paste feature'",
        "'--skip-cargo'",
        "'store_true'",
        "'Skip cargo build process, only flutter version + Linux supported currently'",
        "'--skip-portable-pack'",
        "'store_true'",
        "'Skip packing, only flutter version + Windows supported'",
        "\"--package\"",
        "'--screencapturekit'",
        "'store_true'",
        "'Enable feature screencapturekit'",
        "\"/tmp/build.sh\"",
        "\"w\"",
        "\"chmod +x /tmp/build.sh\"",
        "\"bash /tmp/build.sh\"",
        "''",
        "'http'",
        "'https'",
        "'include'",
        "'include'",
        "'include'",
        "'exclude'",
        "'exclude'",
        "'exclude'",
        "f'{feat} download begin'",
        "'zip_url'",
        "'/'",
        "'checksum_url'",
        "'utf-8'",
        "'zip_url'",
        "'rb'",
        "f'{feat} download failed'",
        "f'{feat} download end. extract bein'",
        "f'extract file {f}'",
        "f'{feat} extract end'",
        "f'Build with features {list(features.keys())}'",
        "f'Find file {res_dir}, not a directory'",
        "f'{f}'",
        "f'{flutter_build_dir_2}{f.stem}'",
        "'inline'",
        "'hwcodec'",
        "'vram'",
        "'flutter'",
        "'unix-file-copy-paste'",
        "'screencapturekit'",
        "\"features:\"",
        "\"../res/DEBIAN/control\"",
        "'/bin/rm -rf %s'",
        "\"w\"",
        "'sed -i \"s/ffi.NativeFunction<ffi.Bool Function(DartPort/ffi.NativeFunction<ffi.Uint8 Function(DartPort/g\" flutter/lib/generated_bridge.dart'",
        "f'cargo build --features {features} --lib --release'",
        "'flutter'",
        "'flutter build linux --release'",
        "'mkdir -p tmpdeb/usr/bin/'",
        "'mkdir -p tmpdeb/usr/share/rustdesk'",
        "'mkdir -p tmpdeb/etc/rustdesk/'",
        "'mkdir -p tmpdeb/etc/pam.d/'",
        "'mkdir -p tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/256x256/apps/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/scalable/apps/'",
        "'mkdir -p tmpdeb/usr/share/applications/'",
        "'mkdir -p tmpdeb/usr/share/polkit-1/actions'",
        "'rm tmpdeb/usr/bin/rustdesk || true'",
        "f'cp -r {flutter_build_dir}/* tmpdeb/usr/share/rustdesk/'",
        "'cp ../res/rustdesk.service tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'cp ../res/128x128@2x.png tmpdeb/usr/share/icons/hicolor/256x256/apps/rustdesk.png'",
        "'cp ../res/scalable.svg tmpdeb/usr/share/icons/hicolor/scalable/apps/rustdesk.svg'",
        "'cp ../res/rustdesk.desktop tmpdeb/usr/share/applications/rustdesk.desktop'",
        "'cp ../res/rustdesk-link.desktop tmpdeb/usr/share/applications/rustdesk-link.desktop'",
        "'cp ../res/startwm.sh tmpdeb/etc/rustdesk/'",
        "'cp ../res/xorg.conf tmpdeb/etc/rustdesk/'",
        "'cp ../res/pam.d/rustdesk.debian tmpdeb/etc/pam.d/rustdesk'",
        "\"echo \\\"#!/bin/sh\\\" >> tmpdeb/usr/share/rustdesk/files/polkit && chmod a+x tmpdeb/usr/share/rustdesk/files/polkit\"",
        "'mkdir -p tmpdeb/DEBIAN'",
        "'cp -a ../res/DEBIAN/* tmpdeb/DEBIAN/'",
        "\"tmpdeb/\"",
        "'dpkg-deb -b tmpdeb rustdesk.deb;'",
        "'/bin/rm -rf tmpdeb/'",
        "'/bin/rm -rf ../res/DEBIAN/control'",
        "'rustdesk.deb'",
        "'../rustdesk-%s.deb'",
        "\"..\"",
        "'flutter'",
        "'mkdir -p tmpdeb/usr/bin/'",
        "'mkdir -p tmpdeb/usr/share/rustdesk'",
        "'mkdir -p tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/256x256/apps/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/scalable/apps/'",
        "'mkdir -p tmpdeb/usr/share/applications/'",
        "'mkdir -p tmpdeb/usr/share/polkit-1/actions'",
        "'rm tmpdeb/usr/bin/rustdesk || true'",
        "f'cp -r ../{binary_folder}/* tmpdeb/usr/share/rustdesk/'",
        "'cp ../res/rustdesk.service tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'cp ../res/128x128@2x.png tmpdeb/usr/share/icons/hicolor/256x256/apps/rustdesk.png'",
        "'cp ../res/scalable.svg tmpdeb/usr/share/icons/hicolor/scalable/apps/rustdesk.svg'",
        "'cp ../res/rustdesk.desktop tmpdeb/usr/share/applications/rustdesk.desktop'",
        "'cp ../res/rustdesk-link.desktop tmpdeb/usr/share/applications/rustdesk-link.desktop'",
        "\"echo \\\"#!/bin/sh\\\" >> tmpdeb/usr/share/rustdesk/files/polkit && chmod a+x tmpdeb/usr/share/rustdesk/files/polkit\"",
        "'mkdir -p tmpdeb/DEBIAN'",
        "'cp -a ../res/DEBIAN/* tmpdeb/DEBIAN/'",
        "\"tmpdeb/\"",
        "'dpkg-deb -b tmpdeb rustdesk.deb;'",
        "'/bin/rm -rf tmpdeb/'",
        "'/bin/rm -rf ../res/DEBIAN/control'",
        "'rustdesk.deb'",
        "'../rustdesk-%s.deb'",
        "\"..\"",
        "f'MACOSX_DEPLOYMENT_TARGET=10.14 cargo build --features {features} --release'",
        "\"cp target/release/liblibrustdesk.dylib target/release/librustdesk.dylib\"",
        "'flutter'",
        "'flutter build macos --release'",
        "'cp -rf ../target/release/service ./build/macos/Build/Products/Release/RustDesk.app/Contents/MacOS/'",
        "\"..\"",
        "f'cargo build --features {features} --lib --release'",
        "'flutter'",
        "'flutter build linux --release'",
        "f'strip {flutter_build_dir}/lib/librustdesk.so'",
        "'../res'",
        "'HBB=`pwd`/.. FLUTTER=1 makepkg -f'",
        "f'cargo build --features {features} --lib --release'",
        "\"target/release/librustdesk.dll\"",
        "\"cargo build failed, please check rust source code.\"",
        "'flutter'",
        "'flutter build windows --release'",
        "'..'",
        "'target/release/deps/dylib_virtual_display.dll'",
        "'libs/portable'",
        "'pip3 install -r requirements.txt'",
        "f'python3 ./generate.py -f ../../{flutter_build_dir_2} -o . -e ../../{flutter_build_dir_2}/rustdesk.exe'",
        "'../..'",
        "'./rustdesk_portable.exe'",
        "'./target/release/rustdesk-portable-packer.exe'",
        "'./rustdesk_portable.exe'",
        "'./target/release/rustdesk-portable-packer.exe'",
        "'./rustdesk_portable.exe'",
        "f'output location: {os.path.abspath(os.curdir)}/rustdesk_portable.exe'",
        "'./rustdesk_portable.exe'",
        "f'./rustdesk-{version}-install.exe'",
        "f'output location: {os.path.abspath(os.curdir)}/rustdesk-{version}-install.exe'",
        "'/usr/bin/pacman'",
        "'git checkout src/ui/common.tis'",
        "','",
        "'python3 res/inline-sciter.py'",
        "'resources'",
        "'libs/virtual_display/dylib'",
        "'cargo build --release'",
        "'../../..'",
        "'cargo build --release --features '",
        "'mv target/release/rustdesk.exe target/release/RustDesk.exe'",
        "'P'",
        "f'signtool sign /a /v /p {pa} /debug /f .\\\\cert.pfx /t http://timestamp.digicert.com  '",
        "'target\\\\release\\\\rustdesk.exe'",
        "'Not signed'",
        "f'cp -rf target/release/RustDesk.exe {res_dir}'",
        "'libs/portable'",
        "'pip3 install -r requirements.txt'",
        "f'python3 ./generate.py -f ../../{res_dir} -o . -e ../../{res_dir}/rustdesk-{version}-win7-install.exe'",
        "'mv ../../{res_dir}/rustdesk-{version}-win7-install.exe ../..'",
        "'/usr/bin/pacman'",
        "\"sed -i 's/pkgver=.*/pkgver=%s/g' res/PKGBUILD\"",
        "'cargo build --release --features '",
        "'git checkout src/ui/common.tis'",
        "'strip target/release/rustdesk'",
        "'ln -s res/pacman_install && ln -s res/PKGBUILD'",
        "'HBB=`pwd` makepkg -f'",
        "'mv rustdesk-%s-0-x86_64.pkg.tar.zst rustdesk-%s-manjaro-arch.pkg.tar.zst'",
        "'/usr/bin/yum'",
        "'cargo build --release --features '",
        "'strip target/release/rustdesk'",
        "\"sed -i 's/Version:    .*/Version:    %s/g' res/rpm.spec\"",
        "'HBB=`pwd` rpmbuild -ba res/rpm.spec'",
        "'mv $HOME/rpmbuild/RPMS/x86_64/rustdesk-%s-0.x86_64.rpm ./rustdesk-%s-fedora28-centos8.rpm'",
        "'/usr/bin/zypper'",
        "'cargo build --release --features '",
        "'strip target/release/rustdesk'",
        "\"sed -i 's/Version:    .*/Version:    %s/g' res/rpm-suse.spec\"",
        "'HBB=`pwd` rpmbuild -ba res/rpm-suse.spec'",
        "'mv $HOME/rpmbuild/RPMS/x86_64/rustdesk-%s-0.x86_64.rpm ./rustdesk-%s-suse.rpm'",
        "'cargo bundle --release --features '",
        "'strip target/release/bundle/osx/RustDesk.app/Contents/MacOS/rustdesk'",
        "'cp libsciter.dylib target/release/bundle/osx/RustDesk.app/Contents/MacOS/'",
        "'/bin/rm -rf *.dmg'",
        "'P'",
        "'create-dmg \"RustDesk %s.dmg\" \"target/release/bundle/osx/RustDesk.app\"'",
        "'RustDesk %s.dmg'",
        "'rustdesk-%s.dmg'",
        "'Not signed'",
        "'mv target/release/bundle/deb/rustdesk*.deb ./rustdesk.deb'",
        "'dpkg-deb -R rustdesk.deb tmpdeb'",
        "'mkdir -p tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/256x256/apps/'",
        "'mkdir -p tmpdeb/usr/share/icons/hicolor/scalable/apps/'",
        "'cp res/rustdesk.service tmpdeb/usr/share/rustdesk/files/systemd/'",
        "'cp res/128x128@2x.png tmpdeb/usr/share/icons/hicolor/256x256/apps/rustdesk.png'",
        "'cp res/scalable.svg tmpdeb/usr/share/icons/hicolor/scalable/apps/rustdesk.svg'",
        "'cp res/rustdesk.desktop tmpdeb/usr/share/applications/rustdesk.desktop'",
        "'cp res/rustdesk-link.desktop tmpdeb/usr/share/applications/rustdesk-link.desktop'",
        "'mkdir -p tmpdeb/etc/rustdesk/'",
        "'cp -a res/startwm.sh tmpdeb/etc/rustdesk/'",
        "'mkdir -p tmpdeb/etc/X11/rustdesk/'",
        "'cp res/xorg.conf tmpdeb/etc/X11/rustdesk/'",
        "'cp -a DEBIAN/* tmpdeb/DEBIAN/'",
        "'mkdir -p tmpdeb/etc/pam.d/'",
        "'cp pam.d/rustdesk.debian tmpdeb/etc/pam.d/rustdesk'",
        "'strip tmpdeb/usr/bin/rustdesk'",
        "'mkdir -p tmpdeb/usr/share/rustdesk'",
        "'mv tmpdeb/usr/bin/rustdesk tmpdeb/usr/share/rustdesk/'",
        "'cp libsciter-gtk.so tmpdeb/usr/share/rustdesk/'",
        "\"tmpdeb/\"",
        "'dpkg-deb -b tmpdeb rustdesk.deb; /bin/rm -rf tmpdeb/'",
        "'rustdesk.deb'",
        "'rustdesk-%s.deb'",
        "'tmpdeb/'",
        "'rb'",
        "'echo \"%s  /%s\" >> tmpdeb/DEBIAN/md5sums'",
        "'*'",
        "'DEBIAN'",
        "\"__main__\""
    ],
    "variables": [
        "windows",
        "osx",
        "hbb_name",
        "exe_path",
        "flutter_build_dir",
        "flutter_build_dir",
        "flutter_build_dir",
        "flutter_build_dir_2",
        "skip_cargo",
        "custom_arch",
        "custom_arch",
        "exit_code",
        "available_features",
        "apply_features",
        "feature",
        "features",
        "apply_features",
        "feat",
        "parser",
        "proxy",
        "r",
        "includes",
        "includes",
        "excludes",
        "excludes",
        "download_filename",
        "checksum_md5_response",
        "checksum_md5",
        "filename",
        "_headers",
        "md5",
        "zip_file",
        "zip_list",
        "file_exclude",
        "file_exclude",
        "file_include",
        "file_include",
        "features",
        "features",
        "control_file_path",
        "content",
        "file",
        "parser",
        "args",
        "version",
        "features",
        "flutter",
        "skip_cargo",
        "portable",
        "res_dir",
        "pa",
        "pa",
        "md5",
        "base_path",
        "relative_path"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "for arm32v7 libsciter-gtk.so",
        "download third party is deprecated, we use github ci instead.",
        "feature.append('PrivacyMode')",
        "Generate build script for docker",
        "",
        "it assumes all build dependencies are installed in environments",
        "Note: do not use it in bare metal, or may break build environments",
        "Downloading third party resources is deprecated.",
        "We can use this function in an offline build environment.",
        "Even in an online environment, we recommend building third-party resources yourself.",
        "workaround ffigen",
        "set minimum osx build target, now is 10.14, which is the same as the flutter xcode project",
        "copy dylib",
        "build virtual display dynamic library",
        "system2('upx.exe target/release/rustdesk.exe')",
        "https://certera.com/kb/tutorial-guide-for-safenet-authentication-client-for-code-signing/",
        "pacman -S -needed base-devel",
        "pacman -U ./rustdesk.pkg.tar.zst",
        "yum localinstall rustdesk.rpm",
        "yum localinstall rustdesk.rpm",
        "system2(",
        "'mv target/release/bundle/deb/rustdesk*.deb ./flutter/rustdesk.deb')",
        "https://github.com/sindresorhus/create-dmg",
        "build deb package"
    ],
    "docstrings": [
        "'''\n            #!/bin/bash\n            # environment\n            export CPATH=\"$(clang -v 2>&1 | grep \"Selected GCC installation: \" | cut -d' ' -f4-)/include\"\n            # flutter\n            pushd /opt\n            wget https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.0.5-stable.tar.xz\n            tar -xvf flutter_linux_3.0.5-stable.tar.xz\n            export PATH=`pwd`/flutter/bin:$PATH\n            popd\n            # flutter_rust_bridge\n            dart pub global activate ffigen --version 5.0.1\n            pushd /tmp && git clone https://github.com/SoLongAndThanksForAllThePizza/flutter_rust_bridge --depth=1 && popd\n            pushd /tmp/flutter_rust_bridge/frb_codegen && cargo install --path . && popd\n            pushd flutter && flutter pub get && popd\n            ~/.cargo/bin/flutter_rust_bridge_codegen --rust-input ./src/flutter_ffi.rs --dart-output ./flutter/lib/generated_bridge.dart\n            # install vcpkg\n            pushd /opt\n            export VCPKG_ROOT=`pwd`/vcpkg\n            git clone https://github.com/microsoft/vcpkg\n            vcpkg/bootstrap-vcpkg.sh\n            popd\n            $VCPKG_ROOT/vcpkg install --x-install-root=\"$VCPKG_ROOT/installed\"\n            # build rustdesk\n            ./build.py --flutter --hwcodec\n        '''",
        "\"\"\"Package: rustdesk\nSection: net\nPriority: optional\nVersion: %s\nArchitecture: %s\nMaintainer: rustdesk <info@rustdesk.com>\nHomepage: https://rustdesk.com\nDepends: libgtk-3-0, libxcb-randr0, libxdo3, libxfixes3, libxcb-shape0, libxcb-xfixes0, libasound2, libsystemd0, curl, libva2, libva-drm2, libva-x11-2, libgstreamer-plugins-base1.0-0, libpam0g, gstreamer1.0-pipewire%s\nRecommends: libayatana-appindicator3-1\nDescription: A remote control software.\n\n\"\"\"",
        "'''\n    system2(\n        \"create-dmg --volname \\\"RustDesk Installer\\\" --window-pos 200 120 --window-size 800 400 --icon-size 100 --app-drop-link 600 185 --icon RustDesk.app 200 190 --hide-extension RustDesk.app rustdesk.dmg ./build/macos/Build/Products/Release/RustDesk.app\")\n    os.rename(\"rustdesk.dmg\", f\"../rustdesk-{version}.dmg\")\n    '''",
        "'''\n    # buggy: rcodesign sign ... path/*, have to sign one by one\n    # install rcodesign via cargo install apple-codesign\n    #rcodesign sign --p12-file ~/.p12/rustdesk-developer-id.p12 --p12-password-file ~/.p12/.cert-pass --code-signature-flags runtime ./target/release/bundle/osx/RustDesk.app/Contents/MacOS/rustdesk\n    #rcodesign sign --p12-file ~/.p12/rustdesk-developer-id.p12 --p12-password-file ~/.p12/.cert-pass --code-signature-flags runtime ./target/release/bundle/osx/RustDesk.app/Contents/MacOS/libsciter.dylib\n    #rcodesign sign --p12-file ~/.p12/rustdesk-developer-id.p12 --p12-password-file ~/.p12/.cert-pass --code-signature-flags runtime ./target/release/bundle/osx/RustDesk.app\n    # goto \"Keychain Access\" -> \"My Certificates\" for below id which starts with \"Developer ID Application:\"\n    codesign -s \"Developer ID Application: {0}\" --force --options runtime  ./target/release/bundle/osx/RustDesk.app/Contents/MacOS/*\n    codesign -s \"Developer ID Application: {0}\" --force --options runtime  ./target/release/bundle/osx/RustDesk.app\n    '''",
        "'''\n    # https://pyoxidizer.readthedocs.io/en/apple-codesign-0.14.0/apple_codesign.html\n    # https://pyoxidizer.readthedocs.io/en/stable/tugger_code_signing.html\n    # https://developer.apple.com/developer-id/\n    # goto xcode and login with apple id, manager certificates (Developer ID Application and/or Developer ID Installer) online there (only download and double click (install) cer file can not export p12 because no private key)\n    #rcodesign sign --p12-file ~/.p12/rustdesk-developer-id.p12 --p12-password-file ~/.p12/.cert-pass --code-signature-flags runtime ./rustdesk-{1}.dmg\n    codesign -s \"Developer ID Application: {0}\" --force --options runtime ./rustdesk-{1}.dmg\n    # https://appstoreconnect.apple.com/access/api\n    # https://gregoryszorc.com/docs/apple-codesign/stable/apple_codesign_getting_started.html#apple-codesign-app-store-connect-api-key\n    # p8 file is generated when you generate api key (can download only once)\n    rcodesign notary-submit --api-key-path ../.p12/api-key.json  --staple rustdesk-{1}.dmg\n    # verify:  spctl -a -t exec -v /Applications/RustDesk.app\n    '''"
    ],
    "functions": [
        "get_deb_arch",
        "get_deb_extra_depends",
        "system2",
        "get_version",
        "parse_rc_features",
        "platform_check",
        "get_all_features",
        "make_parser",
        "generate_build_script_for_docker",
        "download_extract_features",
        "req",
        "external_resources",
        "get_features",
        "generate_control_file",
        "ffi_bindgen_function_refactor",
        "build_flutter_deb",
        "build_deb_from_folder",
        "build_flutter_dmg",
        "build_flutter_arch_manjaro",
        "build_flutter_windows",
        "main",
        "md5_file",
        "md5_file_folder"
    ],
    "classes": []
}