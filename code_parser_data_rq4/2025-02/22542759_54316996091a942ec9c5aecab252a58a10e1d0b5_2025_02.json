{
    "identifiers": [
        "io",
        "cdap",
        "cdap",
        "app",
        "runtime",
        "schedule",
        "com",
        "google",
        "common",
        "Throwables",
        "com",
        "google",
        "inject",
        "Inject",
        "io",
        "cdap",
        "cdap",
        "common",
        "AlreadyExistsException",
        "io",
        "cdap",
        "cdap",
        "common",
        "BadRequestException",
        "io",
        "cdap",
        "cdap",
        "common",
        "ConflictException",
        "io",
        "cdap",
        "cdap",
        "common",
        "NotFoundException",
        "io",
        "cdap",
        "cdap",
        "common",
        "ProfileConflictException",
        "io",
        "cdap",
        "cdap",
        "common",
        "conf",
        "CConfiguration",
        "io",
        "cdap",
        "cdap",
        "app",
        "runtime",
        "SystemArguments",
        "io",
        "cdap",
        "cdap",
        "app",
        "runtime",
        "schedule",
        "queue",
        "JobQueueTable",
        "io",
        "cdap",
        "cdap",
        "app",
        "runtime",
        "schedule",
        "store",
        "ProgramScheduleStoreDataset",
        "io",
        "cdap",
        "cdap",
        "app",
        "runtime",
        "schedule",
        "store",
        "Schedulers",
        "io",
        "cdap",
        "cdap",
        "app",
        "store",
        "profile",
        "ProfileStore",
        "io",
        "cdap",
        "cdap",
        "messaging",
        "spi",
        "MessagingService",
        "io",
        "cdap",
        "cdap",
        "proto",
        "ProgramType",
        "io",
        "cdap",
        "cdap",
        "proto",
        "id",
        "ProfileId",
        "io",
        "cdap",
        "cdap",
        "proto",
        "id",
        "ScheduleId",
        "io",
        "cdap",
        "cdap",
        "runtime",
        "spi",
        "profile",
        "ProfileStatus",
        "io",
        "cdap",
        "cdap",
        "spi",
        "data",
        "transaction",
        "TransactionRunner",
        "io",
        "cdap",
        "cdap",
        "spi",
        "data",
        "transaction",
        "TransactionRunners",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "timeSchedulerService",
        "Inject",
        "transactionRunner",
        "messagingService",
        "cConf",
        "timeSchedulerService",
        "transactionRunner",
        "messagingService",
        "cConf",
        "timeSchedulerService",
        "timeSchedulerService",
        "Override",
        "schedules",
        "schedule",
        "schedules",
        "schedule",
        "getProgramId",
        "getType",
        "equals",
        "ProgramType",
        "WORKFLOW",
        "format",
        "schedule",
        "getProgramId",
        "getProgram",
        "schedule",
        "getProgramId",
        "getType",
        "TransactionRunners",
        "run",
        "transactionRunner",
        "context",
        "store",
        "Schedulers",
        "getScheduleStore",
        "context",
        "profileStore",
        "ProfileStore",
        "get",
        "context",
        "updatedTime",
        "store",
        "addSchedules",
        "schedules",
        "schedule",
        "schedules",
        "schedule",
        "getProperties",
        "profile",
        "SystemArguments",
        "getProfileIdFromArgs",
        "schedule",
        "getProgramId",
        "getNamespaceId",
        "schedule",
        "getProperties",
        "profile",
        "isPresent",
        "profileId",
        "profile",
        "get",
        "profileStore",
        "getProfile",
        "profileId",
        "getStatus",
        "ProfileStatus",
        "DISABLED",
        "format",
        "profileId",
        "getProfile",
        "profileId",
        "getNamespace",
        "schedule",
        "getName",
        "profileId",
        "timeSchedulerService",
        "addProgramSchedule",
        "schedule",
        "e",
        "LOG",
        "error",
        "schedule",
        "e",
        "e",
        "schedule",
        "schedules",
        "scheduleId",
        "schedule",
        "getScheduleId",
        "profileId",
        "SystemArguments",
        "getProfileIdFromArgs",
        "scheduleId",
        "getNamespaceId",
        "schedule",
        "getProperties",
        "profileId",
        "isPresent",
        "profileStore",
        "addProfileAssignment",
        "profileId",
        "get",
        "scheduleId",
        "schedule",
        "schedules",
        "adminEventPublisher",
        "publishScheduleCreation",
        "schedule",
        "getScheduleId",
        "updatedTime",
        "e",
        "e",
        "e",
        "Throwables",
        "propagate",
        "e",
        "Override",
        "scheduleId",
        "TransactionRunners",
        "run",
        "transactionRunner",
        "context",
        "store",
        "Schedulers",
        "getScheduleStore",
        "context",
        "profileStore",
        "ProfileStore",
        "get",
        "context",
        "queue",
        "JobQueueTable",
        "getJobQueue",
        "context",
        "cConf",
        "deleteTime",
        "currentTimeMillis",
        "toNotify",
        "schedule",
        "store",
        "getSchedule",
        "scheduleId",
        "timeSchedulerService",
        "deleteProgramSchedule",
        "schedule",
        "queue",
        "markJobsForDeletion",
        "scheduleId",
        "deleteTime",
        "toNotify",
        "add",
        "schedule",
        "profileId",
        "SystemArguments",
        "getProfileIdFromArgs",
        "scheduleId",
        "getNamespaceId",
        "schedule",
        "getProperties",
        "profileId",
        "isPresent",
        "profileStore",
        "removeProfileAssignment",
        "profileId",
        "get",
        "scheduleId",
        "e",
        "LOG",
        "warn",
        "profileId",
        "get",
        "scheduleId",
        "store",
        "deleteSchedule",
        "scheduleId",
        "toNotify",
        "forEach",
        "adminEventPublisher",
        "publishScheduleDeletion"
    ],
    "literals": [
        "\"Cannot schedule program %s of type %s: Only workflows can be scheduled\"",
        "\"Profile %s in namespace %s is disabled. It cannot \"",
        "\"be assigned to schedule %s\"",
        "\"Exception occurs when adding schedule {}\"",
        "\"Unable to find the profile {} when deleting schedule {}, \"",
        "\"skipping assignment deletion.\""
    ],
    "variables": [
        "timeSchedulerService"
    ],
    "comments": [
        "If the added properties contains profile assignment, add the assignment.",
        "Publish the messages at the end of transaction.",
        "If the deleted schedule has properties with profile assignment, remove the assignment.",
        "This should not happen since the profile cannot be deleted if there is a schedule who is using it."
    ],
    "docstrings": [
        "* Copyright Â© 2025 Cask Data, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.",
        "* {@code ScheduleManager} to manage program schedules. This class is meant to be used by in-memory\n * modules and tests.",
        "* Parameterized constructor for LocalScheduleManager.\n   *\n   * @param transactionRunner TransactionRunner\n   * @param messagingService MessagingService\n   * @param cConf CConfiguration\n   * @param timeSchedulerService TimeSchedulerService"
    ],
    "functions": [
        "LocalScheduleManager",
        "addSchedules",
        "deleteSchedule"
    ],
    "classes": [
        "LocalScheduleManager"
    ]
}