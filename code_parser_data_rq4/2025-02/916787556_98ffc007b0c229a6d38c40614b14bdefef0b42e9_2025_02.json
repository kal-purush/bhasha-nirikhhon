{
    "identifiers": [
        "NextResponse",
        "NextRequest",
        "i18n",
        "match",
        "matchLocale",
        "Negotiator",
        "request",
        "request",
        "value",
        "key",
        "negotiatorHeaders",
        "key",
        "value",
        "i18n",
        "Negotiator",
        "negotiatorHeaders",
        "locales",
        "matchLocale",
        "languages",
        "locales",
        "i18n",
        "locale",
        "request",
        "request",
        "i18n",
        "locale",
        "pathname",
        "locale",
        "pathname",
        "locale",
        "pathnameIsMissingLocale",
        "getLocale",
        "request",
        "NextResponse",
        "URL",
        "locale",
        "pathname",
        "pathname",
        "request"
    ],
    "literals": [
        "\"next/server\"",
        "\"next/server\"",
        "\"./config/i18n\"",
        "\"@formatjs/intl-localematcher\"",
        "\"negotiator\"",
        "string",
        "string",
        "string",
        "string",
        "/${locale}/",
        "/${locale}",
        "/${locale}${pathname.startsWith(\"/\") ? \"\" : \"/\"}${pathname}",
        "\"/\"",
        "\"\"",
        "\"/\"",
        "\"/((?!api|_next/static|_next/image|favicon.ico).*)\""
    ],
    "variables": [
        "negotiatorHeaders",
        "locales",
        "languages",
        "locale",
        "pathname",
        "pathnameIsMissingLocale",
        "locale",
        "config"
    ],
    "comments": [
        "Negotiator expects plain object so we need to transform headers",
        "@ts-expect-error locales are readonly",
        "Use negotiator and intl-localematcher to get best locale",
        "// `/_next/` and `/api/` are ignored by the watcher, but we need to ignore files in `public` manually.",
        "// If you have one",
        "if (",
        "[",
        "'/manifest.json',",
        "'/favicon.ico',",
        "// Your other files in `public`",
        "].includes(pathname)",
        ")",
        "return",
        "Check if there is any supported locale in the pathname",
        "Redirect if there is no locale",
        "e.g. incoming request is /products",
        "The new URL is now /en-US/products",
        "Matcher ignoring `/_next/` and `/api/`"
    ],
    "docstrings": [],
    "functions": [
        "getLocale",
        "middleware"
    ],
    "classes": []
}