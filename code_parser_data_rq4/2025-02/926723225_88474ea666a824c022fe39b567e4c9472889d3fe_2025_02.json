{
    "identifiers": [
        "modio",
        "asyncio",
        "sqlite3",
        "time",
        "os",
        "discord",
        "ext",
        "commands",
        "functions",
        "common",
        "get_all_mods",
        "get_latest_comment",
        "os",
        "getenv",
        "commands",
        "Cog",
        "bot",
        "commands",
        "Bot",
        "bot",
        "commands",
        "command",
        "name",
        "commands",
        "has_any_role",
        "BOT_ACCESS_ROLE",
        "ctx",
        "option",
        "sqlite3",
        "connect",
        "encode",
        "con",
        "cursor",
        "modio",
        "objects",
        "Filter",
        "qmfilter",
        "limit",
        "qmfilter",
        "sort",
        "reverse",
        "qmfilter",
        "equals",
        "tags",
        "modio",
        "Filter",
        "commentfilter",
        "limit",
        "commentfilter",
        "sort",
        "reverse",
        "get_all_mods",
        "bot",
        "game",
        "qmfilter",
        "index",
        "mod",
        "modList",
        "index",
        "len",
        "modList",
        "queryCount",
        "option",
        "get_latest_comment",
        "mod",
        "commentfilter",
        "comment",
        "split",
        "len",
        "splitComment",
        "splitComment",
        "len",
        "splitComment",
        "splitComment",
        "queryCount",
        "mod",
        "name",
        "replace",
        "mod",
        "name",
        "replace",
        "mod",
        "submitter",
        "mod",
        "submitter",
        "username",
        "replace",
        "mod",
        "submitter",
        "mod",
        "submitter",
        "username",
        "replace",
        "mod",
        "summary",
        "replace",
        "mod",
        "summary",
        "replace",
        "tag",
        "mod",
        "tags",
        "tagString",
        "tag",
        "tagString",
        "replace",
        "tagString",
        "replace",
        "option",
        "cur",
        "execute",
        "mod",
        "id",
        "mod",
        "name",
        "mod",
        "submitter",
        "id",
        "mod",
        "summary",
        "mod",
        "profile",
        "tagString",
        "comment",
        "mod",
        "stats",
        "positive",
        "attempts",
        "completions",
        "failures",
        "wrTime",
        "wrName",
        "completionTime",
        "completionAvg",
        "cur",
        "execute",
        "mod",
        "stats",
        "positive",
        "mod",
        "id",
        "con",
        "commit",
        "con",
        "close",
        "ctx",
        "reply",
        "commands",
        "command",
        "name",
        "commands",
        "has_any_role",
        "BOT_ACCESS_ROLE",
        "ctx",
        "modio",
        "objects",
        "Filter",
        "qmfilter",
        "limit",
        "qmfilter",
        "sort",
        "reverse",
        "qmfilter",
        "equals",
        "tags",
        "sqlite3",
        "connect",
        "encode",
        "con",
        "cursor",
        "get_all_mods",
        "bot",
        "game",
        "qmfilter",
        "len",
        "modList",
        "mod",
        "modList",
        "mod",
        "submitter",
        "mod",
        "submitter",
        "username",
        "replace",
        "mod",
        "submitter",
        "mod",
        "submitter",
        "username",
        "replace",
        "mod",
        "id",
        "mod",
        "name",
        "cur",
        "execute",
        "mod",
        "id",
        "mod",
        "name",
        "mod",
        "submitter",
        "username",
        "con",
        "commit",
        "con",
        "close",
        "ctx",
        "reply",
        "commands",
        "Cog",
        "listener",
        "bot",
        "bot",
        "add_cog",
        "Database",
        "bot"
    ],
    "literals": [
        "'BOT_ACCESS_ROLE'",
        "'db_dungeons'",
        "f'no'",
        "''",
        "''",
        "f'data/dungeon_database.db'",
        "'utf-8'",
        "\"id\"",
        "f'Dungeon'",
        "\"id\"",
        "f'Processing comment for mod # {index} of {len(modList)}...'",
        "f'Waiting 60 seconds to avoid rate-limiting.'",
        "'comments'",
        "f'|'",
        "'\"'",
        "'\\\"'",
        "'\\''",
        "'\\'\\''",
        "'\"'",
        "'\\\"'",
        "'\\''",
        "'\\'\\''",
        "'\"'",
        "'\\\"'",
        "'\\''",
        "'\\'\\''",
        "f'{tag}, '",
        "'\"'",
        "'\\\"'",
        "'\\''",
        "'\\'\\''",
        "'comments'",
        "f\"INSERT OR REPLACE INTO dungeons (id, name, creator_user_id, \"",
        "f\"summary, link, tags, latest_comment, likes, attempts, completions, failures,\"",
        "f\"worldrecordduration, worldrecordholder, completiontimecount, completiontimeaverage) \"",
        "f\"values ({mod.id}, \\'{mod.name}\\', {mod.submitter.id}, \"",
        "f\"\\'{mod.summary}\\', \\'{mod.profile}\\', \\'{tagString[:-2]}\\', \\'{comment}\\', \"",
        "f\"{mod.stats.positive}, {attempts}, {completions}, {failures}, {wrTime}, \"",
        "f\"{wrName}, {completionTime}, {completionAvg});\"",
        "f\"UPDATE dungeons set likes = {mod.stats.positive} where id = {mod.id});\"",
        "''",
        "f'Updated the database!'",
        "'db_users'",
        "\"id\"",
        "f'User'",
        "f'data/dungeon_database.db'",
        "'utf-8'",
        "'\"'",
        "'\\\"'",
        "'\\''",
        "'\\'\\''",
        "f\"INSERT OR REPLACE INTO users (mod_id, user_id, username) \"",
        "f\"values ({mod.id}, {int(mod.name)}, \\'{mod.submitter.username}\\');\"",
        "f'Updating the database!'"
    ],
    "variables": [
        "BOT_ACCESS_ROLE",
        "bot",
        "tagString",
        "comment",
        "attempts",
        "completions",
        "failures",
        "wrTime",
        "wrName",
        "completionTime",
        "completionAvg",
        "con",
        "cur",
        "qmfilter",
        "commentfilter",
        "modList",
        "queryCount",
        "queryCount",
        "comment",
        "splitComment",
        "attempts",
        "completions",
        "failures",
        "wrTime",
        "wrName",
        "completionTime",
        "completionAvg",
        "attempts",
        "completions",
        "failures",
        "wrTime",
        "wrName",
        "completionTime",
        "completionAvg",
        "mod",
        "name",
        "mod",
        "name",
        "username",
        "username",
        "mod",
        "summary",
        "mod",
        "summary",
        "tagString",
        "qmfilter",
        "con",
        "cur",
        "modList",
        "username",
        "username"
    ],
    "comments": [
        "from dotenv import load_dotenv",
        "",
        "load_dotenv('data/server.env')",
        "",
        "async def get_all_mods(gameid, qmfilter):",
        "offsetValue = 0",
        "allMods = []",
        "queryCount = 0",
        "tagString = ''",
        "",
        "while True:",
        "queryCount += 1",
        "if queryCount > 100:",
        "print(f'Waiting 60 seconds to avoid rate-limiting.')",
        "time.sleep(60)",
        "queryCount = 0",
        "",
        "modList = await gameid.async_get_mods(filters=qmfilter)",
        "print(modList)",
        "offsetValue += len(modList.results)",
        "qmfilter.offset(offsetValue)",
        "",
        "allMods.extend(modList.results)",
        "",
        "if not len(modList.results):",
        "return allMods",
        "async def main():",
        "game = await get_game()",
        "await get_all_mods(game)",
        "",
        "if __name__ == \"__main__\":",
        "loop = asyncio.run(main())",
        "print(len(modList.results), modList.results)",
        "time.sleep(60)",
        "account for comments before june 2024",
        "print(mod.id, mod.name)",
        "mod_detail = re.match(r'<Mod id=(.*?) name=(.*?) game_id=', str(mod_result))",
        "mod = await game.async_get_mod(mod_detail.groups()[0])",
        "modid = mod_detail.groups(0)",
        "modname = str(mod_detail.groups(1))",
        "print(mod.id, mod.name)",
        "queryCount += 1",
        "if queryCount > 60:",
        "print(f'Waiting 60 seconds to avoid rate-limiting.')",
        "time.sleep(60)",
        "queryCount = 0",
        "print(tagString)"
    ],
    "docstrings": [],
    "functions": [
        "db_dungeons",
        "db_users",
        "setup"
    ],
    "classes": [
        "Database"
    ]
}