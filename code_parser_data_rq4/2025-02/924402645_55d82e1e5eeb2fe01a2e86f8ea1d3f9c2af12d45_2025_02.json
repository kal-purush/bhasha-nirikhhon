{
    "identifiers": [
        "com",
        "healthcare",
        "model",
        "Appointment",
        "com",
        "healthcare",
        "model",
        "Doctor",
        "com",
        "healthcare",
        "model",
        "Patient",
        "com",
        "healthcare",
        "repository",
        "AppointmentRepositoryImpl",
        "com",
        "healthcare",
        "repository",
        "DoctorRepositoryImpl",
        "com",
        "healthcare",
        "repository",
        "PatientRepositoryImpl",
        "com",
        "healthcare",
        "service",
        "AppointmentService",
        "com",
        "healthcare",
        "service",
        "DoctorService",
        "com",
        "healthcare",
        "service",
        "PatientService",
        "org",
        "hibernate",
        "Session",
        "org",
        "hibernate",
        "SessionFactory",
        "org",
        "hibernate",
        "Transaction",
        "org",
        "hibernate",
        "cfg",
        "Configuration",
        "org",
        "junit",
        "jupiter",
        "api",
        "AfterEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "ParameterizedTest",
        "org",
        "junit",
        "jupiter",
        "provider",
        "ValueSource",
        "java",
        "util",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "appointmentService",
        "doctorService",
        "patientService",
        "sessionFactory",
        "session",
        "transaction",
        "BeforeEach",
        "sessionFactory",
        "configure",
        "buildSessionFactory",
        "session",
        "sessionFactory",
        "openSession",
        "transaction",
        "session",
        "beginTransaction",
        "appointmentRepository",
        "sessionFactory",
        "doctorRepository",
        "sessionFactory",
        "patientRepository",
        "sessionFactory",
        "doctorService",
        "doctorRepository",
        "patientService",
        "patientRepository",
        "appointmentService",
        "appointmentRepository",
        "doctorRepository",
        "patientRepository",
        "AfterEach",
        "transaction",
        "transaction",
        "rollback",
        "session",
        "session",
        "close",
        "sessionFactory",
        "sessionFactory",
        "close",
        "Test",
        "patient",
        "patient",
        "setFirstName",
        "patient",
        "setLastName",
        "patientService",
        "createPatient",
        "patient",
        "doctor",
        "doctor",
        "setFirstName",
        "doctor",
        "setLastName",
        "doctorService",
        "createDoctor",
        "doctor",
        "appointment",
        "appointment",
        "setPatient",
        "patient",
        "appointment",
        "setDoctor",
        "doctor",
        "appointment",
        "setAppointmentDate",
        "appointment",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment",
        "fetchedAppointment",
        "appointmentService",
        "getAppointmentById",
        "appointment",
        "getAppointmentId",
        "assertNotNull",
        "fetchedAppointment",
        "assertEquals",
        "appointment",
        "getAppointmentId",
        "fetchedAppointment",
        "getAppointmentId",
        "Test",
        "patient",
        "patient",
        "setFirstName",
        "patient",
        "setLastName",
        "patientService",
        "createPatient",
        "patient",
        "doctor",
        "doctor",
        "setFirstName",
        "doctor",
        "setLastName",
        "doctorService",
        "createDoctor",
        "doctor",
        "appointment",
        "appointment",
        "setPatient",
        "patient",
        "appointment",
        "setDoctor",
        "doctor",
        "appointment",
        "setAppointmentDate",
        "appointment",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment",
        "fetchedAppointment",
        "appointmentService",
        "getAppointmentById",
        "appointment",
        "getAppointmentId",
        "assertNotNull",
        "fetchedAppointment",
        "assertEquals",
        "appointment",
        "getAppointmentId",
        "fetchedAppointment",
        "getAppointmentId",
        "assertEquals",
        "fetchedAppointment",
        "getNotes",
        "Test",
        "patient1",
        "patient1",
        "setFirstName",
        "patient1",
        "setLastName",
        "patientService",
        "createPatient",
        "patient1",
        "doctor1",
        "doctor1",
        "setFirstName",
        "doctor1",
        "setLastName",
        "doctorService",
        "createDoctor",
        "doctor1",
        "appointment1",
        "appointment1",
        "setPatient",
        "patient1",
        "appointment1",
        "setDoctor",
        "doctor1",
        "appointment1",
        "setAppointmentDate",
        "appointment1",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment1",
        "appointment2",
        "appointment2",
        "setPatient",
        "patient1",
        "appointment2",
        "setDoctor",
        "doctor1",
        "appointment2",
        "setAppointmentDate",
        "appointment2",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment2",
        "appointments",
        "appointmentService",
        "getAllAppointments",
        "assertNotNull",
        "appointments",
        "assertTrue",
        "appointments",
        "size",
        "Test",
        "patient",
        "patient",
        "setFirstName",
        "patient",
        "setLastName",
        "patientService",
        "createPatient",
        "patient",
        "doctor",
        "doctor",
        "setFirstName",
        "doctor",
        "setLastName",
        "doctorService",
        "createDoctor",
        "doctor",
        "appointment",
        "appointment",
        "setPatient",
        "patient",
        "appointment",
        "setDoctor",
        "doctor",
        "appointment",
        "setAppointmentDate",
        "appointment",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment",
        "appointment",
        "setNotes",
        "appointmentService",
        "updateAppointment",
        "appointment",
        "updatedAppointment",
        "appointmentService",
        "getAppointmentById",
        "appointment",
        "getAppointmentId",
        "assertEquals",
        "updatedAppointment",
        "getNotes",
        "Test",
        "patient",
        "patient",
        "setFirstName",
        "patient",
        "setLastName",
        "patientService",
        "createPatient",
        "patient",
        "doctor",
        "doctor",
        "setFirstName",
        "doctor",
        "setLastName",
        "doctorService",
        "createDoctor",
        "doctor",
        "appointment",
        "appointment",
        "setPatient",
        "patient",
        "appointment",
        "setDoctor",
        "doctor",
        "appointment",
        "setAppointmentDate",
        "appointment",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment",
        "id",
        "appointment",
        "getAppointmentId",
        "appointmentService",
        "deleteAppointmentById",
        "id",
        "assertNull",
        "appointmentService",
        "getAppointmentById",
        "id",
        "ParameterizedTest",
        "ValueSource",
        "strings",
        "date",
        "appointment",
        "appointment",
        "setAppointmentDate",
        "date",
        "appointment",
        "setNotes",
        "appointmentService",
        "createAppointment",
        "appointment",
        "assertNotNull",
        "appointment",
        "getAppointmentId",
        "assertEquals",
        "date",
        "appointment",
        "getAppointmentDate"
    ],
    "literals": [
        "\"hibernate-test.cfg.xml\"",
        "\"John\"",
        "\"Doe\"",
        "\"Jane\"",
        "\"Smith\"",
        "\"2024-09-01\"",
        "\"Annual checkup\"",
        "\"appointment should exist\"",
        "\"John\"",
        "\"Doe\"",
        "\"Jane\"",
        "\"Smith\"",
        "\"2024-09-01\"",
        "\"Routine checkup\"",
        "\"appointment should exist in the database\"",
        "\"Routine checkup\"",
        "\"Alice\"",
        "\"Johnson\"",
        "\"Bob\"",
        "\"Smith\"",
        "\"2024-10-01\"",
        "\"Dental Checkup\"",
        "\"2024-11-01\"",
        "\"Follow-up\"",
        "\"There should be at least two appointments in the database.\"",
        "\"John\"",
        "\"Doe\"",
        "\"Jane\"",
        "\"Smith\"",
        "\"2024-09-02\"",
        "\"Initial notes\"",
        "\"Updated notes\"",
        "\"Updated notes\"",
        "\"John\"",
        "\"Doe\"",
        "\"Jane\"",
        "\"Smith\"",
        "\"2024-09-03\"",
        "\"To be deleted\"",
        "\"2024-09-01\"",
        "\"2024-09-02\"",
        "\"2024-09-03\"",
        "\"2024-09-04\"",
        "\"Checkup\""
    ],
    "variables": [
        "appointmentService",
        "doctorService",
        "patientService",
        "sessionFactory",
        "session",
        "transaction"
    ],
    "comments": [
        "Arrange: Create and persist a new appointment",
        "Act: Retrieve the created appointment by ID",
        "Assert: Verify the appointment exists and matches expected data",
        "Arrange: Create multiple appointments",
        "Act: Retrieve all appointments",
        "Assert: Check that appointments were retrieved and match expectations",
        "appointmentService.getAppointmentById(id)",
        "This method is expected to retrieve an appointment by its ID. If the appointment does not exist (e.g., it has been deleted), it should return null."
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "tearDown",
        "testCreateAppointment",
        "testGetAppointmentById",
        "testGetAllAppointments",
        "testUpdateAppointment",
        "testDeleteAppointment",
        "testCreateAppointmentWithDifferentDates"
    ],
    "classes": [
        "AppointmentServiceTest"
    ]
}