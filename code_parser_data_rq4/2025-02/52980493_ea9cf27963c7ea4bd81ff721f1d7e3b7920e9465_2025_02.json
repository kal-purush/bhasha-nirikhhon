{
    "identifiers": [
        "org",
        "springframework",
        "kafka",
        "support",
        "micrometer",
        "java",
        "util",
        "concurrent",
        "CountDownLatch",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "io",
        "micrometer",
        "core",
        "instrument",
        "MeterRegistry",
        "io",
        "micrometer",
        "core",
        "instrument",
        "Timer",
        "io",
        "micrometer",
        "core",
        "instrument",
        "observation",
        "DefaultMeterObservationHandler",
        "io",
        "micrometer",
        "core",
        "instrument",
        "simple",
        "SimpleMeterRegistry",
        "io",
        "micrometer",
        "observation",
        "ObservationRegistry",
        "org",
        "apache",
        "kafka",
        "clients",
        "consumer",
        "ConsumerRecord",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "kafka",
        "annotation",
        "EnableKafka",
        "org",
        "springframework",
        "kafka",
        "annotation",
        "KafkaListener",
        "org",
        "springframework",
        "kafka",
        "config",
        "ConcurrentKafkaListenerContainerFactory",
        "org",
        "springframework",
        "kafka",
        "core",
        "ConsumerFactory",
        "org",
        "springframework",
        "kafka",
        "core",
        "DefaultKafkaConsumerFactory",
        "org",
        "springframework",
        "kafka",
        "core",
        "DefaultKafkaProducerFactory",
        "org",
        "springframework",
        "kafka",
        "core",
        "KafkaTemplate",
        "org",
        "springframework",
        "kafka",
        "core",
        "ProducerFactory",
        "org",
        "springframework",
        "kafka",
        "test",
        "EmbeddedKafkaBroker",
        "org",
        "springframework",
        "kafka",
        "test",
        "context",
        "EmbeddedKafka",
        "org",
        "springframework",
        "kafka",
        "test",
        "utils",
        "KafkaTestUtils",
        "org",
        "springframework",
        "test",
        "annotation",
        "DirtiesContext",
        "org",
        "springframework",
        "test",
        "context",
        "junit",
        "jupiter",
        "SpringJUnitConfig",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "SpringJUnitConfig",
        "EmbeddedKafka",
        "topics",
        "MicrometerMetricsTests",
        "METRICS_TEST_TOPIC",
        "partitions",
        "DirtiesContext",
        "METRICS_TEST_TOPIC",
        "Test",
        "Autowired",
        "listener",
        "Autowired",
        "meterRegistry",
        "Autowired",
        "template",
        "template",
        "send",
        "METRICS_TEST_TOPIC",
        "get",
        "TimeUnit",
        "SECONDS",
        "assertThat",
        "listener",
        "latch",
        "await",
        "TimeUnit",
        "SECONDS",
        "isTrue",
        "timer",
        "meterRegistry",
        "find",
        "tags",
        "tag",
        "timer",
        "assertThat",
        "timer",
        "isNotNull",
        "assertThat",
        "timer",
        "getId",
        "getTag",
        "isEqualTo",
        "Test",
        "Autowired",
        "observationListener",
        "Autowired",
        "meterRegistry",
        "Autowired",
        "template",
        "template",
        "send",
        "METRICS_TEST_TOPIC",
        "get",
        "TimeUnit",
        "SECONDS",
        "assertThat",
        "observationListener",
        "latch",
        "await",
        "TimeUnit",
        "SECONDS",
        "isTrue",
        "timer",
        "meterRegistry",
        "find",
        "tag",
        "tag",
        "timer",
        "assertThat",
        "timer",
        "isNotNull",
        "Configuration",
        "EnableKafka",
        "Bean",
        "broker",
        "KafkaTestUtils",
        "producerProps",
        "broker",
        "Bean",
        "broker",
        "KafkaTestUtils",
        "consumerProps",
        "broker",
        "Bean",
        "pf",
        "pf",
        "Bean",
        "cf",
        "factory",
        "factory",
        "setConsumerFactory",
        "cf",
        "factory",
        "getContainerProperties",
        "setMicrometerEnabled",
        "factory",
        "getContainerProperties",
        "setObservationEnabled",
        "factory",
        "Bean",
        "cf",
        "observationRegistry",
        "factory",
        "factory",
        "setConsumerFactory",
        "cf",
        "factory",
        "getContainerProperties",
        "setObservationEnabled",
        "factory",
        "getContainerProperties",
        "setObservationRegistry",
        "observationRegistry",
        "factory",
        "Bean",
        "Bean",
        "Bean",
        "Bean",
        "meterRegistry",
        "observationRegistry",
        "ObservationRegistry",
        "create",
        "observationRegistry",
        "observationConfig",
        "observationHandler",
        "meterRegistry",
        "observationRegistry",
        "latch",
        "KafkaListener",
        "id",
        "topics",
        "METRICS_TEST_TOPIC",
        "latch",
        "countDown",
        "latch",
        "KafkaListener",
        "id",
        "topics",
        "METRICS_TEST_TOPIC",
        "containerFactory",
        "latch",
        "countDown"
    ],
    "literals": [
        "\"metrics.test.topic\"",
        "\"test\"",
        "\"spring.kafka.listener\"",
        "\"name\"",
        "\"metricsTest-0\"",
        "\"result\"",
        "\"failure\"",
        "\"exception\"",
        "\"IllegalStateException\"",
        "\"test\"",
        "\"spring.kafka.listener\"",
        "\"spring.kafka.listener.id\"",
        "\"observationTest-0\"",
        "\"error\"",
        "\"IllegalStateException\"",
        "\"metrics\"",
        "\"false\"",
        "\"metricsTest\"",
        "\"metrics test exception\"",
        "\"observationTest\"",
        "\"observationListenerContainerFactory\"",
        "\"observation test exception\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2025 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* @author Soby Chacko\n * @since 3.2.7"
    ],
    "functions": [
        "verifyMetricsWithoutObservation",
        "verifyMetricsWithObservation",
        "producerFactory",
        "consumerFactory",
        "template",
        "kafkaListenerContainerFactory",
        "observationListenerContainerFactory",
        "MetricsListener",
        "metricsListener",
        "MeterRegistry",
        "meterRegistry",
        "ObservationListener",
        "observationListener",
        "ObservationRegistry",
        "observationRegistry",
        "listen",
        "listen"
    ],
    "classes": [
        "MicrometerMetricsTests",
        "Config",
        "MetricsListener",
        "ObservationListener"
    ]
}