{
    "identifiers": [
        "pyttsx3",
        "speech_recognition",
        "sr",
        "random",
        "tkinter",
        "tk",
        "tkinter",
        "Toplevel",
        "messagebox",
        "datetime",
        "webbrowser",
        "nltk",
        "nltk",
        "stem",
        "WordNetLemmatizer",
        "json",
        "pickle",
        "numpy",
        "np",
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "optim",
        "optim",
        "torch",
        "utils",
        "data",
        "Dataset",
        "DataLoader",
        "PIL",
        "Image",
        "ImageTk",
        "tkinter",
        "scrolledtext",
        "web",
        "get_ai_response",
        "nltk",
        "download",
        "nltk",
        "download",
        "nltk",
        "download",
        "WordNetLemmatizer",
        "open",
        "read",
        "json",
        "loads",
        "data_file",
        "intent",
        "intents",
        "pattern",
        "intent",
        "nltk",
        "word_tokenize",
        "pattern",
        "words",
        "extend",
        "w",
        "documents",
        "append",
        "w",
        "intent",
        "intent",
        "classes",
        "classes",
        "append",
        "intent",
        "lemmatizer",
        "lemmatize",
        "w",
        "lower",
        "w",
        "words",
        "w",
        "ignore_words",
        "sorted",
        "words",
        "sorted",
        "classes",
        "pickle",
        "dump",
        "words",
        "open",
        "pickle",
        "dump",
        "classes",
        "open",
        "len",
        "classes",
        "doc",
        "documents",
        "doc",
        "lemmatizer",
        "lemmatize",
        "word",
        "lower",
        "word",
        "pattern_words",
        "w",
        "words",
        "bag",
        "append",
        "w",
        "pattern_words",
        "bag",
        "append",
        "output_empty",
        "classes",
        "index",
        "doc",
        "training",
        "append",
        "bag",
        "output_row",
        "random",
        "shuffle",
        "training",
        "item",
        "item",
        "training",
        "item",
        "item",
        "training",
        "np",
        "array",
        "train_x",
        "np",
        "array",
        "train_y",
        "torch",
        "utils",
        "data",
        "Dataset",
        "X",
        "y",
        "X",
        "y",
        "len",
        "X",
        "index",
        "torch",
        "tensor",
        "X",
        "index",
        "dtype",
        "torch",
        "float32",
        "torch",
        "tensor",
        "y",
        "index",
        "dtype",
        "torch",
        "float32",
        "ChatDataset",
        "train_x",
        "train_y",
        "DataLoader",
        "train_data",
        "batch_size",
        "shuffle",
        "nn",
        "Module",
        "input_size",
        "hidden_size",
        "output_size",
        "ChatBotModel",
        "nn",
        "Linear",
        "input_size",
        "hidden_size",
        "nn",
        "ReLU",
        "nn",
        "Linear",
        "hidden_size",
        "output_size",
        "x",
        "fc1",
        "x",
        "relu",
        "x",
        "fc2",
        "x",
        "x",
        "ChatBotModel",
        "len",
        "train_x",
        "len",
        "classes",
        "nn",
        "CrossEntropyLoss",
        "optim",
        "SGD",
        "model",
        "parameters",
        "lr",
        "epoch",
        "epochs",
        "data",
        "train_loader",
        "data",
        "optimizer",
        "zero_grad",
        "model",
        "inputs",
        "criterion",
        "outputs",
        "torch",
        "max",
        "labels",
        "loss",
        "backward",
        "optimizer",
        "step",
        "epoch",
        "epoch",
        "epochs",
        "loss",
        "item",
        "torch",
        "save",
        "model",
        "state_dict",
        "user_input",
        "nltk",
        "word_tokenize",
        "user_input",
        "lemmatizer",
        "lemmatize",
        "word",
        "lower",
        "word",
        "message_words",
        "len",
        "words",
        "w",
        "message_words",
        "w",
        "words",
        "words",
        "index",
        "w",
        "torch",
        "tensor",
        "bag",
        "dtype",
        "torch",
        "float32",
        "unsqueeze",
        "model",
        "input_tensor",
        "len",
        "output",
        "shape",
        "output",
        "unsqueeze",
        "torch",
        "max",
        "output",
        "dim",
        "classes",
        "predicted",
        "item",
        "intent",
        "intents",
        "intent",
        "tag",
        "random",
        "choice",
        "intent",
        "response",
        "user_entry",
        "get",
        "user_input",
        "lower",
        "root",
        "quit",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "user_input",
        "chat_response",
        "user_input",
        "chat_window",
        "insert",
        "tk",
        "END",
        "response",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "user_entry",
        "tk",
        "END",
        "chat_window",
        "yview",
        "tk",
        "END",
        "update_history",
        "user_input",
        "response",
        "speak",
        "response",
        "text",
        "engine",
        "say",
        "text",
        "engine",
        "runAndWait",
        "engine",
        "pyttsx3",
        "init",
        "engine",
        "setProperty",
        "engine",
        "setProperty",
        "engine",
        "getProperty",
        "engine",
        "setProperty",
        "voices",
        "id",
        "setup_comforting_voice",
        "sr",
        "Recognizer",
        "sr",
        "Microphone",
        "source",
        "recognizer",
        "adjust_for_ambient_noise",
        "source",
        "recognizer",
        "listen",
        "source",
        "recognizer",
        "recognize_google",
        "audio",
        "user_input",
        "user_input",
        "lower",
        "sr",
        "UnknownValueError",
        "sr",
        "RequestError",
        "user_input",
        "get_ai_response",
        "user_input",
        "user_profile",
        "user_profile",
        "webbrowser",
        "open",
        "query",
        "user_profile",
        "speak",
        "find_doctors",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "response",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "response",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "helplines",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "helplines",
        "webbrowser",
        "open",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "progress_report",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "progress_report",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "self_care_tips",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "self_care_tips",
        "user_input",
        "bot_response",
        "datetime",
        "datetime",
        "now",
        "strftime",
        "user_profile",
        "append",
        "timestamp",
        "user_input",
        "bot_response",
        "Toplevel",
        "root",
        "history_window",
        "title",
        "history_window",
        "geometry",
        "scrolledtext",
        "ScrolledText",
        "history_window",
        "width",
        "height",
        "history_box",
        "pack",
        "padx",
        "pady",
        "entry",
        "user_profile",
        "history_box",
        "insert",
        "tk",
        "END",
        "entry",
        "entry",
        "entry",
        "history_box",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "tk",
        "Tk",
        "root",
        "title",
        "Image",
        "open",
        "bg_image",
        "resize",
        "Image",
        "Resampling",
        "LANCZOS",
        "ImageTk",
        "PhotoImage",
        "bg_image",
        "tk",
        "Label",
        "root",
        "image",
        "bg_photo",
        "bg_label",
        "place",
        "relwidth",
        "relheight",
        "FileNotFoundError",
        "root",
        "config",
        "bg",
        "scrolledtext",
        "ScrolledText",
        "root",
        "wrap",
        "tk",
        "WORD",
        "state",
        "tk",
        "DISABLED",
        "width",
        "height",
        "chat_window",
        "grid",
        "row",
        "column",
        "columnspan",
        "padx",
        "pady",
        "tk",
        "Frame",
        "root",
        "button_frame",
        "grid",
        "row",
        "column",
        "columnspan",
        "padx",
        "pady",
        "tk",
        "Entry",
        "root",
        "width",
        "user_entry",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Button",
        "button_frame",
        "text",
        "width",
        "command",
        "send_message",
        "send_button",
        "grid",
        "row",
        "column",
        "padx",
        "tk",
        "Button",
        "button_frame",
        "text",
        "width",
        "command",
        "show_helplines",
        "helpline_button",
        "grid",
        "row",
        "column",
        "padx",
        "tk",
        "Button",
        "button_frame",
        "text",
        "width",
        "command",
        "show_doctor_options",
        "doctor_button",
        "grid",
        "row",
        "column",
        "padx",
        "tk",
        "Button",
        "button_frame",
        "text",
        "width",
        "command",
        "show_history",
        "history_button",
        "grid",
        "row",
        "column",
        "tk",
        "Label",
        "root",
        "text",
        "name_label",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Entry",
        "root",
        "width",
        "name_entry",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Label",
        "root",
        "text",
        "age_label",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Entry",
        "root",
        "width",
        "age_entry",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Label",
        "root",
        "text",
        "emotional_state_label",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Entry",
        "root",
        "width",
        "emotional_state_entry",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Label",
        "root",
        "text",
        "location_label",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "tk",
        "Entry",
        "root",
        "width",
        "location_entry",
        "grid",
        "row",
        "column",
        "padx",
        "pady",
        "visually_impaired_var",
        "get",
        "speak",
        "get_user_input",
        "send_message",
        "user_input",
        "tk",
        "BooleanVar",
        "tk",
        "Checkbutton",
        "root",
        "text",
        "variable",
        "visually_impaired_var",
        "command",
        "enable_voice_input",
        "visually_impaired_checkbox",
        "grid",
        "row",
        "column",
        "columnspan",
        "pady",
        "name_entry",
        "get",
        "age_entry",
        "get",
        "emotional_state_entry",
        "get",
        "location_entry",
        "get",
        "chat_window",
        "config",
        "state",
        "tk",
        "NORMAL",
        "chat_window",
        "insert",
        "tk",
        "END",
        "user_profile",
        "chat_window",
        "config",
        "state",
        "tk",
        "DISABLED",
        "speak",
        "tk",
        "Button",
        "root",
        "text",
        "command",
        "save_user_profile",
        "profile_button",
        "grid",
        "row",
        "column",
        "columnspan",
        "pady",
        "messagebox",
        "showinfo",
        "tk",
        "Button",
        "button_frame",
        "text",
        "command",
        "send_history",
        "send_history_button",
        "grid",
        "row",
        "column",
        "tk",
        "Button",
        "root",
        "text",
        "command",
        "open_support_group_website",
        "support_groups_button",
        "grid",
        "row",
        "column",
        "tk",
        "Button",
        "root",
        "text",
        "command",
        "show_progress_report",
        "progress_report_button",
        "grid",
        "row",
        "column",
        "root",
        "mainloop"
    ],
    "literals": [
        "'punkt'",
        "'wordnet'",
        "'omw-1.4'",
        "\"intents.json\"",
        "'?'",
        "'!'",
        "'intents'",
        "'patterns'",
        "'tag'",
        "'tag'",
        "'tag'",
        "'texts.pkl'",
        "'wb'",
        "'labels.pkl'",
        "'wb'",
        "f'Epoch {epoch}/{epochs}, Loss: {loss.item()}'",
        "'model.pth'",
        "\"Model trained and saved!\"",
        "'intents'",
        "'tag'",
        "'responses'",
        "'quit'",
        "\"You: \"",
        "'\\n'",
        "\"Bot: \"",
        "'\\n\\n'",
        "\"username\"",
        "\"\"",
        "\"age\"",
        "\"disability\"",
        "\"emotional_state\"",
        "\"\"",
        "\"therapy_ready\"",
        "\"location\"",
        "\"\"",
        "\"emotional_journey\"",
        "'rate'",
        "'volume'",
        "'voices'",
        "'voice'",
        "\"Listening...\"",
        "f\"You said: {user_input}\"",
        "\"Sorry, I didn't understand. Please try again.\"",
        "\"Could not process your request. Check your internet connection.\"",
        "\"location\"",
        "f\"Mental health doctors in {user_profile['location']}\"",
        "'location'",
        "f\"https://www.google.com/search?q={query}\"",
        "f\"Here are some mental health doctors in {user_profile['location']}. Check your browser.\"",
        "'location'",
        "\"Please enter your location first.\"",
        "\"Searching for doctors in your area...\"",
        "f\"Bot: {response}\\n\\n\"",
        "f\"Bot: {helplines}\\n\\n\"",
        "\"https://www.thelivelovelaughfoundation.org/\"",
        "f\"Bot: {progress_report}\\n\\n\"",
        "f\"Bot: {self_care_tips}\\n\\n\"",
        "\"%Y-%m-%d %H:%M:%S\"",
        "\"emotional_journey\"",
        "\"timestamp\"",
        "\"User\"",
        "\"Bot\"",
        "\"Conversation History\"",
        "\"500x400\"",
        "\"emotional_journey\"",
        "f\"{entry['timestamp']}\\nUser: {entry['User']}\\nBot: {entry['Bot']}\\n\\n\"",
        "'timestamp'",
        "'User'",
        "'Bot'",
        "\"Here is your conversation history.\"",
        "\"Mental Health ChatBot\"",
        "\"background.jpg\"",
        "\"Background image not found. Using default background.\"",
        "\"orange\"",
        "\"Send\"",
        "\"Helplines\"",
        "\"Find Doctors\"",
        "\"Show History\"",
        "\"Enter your Name:\"",
        "\"Enter your Age:\"",
        "\"Enter your Emotional State:\"",
        "\"Enter your Location:\"",
        "\"Voice input has been enabled. Please speak your query.\"",
        "\"I am visually impaired\"",
        "\"username\"",
        "\"age\"",
        "\"emotional_state\"",
        "\"location\"",
        "f\"Bot: Profile updated: {user_profile}\\n\\n\"",
        "\"Profile updated successfully.\"",
        "\"Save Profile\"",
        "\"History Sent\"",
        "\"Your conversation history has been sent.\"",
        "\"Send History\"",
        "\"Mental Health Support Groups\"",
        "\"Track Progress\""
    ],
    "variables": [
        "lemmatizer",
        "data_file",
        "intents",
        "words",
        "classes",
        "documents",
        "ignore_words",
        "w",
        "words",
        "words",
        "classes",
        "training",
        "output_empty",
        "bag",
        "pattern_words",
        "pattern_words",
        "output_row",
        "output_row",
        "train_x",
        "train_y",
        "train_x",
        "train_y",
        "X",
        "y",
        "train_data",
        "train_loader",
        "fc1",
        "relu",
        "fc2",
        "x",
        "x",
        "x",
        "model",
        "criterion",
        "optimizer",
        "epochs",
        "inputs",
        "labels",
        "outputs",
        "loss",
        "message_words",
        "message_words",
        "bag",
        "bag",
        "input_tensor",
        "output",
        "output",
        "_",
        "predicted",
        "tag",
        "response",
        "user_input",
        "response",
        "user_profile",
        "engine",
        "voices",
        "recognizer",
        "audio",
        "user_input",
        "query",
        "response",
        "helplines",
        "progress_report",
        "self_care_tips",
        "timestamp",
        "history_window",
        "history_box",
        "root",
        "bg_image",
        "bg_image",
        "bg_photo",
        "bg_label",
        "chat_window",
        "button_frame",
        "user_entry",
        "send_button",
        "helpline_button",
        "doctor_button",
        "history_button",
        "name_label",
        "name_entry",
        "age_label",
        "age_entry",
        "emotional_state_label",
        "emotional_state_entry",
        "location_label",
        "location_entry",
        "user_input",
        "visually_impaired_var",
        "visually_impaired_checkbox",
        "user_profile",
        "user_profile",
        "user_profile",
        "user_profile",
        "profile_button",
        "send_history_button",
        "support_groups_button",
        "progress_report_button"
    ],
    "comments": [
        "Download NLTK resources",
        "For wordnet with multilingual support",
        "Initialize lemmatizer",
        "Load intents file",
        "Prepare data",
        "Tokenize and process the data",
        "Tokenize each word in the pattern",
        "Lemmatize and lower each word and remove duplicates",
        "Sort classes",
        "Save words and classes for later use",
        "Prepare training data (bag of words and output tags)",
        "Prepare the training set",
        "Initialize our bag of words",
        "tokenized pattern words",
        "Create a bag of words array with 1 if word matches, else 0",
        "Output row for the tag",
        "Append the bag of words and output to training data",
        "Shuffle and convert into numpy arrays (make sure all inner lists have the same length)",
        "Separate the training data and labels",
        "Convert to numpy arrays",
        "Define PyTorch Dataset",
        "Fix here",
        "Prepare training data and labels",
        "Define the model using PyTorch",
        "Initialize the model, loss function, and optimizer",
        "Train the model",
        "Save the model after training",
        "Chat function for Tkinter integration",
        "Tokenize the input",
        "Create a bag of words",
        "Convert to tensor",
        "Add batch dimension",
        "Predict",
        "Ensure the output is of shape (batch_size, num_classes)",
        "Add batch dimension if it's missing",
        "Get the predicted class (tag)",
        "Get the tag",
        "Find the response for the tag",
        "Tkinter GUI setup",
        "Speak the response",
        "User Profile to track user information",
        "Function to speak text",
        "Speak the text",
        "Function to setup the text-to-speech engine",
        "Speed of speech",
        "Volume level (0.0 to 1.0)",
        "Choose a voice (0 for male, 1 for female)",
        "Function to get user input via speech recognition",
        "Function to fetch AI-generated response",
        "Call the function from the Confluence\\web.py to get a response from the trained AI model",
        "Function to fetch doctors based on location",
        "Search for doctors based on the city",
        "Open the search result in browser",
        "Function to show doctors",
        "Speak the helpline information",
        "Create a pop-out window to display history",
        "Create a scrolled text box to display the history",
        "Display the timestamped history",
        "Speak that the history is being shown",
        "Tkinter setup",
        "Add a calming background",
        "Create chat window (text area)",
        "Create a frame for buttons and other widgets",
        "Entry box for user to type messages",
        "Send button",
        "Button to show helplines",
        "Show doctor options button",
        "Show history button",
        "User Profile Details - Adding the name, age, emotional state, and location input fields",
        "Entry for Name",
        "Entry for Age",
        "Entry for Emotional State",
        "Entry for Location",
        "Function to enable voice input if visually impaired",
        "Submit button to save the user profile information",
        "Show the \"History sent\" pop-up message",
        "Start the Tkinter GUI loop"
    ],
    "docstrings": [
        "\"\"\"\n    Mental Health Helplines in India:\n\n    1. Kiran Helpline: 1800-599-0019 (Available 9:00 AM - 9:00 PM)\n    2. Vandrevala Foundation: 91-9820466726 (Available 24/7)\n    3. AASRA Foundation: 91-9820466726 (Available 24/7)\n\n    Helpline Websites:\n    1. [Kiran Helpline](https://www.kiranspecialist.org/)\n    2. [Vandrevala Foundation](https://vandrevalafoundation.org/)\n    3. [AASRA Foundation](https://www.aasra.org/)\n    \n    For more, please check online mental health support numbers in your region.\n    \"\"\"",
        "\"\"\"\n    How to Track Your Mental Health Progress:\n\n    1. Track your emotions and moods daily using a journal or a mood tracking app.\n    2. Reflect on your experiences to identify patterns and triggers.\n    3. Set small goals to improve your mental health and track your progress.\n    4. Share your feelings with a therapist or counselor during your sessions.\n    5. Regularly review how you are doing, and don't be afraid to reach out for help.\n    \"\"\"",
        "\"\"\"\n    Self-care Tips for Mental Well-being:\n\n    1. Practice mindfulness and deep breathing exercises.\n    2. Stay connected with loved ones and share your feelings.\n    3. Engage in physical activities like walking, yoga, or any hobbies that relax you.\n    4. Maintain a balanced diet and ensure you get enough sleep.\n    5. Limit your time on social media and take breaks from screens.\n\n    Take time for yourself and focus on your mental health daily.\n    \"\"\""
    ],
    "functions": [
        "__len__",
        "__getitem__",
        "forward",
        "chat_response",
        "send_message",
        "speak",
        "setup_comforting_voice",
        "get_user_input",
        "get_bot_response",
        "find_doctors",
        "show_doctor_options",
        "show_helplines",
        "open_support_group_website",
        "show_progress_report",
        "show_self_care_tips",
        "update_history",
        "show_history",
        "enable_voice_input",
        "save_user_profile",
        "send_history"
    ],
    "classes": [
        "ChatDataset",
        "ChatBotModel"
    ]
}