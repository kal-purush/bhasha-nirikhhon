{
    "identifiers": [
        "pandas",
        "pd",
        "pyodbc",
        "nltk",
        "nltk",
        "sentiment",
        "vader",
        "SentimentIntensityAnalyzer",
        "nltk",
        "download",
        "pyodbc",
        "connect",
        "conn_str",
        "pd",
        "read_sql",
        "query",
        "conn",
        "conn",
        "close",
        "df",
        "fetch_data_from_sql",
        "SentimentIntensityAnalyzer",
        "review",
        "sia",
        "polarity_scores",
        "review",
        "sentiment",
        "score",
        "rating",
        "score",
        "rating",
        "rating",
        "score",
        "rating",
        "rating",
        "rating",
        "rating",
        "score",
        "score",
        "score",
        "score",
        "customer_reviews_df",
        "apply",
        "calculate_sentiment",
        "customer_reviews_df",
        "apply",
        "row",
        "categorize_sentiment",
        "row",
        "row",
        "axis",
        "customer_reviews_df",
        "apply",
        "sentiment_bucket",
        "customer_reviews_df",
        "head",
        "customer_reviews_df",
        "to_csv",
        "index"
    ],
    "literals": [
        "'vader_lexicon'",
        "\"Driver={SQL Server};\"",
        "\"Server=LAPTOP-OLDJ5R35\\\\SQLEXPRESS;\"",
        "\"Database=PortfolioProject_MarketingAnalytics;\"",
        "\"Trusted_Connection=yes;\"",
        "\"SELECT ReviewID, CustomerID, ProductID, ReviewDate, Rating, ReviewText FROM customer_reviews\"",
        "'compound'",
        "'Positive'",
        "'Mixed Positive'",
        "'Mixed Negative'",
        "'Negative'",
        "'Mixed Negative'",
        "'Mixed Positive'",
        "'Positive'",
        "'Negative'",
        "'Neutral'",
        "'0.5 to 1.0'",
        "'0.0 to 0.49'",
        "'-0.49 to 0.0'",
        "'-1.0 to -0.5'",
        "'SentimentScore'",
        "'ReviewText'",
        "'SentimentCategory'",
        "'SentimentScore'",
        "'Rating'",
        "'SentimentBucket'",
        "'SentimentScore'",
        "'fact_customer_reviews_with_sentiment.csv'"
    ],
    "variables": [
        "conn_str",
        "conn",
        "query",
        "df",
        "customer_reviews_df",
        "sia",
        "sentiment",
        "customer_reviews_df",
        "customer_reviews_df",
        "customer_reviews_df"
    ],
    "comments": [
        "Specify the driver for SQL Server",
        "Specify your SQL Server instance",
        "Specify the database name",
        "Use Windows Authentication for the connection",
        "Fetch the customer reviews data from the SQL database",
        "Initialize the VADER sentiment intensity analyzer for analyzing the sentiment of text data",
        "Define a function to calculate sentiment scores using VADER",
        "Get the sentiment scores for the review text",
        "Return the compound score, which is a normalized score between -1 (most negative) and 1 (most positive)",
        "Define a function to categorize sentiment using both the sentiment score and the review rating",
        "Use both the text sentiment score and the numerical rating to determine sentiment category",
        "Positive sentiment score",
        "High rating and positive sentiment",
        "Neutral rating but positive sentiment",
        "Low rating but positive sentiment",
        "Negative sentiment score",
        "Low rating and negative sentiment",
        "Neutral rating but negative sentiment",
        "High rating but negative sentiment",
        "Neutral sentiment score",
        "High rating with neutral sentiment",
        "Low rating with neutral sentiment",
        "Neutral rating and neutral sentiment",
        "Define a function to bucket sentiment scores into text ranges",
        "Strongly positive sentiment",
        "Mildly positive sentiment",
        "Mildly negative sentiment",
        "Strongly negative sentiment",
        "Apply sentiment analysis to calculate sentiment scores for each review",
        "Apply sentiment categorization using both text and rating",
        "Apply sentiment bucketing to categorize scores into defined ranges",
        "Display the first few rows of the DataFrame with sentiment scores, categories, and buckets",
        "Save the DataFrame with sentiment scores, categories, and buckets to a new CSV file"
    ],
    "docstrings": [],
    "functions": [
        "fetch_data_from_sql",
        "calculate_sentiment",
        "categorize_sentiment",
        "sentiment_bucket"
    ],
    "classes": []
}