{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "IO",
        "Compression",
        "Linq",
        "Threading",
        "Tasks",
        "Azure",
        "Functions",
        "Cli",
        "Common",
        "Azure",
        "Functions",
        "Cli",
        "Helpers",
        "Azure",
        "Functions",
        "Cli",
        "Tests",
        "E2E",
        "Helpers",
        "Xunit",
        "Xunit",
        "Abstractions",
        "Azure",
        "Functions",
        "Cli",
        "Tests",
        "Environment",
        "GetEnvironmentVariable",
        "ToLowerInvariant",
        "ITestOutputHelper",
        "output",
        "_output",
        "output",
        "FileSystemHelpers",
        "Instance",
        "Fact",
        "BuildAndCopyFileToZipAsync",
        "BuildAndCopyFileToZipAsync",
        "OperatingSystem",
        "IsWindows",
        "_isCI",
        "File",
        "Copy",
        "linuxZip",
        "Path",
        "Combine",
        "Directory",
        "GetCurrentDirectory",
        "VerifyWindowsZip",
        "windowsZip",
        "OperatingSystem",
        "IsLinux",
        "VerifyLinuxZip",
        "linuxZip",
        "_isCI",
        "Environment",
        "GetEnvironmentVariable",
        "Assert",
        "NotNull",
        "workspace",
        "Directory",
        "GetFiles",
        "workspace",
        "SearchOption",
        "AllDirectories",
        "Single",
        "VerifyLinuxZip",
        "zippedOnWindows",
        "rid",
        "rid",
        "StartsWith",
        "proj",
        "proj",
        "proj",
        "proj",
        "Path",
        "Combine",
        "Path",
        "GetTempPath",
        "Path",
        "GetRandomFileName",
        "Directory",
        "CreateDirectory",
        "tempDir",
        "i",
        "i",
        "Path",
        "Combine",
        "tempDir",
        "Path",
        "GetRandomFileName",
        "File",
        "WriteAllText",
        "file",
        "Guid",
        "NewGuid",
        "ToString",
        "files",
        "Add",
        "file",
        "DirectoryInfo",
        "Directory",
        "GetCurrentDirectory",
        "dir",
        "dir",
        "Parent",
        "Parent",
        "Parent",
        "Parent",
        "dir",
        "GetFiles",
        "proj",
        "SearchOption",
        "AllDirectories",
        "FirstOrDefault",
        "csproj",
        "Directory",
        "FullName",
        "ProcessHelper",
        "RunProcess",
        "rid",
        "csprojDir",
        "writeOutput",
        "WriteOutput",
        "Path",
        "Combine",
        "csprojDir",
        "rid",
        "fileName",
        "exe",
        "dll",
        "config",
        "DirectoryInfo",
        "outPath",
        "GetFiles",
        "fileName",
        "SearchOption",
        "AllDirectories",
        "FirstOrDefault",
        "Assert",
        "f",
        "fileName",
        "Path",
        "Combine",
        "tempDir",
        "fileName",
        "File",
        "Copy",
        "f",
        "FullName",
        "destFile",
        "files",
        "Add",
        "destFile",
        "Path",
        "Combine",
        "tempDir",
        "ZipHelper",
        "CreateZip",
        "files",
        "tempDir",
        "executables",
        "exe",
        "FileSystemHelpers",
        "WriteToFile",
        "zipFile",
        "stream",
        "zipFile",
        "zipFile",
        "Path",
        "Combine",
        "Path",
        "GetTempPath",
        "Path",
        "GetRandomFileName",
        "ZipFile",
        "ExtractToDirectory",
        "zipFile",
        "unzipPath",
        "ProcessHelper",
        "RunProcess",
        "Path",
        "Combine",
        "unzipPath",
        "Empty",
        "unzipPath",
        "exeOutput",
        "o",
        "Environment",
        "NewLine",
        "exeError",
        "e",
        "Environment",
        "NewLine",
        "Assert",
        "Null",
        "exeError",
        "Assert",
        "Equal",
        "exeOutput",
        "Trim",
        "zipFile",
        "CaptureOutput",
        "output",
        "outputLines",
        "Add",
        "output",
        "WriteOutput",
        "output",
        "Path",
        "GetFileName",
        "zipFile",
        "Path",
        "GetDirectoryName",
        "zipFile",
        "Path",
        "Combine",
        "zipDir",
        "Directory",
        "CreateDirectory",
        "mntDir",
        "ProcessHelper",
        "RunProcess",
        "zipFileName",
        "zipDir",
        "writeOutput",
        "WriteOutput",
        "ProcessHelper",
        "RunProcess",
        "mntDir",
        "writeOutput",
        "CaptureOutput",
        "Assert",
        "Equal",
        "outputLines",
        "Count",
        "line",
        "outputLines",
        "Skip",
        "line",
        "EndsWith",
        "exeName",
        "Assert",
        "StartsWith",
        "line",
        "Assert",
        "StartsWith",
        "line",
        "Directory",
        "GetFiles",
        "mntDir",
        "SearchOption",
        "AllDirectories",
        "Assert",
        "Equal",
        "files",
        "Length",
        "file",
        "files",
        "FileInfo",
        "file",
        "fileInfo",
        "Name",
        "exeName",
        "UnixFileMode",
        "GroupWrite",
        "UnixFileMode",
        "GroupRead",
        "UnixFileMode",
        "GroupExecute",
        "UnixFileMode",
        "UserWrite",
        "UnixFileMode",
        "UserRead",
        "UnixFileMode",
        "UserExecute",
        "UnixFileMode",
        "OtherWrite",
        "UnixFileMode",
        "OtherRead",
        "UnixFileMode",
        "OtherExecute",
        "Assert",
        "Equal",
        "readWriteExecute",
        "fileInfo",
        "UnixFileMode",
        "UnixFileMode",
        "GroupWrite",
        "UnixFileMode",
        "GroupRead",
        "UnixFileMode",
        "UserWrite",
        "UnixFileMode",
        "UserRead",
        "UnixFileMode",
        "OtherWrite",
        "UnixFileMode",
        "OtherRead",
        "Assert",
        "Equal",
        "readWrite",
        "fileInfo",
        "UnixFileMode",
        "outputLines",
        "Clear",
        "ProcessHelper",
        "RunProcess",
        "Path",
        "Combine",
        "mntDir",
        "exeName",
        "Empty",
        "mntDir",
        "writeOutput",
        "CaptureOutput",
        "Assert",
        "Equal",
        "outputLines",
        "Last",
        "output",
        "_output",
        "WriteLine",
        "output"
    ],
    "literals": [
        "\"TF_BUILD\"",
        "\"true\"",
        "\"win-x64\"",
        "\"linux-x64\"",
        "\"ZippedOnWindows.zip\"",
        "\"PIPELINE_WORKSPACE\"",
        "\"ZippedOnWindows.zip\"",
        "\"Unsupported OS\"",
        "\"ZippedExe\"",
        "\"linux\"",
        "\"dotnet\"",
        "\"bin\"",
        "\"Debug\"",
        "\"net8.0\"",
        "\"test.zip\"",
        "\"ZippedExe.exe\"",
        "\"Hello, World!\"",
        "\"ZippedExe\"",
        "\"mnt\"",
        "\"fuse-zip\"",
        "\"bash\"",
        "\"-rwxrwxrwx\"",
        "\"-rw-rw-rw-\"",
        "\"*.*\"",
        "\"Hello, World!\""
    ],
    "variables": [
        "ITestOutputHelper",
        "_output",
        "_isCI",
        "windowsZip",
        "linuxZip",
        "workspace",
        "zippedOnWindows",
        "proj",
        "exe",
        "dll",
        "config",
        "tempDir",
        "files",
        "i",
        "file",
        "dir",
        "csproj",
        "csprojDir",
        "outPath",
        "f",
        "destFile",
        "zipFile",
        "stream",
        "unzipPath",
        "exeOutput",
        "exeError",
        "exeName",
        "outputLines",
        "zipFileName",
        "zipDir",
        "mntDir",
        "files",
        "fileInfo",
        "readWriteExecute",
        "readWrite"
    ],
    "comments": [
        "reset to default in case other tests have set this up with mocks",
        "copy the windows-built linux zip so we can include it in ci artifacts for validation on linux",
        "this should only run in CI where we've built a zip on windows and copied it here",
        "files we'll need to zip up",
        "Create some temp files",
        "walk up to the 'test' directory",
        "build the project for the rid",
        "copy the files to the zip dir",
        "use our zip utilities to zip them",
        "this is what our hosting environment does; we need to validate we can run the exe when mounted like this",
        "ignore first ('total ...') to validate file perms",
        "exe should be executable"
    ],
    "docstrings": [],
    "functions": [
        "ZipHelperTests",
        "CreateZip_Succeeds",
        "BuildAndCopyFileToZipAsync",
        "VerifyWindowsZip",
        "VerifyLinuxZip",
        "WriteOutput"
    ],
    "classes": [
        "ZipHelperTests"
    ]
}