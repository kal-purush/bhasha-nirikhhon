{
    "identifiers": [
        "DNAnalyzer",
        "api",
        "DNAnalyzer",
        "core",
        "DNAAnalysis",
        "DNAnalyzer",
        "utils",
        "core",
        "DNATools",
        "DNAnalyzer",
        "utils",
        "core",
        "BasePairCounter",
        "DNAnalyzer",
        "data",
        "Parser",
        "DNAnalyzer",
        "core",
        "readingframe",
        "ReadingFrameAnalyzer",
        "DNAnalyzer",
        "core",
        "readingframe",
        "ReadingFrame",
        "DNAnalyzer",
        "utils",
        "protein",
        "ProteinFinder",
        "java",
        "io",
        "ByteArrayOutputStream",
        "java",
        "io",
        "PrintStream",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "json",
        "JSONObject",
        "org",
        "json",
        "JSONArray",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "org",
        "springframework",
        "web",
        "multipart",
        "MultipartFile",
        "RestController",
        "RequestMapping",
        "CrossOrigin",
        "origins",
        "Autowired",
        "readingFrameAnalyzer",
        "GetMapping",
        "status",
        "status",
        "put",
        "status",
        "put",
        "status",
        "put",
        "status",
        "put",
        "currentTimeMillis",
        "ResponseEntity",
        "ok",
        "status",
        "PostMapping",
        "value",
        "consumes",
        "MediaType",
        "MULTIPART_FORM_DATA_VALUE",
        "RequestParam",
        "dnaFile",
        "RequestParam",
        "value",
        "defaultValue",
        "amino",
        "RequestParam",
        "value",
        "defaultValue",
        "minCount",
        "RequestParam",
        "value",
        "defaultValue",
        "maxCount",
        "RequestParam",
        "value",
        "defaultValue",
        "reverse",
        "RequestParam",
        "value",
        "defaultValue",
        "rcomplement",
        "RequestParam",
        "value",
        "defaultValue",
        "codons",
        "RequestParam",
        "value",
        "defaultValue",
        "coverage",
        "RequestParam",
        "value",
        "defaultValue",
        "longest",
        "RequestParam",
        "value",
        "defaultValue",
        "format",
        "dnaFile",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "maxSize",
        "dnaFile",
        "getSize",
        "maxSize",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "tempFile",
        "Files",
        "createTempFile",
        "dnaFile",
        "transferTo",
        "tempFile",
        "toFile",
        "baos",
        "ps",
        "baos",
        "old",
        "setOut",
        "ps",
        "dnaSequence",
        "Files",
        "readAllBytes",
        "tempFile",
        "isValidDNASequence",
        "dnaSequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "analysis",
        "dnaSequence",
        "amino",
        "reverse",
        "analysis",
        "analysis",
        "reverseDna",
        "rcomplement",
        "analysis",
        "analysis",
        "reverseComplement",
        "codons",
        "analysis",
        "outPutCodons",
        "minCount",
        "maxCount",
        "coverage",
        "analysis",
        "printHighCoverageRegions",
        "longest",
        "analysis",
        "printLongestProtein",
        "output",
        "baos",
        "toString",
        "equals",
        "format",
        "output",
        "formatAsJson",
        "output",
        "equals",
        "format",
        "output",
        "formatAsCsv",
        "output",
        "ResponseEntity",
        "ok",
        "contentType",
        "equals",
        "format",
        "MediaType",
        "APPLICATION_JSON",
        "equals",
        "format",
        "MediaType",
        "TEXT_PLAIN",
        "MediaType",
        "TEXT_PLAIN",
        "body",
        "output",
        "setOut",
        "old",
        "Files",
        "deleteIfExists",
        "tempFile",
        "e",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "RequestBody",
        "request",
        "dnaSequence",
        "request",
        "get",
        "dnaSequence",
        "dnaSequence",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "isValidDNASequence",
        "dnaSequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "counts",
        "DNAAnalysis",
        "countBasePairs",
        "dnaSequence",
        "total",
        "counts",
        "counts",
        "counts",
        "counts",
        "counts",
        "result",
        "baseCounts",
        "basePercentages",
        "baseCounts",
        "put",
        "counts",
        "baseCounts",
        "put",
        "counts",
        "baseCounts",
        "put",
        "counts",
        "baseCounts",
        "put",
        "counts",
        "baseCounts",
        "put",
        "counts",
        "total",
        "basePercentages",
        "put",
        "format",
        "counts",
        "total",
        "basePercentages",
        "put",
        "format",
        "counts",
        "total",
        "basePercentages",
        "put",
        "format",
        "counts",
        "total",
        "basePercentages",
        "put",
        "format",
        "counts",
        "total",
        "basePercentages",
        "put",
        "format",
        "counts",
        "total",
        "gcContent",
        "counts",
        "counts",
        "total",
        "counts",
        "result",
        "put",
        "baseCounts",
        "result",
        "put",
        "basePercentages",
        "result",
        "put",
        "format",
        "gcContent",
        "result",
        "put",
        "total",
        "ResponseEntity",
        "ok",
        "result",
        "e",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "RequestBody",
        "request",
        "dnaSequence",
        "request",
        "get",
        "aminoAcid",
        "request",
        "get",
        "dnaSequence",
        "dnaSequence",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "aminoAcid",
        "aminoAcid",
        "isEmpty",
        "aminoAcid",
        "isValidDNASequence",
        "dnaSequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "proteins",
        "ProteinFinder",
        "getProtein",
        "dnaSequence",
        "toLowerCase",
        "aminoAcid",
        "result",
        "result",
        "put",
        "aminoAcid",
        "result",
        "put",
        "proteins",
        "size",
        "result",
        "put",
        "proteins",
        "ResponseEntity",
        "ok",
        "result",
        "e",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "RequestBody",
        "request",
        "dnaSequence",
        "request",
        "get",
        "minLength",
        "request",
        "get",
        "parseInt",
        "request",
        "get",
        "toString",
        "dnaSequence",
        "dnaSequence",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "isValidDNASequence",
        "dnaSequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "frames",
        "readingFrameAnalyzer",
        "analyzeSequence",
        "dnaSequence",
        "toUpperCase",
        "minLength",
        "formattedFrames",
        "frames",
        "stream",
        "frame",
        "frameMap",
        "frameMap",
        "put",
        "frame",
        "isForward",
        "frameMap",
        "put",
        "frame",
        "getOffset",
        "frameMap",
        "put",
        "frame",
        "getGenes",
        "stream",
        "gene",
        "geneMap",
        "geneMap",
        "put",
        "gene",
        "getStartPosition",
        "geneMap",
        "put",
        "gene",
        "getEndPosition",
        "geneMap",
        "put",
        "gene",
        "getLength",
        "geneMap",
        "collect",
        "Collectors",
        "toList",
        "frameMap",
        "collect",
        "Collectors",
        "toList",
        "result",
        "result",
        "put",
        "frames",
        "size",
        "result",
        "put",
        "formattedFrames",
        "result",
        "put",
        "dnaSequence",
        "length",
        "ResponseEntity",
        "ok",
        "result",
        "e",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "e",
        "getMessage",
        "e",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "value",
        "consumes",
        "MediaType",
        "MULTIPART_FORM_DATA_VALUE",
        "RequestParam",
        "geneticFile",
        "RequestParam",
        "value",
        "defaultValue",
        "snpAnalysis",
        "geneticFile",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "maxSize",
        "geneticFile",
        "getSize",
        "maxSize",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "tempFile",
        "Files",
        "createTempFile",
        "geneticFile",
        "transferTo",
        "tempFile",
        "toFile",
        "results",
        "processGeneticData",
        "tempFile",
        "snpAnalysis",
        "ResponseEntity",
        "ok",
        "results",
        "Files",
        "deleteIfExists",
        "tempFile",
        "e",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "RequestBody",
        "request",
        "dnaSequence",
        "request",
        "get",
        "reverse",
        "request",
        "getOrDefault",
        "complement",
        "request",
        "getOrDefault",
        "dnaSequence",
        "dnaSequence",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "isValidDNASequence",
        "dnaSequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "analysis",
        "dnaSequence",
        "reverse",
        "analysis",
        "analysis",
        "reverseDna",
        "complement",
        "analysis",
        "analysis",
        "reverseComplement",
        "result",
        "result",
        "put",
        "dnaSequence",
        "result",
        "put",
        "analysis",
        "dna",
        "getDna",
        "result",
        "put",
        "of",
        "reverse",
        "complement",
        "ResponseEntity",
        "ok",
        "result",
        "e",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "body",
        "of",
        "e",
        "getMessage",
        "PostMapping",
        "value",
        "consumes",
        "MediaType",
        "MULTIPART_FORM_DATA_VALUE",
        "RequestParam",
        "file",
        "file",
        "isEmpty",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "tempFile",
        "Files",
        "createTempFile",
        "getFileExtension",
        "file",
        "getOriginalFilename",
        "file",
        "transferTo",
        "tempFile",
        "toFile",
        "sequence",
        "Parser",
        "parseFile",
        "tempFile",
        "toFile",
        "sequence",
        "ResponseEntity",
        "badRequest",
        "body",
        "of",
        "result",
        "result",
        "put",
        "file",
        "getOriginalFilename",
        "result",
        "put",
        "file",
        "getSize",
        "result",
        "put",
        "sequence",
        "length",
        "sequence",
        "length",
        "result",
        "put",
        "sequence",
        "substring",
        "sequence",
        "substring",
        "sequence",
        "length",
        "result",
        "put",
        "result",
        "put",
        "sequence",
        "result",
        "put",
        "ResponseEntity",
        "ok",
        "result",
        "Files",
        "deleteIfExists",
        "tempFile",
        "e",
        "ResponseEntity",
        "status",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "body",
        "of",
        "e",
        "getMessage",
        "sequence",
        "sequence",
        "sequence",
        "replaceAll",
        "toUpperCase",
        "sequence",
        "matches",
        "output",
        "json",
        "json",
        "append",
        "lines",
        "output",
        "split",
        "i",
        "i",
        "lines",
        "length",
        "i",
        "json",
        "append",
        "append",
        "lines",
        "i",
        "replace",
        "append",
        "i",
        "lines",
        "length",
        "json",
        "append",
        "json",
        "append",
        "json",
        "toString",
        "output",
        "csv",
        "lines",
        "output",
        "split",
        "line",
        "lines",
        "line",
        "line",
        "replace",
        "line",
        "contains",
        "line",
        "line",
        "csv",
        "append",
        "line",
        "append",
        "csv",
        "toString",
        "filePath",
        "includeSnpAnalysis",
        "results",
        "snps",
        "chromosomeDistribution",
        "reader",
        "filePath",
        "toFile",
        "line",
        "totalSnps",
        "line",
        "reader",
        "readLine",
        "line",
        "startsWith",
        "line",
        "trim",
        "isEmpty",
        "parts",
        "line",
        "split",
        "parts",
        "length",
        "totalSnps",
        "chromosome",
        "parts",
        "chromosomeDistribution",
        "merge",
        "chromosome",
        "sum",
        "includeSnpAnalysis",
        "snp",
        "snp",
        "put",
        "parts",
        "snp",
        "put",
        "parts",
        "snp",
        "put",
        "parts",
        "snp",
        "put",
        "parts",
        "snps",
        "add",
        "snp",
        "results",
        "put",
        "totalSnps",
        "results",
        "put",
        "chromosomeDistribution",
        "includeSnpAnalysis",
        "results",
        "put",
        "snps",
        "results",
        "filename",
        "filename",
        "lastDotIndex",
        "filename",
        "lastIndexOf",
        "lastDotIndex",
        "filename",
        "substring",
        "lastDotIndex"
    ],
    "literals": [
        "\"/api/v1\"",
        "\"*\"",
        "\"/status\"",
        "\"status\"",
        "\"online\"",
        "\"version\"",
        "\"1.0\"",
        "\"apiName\"",
        "\"DNAnalyzer API\"",
        "\"timestamp\"",
        "\"/analyze\"",
        "\"dnaFile\"",
        "\"amino\"",
        "\"M\"",
        "\"minCount\"",
        "\"1\"",
        "\"maxCount\"",
        "\"100\"",
        "\"reverse\"",
        "\"false\"",
        "\"rcomplement\"",
        "\"false\"",
        "\"codons\"",
        "\"false\"",
        "\"coverage\"",
        "\"false\"",
        "\"longest\"",
        "\"false\"",
        "\"format\"",
        "\"json\"",
        "\"error\"",
        "\"File is empty\"",
        "\"message\"",
        "\"Please provide a valid DNA sequence file\"",
        "\"error\"",
        "\"File too large\"",
        "\"message\"",
        "\"File size must be less than 50MB\"",
        "\"dna-\"",
        "\".fa\"",
        "\"error\"",
        "\"Invalid sequence\"",
        "\"message\"",
        "\"File contains invalid DNA sequence characters\"",
        "\"json\"",
        "\"csv\"",
        "\"json\"",
        "\"csv\"",
        "\"error\"",
        "\"Analysis failed\"",
        "\"message\"",
        "\"/base-pairs\"",
        "\"sequence\"",
        "\"error\"",
        "\"Invalid request\"",
        "\"message\"",
        "\"DNA sequence is required\"",
        "\"error\"",
        "\"Invalid sequence\"",
        "\"message\"",
        "\"Sequence contains invalid DNA characters\"",
        "\"A\"",
        "\"T\"",
        "\"G\"",
        "\"C\"",
        "\"Unknown\"",
        "\"A\"",
        "\"%.2f\"",
        "\"T\"",
        "\"%.2f\"",
        "\"G\"",
        "\"%.2f\"",
        "\"C\"",
        "\"%.2f\"",
        "\"Unknown\"",
        "\"%.2f\"",
        "\"counts\"",
        "\"percentages\"",
        "\"gcContent\"",
        "\"%.2f\"",
        "\"totalBases\"",
        "\"error\"",
        "\"Analysis failed\"",
        "\"message\"",
        "\"/find-proteins\"",
        "\"sequence\"",
        "\"aminoAcid\"",
        "\"error\"",
        "\"Invalid request\"",
        "\"message\"",
        "\"DNA sequence is required\"",
        "\"M\"",
        "\"error\"",
        "\"Invalid sequence\"",
        "\"message\"",
        "\"Sequence contains invalid DNA characters\"",
        "\"aminoAcid\"",
        "\"proteinCount\"",
        "\"proteins\"",
        "\"error\"",
        "\"Analysis failed\"",
        "\"message\"",
        "\"/reading-frames\"",
        "\"sequence\"",
        "\"minLength\"",
        "\"minLength\"",
        "\"error\"",
        "\"Invalid request\"",
        "\"message\"",
        "\"DNA sequence is required\"",
        "\"error\"",
        "\"Invalid sequence\"",
        "\"message\"",
        "\"Sequence contains invalid DNA characters\"",
        "\"direction\"",
        "\"forward\"",
        "\"reverse\"",
        "\"frame\"",
        "\"genes\"",
        "\"start\"",
        "\"end\"",
        "\"length\"",
        "\"frameCount\"",
        "\"frames\"",
        "\"sequenceLength\"",
        "\"error\"",
        "\"Invalid parameters\"",
        "\"message\"",
        "\"error\"",
        "\"Analysis failed\"",
        "\"message\"",
        "\"/analyze-genetic\"",
        "\"geneticFile\"",
        "\"snpAnalysis\"",
        "\"false\"",
        "\"error\"",
        "\"File is empty\"",
        "\"message\"",
        "\"Please provide a valid genetic testing data file\"",
        "\"error\"",
        "\"File too large\"",
        "\"message\"",
        "\"File size must be less than 50MB\"",
        "\"genetic-\"",
        "\".txt\"",
        "\"error\"",
        "\"Analysis failed\"",
        "\"message\"",
        "\"/manipulate\"",
        "\"sequence\"",
        "\"reverse\"",
        "\"complement\"",
        "\"error\"",
        "\"Invalid request\"",
        "\"message\"",
        "\"DNA sequence is required\"",
        "\"error\"",
        "\"Invalid sequence\"",
        "\"message\"",
        "\"Sequence contains invalid DNA characters\"",
        "\"M\"",
        "\"originalSequence\"",
        "\"modifiedSequence\"",
        "\"operations\"",
        "\"reverse\"",
        "\"complement\"",
        "\"error\"",
        "\"Manipulation failed\"",
        "\"message\"",
        "\"/parse\"",
        "\"file\"",
        "\"error\"",
        "\"File is empty\"",
        "\"message\"",
        "\"Please provide a valid file\"",
        "\"dna-parse-\"",
        "\"error\"",
        "\"Parse error\"",
        "\"message\"",
        "\"Unsupported file format or parsing error\"",
        "\"fileName\"",
        "\"fileSize\"",
        "\"sequenceLength\"",
        "\"sequence\"",
        "\"... [truncated] ...\"",
        "\"truncated\"",
        "\"sequence\"",
        "\"truncated\"",
        "\"error\"",
        "\"Parsing failed\"",
        "\"message\"",
        "\"\\\\s+\"",
        "\"\"",
        "\"^[ATCG]+$\"",
        "\"{\\\"results\\\": [\"",
        "\"\\n\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"\\\\\\\"\"",
        "\"\\\"\"",
        "\",\"",
        "\"]}\"",
        "\"\\n\"",
        "\",\"",
        "\";\"",
        "\";\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"\\n\"",
        "\"#\"",
        "\"\\t\"",
        "\"rsid\"",
        "\"chromosome\"",
        "\"position\"",
        "\"genotype\"",
        "\"totalSnps\"",
        "\"chromosomeDistribution\"",
        "\"snps\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "readingFrameAnalyzer",
        "line"
    ],
    "comments": [
        "Validate file",
        "Validate file size",
        "50MB",
        "Create temporary file",
        "Capture console output",
        "Read DNA sequence",
        "Validate DNA sequence",
        "Run analysis",
        "Get output",
        "Format output based on request",
        "Restore console output and cleanup",
        "Default to Methionine",
        "Fixed: Changed from getFrameOffset() to getOffset()",
        "Fixed: Changed from getPotentialGenes() to getGenes()",
        "Validate file",
        "Validate file size",
        "50MB",
        "Create temporary file",
        "Process genetic data",
        "Fixed: Use the correct accessor method for the dna field in the DNAAnalysis record",
        "Validate file",
        "Create temporary file",
        "Truncate the sequence if it's very long for the response",
        "Helper methods",
        "Remove whitespace and newlines",
        "Check if sequence contains only valid DNA characters",
        "Replace any commas in the data with semicolons",
        "Add quotes around fields containing semicolons",
        "Skip comments and headers",
        "Count chromosome distribution",
        "Collect SNP data if requested",
        "Build results"
    ],
    "docstrings": [
        "* REST API Controller for accessing all core DNAnalyzer features.\n * This provides a comprehensive API that can be called from the website.\n * \n * @version 1.0\n * @author DNAnalyzer Team",
        "* API health check endpoint\n     * \n     * @return Status information about the API",
        "* Analyze a DNA sequence with optional parameters\n     * \n     * @param dnaFile The DNA file to analyze\n     * @param amino The amino acid to search for\n     * @param minCount Minimum count for analysis\n     * @param maxCount Maximum count for analysis\n     * @param reverse Whether to reverse the DNA\n     * @param rcomplement Whether to get the reverse complement\n     * @param codons Whether to analyze codons\n     * @param coverage Whether to analyze coverage\n     * @param longest Whether to find the longest protein\n     * @param format Output format (text, json, csv)\n     * @return Analysis results",
        "* Analyze the base pair composition of a DNA sequence\n     * \n     * @param dnaSequence DNA sequence to analyze\n     * @return Base pair counts and percentages",
        "* Find proteins in a DNA sequence based on a specified amino acid\n     * \n     * @param request Request containing DNA sequence and amino acid\n     * @return List of found proteins",
        "* Analyze reading frames in a DNA sequence\n     * \n     * @param request Request containing DNA sequence and minimum length\n     * @return Reading frame analysis results",
        "* Process genetic data from services like 23andMe or AncestryDNA\n     * \n     * @param geneticFile Genetic data file\n     * @param snpAnalysis Whether to include detailed SNP analysis\n     * @return Analysis results",
        "* Manipulate DNA sequence (reverse, complement, etc.)\n     * \n     * @param request Request with sequence and operations\n     * @return Modified sequence",
        "* Parse a FASTA or FASTQ file and return the DNA sequence\n     * \n     * @param file The file to parse\n     * @return The parsed DNA sequence",
        "* Check if a DNA sequence contains only valid characters (A, T, G, C)",
        "* Format analysis output as JSON",
        "* Format analysis output as CSV",
        "* Process genetic data from services like 23andMe or AncestryDNA",
        "* Get file extension with dot"
    ],
    "functions": [
        "getStatus",
        "analyzeDNA",
        "analyzeBasePairs",
        "findProteins",
        "analyzeReadingFrames",
        "analyzeGeneticData",
        "manipulateDNA",
        "parseFile",
        "isValidDNASequence",
        "formatAsJson",
        "formatAsCsv",
        "processGeneticData",
        "getFileExtension"
    ],
    "classes": [
        "DNAnalyzerApiController"
    ]
}