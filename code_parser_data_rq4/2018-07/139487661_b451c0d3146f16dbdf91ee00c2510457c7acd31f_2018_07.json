{
    "identifiers": [
        "java",
        "io",
        "java",
        "util",
        "java",
        "text",
        "java",
        "net",
        "java",
        "nio",
        "com",
        "sun",
        "net",
        "httpserver",
        "org",
        "usb4java",
        "ztex",
        "bufsize",
        "cids",
        "bufsize",
        "messages",
        "bufsize",
        "id",
        "bufsize",
        "initialized",
        "idcnt",
        "initialized",
        "i",
        "i",
        "bufsize",
        "i",
        "id",
        "i",
        "initialized",
        "cid",
        "message",
        "cid",
        "initialize",
        "j",
        "k",
        "i",
        "i",
        "bufsize",
        "i",
        "id",
        "i",
        "id",
        "j",
        "j",
        "i",
        "id",
        "i",
        "cid",
        "equals",
        "cids",
        "i",
        "k",
        "i",
        "k",
        "messages",
        "k",
        "append",
        "message",
        "id",
        "j",
        "idcnt",
        "idcnt",
        "messages",
        "j",
        "message",
        "cids",
        "j",
        "cid",
        "cid",
        "cid",
        "initialize",
        "i",
        "i",
        "bufsize",
        "i",
        "id",
        "i",
        "cid",
        "equals",
        "cids",
        "i",
        "id",
        "i",
        "messages",
        "i",
        "timeout",
        "delay",
        "b",
        "off",
        "len",
        "cnt",
        "a",
        "len",
        "a",
        "a",
        "available",
        "to",
        "a",
        "to",
        "timeout",
        "sleep",
        "delay",
        "e",
        "a",
        "available",
        "to",
        "delay",
        "a",
        "len",
        "a",
        "len",
        "a",
        "read",
        "b",
        "off",
        "a",
        "off",
        "a",
        "len",
        "a",
        "cnt",
        "a",
        "cnt",
        "socket",
        "printer",
        "binOut",
        "s",
        "socket",
        "s",
        "DeviceServer",
        "addSocket",
        "socket",
        "start",
        "binOut",
        "binOut",
        "socket",
        "getOutputStream",
        "printer",
        "printer",
        "flush",
        "printer",
        "binOut",
        "binOut",
        "printer",
        "printer",
        "binOut",
        "socket",
        "getOutputStream",
        "binOut",
        "printer",
        "cmd",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "printer",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "all",
        "cmd",
        "equalsIgnoreCase",
        "b",
        "b",
        "cmd",
        "s",
        "buf",
        "start",
        "len",
        "l",
        "s",
        "s",
        "getBytes",
        "l",
        "min",
        "length",
        "len",
        "i",
        "i",
        "l",
        "i",
        "buf",
        "start",
        "i",
        "i",
        "i",
        "l",
        "i",
        "len",
        "i",
        "buf",
        "start",
        "i",
        "bin",
        "DeviceServer",
        "scanUSB",
        "n",
        "DeviceServer",
        "numberOfDevices",
        "bin",
        "buf",
        "binOut",
        "n",
        "n",
        "write",
        "n",
        "i",
        "i",
        "n",
        "i",
        "dev",
        "DeviceServer",
        "device",
        "i",
        "buf",
        "DeviceServer",
        "busIdx",
        "i",
        "buf",
        "DeviceServer",
        "devNum",
        "i",
        "buf",
        "dev",
        "valid",
        "buf",
        "dev",
        "productId",
        "buf",
        "dev",
        "productId",
        "buf",
        "dev",
        "productId",
        "buf",
        "dev",
        "productId",
        "str2bin",
        "dev",
        "snString",
        "buf",
        "str2bin",
        "dev",
        "manufacturerString",
        "buf",
        "str2bin",
        "dev",
        "productString",
        "buf",
        "write",
        "buf",
        "e",
        "flush",
        "printer",
        "n",
        "i",
        "i",
        "n",
        "i",
        "dev",
        "DeviceServer",
        "device",
        "i",
        "DeviceServer",
        "busIdx",
        "i",
        "DeviceServer",
        "devNum",
        "i",
        "LibUsb",
        "getPortNumber",
        "dev",
        "dev",
        "dev",
        "valid",
        "ZtexDevice1",
        "byteArrayString",
        "dev",
        "productId",
        "dev",
        "snString",
        "dev",
        "snString",
        "dev",
        "manufacturerString",
        "dev",
        "manufacturerString",
        "dev",
        "productString",
        "dev",
        "productString",
        "e",
        "busIdx",
        "devNum",
        "dev",
        "DeviceServer",
        "findDevice",
        "busIdx",
        "devNum",
        "eps",
        "DeviceServer",
        "getEps",
        "busIdx",
        "devNum",
        "dev",
        "busIdx",
        "devNum",
        "ztex",
        "dev",
        "printer",
        "LibUsb",
        "getPortNumber",
        "dev",
        "dev",
        "devNum",
        "toHexString",
        "dev",
        "usbVendorId",
        "toHexString",
        "dev",
        "usbProductId",
        "dev",
        "valid",
        "ZtexDevice1",
        "byteArrayString",
        "dev",
        "productId",
        "dev",
        "valid",
        "dev",
        "fwVersion",
        "dev",
        "snString",
        "dev",
        "snString",
        "dev",
        "manufacturerString",
        "dev",
        "manufacturerString",
        "dev",
        "productString",
        "dev",
        "productString",
        "s",
        "ztex",
        "capabilityInfo",
        "s",
        "length",
        "s",
        "ztex",
        "config",
        "ztex",
        "config",
        "getName",
        "ztex",
        "config",
        "getFpga",
        "ztex",
        "config",
        "getRamSize",
        "ztex",
        "config",
        "getRamSize",
        "ztex",
        "config",
        "getRamType",
        "s",
        "ztex",
        "flashInfo",
        "s",
        "length",
        "s",
        "s",
        "ztex",
        "flash2Info",
        "s",
        "length",
        "s",
        "s",
        "ztex",
        "getFpgaConfigurationStr",
        "s",
        "e",
        "eps",
        "i",
        "i",
        "eps",
        "size",
        "i",
        "ep",
        "eps",
        "elementAt",
        "i",
        "ep",
        "iface",
        "ep",
        "num",
        "ep",
        "ztex",
        "dispose",
        "bufSize",
        "maxArgs",
        "buf",
        "bufSize",
        "args",
        "maxArgs",
        "bufN",
        "argsN",
        "cid",
        "cid2",
        "noErrors",
        "socket",
        "getInputStream",
        "b",
        "b",
        "read",
        "b",
        "bufN",
        "argsN",
        "maxArgs",
        "args",
        "argsN",
        "buf",
        "bufN",
        "argsN",
        "bufN",
        "bufN",
        "bufSize",
        "buf",
        "bufN",
        "b",
        "bufN",
        "b",
        "b",
        "argsN",
        "e",
        "printer",
        "e",
        "getLocalizedMessage",
        "f",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "messages",
        "args",
        "indexOf",
        "i",
        "args",
        "lastIndexOf",
        "cid",
        "args",
        "substring",
        "i",
        "args",
        "args",
        "substring",
        "i",
        "ztex",
        "args",
        "equalsIgnoreCase",
        "DeviceServer",
        "quit",
        "args",
        "equalsIgnoreCase",
        "argsN",
        "printHelp",
        "i",
        "i",
        "argsN",
        "i",
        "printHelp",
        "args",
        "i",
        "args",
        "equalsIgnoreCase",
        "argsN",
        "argsN",
        "args",
        "equalsIgnoreCase",
        "args",
        "argsN",
        "noErrors",
        "scan",
        "argsN",
        "args",
        "equalsIgnoreCase",
        "argsN",
        "info",
        "valueOf",
        "args",
        "valueOf",
        "args",
        "args",
        "equalsIgnoreCase",
        "args",
        "equalsIgnoreCase",
        "argsN",
        "args",
        "vola",
        "nonvola",
        "erase",
        "force",
        "i",
        "i",
        "argsN",
        "i",
        "equalsIgnoreCase",
        "args",
        "i",
        "vola",
        "equalsIgnoreCase",
        "args",
        "i",
        "nonvola",
        "equalsIgnoreCase",
        "args",
        "i",
        "erase",
        "equalsIgnoreCase",
        "args",
        "i",
        "force",
        "args",
        "i",
        "busIdx",
        "valueOf",
        "args",
        "devNum",
        "valueOf",
        "args",
        "dev",
        "DeviceServer",
        "findDevice",
        "busIdx",
        "devNum",
        "dev",
        "busIdx",
        "devNum",
        "ztex",
        "dev",
        "args",
        "equalsIgnoreCase",
        "DeviceServer",
        "loadFirmware",
        "ztex",
        "messages",
        "IPPermissions",
        "toString",
        "socket",
        "getInetAddress",
        "force",
        "vola",
        "nonvola",
        "erase",
        "ndn",
        "LibUsb",
        "getDeviceAddress",
        "ztex",
        "dev",
        "dev",
        "ndn",
        "devNum",
        "messages",
        "append",
        "busIdx",
        "devNum",
        "busIdx",
        "ndn",
        "DeviceServer",
        "scanUSB",
        "DeviceServer",
        "loadBitstream",
        "ztex",
        "messages",
        "IPPermissions",
        "toString",
        "socket",
        "getInetAddress",
        "force",
        "vola",
        "nonvola",
        "erase",
        "args",
        "equalsIgnoreCase",
        "argsN",
        "busIdx",
        "valueOf",
        "args",
        "devNum",
        "valueOf",
        "args",
        "dev",
        "DeviceServer",
        "findDevice",
        "busIdx",
        "devNum",
        "dev",
        "busIdx",
        "devNum",
        "ztex",
        "dev",
        "eps",
        "DeviceServer",
        "getEps",
        "busIdx",
        "devNum",
        "DeviceServer",
        "epUpload",
        "ztex",
        "eps",
        "find",
        "valueOf",
        "args",
        "messages",
        "args",
        "equalsIgnoreCase",
        "noErrors",
        "argsN",
        "argsN",
        "busIdx",
        "valueOf",
        "args",
        "devNum",
        "valueOf",
        "args",
        "dev",
        "DeviceServer",
        "findDevice",
        "busIdx",
        "devNum",
        "dev",
        "busIdx",
        "devNum",
        "ztex",
        "dev",
        "eps",
        "DeviceServer",
        "getEps",
        "busIdx",
        "devNum",
        "max_size",
        "argsN",
        "valueOf",
        "args",
        "MAX_VALUE",
        "DeviceServer",
        "epDownload",
        "ztex",
        "eps",
        "find",
        "valueOf",
        "args",
        "binOut",
        "max_size",
        "messages",
        "binOut",
        "flush",
        "args",
        "equalsIgnoreCase",
        "cid2",
        "cid",
        "cid",
        "argsN",
        "argsN",
        "cid2",
        "args",
        "messages",
        "ErrorBuffer",
        "get",
        "cid2",
        "messages",
        "printer",
        "messages",
        "messages",
        "args",
        "e",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "ztex",
        "ztex",
        "dispose",
        "messages",
        "messages",
        "length",
        "noErrors",
        "printer",
        "messages",
        "ErrorBuffer",
        "add",
        "cid",
        "messages",
        "e",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "socket",
        "getInputStream",
        "close",
        "e",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "binOut",
        "binOut",
        "close",
        "printer",
        "printer",
        "close",
        "e",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "DeviceServer",
        "removeSocket",
        "socket",
        "socket",
        "close",
        "e",
        "DeviceServer",
        "error",
        "e",
        "getLocalizedMessage",
        "eol",
        "sep",
        "eof",
        "name",
        "fileName",
        "s",
        "buf",
        "s",
        "length",
        "eq",
        "eq",
        "s",
        "length",
        "eof",
        "i",
        "i",
        "read",
        "eof",
        "i",
        "e",
        "eof",
        "eof",
        "buf",
        "eq",
        "i",
        "buf",
        "eq",
        "s",
        "eq",
        "eq",
        "write",
        "buf",
        "eq",
        "e",
        "eq",
        "eof",
        "in_",
        "in_",
        "read",
        "read",
        "buf",
        "buf",
        "write",
        "eol",
        "eol",
        "length",
        "buf",
        "write",
        "buf",
        "write",
        "readTo",
        "buf",
        "eol",
        "sep",
        "buf",
        "toByteArray",
        "readTo",
        "eol",
        "e",
        "eof",
        "sep",
        "eof",
        "data",
        "sep",
        "lineBuf",
        "line",
        "name",
        "fileName",
        "readTo",
        "lineBuf",
        "eol",
        "line",
        "lineBuf",
        "toString",
        "i",
        "i",
        "line",
        "length",
        "line",
        "codePointAt",
        "i",
        "i",
        "line",
        "length",
        "i",
        "line",
        "substring",
        "i",
        "i",
        "equalsIgnoreCase",
        "tokens",
        "line",
        "split",
        "j",
        "j",
        "tokens",
        "length",
        "j",
        "t",
        "tokens",
        "j",
        "i",
        "t",
        "codePointAt",
        "i",
        "i",
        "t",
        "length",
        "i",
        "s",
        "t",
        "substring",
        "i",
        "i",
        "s",
        "equalsIgnoreCase",
        "s",
        "equalsIgnoreCase",
        "a",
        "t",
        "indexOf",
        "z",
        "t",
        "lastIndexOf",
        "a",
        "z",
        "a",
        "name",
        "t",
        "substring",
        "a",
        "z",
        "s",
        "t",
        "substring",
        "i",
        "i",
        "s",
        "equalsIgnoreCase",
        "s",
        "equalsIgnoreCase",
        "a",
        "t",
        "indexOf",
        "z",
        "t",
        "lastIndexOf",
        "a",
        "z",
        "a",
        "fileName",
        "t",
        "substring",
        "a",
        "z",
        "lineBuf",
        "reset",
        "line",
        "length",
        "eof",
        "eof",
        "readTo",
        "data",
        "sep",
        "result",
        "eof",
        "read",
        "read",
        "e",
        "eof",
        "result",
        "title",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "title",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "title",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "sb",
        "s",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "s",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "toString",
        "getBytes",
        "t",
        "t",
        "getRequestBody",
        "available",
        "i",
        "i",
        "read",
        "i",
        "i",
        "i",
        "h",
        "t",
        "getResponseHeaders",
        "h",
        "add",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "htmlConvert",
        "sb",
        "t",
        "form",
        "t",
        "getRequestBody",
        "data",
        "form",
        "readField",
        "data",
        "form",
        "name",
        "form",
        "fileName",
        "data",
        "data",
        "reset",
        "h",
        "t",
        "getResponseHeaders",
        "h",
        "add",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "htmlConvert",
        "sb",
        "t",
        "DeviceServer",
        "scanUSB",
        "n",
        "DeviceServer",
        "numberOfDevices",
        "h",
        "t",
        "getResponseHeaders",
        "h",
        "add",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "n",
        "sb",
        "append",
        "i",
        "i",
        "n",
        "i",
        "dev",
        "DeviceServer",
        "device",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "DeviceServer",
        "busIdx",
        "i",
        "DeviceServer",
        "devNum",
        "i",
        "DeviceServer",
        "busIdx",
        "i",
        "DeviceServer",
        "devNum",
        "i",
        "sb",
        "append",
        "LibUsb",
        "getPortNumber",
        "dev",
        "dev",
        "sb",
        "append",
        "dev",
        "valid",
        "ZtexDevice1",
        "byteArrayString",
        "dev",
        "productId",
        "sb",
        "append",
        "dev",
        "snString",
        "dev",
        "snString",
        "sb",
        "append",
        "dev",
        "manufacturerString",
        "dev",
        "manufacturerString",
        "sb",
        "append",
        "dev",
        "productString",
        "dev",
        "productString",
        "sb",
        "append",
        "e",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "htmlConvert",
        "sb",
        "t",
        "busIdx",
        "devNum",
        "epnum",
        "dev",
        "messages",
        "eps",
        "DeviceServer",
        "getEps",
        "busIdx",
        "devNum",
        "h",
        "t",
        "getResponseHeaders",
        "fw_force",
        "fw_upload_v",
        "fw_upload_nv",
        "fw_erase",
        "fw_data",
        "fw_data_name",
        "bs_force",
        "bs_upload_v",
        "bs_upload_nv",
        "bs_erase",
        "bs_data",
        "bs_data_name",
        "ep_data",
        "ep_data_name",
        "ep_data_num",
        "ep_down_size",
        "form",
        "t",
        "getRequestBody",
        "data",
        "form",
        "readField",
        "data",
        "data",
        "size",
        "form",
        "name",
        "equalsIgnoreCase",
        "fw_force",
        "form",
        "name",
        "equalsIgnoreCase",
        "fw_upload_v",
        "form",
        "name",
        "equalsIgnoreCase",
        "fw_upload_nv",
        "form",
        "name",
        "equalsIgnoreCase",
        "fw_erase",
        "form",
        "name",
        "equalsIgnoreCase",
        "fw_data",
        "data",
        "toByteArray",
        "fw_data_name",
        "IPPermissions",
        "toString",
        "t",
        "getRemoteAddress",
        "getAddress",
        "form",
        "fileName",
        "form",
        "name",
        "equalsIgnoreCase",
        "bs_force",
        "form",
        "name",
        "equalsIgnoreCase",
        "bs_upload_v",
        "form",
        "name",
        "equalsIgnoreCase",
        "bs_upload_nv",
        "form",
        "name",
        "equalsIgnoreCase",
        "bs_erase",
        "form",
        "name",
        "equalsIgnoreCase",
        "bs_data",
        "data",
        "toByteArray",
        "bs_data_name",
        "IPPermissions",
        "toString",
        "t",
        "getRemoteAddress",
        "getAddress",
        "form",
        "fileName",
        "form",
        "name",
        "equalsIgnoreCase",
        "ep_down_size",
        "valueOf",
        "data",
        "toString",
        "e",
        "ep_down_size",
        "i",
        "eps",
        "i",
        "eps",
        "size",
        "i",
        "ep",
        "eps",
        "elementAt",
        "i",
        "ep",
        "form",
        "name",
        "equalsIgnoreCase",
        "ep",
        "num",
        "ep_data",
        "data",
        "toByteArray",
        "ep_data_name",
        "IPPermissions",
        "toString",
        "t",
        "getRemoteAddress",
        "getAddress",
        "form",
        "fileName",
        "ep_data_num",
        "ep",
        "num",
        "data",
        "reset",
        "ztex",
        "ztex",
        "dev",
        "e",
        "ztex",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "oldDevNum",
        "devNum",
        "DeviceServer",
        "loadFirmware",
        "ztex",
        "messages",
        "fw_data",
        "fw_data_name",
        "fw_force",
        "fw_upload_v",
        "fw_upload_nv",
        "fw_erase",
        "ztex",
        "dev",
        "ztex",
        "dev",
        "devNum",
        "LibUsb",
        "getDeviceAddress",
        "dev",
        "dev",
        "devNum",
        "oldDevNum",
        "messages",
        "append",
        "busIdx",
        "oldDevNum",
        "busIdx",
        "devNum",
        "DeviceServer",
        "scanUSB",
        "eps",
        "DeviceServer",
        "getEps",
        "busIdx",
        "devNum",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "ztex",
        "DeviceServer",
        "loadBitstream",
        "ztex",
        "messages",
        "bs_data",
        "bs_data_name",
        "bs_force",
        "bs_upload_v",
        "bs_upload_nv",
        "bs_erase",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "ep_data",
        "DeviceServer",
        "epUpload",
        "ztex",
        "eps",
        "find",
        "ep_data_num",
        "ep_data",
        "messages",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "epnum",
        "DeviceServer",
        "epDownload",
        "ztex",
        "eps",
        "find",
        "epnum",
        "ep_down_size",
        "messages",
        "h",
        "add",
        "ztex",
        "dispose",
        "toByteArray",
        "e",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "h",
        "add",
        "sb",
        "htmlHeader",
        "busIdx",
        "devNum",
        "devNum",
        "oldDevNum",
        "busIdx",
        "oldDevNum",
        "sb",
        "append",
        "sb",
        "append",
        "busIdx",
        "sb",
        "append",
        "devNum",
        "sb",
        "append",
        "LibUsb",
        "getPortNumber",
        "dev",
        "dev",
        "sb",
        "append",
        "toHexString",
        "dev",
        "usbVendorId",
        "toHexString",
        "dev",
        "usbProductId",
        "sb",
        "append",
        "dev",
        "valid",
        "ZtexDevice1",
        "byteArrayString",
        "dev",
        "productId",
        "sb",
        "append",
        "dev",
        "valid",
        "dev",
        "fwVersion",
        "sb",
        "append",
        "dev",
        "snString",
        "dev",
        "snString",
        "sb",
        "append",
        "dev",
        "manufacturerString",
        "dev",
        "manufacturerString",
        "sb",
        "append",
        "dev",
        "productString",
        "dev",
        "productString",
        "ztex",
        "s",
        "ztex",
        "capabilityInfo",
        "s",
        "length",
        "sb",
        "append",
        "s",
        "ztex",
        "config",
        "sb",
        "append",
        "ztex",
        "config",
        "getName",
        "sb",
        "append",
        "ztex",
        "config",
        "getFpga",
        "ztex",
        "config",
        "getRamSize",
        "sb",
        "append",
        "ztex",
        "config",
        "getRamSize",
        "ztex",
        "config",
        "getRamType",
        "s",
        "ztex",
        "flashInfo",
        "s",
        "length",
        "sb",
        "append",
        "s",
        "s",
        "ztex",
        "flash2Info",
        "s",
        "length",
        "sb",
        "append",
        "s",
        "s",
        "ztex",
        "getFpgaConfigurationStr",
        "sb",
        "append",
        "s",
        "e",
        "ztex",
        "getUsb3Errors",
        "sb",
        "append",
        "ztex",
        "usb3SndErrors",
        "ztex",
        "usb3RcvErrors",
        "e",
        "sb",
        "append",
        "sb",
        "append",
        "heading",
        "sb",
        "sb",
        "append",
        "busIdx",
        "devNum",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "fw_upload_v",
        "sb",
        "append",
        "fw_upload_nv",
        "sb",
        "append",
        "fw_erase",
        "sb",
        "append",
        "fw_force",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "ztex",
        "ztex",
        "checkCapability",
        "ztex",
        "CAPABILITY_FPGA",
        "heading",
        "sb",
        "sb",
        "append",
        "busIdx",
        "devNum",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "bs_upload_v",
        "ztex",
        "ztex",
        "flashEnabled",
        "sb",
        "append",
        "bs_upload_nv",
        "sb",
        "append",
        "bs_erase",
        "a",
        "sb",
        "append",
        "bs_force",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "append",
        "a",
        "eps",
        "eps",
        "size",
        "heading",
        "sb",
        "sb",
        "append",
        "i",
        "i",
        "eps",
        "size",
        "i",
        "ep",
        "eps",
        "elementAt",
        "i",
        "ep",
        "sb",
        "append",
        "ep",
        "num",
        "busIdx",
        "devNum",
        "ep",
        "num",
        "sb",
        "append",
        "ep",
        "num",
        "busIdx",
        "devNum",
        "ep",
        "num",
        "sb",
        "append",
        "s",
        "ztex",
        "debug2GetNextLogMessage",
        "s",
        "sb2",
        "s",
        "sb2",
        "append",
        "s",
        "s",
        "ztex",
        "debug2GetNextLogMessage",
        "heading",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "sb2",
        "sb",
        "append",
        "e",
        "messages",
        "length",
        "heading",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "messages",
        "sb",
        "append",
        "ztex",
        "ztex",
        "dispose",
        "htmlConvert",
        "sb",
        "t",
        "path",
        "t",
        "getRequestURI",
        "getPath",
        "responseCode",
        "buf",
        "path",
        "charAt",
        "path",
        "path",
        "rcvd",
        "t",
        "getRequestBody",
        "available",
        "DeviceServer",
        "httpPermissions",
        "checkAddress",
        "t",
        "getRemoteAddress",
        "getAddress",
        "responseCode",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "buf",
        "htmlConvert",
        "sb",
        "path",
        "equalsIgnoreCase",
        "path",
        "equalsIgnoreCase",
        "buf",
        "scan",
        "t",
        "path",
        "indexOf",
        "i",
        "path",
        "indexOf",
        "j",
        "path",
        "lastIndexOf",
        "j",
        "i",
        "j",
        "path",
        "length",
        "busIdx",
        "valueOf",
        "path",
        "substring",
        "i",
        "devNum",
        "valueOf",
        "path",
        "substring",
        "i",
        "j",
        "epNum",
        "j",
        "path",
        "length",
        "valueOf",
        "path",
        "substring",
        "j",
        "dev",
        "DeviceServer",
        "findDevice",
        "busIdx",
        "devNum",
        "dev",
        "buf",
        "device",
        "t",
        "busIdx",
        "devNum",
        "epNum",
        "dev",
        "e",
        "responseCode",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "path",
        "sb",
        "append",
        "sb",
        "append",
        "buf",
        "htmlConvert",
        "sb",
        "responseCode",
        "sb",
        "htmlHeader",
        "sb",
        "append",
        "path",
        "sb",
        "append",
        "sb",
        "append",
        "buf",
        "htmlConvert",
        "sb",
        "DeviceServer",
        "info",
        "IPPermissions",
        "toString",
        "t",
        "getRemoteAddress",
        "getAddress",
        "path",
        "responseCode",
        "rcvd",
        "buf",
        "length",
        "t",
        "sendResponseHeaders",
        "responseCode",
        "buf",
        "length",
        "os",
        "t",
        "getResponseBody",
        "os",
        "write",
        "buf",
        "os",
        "close",
        "ip",
        "deny",
        "mask",
        "adrs",
        "strs",
        "adrs",
        "split",
        "ip",
        "strs",
        "length",
        "deny",
        "strs",
        "length",
        "mask",
        "strs",
        "length",
        "i",
        "i",
        "strs",
        "length",
        "i",
        "strs",
        "i",
        "length",
        "i",
        "deny",
        "i",
        "strs",
        "i",
        "charAt",
        "start",
        "deny",
        "i",
        "end",
        "strs",
        "i",
        "lastIndexOf",
        "end",
        "end",
        "strs",
        "i",
        "length",
        "ip",
        "i",
        "InetAddress",
        "getByName",
        "strs",
        "i",
        "substring",
        "start",
        "end",
        "getAddress",
        "mask",
        "i",
        "end",
        "strs",
        "i",
        "length",
        "parseInt",
        "strs",
        "i",
        "substring",
        "end",
        "ip",
        "i",
        "length",
        "e",
        "i",
        "strs",
        "i",
        "substring",
        "end",
        "rip",
        "allow",
        "i",
        "i",
        "ip",
        "length",
        "i",
        "ip",
        "i",
        "length",
        "rip",
        "length",
        "eq",
        "j",
        "j",
        "rip",
        "length",
        "j",
        "k",
        "max",
        "j",
        "mask",
        "i",
        "eq",
        "eq",
        "ip",
        "i",
        "j",
        "k",
        "rip",
        "j",
        "k",
        "eq",
        "allow",
        "deny",
        "i",
        "allow",
        "adr",
        "checkAddress",
        "adr",
        "getAddress",
        "ip",
        "sb",
        "ip",
        "length",
        "ip",
        "length",
        "i",
        "i",
        "ip",
        "length",
        "i",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "ip",
        "i",
        "i",
        "i",
        "ip",
        "length",
        "i",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "toString",
        "ip",
        "i",
        "ip",
        "i",
        "sb",
        "toString",
        "adr",
        "toString",
        "adr",
        "getAddress",
        "sb",
        "i",
        "i",
        "ip",
        "length",
        "i",
        "i",
        "sb",
        "append",
        "deny",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "toString",
        "ip",
        "i",
        "mask",
        "i",
        "sb",
        "toString",
        "iface",
        "bulk",
        "num",
        "size",
        "p_iface",
        "p_in",
        "p_num",
        "p_bulk",
        "p_size",
        "iface",
        "p_iface",
        "p_in",
        "num",
        "p_num",
        "bulk",
        "p_bulk",
        "size",
        "p_size",
        "num",
        "iface",
        "bulk",
        "size",
        "num",
        "i",
        "i",
        "size",
        "i",
        "elementAt",
        "i",
        "num",
        "num",
        "elementAt",
        "i",
        "maxConnections",
        "msgDateFormat",
        "usbVendorId",
        "ZtexDevice1",
        "ztexVendorId",
        "usbProductId",
        "cypress",
        "httpPort",
        "socketPort",
        "quit",
        "socketVector",
        "verbose",
        "quiet",
        "scanAllInterfaces",
        "logFile",
        "log2File",
        "httpPermissions",
        "socketPermissions",
        "httpBind",
        "socketBind",
        "scanBus",
        "busIdx",
        "devNum",
        "confNum",
        "eps",
        "socket",
        "info",
        "IPPermissions",
        "toString",
        "socket",
        "getInetAddress",
        "socketVector",
        "addElement",
        "socket",
        "socket",
        "info",
        "IPPermissions",
        "toString",
        "socket",
        "getInetAddress",
        "socketVector",
        "remove",
        "socket",
        "httpPermissions",
        "ms",
        "sleep",
        "ms",
        "e",
        "msg",
        "verbose",
        "err",
        "msg",
        "log2File",
        "log2File",
        "msgDateFormat",
        "format",
        "msg",
        "msg",
        "quiet",
        "err",
        "msg",
        "logFile",
        "logFile",
        "msgDateFormat",
        "format",
        "msg",
        "log2File",
        "log2File",
        "msgDateFormat",
        "format",
        "msg",
        "info",
        "scanBus",
        "scanBus",
        "unref",
        "scanBus",
        "usbVendorId",
        "usbProductId",
        "cypress",
        "n",
        "scanBus",
        "numberOfDevices",
        "n",
        "busIdx",
        "n",
        "devNum",
        "n",
        "confNum",
        "n",
        "eps",
        "n",
        "i",
        "i",
        "n",
        "i",
        "dev",
        "scanBus",
        "device",
        "i",
        "dev",
        "busIdx",
        "i",
        "LibUsb",
        "getBusNumber",
        "dev",
        "devNum",
        "i",
        "LibUsb",
        "getDeviceAddress",
        "dev",
        "confNum",
        "i",
        "eps",
        "i",
        "dd",
        "result",
        "LibUsb",
        "getDeviceDescriptor",
        "dev",
        "dd",
        "result",
        "LibUsb",
        "SUCCESS",
        "dd",
        "bNumConfigurations",
        "cd",
        "result",
        "LibUsb",
        "getConfigDescriptor",
        "dev",
        "cd",
        "result",
        "LibUsb",
        "SUCCESS",
        "confNum",
        "i",
        "cd",
        "bConfigurationValue",
        "kn",
        "min",
        "scanAllInterfaces",
        "cd",
        "bNumInterfaces",
        "k",
        "k",
        "kn",
        "k",
        "iface",
        "cd",
        "iface",
        "k",
        "iface",
        "numAltsetting",
        "desc",
        "iface",
        "altsetting",
        "desc",
        "bNumEndpoints",
        "epd",
        "desc",
        "endpoint",
        "j",
        "j",
        "epd",
        "length",
        "j",
        "t",
        "epd",
        "j",
        "bmAttributes",
        "LibUsb",
        "TRANSFER_TYPE_MASK",
        "t",
        "LibUsb",
        "TRANSFER_TYPE_BULK",
        "t",
        "LibUsb",
        "TRANSFER_TYPE_INTERRUPT",
        "eps",
        "i",
        "addElement",
        "k",
        "epd",
        "j",
        "bEndpointAddress",
        "epd",
        "j",
        "bEndpointAddress",
        "t",
        "LibUsb",
        "TRANSFER_TYPE_BULK",
        "epd",
        "j",
        "wMaxPacketSize",
        "e",
        "scanBus",
        "scanBus",
        "unref",
        "scanBus",
        "ztex",
        "messages",
        "inName",
        "force",
        "toVolatile",
        "toNonVolatile",
        "eraseNV",
        "ztex",
        "eraseNV",
        "eraseNV",
        "toNonVolatile",
        "toVolatile",
        "toNonVolatile",
        "imgFile",
        "inName",
        "toVolatile",
        "i",
        "ztex",
        "uploadFirmware",
        "imgFile",
        "force",
        "messages",
        "messages",
        "append",
        "i",
        "toNonVolatile",
        "i",
        "ztex",
        "nvUploadFirmware",
        "imgFile",
        "force",
        "messages",
        "messages",
        "append",
        "i",
        "eraseNV",
        "ztex",
        "nvDisableFirmware",
        "messages",
        "messages",
        "append",
        "ztex",
        "messages",
        "buf",
        "inName",
        "force",
        "toVolatile",
        "toNonVolatile",
        "eraseFlash",
        "ztex",
        "eraseFlash",
        "eraseFlash",
        "toNonVolatile",
        "toVolatile",
        "toNonVolatile",
        "buf",
        "toVolatile",
        "i",
        "ztex",
        "configureFpga",
        "buf",
        "force",
        "messages",
        "messages",
        "append",
        "i",
        "toNonVolatile",
        "i",
        "ztex",
        "flashUploadBitstream",
        "buf",
        "messages",
        "messages",
        "append",
        "i",
        "eraseFlash",
        "ztex",
        "flashResetBitstream",
        "messages",
        "messages",
        "append",
        "ztex",
        "messages",
        "inName",
        "force",
        "toVolatile",
        "toNonVolatile",
        "eraseFlash",
        "buf",
        "i",
        "i",
        "read",
        "buf",
        "i",
        "write",
        "buf",
        "i",
        "i",
        "loadBitstream",
        "ztex",
        "messages",
        "toByteArray",
        "inName",
        "force",
        "toVolatile",
        "toNonVolatile",
        "eraseFlash",
        "ztex",
        "iface",
        "messages",
        "c",
        "i",
        "i",
        "scanBus",
        "numberOfDevices",
        "i",
        "scanBus",
        "device",
        "i",
        "ztex",
        "dev",
        "c",
        "confNum",
        "i",
        "ztex",
        "setConfiguration",
        "c",
        "e",
        "messages",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "ztex",
        "claimInterface",
        "iface",
        "e",
        "messages",
        "messages",
        "append",
        "e",
        "getLocalizedMessage",
        "ztex",
        "ep",
        "messages",
        "ztex",
        "ep",
        "ep",
        "ztex",
        "dev",
        "dev",
        "claim",
        "ztex",
        "ep",
        "iface",
        "messages",
        "bufSize",
        "buffer",
        "BufferUtils",
        "allocateByteBuffer",
        "bufSize",
        "transferred",
        "BufferUtils",
        "allocateIntBuffer",
        "buf",
        "bufSize",
        "r",
        "i",
        "result",
        "LibUsb",
        "SUCCESS",
        "r",
        "i",
        "max",
        "read",
        "buf",
        "r",
        "buffer",
        "put",
        "buf",
        "r",
        "tmpbuf",
        "r",
        "bufSize",
        "buffer",
        "BufferUtils",
        "buffer",
        "r",
        "result",
        "ep",
        "bulk",
        "LibUsb",
        "bulkTransfer",
        "ztex",
        "handle",
        "ep",
        "num",
        "tmpbuf",
        "transferred",
        "LibUsb",
        "interruptTransfer",
        "ztex",
        "handle",
        "ep",
        "num",
        "tmpbuf",
        "transferred",
        "i",
        "transferred",
        "get",
        "transferred",
        "clear",
        "buffer",
        "clear",
        "r",
        "r",
        "i",
        "result",
        "LibUsb",
        "SUCCESS",
        "result",
        "LibUsb",
        "SUCCESS",
        "result",
        "r",
        "i",
        "i",
        "r",
        "ztex",
        "ep",
        "maxSize",
        "messages",
        "ztex",
        "ep",
        "ep",
        "ztex",
        "dev",
        "dev",
        "maxSize",
        "maxSize",
        "MAX_VALUE",
        "claim",
        "ztex",
        "ep",
        "iface",
        "messages",
        "bufSize",
        "buffer",
        "BufferUtils",
        "allocateByteBuffer",
        "bufSize",
        "transferred",
        "BufferUtils",
        "allocateIntBuffer",
        "buf",
        "bufSize",
        "r",
        "i",
        "result",
        "LibUsb",
        "SUCCESS",
        "r",
        "min",
        "bufSize",
        "maxSize",
        "maxSize",
        "r",
        "buffer",
        "limit",
        "r",
        "result",
        "ep",
        "bulk",
        "LibUsb",
        "bulkTransfer",
        "ztex",
        "handle",
        "ep",
        "num",
        "buffer",
        "transferred",
        "LibUsb",
        "interruptTransfer",
        "ztex",
        "handle",
        "ep",
        "num",
        "buffer",
        "transferred",
        "i",
        "min",
        "r",
        "transferred",
        "get",
        "result",
        "LibUsb",
        "SUCCESS",
        "i",
        "buffer",
        "get",
        "buf",
        "i",
        "write",
        "buf",
        "i",
        "buffer",
        "clear",
        "transferred",
        "clear",
        "maxSize",
        "r",
        "i",
        "result",
        "LibUsb",
        "SUCCESS",
        "result",
        "LibUsb",
        "SUCCESS",
        "result",
        "scanBus",
        "numberOfDevices",
        "i",
        "scanBus",
        "device",
        "i",
        "b",
        "d",
        "n",
        "numberOfDevices",
        "i",
        "i",
        "n",
        "i",
        "busIdx",
        "i",
        "b",
        "devNum",
        "i",
        "d",
        "scanBus",
        "device",
        "i",
        "e",
        "i",
        "i",
        "i",
        "busIdx",
        "length",
        "busIdx",
        "length",
        "busIdx",
        "i",
        "i",
        "i",
        "i",
        "devNum",
        "length",
        "devNum",
        "length",
        "devNum",
        "i",
        "b",
        "d",
        "n",
        "numberOfDevices",
        "i",
        "i",
        "n",
        "i",
        "busIdx",
        "i",
        "b",
        "devNum",
        "i",
        "d",
        "eps",
        "i",
        "e",
        "args",
        "helpMsg",
        "getProperty",
        "equalsIgnoreCase",
        "Runtime",
        "getRuntime",
        "addShutdownHook",
        "s",
        "s",
        "nextLine",
        "i",
        "i",
        "args",
        "length",
        "i",
        "args",
        "i",
        "equals",
        "cypress",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "usbVendorId",
        "decode",
        "args",
        "i",
        "e",
        "err",
        "err",
        "helpMsg",
        "exit",
        "i",
        "i",
        "args",
        "length",
        "usbProductId",
        "decode",
        "args",
        "i",
        "e",
        "err",
        "err",
        "helpMsg",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "httpPort",
        "parseInt",
        "args",
        "i",
        "e",
        "err",
        "err",
        "helpMsg",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "socketPort",
        "parseInt",
        "args",
        "i",
        "e",
        "err",
        "err",
        "helpMsg",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "httpPermissions",
        "args",
        "i",
        "e",
        "err",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "socketPermissions",
        "args",
        "i",
        "e",
        "err",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "httpBind",
        "args",
        "i",
        "e",
        "err",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "socketBind",
        "args",
        "i",
        "e",
        "err",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "httpBind",
        "args",
        "i",
        "e",
        "err",
        "exit",
        "args",
        "i",
        "equals",
        "verbose",
        "args",
        "i",
        "equals",
        "quiet",
        "args",
        "i",
        "equals",
        "scanAllInterfaces",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "err",
        "err",
        "helpMsg",
        "exit",
        "logFile",
        "args",
        "i",
        "e",
        "err",
        "e",
        "getLocalizedMessage",
        "err",
        "helpMsg",
        "exit",
        "args",
        "i",
        "equals",
        "i",
        "i",
        "args",
        "length",
        "err",
        "err",
        "helpMsg",
        "exit",
        "log2File",
        "args",
        "i",
        "e",
        "err",
        "e",
        "getLocalizedMessage",
        "err",
        "helpMsg",
        "exit",
        "args",
        "i",
        "equals",
        "err",
        "helpMsg",
        "exit",
        "err",
        "args",
        "i",
        "err",
        "helpMsg",
        "exit",
        "httpPort",
        "socketPort",
        "error",
        "exit",
        "scanUSB",
        "httpServer",
        "httpPort",
        "error",
        "httpPort",
        "httpPermissions",
        "httpServer",
        "HttpServer",
        "create",
        "httpBind",
        "httpPort",
        "InetAddress",
        "getByName",
        "httpBind",
        "httpPort",
        "httpServer",
        "createContext",
        "httpServer",
        "setExecutor",
        "httpServer",
        "start",
        "socketPort",
        "error",
        "socketPort",
        "socketPermissions",
        "ss",
        "socketBind",
        "socketPort",
        "socketPort",
        "InetAddress",
        "getByName",
        "socketBind",
        "ss",
        "setSoTimeout",
        "quit",
        "socketVector",
        "size",
        "maxConnections",
        "cs",
        "ss",
        "accept",
        "socketPermissions",
        "checkAddress",
        "cs",
        "getInetAddress",
        "cs",
        "info",
        "IPPermissions",
        "toString",
        "cs",
        "getInetAddress",
        "e",
        "sleep",
        "quit",
        "sleep",
        "httpServer",
        "httpServer",
        "stop",
        "e",
        "error",
        "e",
        "getLocalizedMessage",
        "unref"
    ],
    "literals": [
        "\"all\"",
        "\"help\"",
        "\"Supported commands:\\n\"",
        "\"  scan     Scan buses\\n\"",
        "\"  info     Print device capabilities\\n\"",
        "\"  upload   Upload firmware\\n\"",
        "\"  config   Configure FPGA\\n\"",
        "\"  read     Read data from given endpoint\\n\"",
        "\"  write    Write data to given endpoint\\n\"",
        "\"  errors   Returns errors\\n\"",
        "\"  help     Help\\n\"",
        "\"  quit     Quit Device Server\\n\"",
        "\"\\n\"",
        "\"See help <command>|all  for detailed info\\n\"",
        "\"scan\"",
        "\"[<cid:>]scan [-bin]\\n\"",
        "\"  (Re)scan buses and returns the device list. If <cid> and -bin are specified\\n\"",
        "\"  errors are stored and can be read out using \\\"errors <cid>\\\". If -bin is not\\n\"",
        "\"  specified errors are returned directly.\\n\"",
        "\"    -bin   print it in (computer friendly) binary format\\n\"",
        "\"info\"",
        "\"info <bus index> <device number>\\n\"",
        "\"  Returns device capabilities.\\n\"",
        "\"upload\"",
        "\"upload <bus index> <device number> [-v] [-nv] [-e] [-f]\\n\"",
        "\"  Upload firmware to USB controller. Returns errors, if any.\\n\"",
        "\"    -v   upload to volatile memory (default if neither -nv nor -env is given)\\n\"",
        "\"    -nv  upload to non-volatile memory\\n\"",
        "\"    -e   erase / disable firmware in non-volatile memory\\n\"",
        "\"    -f   force upload of incompatible firmware\\n\"",
        "\"config\"",
        "\"config <bus index> <device number> [-v] [-nv] [-e] [-f]\\n\"",
        "\"  Configure FPGA. Returns errors, if any.\\n\"",
        "\"    -v    upload to volatile memory (default if -nv is not given)\\n\"",
        "\"    -nv   upload to non-volatile memory\\n\"",
        "\"    -e    erase / disable bitstream in non-volatile memory\\n\"",
        "\"    -f    force upload if already configured\\n\"",
        "\"read\"",
        "\"[<cid>:]read <bus index> <device number> <ep> [<max. bytes>]\\n\"",
        "\"  Read data from endpoint and returns them. If <max. bytes> if not specified\\n\"",
        "\"  data is read until end. If <cid> is specified errors are stored and can be\\n\"",
        "\"  read out using \\\"errors <cid>\\\" \\n\"",
        "\"write\"",
        "\"write <bus number> <device number> <ep>\\n\"",
        "\"  write data to endpoint. Returns errors, if any.\\n\"",
        "\"errors\"",
        "\"errors <cid>\\n\"",
        "\"  Returns errors stored under <cid>.\\n\"",
        "\"quit\"",
        "\"quit\\n\"",
        "\"  Quit Device Server\\n\"",
        "\"No help available for command \"",
        "\"\\n\"",
        "\"(No devices)\"",
        "\"# <busIdx>:<devNum>\t<port>\t<product ID'S>\t<serial number string>\t<manufacturer string>\t<product name>\"",
        "\":\"",
        "\"\t\"",
        "\"\t\"",
        "\"\t(unconfigured)\"",
        "\"\t\\\"\"",
        "\"\"",
        "\"\\\"\"",
        "\"\t\\\"\"",
        "\"\"",
        "\"\\\"\"",
        "\"\t\\\"\"",
        "\"\"",
        "\"\\\"\"",
        "\"Device \"",
        "\":\"",
        "\" not found\"",
        "\"Port: \"",
        "\"Device Number: \"",
        "\"USB ID's: \"",
        "\":\"",
        "\"Product ID's: \"",
        "\"(unconfigured)\"",
        "\"Firmware version: \"",
        "\"\"",
        "\"Serial Number String: \"",
        "\"\"",
        "\"Manufacturer String: \"",
        "\"\"",
        "\"Product String: \"",
        "\"\"",
        "\"\\nCapability: \"",
        "\"Capability: \"",
        "\"ZTEX Product: \"",
        "\"FPGA: \"",
        "\"RAM: \"",
        "\" MByte \"",
        "\"Flash: \"",
        "\"2nd Flash: \"",
        "\"FPGA State: \"",
        "\"Interface \"",
        "\" Endpoint: \"",
        "\" \"",
        "\"read\"",
        "\"write\"",
        "\"\"",
        "\"Error reading command: Argument buffer overflow\"",
        "\"Error reading command: Buffer overflow\"",
        "\"Command missed\"",
        "\"Error: \"",
        "\"Error: \"",
        "\"quit\"",
        "\"help\"",
        "\"help\"",
        "\"scan\"",
        "\"scan: to much parameters\"",
        "\"-bin\"",
        "\"scan: invalid parameter: \"",
        "\"info\"",
        "\"info: invalid number of parameters\"",
        "\"upload\"",
        "\"config\"",
        "\": to less parameters\"",
        "\"-v\"",
        "\"-nv\"",
        "\"-e\"",
        "\"-f\"",
        "\"Invalid parameter: \"",
        "\"Device \"",
        "\":\"",
        "\" not found\"",
        "\"upload\"",
        "\"Device re-numerated: \"",
        "\":\"",
        "\" -> \"",
        "\":\"",
        "\"\\n\"",
        "\"write\"",
        "\"write: invalid number of parameters\"",
        "\"Device \"",
        "\":\"",
        "\" not found\"",
        "\"read\"",
        "\"read: invalid number of parameters\"",
        "\"Device \"",
        "\":\"",
        "\" not found\"",
        "\"errors\"",
        "\"errors: to much parameters\"",
        "\"Invalid command: \"",
        "\"Error: \"",
        "\"Error: Number expected: \"",
        "\"\\n\"",
        "\"Error: \"",
        "\"\\n\"",
        "\"Error2: \"",
        "\"Error closing input stream: \"",
        "\"Error closing output stream: \"",
        "\"Error closing output socket: \"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Content-Disposition\"",
        "\";\"",
        "\"name \"",
        "\"name=\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"filename \"",
        "\"filename=\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD HTML 4.01 Transitional//EN\\\" \\\"http://www.w3.org/TR/html4/loose.dtd\\\">\\n\"",
        "\"<html>\\n\"",
        "\"<head>\\n\"",
        "\"  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=iso-8859-1\\\">\\n\"",
        "\"  <meta http-equiv=\\\"Content-Language\\\" content=\\\"en\\\">\\n\"",
        "\"  <meta name=\\\"author\\\" content=\\\"ZTEX GmbH\\\">\\n\"",
        "\"<title>\"",
        "\"</title>\\n\"",
        "\"<style type=\\\"text/css\\\">\\n\"",
        "\"body { background-color:#f0f0f0; color:#202020; font-family:Helvetica,Helv,sans-serif; font-size:11pt}\\n\"",
        "\"a:link { color:#2020a0; }\\n\"",
        "\"a:visited { color:#a02020; }\\n\"",
        "\"a:active { color:#208020; }\\n\"",
        "\"a.topmenu { color:#ffffff; font-size:12pt; text-decoration:none; font-weight:bold }\\n\"",
        "\"a.topmenu:link { color:#ffffff; }\\n\"",
        "\"a.topmenu:visited { color:#ffffff; }\\n\"",
        "\"a.topmenu:hover { color:#202020; }\\n\"",
        "\"</style>\\n\"",
        "\"</head>\\n\"",
        "\"<body>\\n\"",
        "\"<center><table border=0 bgcolor=\\\"#7870a0\\\" cellpadding=2 cellspacing=0><tr><td>\\n\"",
        "\"<table border=0 bgcolor=\\\"#eae6ff\\\" cellpadding=5 cellspacing=10>\\n\"",
        "\"  <tr><th bgcolor=\\\"#cac4ec\\\">\\n\"",
        "\"    <span style=\\\"font-size:125%\\\">\"",
        "\"</span>\\n\"",
        "\"  </th></tr>\\n\"",
        "\"  <tr><td align=center>\\n\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><th bgcolor=\\\"#cac4ec\\\">\\n\"",
        "\"    <span style=\\\"font-size:125%\\\">\"",
        "\"</span>\\n\"",
        "\"  </th></tr>\\n\"",
        "\"  <tr><td align=center>\\n\"",
        "\"</td></tr>\\n\"",
        "\"</table>\\n\"",
        "\"</td></tr></table><center>\\n\"",
        "\"<p>\\n\"",
        "\"<hr>\\n\"",
        "\"<center>\\n\"",
        "\"  <a href=\\\"http://www.ztex.de/\\\">[ZTEX Homepage]</a>&nbsp;\\n\"",
        "\"  <a href=\\\"http://wiki.ztex.de/\\\">[ZTEX Wiki]</a>&nbsp;\\n\"",
        "\"  <span style=\\\"font-size:80%\\\">&#169; ZTEX GmbH</span>\\n\"",
        "\"</center>\\n\"",
        "\"</body></html>\"",
        "\"Request Body: \"",
        "\"Bytes\"",
        "\"Content-Type\"",
        "\"text/html;Charset=iso-8859-1\"",
        "\"Test\"",
        "\"<form action=\\\"/test\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\"",
        "\"  <p>W&auml;hlen Sie eine Textdatei (txt, html usw.) von Ihrem Rechner aus:<br>\\n\"",
        "\"    <input name=\\\"Datei\\\" type=\\\"file\\\" size=\\\"50\\\" maxlength=\\\"100000\\\" >\\n\"",
        "\"  </p>\\n\"",
        "\"  <input type=\\\"checkbox\\\" name=\\\"upload_to\\\" value=\\\"v\\\">Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"  <input type=\\\"checkbox\\\" name=\\\"upload_to\\\" value=\\\"v\\\">Non-Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\"",
        "\"</form>\\n\"",
        "\"Name=\\\"\"",
        "\"\\\"\"",
        "\"Filename=\\\"\"",
        "\"\\\"\"",
        "\"Data -->\"",
        "\"<--\"",
        "\"Content-Type\"",
        "\"text/html;Charset=iso-8859-1\"",
        "\"Test2\"",
        "\"<form action=\\\"/test2\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\"",
        "\"  <p>W&auml;hlen Sie eine Textdatei (txt, html usw.) von Ihrem Rechner aus:<br>\\n\"",
        "\"    <input name=\\\"Datei\\\" type=\\\"file\\\" size=\\\"50\\\" maxlength=\\\"100000\\\" >\\n\"",
        "\"  </p>\\n\"",
        "\"  <input type=\\\"checkbox\\\" name=\\\"upload_to\\\" value=\\\"v\\\">Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"  <input type=\\\"checkbox\\\" name=\\\"upload_to\\\" value=\\\"nv\\\">Non-Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\"",
        "\"</form>\\n\"",
        "\"Content-Type\"",
        "\"text/html;Charset=iso-8859-1\"",
        "\"Device overview\"",
        "\"<table border=\\\"0\\\" bgcolor=\\\"#808080\\\" cellspacing=1 cellpadding=4>\\n\"",
        "\"  <tr>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Device Link / <br> &lt;Bus Index&gt;:&lt;Device Number&gt;</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Port</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Product ID's</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Serial Number String</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Manufacturer String</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#e0e0e0\\\">Product String</td>\\n\"",
        "\"  </tr>\\n\"",
        "\"<tr><td align=center bgcolor=\\\"#f0f0f0\\\" colspan=6>(No devices)</td>\"",
        "\"    <tr>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\"><a href=\\\"/\"",
        "\":\"",
        "\"\\\">\"",
        "\":\"",
        "\"</a></td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\">\"",
        "\"(unconfigured)\"",
        "\"</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td>\\n\"",
        "\"    <td align=center bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td>\\n\"",
        "\"  </tr>\\n\"",
        "\"</table>\\n\"",
        "\"<p>\\n\"",
        "\"<a href=\\\"/scan\\\"><button>Re-Scan</button></a>\\n\"",
        "\"fw_force\"",
        "\"fw_upload_v\"",
        "\"fw_upload_nv\"",
        "\"fw_erase\"",
        "\"fw_data\"",
        "\":\"",
        "\"bs_force\"",
        "\"bs_upload_v\"",
        "\"bs_upload_nv\"",
        "\"bs_erase\"",
        "\"bs_data\"",
        "\":\"",
        "\"ep_down_size\"",
        "\"ep_\"",
        "\"_data\"",
        "\":\"",
        "\"Error: \"",
        "\"\\n\"",
        "\"Device re-numerated: \"",
        "\":\"",
        "\" -> \"",
        "\":\"",
        "\"\\n\"",
        "\"Error: \"",
        "\"Error: \"",
        "\"Error: \"",
        "\"Content-Type\"",
        "\"application/octet-stream\"",
        "\"Error: \"",
        "\"Content-Type\"",
        "\"text/html;Charset=iso-8859-1\"",
        "\"Device \"",
        "\":\"",
        "\" (was \"",
        "\":\"",
        "\")\"",
        "\"\"",
        "\"<table border=\\\"0\\\" bgcolor=\\\"#808080\\\" cellspacing=1 cellpadding=4>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Bus number: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Device Number: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Port: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> USB ID's: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\":\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Product ID's: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"(unconfigured)\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Firmware version: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Serial Number String: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Manufacturer String: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Product String: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"\"",
        "\"</td></tr>\\n\"",
        "\", \"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Capabilities: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> ZTEX Product: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> FPGA: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> RAM: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\" MByte \"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> Flash: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> 2nd Flash: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> FPGA State: </td><td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"</td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> USB 3.0 Errors: </td><td align=left bgcolor=\\\"#f0f0f0\\\"> Send errors: \"",
        "\", receive errors: \"",
        "\"</td></tr>\\n\"",
        "\"</table>\\n\"",
        "\"<p><a href=\\\"/\\\"><button>Device Overview</button></a>\\n\"",
        "\"Firmware Upload\"",
        "\"<form action=\\\"/\"",
        "\":\"",
        "\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\"",
        "\"  <div align=left>\\n\"",
        "\"    Firmware file: <input name=\\\"fw_data\\\" type=\\\"file\\\" size=\\\"70\\\" accept=\\\".ihx\\\" maxlength=\\\"5000000\\\"><p>\\n\"",
        "\"  \t<input type=\\\"checkbox\\\" name=\\\"fw_upload_v\\\" value=\\\"x\\\" \"",
        "\"checked\"",
        "\"\"",
        "\">Upload to volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"fw_upload_nv\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Upload to non-Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"fw_erase\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Erase firmware in non-volatile memory\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"fw_force\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Enforce upload<p>\"",
        "\"    (Before firmware can be loaded into non-volatile memory some firmware must be installed in volatile memory.)<p>\\n\"",
        "\"  </div>\\n\"",
        "\"  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\"",
        "\"</form>\\n\"",
        "\"Bitstream Upload\"",
        "\"<form action=\\\"/\"",
        "\":\"",
        "\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n\"",
        "\"  <div align=left>\\n\"",
        "\"    Bitstream file: <input name=\\\"bs_data\\\" type=\\\"file\\\" size=\\\"70\\\" accept=\\\".bit\\\" maxlength=\\\"5000000\\\"><p>\\n\"",
        "\"  \t<input type=\\\"checkbox\\\" name=\\\"bs_upload_v\\\" value=\\\"x\\\" \"",
        "\"checked\"",
        "\"\"",
        "\">Upload to volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"bs_upload_nv\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Upload to non-Volatile Memory &nbsp;&nbsp;&nbsp;&nbsp;\\n\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"bs_erase\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Erase bitstream in non-volatile memory\"",
        "\"    <input type=\\\"checkbox\\\" name=\\\"bs_force\\\" value=\\\"x\\\"\"",
        "\"checked\"",
        "\"\"",
        "\">Enforce upload<p>\"",
        "\"  </div>\\n\"",
        "\"  <input type=\\\"submit\\\" value=\\\"Submit\\\">\\n\"",
        "\"</form>\\n\"",
        "\"Endpoints\"",
        "\"<table border=\\\"0\\\" bgcolor=\\\"#808080\\\" cellspacing=1 cellpadding=12>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> IN EP \"",
        "\":</td>  <td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"<form action=\\\"/\"",
        "\":\"",
        "\":\"",
        "\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\"",
        "\"Maximum size: <input type=\\\"text\\\" name=\\\"ep_down_size\\\" value=\\\"1000000\\\" size=12 maxlength=11>\"",
        "\"&nbsp;&nbsp;&nbsp;&nbsp;<input type=\\\"submit\\\" value=\\\"Download\\\">\"",
        "\"</form></td></tr>\\n\"",
        "\"  <tr><td align=left bgcolor=\\\"#e0e0e0\\\"> OUT EP \"",
        "\":</td>  <td align=left bgcolor=\\\"#f0f0f0\\\">\"",
        "\"<form action=\\\"/\"",
        "\":\"",
        "\"\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\"",
        "\"File: <input name=\\\"ep_\"",
        "\"_data\\\" type=\\\"file\\\" size=\\\"60\\\" accept=\\\"\\\" maxlength=\\\"50000000\\\">\"",
        "\"&nbsp;&nbsp;&nbsp;&nbsp;<input type=\\\"submit\\\" value=\\\"Upload\\\">\"",
        "\"</form></td></tr>\\n\"",
        "\"</table>\\n\"",
        "\"\\n\"",
        "\"Device log\"",
        "\"<div align=left><pre>\\n\"",
        "\"</pre></div>\"",
        "\"Device Server Messages\"",
        "\"<div align=left><pre>\\n\"",
        "\"</pre></div>\"",
        "\"400 Bad Request\"",
        "\"Access denied\"",
        "\"/\"",
        "\"/scan\"",
        "\"400 Bad Request\"",
        "\"Invalid device path: \"",
        "\"<p>\\n\"",
        "\"<a href=\\\"/\\\"><button>Device Overview</button></a>\\n\"",
        "\"404 Not Found\"",
        "\"Invalid path: \"",
        "\"<p>\\n\"",
        "\"<a href=\\\"/\\\"><button>Device Overview</button></a>\\n\"",
        "\"Connection from \"",
        "\": \"",
        "\": \"",
        "\": received \"",
        "\" bytes,  sent \"",
        "\" bytes\"",
        "\",\"",
        "\"Invalid address format at position \"",
        "\": empty string\"",
        "\"/\"",
        "\"Invalid mask format at position \"",
        "\": `\"",
        "\"'\"",
        "\"/\"",
        "\"yyyy-MM-dd'T'HH:mm:ss\"",
        "\"Connection from \"",
        "\" established\"",
        "\"Connection from \"",
        "\" closed\"",
        "\": \"",
        "\": \"",
        "\": \"",
        "\"Scanning USB ...\"",
        "\"No firmware defined.\"",
        "\"Firmware uploaded to volatile memory: \"",
        "\"ms\\n\"",
        "\"Firmware uploaded to non-volatile memory: \"",
        "\"ms\\n\"",
        "\"Firmware in non-volatile memory disabled\\n\"",
        "\"No firmware defined.\"",
        "\"Bitstream uploaded to volatile memory: \"",
        "\"ms\\n\"",
        "\"Bitstream uploaded to non-volatile memory: \"",
        "\"ms\\n\"",
        "\"Bitstream in non-volatile memory disabled\\n\"",
        "\"Warning: \"",
        "\"Warning: \"",
        "\"No valid endpoint defined\"",
        "\"Write error: \"",
        "\"Write error: transmitted \"",
        "\" bytes instead of \"",
        "\" bytes\"",
        "\"No valid endpoint defined\"",
        "\"Read error: \"",
        "\"Device number out of range. Valid numbers are 0..\"",
        "\"Device number out of range. Valid numbers are 0..\"",
        "\"Global parameters:\\n\"",
        "\"    -nc              Do not scan for Cypress EZ-USB devices without ZTEX firmware\\n\"",
        "\"    -id <VID> <PID>  Scan for devices with given Vendor ID and Product ID\\n\"",
        "\"    -sp <port>       Port number for the socket interface (default: 9081; <0: disabled)\\n\"",
        "\"    -hp <port>       Port number for the HTTP interface (default: 9080; <0: disabled)\\n\"",
        "\"    -sa [-]<address>[/<mask>][,...]  Allow (permit if '-' is given) HTTP connection from this address(es),\\n\"",
        "\"                     <mask> 24 is equivalent to 255.255.255.0, default: 127.0.0.1\\n\"",
        "\"    -ha [-]<address>[/<mask>][,...]  Allow (permit if '-' is given) HTTP connection from this address(es),\\n\"",
        "\"                     <mask> 24 is equivalent to 255.255.255.0, default: 127.0.0.1\\n\"",
        "\"    -sb <address>    Bind socket server to this address (default: listen on all interfaces)\\n\"",
        "\"    -hb <address>    Bind HTTP server to this address (default: listen on all interfaces)\\n\"",
        "\"    -v               Be verbose\\n\"",
        "\"    -q               Be quiet\\n\"",
        "\"    -a               Scan all interfaces (default: interface 0 only)\\n\"",
        "\"    -l               Log file\\n\"",
        "\"    -l2              Verbose log file\\n\"",
        "\"    -h               Help\"",
        "\"os.name\"",
        "\"linux\"",
        "\"Press <enter> to continue ...\"",
        "\"-nc\"",
        "\"-id\"",
        "\"Error: Vendor ID expected after -id\"",
        "\"Error: Product ID expected after -id <VID>\"",
        "\"-hp\"",
        "\"Error: Port number expected after -hp\"",
        "\"-sp\"",
        "\"Error: Port number expected after -sp\"",
        "\"-ha\"",
        "\"Argument expected after -ha\"",
        "\"Error parsing HTTP permissions:\"",
        "\"-sa\"",
        "\"Argument expected after -hs\"",
        "\"Error parsing socket permissions:\"",
        "\"-hb\"",
        "\"Argument expected after -hb\"",
        "\"Error parsing HTTP permissions:\"",
        "\"-sb\"",
        "\"Argument expected after -sb\"",
        "\"Error parsing HTTP permissions:\"",
        "\"-hb\"",
        "\"Argument expected after -hb\"",
        "\"Error parsing HTTP permissions:\"",
        "\"-v\"",
        "\"-q\"",
        "\"-a\"",
        "\"-l\"",
        "\"Error: File name expected after `-l'\"",
        "\"Error: File name expected after `-l': \"",
        "\"-l2\"",
        "\"Error: File name expected after `-l2'\"",
        "\"Error: File name expected after `-l2': \"",
        "\"-h\"",
        "\"Error: Invalid option: `\"",
        "\"'\"",
        "\"neither HTTP nor socket interface enabled: exiting\"",
        "\"Listening for http connections at port \"",
        "\" from addresses \"",
        "\"/\"",
        "\"Listening for socket connections at port \"",
        "\" from addresses \"",
        "\"Connection from \"",
        "\" refused\"",
        "\"Error: \""
    ],
    "variables": [
        "socket",
        "in",
        "line",
        "i",
        "iface",
        "in",
        "bulk",
        "num",
        "size",
        "busIdx[]",
        "devNum[]",
        "confNum[]",
        "eps[]",
        "i",
        "r",
        "i",
        "r"
    ],
    "comments": [
        "read command and args",
        "DeviceServer.error(\"Error: \"+e.getLocalizedMessage() );",
        "process commands",
        "quit",
        "help [<command>]",
        "[<cid>:]scan [-bin]",
        "info <bus index> <device number>",
        "upload <bus index> <device number> [-v] [-nv] [-e] [-f]",
        "config <bus index> <device number> [-v] [-nv] [-e] [-f]",
        "write <bus number> <device number> <ep>",
        "[<cid>:]read <bus index> <device number> <ep> [<max. bytes>]",
        "error <cid>",
        "System.out.println(\"sep: -->\" + new String(sep) + \"<--\");",
        "System.out.println(\"line: \"+line);",
        "System.out.println(\"name: \"+name);",
        "System.out.println(\"filename: \"+fileName);",
        "System.out.println(ep_down_size);",
        "info",
        "firmware",
        "bitstream",
        "endpoints",
        "Board log",
        "Device Server messages",
        "System.out.println((in ? \"IN\" : \"OUT\" ) + \" EP \"+num + \": \" + (bulk ? \"BULK\" : \"INT\" ) + \", \" + size);",
        "System.err.println(\"r=\" + r + \" result=\"+result + \" i=\"+i);",
        "if ( r!=i ) throw new UsbException(\"Read error: got \" + i + \" bytes instead of \" + r + \" bytes\");",
        "process parameters",
        "init USB stuff",
        "start http server",
        "not really an error",
        "run socket server",
        "not really an error",
        "stop http server"
    ],
    "docstrings": [
        "DeviceServer for the ZTEX USB-FPGA Modules\n   Copyright (C) 2009-2017 ZTEX GmbH.\n   http://www.ztex.de\n   \n   This Source Code Form is subject to the terms of the Mozilla Public\n   License, v. 2.0. If a copy of the MPL was not distributed with this file,\n   You can obtain one at http://mozilla.org/MPL/2.0/.\n\n   Alternatively, the contents of this file may be used under the terms\n   of the GNU General Public License Version 3, as described below:\n\n   This program is free software; you can redistribute it and/or modify\n   it under the terms of the GNU General Public License version 3 as\n   published by the Free Software Foundation.\n\n   This program is distributed in the hope that it will be useful, but\n   WITHOUT ANY WARRANTY; without even the implied warranty of\n   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n   General Public License for more details.\n\n   You should have received a copy of the GNU General Public License\n   along with this program; if not, see http://www.gnu.org/licenses/.\n%",
        "ZTEX device server",
        "*****************************************************************************",
        "******* ErrorBuffer *********************************************************",
        "*****************************************************************************",
        "*****************************************************************************",
        "******* NonBlockingBufferedInputStream **************************************",
        "*****************************************************************************",
        "*****************************************************************************",
        "******* SocketThread ********************************************************",
        "*****************************************************************************",
        "******* SocketThread ********************************************************",
        "******* out *****************************************************************",
        "******* writer **************************************************************",
        "******* printHelp ***********************************************************",
        "******* str2bin *************************************************************",
        "******* scan ****************************************************************",
        "******* info ****************************************************************",
        "******* run *****************************************************************",
        "*****************************************************************************",
        "******* MultipartFormDataReader ********************************************",
        "*****************************************************************************",
        "******* readTo **************************************************************",
        "******* MultiPartFormDataReader *********************************************",
        "******* readField ***********************************************************",
        "*****************************************************************************",
        "******* ZtexHttpHandler *****************************************************",
        "*****************************************************************************",
        "******* htmlHeader **********************************************************",
        "******* heading *************************************************************",
        "******* htmlConvert *********************************************************",
        "******* test ****************************************************************",
        "******* test2 ***************************************************************",
        "******* scan ****************************************************************",
        "******* device **************************************************************",
        "***********",
        "* request *",
        "***********",
        "System.out.println( \"Name=\\\"\" + form.name + \"\\\"\" );\n\t    System.out.println( \"Filename=\\\"\" + form.fileName + \"\\\"\" );\n\t    System.out.println( \"Data -->\" + data + \"<--\" );",
        "**********",
        "* action *",
        "**********",
        "************",
        "* response *",
        "************",
        "******* handle **************************************************************",
        "else if ( path.equalsIgnoreCase(\"/test\") ) {\n\t    buf = test(t);\n\t}\n\telse if ( path.equalsIgnoreCase(\"/test2\") ) {\n\t    buf = test2(t);\n\t}",
        "*****************************************************************************",
        "******* IPPermissionList ****************************************************",
        "*****************************************************************************",
        "*****************************************************************************",
        "******* EPDescriptor ********************************************************",
        "*****************************************************************************",
        "*****************************************************************************",
        "******* EPDescriptorVector **************************************************",
        "*****************************************************************************",
        "*****************************************************************************",
        "******* DeviceServer ********************************************************",
        "*****************************************************************************",
        "******* addSocket ***********************************************************",
        "******* removeSocket ********************************************************",
        "******* httpPermissions *****************************************************",
        "******* sleep ***************************************************************",
        "******* info ****************************************************************",
        "******* error ***************************************************************",
        "******* scanUSB *************************************************************",
        "******* unref ***************************************************************",
        "******* loadFirmware ********************************************************",
        "******* loadBitstream *******************************************************",
        "******* claim ***************************************************************",
        "******* epUpload ************************************************************",
        "public synchronized static void epUpload ( Ztex1v1 ztex, EPDescriptor ep, InputStream in, StringBuilder messages ) throws Exception {\n\tif ( ztex == null ) return;\n\tif ( ep == null || ep.in() ) throw new UsbException(ztex.dev().dev(), \"No valid endpoint defined\");\n\t\n\tclaim(ztex, ep.iface(), messages);\n\n\tZtexUsbWriter writer = new ZtexUsbWriter( ztex, ep.num(), !ep.bulk(), 16, 128*1024 );\n\tbyte buf[] = new byte[writer.bufSize()];\n\n\tZtexEventHandler eventHandler = new ZtexEventHandler(ztex);\n\teventHandler.start();\n\n\tint r,i;\n\tdo {\n\t    r = i = Math.max(in.read(buf),0);\n\t    if ( r>0 ) i = writer.transmitBuffer(buf, r, 2000);\n\t} while (r>0 && r==i);\n\n\tif ( ! eventHandler.terminate() ) if (messages!=null) messages.append(\"Warning: Unable to terminate event handler\\n\");\n\n\tif (i<0) throw new UsbException(\"Write error: timeout occured\");\n\tif ( r!=i ) throw new UsbException(\"Write error: wrote \" + i + \" bytes instead of \" + r + \" bytes\");\n\t\n\tif ( !writer.wait(5000) ) throw new UsbException(\"Unable to finish writing\\n\");\n    }",
        "******* epDownload **********************************************************",
        "public synchronized static void epDownload ( Ztex1v1 ztex, EPDescriptor ep, OutputStream out, int maxSize, StringBuilder messages ) throws Exception {\n\tif ( ztex == null ) return;\n\tif ( ep == null || ! ep.in() ) throw new UsbException(ztex.dev().dev(), \"No valid endpoint defined\");\n\tif ( maxSize < 1 ) maxSize = Integer.MAX_VALUE;\n\t\n\tclaim(ztex, ep.iface(), messages);\n\t\n\tZtexUsbReader reader = new ZtexUsbReader( ztex, ep.num(), !ep.bulk(), 16, 1024 );\n\tbyte buf[] = new byte[reader.bufSize()];\n\n\tZtexEventHandler eventHandler = new ZtexEventHandler(ztex);\n\teventHandler.start();\n\treader.start( ((maxSize-1)/reader.bufSize())+1 );\n\n\tint i;\n\tdo {\n\t    i = reader.getBuffer(buf, 2000);\n\t    if (i>0) out.write(buf,0,i);\n\t} while (i==reader.bufSize());\n\n\tif ( ! eventHandler.terminate() ) if (messages!=null) messages.append(\"Warning: Unable to terminate event handler\\n\");\n\treader.cancel();\n\n\tif (i<0) throw new UsbException(\"Read error: timeout occurred\");\n\n\tif ( !reader.cancelWait(5000) ) if (messages!=null) messages.append(\"Unable to cancel reader\\n\");\n    }",
        "******* numberOfDevices *****************************************************",
        "******* device **************************************************************",
        "******* findDevice **********************************************************",
        "******* busIdx **************************************************************",
        "******* devNum **************************************************************",
        "******* getEps  *************************************************************",
        "******* main ****************************************************************"
    ],
    "functions": [
        "initialize",
        "add",
        "StringBuilder",
        "get",
        "NonBlockingBufferedInputStream",
        "read",
        "close",
        "SocketThread",
        "BufferedOutputStream",
        "binOut",
        "PrintStream",
        "printer",
        "printHelp",
        "str2bin",
        "scan",
        "info",
        "run",
        "readTo",
        "MultipartFormDataReader",
        "readField",
        "StringBuilder",
        "htmlHeader",
        "StringBuilder",
        "heading",
        "htmlConvert",
        "test",
        "test2",
        "scan",
        "device",
        "handle",
        "IPPermissions",
        "IPPermissions",
        "checkAddress",
        "checkAddress",
        "toString",
        "toString",
        "toString",
        "EPDescriptor",
        "num",
        "iface",
        "bulk",
        "size",
        "EPDescriptor",
        "find",
        "addSocket",
        "removeSocket",
        "IPPermissions",
        "httpPermissions",
        "sleep",
        "info",
        "error",
        "scanUSB",
        "unref",
        "loadFirmware",
        "loadBitstream",
        "loadBitstream",
        "claim",
        "epUpload",
        "epDownload",
        "numberOfDevices",
        "ZtexDevice1",
        "device",
        "ZtexDevice1",
        "findDevice",
        "busIdx",
        "devNum",
        "EPDescriptorVector",
        "getEps",
        "main",
        "run"
    ],
    "classes": [
        "ErrorBuffer",
        "NonBlockingBufferedInputStream",
        "SocketThread",
        "MultipartFormDataReader",
        "ZtexHttpHandler",
        "IPPermissions",
        "EPDescriptor",
        "EPDescriptorVector",
        "DeviceServer"
    ]
}