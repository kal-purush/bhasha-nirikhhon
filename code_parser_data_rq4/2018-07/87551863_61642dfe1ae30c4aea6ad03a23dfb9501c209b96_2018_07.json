{
    "identifiers": [
        "fname",
        "numpy",
        "loadtxt",
        "loadtxt",
        "fname",
        "array1",
        "z",
        "numpy",
        "exp",
        "exp",
        "z",
        "exp",
        "z",
        "exp",
        "z",
        "exp",
        "z",
        "fl",
        "array",
        "len",
        "array",
        "i",
        "nxx",
        "array",
        "i",
        "fl",
        "i",
        "index",
        "save_fig",
        "plot_density",
        "matplotlib",
        "pylab",
        "plt",
        "matplotlib",
        "numpy",
        "linspace",
        "pi",
        "sqrt",
        "exp",
        "linspace",
        "nx",
        "linspace",
        "ny",
        "plt",
        "figure",
        "figsize",
        "linspace",
        "nx",
        "fac1",
        "delta_s",
        "pi",
        "plot_density",
        "read_density",
        "x",
        "y",
        "plt",
        "get_cmap",
        "plt",
        "pcolor",
        "x",
        "delta_s",
        "pi",
        "y",
        "dens1",
        "T",
        "cmap",
        "cmap",
        "plt",
        "plot",
        "x",
        "delta_s",
        "pi",
        "sqrt",
        "fac1",
        "x",
        "tanh",
        "fac2",
        "x",
        "plt",
        "plot",
        "x",
        "delta_s",
        "pi",
        "sqrt",
        "tanh",
        "x",
        "x",
        "plt",
        "plot",
        "x",
        "delta_s",
        "pi",
        "sqrt",
        "x",
        "plt",
        "ylim",
        "plt",
        "xlim",
        "x",
        "delta_s",
        "pi",
        "plt",
        "show",
        "x",
        "y",
        "progress",
        "bar",
        "Bar",
        "numpy",
        "zeros",
        "amax",
        "numpy",
        "ma",
        "ma",
        "read_data",
        "fname1",
        "read_data",
        "fname2",
        "read_data",
        "fname3",
        "read_data",
        "fname4",
        "len",
        "x",
        "len",
        "y",
        "snd",
        "sad",
        "und",
        "uad",
        "len",
        "arr1",
        "len",
        "arr2",
        "len",
        "arr3",
        "len",
        "arr4",
        "Bar",
        "max",
        "nx",
        "ny",
        "suffix",
        "nx",
        "ny",
        "zeros",
        "density1",
        "nx",
        "ny",
        "zeros",
        "density2",
        "nx",
        "ny",
        "zeros",
        "density3",
        "nx",
        "ny",
        "zeros",
        "density4",
        "i",
        "nx",
        "j",
        "ny",
        "k",
        "len_arr1",
        "arr1",
        "k",
        "x",
        "i",
        "arr1",
        "k",
        "x",
        "i",
        "arr1",
        "k",
        "y",
        "j",
        "arr1",
        "k",
        "y",
        "j",
        "m1",
        "m1",
        "k",
        "len_arr2",
        "arr2",
        "k",
        "x",
        "i",
        "arr2",
        "k",
        "x",
        "i",
        "arr2",
        "k",
        "y",
        "j",
        "arr2",
        "k",
        "y",
        "j",
        "m2",
        "m2",
        "k",
        "len_arr3",
        "arr3",
        "k",
        "x",
        "i",
        "arr3",
        "k",
        "x",
        "i",
        "arr3",
        "k",
        "y",
        "j",
        "arr3",
        "k",
        "y",
        "j",
        "m1",
        "m1",
        "k",
        "len_arr4",
        "arr4",
        "k",
        "x",
        "i",
        "arr4",
        "k",
        "x",
        "i",
        "arr4",
        "k",
        "y",
        "j",
        "arr4",
        "k",
        "y",
        "j",
        "m4",
        "m4",
        "bar",
        "next",
        "bar",
        "finish",
        "amax",
        "density1",
        "density1",
        "amax",
        "density1",
        "amax",
        "density1",
        "density1",
        "ma",
        "masked_invalid",
        "density1",
        "density4",
        "amax",
        "density4",
        "density4",
        "ma",
        "masked_invalid",
        "density4",
        "density1",
        "density4"
    ],
    "literals": [
        "\"Blues\"",
        "'k-'",
        "'k-'",
        "'k-'",
        "'snorm_dunes.dat'",
        "'santi_dunes.dat'",
        "'unorm_dunes.dat'",
        "'uanti_dunes.dat'",
        "'Processing Data'",
        "'%(index)d/%(max)d - %(percent).1f%% - %(eta)ds'",
        "'NaN'",
        "'NaN'"
    ],
    "variables": [
        "array1",
        "nxx",
        "index",
        "nx",
        "ny",
        "x",
        "y",
        "delta_s",
        "flow_depth",
        "fac1",
        "fac2",
        "fac3",
        "v_dune",
        "v_antidune_l",
        "v_antidune_h",
        "dens1",
        "dens1",
        "cmap",
        "fname1",
        "fname2",
        "snd",
        "sad",
        "fname3",
        "fname4",
        "und",
        "uad",
        "nx",
        "ny",
        "arr1",
        "arr2",
        "arr3",
        "arr4",
        "len_arr1",
        "len_arr2",
        "len_arr3",
        "len_arr4",
        "bar",
        "density1",
        "density1",
        "density2",
        "density2",
        "density3",
        "density3",
        "density4",
        "density4",
        "m1",
        "density1",
        "i",
        "j",
        "m2",
        "density2",
        "i",
        "j",
        "density1",
        "i",
        "j",
        "m4",
        "density4",
        "i",
        "j",
        "density1",
        "density1",
        "density1",
        "density4",
        "density4",
        "density4"
    ],
    "comments": [
        "matplotlib.rcParams['text.usetex'] = True",
        "matplotlib.rcParams['text.latex.unicode'] = True",
        "matplotlib.rcParams['axes.labelsize'] = 17",
        "matplotlib.rcParams['xtick.labelsize'] = 15",
        "matplotlib.rcParams['ytick.labelsize'] = 15",
        "matplotlib.rcParams['legend.fontsize'] = 15",
        "for i in range(nx):",
        "fd_index = find_velo(flow_depth[i],x*fac3)",
        "# v_dune.append(sqrt(tanh(x[fd_index])/x[fd_index])*sqrt(9.81*x[fd_index]*fac3))",
        "# v_antidune_l.append(sqrt(1/x[fd_index])*sqrt(9.81*x[fd_index]*fac3))",
        "# v_antidune_h.append((sqrt(fac1*x[fd_index]* tanh(fac2*x[fd_index]))**(-1.0)-0.04)*sqrt(9.81*x[fd_index]*fac3))",
        "v_dune.append(sqrt(tanh(x[fd_index])/x[fd_index]))",
        "v_antidune_l.append(sqrt(1/x[fd_index]))",
        "v_antidune_h.append((sqrt(fac1*x[fd_index]* tanh(fac2*x[fd_index]))**(-1.0)-0.04))",
        "",
        "plt.pcolor(x,y,dens1.T,cmap=cmap)",
        "plt.plot(x,(sqrt(fac1*x* tanh(fac2*x))**(-1.0)-0.04)*sqrt(9.81*x*fac3),'k-')",
        "plt.plot(x, sqrt(tanh(x)/x)*sqrt(9.81*x*fac3),'k-')",
        "plt.plot(x, sqrt(1/x)*sqrt(9.81*x*fac3),'k-')",
        "plt.plot(flow_depth,v_dune,'b-',alpha=0.5)",
        "plt.plot(flow_depth,v_antidune_l,'r-',alpha=0.5)",
        "plt.plot(flow_depth,v_antidune_h,'r-',alpha = 0.5)",
        "plt.plot(x,v_dune,'b-',alpha=0.5)",
        "plt.plot(x,v_antidune_l,'r-',alpha=0.5)",
        "plt.plot(x,v_antidune_h,'r-',alpha = 0.5)",
        "plt.fill_between(flow_depth, v_antidune_l,v_antidune_h,color='r',alpha=0.5)",
        "plt.fill_between(flow_depth, 0,v_dune,color='b',alpha=0.5)",
        "plt.xlim(0.5,5.0)",
        "plt.ylim(2,18)",
        "plt.xlabel(r'$\\textrm{Flow depth,}\\; m$')",
        "plt.ylabel(r'$\\textrm{Flow Speed,}\\; m/s$')",
        "title_text = '$\\delta_s = {test1:3.1f} $'.format(test1=delta_s)",
        "plt.title(title_text,size =20)",
        "plt.text(3.0,3.0,r'$\\textrm{Dunes}$', size=20)",
        "plt.text(0.6,8.0,r'$\\textrm{Antidunes}$', size=20)",
        "if save_fig == 1:",
        "plt.savefig('flowspeed.png',dpi=501, bbox_inches=\"tight\")",
        "else:",
        "x = linspace(0.1, 3.0,nx)",
        "y = linspace(0.1,2.5,ny)",
        "dx = x[1] - x[0]",
        "dy = y[1] - y[0]",
        "print i",
        "m3 = 0"
    ],
    "docstrings": [],
    "functions": [
        "read_data",
        "tanh",
        "find_velo",
        "plot_data",
        "read_density"
    ],
    "classes": []
}