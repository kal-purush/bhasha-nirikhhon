{
    "identifiers": [
        "Component",
        "Input",
        "IonicPage",
        "ActionSheetController",
        "NavController",
        "NavParams",
        "User",
        "ProvidersUserProvider",
        "HistoryProvider",
        "Storage",
        "CardioHistory",
        "LiftingHistory",
        "Flexibility",
        "d3",
        "d3Scale",
        "d3Array",
        "d3Shape",
        "d3Axis",
        "Component",
        "Input",
        "navParams",
        "actShtCtrl",
        "storage",
        "userService",
        "historyService",
        "userId",
        "workout",
        "userId",
        "workout",
        "workout",
        "workout",
        "cardioHistory",
        "cardioHistory",
        "ch",
        "ch",
        "workout",
        "workout",
        "liftingHistory",
        "liftingHistory",
        "lh",
        "lh",
        "lh",
        "lh",
        "lh",
        "lh",
        "lh",
        "lh",
        "id",
        "data",
        "options",
        "options",
        "i",
        "options",
        "options",
        "i",
        "cfg",
        "i",
        "options",
        "i",
        "options",
        "maxValue",
        "data",
        "i",
        "j",
        "i",
        "allAxis",
        "cfg",
        "cfg",
        "total",
        "d3Scale",
        "radius",
        "maxValue",
        "d3",
        "id",
        "d3",
        "id",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "id",
        "svg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "g",
        "feMerge",
        "feMerge",
        "g",
        "axisGrid",
        "x",
        "d",
        "i",
        "radius",
        "cfg",
        "d",
        "cfg",
        "axisGrid",
        "x",
        "d",
        "d",
        "radius",
        "cfg",
        "d",
        "i",
        "maxValue",
        "d",
        "cfg",
        "axisGrid",
        "allAxis",
        "axis",
        "d",
        "i",
        "rScale",
        "maxValue",
        "angleSlice",
        "i",
        "d",
        "i",
        "rScale",
        "maxValue",
        "angleSlice",
        "i",
        "axis",
        "d",
        "i",
        "rScale",
        "maxValue",
        "cfg",
        "angleSlice",
        "i",
        "d",
        "i",
        "rScale",
        "maxValue",
        "cfg",
        "angleSlice",
        "i",
        "d",
        "d",
        "wrap",
        "cfg",
        "d3Shape",
        "d3Shape",
        "d",
        "rScale",
        "d",
        "d",
        "i",
        "i",
        "angleSlice",
        "cfg",
        "radarLine",
        "d3Shape",
        "g",
        "data",
        "blobWrapper",
        "d",
        "i",
        "radarLine",
        "d",
        "d",
        "i",
        "cfg",
        "cfg",
        "blobWrapper",
        "d",
        "i",
        "radarLine",
        "d",
        "cfg",
        "d",
        "i",
        "cfg",
        "blobWrapper",
        "d",
        "i",
        "d",
        "cfg",
        "d",
        "i",
        "rScale",
        "d",
        "angleSlice",
        "i",
        "d",
        "i",
        "rScale",
        "d",
        "angleSlice",
        "i",
        "d",
        "i",
        "j",
        "cfg",
        "g",
        "data",
        "text",
        "width",
        "text",
        "d3",
        "text",
        "text",
        "text",
        "parseFloat",
        "text",
        "text",
        "x",
        "y",
        "dy",
        "word",
        "words",
        "line",
        "word",
        "tspan",
        "line",
        "tspan",
        "node",
        "width",
        "hasGreaterWidth",
        "line",
        "tspan",
        "line",
        "line",
        "word",
        "tspan",
        "text",
        "x",
        "y",
        "lineNumber",
        "lineHeight",
        "dy",
        "word"
    ],
    "literals": [
        "'@angular/core'",
        "'ionic-angular'",
        "'../../providers/providers'",
        "'@ionic/storage'",
        "'../../models/CardioHistory'",
        "'../../models/LiftingHistory'",
        "'../../models/Flexibility'",
        "'d3-selection'",
        "\"d3-scale\"",
        "\"d3-array\"",
        "\"d3-shape\"",
        "\"d3-axis\"",
        "'timeline-chart'",
        "'timeline-chart.html'",
        "string",
        "string",
        "\"Chest\"",
        "\"Back\"",
        "\"Legs\"",
        "\"Shoulders\"",
        "\"Arms\"",
        "\"Core\"",
        "\"Cardio\"",
        "\"red\"",
        "'Hello TimelineChartComponent Component'",
        "'Hello World'",
        "'_'",
        "\"Chest\"",
        "\"Back\"",
        "\"Legs\"",
        "\"Shoulders\"",
        "\"Arms\"",
        "\"Core\"",
        "\"red\"",
        "'undefined'",
        "'undefined'",
        "\"svg\"",
        "\"svg\"",
        "\"width\"",
        "\"height\"",
        "\"class\"",
        "\"radar\"",
        "\"g\"",
        "\"transform\"",
        "\"translate(\"",
        "\",\"",
        "\")\"",
        "'defs'",
        "'filter'",
        "'id'",
        "'glow'",
        "'feGaussianBlur'",
        "'stdDeviation'",
        "'2.5'",
        "'result'",
        "'coloredBlur'",
        "'feMerge'",
        "'feMergeNode'",
        "'in'",
        "'coloredBlur'",
        "'feMergeNode'",
        "'in'",
        "'SourceGraphic'",
        "\"g\"",
        "\"class\"",
        "\"axisWrapper\"",
        "\".levels\"",
        "\"circle\"",
        "\"class\"",
        "\"gridCircle\"",
        "\"r\"",
        "\"fill\"",
        "\"#CDCDCD\"",
        "\"stroke\"",
        "\"#CDCDCD\"",
        "\"fill-opacity\"",
        "\"filter\"",
        "\"url(#glow)\"",
        "\".axisLabel\"",
        "\"text\"",
        "\"class\"",
        "\"axisLabel\"",
        "\"x\"",
        "\"y\"",
        "\"dy\"",
        "\"0.4em\"",
        "\"font-size\"",
        "\"10px\"",
        "\"fill\"",
        "\"black\"",
        "\"%\"",
        "\".axis\"",
        "\"g\"",
        "\"class\"",
        "\"axis\"",
        "\"line\"",
        "\"x1\"",
        "\"y1\"",
        "\"x2\"",
        "\"y2\"",
        "\"class\"",
        "\"line\"",
        "\"stroke\"",
        "\"black\"",
        "\"stroke-width\"",
        "\"2px\"",
        "\"text\"",
        "\"class\"",
        "\"legend\"",
        "\"font-size\"",
        "\"11px\"",
        "\"text-anchor\"",
        "\"middle\"",
        "\"dy\"",
        "\"0.35em\"",
        "\"x\"",
        "\"y\"",
        "\".radarWrapper\"",
        "\"g\"",
        "\"class\"",
        "\"radarWrapper\"",
        "\"path\"",
        "\"class\"",
        "\"radarArea\"",
        "\"d\"",
        "\"fill\"",
        "\"fill-opacity\"",
        "\"path\"",
        "\"class\"",
        "\"radarStroke\"",
        "\"d\"",
        "\"stroke-width\"",
        "\"px\"",
        "\"stroke\"",
        "\"fill\"",
        "\"none\"",
        "\"filter\"",
        "\"url(#glow)\"",
        "\".radarCircle\"",
        "\"circle\"",
        "\"class\"",
        "\"radarCircle\"",
        "\"r\"",
        "\"cx\"",
        "\"cy\"",
        "\"fill\"",
        "\"fill-opacity\"",
        "\".radarCircleWrapper\"",
        "\"g\"",
        "\"class\"",
        "\"radarCircleWrapper\"",
        "\"y\"",
        "\"x\"",
        "\"dy\"",
        "\"tspan\"",
        "\"x\"",
        "\"y\"",
        "\"dy\"",
        "\"em\"",
        "\" \"",
        "\" \"",
        "\"tspan\"",
        "\"x\"",
        "\"y\"",
        "\"dy\"",
        "\"em\""
    ],
    "variables": [
        "cfg",
        "maxValue",
        "allAxis",
        "total",
        "radius",
        "angleSlice",
        "rScale",
        "svg",
        "g",
        "feGaussianBlur",
        "feMerge",
        "feMergeNode_1",
        "feMergeNode_2",
        "axisGrid",
        "x",
        "axis",
        "radarLine",
        "blobWrapper",
        "blobCircleWrapper",
        "text",
        "words",
        "word",
        "line",
        "lineNumber",
        "lineHeight",
        "y",
        "x",
        "dy",
        "tspan",
        "node",
        "hasGreaterWidth"
    ],
    "comments": [
        "iPhone",
        "Width of the circle",
        "Height of the circle",
        "The margins of the SVG",
        "How many levels or inner circles should there be drawn",
        "What is the value that the biggest circle will represent",
        "How much farther than the radius of the outer circle should the labels be placed",
        "The number of pixels after which a label needs to be given a new line",
        "The opacity of the area of the blob",
        "The size of the colored circles of each blog",
        "The opacity of the circles of each blob",
        "The width of the stroke around each blob",
        "If true the area and stroke will follow a round path (cardinal-closed)",
        "Put all of the options into a variable called cfg",
        "for i",
        "if",
        "If the supplied maxValue is smaller than the actual one, replace by the max in the data",
        "var maxValue = Math.max(cfg.maxValue, d3Array.max(data, function(i){console.log(i); return d3Array.max(i.map(function(o){ console.log(o); return o.value;}))}));",
        "Names of each axis",
        "The number of different axes",
        "Radius of the outermost circle",
        "Format = d3.format('%'),         //Percentage formatting",
        "The width in radians of each \"slice\"",
        "Scale for the radius",
        "",
        "Create the container SVG and g /////////////",
        "",
        "Remove whatever chart with the same id/class was present before",
        "Initiate the radar chart SVG",
        "Append a g element",
        "",
        "Glow filter for some extra pizzazz ///////////",
        "",
        "Filter for the outside glow",
        "",
        "Draw the Circular grid //////////////////",
        "",
        "Wrapper for the grid & axes",
        "Draw the background circles",
        "Text indicating at what % each level is",
        "",
        "Draw the axes //////////////////////",
        "",
        "Create the straight lines radiating outward from the center",
        "Append the lines",
        "Append the labels at each axis",
        "",
        "Draw the radar chart blobs ////////////////",
        "",
        "The radial line function",
        "Create a wrapper for the blobs",
        "Append the backgrounds",
        ".on('mouseover', function (d,i){\n        //Dim all blobs\n        d3.selectAll(\".radarArea\")\n          .transition().duration(200)\n          .style(\"fill-opacity\", 0.1); \n        //Bring back the hovered over blob\n        d3.select(this)\n          .transition().duration(200)\n          .style(\"fill-opacity\", 0.7);  \n      })\n      .on('mouseout', function(){\n        //Bring back all blobs\n        d3.selectAll(\".radarArea\")\n          .transition().duration(200)\n          .style(\"fill-opacity\", cfg.opacityArea);\n      });",
        "Create the outlines",
        "Append the circles",
        "",
        "Append invisible circles for tooltip ///////////",
        "",
        "Wrapper for the invisible circles on top",
        "Append a set of invisible circles on top for the mouseover pop-up",
        "blobCircleWrapper.selectAll(\".radarInvisibleCircle\")\n      .data(function(d: any,i) { return d; })\n      .enter().append(\"circle\")\n      .attr(\"class\", \"radarInvisibleCircle\")\n      .attr(\"r\", cfg.dotRadius*1.5)\n      .attr(\"cx\", function(d: any ,i){ return rScale(d.value) * Math.cos(angleSlice*i - Math.PI/2); })\n      .attr(\"cy\", function(d: any,i){ return rScale(d.value) * Math.sin(angleSlice*i - Math.PI/2); })\n      .style(\"fill\", \"none\")\n      .style(\"pointer-events\", \"all\")\n      .on(\"mouseover\", function(d: any,i) {\n        var newX =  parseFloat(d3.select(this).attr('cx')) - 10;\n        var newY =  parseFloat(d3.select(this).attr('cy')) - 10;\n            \n        tooltip\n          .attr('x', newX)\n          .attr('y', newY)\n          .text(Format(d.value))\n          .transition().duration(200)\n          .style('opacity', 1);\n      })\n      .on(\"mouseout\", function(){\n        tooltip.transition().duration(200)\n          .style(\"opacity\", 0);\n      });\n      \n    //Set up the small tooltip for when you hover over a circle\n    var tooltip = g.append(\"text\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);",
        "",
        "Helper Function /////////////////////",
        "",
        "Taken from http://bl.ocks.org/mbostock/7555321",
        "Wraps SVG text",
        "ems",
        "wrap"
    ],
    "docstrings": [
        "* Generated class for the TimelineChartComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components."
    ],
    "functions": [
        "makeTimelineChart",
        "radarChart",
        "wrap"
    ],
    "classes": [
        "TimelineChartComponent"
    ]
}