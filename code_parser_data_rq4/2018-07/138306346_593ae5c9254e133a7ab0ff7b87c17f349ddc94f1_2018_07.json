{
    "identifiers": [
        "inspect",
        "platform",
        "os",
        "subprocess",
        "sys",
        "unicodedata",
        "app_name",
        "platform",
        "system",
        "plat",
        "winpaths",
        "winpaths",
        "get_appdata",
        "plat",
        "os",
        "path",
        "join",
        "os",
        "path",
        "expanduser",
        "plat",
        "os",
        "path",
        "expanduser",
        "app_name",
        "replace",
        "os",
        "path",
        "join",
        "path",
        "app_name",
        "app_name",
        "app_data_path",
        "app_name",
        "ensure_path",
        "dir",
        "platform",
        "system",
        "is_frozen",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "executable_directory",
        "app_path",
        "imp",
        "hasattr",
        "sys",
        "imp",
        "is_frozen",
        "is_frozen",
        "platform",
        "system",
        "sys",
        "executable",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "sys",
        "executable",
        "os",
        "listdir",
        "exedir",
        "items",
        "remove",
        "os",
        "path",
        "join",
        "exedir",
        "items",
        "os",
        "path",
        "abspath",
        "AttributeError",
        "sys",
        "argv",
        "level",
        "inspect",
        "getmodule",
        "inspect",
        "stack",
        "level",
        "get_executable",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "executable",
        "path",
        "executable_directory",
        "is_frozen",
        "platform",
        "system",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "path",
        "path",
        "level",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "get_module",
        "level",
        "platform",
        "system",
        "plat",
        "winpaths",
        "winpaths",
        "get_my_documents",
        "plat",
        "os",
        "path",
        "join",
        "os",
        "path",
        "expanduser",
        "os",
        "path",
        "expanduser",
        "path",
        "filename",
        "unicode",
        "filename",
        "join",
        "c",
        "c",
        "filename",
        "c",
        "SAFE_FILE_CHARS",
        "c",
        "isalnum",
        "new_filename",
        "strip",
        "path",
        "os",
        "path",
        "exists",
        "path",
        "os",
        "makedirs",
        "path",
        "path",
        "path",
        "platform",
        "system",
        "os",
        "startfile",
        "path",
        "subprocess",
        "Popen",
        "path",
        "platform",
        "system",
        "plat",
        "winpaths",
        "winpaths",
        "get_program_files",
        "plat"
    ],
    "literals": [
        "'Windows'",
        "'Darwin'",
        "'~'",
        "'Library'",
        "'Application Support'",
        "'Linux'",
        "'~'",
        "'.%s'",
        "' '",
        "'_'",
        "'Darwin'",
        "'..'",
        "'Resources'",
        "'frozen'",
        "\"__main__\"",
        "'Darwin'",
        "'python'",
        "'Darwin'",
        "'..'",
        "'..'",
        "'Windows'",
        "'Darwin'",
        "'~'",
        "'Documents'",
        "'~'",
        "\"'-_.()[]{}!@#$%^&+=`~ \"",
        "''",
        "' .'",
        "'Windows'",
        "'open'",
        "'Windows'",
        "'Darwin'",
        "'/Applications'"
    ],
    "variables": [
        "plat",
        "path",
        "path",
        "path",
        "app_name",
        "dir",
        "exedir",
        "items",
        "executable",
        "path",
        "path",
        "path",
        "plat",
        "path",
        "path",
        "path",
        "SAFE_FILE_CHARS",
        "filename",
        "new_filename",
        "plat"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "On darwin, sys.executable points to python. We want the full path to the exe we ran.",
        "Not frozen",
        "Windows doesn't like directory names ending in space, macs consider filenames beginning with a dot as hidden, and windows removes dots at the ends of filenames."
    ],
    "docstrings": [
        "\"\"\"Cross-platform method for determining where to put application data.\"\"\"",
        "\"\"\"Requires the name of the application\"\"\"",
        "\"\"\"Creates the application's data directory, given its name.\"\"\"",
        "\"\"\"Return a bool indicating if application is compressed\"\"\"",
        "\"\"\"Returns the full executable path/name if frozen, or the full path/name of the main module if not.\"\"\"",
        "\"\"\"Hacky method for deriving the caller of this function's module.\"\"\"",
        "\"\"\"Always determine the directory of the executable, even when run with py2exe or otherwise frozen\"\"\"",
        "\"\"\"Return the root of the application's directory\"\"\"",
        "\"\"\"On windows, returns the path to My Documents. On OSX, returns the user's Documents folder. For anything else, returns the user's home directory.\"\"\"",
        "\"\"\"Given a filename, returns a safe version with no characters that would not work on different platforms.\"\"\"",
        "\"\"\"Return the directory where applications are commonly installed on the system.\"\"\""
    ],
    "functions": [
        "app_data_path",
        "prepare_app_data_path",
        "embedded_data_path",
        "is_frozen",
        "get_executable",
        "get_module",
        "executable_directory",
        "app_path",
        "module_path",
        "documents_path",
        "safe_filename",
        "ensure_path",
        "start_file",
        "get_applications_path"
    ],
    "classes": []
}