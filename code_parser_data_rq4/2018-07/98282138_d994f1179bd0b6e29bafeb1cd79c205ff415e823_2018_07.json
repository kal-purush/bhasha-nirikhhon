{
    "identifiers": [
        "os",
        "re",
        "numpy",
        "np",
        "keras",
        "utils",
        "to_categorical",
        "_workspace",
        "_data_type",
        "_workspace",
        "_data_type",
        "lower",
        "folder_name",
        "os",
        "listdir",
        "workspace",
        "data_type",
        "folder_name",
        "return_list",
        "append",
        "folder_name",
        "return_list",
        "FileNotFoundError",
        "return_list",
        "_folder_name",
        "os",
        "path",
        "join",
        "workspace",
        "_folder_name",
        "re",
        "split",
        "_folder_name",
        "file_name",
        "os",
        "listdir",
        "data_root",
        "os",
        "path",
        "join",
        "data_root",
        "file_name",
        "_labels",
        "append",
        "to_categorical",
        "re",
        "split",
        "file_name",
        "label_idx",
        "num_classes",
        "_data",
        "append",
        "np",
        "load",
        "data_path",
        "_data",
        "_labels",
        "set_folder",
        "folder_name",
        "folder_list",
        "get_data_in_folder",
        "folder_name",
        "final_data",
        "extend",
        "data",
        "final_label",
        "extend",
        "label",
        "np",
        "asarray",
        "final_data",
        "np",
        "asarray",
        "final_label"
    ],
    "literals": [
        "'[_]+'",
        "'[-.]+'"
    ],
    "variables": [
        "workspace",
        "data_type",
        "return_list",
        "_data",
        "_labels",
        "data_root",
        "label_idx",
        "data_path",
        "final_data",
        "final_label",
        "folder_list",
        "data",
        "label"
    ],
    "comments": [
        "TODO: check dir or file"
    ],
    "docstrings": [
        "\"\"\"\n    def get_data_in_folder(self, _folder_name):\n\n        _data = []\n        _labels = []\n        data_root = os.path.join(self.workspace, _folder_name)\n        for file_name in os.listdir(data_root):\n            data_path = os.path.join(data_root, file_name)\n            _labels.append(to_categorical(int(re.split('[-.]+', file_name)[-2]), num_classes=2))\n            _data.append(np.load(data_path))\n\n        return _data, _labels\n    \"\"\""
    ],
    "functions": [
        "set_folder",
        "get_data_in_folder",
        "run"
    ],
    "classes": [
        "DataLoader"
    ]
}