{
    "identifiers": [
        "pyWorkFlow",
        "libConfig",
        "libConvert",
        "helper_msg_block",
        "libConfig",
        "config",
        "pyWorkFlow",
        "workflow",
        "helper_msg_block",
        "SynonymDict",
        "input",
        "ConfigDict",
        "get_dict",
        "synchornize",
        "ConfigDict",
        "get_batchly",
        "requested_config_dict",
        "get",
        "requested_argv_dict",
        "get",
        "requested_argv_dict",
        "get",
        "requested_argv_dict",
        "get",
        "startLog",
        "refer_codename_str",
        "requested_config_dict",
        "get",
        "genome_temp_dict",
        "get",
        "refer_codename_str",
        "genome_path",
        "genome_temp_path",
        "genome_temp_path",
        "genome_path",
        "genome_temp_dict",
        "update",
        "refer_codename_str",
        "genome_path",
        "ConfigDict",
        "update",
        "genome_temp_dict",
        "requested_config_dict",
        "get",
        "annotation_temp_dict",
        "get",
        "refer_codename_str",
        "annotation_path",
        "annotation_temp_path",
        "annotation_temp_path",
        "annotation_path",
        "annotation_temp_dict",
        "update",
        "refer_codename_str",
        "annotation_path",
        "ConfigDict",
        "update",
        "annotation_temp_dict",
        "printPhrase",
        "requested_config_dict",
        "get",
        "refer_codename_str",
        "annotation_path",
        "extraction_path",
        "runCommand",
        "printPhrase",
        "requested_config_dict",
        "get",
        "libConvert",
        "cvtDSVtoJSON",
        "log_file_name",
        "extraction_path",
        "header_list",
        "CvtoJSON",
        "actor",
        "printPhrase",
        "libConvert",
        "attributionExtractor",
        "log_file_name",
        "extraction_path",
        "Extract",
        "actor",
        "printBlankLine",
        "stopLog",
        "genomerefer"
    ],
    "literals": [
        "\"refer\"",
        "\"\"",
        "\"genome\"",
        "\"\"",
        "\"annotation\"",
        "\"\"",
        "\"synom\"",
        "\"act02-attribution.py\"",
        "\"bin/hisat2build\"",
        "\"\"",
        "\"result/log\"",
        "\"\"",
        "\"result/gff-json\"",
        "\"\"",
        "\"index/hisat\"",
        "\"\"",
        "\"run/thread\"",
        "\"\"",
        "\"refer/annotate\"",
        "\"refer/genome\"",
        "\"header/gff3\"",
        "\"result/log\"",
        "\"/act02-attribution-\"",
        "\"refer\"",
        "\"\"",
        "\"genome\"",
        "\"\"",
        "\"annotation\"",
        "\"\"",
        "\"\"",
        "\"refer/genome\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"refer/genome\"",
        "\"refer/annotate\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"refer/annotate\"",
        "\"==========\\nStage: Copy Refer annotation to Result folder\\n==========\"",
        "\"result/gff-json\"",
        "\"/\"",
        "\"cp\"",
        "\".gff\"",
        "\"==========\\nStage: Convert GFF to JSON\\n==========\"",
        "\"header/gff3\"",
        "\"files\"",
        "\".gff\"",
        "\"refer_column\"",
        "\"\"",
        "\"prefix\"",
        "\"gff\"",
        "\"header\"",
        "\"headless\"",
        "\"delimiter\"",
        "\"\\t\"",
        "\"==========\\nStage: Extract GFF Information\\n==========\"",
        "\"gff.json\"",
        "\".json\""
    ],
    "variables": [
        "helper_msg_block",
        "ConfigDict",
        "helper_msg_str",
        "requested_argv_dict",
        "comand_line_list",
        "script_name",
        "ConfigDict",
        "requested_dict",
        "ConfigDict",
        "requested_dict",
        "requested_config_dict",
        "log_file_prefix_str",
        "refer_codename_str",
        "genome_path",
        "annotation_path",
        "genome_boolean",
        "annotation_boolean",
        "genome_temp_dict",
        "genome_temp_path",
        "genome_path",
        "genome_boolean",
        "genome_boolean",
        "annotation_temp_dict",
        "annotation_temp_path",
        "annotation_path",
        "annotation_boolean",
        "annotation_boolean",
        "phrase_str",
        "extraction_path",
        "comand_line_list",
        "phrase_str",
        "header_list",
        "CvtoJSON",
        "CvtoJSON",
        "log_file_name",
        "CvtoJSON",
        "requested_argv_dict",
        "phrase_str",
        "Extract",
        "Extract",
        "log_file_name",
        "Extract",
        "requested_argv_dict",
        "GeRef"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "self.testing = True",
        "under construction"
    ],
    "docstrings": [
        "\"\"\"\n--- README of act02-Attribution.py ---\n Title:\n  Construct reference from Genome information for further analysis\n\n Usage:\n  python3 act02-attribution.py -a <codename for reference>\\\\\n    --genome=<Path and Name of GENOME SEQUENCE File>\n    --annotation=<Path and Name of GENOME ANNOTATION File>\n\n CAUTION:\n  Genome tag and Annotate tag must set with file name only.\n\n--- README ---\n\"\"\""
    ],
    "functions": [
        "personalize",
        "actor"
    ],
    "classes": [
        "genomerefer"
    ]
}