{
    "identifiers": [
        "division",
        "csv",
        "cv2",
        "imageio",
        "numpy",
        "np",
        "os",
        "fnmatch",
        "tensorflow",
        "tf",
        "scipy",
        "io",
        "sio",
        "tempfile",
        "TemporaryFile",
        "data_path",
        "csv_filename",
        "save_folder",
        "is_saved",
        "resize_image_size",
        "train_subject_list",
        "val_subject_list",
        "test_subject_list",
        "data_divide_ratio",
        "divide_by_ratio",
        "is_divided_saved",
        "divided_npz_name",
        "label_order",
        "batch_size",
        "max_hue_delta",
        "saturation_range",
        "max_bright_delta",
        "max_contrast_delta",
        "is_training",
        "csv_subject_folder_names",
        "csv_subject_label_names",
        "grasp_names",
        "adl_names",
        "opptype_names",
        "pip_names",
        "virtual_fingers_names",
        "thumb_names",
        "np",
        "array",
        "len",
        "grasp_names",
        "len",
        "adl_names",
        "len",
        "opptype_names",
        "len",
        "pip_names",
        "len",
        "virtual_fingers_names",
        "len",
        "thumb_names",
        "label_order",
        "label_order",
        "classes_numbers",
        "label_order",
        "data_path",
        "csv_filename",
        "save_folder",
        "resize_image_size",
        "train_subject_list",
        "val_subject_list",
        "test_subject_list",
        "data_divide_ratio",
        "divide_by_ratio",
        "is_divided_saved",
        "divided_npz_name",
        "batch_size",
        "max_hue_delta",
        "saturation_range",
        "max_bright_delta",
        "max_contrast_delta",
        "is_training",
        "get_all_annotations",
        "is_saved",
        "divide_by_ratio",
        "train_meaningful_jpg_names",
        "val_meaningful_jpg_names",
        "test_meaningful_jpg_names",
        "get_divided_meaningful_jpg_filenames_from_annotations",
        "train_subject_list",
        "val_subject_list",
        "test_subject_list",
        "divide_by_ratio",
        "is_divided_saved",
        "train_info",
        "val_info",
        "test_info",
        "load_all_by_npz",
        "get_annotation_sorted_by_label",
        "grasp_names",
        "train_info",
        "val_info",
        "test_info",
        "get_jpg_filenames_labels_from_sorted_annotations",
        "grasp_total_list",
        "data_divide_ratio",
        "save_all_by_npz",
        "train_info",
        "val_info",
        "test_info",
        "label",
        "label_names",
        "i",
        "name",
        "label_names",
        "row",
        "all_annotations",
        "name",
        "row",
        "label",
        "temp_list",
        "append",
        "row",
        "total_list",
        "append",
        "temp_list",
        "total_list",
        "total_list",
        "ratio",
        "sub",
        "total_list",
        "row",
        "sub",
        "row",
        "row",
        "cur_range",
        "ratio",
        "cur_range",
        "ratio",
        "cur_range",
        "ratio",
        "i",
        "np",
        "random",
        "permutation",
        "row",
        "row",
        "row",
        "row",
        "split",
        "i",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "i",
        "row",
        "i",
        "row",
        "train_ren",
        "train_info",
        "append",
        "cur_info",
        "i",
        "row",
        "train_ren",
        "i",
        "row",
        "train_ren",
        "val_ren",
        "val_info",
        "append",
        "cur_info",
        "i",
        "row",
        "train_ren",
        "val_ren",
        "i",
        "row",
        "test_info",
        "append",
        "cur_info",
        "train_info",
        "val_info",
        "test_info",
        "train_info",
        "val_info",
        "test_info",
        "sio",
        "savemat",
        "data_path",
        "divided_mat_name",
        "train_info",
        "val_info",
        "test_info",
        "sio",
        "loadmat",
        "data_path",
        "divided_mat_name",
        "loaded_mat",
        "loaded_mat",
        "loaded_mat",
        "train_info",
        "val_info",
        "test_info",
        "train_info",
        "val_info",
        "test_info",
        "TemporaryFile",
        "np",
        "savez",
        "data_path",
        "divided_npz_name",
        "train_info",
        "train_info",
        "val_info",
        "val_info",
        "test_info",
        "test_info",
        "outfile",
        "seek",
        "np",
        "load",
        "data_path",
        "divided_npz_name",
        "loaded_mat",
        "loaded_mat",
        "loaded_mat",
        "train_info",
        "val_info",
        "test_info",
        "open",
        "data_path",
        "csv_filename",
        "newline",
        "csvfile",
        "csv",
        "DictReader",
        "csvfile",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "reader",
        "all_annotations",
        "save_path",
        "subject_num",
        "mp4_name",
        "imageio",
        "get_reader",
        "data_path",
        "csv_subject_folder_names",
        "subject_num",
        "mp4_name",
        "i",
        "im",
        "reader",
        "subject_num",
        "mp4_name",
        "i",
        "csv_subject_label_names",
        "subject_num",
        "mp4_name",
        "i",
        "imageio",
        "imwrite",
        "save_path",
        "save_filename",
        "im",
        "data_path",
        "save_folder",
        "os",
        "path",
        "exists",
        "save_path",
        "os",
        "makedirs",
        "save_path",
        "i",
        "sub",
        "csv_subject_folder_names",
        "os",
        "listdir",
        "data_path",
        "sub",
        "movie_filenames",
        "movie",
        "movie_filenames",
        "read_frames_and_save_from_mp4",
        "save_path",
        "i",
        "movie",
        "filename",
        "filename",
        "split",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "all_annotations",
        "split_name",
        "row",
        "split_name",
        "row",
        "split",
        "split_name",
        "row",
        "split_name",
        "row",
        "labels",
        "each_row",
        "np",
        "zeros",
        "shape",
        "len",
        "each_row",
        "each_row",
        "dtype",
        "np",
        "float32",
        "each_row",
        "split",
        "i",
        "each_row",
        "each_row",
        "data_path",
        "save_folder",
        "each_row",
        "movie_name",
        "i",
        "cv2",
        "imread",
        "each_filename",
        "sequence_frames",
        "data_path",
        "save_folder",
        "os",
        "listdir",
        "saved_path",
        "entry",
        "entry",
        "listOfFiles",
        "fnmatch",
        "fnmatch",
        "entry",
        "jpg_pattern",
        "sorted",
        "jpg_names",
        "jpg_names",
        "row",
        "row",
        "split",
        "i",
        "row",
        "all_annotations",
        "i",
        "row",
        "row",
        "meaningful_names",
        "train_sub_list",
        "val_sub_list",
        "test_sub_list",
        "row",
        "row",
        "split",
        "i",
        "row",
        "all_annotations",
        "sub_num",
        "train_sub_list",
        "i",
        "row",
        "row",
        "csv_subject_label_names",
        "sub_num",
        "row",
        "row",
        "row",
        "split",
        "i",
        "row",
        "all_annotations",
        "sub_num",
        "val_sub_list",
        "i",
        "row",
        "row",
        "csv_subject_label_names",
        "sub_num",
        "row",
        "row",
        "row",
        "split",
        "i",
        "row",
        "all_annotations",
        "sub_num",
        "test_sub_list",
        "i",
        "row",
        "row",
        "csv_subject_label_names",
        "sub_num",
        "row",
        "train_meaningful_names",
        "val_meaningful_names",
        "test_meaningful_names",
        "each_row",
        "i",
        "i",
        "name",
        "grasp_names",
        "each_row",
        "name",
        "i",
        "i",
        "name",
        "adl_names",
        "each_row",
        "name",
        "i",
        "i",
        "name",
        "opptype_names",
        "each_row",
        "name",
        "i",
        "i",
        "name",
        "pip_names",
        "each_row",
        "name",
        "i",
        "i",
        "name",
        "virtual_fingers_names",
        "each_row",
        "name",
        "i",
        "i",
        "name",
        "thumb_names",
        "each_row",
        "name",
        "grasp_id",
        "adl_id",
        "opptype_id",
        "pip_id",
        "virtual_fingers_id",
        "thumb_id",
        "num",
        "np",
        "num",
        "divide_by_ratio",
        "train_meaningful_jpg_names",
        "temp_num",
        "data_path",
        "save_folder",
        "current_image_name",
        "find_label_from_filename",
        "current_image_name",
        "divide_by_ratio",
        "data_path",
        "save_folder",
        "train_info",
        "temp_num",
        "train_info",
        "temp_num",
        "np",
        "int64",
        "get_label_indexes",
        "label_raw",
        "label_order",
        "label",
        "label_order",
        "np",
        "float32",
        "cv2",
        "resize",
        "cv2",
        "imread",
        "filename",
        "resize_image_size",
        "img",
        "img",
        "label",
        "num",
        "np",
        "num",
        "divide_by_ratio",
        "val_meaningful_jpg_names",
        "temp_num",
        "data_path",
        "save_folder",
        "current_image_name",
        "find_label_from_filename",
        "current_image_name",
        "divide_by_ratio",
        "data_path",
        "save_folder",
        "val_info",
        "temp_num",
        "val_info",
        "temp_num",
        "np",
        "int64",
        "get_label_indexes",
        "label_raw",
        "label_order",
        "label",
        "label_order",
        "np",
        "float32",
        "cv2",
        "resize",
        "cv2",
        "imread",
        "filename",
        "resize_image_size",
        "img",
        "img",
        "label",
        "num",
        "np",
        "num",
        "divide_by_ratio",
        "test_meaningful_jpg_names",
        "temp_num",
        "data_path",
        "save_folder",
        "current_image_name",
        "find_label_from_filename",
        "current_image_name",
        "divide_by_ratio",
        "data_path",
        "save_folder",
        "test_info",
        "temp_num",
        "test_info",
        "temp_num",
        "np",
        "int64",
        "get_label_indexes",
        "label_raw",
        "label_order",
        "label",
        "label_order",
        "np",
        "float32",
        "cv2",
        "resize",
        "cv2",
        "imread",
        "filename",
        "resize_image_size",
        "img",
        "img",
        "label",
        "image",
        "label",
        "max_hue_delta",
        "tf",
        "image",
        "random_hue",
        "image",
        "max_delta",
        "max_hue_delta",
        "saturation_range",
        "tf",
        "image",
        "random_saturation",
        "image",
        "lower",
        "saturation_range",
        "upper",
        "saturation_range",
        "max_bright_delta",
        "tf",
        "image",
        "random_brightness",
        "image",
        "max_delta",
        "max_bright_delta",
        "max_contrast_delta",
        "tf",
        "image",
        "random_contrast",
        "image",
        "lower",
        "max_contrast_delta",
        "upper",
        "max_contrast_delta",
        "image",
        "label",
        "tf",
        "name_scope",
        "divide_by_ratio",
        "len",
        "train_meaningful_jpg_names",
        "divide_by_ratio",
        "len",
        "train_info",
        "tf",
        "random_shuffle",
        "tf",
        "linspace",
        "train_size",
        "train_size",
        "tf",
        "data",
        "Dataset",
        "from_tensor_slices",
        "train_order",
        "train_set",
        "num",
        "tf",
        "py_func",
        "_read_per_image_train",
        "num",
        "tf",
        "float32",
        "tf",
        "int64",
        "train_set",
        "_adjust_tf_image_function",
        "train_set",
        "batch",
        "batch_size",
        "tf",
        "name_scope",
        "divide_by_ratio",
        "len",
        "val_meaningful_jpg_names",
        "divide_by_ratio",
        "len",
        "val_info",
        "tf",
        "linspace",
        "tf",
        "cast",
        "val_size",
        "tf",
        "float32",
        "val_size",
        "val_size",
        "tf",
        "data",
        "Dataset",
        "from_tensor_slices",
        "val_order",
        "val_set",
        "num",
        "tf",
        "py_func",
        "_read_per_image_val",
        "num",
        "tf",
        "float32",
        "tf",
        "int64",
        "val_set",
        "batch",
        "batch_size",
        "tf",
        "name_scope",
        "divide_by_ratio",
        "len",
        "test_meaningful_jpg_names",
        "divide_by_ratio",
        "len",
        "test_info",
        "tf",
        "linspace",
        "tf",
        "cast",
        "test_size",
        "tf",
        "float32",
        "test_size",
        "test_size",
        "tf",
        "data",
        "Dataset",
        "from_tensor_slices",
        "test_order",
        "test_set",
        "num",
        "tf",
        "py_func",
        "_read_per_image_test",
        "num",
        "tf",
        "float32",
        "tf",
        "int64",
        "test_set",
        "batch",
        "batch_size",
        "tf",
        "name_scope",
        "tf",
        "data",
        "Iterator",
        "from_structure",
        "train_set",
        "output_types",
        "tf",
        "TensorShape",
        "resize_image_size",
        "resize_image_size",
        "tf",
        "TensorShape",
        "len",
        "classes_numbers",
        "iterator",
        "get_next",
        "iterator",
        "make_initializer",
        "train_set",
        "name",
        "iterator",
        "make_initializer",
        "val_set",
        "name",
        "iterator",
        "make_initializer",
        "test_set",
        "name",
        "next_element",
        "training_init_op",
        "validation_init_op",
        "test_init_op"
    ],
    "literals": [
        "'1. Subject 1'",
        "'2. Subject 2'",
        "'3. Subject 3'",
        "'4. Subject 4'",
        "'5. Subject 5'",
        "'6. Subject 6'",
        "'7. Subject 7'",
        "'8. Subject 8'",
        "'9. Subject 9'",
        "'10. Subject 10'",
        "'11. Subject 11'",
        "'12. Subject 12'",
        "'13. Subject 13'",
        "'subject 1'",
        "'subject 2'",
        "'subject 3'",
        "'subject 4'",
        "'subject 5'",
        "'subject 6'",
        "'subject 7'",
        "'subject 8'",
        "'subject 9'",
        "'subject 10'",
        "'subject 11'",
        "'subject 12'",
        "'subject 13'",
        "'sphere 3 finger'",
        "'parallel extension'",
        "'large diameter'",
        "'power sphere'",
        "'prismatic 4 finger'",
        "'lateral tripod'",
        "'tripod'",
        "'push'",
        "'prismatic 2 finger'",
        "'tip pinch'",
        "'lateral'",
        "'small diameter'",
        "'extension type'",
        "'adducted thumb'",
        "'stick'",
        "'fixed hook'",
        "'palmar pinch'",
        "'inferior pincer'",
        "'precision sphere'",
        "'quadpod'",
        "'prismatic 3 finger'",
        "'index finger extension'",
        "'sphere 4 finger'",
        "'power disk'",
        "'writing tripod'",
        "'medium wrap'",
        "'adduction grip'",
        "'ventral'",
        "'precision disk'",
        "'lift'",
        "'light tool'",
        "'palmar'",
        "'cooking'",
        "'laundry'",
        "'housekeeping'",
        "'Pad'",
        "'Palm'",
        "'Side'",
        "'null'",
        "'Power'",
        "'Precision'",
        "'Intermediate'",
        "'null'",
        "'2'",
        "'3'",
        "'2-3'",
        "'2-4'",
        "'2-5'",
        "'3-4'",
        "'3-5'",
        "'null'",
        "'Abd'",
        "'Add'",
        "'null'",
        "'divided_dataset.npz'",
        "'Grasp'",
        "'EndFrame'",
        "'StartFrame'",
        "'StartFrame'",
        "'EndFrame'",
        "'Filename'",
        "'%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'Grasp'",
        "'Grasp'",
        "'ADL'",
        "'ADL'",
        "'OppType'",
        "'OppType'",
        "'PIP'",
        "'PIP'",
        "'VirtualFingers'",
        "'VirtualFingers'",
        "'Thumb'",
        "'Thumb'",
        "'StartFrame'",
        "'StartFrame'",
        "'StartFrame'",
        "'StartFrame'",
        "'StartFrame'",
        "'EndFrame'",
        "'%s/%s'",
        "'train_info'",
        "'val_info'",
        "'test_info'",
        "'%s/%s'",
        "'train_info'",
        "'val_info'",
        "'test_info'",
        "'%s/%s'",
        "'%s/%s'",
        "'train_info'",
        "'val_info'",
        "'test_info'",
        "'%s/%s'",
        "''",
        "'ID'",
        "'ID'",
        "'Subject'",
        "'Subject'",
        "'Grasp'",
        "'Grasp'",
        "'ADL'",
        "'ADL'",
        "'Video'",
        "'Video'",
        "'StartFrame'",
        "'StartFrame'",
        "'EndFrame'",
        "'EndFrame'",
        "'OppType'",
        "'OppType'",
        "'PIP'",
        "'PIP'",
        "'VirtualFingers'",
        "'VirtualFingers'",
        "'Thumb'",
        "'Thumb'",
        "'Duration'",
        "'Duration'",
        "'depthStart'",
        "'depthStart'",
        "'depthEnd'",
        "'depthEnd'",
        "'SequenceNum'",
        "'SequenceNum'",
        "'%s/%s/%s'",
        "'processing... : %d, %s, %d'",
        "'%s.%s.%d.jpg'",
        "'%s/%s'",
        "'%s/%s'",
        "'%s/%s'",
        "'.'",
        "'Grasp'",
        "'Grasp'",
        "'ADL'",
        "'ADL'",
        "'OppType'",
        "'OppType'",
        "'PIP'",
        "'PIP'",
        "'VirtualFingers'",
        "'VirtualFingers'",
        "'Thumb'",
        "'Thumb'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'StartFrame'",
        "'EndFrame'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'%s/%s/%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'%s/%s'",
        "\"*.jpg\"",
        "'%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'Subject'",
        "'%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'Subject'",
        "'%s.%s.mp4.%d.jpg'",
        "'Subject'",
        "'Video'",
        "'.'",
        "'StartFrame'",
        "'EndFrame'",
        "'Subject'",
        "'Grasp'",
        "'ADL'",
        "'OppType'",
        "'PIP'",
        "'VirtualFingers'",
        "'Thumb'",
        "'%s/%s/%s'",
        "'%s/%s/%s'",
        "'Filename'",
        "'%s/%s/%s'",
        "'%s/%s/%s'",
        "'Filename'",
        "'%s/%s/%s'",
        "'%s/%s/%s'",
        "'Filename'",
        "'train_dataset'",
        "'validation_dataset'",
        "'val'",
        "'test_dataset'",
        "'test'",
        "'dataset_initializer'",
        "'train_set_initializer'",
        "'val_set_initializer'",
        "'test_set_initializer'"
    ],
    "variables": [
        "csv_subject_folder_names",
        "csv_subject_label_names",
        "grasp_names",
        "adl_names",
        "opptype_names",
        "pip_names",
        "virtual_fingers_names",
        "thumb_names",
        "csv_subject_folder_names",
        "csv_subject_label_names",
        "grasp_names",
        "adl_names",
        "opptype_names",
        "pip_names",
        "virtual_fingers_names",
        "thumb_names",
        "classes_numbers",
        "label_order",
        "classes_numbers",
        "data_path",
        "csv_filename",
        "save_folder",
        "resize_image_size",
        "train_subject_list",
        "val_subject_list",
        "test_subject_list",
        "data_divide_ratio",
        "divide_by_ratio",
        "is_divided_saved",
        "divided_npz_name",
        "batch_size",
        "max_hue_delta",
        "saturation_range",
        "max_bright_delta",
        "max_contrast_delta",
        "is_training",
        "all_annotations",
        "grasp_total_list",
        "total_list",
        "temp_list",
        "train_info",
        "val_info",
        "test_info",
        "cur_range",
        "train_ren",
        "val_ren",
        "test_ren",
        "cur_info",
        "loaded_mat",
        "train_info",
        "val_info",
        "test_info",
        "outfile",
        "loaded_mat",
        "train_info",
        "val_info",
        "test_info",
        "reader",
        "all_annotations",
        "reader",
        "save_filename",
        "save_path",
        "movie_filenames",
        "split_name",
        "labels",
        "sequence_frames",
        "movie_name",
        "each_filename",
        "sequence_frames",
        "i",
        "saved_path",
        "listOfFiles",
        "jpg_pattern",
        "jpg_names",
        "jpg_names",
        "meaningful_names",
        "train_meaningful_names",
        "val_meaningful_names",
        "test_meaningful_names",
        "grasp_id",
        "adl_id",
        "opptype_id",
        "pip_id",
        "virtual_fingers_id",
        "thumb_id",
        "temp_num",
        "current_image_name",
        "filename",
        "label_raw",
        "filename",
        "label_raw",
        "label",
        "label",
        "img",
        "img",
        "temp_num",
        "current_image_name",
        "filename",
        "label_raw",
        "filename",
        "label_raw",
        "label",
        "label",
        "img",
        "img",
        "temp_num",
        "current_image_name",
        "filename",
        "label_raw",
        "filename",
        "label_raw",
        "label",
        "label",
        "img",
        "img",
        "image",
        "image",
        "image",
        "image",
        "train_size",
        "train_size",
        "train_order",
        "train_set",
        "train_set",
        "train_set",
        "train_set",
        "val_size",
        "val_size",
        "val_order",
        "val_set",
        "val_set",
        "val_set",
        "test_size",
        "test_size",
        "test_order",
        "test_set",
        "test_set",
        "test_set",
        "iterator",
        "next_element",
        "training_init_op",
        "validation_init_op",
        "test_init_op"
    ],
    "comments": [
        "Number of classes : 13",
        "Number of classes : 13",
        "Number of classes : 32",
        "Number of classes : 3",
        "Number of classes : 4",
        "Number of classes : 4",
        "Number of classes : 8",
        "Number of classes : 3",
        "Names what we will use",
        "It takes some time to get all jpg names. (too many)",
        "self.all_jpg_names = self.get_all_jpg_filenames()",
        "This makes names from annotations (fast)",
        "self.all_meaningful_jpg_names = self.get_all_meaningful_jpg_filenames_from_annotations()",
        "This makes thress names from annotations",
        "It makes three parts : train, validation, test",
        "It is also fast enough",
        "It will divide the dataset by subjects",
        "It will divide by 'Grasp'",
        "If the informations already saved, load this.",
        "self.train_names, self.train_labels, self.val_names, self.val_labels, self.test_names, self.test_labels = \\",
        "self.load_all_by_mat()",
        "self.train_info, self.val_info, self.test_info = self.load_all_by_mat()",
        "self.train_names, self.train_labels, self.val_names, self.val_labels, self.test_names, self.test_labels = \\",
        "self.get_jpg_filenames_labels_from_sorted_annotations(grasp_total_list, self.data_divide_ratio)",
        "self.save_all_by_mat(self.train_names, self.train_labels, self.val_names, self.val_labels, self.test_names, self.test_labels)",
        "self.save_all_by_mat(self.train_info, self.val_info, self.test_info)",
        "ratio must has 3 elements : [training_ratio, validation_ratio, testing_ratio]",
        "The sum of these has to be 1.",
        "train_names = []",
        "train_labels = []",
        "val_names = []",
        "val_labels = []",
        "test_names = []",
        "test_labels = []",
        "for i in range(int(row['StartFrame']), int(row['EndFrame'])):",
        "cur_name = ('%s.%s.mp4.%d.jpg' % (row['Subject'], row['Video'].split('.')[0], i))",
        "cur_label = {'Grasp': row['Grasp'],",
        "'ADL': row['ADL'],",
        "'OppType': row['OppType'],",
        "'PIP': row['PIP'],",
        "'VirtualFingers': row['VirtualFingers'],",
        "'Thumb': row['Thumb']}",
        "train_names.append(cur_name)",
        "train_labels.append(cur_label)",
        "val_names.append(cur_name)",
        "val_labels.append(cur_label)",
        "test_names.append(cur_name)",
        "test_labels.append(cur_label)",
        "return train_names, train_labels, val_names, val_labels, test_names, test_labels",
        "return train_names, train_labels, val_names, val_labels, test_names, test_labels",
        "return train_names, train_labels, val_names, val_labels, test_names, test_labels",
        "In the csv file for grasp, many dict exist",
        "ID means that just id of each grasp",
        "Subject means that that 1-13",
        "Grasp means that how to grasp the object",
        "ADL means that the environment of the movie",
        "Video means that the name of video",
        "StartFrame means that the start frame of this grasp start on the vidoe ( not depth)",
        "EndFrame means that the end frame of this grasp end on the vidoe ( not depth)",
        "OppType is the grasping type (plam, side, pad, null)",
        "PIP means that the grasping type (power, precision, intermeidate)",
        "VirtualFingers means that the used fingers when grasp the object (not thumb, 2, 2-3, 2-4, 2-5, etc)",
        "Thumb means that the thumb shape (add, abd)",
        "Duration means that the number of frames about each grasp",
        "depthStart means that the start frame of this grasp start on the vidoe (depth)",
        "depthEnd means that the end frame of this grasp end on the vidoe (depth)",
        "SequenceNum is unknown",
        "This function doesn't care about the extention of file",
        "Assume that the all images has (1280 x 720 - w x h)",
        "It consists the color image",
        "This function make names from annotations artificially",
        "For takes only meaningful filenames",
        "Meaningful means that these names has annotations",
        "This function is to divide dataset with three parts : training, validation, testing",
        "It makes according to the subject",
        "This function get id of our annotations",
        "id order decided by each name lists defined above",
        "The order of ids like this : [grasp_id, adl_id, opptype_id, pip_id, virtual_fingers_id, thumb_id]",
        "It can be permutated by users",
        "Change order if you want it",
        "This function will be working on the dataset map function",
        "filename = self.train_names[temp_num]",
        "label_raw = self.train_labels[temp_num]",
        "Change BGR order to RGB order",
        "This function will be working on the dataset map function",
        "filename = self.val_names[temp_num]",
        "label_raw = self.val_labels[temp_num]",
        "Change BGR order to RGB order",
        "This function will be working on the dataset map function",
        "filename = self.test_names[temp_num]",
        "label_raw = self.test_labels[temp_num]",
        "Change BGR order to RGB order",
        "random hue",
        "random saturation",
        "random brightness",
        "train_set = train_set.apply(tf.contrib.data.batch_and_drop_remainder(self.batch_size))",
        "Validation set don't need shuffle.",
        "val_set = val_set.apply(tf.contrib.data.batch_and_drop_remainder(self.batch_size))",
        "Test set don't need shuffle.",
        "test_set = test_set.apply(tf.contrib.data.batch_and_drop_remainder(self.batch_size))",
        "iterator = tf.data.Iterator.from_structure(train_set.output_types, train_set.output_shapes)",
        "iterator = tf.data.Iterator.from_structure(train_set.output_types,",
        "(tf.TensorShape([self.batch_size,",
        "self.resize_image_size[0],",
        "self.resize_image_size[1],",
        "3]),",
        "tf.TensorShape([self.batch_size,",
        "len(self.classes_numbers)])",
        ")",
        ")"
    ],
    "docstrings": [],
    "functions": [
        "get_annotation_sorted_by_label",
        "get_jpg_filenames_labels_from_sorted_annotations",
        "save_all_by_mat",
        "load_all_by_mat",
        "save_all_by_npz",
        "load_all_by_npz",
        "get_all_annotations",
        "read_frames_and_save_from_mp4",
        "total_save_from_mp4",
        "find_label_from_filename",
        "read_jpg_files_according_subject_and_frames",
        "get_all_jpg_filenames",
        "get_all_meaningful_jpg_filenames_from_annotations",
        "get_divided_meaningful_jpg_filenames_from_annotations",
        "get_label_indexes",
        "_read_per_image_train",
        "_read_per_image_val",
        "_read_per_image_test",
        "_adjust_tf_image_function",
        "initialization_dataset"
    ],
    "classes": [
        "csv_loader"
    ]
}