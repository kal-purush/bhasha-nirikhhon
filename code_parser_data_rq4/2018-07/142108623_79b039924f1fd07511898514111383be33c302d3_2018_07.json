{
    "identifiers": [
        "numpy",
        "np",
        "math",
        "multiprocessing",
        "mp",
        "os",
        "n",
        "math",
        "factorial",
        "n",
        "math",
        "factorial",
        "n",
        "math",
        "factorial",
        "n",
        "n",
        "n",
        "n",
        "math",
        "factorial",
        "n",
        "math",
        "factorial",
        "n",
        "math",
        "factorial",
        "n",
        "np",
        "zeros",
        "dim",
        "np",
        "zeros",
        "dim",
        "n",
        "i",
        "n",
        "bin",
        "i",
        "count",
        "n",
        "i",
        "format",
        "i",
        "j",
        "len",
        "k",
        "j",
        "k",
        "j",
        "c",
        "descramblr",
        "V",
        "V",
        "np",
        "shape",
        "V",
        "np",
        "shape",
        "V",
        "np",
        "copy",
        "V",
        "i",
        "x",
        "V",
        "i",
        "np",
        "copy",
        "V",
        "i",
        "c",
        "dim",
        "d",
        "np",
        "copy",
        "V",
        "i",
        "d",
        "U",
        "a",
        "K",
        "K",
        "i",
        "i",
        "len",
        "K",
        "Z",
        "index",
        "a",
        "n",
        "V",
        "J",
        "c",
        "np",
        "zeros",
        "c",
        "c",
        "a",
        "c",
        "i",
        "n",
        "j",
        "i",
        "n",
        "V",
        "a",
        "i",
        "V",
        "a",
        "j",
        "H",
        "a",
        "a",
        "J",
        "i",
        "j",
        "H",
        "a",
        "a",
        "J",
        "i",
        "j",
        "np",
        "zeros",
        "n",
        "np",
        "copy",
        "V",
        "a",
        "t",
        "i",
        "t",
        "j",
        "t",
        "j",
        "t",
        "i",
        "find",
        "t",
        "V",
        "J",
        "i",
        "j",
        "H",
        "n",
        "V",
        "J",
        "c",
        "np",
        "zeros",
        "c",
        "c",
        "a",
        "c",
        "i",
        "n",
        "n",
        "J",
        "i",
        "j",
        "V",
        "a",
        "i",
        "V",
        "a",
        "j",
        "np",
        "zeros",
        "n",
        "np",
        "copy",
        "V",
        "a",
        "t",
        "i",
        "t",
        "j",
        "t",
        "j",
        "t",
        "i",
        "find",
        "t",
        "V",
        "D",
        "a",
        "b",
        "J",
        "i",
        "j",
        "D",
        "D",
        "T",
        "n",
        "np",
        "zeros",
        "n",
        "n",
        "i",
        "n",
        "i",
        "n",
        "n",
        "n",
        "x",
        "x",
        "T",
        "n",
        "np",
        "zeros",
        "n",
        "n",
        "i",
        "n",
        "i",
        "n",
        "n",
        "n",
        "x",
        "x",
        "T",
        "E",
        "Ei",
        "np",
        "shape",
        "E",
        "np",
        "shape",
        "Ei",
        "np",
        "zeros",
        "x",
        "y",
        "dtype",
        "np",
        "complex_",
        "i",
        "x",
        "j",
        "y",
        "np",
        "exp",
        "E",
        "i",
        "Ei",
        "j",
        "T",
        "i",
        "V",
        "dim",
        "np",
        "zeros",
        "dim",
        "dim",
        "np",
        "copy",
        "V",
        "k",
        "dim",
        "U",
        "k",
        "i",
        "d",
        "A",
        "B",
        "Te",
        "t",
        "np",
        "sum",
        "A",
        "Te",
        "t",
        "B",
        "T",
        "Sz_i",
        "Sz_j",
        "Te",
        "np",
        "dot",
        "Sz_i",
        "Te",
        "astype",
        "np",
        "complex64",
        "Sz_j",
        "astype",
        "np",
        "float32",
        "np",
        "sum",
        "c",
        "c",
        "T",
        "vecgen",
        "n",
        "i",
        "j",
        "S_z",
        "i",
        "Eve",
        "dim",
        "np",
        "copy",
        "s_zi",
        "S_z",
        "i",
        "Eve",
        "dim",
        "S_z",
        "j",
        "Eve",
        "dim",
        "S_z",
        "j",
        "Eve",
        "dim",
        "LoopJ",
        "n",
        "makeham",
        "n",
        "Eve",
        "J",
        "dim",
        "run",
        "ki",
        "len",
        "win",
        "np",
        "random",
        "seed",
        "run",
        "win",
        "ki",
        "v",
        "np",
        "random",
        "randn",
        "n",
        "np",
        "copy",
        "C",
        "np",
        "diag",
        "np",
        "dot",
        "Eve",
        "astype",
        "np",
        "float32",
        "h",
        "astype",
        "np",
        "float32",
        "run",
        "srun",
        "v",
        "n",
        "ev",
        "ev",
        "ev",
        "ev",
        "np",
        "linalg",
        "eigh",
        "Ha",
        "np",
        "diff",
        "Ei",
        "np",
        "zeros",
        "dim",
        "np",
        "zeros",
        "max",
        "Ei",
        "min",
        "Ei",
        "i",
        "dim",
        "min",
        "ya",
        "i",
        "ya",
        "i",
        "max",
        "ya",
        "i",
        "ya",
        "i",
        "np",
        "savetxt",
        "evr",
        "r",
        "fmt",
        "delimiter",
        "np",
        "savetxt",
        "evd",
        "e",
        "fmt",
        "repeat",
        "w",
        "np",
        "zeros",
        "repeat",
        "np",
        "zeros",
        "repeat",
        "np",
        "zeros",
        "np",
        "zeros",
        "np",
        "zeros",
        "k",
        "repeat",
        "k",
        "run",
        "srun",
        "w",
        "n",
        "ev",
        "ev",
        "np",
        "loadtxt",
        "evr",
        "np",
        "copy",
        "np",
        "average",
        "xa",
        "np",
        "loadtxt",
        "evd",
        "e",
        "np",
        "average",
        "r",
        "np",
        "average",
        "e",
        "np",
        "std",
        "e",
        "np",
        "logspace",
        "np",
        "log10",
        "np",
        "log10",
        "num",
        "np",
        "copy",
        "we",
        "np",
        "zeros",
        "len",
        "win",
        "np",
        "zeros",
        "len",
        "win",
        "np",
        "zeros",
        "len",
        "win",
        "mp",
        "Pool",
        "pool",
        "runprog",
        "repeat",
        "wi",
        "len",
        "win",
        "win",
        "wi",
        "w",
        "w",
        "w",
        "r_m",
        "wi",
        "e_m",
        "wi",
        "de_m",
        "wi",
        "readprog",
        "repeat",
        "w",
        "n",
        "np",
        "savetxt",
        "cv",
        "r_m",
        "fmt",
        "delimiter",
        "n",
        "np",
        "savetxt",
        "cv",
        "e_m",
        "fmt",
        "delimiter",
        "n",
        "np",
        "savetxt",
        "cv",
        "de_m",
        "fmt",
        "delimiter",
        "r_m",
        "e_m",
        "de_m"
    ],
    "literals": [
        "'1'",
        "\"{0:b}\"",
        "'rep'",
        "'_v_'",
        "'_size_'",
        "'_evals.txt'",
        "'_evecs.txt'",
        "'_r.txt'",
        "'_e.txt'",
        "'%10.15f'",
        "','",
        "'%10.15f'",
        "'rep'",
        "'_v_'",
        "'_size_'",
        "'_r.txt'",
        "'_e.txt'",
        "\"level_stat_for\"",
        "'%10.15f'",
        "','",
        "\"energy_stat_for\"",
        "'%10.15f'",
        "','",
        "\"dev_stat_for\"",
        "'%10.15f'",
        "','"
    ],
    "variables": [
        "repeat",
        "n",
        "size",
        "dim",
        "i",
        "j",
        "dim",
        "T",
        "V",
        "c",
        "T",
        "c",
        "k",
        "V",
        "c",
        "x",
        "y",
        "U",
        "c",
        "d",
        "U",
        "c",
        "U",
        "Z",
        "H",
        "H",
        "a",
        "a",
        "H",
        "a",
        "a",
        "t",
        "t",
        "b",
        "H",
        "a",
        "b",
        "D",
        "j",
        "t",
        "t",
        "b",
        "x",
        "x",
        "i",
        "x",
        "x",
        "x",
        "x",
        "i",
        "x",
        "x",
        "x",
        "y",
        "T",
        "T",
        "i",
        "j",
        "d",
        "U",
        "d",
        "k",
        "k",
        "c",
        "Eve",
        "s_zi",
        "s_zj",
        "s_zi",
        "s_zj",
        "s_zk",
        "J",
        "C",
        "v",
        "h",
        "Ha",
        "srun",
        "ev",
        "eva",
        "eve",
        "evr",
        "evd",
        "Ei",
        "H",
        "ya",
        "r",
        "e",
        "e",
        "r",
        "i",
        "r",
        "e",
        "qsz2",
        "qsz4",
        "bsz4",
        "run",
        "srun",
        "ev",
        "evr",
        "evd",
        "xa",
        "r",
        "k",
        "e",
        "k",
        "we",
        "win",
        "r_m",
        "e_m",
        "de_m",
        "pool",
        "w",
        "r_m",
        "wi",
        "e_m",
        "wi",
        "de_m",
        "wi",
        "cv",
        "cv",
        "cv"
    ],
    "comments": [
        "generates all the vectors in computational basis fo S = 0",
        "print(i)",
        "print(i)",
        "print(Z)",
        "Genrates hamiltonian with inputs J->the interaction strengths with the nearest neighbour, h->Field at each given spin, c->dim of hilbert space.",
        "print(np.shape(V))",
        "print(c)",
        "print(a,b,i,j)",
        "Genrates hamiltonian with inputs J->the interaction strengths with the nearest neighbour, h->Field at each given spin, c->dim of hilbert space.",
        "print(J[i,j]*0.5)",
        "x[2*n-1,2*n-2] = v",
        "x[2*n-1,2*n-2] = v",
        "generates the appropriate time evo matrices T[m,n] =exp(1j*(E[i]-Ei[j]))",
        "faster under the assumption all <m|Sz_i|n> are real",
        "computes <Sz_i(t)Sz_j(0)Sz_i(t)Sz_j(0)>, Sz_i is one and Sz_j is the other spin, Te is the time evo mat, t is the time )",
        "np.random.seed(run)",
        "reading the repeats",
        "bsz2 = np.zeros((19,2))",
        "sze2 = 'q' + ev + 'szpow2.txt'",
        "sze4 = 'q' + ev + 'szpow4.txt'",
        "qsz2 += np.loadtxt(sze2,delimiter=',')",
        "qsz4 += np.loadtxt(sze4,delimiter=',')",
        "ev= 'rep'+ str(repeat) + '_v_'+str(w)+'_size_' + str(size)",
        "sze2 = 'q' + ev + 'szpow2'",
        "sze4 = 'q' + ev + 'szpow4'",
        "sz2=qsz2/repeat",
        "sz4=qsz4/repeat",
        "np.savetxt(sze2,sz2,fmt = '%10.15f',delimiter = ',')",
        "np.savetxt(sze4,sz4,fmt = '%10.15f',delimiter = ',')",
        "we[0]=0.5",
        "we[1]= 3.5",
        "we[2]= 15",
        "10**we",
        "v=1",
        "w=1",
        "runprog(5)"
    ],
    "docstrings": [
        "'''\n\t\tif i==j:\n\t\t\tsz_i   = np.dot(H.T,np.dot(s_zi,H))\n\t\t\tsz_j   = np.copy(sz_i)\n\t\t\t\n\t\telse:\n\t\t\tsz_i   = np.dot((H.T).astype(np.float32),np.dot(s_zi.astype(np.float32),H.astype(np.float32)))\n\t\t\tsz_j   = np.dot((H.T).astype(np.float32),np.dot(s_zj.astype(np.float32),H.astype(np.float32)))\t\t\n\t\t\tsz_k   = np.dot((H.T).astype(np.float32),np.dot(s_zk.astype(np.float32),H.astype(np.float32)))\t\t\n\n\t\ttu = np.logspace(-1,3.5,num=30)\n\t\tti = np.copy(tu)#10**tu\n\t\tqszpow2_t = np.zeros((len(tu),2))\n\t\tqszpow4_t = np.zeros((len(tu),2))\n\t\tqsii = sz_i*sz_i.T\n\t\tfor k in range(len(tu)):\n\t\t\tt = ti[k]\t\n\t\t\tEin = np.exp(1j*Ei*t)\n\t\t#\tabd= Ein**t\n\t\t\tT = np.tensordot(Ein,np.conj(Ein),axes=0)\n\t\t\tSz0  = np.sum(qsii*T)\n\t\t\tqszpow2_t[k,:] = [t,4*Sz0/dim]\n\n\t\t\tSz2 = Szpow4(sz_i,sz_j,T)\n\t\t\tqszpow4_t[k,:] = [t,16*Sz2/dim]\t\n\n\t\t\t\n\t\tsze2 = 'q' + ev + 'szpow2.txt'\n\t\tnp.savetxt(sze2,qszpow2_t,fmt = '%10.15f',delimiter = ',')\n\t\tsze4 = 'q' + ev + 'szpow4.txt'\n\t\tnp.savetxt(sze4,qszpow4_t,fmt = '%10.15f',delimiter = ',')\n\n#\t\tsze2 = 'b' + ev + 'szpow2.txt'\n#\t\tnp.savetxt(sze2,bszpow2_t,fmt = '%10.15f',delimiter = ',')'''"
    ],
    "functions": [
        "vecgen",
        "descramblr",
        "find",
        "makeham",
        "makehami",
        "LoopJ",
        "LoopJJ",
        "genT1",
        "S_z",
        "Szpow2",
        "Szpow4",
        "runprog",
        "readprog"
    ],
    "classes": []
}