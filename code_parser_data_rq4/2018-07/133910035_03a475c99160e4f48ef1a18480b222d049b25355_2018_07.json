{
    "identifiers": [
        "require",
        "express",
        "require",
        "require",
        "require",
        "app",
        "express",
        "app",
        "bodyParser",
        "app",
        "multer",
        "app",
        "req",
        "res",
        "res",
        "__dirname",
        "app",
        "req",
        "res",
        "req",
        "req",
        "req",
        "fileFormat",
        "fileFormat",
        "__dirname",
        "fileName",
        "des_file",
        "fs",
        "fileName",
        "err",
        "fd",
        "err",
        "err",
        "fs",
        "req",
        "err",
        "data",
        "fs",
        "des_file",
        "data",
        "err",
        "data",
        "err",
        "err",
        "response",
        "req",
        "response",
        "res",
        "response",
        "app",
        "server",
        "server",
        "host",
        "port"
    ],
    "literals": [
        "'express'",
        "\"fs\"",
        "'body-parser'",
        "'multer'",
        "'public'",
        "'/tmp/'",
        "'image'",
        "'/index.htm'",
        "\"/\"",
        "\"index.htm\"",
        "'/file_upload'",
        "\".\"",
        "'-'",
        "\".\"",
        "\"/image/\"",
        "'./image/'",
        "'a'",
        "'File uploaded successfully'",
        "\"应用实例，访问地址为 http://%s:%s\""
    ],
    "variables": [
        "express",
        "app",
        "fs",
        "bodyParser",
        "multer",
        "fileFormat",
        "fileName",
        "des_file",
        "server",
        "host",
        "port"
    ],
    "comments": [
        "var express = require('express');\nvar app = express();\t// 创建框架的类\nvar fs = require('fs');\n\nvar bodyParser = require('body-parser');\t// 加载中间件\nvar multer = require('multer');\nvar storage = multer.diskStorage({ \n\tdestination: (req, file, cb) => {\n\t\tcb(null, './image')\t// 文件上传的目录\n\t},\n\tfilename: (req, file, cb) => {\n\t\tvar fileFormat = (file.originalname).split(\".\");\t// 先将文件名采用split按照.进行分裂\n\t\tcb(null, file.fieldname + '-' + Date.now() + '.' +  fileFormat[fileFormat.length - 1]);\t// 对文件重命名，加上扩展名\n\t}\n});\t// 确定一下上传的配置选项\n\n\napp.use(express.static('public'));\t// 添加静态文件，用于处理静态文件，框架自带的\napp.use(bodyParser.urlencoded({ extended: false }));\t// 用于处理JSON等数据\napp.use(multer({storage: storage}).array('image'));\n\napp.get('/index.html', (req, res) => {\n\tres.sendFile( __dirname + '/' + 'index.html' );\t// 对于首页的请求\n});\n\n// 该过程中间经历了对静态文件的（static中间件，urlencoded对url的解析，只允许字符串和数字的结果，使用了上传的multer的中间件，最后到回调函数）\napp.post('/file_upload', (req, res) => {\t// 允许上传多个文件，其中文件数组保存在req.files\n\tconsole.log(req.files[0]);\t// 上传文件的信息\n\t var des_file = __dirname + \"/\" + req.files[0].originalname;\n   fs.readFile( req.files[0].path, function (err, data) {\n        fs.writeFile(des_file, data, function (err) {\n         if( err ){\n              console.log( err );\n         }else{\n               response = {\n                   message:'File uploaded successfully', \n                   filename:req.files[0].originalname\n              };\n          }\n          console.log( response );\n          res.end( JSON.stringify( response ) );\n       });\n   });\n});\n\nvar server = app.listen(1937, () => {\n\tconsole.log(server.address());\n});",
        "设置临时上传的地址",
        "上传的文件信息",
        "将要上传的地址"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}