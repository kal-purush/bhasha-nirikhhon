{
    "identifiers": [
        "java",
        "util",
        "random",
        "dataModel",
        "learningRate",
        "biasRegularization",
        "userRegularization",
        "positiveItemRegularization",
        "negativeItemRegularization",
        "updateNegativeItemsFactors",
        "D",
        "updateUsers",
        "updateItems",
        "numUsers",
        "numItems",
        "sampler",
        "lossSamples",
        "D",
        "learningRate",
        "biasRegularization",
        "userRegularization",
        "positiveItemRegularization",
        "negativeItemRegularization",
        "updateNegativeItemsFactors",
        "updateUsers",
        "updateItems",
        "D",
        "D",
        "learningRate",
        "learningRate",
        "biasRegularization",
        "biasRegularization",
        "userRegularization",
        "userRegularization",
        "positiveItemRegularization",
        "positiveItemRegularization",
        "negativeItemRegularization",
        "negativeItemRegularization",
        "updateNegativeItemsFactors",
        "updateNegativeItemsFactors",
        "updateUsers",
        "updateUsers",
        "updateItems",
        "updateItems",
        "dataModel",
        "samp",
        "initMean",
        "initStdDev",
        "dataModel",
        "dataModel",
        "random",
        "dataModel",
        "getRandom",
        "sampler",
        "samp",
        "numUsers",
        "dataModel",
        "getnUsers",
        "numItems",
        "dataModel",
        "getnItems",
        "numLossSamples",
        "numLossSamples",
        "tempMap",
        "sampler",
        "uniformUserSampling",
        "numLossSamples",
        "lossSamples",
        "listU",
        "tempMap",
        "get",
        "listI",
        "tempMap",
        "get",
        "listJ",
        "tempMap",
        "get",
        "i",
        "i",
        "listU",
        "size",
        "i",
        "triple",
        "listU",
        "get",
        "i",
        "listI",
        "get",
        "i",
        "listJ",
        "get",
        "i",
        "lossSamples",
        "add",
        "triple",
        "dataModel",
        "samp",
        "numIters",
        "initMean",
        "initStdDev",
        "samplerName",
        "initializeData",
        "dataModel",
        "samp",
        "initMean",
        "initStdDev",
        "numLossSamples",
        "sqrt",
        "numUsers",
        "createLossSamples",
        "numLossSamples",
        "numPosEvents",
        "dataModel",
        "getNumRatings",
        "loss",
        "it",
        "it",
        "numIters",
        "it",
        "it",
        "tempMap",
        "sampler",
        "Sample",
        "samplerName",
        "numPosEvents",
        "listU",
        "tempMap",
        "get",
        "listI",
        "tempMap",
        "get",
        "listJ",
        "tempMap",
        "get",
        "i",
        "i",
        "listU",
        "size",
        "i",
        "updateFactors",
        "listU",
        "get",
        "i",
        "listI",
        "get",
        "i",
        "listJ",
        "get",
        "i",
        "updateUsers",
        "updateItems",
        "it",
        "loss",
        "u",
        "i",
        "j",
        "update_u",
        "update_i",
        "update_j",
        "updateNegativeItemsFactors",
        "userFactors",
        "dataModel",
        "getUserFactors",
        "u",
        "itemFactors_i",
        "dataModel",
        "getItemFactors",
        "i",
        "itemFactors_j",
        "dataModel",
        "getItemFactors",
        "j",
        "itemWeight_i",
        "dataModel",
        "getItemBias",
        "i",
        "itemWeight_j",
        "dataModel",
        "getItemBias",
        "j",
        "x",
        "dataModel",
        "predict",
        "u",
        "i",
        "dataModel",
        "predict",
        "u",
        "j",
        "z",
        "exp",
        "x",
        "update_i",
        "d",
        "z",
        "biasRegularization",
        "itemWeight_i",
        "dataModel",
        "update_i_w",
        "i",
        "itemWeight_i",
        "learningRate",
        "d",
        "update_j",
        "d",
        "z",
        "biasRegularization",
        "itemWeight_j",
        "dataModel",
        "update_i_w",
        "j",
        "itemWeight_j",
        "learningRate",
        "d",
        "f",
        "f",
        "D",
        "f",
        "w_uf",
        "userFactors",
        "f",
        "h_if",
        "itemFactors_i",
        "f",
        "h_jf",
        "itemFactors_j",
        "f",
        "update_u",
        "update",
        "h_if",
        "h_jf",
        "z",
        "userRegularization",
        "w_uf",
        "userFactors",
        "f",
        "w_uf",
        "learningRate",
        "update",
        "update_i",
        "update",
        "w_uf",
        "z",
        "positiveItemRegularization",
        "h_if",
        "itemFactors_i",
        "f",
        "h_if",
        "learningRate",
        "update",
        "update_j",
        "update",
        "w_uf",
        "z",
        "negativeItemRegularization",
        "h_jf",
        "itemFactors_j",
        "f",
        "h_jf",
        "learningRate",
        "update",
        "dataModel",
        "update_uf",
        "u",
        "userFactors",
        "dataModel",
        "update_if",
        "i",
        "itemFactors_i",
        "dataModel",
        "update_if",
        "j",
        "itemFactors_j",
        "rankingLoss",
        "uij",
        "lossSamples",
        "u",
        "uij",
        "getFirst",
        "i",
        "uij",
        "getSecond",
        "j",
        "uij",
        "getThird",
        "x",
        "dataModel",
        "predict",
        "u",
        "i",
        "dataModel",
        "predict",
        "u",
        "j",
        "rankingLoss",
        "exp",
        "x",
        "complexity",
        "uij",
        "lossSamples",
        "u",
        "uij",
        "getFirst",
        "i",
        "uij",
        "getSecond",
        "j",
        "uij",
        "getThird",
        "userFactors",
        "dataModel",
        "getUserFactors",
        "u",
        "itemFactors_i",
        "dataModel",
        "getItemFactors",
        "i",
        "itemFactors_j",
        "dataModel",
        "getItemFactors",
        "j",
        "itemBias_i",
        "dataModel",
        "getItemBias",
        "i",
        "itemBias_j",
        "dataModel",
        "getItemBias",
        "j",
        "complexity",
        "userRegularization",
        "dotProduct",
        "userFactors",
        "userFactors",
        "complexity",
        "positiveItemRegularization",
        "dotProduct",
        "itemFactors_i",
        "itemFactors_i",
        "complexity",
        "negativeItemRegularization",
        "dotProduct",
        "itemFactors_j",
        "itemFactors_j",
        "complexity",
        "biasRegularization",
        "pow",
        "itemBias_i",
        "complexity",
        "biasRegularization",
        "pow",
        "itemBias_j",
        "loss",
        "rankingLoss",
        "complexity",
        "loss",
        "u",
        "i",
        "dataModel",
        "predict",
        "u",
        "i",
        "a",
        "b",
        "sum",
        "i",
        "i",
        "a",
        "length",
        "i",
        "sum",
        "a",
        "i",
        "b",
        "i",
        "sum"
    ],
    "literals": [
        "\"sampling \"",
        "\" <user,item i,item j> triples...\"",
        "\"initial loss \"",
        "\"starting iteration \"",
        "\"iteration \"",
        "\": loss = \""
    ],
    "variables": [
        "random",
        "dataModel",
        "learningRate",
        "biasRegularization",
        "userRegularization",
        "positiveItemRegularization",
        "negativeItemRegularization",
        "updateNegativeItemsFactors",
        "D",
        "updateUsers",
        "updateItems",
        "numUsers",
        "numItems",
        "sampler",
        "lossSamples"
    ],
    "comments": [
        "apply rule of thumb to decide num samples over which to compute loss",
        "update bias terms"
    ],
    "docstrings": [],
    "functions": [
        "BPRFM2d",
        "initializeData",
        "createLossSamples",
        "Train",
        "updateFactors",
        "loss",
        "scoreItems",
        "dotProduct"
    ],
    "classes": [
        "BPRFM2d"
    ]
}