{
    "identifiers": [
        "com",
        "linuxacademy",
        "ccdak",
        "schemaregistry",
        "org",
        "apache",
        "avro",
        "specific",
        "SpecificData",
        "SuppressWarnings",
        "org",
        "apache",
        "avro",
        "specific",
        "AvroGenerated",
        "serialVersionUID",
        "SCHEMA$",
        "parse",
        "SCHEMA$",
        "Deprecated",
        "id",
        "Deprecated",
        "first_name",
        "Deprecated",
        "last_name",
        "Deprecated",
        "email",
        "Deprecated",
        "twitter",
        "id",
        "first_name",
        "last_name",
        "email",
        "twitter",
        "id",
        "id",
        "first_name",
        "first_name",
        "last_name",
        "last_name",
        "email",
        "email",
        "twitter",
        "twitter",
        "SCHEMA$",
        "field$",
        "field$",
        "id",
        "first_name",
        "last_name",
        "email",
        "twitter",
        "SuppressWarnings",
        "value",
        "field$",
        "value$",
        "field$",
        "id",
        "value$",
        "first_name",
        "value$",
        "last_name",
        "value$",
        "email",
        "value$",
        "twitter",
        "value$",
        "id",
        "value",
        "id",
        "value",
        "first_name",
        "value",
        "first_name",
        "value",
        "last_name",
        "value",
        "last_name",
        "value",
        "email",
        "value",
        "email",
        "value",
        "twitter",
        "value",
        "twitter",
        "value",
        "other",
        "other",
        "other",
        "other",
        "id",
        "first_name",
        "last_name",
        "email",
        "twitter",
        "SCHEMA$",
        "other",
        "other",
        "isValidValue",
        "fields",
        "other",
        "id",
        "id",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "id",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "first_name",
        "first_name",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "first_name",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "last_name",
        "last_name",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "last_name",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "email",
        "email",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "email",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "twitter",
        "twitter",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "twitter",
        "fieldSetFlags",
        "other",
        "SCHEMA$",
        "isValidValue",
        "fields",
        "other",
        "id",
        "id",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "id",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "first_name",
        "first_name",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "first_name",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "last_name",
        "last_name",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "last_name",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "email",
        "email",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "email",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "twitter",
        "twitter",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "twitter",
        "fieldSetFlags",
        "id",
        "value",
        "validate",
        "fields",
        "value",
        "id",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "fieldSetFlags",
        "first_name",
        "value",
        "validate",
        "fields",
        "value",
        "first_name",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "first_name",
        "fieldSetFlags",
        "last_name",
        "value",
        "validate",
        "fields",
        "value",
        "last_name",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "last_name",
        "fieldSetFlags",
        "email",
        "value",
        "validate",
        "fields",
        "value",
        "email",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "email",
        "fieldSetFlags",
        "twitter",
        "value",
        "validate",
        "fields",
        "value",
        "twitter",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "twitter",
        "fieldSetFlags",
        "Override",
        "record",
        "record",
        "id",
        "fieldSetFlags",
        "id",
        "defaultValue",
        "fields",
        "record",
        "first_name",
        "fieldSetFlags",
        "first_name",
        "defaultValue",
        "fields",
        "record",
        "last_name",
        "fieldSetFlags",
        "last_name",
        "defaultValue",
        "fields",
        "record",
        "email",
        "fieldSetFlags",
        "email",
        "defaultValue",
        "fields",
        "record",
        "twitter",
        "fieldSetFlags",
        "twitter",
        "defaultValue",
        "fields",
        "record",
        "e",
        "e",
        "WRITER$",
        "SCHEMA$",
        "Override",
        "WRITER$",
        "write",
        "SpecificData",
        "getEncoder",
        "READER$",
        "SCHEMA$",
        "Override",
        "READER$",
        "read",
        "SpecificData",
        "getDecoder"
    ],
    "literals": [
        "\"all\"",
        "\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Person\\\",\\\"namespace\\\":\\\"com.linuxacademy.ccdak.schemaregistry\\\",\\\"fields\\\":[{\\\"name\\\":\\\"id\\\",\\\"type\\\":\\\"int\\\"},{\\\"name\\\":\\\"first_name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}},{\\\"name\\\":\\\"last_name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}},{\\\"name\\\":\\\"email\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"}},{\\\"name\\\":\\\"twitter\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"avro.java.string\\\":\\\"String\\\"},\\\"default\\\":\\\"\\\"}]}\"",
        "\"Bad index\"",
        "\"unchecked\"",
        "\"Bad index\""
    ],
    "variables": [
        "id",
        "first_name",
        "last_name",
        "email",
        "twitter",
        "id",
        "first_name",
        "last_name",
        "email",
        "twitter"
    ],
    "comments": [
        "Used by DatumWriter.  Applications should not call.",
        "Used by DatumReader.  Applications should not call."
    ],
    "docstrings": [
        "* Autogenerated by Avro\n *\n * DO NOT EDIT DIRECTLY",
        "* Default constructor.  Note that this does not initialize fields\n   * to their default values from the schema.  If that is desired then\n   * one should use <code>newBuilder()</code>.",
        "* All-args constructor.\n   * @param id The new value for id\n   * @param first_name The new value for first_name\n   * @param last_name The new value for last_name\n   * @param email The new value for email\n   * @param twitter The new value for twitter",
        "* Gets the value of the 'id' field.\n   * @return The value of the 'id' field.",
        "* Sets the value of the 'id' field.\n   * @param value the value to set.",
        "* Gets the value of the 'first_name' field.\n   * @return The value of the 'first_name' field.",
        "* Sets the value of the 'first_name' field.\n   * @param value the value to set.",
        "* Gets the value of the 'last_name' field.\n   * @return The value of the 'last_name' field.",
        "* Sets the value of the 'last_name' field.\n   * @param value the value to set.",
        "* Gets the value of the 'email' field.\n   * @return The value of the 'email' field.",
        "* Sets the value of the 'email' field.\n   * @param value the value to set.",
        "* Gets the value of the 'twitter' field.\n   * @return The value of the 'twitter' field.",
        "* Sets the value of the 'twitter' field.\n   * @param value the value to set.",
        "* Creates a new Person RecordBuilder.\n   * @return A new Person RecordBuilder",
        "* Creates a new Person RecordBuilder by copying an existing Builder.\n   * @param other The existing builder to copy.\n   * @return A new Person RecordBuilder",
        "* Creates a new Person RecordBuilder by copying an existing Person instance.\n   * @param other The existing instance to copy.\n   * @return A new Person RecordBuilder",
        "* RecordBuilder for Person instances.",
        "Creates a new Builder",
        "* Creates a Builder by copying an existing Builder.\n     * @param other The existing Builder to copy.",
        "* Creates a Builder by copying an existing Person instance\n     * @param other The existing instance to copy.",
        "* Gets the value of the 'id' field.\n      * @return The value.",
        "* Sets the value of the 'id' field.\n      * @param value The value of 'id'.\n      * @return This builder.",
        "* Checks whether the 'id' field has been set.\n      * @return True if the 'id' field has been set, false otherwise.",
        "* Clears the value of the 'id' field.\n      * @return This builder.",
        "* Gets the value of the 'first_name' field.\n      * @return The value.",
        "* Sets the value of the 'first_name' field.\n      * @param value The value of 'first_name'.\n      * @return This builder.",
        "* Checks whether the 'first_name' field has been set.\n      * @return True if the 'first_name' field has been set, false otherwise.",
        "* Clears the value of the 'first_name' field.\n      * @return This builder.",
        "* Gets the value of the 'last_name' field.\n      * @return The value.",
        "* Sets the value of the 'last_name' field.\n      * @param value The value of 'last_name'.\n      * @return This builder.",
        "* Checks whether the 'last_name' field has been set.\n      * @return True if the 'last_name' field has been set, false otherwise.",
        "* Clears the value of the 'last_name' field.\n      * @return This builder.",
        "* Gets the value of the 'email' field.\n      * @return The value.",
        "* Sets the value of the 'email' field.\n      * @param value The value of 'email'.\n      * @return This builder.",
        "* Checks whether the 'email' field has been set.\n      * @return True if the 'email' field has been set, false otherwise.",
        "* Clears the value of the 'email' field.\n      * @return This builder.",
        "* Gets the value of the 'twitter' field.\n      * @return The value.",
        "* Sets the value of the 'twitter' field.\n      * @param value The value of 'twitter'.\n      * @return This builder.",
        "* Checks whether the 'twitter' field has been set.\n      * @return True if the 'twitter' field has been set, false otherwise.",
        "* Clears the value of the 'twitter' field.\n      * @return This builder."
    ],
    "functions": [
        "getClassSchema",
        "Person",
        "Person",
        "getSchema",
        "get",
        "put",
        "getId",
        "setId",
        "getFirstName",
        "setFirstName",
        "getLastName",
        "setLastName",
        "getEmail",
        "setEmail",
        "getTwitter",
        "setTwitter",
        "newBuilder",
        "newBuilder",
        "newBuilder",
        "Builder",
        "Builder",
        "Builder",
        "getId",
        "setId",
        "hasId",
        "clearId",
        "getFirstName",
        "setFirstName",
        "hasFirstName",
        "clearFirstName",
        "getLastName",
        "setLastName",
        "hasLastName",
        "clearLastName",
        "getEmail",
        "setEmail",
        "hasEmail",
        "clearEmail",
        "getTwitter",
        "setTwitter",
        "hasTwitter",
        "clearTwitter",
        "Person",
        "build",
        "writeExternal",
        "readExternal"
    ],
    "classes": [
        "Person",
        "Builder"
    ]
}