{
    "identifiers": [
        "org",
        "activiti",
        "cloud",
        "starter",
        "audit",
        "tests",
        "it",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "springframework",
        "boot",
        "test",
        "util",
        "TestPropertyValues",
        "org",
        "springframework",
        "context",
        "ApplicationContextInitializer",
        "org",
        "springframework",
        "context",
        "ConfigurableApplicationContext",
        "org",
        "testcontainers",
        "containers",
        "GenericContainer",
        "org",
        "testcontainers",
        "containers",
        "RabbitMQContainer",
        "org",
        "testcontainers",
        "containers",
        "wait",
        "strategy",
        "Wait",
        "org",
        "testcontainers",
        "lifecycle",
        "Startables",
        "keycloakContainer",
        "withExposedPorts",
        "waitingFor",
        "Wait",
        "defaultWaitStrategy",
        "rabbitMQContainer",
        "Override",
        "context",
        "keycloakContainer",
        "isRunning",
        "rabbitMQContainer",
        "isRunning",
        "Startables",
        "deepStart",
        "Stream",
        "of",
        "keycloakContainer",
        "rabbitMQContainer",
        "join",
        "TestPropertyValues",
        "of",
        "keycloakContainer",
        "getContainerIpAddress",
        "keycloakContainer",
        "getFirstMappedPort",
        "rabbitMQContainer",
        "getContainerIpAddress",
        "valueOf",
        "rabbitMQContainer",
        "getAmqpPort",
        "applyTo",
        "context",
        "getEnvironment"
    ],
    "literals": [
        "\"activiti/activiti-keycloak\"",
        "\"rabbitmq:management\"",
        "\"keycloak.auth-server-url=\"",
        "\"http://\"",
        "\":\"",
        "\"/auth\"",
        "\"spring.rabbitmq.host=\"",
        "\"spring.rabbitmq.port=\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "initialize"
    ],
    "classes": [
        "ContainersApplicationInitializer"
    ]
}