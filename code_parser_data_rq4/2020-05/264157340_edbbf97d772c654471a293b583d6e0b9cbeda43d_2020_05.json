{
    "identifiers": [
        "java",
        "io",
        "java",
        "util",
        "Scanner",
        "dl",
        "s",
        "mode",
        "foodName",
        "t1",
        "t2",
        "TemperatureEnum",
        "SKIP",
        "o1",
        "OrganEnum",
        "KIDNEYS",
        "o2",
        "OrganEnum",
        "KIDNEYS",
        "s",
        "nextLine",
        "mode",
        "modeChecker",
        "s",
        "mode",
        "mode",
        "o1",
        "OrganEnum",
        "LIVER",
        "o1",
        "OrganEnum",
        "GALLBLADDER",
        "o1",
        "OrganEnum",
        "HEART",
        "o1",
        "OrganEnum",
        "SMALL_INTESTINE",
        "o1",
        "OrganEnum",
        "SPLEEN",
        "o1",
        "OrganEnum",
        "STOMACH",
        "o1",
        "OrganEnum",
        "LUNGS",
        "o1",
        "OrganEnum",
        "LARGE_INTESTINE",
        "o1",
        "OrganEnum",
        "KIDNEYS",
        "o1",
        "OrganEnum",
        "BLADDER",
        "o1",
        "OrganEnum",
        "LIVER",
        "o2",
        "OrganEnum",
        "GALLBLADDER",
        "o1",
        "OrganEnum",
        "HEART",
        "o2",
        "OrganEnum",
        "SMALL_INTESTINE",
        "o1",
        "OrganEnum",
        "SPLEEN",
        "o2",
        "OrganEnum",
        "STOMACH",
        "o1",
        "OrganEnum",
        "LUNGS",
        "o2",
        "OrganEnum",
        "LARGE_INTESTINE",
        "o1",
        "OrganEnum",
        "KIDNEYS",
        "o2",
        "OrganEnum",
        "BLADDER",
        "exit",
        "mode",
        "s",
        "mode",
        "mode",
        "s",
        "s",
        "o1",
        "name",
        "mode",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "mode",
        "exit",
        "mode",
        "s",
        "s",
        "o1",
        "o2",
        "s",
        "mode",
        "o1",
        "o2",
        "o1",
        "s",
        "nextLine",
        "s",
        "isEmpty",
        "foodName",
        "s",
        "toString",
        "toLowerCase",
        "foodName",
        "charAt",
        "foodName",
        "charAt",
        "dl",
        "write",
        "exit",
        "o1",
        "s",
        "nextLine",
        "toLowerCase",
        "t1",
        "dl",
        "stringToTempEnum",
        "s",
        "t1",
        "mode",
        "o2",
        "s",
        "nextLine",
        "toLowerCase",
        "t2",
        "dl",
        "stringToTempEnum",
        "s",
        "t2",
        "mode",
        "dl",
        "put",
        "foodName",
        "o1",
        "t1",
        "dl",
        "put",
        "foodName",
        "o1",
        "t1",
        "o2",
        "t2",
        "args",
        "isEmpty",
        "charAt",
        "charAt",
        "s",
        "s",
        "charAt",
        "s",
        "length",
        "s",
        "charAt"
    ],
    "literals": [
        "\"Database loaded. Must exit program via commandline to save to the database.\"",
        "\"0 - Liver\"",
        "\"\\n1 - Gallbladder\"",
        "\"\\n2 - Heart\"",
        "\"\\n3 - Small intestine\"",
        "\"\\n4 - Spleen\"",
        "\"\\n5 - Stomach\"",
        "\"\\n6 - Lungs\"",
        "\"\\n7 - Large Intestine\"",
        "\"\\n8 - Kidneys\"",
        "\"\\n9- Bladder\"",
        "\"\\n10 - Wood ( liver and gallbladder )\"",
        "\"\\n11 - Fire ( heart and small intestine )\"",
        "\"\\n12 - Earth ( spleen and stomach )\"",
        "\"\\n13 - Metal ( lungs and large intestine )\"",
        "\"\\n14 - Water ( kidneys and bladder )\"",
        "\"\\nEnter mode ( 0-14 ) :\"",
        "\"Invalid mode. Exiting program.\"",
        "\"Mode \"",
        "\" : \"",
        "\"Wood\"",
        "\"Fire\"",
        "\"Earth\"",
        "\"Metal\"",
        "\"Water\"",
        "\"Invalid mode \"",
        "\" - \"",
        "\" and \"",
        "\"Enter:\\n- Valid food name \\n(1st character must be alphabetical (a-z), any other 1st character entered will exit the program.)\"",
        "\"Temperature for \"",
        "\" then \"",
        "\"Temperature for \"",
        "\"(1.cold, 2.cool, 3.neutral, 4.warm, 5.hot, 0.blank over-write, other - skip)\"",
        "\"_______________________________________________________________________________________________________________________________\"",
        "\"Non-alphabetic exit code entered\"",
        "\"Any updates to the database have been saved.\"",
        "\" =\"",
        "\" =\"",
        "\"_______________________________________________________________________\""
    ],
    "variables": [
        "s",
        "foodName",
        "t1"
    ],
    "comments": [
        "0-9 = the organ index ( see datalink), 10-14 = the five elements",
        "chooses a mode (note: for a GUI this would not be necessary)",
        "read in the food name",
        "exit code is a number or nonalphabetic character",
        "read in the temperature(s)",
        "it is a number ( 0 to 9 )",
        "errenous input"
    ],
    "docstrings": [
        "while(!isValidTemp(s))\n                    {\n                        System.out.println(\"Enter a valid temperature:\\n\" +\n                                \"1 - cold, 2- cool, 3 - neutral, 4 - warm, 5 - hot, 0 - blank overwrite, 6-9 - skip\");\n                        s = in.nextLine().toLowerCase();\n                    }\n                    t2 = dl.convertChar(s.charAt(0));",
        "public TemperatureEnum convert(String str)\n    {\n\n        // can only take number inputs at present\n        if(!str.isEmpty()) {\n            switch (str.charAt(0)) {\n                case 1:\n                    return TemperatureEnum.COLD;\n            }\n        }\n\n        // un-intentionally blank\n        return TemperatureEnum.SKIP;\n    }"
    ],
    "functions": [
        "main",
        "isValidTemp",
        "modeChecker"
    ],
    "classes": []
}