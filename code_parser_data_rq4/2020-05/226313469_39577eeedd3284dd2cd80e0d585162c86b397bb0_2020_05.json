{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "tensorflow",
        "tf",
        "features",
        "labels",
        "shuffle",
        "num_epochs",
        "batch_size",
        "labels",
        "features",
        "features",
        "labels",
        "tf",
        "data",
        "Dataset",
        "from_tensor_slices",
        "inputs",
        "shuffle",
        "dataset",
        "shuffle",
        "buffer_size",
        "len",
        "features",
        "dataset",
        "repeat",
        "num_epochs",
        "dataset",
        "batch",
        "batch_size",
        "dataset",
        "input_dim",
        "learning_rate",
        "tf",
        "keras",
        "layers",
        "Dense",
        "tf",
        "keras",
        "Sequential",
        "Dense",
        "activation",
        "tf",
        "nn",
        "relu",
        "kernel_initializer",
        "input_shape",
        "input_dim",
        "Dense",
        "activation",
        "tf",
        "nn",
        "relu",
        "Dense",
        "activation",
        "tf",
        "nn",
        "relu",
        "Dense",
        "activation",
        "tf",
        "nn",
        "relu",
        "Dense",
        "activation",
        "tf",
        "nn",
        "sigmoid",
        "tf",
        "keras",
        "optimizers",
        "RMSprop",
        "lr",
        "learning_rate",
        "model",
        "compile",
        "loss",
        "optimizer",
        "optimizer",
        "metrics",
        "model"
    ],
    "literals": [
        "'uniform'",
        "'binary_crossentropy'",
        "'accuracy'"
    ],
    "variables": [
        "inputs",
        "inputs",
        "dataset",
        "dataset",
        "dataset",
        "dataset",
        "Dense",
        "model",
        "optimizer"
    ],
    "comments": [
        "Copyright 2019 Google LLC",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "https://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "We call repeat after shuffling, rather than before, to prevent separate",
        "epochs from blending together.",
        "Custom Optimizer:",
        "https://www.tensorflow.org/api_docs/python/tf/train/RMSPropOptimizer",
        "Compile Keras model"
    ],
    "docstrings": [
        "\"\"\"Defines a Keras model and input function for training.\"\"\"",
        "\"\"\"Generates an input function to be used for model training.\n\n    Args:\n      features: numpy array of features used for training or inference\n      labels: numpy array of labels for each example\n      shuffle: boolean for whether to shuffle the data or not (set True for\n        training, False for evaluation)\n      num_epochs: number of epochs to provide the data for\n      batch_size: batch size for training\n\n    Returns:\n      A tf.data.Dataset that can provide data to the Keras model for training or\n        evaluation\n    \"\"\"",
        "\"\"\"Creates Keras Model for Binary Classification.\n\n    The single output node + Sigmoid activation makes this a Logistic\n    Regression.\n\n    Args:\n      input_dim: How many features the input has\n      learning_rate: Learning rate for training\n\n    Returns:\n      The compiled Keras model (still needs to be trained)\n    \"\"\""
    ],
    "functions": [
        "input_fn",
        "create_keras_model"
    ],
    "classes": []
}