{
    "identifiers": [
        "typing",
        "Dict",
        "Tuple",
        "Union",
        "itertools",
        "product",
        "numpy",
        "np",
        "numpy",
        "einsum",
        "scipy",
        "sp",
        "openfermion",
        "utils",
        "_rdm_mapping_functions",
        "kronecker_delta",
        "kdelta",
        "openfermion",
        "utils",
        "_rdm_mapping_functions",
        "map_two_pdm_to_one_pdm",
        "h_ijkl",
        "np",
        "ndarray",
        "tpdm",
        "np",
        "ndarray",
        "p",
        "q",
        "r",
        "s",
        "Union",
        "h_mat",
        "einsum",
        "h_ijkl",
        "q",
        "s",
        "tpdm",
        "p",
        "r",
        "h_mat",
        "einsum",
        "h_ijkl",
        "q",
        "r",
        "tpdm",
        "p",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "q",
        "r",
        "tpdm",
        "p",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "q",
        "tpdm",
        "p",
        "r",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "p",
        "tpdm",
        "r",
        "q",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "p",
        "tpdm",
        "r",
        "q",
        "h_mat",
        "einsum",
        "h_ijkl",
        "q",
        "r",
        "tpdm",
        "p",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "q",
        "r",
        "tpdm",
        "p",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "p",
        "tpdm",
        "r",
        "q",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "p",
        "tpdm",
        "r",
        "q",
        "h_mat",
        "einsum",
        "h_ijkl",
        "p",
        "r",
        "tpdm",
        "q",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "r",
        "p",
        "tpdm",
        "q",
        "s",
        "q",
        "r",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "tpdm",
        "p",
        "h_mat",
        "einsum",
        "h_ijkl",
        "s",
        "tpdm",
        "p",
        "p",
        "s",
        "h_mat",
        "einsum",
        "h_ijkl",
        "r",
        "tpdm",
        "q",
        "h_mat",
        "einsum",
        "h_ijkl",
        "r",
        "tpdm",
        "q",
        "h_mat",
        "tpdm",
        "np",
        "ndarray",
        "h_ijkl",
        "np",
        "ndarray",
        "Tuple",
        "np",
        "ndarray",
        "np",
        "ndarray",
        "Dict",
        "np",
        "einsum",
        "h_ijkl",
        "np",
        "array",
        "np",
        "roots",
        "einsum",
        "tpdm",
        "roots",
        "np",
        "where",
        "roots",
        "real",
        "map_two_pdm_to_one_pdm",
        "tpdm",
        "n_electrons",
        "tpdm",
        "shape",
        "p",
        "q",
        "product",
        "dim",
        "repeat",
        "p",
        "q",
        "p",
        "q",
        "cnt",
        "q",
        "p",
        "cnt",
        "dim",
        "dim",
        "cnt",
        "np",
        "zeros",
        "len",
        "full_basis",
        "len",
        "full_basis",
        "np",
        "zeros",
        "len",
        "full_basis",
        "len",
        "full_basis",
        "rkey",
        "ridx",
        "full_basis",
        "items",
        "rkey",
        "ckey",
        "cidx",
        "full_basis",
        "items",
        "ckey",
        "sigma",
        "tau",
        "product",
        "repeat",
        "erpa_mat",
        "ridx",
        "cidx",
        "erpa_eom_hamiltonian",
        "permuted_hijkl",
        "tpdm",
        "q",
        "sigma",
        "p",
        "sigma",
        "r",
        "tau",
        "s",
        "tau",
        "real",
        "metric_mat",
        "ridx",
        "cidx",
        "opdm",
        "q",
        "sigma",
        "s",
        "tau",
        "kdelta",
        "r",
        "tau",
        "p",
        "sigma",
        "opdm",
        "p",
        "sigma",
        "r",
        "tau",
        "kdelta",
        "q",
        "sigma",
        "s",
        "tau",
        "real",
        "np",
        "linalg",
        "eigh",
        "metric_mat",
        "np",
        "where",
        "np",
        "abs",
        "ws",
        "vs",
        "non_zero_idx",
        "T",
        "erpa_mat",
        "vs",
        "non_zero_idx",
        "vs",
        "non_zero_idx",
        "T",
        "metric_mat",
        "vs",
        "non_zero_idx",
        "sp",
        "linalg",
        "eig",
        "left_mat",
        "right_mat",
        "np",
        "where",
        "np",
        "abs",
        "w",
        "imag",
        "w",
        "real_eig_idx",
        "v",
        "real_eig_idx",
        "vs",
        "non_zero_idx",
        "real_eig_vecs",
        "np",
        "where",
        "real_eigs",
        "pos_indices",
        "np",
        "argsort",
        "real_eigs",
        "pos_indices",
        "real_eigs",
        "pos_indices",
        "reverse_projected_eig_vecs",
        "pos_indices",
        "full_basis"
    ],
    "literals": [
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'ab,ab'",
        "'abc,abc'",
        "'abc,abc'",
        "'abc,abc'",
        "'abc,abc'",
        "'ijlk'",
        "'ijji'"
    ],
    "variables": [
        "h_mat",
        "permuted_hijkl",
        "roots",
        "n_electrons",
        "opdm",
        "dim",
        "full_basis",
        "cnt",
        "full_basis",
        "full_basis",
        "erpa_mat",
        "metric_mat",
        "p",
        "q",
        "r",
        "s",
        "ws",
        "vs",
        "non_zero_idx",
        "left_mat",
        "right_mat",
        "w",
        "v",
        "real_eig_idx",
        "real_eigs",
        "real_eig_vecs",
        "reverse_projected_eig_vecs",
        "pos_indices",
        "pos_indices"
    ],
    "comments": [
        "(   1.00000) h_ijkl(q,s,a,b) cre(p) cre(r) des(a) des(b)",
        "(  -1.00000) h_ijkl(q,a,r,b) cre(p) cre(a) des(s) des(b)",
        "(   1.00000) h_ijkl(q,a,b,r) cre(p) cre(a) des(s) des(b)",
        "(  -1.00000) h_ijkl(s,q,a,b) cre(p) cre(r) des(a) des(b)",
        "(  -1.00000) h_ijkl(s,a,p,b) cre(r) cre(a) des(q) des(b)",
        "(   1.00000) h_ijkl(s,a,b,p) cre(r) cre(a) des(q) des(b)",
        "(   1.00000) h_ijkl(a,q,r,b) cre(p) cre(a) des(s) des(b)",
        "(  -1.00000) h_ijkl(a,q,b,r) cre(p) cre(a) des(s) des(b)",
        "(   1.00000) h_ijkl(a,s,p,b) cre(r) cre(a) des(q) des(b)",
        "(  -1.00000) h_ijkl(a,s,b,p) cre(r) cre(a) des(q) des(b)",
        "(   1.00000) h_ijkl(a,b,p,r) cre(a) cre(b) des(q) des(s)",
        "(  -1.00000) h_ijkl(a,b,r,p) cre(a) cre(b) des(q) des(s)",
        "(   1.00000) h_ijkl(s,a,b,c) kdelta(q,r) cre(p) cre(a) des(b) des(c)",
        "(  -1.00000) h_ijkl(a,s,b,c) kdelta(q,r) cre(p) cre(a) des(b) des(c)",
        "(   1.00000) h_ijkl(a,b,r,c) kdelta(p,s) cre(a) cre(b) des(q) des(c)",
        "(  -1.00000) h_ijkl(a,b,c,r) kdelta(p,s) cre(a) cre(b) des(q) des(c)",
        "dim = num spatial orbitals",
        "erpa basis.  A, B basis in RPA language",
        "The metric is hermetian and can be diagonalized",
        "this allows us to project into the non-zero eigenvalue space",
        "solve the matrix pencil using ddgev in lapack",
        "the spectrum is symmetric (-w, w)",
        "find the positive spectrum eigensystem and return"
    ],
    "docstrings": [
        "\"\"\"Code to generate the eigenvalue problem for the ERPA equations\"\"\"",
        "\"\"\"\n    Evaluate sum_{a,b,c,d}h_{a, b, d, c}<psi[p^ q, [a^ b^ c d, r^ s]]psi>\n\n    Args:\n        h_ijkl: two-body integral tensors of full reduced Hamiltonian\n        tpdm: two-RDM\n        p: left creation op index\n        q: left annihilation op index\n        r: right creation op index\n        s: right annihilation op index\n    Returns:\n        float or complex number\n    \"\"\"",
        "\"\"\"\n    Generate the singlet ERPA equations\n\n    [ea + eb, [H, sa, sb]] = [ea, [H, sa]]\n\n    The erpa equations are solved with scipy.linalg.eig which calls\n    lapack's geev\n\n    Args:\n        tpdm: 2-RDM tensor normal OpenFermion format\n        h_ijkl: reduced Hamiltonian tensor\n    Returns:\n        Tuple of the erpa system.\n    \"\"\""
    ],
    "functions": [
        "erpa_eom_hamiltonian",
        "singlet_erpa"
    ],
    "classes": []
}