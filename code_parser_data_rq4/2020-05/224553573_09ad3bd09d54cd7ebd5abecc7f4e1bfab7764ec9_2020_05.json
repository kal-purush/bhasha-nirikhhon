{
    "identifiers": [
        "flask",
        "Flask",
        "jsonify",
        "flask",
        "request",
        "redis",
        "time",
        "json",
        "flask",
        "Response",
        "stream_with_context",
        "Flask",
        "redis",
        "StrictRedis",
        "charset",
        "decode_responses",
        "s",
        "s",
        "ValueError",
        "app",
        "route",
        "defaults",
        "methods",
        "app",
        "route",
        "methods",
        "path",
        "request",
        "method",
        "path",
        "request",
        "method",
        "request",
        "json",
        "path",
        "db",
        "incr",
        "prod_idx",
        "path",
        "db",
        "path",
        "time",
        "time",
        "path",
        "db",
        "hmset",
        "path",
        "jsonify",
        "request",
        "method",
        "db",
        "path",
        "path",
        "return_status",
        "jsonify",
        "return_status",
        "request",
        "method",
        "path",
        "request",
        "args",
        "get",
        "search_str",
        "search_str",
        "min_str",
        "min_str",
        "max_str",
        "db",
        "zrangebylex",
        "min_str",
        "max_str",
        "prod",
        "product_list",
        "prod",
        "split",
        "product_idx",
        "db",
        "hgetall",
        "product_id",
        "product_results",
        "append",
        "product_record",
        "jsonify",
        "product_results",
        "path",
        "request",
        "args",
        "get",
        "get_category",
        "get_category",
        "min_str",
        "min_str",
        "max_str",
        "db",
        "zrangebylex",
        "min_str",
        "max_str",
        "category_index",
        "split",
        "category_list",
        "strip",
        "category_list",
        "strip",
        "category_name",
        "category_id",
        "category_id",
        "category_name",
        "db",
        "zrange",
        "category_id",
        "prod",
        "product_list",
        "prod",
        "split",
        "product_idx",
        "db",
        "hget",
        "prod",
        "product_name",
        "product_results",
        "append",
        "product_id",
        "product_name",
        "jsonify",
        "category_results",
        "product_results",
        "db",
        "exists",
        "path",
        "db",
        "hgetall",
        "path",
        "path",
        "k",
        "v",
        "isInt",
        "v",
        "v",
        "k",
        "v",
        "items",
        "jsonify",
        "dict_with_ints",
        "return_string",
        "app",
        "run",
        "host"
    ],
    "literals": [
        "'redis'",
        "\"utf-8\"",
        "'/'",
        "'path'",
        "''",
        "'PUT'",
        "'GET'",
        "'/<path:path>'",
        "'PUT'",
        "'GET'",
        "'DELETE'",
        "\"the request method is \"",
        "\" path is \"",
        "'PUT'",
        "'in PUT'",
        "'event is %s '",
        "'NEW'",
        "\"prod_highest_idx\"",
        "\"prod:\"",
        "\"insert-new index is \"",
        "\"prod_idx exists so is a replace\"",
        "'updated'",
        "'prod_idx'",
        "'DELETE'",
        "\"delete with path = \"",
        "\" and status of \"",
        "'GET'",
        "'search'",
        "\"search_string\"",
        "\"search string is \"",
        "'['",
        "\"~\"",
        "\"min is \"",
        "\" max is \"",
        "\"zProdModelName\"",
        "':'",
        "\"prod:\"",
        "'category'",
        "\"show_category\"",
        "\"reporting category is \"",
        "\"[\"",
        "\":\"",
        "\"~\"",
        "\"min is \"",
        "\" max is \"",
        "\"zCategoryName\"",
        "':'",
        "\"'\"",
        "\"'\"",
        "\"category_name is \"",
        "\"category_id is \"",
        "'{'",
        "':'",
        "'}'",
        "\"zCategProd:\"",
        "':'",
        "\"model_name\"",
        "'{'",
        "':'",
        "'}'",
        "\"Error: thing doesn't exist\"",
        "\"got event back\"",
        "\"prod_idx\"",
        "\"__main__\"",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "app",
        "debug",
        "db",
        "prod_idx",
        "path",
        "return_string",
        "return_status",
        "return_string",
        "search_str",
        "min_str",
        "max_str",
        "product_list",
        "product_results",
        "product_idx",
        "product_id",
        "product_record",
        "return_string",
        "get_category",
        "min_str",
        "max_str",
        "category_index",
        "category_list",
        "category_name",
        "category_id",
        "category_results",
        "product_list",
        "product_results",
        "product_idx",
        "product_id",
        "product_name",
        "return_string",
        "return_string",
        "dict_with_ints",
        "return_string"
    ],
    "comments": [
        "!/bin/python",
        "Dependencies:",
        "pip install flask",
        "pip install redis",
        "connect to server",
        "if prod_idx is set it is a replace",
        "if proc_idx is not set, is insert",
        "remove old keys",
        "print(\"prod is \" + prod)",
        "print(\"product_idx is \")",
        "print(product_idx)",
        "print(\"product_id is \" + product_id)",
        "category passed in will be Category name, need to get the category index and pull products with category index",
        "retrieve the category index using the passed in category name",
        "pull this from the zCategoryName sorted set holding category name and category id separated by colon",
        "print(\"category_idx is \" + category_index)",
        "a = {'name':'Sarah', 'age': 24, 'isEmployed': True }",
        "with the category_id, get the products in this category",
        "print(\"product list is\\n\")",
        "print(product_list)",
        "print(\"prod is \" + prod)",
        "print(\"product_idx is \")",
        "print(product_idx)",
        "print(\"product_id is \" + product_id)",
        "product_on_market = db.hget(prod, \"on_market\")",
        "print(\"product_on_market is \" + product_on_market)",
        "if product_on_market == \"1\":",
        "print(\"product name is \" + product_name)",
        "put path in as product index",
        "cast integers accordingly, nested arrays, dicts not supported for now  :(",
        "return json.dumps(dict_with_ints), 200"
    ],
    "docstrings": [],
    "functions": [
        "isInt",
        "home"
    ],
    "classes": []
}