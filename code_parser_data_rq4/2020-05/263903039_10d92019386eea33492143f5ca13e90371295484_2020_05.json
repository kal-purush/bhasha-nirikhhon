{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "mongoose",
        "mongoose",
        "process",
        "err",
        "err",
        "mongoose",
        "err",
        "err",
        "app",
        "morgan",
        "app",
        "bodyParser",
        "app",
        "cookieParser",
        "app",
        "expressValidator",
        "app",
        "cors",
        "app",
        "authRoutes",
        "app",
        "userRoutes",
        "app",
        "categoryRoutes",
        "app",
        "productRoutes",
        "process",
        "app",
        "port",
        "port"
    ],
    "literals": [
        "'express'",
        "'mongoose'",
        "'dotenv'",
        "'cors'",
        "'morgan'",
        "'body-parser'",
        "'cookie-parser'",
        "'express-validator'",
        "'./routes/auth'",
        "'./routes/user'",
        "'./routes/category'",
        "'./routes/product'",
        "'DB Connected'",
        "'error'",
        "DB connection error :${err}",
        "'dev'",
        "\"/api\"",
        "\"/api\"",
        "\"/api\"",
        "\"/api\"",
        "Server is running on ${port}"
    ],
    "variables": [
        "express",
        "mongoose",
        "cors",
        "morgan",
        "bodyParser",
        "cookieParser",
        "expressValidator",
        "authRoutes",
        "userRoutes",
        "categoryRoutes",
        "productRoutes",
        "app",
        "port"
    ],
    "comments": [
        "use env variables",
        "import routes",
        "app",
        "db",
        "import mongooseconst mongoose = require('mongoose');",
        "load env variablesconst dotenv = require('dotenv');dotenv.config()",
        "db connectionmongoose.connect(  process.env.MONGO_URI,  {useNewUrlParser: true}).then(() => console.log('DB Connected')) mongoose.connection.on('error', err => {  console.log(`DB connection error: ${err.message}`)});",
        "routes",
        "routes middleware"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}