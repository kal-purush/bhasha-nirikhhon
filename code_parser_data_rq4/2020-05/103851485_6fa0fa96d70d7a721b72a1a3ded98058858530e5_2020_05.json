{
    "identifiers": [
        "notStrictEqual",
        "strictEqual",
        "existsSync",
        "mkdirSync",
        "readFileSync",
        "rmdirSync",
        "unlinkSync",
        "writeFileSync",
        "join",
        "FileSystem",
        "path",
        "existsSync",
        "path",
        "rmdirSync",
        "path",
        "path",
        "existsSync",
        "path",
        "unlinkSync",
        "path",
        "path",
        "existsSync",
        "path",
        "mkdirSync",
        "path",
        "describe",
        "beforeEach",
        "fs",
        "FileSystem",
        "describe",
        "it",
        "strictEqual",
        "fs",
        "fs",
        "strictEqual",
        "fs",
        "fs",
        "strictEqual",
        "fs",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "Buffer",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "strictEqual",
        "fs",
        "it",
        "strictEqual",
        "fs",
        "describe",
        "beforeEach",
        "mkdir",
        "mkdir",
        "afterEach",
        "rmdir",
        "rmdir",
        "rmdir",
        "rmdir",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "it",
        "fs",
        "existsSync",
        "describe",
        "beforeEach",
        "mkdir",
        "afterEach",
        "rmdir",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "existsSync",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "afterEach",
        "rmfile",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "strictEqual",
        "readFileSync",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "mkdir",
        "templateDir",
        "writeFileSync",
        "templatePath",
        "afterEach",
        "rmfile",
        "templatePath",
        "rmdir",
        "templateDir",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "strictEqual",
        "readFileSync",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "mkdir",
        "templateDir",
        "writeFileSync",
        "templatePath",
        "afterEach",
        "rmfile",
        "templatePath",
        "rmdir",
        "templateDir",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "existsSync",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "mkdir",
        "templateDir",
        "writeFileSync",
        "templatePath",
        "afterEach",
        "rmfile",
        "templatePath",
        "rmdir",
        "templateDir",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "strictEqual",
        "readFileSync",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "mkdir",
        "templateDir",
        "writeFileSync",
        "templatePath",
        "afterEach",
        "rmfile",
        "templatePath",
        "rmdir",
        "templateDir",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "existsSync",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "content",
        "content",
        "strictEqual",
        "readFileSync",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "content",
        "content",
        "strictEqual",
        "readFileSync",
        "it",
        "fs",
        "content",
        "content",
        "strictEqual",
        "readFileSync",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "strictEqual",
        "readFileSync",
        "describe",
        "afterEach",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "fs",
        "strictEqual",
        "fs",
        "describe",
        "beforeEach",
        "mkdir",
        "mkdir",
        "writeFileSync",
        "Buffer",
        "afterEach",
        "rmfile",
        "rmdir",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "it",
        "fs",
        "fs",
        "strictEqual",
        "fs",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "Buffer",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "it",
        "fs",
        "describe",
        "beforeEach",
        "mkdir",
        "writeFileSync",
        "Buffer",
        "afterEach",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "it",
        "fs",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "specDir",
        "writeFileSync",
        "specPath",
        "Buffer",
        "writeFileSync",
        "stringSpecPath",
        "mkdir",
        "writeFileSync",
        "Buffer",
        "writeFileSync",
        "Buffer",
        "writeFileSync",
        "writeFileSync",
        "afterEach",
        "rmfile",
        "stringSpecPath",
        "rmfile",
        "specPath",
        "rmdir",
        "specDir",
        "rmfile",
        "rmfile",
        "rmfile",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "error",
        "notStrictEqual",
        "error",
        "it",
        "fs",
        "it",
        "fs",
        "error",
        "notStrictEqual",
        "error",
        "it",
        "fs",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error",
        "describe",
        "join",
        "__dirname",
        "join",
        "__dirname",
        "beforeEach",
        "mkdir",
        "mkdir",
        "mockDir",
        "writeFileSync",
        "mockPath",
        "afterEach",
        "rmfile",
        "mockPath",
        "rmdir",
        "mockDir",
        "rmfile",
        "rmdir",
        "it",
        "fs",
        "existsSync",
        "strictEqual",
        "readFileSync",
        "it",
        "fs",
        "error",
        "strictEqual",
        "error"
    ],
    "literals": [
        "'assert'",
        "'fs'",
        "'path'",
        "'./file-system'",
        "string",
        "string",
        "string",
        "'FileSystem'",
        "'has a \"cd\" method that'",
        "'should change the current directory.'",
        "''",
        "'foobar/foo'",
        "'foobar/foo'",
        "'../bar'",
        "'foobar/bar'",
        "'has a \"exists\" method that'",
        "'test-generators'",
        "'test-generators/foo.txt'",
        "'test-generators/foo.txt'",
        "'test-generators'",
        "'should return true if the file or directory exists.'",
        "'foo.txt'",
        "'should return true if the file or directory does not exist.'",
        "'bar.txt'",
        "'has a \"ensureDir\" method that'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators/foo'",
        "'test-generators/bar/foo/foobar'",
        "'test-generators/bar/foo'",
        "'test-generators/bar'",
        "'test-generators'",
        "'should create the directory if it does not exist.'",
        "'bar'",
        "'test-generators/bar'",
        "'The directory \"bar\" does not exist.'",
        "'should not throw if the directory already exists.'",
        "'foo'",
        "'should create all intermediate directories.'",
        "'bar/foo/foobar'",
        "'test-generators/bar/foo/foobar'",
        "'The directory \"bar/foo/foobar\" does not exist.'",
        "'has a \"ensureDirOnlyIf\" method that'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators'",
        "'should create the directory if the condition is true.'",
        "'foo'",
        "'test-generators/foo'",
        "'The directory \"foo\" does not exist.'",
        "'should not create the directory if the condition is false.'",
        "'foo'",
        "'test-generators/foo'",
        "'The directory \"foo\" should not exist.'",
        "'has a \"ensureFile\" method that'",
        "'test-generators'",
        "'test-generators/foo.txt'",
        "'hello'",
        "'utf8'",
        "'test-generators/bar.txt'",
        "'test-generators/foo.txt'",
        "'test-generators'",
        "'should create the file if it does not exist.'",
        "'bar.txt'",
        "'test-generators/bar.txt'",
        "'The file \"bar.txt\" does not exist.'",
        "'should not erase the file if it exists.'",
        "'foo.txt'",
        "'test-generators/foo.txt'",
        "'utf8'",
        "'hello'",
        "'has a \"copy\" method that'",
        "'templates/test-file-system'",
        "'templates/test-file-system/tpl.txt'",
        "'test-generators'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should copy the file from the `templates` directory.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" does not exist.'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello'",
        "'should throw an error if the file does not exist.'",
        "'test-file-system/foobar.txt'",
        "'hello.txt'",
        "'An error should have been thrown'",
        "'The template \"test-file-system/foobar.txt\" does not exist.'",
        "'has a \"copyOnlyIf\" method that'",
        "'templates/test-file-system'",
        "'templates/test-file-system/tpl.txt'",
        "'test-generators'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should copy the file if the condition is true.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" does not exist.'",
        "'should not copy the file if the condition is false.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" should not exist.'",
        "'has a \"render\" method that'",
        "'templates/test-file-system'",
        "'templates/test-file-system/tpl.txt'",
        "'test-generators'",
        "'/* foobar */ /* foobar */ /* barfoo */!'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should copy and render the template from the `templates` directory.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'world'",
        "'hello'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" does not exist.'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello hello world!'",
        "'should throw an error if the template does not exist.'",
        "'test-file-system/foobar.txt'",
        "'hello.txt'",
        "'An error should have been thrown'",
        "'The template \"test-file-system/foobar.txt\" does not exist.'",
        "'has a \"renderOnlyIf\" method that'",
        "'templates/test-file-system'",
        "'templates/test-file-system/tpl.txt'",
        "'test-generators'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should copy the file if the condition is true.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" does not exist.'",
        "'should not copy the file if the condition is false.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" should not exist.'",
        "'has a \"modify\" method that'",
        "'test-generators'",
        "'test-generators/hello.txt'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should modify the file with the given callback.'",
        "'hello.txt'",
        "' world!'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello world!'",
        "'has a \"modifyOnlyIf\" method that should'",
        "'test-generators'",
        "'test-generators/hello.txt'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should modify the file with the given callback if the condition is true.'",
        "'hello.txt'",
        "' world!'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello world!'",
        "'should not modify the file with the given callback if the condition is false.'",
        "'hello.txt'",
        "' world!'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello'",
        "'has a \"addNamedExportIn\" method that should'",
        "'test-generators'",
        "'test-generators/hello.txt'",
        "'export { foo } from \\'foo.txt\\';\\n'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should add a named import at the bottom of the file.'",
        "'hello.txt'",
        "'bar'",
        "'bar.txt'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'export { foo } from \\'foo.txt\\';\\nexport { bar } from \\'bar.txt\\';\\n'",
        "'has a \"setUp\" method that'",
        "'test-generators'",
        "'should create the test client directory.'",
        "'test-generators'",
        "'The directory \"test-generators\" does not exist.'",
        "'should set the current directory to none.'",
        "'foobar'",
        "''",
        "'has a \"tearDown\" method that'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators/foo/bar'",
        "'test-generators/foo/bar'",
        "'test-generators/foo'",
        "'test-generators'",
        "'should remove the test client directory and all its contents.'",
        "'test-generators'",
        "'The directory \"test-generators\" should not exist.'",
        "'should set the current directory to none.'",
        "'foobar'",
        "''",
        "'has a \"assetExists\" that'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators/foo'",
        "'test-generators'",
        "'should throw an error if the file does not exist.'",
        "'bar'",
        "'An error should have been thrown.'",
        "'The file \"bar\" does not exist.'",
        "'should not throw an error if the file exits.'",
        "'foo'",
        "'has a \"assetNotExists\" that'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators/foo'",
        "'test-generators'",
        "'should throw an error if the file exits.'",
        "'foo'",
        "'An error should have been thrown.'",
        "'The file \"foo\" should not exist.'",
        "'should not throw an error if the file does not exist.'",
        "'bar'",
        "'has a \"assertEqual\" that'",
        "'specs/test-file-system'",
        "'specs/test-file-system/foo.spec'",
        "'specs/test-file-system/foo.spec.txt'",
        "'hello\\nmy\\nworld'",
        "'utf8'",
        "'test-generators'",
        "'test-generators/foo'",
        "'test-generators/bar'",
        "'test-generators/foo.txt'",
        "'hello\\nmy\\nworld'",
        "'utf8'",
        "'test-generators/bar.txt'",
        "'hi\\nmy\\nearth\\n!'",
        "'utf8'",
        "'test-generators/foo.txt'",
        "'test-generators/bar.txt'",
        "'test-generators/foo'",
        "'test-generators/bar'",
        "'test-generators'",
        "'should throw an error if the two files are different (binary).'",
        "'bar'",
        "'test-file-system/foo.spec'",
        "'An error should have been thrown.'",
        "'An error should have been thrown.'",
        "'should not throw an error if the two files are equal (binary).'",
        "'foo'",
        "'test-file-system/foo.spec'",
        "'should throw an error if the two files are different (string).'",
        "'bar.txt'",
        "'test-file-system/foo.spec.txt'",
        "'An error should have been thrown.'",
        "'An error should have been thrown.'",
        "'should not throw an error if the two files are equal (string).'",
        "'foo.txt'",
        "'test-file-system/foo.spec.txt'",
        "'should throw an error if the spec file does not exist.'",
        "'foobar'",
        "'test-file-system/hello.txt'",
        "'An error should have been thrown'",
        "'The spec file \"test-file-system/hello.txt\" does not exist.'",
        "'should throw understandable errors.'",
        "'bar.txt'",
        "'test-file-system/foo.spec.txt'",
        "'An error should have been thrown.'",
        "The two files \"bar.txt\" and \"test-file-system/foo.spec.txt\" are not equal.\\n\\n",
        "'Line 1\\n'",
        "' Expected: hello\\n'",
        "' Actual: hi\\n'",
        "'\\n'",
        "'Line 3\\n'",
        "' Expected: world\\n'",
        "' Actual: earth\\n'",
        "'\\n'",
        "'Line 4\\n'",
        "' Expected: undefined\\n'",
        "' Actual: !'",
        "'has a \"copyMock\" method that'",
        "'mocks/test-file-system'",
        "'mocks/test-file-system/tpl.txt'",
        "'test-generators'",
        "'hello'",
        "'utf8'",
        "'test-generators/hello.txt'",
        "'test-generators'",
        "'should copy the file from the `mocks` directory.'",
        "'test-file-system/tpl.txt'",
        "'hello.txt'",
        "'test-generators/hello.txt'",
        "'The file \"test-generators/hello.txt\" does not exist.'",
        "'test-generators/hello.txt'",
        "'utf8'",
        "'hello'",
        "'should throw an error if the file does not exist.'",
        "'test-file-system/foobar.txt'",
        "'hello.txt'",
        "'An error should have been thrown'",
        "'The mock file \"test-file-system/foobar.txt\" does not exist.'"
    ],
    "variables": [
        "fs",
        "templateDir",
        "templatePath",
        "templateDir",
        "templatePath",
        "templateDir",
        "templatePath",
        "templateDir",
        "templatePath",
        "specDir",
        "specPath",
        "stringSpecPath",
        "mockDir",
        "mockPath"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "rmdir",
        "rmfile",
        "mkdir"
    ],
    "classes": []
}