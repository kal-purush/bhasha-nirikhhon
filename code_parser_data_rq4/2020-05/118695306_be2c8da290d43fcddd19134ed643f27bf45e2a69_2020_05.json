{
    "identifiers": [
        "jest",
        "fetchExchange",
        "executeExchange",
        "getOperationName",
        "execute",
        "pipe",
        "fromValue",
        "toPromise",
        "take",
        "makeSubject",
        "empty",
        "Source",
        "mocked",
        "queryOperation",
        "makeErrorResult",
        "Client",
        "OperationResult",
        "a",
        "a",
        "getOperationName",
        "queryOperation",
        "jest",
        "afterEach",
        "fetchMock",
        "beforeEach",
        "jest",
        "beforeEach",
        "mocked",
        "a",
        "a",
        "mocked",
        "execute",
        "mockHttpResponseData",
        "describe",
        "it",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "expect",
        "mocked",
        "execute",
        "expect",
        "mocked",
        "execute",
        "schema",
        "queryOperation",
        "context",
        "queryOperation",
        "expectedOperationName",
        "it",
        "context",
        "operation",
        "expect",
        "operation",
        "queryOperation",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "expect",
        "mocked",
        "execute",
        "expect",
        "mocked",
        "execute",
        "schema",
        "queryOperation",
        "queryOperation",
        "expectedOperationName",
        "it",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "fetchMock",
        "jest",
        "mockHttpResponseData",
        "pipe",
        "fromValue",
        "queryOperation",
        "fetchExchange",
        "jest",
        "empty",
        "toPromise",
        "expect",
        "responseFromExecuteExchange",
        "responseFromFetchExchange",
        "expect",
        "mocked",
        "execute",
        "expect",
        "fetchMock",
        "describe",
        "it",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "expect",
        "response",
        "queryOperation",
        "mockHttpResponseData",
        "describe",
        "beforeEach",
        "mocked",
        "execute",
        "it",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "expect",
        "response",
        "queryOperation",
        "expect",
        "response",
        "describe",
        "beforeEach",
        "mocked",
        "execute",
        "it",
        "pipe",
        "fromValue",
        "queryOperation",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "expect",
        "response",
        "makeErrorResult",
        "queryOperation",
        "errors",
        "describe",
        "queryOperation",
        "it",
        "makeSubject",
        "pipe",
        "source",
        "executeExchange",
        "exchangeArgs",
        "take",
        "toPromise",
        "next",
        "operation",
        "expect",
        "response",
        "operation"
    ],
    "literals": [
        "'graphql'",
        "'urql'",
        "'./execute'",
        "'graphql'",
        "'wonka'",
        "'ts-jest/utils'",
        "'@urql/core/test-utils'",
        "'@urql/core'",
        "'@urql/core/client'",
        "'@urql/core/types'",
        "'STUB_SCHEMA'",
        "'value'",
        "'on operation'",
        "'calls execute with args'",
        "'USER_ID=123'",
        "'calls execute after executing context as a function'",
        "'CALCULATED_USER_ID='",
        "'CALCULATED_USER_ID=80'",
        "'should return the same data as the fetch exchange'",
        "'USER_ID=123'",
        "'on success response'",
        "'returns operation result'",
        "'on error response'",
        "'error'",
        "'returns operation result'",
        "'operation'",
        "'error'",
        "'on thrown error'",
        "'error'",
        "'returns operation result'",
        "'on unsupported operation'",
        "'teardown'",
        "'returns operation result'"
    ],
    "variables": [
        "schema",
        "exchangeArgs",
        "expectedOperationName",
        "fetchMock",
        "mockHttpResponseData",
        "context",
        "context",
        "context",
        "responseFromExecuteExchange",
        "responseFromFetchExchange",
        "response",
        "errors",
        "response",
        "errors",
        "response",
        "operation",
        "response"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}