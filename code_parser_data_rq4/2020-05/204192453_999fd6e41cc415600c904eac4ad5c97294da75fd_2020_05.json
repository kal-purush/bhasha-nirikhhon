{
    "identifiers": [
        "Linq",
        "Security",
        "Cryptography",
        "Threading",
        "Threading",
        "Tasks",
        "CardHero",
        "Core",
        "Abstractions",
        "CardHero",
        "Data",
        "Abstractions",
        "CardHero",
        "Core",
        "SqlServer",
        "Handlers",
        "IAddUserToGameHandler",
        "IDeckRepository",
        "deckRepository",
        "IGameDeckRepository",
        "gameDeckRepository",
        "IGameRepository",
        "gameRepository",
        "ITurnRepository",
        "turnRepository",
        "_deckRepository",
        "deckRepository",
        "_gameDeckRepository",
        "gameDeckRepository",
        "_gameRepository",
        "gameRepository",
        "_turnRepository",
        "turnRepository",
        "IAddUserToGameHandler",
        "id",
        "userId",
        "deckId",
        "CancellationToken",
        "cancellationToken",
        "_gameRepository",
        "GetGameByIdAsync",
        "id",
        "game",
        "InvalidGameException",
        "id",
        "_gameRepository",
        "GetGameUsersAsync",
        "id",
        "cancellationToken",
        "cancellationToken",
        "gameUsers",
        "Any",
        "x",
        "Id",
        "userId",
        "InvalidPlayerException",
        "userId",
        "id",
        "gameUsers",
        "Length",
        "gul",
        "game",
        "MaxPlayers",
        "InvalidPlayerException",
        "id",
        "_deckRepository",
        "GetDeckByIdAsync",
        "deckId",
        "userId",
        "cancellationToken",
        "cancellationToken",
        "deck",
        "InvalidDeckException",
        "deckId",
        "deck",
        "UserId",
        "userId",
        "InvalidDeckException",
        "deckId",
        "userId",
        "deck",
        "Cards",
        "Select",
        "x",
        "CardId",
        "ToArray",
        "dc",
        "Length",
        "dcc",
        "deck",
        "MaxCards",
        "InvalidDeckException",
        "deckId",
        "deck",
        "MaxCards",
        "dcc",
        "_gameDeckRepository",
        "AddGameDeckAsync",
        "id",
        "userId",
        "deck",
        "Name",
        "deck",
        "Description",
        "dc",
        "cancellationToken",
        "cancellationToken",
        "gul",
        "game",
        "MaxPlayers",
        "gameUsers",
        "Select",
        "x",
        "Id",
        "Concat",
        "userId",
        "ToArray",
        "PrepareGameForPlayAsync",
        "id",
        "allUsers",
        "cancellationToken",
        "id",
        "userIds",
        "CancellationToken",
        "cancellationToken",
        "userIds",
        "OrderBy",
        "RandomNumberGenerator",
        "GetInt32",
        "MinValue",
        "MaxValue",
        "ToArray",
        "randomUserIds",
        "GameUpdateData",
        "CurrentUserId",
        "currentUserId",
        "_gameRepository",
        "UpdateGameAsync",
        "id",
        "updateGame",
        "cancellationToken",
        "cancellationToken",
        "_gameRepository",
        "UpdateGameUsersOrderAsync",
        "id",
        "randomUserIds",
        "cancellationToken",
        "cancellationToken",
        "TurnData",
        "CurrentUserId",
        "currentUserId",
        "GameId",
        "id",
        "_turnRepository",
        "AddTurnAsync",
        "newTurn",
        "cancellationToken",
        "cancellationToken"
    ],
    "literals": [],
    "variables": [
        "IDeckRepository",
        "_deckRepository",
        "IGameDeckRepository",
        "_gameDeckRepository",
        "IGameRepository",
        "_gameRepository",
        "ITurnRepository",
        "_turnRepository",
        "game",
        "gameUsers",
        "gul",
        "deck",
        "dc",
        "dcc",
        "allUsers",
        "randomUserIds",
        "currentUserId",
        "updateGame",
        "newTurn"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "AddUserToGameHandler",
        "HandleAsync",
        "PrepareGameForPlayAsync"
    ],
    "classes": [
        "AddUserToGameHandler"
    ]
}