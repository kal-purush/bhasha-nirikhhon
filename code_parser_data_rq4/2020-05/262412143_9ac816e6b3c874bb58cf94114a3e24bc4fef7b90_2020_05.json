{
    "identifiers": [
        "csv",
        "in_fname",
        "out_fname",
        "csv_header",
        "open",
        "out_fname",
        "out_f",
        "write",
        "out_csv_header",
        "open",
        "in_fname",
        "newline",
        "csvfile",
        "csv",
        "DictReader",
        "csvfile",
        "row",
        "reader",
        "row",
        "row",
        "row",
        "row",
        "out_f",
        "write",
        "out_str",
        "out_f",
        "close",
        "in_fname",
        "out_fname_prefix",
        "date_str",
        "out_csv_header",
        "out_fname_prefix",
        "date_str",
        "open",
        "out_fname",
        "out_f",
        "write",
        "out_csv_header",
        "open",
        "in_fname",
        "newline",
        "csvfile",
        "csv",
        "DictReader",
        "csvfile",
        "row",
        "reader",
        "row",
        "tstamp",
        "split",
        "parts",
        "date_part",
        "date_str",
        "row",
        "row",
        "row",
        "row",
        "out_f",
        "write",
        "out_str",
        "out_f",
        "close",
        "date_str",
        "s"
    ],
    "literals": [
        "r's:/_congestion_data/granularity_10min/I93_NB_data/i93_nb_mid_march_2020_10min.csv'",
        "r's:/_congestion_data/granularity_10min/I93_NB_data/i93_nb_mid_march_2020_10min_p1.csv'",
        "'tmc,tstamp,speed,cvalue\\n'",
        "'w'",
        "''",
        "'tmc_code'",
        "','",
        "'measurement_tstamp'",
        "','",
        "'speed'",
        "','",
        "'cvalue'",
        "'\\n'",
        "'.csv'",
        "'w'",
        "''",
        "'tstamp'",
        "' '",
        "'tmc'",
        "','",
        "'tstamp'",
        "','",
        "'speed'",
        "','",
        "'cvalue'",
        "'\\n'",
        "'Extraction of data for '",
        "' completed.'"
    ],
    "variables": [
        "in_fname",
        "out_fname",
        "out_csv_header",
        "out_f",
        "reader",
        "out_str",
        "out_fname",
        "out_f",
        "reader",
        "tstamp",
        "parts",
        "date_part",
        "out_str",
        "s"
    ],
    "comments": [
        "Script to process INRIX speed-run data downloaded from RITIS.",
        "",
        "Input: CSV file containing speed data for one 'route' for any number",
        "of 24-hour periods (i.e., days)",
        "",
        "Intermediate output: CSV file that is a copy of the input CSV file,",
        "but only contains attributes of interest.",
        "The column names in the output CSV file are given shorter",
        "names for the sake of convenience: tmc, tstamp, speed, cvalue",
        "",
        "Final output: One CSV file containing the data for each 24-hour period",
        "in the intermediate output.",
        "At least for the time being, it is the user's responsibility",
        "to know, a priori, the list of dates in question.",
        "",
        "",
        "This script assumes that the downloaded data is organized in 10 minute units.",
        "",
        "Overall steps:",
        "1. Extract only the attributes of interest from the raw data from RITIS.",
        "These attributes are: tmc_code, measurement_tstamp, speed, and cvalue.",
        "2. Extract one CSV file for each day's worth of data;",
        "at least for now, the user is expected to know the list of dates",
        "",
        "Step 1 - Generate a CSV file with only the attributes of interest in it.",
        "String containing names of fields in ouput CSV files;",
        "these are the \"attributes of interest\", with shorter names",
        "Step 1: Generate a CSV file with only the attributes of interest in it",
        "",
        "Function to read the raw CSV file generated by RITIS,",
        "and produce an output CSV file containing all the input records,",
        "but only with the \"attributes of interest\" in each row.",
        "",
        "print(row['tmc_code'], row['measurement_tstamp'], row['speed'])",
        "end_for",
        "end_with",
        "end_def",
        "The input to step 2 is the output of step 1.",
        "in_fn2 = out_fname",
        "in_fname = r's:/_congestion_data/granularity_10min/I93_NB_data/i93_nb_mid_march_2020_10min_p1.csv'",
        "out_fname_prefix = r's:/_congestion_data/granularity_10min/I93_NB_data/i93_nb_'",
        "Step 2: Extract one day's worth of data from the intermediate output",
        "",
        "Function to extract the data for one day from the intermediate output,",
        "and write it to a CSV file whose name has the form: i93_nb_<yyyy>-<mm>-<dd>.csv",
        "",
        "The author acknowledges the use of a large sledge hammer here.",
        "",
        "end_if",
        "end_for",
        "end_with",
        "end_def"
    ],
    "docstrings": [],
    "functions": [
        "extract_csv_with_subset_attrs",
        "extract_data_for"
    ],
    "classes": []
}