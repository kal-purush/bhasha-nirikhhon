{
    "identifiers": [
        "re",
        "json",
        "query",
        "join",
        "pair",
        "pair",
        "TOKENS",
        "re",
        "compile",
        "token_regex",
        "match",
        "pos",
        "len",
        "query",
        "get_token",
        "query",
        "pos",
        "mo",
        "SyntaxError",
        "query",
        "pos",
        "pos",
        "mo",
        "lastgroup",
        "mo",
        "group",
        "kind",
        "kind",
        "tokens",
        "append",
        "kind",
        "value",
        "kind",
        "mo",
        "end",
        "tokens",
        "ASTNode",
        "collection",
        "filter_expr",
        "collection",
        "filter_expr",
        "tokens",
        "tokens",
        "pos",
        "len",
        "tokens",
        "tokens",
        "pos",
        "expected_kind",
        "current_token",
        "token_kind",
        "expected_kind",
        "pos",
        "token_value",
        "SyntaxError",
        "expected_kind",
        "token_kind",
        "parse_query",
        "eat",
        "eat",
        "eat",
        "eat",
        "eat",
        "SyntaxError",
        "eat",
        "current_token",
        "token_kind",
        "token_value",
        "rstrip",
        "json",
        "loads",
        "filter_str",
        "json",
        "JSONDecodeError",
        "e",
        "SyntaxError",
        "e",
        "pos",
        "eat",
        "Query",
        "collection",
        "filter_expr",
        "dataset",
        "dataset",
        "node",
        "isinstance",
        "node",
        "Query",
        "evaluate_query",
        "node",
        "ValueError",
        "node",
        "node",
        "dataset",
        "match_filter",
        "node",
        "filter_expr",
        "results",
        "append",
        "results",
        "filter_expr",
        "key",
        "value",
        "filter_expr",
        "items",
        "match_condition",
        "key",
        "value",
        "key",
        "value",
        "key",
        "startswith",
        "key",
        "all",
        "match_filter",
        "cond",
        "cond",
        "value",
        "key",
        "match_filter",
        "cond",
        "cond",
        "value",
        "key",
        "match_filter",
        "value",
        "ValueError",
        "key",
        "get",
        "key",
        "isinstance",
        "value",
        "op",
        "op_value",
        "value",
        "items",
        "evaluate_operator",
        "doc_value",
        "op",
        "op_value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "doc_value",
        "value",
        "ValueError",
        "tokenize",
        "query",
        "Parser",
        "tokens",
        "parser",
        "parse",
        "SyntaxError",
        "e",
        "e",
        "Interpreter",
        "DATASET",
        "interpreter",
        "evaluate",
        "ast",
        "ValueError",
        "e",
        "e",
        "doc",
        "results",
        "json",
        "dumps",
        "doc",
        "indent",
        "main"
    ],
    "literals": [
        "\"_id\"",
        "\"name\"",
        "\"Alice\"",
        "\"age\"",
        "\"city\"",
        "\"New York\"",
        "\"_id\"",
        "\"name\"",
        "\"Bob\"",
        "\"age\"",
        "\"city\"",
        "\"San Francisco\"",
        "\"_id\"",
        "\"name\"",
        "\"Charlie\"",
        "\"age\"",
        "\"city\"",
        "\"Los Angeles\"",
        "\"_id\"",
        "\"name\"",
        "\"Diana\"",
        "\"age\"",
        "\"city\"",
        "\"New York\"",
        "\"_id\"",
        "\"name\"",
        "\"Eve\"",
        "\"age\"",
        "\"city\"",
        "\"Chicago\"",
        "'DB'",
        "r'db'",
        "'DOT'",
        "r'\\.'",
        "'IDENTIFIER'",
        "r'[a-zA-Z_][a-zA-Z0-9_]*'",
        "'LPAREN'",
        "r'\\('",
        "'RPAREN'",
        "r'\\)'",
        "'SKIP'",
        "r'[ \\t\\n]+'",
        "'FILTER'",
        "r'.+'",
        "'|'",
        "'(?P<%s>%s)'",
        "f'Unexpected character {query[pos]!r} at position {pos}'",
        "'SKIP'",
        "'FILTER'",
        "'EOF'",
        "''",
        "f'Expected {expected_kind}, got {token_kind}'",
        "'DB'",
        "'DOT'",
        "'IDENTIFIER'",
        "'DOT'",
        "'IDENTIFIER'",
        "'find'",
        "f\"Unsupported function '{function}'\"",
        "'LPAREN'",
        "'FILTER'",
        "')'",
        "f\"Invalid JSON filter: {e}\"",
        "'RPAREN'",
        "f'Unknown node type: {type(node)}'",
        "'$'",
        "'$and'",
        "'$or'",
        "'$not'",
        "f\"Unsupported operator '{key}'\"",
        "'$gt'",
        "'$lt'",
        "'$gte'",
        "'$lte'",
        "'$eq'",
        "'$ne'",
        "f\"Unsupported operator '{operator}'\"",
        "'db.collection.find({\"age\": {\"$gt\": 25}, \"city\": \"New York\"})'",
        "f\"Syntax error: {e}\"",
        "f\"Runtime error: {e}\"",
        "\"Query Results:\"",
        "'__main__'"
    ],
    "variables": [
        "DATASET",
        "TOKENS",
        "token_regex",
        "get_token",
        "pos",
        "tokens",
        "mo",
        "kind",
        "value",
        "pos",
        "collection",
        "filter_expr",
        "tokens",
        "pos",
        "token_kind",
        "token_value",
        "collection",
        "filter_expr",
        "token_kind",
        "token_value",
        "filter_str",
        "filter_expr",
        "dataset",
        "results",
        "doc_value",
        "query",
        "tokens",
        "parser",
        "ast",
        "interpreter",
        "results"
    ],
    "comments": [
        "demo.py",
        "Sample dataset: a list of documents",
        "Token types",
        "Capture the rest of the line as the filter",
        "Tokenizer",
        "The rest is the filter expression",
        "AST Nodes",
        "Dictionary parsed from JSON",
        "Parser",
        "Move past the FILTER token",
        "Interpreter",
        "Main function",
        "Example query"
    ],
    "docstrings": [],
    "functions": [
        "tokenize",
        "current_token",
        "eat",
        "parse",
        "parse_query",
        "evaluate",
        "evaluate_query",
        "match_filter",
        "match_condition",
        "evaluate_operator",
        "main"
    ],
    "classes": [
        "ASTNode",
        "Query",
        "Parser",
        "Interpreter"
    ]
}