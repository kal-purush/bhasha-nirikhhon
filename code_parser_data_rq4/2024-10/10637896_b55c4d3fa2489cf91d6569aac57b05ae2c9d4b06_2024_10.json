{
    "identifiers": [
        "foo",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "java",
        "net",
        "Socket",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "apache",
        "logging",
        "log4j",
        "util",
        "Constants",
        "assertThat",
        "getPackage",
        "getName",
        "doesNotStartWith",
        "NAMED_MODULE_STACK_TRACE_ELEMENT",
        "namedModuleStackTraceElement",
        "SuppressWarnings",
        "error",
        "stackTraceElements",
        "error",
        "getStackTrace",
        "socketClassName",
        "getCanonicalName",
        "stackTraceElement",
        "stackTraceElements",
        "stackTraceElement",
        "getClassName",
        "equals",
        "socketClassName",
        "Constants",
        "JAVA_MAJOR_VERSION",
        "stackTraceElementString",
        "stackTraceElement",
        "toString",
        "assertThat",
        "stackTraceElementString",
        "startsWith",
        "stackTraceElement",
        "EXCLUDED_CLASS_NAME_PREFIXES",
        "INSTANCE",
        "create",
        "name",
        "depth",
        "maxDepth",
        "circular",
        "namedModuleAllowed",
        "error",
        "name",
        "namedModuleAllowed",
        "depth",
        "maxDepth",
        "cause",
        "create",
        "name",
        "depth",
        "maxDepth",
        "circular",
        "namedModuleAllowed",
        "error",
        "initCause",
        "cause",
        "suppressed",
        "create",
        "name",
        "depth",
        "maxDepth",
        "circular",
        "namedModuleAllowed",
        "error",
        "addSuppressed",
        "suppressed",
        "circularAllowed",
        "depth",
        "maxDepth",
        "circular",
        "circularAllowed",
        "cause",
        "initCause",
        "error",
        "suppressed",
        "initCause",
        "error",
        "circular",
        "error",
        "message",
        "namedModuleAllowed",
        "message",
        "removeExcludedStackTraceElements",
        "namedModuleAllowed",
        "namedModuleAllowed",
        "oldStackTrace",
        "getStackTrace",
        "seenExcludedStackTraceElement",
        "newStackTrace",
        "Arrays",
        "stream",
        "oldStackTrace",
        "flatMap",
        "stackTraceElement",
        "mapStackTraceElement",
        "stackTraceElement",
        "namedModuleAllowed",
        "seenExcludedStackTraceElement",
        "toArray",
        "setStackTrace",
        "newStackTrace",
        "stackTraceElement",
        "namedModuleAllowed",
        "seenExcludedStackTraceElement",
        "filteredStackTraceElement",
        "filterStackTraceElement",
        "stackTraceElement",
        "seenExcludedStackTraceElement",
        "javaBaseIncludedStackTraceElement",
        "namedModuleIncludedStackTraceElement",
        "namedModuleAllowed",
        "Stream",
        "concat",
        "javaBaseIncludedStackTraceElement",
        "filteredStackTraceElement",
        "stackTraceElement",
        "seenExcludedStackTraceElement",
        "seenExcludedStackTraceElement",
        "Stream",
        "empty",
        "className",
        "stackTraceElement",
        "getClassName",
        "excludedClassNamePrefix",
        "EXCLUDED_CLASS_NAME_PREFIXES",
        "className",
        "startsWith",
        "excludedClassNamePrefix",
        "seenExcludedStackTraceElement",
        "Stream",
        "empty",
        "Stream",
        "of",
        "stackTraceElement",
        "namedModuleAllowed",
        "namedModuleAllowed",
        "Stream",
        "of",
        "namedModuleAllowed",
        "Stream",
        "of",
        "NAMED_MODULE_STACK_TRACE_ELEMENT",
        "Override",
        "getMessage"
    ],
    "literals": [
        "\"org.apache\"",
        "\"resource\"",
        "\"0.0.0.0\"",
        "\"java.base/\"",
        "\"should not have reached here\"",
        "\"java.lang\"",
        "\"jdk.internal\"",
        "\"org.junit\"",
        "\"sun.reflect\"",
        "\"r\"",
        "\"_c\"",
        "\"_s\"",
        "\" [localized]\""
    ],
    "variables": [],
    "comments": [
        "Ensure the distinct packaging"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* A testing friendly exception featuring\n * <ul>\n * <li>Distinct localized message</li>\n * <li>Non-Log4j package origin<sup>1</sup></li>\n * <li>Sufficient causal chain depth</li>\n * <li>Cyclic causal chain</li>\n * <li>Suppressed exceptions</li>\n * <li>Clutter-free stack trace (i.e., elements from JUnit, JDK, etc.)</li>\n * <li>Stack trace elements from named modules<sup>2</sup></li>\n * </ul>\n * <p>\n * <sup>1</sup> Helps with observing stack trace manipulation effects of Log4j.\n * </p>\n * <p>\n * <sup>2</sup> Helps with testing module name serialization.\n * </p>"
    ],
    "functions": [
        "StackTraceElement",
        "namedModuleStackTraceElement",
        "TestFriendlyException",
        "create",
        "TestFriendlyException",
        "removeExcludedStackTraceElements",
        "mapStackTraceElement",
        "filterStackTraceElement",
        "namedModuleIncludedStackTraceElement",
        "getLocalizedMessage"
    ],
    "classes": [
        "TestFriendlyException"
    ]
}