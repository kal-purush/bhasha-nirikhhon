{
    "identifiers": [
        "com",
        "adminportal",
        "config",
        "com",
        "adminportal",
        "service",
        "impl",
        "UserSecurityService",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "security",
        "authentication",
        "AuthenticationManager",
        "org",
        "springframework",
        "security",
        "authentication",
        "dao",
        "DaoAuthenticationProvider",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "authentication",
        "configuration",
        "AuthenticationConfiguration",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "method",
        "configuration",
        "EnableMethodSecurity",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "builders",
        "HttpSecurity",
        "org",
        "springframework",
        "security",
        "core",
        "userdetails",
        "UserDetailsService",
        "org",
        "springframework",
        "security",
        "crypto",
        "bcrypt",
        "BCryptPasswordEncoder",
        "org",
        "springframework",
        "security",
        "web",
        "SecurityFilterChain",
        "Configuration",
        "EnableMethodSecurity",
        "prePostEnabled",
        "Autowired",
        "userSecurityService",
        "userSecurityService",
        "userSecurityService",
        "userSecurityService",
        "Bean",
        "name",
        "PUBLIC_MATCHERS",
        "Bean",
        "http",
        "http",
        "authorizeHttpRequests",
        "authorize",
        "authorize",
        "requestMatchers",
        "PUBLIC_MATCHERS",
        "permitAll",
        "anyRequest",
        "authenticated",
        "csrf",
        "csrf",
        "csrf",
        "disable",
        "cors",
        "cors",
        "cors",
        "disable",
        "formLogin",
        "form",
        "form",
        "loginPage",
        "permitAll",
        "defaultSuccessUrl",
        "failureUrl",
        "logout",
        "logout",
        "logout",
        "logoutUrl",
        "logoutSuccessUrl",
        "deleteCookies",
        "permitAll",
        "rememberMe",
        "rememberMe",
        "rememberMe",
        "tokenValiditySeconds",
        "key",
        "userDetailsService",
        "userSecurityService",
        "http",
        "build",
        "Bean",
        "authenticationConfiguration",
        "authenticationConfiguration",
        "getAuthenticationManager",
        "Bean",
        "passwordEncoder",
        "userDetailsService",
        "provider",
        "provider",
        "setUserDetailsService",
        "userDetailsService",
        "provider",
        "setPasswordEncoder",
        "passwordEncoder",
        "provider",
        "Bean",
        "userSecurityService"
    ],
    "literals": [
        "\"configPasswordEncoder\"",
        "\"/css/**\"",
        "\"/js/**\"",
        "\"/image/**\"",
        "\"/\"",
        "\"/newUser\"",
        "\"/forgetPassword\"",
        "\"/login\"",
        "\"/fonts/**\"",
        "\"/login\"",
        "\"/\"",
        "\"/login?error\"",
        "\"/logout\"",
        "\"/?logout\"",
        "\"remember-me\"",
        "\"mySecretKey\""
    ],
    "variables": [
        "userSecurityService"
    ],
    "comments": [
        "Package declaration",
        "Indicates that this class is a Spring configuration class",
        "Enables method-level security (e.g., @PreAuthorize, @PostAuthorize)",
        "Injects UserSecurityService to manage user authentication",
        "Constructor-based dependency injection for UserSecurityService",
        "Defines a BCryptPasswordEncoder bean with the name \"configPasswordEncoder\" for password encoding",
        "Returns a new BCryptPasswordEncoder instance",
        "Defines an array of publicly accessible URLs (no authentication required)",
        "Publicly accessible: CSS files",
        "Publicly accessible: JavaScript files",
        "Publicly accessible: Images",
        "Publicly accessible: Root URL",
        "Defines the security filter chain that configures the application's security settings",
        "Allow public access to the defined matchers",
        "All other requests require authentication",
        "Disables CSRF protection",
        "Disables Cross-Origin Resource Sharing (CORS) protection",
        "Custom login page accessible to everyone",
        "Redirect to the root URL after successful login",
        "Redirect to the login page with an error parameter on failure",
        "Custom logout URL",
        "Redirect to the root URL after successful logout",
        "Deletes the \"remember-me\" cookie on logout and allows everyone to access logout",
        "Remember-me token is valid for 86400 seconds (1 day)",
        "Sets a key for token hashing (should be a strong secret)",
        "Tells remember-me functionality to use the custom UserDetailsService",
        "Builds the HttpSecurity object and returns it as a SecurityFilterChain",
        "Defines the AuthenticationManager bean, which is used for handling authentication",
        "Defines the UserDetailsService bean, which Spring Security uses to load user data for authentication",
        "Returns the injected custom UserSecurityService, which implements UserDetailsService"
    ],
    "docstrings": [],
    "functions": [
        "SecurityConfig",
        "BCryptPasswordEncoder",
        "passwordEncoder",
        "SecurityFilterChain",
        "securityFilterChain",
        "AuthenticationManager",
        "authenticationManager",
        "DaoAuthenticationProvider",
        "daoAuthenticationProvider",
        "UserDetailsService",
        "userDetailsService"
    ],
    "classes": [
        "SecurityConfig"
    ]
}