{
    "identifiers": [
        "org",
        "broadinstitute",
        "consent",
        "http",
        "db",
        "java",
        "time",
        "Instant",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "UUID",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "db",
        "mapper",
        "DraftInterfaceMapper",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "db",
        "mapper",
        "DraftReducer",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "db",
        "mapper",
        "DraftSummaryMapper",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "db",
        "mapper",
        "FileStorageObjectMapperWithFSOPrefix",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "models",
        "DraftInterface",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "models",
        "DraftSummary",
        "org",
        "broadinstitute",
        "consent",
        "http",
        "models",
        "FileStorageObject",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "config",
        "RegisterRowMapper",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "customizer",
        "Bind",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "customizer",
        "BindList",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "statement",
        "GetGeneratedKeys",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "statement",
        "SqlQuery",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "statement",
        "SqlUpdate",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "statement",
        "UseRowMapper",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "statement",
        "UseRowReducer",
        "org",
        "jdbi",
        "v3",
        "sqlobject",
        "transaction",
        "Transactional",
        "RegisterRowMapper",
        "RegisterRowMapper",
        "RegisterRowMapper",
        "DraftDAO",
        "DRAFT_SUMMARY",
        "DRAFT_DETAILS",
        "FileStorageObject",
        "QUERY_FIELDS_WITH_FSO_PREFIX",
        "SqlUpdate",
        "GetGeneratedKeys",
        "Bind",
        "name",
        "Bind",
        "createdDate",
        "Bind",
        "createdUserId",
        "Bind",
        "json",
        "Bind",
        "uuid",
        "Bind",
        "draftType",
        "SqlUpdate",
        "Bind",
        "name",
        "Bind",
        "updateDate",
        "Bind",
        "updateUserId",
        "Bind",
        "json",
        "Bind",
        "uuid",
        "Bind",
        "draftType",
        "SqlUpdate",
        "Bind",
        "uuid",
        "Bind",
        "updateDate",
        "Bind",
        "updateUserId",
        "UseRowReducer",
        "SqlQuery",
        "DRAFT_DETAILS",
        "Bind",
        "createdUserId",
        "UseRowMapper",
        "SqlQuery",
        "DRAFT_SUMMARY",
        "Bind",
        "createdUserId",
        "UseRowReducer",
        "SqlQuery",
        "DRAFT_DETAILS",
        "Bind",
        "uuid",
        "SqlUpdate",
        "BindList",
        "uuid"
    ],
    "literals": [
        "\"\"\"\n      SELECT ds.name, ds.create_date, ds.uuid, ds.update_date\n      FROM draft ds\n      WHERE ds.create_user_id = :createdUserId\n      ORDER BY ds.update_date DESC\n      \"\"\"",
        "\"\"\"\n      SELECT ds.name, ds.create_date, ds.create_user_id, ds.json,\n      ds.uuid, ds.update_date, ds.update_user_id, ds.draft_type,\n      uu.user_id AS uu_user_id, uu.email AS uu_email, uu.display_name AS uu_display_name,\n      uu.create_date AS uu_create_date, uu.email_preference AS uu_email_preference,\n      cu.user_id AS cu_user_id, cu.email AS cu_email, cu.display_name AS cu_display_name,\n      cu.create_date AS cu_create_date, cu.email_preference AS cu_email_preference,\n      \"\"\"",
        "\" \"",
        "\"\"\"\n          FROM draft ds\n          LEFT JOIN users uu on ds.update_user_id = uu.user_id\n          LEFT JOIN users cu on ds.create_user_id = cu.user_id\n          LEFT JOIN file_storage_object fso ON fso.entity_id = ds.uuid::text AND fso.deleted = false\n          \"\"\"",
        "\"\"\"\n          INSERT into draft\n              (name, create_date, create_user_id, update_date,\n              update_user_id, json, uuid, draft_type)\n          (SELECT :name, :createdDate, :createdUserId, :createdDate, :createdUserId, :json::jsonb, :uuid, :draftType)\n          \"\"\"",
        "\"name\"",
        "\"createdDate\"",
        "\"createdUserId\"",
        "\"json\"",
        "\"uuid\"",
        "\"draftType\"",
        "\"\"\"\n      UPDATE draft\n      SET name = :name,\n          update_date = :updateDate,\n          update_user_id = :updateUserId,\n          json = :json::jsonb,\n          draft_type = :draftType\n      WHERE uuid = :uuid\n      \"\"\"",
        "\"name\"",
        "\"updateDate\"",
        "\"updateUserId\"",
        "\"json\"",
        "\"uuid\"",
        "\"draftType\"",
        "\"\"\"\n      UPDATE draft\n      SET\n          update_date = :updateDate,\n          update_user_id = :updateUserId\n      WHERE uuid = :uuid\n      \"\"\"",
        "\"uuid\"",
        "\"updateDate\"",
        "\"updateUserId\"",
        "\"\"\"\n               WHERE ds.create_user_id = :createdUserId\n              \"\"\"",
        "\"createdUserId\"",
        "\"createdUserId\"",
        "\"\"\"\n               WHERE uuid = :uuid\n              \"\"\"",
        "\"uuid\"",
        "\"\"\"\n          DELETE from draft\n          WHERE uuid IN (<uuid_list>)\n          \"\"\"",
        "\"uuid_list\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "insert",
        "updateDraftByDraftUUID",
        "updateDraftByDraftUUID",
        "findDraftsByUserId",
        "findDraftSummariesByUserId",
        "DraftInterface",
        "findDraftById",
        "deleteDraftByUUIDList"
    ],
    "classes": []
}