{
    "identifiers": [
        "LOGGER_PROVIDER",
        "ForkName",
        "Inject",
        "Injectable",
        "LoggerService",
        "CsmContract",
        "VerifierContract",
        "Consensus",
        "BlockHeaderResponse",
        "BlockInfoResponse",
        "RootHex",
        "Withdrawal",
        "WorkersService",
        "KeyInfo",
        "KeyInfoFn",
        "valIndex",
        "Injectable",
        "Inject",
        "LOGGER_PROVIDER",
        "logger",
        "workers",
        "consensus",
        "csm",
        "verifier",
        "blockInfo",
        "keyInfoFn",
        "blockInfo",
        "keyInfoFn",
        "withdrawals",
        "withdrawals",
        "keyWithWithdrawalInfo",
        "proved",
        "unproven",
        "valIndex",
        "keyWithWithdrawalInfo",
        "unproven",
        "unprovenCount",
        "unprovenCount",
        "unproven",
        "blockRoot",
        "blockInfo",
        "finalizedHeader",
        "withdrawals",
        "withdrawals",
        "blockRoot",
        "blockHeader",
        "blockInfo",
        "finalizedHeader",
        "blockHeader",
        "blockInfo",
        "state",
        "finalizedHeader",
        "withdrawals",
        "blockHeader",
        "blockInfo",
        "state",
        "withdrawals",
        "blockHeader",
        "blockInfo",
        "state",
        "ForkName",
        "withdrawals",
        "blockHeader",
        "nextBlockHeader",
        "blockHeader",
        "nextBlockTs",
        "blockInfo",
        "blockHeader",
        "payload",
        "payloads",
        "payload",
        "payload",
        "blockHeader",
        "blockInfo",
        "state",
        "ForkName",
        "finalizedHeader",
        "withdrawals",
        "finalizedHeader",
        "nextBlockHeader",
        "finalizedHeader",
        "blockInfo",
        "summaryIndex",
        "summarySlot",
        "blockHeader",
        "finalizedHeader",
        "nextBlockTs",
        "state",
        "blockInfo",
        "blockInfo",
        "blockHeader",
        "payload",
        "payloads",
        "payload",
        "payload",
        "blockInfo",
        "keyInfoFn",
        "valIndex",
        "blockInfo",
        "i",
        "withdrawals",
        "i",
        "keyInfoFn",
        "withdrawals",
        "i",
        "keyInfo",
        "withdrawals",
        "i",
        "FULL_WITHDRAWAL_MIN_AMOUNT",
        "fullWithdrawals",
        "withdrawals",
        "i",
        "keyInfo",
        "withdrawals",
        "i",
        "i",
        "fullWithdrawals",
        "blockInfo",
        "finalizedHeader",
        "finalizationBufferEpochs",
        "finalizedHeader",
        "blockInfo",
        "finalizationBufferSlots",
        "blockInfo",
        "blockInfo",
        "capellaForkSlot",
        "slotsPerHistoricalRoot",
        "summaryIndex",
        "capellaForkSlot",
        "summaryIndex",
        "slotsPerHistoricalRoot",
        "blockInfo",
        "blockInfo",
        "slotsPerHistoricalRoot"
    ],
    "literals": [
        "'@lido-nestjs/logger'",
        "'@lodestar/params'",
        "'@nestjs/common'",
        "'../../contracts/csm-contract.service'",
        "'../../contracts/verifier-contract.service'",
        "'../../providers/consensus/consensus'",
        "'../../providers/consensus/response.interface'",
        "'../../workers/workers.service'",
        "'../types'",
        "string",
        "'No full withdrawals to prove'",
        "üîç Unproven full withdrawals: ${unprovenCount}",
        "'It is historical withdrawal. Processing will take longer than usual'",
        "Building withdrawal proof payloads",
        "üì° Sending withdrawal proof payload for validator index: ${payload.witness.validatorIndex}",
        "'Building historical withdrawal proof payloads'",
        "üì° Sending historical withdrawal proof payload for validator index: ${payload.witness.validatorIndex}"
    ],
    "variables": [
        "FULL_WITHDRAWAL_MIN_AMOUNT",
        "withdrawals",
        "unproven",
        "valIndex",
        "keyWithWithdrawalInfo",
        "proved",
        "unprovenCount",
        "blockHeader",
        "state",
        "nextBlockHeader",
        "nextBlockTs",
        "payloads",
        "nextBlockHeader",
        "nextBlockTs",
        "finalizedState",
        "summaryIndex",
        "summarySlot",
        "summaryState",
        "payloads",
        "fullWithdrawals",
        "withdrawals",
        "i",
        "keyInfo",
        "finalizationBufferEpochs",
        "finalizationBufferSlots",
        "capellaForkSlot",
        "slotsPerHistoricalRoot",
        "capellaForkSlot",
        "slotsPerHistoricalRoot",
        "slotsPerHistoricalRoot"
    ],
    "comments": [
        "according to the research https://hackmd.io/1wM8vqeNTjqt4pC3XoCUKQ?view#Proposed-solution",
        "8 ETH in Gwei",
        "There is a case when the block is not historical regarding the finalized block, but it is historical",
        "regarding the transaction execution time. This is possible when long finalization time",
        "The transaction will be reverted and the application will try to handle that block again",
        "create proof against the state with withdrawals",
        "create proof against the historical state with withdrawals"
    ],
    "docstrings": [],
    "functions": [
        "getUnprovenWithdrawals",
        "sendWithdrawalProofs",
        "sendGeneralWithdrawalProofs",
        "sendHistoricalWithdrawalProofs",
        "getFullWithdrawals",
        "isHistoricalBlock",
        "calcSummaryIndex",
        "calcSlotOfSummary",
        "calcRootIndexInSummary"
    ],
    "classes": [
        "WithdrawalsService"
    ]
}