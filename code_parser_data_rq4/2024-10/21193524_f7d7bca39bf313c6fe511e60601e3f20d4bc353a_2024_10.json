{
    "identifiers": [
        "org",
        "apache",
        "calcite",
        "adapter",
        "arrow",
        "org",
        "apache",
        "calcite",
        "test",
        "CalciteAssert",
        "org",
        "apache",
        "calcite",
        "util",
        "Sources",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableMap",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "io",
        "TempDir",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "net",
        "URL",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "sql",
        "SQLException",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "requireNonNull",
        "arrow",
        "arrowDataDirectory",
        "BeforeAll",
        "TempDir",
        "sharedTempDir",
        "modelUrl",
        "requireNonNull",
        "getResource",
        "sourceModelFilePath",
        "Sources",
        "of",
        "modelUrl",
        "file",
        "toPath",
        "modelFileTarget",
        "sharedTempDir",
        "resolve",
        "Files",
        "copy",
        "sourceModelFilePath",
        "modelFileTarget",
        "arrowFilesDirectory",
        "sharedTempDir",
        "resolve",
        "Files",
        "createDirectory",
        "arrowFilesDirectory",
        "arrowDataDirectory",
        "arrowFilesDirectory",
        "toFile",
        "dataLocationFile",
        "arrowFilesDirectory",
        "resolve",
        "toFile",
        "arrowDataGenerator",
        "arrowDataGenerator",
        "writeArrowDataType",
        "dataLocationFile",
        "arrow",
        "ImmutableMap",
        "of",
        "modelFileTarget",
        "toAbsolutePath",
        "toString",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan",
        "Test",
        "sql",
        "plan",
        "result",
        "CalciteAssert",
        "that",
        "arrow",
        "query",
        "sql",
        "limit",
        "returns",
        "result",
        "explainContains",
        "plan"
    ],
    "literals": [
        "\"/arrow-model.json\"",
        "\"url\"",
        "\"arrow-model.json\"",
        "\"arrow\"",
        "\"arrowdatatype.arrow\"",
        "\"model\"",
        "\"select \\\"tinyIntField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(tinyIntField=[$0])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"tinyIntField=0\\ntinyIntField=1\\n\"",
        "\"select \\\"smallIntField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(smallIntField=[$1])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"smallIntField=0\\nsmallIntField=1\\n\"",
        "\"select \\\"intField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(intField=[$2])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"intField=0\\nintField=1\\n\"",
        "\"select \\\"longField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(longField=[$5])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"longField=0\\nlongField=1\\n\"",
        "\"select \\\"floatField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(floatField=[$4])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"floatField=0.0\\nfloatField=1.0\\n\"",
        "\"select \\\"doubleField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(doubleField=[$6])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"doubleField=0.0\\ndoubleField=1.0\\n\"",
        "\"select \\\"decimalField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(decimalField=[$8])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"decimalField=0.00\\ndecimalField=1.00\\n\"",
        "\"select \\\"dateField\\\" from arrowdatatype\"",
        "\"PLAN=ArrowToEnumerableConverter\\n\"",
        "\"  ArrowProject(dateField=[$9])\\n\"",
        "\"    ArrowTableScan(table=[[ARROW, ARROWDATATYPE]], fields=[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]])\\n\\n\"",
        "\"dateField=1970-01-01\\n\"",
        "\"dateField=1970-01-02\\n\""
    ],
    "variables": [
        "arrow",
        "arrowDataDirectory"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Test cases for Arrow adapter data types."
    ],
    "functions": [
        "initializeArrowState",
        "testTinyIntProject",
        "testSmallIntProject",
        "testIntProject",
        "testLongProject",
        "testFloatProject",
        "testDoubleProject",
        "testDecimalProject",
        "testDateProject"
    ],
    "classes": [
        "ArrowAdapterDataTypesTest"
    ]
}