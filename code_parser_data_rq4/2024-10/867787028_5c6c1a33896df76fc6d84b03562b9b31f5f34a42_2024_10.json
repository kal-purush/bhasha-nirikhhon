{
    "identifiers": [
        "yt_dlp",
        "os",
        "re",
        "filename",
        "re",
        "sub",
        "filename",
        "sanitized_title",
        "os",
        "path",
        "exists",
        "sanitized_title",
        "yt_dlp",
        "YoutubeDL",
        "ydl_opts",
        "ydl",
        "ydl",
        "extract_info",
        "playlist_url",
        "download",
        "video",
        "playlist_info",
        "video",
        "video",
        "sanitize_filename",
        "title",
        "title",
        "check_if_downloaded",
        "sanitized_title",
        "title",
        "ydl",
        "download",
        "video",
        "sanitized_title",
        "os",
        "path",
        "exists",
        "output_file",
        "output_file",
        "sanitized_title",
        "yt_dlp",
        "utils",
        "DownloadError",
        "e",
        "title",
        "e",
        "sanitized_title"
    ],
    "literals": [
        "''",
        "'outtmpl'",
        "'%(title)s.%(ext)s'",
        "'format'",
        "'bestvideo+bestaudio/best'",
        "r'[<>:\"/\\\\|?*]'",
        "''",
        "f\"{sanitized_title}.mp4\"",
        "'entries'",
        "'title'",
        "f\"Checking: {title}\"",
        "f\"Downloading: {title}\"",
        "'webpage_url'",
        "f\"{sanitized_title}.mp4\"",
        "f\"Downloaded: {output_file}\"",
        "f\"Failed to download {sanitized_title}.mp4\"",
        "f\"Error downloading {title}: {e}\"",
        "f\"Already downloaded: {sanitized_title}.mp4\"",
        "\"Playlist download completed!\""
    ],
    "variables": [
        "playlist_url",
        "ydl_opts",
        "playlist_info",
        "title",
        "sanitized_title",
        "output_file"
    ],
    "comments": [
        "Import the yt-dlp library",
        "Provide the playlist URL",
        "Set the download options",
        "Save using the video title as filename",
        "Download best quality video and audio combined, fallback to best",
        "Download the entire playlist",
        "Get playlist information without downloading",
        "Download the video using 'webpage_url'",
        "Check the output file name and display it"
    ],
    "docstrings": [
        "\"\"\"Sanitize the filename by removing invalid characters.\"\"\"",
        "\"\"\"Check if the video file already exists.\"\"\""
    ],
    "functions": [
        "sanitize_filename",
        "check_if_downloaded"
    ],
    "classes": []
}