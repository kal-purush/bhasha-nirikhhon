{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "express",
        "app",
        "express",
        "app",
        "cors",
        "mysql",
        "Conexión",
        "err",
        "err",
        "err",
        "app",
        "req",
        "res",
        "req",
        "req",
        "req",
        "apiKey",
        "apiKey",
        "SECRET_KEY",
        "res",
        "Conexión",
        "db",
        "email",
        "password",
        "err",
        "data",
        "err",
        "res",
        "data",
        "jwt",
        "email",
        "SECRET_KEY",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "req",
        "fullName",
        "age",
        "gender",
        "address",
        "phone",
        "email",
        "password",
        "confirmPassword",
        "res",
        "Conexión",
        "query",
        "fullName",
        "age",
        "gender",
        "address",
        "phone",
        "email",
        "password",
        "confirmPassword",
        "err",
        "result",
        "err",
        "err",
        "res",
        "res",
        "req",
        "res",
        "next",
        "req",
        "req",
        "token",
        "res",
        "jwt",
        "token",
        "SECRET_KEY",
        "err",
        "user",
        "err",
        "res",
        "req",
        "user",
        "next",
        "app",
        "authenticateToken",
        "req",
        "res",
        "res",
        "req",
        "app"
    ],
    "literals": [
        "\"express\"",
        "\"mysql\"",
        "\"cors\"",
        "\"jsonwebtoken\"",
        "\"6$ty9EyLqWHPJzVd$KFtV7MK3\"",
        "\"localhost\"",
        "\"datos usuario\"",
        "\"root\"",
        "\"\"",
        "\"Error al conectar a la base de datos:\"",
        "\"Conexión a la base de datos establecida con éxito.\"",
        "'/login'",
        "'authorization'",
        "'authorization'",
        "' '",
        "\"apiKey\"",
        "\"API key incorrecta.\"",
        "\"SELECT * FROM users_test WHERE email = ? AND contraseña = ?\"",
        "\"Error en inicio de sesión\"",
        "'1h'",
        "\"Usuario incorrecto\"",
        "'/register'",
        "\"Datos recibidos para registro:\"",
        "\"Todos los campos son requeridos.\"",
        "INSERT INTO users_test (nombreCompleto, edad, genero, direccion, Celular, email, contraseña, confirmarContraseña)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?)",
        "\"Error al registrar usuario:\"",
        "\"Error al registrar usuario.\"",
        "\"Registro exitoso.\"",
        "'authorization'",
        "'authorization'",
        "' '",
        "'/protected'",
        "\"Esta es una ruta protegida\"",
        "\"Servidor escuchando en el puerto 3000...\""
    ],
    "variables": [
        "express",
        "mysql",
        "cors",
        "jwt",
        "app",
        "SECRET_KEY",
        "Conexión",
        "apiKey",
        "db",
        "token",
        "query",
        "token"
    ],
    "comments": [
        "Importar módulos con require",
        "Importar jsonwebtoken",
        "Configuración del servidor",
        "Cambia esto a una clave secreta más segura",
        "Conexión a base de datos",
        "Nombre correcto de la base de datos",
        "Abrir la conexión a la base de datos",
        "Ruta para iniciar sesión",
        "Desestructurar email, password y apiKey del cuerpo de la solicitud",
        "Extraer la apiKey del encabezado",
        "Validar apiKey",
        "Reemplaza 'YOUR_API_KEY' con la clave real",
        "Respuesta si la apiKey es incorrecta",
        "Generar un token JWT",
        "Enviar el token al frontend",
        "Respuesta si las credenciales son incorrectas",
        "Ruta para registrar un nuevo usuario",
        "Log para verificar los campos recibidos",
        "Validar que todos los campos estén presentes",
        "Consulta para insertar un nuevo usuario",
        "Middleware para autenticar el token",
        "Si no hay token, retorna 401",
        "Si el token no es válido, retorna 403",
        "Si es válido, guarda el usuario en la solicitud",
        "Llama al siguiente middleware",
        "Ruta protegida para obtener datos del usuario",
        "Poner a escuchar el servidor"
    ],
    "docstrings": [],
    "functions": [
        "authenticateToken"
    ],
    "classes": []
}