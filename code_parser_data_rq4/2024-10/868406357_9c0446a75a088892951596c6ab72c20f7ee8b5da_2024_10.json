{
    "identifiers": [
        "streamlit",
        "st",
        "hashlib",
        "sqlite3",
        "datetime",
        "datetime",
        "numpy",
        "np",
        "pandas",
        "pd",
        "sklearn",
        "ensemble",
        "RandomForestRegressor",
        "sklearn",
        "metrics",
        "mean_absolute_percentage_error",
        "mean_squared_error",
        "r2_score",
        "sklearn",
        "model_selection",
        "train_test_split",
        "sklearn",
        "preprocessing",
        "RobustScaler",
        "matplotlib",
        "pyplot",
        "plt",
        "st_aggrid",
        "AgGrid",
        "GridOptionsBuilder",
        "streamlit_autorefresh",
        "st_autorefresh",
        "sqlite3",
        "connect",
        "sqlite3",
        "Row",
        "conn",
        "url",
        "hashlib",
        "sha256",
        "url",
        "encode",
        "hexdigest",
        "username",
        "password",
        "get_db_connection",
        "conn",
        "execute",
        "username",
        "password",
        "fetchone",
        "conn",
        "close",
        "user",
        "username",
        "password",
        "subscription",
        "get_db_connection",
        "conn",
        "execute",
        "username",
        "password",
        "subscription",
        "datetime",
        "now",
        "conn",
        "commit",
        "conn",
        "close",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "success",
        "st",
        "subheader",
        "st",
        "text_input",
        "st",
        "text_input",
        "st",
        "button",
        "key",
        "login_user",
        "username",
        "password",
        "user",
        "st",
        "session_state",
        "username",
        "st",
        "session_state",
        "user",
        "st",
        "success",
        "st",
        "error",
        "st",
        "write",
        "st",
        "button",
        "key",
        "st",
        "session_state",
        "st",
        "subheader",
        "st",
        "text_input",
        "st",
        "text_input",
        "st",
        "selectbox",
        "st",
        "button",
        "key",
        "register_user",
        "username",
        "password",
        "subscription",
        "st",
        "success",
        "st",
        "session_state",
        "st",
        "button",
        "key",
        "st",
        "session_state",
        "MLD_main",
        "st",
        "title",
        "st",
        "sidebar",
        "selectbox",
        "st",
        "sidebar",
        "st",
        "selectbox",
        "st",
        "write",
        "st_m_type",
        "st_m_type",
        "st_m_type",
        "st_m_type",
        "st_m_type",
        "st",
        "write",
        "st",
        "button",
        "apply_cicd",
        "st",
        "button",
        "st",
        "write",
        "st",
        "write",
        "st",
        "selectbox",
        "data_file_up",
        "st",
        "file_uploader",
        "st",
        "write",
        "data_file",
        "data_file",
        "pd",
        "read_csv",
        "data_file",
        "st",
        "selectbox",
        "df",
        "columns",
        "data_file_up",
        "connect",
        "st",
        "sidebar",
        "st",
        "text_input",
        "st",
        "write",
        "st",
        "write",
        "public_gsheets_url",
        "st",
        "write",
        "public_gsheets_url",
        "query",
        "conn",
        "execute",
        "query",
        "headers",
        "rows",
        "fetchall",
        "rows",
        "public_gsheets_url",
        "run_query",
        "sheet_url",
        "st",
        "write",
        "pd",
        "DataFrame",
        "rows",
        "gs_df",
        "shape",
        "gs_df",
        "st",
        "selectbox",
        "df",
        "columns",
        "st",
        "write",
        "gs_df",
        "st",
        "write",
        "st",
        "button",
        "process",
        "data_file",
        "data",
        "df",
        "target",
        "st_type",
        "st",
        "write",
        "process",
        "display",
        "selected_option",
        "st",
        "write",
        "st",
        "write",
        "st_type",
        "st",
        "columns",
        "st",
        "write",
        "col1",
        "col1",
        "st",
        "header",
        "st",
        "image",
        "col2",
        "st",
        "header",
        "st",
        "image",
        "col3",
        "st",
        "header",
        "st",
        "image",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "file_uploader",
        "data_file",
        "name",
        "data_file",
        "round",
        "data_file",
        "size",
        "st",
        "write",
        "file_details",
        "pd",
        "read_csv",
        "data_file",
        "st",
        "selectbox",
        "df",
        "columns",
        "st",
        "button",
        "process",
        "data_file",
        "st",
        "dataframe",
        "df",
        "data",
        "df",
        "target",
        "st_type",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "st",
        "write",
        "st_type",
        "data",
        "st_type",
        "st",
        "write",
        "selected_option",
        "data",
        "selected_option",
        "data",
        "url",
        "selected_option",
        "st",
        "write",
        "connect",
        "st",
        "sidebar",
        "st",
        "text_input",
        "public_gsheets_url",
        "query",
        "conn",
        "execute",
        "query",
        "headers",
        "rows",
        "fetchall",
        "rows",
        "public_gsheets_url",
        "run_query",
        "sheet_url",
        "st",
        "write",
        "pd",
        "DataFrame",
        "rows",
        "st",
        "write",
        "gs_df",
        "st",
        "write",
        "st",
        "write",
        "st",
        "stop",
        "st",
        "set_page_config",
        "page_title",
        "page_icon",
        "layout",
        "st",
        "title",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "st",
        "session_state",
        "user",
        "st",
        "sidebar",
        "write",
        "st",
        "session_state",
        "user",
        "st",
        "sidebar",
        "button",
        "key",
        "on_click",
        "logout",
        "st",
        "session_state",
        "subscription",
        "run_dashboard",
        "st",
        "write",
        "pd",
        "DataFrame",
        "np",
        "random",
        "randn",
        "columns",
        "st",
        "line_chart",
        "data",
        "st",
        "button",
        "st",
        "write",
        "st",
        "session_state",
        "show_register_form",
        "register_view",
        "login_view",
        "main"
    ],
    "literals": [
        "'database.db'",
        "'SELECT * FROM users WHERE username = ? AND password = ?'",
        "'INSERT INTO users (username, password, subscription, created_at) VALUES (?, ?, ?, ?)'",
        "\"Logged out successfully\"",
        "\"Login\"",
        "\"Username\"",
        "\"Password\"",
        "\"password\"",
        "\"Login\"",
        "\"login_button\"",
        "\"subscription\"",
        "\"Logged in successfully!\"",
        "\"Invalid username or password\"",
        "\"Don't have an account?\"",
        "\"Register\"",
        "\"show_register_button\"",
        "\"Register\"",
        "\"Username (for registration)\"",
        "\"Password (for registration)\"",
        "\"password\"",
        "\"Subscription Type\"",
        "'free'",
        "'pro'",
        "'premium'",
        "'on demand'",
        "\"Register\"",
        "\"register_button\"",
        "\"Registration successful! Please login.\"",
        "\"Back to Login\"",
        "\"back_to_login_button\"",
        "'ML Dashboard'",
        "\"Choose Dataset\"",
        "\"None\"",
        "\"all_data_bike2\"",
        "\"house_price_data\"",
        "\"cyclonePreheater\"",
        "\"inverter_data\"",
        "\"KAG_conversion_data2\"",
        "\"Sunspot\"",
        "\"out_clean\"",
        "\"winequality-white2\"",
        "\"other\"",
        "\"url\"",
        "\"g_sheet\"",
        "\"select type\"",
        "\"None\"",
        "\"regression\"",
        "\"classification\"",
        "\"time series\"",
        "\"pipe\"",
        "'** Use pipe only for kc_house_data.csv (available on kaggle), due to its testing phase'",
        "'None'",
        "'regression'",
        "'classification'",
        "'time series'",
        "'pipe'",
        "'selct a model type'",
        "'display'",
        "'Apply CI'",
        "\":smile:\"",
        "'choose how you want to enter a data as a google sheet or just upload'",
        "\"how to upload a data\"",
        "\"Drag or browse file\"",
        "\"google sheet\"",
        "\"Drag or browse file\"",
        "\"Upload CSV\"",
        "'csv'",
        "\"select target\"",
        "\"google sheet\"",
        "'The google sheet URL link'",
        "'only press enter with keyboard'",
        "'DO NOT HIT PROCESS BEFORE SELECTING TARGET'",
        "f'SELECT * FROM \"{sheet_url}\"'",
        "'runned sucess'",
        "'google sheet'",
        "\"select target\"",
        "'enter the url, then again click display button'",
        "\"Process\"",
        "'None'",
        "'NO DataSet selected'",
        "\"A cat\"",
        "\"https://static.streamlit.io/examples/cat.jpg\"",
        "\"A dog\"",
        "\"https://static.streamlit.io/examples/dog.jpg\"",
        "\"An owl\"",
        "\"https://static.streamlit.io/examples/owl.jpg\"",
        "'all_data_bike2'",
        "'type 1 and type 3 compatible only'",
        "'all_data_bike2.csv'",
        "'count'",
        "'select appropriate type'",
        "'upload'",
        "\"Upload CSV\"",
        "'csv'",
        "\"Filename\"",
        "\"FileType\"",
        "\"FileSize (in kb)\"",
        "\"select target\"",
        "\"Process\"",
        "'house_price_data'",
        "'type 1,2 and type 3 compatible only'",
        "'data.csv'",
        "'price'",
        "'select appropriate type'",
        "'inverter_data'",
        "'type 1,2 and type 3 compatible only'",
        "'inverter_data3.csv'",
        "'1104500527'",
        "'select appropriate type'",
        "'cyclonePreheater'",
        "'type 1,2 and type 3 compatible only'",
        "'cyclonePreheater7.csv'",
        "'Cyclone_Gas_Outlet_Temp'",
        "'select appropriate type'",
        "'KAG_conversion_data2'",
        "'type 0 compatible only'",
        "'KAG_conversion_data2.csv'",
        "'conv_rate'",
        "'select appropriate type'",
        "'Sunspot'",
        "'type 1 and type 3 compatible only'",
        "'Sunspots.csv'",
        "'Monthly Mean Total Sunspot Number'",
        "'select appropriate type'",
        "'out_clean'",
        "'type 1 and type 3 compatible only'",
        "'Out_clean.csv'",
        "'Total_Generation_kwh'",
        "'select appropriate type'",
        "'winequality-white2'",
        "'type 0 compatible only'",
        "'winequality-white2.csv'",
        "'quality'",
        "'select appropriate type'",
        "'other'",
        "'climate.xml'",
        "'url'",
        "'https://raw.githubusercontent.com/JoaquinAmatRodrigo/skforecast/master/data/h2o_exog.csv'",
        "'y'",
        "'g_sheet'",
        "'option entered for g-sheet'",
        "'The URL link'",
        "''",
        "f'SELECT * FROM \"{sheet_url}\"'",
        "'runned sucess'",
        "'enter the url, then again click display button'",
        "'done'",
        "\"ML-dashboard\"",
        "\"🧊\"",
        "\"wide\"",
        "\"ML Dashboard with Authentication\"",
        "\"user\"",
        "\"show_register_form\"",
        "f\"Logged in as {st.session_state.user}\"",
        "\"Logout\"",
        "\"logout_button\"",
        "'pro'",
        "'premium'",
        "\"You're on a free or on-demand subscription. Upgrade to access the full dashboard.\"",
        "'a'",
        "'b'",
        "'c'",
        "\"Run Analysis\"",
        "\"Analysis complete!\"",
        "'__main__'"
    ],
    "variables": [
        "conn",
        "conn",
        "row_factory",
        "conn",
        "user",
        "conn",
        "user",
        "subscription",
        "show_register_form",
        "username",
        "password",
        "user",
        "user",
        "subscription",
        "show_register_form",
        "username",
        "password",
        "subscription",
        "show_register_form",
        "show_register_form",
        "selected_option",
        "st_m_type",
        "st_type",
        "st_type",
        "st_type",
        "st_type",
        "st_type",
        "display",
        "data_file_up",
        "data_file",
        "df",
        "target",
        "conn",
        "public_gsheets_url",
        "rows",
        "rows",
        "sheet_url",
        "rows",
        "gs_df",
        "df",
        "data_file",
        "target",
        "process",
        "col1",
        "col2",
        "col3",
        "data_file",
        "file_details",
        "df",
        "target",
        "process",
        "url",
        "conn",
        "public_gsheets_url",
        "rows",
        "rows",
        "sheet_url",
        "rows",
        "gs_df",
        "user",
        "subscription",
        "show_register_form",
        "data"
    ],
    "comments": [
        "Database connection",
        "Hashing the URL",
        "Handle user login",
        "Handle user registration",
        "Logout functionality",
        "Login view",
        "Registration view",
        "Dashboard functionality",
        "selected_option = st.sidebar.selectbox(",
        "\"Choose Dataset\",",
        "(\"None\",\"regression\",\"classification\", \"time series\")",
        ")",
        "st.write('* type: ',0,1,2,'regression')",
        "st.write('* type: ',0,'= not a time data with normal ML')",
        "st.write(1,',',2,'= time data with normal ML')",
        "st.write(3,'= time_series')",
        "with st.sidebar:",
        "data(df, target, type)",
        "import time_series as ts",
        "@st.cache(ttl=7200)",
        "ts.data(df, target)",
        "public_gsheets_url = \"https://docs.google.com/spreadsheets/d/1lh9YUjvYfRIO7o88wgA3fpwxTlWrMKe36S5TFRwzbdI/edit?usp=sharing\"",
        "Create a connection object.",
        "connected = http.client.HTTPConnection(public_gsheets_url)",
        "Perform SQL query on the Google Sheet.",
        "Uses st.cache to only rerun when the query changes or after 10 min = 600 ttl.",
        "@st.experimental_memo(ttl=300)",
        "@st.cache(ttl=75)",
        ", headers=1",
        "st.write('runned sucess')",
        "sheet_url = st.secrets[\"public_gsheets_url\"]",
        "st.write('rows are:',rows)",
        "Print results.",
        "for row in rows:",
        "st.write(f\"{row.Name} has {row.age} age\")",
        "with st.spinner('Loading your data from google sheets... \\n please wait for a bit'):",
        "target = st.selectbox(\"select target\",gs_df.columns)",
        "st.write(target)",
        "with st.sidebar:",
        "st.write(type(df))",
        "data_dict = df.to_dict()",
        "display",
        "st.write(type(data_dict))",
        "df = pd.DataFrame.from_dict(data_dict)",
        "st.write(type(df))",
        "st.dataframe(df)",
        "data(data_file,'',st_type)",
        "process=False",
        "except Exception:",
        "st.write('either select file or upload a file....')",
        "a,b,c = st.columns(3)",
        "if selected_option in df.columns:",
        "data('cyclonePreheater.csv','Cyclone_Gas_Outlet_Temp',2)",
        "data('cyclonePreheater.csv','Cyclone_Gas_Outlet_Temp',2)",
        "data('cyclonePreheater.csv','Cyclone_Gas_Outlet_Temp',2)",
        "public_gsheets_url = \"https://docs.google.com/spreadsheets/d/1lh9YUjvYfRIO7o88wgA3fpwxTlWrMKe36S5TFRwzbdI/edit?usp=sharing\"",
        "Create a connection object.",
        "connected = http.client.HTTPConnection(public_gsheets_url)",
        "Perform SQL query on the Google Sheet.",
        "Uses st.cache to only rerun when the query changes or after 10 min = 600 ttl.",
        "@st.experimental_memo(ttl=300)",
        "@st.cache(ttl=75)",
        "st.write('runned sucess')",
        "sheet_url = st.secrets[\"public_gsheets_url\"]",
        "st.write('rows are:',rows)",
        "Print results.",
        "for row in rows:",
        "st.write(f\"{row.Name} has {row.age} age\")",
        "st.experimental_memo.clear()",
        "st.rerun(120)",
        "st.experimental_rerun()",
        "You can add more functions and components from MLD.py as needed",
        "Add your dashboard code here",
        "For example:",
        "Add more components from your original MLD.py here",
        "For example:",
        "Placeholder for analysis function"
    ],
    "docstrings": [
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data without datetime \"\"\"",
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data with datetime \"\"\"",
        "\"\"\" data without datetime \"\"\"",
        "\"\"\" other data's \"\"\"",
        "\"\"\"data from url\"\"\""
    ],
    "functions": [
        "get_db_connection",
        "hash_url",
        "login_user",
        "register_user",
        "logout",
        "login_view",
        "register_view",
        "run_dashboard",
        "run_query",
        "run_query",
        "main"
    ],
    "classes": []
}