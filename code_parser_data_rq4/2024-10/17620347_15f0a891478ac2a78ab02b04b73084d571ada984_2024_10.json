{
    "identifiers": [
        "Linq",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Syntax",
        "Microsoft",
        "AspNetCore",
        "SourceGenerators",
        "Generator",
        "IIncrementalGenerator",
        "IncrementalGeneratorInitializationContext",
        "context",
        "context",
        "CompilationProvider",
        "Select",
        "compilation",
        "cancellationToken",
        "compilation",
        "GetEntryPoint",
        "cancellationToken",
        "Select",
        "symbol",
        "_",
        "symbol",
        "ContainingSymbol",
        "Select",
        "symbol",
        "_",
        "symbol",
        "DeclaredAccessibility",
        "Accessibility",
        "Public",
        "symbol",
        "Select",
        "symbol",
        "_",
        "symbol",
        "INamedTypeSymbol",
        "TypeKind",
        "TypeKind",
        "Class",
        "symbol",
        "Select",
        "symbol",
        "_",
        "symbol",
        "DeclaringSyntaxReferences",
        "Length",
        "declaringSyntaxReferences",
        "declaringSyntaxReferences",
        "Single",
        "Select",
        "declaringSyntaxReference",
        "cancellationToken",
        "declaringSyntaxReference",
        "GetSyntax",
        "cancellationToken",
        "ClassDeclarationSyntax",
        "declaringSyntaxReference",
        "context",
        "RegisterSourceOutput",
        "internalGeneratedProgramClass",
        "context",
        "result",
        "result",
        "context",
        "AddSource",
        "PublicPartialProgramClassSource"
    ],
    "literals": [
        "\"PublicTopLevelProgram.Generated.g.cs\""
    ],
    "variables": [
        "PublicPartialProgramClassSource",
        "internalGeneratedProgramClass"
    ],
    "comments": [
        "Licensed to the .NET Foundation under one or more agreements.",
        "The .NET Foundation licenses this file to you under the MIT license.",
        "Get the entry point associated with the compilation, this maps to the Main method definition",
        "Get the containing symbol of the entry point, this maps to the Program class",
        "If the program class is already public, we don't need to generate anything.",
        "If the discovered `Program` type is not a class then its not",
        "generated and has been defined in source, so we can skip it",
        "If there are multiple partial declarations, then do nothing since we don't want",
        "to trample on visibility explicitly set by the user",
        "If the `Program` class is already declared in user code, we don't need to generate anything."
    ],
    "docstrings": [],
    "functions": [
        "Initialize"
    ],
    "classes": [
        "PublicProgramSourceGenerator"
    ]
}