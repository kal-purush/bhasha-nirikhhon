{
    "identifiers": [
        "com",
        "github",
        "javaparser",
        "symbolsolver",
        "com",
        "github",
        "javaparser",
        "JavaParser",
        "com",
        "github",
        "javaparser",
        "JavaParserAdapter",
        "com",
        "github",
        "javaparser",
        "ParserConfiguration",
        "com",
        "github",
        "javaparser",
        "ast",
        "CompilationUnit",
        "com",
        "github",
        "javaparser",
        "ast",
        "expr",
        "Expression",
        "com",
        "github",
        "javaparser",
        "ast",
        "expr",
        "NameExpr",
        "com",
        "github",
        "javaparser",
        "ast",
        "expr",
        "ObjectCreationExpr",
        "com",
        "github",
        "javaparser",
        "resolution",
        "declarations",
        "ResolvedConstructorDeclaration",
        "com",
        "github",
        "javaparser",
        "resolution",
        "declarations",
        "ResolvedValueDeclaration",
        "com",
        "github",
        "javaparser",
        "symbolsolver",
        "resolution",
        "AbstractResolutionTest",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "Test",
        "code",
        "parserConfiguration",
        "setSymbolResolver",
        "symbolResolver",
        "defaultTypeSolver",
        "cu",
        "JavaParserAdapter",
        "of",
        "parserConfiguration",
        "parse",
        "code",
        "oce",
        "cu",
        "findFirst",
        "get",
        "e",
        "oce",
        "getArguments",
        "e",
        "isNameExpr",
        "ne",
        "e",
        "asNameExpr",
        "rvd",
        "ne",
        "resolve",
        "assertEquals",
        "rvd",
        "getType",
        "describe",
        "rcd",
        "oce",
        "resolve",
        "assertEquals",
        "rcd",
        "getQualifiedSignature"
    ],
    "literals": [
        "\"public class Board {\\n\"",
        "\"\\n\"",
        "\"    class Field {\\n\"",
        "\"        private final Board board;\\n\"",
        "\"        private final int x;\\n\"",
        "\"        private final int y;\\n\"",
        "\"\\n\"",
        "\"        public Field(Board board, int x, int y) {\\n\"",
        "\"            this.board = board;\\n\"",
        "\"            this.x = x;\\n\"",
        "\"            this.y = y;\\n\"",
        "\"        }\\n\"",
        "\"    }\\n\"",
        "\"\\n\"",
        "\"    public static final int SIZE = 9;\\n\"",
        "\"    private final Field[] board;\\n\"",
        "\"\\n\"",
        "\"    public Board() {\\n\"",
        "\"        for (int x = 0; x < SIZE; x++)\\n\"",
        "\"            for (int y = 0; y < SIZE; y++)\\n\"",
        "\"                board[SIZE * y + x] = new Field(this, x, y);\\n\"",
        "\"    }\\n\"",
        "\"}\"",
        "\"int\"",
        "\"Board.Field.Field(Board, int, int)\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (C) 2013-2024 The JavaParser Team.\n *\n * This file is part of JavaParser.\n *\n * JavaParser can be used either under the terms of\n * a) the GNU Lesser General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n * b) the terms of the Apache License\n *\n * You should have received a copy of both licenses in LICENCE.LGPL and\n * LICENCE.APACHE. Please refer to those files for details.\n *\n * JavaParser is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details."
    ],
    "functions": [
        "test"
    ],
    "classes": [
        "Issue4568Test"
    ]
}