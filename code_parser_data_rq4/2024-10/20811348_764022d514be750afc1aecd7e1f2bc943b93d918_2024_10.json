{
    "identifiers": [
        "sample",
        "java",
        "util",
        "org",
        "junit",
        "jupiter",
        "api",
        "AfterAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeAll",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "boot",
        "SpringApplication",
        "org",
        "springframework",
        "boot",
        "actuate",
        "autoconfigure",
        "endpoint",
        "web",
        "WebEndpointProperties",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "boot",
        "test",
        "web",
        "client",
        "TestRestTemplate",
        "org",
        "springframework",
        "boot",
        "test",
        "web",
        "server",
        "LocalServerPort",
        "org",
        "springframework",
        "context",
        "ConfigurableApplicationContext",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "test",
        "util",
        "TestSocketUtils",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "WebEnvironment",
        "RANDOM_PORT",
        "SpringBootTest",
        "classes",
        "properties",
        "webEnvironment",
        "RANDOM_PORT",
        "BASE_PATH",
        "getBasePath",
        "configPort",
        "TestSocketUtils",
        "findAvailableTcpPort",
        "server",
        "LocalServerPort",
        "port",
        "BeforeAll",
        "server",
        "SpringApplication",
        "run",
        "configPort",
        "setProperty",
        "configPort",
        "AfterAll",
        "clearProperty",
        "server",
        "server",
        "close",
        "Test",
        "SuppressWarnings",
        "response",
        "getForEntity",
        "port",
        "BASE_PATH",
        "assertThat",
        "response",
        "getStatusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "res",
        "response",
        "getBody",
        "assertThat",
        "res",
        "containsKey",
        "property",
        "res",
        "get",
        "assertThat",
        "property",
        "containsEntry",
        "response",
        "getForEntity",
        "port",
        "BASE_PATH",
        "assertThat",
        "response",
        "getStatusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "res",
        "response",
        "getBody",
        "assertThat",
        "res",
        "containsKey",
        "property",
        "res",
        "get",
        "assertThat",
        "property",
        "containsEntry",
        "response",
        "getForEntity",
        "port",
        "BASE_PATH",
        "assertThat",
        "response",
        "getStatusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "res",
        "response",
        "getBody",
        "assertThat",
        "res",
        "containsKey",
        "property",
        "res",
        "get",
        "assertThat",
        "property",
        "containsEntry"
    ],
    "literals": [
        "\"spring.application.name=profilesample\"",
        "\"spring.cloud.config.enabled=true\"",
        "\"spring.config.name=orderingtest\"",
        "\"management.security.enabled=false\"",
        "\"management.endpoints.web.exposure.include=*\"",
        "\"management.endpoint.env.show-values=ALWAYS\"",
        "\"spring.cloud.config.label=label1,label2\"",
        "\"spring.cloud.config.send-all-labels=true\"",
        "\"--spring.profiles.active=native\"",
        "\"--server.port=\"",
        "\"--spring.config.name=server\"",
        "\"spring.cloud.config.uri\"",
        "\"http://localhost:\"",
        "\"spring.cloud.config.uri\"",
        "\"unchecked\"",
        "\"rawtypes\"",
        "\"http://localhost:\"",
        "\"/env/my.prop\"",
        "\"propertySources\"",
        "\"property\"",
        "\"value\"",
        "\"my value from config server default profile\"",
        "\"http://localhost:\"",
        "\"/env/my.prop.label1\"",
        "\"propertySources\"",
        "\"property\"",
        "\"value\"",
        "\"my value from config server label1\"",
        "\"http://localhost:\"",
        "\"/env/my.prop.label2\"",
        "\"propertySources\"",
        "\"property\"",
        "\"value\"",
        "\"my value from config server label2\""
    ],
    "variables": [
        "server",
        "port"
    ],
    "comments": [
        "Normally spring.cloud.config.enabled:true is the default but since we have the",
        "config server on the classpath we need to set it explicitly",
        "spring.config.import needs to come from orderingtest.yml to test this issue",
        "hence no spring.config.import here and config name change"
    ],
    "docstrings": [
        "* Copyright 2018-2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "startConfigServer",
        "close",
        "contextLoads"
    ],
    "classes": [
        "ConfigServerAndClientMultiLabelTests"
    ]
}