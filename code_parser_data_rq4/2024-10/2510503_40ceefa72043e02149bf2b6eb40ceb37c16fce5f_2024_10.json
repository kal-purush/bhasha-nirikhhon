{
    "identifiers": [
        "ucar",
        "nc2",
        "ucar",
        "nc2",
        "FilterProvider",
        "ucar",
        "nc2",
        "Filter",
        "net",
        "jpountz",
        "lz4",
        "LZ4Factory",
        "net",
        "jpountz",
        "lz4",
        "LZ4FastDecompressor",
        "java",
        "util",
        "java",
        "io",
        "java",
        "nio",
        "ByteBuffer",
        "name",
        "id",
        "decompressor",
        "properties",
        "factory",
        "LZ4Factory",
        "fastestInstance",
        "decompressor",
        "factory",
        "fastDecompressor",
        "Override",
        "name",
        "Override",
        "id",
        "Override",
        "dataIn",
        "dataOut",
        "dataIn",
        "dataOut",
        "Override",
        "dataIn",
        "byteBuffer",
        "ByteBuffer",
        "wrap",
        "dataIn",
        "totalDecompressedSize",
        "byteBuffer",
        "getLong",
        "decompressedBlockSize",
        "byteBuffer",
        "getInt",
        "compressedBlockSize",
        "byteBuffer",
        "getInt",
        "decompressedBlock",
        "toIntExact",
        "totalDecompressedSize",
        "compressedBlock",
        "compressedBlockSize",
        "byteBuffer",
        "get",
        "compressedBlock",
        "compressedBlockSize",
        "decompressor",
        "decompress",
        "compressedBlock",
        "decompressedBlock",
        "decompressedBlockSize",
        "decompressedBlock",
        "Override",
        "name",
        "Override",
        "id",
        "Override",
        "properties",
        "properties"
    ],
    "literals": [
        "\"LZ4 filter\""
    ],
    "variables": [
        "decompressor"
    ],
    "comments": [
        "import io.airlift.compress.v3.lz4.Lz4NativeDecompressor;",
        "import io.airlift.compress.v3.lz4.Lz4JavaCompressor;",
        "import io.airlift.compress.v3.Decompressor;",
        "import io.airlift.compress.v3.Compressor;",
        "only decoding implementation needed for reading"
    ],
    "docstrings": [],
    "functions": [
        "LZ4Filter",
        "getName",
        "getId",
        "encode",
        "decode",
        "getName",
        "getId",
        "Filter",
        "create"
    ],
    "classes": [
        "LZ4Filter",
        "LZ4FilterProvider"
    ]
}