{
    "identifiers": [
        "search",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileReader",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "query",
        "MathQuery",
        "utilities",
        "ProjectLogger",
        "resultsList",
        "logger",
        "relevantLower",
        "partiallyRelevantLower",
        "f",
        "logger",
        "ProjectLogger",
        "getLogger",
        "resultsList",
        "parseFile",
        "f",
        "query",
        "files",
        "relevantDocs",
        "partiallyRelevantDocs",
        "relevantFound",
        "partiallyRelevantFound",
        "entry",
        "resultsList",
        "entry",
        "equals",
        "query",
        "entry",
        "getRank",
        "Judgments",
        "relevantLower",
        "relevantDocs",
        "containsResults",
        "entry",
        "files",
        "relevantFound",
        "logger",
        "log",
        "Level",
        "FINEST",
        "entry",
        "toString",
        "entry",
        "getRank",
        "Judgments",
        "partiallyRelevantLower",
        "partiallyRelevantDocs",
        "containsResults",
        "entry",
        "files",
        "partiallyRelevantFound",
        "logger",
        "log",
        "Level",
        "FINEST",
        "entry",
        "toString",
        "relevantDocs",
        "relevantFound",
        "partiallyRelevantDocs",
        "partiallyRelevantFound",
        "result",
        "files",
        "contained",
        "file",
        "files",
        "result",
        "equals",
        "file",
        "contained",
        "logger",
        "log",
        "Level",
        "FINEST",
        "result",
        "contained",
        "contained",
        "query",
        "file",
        "result",
        "entry",
        "resultsList",
        "entry",
        "equals",
        "query",
        "entry",
        "equals",
        "file",
        "result",
        "entry",
        "getRank",
        "logger",
        "log",
        "Level",
        "FINEST",
        "file",
        "toString",
        "result",
        "result",
        "resultsList",
        "size",
        "fileToParse",
        "records",
        "reader",
        "fileToParse",
        "line",
        "line",
        "reader",
        "readLine",
        "records",
        "add",
        "line",
        "reader",
        "close",
        "records",
        "e",
        "err",
        "format",
        "fileToParse",
        "e",
        "printStackTrace",
        "queryName",
        "rank",
        "fileName",
        "line",
        "parts",
        "line",
        "split",
        "parts",
        "length",
        "queryName",
        "parts",
        "fileName",
        "parts",
        "rank",
        "parseFloat",
        "parts",
        "rank",
        "q",
        "queryName",
        "equals",
        "q",
        "getQueryName",
        "f",
        "fileName",
        "equals",
        "f",
        "Override",
        "queryName",
        "fileName",
        "serialVersionUID"
    ],
    "literals": [
        "\"Relevant Result not found: \"",
        "\"Partially Relevant Result not found: \"",
        "\"Result - \"",
        "\" was found:\"",
        "\"Result:\"",
        "\" Rank:\"",
        "\"Exception occurred trying to read '%s'.\"",
        "\" \"",
        "\"Parsing error when loading results\"",
        "\"Query Name: \"",
        "\" Filename:\""
    ],
    "variables": [
        "resultsList",
        "logger",
        "line",
        "queryName",
        "rank",
        "fileName"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2017 Dallas Fraser\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *        http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* A class to hold the judgments for the expected results.\n *\n * @author Dallas Fraser\n * @since 2017-11-06",
        "* Class Constructor.\n   *\n   * @param f the file of the expected results",
        "* Returns a [num of relevant docs, num of relevant found, num of partially relevant docs, num of\n   * partially relevant found].\n   *\n   * @param query the query\n   * @param files the list of files returned from the query\n   * @return int[] recall results",
        "* Returns whether the result is in the list of files.\n   *\n   * @param result the result to check\n   * @param files the list of files\n   * @return boolean True if files contain result",
        "* Returns the ranking of the query and file.\n   *\n   * @param query the query used\n   * @param file the name of the file\n   * @return Float Ranking if found, -1 otherwise",
        "* Returns the number of results.\n   *\n   * @return int the number of judgments",
        "* Parses a file .\n   *\n   * @param fileToParse - the file to parse\n   * @return an array of judgments",
        "* A private class that holds query name, file name and its corresponding rank.\n   *\n   * @author Dallas Fraser",
        "* Class Constructor.\n     *\n     * @param line a line of the expect results line in a certain format\n     * @throws Exception - line was not the expected size",
        "* Returns the rank of the judgment.\n     *\n     * @return Float the rank",
        "* Checks if Judgment is equal to the query.\n     *\n     * @param q the query to compare to\n     * @return boolean",
        "* Checks if a judgment is equal to a file name.\n     *\n     * @param f the filename to compare to\n     * @return boolean",
        "* Prints a query to a String, with <code>field</code> assumed to be the\n     * default field and omitted\n     * (non-Javadoc)\n     * @see org.apache.lucene.search.Query#toString(java.lang.String)\n     * @return the string representation",
        "* An exception thrown when parsing a file.\n   *\n   * @author Dallas Fraser"
    ],
    "functions": [
        "Judgments",
        "recallResult",
        "containsResults",
        "findResult",
        "length",
        "parseFile",
        "Judgment",
        "getRank",
        "equals",
        "equals",
        "toString",
        "JudgmentException"
    ],
    "classes": [
        "Judgments",
        "Judgment",
        "JudgmentException"
    ]
}