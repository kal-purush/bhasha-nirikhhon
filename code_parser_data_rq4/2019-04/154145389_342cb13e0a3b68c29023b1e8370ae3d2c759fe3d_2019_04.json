{
    "identifiers": [
        "logging",
        "DEBUG",
        "INFO",
        "FileHandler",
        "Formatter",
        "StreamHandler",
        "getLogger",
        "os",
        "environ",
        "sys",
        "stdout",
        "elasticsearch",
        "Elasticsearch",
        "logger",
        "lvl",
        "logger",
        "getLogger",
        "isinstance",
        "logger",
        "getLogger",
        "logger",
        "lvl",
        "get_setting",
        "Formatter",
        "StreamHandler",
        "stdout",
        "stdout_handler",
        "setLevel",
        "DEBUG",
        "stdout_handler",
        "setFormatter",
        "fmt",
        "logger",
        "addHandler",
        "stdout_handler",
        "get_setting",
        "output_file",
        "FileHandler",
        "output_file",
        "file_handler",
        "setLevel",
        "DEBUG",
        "file_handler",
        "setFormatter",
        "fmt",
        "logger",
        "addHandler",
        "file_handler",
        "logger",
        "setLevel",
        "lvl",
        "logger",
        "key",
        "environ",
        "get",
        "key",
        "CACHE_DEFAULT_TIMEOUT",
        "get_setting",
        "CACHE_TYPE",
        "get_setting",
        "SECRET_KEY",
        "get_setting",
        "TESTING",
        "get_setting",
        "capitalize",
        "ssl",
        "ssl",
        "get_setting",
        "get_setting",
        "Elasticsearch",
        "protocol",
        "host",
        "port"
    ],
    "literals": [
        "\"LOG_LEVEL\"",
        "\"30\"",
        "\"%(asctime)-15s %(threadName)s %(message)s\"",
        "\"LOG_OUTPUT\"",
        "\"CACHE_DEFAULT_TIMEOUT\"",
        "\"600\"",
        "\"CACHE_TYPE\"",
        "\"null\"",
        "\"FLASK_SECRET_KEY\"",
        "\"FLASK_TESTING\"",
        "\"False\"",
        "\"True\"",
        "\"https\"",
        "\"http\"",
        "\"ELASTIC_HOST\"",
        "\"localhost\"",
        "\"ELASTIC_PORT\"",
        "\"9200\"",
        "f\"{protocol}://{host}:{port}\""
    ],
    "variables": [
        "logger",
        "logger",
        "lvl",
        "fmt",
        "stdout_handler",
        "output_file",
        "file_handler",
        "protocol",
        "host",
        "port"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Little helpers.\"\"\"",
        "\"\"\"Initialize the given logger.\n    \n    If no logger is passed into the function, the root logger will be retrieved.\"\"\"",
        "\"\"\"Return the env setting corresponding to the given key.\n\n    If key is not found, return the default value.\n    \"\"\"",
        "\"\"\"Retrieve app settings from environment.\"\"\"",
        "\"\"\"Return an initialized Elastic client.\"\"\""
    ],
    "functions": [
        "init_logger",
        "get_setting",
        "app_settings",
        "elastic"
    ],
    "classes": []
}