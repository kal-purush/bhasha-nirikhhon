{
    "identifiers": [
        "Injectable",
        "Apollo",
        "QUERY_CHECKPOINT_ISSUES",
        "take",
        "MUTATION_ADD_ISSUE",
        "MUTATION_ADD_ISSUE_COMMENT_REPLY",
        "MUTATION_ADD_ISSUE_COMMENT",
        "MUTATION_MARK_ISSUE_RESOLVED_OR_UNRESOLVED",
        "Injectable",
        "apollo",
        "checkpointName",
        "projectId",
        "QUERY_CHECKPOINT_ISSUES",
        "checkpointName",
        "projectId",
        "take",
        "res",
        "res",
        "commentText",
        "projectId",
        "issueId",
        "MUTATION_ADD_ISSUE_COMMENT",
        "commentText",
        "projectId",
        "issueId",
        "localStorage",
        "take",
        "res",
        "res",
        "commentId",
        "replyText",
        "MUTATION_ADD_ISSUE_COMMENT_REPLY",
        "replyText",
        "commentId",
        "localStorage",
        "take",
        "res",
        "res",
        "checkpointName",
        "issuesDescription",
        "projectId",
        "MUTATION_ADD_ISSUE",
        "checkpointName",
        "issuesDescription",
        "projectId",
        "localStorage",
        "take",
        "res",
        "res",
        "issueId",
        "resolution",
        "MUTATION_MARK_ISSUE_RESOLVED_OR_UNRESOLVED",
        "issueId",
        "resolution",
        "take",
        "res",
        "res"
    ],
    "literals": [
        "'@angular/core'",
        "'apollo-angular'",
        "'@app/shared/queries/project-queries'",
        "'rxjs/operators'",
        "'@app/shared/mutations/project-mutations'",
        "'root'",
        "string",
        "string",
        "string",
        "string",
        "'userId'",
        "string",
        "string",
        "'userId'",
        "string",
        "string",
        "string",
        "'userId'"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* fetchIssueInCheckpoint",
        "* Add Comments for an issue in the project.",
        "* Add Reply for a comment in the project.",
        "* Add Issue for a checkpoint in the project.",
        "* Marks issue resolved or unresolved."
    ],
    "functions": [
        "fetchIssueInCheckpoint",
        "addComment",
        "addReply",
        "addIssue",
        "markIssueResolvedOrUnsolved"
    ],
    "classes": [
        "IssueService"
    ]
}