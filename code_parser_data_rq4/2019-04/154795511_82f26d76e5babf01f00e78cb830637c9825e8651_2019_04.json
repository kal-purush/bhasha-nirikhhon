{
    "identifiers": [
        "pandas",
        "pd",
        "re",
        "source",
        "regex_format",
        "source",
        "source",
        "regex_format",
        "data",
        "transform",
        "data",
        "path",
        "open",
        "path",
        "f",
        "f",
        "read",
        "transform",
        "text",
        "staticmethod",
        "message_string",
        "message_string",
        "startswith",
        "message_string",
        "isdigit",
        "ValueError",
        "message_regex",
        "staticmethod",
        "df",
        "df",
        "text",
        "extract",
        "expand",
        "flags",
        "re",
        "DOTALL",
        "df",
        "staticmethod",
        "df",
        "df",
        "df",
        "text",
        "match",
        "df",
        "text",
        "match",
        "reset_index",
        "drop",
        "staticmethod",
        "df",
        "pd",
        "to_datetime",
        "df",
        "format",
        "yearfirst",
        "df",
        "sort_values",
        "ascending",
        "df",
        "staticmethod",
        "df",
        "cols",
        "cols",
        "issubset",
        "df",
        "columns",
        "df",
        "loc",
        "cols",
        "KeyError",
        "data",
        "regex_format",
        "guess_regex_format",
        "data",
        "re",
        "split",
        "regex_format",
        "data",
        "split_messages",
        "split_messages",
        "pd",
        "DataFrame",
        "zipped_messages",
        "columns",
        "data",
        "parse_raw_text_to_df",
        "data",
        "pipe",
        "parse_and_sort_timestamp",
        "pipe",
        "remove_service_messages",
        "pipe",
        "separate_sender_from_message",
        "pipe",
        "select_cols"
    ],
    "literals": [
        "'stream'",
        "'r'",
        "'['",
        "r\"\\[(\\d{2}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\\] \"",
        "r\"(\\d{2}-\\d{2}-\\d{4} \\d{2}:\\d{2} )\"",
        "\"Can't recognise uploaded file content format\"",
        "'sender'",
        "'message'",
        "\"(.*?): (.*)\"",
        "\".*:.*\"",
        "\".*Master:.*\"",
        "'timestamp'",
        "'timestamp'",
        "'%d-%m-%y %H:%M:%S'",
        "'timestamp'",
        "'Given cols: {} are not all in given dataframe'",
        "'timestamp'",
        "'text'",
        "'sender'",
        "'message'",
        "'timestamp'"
    ],
    "variables": [
        "source",
        "regex_format",
        "text",
        "message_regex",
        "message_regex",
        "df",
        "df",
        "df",
        "regex_format",
        "split_messages",
        "zipped_messages"
    ],
    "comments": [
        "split text on the date string that occurs at the start of every message",
        "turn the \"flat\" list into a list of tuples containing the date and the text"
    ],
    "docstrings": [
        "\"\"\"\n    Preprocessing class that transforms the file/stream input into preprocessed Pandas DataFrame\n    \"\"\"",
        "\"\"\"\n        :param source: (str) either 'stream' or 'file', default: 'stream'\n        :param regex_format: (str) regex format string e.g. r'[0-9]{2}', default None. If none, the format will be guessed\n                       in the transforming process. If the format can't be guessed, an exception will be raised.\n        \"\"\"",
        "\"\"\" separate service messages (e.g. ... has been added to group ) and regular messages \"\"\"",
        "\"\"\" Pre processes the uploaded WhatsApp data (txt), extracts some features, and returns a dataframe.\n\n        :param data: (str) raw input from Whatsapp chat export (txt)\n        :return: (Pandas Dataframe) returns dataframe with cleaned/extracted features\n        \"\"\""
    ],
    "functions": [
        "parse_from_stream",
        "parse_from_file",
        "guess_regex_format",
        "separate_sender_from_message",
        "remove_service_messages",
        "parse_and_sort_timestamp",
        "select_cols",
        "parse_raw_text_to_df",
        "transform"
    ],
    "classes": [
        "WhatsAppDataParser"
    ]
}