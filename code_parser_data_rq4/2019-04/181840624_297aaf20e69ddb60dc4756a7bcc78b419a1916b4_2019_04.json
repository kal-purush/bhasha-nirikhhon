{
    "identifiers": [
        "IO",
        "StreamJsonRpc",
        "Microsoft",
        "VisualStudio",
        "LanguageServices",
        "Remote",
        "HeaderDelimitedMessageHandler",
        "Stream",
        "sendingStream",
        "Stream",
        "receivingStream",
        "sendingStream",
        "receivingStream",
        "disposing",
        "disposing",
        "ReceivingStream",
        "Dispose",
        "SendingStream",
        "Dispose"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Copyright (c) Microsoft.  All Rights Reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.",
        "This is a workaround for a limitation in vs-threading.",
        "https://github.com/dotnet/roslyn/issues/19042",
        "Do not call base.Dispose. We do not want the AsyncSemaphore instances to be disposed due to a race",
        "condition.",
        "note that this can cause double disposing of a stream if both are based on same stream.",
        "we can't check whether 2 are same because one of them could be wrapped stream such as bufferedstream which",
        "underneath points to same stream."
    ],
    "docstrings": [],
    "functions": [
        "JsonRpcMessageHandler",
        "Dispose"
    ],
    "classes": [
        "JsonRpcMessageHandler"
    ]
}