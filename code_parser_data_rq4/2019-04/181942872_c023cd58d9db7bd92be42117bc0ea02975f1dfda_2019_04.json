{
    "identifiers": [
        "numpy",
        "np",
        "scipy",
        "signal",
        "util",
        "chunk",
        "pad_axis",
        "a",
        "t",
        "np",
        "iterable",
        "t",
        "np",
        "ptp",
        "t",
        "axis",
        "t_ptp",
        "mean",
        "a",
        "shape",
        "t",
        "t",
        "a",
        "shape",
        "avg_time",
        "fs",
        "a",
        "nperseg",
        "noverlap",
        "center",
        "pad",
        "norm",
        "axis",
        "noverlap",
        "nperseg",
        "np",
        "ones",
        "nperseg",
        "dtype",
        "a",
        "dtype",
        "np",
        "hanning",
        "nperseg",
        "scipy",
        "signal",
        "get_window",
        "nperseg",
        "center",
        "pad_axis",
        "a",
        "nperseg",
        "axis",
        "axis",
        "pad_axis",
        "a",
        "nperseg",
        "axis",
        "axis",
        "append",
        "chunk",
        "a",
        "nperseg",
        "noverlap",
        "axis",
        "pad",
        "pad",
        "np",
        "fft",
        "rfft",
        "segments",
        "norm",
        "norm",
        "output",
        "sum"
    ],
    "literals": [
        "'hann'",
        "'hann'",
        "'ortho'"
    ],
    "variables": [
        "t_ptp",
        "avg_time",
        "avg_time",
        "fs",
        "noverlap",
        "a",
        "a",
        "segments",
        "output"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n        Return the mean sampling rate for a group of time-series measurements.\n        Parameters\n        ===========\n        a: array-like\n            Array of time-series measurements\n        t: array-like or number or None, default=None\n            If number, the average time per set of measurements.\n            If array-like, the times at which each value in `a` was measured.\n            If None, defaults to a.shape[-1]\n    \"\"\"",
        "\"\"\"\n        Perform a Short-Time Fourier Transform along the specified axis. \n        Equivalent to scipy.signal.stft except slightly faster (~10%) with modified usage/behavior.\n        Parameters\n        ===========\n        a: array-like\n            Array of time-series measurements\n        nperseg: int, default=256\n            Length of each segment\n        noverlap: int or None, default=None\n            Number of overlapping items in each segment. If None, defaults to nperseg // 2.\n        window: str or None, default='hann'\n            The window to use. If set to None, values in each segment are weighted equally.\n            See scipy.signal.get_window documentation for more options.\n        center: bool, default=False\n            Whether to center the signal. If True, the signal is zero-padded by nperseg // 2 on each end.\n        pad: bool, default=True\n            Whether to pad the signal to fit an integer number of segments. If True, the end of the signal is zero padded.\n        norm: bool, default=False\n            Whether to use the 'ortho' norm during the fourier transform. See np.fft for details.\n        axis: int, default=-1\n            The axis along which the fourier transform is applied.\n\n        Returns\n        ==========\n        output: np.ndarray\n            The transformed array. The `axis` axis corresponds to the segment times.\n    \"\"\""
    ],
    "functions": [
        "sampling_rate",
        "stft"
    ],
    "classes": []
}