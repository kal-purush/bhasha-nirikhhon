{
    "identifiers": [
        "appendUser",
        "Express",
        "validateJWT",
        "filterRoles",
        "onlyOwner",
        "eventsDataSource",
        "eventController",
        "validation",
        "eventSchema",
        "eventRoutes",
        "app",
        "app",
        "validateJWT",
        "filterRoles",
        "eventController",
        "app",
        "validateJWT",
        "filterRoles",
        "validation",
        "eventSchema",
        "eventController",
        "app",
        "validateJWT",
        "filterRoles",
        "onlyOwner",
        "eventsDataSource",
        "appendUser",
        "validation",
        "eventSchema",
        "validation",
        "eventSchema",
        "eventController",
        "app",
        "validateJWT",
        "filterRoles",
        "appendUser",
        "validation",
        "eventSchema",
        "eventController"
    ],
    "literals": [
        "\"../../policies/access-control\"",
        "\"express\"",
        "\"../../policies\"",
        "\"../../data-source\"",
        "\"../../controllers\"",
        "\"../../middlewares\"",
        "\"../../utils/schemas\"",
        "\"/v1/events\"",
        "\"access\"",
        "\"user\"",
        "\"partner\"",
        "\"/v1/events/:id\"",
        "\"access\"",
        "\"partner\"",
        "\"params\"",
        "\"/v1/events/:id\"",
        "\"access\"",
        "\"partner\"",
        "\"params\"",
        "\"/v1/events\"",
        "\"access\"",
        "\"partner\""
    ],
    "variables": [
        "eventRoutes"
    ],
    "comments": [],
    "docstrings": [
        "* @swagger\n   * definitions:\n   *   Event:\n   *     required:\n   *       - event_name\n   *       - start_date\n   *       - expiration_date\n   *       - start_hour\n   *       - end_hour\n   *     properties:\n   *       id:\n   *         type: string\n   *       event_name:\n   *         type: string\n   *       start_date:\n   *         type: number\n   *       expiration_date:\n   *         type: number\n   *       start_hour:\n   *         type: number\n   *       end_hour:\n   *         type: number\n   *\n   *   EventDetails:\n   *     required:\n   *       - id\n   *       - event_name\n   *       - start_date\n   *       - expiration_date\n   *       - start_hour\n   *       - end_hour\n   *       - created_by\n   *       - total\n   *       - finished\n   *       - cancelled\n   *       - created_at\n   *       - updated_at\n   *     properties:\n   *       id:\n   *         type: string\n   *       event_name:\n   *         type: string\n   *       start_date:\n   *         type: number\n   *       expiration_date:\n   *         type: number\n   *       start_hour:\n   *         type: number\n   *       end_hour:\n   *         type: number\n   *       created_by:\n   *         type: string\n   *       total:\n   *         type: number\n   *       finished:\n   *         type: boolean\n   *       cancelled:\n   *         type: boolean\n   *       created_at:\n   *         type: number\n   *       updated_at:\n   *         type: number\n   *\n   *   Order:\n   *     required:\n   *       - id\n   *       - user_id\n   *       - event_id\n   *       - price\n   *       - order_product_id\n   *       - created_by\n   *       - paid\n   *       - cancelled\n   *       - created_at\n   *       - updated_at\n   *     properties:\n   *       id:\n   *         type: string\n   *       user_id:\n   *         type: string\n   *       event_id:\n   *         type: string\n   *       price:\n   *         type: number\n   *       order_product_id:\n   *         type: array\n   *         items:\n   *           type: string\n   *       created_by:\n   *         type: string\n   *       paid:\n   *         type: boolean\n   *       cancelled:\n   *         type: boolean\n   *       created_at:\n   *         type: number\n   *       updated_at:\n   *         type: number",
        "* @swagger\n   * tags:\n   *   name: Events\n   *   description: Events",
        "* @swagger\n   * /v1/events:\n   *   get:\n   *     description: Return all events\n   *     security:\n   *       - bearerAuth: []\n   *     tags:\n   *       - Events\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - in: query\n   *         name: eventType\n   *         schema:\n   *           type: string\n   *         description: Query to return \"current\" or \"past\"\n   *     responses:\n   *       200:\n   *         description: Get all events\n   *         schema:\n   *           type: array\n   *           items:\n   *             type: object\n   *             $ref: \"#/definitions/EventDetails\"\n   *       401:\n   *         description: Access token is missing or invalid\n   *       500:\n   *         description: Internal Server Error",
        "* @swagger\n   * /v1/events/{id}:\n   *   get:\n   *     description: Return event\n   *     security:\n   *       - bearerAuth: []\n   *     tags:\n   *       - Events\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - in: path\n   *         name: id\n   *         type: string\n   *         required: true\n   *         description: UUID of the event to get\n   *     responses:\n   *       200:\n   *         description: Get event\n   *         schema:\n   *           properties:\n   *             id:\n   *               type: string\n   *             event_name:\n   *               type: string\n   *             start_date:\n   *               type: number\n   *             expiration_date:\n   *               type: number\n   *             start_hour:\n   *               type: number\n   *             end_hour:\n   *               type: number\n   *             created_by:\n   *               type: string\n   *             orders:\n   *               type: array\n   *               items:\n   *                 $ref: \"#/definitions/Order\"\n   *                 type: object\n   *       401:\n   *         description: Access token is missing or invalid\n   *       404:\n   *         description: Not Found\n   *       500:\n   *         description: Internal Server Error",
        "* @swagger\n   * /v1/events/{id}:\n   *   put:\n   *     description: Update event\n   *     security:\n   *       - bearerAuth: []\n   *     tags:\n   *       - Events\n   *     consumes:\n   *       - application/json\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - in: path\n   *         name: id\n   *         type: string\n   *         required: true\n   *         description: UUID of the event to get\n   *       - in: body\n   *         name: Event object\n   *         schema:\n   *           type: object\n   *           $ref: \"#/definitions/Event\"\n   *         required: true\n   *         description: Event object\n   *     responses:\n   *       200:\n   *         description: Update event\n   *         schema:\n   *           type: object\n   *           $ref: \"#/definitions/EventDetails\"\n   *       400:\n   *         description: Bad Request. Event has already finished\n   *       401:\n   *         description: Access token is missing or invalid\n   *       404:\n   *         description: Not Found\n   *       500:\n   *         description: Internal Server Error",
        "* @swagger\n   * /v1/events:\n   *   post:\n   *     description: Create event\n   *     security:\n   *       - bearerAuth: []\n   *     tags:\n   *       - Events\n   *     consumes:\n   *       - application/json\n   *     produces:\n   *       - application/json\n   *     parameters:\n   *       - in: body\n   *         name: event\n   *         schema:\n   *           type: object\n   *           $ref: \"#/definitions/Event\"\n   *         required: true\n   *         description: Event object\n   *     responses:\n   *       200:\n   *         description: Create event\n   *         schema:\n   *           type: object\n   *           $ref: \"#/definitions/EventDetails\"\n   *       400:\n   *         description: Bad Request. Event name is required.\n   *       401:\n   *         description: Access token is missing or invalid\n   *       500:\n   *         description: Internal Server Error"
    ],
    "functions": [],
    "classes": []
}