{
    "identifiers": [
        "fs",
        "AnonymousCredential",
        "downloadBlobToBuffer",
        "uploadFileToBlockBlob",
        "uploadStreamToBlockBlob",
        "Aborter",
        "BlobURL",
        "BlockBlobURL",
        "ContainerURL",
        "ServiceURL",
        "StorageURL",
        "StorageURL",
        "AnonymousCredential",
        "ServiceURL",
        "account",
        "accountSas",
        "pipeline",
        "ContainerURL",
        "serviceURL",
        "containerName",
        "containerURL",
        "Aborter",
        "BlobURL",
        "containerURL",
        "blobName",
        "BlockBlobURL",
        "blobURL",
        "uploadFileToBlockBlob",
        "Aborter",
        "localFilePath",
        "blockBlobURL",
        "ev",
        "ev",
        "uploadStreamToBlockBlob",
        "Aborter",
        "fs",
        "localFilePath",
        "blockBlobURL",
        "ev",
        "ev",
        "fs",
        "localFilePath",
        "Buffer",
        "fileSize",
        "downloadBlobToBuffer",
        "Aborter",
        "buffer",
        "blockBlobURL",
        "ev",
        "ev",
        "containerURL",
        "Aborter",
        "main",
        "err",
        "err"
    ],
    "literals": [
        "\"fs\"",
        "\"../..\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"HighLevelSample V1.0.0\"",
        "https://${account}.blob.core.windows.net${accountSas}",
        "newcontainer${new Date().getTime()}",
        "\"newblob\"",
        "\"uploadFileToBlockBlob success\"",
        "\"uploadStreamToBlockBlob success\"",
        "\"downloadBlobToBuffer success\"",
        "\"deleted container\"",
        "\"Successfully executed sample.\""
    ],
    "variables": [
        "account",
        "accountSas",
        "localFilePath",
        "pipeline",
        "serviceURL",
        "containerName",
        "containerURL",
        "blobName",
        "blobURL",
        "blockBlobURL",
        "fileSize",
        "buffer"
    ],
    "comments": [
        "Setup: Enter your storage account name, SAS and a path pointing to local file in main()",
        "Change to \"@azure/storage-blob\" in your package",
        "Fill in following settings before running this sample",
        "httpClient: MyHTTPClient, // A customized HTTP client implementing IHttpClient interface",
        "logger: MyLogger, // A customized logger implementing IHttpPipelineLogger interface",
        "Retry options",
        "Customized telemetry string",
        "Create a container",
        "Create a blob",
        "Parallel uploading with uploadFileToBlockBlob in Node.js runtime",
        "uploadFileToBlockBlob is only available in Node.js",
        "4MB block size",
        "20 concurrency",
        "Parallel uploading a Readable stream with uploadStreamToBlockBlob in Node.js runtime",
        "uploadStreamToBlockBlob is only available in Node.js",
        "Abort uploading with timeout in 30mins",
        "Parallel uploading a browser File/Blob/ArrayBuffer in browsers with uploadBrowserDataToBlockBlob",
        "Uncomment following code in browsers because uploadBrowserDataToBlockBlob is only available in browsers",
        "const browserFile = document.getElementById(\"fileinput\").files[0];\n  await uploadBrowserDataToBlockBlob(Aborter.none, browserFile, blockBlobURL, {\n    blockSize: 4 * 1024 * 1024, // 4MB block size\n    parallelism: 20, // 20 concurrency\n    progress: ev => console.log(ev)\n  });",
        "Parallel downloading a block blob into Node.js buffer",
        "downloadBlobToBuffer is only available in Node.js",
        "4MB block size",
        "20 concurrency",
        "Delete container",
        "An async method returns a Promise object, which is compatible with then().catch() coding style."
    ],
    "docstrings": [],
    "functions": [
        "main"
    ],
    "classes": []
}