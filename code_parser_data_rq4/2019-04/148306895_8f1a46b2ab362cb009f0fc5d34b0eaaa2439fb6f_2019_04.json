{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "os",
        "time",
        "magenta",
        "models",
        "onsets_frames_transcription",
        "constants",
        "magenta",
        "models",
        "onsets_frames_transcription",
        "data",
        "magenta",
        "models",
        "onsets_frames_transcription",
        "infer_util",
        "magenta",
        "models",
        "onsets_frames_transcription",
        "train_util",
        "magenta",
        "music",
        "midi_io",
        "magenta",
        "music",
        "sequences_lib",
        "magenta",
        "protobuf",
        "music_pb2",
        "numpy",
        "np",
        "scipy",
        "tensorflow",
        "tf",
        "tf",
        "app",
        "flags",
        "FLAGS",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_integer",
        "tf",
        "app",
        "flags",
        "DEFINE_boolean",
        "tf",
        "app",
        "flags",
        "DEFINE_boolean",
        "tf",
        "app",
        "flags",
        "DEFINE_boolean",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_boolean",
        "model_fn",
        "model_dir",
        "checkpoint_path",
        "hparams",
        "examples_path",
        "output_dir",
        "summary_writer",
        "master",
        "preprocess_examples",
        "write_summary_every_step",
        "tf",
        "logging",
        "info",
        "model_dir",
        "tf",
        "logging",
        "info",
        "checkpoint_path",
        "tf",
        "logging",
        "info",
        "examples_path",
        "tf",
        "logging",
        "info",
        "output_dir",
        "train_util",
        "create_estimator",
        "model_fn",
        "model_dir",
        "hparams",
        "master",
        "master",
        "tf",
        "Graph",
        "as_default",
        "constants",
        "MIDI_PITCHES",
        "data",
        "provide_batch",
        "examples",
        "examples_path",
        "preprocess_examples",
        "preprocess_examples",
        "hparams",
        "hparams",
        "is_training",
        "infer_util",
        "define_metrics",
        "num_dims",
        "tf",
        "summary",
        "merge_all",
        "write_summary_every_step",
        "tf",
        "train",
        "get_or_create_global_step",
        "global_step",
        "assign_add",
        "tf",
        "constant",
        "estimator",
        "get_variable_value",
        "tf",
        "GraphKeys",
        "GLOBAL_STEP",
        "global_step",
        "dataset",
        "make_initializable_iterator",
        "iterator",
        "get_next",
        "tf",
        "Session",
        "sess",
        "sess",
        "run",
        "tf",
        "initializers",
        "global_variables",
        "tf",
        "initializers",
        "local_variables",
        "sess",
        "run",
        "iterator",
        "initializer",
        "sess",
        "run",
        "next_record",
        "tf",
        "errors",
        "OutOfRangeError",
        "tf",
        "data",
        "Dataset",
        "from_tensors",
        "record",
        "time",
        "time",
        "estimator",
        "predict",
        "input_fn",
        "checkpoint_path",
        "checkpoint_path",
        "yield_single_examples",
        "len",
        "prediction_list",
        "record",
        "record",
        "input_features",
        "sequence_id",
        "music_pb2",
        "NoteSequence",
        "FromString",
        "input_labels",
        "note_sequence",
        "input_labels",
        "labels",
        "prediction_list",
        "prediction_list",
        "prediction_list",
        "prediction_list",
        "prediction_list",
        "FLAGS",
        "require_onset",
        "FLAGS",
        "use_offset",
        "sequences_lib",
        "pianoroll_to_note_sequence",
        "frame_predictions",
        "frames_per_second",
        "data",
        "hparams_frames_per_second",
        "hparams",
        "min_duration_ms",
        "min_midi_pitch",
        "constants",
        "MIN_MIDI_PITCH",
        "onset_predictions",
        "onset_predictions",
        "offset_predictions",
        "offset_predictions",
        "velocity_values",
        "velocity_values",
        "time",
        "time",
        "end_time",
        "start_time",
        "infer_times",
        "append",
        "infer_time",
        "num_frames",
        "append",
        "frame_predictions",
        "shape",
        "tf",
        "logging",
        "info",
        "infer_time",
        "frame_predictions",
        "shape",
        "frame_predictions",
        "shape",
        "infer_time",
        "np",
        "sum",
        "num_frames",
        "np",
        "sum",
        "infer_times",
        "tf",
        "logging",
        "info",
        "filename",
        "ns_time",
        "ns_time",
        "hparams",
        "backward_shift_amount_ms",
        "sequences_lib",
        "adjust_notesequence_times",
        "note_sequence",
        "shift_notesequence",
        "infer_util",
        "score_sequence",
        "sess",
        "global_step_increment",
        "metrics_to_updates",
        "metric_note_precision",
        "metric_note_recall",
        "metric_note_f1",
        "metric_note_precision_with_offsets",
        "metric_note_recall_with_offsets",
        "metric_note_f1_with_offsets",
        "metric_note_precision_with_offsets_velocity",
        "metric_note_recall_with_offsets_velocity",
        "metric_note_f1_with_offsets_velocity",
        "metric_frame_labels",
        "metric_frame_predictions",
        "frame_labels",
        "labels",
        "sequence_prediction",
        "sequence_prediction",
        "frames_per_second",
        "data",
        "hparams_frames_per_second",
        "hparams",
        "sequence_label",
        "sequence_label",
        "sequence_id",
        "filename",
        "write_summary_every_step",
        "filename",
        "decode",
        "replace",
        "replace",
        "os",
        "path",
        "join",
        "output_dir",
        "filename_safe",
        "tf",
        "logging",
        "info",
        "output_file",
        "midi_io",
        "sequence_proto_to_midi_file",
        "sequence_prediction",
        "output_file",
        "os",
        "path",
        "join",
        "output_dir",
        "filename_safe",
        "tf",
        "logging",
        "info",
        "label_output_file",
        "midi_io",
        "sequence_proto_to_midi_file",
        "sequence_label",
        "label_output_file",
        "os",
        "path",
        "join",
        "output_dir",
        "filename_safe",
        "tf",
        "logging",
        "info",
        "pianoroll_output_file",
        "tf",
        "gfile",
        "GFile",
        "pianoroll_output_file",
        "mode",
        "f",
        "scipy",
        "misc",
        "imsave",
        "f",
        "infer_util",
        "posterior_pianoroll_image",
        "frame_probs",
        "sequence_prediction",
        "labels",
        "overlap",
        "frames_per_second",
        "data",
        "hparams_frames_per_second",
        "hparams",
        "sess",
        "run",
        "summary_op",
        "summary_writer",
        "add_summary",
        "summary",
        "sess",
        "run",
        "global_step",
        "summary_writer",
        "flush",
        "write_summary_every_step",
        "sess",
        "run",
        "summary_op",
        "summary_writer",
        "add_summary",
        "summary",
        "sess",
        "run",
        "global_step",
        "summary_writer",
        "flush",
        "config_map",
        "os",
        "path",
        "expanduser",
        "FLAGS",
        "output_dir",
        "config_map",
        "FLAGS",
        "config",
        "config",
        "hparams",
        "hparams",
        "parse",
        "FLAGS",
        "hparams",
        "FLAGS",
        "max_seconds_per_sequence",
        "FLAGS",
        "max_seconds_per_sequence",
        "tf",
        "logging",
        "info",
        "hparams",
        "tf",
        "gfile",
        "MakeDirs",
        "output_dir",
        "tf",
        "summary",
        "FileWriter",
        "logdir",
        "output_dir",
        "tf",
        "Session",
        "join",
        "FLAGS",
        "model_dir",
        "FLAGS",
        "checkpoint_path",
        "FLAGS",
        "examples_path",
        "hparams",
        "tf",
        "summary",
        "text",
        "tf",
        "constant",
        "run_config",
        "name",
        "collections",
        "summary_writer",
        "add_summary",
        "run_config_summary",
        "eval",
        "FLAGS",
        "eval_loop",
        "FLAGS",
        "checkpoint_path",
        "tf",
        "contrib",
        "training",
        "wait_for_new_checkpoint",
        "FLAGS",
        "model_dir",
        "last_checkpoint",
        "checkpoint_path",
        "model_inference",
        "model_fn",
        "config",
        "model_fn",
        "model_dir",
        "FLAGS",
        "model_dir",
        "checkpoint_path",
        "checkpoint_path",
        "hparams",
        "hparams",
        "examples_path",
        "FLAGS",
        "examples_path",
        "output_dir",
        "output_dir",
        "summary_writer",
        "summary_writer",
        "master",
        "FLAGS",
        "master",
        "preprocess_examples",
        "FLAGS",
        "preprocess_examples",
        "write_summary_every_step",
        "model_inference",
        "model_fn",
        "config",
        "model_fn",
        "model_dir",
        "FLAGS",
        "model_dir",
        "checkpoint_path",
        "FLAGS",
        "checkpoint_path",
        "hparams",
        "hparams",
        "examples_path",
        "FLAGS",
        "examples_path",
        "output_dir",
        "output_dir",
        "summary_writer",
        "summary_writer",
        "preprocess_examples",
        "FLAGS",
        "preprocess_examples",
        "master",
        "FLAGS",
        "master"
    ],
    "literals": [
        "'master'",
        "''",
        "'Name of the TensorFlow runtime to use.'",
        "'config'",
        "'onsets_frames'",
        "'Name of the config to use.'",
        "'model_dir'",
        "'Path to look for checkpoints.'",
        "'checkpoint_path'",
        "'Filename of the checkpoint to use. If not specified, will use the latest '",
        "'checkpoint'",
        "'examples_path'",
        "'Path to test examples TFRecord.'",
        "'output_dir'",
        "'~/tmp/onsets_frames/infer'",
        "'Path to store output midi files and summary events.'",
        "'hparams'",
        "''",
        "'A comma-separated list of `name=value` hyperparameter values.'",
        "'max_seconds_per_sequence'",
        "'If set, will truncate sequences to be at most this many seconds long.'",
        "'require_onset'",
        "'If set, require an onset prediction for a new note to start.'",
        "'use_offset'",
        "'If set, use the offset predictions to force notes to end.'",
        "'eval_loop'",
        "'If set, will re-run inference every time a new checkpoint is written. '",
        "'And will only output the final results.'",
        "'log'",
        "'INFO'",
        "'The threshold for what messages will be logged: '",
        "'DEBUG, INFO, WARN, ERROR, or FATAL.'",
        "'preprocess_examples'",
        "'Whether or not to run preprocessing on examples.'",
        "'model_dir=%s'",
        "'checkpoint_path=%s'",
        "'examples_path=%s'",
        "'output_dir=%s'",
        "'frame_probs'",
        "'frame_predictions'",
        "'onset_predictions'",
        "'velocity_values'",
        "'offset_predictions'",
        "'Infer time %f, frames %d, frames/sec %f, running average %f'",
        "'Scoring sequence %s'",
        "'utf-8'",
        "'/'",
        "'_'",
        "':'",
        "'.'",
        "'.mid'",
        "'Writing inferred midi file to %s'",
        "'_label.mid'",
        "'Writing label midi file to %s'",
        "'_pianoroll.png'",
        "'Writing acoustic logit/label file to %s'",
        "'w'",
        "'\\n\\n'",
        "'model_dir: '",
        "'checkpoint_path: '",
        "'examples_path: '",
        "'run_config'",
        "'run_config'"
    ],
    "variables": [
        "FLAGS",
        "estimator",
        "num_dims",
        "dataset",
        "metrics_to_updates",
        "metric_note_precision",
        "metric_note_recall",
        "metric_note_f1",
        "metric_note_precision_with_offsets",
        "metric_note_recall_with_offsets",
        "metric_note_f1_with_offsets",
        "metric_note_precision_with_offsets_velocity",
        "metric_note_recall_with_offsets_velocity",
        "metric_note_f1_with_offsets_velocity",
        "metric_frame_labels",
        "metric_frame_predictions",
        "summary_op",
        "global_step",
        "global_step_increment",
        "global_step",
        "global_step_increment",
        "iterator",
        "next_record",
        "infer_times",
        "num_frames",
        "record",
        "start_time",
        "prediction_list",
        "input_features",
        "input_labels",
        "filename",
        "note_sequence",
        "labels",
        "frame_probs",
        "frame_predictions",
        "onset_predictions",
        "velocity_values",
        "offset_predictions",
        "onset_predictions",
        "offset_predictions",
        "sequence_prediction",
        "end_time",
        "infer_time",
        "sequence_label",
        "filename_safe",
        "output_file",
        "label_output_file",
        "pianoroll_output_file",
        "summary",
        "summary",
        "output_dir",
        "config",
        "hparams",
        "hparams",
        "batch_size",
        "hparams",
        "truncated_length_secs",
        "hparams",
        "truncated_length_secs",
        "summary_writer",
        "run_config",
        "run_config_summary",
        "checkpoint_path",
        "checkpoint_path"
    ],
    "comments": [
        "Copyright 2019 The Magenta Authors.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Define some metrics.",
        "TODO(fjord): This is a hack that allows us to keep using our existing",
        "infer/scoring code with a tf.Estimator model. Ideally, we should",
        "move things around so that we can use estimator.evaluate, which will",
        "also be more efficient because it won't have to restore the checkpoint",
        "for every example.",
        "Make filenames UNIX-friendly.",
        "Also write a pianoroll showing acoustic model output vs labels.",
        "Only write the summary variables for the final step.",
        "Batch size should always be 1 for inference."
    ],
    "docstrings": [
        "\"\"\"Inference for onset conditioned model.\n\nCan be used to get a final inference score for a trained model with\n--eval_loop=False. In this case, a summary will be written for every example\nprocessed, and the resulting MIDI and pianoroll images will also be written\nfor every example. The final summary value is the mean score for all examples.\n\nOr, with --eval_loop=True, the script will watch for new checkpoints and re-run\nthe same scoring code over every example, but only the final mean scores will be\nwritten for every checkpoint.\n\"\"\"",
        "\"\"\"Runs inference for the given examples.\"\"\"",
        "\"\"\"Run the infer script.\"\"\""
    ],
    "functions": [
        "model_inference",
        "input_fn",
        "shift_notesequence",
        "run"
    ],
    "classes": []
}