{
    "identifiers": [
        "Collections",
        "Generic",
        "Senparc",
        "CO2NET",
        "Cache",
        "Senparc",
        "CO2NET",
        "Cache",
        "Redis",
        "Senparc",
        "Weixin",
        "Helpers",
        "Senparc",
        "Weixin",
        "Cache",
        "Redis",
        "BaseContainerCacheStrategy",
        "ContainerCacheStrategyDomain",
        "Instance",
        "BaseCacheStrategy",
        "RedisHashSetObjectCacheStrategy",
        "Instance",
        "RegisterCacheStrategyDomain",
        "Nested",
        "instance",
        "RedisHashSetContainerCacheStrategy",
        "RedisHashSetContainerCacheStrategy",
        "IDictionary",
        "TBag",
        "TBag",
        "BaseCacheStrategy",
        "RedisHashSetObjectCacheStrategy",
        "ContainerHelper",
        "GetItemCacheKey",
        "TBag",
        "key",
        "key",
        "Substring",
        "key",
        "Length",
        "key",
        "baseCacheStrategy",
        "GetFinalKey",
        "key",
        "baseCacheStrategy",
        "HashGetAll",
        "key",
        "TBag",
        "item",
        "allHashEntry",
        "key",
        "item",
        "Name",
        "dic",
        "fullKey",
        "item",
        "Value",
        "ToString",
        "DeserializeFromCache",
        "TBag",
        "dic"
    ],
    "literals": [
        "\"\"",
        "\":\""
    ],
    "variables": [
        "ICacheStrategyDomain",
        "CacheStrategyDomain",
        "RedisHashSetContainerCacheStrategy",
        "Instance",
        "RedisHashSetContainerCacheStrategy",
        "instance",
        "baseCacheStrategy",
        "key",
        "allHashEntry",
        "dic",
        "fullKey"
    ],
    "comments": [
        "----------------------------------------------------------------\n\nCopyright 2019 Jeffrey Su & Suzhou Senparc Network Technology Co.,Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file\nexcept in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the\nLicense is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\neither express or implied. See the License for the specific language governing permissions\nand limitations under the License.\n\nDetail: https://github.com/JeffreySu/WeiXinMPSDK/blob/master/license.md\n\n----------------------------------------------------------------",
        "----------------------------------------------------------------\n    Copyright (C) 2019 Senparc\n\n    文件名：RedisHashSetContainerCacheStrategy.cs\n    文件功能描述：Redis HashSet 格式容器缓存策略。\n\n\n    创建标识：Senparc - 20190404\n\n----------------------------------------------------------------",
        "Redis容器缓存策略",
        "</summary>",
        "Redis 缓存策略",
        "</summary>",
        ": base()",
        "base.ChildNamespace = \"WeixinContainer\";",
        "使用底层缓存策略",
        "向底层缓存注册当前缓存策略",
        "静态SearchCache",
        "返回Nested类中的静态成员instance",
        "将instance设为一个初始化的BaseCacheStrategy新实例",
        "Redis 缓存策略析构函数，用于 _client 资源回收",
        "</summary>",
        "var itemCacheKey = ContainerHelper.GetItemCacheKey(typeof(TBag), \"*\");",
        "var keyPattern = string.Format(\"*{0}\", itemCacheKey);",
        "var keyPattern = GetFinalKey(itemCacheKey);",
        "var keys = GetServer().Keys(pattern: keyPattern);",
        "var dic = new Dictionary<string, TBag>();",
        "foreach (var redisKey in keys)",
        "{",
        "try",
        "{",
        "var bag = Get(redisKey, true);",
        "dic[redisKey] = (TBag)bag;",
        "}",
        "catch (Exception)",
        "{",
        "}",
        "}",
        "去掉:号",
        "获取带 SenparcWeixin:DefaultCache: 前缀的Key（[DefaultCache]可配置）",
        "var list = (baseCacheStrategy as RedisObjectCacheStrategy).GetAll(key);",
        "最完整的finalKey（可用于LocalCache），还原完整Key，格式：[命名空间]:[Key]",
        "dic[fullKey] = StackExchangeRedisExtensions.Deserialize<TBag>(hashEntry.Value);"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "RedisHashSetContainerCacheStrategy",
        "Nested",
        "RedisHashSetContainerCacheStrategy",
        "GetAll"
    ],
    "classes": [
        "RedisHashSetContainerCacheStrategy",
        "Nested"
    ]
}