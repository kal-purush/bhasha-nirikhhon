{
    "identifiers": [
        "org",
        "lineageos",
        "settings",
        "device",
        "android",
        "Manifest",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "content",
        "res",
        "Resources",
        "android",
        "hardware",
        "Sensor",
        "android",
        "hardware",
        "SensorEvent",
        "android",
        "hardware",
        "SensorEventListener",
        "android",
        "hardware",
        "SensorManager",
        "android",
        "hardware",
        "camera2",
        "CameraAccessException",
        "android",
        "hardware",
        "camera2",
        "CameraCharacteristics",
        "android",
        "hardware",
        "camera2",
        "CameraManager",
        "android",
        "media",
        "session",
        "MediaSessionLegacyHelper",
        "android",
        "os",
        "Handler",
        "android",
        "os",
        "Message",
        "android",
        "os",
        "PowerManager",
        "android",
        "os",
        "PowerManager",
        "WakeLock",
        "android",
        "os",
        "SystemClock",
        "android",
        "os",
        "Vibrator",
        "android",
        "provider",
        "Settings",
        "android",
        "util",
        "Log",
        "android",
        "view",
        "KeyEvent",
        "com",
        "android",
        "os",
        "DeviceKeyHandler",
        "com",
        "android",
        "util",
        "ArrayUtils",
        "lineageos",
        "providers",
        "LineageSettings",
        "TAG",
        "getSimpleName",
        "mGestureUtil",
        "mBlackKeySettingState",
        "GESTURE_WAKELOCK_DURATION",
        "mContext",
        "mPowerManager",
        "mSensorManager",
        "mCameraManager",
        "mRearCameraId",
        "mTorchEnabled",
        "mProximitySensor",
        "mVibrator",
        "mProximityWakeLock",
        "mGestureWakeLock",
        "mProximityTimeOut",
        "mProximityWakeSupported",
        "context",
        "mContext",
        "context",
        "mGestureUtil",
        "context",
        "mPowerManager",
        "context",
        "getSystemService",
        "Context",
        "POWER_SERVICE",
        "mGestureWakeLock",
        "mPowerManager",
        "newWakeLock",
        "PowerManager",
        "PARTIAL_WAKE_LOCK",
        "resources",
        "mContext",
        "getResources",
        "mProximityTimeOut",
        "resources",
        "getInteger",
        "org",
        "lineageos",
        "platform",
        "R",
        "integer",
        "config_proximityCheckTimeout",
        "mProximityWakeSupported",
        "resources",
        "getBoolean",
        "org",
        "lineageos",
        "platform",
        "R",
        "config_proximityCheckOnWake",
        "mProximityWakeSupported",
        "mSensorManager",
        "context",
        "getSystemService",
        "Context",
        "SENSOR_SERVICE",
        "mProximitySensor",
        "mSensorManager",
        "getDefaultSensor",
        "Sensor",
        "TYPE_PROXIMITY",
        "mProximityWakeLock",
        "mPowerManager",
        "newWakeLock",
        "PowerManager",
        "PARTIAL_WAKE_LOCK",
        "mVibrator",
        "context",
        "getSystemService",
        "Context",
        "VIBRATOR_SERVICE",
        "mVibrator",
        "mVibrator",
        "hasVibrator",
        "mVibrator",
        "mCameraManager",
        "mContext",
        "getSystemService",
        "Context",
        "CAMERA_SERVICE",
        "mCameraManager",
        "registerTorchCallback",
        "Override",
        "cameraId",
        "enabled",
        "cameraId",
        "equals",
        "mRearCameraId",
        "mTorchEnabled",
        "enabled",
        "Override",
        "cameraId",
        "cameraId",
        "equals",
        "mRearCameraId",
        "mTorchEnabled",
        "mRearCameraId",
        "cameraId",
        "mCameraManager",
        "getCameraIdList",
        "characteristics",
        "mCameraManager",
        "getCameraCharacteristics",
        "cameraId",
        "cOrientation",
        "characteristics",
        "get",
        "CameraCharacteristics",
        "LENS_FACING",
        "cOrientation",
        "CameraCharacteristics",
        "LENS_FACING_BACK",
        "mRearCameraId",
        "cameraId",
        "e",
        "mRearCameraId",
        "getAction",
        "KeyEvent",
        "ACTION_UP",
        "mBlackKeySettingState",
        "Settings",
        "getInt",
        "mContext",
        "getContentResolver",
        "keyCode",
        "getKeyCode",
        "mGestureUtil",
        "isScreenoffGestureKey",
        "keyCode",
        "mGestureUtil",
        "updateGestureInfo",
        "gestureType",
        "mGestureUtil",
        "mGestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "mPowerManager",
        "isScreenOn",
        "mPowerManager",
        "wakeUp",
        "SystemClock",
        "uptimeMillis",
        "doHapticFeedback",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "rearCameraId",
        "getRearCameraId",
        "rearCameraId",
        "mGestureWakeLock",
        "acquire",
        "GESTURE_WAKELOCK_DURATION",
        "mCameraManager",
        "setTorchMode",
        "rearCameraId",
        "mTorchEnabled",
        "mTorchEnabled",
        "mTorchEnabled",
        "e",
        "doHapticFeedback",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "dispatchMediaKeyWithWakeLockToMediaSession",
        "KeyEvent",
        "KEYCODE_MEDIA_NEXT",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "doHapticFeedback",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "dispatchMediaKeyWithWakeLockToMediaSession",
        "KeyEvent",
        "KEYCODE_MEDIA_PREVIOUS",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "doHapticFeedback",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "mGestureWakeLock",
        "acquire",
        "GESTURE_WAKELOCK_DURATION",
        "intent",
        "lineageos",
        "content",
        "Intent",
        "ACTION_SCREEN_CAMERA_GESTURE",
        "mContext",
        "sendBroadcast",
        "intent",
        "Manifest",
        "permission",
        "STATUS_BAR_SERVICE",
        "doHapticFeedback",
        "gestureType",
        "getOffset",
        "mBlackKeySettingState",
        "dispatchMediaKeyWithWakeLockToMediaSession",
        "KeyEvent",
        "KEYCODE_MEDIA_PLAY_PAUSE",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "doHapticFeedback",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "gestureType",
        "Log",
        "i",
        "TAG",
        "num",
        "index",
        "index",
        "num",
        "index",
        "keycode",
        "helper",
        "MediaSessionLegacyHelper",
        "getHelper",
        "mContext",
        "helper",
        "SystemClock",
        "uptimeMillis",
        "SystemClock",
        "uptimeMillis",
        "KeyEvent",
        "ACTION_DOWN",
        "keycode",
        "helper",
        "sendMediaButtonEvent",
        "KeyEvent",
        "changeAction",
        "KeyEvent",
        "ACTION_UP",
        "helper",
        "sendMediaButtonEvent",
        "Log",
        "w",
        "TAG",
        "mVibrator",
        "enabled",
        "LineageSettings",
        "getInt",
        "mContext",
        "getContentResolver",
        "LineageSettings",
        "TOUCHSCREEN_GESTURE_HAPTIC_FEEDBACK",
        "enabled",
        "mVibrator",
        "vibrate"
    ],
    "literals": [
        "\"GestureWakeLock\"",
        "\"ProximityWakeLock\"",
        "\"blackscreen_gestrue_enable\"",
        "\"The gesture is  : \"",
        "\"The gesture is ^ : \"",
        "\"The gesture is > : \"",
        "\"The gesture is < : \"",
        "\"The gesture is || : \"",
        "\"The gesture is -> : \"",
        "\"The gesture is <- : \"",
        "\"The gesture is |v : \"",
        "\"The gesture is |^ : \"",
        "\"The gesture is M : \"",
        "\"The gesture is W : \"",
        "\"Screen off gesture received. But can't be recognized!\"",
        "\"Unable to send media key event\""
    ],
    "variables": [
        "mBlackKeySettingState",
        "mContext",
        "mPowerManager",
        "mSensorManager",
        "mCameraManager",
        "mRearCameraId",
        "mTorchEnabled",
        "mProximitySensor",
        "mVibrator",
        "mProximityWakeLock",
        "mGestureWakeLock",
        "mProximityTimeOut",
        "mProximityWakeSupported"
    ],
    "comments": [
        "Ignore",
        "Ignore"
    ],
    "docstrings": [
        "* Copyright (C) 2015-2016 The CyanogenMod Project\n * Copyright (C) 2017 The LineageOS Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "KeyHandler",
        "onTorchModeChanged",
        "onTorchModeUnavailable",
        "getRearCameraId",
        "KeyEvent",
        "handleKeyEvent",
        "getOffset",
        "dispatchMediaKeyWithWakeLockToMediaSession",
        "doHapticFeedback"
    ],
    "classes": [
        "KeyHandler",
        "MyTorchCallback"
    ]
}