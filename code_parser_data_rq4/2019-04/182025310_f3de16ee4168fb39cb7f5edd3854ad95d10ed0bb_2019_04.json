{
    "identifiers": [
        "typing",
        "Any",
        "Callable",
        "Dict",
        "overload",
        "graphql",
        "GraphQLField",
        "GraphQLObjectType",
        "GraphQLResolveInfo",
        "GraphQLSchema",
        "resolvers",
        "resolve_to",
        "types",
        "Bindable",
        "Resolver",
        "Bindable",
        "Dict",
        "Resolver",
        "name",
        "name",
        "name",
        "Callable",
        "Resolver",
        "Resolver",
        "create_register_resolver",
        "name",
        "name",
        "Callable",
        "Resolver",
        "Resolver",
        "f",
        "Resolver",
        "Resolver",
        "_resolvers",
        "f",
        "f",
        "register_resolver",
        "name",
        "resolver",
        "Resolver",
        "Resolver",
        "_resolvers",
        "resolver",
        "resolver",
        "name",
        "to",
        "_resolvers",
        "resolve_to",
        "to",
        "schema",
        "GraphQLSchema",
        "schema",
        "type_map",
        "get",
        "name",
        "validate_graphql_type",
        "graphql_type",
        "bind_resolvers_to_graphql_type",
        "graphql_type",
        "graphql_type",
        "graphql_type",
        "ValueError",
        "name",
        "isinstance",
        "graphql_type",
        "GraphQLObjectType",
        "ValueError",
        "name",
        "graphql_type",
        "GraphQLObjectType",
        "graphql_type",
        "replace_existing",
        "field",
        "resolver",
        "_resolvers",
        "items",
        "field",
        "graphql_type",
        "fields",
        "ValueError",
        "field",
        "name",
        "graphql_type",
        "fields",
        "field",
        "resolve",
        "replace_existing",
        "graphql_type",
        "fields",
        "field",
        "resolver",
        "ObjectType",
        "ObjectType"
    ],
    "literals": [
        "\"Type %s is not defined in the schema\"",
        "\"%s is defined in the schema, but it is instance of %s (expected %s)\"",
        "\"Field %s is not defined on type %s\"",
        "\"Query\"",
        "\"Mutation\""
    ],
    "variables": [
        "_resolvers",
        "name",
        "_resolvers",
        "name",
        "name",
        "name",
        "graphql_type",
        "resolve"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Convenience class for defining Query type\"\"\"",
        "\"\"\"Convenience class for defining Mutation type\"\"\""
    ],
    "functions": [
        "field",
        "create_register_resolver",
        "register_resolver",
        "set_field",
        "set_alias",
        "bind_to_schema",
        "validate_graphql_type",
        "bind_resolvers_to_graphql_type"
    ],
    "classes": [
        "ObjectType",
        "QueryType",
        "MutationType"
    ]
}