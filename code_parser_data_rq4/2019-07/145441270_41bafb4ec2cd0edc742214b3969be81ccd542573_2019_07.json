{
    "identifiers": [
        "DecodedTile",
        "GeometryKind",
        "GeometryKindSet",
        "isLineMarkerTechnique",
        "isPoiTechnique",
        "isTextTechnique",
        "Technique",
        "PerformanceTimer",
        "PerformanceStatistics",
        "Tile",
        "TileGeometryCreator",
        "TileGeometryLoader",
        "GeometryKindSet",
        "m_tile",
        "m_loadPhaseDefinitions",
        "m_basicGeometryKinds",
        "kind",
        "kind",
        "decodedTile",
        "decodedTile",
        "TileGeometryLoader",
        "enabledKinds",
        "disabledKinds",
        "enabledKinds",
        "disabledKinds",
        "toPhase",
        "enabledKinds",
        "disabledKinds",
        "toPhase",
        "toPhase",
        "toPhase",
        "didUpdate",
        "enabledKinds",
        "disabledKinds",
        "didUpdate",
        "didUpdate",
        "enabledKinds",
        "disabledKinds",
        "doFullUpdate",
        "tile",
        "loadPhaseDefinitions",
        "decodedTile",
        "tile",
        "decodedTile",
        "tile",
        "enabledKinds",
        "disabledKinds",
        "decodedTile",
        "currentPhase",
        "TileGeometryCreator",
        "PerformanceStatistics",
        "stats",
        "now",
        "PerformanceTimer",
        "doFullUpdate",
        "geometryCreator",
        "tile",
        "decodedTile",
        "loadPhaseDefinitions",
        "loadPhaseDefinitions",
        "currentPhase",
        "kind",
        "currentPhaseDefinition",
        "geometryCreator",
        "kind",
        "stats",
        "stats",
        "PerformanceTimer",
        "now",
        "stats",
        "stats",
        "currentFrame",
        "decodedTile",
        "currentFrame",
        "decodedTile",
        "currentFrame",
        "decodedTile",
        "decodedTile",
        "currentFrame",
        "decodedTile",
        "decodedTile",
        "currentFrame",
        "decodedTile",
        "decodedTile",
        "currentFrame",
        "tile",
        "tile",
        "tile",
        "tile",
        "geometryCreator",
        "kindToCreate",
        "kindToCreate",
        "kindToCreate",
        "decodedTile",
        "tile",
        "tile",
        "geometryCreator",
        "tile",
        "technique",
        "technique",
        "technique",
        "kindToCreate",
        "GeometryKind",
        "techniqueKind",
        "techniqueKind",
        "techniqueKinds",
        "kindToCreate",
        "techniqueKind",
        "kindToCreate",
        "geometryCreator",
        "tile",
        "decodedTile",
        "textFilter",
        "technique",
        "isPoiTechnique",
        "technique",
        "isLineMarkerTechnique",
        "technique",
        "isTextTechnique",
        "technique",
        "technique",
        "geometryCreator",
        "tile",
        "decodedTile",
        "textFilter",
        "geometryCreator",
        "tile",
        "decodedTile",
        "enabledKinds",
        "disabledKinds",
        "decodedTile",
        "technique",
        "decodedTile",
        "technique",
        "TileGeometryLoader",
        "technique",
        "TileGeometryCreator",
        "decodedTile",
        "enabledKinds",
        "disabledKinds"
    ],
    "literals": [
        "\"@here/harp-datasource-protocol\"",
        "\"@here/harp-utils\"",
        "\"../Statistics\"",
        "\"../Tile\"",
        "\"./TileGeometryCreator\"",
        "\"./TileGeometryLoader\"",
        "\"geometry.geometryCreationTime\"",
        "\"geometryCount.numGeometries\"",
        "\"geometryCount.numTechniques\"",
        "\"geometryCount.numPoiGeometries\"",
        "\"geometryCount.numTextGeometries\"",
        "\"geometryCount.numTextPathGeometries\"",
        "Decoded tile: ${tile.dataSource.name} # lvl=${tile.tileKey.level}",
        "col=${tile.tileKey.column} row=${tile.tileKey.row}"
    ],
    "variables": [
        "didUpdate",
        "tile",
        "loadPhaseDefinitions",
        "decodedTile",
        "currentPhase",
        "geometryCreator",
        "stats",
        "now",
        "currentPhaseDefinition",
        "currentFrame",
        "tile",
        "decodedTile",
        "techniqueKind",
        "techniqueKinds",
        "textFilter",
        "decodedTile"
    ],
    "comments": [
        "First time this tile is handled:",
        "Mark it as finished.",
        "All done, update the stats",
        "All kinds are allowed, except those which are explicitly disabled.",
        "Check if that technique fits the expected kindToCreate.",
        "TextElements do not get their geometry created by Tile, but are managed on a",
        "higher level.",
        "Make sure that all technique have their geometryKind set, either from the Theme or",
        "their default value.",
        "Speedup and simplify following code: Test all techniques if they intersect with",
        "enabledKinds and disabledKinds, in which case they are flagged. The disabledKinds can be",
        "ignored hereafter."
    ],
    "docstrings": [
        "* Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0",
        "* Describes the kinds of geometry that should be loaded in a single phase.",
        "* The `PhasedTileGeometryLoader` loads the geometry of a [[Tile]] using a list of [[Phase]]s.\n *",
        "* Creates an instance of PhasedTileGeometryLoader of a [[Tile]]. It stores the phases in which\n     * its geometry should be created.\n     *\n     * @param {Tile} m_tile Tile the loader manages.\n     * @param {Phase[]} m_loadPhaseDefinitions The definitions of the loading phases.\n     * @param {GeometryKindSet} m_basicGeometryKinds The set of [[GeometryKind]] s that have to be\n     *      created before the [[Tile]] is made visible.",
        "* The [[Tile]] this loader is managing.",
        "* The index into the array of loading phases.",
        "* The number of phases defined.",
        "* The set of [[GeometryKind]]s already created in this [[Tile]].",
        "* The set of [[GeometryKind]]s available in this [[Tile]].",
        "* Returns `true` if all basic [[GeometryKind]]s have been loaded. The set of basic\n     * [[GeometryKind]]s is defined in the constructor of `PhasedTileGeometryLoader`.",
        "* Returns `true` if all [[GeometryKind]]s have been loaded.",
        "* Set the [[DecodedTile]] of the tile. Is called after the decoded tile has been loaded, and\n     * prepares its content for later processing in the 'updateXXX' methods.\n     *\n     * @param {DecodedTile} decodedTile The decoded tile with the flat geometry data belonging to\n     *      this tile.\n     * @returns {DecodedTile} The processed decoded tile.",
        "* Update the tile to have all the content in its decoded tile. Load phases will be ignored.\n     *\n     * @param {(GeometryKindSet | undefined)} enabledKinds The [[GeometryKind]]s that should be\n     *      enabled.\n     * @param {(GeometryKindSet | undefined)} disabledKinds The [[GeometryKind]]s that should be\n     *      disabled.\n     * @returns {boolean} `true` if actual geometry has been created.",
        "* Update the tile to the specified phase (index). All intermediate phases between the current\n     * and the specified phase will be processed.\n     *\n     * @param toPhase A value between 0 and `numberOfPhases`.\n     * @param {(GeometryKindSet | undefined)} enabledKinds The [[GeometryKind]]s that should be\n     *      enabled.\n     * @param {(GeometryKindSet | undefined)} disabledKinds The [[GeometryKind]]s that should be\n     *      disabled.\n     * @returns {boolean} `true` if actual geometry has been created.",
        "* Create all geometries in the current phase, or ignore the phases and create all remaining\n     * geometries if `doFullUpdate` is `true`.\n     *\n     * @param {(GeometryKindSet | undefined)} enabledKinds The [[GeometryKind]]s that should be\n     *      enabled.\n     * @param {(GeometryKindSet | undefined)} disabledKinds The [[GeometryKind]]s that should be\n     *      disabled.\n     * @param doFullUpdate If a value of `true` is specified, the current phase is ignored and all\n     *      remaining geometries are created.\n     * @returns {boolean} `true` if actual geometry has been created.",
        "* Increment the current phase to activate the next phase of geometries.\n     *\n     * @returns {(number | undefined)} The index into the now active current pase, or `undefined` if\n     *      the last phase has been reached.",
        "* Create all geometries of the specified [[GeometryKind]] `kindToCreate`.\n     *\n     * @param {TileGeometryCreator} geometryCreator\n     * @param {GeometryKind} kindToCreate"
    ],
    "functions": [
        "tile",
        "currentPhase",
        "numberOfPhases",
        "geometryKindsCreated",
        "availableGeometryKinds",
        "basicGeometryLoaded",
        "allGeometryLoaded",
        "setDecodedTile",
        "updateCompletely",
        "updateToPhase",
        "update",
        "isFinished",
        "dispose",
        "nextPhase",
        "createKind",
        "processTechniques",
        "finish"
    ],
    "classes": [
        "PhasedTileGeometryLoader"
    ]
}