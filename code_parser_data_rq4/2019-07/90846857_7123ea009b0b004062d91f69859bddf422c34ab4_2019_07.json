{
    "identifiers": [
        "itertools",
        "chain",
        "unittest",
        "unittest",
        "mock",
        "test",
        "support",
        "requires",
        "tkinter",
        "tk",
        "idlelib",
        "delegator",
        "Delegator",
        "idlelib",
        "percolator",
        "Percolator",
        "idlelib",
        "sidebar",
        "text",
        "text",
        "text",
        "master",
        "Percolator",
        "text",
        "Delegator",
        "per",
        "insertfilter",
        "undo",
        "name",
        "value",
        "index",
        "text",
        "index",
        "index",
        "unittest",
        "TestCase",
        "classmethod",
        "cls",
        "requires",
        "tk",
        "Tk",
        "tk",
        "Frame",
        "cls",
        "root",
        "cls",
        "text_frame",
        "pack",
        "side",
        "tk",
        "LEFT",
        "fill",
        "tk",
        "BOTH",
        "expand",
        "cls",
        "text_frame",
        "rowconfigure",
        "weight",
        "cls",
        "text_frame",
        "columnconfigure",
        "weight",
        "tk",
        "Text",
        "cls",
        "text_frame",
        "width",
        "height",
        "wrap",
        "tk",
        "NONE",
        "cls",
        "text",
        "grid",
        "row",
        "column",
        "sticky",
        "tk",
        "NSEW",
        "Dummy_editwin",
        "cls",
        "text",
        "cls",
        "editwin",
        "tk",
        "Scrollbar",
        "cls",
        "text_frame",
        "classmethod",
        "cls",
        "cls",
        "editwin",
        "per",
        "close",
        "cls",
        "root",
        "update",
        "cls",
        "root",
        "destroy",
        "cls",
        "text",
        "cls",
        "text_frame",
        "cls",
        "editwin",
        "cls",
        "root",
        "idlelib",
        "sidebar",
        "LineNumbers",
        "editwin",
        "idlelib",
        "sidebar",
        "idleConf",
        "GetHighlight",
        "theme",
        "element",
        "element",
        "highlight_cfg",
        "orig_idleConf_GetHighlight",
        "theme",
        "element",
        "unittest",
        "mock",
        "patch",
        "idlelib",
        "sidebar",
        "idleConf",
        "mock_idleconf_GetHighlight",
        "GetHighlight_patcher",
        "start",
        "addCleanup",
        "GetHighlight_patcher",
        "stop",
        "root",
        "configType",
        "section",
        "font_override",
        "unittest",
        "mock",
        "patch",
        "idlelib",
        "sidebar",
        "idleConf",
        "mock_idleconf_GetFont",
        "GetFont_patcher",
        "start",
        "addCleanup",
        "GetFont_patcher",
        "stop",
        "text",
        "text",
        "tag_ranges",
        "line",
        "linenumber",
        "sidebar_text",
        "bbox",
        "line",
        "bbox",
        "bbox",
        "x",
        "y",
        "linenumber",
        "sidebar_text",
        "config",
        "assertEqual",
        "state",
        "tk",
        "DISABLED",
        "linenumber",
        "sidebar_text",
        "get",
        "tk",
        "END",
        "n_lines",
        "join",
        "chain",
        "n_lines",
        "assertEqual",
        "get_sidebar_text_contents",
        "expected",
        "expected",
        "assertEqual",
        "text",
        "get",
        "expected",
        "assert_sidebar_n_lines",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assertEqual",
        "linenumber",
        "is_shown",
        "linenumber",
        "show_sidebar",
        "assertEqual",
        "linenumber",
        "is_shown",
        "linenumber",
        "hide_sidebar",
        "assertEqual",
        "linenumber",
        "is_shown",
        "linenumber",
        "hide_sidebar",
        "assertEqual",
        "linenumber",
        "is_shown",
        "linenumber",
        "show_sidebar",
        "assertEqual",
        "linenumber",
        "is_shown",
        "linenumber",
        "show_sidebar",
        "assertEqual",
        "linenumber",
        "is_shown",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "insert",
        "assert_text_equals",
        "text",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "insert",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "text",
        "assert_text_equals",
        "assert_sidebar_n_lines",
        "assert_state_disabled",
        "linenumber",
        "sidebar_text",
        "config",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "insert",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "text",
        "assert_sidebar_n_lines",
        "assertEqual",
        "get_width",
        "linenumber",
        "show_sidebar",
        "text",
        "insert",
        "root",
        "update",
        "get_line_screen_position",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "x",
        "y",
        "y",
        "linenumber",
        "sidebar_text",
        "update",
        "root",
        "update",
        "assertEqual",
        "get_selection",
        "linenumber",
        "show_sidebar",
        "text",
        "insert",
        "root",
        "update",
        "get_line_screen_position",
        "get_line_screen_position",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "start_x",
        "y",
        "start_y",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "start_x",
        "y",
        "start_y",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "end_x",
        "y",
        "end_y",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "end_x",
        "y",
        "end_y",
        "root",
        "update",
        "assertEqual",
        "get_selection",
        "linenumber",
        "show_sidebar",
        "text",
        "insert",
        "root",
        "update",
        "text",
        "yview_scroll",
        "root",
        "update",
        "assertEqual",
        "text",
        "index",
        "assertEqual",
        "linenumber",
        "sidebar_text",
        "index",
        "linenumber",
        "sidebar_text",
        "event_generate",
        "x",
        "y",
        "delta",
        "root",
        "update",
        "assertNotEqual",
        "text",
        "index",
        "assertNotEqual",
        "linenumber",
        "sidebar_text",
        "index",
        "linenumber",
        "ln",
        "sidebar_text",
        "assertNotEqual",
        "orig_font",
        "test_font",
        "ln",
        "hide_sidebar",
        "test_font",
        "ln",
        "update_font",
        "ln",
        "show_sidebar",
        "assertEqual",
        "ln",
        "sidebar_text",
        "test_font",
        "orig_font",
        "ln",
        "update_font",
        "assertEqual",
        "ln",
        "sidebar_text",
        "orig_font",
        "linenumber",
        "highlight_cfg",
        "colors",
        "assertEqual",
        "ln",
        "sidebar_text",
        "colors",
        "assertEqual",
        "ln",
        "sidebar_text",
        "colors",
        "ln",
        "hide_sidebar",
        "test_colors",
        "ln",
        "update_colors",
        "ln",
        "show_sidebar",
        "assert_colors_are_equal",
        "test_colors",
        "ln",
        "update_colors",
        "assert_colors_are_equal",
        "test_colors",
        "orig_colors",
        "ln",
        "update_colors",
        "assert_colors_are_equal",
        "orig_colors",
        "unittest",
        "main",
        "verbosity"
    ],
    "literals": [
        "'gui'",
        "\"background\"",
        "'#abcdef'",
        "\"foreground\"",
        "'#123456'",
        "'linenumber'",
        "'GetHighlight'",
        "'TkFixedFont'",
        "'GetFont'",
        "'1.0'",
        "'end'",
        "'sel'",
        "f'{line}.end -1c'",
        "'state'",
        "'1.0'",
        "'\\n'",
        "''",
        "'1.0'",
        "'end'",
        "'insert'",
        "'foo bar\\n'",
        "'foo bar\\n'",
        "'\\n'",
        "'insert'",
        "'foobar'",
        "'foobar\\n'",
        "'insert'",
        "'\\nfoo'",
        "'foobar\\nfoo\\n'",
        "'insert'",
        "'hello\\n'",
        "'foobar\\nfoohello\\nhello\\n\\n'",
        "'insert'",
        "'\\nworld'",
        "'foobar\\nfoohello\\nhello\\n\\nworld\\n'",
        "'insert'",
        "'foobar'",
        "'foobar\\n'",
        "'1.1'",
        "'1.3'",
        "'fbar\\n'",
        "'insert'",
        "'foo\\n'",
        "'fbarfoo\\nfoo\\n\\n'",
        "'2.0'",
        "'2.end'",
        "'fbarfoo\\n\\n\\n'",
        "'1.3'",
        "'end'",
        "'fba\\n'",
        "'1.0'",
        "'end'",
        "'\\n'",
        "'width'",
        "'insert'",
        "'foo'",
        "'insert'",
        "'foo\\n'",
        "'insert'",
        "'foo\\n'",
        "'insert'",
        "'foo\\n'",
        "'insert -1l linestart'",
        "'insert linestart'",
        "'insert -1l linestart'",
        "'insert linestart'",
        "'insert'",
        "'foo\\n'",
        "'insert'",
        "'foo\\n'",
        "'insert'",
        "'foo\\n'",
        "'insert -1l linestart'",
        "'insert linestart'",
        "'insert -1l linestart'",
        "'insert linestart'",
        "'50.0 -1c'",
        "'end -1c'",
        "'5.0 -1c'",
        "'end -1c'",
        "'1.0'",
        "'end -1c'",
        "'1.0'",
        "'one\\ntwo\\nthree\\nfour\\n'",
        "'<Button-1>'",
        "'2.0'",
        "'3.0'",
        "'1.0'",
        "'one\\ntwo\\nthree\\nfour\\n'",
        "'<Button-1>'",
        "'<B1-Motion>'",
        "'<B1-Motion>'",
        "'<ButtonRelease-1>'",
        "'1.0'",
        "'4.0'",
        "'1.0'",
        "'line\\n'",
        "'unit'",
        "'@0,0'",
        "'11.0'",
        "'@0,0'",
        "'11.0'",
        "'<MouseWheel>'",
        "'@0,0'",
        "'11.0'",
        "'@0,0'",
        "'11.0'",
        "'font'",
        "'TkTextFont'",
        "'font'",
        "'font'",
        "'background'",
        "'#222222'",
        "'foreground'",
        "'#ffff00'",
        "'background'",
        "'background'",
        "'foreground'",
        "'foreground'",
        "'__main__'"
    ],
    "variables": [
        "text",
        "text_frame",
        "per",
        "undo",
        "cls",
        "root",
        "cls",
        "text_frame",
        "cls",
        "text",
        "cls",
        "editwin",
        "vbar",
        "linenumber",
        "highlight_cfg",
        "orig_idleConf_GetHighlight",
        "GetHighlight_patcher",
        "font_override",
        "GetFont_patcher",
        "bbox",
        "x",
        "y",
        "state",
        "expected",
        "x",
        "y",
        "start_x",
        "start_y",
        "end_x",
        "end_y",
        "ln",
        "orig_font",
        "test_font",
        "font_override",
        "font_override",
        "ln",
        "orig_colors",
        "test_colors",
        "highlight_cfg",
        "highlight_cfg"
    ],
    "comments": [
        "Note: deleting up to \"2.end\" doesn't delete the final newline.",
        "Note: Text widgets always keep a single '\\n' character at the end.",
        "Note: Text widgets always keep a single '\\n' character at the end.",
        "Click on the second line.",
        "Drag from the first line to the third line.",
        "Scroll down 10 lines.",
        "Generate a mouse-wheel event and make sure it scrolled up or down.",
        "The meaning of the \"delta\" is OS-dependant, so this just checks for",
        "any change.",
        "Ensure line numbers aren't shown.",
        "Nothing breaks when line numbers aren't shown.",
        "Activate line numbers, previous font change is immediately effective.",
        "Call the font update with line numbers shown, change is picked up.",
        "Ensure line numbers aren't shown.",
        "Nothing breaks with inactive code context.",
        "Show line numbers, previous colors change is immediately effective.",
        "Call colors update with no change to the configured colors.",
        "Call the colors update with line numbers shown, change is picked up."
    ],
    "docstrings": [
        "\"\"\"Test sidebar, coverage 93%\"\"\"",
        "\"\"\"\n        Test that linenumber text widget is always at the minimum\n        width\n        \"\"\""
    ],
    "functions": [
        "setvar",
        "getlineno",
        "setUpClass",
        "tearDownClass",
        "setUp",
        "mock_idleconf_GetHighlight",
        "mock_idleconf_GetFont",
        "tearDown",
        "get_selection",
        "get_line_screen_position",
        "assert_state_disabled",
        "get_sidebar_text_contents",
        "assert_sidebar_n_lines",
        "assert_text_equals",
        "test_init_empty",
        "test_init_not_empty",
        "test_toggle_linenumbering",
        "test_insert",
        "test_delete",
        "test_sidebar_text_width",
        "get_width",
        "test_click_selection",
        "test_drag_selection",
        "test_scroll",
        "test_font",
        "test_highlight_colors",
        "assert_colors_are_equal"
    ],
    "classes": [
        "Dummy_editwin",
        "LineNumbersTest"
    ]
}