{
    "identifiers": [
        "org",
        "kie",
        "soup",
        "commons",
        "cron",
        "java",
        "io",
        "Serializable",
        "java",
        "text",
        "ParseException",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "java",
        "util",
        "TreeSet",
        "serialVersionUID",
        "YEAR_TO_GIVEUP_SCHEDULING_AT",
        "SECOND",
        "MINUTE",
        "HOUR",
        "DAY_OF_MONTH",
        "MONTH",
        "DAY_OF_WEEK",
        "YEAR",
        "ALL_SPEC_INT",
        "NO_SPEC_INT",
        "ALL_SPEC",
        "ALL_SPEC_INT",
        "NO_SPEC",
        "NO_SPEC_INT",
        "monthMap",
        "dayMap",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "monthMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "dayMap",
        "put",
        "cronExpression",
        "seconds",
        "minutes",
        "hours",
        "daysOfMonth",
        "months",
        "daysOfWeek",
        "years",
        "lastdayOfWeek",
        "nthdayOfWeek",
        "lastdayOfMonth",
        "nearestWeekday",
        "expressionParsed",
        "cronExpression",
        "cronExpression",
        "cronExpression",
        "cronExpression",
        "toUpperCase",
        "Locale",
        "US",
        "buildExpression",
        "cronExpression",
        "cronExpression",
        "cronExpression",
        "cronExpression",
        "pe",
        "expression",
        "expressionParsed",
        "seconds",
        "seconds",
        "minutes",
        "minutes",
        "hours",
        "hours",
        "daysOfMonth",
        "daysOfMonth",
        "months",
        "months",
        "daysOfWeek",
        "daysOfWeek",
        "years",
        "years",
        "exprOn",
        "SECOND",
        "exprsTok",
        "Arrays",
        "asList",
        "expression",
        "split",
        "iterator",
        "exprsTok",
        "hasNext",
        "exprOn",
        "YEAR",
        "expr",
        "exprsTok",
        "next",
        "trim",
        "exprOn",
        "DAY_OF_MONTH",
        "expr",
        "indexOf",
        "expr",
        "length",
        "expr",
        "contains",
        "exprOn",
        "DAY_OF_WEEK",
        "expr",
        "indexOf",
        "expr",
        "length",
        "expr",
        "contains",
        "vTok",
        "Arrays",
        "asList",
        "expr",
        "split",
        "iterator",
        "vTok",
        "hasNext",
        "v",
        "vTok",
        "next",
        "storeExpressionVals",
        "v",
        "exprOn",
        "exprOn",
        "exprOn",
        "DAY_OF_WEEK",
        "expression",
        "length",
        "exprOn",
        "YEAR",
        "storeExpressionVals",
        "YEAR",
        "dow",
        "getSet",
        "DAY_OF_WEEK",
        "dom",
        "getSet",
        "DAY_OF_MONTH",
        "dayOfMSpec",
        "dom",
        "contains",
        "NO_SPEC",
        "dayOfWSpec",
        "dow",
        "contains",
        "NO_SPEC",
        "dayOfMSpec",
        "dayOfWSpec",
        "dayOfMSpec",
        "dayOfWSpec",
        "pe",
        "pe",
        "e",
        "e",
        "toString",
        "pos",
        "s",
        "incr",
        "i",
        "skipWhiteSpace",
        "pos",
        "s",
        "i",
        "s",
        "length",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "c",
        "s",
        "equals",
        "s",
        "equals",
        "sub",
        "s",
        "substring",
        "i",
        "i",
        "sval",
        "eval",
        "MONTH",
        "sval",
        "getMonthNumber",
        "sub",
        "sval",
        "sub",
        "i",
        "s",
        "length",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "i",
        "sub",
        "s",
        "substring",
        "i",
        "i",
        "eval",
        "getMonthNumber",
        "sub",
        "eval",
        "sub",
        "i",
        "DAY_OF_WEEK",
        "sval",
        "getDayOfWeekNumber",
        "sub",
        "sval",
        "sub",
        "i",
        "s",
        "length",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "i",
        "sub",
        "s",
        "substring",
        "i",
        "i",
        "eval",
        "getDayOfWeekNumber",
        "sub",
        "eval",
        "sub",
        "i",
        "c",
        "i",
        "nthdayOfWeek",
        "parseInt",
        "s",
        "substring",
        "i",
        "nthdayOfWeek",
        "nthdayOfWeek",
        "e",
        "i",
        "c",
        "lastdayOfWeek",
        "i",
        "sub",
        "i",
        "eval",
        "incr",
        "addToSet",
        "sval",
        "eval",
        "incr",
        "i",
        "c",
        "i",
        "i",
        "s",
        "length",
        "s",
        "charAt",
        "i",
        "s",
        "charAt",
        "i",
        "s",
        "charAt",
        "i",
        "i",
        "DAY_OF_WEEK",
        "DAY_OF_MONTH",
        "i",
        "DAY_OF_WEEK",
        "lastdayOfMonth",
        "val",
        "daysOfMonth",
        "last",
        "val",
        "NO_SPEC_INT",
        "i",
        "addToSet",
        "NO_SPEC_INT",
        "i",
        "c",
        "c",
        "c",
        "i",
        "s",
        "length",
        "addToSet",
        "ALL_SPEC_INT",
        "incr",
        "i",
        "c",
        "i",
        "s",
        "length",
        "s",
        "charAt",
        "i",
        "s",
        "charAt",
        "i",
        "i",
        "c",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "i",
        "i",
        "s",
        "length",
        "i",
        "incr",
        "getNumericValue",
        "s",
        "i",
        "i",
        "incr",
        "i",
        "incr",
        "SECOND",
        "MINUTE",
        "incr",
        "i",
        "incr",
        "HOUR",
        "incr",
        "i",
        "incr",
        "DAY_OF_MONTH",
        "incr",
        "i",
        "incr",
        "DAY_OF_WEEK",
        "incr",
        "i",
        "incr",
        "MONTH",
        "incr",
        "i",
        "incr",
        "addToSet",
        "ALL_SPEC_INT",
        "incr",
        "i",
        "c",
        "i",
        "DAY_OF_MONTH",
        "lastdayOfMonth",
        "DAY_OF_WEEK",
        "addToSet",
        "DAY_OF_MONTH",
        "s",
        "length",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "nearestWeekday",
        "i",
        "i",
        "c",
        "c",
        "val",
        "parseInt",
        "valueOf",
        "c",
        "i",
        "i",
        "s",
        "length",
        "addToSet",
        "val",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "c",
        "vs",
        "getValue",
        "val",
        "s",
        "i",
        "val",
        "vs",
        "value",
        "i",
        "vs",
        "pos",
        "i",
        "checkNext",
        "i",
        "s",
        "val",
        "i",
        "c",
        "i",
        "i",
        "pos",
        "s",
        "val",
        "end",
        "i",
        "pos",
        "i",
        "s",
        "length",
        "addToSet",
        "val",
        "end",
        "i",
        "c",
        "s",
        "charAt",
        "pos",
        "c",
        "DAY_OF_WEEK",
        "lastdayOfWeek",
        "i",
        "i",
        "getSet",
        "add",
        "val",
        "i",
        "i",
        "c",
        "DAY_OF_MONTH",
        "nearestWeekday",
        "i",
        "i",
        "getSet",
        "add",
        "val",
        "i",
        "i",
        "c",
        "DAY_OF_WEEK",
        "i",
        "i",
        "i",
        "nthdayOfWeek",
        "parseInt",
        "s",
        "substring",
        "i",
        "nthdayOfWeek",
        "nthdayOfWeek",
        "e",
        "i",
        "getSet",
        "add",
        "val",
        "i",
        "i",
        "c",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "v",
        "parseInt",
        "valueOf",
        "c",
        "end",
        "v",
        "i",
        "i",
        "s",
        "length",
        "addToSet",
        "val",
        "end",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "c",
        "vs",
        "getValue",
        "v",
        "s",
        "i",
        "v1",
        "vs",
        "value",
        "end",
        "v1",
        "i",
        "vs",
        "pos",
        "i",
        "s",
        "length",
        "c",
        "s",
        "charAt",
        "i",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "v2",
        "parseInt",
        "valueOf",
        "c",
        "i",
        "i",
        "s",
        "length",
        "addToSet",
        "val",
        "end",
        "v2",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "c",
        "vs",
        "getValue",
        "v2",
        "s",
        "i",
        "v3",
        "vs",
        "value",
        "addToSet",
        "val",
        "end",
        "v3",
        "i",
        "vs",
        "pos",
        "i",
        "addToSet",
        "val",
        "end",
        "v2",
        "i",
        "addToSet",
        "val",
        "end",
        "i",
        "c",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "v2",
        "parseInt",
        "valueOf",
        "c",
        "i",
        "i",
        "s",
        "length",
        "addToSet",
        "val",
        "end",
        "v2",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "c",
        "c",
        "vs",
        "getValue",
        "v2",
        "s",
        "i",
        "v3",
        "vs",
        "value",
        "addToSet",
        "val",
        "end",
        "v3",
        "i",
        "vs",
        "pos",
        "i",
        "c",
        "i",
        "addToSet",
        "val",
        "end",
        "i",
        "i",
        "cronExpression",
        "buf",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "seconds",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "minutes",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "hours",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "daysOfMonth",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "months",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "daysOfWeek",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "lastdayOfWeek",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "nearestWeekday",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "nthdayOfWeek",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "lastdayOfMonth",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "getExpressionSetSummary",
        "years",
        "buf",
        "append",
        "buf",
        "toString",
        "contains",
        "NO_SPEC",
        "contains",
        "ALL_SPEC",
        "buf",
        "itr",
        "iterator",
        "first",
        "itr",
        "hasNext",
        "iVal",
        "itr",
        "next",
        "val",
        "iVal",
        "toString",
        "first",
        "buf",
        "append",
        "buf",
        "append",
        "val",
        "first",
        "buf",
        "toString",
        "contains",
        "NO_SPEC",
        "contains",
        "ALL_SPEC",
        "buf",
        "itr",
        "iterator",
        "first",
        "itr",
        "hasNext",
        "iVal",
        "itr",
        "next",
        "val",
        "iVal",
        "toString",
        "first",
        "buf",
        "append",
        "buf",
        "append",
        "val",
        "first",
        "buf",
        "toString",
        "i",
        "s",
        "i",
        "s",
        "length",
        "s",
        "charAt",
        "i",
        "s",
        "charAt",
        "i",
        "i",
        "i",
        "i",
        "s",
        "i",
        "s",
        "length",
        "s",
        "charAt",
        "i",
        "s",
        "charAt",
        "i",
        "i",
        "i",
        "val",
        "end",
        "incr",
        "getSet",
        "SECOND",
        "MINUTE",
        "val",
        "val",
        "end",
        "val",
        "ALL_SPEC_INT",
        "HOUR",
        "val",
        "val",
        "end",
        "val",
        "ALL_SPEC_INT",
        "DAY_OF_MONTH",
        "val",
        "val",
        "end",
        "val",
        "ALL_SPEC_INT",
        "val",
        "NO_SPEC_INT",
        "MONTH",
        "val",
        "val",
        "end",
        "val",
        "ALL_SPEC_INT",
        "DAY_OF_WEEK",
        "val",
        "val",
        "end",
        "val",
        "ALL_SPEC_INT",
        "val",
        "NO_SPEC_INT",
        "incr",
        "incr",
        "val",
        "ALL_SPEC_INT",
        "val",
        "add",
        "val",
        "add",
        "NO_SPEC",
        "startAt",
        "val",
        "stopAt",
        "end",
        "val",
        "ALL_SPEC_INT",
        "incr",
        "incr",
        "add",
        "ALL_SPEC",
        "SECOND",
        "MINUTE",
        "stopAt",
        "stopAt",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "HOUR",
        "stopAt",
        "stopAt",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "DAY_OF_MONTH",
        "stopAt",
        "stopAt",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "MONTH",
        "stopAt",
        "stopAt",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "DAY_OF_WEEK",
        "stopAt",
        "stopAt",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "YEAR",
        "stopAt",
        "stopAt",
        "YEAR_TO_GIVEUP_SCHEDULING_AT",
        "startAt",
        "startAt",
        "ALL_SPEC_INT",
        "startAt",
        "max",
        "stopAt",
        "startAt",
        "SECOND",
        "max",
        "MINUTE",
        "max",
        "HOUR",
        "max",
        "MONTH",
        "max",
        "DAY_OF_WEEK",
        "max",
        "DAY_OF_MONTH",
        "max",
        "YEAR",
        "stopAt",
        "max",
        "i",
        "startAt",
        "i",
        "stopAt",
        "i",
        "incr",
        "max",
        "add",
        "i",
        "i2",
        "i",
        "max",
        "i2",
        "MONTH",
        "DAY_OF_WEEK",
        "DAY_OF_MONTH",
        "i2",
        "max",
        "add",
        "i2",
        "SECOND",
        "seconds",
        "MINUTE",
        "minutes",
        "HOUR",
        "hours",
        "DAY_OF_MONTH",
        "daysOfMonth",
        "MONTH",
        "months",
        "DAY_OF_WEEK",
        "daysOfWeek",
        "YEAR",
        "years",
        "v",
        "s",
        "i",
        "c",
        "s",
        "charAt",
        "i",
        "valueBuilder",
        "valueBuilder",
        "append",
        "v",
        "c",
        "c",
        "valueBuilder",
        "append",
        "c",
        "i",
        "i",
        "s",
        "length",
        "c",
        "s",
        "charAt",
        "i",
        "val",
        "val",
        "pos",
        "i",
        "s",
        "length",
        "i",
        "i",
        "val",
        "value",
        "parseInt",
        "valueBuilder",
        "toString",
        "val",
        "s",
        "i",
        "endOfVal",
        "findNextWhiteSpace",
        "i",
        "s",
        "val",
        "s",
        "substring",
        "i",
        "endOfVal",
        "parseInt",
        "val",
        "s",
        "integer",
        "monthMap",
        "get",
        "s",
        "integer",
        "integer",
        "s",
        "integer",
        "dayMap",
        "get",
        "s",
        "integer",
        "integer",
        "value",
        "pos"
    ],
    "literals": [
        "\"JAN\"",
        "\"FEB\"",
        "\"MAR\"",
        "\"APR\"",
        "\"MAY\"",
        "\"JUN\"",
        "\"JUL\"",
        "\"AUG\"",
        "\"SEP\"",
        "\"OCT\"",
        "\"NOV\"",
        "\"DEC\"",
        "\"SUN\"",
        "\"MON\"",
        "\"TUE\"",
        "\"WED\"",
        "\"THU\"",
        "\"FRI\"",
        "\"SAT\"",
        "\"cronExpression cannot be null\"",
        "\" |\\t\"",
        "\",\"",
        "\"Support for specifying 'L' and 'LW' with other days of the month is not implemented\"",
        "\",\"",
        "\"Support for specifying 'L' with other days of the week is not implemented\"",
        "\",\"",
        "\"Unexpected end of expression.\"",
        "\"*\"",
        "\"Support for specifying both or none of day-of-week AND a day-of-month parameters is not implemented.\"",
        "\"Illegal cron expression format (\"",
        "\")\"",
        "\"L\"",
        "\"LW\"",
        "\"Invalid Month value: '\"",
        "\"'\"",
        "\"Invalid Month value: '\"",
        "\"'\"",
        "\"Invalid Day-of-Week value: '\"",
        "\"'\"",
        "\"Invalid Day-of-Week value: '\"",
        "\"'\"",
        "\"A numeric value between 1 and 5 must follow the '#' option\"",
        "\"Illegal characters for this position: '\"",
        "\"'\"",
        "\"Illegal character after '?': \"",
        "\"'?' can only be specfied for Day-of-Month or Day-of-Week.\"",
        "\"'?' can only be specfied for Day-of-Month -OR- Day-of-Week.\"",
        "\"'/' must be followed by an integer.\"",
        "\"Unexpected end of string.\"",
        "\"Increment > 60 : \"",
        "\"Increment > 24 : \"",
        "\"Increment > 31 : \"",
        "\"Increment > 7 : \"",
        "\"Increment > 12 : \"",
        "\"Unexpected character: \"",
        "\"'L' option is not valid here. (pos=\"",
        "\")\"",
        "\"'W' option is not valid here. (pos=\"",
        "\")\"",
        "\"'#' option is not valid here. (pos=\"",
        "\")\"",
        "\"A numeric value between 1 and 5 must follow the '#' option\"",
        "\"Unexpected character '\"",
        "\"' after '/'\"",
        "\"seconds: \"",
        "\"\\n\"",
        "\"minutes: \"",
        "\"\\n\"",
        "\"hours: \"",
        "\"\\n\"",
        "\"daysOfMonth: \"",
        "\"\\n\"",
        "\"months: \"",
        "\"\\n\"",
        "\"daysOfWeek: \"",
        "\"\\n\"",
        "\"lastdayOfWeek: \"",
        "\"\\n\"",
        "\"nearestWeekday: \"",
        "\"\\n\"",
        "\"NthDayOfWeek: \"",
        "\"\\n\"",
        "\"lastdayOfMonth: \"",
        "\"\\n\"",
        "\"years: \"",
        "\"\\n\"",
        "\"?\"",
        "\"*\"",
        "\",\"",
        "\"?\"",
        "\"*\"",
        "\",\"",
        "\"Minute and Second values must be between 0 and 59\"",
        "\"Hour values must be between 0 and 23\"",
        "\"Day of month values must be between 1 and 31\"",
        "\"Month values must be between 1 and 12\"",
        "\"Day-of-Week values must be between 1 and 7\"",
        "\"Start year must be less than stop year\"",
        "\"Unexpected type encountered\""
    ],
    "variables": [
        "cronExpression",
        "seconds",
        "minutes",
        "hours",
        "daysOfMonth",
        "months",
        "daysOfWeek",
        "years",
        "value",
        "pos"
    ],
    "comments": [
        "'*'",
        "'?'",
        "",
        "",
        "Expression Parsing Functions",
        "",
        "",
        "throw an exception if L is used with other days of the month",
        "throw an exception if L is used with other days of the week",
        "Copying the logic from the UnsupportedOperationException below",
        "is an increment specified?",
        "put in a marker, but also fill values",
        "needs to start at 1969 because timezones can make dates before 1970",
        "if the end of the range is before the start, then we need to overflow into",
        "the next day, month etc. This is done by adding the maximum amount for that",
        "type, and using modulus max to determine the value being added.",
        "ie: there's no max to overflow over",
        "take the modulus to get the real value",
        "1-indexed ranges should not include 0, and should include their max"
    ],
    "docstrings": [
        "* Copyright 2019 Red Hat, Inc. and/or its affiliates.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Provides a parser and evaluator for unix-like cron expressions. Cron\n * expressions provide the ability to specify complex time combinations such as\n * &quot;At 8:00am every Monday through Friday&quot; or &quot;At 1:30am every\n * last Friday of the month&quot;.\n * <P>\n * Cron expressions are comprised of 6 required fields and one optional field\n * separated by white space. The fields respectively are described as follows:\n *\n * <table cellspacing=\"8\">\n * <tr>\n * <th align=\"left\">Field Name</th>\n * <th align=\"left\">&nbsp;</th>\n * <th align=\"left\">Allowed Values</th>\n * <th align=\"left\">&nbsp;</th>\n * <th align=\"left\">Allowed Special Characters</th>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Seconds</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>0-59</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * /</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Minutes</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>0-59</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * /</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Hours</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>0-23</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * /</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Day-of-month</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>1-31</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * ? / L W</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Month</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>1-12 or JAN-DEC</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * /</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Day-of-Week</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>1-7 or SUN-SAT</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * ? / L #</code></td>\n * </tr>\n * <tr>\n * <td align=\"left\"><code>Year (Optional)</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>empty, 1970-2199</code></td>\n * <td align=\"left\">&nbsp;</th>\n * <td align=\"left\"><code>, - * /</code></td>\n * </tr>\n * </table>\n * <P>\n * The '*' character is used to specify all values. For example, &quot;*&quot;\n * in the minute field means &quot;every minute&quot;.\n * <P>\n * The '?' character is allowed for the day-of-month and day-of-week fields. It\n * is used to specify 'no specific value'. This is useful when you need to\n * specify something in one of the two fields, but not the other.\n * <P>\n * The '-' character is used to specify ranges For example &quot;10-12&quot; in\n * the hour field means &quot;the hours 10, 11 and 12&quot;.\n * <P>\n * The ',' character is used to specify additional values. For example\n * &quot;MON,WED,FRI&quot; in the day-of-week field means &quot;the days Monday,\n * Wednesday, and Friday&quot;.\n * <P>\n * The '/' character is used to specify increments. For example &quot;0/15&quot;\n * in the seconds field means &quot;the seconds 0, 15, 30, and 45&quot;. And\n * &quot;5/15&quot; in the seconds field means &quot;the seconds 5, 20, 35, and\n * 50&quot;.  Specifying '*' before the  '/' is equivalent to specifying 0 is\n * the value to start with. Essentially, for each field in the expression, there\n * is a set of numbers that can be turned on or off. For seconds and minutes,\n * the numbers range from 0 to 59. For hours 0 to 23, for days of the month 0 to\n * 31, and for months 1 to 12. The &quot;/&quot; character simply helps you turn\n * on every &quot;nth&quot; value in the given set. Thus &quot;7/6&quot; in the\n * month field only turns on month &quot;7&quot;, it does NOT mean every 6th\n * month, please note that subtlety.\n * <P>\n * The 'L' character is allowed for the day-of-month and day-of-week fields.\n * This character is short-hand for &quot;last&quot;, but it has different\n * meaning in each of the two fields. For example, the value &quot;L&quot; in\n * the day-of-month field means &quot;the last day of the month&quot; - day 31\n * for January, day 28 for February on non-leap years. If used in the\n * day-of-week field by itself, it simply means &quot;7&quot; or\n * &quot;SAT&quot;. But if used in the day-of-week field after another value, it\n * means &quot;the last xxx day of the month&quot; - for example &quot;6L&quot;\n * means &quot;the last friday of the month&quot;. When using the 'L' option, it\n * is important not to specify lists, or ranges of values, as you'll get\n * confusing results.\n * <P>\n * The 'W' character is allowed for the day-of-month field.  This character\n * is used to specify the weekday (Monday-Friday) nearest the given day.  As an\n * example, if you were to specify &quot;15W&quot; as the value for the\n * day-of-month field, the meaning is: &quot;the nearest weekday to the 15th of\n * the month&quot;. So if the 15th is a Saturday, the trigger will fire on\n * Friday the 14th. If the 15th is a Sunday, the trigger will fire on Monday the\n * 16th. If the 15th is a Tuesday, then it will fire on Tuesday the 15th.\n * However if you specify &quot;1W&quot; as the value for day-of-month, and the\n * 1st is a Saturday, the trigger will fire on Monday the 3rd, as it will not\n * 'jump' over the boundary of a month's days.  The 'W' character can only be\n * specified when the day-of-month is a single day, not a range or list of days.\n * <P>\n * The 'L' and 'W' characters can also be combined for the day-of-month\n * expression to yield 'LW', which translates to &quot;last weekday of the\n * month&quot;.\n * <P>\n * The '#' character is allowed for the day-of-week field. This character is\n * used to specify &quot;the nth&quot; XXX day of the month. For example, the\n * value of &quot;6#3&quot; in the day-of-week field means the third Friday of\n * the month (day 6 = Friday and &quot;#3&quot; = the 3rd one in the month).\n * Other examples: &quot;2#1&quot; = the first Monday of the month and\n * &quot;4#5&quot; = the fifth Wednesday of the month. Note that if you specify\n * &quot;#5&quot; and there is not 5 of the given day-of-week in the month, then\n * no firing will occur that month.  If the '#' character is used, there can\n * only be one expression in the day-of-week field (&quot;3#1,6#3&quot; is\n * not valid, since there are two expressions).\n * <P>\n * <!--The 'C' character is allowed for the day-of-month and day-of-week fields.\n * This character is short-hand for \"calendar\". This means values are\n * calculated against the associated calendar, if any. If no calendar is\n * associated, then it is equivalent to having an all-inclusive calendar. A\n * value of \"5C\" in the day-of-month field means \"the first day included by the\n * calendar on or after the 5th\". A value of \"1C\" in the day-of-week field\n * means \"the first day included by the calendar on or after sunday\".-->\n * <P>\n * The legal characters and the names of months and days of the week are not\n * case sensitive.\n *\n * <p>\n * <b>NOTES:</b>\n * <ul>\n * <li>Support for specifying both a day-of-week and a day-of-month value is\n * not complete (you'll need to use the '?' character in one of these fields).\n * </li>\n * <li>Overflowing ranges is supported - that is, having a larger number on\n * the left hand side than the right. You might do 22-2 to catch 10 o'clock\n * at night until 2 o'clock in the morning, or you might have NOV-FEB. It is\n * very important to note that overuse of overflowing ranges creates ranges\n * that don't make sense and no effort has been made to determine which\n * interpretation CronExpression chooses. An example would be\n * \"0 0 14-6 ? * FRI-MON\". </li>\n * </ul>\n * </p>",
        "* Constructs a new <CODE>CronExpression</CODE> based on the specified\n     * parameter.\n     * @param cronExpression String representation of the cron expression the\n     * new object should represent\n     * @throws ParseException if the string expression cannot be parsed into a valid\n     * <CODE>CronExpression</CODE>",
        "* Returns the string representation of the <CODE>CronExpression</CODE>\n     * @return a string representation of the <CODE>CronExpression</CODE>",
        "* Indicates whether the specified cron expression can be parsed into a\n     * valid cron expression\n     * @param cronExpression the expression to evaluate\n     * @return a boolean indicating whether the given expression is a valid cron\n     * expression"
    ],
    "functions": [
        "CronExpression",
        "toString",
        "isValidExpression",
        "buildExpression",
        "storeExpressionVals",
        "checkNext",
        "getCronExpression",
        "getExpressionSummary",
        "getExpressionSetSummary",
        "getExpressionSetSummary",
        "skipWhiteSpace",
        "findNextWhiteSpace",
        "addToSet",
        "TreeSet",
        "getSet",
        "ValueSet",
        "getValue",
        "getNumericValue",
        "getMonthNumber",
        "getDayOfWeekNumber"
    ],
    "classes": [
        "CronExpression",
        "ValueSet"
    ]
}