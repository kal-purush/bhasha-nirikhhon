{
    "identifiers": [
        "logging",
        "syft",
        "sy",
        "syft",
        "workers",
        "WebsocketServerWorker",
        "torch",
        "argparse",
        "torchvision",
        "datasets",
        "torchvision",
        "transforms",
        "numpy",
        "np",
        "syft",
        "frameworks",
        "torch",
        "federated",
        "utils",
        "id",
        "host",
        "port",
        "hook",
        "verbose",
        "keep_labels",
        "training",
        "WebsocketServerWorker",
        "id",
        "id",
        "host",
        "host",
        "port",
        "port",
        "hook",
        "hook",
        "verbose",
        "verbose",
        "datasets",
        "MNIST",
        "root",
        "train",
        "training",
        "download",
        "transform",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "training",
        "np",
        "isin",
        "mnist_dataset",
        "targets",
        "keep_labels",
        "astype",
        "logger",
        "info",
        "indices",
        "sum",
        "torch",
        "native_masked_select",
        "mnist_dataset",
        "data",
        "transpose",
        "torch",
        "tensor",
        "indices",
        "view",
        "transpose",
        "logger",
        "info",
        "selected_data",
        "shape",
        "torch",
        "native_masked_select",
        "mnist_dataset",
        "targets",
        "torch",
        "tensor",
        "indices",
        "sy",
        "BaseDataset",
        "data",
        "selected_data",
        "targets",
        "selected_targets",
        "transform",
        "mnist_dataset",
        "transform",
        "sy",
        "BaseDataset",
        "data",
        "mnist_dataset",
        "data",
        "targets",
        "mnist_dataset",
        "targets",
        "transform",
        "mnist_dataset",
        "transform",
        "server",
        "add_dataset",
        "dataset",
        "key",
        "key",
        "torch",
        "tensor",
        "requires_grad",
        "torch",
        "tensor",
        "server",
        "add_dataset",
        "sy",
        "BaseDataset",
        "data_vectors",
        "target_vectors",
        "key",
        "torch",
        "tensor",
        "requires_grad",
        "torch",
        "tensor",
        "requires_grad",
        "server",
        "add_dataset",
        "sy",
        "BaseDataset",
        "data_xor",
        "target_xor",
        "key",
        "utils",
        "create_gaussian_mixture_toy_data",
        "nr_samples",
        "server",
        "add_dataset",
        "sy",
        "BaseDataset",
        "data",
        "target",
        "key",
        "utils",
        "iris_data_partial",
        "sy",
        "BaseDataset",
        "data",
        "target",
        "server",
        "add_dataset",
        "dataset",
        "key",
        "dataset_key",
        "logger",
        "info",
        "server",
        "datasets",
        "training",
        "logger",
        "info",
        "len",
        "server",
        "datasets",
        "server",
        "start",
        "server",
        "logging",
        "getLogger",
        "logging",
        "basicConfig",
        "format",
        "FORMAT",
        "logger",
        "setLevel",
        "level",
        "logging",
        "DEBUG",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "sy",
        "TorchHook",
        "torch",
        "start_websocket_server_worker",
        "id",
        "args",
        "id",
        "host",
        "args",
        "host",
        "port",
        "args",
        "port",
        "hook",
        "hook",
        "verbose",
        "args",
        "verbose",
        "keep_labels",
        "KEEP_LABELS_DICT",
        "args",
        "id",
        "args",
        "id",
        "KEEP_LABELS_DICT",
        "training",
        "args",
        "testing"
    ],
    "literals": [
        "\"alice\"",
        "\"bob\"",
        "\"charlie\"",
        "\"testing\"",
        "\"./data\"",
        "\"uint8\"",
        "\"number of true indices: %s\"",
        "\"after selection: %s\"",
        "\"mnist\"",
        "\"mnist_testing\"",
        "\"vectors\"",
        "\"xor\"",
        "\"gaussian_mixture\"",
        "\"iris\"",
        "\"datasets: %s\"",
        "\"len(datasets[mnist]): %s\"",
        "\"mnist\"",
        "\"__main__\"",
        "\"run_websocket_server\"",
        "\"%(asctime)s %(levelname)s %(filename)s(l:%(lineno)d, p:%(process)d) - %(message)s\"",
        "\"Run websocket server worker.\"",
        "\"--port\"",
        "\"-p\"",
        "\"port number of the websocket server worker, e.g. --port 8777\"",
        "\"--host\"",
        "\"localhost\"",
        "\"host for the connection\"",
        "\"--id\"",
        "\"name (id) of the websocket server worker, e.g. --id alice\"",
        "\"--testing\"",
        "\"store_true\"",
        "\"if set, websocket server worker will load the test dataset instead of the training dataset\"",
        "\"--verbose\"",
        "\"-v\"",
        "\"store_true\"",
        "\"if set, websocket server worker will be started in verbose mode\""
    ],
    "variables": [
        "KEEP_LABELS_DICT",
        "server",
        "mnist_dataset",
        "indices",
        "selected_data",
        "selected_targets",
        "dataset",
        "key",
        "dataset",
        "key",
        "data_vectors",
        "target_vectors",
        "data_xor",
        "target_xor",
        "data",
        "target",
        "data",
        "target",
        "dataset",
        "dataset_key",
        "logger",
        "FORMAT",
        "parser",
        "args",
        "hook",
        "server"
    ],
    "comments": [
        "pragma: no cover",
        "pragma: no cover",
        "Setup toy data (mnist example)",
        "Setup toy data (vectors example)",
        "Setup toy data (xor example)",
        "Setup gaussian mixture dataset",
        "Setup partial iris dataset",
        "pragma: no cover",
        "Logging setup",
        "Parse args",
        "Hook and start server"
    ],
    "docstrings": [
        "\"\"\"Helper function for spinning up a websocket server and setting up the local datasets.\"\"\""
    ],
    "functions": [
        "start_websocket_server_worker"
    ],
    "classes": []
}