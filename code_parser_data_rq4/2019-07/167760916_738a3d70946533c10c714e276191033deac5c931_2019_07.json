{
    "identifiers": [
        "array",
        "nums",
        "nums",
        "length",
        "nums",
        "length",
        "low",
        "high",
        "high",
        "nums",
        "length",
        "nums",
        "high",
        "nums",
        "low",
        "high",
        "low",
        "nums",
        "low",
        "nums",
        "high",
        "high",
        "low"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Given a sorted array nums, remove the duplicates in-place such that each element appear only once and return the new length.\n * <p>\n * Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.\n * <p>\n * Example 1:\n * <p>\n * Given nums = [1,1,2],\n * <p>\n * Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively.\n * <p>\n * It doesn't matter what you leave beyond the returned length.\n * Example 2:\n * <p>\n * Given nums = [0,0,1,1,1,2,2,3,3,4],\n * <p>\n * Your function should return length = 5, with the first five elements of nums being modified to 0, 1, 2, 3, and 4 respectively.\n * <p>\n * It doesn't matter what values are set beyond the returned length.\n * Clarification:\n * <p>\n * Confused why the returned value is an integer but your answer is an array?\n * <p>\n * Note that the input array is passed in by reference, which means modification to the input array will be known to the caller as well.\n * <p>\n * Internally you can think of this:\n * <p>\n * // nums is passed in by reference. (i.e., without making a copy)\n * int len = removeDuplicates(nums);\n * <p>\n * // any modification to nums in your function would be known by the caller.\n * // using the length returned by your function, it prints the first len elements.\n * for (int i = 0; i < len; i++) {\n * print(nums[i]);\n * }"
    ],
    "functions": [
        "solution"
    ],
    "classes": [
        "lc26removeDuplicatesFromSortedArray"
    ]
}