{
    "identifiers": [
        "print_function",
        "unicode_literals",
        "os",
        "os",
        "path",
        "dirname",
        "ADMINS",
        "os",
        "path",
        "join",
        "os",
        "environ",
        "get",
        "PHENO_BROWSER_CACHE",
        "os",
        "environ",
        "get",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "normpath",
        "os",
        "path",
        "join",
        "PROJECT_ROOT",
        "replace",
        "DEBUG"
    ],
    "literals": [
        "'users_api.models.get_anonymous_user_instance'",
        "\"anonymous@seqpipe.org\"",
        "'django.contrib.auth.backends.ModelBackend'",
        "'guardian.backends.ObjectPermissionBackend'",
        "\"http://localhost:8000\"",
        "'/gpfjs/(popup:validate/{})'",
        "'django.core.mail.backends.console.EmailBackend'",
        "'default'",
        "'ENGINE'",
        "'django.db.backends.sqlite3'",
        "'NAME'",
        "'wdae.sql'",
        "'USER'",
        "''",
        "'PASSWORD'",
        "''",
        "'HOST'",
        "''",
        "'PORT'",
        "''",
        "'*'",
        "'America/Chicago'",
        "'en-us'",
        "''",
        "''",
        "''",
        "'/static/'",
        "'DAE_DB_DIR'",
        "'pheno'",
        "\"/static/\"",
        "'django.contrib.staticfiles.finders.FileSystemFinder'",
        "'django.contrib.staticfiles.finders.AppDirectoriesFinder'",
        "'SECRET_KEY'",
        "'#mhbhbjgub==v$cjdu7jay@*$ux$novw#t2tmgjr^5(pr@ycxp'",
        "'django.middleware.common.CommonMiddleware'",
        "'django.contrib.sessions.middleware.SessionMiddleware'",
        "'django.middleware.csrf.CsrfViewMiddleware'",
        "'django.contrib.auth.middleware.AuthenticationMiddleware'",
        "'django.contrib.messages.middleware.MessageMiddleware'",
        "'django.middleware.clickjacking.XFrameOptionsMiddleware'",
        "'wdae.urls'",
        "'wdae.wsgi.application'",
        "'guardian'",
        "'django.contrib.admin'",
        "'django.contrib.messages'",
        "'django.contrib.auth'",
        "'django.contrib.contenttypes'",
        "'django.contrib.staticfiles'",
        "'django.contrib.sessions'",
        "'rest_framework'",
        "'rest_framework.authtoken'",
        "'helpers'",
        "'gene_weights'",
        "'gene_sets'",
        "'datasets_api'",
        "'genotype_browser'",
        "'enrichment_api'",
        "'measures_api'",
        "'family_counters_api'",
        "'pheno_browser_api'",
        "'common_reports_api'",
        "'pheno_tool_api'",
        "'users_api'",
        "'groups_api'",
        "'chromosome'",
        "'query_state_save'",
        "'users_api.WdaeUser'",
        "'PAGINATE_BY'",
        "'DEFAULT_AUTHENTICATION_CLASSES'",
        "'users_api.authentication.SessionAuthenticationWithoutCSRF'",
        "'DEFAULT_RENDERER_CLASSES'",
        "'rest_framework.renderers.JSONRenderer'",
        "'django.contrib.sessions.serializers.JSONSerializer'",
        "'version'",
        "'disable_existing_loggers'",
        "'filters'",
        "'require_debug_false'",
        "'()'",
        "'django.utils.log.RequireDebugFalse'",
        "'formatters'",
        "'verbose'",
        "'format'",
        "'%(levelname)s %(asctime)s %(module)s %(process)d '",
        "'%(thread)d %(message)s'",
        "'simple'",
        "'format'",
        "'%(levelname)s %(message)s'",
        "'handlers'",
        "'console'",
        "'level'",
        "'DEBUG'",
        "'class'",
        "'logging.StreamHandler'",
        "'formatter'",
        "'verbose'",
        "'mail_admins'",
        "'level'",
        "'ERROR'",
        "'filters'",
        "'require_debug_false'",
        "'class'",
        "'django.utils.log.AdminEmailHandler'",
        "'logfile'",
        "'class'",
        "'logging.handlers.WatchedFileHandler'",
        "'filename'",
        "'wdae-api.log'",
        "'filters'",
        "'require_debug_false'",
        "'formatter'",
        "'verbose'",
        "'logdebug'",
        "'class'",
        "'logging.handlers.WatchedFileHandler'",
        "'filename'",
        "'wdae-debug.log'",
        "'formatter'",
        "'verbose'",
        "'loggers'",
        "'django'",
        "'handlers'",
        "'logfile'",
        "'logdebug'",
        "'propagate'",
        "'level'",
        "'INFO'",
        "'wdae.api'",
        "'handlers'",
        "'logfile'",
        "'level'",
        "'DEBUG'",
        "'propagate'",
        "'impala'",
        "'handlers'",
        "'console'",
        "'logdebug'",
        "'level'",
        "'INFO'",
        "'propagate'",
        "'matplotlib'",
        "'handlers'",
        "'console'",
        "'logdebug'",
        "'level'",
        "'INFO'",
        "'propagate'",
        "''",
        "'handlers'",
        "'console'",
        "'logdebug'",
        "'level'",
        "'DEBUG'",
        "'propagate'",
        "'default'",
        "'BACKEND'",
        "'django.core.cache.backends.filebased.FileBasedCache'",
        "'LOCATION'",
        "'wdae_django_default.cache'",
        "'TIMEOUT'",
        "'OPTIONS'",
        "'MAX_ENTRIES'",
        "'long'",
        "'BACKEND'",
        "'django.core.cache.backends.filebased.FileBasedCache'",
        "'LOCATION'",
        "'wdae_django_default.cache'",
        "'TIMEOUT'",
        "'OPTIONS'",
        "'MAX_ENTRIES'",
        "'pre'",
        "'BACKEND'",
        "'django.core.cache.backends.filebased.FileBasedCache'",
        "'LOCATION'",
        "'wdae_django_pre.cache'",
        "'TIMEOUT'",
        "'enrichment'",
        "'BACKEND'",
        "'django.core.cache.backends.locmem.LocMemCache'",
        "'LOCATION'",
        "'unique-snowflake'",
        "'TIMEOUT'",
        "'BACKEND'",
        "'django.template.backends.django.DjangoTemplates'",
        "'DIRS'",
        "'..'",
        "'gpfjs'",
        "'static'",
        "'gpfjs'",
        "'\\\\'",
        "'/'",
        "'APP_DIRS'",
        "'OPTIONS'",
        "'context_processors'",
        "'django.template.context_processors.debug'",
        "'django.template.context_processors.request'",
        "'django.contrib.auth.context_processors.auth'",
        "'django.contrib.messages.context_processors.messages'",
        "'debug'"
    ],
    "variables": [
        "DEBUG",
        "GUARDIAN_GET_INIT_ANONYMOUS_USER",
        "ANONYMOUS_USER_NAME",
        "BASE_DIR",
        "ADMINS",
        "AUTHENTICATION_BACKENDS",
        "MANAGERS",
        "EMAIL_VERIFICATION_HOST",
        "EMAIL_VERIFICATION_PATH",
        "EMAIL_BACKEND",
        "DATABASES",
        "ALLOWED_HOSTS",
        "TIME_ZONE",
        "LANGUAGE_CODE",
        "SITE_ID",
        "USE_I18N",
        "USE_L10N",
        "USE_TZ",
        "MEDIA_ROOT",
        "MEDIA_URL",
        "STATIC_ROOT",
        "STATIC_URL",
        "APPEND_SLASH",
        "PHENO_BROWSER_CACHE",
        "PHENO_BROWSER_BASE_URL",
        "STATICFILES_DIRS",
        "STATICFILES_FINDERS",
        "SECRET_KEY",
        "MIDDLEWARE",
        "ROOT_URLCONF",
        "WSGI_APPLICATION",
        "PROJECT_ROOT",
        "INSTALLED_APPS",
        "AUTH_USER_MODEL",
        "REST_FRAMEWORK",
        "SESSION_SERIALIZER",
        "LOGGING",
        "CACHES",
        "TEMPLATES"
    ],
    "comments": [
        "Django settings for wdae project.",
        "('Your Name', 'your_email@example.com'),",
        "default",
        "EMAIL_USE_TLS = True",
        "EMAIL_HOST =",
        "EMAIL_PORT =",
        "EMAIL_HOST_USER",
        "EMAIL_HOST_PASSWORD",
        "Hosts/domain names that are valid for this site; required if DEBUG is False",
        "See https://docs.djangoproject.com/en/1.5/ref/settings/#allowed-hosts",
        "Local time zone for this installation. Choices can be found here:",
        "http://en.wikipedia.org/wiki/List_of_tz_zones_by_name",
        "although not all choices may be available on all operating systems.",
        "In a Windows environment this must be set to your system time zone.",
        "Language code for this installation. All choices can be found here:",
        "http://www.i18nguy.com/unicode/language-identifiers.html",
        "If you set this to False, Django will make some optimizations so as not",
        "to load the internationalization machinery.",
        "If you set this to False, Django will not format dates, numbers and",
        "calendars according to the current locale.",
        "If you set this to False, Django will not use timezone-aware datetimes.",
        "Absolute filesystem path to the directory that will hold user-uploaded files.",
        "Example: \"/var/www/example.com/media/\"",
        "URL that handles the media served from MEDIA_ROOT. Make sure to use a",
        "trailing slash.",
        "Examples: \"http://example.com/media/\", \"http://media.example.com/\"",
        "Absolute path to the directory static files should be collected to.",
        "Don't put anything in this directory yourself; store your static files",
        "in apps' \"static/\" subdirectories and in STATICFILES_DIRS.",
        "Example: \"/var/www/example.com/static/\"",
        "URL prefix for static files.",
        "Example: \"http://example.com/static/\", \"http://static.example.com/\"",
        "Additional locations of static files",
        "Put strings here, like \"/home/html/static\" or \"C:/www/django/static\".",
        "Always use forward slashes, even on Windows.",
        "Don't forget to use absolute paths, not relative paths.",
        "List of finder classes that know how to find static files in",
        "various locations.",
        "'django.contrib.staticfiles.finders.DefaultStorageFinder',",
        "Make this unique, and don't share it with anybody.",
        "Uncomment the next line for simple clickjacking protection:",
        "Python dotted path to the WSGI application used by Django's runserver.",
        "'gpfjs',",
        "A sample logging configuration. The only tangible logging",
        "performed by this configuration is to send an email to",
        "the site admins on every HTTP 500 error when DEBUG=False.",
        "See http://docs.djangoproject.com/en/dev/topics/logging for",
        "more details on how to customize your logging configuration.",
        "Log to a text file that can be rotated by logrotate",
        "'django.request': {",
        "'handlers': ['console'],",
        "'level': 'WARN',",
        "'propagate': True,",
        "},",
        "'logfile'],",
        "'logfile'],",
        "'logfile'],",
        "'default': {",
        "'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',",
        "'LOCATION': '127.0.0.1:11211',",
        "'TIMEOUT': 3600,",
        "'OPTIONS': {",
        "'MAX_ENTRIES': 10000",
        "}",
        "},",
        "'long': {",
        "'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',",
        "'LOCATION': '127.0.0.1:11211',",
        "'TIMEOUT': 2592000,",
        "'OPTIONS': {",
        "'MAX_ENTRIES': 1000",
        "}",
        "},",
        "try:",
        "from local_settings import *  # @UnusedWildImport",
        "except ImportError as e:",
        "if \"local_settings\" not in str(e):",
        "raise e"
    ],
    "docstrings": [
        "''' Set these for production'''"
    ],
    "functions": [],
    "classes": []
}