{
    "identifiers": [
        "Threading",
        "Tasks",
        "Correlate",
        "IAsyncCorrelationManager",
        "Func",
        "correlatedTask",
        "Func",
        "correlatedTask",
        "OnException",
        "onException",
        "correlationId",
        "Func",
        "correlatedTask",
        "correlationId",
        "Func",
        "correlatedTask",
        "OnException",
        "onException"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Describes methods for starting a correlation context asynchronously.",
        "</summary>",
        "Executes the <paramref name=\"correlatedTask\"/> with its own <see cref=\"CorrelationContext\"/>.",
        "</summary>",
        "<param name=\"correlatedTask\">The task to execute.</param>",
        "<returns>An awaitable that completes once the <paramref name=\"correlatedTask\"/> has executed and the correlation context has disposed.</returns>",
        "<remarks>",
        "When logging and tracing are both disabled, no correlation context is created and the task simply executed as it normally would.",
        "</remarks>",
        "Executes the <paramref name=\"correlatedTask\"/> with its own <see cref=\"CorrelationContext\"/>.",
        "</summary>",
        "<param name=\"correlatedTask\">The task to execute.</param>",
        "<param name=\"onException\">A delegate to handle the exception inside the correlation scope, before it is disposed. Returns <see langword=\"true\" /> to consider the exception handled, or <see langword=\"false\" /> to throw.</param>",
        "<returns>An awaitable that completes once the <paramref name=\"correlatedTask\"/> has executed and the correlation context has disposed.</returns>",
        "<remarks>",
        "When logging and tracing are both disabled, no correlation context is created and the task simply executed as it normally would.",
        "</remarks>",
        "Executes the <paramref name=\"correlatedTask\"/> with its own <see cref=\"CorrelationContext\"/>.",
        "</summary>",
        "<param name=\"correlationId\">The correlation id to use, or null to generate a new one.</param>",
        "<param name=\"correlatedTask\">The task to execute.</param>",
        "<returns>An awaitable that completes once the <paramref name=\"correlatedTask\"/> has executed and the correlation context has disposed.</returns>",
        "<remarks>",
        "When logging and tracing are both disabled, no correlation context is created and the task simply executed as it normally would.",
        "</remarks>",
        "Executes the <paramref name=\"correlatedTask\"/> with its own <see cref=\"CorrelationContext\"/>.",
        "</summary>",
        "<param name=\"correlationId\">The correlation id to use, or null to generate a new one.</param>",
        "<param name=\"correlatedTask\">The task to execute.</param>",
        "<param name=\"onException\">A delegate to handle the exception inside the correlation scope, before it is disposed. Returns <see langword=\"true\" /> to consider the exception handled, or <see langword=\"false\" /> to throw.</param>",
        "<returns>An awaitable that completes once the <paramref name=\"correlatedTask\"/> has executed and the correlation context has disposed.</returns>",
        "<remarks>",
        "When logging and tracing are both disabled, no correlation context is created and the task simply executed as it normally would.",
        "</remarks>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "CorrelateAsync",
        "CorrelateAsync",
        "CorrelateAsync",
        "CorrelateAsync"
    ],
    "classes": []
}