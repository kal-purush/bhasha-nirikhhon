{
    "identifiers": [
        "expect",
        "model",
        "Dummy",
        "model",
        "Hook",
        "it",
        "Hook",
        "expect",
        "hook",
        "hook",
        "hook",
        "expect",
        "savedHook",
        "it",
        "Dummy",
        "Dummy",
        "expect",
        "dummyFromDb",
        "it",
        "Dummy",
        "Dummy",
        "expect",
        "foundDummies",
        "expect",
        "foundDummies",
        "expect",
        "foundDummies",
        "it",
        "Dummy",
        "Dummy",
        "Dummy",
        "expect",
        "foundUpdatedDummies"
    ],
    "literals": [
        "'chai'",
        "'../hookTests/dummy'",
        "'../hookTests/hooktestModel'",
        "'should update the property using isModified during pre save hook'",
        "'steel'",
        "'shape'",
        "'oldShape'",
        "'shape'",
        "'changed'",
        "'shape'",
        "'newShape'",
        "'should test findOne post hook'",
        "'initial'",
        "'saved'",
        "'text'",
        "'changed in post findOne hook'",
        "'should find the unexpected dummies because of pre and post hooks'",
        "'whatever'",
        "'whatever'",
        "'saved'",
        "'text'",
        "'changed in post find hook'",
        "'text'",
        "'saved'",
        "'should test the updateMany hook'",
        "'foobar42'",
        "'foobar42'",
        "'foobar42'",
        "'lorem ipsum'",
        "'updateManied'"
    ],
    "variables": [
        "hook",
        "savedHook",
        "dummyFromDb",
        "foundDummies",
        "foundUpdatedDummies"
    ],
    "comments": [
        "text is changed in pre save hook",
        "pre-save-hook changed text to saved",
        "pre-updateMany-hook changed text to 'updateManied'"
    ],
    "docstrings": [
        "* Function to pass into describe\n * ->Important: you need to always bind this\n * @example\n * ```\n * import { suite as HookTests } from './hooks.test.ts'\n * ...\n * describe('Hooks', HookTests.bind(this));\n * ...\n * ```"
    ],
    "functions": [
        "suite"
    ],
    "classes": []
}