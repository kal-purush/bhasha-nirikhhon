{
    "identifiers": [
        "pickle",
        "pk",
        "cv2",
        "pickle",
        "dump",
        "os",
        "dlib",
        "face_recognition",
        "numpy",
        "np",
        "time",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "encodings",
        "database",
        "threshold",
        "name",
        "db_enc",
        "database",
        "db_vectors",
        "append",
        "db_enc",
        "db_names",
        "append",
        "name",
        "np",
        "array",
        "db_vectors",
        "encoding",
        "encodings",
        "np",
        "linalg",
        "norm",
        "db_vectors",
        "np",
        "array",
        "encoding",
        "axis",
        "np",
        "min",
        "np",
        "array",
        "dist_vector",
        "np",
        "argmin",
        "np",
        "array",
        "dist_vector",
        "db_names",
        "index",
        "min_dist",
        "threshold",
        "results",
        "append",
        "identity",
        "scores",
        "append",
        "min_dist",
        "results",
        "scores",
        "os",
        "path",
        "join",
        "path",
        "dlib",
        "get_frontal_face_detector",
        "database",
        "append",
        "np",
        "zeros",
        "dtype",
        "np",
        "float64",
        "img",
        "name",
        "boxes",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2RGB",
        "face_recognition",
        "face_encodings",
        "img",
        "boxes",
        "encoding",
        "encodings",
        "np",
        "array",
        "encoding",
        "shape",
        "database",
        "append",
        "name",
        "encoding",
        "format",
        "name",
        "name",
        "i",
        "db_name",
        "db_enc",
        "database",
        "name",
        "db_name",
        "db_name",
        "name",
        "database",
        "pop",
        "i",
        "format",
        "name",
        "dump",
        "database",
        "open",
        "db_path",
        "img",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2RGB",
        "face_recognition",
        "face_locations",
        "img",
        "model",
        "time",
        "time",
        "face_recognition",
        "face_encodings",
        "img",
        "boxes",
        "time",
        "time",
        "who_is_it",
        "encodings",
        "database",
        "threshold",
        "top",
        "right",
        "bottom",
        "left",
        "name",
        "boxes",
        "names",
        "box",
        "append",
        "left",
        "top",
        "right",
        "bottom",
        "names",
        "append",
        "name",
        "cv2",
        "rectangle",
        "img",
        "left",
        "top",
        "right",
        "bottom",
        "top",
        "top",
        "top",
        "cv2",
        "putText",
        "img",
        "name",
        "left",
        "y",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "img",
        "box",
        "names",
        "os",
        "listdir",
        "image",
        "images",
        "FaceRecognizer",
        "cv2",
        "imread",
        "image",
        "fce",
        "add_new_face",
        "camera"
    ],
    "literals": [
        "\"Unknown\"",
        "'models'",
        "'db_enc.pkl'",
        "'name'",
        "\"Added {} to the database\"",
        "\"Removed {} from database\"",
        "\"wb\"",
        "'hog'",
        "\"__main__\"",
        "'Webcam'",
        "'Webcam/'",
        "'name'"
    ],
    "variables": [
        "path",
        "results",
        "scores",
        "min_dist",
        "identity",
        "db_vectors",
        "db_names",
        "db_vectors",
        "dist_vector",
        "min_dist",
        "index",
        "identity",
        "identity",
        "db_path",
        "detector",
        "database",
        "img",
        "encodings",
        "box",
        "names",
        "img",
        "boxes",
        "start",
        "encodings",
        "end",
        "names",
        "scores",
        "y",
        "images",
        "fce",
        "camera"
    ],
    "comments": [
        "Initialize \"min_dist\" to a large value, say 100 (â‰ˆ1 line)",
        "create array for db and names",
        "Compute L2 distance between the target \"encoding\" and db_vectors",
        "calculating minimum distance and it's corresponding index",
        "database path",
        "load the face detector",
        "loading database",
        "if(os.path.exists(self.db_path)):",
        "self.database = pk.load(open(self.db_path, \"rb\"))",
        "print(self.database)",
        "else:",
        "convert  BGR to RBG",
        "face detection",
        "boxes = face_recognition.face_locations(img, model='cnn')",
        "compute the facial embedding for the face",
        "Saving database",
        "dump(self.database, open(self.db_path, \"wb\"))",
        "Saving database",
        "print(\"[INFO] recognizing faces...\")",
        "convert  BGR to RBG",
        "detecting faces",
        "get the encodings of detected faces",
        "print(end - start)",
        "Predict output",
        "loop over the recognized faces",
        "draw the predicted face name on the image"
    ],
    "docstrings": [
        "\"\"\"\n\t\tImplements face recognition for the happy house by finding who is the person on the image_path image.\n\n\t\tArguments:\n\t\timage_path -- path to an image\n\t\tdatabase -- database containing image encodings along with the name of the person on the image\n\t\tmodel -- your Inception model instance in Keras\n\n\t\tReturns:\n\t\tmin_dist -- the minimum distance between image_path encoding and the encodings from the database\n\t\tidentity -- string, the name prediction for the person on image_path\n\t\t\"\"\"",
        "\"\"\" Class for recognising faces, adding new faces and delete existing faces from the database.\n\t\"\"\"",
        "\"\"\" Adds a new face to the database.\n\t\t\"\"\"",
        "\"\"\" Deletes an entry from the database.\n\t\t\"\"\""
    ],
    "functions": [
        "who_is_it",
        "add_new_face",
        "delete_a_face",
        "get_faces"
    ],
    "classes": [
        "FaceRecognizer"
    ]
}