{
    "identifiers": [
        "Command",
        "commandExists",
        "execa",
        "Listr",
        "flags",
        "command",
        "Listr",
        "commandExists",
        "command",
        "commandExists",
        "command",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "command",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "command",
        "flags",
        "_ctx",
        "task",
        "flags",
        "ip",
        "task",
        "task",
        "flags",
        "flags",
        "execa",
        "code",
        "execa",
        "execa",
        "stdout",
        "stdout",
        "execa",
        "execa",
        "execa",
        "stdout",
        "regMatch",
        "regMatch"
    ],
    "literals": [
        "'@oclif/command'",
        "'command-exists'",
        "'execa'",
        "'listr'",
        "'Verify if kubectl is installed'",
        "'kubectl'",
        "'E_REQUISITE_NOT_FOUND'",
        "'Verify if microk8s is installed'",
        "'microk8s.status'",
        "'E_REQUISITE_NOT_FOUND'",
        "'E_REQUISITE_NOT_FOUND'",
        "'Verify if microk8s is running'",
        "'Start microk8s'",
        "'MicroK8s is already running.'",
        "'MicroK8s is not running.'",
        "'E_REQUISITE_NOT_RUNNING'",
        "'Verify if microk8s ingress and storage addons is enabled'",
        "'Enable microk8s ingress addon'",
        "'Ingress addon is already enabled.'",
        "'Enable microk8s storage addon'",
        "'Storage addon is already enabled.'",
        "'The storage addon hasn\\'t been enabled in microk8s'",
        "'E_REQUISITE_NOT_FOUND'",
        "'Retrieving microk8s IP and domain for ingress URLs'",
        "'.nip.io'",
        "${task.title}...${flags.domain}.",
        "'listr-renderer'",
        "'microk8s.status'",
        "'microk8s.start'",
        "'microk8s.status'",
        "'ingress: enabled'",
        "'storage: enabled'",
        "'microk8s.enable'",
        "'ingress'",
        "'microk8s.enable'",
        "'storage'",
        "string",
        "'microk8s.config'",
        "''"
    ],
    "variables": [
        "ip",
        "regMatch"
    ],
    "comments": [
        "tslint:disable:object-curly-spacing",
        "microk8s.start requires sudo permissions",
        "this.startMicroK8s()",
        "{ title: 'Verify microk8s memory configuration', skip: () => 'Not implemented yet', task: () => {}},",
        "{ title: 'Verify kubernetes version', skip: () => 'Not implemented yet', task: () => {}},",
        "Enabling storage requires sudo permissions",
        "this.enableStorageAddon()"
    ],
    "docstrings": [
        "*******************************************************************\n * Copyright (c) 2019 Red Hat, Inc.\n *\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *********************************************************************"
    ],
    "functions": [
        "startTasks",
        "isMicroK8sRunning",
        "startMicroK8s",
        "enabledAddons",
        "enableIngressAddon",
        "enableStorageAddon",
        "getMicroK8sIP"
    ],
    "classes": [
        "MicroK8sHelper"
    ]
}