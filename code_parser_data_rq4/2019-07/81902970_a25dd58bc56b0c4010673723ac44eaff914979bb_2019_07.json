{
    "identifiers": [
        "division",
        "print_function",
        "unicode_literals",
        "argparse",
        "logging",
        "os",
        "re",
        "sys",
        "Decimal",
        "tempfile",
        "NamedTemporaryFile",
        "time",
        "sleep",
        "ConfigParser",
        "RawConfigParser",
        "ImportError",
        "configparser",
        "RawConfigParser",
        "thread",
        "threading",
        "ImportError",
        "argcomplete",
        "colorama",
        "EMOJI_LOGLEVELS",
        "EMOJI_LOGLEVELS",
        "re",
        "compile",
        "ansi_regex",
        "flags",
        "re",
        "IGNORECASE",
        "colorama",
        "ansi",
        "AnsiFore",
        "colorama",
        "ansi",
        "AnsiBack",
        "colorama",
        "ansi",
        "AnsiStyle",
        "prefix",
        "obj",
        "ansi_styles",
        "color",
        "x",
        "x",
        "obj",
        "__dict__",
        "x",
        "startswith",
        "prefix",
        "color",
        "lower",
        "getattr",
        "obj",
        "color",
        "text",
        "color",
        "ansi_colors",
        "text",
        "replace",
        "color",
        "ansi_colors",
        "color",
        "text",
        "ansi_colors",
        "logging",
        "Formatter",
        "record",
        "ANSIFormatter",
        "format",
        "record",
        "format_ansi",
        "msg",
        "ANSIFormatter",
        "record",
        "EMOJI_LOGLEVELS",
        "record",
        "levelname",
        "format",
        "ansi_colors",
        "ANSIEmojiLoglevelFormatter",
        "format",
        "record",
        "ANSIFormatter",
        "record",
        "ANSIStrippingFormatter",
        "format",
        "record",
        "ansi_escape",
        "sub",
        "msg",
        "key",
        "_config",
        "__contains__",
        "key",
        "_config",
        "__iter__",
        "_config",
        "__len__",
        "_config",
        "__repr__",
        "_config",
        "keys",
        "_config",
        "items",
        "_config",
        "values",
        "args",
        "kwargs",
        "ConfigurationOption",
        "key",
        "key",
        "_config",
        "__dict__",
        "_config",
        "ConfigurationOption",
        "_config",
        "key",
        "key",
        "value",
        "__dict__",
        "value",
        "_config",
        "value",
        "key",
        "key",
        "__dict__",
        "key",
        "__dict__",
        "key",
        "_config",
        "key",
        "Configuration",
        "args",
        "kwargs",
        "ConfigurationOption",
        "args",
        "kwargs",
        "key",
        "key",
        "_config",
        "__dict__",
        "_config",
        "_config",
        "key",
        "args",
        "kwargs",
        "kwargs",
        "copy",
        "kwargs",
        "kwargs",
        "flag",
        "args",
        "flag",
        "flag",
        "add_argument",
        "args",
        "kwargs",
        "add_argument",
        "disabled_args",
        "disabled_kwargs",
        "args",
        "kwargs",
        "disabled_args",
        "disabled_kwargs",
        "cli",
        "submodule",
        "subparser",
        "cli",
        "submodule",
        "subparser",
        "attr",
        "dir",
        "subparser",
        "hasattr",
        "attr",
        "setattr",
        "attr",
        "getattr",
        "subparser",
        "attr",
        "completer",
        "subparser",
        "completer",
        "args",
        "kwargs",
        "kwargs",
        "get",
        "submodule",
        "cli",
        "get_argument_name",
        "args",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "handle_store_boolean",
        "args",
        "kwargs",
        "cli",
        "acquire_lock",
        "subparser",
        "add_argument",
        "args",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "cli",
        "subcommands_default",
        "submodule",
        "add_argument",
        "args",
        "kwargs",
        "cli",
        "release_lock",
        "threading",
        "RLock",
        "thread",
        "acquire_lock",
        "ansi_colors",
        "Configuration",
        "sys",
        "argv",
        "sys",
        "argv",
        "endswith",
        "sys",
        "argv",
        "os",
        "environ",
        "get",
        "release_lock",
        "initialize_argparse",
        "initialize_logging",
        "property",
        "_description",
        "description",
        "setter",
        "value",
        "_arg_parser",
        "_arg_defaults",
        "value",
        "text",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "RuntimeError",
        "sys",
        "stdout",
        "isatty",
        "args",
        "kwargs",
        "format_ansi",
        "text",
        "text",
        "args",
        "acquire_lock",
        "argcomplete",
        "warn",
        "argparse",
        "ArgumentParser",
        "kwargs",
        "argparse",
        "ArgumentParser",
        "kwargs",
        "_arg_parser",
        "set_defaults",
        "_arg_parser",
        "print_usage",
        "_arg_parser",
        "print_help",
        "release_lock",
        "completer",
        "_arg_parser",
        "completer",
        "args",
        "kwargs",
        "kwargs",
        "get",
        "args",
        "get_argument_name",
        "args",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "handle_store_boolean",
        "args",
        "kwargs",
        "acquire_lock",
        "_arg_parser",
        "add_argument",
        "args",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "kwargs",
        "_arg_defaults",
        "add_argument",
        "args",
        "kwargs",
        "release_lock",
        "acquire_lock",
        "sys",
        "stderr",
        "logging",
        "INFO",
        "logging",
        "DEBUG",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "__class__",
        "log",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "root",
        "setLevel",
        "logging",
        "DEBUG",
        "release_lock",
        "add_argument",
        "version",
        "version",
        "action",
        "help",
        "add_argument",
        "action",
        "help",
        "add_argument",
        "help",
        "add_argument",
        "help",
        "add_argument",
        "help",
        "add_argument",
        "help",
        "add_argument",
        "action",
        "help",
        "add_argument",
        "help",
        "add_argument",
        "action",
        "help",
        "title",
        "kwargs",
        "_inside_context_manager",
        "RuntimeError",
        "acquire_lock",
        "_arg_defaults",
        "add_subparsers",
        "title",
        "title",
        "dest",
        "kwargs",
        "_arg_parser",
        "add_subparsers",
        "title",
        "title",
        "dest",
        "kwargs",
        "release_lock",
        "_lock",
        "_lock",
        "acquire",
        "_lock",
        "_lock",
        "release",
        "config_file",
        "config_file",
        "args",
        "args",
        "general_config_file",
        "args",
        "general_config_file",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "expanduser",
        "prog_name",
        "args",
        "kwargs",
        "_arg_parser",
        "_get_optional_kwargs",
        "args",
        "kwargs",
        "ValueError",
        "_arg_parser",
        "_get_positional_kwargs",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "_inside_context_manager",
        "RuntimeError",
        "handler",
        "handler",
        "_entrypoint",
        "add_argument",
        "args",
        "kwargs",
        "handler",
        "subcommands",
        "subcommands",
        "handler",
        "add_argument",
        "args",
        "kwargs",
        "RuntimeError",
        "handler",
        "argument_function",
        "arg",
        "args_passed",
        "arg",
        "args",
        "log",
        "debug",
        "argcomplete",
        "autocomplete",
        "_arg_parser",
        "acquire_lock",
        "_arg_parser",
        "parse_args",
        "_arg_defaults",
        "parse_args",
        "args",
        "args",
        "entrypoint",
        "args",
        "general_config_file",
        "args",
        "general_config_file",
        "release_lock",
        "acquire_lock",
        "find_config_file",
        "config_file",
        "os",
        "path",
        "exists",
        "config_file",
        "RawConfigParser",
        "config",
        "config",
        "read",
        "config_file",
        "section",
        "config",
        "sections",
        "option",
        "config",
        "options",
        "section",
        "config",
        "get",
        "section",
        "option",
        "value",
        "lower",
        "value",
        "lower",
        "value",
        "replace",
        "isdigit",
        "value",
        "Decimal",
        "value",
        "value",
        "config",
        "section",
        "value",
        "argument",
        "vars",
        "args",
        "argument",
        "argument",
        "argument",
        "split",
        "hasattr",
        "args_passed",
        "argument",
        "config",
        "section",
        "getattr",
        "args",
        "argument",
        "option",
        "config",
        "section",
        "config",
        "section",
        "getattr",
        "args",
        "argument",
        "release_lock",
        "log",
        "debug",
        "config_file",
        "config_file",
        "log",
        "warning",
        "__class__",
        "acquire_lock",
        "RawConfigParser",
        "section_name",
        "section",
        "config",
        "_config",
        "items",
        "config",
        "add_section",
        "section_name",
        "option_name",
        "value",
        "section",
        "items",
        "section_name",
        "option_name",
        "config",
        "section_name",
        "option_name",
        "value",
        "NamedTemporaryFile",
        "mode",
        "dir",
        "os",
        "path",
        "dirname",
        "config_file",
        "tmpfile",
        "config",
        "write",
        "tmpfile",
        "os",
        "path",
        "getsize",
        "tmpfile",
        "name",
        "os",
        "rename",
        "tmpfile",
        "name",
        "config_file",
        "log",
        "warning",
        "config_file",
        "tmpfile",
        "name",
        "release_lock",
        "_inside_context_manager",
        "__call__",
        "_entrypoint",
        "RuntimeError",
        "_entrypoint",
        "description",
        "_inside_context_manager",
        "RuntimeError",
        "acquire_lock",
        "description",
        "release_lock",
        "handler",
        "acquire_lock",
        "handler",
        "release_lock",
        "handler",
        "entrypoint_func",
        "handler",
        "description",
        "name",
        "kwargs",
        "_inside_context_manager",
        "RuntimeError",
        "_subparsers",
        "add_subparsers",
        "name",
        "handler",
        "acquire_lock",
        "description",
        "subcommands_default",
        "_subparsers_default",
        "add_parser",
        "name",
        "kwargs",
        "subcommands",
        "SubparserWrapper",
        "name",
        "_subparsers",
        "add_parser",
        "name",
        "kwargs",
        "subcommands",
        "name",
        "set_defaults",
        "entrypoint",
        "handler",
        "name",
        "__dict__",
        "__dict__",
        "subcommands",
        "name",
        "log",
        "debug",
        "name",
        "release_lock",
        "handler",
        "description",
        "kwargs",
        "handler",
        "add_subcommand",
        "handler",
        "description",
        "kwargs",
        "subcommand_function",
        "len",
        "logging",
        "root",
        "handlers",
        "RuntimeError",
        "acquire_lock",
        "config",
        "logging",
        "DEBUG",
        "config",
        "log_file",
        "config",
        "ANSIStrippingFormatter",
        "config",
        "config",
        "config",
        "config",
        "general",
        "color",
        "ANSIEmojiLoglevelFormatter",
        "args",
        "general_log_fmt",
        "config",
        "general",
        "datetime_fmt",
        "ANSIStrippingFormatter",
        "args",
        "general_log_fmt",
        "config",
        "general",
        "datetime_fmt",
        "log_file",
        "logging",
        "FileHandler",
        "log_file",
        "log_file_mode",
        "log_file_handler",
        "setLevel",
        "log_file_level",
        "log_file_handler",
        "setFormatter",
        "log_file_format",
        "logging",
        "root",
        "addHandler",
        "log_file_handler",
        "log_print",
        "logging",
        "StreamHandler",
        "log_print_to",
        "log_print_handler",
        "setLevel",
        "log_print_level",
        "log_print_handler",
        "setFormatter",
        "log_format",
        "logging",
        "root",
        "addHandler",
        "log_print_handler",
        "release_lock",
        "_inside_context_manager",
        "log",
        "debug",
        "acquire_lock",
        "release_lock",
        "colorama",
        "init",
        "parse_args",
        "read_config",
        "setup_logging",
        "config",
        "general",
        "save_config",
        "save_config",
        "exc_type",
        "exc_val",
        "exc_tb",
        "acquire_lock",
        "release_lock",
        "exc_type",
        "isinstance",
        "SystemExit",
        "exc_type",
        "exc_type",
        "logging",
        "exception",
        "exc_val",
        "exit",
        "MILC",
        "cli",
        "argument",
        "help",
        "action",
        "cli",
        "entrypoint",
        "cli",
        "cli",
        "config",
        "general",
        "comma",
        "cli",
        "log",
        "info",
        "comma",
        "cli",
        "argument",
        "help",
        "cli",
        "subcommand",
        "cli",
        "cli",
        "config",
        "general",
        "comma",
        "cli",
        "log",
        "info",
        "comma",
        "cli",
        "config",
        "hello",
        "name",
        "cli",
        "cli",
        "config",
        "general",
        "comma",
        "cli",
        "log",
        "info",
        "comma",
        "cli",
        "config",
        "goodbye",
        "name",
        "cli",
        "argument",
        "help",
        "cli",
        "subcommand",
        "cli",
        "cli",
        "config",
        "general",
        "comma",
        "cli",
        "spinner",
        "text",
        "spinner",
        "spinner",
        "start",
        "sleep",
        "spinner",
        "stop",
        "cli",
        "spinner",
        "text",
        "spinner",
        "sleep",
        "cli",
        "log",
        "info",
        "comma",
        "cli",
        "config",
        "thinking",
        "name",
        "cli",
        "subcommand",
        "cli",
        "cli",
        "echo",
        "cli",
        "echo",
        "cli",
        "echo",
        "cli",
        "echo",
        "cli",
        "echo",
        "cli",
        "echo",
        "cli",
        "add_subcommand",
        "goodbye",
        "cli",
        "goodbye",
        "add_argument",
        "help",
        "cli",
        "sorted",
        "ansi_colors",
        "keys"
    ],
    "literals": [
        "'CRITICAL'",
        "'{bg_red}{fg_white}¬_¬{style_reset_all}'",
        "'ERROR'",
        "'{fg_red}☒{style_reset_all}'",
        "'WARNING'",
        "'{fg_yellow}⚠{style_reset_all}'",
        "'INFO'",
        "'{fg_blue}ℹ{style_reset_all}'",
        "'DEBUG'",
        "'{fg_cyan}☐{style_reset_all}'",
        "'NOTSET'",
        "'{style_reset_all}¯\\\\_(o_o)_/¯'",
        "'FATAL'",
        "'CRITICAL'",
        "'WARN'",
        "'WARNING'",
        "r'\\x1b('",
        "r'(\\[\\??\\d+[hl])|'",
        "r'([=<>a-kzNM78])|'",
        "r'([\\(\\)][a-b0-2])|'",
        "r'(\\[\\d{0,2}[ma-dgkjqi])|'",
        "r'(\\[\\d+;\\d+[hfy]?)|'",
        "r'(\\[;?[hf])|'",
        "r'(#[3-68])|'",
        "r'([01356]n)|'",
        "r'(O[mlnp-z]?)|'",
        "r'(/Z)|'",
        "r'(\\d+)|'",
        "r'(\\[\\?\\d;\\d0c)|'",
        "r'(\\d;\\dR))'",
        "'fg'",
        "'bg'",
        "'style'",
        "'_'",
        "'_'",
        "'{%s}'",
        "'style_reset_all'",
        "''",
        "'_'",
        "'add_dest'",
        "'action'",
        "'store_false'",
        "'help'",
        "'Disable '",
        "'help'",
        "'action'",
        "'store_true'",
        "'help'",
        "'Enable '",
        "'help'",
        "'--'",
        "'--no-'",
        "'add_dest'",
        "'dest'",
        "'_'",
        "'add_dest'",
        "'add_dest'",
        "'action'",
        "'action'",
        "'store_boolean'",
        "'default'",
        "'default'",
        "'action'",
        "'action'",
        "'store_false'",
        "'action'",
        "'store_true'",
        "'.py'",
        "'QMK_VERSION'",
        "'unknown'",
        "'You can only specify *args or **kwargs, not both!'",
        "'fromfile_prefix_chars'",
        "'@'",
        "'conflict_handler'",
        "'resolve'",
        "'add_dest'",
        "'-'",
        "'dest'",
        "'general_'",
        "'add_dest'",
        "'add_dest'",
        "'action'",
        "'action'",
        "'store_boolean'",
        "'default'",
        "'default'",
        "'action'",
        "'action'",
        "'store_false'",
        "'action'",
        "'store_true'",
        "'a'",
        "'-V'",
        "'--version'",
        "'version'",
        "'Display the version and exit'",
        "'-v'",
        "'--verbose'",
        "'store_true'",
        "'Make the logging more verbose'",
        "'--datetime-fmt'",
        "'%Y-%m-%d %H:%M:%S'",
        "'Format string for datetimes'",
        "'--log-fmt'",
        "'%(levelname)s %(message)s'",
        "'Format string for printed log output'",
        "'--log-file-fmt'",
        "'[%(levelname)s] [%(asctime)s] [file:%(pathname)s] [line:%(lineno)d] %(message)s'",
        "'Format string for log file.'",
        "'--log-file'",
        "'File to write log messages to'",
        "'--color'",
        "'store_boolean'",
        "'color in output'",
        "'-c'",
        "'--config-file'",
        "'The config file to read and/or write'",
        "'--save-config'",
        "'store_true'",
        "'Save the running configuration to the config file'",
        "'Sub-commands'",
        "'You must run this before the with statement!'",
        "'subparsers'",
        "'subparsers'",
        "'~/.%s.ini'",
        "'dest'",
        "'dest'",
        "'You must run this before the with statement!'",
        "'Decorated function is not entrypoint or subcommand!'",
        "'Warning: Arguments have already been parsed, ignoring duplicate attempt!'",
        "'entrypoint'",
        "'1'",
        "'yes'",
        "'true'",
        "'on'",
        "'0'",
        "'no'",
        "'false'",
        "'none'",
        "'off'",
        "'.'",
        "''",
        "'.'",
        "'subparsers'",
        "'entrypoint'",
        "'_'",
        "'_'",
        "\"Saving config file to '%s'\"",
        "'%s.config_file file not set, not saving config!'",
        "'general'",
        "'save_config'",
        "'w'",
        "'Config file saving failed, not replacing %s with %s.'",
        "'No entrypoint provided!'",
        "'You must run this before cli()!'",
        "'You must run this before the with statement!'",
        "'help'",
        "\"Could not add subcommand '%s' to attributes, key already exists!\"",
        "'MILC should be the only system installing root log handlers!'",
        "'general'",
        "'verbose'",
        "'general'",
        "'log_file'",
        "'general'",
        "'log_file_fmt'",
        "'general'",
        "'log_file_fmt'",
        "'general'",
        "'datetime_fmt'",
        "'general'",
        "'log_fmt'",
        "'Warning: context manager was entered again. This usually means that self.__call__() was called before the with statement. You probably do not want to do that.'",
        "'__main__'",
        "'-c'",
        "'--comma'",
        "'comma in output'",
        "'store_boolean'",
        "'My useful CLI tool with subcommands.'",
        "','",
        "''",
        "'{bg_green}{fg_red}Hello%s World!'",
        "'-n'",
        "'--name'",
        "'Name to greet'",
        "'World'",
        "'Description of hello subcommand here.'",
        "','",
        "''",
        "'{fg_blue}Hello%s %s!'",
        "','",
        "''",
        "'{bg_red}Goodbye%s %s!'",
        "'-n'",
        "'--name'",
        "'Name to greet'",
        "'World'",
        "'Think a bit before greeting the user.'",
        "','",
        "''",
        "'Just a moment...'",
        "'earth'",
        "'Almost there!'",
        "'moon'",
        "'{fg_cyan}Hello%s %s!'",
        "'Show off our ANSI colors.'",
        "'{bg_red}                    '",
        "'{bg_lightred_ex}                    '",
        "'{bg_lightyellow_ex}                    '",
        "'{bg_green}                    '",
        "'{bg_blue}                    '",
        "'{bg_magenta}                    '",
        "'This will show up in --help output.'",
        "'-n'",
        "'--name'",
        "'Name to bid farewell to'",
        "'World'"
    ],
    "variables": [
        "thread",
        "EMOJI_LOGLEVELS",
        "EMOJI_LOGLEVELS",
        "EMOJI_LOGLEVELS",
        "ansi_regex",
        "ansi_escape",
        "ansi_styles",
        "ansi_colors",
        "ansi_colors",
        "text",
        "msg",
        "record",
        "levelname",
        "msg",
        "_config",
        "default_container",
        "key",
        "key",
        "key",
        "key",
        "default_container",
        "key",
        "key",
        "kwargs",
        "disabled_args",
        "disabled_kwargs",
        "disabled_kwargs",
        "disabled_kwargs",
        "kwargs",
        "kwargs",
        "disabled_args",
        "cli",
        "submodule",
        "subparser",
        "completer",
        "kwargs",
        "_lock",
        "_description",
        "_entrypoint",
        "_inside_context_manager",
        "ansi",
        "config",
        "config_file",
        "prog_name",
        "version",
        "_description",
        "description",
        "description",
        "args",
        "text",
        "kwargs",
        "subcommands",
        "subcommands_default",
        "_subparsers",
        "_subparsers_default",
        "argwarn",
        "args",
        "_arg_defaults",
        "_arg_parser",
        "set_defaults",
        "print_usage",
        "print_help",
        "completer",
        "kwargs",
        "log_file",
        "log_file_mode",
        "log_file_handler",
        "log_print",
        "log_print_to",
        "log_print_level",
        "log_file_level",
        "log_level",
        "log",
        "_subparsers_default",
        "_subparsers",
        "args",
        "args_passed",
        "_entrypoint",
        "config_file",
        "config_file",
        "config",
        "value",
        "value",
        "value",
        "value",
        "value",
        "option",
        "section",
        "option",
        "option",
        "option",
        "config",
        "description",
        "_entrypoint",
        "name",
        "kwargs",
        "name",
        "name",
        "name",
        "log_print_level",
        "log_file",
        "log_file_format",
        "log_file_format",
        "log_format",
        "log_format",
        "log_format",
        "log_file_handler",
        "log_print_handler",
        "_inside_context_manager",
        "_inside_context_manager",
        "cli",
        "comma",
        "comma",
        "comma",
        "comma",
        "spinner"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "coding=utf-8",
        "Log Level Representations",
        "ANSI Color setup",
        "Regex was gratefully borrowed from kfir on stackoverflow:",
        "https://stackoverflow.com/a/45448194",
        "Avoid .format() so we don't have to worry about the log content",
        "Setup a lock for thread safety",
        "Define some basic info",
        "Initialize all the things",
        "Populate the shadow parser",
        "Iterate over the config file options and write them into self.config",
        "Coerce values into useful datatypes",
        "Fold the CLI args into self.config",
        "Move the new config file into place atomically",
        "If they didn't use the context manager use it ourselves",
        "This is not a design decision. This is what I'm doing for now until I can examine and think about this situation in more detail.",
        "You can register subcommands using decorators as seen above, or using functions like like this:",
        "Automatically picks between main(), hello() and goodbye()"
    ],
    "docstrings": [
        "\"\"\"MILC - A CLI Framework\n\nPYTHON_ARGCOMPLETE_OK\n\nMILC is an opinionated framework for writing CLI apps. It optimizes for the\nmost common unix tool pattern- small tools that are run from the command\nline but generally do not feature any user interaction while they run.\n\nFor more details see the MILC documentation:\n\n    <https://github.com/clueboard/milc/tree/master/docs>\n\"\"\"",
        "\"\"\"Return a copy of text with certain strings replaced with ansi.\n    \"\"\"",
        "\"\"\"A log formatter that inserts ANSI color.\n    \"\"\"",
        "\"\"\"A log formatter that makes the loglevel an emoji.\n    \"\"\"",
        "\"\"\"A log formatter that strips ANSI.\n    \"\"\"",
        "\"\"\"Represents the running configuration.\n\n    This class never raises IndexError, instead it will return None if a\n    section or option does not yet exist.\n    \"\"\"",
        "\"\"\"Returns a config section, creating it if it doesn't exist yet.\n        \"\"\"",
        "\"\"\"Returns a config section, creating it if it doesn't exist yet.\n        \"\"\"",
        "\"\"\"Does the add_argument for action='store_boolean'.\n    \"\"\"",
        "\"\"\"Wrap subparsers so we can populate the normal and the shadow parser.\n    \"\"\"",
        "\"\"\"Add an arpcomplete completer to this subcommand.\n        \"\"\"",
        "\"\"\"MILC - An Opinionated Batteries Included Framework\n    \"\"\"",
        "\"\"\"Initialize the MILC object.\n        \"\"\"",
        "\"\"\"Print colorized text to stdout, as long as stdout is a tty.\n\n        ANSI color strings (such as {fg-blue}) will be converted into ANSI\n        escape sequences, and the ANSI reset sequence will be added to all\n        strings.\n\n        If *args or **kwargs are passed they will be used to %-format the strings.\n        \"\"\"",
        "\"\"\"Prepare to process arguments from sys.argv.\n        \"\"\"",
        "\"\"\"Add an arpcomplete completer to this subcommand.\n        \"\"\"",
        "\"\"\"Wrapper to add arguments to both the main and the shadow argparser.\n        \"\"\"",
        "\"\"\"Prepare the defaults for the logging infrastructure.\n        \"\"\"",
        "\"\"\"Acquire the MILC lock for exclusive access to properties.\n        \"\"\"",
        "\"\"\"Release the MILC lock.\n        \"\"\"",
        "\"\"\"Locate the config file.\n        \"\"\"",
        "\"\"\"Takes argparse arguments and returns the dest name.\n        \"\"\"",
        "\"\"\"Decorator to call self.add_argument or self.<subcommand>.add_argument.\n        \"\"\"",
        "\"\"\"Returns True if arg was passed on the command line.\n        \"\"\"",
        "\"\"\"Parse the CLI args.\n        \"\"\"",
        "\"\"\"Parse the configuration file and determine the runtime configuration.\n        \"\"\"",
        "\"\"\"Save the current configuration to the config file.\n        \"\"\"",
        "\"\"\"Execute the entrypoint function.\n        \"\"\"",
        "\"\"\"Set the entrypoint for when no subcommand is provided.\n        \"\"\"",
        "\"\"\"Register a subcommand.\n\n        If name is not provided we use `handler.__name__`.\n        \"\"\"",
        "\"\"\"Decorator to register a subcommand.\n        \"\"\"",
        "\"\"\"Called by __enter__() to setup the logging configuration.\n        \"\"\""
    ],
    "functions": [
        "format_ansi",
        "format",
        "format",
        "format",
        "__contains__",
        "__iter__",
        "__len__",
        "__repr__",
        "keys",
        "items",
        "values",
        "__getitem__",
        "__setitem__",
        "__delitem__",
        "__getitem__",
        "handle_store_boolean",
        "completer",
        "add_argument",
        "description",
        "description",
        "echo",
        "initialize_argparse",
        "completer",
        "add_argument",
        "initialize_logging",
        "add_subparsers",
        "acquire_lock",
        "release_lock",
        "find_config_file",
        "get_argument_name",
        "argument",
        "argument_function",
        "arg_passed",
        "parse_args",
        "read_config",
        "save_config",
        "__call__",
        "entrypoint",
        "entrypoint_func",
        "add_subcommand",
        "subcommand",
        "subcommand_function",
        "setup_logging",
        "__enter__",
        "__exit__",
        "main",
        "hello",
        "goodbye",
        "thinking",
        "pride"
    ],
    "classes": [
        "ANSIFormatter",
        "ANSIEmojiLoglevelFormatter",
        "ANSIStrippingFormatter",
        "Configuration",
        "ConfigurationOption",
        "SubparserWrapper",
        "MILC"
    ]
}