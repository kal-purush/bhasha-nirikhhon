{
    "identifiers": [
        "tensorflow",
        "tf",
        "nets",
        "caffe_scope",
        "nets",
        "nets_factory",
        "tf",
        "contrib",
        "slim",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "DEFINE_string",
        "tf",
        "app",
        "flags",
        "FLAGS",
        "_",
        "caffe_scope",
        "CaffeScope",
        "caffemodel",
        "load",
        "FLAGS",
        "caffemodel_path",
        "tf",
        "logging",
        "set_verbosity",
        "tf",
        "logging",
        "INFO",
        "tf",
        "Graph",
        "as_default",
        "slim",
        "create_global_step",
        "FLAGS",
        "num_classes",
        "nets_factory",
        "get_network",
        "FLAGS",
        "model_name",
        "ssd_class",
        "default_params",
        "_replace",
        "num_classes",
        "num_classes",
        "ssd_class",
        "ssd_params",
        "ssd_net",
        "img_shape",
        "ssd_shape",
        "ssd_shape",
        "tf",
        "placeholder",
        "shape",
        "shape",
        "dtype",
        "tf",
        "float32",
        "slim",
        "arg_scope",
        "ssd_net",
        "arg_scope_caffe",
        "caffemodel",
        "ssd_net",
        "net",
        "img_input",
        "is_training",
        "tf",
        "global_variables_initializer",
        "tf",
        "Session",
        "session",
        "session",
        "run",
        "init_op",
        "tf",
        "train",
        "Saver",
        "FLAGS",
        "caffemodel_path",
        "replace",
        "saver",
        "save",
        "session",
        "ckpt_path",
        "write_meta_graph",
        "tf",
        "app",
        "run"
    ],
    "literals": [
        "'model_name'",
        "'ssd_300_vgg'",
        "'Name of the model to convert.'",
        "'num_classes'",
        "'Number of classes in the dataset.'",
        "'caffemodel_path'",
        "'The path to the Caffe model file to convert.'",
        "'.caffemodel'",
        "'.ckpt'",
        "'__main__'"
    ],
    "variables": [
        "slim",
        "FLAGS",
        "caffemodel",
        "global_step",
        "num_classes",
        "ssd_class",
        "ssd_params",
        "ssd_net",
        "ssd_shape",
        "shape",
        "img_input",
        "init_op",
        "saver",
        "ckpt_path"
    ],
    "comments": [
        "=========================================================================== #",
        "Main flags.",
        "=========================================================================== #",
        "=========================================================================== #",
        "Main converting routine.",
        "=========================================================================== #",
        "Caffe scope...",
        "Select the network.",
        "Image placeholder and model.",
        "Create model.",
        "Run the init operation.",
        "Save model in checkpoint."
    ],
    "docstrings": [
        "\"\"\"Convert a Caffe model file to TensorFlow checkpoint format.\n\nAssume that the network built is a equivalent (or a sub-) to the Caffe\ndefinition.\n\"\"\""
    ],
    "functions": [
        "main"
    ],
    "classes": []
}