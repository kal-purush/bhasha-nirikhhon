{
    "identifiers": [
        "jetson",
        "inference",
        "jetson",
        "utils",
        "argparse",
        "sys",
        "argparse",
        "ArgumentParser",
        "description",
        "formatter_class",
        "argparse",
        "RawTextHelpFormatter",
        "epilog",
        "jetson",
        "inference",
        "imageNet",
        "Usage",
        "jetson",
        "utils",
        "videoSource",
        "Usage",
        "jetson",
        "utils",
        "videoOutput",
        "Usage",
        "jetson",
        "utils",
        "logUsage",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "sys",
        "argv",
        "find",
        "parser",
        "parse_known_args",
        "parser",
        "print_help",
        "sys",
        "exit",
        "sys",
        "argv",
        "opt",
        "network",
        "jetson",
        "inference",
        "imageNet",
        "opt",
        "network",
        "sys",
        "argv",
        "jetson",
        "utils",
        "videoSource",
        "opt",
        "input_URI",
        "argv",
        "sys",
        "argv",
        "jetson",
        "utils",
        "videoOutput",
        "opt",
        "output_URI",
        "argv",
        "sys",
        "argv",
        "is_headless",
        "jetson",
        "utils",
        "cudaFont",
        "input",
        "Capture",
        "net",
        "Classify",
        "img",
        "net",
        "GetClassDesc",
        "class_id",
        "font",
        "OverlayText",
        "img",
        "img",
        "width",
        "img",
        "height",
        "format",
        "confidence",
        "class_desc",
        "font",
        "White",
        "font",
        "Gray40",
        "output",
        "Render",
        "img",
        "output",
        "SetStatus",
        "format",
        "net",
        "GetNetworkName",
        "net",
        "GetNetworkFPS",
        "net",
        "PrintProfilerTimes",
        "input",
        "IsStreaming",
        "output",
        "IsStreaming"
    ],
    "literals": [
        "\"Classify a live camera stream using an image recognition DNN.\"",
        "\"input_URI\"",
        "\"\"",
        "'?'",
        "\"URI of the input stream\"",
        "\"output_URI\"",
        "\"\"",
        "'?'",
        "\"URI of the output stream\"",
        "\"--network\"",
        "\"googlenet\"",
        "\"pre-trained model to load (see below for options)\"",
        "\"--camera\"",
        "\"0\"",
        "\"index of the MIPI CSI camera to use (e.g. CSI camera 0)\\nor for VL42 cameras, the /dev/video device to use.\\nby default, MIPI CSI camera 0 will be used.\"",
        "\"--width\"",
        "\"desired width of camera stream (default is 1280 pixels)\"",
        "\"--height\"",
        "\"desired height of camera stream (default is 720 pixels)\"",
        "'--headless'",
        "'store_true'",
        "\"run without display\"",
        "\"--headless\"",
        "'console.py'",
        "\"\"",
        "\"\"",
        "\"loading from t his folder ................................................\"",
        "\"{:05.2f}% {:s}\"",
        "\"{:s} | Network {:.0f} FPS\""
    ],
    "variables": [
        "parser",
        "is_headless",
        "opt",
        "net",
        "input",
        "output",
        "font",
        "img",
        "class_id",
        "confidence",
        "class_desc"
    ],
    "comments": [
        "!/usr/bin/python3",
        "",
        "Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the \"Software\"),",
        "to deal in the Software without restriction, including without limitation",
        "the rights to use, copy, modify, merge, publish, distribute, sublicense,",
        "and/or sell copies of the Software, and to permit persons to whom the",
        "Software is furnished to do so, subject to the following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included in",
        "all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
        "IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
        "FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL",
        "THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
        "LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",
        "FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER",
        "DEALINGS IN THE SOFTWARE.",
        "",
        "parse the command line",
        "load the recognition network",
        "create video sources & outputs",
        "process frames until the user exits",
        "capture the next image",
        "classify the image",
        "find the object description",
        "overlay the result on the image",
        "render the image",
        "update the title bar",
        "print out performance info",
        "exit on input/output EOS"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}