{
    "identifiers": [
        "Collections",
        "Generic",
        "Collections",
        "ObjectModel",
        "Device",
        "Analog",
        "Device",
        "Gpio",
        "Linq",
        "Text",
        "Threading",
        "UnitsNet",
        "Iot",
        "Device",
        "Arduino",
        "AnalogController",
        "IReadOnlyList",
        "SupportedPinConfiguration",
        "ArduinoBoard",
        "board",
        "IReadOnlyList",
        "SupportedPinConfiguration",
        "supportedPinConfigurations",
        "PinNumberingScheme",
        "scheme",
        "scheme",
        "_board",
        "board",
        "ArgumentNullException",
        "nameof",
        "board",
        "_supportedPinConfigurations",
        "supportedPinConfigurations",
        "ArgumentNullException",
        "nameof",
        "supportedPinConfigurations",
        "PinCount",
        "_supportedPinConfigurations",
        "Count",
        "VoltageReference",
        "ElectricPotential",
        "FromVolts",
        "pinNumber",
        "i",
        "_supportedPinConfigurations",
        "Count",
        "i",
        "_supportedPinConfigurations",
        "i",
        "PinModes",
        "Contains",
        "SupportedMode",
        "AnalogInput",
        "numberAnalogPinsFound",
        "pinNumber",
        "i",
        "numberAnalogPinsFound",
        "InvalidOperationException",
        "pinNumber",
        "logicalPinNumber",
        "i",
        "_supportedPinConfigurations",
        "Count",
        "i",
        "_supportedPinConfigurations",
        "i",
        "PinModes",
        "Contains",
        "SupportedMode",
        "AnalogInput",
        "numberAnalogPinsFound",
        "logicalPinNumber",
        "numberAnalogPinsFound",
        "i",
        "InvalidOperationException",
        "logicalPinNumber",
        "pinNumber",
        "_supportedPinConfigurations",
        "pinNumber",
        "PinModes",
        "Contains",
        "SupportedMode",
        "AnalogInput",
        "pinNumber",
        "ConvertLogicalNumberingSchemeToPinNumber",
        "pinNumber",
        "_board",
        "Firmata",
        "SetPinMode",
        "fullNumber",
        "SupportedMode",
        "AnalogInput",
        "_board",
        "Firmata",
        "EnableAnalogReporting",
        "pinNumber",
        "ArduinoAnalogInputPin",
        "_board",
        "_supportedPinConfigurations",
        "fullNumber",
        "pinNumber",
        "VoltageReference",
        "AnalogInputPin",
        "pin",
        "_board",
        "Firmata",
        "DisableAnalogReporting",
        "pin",
        "PinNumber"
    ],
    "literals": [],
    "variables": [
        "ArduinoBoard",
        "_board",
        "_supportedPinConfigurations",
        "PinCount",
        "numberAnalogPinsFound",
        "i",
        "numberAnalogPinsFound",
        "i",
        "fullNumber"
    ],
    "comments": [
        "Licensed to the .NET Foundation under one or more agreements.",
        "The .NET Foundation licenses this file to you under the MIT license.",
        "Note: While the Arduino does have an external analog input reference pin, Firmata doesn't allow configuring it.",
        "This method is called with the logical pin numbering (input pin A0 is 0, A1 is 1, etc)",
        "but the SetPinMode method operates on the global numbers"
    ],
    "docstrings": [],
    "functions": [
        "ArduinoAnalogController",
        "ConvertPinNumberToLogicalNumberingScheme",
        "ConvertLogicalNumberingSchemeToPinNumber",
        "SupportsAnalogInput",
        "AnalogInputPin",
        "OpenPinCore",
        "ClosePin"
    ],
    "classes": [
        "ArduinoAnalogController"
    ]
}