{
    "identifiers": [
        "io",
        "openliberty",
        "tools",
        "maven",
        "server",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "xml",
        "parsers",
        "ParserConfigurationException",
        "javax",
        "xml",
        "transform",
        "TransformerException",
        "org",
        "apache",
        "maven",
        "plugins",
        "annotations",
        "Mojo",
        "org",
        "apache",
        "maven",
        "project",
        "MavenProject",
        "org",
        "apache",
        "maven",
        "model",
        "Dependency",
        "io",
        "openliberty",
        "tools",
        "common",
        "plugins",
        "config",
        "ServerConfigDropinXmlDocument",
        "io",
        "openliberty",
        "tools",
        "common",
        "plugins",
        "util",
        "InstallFeatureUtil",
        "io",
        "openliberty",
        "tools",
        "common",
        "plugins",
        "util",
        "PluginExecutionException",
        "io",
        "openliberty",
        "tools",
        "common",
        "plugins",
        "util",
        "PluginScenarioException",
        "io",
        "openliberty",
        "tools",
        "common",
        "plugins",
        "util",
        "InstallFeatureUtil",
        "ProductProperties",
        "io",
        "openliberty",
        "tools",
        "maven",
        "BasicSupport",
        "io",
        "openliberty",
        "tools",
        "maven",
        "InstallFeatureSupport",
        "Mojo",
        "name",
        "PLUGIN_ADDED_FEATURES_FILE",
        "HEADER",
        "Override",
        "initialize",
        "generateFeatures",
        "log",
        "warn",
        "propertiesList",
        "InstallFeatureUtil",
        "loadProperties",
        "installDirectory",
        "openLibertyVersion",
        "InstallFeatureUtil",
        "getOpenLibertyVersion",
        "propertiesList",
        "log",
        "warn",
        "openLibertyVersion",
        "util",
        "util",
        "propertiesList",
        "openLibertyVersion",
        "e",
        "log",
        "debug",
        "e",
        "log",
        "error",
        "visibleServerFeatures",
        "util",
        "getAllServerFeatures",
        "openLibertyVersion",
        "log",
        "warn",
        "visibleServerFeatures",
        "size",
        "libertyFeatureDependencies",
        "getFeaturesFromDependencies",
        "project",
        "log",
        "warn",
        "libertyFeatureDependencies",
        "visibleLibertyProjectDependencies",
        "libertyFeatureDependencies",
        "visibleLibertyProjectDependencies",
        "retainAll",
        "visibleServerFeatures",
        "log",
        "warn",
        "visibleLibertyProjectDependencies",
        "newServerXml",
        "serverDirectory",
        "PLUGIN_ADDED_FEATURES_FILE",
        "log",
        "warn",
        "newServerXml",
        "newServerXml",
        "libertyDirPropertyFiles",
        "libertyDirPropertyFiles",
        "BasicSupport",
        "getLibertyDirectoryPropertyFiles",
        "installDirectory",
        "userDirectory",
        "serverDirectory",
        "e",
        "log",
        "debug",
        "e",
        "log",
        "error",
        "existingFeatures",
        "util",
        "getServerFeatures",
        "serverDirectory",
        "libertyDirPropertyFiles",
        "log",
        "warn",
        "existingFeatures",
        "missingLibertyFeatures",
        "getMissingLibertyFeatures",
        "visibleLibertyProjectDependencies",
        "existingFeatures",
        "log",
        "warn",
        "missingLibertyFeatures",
        "configDocument",
        "ServerConfigDropinXmlDocument",
        "newInstance",
        "configDocument",
        "createComment",
        "HEADER",
        "missing",
        "missingLibertyFeatures",
        "log",
        "warn",
        "missing",
        "configDocument",
        "createFeature",
        "missing",
        "configDocument",
        "writeXMLDocument",
        "newServerXml",
        "log",
        "warn",
        "newServerXml",
        "e",
        "log",
        "debug",
        "e",
        "log",
        "error",
        "project",
        "libertyFeatureDependencies",
        "allProjectDependencies",
        "project",
        "getDependencies",
        "d",
        "allProjectDependencies",
        "featureName",
        "getFeatureName",
        "d",
        "featureName",
        "libertyFeatureDependencies",
        "add",
        "featureName",
        "libertyFeatureDependencies",
        "visibleLibertyProjectDependencies",
        "existingFeatures",
        "missingLibertyFeatures",
        "visibleLibertyProjectDependencies",
        "existingFeatures",
        "s",
        "visibleLibertyProjectDependencies",
        "existingFeatures",
        "contains",
        "s",
        "toLowerCase",
        "missingLibertyFeatures",
        "remove",
        "s",
        "missingLibertyFeatures",
        "mavenDependency",
        "mavenDependency",
        "getGroupId",
        "equals",
        "mavenDependency",
        "getArtifactId"
    ],
    "literals": [
        "\"generate-features\"",
        "\"configDropins/overrides/liberty-plugin-added-features.xml\"",
        "\"# Generated by liberty-maven-plugin\"",
        "\"warn\"",
        "\"version:\"",
        "\"Exception creating the server utility object\"",
        "\"Error attempting to generate server feature list.\"",
        "\"feature count=\"",
        "\"maven dependencies that are liberty features:\"",
        "\"maven dependencies that are VALID liberty features:\"",
        "\"New server xml file:\"",
        "\". Now to delete this file if it exists.\"",
        "\"Exception reading the server property files\"",
        "\"Error attempting to generate server feature list. Ensure you can read the property files in the server installation directory.\"",
        "\"Features in server.xml:\"",
        "\"maven dependencies that are VALID liberty features but are missing from server.xml:\"",
        "\"adding missing feature:\"",
        "\"Created file \"",
        "\"Exception creating the server features file\"",
        "\"Error attempting to create the server feature file. Ensure you can write to the server installation directory.\"",
        "\"io.openliberty.features\""
    ],
    "variables": [
        "util",
        "libertyDirPropertyFiles"
    ],
    "comments": [
        "Remove project dependency features which are hidden.",
        "about to regenerate this file. Must be removed before getLibertyDirectoryPropertyFiles",
        "TODO restore the xml file just deleted above",
        "Create specialized server.xml",
        "existingFeatures are all lower case"
    ],
    "docstrings": [
        "* (C) Copyright IBM Corporation 2021.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.",
        "* This mojo generates the features required in the featureManager element in server.xml.\n * It examines the dependencies declared in the pom.xml and the features already declared\n * in the featureManager elements in the XML configuration files. Then it generates any\n * missing feature names and stores them in a new featureManager element in a new XML file.",
        "* (non-Javadoc)\n     * @see org.codehaus.mojo.pluginsupport.MojoSupport#doExecute()",
        "* Comb through the list of Maven project dependencies and find the ones which are \n     * Liberty features.\n     * @param project  Current Maven project\n     * @return List of names of dependencies",
        "* From all the candidate project dependencies remove the ones already in server.xml\n     * to make the list of the ones that are missing from server.xml.\n     * @param visibleLibertyProjectDependencies\n     * @param existingFeatures\n     * @return",
        "* Determine if a dependency is a Liberty feature or not\n\t * @param mavenDependency  a Maven project dependency \n\t * @return the Liberty feature name if the input is a Liberty feature otherwise return null."
    ],
    "functions": [
        "doExecute",
        "generateFeatures",
        "getFeaturesFromDependencies",
        "getMissingLibertyFeatures",
        "getFeatureName"
    ],
    "classes": [
        "GenerateFeaturesMojo"
    ]
}