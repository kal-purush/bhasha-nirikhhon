{
    "identifiers": [
        "Jamiras",
        "Components",
        "Collections",
        "Generic",
        "Diagnostics",
        "Linq",
        "RATools",
        "Parser",
        "Internal",
        "Groups",
        "ExpressionGroup",
        "_evaluationErrors",
        "ParseErrorExpression",
        "ExpressionGroup",
        "ParseErrorExpression",
        "Tokenizer",
        "tokenizer",
        "Groups",
        "Clear",
        "ExpressionTokenizer",
        "tokenizer",
        "ParseGroups",
        "expressionTokenizer",
        "Groups",
        "group",
        "Groups",
        "group",
        "UpdateMetadata",
        "group",
        "MarkForEvaluation",
        "ExpressionTokenizer",
        "tokenizer",
        "ExpressionGroup",
        "groups",
        "tokenizer",
        "NextChar",
        "ExpressionGroup",
        "groups",
        "Add",
        "newGroup",
        "tokenizer",
        "ChangeExpressionGroup",
        "newGroup",
        "ExpressionBase",
        "SkipWhitespace",
        "tokenizer",
        "newGroup",
        "IsEmpty",
        "newGroup",
        "ExpressionGroup",
        "groups",
        "Add",
        "newGroup",
        "tokenizer",
        "ChangeExpressionGroup",
        "newGroup",
        "tokenizer",
        "NextChar",
        "ExpressionBase",
        "Parse",
        "tokenizer",
        "newGroup",
        "ExtractTrailingComments",
        "expression",
        "commentGroup",
        "groups",
        "Add",
        "commentGroup",
        "expression",
        "Type",
        "ExpressionType",
        "ParseError",
        "newGroup",
        "AddExpression",
        "expression",
        "groups",
        "LastOrDefault",
        "lastGroup",
        "lastGroup",
        "IsEmpty",
        "groups",
        "RemoveAt",
        "groups",
        "Count",
        "Tokenizer",
        "tokenizer",
        "affectedLines",
        "ExpressionTokenizer",
        "tokenizer",
        "affectedLines",
        "Any",
        "affectedLines",
        "Min",
        "LOG_UPDATE",
        "nextUpdatedLine",
        "affectedLines",
        "Max",
        "Groups",
        "Count",
        "groupStart",
        "Groups",
        "Count",
        "nextUpdatedLine",
        "Groups",
        "groupStart",
        "LastLine",
        "groupStart",
        "groupStart",
        "Groups",
        "Count",
        "LOG_UPDATE",
        "nextUpdatedLine",
        "groupStart",
        "Groups",
        "groupStart",
        "FirstLine",
        "nextUpdatedLine",
        "Min",
        "Groups",
        "groupStart",
        "FirstLine",
        "nextUpdatedLine",
        "expressionTokenizer",
        "AdvanceToLine",
        "nextUpdatedLine",
        "LOG_UPDATE",
        "Groups",
        "Count",
        "LOG_GROUPS",
        "groupStart",
        "groupStart",
        "ExpressionGroup",
        "ParseGroups",
        "expressionTokenizer",
        "newGroups",
        "Groups",
        "Count",
        "newGroups",
        "Count",
        "newGroupStop",
        "groupStop",
        "groupStart",
        "Groups",
        "groupStop",
        "newGroups",
        "newGroupStop",
        "existingGroup",
        "ExpressionsMatch",
        "newGroup",
        "groupStop",
        "newGroupStop",
        "existingGroup",
        "ReplaceExpressions",
        "newGroup",
        "Scope",
        "UpdateVariables",
        "existingGroup",
        "Modifies",
        "newGroup",
        "newGroupStop",
        "groupStop",
        "groupStart",
        "i",
        "groupStop",
        "i",
        "Groups",
        "i",
        "variable",
        "group",
        "Modifies",
        "affectedVariables",
        "Add",
        "variable",
        "Scope",
        "UndefineVariable",
        "variable",
        "Scope",
        "UndefineFunction",
        "variable",
        "_evaluationErrors",
        "Count",
        "j",
        "j",
        "_evaluationErrors",
        "j",
        "error",
        "EndLine",
        "group",
        "FirstLine",
        "error",
        "Line",
        "group",
        "LastLine",
        "_evaluationErrors",
        "RemoveAt",
        "j",
        "error",
        "InnerError",
        "error",
        "error",
        "InnermostError",
        "error",
        "EndLine",
        "group",
        "FirstLine",
        "error",
        "Line",
        "group",
        "LastLine",
        "_evaluationErrors",
        "RemoveAt",
        "j",
        "i",
        "newGroupStop",
        "i",
        "newGroups",
        "i",
        "newGroup",
        "UpdateMetadata",
        "newGroup",
        "MarkForEvaluation",
        "variable",
        "newGroup",
        "Modifies",
        "affectedVariables",
        "Add",
        "variable",
        "newGroupStop",
        "groupStart",
        "Groups",
        "Count",
        "LOG_UPDATE",
        "groupStart",
        "groupStop",
        "Groups",
        "groupStart",
        "FirstLine",
        "Groups",
        "groupStop",
        "LastLine",
        "Groups",
        "RemoveRange",
        "groupStart",
        "groupStop",
        "groupStart",
        "groupStop",
        "groupStart",
        "LOG_UPDATE",
        "newGroupStop",
        "newGroups",
        "FirstLine",
        "newGroups",
        "newGroupStop",
        "LastLine",
        "Groups",
        "InsertRange",
        "groupStart",
        "newGroups",
        "Take",
        "newGroupStop",
        "LOG_UPDATE",
        "groupStart",
        "groupStop",
        "Groups",
        "groupStart",
        "FirstLine",
        "Groups",
        "groupStop",
        "LastLine",
        "newGroupStop",
        "newGroups",
        "FirstLine",
        "newGroups",
        "newGroupStop",
        "LastLine",
        "Groups",
        "RemoveRange",
        "groupStart",
        "groupStop",
        "groupStart",
        "Groups",
        "InsertRange",
        "groupStart",
        "newGroups",
        "Take",
        "newGroupStop",
        "LOG_GROUPS",
        "groupStart",
        "groupStart",
        "newGroupStop",
        "affectedVariables",
        "Count",
        "FlagDependencies",
        "affectedVariables",
        "needsEvaluated",
        "i",
        "newGroupStop",
        "i",
        "newGroups",
        "i",
        "NeedsEvaluated",
        "needsEvaluated",
        "needsEvaluated",
        "Conditional",
        "fmt",
        "parameters",
        "Debug",
        "WriteLine",
        "fmt",
        "parameters",
        "Conditional",
        "start",
        "end",
        "i",
        "end",
        "i",
        "i",
        "i",
        "Groups",
        "Count",
        "Groups",
        "i",
        "ToString",
        "group",
        "IndexOf",
        "index",
        "group",
        "IndexOf",
        "index",
        "index2",
        "index",
        "group",
        "group",
        "Substring",
        "index",
        "index2",
        "index",
        "Trim",
        "group",
        "group",
        "Substring",
        "index",
        "Trim",
        "LOG_UPDATE",
        "Groups",
        "i",
        "FirstLine",
        "Groups",
        "i",
        "LastLine",
        "group",
        "affectedVariables",
        "count",
        "affectedVariables",
        "Count",
        "group",
        "Groups",
        "group",
        "NeedsEvaluated",
        "group",
        "IsDependentOn",
        "affectedVariables",
        "group",
        "MarkForEvaluation",
        "variable",
        "group",
        "Modifies",
        "affectedVariables",
        "Add",
        "variable",
        "group",
        "Modifies",
        "Any",
        "affectedVariables",
        "Contains",
        "v",
        "group",
        "MarkForEvaluation",
        "affectedVariables",
        "Count",
        "count",
        "_evaluationErrors",
        "Count",
        "ParseErrorExpression",
        "error",
        "_evaluationErrors",
        "Add",
        "error",
        "_evaluationErrors",
        "Clear",
        "ParseErrorExpression",
        "group",
        "Groups",
        "error",
        "group",
        "ParseErrors",
        "error",
        "error",
        "_evaluationErrors",
        "error",
        "ExpressionBase",
        "expressions",
        "line",
        "group",
        "GetGroupsForLine",
        "line",
        "result",
        "group",
        "GetExpressionsForLine",
        "expressions",
        "line",
        "error",
        "_evaluationErrors",
        "error",
        "InnermostError",
        "UnknownVariableParseErrorExpression",
        "unknownVariableError",
        "unknownVariableError",
        "Line",
        "line",
        "unknownVariableError",
        "EndLine",
        "line",
        "expressions",
        "Contains",
        "unknownVariableError",
        "expressions",
        "Add",
        "unknownVariableError",
        "result",
        "scan",
        "Line",
        "line",
        "scan",
        "EndLine",
        "line",
        "mostSignificantError",
        "scan",
        "mostSignificantError",
        "scan",
        "Line",
        "mostSignificantError",
        "Line",
        "scan",
        "EndLine",
        "mostSignificantError",
        "EndLine",
        "mostSignificantError",
        "scan",
        "scan",
        "InnerError",
        "scan",
        "mostSignificantError",
        "expressions",
        "Contains",
        "mostSignificantError",
        "expressions",
        "Add",
        "mostSignificantError",
        "result",
        "result",
        "ExpressionGroup",
        "line",
        "Groups",
        "Count",
        "left",
        "right",
        "left",
        "right",
        "Groups",
        "mid",
        "line",
        "group",
        "FirstLine",
        "right",
        "mid",
        "line",
        "group",
        "LastLine",
        "left",
        "mid",
        "index",
        "left",
        "index",
        "Groups",
        "index",
        "LastLine",
        "line",
        "index",
        "index",
        "right",
        "group",
        "Groups",
        "index",
        "group",
        "FirstLine",
        "line",
        "group"
    ],
    "literals": [
        "\"Updating lines {0}-{1} (searching {2} groups)\"",
        "\"Found line {0} in group {1} (first line of group is {2})\"",
        "\"Updating all lines ({0} groups)\"",
        "\"Removing groups {0}-{1} (lines {2}-{3})\"",
        "\"Adding {0} groups (lines {1}-{2})\"",
        "\"Replacing groups {0}-{1} (lines {2}-{3}) with {4} groups (lines {5}-{6})\"",
        "\"DEBUG_UPDATE\"",
        "\"DEBUG_UPDATE\"",
        "\"{0}-{1}: {2}\""
    ],
    "variables": [
        "Groups",
        "InterpreterScope",
        "Scope",
        "_evaluationErrors",
        "expressionTokenizer",
        "newGroup",
        "expression",
        "commentGroup",
        "lastGroup",
        "expressionTokenizer",
        "groupStart",
        "nextUpdatedLine",
        "newGroups",
        "groupStop",
        "newGroupStop",
        "existingGroup",
        "newGroup",
        "affectedVariables",
        "i",
        "groupStart",
        "group",
        "j",
        "error",
        "i",
        "newGroup",
        "needsEvaluated",
        "i",
        "i",
        "start",
        "group",
        "index",
        "index2",
        "count",
        "HasEvaluationErrors",
        "Errors",
        "result",
        "unknownVariableError",
        "ParseErrorExpression",
        "mostSignificantError",
        "scan",
        "error",
        "left",
        "right",
        "mid",
        "group",
        "index",
        "mid"
    ],
    "comments": [
        "#define DEBUG_UPDATE",
        "create a separate group for comments",
        "if comments were found, start a new group",
        "sometimes parsing an expression will process trailing whitespace looking for a continuation character.",
        "move the trailing comments into a separate group. do not move the internal comments",
        "we can ignore everything before the first modified line",
        "parse whatever is remaining",
        "attempt to match the end of the script",
        "no change detected",
        "groups were removed",
        "whatever is remaining will be swapped out.",
        "capture any affected variables and remove associated evaluation errors",
        "also capture any affected variables for groups being swapped in, and determine",
        "if they need to be evaluated.",
        "perform the swap",
        "re-evaluate any groups that are dependent on (or modify) the affected variables",
        "this group is already flagged for evaluation - ignore",
        "this group depends on one of the affected variables, re-evaluate",
        "also flag the output of this group for possible chaining",
        "this group could modify one of the affected variables.",
        "any time a variable is potentially modified, we have to fully re-evaluate it",
        "if any new items were added to the affected variables list, go through again and check",
        "for new stuff to flag",
        "scan is more significant than current error, use it",
        "scan is more significant than current error, but not part of line, ignore it"
    ],
    "docstrings": [],
    "functions": [
        "ExpressionGroupCollection",
        "Parse",
        "ParseGroups",
        "Update",
        "LOG_UPDATE",
        "LOG_GROUPS",
        "FlagDependencies",
        "AddEvaluationError",
        "ResetErrors",
        "GetExpressionsForLine",
        "GetGroupsForLine"
    ],
    "classes": [
        "ExpressionGroupCollection"
    ]
}