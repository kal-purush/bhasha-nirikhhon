{
    "identifiers": [
        "argparse",
        "logging",
        "multiprocessing",
        "mp",
        "re",
        "shutil",
        "warnings",
        "pathlib",
        "Path",
        "time",
        "sleep",
        "fasttext",
        "tqdm",
        "tqdm",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "required",
        "Path",
        "parser",
        "add_argument",
        "help",
        "Path",
        "parser",
        "add_argument",
        "help",
        "required",
        "Path",
        "parser",
        "add_argument",
        "required",
        "help",
        "Path",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "Path",
        "parser",
        "add_argument",
        "required",
        "help",
        "Path",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "Path",
        "parser",
        "parse_args",
        "args",
        "output_tgt",
        "args",
        "input_tgt",
        "args",
        "target_lang",
        "args",
        "removed_tgt",
        "args",
        "output_tgt",
        "args",
        "input_tgt",
        "args",
        "target_lang",
        "args",
        "removed_tgt",
        "ValueError",
        "args",
        "input_tgt",
        "args",
        "output_tgt",
        "args",
        "target_lang",
        "args",
        "removed_tgt",
        "args",
        "input_src",
        "expanduser",
        "args",
        "input_tgt",
        "args",
        "input_tgt",
        "expanduser",
        "args",
        "output_src",
        "expanduser",
        "args",
        "output_tgt",
        "args",
        "output_tgt",
        "expanduser",
        "args",
        "removed_src",
        "expanduser",
        "args",
        "removed_tgt",
        "args",
        "removed_tgt",
        "expanduser",
        "args",
        "fasttext_model",
        "expanduser",
        "args",
        "line",
        "fasttext_model",
        "fasttext_model",
        "predict",
        "line",
        "k",
        "labels",
        "split",
        "lang",
        "fn",
        "num_parts",
        "open",
        "fn",
        "f",
        "l",
        "f",
        "i",
        "len",
        "l",
        "encode",
        "edges",
        "append",
        "i",
        "num_lines",
        "edges",
        "i",
        "num_lines",
        "num_parts",
        "i",
        "num_parts",
        "edges",
        "num_lines",
        "src_fn",
        "tgt_fn",
        "num_parts",
        "get_edges_in_1_file",
        "src_fn",
        "num_parts",
        "num_parts",
        "len",
        "src_edges",
        "src_edges",
        "i",
        "src_edges",
        "i",
        "i",
        "len",
        "src_edges",
        "tgt_fn",
        "get_edges_in_1_file",
        "tgt_fn",
        "num_parts",
        "tgt_edges",
        "i",
        "tgt_edges",
        "i",
        "i",
        "len",
        "tgt_edges",
        "tgt_num_lines",
        "src_num_lines",
        "ValueError",
        "repr",
        "src_fn",
        "repr",
        "tgt_fn",
        "src_num_lines",
        "tgt_num_lines",
        "num_parts",
        "len",
        "src_edges",
        "num_parts",
        "src_edges",
        "tgt_edges",
        "src_num_lines",
        "src_edges",
        "tgt_edges",
        "input_src",
        "input_tgt",
        "filtered_dir_src",
        "filtered_dir_tgt",
        "removed_dir_src",
        "removed_dir_tgt",
        "source_lang",
        "target_lang",
        "fasttext_model",
        "rank",
        "counter",
        "fasttext",
        "load_model",
        "fasttext_model",
        "filtered_dir_src",
        "Path",
        "rank",
        "removed_dir_src",
        "Path",
        "rank",
        "filtered_dir_tgt",
        "Path",
        "rank",
        "removed_dir_tgt",
        "Path",
        "rank",
        "open",
        "input_src",
        "in_src",
        "open",
        "input_tgt",
        "in_tgt",
        "open",
        "output_src",
        "out_src",
        "open",
        "output_tgt",
        "out_tgt",
        "open",
        "output_src_removed",
        "out_r_src",
        "open",
        "output_tgt_removed",
        "out_r_tgt",
        "in_src",
        "seek",
        "src_edges",
        "in_tgt",
        "seek",
        "tgt_edges",
        "in_src",
        "readline",
        "in_tgt",
        "readline",
        "counter",
        "get_lock",
        "counter",
        "value",
        "src_l",
        "tgt_l",
        "src_l",
        "strip",
        "tgt_l",
        "strip",
        "get_lang",
        "src_l",
        "fasttext_model",
        "src_lang",
        "get_lang",
        "tgt_l",
        "fasttext_model",
        "src_lang",
        "tgt_lang",
        "src_lang",
        "source_lang",
        "tgt_lang",
        "target_lang",
        "out_r_src",
        "write",
        "src_l",
        "out_r_tgt",
        "write",
        "tgt_l",
        "out_src",
        "write",
        "src_l",
        "out_tgt",
        "write",
        "tgt_l",
        "in_src",
        "tell",
        "src_edges",
        "in_tgt",
        "tell",
        "tgt_edges",
        "ValueError",
        "in_src",
        "tell",
        "in_tgt",
        "tell",
        "src_edges",
        "tgt_edges",
        "in_tgt",
        "tell",
        "tgt_edges",
        "ValueError",
        "in_src",
        "tell",
        "in_tgt",
        "tell",
        "src_edges",
        "tgt_edges",
        "in_src",
        "readline",
        "in_tgt",
        "readline",
        "i",
        "counter",
        "get_lock",
        "counter",
        "value",
        "src_edges",
        "input_src",
        "filtered_dir_src",
        "removed_dir_src",
        "source_lang",
        "fasttext_model",
        "rank",
        "counter",
        "fasttext",
        "load_model",
        "fasttext_model",
        "filtered_dir_src",
        "Path",
        "rank",
        "removed_dir_src",
        "Path",
        "rank",
        "open",
        "input_src",
        "in_f",
        "open",
        "output_src",
        "out_f",
        "open",
        "output_src_removed",
        "out_r_f",
        "in_f",
        "seek",
        "src_edges",
        "in_f",
        "readline",
        "counter",
        "get_lock",
        "counter",
        "value",
        "line",
        "line",
        "strip",
        "get_lang",
        "line",
        "fasttext_model",
        "in_lang",
        "in_lang",
        "source_lang",
        "out_r_f",
        "write",
        "line",
        "out_f",
        "write",
        "line",
        "in_f",
        "tell",
        "src_edges",
        "i",
        "in_f",
        "readline",
        "counter",
        "get_lock",
        "counter",
        "value",
        "args",
        "args",
        "input_tgt",
        "tgt_edges",
        "warnings",
        "warn",
        "filter_singles",
        "src_edges",
        "input_src",
        "filtered_dir_src",
        "removed_dir_src",
        "source_lang",
        "fasttext_model",
        "rank",
        "filter_pairs",
        "src_edges",
        "tgt_edges",
        "input_src",
        "input_tgt",
        "filtered_dir_src",
        "filtered_dir_tgt",
        "removed_dir_src",
        "removed_dir_tgt",
        "source_lang",
        "target_lang",
        "fasttext_model",
        "rank",
        "out_file",
        "tmp_dir",
        "re",
        "compile",
        "out_file",
        "open",
        "out_f",
        "f",
        "sorted",
        "tmp_dir",
        "iterdir",
        "f",
        "is_file",
        "warnings",
        "warn",
        "f",
        "file_name_pattern",
        "search",
        "f",
        "warnings",
        "warn",
        "f",
        "f",
        "open",
        "in_f",
        "l",
        "in_f",
        "out_f",
        "write",
        "l",
        "out_files",
        "tmp_dirs",
        "o_f",
        "t_d",
        "out_files",
        "tmp_dirs",
        "o_f",
        "t_d",
        "o_f",
        "t_d",
        "warnings",
        "warn",
        "t_d",
        "o_f",
        "_cat_results",
        "o_f",
        "t_d",
        "args",
        "counter",
        "args",
        "get_args",
        "Path",
        "tmp_dir",
        "Path",
        "tmp_filtered",
        "Path",
        "tmp_filtered_src",
        "mkdir",
        "parents",
        "exist_ok",
        "args",
        "input_tgt",
        "tmp_filtered",
        "Path",
        "tmp_filtered_tgt",
        "mkdir",
        "parents",
        "exist_ok",
        "tmp_dir",
        "Path",
        "tmp_removed",
        "Path",
        "tmp_removed_src",
        "mkdir",
        "parents",
        "exist_ok",
        "args",
        "input_tgt",
        "tmp_removed",
        "Path",
        "tmp_removed_tgt",
        "mkdir",
        "parents",
        "exist_ok",
        "mp",
        "cpu_count",
        "args",
        "num_jobs",
        "args",
        "num_jobs",
        "get_edges_and_num_lines",
        "args",
        "input_src",
        "args",
        "input_tgt",
        "num_jobs",
        "counter",
        "mp",
        "Value",
        "tqdm",
        "total",
        "num_lines",
        "desc",
        "mp",
        "Pool",
        "num_jobs",
        "initializer",
        "init",
        "initargs",
        "counter",
        "pool",
        "pool",
        "map_async",
        "filter_by_lang",
        "se",
        "te",
        "args",
        "input_src",
        "args",
        "input_tgt",
        "tmp_filtered_src",
        "tmp_filtered_tgt",
        "tmp_removed_src",
        "tmp_removed_tgt",
        "args",
        "source_lang",
        "args",
        "target_lang",
        "args",
        "fasttext_model",
        "rank",
        "rank",
        "se",
        "te",
        "src_edges",
        "tgt_edges",
        "async_result",
        "ready",
        "t",
        "update",
        "counter",
        "value",
        "counter",
        "get_lock",
        "sleep",
        "t",
        "update",
        "counter",
        "value",
        "cat_results",
        "args",
        "output_src",
        "args",
        "output_tgt",
        "args",
        "removed_src",
        "args",
        "removed_tgt",
        "tmp_filtered_src",
        "tmp_filtered_tgt",
        "tmp_removed_src",
        "tmp_removed_tgt",
        "shutil",
        "rmtree",
        "tmp_dir",
        "main"
    ],
    "literals": [
        "\"It is a script for verifying language in machine translation data sets. If the script is used on \"",
        "\"a parallel corpus, it verifies both a source and a target language. If number of jobs `--num-jobs` is bigger \"",
        "\"than 1 than lines in an input file (or files if parallel corpus is checked) split equally between workers. \"",
        "\"If `num_jobs > 1` is used, the best performance is achieved if dataset is shuffled and lines with different \"",
        "\"lengths are distributed evenly in the input file. Filtered data is stored into `output_src`[, `--output-tgt`]\"",
        "\" and removed lines are put into `removed_src`[, `--removed-tgt`] files. If language cannot be detected \"",
        "\"(e.g. date), the line is removed. Working time on en-de wikimatrix (6.23M pairs: 700 MB German and 625 MB \"",
        "\"English) from wmt20 on machine with 20 CPU cores: less than 1 minute.\"",
        "\"--input-src\"",
        "\"-s\"",
        "\"Path to the input file which has to contain text in language `source_lang`.\"",
        "\"--input-tgt\"",
        "\"-t\"",
        "\"Path to the input file which has to contain text in language `target_lang`. If not provided, data is \"",
        "\"processed as monolingual.\"",
        "\"--output-src\"",
        "\"-S\"",
        "\"Path to the file where filtered `input_src` will be saved.\"",
        "\"--output-tgt\"",
        "\"-T\"",
        "\"Path to the output target file\"",
        "\"--source-lang\"",
        "\"-l\"",
        "\"Input language. For options see https://fasttext.cc/docs/en/language-identification.html.\"",
        "\"--target-lang\"",
        "\"-L\"",
        "\"Output language. For options see https://fasttext.cc/docs/en/language-identification.html.\"",
        "\"--removed-src\"",
        "\"-r\"",
        "\"Path to file where removed source lines will be saved\"",
        "\"--removed-tgt\"",
        "\"-R\"",
        "\"Path to file where removed target lines will be saved\"",
        "\"--num-jobs\"",
        "\"-j\"",
        "\"Number of jobs. By default, the number of jobs is equal to the number of CPU cores.\"",
        "\"--fasttext-model\"",
        "\"-m\"",
        "\"Path to fasttext model. The description and download links are here \"",
        "\"https://fasttext.cc/docs/en/language-identification.html\"",
        "f\"Arguments `input_tgt`, `output_tgt`, `target_lang`, `removed_tgt` have to be either `None` \"",
        "f\"simultaneously or not `None` simultaneously. Given \"",
        "f\"input_tgt={args.input_tgt}, output_tgt={args.output_tgt}, target_lang={args.target_lang}, \"",
        "f\"removed_tgt={args.removed_tgt}\"",
        "'__'",
        "'utf-8'",
        "f\"Source {repr(src_fn)} and target {repr(tgt_fn)} files have different number of lines \"",
        "f\"{src_num_lines} and {tgt_num_lines} correspondingly.\"",
        "f\"rank{rank}\"",
        "f\"rank{rank}\"",
        "f\"rank{rank}\"",
        "f\"rank{rank}\"",
        "'w'",
        "'w'",
        "'w'",
        "'w'",
        "'\\n'",
        "'\\n'",
        "'\\n'",
        "'\\n'",
        "f\"Edges of target and source has to be reached simultaneously, whereas \"",
        "f\"in_src.tell()={in_src.tell()}, in_tgt.tell()={in_tgt.tell()}, \"",
        "f\"src_edges[1]={src_edges[1]}, tgt_edges[1]={tgt_edges[1]}.\"",
        "f\"Edges of target and source has to be reached simultaneously, whereas \"",
        "f\"in_src.tell()={in_src.tell()}, in_tgt.tell()={in_tgt.tell()}, \"",
        "f\"src_edges[1]={src_edges[1]}, tgt_edges[1]={tgt_edges[1]}.\"",
        "f\"rank{rank}\"",
        "f\"rank{rank}\"",
        "'w'",
        "'w'",
        "'\\n'",
        "'\\n'",
        "\"If input target is not provided `tgt_edges` argument is expected to be `None`\"",
        "r\"/rank([1-9][0-9]*)|0$\"",
        "'w'",
        "f\"Unexpected not file {f}\"",
        "f\"Unexpected file {f}\"",
        "'r'",
        "f\"Output file and tmp directory are expected to be `None` simultaneously whereas tmp directory \"",
        "f\"is {t_d} and output file is {o_f}.\"",
        "\"tmp\"",
        "\"filtered\"",
        "\"src\"",
        "\"tgt\"",
        "\"removed\"",
        "\"src\"",
        "\"tgt\"",
        "'i'",
        "\"processed lines / total number of lines\"",
        "\"__main__\""
    ],
    "variables": [
        "parser",
        "args",
        "args",
        "input_src",
        "args",
        "input_tgt",
        "args",
        "output_src",
        "args",
        "output_tgt",
        "args",
        "removed_src",
        "args",
        "removed_tgt",
        "args",
        "fasttext_model",
        "labels",
        "_",
        "lang",
        "num_lines",
        "edges",
        "i",
        "src_edges",
        "src_num_lines",
        "src_edges",
        "tgt_edges",
        "tgt_num_lines",
        "tgt_edges",
        "tgt_edges",
        "fasttext_model",
        "output_src",
        "output_src_removed",
        "output_tgt",
        "output_tgt_removed",
        "src_l",
        "tgt_l",
        "i",
        "src_l",
        "tgt_l",
        "src_lang",
        "tgt_lang",
        "src_l",
        "tgt_l",
        "i",
        "fasttext_model",
        "output_src",
        "output_src_removed",
        "i",
        "line",
        "line",
        "in_lang",
        "i",
        "line",
        "src_edges",
        "tgt_edges",
        "input_src",
        "input_tgt",
        "filtered_dir_src",
        "filtered_dir_tgt",
        "removed_dir_src",
        "removed_dir_tgt",
        "source_lang",
        "target_lang",
        "fasttext_model",
        "rank",
        "file_name_pattern",
        "counter",
        "counter",
        "args",
        "tmp_dir",
        "tmp_filtered",
        "tmp_filtered_src",
        "tmp_filtered_tgt",
        "tmp_filtered_tgt",
        "tmp_removed",
        "tmp_removed_src",
        "tmp_removed_tgt",
        "tmp_removed_tgt",
        "num_jobs",
        "src_edges",
        "tgt_edges",
        "num_lines",
        "counter",
        "t",
        "async_result",
        "counter",
        "value"
    ],
    "comments": [
        "Copyright (c) 2020, NVIDIA CORPORATION.  All rights reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "docstrings": [
        "\"\"\"\nUsage:\npython filter_by_language.py --input-src train.en \\\n    --input-tgt train.de \\\n    --output-src train_lang_filtered.en \\\n    --output-tgt train_lang_filtered.de \\\n    --source-lang en \\\n    --target-lang de \\\n    --removed-src train_garbage.en \\\n    --removed-tgt train_garbage.de \\\n    --fasttext-model lid.176.bin\n\"\"\""
    ],
    "functions": [
        "get_args",
        "get_lang",
        "get_edges_in_1_file",
        "get_edges_and_num_lines",
        "filter_pairs",
        "filter_singles",
        "filter_by_lang",
        "_cat_results",
        "cat_results",
        "init",
        "main"
    ],
    "classes": []
}