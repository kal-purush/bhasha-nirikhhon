{
    "identifiers": [
        "Component",
        "NgModule",
        "DefaultValueAccessor",
        "FormsModule",
        "isMockControlValueAccessor",
        "MockBuilder",
        "MockRender",
        "ngMocks",
        "Component",
        "NgModule",
        "MyComponent",
        "MyComponent",
        "FormsModule",
        "describe",
        "beforeEach",
        "MockBuilder",
        "MyComponent",
        "MyModule",
        "it",
        "MockRender",
        "MyComponent",
        "ngMocks",
        "ngMocks",
        "DefaultValueAccessor",
        "expect",
        "component",
        "valueAccessor",
        "expect",
        "component",
        "describe",
        "beforeEach",
        "MockBuilder",
        "MyComponent",
        "MyModule",
        "DefaultValueAccessor",
        "it",
        "MockRender",
        "MyComponent",
        "fixture",
        "ngMocks",
        "ngMocks",
        "DefaultValueAccessor",
        "expect",
        "component",
        "isMockControlValueAccessor",
        "valueAccessor",
        "valueAccessor",
        "expect",
        "component"
    ],
    "literals": [
        "'@angular/core'",
        "'@angular/forms'",
        "'ng-mocks'",
        "'my'",
        "<input data-testid=\"inputControl\" [(ngModel)]=\"value\" />",
        "'issue-305:forms:real'",
        "'correctly mocks CVA'",
        "'data-testid'",
        "'inputControl'",
        "'issue-305:forms:mock'",
        "'correctly mocks CVA'",
        "'data-testid'",
        "'inputControl'"
    ],
    "variables": [
        "component",
        "valueAccessor",
        "fixture",
        "component",
        "valueAccessor"
    ],
    "comments": [
        "checking how normal form works",
        "DefaultValueAccessor does implement ControlValueAccessor",
        "normal change",
        "a mock version should behavior similarly but via our own interface",
        "DefaultValueAccessor does implement ControlValueAccessor",
        "normal change"
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "MyComponent",
        "MyModule"
    ]
}