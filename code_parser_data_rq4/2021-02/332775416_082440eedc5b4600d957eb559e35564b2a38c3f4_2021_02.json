{
    "identifiers": [
        "edu",
        "kit",
        "kastel",
        "sdq",
        "case4lang",
        "refactorlizar",
        "analyzer",
        "dependencycycle",
        "java",
        "util",
        "stream",
        "Collectors",
        "joining",
        "java",
        "util",
        "ArrayDeque",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "java",
        "util",
        "Consumer",
        "com",
        "google",
        "common",
        "collect",
        "AbstractIterator",
        "com",
        "google",
        "common",
        "collect",
        "FluentIterable",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableList",
        "com",
        "google",
        "common",
        "graph",
        "ElementOrder",
        "com",
        "google",
        "common",
        "graph",
        "Graph",
        "com",
        "google",
        "common",
        "graph",
        "GraphBuilder",
        "com",
        "google",
        "common",
        "graph",
        "Graphs",
        "com",
        "google",
        "common",
        "graph",
        "MutableGraph",
        "edu",
        "kit",
        "kastel",
        "sdq",
        "case4lang",
        "refactorlizar",
        "analyzer",
        "api",
        "Report",
        "spoon",
        "reflect",
        "CtModel",
        "spoon",
        "reflect",
        "declaration",
        "CtPackage",
        "spoon",
        "reflect",
        "declaration",
        "CtType",
        "spoon",
        "reflect",
        "visitor",
        "CtAbstractVisitor",
        "model",
        "packages",
        "model",
        "getAllPackages",
        "graph",
        "GraphBuilder",
        "directed",
        "build",
        "ctPackage",
        "packages",
        "ctPackage",
        "getTypes",
        "getReferencedTypes",
        "stream",
        "v",
        "v",
        "getDeclaration",
        "v",
        "v",
        "getDeclaration",
        "equals",
        "forEach",
        "v",
        "graph",
        "putEdge",
        "v",
        "getDeclaration",
        "result",
        "findStronglyConnectedComponents",
        "graph",
        "result",
        "nodes",
        "forEach",
        "result",
        "nodes",
        "isEmpty",
        "format",
        "result",
        "nodes",
        "size",
        "result",
        "nodes",
        "stream",
        "v",
        "v",
        "stream",
        "CtType",
        "getQualifiedName",
        "collect",
        "joining",
        "collect",
        "joining",
        "graph",
        "graph",
        "nodes",
        "isEmpty",
        "result",
        "GraphBuilder",
        "directed",
        "allowsSelfLoops",
        "nodeOrder",
        "ElementOrder",
        "insertion",
        "build",
        "ccStore",
        "graph",
        "nodes",
        "size",
        "topologicalOrder",
        "traverse",
        "graph",
        "postOrderTraversal",
        "graph",
        "nodes",
        "toList",
        "reverse",
        "transposeGraph",
        "Graphs",
        "transpose",
        "graph",
        "node",
        "topologicalOrder",
        "ccStore",
        "keySet",
        "contains",
        "node",
        "connectedComponent",
        "hitExistingNodes",
        "traverse",
        "transposeGraph",
        "postOrderTraversal",
        "Collections",
        "singleton",
        "node",
        "ccStore",
        "keySet",
        "hitExistingNodes",
        "add",
        "forEach",
        "connectedComponent",
        "add",
        "result",
        "addNode",
        "connectedComponent",
        "hitExistingNodes",
        "forEach",
        "n",
        "existingCC",
        "ccStore",
        "get",
        "n",
        "result",
        "putEdge",
        "existingCC",
        "connectedComponent",
        "connectedComponent",
        "forEach",
        "n",
        "ccStore",
        "put",
        "n",
        "connectedComponent",
        "result",
        "graph",
        "graph",
        "root",
        "childIterator",
        "root",
        "childIterator",
        "root",
        "Objects",
        "requireNonNull",
        "root",
        "childIterator",
        "Objects",
        "requireNonNull",
        "childIterator",
        "stack",
        "rootNodes",
        "visitedSet",
        "ignoredSet",
        "ignoreNodeEncountered",
        "roots",
        "ignoredNodes",
        "ignoreNodeMet",
        "rootNodes",
        "roots",
        "iterator",
        "visitedSet",
        "graph",
        "nodes",
        "size",
        "ignoredSet",
        "ignoredNodes",
        "ignoreNodeEncountered",
        "ignoreNodeMet",
        "Override",
        "stack",
        "isEmpty",
        "rootNodes",
        "hasNext",
        "pushNodeIfUnvisited",
        "rootNodes",
        "next",
        "stack",
        "isEmpty",
        "top",
        "stack",
        "getLast",
        "top",
        "childIterator",
        "hasNext",
        "child",
        "top",
        "childIterator",
        "next",
        "pushNodeIfUnvisited",
        "child",
        "stack",
        "removeLast",
        "top",
        "root",
        "endOfData",
        "t",
        "ignoredSet",
        "contains",
        "t",
        "ignoreNodeEncountered",
        "ignoreNodeEncountered",
        "accept",
        "t",
        "visitedSet",
        "add",
        "t",
        "stack",
        "addLast",
        "expand",
        "t",
        "t",
        "t",
        "graph",
        "successors",
        "t",
        "iterator",
        "graph",
        "graph",
        "graph",
        "Objects",
        "requireNonNull",
        "graph",
        "postOrderTraversal",
        "graph",
        "nodes",
        "rootNodes",
        "postOrderTraversal",
        "rootNodes",
        "Collections",
        "emptySet",
        "rootNodes",
        "ignoredNodes",
        "ignoredNodeMet",
        "Override",
        "rootNodes",
        "ignoredNodes",
        "ignoredNodeMet"
    ],
    "literals": [
        "\"Dependency Cycle Analysis\"",
        "\"No cycle found.\"",
        "\"Dependency Cycle Analysis\"",
        "\"%d Cycles found.%s\"",
        "\" -> \"",
        "\",\"",
        "\"Can't find components in an empty graph\""
    ],
    "variables": [
        "root",
        "childIterator",
        "rootNodes",
        "visitedSet",
        "ignoredSet",
        "ignoreNodeEncountered",
        "graph"
    ],
    "comments": [
        "Kosaraju's algorithm",
        "Step 1",
        "Step 2",
        "Step 3",
        "We encounterd a connection between connected components",
        "from https://codereview.stackexchange.com/questions/172907/strongly-connected-component-finding-based-on-the-guava-graph-library-with-kosar"
    ],
    "docstrings": [
        "* Guarantees: the graph will be directed and forest-like without self loops.\n     * \n     * @param graph\n     * @return the SCC graph. each node contains all the nodes in the CC of the original graph",
        "* Does post order traversal of the (directed) graph. When a node in ignoredNodes is encountered, ignoreNodeMet is\n   * called\n   * \n   * @param rootNodes\n   *            the nodes to start traversal at\n   * @param ignoredNodes\n   *            nodes that will be ignored, i.e. not recursively traversed\n   * @param ignoredNodeMet\n   *            might be null for no callback\n   * @return"
    ],
    "functions": [
        "Report",
        "fullAnalysis",
        "findStronglyConnectedComponents",
        "traverse",
        "PostOrderNode",
        "PostOrderIterator",
        "T",
        "computeNext",
        "pushNodeIfUnvisited",
        "expand",
        "GraphTraverser",
        "postOrderTraversal",
        "postOrderTraversal",
        "postOrderTraversal",
        "iterator"
    ],
    "classes": [
        "CycleVisitor",
        "GraphTraverser",
        "PostOrderNode",
        "PostOrderIterator"
    ]
}