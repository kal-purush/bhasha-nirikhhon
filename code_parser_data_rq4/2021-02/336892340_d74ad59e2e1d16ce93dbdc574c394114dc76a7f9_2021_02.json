{
    "identifiers": [
        "sys",
        "simplejson",
        "pandas",
        "pd",
        "networkx",
        "nx",
        "collections",
        "defaultdict",
        "utils",
        "test_indications",
        "PathTester",
        "ALLOWED_CURIS",
        "BL_NODES",
        "BL_PREDS",
        "pd",
        "read_csv",
        "text",
        "join",
        "c",
        "c",
        "text",
        "lower",
        "c",
        "punctuation",
        "normalize_string",
        "l",
        "l",
        "l",
        "BL_NODES",
        "normalize_string",
        "c",
        "c",
        "ALLOWED_CURIS",
        "normalize_string",
        "t",
        "t",
        "t",
        "BL_PREDS",
        "bl_map",
        "set_index",
        "to_dict",
        "bl_map",
        "set_index",
        "to_dict",
        "normalize_string",
        "k",
        "v",
        "k",
        "v",
        "old_to_bl",
        "items",
        "old_to_bl",
        "lower_to_final",
        "bl_map",
        "applymap",
        "normalize_string",
        "set_index",
        "to_dict",
        "text",
        "join",
        "c",
        "c",
        "text",
        "lower",
        "c",
        "punctuation",
        "indications",
        "path",
        "indications",
        "node",
        "path",
        "get",
        "normalize_string",
        "node",
        "lower_to_final",
        "label_lower",
        "indications",
        "path",
        "indications",
        "edge",
        "path",
        "edge",
        "replace",
        "normalize_string",
        "key",
        "pred_lower_to_final",
        "get",
        "lower_key",
        "key",
        "indications",
        "i",
        "ind",
        "indications",
        "key",
        "drugbank_keys",
        "ind",
        "key",
        "isinstance",
        "outer",
        "j",
        "item",
        "outer",
        "item",
        "key",
        "identifier",
        "startswith",
        "identifier",
        "startswith",
        "indications",
        "i",
        "key",
        "j",
        "key",
        "identifier",
        "isinstance",
        "outer",
        "outer",
        "key",
        "identifier",
        "identifier",
        "startswith",
        "identifier",
        "startswith",
        "indications",
        "i",
        "key",
        "key",
        "identifier",
        "indications",
        "indications",
        "path",
        "indications",
        "n",
        "normalize_string",
        "n",
        "n",
        "path",
        "edge",
        "path",
        "id_to_kind",
        "edge",
        "id_to_kind",
        "edge",
        "normalize_string",
        "edge",
        "bl_pred_map",
        "get",
        "s_kind",
        "t_kind",
        "key",
        "key",
        "pred_lower_to_final",
        "get",
        "new_key",
        "edge",
        "new_key",
        "all_items",
        "defaultdict",
        "i",
        "item",
        "all_items",
        "count",
        "item",
        "append",
        "i",
        "idx",
        "idx",
        "count",
        "values",
        "len",
        "idx",
        "indications",
        "path",
        "path",
        "path",
        "indications",
        "find_groups",
        "graphs",
        "chain",
        "groups",
        "i",
        "indication",
        "indications",
        "i",
        "to_group",
        "out_items",
        "append",
        "indication",
        "i",
        "grouped",
        "g",
        "g",
        "groups",
        "i",
        "g",
        "grouped",
        "extend",
        "this_group",
        "g",
        "this_group",
        "to_merge",
        "append",
        "indications",
        "g",
        "n",
        "n",
        "n",
        "indications",
        "g",
        "all_nodes",
        "len",
        "this_group",
        "sorted",
        "to_merge",
        "reverse",
        "key",
        "m",
        "len",
        "m",
        "i",
        "link",
        "to_merge",
        "link",
        "out_links",
        "out_links",
        "append",
        "link",
        "j",
        "n_groups",
        "to_merge",
        "j",
        "i",
        "parallel_link",
        "out_links",
        "parallel_link",
        "to_merge",
        "out_links",
        "append",
        "parallel_link",
        "IndexError",
        "e",
        "out_links",
        "all_nodes",
        "e",
        "this_node",
        "out_nodes",
        "out_nodes",
        "append",
        "this_node",
        "out_nodes",
        "append",
        "all_nodes",
        "e",
        "indications",
        "this_group",
        "copy",
        "out_links",
        "out_nodes",
        "out_items",
        "append",
        "out_path",
        "out_items",
        "node_id",
        "node_id",
        "node_id",
        "split",
        "normalize_string",
        "curi",
        "norm_curis",
        "indications",
        "i",
        "path",
        "indications",
        "j",
        "node",
        "path",
        "indications",
        "i",
        "fix_node_val_swaps",
        "node",
        "node",
        "is_valid_curi",
        "node",
        "normalize_string",
        "node",
        "lower_to_final",
        "keys",
        "is_valid_curi",
        "node",
        "node",
        "node",
        "tmp",
        "node",
        "normalize_string",
        "node",
        "lower_to_final",
        "keys",
        "is_valid_curi",
        "node",
        "node",
        "node",
        "tmp",
        "node",
        "normalize_string",
        "node",
        "lower_to_final",
        "keys",
        "normalize_string",
        "node",
        "lower_to_final",
        "keys",
        "node",
        "node",
        "tmp",
        "node",
        "node",
        "old_curi",
        "new_curi",
        "indications",
        "i",
        "path",
        "indications",
        "j",
        "n",
        "path",
        "n",
        "split",
        "old_curi",
        "indications",
        "i",
        "j",
        "indications",
        "i",
        "j",
        "replace",
        "old_curi",
        "new_curi",
        "k",
        "e",
        "path",
        "e",
        "split",
        "old_curi",
        "indications",
        "i",
        "k",
        "indications",
        "i",
        "k",
        "replace",
        "old_curi",
        "new_curi",
        "e",
        "split",
        "old_curi",
        "indications",
        "i",
        "k",
        "indications",
        "i",
        "k",
        "replace",
        "old_curi",
        "new_curi",
        "old_id",
        "new_id",
        "paths",
        "i",
        "path",
        "paths",
        "j",
        "n",
        "path",
        "n",
        "old_id",
        "paths",
        "i",
        "j",
        "new_id",
        "k",
        "e",
        "path",
        "e",
        "old_id",
        "paths",
        "i",
        "k",
        "new_id",
        "e",
        "old_id",
        "paths",
        "i",
        "k",
        "new_id",
        "indications",
        "path",
        "indications",
        "path",
        "path",
        "mesh_drug_id",
        "path",
        "drugbank_id",
        "n",
        "n",
        "path",
        "mesh_drug_id",
        "node_ids",
        "path",
        "update_id",
        "mesh_drug_id",
        "drugbank_id",
        "indications",
        "old_pred",
        "new_pred",
        "indications",
        "i",
        "path",
        "indications",
        "j",
        "link",
        "path",
        "link",
        "old_pred",
        "indications",
        "i",
        "j",
        "new_pred",
        "inname",
        "outname",
        "nx",
        "read_yaml",
        "inname",
        "i",
        "path",
        "indications",
        "PathTester",
        "path",
        "test_path",
        "run_format_tests",
        "AssertionError",
        "ae",
        "errors",
        "append",
        "ae",
        "to_remove",
        "append",
        "i",
        "AttributeError",
        "ae1",
        "errors",
        "append",
        "ae1",
        "to_remove",
        "append",
        "i",
        "te",
        "errors",
        "append",
        "te",
        "to_remove",
        "append",
        "i",
        "index",
        "to_remove",
        "indications",
        "remove",
        "indications",
        "index",
        "insert_drugbank_curi",
        "indications",
        "i",
        "path",
        "indications",
        "PathTester",
        "path",
        "test_path",
        "set_message",
        "test_path",
        "run_identifier_tests",
        "AssertionError",
        "ae",
        "j",
        "node",
        "path",
        "indications",
        "i",
        "fix_node_val_swaps",
        "node",
        "indications",
        "i",
        "PathTester",
        "path",
        "test_path",
        "set_message",
        "test_path",
        "run_identifier_tests",
        "AssertionError",
        "ae1",
        "errors",
        "append",
        "ae1",
        "to_remove",
        "append",
        "i",
        "index",
        "to_remove",
        "indications",
        "remove",
        "indications",
        "index",
        "i",
        "path",
        "indications",
        "PathTester",
        "path",
        "test_path",
        "set_message",
        "test_path",
        "run_consistency_tests",
        "AssertionError",
        "ae",
        "errors",
        "append",
        "ae",
        "to_remove",
        "append",
        "i",
        "index",
        "to_remove",
        "indications",
        "remove",
        "indications",
        "index",
        "validate_node_info",
        "indications",
        "convert_all_nodelabels",
        "indications",
        "prep_predicates",
        "indications",
        "convert_all_predicates",
        "indications",
        "fix_multi_drug",
        "indications",
        "bad_curi",
        "good_curi",
        "common_curi_problems",
        "update_curi",
        "bad_curi",
        "good_curi",
        "indications",
        "path",
        "indications",
        "PathTester",
        "path",
        "test_path",
        "set_message",
        "test_path",
        "run_data_model_tests",
        "AssertionError",
        "ae",
        "errors",
        "append",
        "ae",
        "errors",
        "format",
        "len",
        "errors",
        "error",
        "errors",
        "error",
        "end",
        "nx",
        "write_yaml",
        "indications",
        "outname",
        "indent",
        "run_tests_fix_and_write"
    ],
    "literals": [
        "'utils/dmdb_to_bl_map.csv'",
        "''",
        "' '",
        "'start_label'",
        "'start_bl'",
        "'end_label'",
        "'end_bl'",
        "'start_bl'",
        "'end_bl'",
        "'sem_type'",
        "'type_bl'",
        "'start_bl'",
        "'end_bl'",
        "'sem_type'",
        "'type_bl'",
        "''",
        "' '",
        "'nodes'",
        "'label'",
        "'label'",
        "'links'",
        "'key'",
        "'\\xa0'",
        "' '",
        "'key'",
        "'graph'",
        "'drugbank'",
        "'nodes'",
        "'id'",
        "'links'",
        "'source'",
        "'links'",
        "'target'",
        "'DB'",
        "'DB:'",
        "'DB:'",
        "'DB'",
        "'DB:'",
        "'DB:'",
        "'id'",
        "'label'",
        "'nodes'",
        "'links'",
        "'source'",
        "'target'",
        "'key'",
        "'key'",
        "'key'",
        "'graph'",
        "'drugbank'",
        "'graph'",
        "'disease_mesh'",
        "'links'",
        "'id'",
        "'nodes'",
        "'source'",
        "'target'",
        "'links'",
        "'nodes'",
        "':'",
        "':'",
        "'nodes'",
        "'nodes'",
        "'id'",
        "'label'",
        "'name'",
        "'id'",
        "'id'",
        "'name'",
        "'name'",
        "'id'",
        "'label'",
        "'id'",
        "'id'",
        "'label'",
        "'label'",
        "'name'",
        "'label'",
        "'label'",
        "'label'",
        "'name'",
        "'name'",
        "'nodes'",
        "'id'",
        "':'",
        "'nodes'",
        "'id'",
        "'nodes'",
        "'id'",
        "':'",
        "':'",
        "'links'",
        "'source'",
        "':'",
        "'links'",
        "'source'",
        "'links'",
        "'source'",
        "':'",
        "':'",
        "'target'",
        "':'",
        "'links'",
        "'target'",
        "'links'",
        "'target'",
        "':'",
        "':'",
        "'nodes'",
        "'id'",
        "'nodes'",
        "'id'",
        "'links'",
        "'source'",
        "'links'",
        "'source'",
        "'target'",
        "'links'",
        "'target'",
        "'graph'",
        "'drug_mesh'",
        "'graph'",
        "'drugbank'",
        "','",
        "'graph'",
        "'drug_mesh'",
        "'id'",
        "'nodes'",
        "'graph'",
        "'drugbank'",
        "'links'",
        "'key'",
        "'links'",
        "'key'",
        "'indication_paths.yaml'",
        "'test_out.yaml'",
        "'Uniprot'",
        "'UniProt'",
        "'nodes'",
        "'nodes'",
        "'Build Unsuccessful'",
        "'There were {} paths that produced errors'",
        "'Please see error messages below\\n'",
        "'\\n\\n'",
        "'Build Successful'",
        "'__main__'"
    ],
    "variables": [
        "bl_map",
        "lower_to_final",
        "norm_curis",
        "pred_lower_to_final",
        "old_to_bl",
        "old_to_bl",
        "lower_to_final",
        "bl_pred_map",
        "label_lower",
        "node",
        "key",
        "lower_key",
        "edge",
        "drugbank_keys",
        "outer",
        "identifier",
        "identifier",
        "id_to_kind",
        "s_kind",
        "t_kind",
        "key",
        "new_key",
        "new_key",
        "edge",
        "count",
        "graphs",
        "groups",
        "to_group",
        "grouped",
        "out_items",
        "this_group",
        "to_merge",
        "all_nodes",
        "all_nodes",
        "n_groups",
        "to_merge",
        "out_links",
        "parallel_link",
        "out_nodes",
        "this_node",
        "out_path",
        "out_path",
        "out_path",
        "curi",
        "j",
        "tmp",
        "node",
        "node",
        "tmp",
        "node",
        "node",
        "tmp",
        "node",
        "node",
        "mesh_drug_id",
        "drugbank_id",
        "node_ids",
        "new_drug_id",
        "indications",
        "common_curi_problems",
        "errors",
        "to_remove",
        "test_path",
        "to_remove",
        "indications",
        "test_path",
        "j",
        "path",
        "test_path",
        "to_remove",
        "test_path",
        "to_remove",
        "test_path"
    ],
    "comments": [
        "Define some globals for use in this script",
        "Update to allow for mappting from older Node Types",
        "Make a map for mapping from older predicates",
        "DB003142 becomes DB:DB003142",
        "Drugbank can be Nonetype",
        "Add paths with single instance",
        "Skip paths that have already been grouped",
        "Group paths that need it",
        "those about to be grouped shouldn't be grouped on future iterations",
        "prep the links to merge",
        "Group the links",
        "Map from id to info for all nodes in the parallel paths",
        "Add new links",
        "Check parallel paths to ensure link is same",
        "Only add parallel links in not in original (ensures disease at end of path)",
        "In the case that parallel paths are of shorter length",
        "See if the node ID is elsewhere...",
        "Swapped with NAME?",
        "Swapped with LABEL?",
        "If node ID is ok, but Label is not, test to see if name and label are swapped",
        "See if the mesh is a multi-compound drug and make sure drugbank exists",
        "If the path/node uses the multiple MESH ids then set all instances to the drugbank id",
        "Run initial tests for Format",
        "Remove problems and Continue",
        "Clean up drugbank IDs",
        "Test Nodes",
        "Remove problems and Continue",
        "Run Path Consistency Tests",
        "Remove problems and Continue",
        "Run tests for Biolink consistency"
    ],
    "docstrings": [
        "\"\"\"\n    Checks a node for common value swaps (e.g. 'name' in ID field and ID in 'name' field)\n    Returns unswapped node.\n    \"\"\""
    ],
    "functions": [
        "normalize_string",
        "normalize_string",
        "convert_all_nodelabels",
        "prep_predicates",
        "insert_drugbank_curi",
        "convert_all_predicates",
        "find_groups",
        "merge_branching_paths",
        "is_valid_curi",
        "validate_node_info",
        "fix_node_val_swaps",
        "update_curi",
        "update_id",
        "fix_multi_drug",
        "update_predicate",
        "run_tests_fix_and_write"
    ],
    "classes": []
}