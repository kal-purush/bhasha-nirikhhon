{
    "identifiers": [
        "mock",
        "MagicMock",
        "uuid",
        "rest_framework",
        "test",
        "APITestCase",
        "collections",
        "OrderedDict",
        "rest_framework",
        "status",
        "pendulum",
        "concrete_datastore",
        "api",
        "v1",
        "filters",
        "FilterSupportingOrBackend",
        "FilterSupportingRangeBackend",
        "concrete_datastore",
        "concrete",
        "models",
        "User",
        "UserConfirmation",
        "Project",
        "Skill",
        "DefaultDivider",
        "DIVIDER_MODEL",
        "Category",
        "django",
        "test",
        "override_settings",
        "concrete_datastore",
        "api",
        "v1",
        "datetime",
        "format_datetime",
        "override_settings",
        "DEBUG",
        "APITestCase",
        "User",
        "objects",
        "create_user",
        "user",
        "set_password",
        "user",
        "save",
        "UserConfirmation",
        "objects",
        "create",
        "user",
        "user",
        "confirmed",
        "save",
        "client",
        "post",
        "url",
        "resp",
        "data",
        "assertEqual",
        "Project",
        "objects",
        "count",
        "client",
        "post",
        "url_projects",
        "HTTP_AUTHORIZATION",
        "format",
        "token",
        "assertEqual",
        "resp",
        "status_code",
        "status",
        "HTTP_201_CREATED",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "Project",
        "objects",
        "count",
        "client",
        "get",
        "url_projects",
        "HTTP_AUTHORIZATION",
        "format",
        "token",
        "assertEqual",
        "resp",
        "status_code",
        "status",
        "HTTP_200_OK",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "resp",
        "json",
        "assertEqual",
        "Project",
        "objects",
        "count",
        "client",
        "post",
        "url_projects",
        "HTTP_AUTHORIZATION",
        "format",
        "token",
        "assertEqual",
        "resp",
        "status_code",
        "status",
        "HTTP_400_BAD_REQUEST",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "resp",
        "json",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "Project",
        "objects",
        "count",
        "assertEqual",
        "Project",
        "objects",
        "count",
        "client",
        "post",
        "url_projects",
        "HTTP_AUTHORIZATION",
        "format",
        "token",
        "assertEqual",
        "resp",
        "status_code",
        "status",
        "HTTP_400_BAD_REQUEST",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "resp",
        "json",
        "msg",
        "resp",
        "content",
        "assertEqual",
        "Project",
        "objects",
        "count"
    ],
    "literals": [
        "'johndoe@netsach.org'",
        "'plop'",
        "'/api/v1.1/auth/login/'",
        "\"email\"",
        "\"johndoe@netsach.org\"",
        "\"password\"",
        "\"plop\"",
        "'token'",
        "'/api/v1.1/project/'",
        "\"name\"",
        "\"Projects2\"",
        "\"ip_address\"",
        "\"127.0.0.1\"",
        "\"description\"",
        "\"description de mon projet\"",
        "\"skills\"",
        "\"members\"",
        "'Token {}'",
        "f'{url_projects}?ip_address=127.0.0.1'",
        "'Token {}'",
        "'objects_count'",
        "'/api/v1.1/project/'",
        "\"name\"",
        "\"Projects2\"",
        "\"ip_address\"",
        "\"This is the ip of my project\"",
        "\"description\"",
        "\"description de mon projet\"",
        "\"skills\"",
        "\"members\"",
        "'Token {}'",
        "'ip_address'",
        "'Enter a valid IPv4 address.'",
        "'Enter a valid IPv4 or IPv6 address.'",
        "'/api/v1.1/project/'",
        "\"name\"",
        "\"Projects2\"",
        "\"ip_address\"",
        "\"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"",
        "\"description\"",
        "\"description de mon projet\"",
        "\"skills\"",
        "\"members\"",
        "'Token {}'",
        "'ip_address'",
        "'Enter a valid IPv4 address.'"
    ],
    "variables": [
        "user",
        "url",
        "resp",
        "token",
        "url_projects",
        "resp",
        "resp",
        "url_projects",
        "resp",
        "url_projects",
        "resp"
    ],
    "comments": [
        "coding: utf-8",
        "'John',",
        "'Doe',",
        "CREATE a valid project and ensure that request is valid(201)",
        "\"date_creation\": timezone.now(),",
        "Retrieve the project by filtering",
        "CREATE a valid project with an invalid IP address",
        "\"date_creation\": timezone.now(),",
        ": Create with an ipv6 IP rather than an ipv4",
        "\"date_creation\": timezone.now(),"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "test_success_create_with_valid_ip",
        "test_failure_create_with_invalid_ip",
        "test_failure_create_with_ipv6"
    ],
    "classes": [
        "GenericIpAdressFieldTestCase"
    ]
}