{
    "identifiers": [
        "sqlalchemy",
        "db",
        "sqlalchemy",
        "orm",
        "sessionmaker",
        "declarative_base",
        "validates",
        "sqlalchemy_utils",
        "drop_database",
        "create_database",
        "database_exists",
        "sqlalchemy",
        "DDL",
        "ForeignKey",
        "db",
        "create_engine",
        "db_type",
        "device",
        "user",
        "host",
        "port",
        "db_name",
        "sock",
        "database_exists",
        "engine",
        "url",
        "drop_database",
        "engine",
        "url",
        "database_exists",
        "engine",
        "url",
        "create_database",
        "engine",
        "url",
        "declarative_base",
        "db",
        "Column",
        "db",
        "primary_key",
        "autoincrement",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "item",
        "action",
        "no_units",
        "at_price",
        "item",
        "action",
        "no_units",
        "at_price",
        "db",
        "Column",
        "db",
        "primary_key",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "db",
        "Column",
        "db",
        "metadata",
        "create_all",
        "bind",
        "engine",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "query",
        "engine",
        "connect",
        "conn",
        "conn",
        "execute",
        "db",
        "text",
        "trigger",
        "conn",
        "commit",
        "sessionmaker",
        "bind",
        "engine",
        "t",
        "transactions",
        "Transactions",
        "t",
        "session",
        "add",
        "trans",
        "session",
        "commit"
    ],
    "literals": [
        "'trigger'",
        "'mysql'",
        "'pymysql'",
        "'root'",
        "'127.0.0.1'",
        "'3306'",
        "'/tmp/mysql.sock'",
        "f\"{db_type}+{device}://{user}:@{host}:{port}/{db_name}?unix_socket={sock}\"",
        "'trans'",
        "'invetory'",
        "'create trigger update_inv '",
        "'after insert on trans '",
        "'for each row '",
        "'begin '",
        "'INSERT INTO invetory '",
        "'values (new.item, '",
        "'new.no_units * new.action, '",
        "'new.at_price * inv, '",
        "'-1 * new.at_price * new.no_units * new.action, '",
        "'0) '",
        "'ON DUPLICATE KEY UPDATE '",
        "'inv = inv + new.no_units * new.action, '",
        "'profit = profit - (new.no_units * new.at_price * new.action), '",
        "'current_value = new.at_price * (inv), '",
        "'gain = profit + current_value / f.totalspent '",
        "'from( '",
        "'select item, sum(at_price) as totalspent from invetory '",
        "'group by item '",
        "') as f '",
        "'where f.item = new.item; '",
        "'end;'",
        "'car'",
        "'car'",
        "'boat'",
        "'boat'"
    ],
    "variables": [
        "db_name",
        "db_type",
        "device",
        "user",
        "host",
        "port",
        "sock",
        "engine",
        "__tablename__",
        "id",
        "item",
        "action",
        "no_units",
        "at_price",
        "item",
        "action",
        "no_units",
        "at_price",
        "__tablename__",
        "item",
        "inv",
        "current_value",
        "profit",
        "gain",
        "query",
        "session",
        "transactions",
        "trans"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "trigger"
    ],
    "classes": [
        "Transactions",
        "Inventory"
    ]
}