{
    "identifiers": [
        "pandas",
        "pd",
        "pyomo",
        "environ",
        "po",
        "matplotlib",
        "pyplot",
        "plt",
        "oemof",
        "solph",
        "pd",
        "date_range",
        "periods",
        "freq",
        "solph",
        "EnergySystem",
        "timeindex",
        "idx",
        "infer_last_interval",
        "solph",
        "Bus",
        "label",
        "es",
        "add",
        "bel",
        "es",
        "add",
        "solph",
        "components",
        "Source",
        "label",
        "outputs",
        "bel",
        "solph",
        "Flow",
        "nominal_value",
        "fix",
        "es",
        "add",
        "solph",
        "components",
        "Sink",
        "label",
        "inputs",
        "bel",
        "solph",
        "Flow",
        "nominal_value",
        "variable_costs",
        "solph",
        "components",
        "GenericStorage",
        "label",
        "nominal_storage_capacity",
        "storage_capacity",
        "inputs",
        "bel",
        "solph",
        "Flow",
        "nominal_value",
        "inflow_capacity",
        "outputs",
        "bel",
        "solph",
        "Flow",
        "variable_costs",
        "initial_storage_level",
        "balanced",
        "loss_rate",
        "es",
        "add",
        "battery",
        "solph",
        "Model",
        "es",
        "m",
        "p",
        "ts",
        "m",
        "TIMEINDEX",
        "m",
        "GenericStorageBlock",
        "storage_content",
        "battery",
        "ts",
        "storage_capacity",
        "soc",
        "full_charging_limit",
        "m",
        "flow",
        "bel",
        "battery",
        "p",
        "ts",
        "inflow_capacity",
        "getattr",
        "m",
        "add",
        "p",
        "ts",
        "expr",
        "setattr",
        "model",
        "po",
        "Constraint",
        "model",
        "TIMEINDEX",
        "noruleinit",
        "setattr",
        "model",
        "po",
        "BuildAction",
        "rule",
        "soc_limit_rule",
        "model",
        "solve",
        "solver",
        "solph",
        "processing",
        "results",
        "model",
        "plt",
        "plot",
        "results",
        "battery",
        "label",
        "plt",
        "step",
        "results",
        "bel",
        "battery",
        "label",
        "plt",
        "legend",
        "plt",
        "grid",
        "plt",
        "figure",
        "plt",
        "plot",
        "results",
        "battery",
        "results",
        "bel",
        "battery",
        "plt",
        "grid",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "show",
        "saturating_storage_example"
    ],
    "literals": [
        "\"1/1/2023\"",
        "\"H\"",
        "\"bel\"",
        "\"source_el\"",
        "\"sink_el\"",
        "\"battery\"",
        "\"soc_limit\"",
        "\"soc_limit\"",
        "\"soc_limit_build\"",
        "\"cbc\"",
        "\"sequences\"",
        "\"r--\"",
        "\"content\"",
        "\"sequences\"",
        "\"b-\"",
        "\"20*inflow\"",
        "\"sequences\"",
        "\"sequences\"",
        "\"b-\"",
        "\"Storage content\"",
        "\"Charging power\"",
        "\"__main__\""
    ],
    "variables": [
        "idx",
        "es",
        "bel",
        "inflow_capacity",
        "full_charging_limit",
        "storage_capacity",
        "battery",
        "model",
        "soc",
        "expr",
        "results"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "create an energy system",
        "power bus",
        "Electric Storage",
        "create an optimization problem and solve it",
        "solve model",
        "create result object"
    ],
    "docstrings": [
        "\"\"\"\nGeneral description\n-------------------\nExample that shows the how to implement a `GenericStorage`\nthat charges at reduced rates for high storage contents.\n\n\nInstallation requirements\n-------------------------\nThis example requires oemof.solph (v0.5.x), install by:\n\n    pip install oemof.solph[examples]\n\n\nLicense\n-------\n`MIT license <https://github.com/oemof/oemof-solph/blob/dev/LICENSE>`_\n\"\"\""
    ],
    "functions": [
        "saturating_storage_example",
        "soc_limit_rule"
    ],
    "classes": []
}