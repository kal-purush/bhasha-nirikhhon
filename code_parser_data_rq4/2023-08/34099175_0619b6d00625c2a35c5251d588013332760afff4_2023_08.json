{
    "identifiers": [
        "asyncio",
        "sys",
        "os",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "init",
        "lib",
        "logging",
        "log",
        "set_loglevel",
        "FlowGraph",
        "scheduler",
        "AsyncScheduler",
        "Scheduler",
        "nodes",
        "Sink",
        "Resampler",
        "Indicator",
        "DataFrameSink",
        "MultiStockSource",
        "nodes",
        "studies",
        "PriceAlerts",
        "tradebot",
        "signals",
        "EndOfData",
        "Shutdown",
        "signal",
        "os",
        "signum",
        "frame",
        "signal",
        "Signals",
        "signum",
        "name",
        "signame",
        "signum",
        "scheduler",
        "scheduler",
        "stop",
        "scheduler",
        "set_loglevel",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "signal_handler",
        "FlowGraph",
        "name",
        "mode",
        "MultiStockSource",
        "name",
        "timeframe",
        "offline",
        "offset",
        "min_entries",
        "member_file",
        "fg",
        "add_node",
        "source",
        "Indicator",
        "name",
        "indicators",
        "fg",
        "add_node",
        "node_indicators",
        "PriceAlerts",
        "name",
        "file",
        "timeframe",
        "fg",
        "add_node",
        "watcher",
        "DataFrameSink",
        "name",
        "fg",
        "add_node",
        "df_sink",
        "fg",
        "register_signal_handler",
        "EndOfData",
        "Shutdown",
        "df_sink",
        "Resampler",
        "interval",
        "name",
        "fg",
        "add_node",
        "resampler",
        "fg",
        "connect",
        "resampler",
        "source",
        "fg",
        "connect",
        "source",
        "node_indicators",
        "fg",
        "connect",
        "node_indicators",
        "watcher",
        "fg",
        "connect",
        "watcher",
        "df_sink",
        "fg",
        "display",
        "Scheduler",
        "interval",
        "mode",
        "scheduler",
        "register",
        "fg",
        "scheduler",
        "run",
        "scheduler",
        "stop",
        "asyncio",
        "run",
        "main"
    ],
    "literals": [
        "'../'",
        "f'Signal handler called with signal {signame} ({signum})'",
        "'debug'",
        "'FlowGraph'",
        "'backtest'",
        "'Source'",
        "'1d'",
        "'watchlist.json'",
        "'Indicators'",
        "'tagname'",
        "'EMA200'",
        "'type'",
        "'EMA'",
        "'length'",
        "'column'",
        "'close'",
        "'Alerts'",
        "'./runtime/lists/watchlist.json'",
        "'1D'",
        "'DF-Sink'",
        "'Resampler'",
        "'1s'",
        "'backtest'",
        "\"__main__\""
    ],
    "variables": [
        "signame",
        "fg",
        "source",
        "node_indicators",
        "watcher",
        "df_sink",
        "resampler",
        "scheduler"
    ],
    "comments": [
        "import django",
        "os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'settings')",
        "os.environ[\"DJANGO_ALLOW_ASYNC_UNSAFE\"] = \"true\"",
        "django.setup()",
        "Set the signal handler and a 5-second alarm",
        "Create a flowgraph",
        "Add a dataframe source",
        "Add a column filter node",
        "filterNode = ColumnFilter(name='Formatter', map = {'close': 'close'})",
        "fg.add_node(filterNode)",
        "Add indicator nodes",
        "Add the alerting node",
        "Add some sink nodes",
        "Add frequency scaling",
        "Running on a 1min 30s scale (rate of update of NSE website data)",
        "connect the nodes together",
        "Create a scheduler",
        "1 second scheduler",
        "register some flowgraphs with the scheduler",
        "start the scheduler",
        "await asyncio.sleep(scheduler.interval)",
        "thread.join()",
        "main()"
    ],
    "docstrings": [
        "\"\"\"\nThe bot checks if some alerts have been triggered\n\"\"\""
    ],
    "functions": [
        "signal_handler",
        "main"
    ],
    "classes": []
}