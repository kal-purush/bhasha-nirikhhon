{
    "identifiers": [
        "GrpcInstrumentation",
        "GrpcInstrumentation",
        "instrumentation",
        "instrumentation",
        "GrpcTransport",
        "grpc",
        "GrpcTesterClient",
        "InMemorySpanExporter",
        "NodeTracerProvider",
        "SimpleSpanProcessor",
        "protoLoader",
        "path",
        "context",
        "ContextManager",
        "propagation",
        "SpanKind",
        "trace",
        "W3CTraceContextPropagator",
        "AsyncHooksContextManager",
        "startServer",
        "assertExportedSpans",
        "assertNoSpansExported",
        "SpanAssertionFunction",
        "TestFunction",
        "InMemorySpanExporter",
        "path",
        "__dirname",
        "grpc",
        "GrpcTesterClient",
        "GrpcTransport",
        "grpc",
        "protoLoader",
        "PROTO_PATH",
        "options",
        "grpc",
        "packageDefinition",
        "startServer",
        "proto",
        "grpc",
        "key",
        "isNaN",
        "grpc",
        "key",
        "key",
        "key",
        "key",
        "key",
        "grpc",
        "key",
        "grpc",
        "key",
        "codes",
        "NO_ERROR",
        "grpc",
        "codes",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestWithRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertNoSpansExported",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestNoRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertNoSpansExported",
        "describe",
        "grpc",
        "NodeTracerProvider",
        "provider",
        "SimpleSpanProcessor",
        "memoryExporter",
        "before",
        "propagation",
        "W3CTraceContextPropagator",
        "instrumentation",
        "provider",
        "beforeEach",
        "memoryExporter",
        "contextManager",
        "AsyncHooksContextManager",
        "context",
        "contextManager",
        "describe",
        "beforeEach",
        "instrumentation",
        "client",
        "createClient",
        "server",
        "loadAndStartServer",
        "afterEach",
        "done",
        "context",
        "server",
        "instrumentation",
        "done",
        "describe",
        "status",
        "client",
        "status",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "act",
        "input",
        "request",
        "input",
        "e",
        "e",
        "key",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "input",
        "key",
        "expectedResultCode",
        "assertSpans",
        "it",
        "key",
        "provider",
        "SpanKind",
        "context",
        "trace",
        "context",
        "span",
        "trace",
        "context",
        "rootSpan",
        "rootSpan",
        "span",
        "act",
        "input",
        "request",
        "input",
        "e",
        "e",
        "key",
        "assertSpans",
        "memoryExporter",
        "expectedResultCode",
        "rootSpan",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestNoRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestWithRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "beforeEach",
        "done",
        "instrumentation",
        "server",
        "loadAndStartServer",
        "loadedServer",
        "server",
        "loadedServer",
        "done",
        "afterEach",
        "instrumentation",
        "shouldNotCreateSpans",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "describe",
        "input",
        "client",
        "input",
        "call",
        "input",
        "call",
        "input",
        "call",
        "call",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "act",
        "input",
        "response",
        "input",
        "e",
        "e",
        "key",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "provider",
        "SpanKind",
        "context",
        "trace",
        "context",
        "span",
        "trace",
        "context",
        "rootSpan",
        "rootSpan",
        "span",
        "act",
        "input",
        "response",
        "input",
        "e",
        "e",
        "key",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "rootSpan",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestNoRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestWithRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "beforeEach",
        "done",
        "instrumentation",
        "server",
        "loadAndStartServer",
        "loadedServer",
        "server",
        "loadedServer",
        "done",
        "afterEach",
        "instrumentation",
        "shouldNotCreateSpans",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "describe",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "done",
        "client",
        "input",
        "serverStream",
        "message",
        "message",
        "input",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "err",
        "done",
        "err",
        "done",
        "serverStream",
        "completeCallback",
        "serverStream",
        "completeCallback",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "done",
        "provider",
        "SpanKind",
        "context",
        "trace",
        "context",
        "span",
        "trace",
        "context",
        "rootSpan",
        "rootSpan",
        "span",
        "client",
        "input",
        "serverStream",
        "message",
        "message",
        "input",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "rootSpan",
        "err",
        "done",
        "err",
        "done",
        "serverStream",
        "completeCallback",
        "serverStream",
        "completeCallback",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestNoRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestWithRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "beforeEach",
        "done",
        "instrumentation",
        "server",
        "loadAndStartServer",
        "loadedServer",
        "server",
        "loadedServer",
        "done",
        "afterEach",
        "instrumentation",
        "shouldNotCreateSpans",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "describe",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "done",
        "client",
        "bidiStream",
        "message",
        "message",
        "input",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "err",
        "done",
        "err",
        "done",
        "bidiStream",
        "completeHandler",
        "bidiStream",
        "completeHandler",
        "bidiStream",
        "input",
        "bidiStream",
        "input",
        "bidiStream",
        "input",
        "key",
        "expectedSpanStatus",
        "assertSpans",
        "it",
        "key",
        "done",
        "provider",
        "SpanKind",
        "context",
        "trace",
        "context",
        "span",
        "trace",
        "context",
        "rootSpan",
        "rootSpan",
        "span",
        "client",
        "assertSpans",
        "memoryExporter",
        "expectedSpanStatus",
        "rootSpan",
        "err",
        "done",
        "err",
        "done",
        "bidiStream",
        "message",
        "message",
        "input",
        "bidiStream",
        "completeHandler",
        "bidiStream",
        "completeHandler",
        "bidiStream",
        "input",
        "bidiStream",
        "input",
        "bidiStream",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestNoRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "getStatusCodeTestData",
        "statusCodeTestWithRootSpan",
        "input",
        "key",
        "expectedResultCode",
        "assertExportedSpans",
        "describe",
        "beforeEach",
        "done",
        "instrumentation",
        "server",
        "loadAndStartServer",
        "loadedServer",
        "server",
        "loadedServer",
        "done",
        "afterEach",
        "instrumentation",
        "shouldNotCreateSpans",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "describe",
        "beforeEach",
        "instrumentation",
        "instrumentation",
        "instrumentation",
        "client",
        "createClient",
        "server",
        "loadAndStartServer",
        "it",
        "client",
        "NO_ERROR",
        "assertNoSpansExported",
        "memoryExporter",
        "grpc",
        "it",
        "client",
        "NO_ERROR",
        "assertNoSpansExported",
        "memoryExporter",
        "grpc",
        "it",
        "done",
        "client",
        "NO_ERROR",
        "stream",
        "NO_ERROR",
        "stream",
        "stream",
        "assertNoSpansExported",
        "memoryExporter",
        "grpc",
        "done",
        "afterEach",
        "done",
        "instrumentation",
        "context",
        "server",
        "instrumentation",
        "done",
        "describe",
        "beforeEach",
        "instrumentation",
        "instrumentation",
        "client",
        "createClient",
        "server",
        "loadAndStartServer",
        "it",
        "client",
        "NO_ERROR",
        "memoryExporter",
        "spans",
        "afterEach",
        "done",
        "instrumentation",
        "context",
        "server",
        "instrumentation",
        "done"
    ],
    "literals": [
        "'../src'",
        "'@protobuf-ts/grpc-transport'",
        "'@grpc/grpc-js'",
        "'./proto/ts/fixtures/grpc-test.client'",
        "'@opentelemetry/sdk-trace-node'",
        "'@grpc/proto-loader'",
        "'path'",
        "'assert'",
        "'@opentelemetry/api'",
        "'@opentelemetry/core'",
        "'@opentelemetry/context-async-hooks'",
        "'./helper'",
        "'./protobuf-ts-utils'",
        "'./fixtures/grpc-test.proto'",
        "'localhost:3333'",
        "string",
        "'OK'",
        "'OK'",
        "'with root span'",
        "'without root span'",
        "'#grpc-protobuf'",
        "'client'",
        "'makeUnaryRequest()'",
        "string",
        "'with status code: '",
        "'pkg_test.GrpcTester'",
        "'UnaryMethod'",
        "string",
        "'with status code: '",
        "'default'",
        "'TestSpan'",
        "'pkg_test.GrpcTester'",
        "'UnaryMethod'",
        "'should create root client span and server child span'",
        "'should create child client span when parent span exists'",
        "'should not create any spans when disabled'",
        "'makeClientStreamRequest()'",
        "string",
        "'with status code: '",
        "'pkg_test.GrpcTester'",
        "'ClientStreamMethod'",
        "string",
        "'with status code: '",
        "'default'",
        "'TestSpan'",
        "'pkg_test.GrpcTester'",
        "'ClientStreamMethod'",
        "'should create root client span and server child span'",
        "'should create child client span when parent span exists'",
        "'should not create any spans when disabled'",
        "'makeServerStreamRequest()'",
        "string",
        "'with status code: '",
        "'pkg_test.GrpcTester'",
        "'ServerStreamMethod'",
        "string",
        "'with status code: '",
        "'default'",
        "'TestSpan'",
        "'pkg_test.GrpcTester'",
        "'ServerStreamMethod'",
        "'should create root client span and server child span'",
        "'should create child client span when parent span exists'",
        "'should not create any spans when disabled'",
        "'makeBidiStreamRequest()'",
        "string",
        "'with status code: '",
        "'pkg_test.GrpcTester'",
        "'BidiStreamMethod'",
        "string",
        "'with status code: '",
        "'default'",
        "'TestSpan'",
        "'pkg_test.GrpcTester'",
        "'BidiStreamMethod'",
        "'should create root client span and server child span'",
        "'should create child client span when parent span exists'",
        "'should not create any spans when disabled'",
        "'should not produce telemetry when ignored via config'",
        "'UnaryMethod'",
        "string",
        "'BidiStreamMethod'",
        "'when filtered by exact string'",
        "'pkg_test.GrpcTester'",
        "'UnaryMethod'",
        "'when filtered by RegExp'",
        "'pkg_test.GrpcTester'",
        "'UnaryMethod'",
        "'when filtered by predicate'",
        "'pkg_test.GrpcTester'",
        "'UnaryMethod'",
        "'should capture metadata when set up in config'",
        "'client_metadata_key'",
        "'server_metadata_key'",
        "'client_metadata_key'",
        "'server_metadata_key'",
        "'should capture client metadata'",
        "'client_metadata_value'",
        "'rpc.request.metadata.client_metadata_key'",
        "'client_metadata_value'"
    ],
    "variables": [
        "instrumentation",
        "memoryExporter",
        "PROTO_PATH",
        "NO_ERROR",
        "options",
        "packageDefinition",
        "proto",
        "codes",
        "client",
        "server",
        "provider",
        "contextManager",
        "request",
        "span",
        "rootSpan",
        "request",
        "call",
        "response",
        "span",
        "rootSpan",
        "response",
        "serverStream",
        "span",
        "rootSpan",
        "serverStream",
        "bidiStream",
        "span",
        "rootSpan",
        "bidiStream",
        "stream",
        "spans"
    ],
    "comments": [
        "Reloading from proto is needed as only servers loaded after the",
        "instrumentation is enabled will be instrumented.",
        "Name of the key used in the test (OK, UNAUTHENTICATED, DATA_LOSS, ...)",
        "Input for the server implementation that will provoke the status code from 'key'",
        "The result code that should be present on the created span",
        "Remove 'OK' as the test server has special behavior to provoke an 'OK' response",
        "Create the test data",
        "Push 'OK' with special input to provoke 'OK' response from test-server",
        "Act",
        "Assert success results",
        "Assert failure results",
        "Assert span data",
        "Arrange",
        "Act",
        "Assert success results",
        "Assert failure results",
        "Assert",
        "Act",
        "Assert success results",
        "Assert failure results",
        "Arrange",
        "Act",
        "Assert success results",
        "Assert failure results",
        "Assert",
        "catch error and call done() to ensure an error message",
        "is shown in the test results instead of a test timeout",
        "Arrange",
        "Act",
        "Assert",
        "catch error and call done() to ensure an error message",
        "is shown in the test results instead of a test timeout",
        "catch error and call done() to ensure an error message",
        "is shown in the test results instead of a test timeout",
        "Arrange",
        "Act",
        "catch error and call done() to ensure an error message",
        "is shown in the test results instead of a test timeout"
    ],
    "docstrings": [
        "* Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Creates a client generated via protobuf-ts that is using the {@link grpc.Client} class\n * directly.",
        "* Loads the server from proto and starts it on port 3333.",
        "* Creates a list of test data that includes all possible cases of status codes\n * returned by the server, the input for the server to provoke the status codes,\n * and the expected result code that should be present on the span.",
        "* Creates tests that assert that no spans are created.\n * @param statusCodeTestWithRootSpan function that creates tests that include a root span\n * @param statusCodeTestNoRootSpan function that creates tests that do not include a root span"
    ],
    "functions": [
        "createClient",
        "loadAndStartServer",
        "getStatusCodeTestData",
        "shouldNotCreateSpans",
        "act",
        "statusCodeTestNoRootSpan",
        "statusCodeTestWithRootSpan",
        "act",
        "statusCodeTestNoRootSpan",
        "statusCodeTestWithRootSpan",
        "statusCodeTestNoRootSpan",
        "completeCallback",
        "statusCodeTestWithRootSpan",
        "completeCallback",
        "statusCodeTestNoRootSpan",
        "completeHandler",
        "statusCodeTestWithRootSpan",
        "completeHandler"
    ],
    "classes": []
}