{
    "identifiers": [
        "Types",
        "DocumentNode",
        "gql",
        "gql",
        "gql",
        "gql",
        "gql",
        "gql",
        "gql",
        "gql",
        "gql",
        "BeamFragmentDoc",
        "gql",
        "BeamFragmentDoc",
        "gql",
        "BeamFragmentDoc",
        "gql",
        "ContentBlockFragmentDoc",
        "gql",
        "BlockStorageFragmentDoc",
        "gql",
        "BeamFragmentDoc",
        "gql",
        "BeamFragmentDoc",
        "gql",
        "ContentBlockFragmentDoc",
        "gql",
        "ContentBlockFragmentDoc",
        "gql",
        "ReflectFragmentDoc",
        "gql",
        "ReflectFragmentDoc",
        "gql",
        "ReflectFragmentDoc",
        "gql",
        "ReflectFragmentDoc",
        "gql",
        "ReflectFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "gql",
        "gql",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "gql",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "UserProfileFragmentDoc",
        "gql",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AppReleaseFragmentDoc",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AppReleaseFragmentDoc",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AppReleaseFragmentDoc",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "gql",
        "AppReleaseFragmentDoc",
        "AkashaAppFragmentDoc",
        "UserProfileFragmentDoc",
        "doc",
        "vars",
        "options",
        "requester",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetBeamsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetBeamsByAuthorDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetBeamByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetContentBlockByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetBlockStorageByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateBeamDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateBeamDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateContentBlockDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateContentBlockDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetReflectionsFromBeamDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetReflectionsByAuthorDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetReflectReflectionsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateReflectDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateAkashaReflectDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetProfileByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetProfileByDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetProfilesDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetInterestsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetInterestsByDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetInterestsByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetFollowingListByDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetFollowersListByDidDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetMyProfileDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetFollowDocumentDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateProfileDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateProfileDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateInterestsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateInterestsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateFollowDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateFollowDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateAppDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateAppDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetAppsDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetAppsByIdDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "CreateAppReleaseDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "UpdateAppReleaseDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetAppsReleasesDocument",
        "variables",
        "options",
        "Types",
        "variables",
        "Types",
        "options",
        "Types",
        "requester",
        "Types",
        "Types",
        "GetAppReleaseByIdDocument",
        "variables",
        "options",
        "Types",
        "getSdk"
    ],
    "literals": [
        "'@akashaorg/typings/sdk/graphql-operation-types-new'",
        "'graphql'",
        "'graphql-tag'",
        "fragment BeamFragment on AkashaBeam {\n  id\n  reflectionsCount\n  active\n  embeddedBeam\n  author {\n    id\n    isViewer\n  }\n  content {\n    blockID\n    order\n  }\n  tags\n  version\n  createdAt\n  nsfw\n}",
        "fragment ContentBlockFragment on AkashaContentBlock {\n  content {\n    propertyType\n    value\n    label\n  }\n  active\n  appVersion {\n    application {\n      name\n      displayName\n      id\n    }\n    applicationID\n    id\n    version\n  }\n  appVersionID\n  createdAt\n  kind\n  author {\n    id\n    isViewer\n  }\n  version\n  nsfw\n}",
        "fragment BlockStorageFragment on AkashaBlockStorage {\n  appVersionID\n  appVersion {\n    application {\n      name\n      displayName\n      id\n    }\n    applicationID\n    id\n    version\n  }\n  createdAt\n  active\n  version\n  content {\n    propertyType\n    label\n    value\n  }\n  author {\n    id\n    isViewer\n  }\n  blockID\n  block {\n    id\n    active\n    author {\n      id\n      isViewer\n    }\n  }\n}",
        "fragment ReflectFragment on AkashaReflect {\n  author {\n    id\n    isViewer\n  }\n  version\n  active\n  content {\n    provider\n    property\n    value\n  }\n  isReply\n  reflection\n  beam {\n    id\n    author {\n      id\n      isViewer\n    }\n  }\n  nsfw\n}",
        "fragment UserProfileFragment on AkashaProfile {\n  id\n  did {\n    id\n    isViewer\n  }\n  name\n  links {\n    href\n    label\n  }\n  background {\n    alternatives {\n      src\n      width\n      height\n    }\n    default {\n      src\n      width\n      height\n    }\n  }\n  description\n  avatar {\n    default {\n      src\n      width\n      height\n    }\n    alternatives {\n      src\n      width\n      height\n    }\n  }\n  followers(last: 5) {\n    pageInfo {\n      startCursor\n      endCursor\n      hasPreviousPage\n      hasNextPage\n    }\n  }\n  createdAt\n  nsfw\n}",
        "fragment AkashaAppFragment on AkashaApp {\n  id\n  applicationType\n  description\n  licence\n  name\n  displayName\n  keywords\n  releases {\n    edges {\n      node {\n        id\n        createdAt\n        source\n        version\n      }\n    }\n  }\n  releasesCount\n  author {\n    id\n    isViewer\n    akashaProfile {\n      ...UserProfileFragment\n    }\n  }\n  contributors {\n    id\n    isViewer\n    akashaProfile {\n      ...UserProfileFragment\n    }\n  }\n}",
        "fragment AppReleaseFragment on AkashaAppRelease {\n  application {\n    ...AkashaAppFragment\n  }\n  applicationID\n  id\n  source\n  version\n  createdAt\n}",
        "query GetBeams($after: String, $before: String, $first: Int, $last: Int, $filters: AkashaBeamFiltersInput, $sorting: AkashaBeamSortingInput) {\n  akashaBeamIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    filters: $filters\n    sorting: $sorting\n  ) {\n    edges {\n      node {\n        ...BeamFragment\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n    ${BeamFragmentDoc}",
        "query GetBeamsByAuthorDid($id: ID!, $after: String, $before: String, $first: Int, $last: Int, $filters: AkashaBeamFiltersInput, $sorting: AkashaBeamSortingInput) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaBeamList(\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n        filters: $filters\n        sorting: $sorting\n      ) {\n        edges {\n          node {\n            ...BeamFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n      isViewer\n    }\n  }\n}\n    ${BeamFragmentDoc}",
        "query GetBeamById($id: ID!) {\n  node(id: $id) {\n    ... on AkashaBeam {\n      ...BeamFragment\n    }\n  }\n}\n    ${BeamFragmentDoc}",
        "query GetContentBlockById($id: ID!) {\n  node(id: $id) {\n    ... on AkashaContentBlock {\n      ...ContentBlockFragment\n    }\n  }\n}\n    ${ContentBlockFragmentDoc}",
        "query GetBlockStorageById($id: ID!) {\n  node(id: $id) {\n    ... on AkashaBlockStorage {\n      ...BlockStorageFragment\n    }\n  }\n}\n    ${BlockStorageFragmentDoc}",
        "mutation CreateBeam($i: CreateAkashaBeamInput!) {\n  createAkashaBeam(input: $i) {\n    document {\n      ...BeamFragment\n    }\n    clientMutationId\n  }\n}\n    ${BeamFragmentDoc}",
        "mutation UpdateBeam($i: UpdateAkashaBeamInput!) {\n  updateAkashaBeam(input: $i) {\n    document {\n      ...BeamFragment\n    }\n    clientMutationId\n  }\n}\n    ${BeamFragmentDoc}",
        "mutation CreateContentBlock($i: CreateAkashaContentBlockInput!) {\n  createAkashaContentBlock(input: $i) {\n    document {\n      ...ContentBlockFragment\n    }\n    clientMutationId\n  }\n}\n    ${ContentBlockFragmentDoc}",
        "mutation UpdateContentBlock($i: UpdateAkashaContentBlockInput!) {\n  updateAkashaContentBlock(input: $i) {\n    document {\n      ...ContentBlockFragment\n    }\n    clientMutationId\n  }\n}\n    ${ContentBlockFragmentDoc}",
        "query GetReflectionsFromBeam($id: ID!, $after: String, $before: String, $first: Int, $last: Int) {\n  node(id: $id) {\n    ... on AkashaBeam {\n      reflections(after: $after, before: $before, first: $first, last: $last) {\n        edges {\n          node {\n            ...ReflectFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n    }\n  }\n}\n    ${ReflectFragmentDoc}",
        "query GetReflectionsByAuthorDid($id: ID!, $after: String, $before: String, $first: Int, $last: Int) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaReflectList(after: $after, before: $before, first: $first, last: $last) {\n        edges {\n          node {\n            ...ReflectFragment\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n      isViewer\n    }\n  }\n}\n    ${ReflectFragmentDoc}",
        "query GetReflectReflections($id: String!, $after: String, $before: String, $first: Int, $last: Int, $sorting: AkashaReflectSortingInput) {\n  akashaReflectIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    filters: {where: {reflection: {equalTo: $id}}}\n    sorting: $sorting\n  ) {\n    edges {\n      node {\n        ...ReflectFragment\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n    ${ReflectFragmentDoc}",
        "mutation CreateReflect($i: CreateAkashaReflectInput!) {\n  createAkashaReflect(input: $i) {\n    document {\n      ...ReflectFragment\n    }\n    clientMutationId\n  }\n}\n    ${ReflectFragmentDoc}",
        "mutation UpdateAkashaReflect($i: UpdateAkashaReflectInput!) {\n  updateAkashaReflect(input: $i) {\n    document {\n      ...ReflectFragment\n    }\n    clientMutationId\n  }\n}\n    ${ReflectFragmentDoc}",
        "query GetProfileByID($id: ID!) {\n  node(id: $id) {\n    ... on AkashaProfile {\n      ...UserProfileFragment\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetProfileByDid($id: ID!) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaProfile {\n        ...UserProfileFragment\n      }\n      isViewer\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetProfiles($after: String, $before: String, $first: Int, $last: Int, $filters: AkashaProfileFiltersInput, $sorting: AkashaProfileSortingInput) {\n  akashaProfileIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    filters: $filters\n    sorting: $sorting\n  ) {\n    edges {\n      node {\n        ...UserProfileFragment\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetInterests($after: String, $before: String, $first: Int, $last: Int) {\n  akashaProfileInterestsIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n  ) {\n    edges {\n      node {\n        topics {\n          value\n          labelType\n        }\n        did {\n          id\n        }\n        id\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}",
        "query GetInterestsByDid($id: ID!) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaProfileInterests {\n        topics {\n          value\n          labelType\n        }\n        did {\n          id\n        }\n        id\n      }\n      isViewer\n    }\n  }\n}",
        "query GetInterestsById($id: ID!) {\n  node(id: $id) {\n    ... on AkashaProfileInterests {\n      topics {\n        value\n        labelType\n      }\n      did {\n        id\n      }\n      id\n    }\n  }\n}",
        "query GetFollowingListByDid($id: ID!, $after: String, $before: String, $first: Int, $last: Int, $sorting: AkashaFollowSortingInput) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaFollowList(\n        after: $after\n        before: $before\n        first: $first\n        last: $last\n        filters: {where: {isFollowing: {equalTo: true}}}\n        sorting: $sorting\n      ) {\n        edges {\n          node {\n            id\n            isFollowing\n            profileID\n            profile {\n              ...UserProfileFragment\n            }\n          }\n        }\n        pageInfo {\n          startCursor\n          endCursor\n          hasNextPage\n          hasPreviousPage\n        }\n      }\n      isViewer\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetFollowersListByDid($id: ID!, $after: String, $before: String, $first: Int, $last: Int, $sorting: AkashaFollowSortingInput) {\n  node(id: $id) {\n    ... on CeramicAccount {\n      akashaProfile {\n        followers(\n          after: $after\n          before: $before\n          first: $first\n          last: $last\n          filters: {where: {isFollowing: {equalTo: true}}}\n          sorting: $sorting\n        ) {\n          edges {\n            node {\n              id\n              isFollowing\n              profileID\n              profile {\n                ...UserProfileFragment\n              }\n            }\n          }\n          pageInfo {\n            startCursor\n            endCursor\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n      isViewer\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetMyProfile {\n  viewer {\n    akashaProfile {\n      ...UserProfileFragment\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "query GetFollowDocument($follower: ID!, $following: String!) {\n  node(id: $follower) {\n    ... on CeramicAccount {\n      akashaProfile {\n        followers(last: 1, filters: {where: {profileID: {equalTo: $following}}}) {\n          edges {\n            node {\n              id\n              isFollowing\n              profileID\n              profile {\n                ...UserProfileFragment\n              }\n            }\n          }\n          pageInfo {\n            startCursor\n            endCursor\n            hasNextPage\n            hasPreviousPage\n          }\n        }\n      }\n      isViewer\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "mutation CreateProfile($i: CreateAkashaProfileInput!) {\n  createAkashaProfile(input: $i) {\n    document {\n      ...UserProfileFragment\n    }\n    clientMutationId\n  }\n}\n    ${UserProfileFragmentDoc}",
        "mutation UpdateProfile($i: UpdateAkashaProfileInput!) {\n  updateAkashaProfile(input: $i) {\n    document {\n      ...UserProfileFragment\n    }\n    clientMutationId\n  }\n}\n    ${UserProfileFragmentDoc}",
        "mutation CreateInterests($i: CreateAkashaProfileInterestsInput!) {\n  createAkashaProfileInterests(input: $i) {\n    document {\n      topics {\n        value\n        labelType\n      }\n      did {\n        id\n      }\n      id\n    }\n    clientMutationId\n  }\n}",
        "mutation UpdateInterests($i: UpdateAkashaProfileInterestsInput!) {\n  updateAkashaProfileInterests(input: $i) {\n    document {\n      topics {\n        value\n        labelType\n      }\n      did {\n        id\n      }\n      id\n    }\n    clientMutationId\n  }\n}",
        "mutation CreateFollow($i: CreateAkashaFollowInput!) {\n  createAkashaFollow(input: $i) {\n    document {\n      isFollowing\n      profile {\n        ...UserProfileFragment\n      }\n      did {\n        id\n      }\n      id\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "mutation UpdateFollow($i: UpdateAkashaFollowInput!) {\n  updateAkashaFollow(input: $i) {\n    document {\n      isFollowing\n      profile {\n        ...UserProfileFragment\n      }\n      did {\n        id\n      }\n      id\n    }\n  }\n}\n    ${UserProfileFragmentDoc}",
        "mutation CreateApp($i: CreateAkashaAppInput!) {\n  createAkashaApp(input: $i) {\n    document {\n      ...AkashaAppFragment\n    }\n    clientMutationId\n  }\n}\n    ${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "mutation UpdateApp($i: UpdateAkashaAppInput!) {\n  updateAkashaApp(input: $i) {\n    document {\n      ...AkashaAppFragment\n    }\n    clientMutationId\n  }\n}\n    ${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "query GetApps($after: String, $before: String, $first: Int, $last: Int, $filters: AkashaAppFiltersInput, $sorting: AkashaAppSortingInput) {\n  akashaAppIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    filters: $filters\n    sorting: $sorting\n  ) {\n    edges {\n      node {\n        ...AkashaAppFragment\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n    ${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "query GetAppsByID($id: ID!) {\n  node(id: $id) {\n    ... on AkashaApp {\n      ...AkashaAppFragment\n    }\n  }\n}\n    ${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "mutation CreateAppRelease($i: CreateAkashaAppReleaseInput!) {\n  createAkashaAppRelease(input: $i) {\n    document {\n      ...AppReleaseFragment\n    }\n    clientMutationId\n  }\n}\n    ${AppReleaseFragmentDoc}\n${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "mutation UpdateAppRelease($i: UpdateAkashaAppReleaseInput!) {\n  updateAkashaAppRelease(input: $i) {\n    document {\n      ...AppReleaseFragment\n    }\n    clientMutationId\n  }\n}\n    ${AppReleaseFragmentDoc}\n${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "query GetAppsReleases($after: String, $before: String, $first: Int, $last: Int, $filters: AkashaAppReleaseFiltersInput, $sorting: AkashaAppReleaseSortingInput) {\n  akashaAppReleaseIndex(\n    after: $after\n    before: $before\n    first: $first\n    last: $last\n    filters: $filters\n    sorting: $sorting\n  ) {\n    edges {\n      node {\n        ...AppReleaseFragment\n      }\n    }\n    pageInfo {\n      startCursor\n      endCursor\n      hasNextPage\n      hasPreviousPage\n    }\n  }\n}\n    ${AppReleaseFragmentDoc}\n${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}",
        "query GetAppReleaseByID($id: ID!) {\n  node(id: $id) {\n    ... on AkashaAppRelease {\n      ...AppReleaseFragment\n    }\n  }\n}\n    ${AppReleaseFragmentDoc}\n${AkashaAppFragmentDoc}\n${UserProfileFragmentDoc}"
    ],
    "variables": [
        "BeamFragmentDoc",
        "ContentBlockFragmentDoc",
        "BlockStorageFragmentDoc",
        "ReflectFragmentDoc",
        "UserProfileFragmentDoc",
        "AkashaAppFragmentDoc",
        "AppReleaseFragmentDoc",
        "GetBeamsDocument",
        "GetBeamsByAuthorDidDocument",
        "GetBeamByIdDocument",
        "GetContentBlockByIdDocument",
        "GetBlockStorageByIdDocument",
        "CreateBeamDocument",
        "UpdateBeamDocument",
        "CreateContentBlockDocument",
        "UpdateContentBlockDocument",
        "GetReflectionsFromBeamDocument",
        "GetReflectionsByAuthorDidDocument",
        "GetReflectReflectionsDocument",
        "CreateReflectDocument",
        "UpdateAkashaReflectDocument",
        "GetProfileByIdDocument",
        "GetProfileByDidDocument",
        "GetProfilesDocument",
        "GetInterestsDocument",
        "GetInterestsByDidDocument",
        "GetInterestsByIdDocument",
        "GetFollowingListByDidDocument",
        "GetFollowersListByDidDocument",
        "GetMyProfileDocument",
        "GetFollowDocumentDocument",
        "CreateProfileDocument",
        "UpdateProfileDocument",
        "CreateInterestsDocument",
        "UpdateInterestsDocument",
        "CreateFollowDocument",
        "UpdateFollowDocument",
        "CreateAppDocument",
        "UpdateAppDocument",
        "GetAppsDocument",
        "GetAppsByIdDocument",
        "CreateAppReleaseDocument",
        "UpdateAppReleaseDocument",
        "GetAppsReleasesDocument",
        "GetAppReleaseByIdDocument"
    ],
    "comments": [
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__",
        "#__PURE__"
    ],
    "docstrings": [],
    "functions": [
        "getSdk",
        "GetBeams",
        "GetBeamsByAuthorDid",
        "GetBeamById",
        "GetContentBlockById",
        "GetBlockStorageById",
        "CreateBeam",
        "UpdateBeam",
        "CreateContentBlock",
        "UpdateContentBlock",
        "GetReflectionsFromBeam",
        "GetReflectionsByAuthorDid",
        "GetReflectReflections",
        "CreateReflect",
        "UpdateAkashaReflect",
        "GetProfileByID",
        "GetProfileByDid",
        "GetProfiles",
        "GetInterests",
        "GetInterestsByDid",
        "GetInterestsById",
        "GetFollowingListByDid",
        "GetFollowersListByDid",
        "GetMyProfile",
        "GetFollowDocument",
        "CreateProfile",
        "UpdateProfile",
        "CreateInterests",
        "UpdateInterests",
        "CreateFollow",
        "UpdateFollow",
        "CreateApp",
        "UpdateApp",
        "GetApps",
        "GetAppsByID",
        "CreateAppRelease",
        "UpdateAppRelease",
        "GetAppsReleases",
        "GetAppReleaseByID"
    ],
    "classes": []
}