{
    "identifiers": [
        "AutoMapper",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "EntityFrameworkCore",
        "Xml",
        "Linq",
        "Vastra",
        "API",
        "DBContexts",
        "Vastra",
        "API",
        "Entities",
        "Vastra",
        "API",
        "Models",
        "Vastra",
        "API",
        "Models",
        "ForCreationAndUpdate",
        "Vastra",
        "API",
        "Services",
        "Vastra",
        "API",
        "Controllers",
        "Route",
        "ApiController",
        "ControllerBase",
        "IVastraRepository",
        "vastraRepository",
        "IMapper",
        "mapper",
        "_vastraRepository",
        "vastraRepository",
        "_mapper",
        "mapper",
        "HttpGet",
        "ActionResult",
        "OrderDto",
        "roleId",
        "userId",
        "pageNumber",
        "pageSize",
        "_vastraRepository",
        "RoleExistsAsync",
        "roleId",
        "NotFound",
        "_vastraRepository",
        "UserExistsAsync",
        "userId",
        "NotFound",
        "pageSize",
        "maxOrdersPageSize",
        "pageSize",
        "maxOrdersPageSize",
        "orderEntities",
        "paginationMetadata",
        "_vastraRepository",
        "GetOrdersAsync",
        "pageNumber",
        "pageSize",
        "Ok",
        "_mapper",
        "OrderDto",
        "orderEntities",
        "HttpHead",
        "HttpGet",
        "Name",
        "IActionResult",
        "roleId",
        "userId",
        "orderId",
        "includeCartItems",
        "_vastraRepository",
        "RoleExistsAsync",
        "roleId",
        "NotFound",
        "_vastraRepository",
        "UserExistsAsync",
        "userId",
        "NotFound",
        "_vastraRepository",
        "OrderExistsAsync",
        "orderId",
        "NotFound",
        "_vastraRepository",
        "GetOrderAsync",
        "orderId",
        "includeCartItems",
        "order",
        "NotFound",
        "Ok",
        "_mapper",
        "OrderWithoutCartItemsDto",
        "order",
        "HttpPost",
        "ActionResult",
        "OrderDto",
        "roleId",
        "userId",
        "OrderForCreationDto",
        "order",
        "_vastraRepository",
        "RoleExistsAsync",
        "roleId",
        "NotFound",
        "_vastraRepository",
        "UserExistsAsync",
        "userId",
        "NotFound",
        "_mapper",
        "Entities",
        "Order",
        "order",
        "finalorder",
        "DateAdded",
        "Now",
        "finalorder",
        "DateModified",
        "Now",
        "_vastraRepository",
        "AddOrderForUserAsync",
        "userId",
        "finalorder",
        "_vastraRepository",
        "SaveChangesAsync",
        "_mapper",
        "OrderDto",
        "finalorder",
        "CreatedAtRoute",
        "roleId",
        "roleId",
        "userId",
        "userId",
        "orderId",
        "createdOrderToReturn",
        "OrderId",
        "createdOrderToReturn",
        "HttpDelete",
        "ActionResult",
        "roleId",
        "userId",
        "orderId",
        "_vastraRepository",
        "RoleExistsAsync",
        "roleId",
        "NotFound",
        "_vastraRepository",
        "UserExistsAsync",
        "userId",
        "NotFound",
        "_vastraRepository",
        "GetOrderForUserAsync",
        "userId",
        "orderId",
        "orderToDelete",
        "NotFound",
        "_vastraRepository",
        "DeleteOrder",
        "orderToDelete",
        "_vastraRepository",
        "SaveChangesAsync",
        "NoContent"
    ],
    "literals": [
        "\"api/roles/{roleId}/users/{userId}/orders\"",
        "\"{orderId}\"",
        "\"{orderId}\"",
        "\"GetOrder\"",
        "\"GetOrder\""
    ],
    "variables": [
        "IVastraRepository",
        "_vastraRepository",
        "IMapper",
        "_mapper",
        "maxOrdersPageSize",
        "order",
        "finalorder",
        "createdOrderToReturn",
        "orderToDelete"
    ],
    "comments": [
        "GET: api/Order",
        "[HttpPut]\n        public async Task<ActionResult> UpdateOrder(int roleId, int userId, int orderId,\n            OrderForUpdateDto order)\n        {\n            if (!await _vastraRepository.RoleExistsAsync(roleId))\n            {\n                return NotFound();\n            }\n            if(!await _vastraRepository.UserExistsAsync(userId))\n            { \n                return NotFound(); \n            }\n            var orderEntity = await _vastraRepository.GetOrderForUserAsync(userId, orderId);\n            if (orderEntity == null)\n            {\n                return NotFound();\n            }\n            _mapper.Map(order, orderEntity);\n            //update Modified Time of product\n            orderEntity.DateModified = DateTime.Now;\n            await _vastraRepository.SaveChangesAsync();\n            return NoContent();\n\n        }"
    ],
    "docstrings": [],
    "functions": [
        "OrdersController",
        "GetOrders",
        "GetOrder",
        "CreateOrder",
        "DeleteOrder"
    ],
    "classes": [
        "OrdersController"
    ]
}