{
    "identifiers": [
        "argparse",
        "datetime",
        "datetime",
        "glob",
        "logging",
        "os",
        "re",
        "time",
        "typing",
        "Dict",
        "Tuple",
        "sys",
        "dash",
        "dash",
        "dcc",
        "html",
        "plotly",
        "graph_objs",
        "go",
        "plotly",
        "subplots",
        "make_subplots",
        "metrics_delta",
        "metric_line_re",
        "num",
        "terraform_inventory_ip_not_names",
        "client_ram_report",
        "dapp",
        "logging",
        "getLogger",
        "re",
        "compile",
        "metrics_files",
        "Dict",
        "Dict",
        "datetime",
        "path",
        "metrics_files",
        "os",
        "path",
        "basename",
        "path",
        "fname",
        "path",
        "metrics_fname_re",
        "match",
        "fname",
        "m",
        "m",
        "group",
        "m",
        "group",
        "datetime",
        "strptime",
        "timestamp",
        "dapp",
        "filesByNick",
        "nick",
        "timestamp",
        "path",
        "tf_inventory_path",
        "filesByNick",
        "fin",
        "nick",
        "metrics_names",
        "Tuple",
        "Dict",
        "Dict",
        "line",
        "fin",
        "line",
        "line",
        "strip",
        "line",
        "line",
        "line",
        "startswith",
        "line",
        "split",
        "tpe",
        "TYPE_GAUGE",
        "tpe",
        "TYPE_COUNTER",
        "metric_line_re",
        "match",
        "line",
        "m",
        "m",
        "group",
        "num",
        "m",
        "group",
        "line",
        "split",
        "ab",
        "num",
        "ab",
        "name",
        "find",
        "det_idx",
        "name",
        "det_idx",
        "name",
        "nick",
        "metrics_names",
        "name",
        "metrics_names",
        "value",
        "last_type",
        "sys",
        "exc_info",
        "types",
        "os",
        "environ",
        "time",
        "tzset",
        "argparse",
        "ArgumentParser",
        "ap",
        "add_argument",
        "nargs",
        "help",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "action",
        "help",
        "ap",
        "add_argument",
        "action",
        "ap",
        "parse_args",
        "args",
        "verbose",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "args",
        "dir",
        "logging",
        "error",
        "sorted",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "args",
        "dir",
        "gather_metrics_files_by_nick",
        "metrics_files",
        "tf_inventory_path",
        "terraform_inventory_ip_not_names",
        "tf_inventory_path",
        "nick",
        "filesByNick",
        "keys",
        "ip_to_name",
        "get",
        "nick",
        "name",
        "filesByNick",
        "nick",
        "val",
        "filesByNick",
        "nick",
        "args",
        "list_nodes",
        "join",
        "sorted",
        "filesByNick",
        "keys",
        "dash",
        "Dash",
        "html",
        "Div",
        "html",
        "Div",
        "html",
        "H4",
        "html",
        "Div",
        "id",
        "dcc",
        "Graph",
        "id",
        "args",
        "metrics_names",
        "make_subplots",
        "rows",
        "len",
        "metrics_names",
        "cols",
        "vertical_spacing",
        "shared_xaxes",
        "fig",
        "fig",
        "nick",
        "items",
        "filesByNick",
        "items",
        "dt",
        "metrics_file",
        "items",
        "items",
        "data",
        "append",
        "dt",
        "open",
        "metrics_file",
        "f",
        "parse_metrics",
        "f",
        "nick",
        "metrics_names",
        "metric_name",
        "metric_value",
        "metrics",
        "items",
        "metric_value",
        "metric_name",
        "data",
        "types",
        "metric_name",
        "TYPE_COUNTER",
        "len",
        "raw_series",
        "metric_name",
        "metric_value",
        "raw_series",
        "metric_name",
        "dt",
        "data",
        "total_seconds",
        "data",
        "metric_name",
        "append",
        "metric_value",
        "raw_series",
        "metric_name",
        "append",
        "raw_value",
        "active_metrics",
        "add",
        "metric_name",
        "i",
        "metric",
        "sorted",
        "active_metrics",
        "fig",
        "append_trace",
        "go",
        "Scatter",
        "x",
        "data",
        "y",
        "data",
        "metric",
        "name",
        "metric",
        "mode",
        "line",
        "width",
        "i",
        "fig",
        "show",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "r'(.*?)\\.(\\d+_\\d+)\\.metrics'",
        "'terraform-inventory.host'",
        "'%Y%m%d_%H%M%S'",
        "'#'",
        "'# TYPE'",
        "'gauge'",
        "'counter'",
        "'{'",
        "f'{name}{{n={nick}}}'",
        "f'An exception occurred in parse_metrics: {sys.exc_info()}'",
        "'TZ'",
        "'UTC'",
        "'metrics_names'",
        "'+'",
        "'metric name(s) to track'",
        "'-d'",
        "'--dir'",
        "'dir path to find /*.metrics in'",
        "'-l'",
        "'--list-nodes'",
        "'store_true'",
        "'list available node names with metrics'",
        "'--verbose'",
        "'store_true'",
        "'need at least one dir set with -d/--dir'",
        "'*.metrics'",
        "'Available nodes:'",
        "', '",
        "'Algod Metrics'",
        "'text'",
        "'graph'",
        "'layout'",
        "'margin'",
        "'l'",
        "'r'",
        "'b'",
        "'t'",
        "'layout'",
        "'height'",
        "'time'",
        "'time'",
        "'rt'",
        "'time'",
        "'time'",
        "'lines+markers'",
        "'__main__'"
    ],
    "variables": [
        "logger",
        "metrics_fname_re",
        "filesByNick",
        "tf_inventory_path",
        "fname",
        "tf_inventory_path",
        "m",
        "nick",
        "timestamp",
        "timestamp",
        "TYPE_GAUGE",
        "TYPE_COUNTER",
        "types",
        "last_type",
        "line",
        "tpe",
        "last_type",
        "last_type",
        "m",
        "name",
        "value",
        "ab",
        "name",
        "value",
        "det_idx",
        "name",
        "fullname",
        "fullname",
        "types",
        "fullname",
        "ap",
        "args",
        "metrics_files",
        "tf_inventory_path",
        "filesByNick",
        "ip_to_name",
        "name",
        "val",
        "filesByNick",
        "name",
        "app",
        "app",
        "layout",
        "metrics_names",
        "fig",
        "data",
        "raw_series",
        "active_metrics",
        "metrics",
        "types",
        "raw_value",
        "data",
        "metric_name",
        "raw_series",
        "metric_name",
        "metric_value",
        "metric_value"
    ],
    "comments": [
        "remap ip addresses to node names",
        "fig.update_layout(template=\"plotly_dark\")",
        "app.run_server(debug=True)"
    ],
    "docstrings": [
        "\"\"\"\nTool for metrics files visualization.\nExpects metrics files in format <node nickname>.<date>_<time>.metrics like Primary.20230804_182932.metrics\nWorks with metrics collected by heapWatch.py.\n\nExample usage for local net:\npython3 ./test/heapwatch/heapWatch.py --period 10 --metrics --blockinfo --runtime 20m -o nodedata ~/networks/mylocalnet/Primary\npython3 ./test/heapwatch/metrics_viz.py -d nodedata algod_transaction_messages_handled algod_tx_pool_count algod_transaction_messages_backlog_size algod_go_memory_classes_total_bytes\n\nAlso works with bdevscripts for cluster tests since it uses heapWatch.py for metrics collection.\n\"\"\"",
        "\"\"\"return {\"node nickname\": {datetime: path, ...}, ...}}\"\"\"",
        "\"\"\"Parse metrics file and return dicts of values and types\"\"\""
    ],
    "functions": [
        "gather_metrics_files_by_nick",
        "parse_metrics",
        "main"
    ],
    "classes": []
}