{
    "identifiers": [
        "org",
        "flowable",
        "cmmn",
        "api",
        "migration",
        "org",
        "flowable",
        "batch",
        "api",
        "Batch",
        "HistoricCaseInstanceMigrationBuilder",
        "caseInstanceMigrationDocument",
        "caseDefinitionId",
        "caseDefinitionKey",
        "caseDefinitionVersion",
        "caseDefinitionKey",
        "caseDefinitionVersion",
        "caseDefinitionTenantId",
        "caseDefinitionTenantId",
        "caseInstanceId",
        "caseDefinitionId",
        "caseDefinitionId",
        "caseDefinitionKey",
        "caseDefinitionVersion",
        "caseDefinitionTenantId",
        "caseDefinitionKey",
        "caseDefinitionVersion",
        "caseDefinitionTenantId"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Creates a HistoricCaseInstanceMigrationBuilder using the values of a HistoricCaseInstanceMigrationDocument\n     *\n     * @param historicCaseInstanceMigrationDocument Migration document with pre-filled case information\n     * @return Returns the builder\n     * @see HistoricCaseInstanceMigrationDocument",
        "* Specifies the case definition to migrate to, using the case definition id\n     *\n     * @param caseDefinitionId ID of the case definition to migrate to\n     * @return Returns the builder\n     * @see org.flowable.cmmn.api.repository.CaseDefinition",
        "* Specifies the case definition to migrate to, identified by its key and version\n     *\n     * @param caseDefinitionKey Key of the case definition to migrate to\n     * @param caseDefinitionVersion Version of the case to migrate to\n     * @return Returns the builder\n     * @see org.flowable.cmmn.api.repository.CaseDefinition",
        "* Specifies the case definition to migrate to, identified by its key and version and tenantId\n     *\n     * @param caseDefinitionKey Key of the case definition to migrate to\n     * @param caseDefinitionVersion Version of the case to migrate to\n     * @param caseDefinitionTenantId Tenant id of the case definition, must be part of the same tenant\n     * @return Returns the builder\n     * @see org.flowable.cmmn.api.repository.CaseDefinition",
        "* Specifies the tenantId of the case definition to migrate to\n     *\n     * @param caseDefinitionTenantId Tenant id of the case definition, must be part of the same tenant\n     * @return Returns the builder",
        "* Builds a HistoricCaseInstanceMigrationDocument\n     *\n     * @return Returns the builder\n     * @see HistoricCaseInstanceMigrationDocument",
        "* Starts the case instance migration for a case identified with the submitted caseInstanceId\n     *\n     * @param caseInstanceId",
        "* Asynchronously starts the case instance migration for each case instances of a given case definition identified by the case definition id.\n     *\n     * @param caseDefinitionId",
        "* Starts the case instance migration for all case instances of a given case definition identified by the case definition id.\n     *\n     * @param caseDefinitionId",
        "* Starts the case instance migration for all case instances of a given case definition identified by the case definition key and version (optional tenantId).\n     *\n     * @param caseDefinitionKey\n     * @param caseDefinitionVersion\n     * @param caseDefinitionTenantId",
        "* Asynchronously starts the case instance migration for each case instances of a given case definition identified by the case definition key and version (optional tenantId).\n     *\n     * @param caseDefinitionKey\n     * @param caseDefinitionVersion\n     * @param caseDefinitionTenantId\n     * @return an id of the created batch entity"
    ],
    "functions": [
        "HistoricCaseInstanceMigrationBuilder",
        "fromHistoricCaseInstanceMigrationDocument",
        "HistoricCaseInstanceMigrationBuilder",
        "migrateToCaseDefinition",
        "HistoricCaseInstanceMigrationBuilder",
        "migrateToCaseDefinition",
        "HistoricCaseInstanceMigrationBuilder",
        "migrateToCaseDefinition",
        "HistoricCaseInstanceMigrationBuilder",
        "withMigrateToCaseDefinitionTenantId",
        "HistoricCaseInstanceMigrationDocument",
        "getHistoricCaseInstanceMigrationDocument",
        "migrate",
        "migrateHistoricCaseInstances",
        "Batch",
        "batchMigrateHistoricCaseInstances",
        "migrateHistoricCaseInstances",
        "Batch",
        "batchMigrateHistoricCaseInstances"
    ],
    "classes": []
}