{
    "identifiers": [
        "com",
        "mozilla",
        "telemetry",
        "decoder",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "JsonNode",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "node",
        "ObjectNode",
        "com",
        "mozilla",
        "telemetry",
        "ingestion",
        "core",
        "Constant",
        "Attribute",
        "com",
        "mozilla",
        "telemetry",
        "util",
        "Json",
        "java",
        "io",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "beam",
        "sdk",
        "io",
        "gcp",
        "pubsub",
        "PubsubMessage",
        "org",
        "apache",
        "beam",
        "sdk",
        "metrics",
        "Counter",
        "org",
        "apache",
        "beam",
        "sdk",
        "metrics",
        "Metrics",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "MapElements",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "PTransform",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "SimpleFunction",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "PCollection",
        "countIpExtracted",
        "Metrics",
        "counter",
        "countIpAlreadyExtracted",
        "Metrics",
        "counter",
        "Override",
        "message",
        "message",
        "getAttribute",
        "Attribute",
        "SUBMISSION_TIMESTAMP",
        "message",
        "message",
        "getAttributeMap",
        "containsKey",
        "Attribute",
        "X_FORWARDED_FOR",
        "countIpAlreadyExtracted",
        "inc",
        "message",
        "logEntry",
        "attributes",
        "message",
        "getAttributeMap",
        "logEntry",
        "Json",
        "readObjectNode",
        "message",
        "getPayload",
        "jsonPayload",
        "logEntry",
        "path",
        "fields",
        "jsonPayload",
        "path",
        "ipAddress",
        "fields",
        "remove",
        "ipAddress",
        "clientIpAddress",
        "ipAddress",
        "textValue",
        "attributes",
        "put",
        "Attribute",
        "X_FORWARDED_FOR",
        "clientIpAddress",
        "countIpExtracted",
        "inc",
        "jsonPayload",
        "replace",
        "fields",
        "logEntry",
        "replace",
        "jsonPayload",
        "sanitizedPayload",
        "logEntry",
        "toString",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "sanitizedPayload",
        "attributes",
        "message",
        "e",
        "fn",
        "Override",
        "input",
        "input",
        "apply",
        "MapElements",
        "via",
        "fn"
    ],
    "literals": [
        "\"log_entry_ip_extracted\"",
        "\"log_entry_ip_already_extracted\"",
        "\"jsonPayload\"",
        "\"Fields\"",
        "\"ip_address\"",
        "\"Fields\"",
        "\"jsonPayload\"",
        "\"Message has no submission_timestamp but could not be parsed as LogEntry JSON\""
    ],
    "variables": [
        "logEntry"
    ],
    "comments": [
        "If this message has submission_timestamp set, it is a normal message from the edge",
        "server rather than a LogEntry from Cloud Logging, so we return immediately.",
        "Return early since IP has been extracted",
        "if ipAddress is null, it means it wasn't present in the payload"
    ],
    "docstrings": [
        "* Extracts to attribute and scrubs IP addresses form Cloud Logging messages.\n *\n * <p>This is intended to be used with com.mozilla.telemetry.decoder.ParseLogEntry.\n * Messages sent from cloud logging contain IP addresses in their payload. For consistency with\n * the rest of the platform we are moving them to an attribute and removing from the payload,\n * so they don't make their way to error tables."
    ],
    "functions": [
        "ExtractIpFromLogEntry",
        "of",
        "PubsubMessage",
        "apply",
        "expand"
    ],
    "classes": [
        "ExtractIpFromLogEntry",
        "Fn"
    ]
}