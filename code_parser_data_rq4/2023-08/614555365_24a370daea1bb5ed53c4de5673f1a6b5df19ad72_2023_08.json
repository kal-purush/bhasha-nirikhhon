{
    "identifiers": [
        "dataclasses",
        "asdict",
        "dataclass",
        "typing",
        "Optional",
        "bs4",
        "BeautifulSoup",
        "pyepp",
        "EppResultCode",
        "pyepp",
        "base_command",
        "BaseCommand",
        "pyepp",
        "command_templates",
        "POLL_REQUEST_XML",
        "POLL_ACK_XML",
        "dataclass",
        "dataclass",
        "Optional",
        "Optional",
        "ServiceMessageData",
        "BaseCommand",
        "data",
        "ServiceMessageQueueData",
        "asdict",
        "data",
        "data_dict",
        "execute",
        "POLL_REQUEST_XML",
        "result",
        "get",
        "EppResultCode",
        "SUCCESS_ACK_TO_DEQUEUE",
        "value",
        "result",
        "BeautifulSoup",
        "result",
        "get",
        "message_queue",
        "find",
        "get",
        "message_queue",
        "find",
        "get",
        "message_queue",
        "find",
        "text",
        "ServiceMessageData",
        "language",
        "message",
        "get",
        "message",
        "message",
        "text",
        "message",
        "message_queue",
        "find_all",
        "message_queue",
        "find",
        "ServiceMessageQueueData",
        "result_date",
        "result",
        "message_id",
        "execute",
        "POLL_ACK_XML",
        "message_id",
        "message_id",
        "result",
        "get",
        "EppResultCode",
        "SUCCESS",
        "value",
        "result",
        "BeautifulSoup",
        "result",
        "get",
        "message_queue",
        "find",
        "get",
        "message_queue",
        "find",
        "get",
        "ServiceMessageQueueData",
        "result_date",
        "result"
    ],
    "literals": [
        "''",
        "'code'",
        "'raw_response'",
        "'xml'",
        "'message_count'",
        "'msgQ'",
        "'count'",
        "'message_id'",
        "'msgQ'",
        "'id'",
        "'queue_date'",
        "'qDate'",
        "'messages'",
        "'lang'",
        "'msg'",
        "'msg'",
        "'result_data'",
        "'code'",
        "'raw_response'",
        "'xml'",
        "'message_count'",
        "'msgQ'",
        "'count'",
        "'message_id'",
        "'msgQ'",
        "'id'",
        "'result_data'"
    ],
    "variables": [
        "language",
        "message",
        "message_count",
        "message_id",
        "queue_date",
        "messages",
        "data_dict",
        "result",
        "message_queue",
        "result_date",
        "result",
        "result",
        "message_queue",
        "result_date",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nEPP Poll Module\n\"\"\"",
        "\"\"\"Service message data class\n    \"\"\"",
        "\"\"\"Service message queue data class\n    \"\"\"",
        "\"\"\"\n    Epp Poll\n    \"\"\"",
        "\"\"\"Convert dataclass to dictionary.\n\n        :param ServiceMessageData data: Service message data\n\n        :return: Domain name details\n        :rtype: dict\n        \"\"\"",
        "\"\"\"This command is to check and retrieve queued service messages as wel as keep the\n        connection alive.\n\n        :return: Response object\n        :rtype: dict\n        \"\"\"",
        "\"\"\"This command will acknowledge and remove a message from the poll queue so that registrars can run another\n        poll request to get the next message in line if one exists.\n\n        :return: Response object\n        :rtype: dict\n        \"\"\""
    ],
    "functions": [
        "_data_to_dict",
        "request",
        "acknowledge"
    ],
    "classes": [
        "ServiceMessageData",
        "ServiceMessageQueueData",
        "Poll"
    ]
}