{
    "identifiers": [
        "DiskCardGame",
        "HarmonyLib",
        "InscryptionAPI",
        "Helpers",
        "InscryptionAPI",
        "Helpers",
        "Extensions",
        "Collections",
        "Reflection",
        "Reflection",
        "Emit",
        "UnityEngine",
        "InscryptionAPI",
        "Triggers",
        "HarmonyPatch",
        "CombatPhaseManager",
        "__instance",
        "playerIsAttacker",
        "SpecialBattleSequencer",
        "specialSequencer",
        "attackedWithSquirrel",
        "__instance",
        "DamageDealtThisPhase",
        "__instance",
        "DamageDealtThisPhase",
        "playerIsAttacker",
        "playerIsAttacker",
        "WaitForSeconds",
        "__instance",
        "VisualizeDamageMovingToScales",
        "targetOfDamage",
        "playerIsAttacker",
        "__instance",
        "DamageDealtThisPhase",
        "overkillDamage",
        "Singleton",
        "LifeManager",
        "Instance",
        "Balance",
        "__instance",
        "DamageDealtThisPhase",
        "attackedWithSquirrel",
        "overkillDamage",
        "AchievementManager",
        "Unlock",
        "Achievement",
        "PART1_SPECIAL1",
        "overkillDamage",
        "Mathf",
        "Max",
        "overkillDamage",
        "Abs",
        "__instance",
        "DamageDealtThisPhase",
        "absDamageDealt",
        "overkillDamage",
        "AscensionStatsData",
        "TryIncreaseStat",
        "AscensionStat",
        "Type",
        "MostDamageDealt",
        "absDamageDealt",
        "absDamageDealt",
        "AchievementManager",
        "Unlock",
        "Achievement",
        "PART2_SPECIAL2",
        "specialSequencer",
        "specialSequencer",
        "PreventDamageAddedToScales",
        "canDealDamage",
        "Singleton",
        "LifeManager",
        "Instance",
        "ShowDamageSequence",
        "damage",
        "damage",
        "targetOfDamage",
        "specialSequencer",
        "specialSequencer",
        "DamageAddedToScale",
        "damage",
        "overkillDamage",
        "targetOfDamage",
        "canDealDamage",
        "overkillDamage",
        "Singleton",
        "TurnManager",
        "Instance",
        "Opponent",
        "NumLives",
        "Singleton",
        "TurnManager",
        "Instance",
        "Opponent",
        "GiveCurrencyOnDefeat",
        "Singleton",
        "TurnManager",
        "Instance",
        "Opponent",
        "TryRevokeSurrender",
        "RunState",
        "Run",
        "currency",
        "overkillDamage",
        "__instance",
        "VisualizeExcessLethalDamage",
        "overkillDamage",
        "specialSequencer",
        "CardSlot",
        "playerIsAttacker",
        "CardSlot",
        "BoardManager",
        "Instance",
        "GetSlotsCopy",
        "playerIsAttacker",
        "CardSlot",
        "originalSlots",
        "CustomTriggerFinder",
        "FindTriggersOnBoard",
        "IGetAttackingSlots",
        "ToList",
        "triggers",
        "Sort",
        "IGetAttackingSlots",
        "a",
        "IGetAttackingSlots",
        "b",
        "b",
        "TriggerPriority",
        "playerIsAttacker",
        "originalSlots",
        "a",
        "TriggerPriority",
        "playerIsAttacker",
        "originalSlots",
        "t",
        "triggers",
        "t",
        "RespondsToGetAttackingSlots",
        "playerIsAttacker",
        "originalSlots",
        "currentSlots",
        "CardSlot",
        "t",
        "GetAttackingSlots",
        "playerIsAttacker",
        "originalSlots",
        "currentSlots",
        "addedSlots",
        "addedSlots",
        "Count",
        "currentSlots",
        "AddRange",
        "addedSlots",
        "currentSlots",
        "HarmonyTranspiler",
        "HarmonyPatch",
        "CombatPhaseManager",
        "nameof",
        "CombatPhaseManager",
        "DoCombatPhase",
        "MethodType",
        "Enumerator",
        "CodeInstruction",
        "CodeInstruction",
        "instructions",
        "CodeInstruction",
        "instructions",
        "a",
        "codes",
        "Count",
        "a",
        "codes",
        "a",
        "opcode",
        "OpCodes",
        "Brtrue",
        "AccessTools",
        "Method",
        "DoCombatPhasePatches",
        "nameof",
        "DoCombatPhasePatches",
        "ModifyAttackingSlots",
        "Type",
        "b",
        "codes",
        "Count",
        "b",
        "codes",
        "b",
        "opcode",
        "OpCodes",
        "Stfld",
        "codes",
        "RemoveRange",
        "a",
        "b",
        "a",
        "codes",
        "Insert",
        "a",
        "OpCodes",
        "Call",
        "customMethod",
        "i",
        "codes",
        "Count",
        "i",
        "op_PlayerAttacker",
        "codes",
        "i",
        "operand",
        "ToString",
        "name_PlayerAttacker",
        "op_PlayerAttacker",
        "codes",
        "i",
        "operand",
        "op_SpecialSequencer",
        "codes",
        "i",
        "operand",
        "ToString",
        "name_SpecialSequencer",
        "op_SpecialSequencer",
        "codes",
        "i",
        "operand",
        "op_SquirrelAttacker",
        "codes",
        "i",
        "operand",
        "ToString",
        "name_SquirrelAttacker",
        "op_SquirrelAttacker",
        "codes",
        "i",
        "operand",
        "codes",
        "i",
        "operand",
        "ToString",
        "name_GetDamageDealt",
        "i",
        "j",
        "codes",
        "Count",
        "j",
        "codes",
        "j",
        "opcode",
        "OpCodes",
        "Ldc_I4_S",
        "codes",
        "j",
        "operand",
        "ToString",
        "AccessTools",
        "Method",
        "DoCombatPhasePatches",
        "nameof",
        "DoCombatPhasePatches",
        "NegativeDamageSupport",
        "Type",
        "CombatPhaseManager",
        "SpecialBattleSequencer",
        "codes",
        "RemoveAll",
        "x",
        "opcode",
        "OpCodes",
        "Nop",
        "codes",
        "startIndex",
        "opcode",
        "OpCodes",
        "Ldarg_0",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldloc_2",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldarg_0",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldfld",
        "op_PlayerAttacker",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldarg_0",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldfld",
        "op_SpecialSequencer",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldarg_0",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Ldfld",
        "op_SquirrelAttacker",
        "codes",
        "Insert",
        "startIndex",
        "CodeInstruction",
        "OpCodes",
        "Callvirt",
        "customMethod",
        "codes",
        "codes",
        "j",
        "MoveLabelsTo",
        "codes",
        "startIndex",
        "codes",
        "j",
        "opcode",
        "OpCodes",
        "Nop",
        "codes"
    ],
    "literals": [
        "\"Int32 get_DamageDealtThisPhase()\"",
        "\"System.Boolean playerIsAttacker\"",
        "\"DiskCardGame.SpecialBattleSequencer specialSequencer\"",
        "\"System.Boolean <attackedWithSquirrel>5__4\"",
        "\"System.Object <>2__current\"",
        "\"11\""
    ],
    "variables": [
        "name_GetDamageDealt",
        "name_PlayerAttacker",
        "name_SpecialSequencer",
        "name_SquirrelAttacker",
        "name_CombatCurrent",
        "targetOfDamage",
        "overkillDamage",
        "absDamageDealt",
        "damage",
        "canDealDamage",
        "originalSlots",
        "currentSlots",
        "triggers",
        "addedSlots",
        "codes",
        "op_PlayerAttacker",
        "op_SpecialSequencer",
        "op_SquirrelAttacker",
        "a",
        "MethodBase",
        "customMethod",
        "b",
        "a",
        "i",
        "startIndex",
        "j",
        "i",
        "MethodBase",
        "customMethod"
    ],
    "comments": [
        "Patches to DoCombatPhase that add negative damage support and modifying attack slots support",
        "make this public for modders wanting to modify it",
        "we want to implement logic for if damage is less than 0 (damage dealt to self)",
        "calculate overkillDamage only if we've actually dealt damage to the opponent",
        "DamageDealtThisPhase has to be a positive number when calculating damage and other stats",
        "We want to add support for negative values of DamageDealtThisPhase so modders can add self damage behaviours more easily",
        "we want to slowly narrow our search until we find exactly where we want to insert our code",
        "we also want to grab the operands for important things we'll need",
        "change this:",
        "attackingSlots = (playerIsAttacker ? PlayerSlotsCopy : OpponentSlotsCopy);",
        "to this:",
        "attackingSlots = ModifyAttackingSlots(playerIsAttacker);",
        "we need to preserve state changes or the whole thing will break",
        "the code we want to replace ends after the state changes to 11",
        "so we look ahead for an 11",
        "remove codes marked with Nop",
        "change startIndex.opcode to Ldarg_0 for the stfld that will immediately follow the callvirt, then add a new ldloc_2",
        "this.playerIsAttacker",
        "this.specialSequencer",
        "this.attackedWithSquirrel",
        "NegativeDamageSupport(ldloc.2, this.playerIsAttacker, this.specialSequencer, this.attackedWithSquirrel)",
        "we want to preserve all labels so none of the if-elses break",
        "then mark the code as Nop so we can remove it later"
    ],
    "docstrings": [],
    "functions": [
        "IEnumerator",
        "NegativeDamageSupport",
        "ModifyAttackingSlots",
        "SelfDamage"
    ],
    "classes": [
        "DoCombatPhasePatches"
    ]
}