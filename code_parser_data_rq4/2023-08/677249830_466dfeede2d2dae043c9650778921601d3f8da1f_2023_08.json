{
    "identifiers": [
        "$",
        "plot",
        "plot",
        "processOptions",
        "plot",
        "options",
        "options",
        "plot",
        "processDatapoints",
        "plot",
        "series",
        "datapoints",
        "datapoints",
        "datapoints",
        "hasInvalidParameters",
        "series",
        "invalidLegacyOptions",
        "series",
        "series",
        "nrPoints",
        "EPSILON",
        "series",
        "calculateCurvePoints",
        "datapoints",
        "series",
        "calculateCurvePoints",
        "datapoints",
        "series",
        "datapoints",
        "datapoints",
        "i",
        "pointsTop",
        "j",
        "pointsBottom",
        "pointsTop",
        "i",
        "pointsBottom",
        "j",
        "datapoints",
        "k",
        "pointsTop",
        "i",
        "datapoints",
        "k",
        "pointsTop",
        "i",
        "datapoints",
        "k",
        "pointsBottom",
        "j",
        "j",
        "ps",
        "i",
        "ps",
        "pointsTop",
        "i",
        "pointsBottom",
        "j",
        "datapoints",
        "k",
        "pointsTop",
        "i",
        "datapoints",
        "k",
        "pointsTop",
        "i",
        "datapoints",
        "k",
        "k",
        "datapoints",
        "k",
        "i",
        "ps",
        "datapoints",
        "k",
        "pointsBottom",
        "j",
        "datapoints",
        "k",
        "k",
        "datapoints",
        "k",
        "datapoints",
        "k",
        "pointsBottom",
        "j",
        "j",
        "ps",
        "k",
        "series",
        "datapoints",
        "calculateCurvePoints",
        "datapoints",
        "series",
        "datapoints",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "curvedLinesOptions",
        "curvedLinesOptions",
        "jQuery",
        "defaultOptions",
        "curvedLinesOptions",
        "calculateLegacyCurvePoints",
        "datapoints",
        "legacyOptions",
        "yPos",
        "calculateSplineCurvePoints",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "datapoints",
        "datapoints",
        "createHermiteSplines",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "i",
        "points",
        "ps",
        "i",
        "ps",
        "i",
        "yPos",
        "points",
        "curX",
        "points",
        "curX",
        "ps",
        "xEnd",
        "xStart",
        "curvedLinesOptions",
        "result",
        "points",
        "curX",
        "result",
        "points",
        "curY",
        "xStart",
        "xStep",
        "x",
        "xEnd",
        "x",
        "xStep",
        "result",
        "x",
        "result",
        "splines",
        "j",
        "x",
        "j",
        "result",
        "points",
        "points",
        "ps",
        "result",
        "points",
        "points",
        "ps",
        "yPos",
        "result",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "datapoints",
        "datapoints",
        "i",
        "points",
        "ps",
        "i",
        "ps",
        "i",
        "yPos",
        "points",
        "curX",
        "ps",
        "points",
        "curX",
        "points",
        "curY",
        "ps",
        "points",
        "curY",
        "segmentLengths",
        "dx",
        "segmentSlopes",
        "dy",
        "dx",
        "segmentSlopes",
        "curvedLinesOptions",
        "i",
        "segmentLengths",
        "i",
        "segmentSlopes",
        "i",
        "segmentSlopes",
        "i",
        "slope",
        "prev_slope",
        "gradients",
        "segmentLengths",
        "i",
        "segmentLengths",
        "i",
        "length",
        "prev_length",
        "gradients",
        "common",
        "common",
        "length",
        "prev_slope",
        "common",
        "prev_length",
        "slope",
        "i",
        "points",
        "ps",
        "i",
        "ps",
        "i",
        "yPos",
        "gradients",
        "curvedLinesOptions",
        "points",
        "curY",
        "ps",
        "points",
        "curY",
        "ps",
        "points",
        "curX",
        "ps",
        "points",
        "curX",
        "ps",
        "gradients",
        "segmentSlopes",
        "segmentSlopes",
        "i",
        "i",
        "segmentLengths",
        "i",
        "gradients",
        "i",
        "gradients",
        "i",
        "segmentSlopes",
        "i",
        "segmentLengths",
        "i",
        "m_k",
        "m_k_plus",
        "slope",
        "slope",
        "coefs1",
        "common",
        "invLength",
        "invLength",
        "coefs2",
        "slope",
        "common",
        "m_k",
        "invLength",
        "i",
        "segmentLengths",
        "i",
        "x_k",
        "coef1",
        "coef2",
        "coef3",
        "coef4",
        "x",
        "x",
        "x_k",
        "diff",
        "diff",
        "coef1",
        "diff",
        "diffSq",
        "coef2",
        "diffSq",
        "coef3",
        "diff",
        "coef4",
        "ret",
        "spline",
        "points",
        "i",
        "ps",
        "coefs1",
        "i",
        "coefs2",
        "i",
        "gradients",
        "i",
        "points",
        "i",
        "ps",
        "yPos",
        "ret",
        "datapoints",
        "curvedLinesOptions",
        "yPos",
        "datapoints",
        "datapoints",
        "curvedLinesOptions",
        "points",
        "ps",
        "curvedLinesOptions",
        "curvedLinesOptions",
        "points",
        "points",
        "points",
        "ps",
        "fpDist",
        "maxX",
        "minX",
        "fpDist",
        "curvedLinesOptions",
        "i",
        "points",
        "i",
        "ps",
        "curX",
        "i",
        "curY",
        "i",
        "yPos",
        "frontX",
        "points",
        "curX",
        "fpDist",
        "backX",
        "points",
        "curX",
        "fpDist",
        "frontX",
        "points",
        "curX",
        "backX",
        "points",
        "curX",
        "frontX",
        "points",
        "curX",
        "fpDist",
        "factor",
        "backX",
        "points",
        "curX",
        "fpDist",
        "factor",
        "factor",
        "xdata",
        "j",
        "frontX",
        "ydata",
        "j",
        "points",
        "curY",
        "j",
        "xdata",
        "j",
        "points",
        "curX",
        "ydata",
        "j",
        "points",
        "curY",
        "j",
        "xdata",
        "j",
        "backX",
        "ydata",
        "j",
        "points",
        "curY",
        "j",
        "i",
        "points",
        "i",
        "ps",
        "curX",
        "i",
        "curY",
        "i",
        "yPos",
        "xdata",
        "j",
        "points",
        "curX",
        "ydata",
        "j",
        "points",
        "curY",
        "j",
        "xdata",
        "y2",
        "y2",
        "n",
        "delta",
        "i",
        "n",
        "i",
        "xdata",
        "i",
        "xdata",
        "i",
        "d",
        "xdata",
        "i",
        "xdata",
        "i",
        "d",
        "s",
        "y2",
        "i",
        "y2",
        "i",
        "s",
        "p",
        "delta",
        "i",
        "ydata",
        "i",
        "ydata",
        "i",
        "xdata",
        "i",
        "xdata",
        "i",
        "ydata",
        "i",
        "ydata",
        "i",
        "xdata",
        "i",
        "xdata",
        "i",
        "delta",
        "i",
        "delta",
        "i",
        "xdata",
        "i",
        "xdata",
        "i",
        "s",
        "delta",
        "i",
        "p",
        "n",
        "j",
        "j",
        "y2",
        "j",
        "y2",
        "j",
        "y2",
        "j",
        "delta",
        "j",
        "xdata",
        "n",
        "xdata",
        "num",
        "xnew",
        "xdata",
        "ynew",
        "ydata",
        "result",
        "xnew",
        "result",
        "ynew",
        "j",
        "j",
        "num",
        "j",
        "xnew",
        "j",
        "xnew",
        "j",
        "step",
        "n",
        "max",
        "min",
        "max",
        "min",
        "xdata",
        "k",
        "xnew",
        "j",
        "max",
        "k",
        "min",
        "k",
        "xdata",
        "max",
        "xdata",
        "min",
        "h",
        "xdata",
        "max",
        "xnew",
        "j",
        "h",
        "xnew",
        "j",
        "xdata",
        "min",
        "h",
        "ynew",
        "j",
        "a",
        "ydata",
        "min",
        "b",
        "ydata",
        "max",
        "a",
        "a",
        "a",
        "a",
        "y2",
        "min",
        "b",
        "b",
        "b",
        "b",
        "y2",
        "max",
        "h",
        "h",
        "result",
        "xnew",
        "j",
        "result",
        "ynew",
        "j",
        "result",
        "curvedLinesOptions",
        "curvedLinesOptions",
        "curvedLinesOptions",
        "curvedLinesOptions",
        "$",
        "init",
        "options",
        "jQuery"
    ],
    "literals": [
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "\"CurvedLines detected illegal parameters. The CurvedLines API changed with version 1.0.0 please check the options object.\"",
        "'curvedLines'",
        "'1.1.1'"
    ],
    "variables": [
        "options",
        "nrPoints",
        "EPSILON",
        "invalidLegacyOptions",
        "pointsTop",
        "pointsBottom",
        "j",
        "k",
        "i",
        "ps",
        "defaultOptions",
        "legacyOptions",
        "points",
        "ps",
        "splines",
        "result",
        "j",
        "i",
        "curX",
        "i",
        "curY",
        "xStart",
        "xEnd",
        "xStep",
        "x",
        "points",
        "ps",
        "segmentLengths",
        "segmentSlopes",
        "i",
        "curX",
        "i",
        "curY",
        "dx",
        "dy",
        "gradients",
        "i",
        "slope",
        "prev_slope",
        "length",
        "prev_length",
        "common",
        "i",
        "ps",
        "curX",
        "i",
        "curY",
        "coefs1",
        "coefs2",
        "m_k",
        "m_k_plus",
        "slope",
        "invLength",
        "common",
        "ret",
        "i",
        "spline",
        "diff",
        "diffSq",
        "points",
        "ps",
        "num",
        "xdata",
        "ydata",
        "curX",
        "curY",
        "j",
        "fpDist",
        "minX",
        "maxX",
        "i",
        "frontX",
        "backX",
        "factor",
        "i",
        "n",
        "y2",
        "delta",
        "i",
        "d",
        "s",
        "p",
        "j",
        "step",
        "xnew",
        "ynew",
        "result",
        "max",
        "min",
        "k",
        "h",
        "a",
        "b"
    ],
    "comments": [
        "The MIT License\n\n Copyright (c) 2011 by Michael Zinsmaier and nergal.dev\n Copyright (c) 2012 by Thomas Ritou\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.",
        "____________________________________________________\n\n what it is:\n ____________________________________________________\n\n curvedLines is a plugin for flot, that tries to display lines in a smoother way.\n This is achieved through adding of more data points. The plugin is a data processor and can thus be used\n in combination with standard line / point rendering options.\n\n => 1) with large data sets you may get trouble\n => 2) if you want to display the points too, you have to plot them as 2nd data series over the lines\n => 3) consecutive x data points are not allowed to have the same value\n\n Feel free to further improve the code\n\n ____________________________________________________\n\n how to use it:\n ____________________________________________________\n\n var d1 = [[5,5],[7,3],[9,12]];\n\n var options = { series: { curvedLines: {  active: true }}};\n\n $.plot($(\"#placeholder\"), [{data: d1, lines: { show: true}, curvedLines: {apply: true}}], options);\n\n _____________________________________________________\n\n options:\n _____________________________________________________\n\n active:           bool true => plugin can be used\n apply:            bool true => series will be drawn as curved line\n monotonicFit:\t   bool true => uses monotone cubic interpolation (preserve monotonicity)\n tension:          int          defines the tension parameter of the hermite spline interpolation (no effect if monotonicFit is set)\n nrSplinePoints:   int \t\t\tdefines the number of sample points (of the spline) in between two consecutive points\n\n deprecated options from flot prior to 1.0.0:\n ------------------------------------------------\n legacyOverride\t   bool true => use old default\n    OR\n legacyOverride    optionArray\n {\n \tfit: \t             bool true => forces the max,mins of the curve to be on the datapoints\n \tcurvePointFactor\t int  \t\t  defines how many \"virtual\" points are used per \"real\" data point to\n \t\t\t\t\t\t\t\t\t  emulate the curvedLines (points total = real points * curvePointFactor)\n \tfitPointDist: \t     int  \t\t  defines the x axis distance of the additional two points that are used\n }\t\t\t\t\t\t   \t\t   \t  to enforce the min max condition.",
        "if the plugin is active register processDatapoints method",
        "only if the plugin is active",
        "detects missplaced legacy parameters (prior v1.x.x) in the options object",
        "this can happen if somebody upgrades to v1.x.x without adjusting the parameters or uses old examples",
        "flot makes sure for us that we've got a second y point if fill is true !",
        "Merge top and bottom curve",
        "create interpolant fuction",
        "sample the function",
        "(the result is intependent from the input data =>",
        "it is ok to alter the input after this method)",
        "add point",
        "add curve point",
        "add last point",
        "Creates an array of splines, one for each segment of the original curve. Algorithm based on the wikipedia articles:",
        "",
        "http://de.wikipedia.org/w/index.php?title=Kubisch_Hermitescher_Spline&oldid=130168003 and",
        "http://en.wikipedia.org/w/index.php?title=Monotone_cubic_interpolation&oldid=622341725 and the description of Fritsch-Carlson from",
        "http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation",
        "for a detailed description see https://github.com/MichaelZinsmaier/CurvedLines/docu",
        "preparation get length (x_{k+1} - x_k) and slope s=(p_{k+1} - p_k) / (x_{k+1} - x_k) of the segments",
        "get the values for the desired gradients  m_k for all points k",
        "depending on the used method the formula is different",
        "Fritsch Carlson",
        "sign(prev_slope) != sign(slpe)",
        "m = 3 (prev_length + length) / ((2 length + prev_length) / prev_slope + (length + 2 prev_length) / slope)",
        "Cardinal spline with t € [0,1]",
        "Catmull-Rom for t = 0",
        "get the two major coefficients (c'_{oef1} and c'_{oef2}) for each segment spline",
        "create functions with from the coefficients and capture the parameters",
        "spline for a segment",
        "no real idea whats going on here code mainly from https://code.google.com/p/flot/issues/detail?id=226",
        "if fit option is selected additional datapoints get inserted before the curve calculations in nergal.dev s code.",
        "insert a point before and after the \"real\" data point to force the line",
        "to have a max,min at the data point.",
        "estimate it",
        "x range / (estimated pixel length of placeholder * factor)",
        "use user defined value",
        "add point X s",
        "inside the ulp",
        "add curve points",
        "just use the datapoints",
        "point before current point and after current point need some space in between",
        "xmax  - xmin  / #points",
        "new x point (sampling point for the created curve)",
        "found point one to the left and one to the right of generated new point",
        "similar to above two points from original x data need some space between them",
        "end init"
    ],
    "docstrings": [
        "*  v0.1   initial commit\n *  v0.15  negative values should work now (outcommented a negative -> 0 hook hope it does no harm)\n *  v0.2   added fill option (thanks to monemihir) and multi axis support (thanks to soewono effendi)\n *  v0.3   improved saddle handling and added basic handling of Dates\n *  v0.4   rewritten fill option (thomas ritou) mostly from original flot code (now fill between points rather than to graph bottom), corrected fill Opacity bug\n *  v0.5   rewritten instead of implementing a own draw function CurvedLines is now based on the processDatapoints flot hook (credits go to thomas ritou).\n * \t\t   This change breakes existing code however CurvedLines are now just many tiny straight lines to flot and therefore all flot lines options (like gradient fill,\n * \t       shadow) are now supported out of the box\n *  v0.6   flot 0.8 compatibility and some bug fixes\n *  v0.6.x changed versioning schema\n *\n *  v1.0.0 API Break marked existing implementation/options as deprecated\n *  v1.1.0 added the new curved line calculations based on hermite splines\n *  v1.1.1 added a rough parameter check to make sure the new options are used"
    ],
    "functions": [
        "init",
        "processOptions",
        "processDatapoints",
        "calculateCurvePoints",
        "calculateSplineCurvePoints",
        "createHermiteSplines",
        "calculateLegacyCurvePoints",
        "hasInvalidParameters"
    ],
    "classes": []
}