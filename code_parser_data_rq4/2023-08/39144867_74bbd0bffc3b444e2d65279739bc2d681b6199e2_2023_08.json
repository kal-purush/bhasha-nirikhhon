{
    "identifiers": [
        "logging",
        "pathlib",
        "Path",
        "tests",
        "conftest",
        "TrackedContainer",
        "logging",
        "getLogger",
        "Path",
        "parent",
        "resolve",
        "container",
        "TrackedContainer",
        "container",
        "run_and_wait",
        "timeout",
        "tty",
        "no_failure",
        "command",
        "logs",
        "container",
        "TrackedContainer",
        "container",
        "run_and_wait",
        "timeout",
        "tty",
        "no_failure",
        "command",
        "logs",
        "container",
        "TrackedContainer",
        "container",
        "run_and_wait",
        "timeout",
        "tty",
        "no_failure",
        "command",
        "logs",
        "container",
        "TrackedContainer",
        "container",
        "run_and_wait",
        "timeout",
        "tty",
        "no_failure",
        "command",
        "logs",
        "container",
        "TrackedContainer",
        "container",
        "run_and_wait",
        "timeout",
        "tty",
        "command",
        "container",
        "TrackedContainer",
        "THIS_DIR",
        "container",
        "run_and_wait",
        "timeout",
        "volumes",
        "host_data_dir",
        "cont_data_dir",
        "tty",
        "command",
        "command",
        "logs",
        "logs",
        "logs"
    ],
    "literals": [
        "\"bash\"",
        "\"-c\"",
        "\"source /usr/local/bin/run-hooks.sh\"",
        "\"Should pass exactly one directory\"",
        "\"bash\"",
        "\"-c\"",
        "\"source /usr/local/bin/run-hooks.sh first-arg second-arg\"",
        "\"Should pass exactly one directory\"",
        "\"bash\"",
        "\"-c\"",
        "\"source /usr/local/bin/run-hooks.sh /tmp/missing-dir/\"",
        "\"Directory /tmp/missing-dir/ doesn't exist or is not a directory\"",
        "\"bash\"",
        "\"-c\"",
        "\"touch /tmp/some-file && source /usr/local/bin/run-hooks.sh /tmp/some-file\"",
        "\"Directory /tmp/some-file doesn't exist or is not a directory\"",
        "\"bash\"",
        "\"-c\"",
        "\"mkdir /tmp/empty-dir && source /usr/local/bin/run-hooks.sh /tmp/empty-dir/\"",
        "\"run-hooks-data\"",
        "\"/home/jovyan/data\"",
        "\"cp -r /home/jovyan/data/ /home/jovyan/data-copy/ &&\"",
        "\"source /usr/local/bin/run-hooks.sh /home/jovyan/data-copy/ &&\"",
        "\"echo SOME_VAR is ${SOME_VAR}\"",
        "\"bind\"",
        "\"mode\"",
        "\"ro\"",
        "\"bash\"",
        "\"-c\"",
        "\"Executable python file was successfully\"",
        "\"Ignoring non-executable: /home/jovyan/data-copy//non_executable.py\"",
        "\"SOME_VAR is 123\""
    ],
    "variables": [
        "LOGGER",
        "THIS_DIR",
        "logs",
        "logs",
        "logs",
        "logs",
        "host_data_dir",
        "cont_data_dir",
        "command",
        "logs"
    ],
    "comments": [
        "Copyright (c) Jupyter Development Team.",
        "Distributed under the terms of the Modified BSD License.",
        "https://forums.docker.com/t/all-files-appear-as-executable-in-file-paths-using-bind-mount/99921",
        "Unfortunately, Docker treats all files in mounter dir as executable files",
        "So we make a copy of mounted dir inside a container"
    ],
    "docstrings": [],
    "functions": [
        "test_run_hooks_zero_args",
        "test_run_hooks_two_args",
        "test_run_hooks_missing_dir",
        "test_run_hooks_dir_is_file",
        "test_run_hooks_empty_dir",
        "test_run_hooks_with_files"
    ],
    "classes": []
}