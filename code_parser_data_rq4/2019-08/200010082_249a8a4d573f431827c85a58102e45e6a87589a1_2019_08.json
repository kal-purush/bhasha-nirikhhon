{
    "identifiers": [
        "numpy",
        "np",
        "random",
        "np",
        "array",
        "array",
        "array",
        "np",
        "array",
        "m_array",
        "m_array",
        "shape",
        "np",
        "zeros",
        "np",
        "zeros",
        "dtype",
        "np",
        "ones",
        "np",
        "ones",
        "dtype",
        "np",
        "full",
        "dtype",
        "zero_m_default",
        "zero_m_int",
        "one_m_default",
        "one_m_int",
        "fill_num_m",
        "np",
        "random",
        "random",
        "random_m",
        "random_m",
        "random_m",
        "random_m",
        "random_m",
        "random_m",
        "np",
        "sum",
        "random_m",
        "np",
        "floor",
        "random_m",
        "np",
        "ceil",
        "random_m",
        "np",
        "round",
        "random_m",
        "np",
        "array",
        "np",
        "array",
        "first",
        "second",
        "first",
        "second",
        "first",
        "second",
        "first",
        "second",
        "first",
        "second",
        "first",
        "second",
        "first",
        "first",
        "first",
        "first",
        "first",
        "np",
        "array",
        "dimensions_inch",
        "dimensions_inch",
        "dimensions_cm",
        "x",
        "x",
        "dimensions",
        "new_dimensions"
    ],
    "literals": [
        "f\"type of this array = {array} is {type(array)}\"",
        "\"multi-dimensional array, matrix: \\n\"",
        "\"shape(tuple that tell the number of items in each dimension) of this array = \"",
        "\"zero initialized matrix (default): \\n\"",
        "\"zero initialized matrix (int): \\n\"",
        "\"one initialized matrix (default): \\n\"",
        "\"one initialized matrix (int): \\n\"",
        "\"any num initialized matrix (int): \\n\"",
        "\"random num initialized matrix : \\n\"",
        "\"num at [0,0]: \"",
        "\"num at [0,1]: \"",
        "\"first = \"",
        "\"second = \"",
        "\"first + second = \"",
        "\"first - second = \"",
        "\"first * second = \"",
        "\"first / second = \"",
        "\"first // second = \"",
        "\"\\narithmetic operations btw num and array: \"",
        "\"first + 2 = \"",
        "\"first - 2 = \"",
        "\"first * 2 = \"",
        "\"first / 2 = \"",
        "\"first // 2 = \"",
        "f\"converting inch matrix to cm: \\n Inch = {dimensions_inch}\\n cm = {dimensions_cm}\""
    ],
    "variables": [
        "array",
        "m_array",
        "zero_m_default",
        "zero_m_int",
        "one_m_default",
        "one_m_int",
        "fill_num_m",
        "random_m",
        "first",
        "second",
        "dimensions_inch",
        "dimensions_cm",
        "dimensions",
        "new_dimensions"
    ],
    "comments": [
        "numpy enriches python by bringing super fast multi-dimensional arrays",
        "for faster processing of large data, because they take up less memory",
        "and also support various arithmetic operations that regular python lists dont",
        "matrix",
        "to initialize an array with specific number",
        "this is somethng very porwerful, we can check a condition fro individual item in an array",
        "using simple code of line below, and it would return a matrix of boolean values",
        "corresponding to the ondition we checked",
        "another powerful operation",
        "using below code of line, we can return an array of items in array that follow a condition",
        "sum of all items in an array",
        "floor of each item in an array",
        "ceil of each item in an array",
        "round of each item in an array",
        "arithmetic operation btw numbers and arrays",
        "all arithmetic operation are supported by numpy arrays",
        "real world application of above case is if we have an array of inch n we want to convert to cm",
        "code for the same in pure python"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}