{
    "identifiers": [
        "html",
        "customElement",
        "css",
        "property",
        "LitElement",
        "PageViewElement",
        "SharedStyles",
        "store",
        "RootState",
        "connect",
        "goToPage",
        "queryRegions",
        "addRegions",
        "listTopRegions",
        "GOOGLE_API_KEY",
        "RegionList",
        "Region",
        "showDialog",
        "hideDialog",
        "GoogleMap",
        "customElement",
        "connect",
        "store",
        "PageViewElement",
        "property",
        "property",
        "property",
        "property",
        "property",
        "SharedStyles",
        "css",
        "html",
        "goToPage",
        "html",
        "GOOGLE_API_KEY",
        "regionid",
        "regionid",
        "html",
        "region",
        "region",
        "region",
        "region",
        "mapelement",
        "mapelement",
        "mapelement",
        "feature",
        "mapelement",
        "feature",
        "input",
        "showDialog",
        "hideDialog",
        "form",
        "form",
        "i",
        "checkboxes",
        "i",
        "checkboxes",
        "i",
        "names",
        "i",
        "checkbox",
        "input",
        "alert",
        "checkbox",
        "index",
        "nregion",
        "input",
        "newregions",
        "region",
        "newregions",
        "alert",
        "addRegions",
        "newregions",
        "hideDialog",
        "e",
        "e",
        "form",
        "i",
        "checkboxes",
        "i",
        "checkboxes",
        "i",
        "checkbox",
        "all",
        "html",
        "html",
        "propid",
        "html",
        "propid",
        "propid",
        "newregion",
        "index",
        "html",
        "index",
        "newregion",
        "e",
        "e",
        "e",
        "e",
        "files",
        "files",
        "FileReader",
        "reader",
        "theFile",
        "eread",
        "eread",
        "geojson",
        "newregions",
        "geojson",
        "newregions",
        "geojson",
        "me",
        "newregions",
        "f",
        "reader",
        "f",
        "state",
        "state",
        "state",
        "qr",
        "qr",
        "qr",
        "store",
        "queryRegions",
        "qr"
    ],
    "literals": [
        "'lit-element'",
        "'../../components/page-view-element'",
        "'../../styles/shared-styles'",
        "'../../app/store'",
        "'pwa-helpers/connect-mixin'",
        "'../../app/actions'",
        "'./actions'",
        "'config/google-api-key'",
        "'./reducers'",
        "\"../../thirdparty/google-map/src/google-map\"",
        "\"../../components/google-map-json-layer\"",
        "'util/ui_functions'",
        "'../../thirdparty/google-map/src/google-map'",
        "'regions-editor'",
        "string",
        "string",
        "string",
        "'[{\"stylers\":[{\"hue\":\"#00aaff\"},{\"saturation\":-100},{\"lightness\":12},{\"gamma\":2.15}]},{\"featureType\":\"landscape\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"poi\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road\",\"elementType\":\"geometry\",\"stylers\":[{\"lightness\":57}]},{\"featureType\":\"road\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"road\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"lightness\":24},{\"visibility\":\"on\"}]},{\"featureType\":\"road.highway\",\"stylers\":[{\"weight\":1}]},{\"featureType\":\"transit\",\"elementType\":\"labels\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"water\",\"stylers\":[{\"color\":\"#206fff\"},{\"saturation\":-35},{\"lightness\":50},{\"visibility\":\"on\"},{\"weight\":1.5}]}]'",
        ".cltrow wl-button {\n                padding: 2px;\n            }\n\n            .map {\n                height: calc(100% - 45px);\n                width: 100%;\n            }",
        "<div class=\"cltrow\">\n            <wl-button flat inverted @click=\"${()=> goToPage('regions')}\">\n                <wl-icon>arrow_back_ios</wl-icon>\n            </wl-button>\n            <div class=\"cltmain\" style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis;padding-left:5px;\">\n                <wl-title level=\"4\" style=\"margin: 0px\">${this.regionType} Regions</wl-title>\n            </div>\n            <wl-icon @click=\"${this._showAddRegionsDialog}\" \n                class=\"actionIcon bigActionIcon\">note_add</wl-icon>\n        </div>\n        ${this.regionType ? \n            html`<p>The following shows the current ${this.regionType} areas of ${this.parentRegionId}</p>` : \"\"}\n\n        <!-- FIXME: Latitude, Longitude, Zoom should be automatically generated from the regions -->\n        <google-map class=\"map\" api-key=\"${GOOGLE_API_KEY}\" \n            latitude=\"8\" longitude=\"40\" zoom=\"5\" disable-default-ui=\"true\" draggable=\"true\"\n            mapTypeId=\"terrain\" styles=\"${this._mapStyles}\">\n\n            ${Object.keys(this._regions || {}).map((regionid) => {\n              let region = this._regions![regionid];\n              return html`\n                <google-map-json-layer region_id=\"${region.id}\" region_name=\"${region.name}\" \n                    url=\"${region.geojson}\" json=\"${region.geojson_blob}\"></google-map-json-layer>\n              `;\n            })}\n        </google-map>\n\n        ${this._renderAddRegionsDialog()}",
        "'regions'",
        "<p>The following shows the current ${this.regionType} areas of ${this.parentRegionId}</p>",
        "\"\"",
        "<google-map-json-layer region_id=\"${region.id}\" region_name=\"${region.name}\" \n                    url=\"${region.geojson}\" json=\"${region.geojson_blob}\"></google-map-json-layer>",
        "\"Clearing Map\"",
        "\"google-map\"",
        "\"#geojson_file\"",
        "\"addRegionDialog\"",
        "\"addRegionDialog\"",
        "\"#regionsForm\"",
        "\"regionindex\"",
        "\"regionname\"",
        "\"Please enter all region names, or Select the geojson property to automatically fill them\"",
        "\"Please select some/all regions to add\"",
        "\"addRegionDialog\"",
        "\"#regionsForm\"",
        "\"regionindex\"",
        "<wl-dialog class=\"larger\" id=\"addRegionDialog\" fixed backdrop blockscrolling>\n            <h3 slot=\"header\">Add Regions</h3>\n            <div slot=\"content\">\n                <br />\n                <form id=\"regionsForm\">\n                    <div>\n                        <input type=\"file\" id=\"geojson_file\" name=\"geojson_file\"\n                            accept=\"application/json\" @change=${this._onGeoJsonUpload}></input>\n                        <label for=\"geojson_file\">LOAD GEOJSON FILE</label>\n                    </div>\n                    <br />\n                    ${(this._newregions && this._newregions.length > 0) ? \n                        html`\n                        <div style=\"max-height: 400px; overflow:auto\">\n                        <table class=\"pure-table pure-table-bordered\">\n                            <thead>\n                                <th><input type=\"checkbox\" checked @change=${this._selectAllCheckboxes}></input></th>\n                                <th>\n                                    <div class=\"input_full\">\n                                        Region Name\n                                        <select @change=${this._selectGeojsonNameProperty}>\n                                            <option selected disabled>Select the geojson property that Identifies the Region Name</option>\n                                            ${Object.keys(this._newregions[0].properties).map((propid) => {\n                                                return html`<option value=\"${propid}\">${propid}</option>`\n                                            })}\n                                        </select>    \n                                    </div>            \n                                </th>\n                            </thead>\n                            <tbody>\n                                ${this._newregions.map((newregion, index) => {\n                                    return html`\n                                        <tr>\n                                            <td><input type=\"checkbox\" checked class=\"regionindex\" value=\"${index}\"></td>\n                                            <td>\n                                                <div class=\"input_full\">\n                                                    <input type=\"text\" class=\"regionname\"\n                                                        value=\"${this._geojson_nameprop ? \n                                                            newregion.properties[this._geojson_nameprop] : ''}\">\n                                                    </input>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    `;\n                                })}\n                            </tbody>\n                        </table>\n                        </div>\n                        ` \n                        : \"\"\n                    }\n                </form>\n            </div>\n            <div slot=\"footer\">\n                <wl-button @click=\"${this._onAddRegionsCancel}\" inverted flat>Cancel</wl-button>\n                <wl-button @click=\"${this._onAddRegionsSubmit}\" class=\"submit\" id=\"dialog-submit-button\">Submit</wl-button>\n            </div>\n        </wl-dialog>",
        "<div style=\"max-height: 400px; overflow:auto\">\n                        <table class=\"pure-table pure-table-bordered\">\n                            <thead>\n                                <th><input type=\"checkbox\" checked @change=${this._selectAllCheckboxes}></input></th>\n                                <th>\n                                    <div class=\"input_full\">\n                                        Region Name\n                                        <select @change=${this._selectGeojsonNameProperty}>\n                                            <option selected disabled>Select the geojson property that Identifies the Region Name</option>\n                                            ${Object.keys(this._newregions[0].properties).map((propid) => {\n                                                return html`<option value=\"${propid}\">${propid}</option>`\n                                            })}\n                                        </select>    \n                                    </div>            \n                                </th>\n                            </thead>\n                            <tbody>\n                                ${this._newregions.map((newregion, index) => {\n                                    return html`\n                                        <tr>\n                                            <td><input type=\"checkbox\" checked class=\"regionindex\" value=\"${index}\"></td>\n                                            <td>\n                                                <div class=\"input_full\">\n                                                    <input type=\"text\" class=\"regionname\"\n                                                        value=\"${this._geojson_nameprop ? \n                                                            newregion.properties[this._geojson_nameprop] : ''}\">\n                                                    </input>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    `;\n                                })}\n                            </tbody>\n                        </table>\n                        </div>",
        "<option value=\"${propid}\">${propid}</option>",
        "<tr>\n                                            <td><input type=\"checkbox\" checked class=\"regionindex\" value=\"${index}\"></td>\n                                            <td>\n                                                <div class=\"input_full\">\n                                                    <input type=\"text\" class=\"regionname\"\n                                                        value=\"${this._geojson_nameprop ? \n                                                            newregion.properties[this._geojson_nameprop] : ''}\">\n                                                    </input>\n                                                </div>\n                                            </td>\n                                        </tr>",
        "''",
        "\"\"",
        "\"FeatureCollection\""
    ],
    "variables": [
        "region",
        "mapelement",
        "input",
        "form",
        "checkboxes",
        "names",
        "newregions",
        "i",
        "checkbox",
        "input",
        "index",
        "nregion",
        "region",
        "all",
        "form",
        "checkboxes",
        "i",
        "checkbox",
        "files",
        "me",
        "f",
        "reader",
        "geojson",
        "newregions",
        "qr"
    ],
    "comments": [
        "console.log(me._newregions);"
    ],
    "docstrings": [],
    "functions": [
        "styles",
        "render",
        "clearMap",
        "_showAddRegionsDialog",
        "_onAddRegionsCancel",
        "_onAddRegionsSubmit",
        "_selectAllCheckboxes",
        "_renderAddRegionsDialog",
        "_selectGeojsonNameProperty",
        "_onGeoJsonUpload",
        "stateChanged"
    ],
    "classes": [
        "RegionsEditor"
    ]
}