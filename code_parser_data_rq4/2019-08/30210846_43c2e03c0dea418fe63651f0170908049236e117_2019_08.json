{
    "identifiers": [
        "sys",
        "unittest",
        "unittest",
        "mock",
        "Mock",
        "patch",
        "pyanaconda",
        "ui",
        "common",
        "StandaloneSpoke",
        "unittest",
        "TestCase",
        "Mock",
        "Mock",
        "Mock",
        "property",
        "paths",
        "property",
        "_list_hubs",
        "property",
        "_collectActionClasses",
        "paths",
        "StandaloneSpoke",
        "_orderActionClasses",
        "action_classes",
        "hubs",
        "cls",
        "cls",
        "classes",
        "hub_class",
        "hub_class",
        "data",
        "storage",
        "payload",
        "hub",
        "set_path",
        "paths",
        "hub",
        "set_path",
        "paths",
        "hub",
        "_collectCategoriesAndSpokes",
        "hub_class",
        "_get_categories",
        "hub_class",
        "c",
        "sorted",
        "s",
        "s",
        "categories",
        "c",
        "c",
        "categories",
        "pyanaconda",
        "ui",
        "tui",
        "TextUserInterface",
        "TextUserInterface",
        "storage",
        "payload",
        "pyanaconda",
        "ui",
        "tui",
        "hubs",
        "summary",
        "SummaryHub",
        "assertEqual",
        "hubs",
        "SummaryHub",
        "assertEqual",
        "_get_action_class_names",
        "assertEqual",
        "_get_category_names",
        "SummaryHub",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "window_group",
        "meh",
        "builder",
        "sys",
        "modules",
        "Mock",
        "pyanaconda",
        "ui",
        "gui",
        "GraphicalUserInterface",
        "GraphicalUserInterface",
        "storage",
        "payload",
        "pyanaconda",
        "ui",
        "gui",
        "hubs",
        "summary",
        "SummaryHub",
        "assertEqual",
        "hubs",
        "SummaryHub",
        "assertEqual",
        "_get_action_class_names",
        "assertEqual",
        "_get_category_names",
        "SummaryHub"
    ],
    "literals": [
        "\"spokes\"",
        "\"spokes\"",
        "\"spokes\"",
        "\"categories\"",
        "\"categories\"",
        "\"UnsupportedHardwareSpoke\"",
        "\"SummaryHub\"",
        "\"ProgressSpoke\"",
        "'CustomizationCategory'",
        "'LocalizationCategory'",
        "'LangSpoke'",
        "'TimeSpoke'",
        "'SoftwareCategory'",
        "'SoftwareSpoke'",
        "'SourceSpoke'",
        "'SystemCategory'",
        "'NetworkSpoke'",
        "'PartTypeSpoke'",
        "'ShellSpoke'",
        "'StorageSpoke'",
        "'UserSettingsCategory'",
        "'PasswordSpoke'",
        "'UserSpoke'",
        "'sys.modules'",
        "\"pyanaconda.ui.gui.Gtk.Builder\"",
        "\"pyanaconda.ui.gui.meh\"",
        "\"pyanaconda.ui.gui.MainWindow\"",
        "\"pyanaconda.ui.gui.ANACONDA_WINDOW_GROUP\"",
        "\"gi.repository.TimezoneMap\"",
        "'WelcomeLanguageSpoke'",
        "'NetworkStandaloneSpoke'",
        "'SummaryHub'",
        "'ProgressSpoke'",
        "'CustomizationCategory'",
        "'LocalizationCategory'",
        "'DatetimeSpoke'",
        "'KeyboardSpoke'",
        "'LangsupportSpoke'",
        "'SoftwareCategory'",
        "'SoftwareSelectionSpoke'",
        "'SourceSpoke'",
        "'SystemCategory'",
        "'BlivetGuiSpoke'",
        "'CustomPartitioningSpoke'",
        "'FilterSpoke'",
        "'NetworkSpoke'",
        "'StorageSpoke'",
        "'UserSettingsCategory'",
        "'PasswordSpoke'",
        "'UserSpoke'"
    ],
    "variables": [
        "maxDiff",
        "data",
        "storage",
        "payload",
        "classes",
        "hub",
        "categories"
    ],
    "comments": [
        "",
        "Copyright (C) 2019  Red Hat, Inc.",
        "",
        "This copyrighted material is made available to anyone wishing to use,",
        "modify, copy, or redistribute it subject to the terms and conditions of",
        "the GNU General Public License v.2, or (at your option) any later version.",
        "This program is distributed in the hope that it will be useful, but WITHOUT",
        "ANY WARRANTY expressed or implied, including the implied warranties of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General",
        "Public License for more details.  You should have received a copy of the",
        "GNU General Public License along with this program; if not, write to the",
        "Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA",
        "02110-1301, USA.  Any Red Hat trademarks that are incorporated in the",
        "source code or documentation are not subject to the GNU General Public",
        "License and may only be used or replicated with the express permission of",
        "Red Hat, Inc.",
        "",
        "Red Hat Author(s): Vendula Poncova <vponcova@redhat.com>",
        "",
        "Create the interface.",
        "Check the hubs",
        "Check the actions classes.",
        "Check the Summary hub.",
        "Mock the TimezoneMap hack.",
        "Create the interface.",
        "Check the hubs.",
        "Check the actions classes.",
        "Check the Summary hub."
    ],
    "docstrings": [
        "\"\"\"Simple test case for UI.\n\n    The goal of this test is to at least import all UI elements.\n    \"\"\""
    ],
    "functions": [
        "setUp",
        "paths",
        "hubs",
        "action_classes",
        "_get_action_class_names",
        "_get_categories",
        "_get_category_names",
        "tui_test",
        "gui_test"
    ],
    "classes": [
        "SimpleUITestCase"
    ]
}