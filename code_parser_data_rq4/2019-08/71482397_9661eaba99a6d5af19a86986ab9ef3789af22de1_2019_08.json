{
    "identifiers": [
        "os",
        "time",
        "logging",
        "parsl",
        "channels",
        "LocalChannel",
        "parsl",
        "launchers",
        "SingleNodeLauncher",
        "parsl",
        "providers",
        "cluster_provider",
        "ClusterProvider",
        "parsl",
        "providers",
        "lsf",
        "template",
        "template_string",
        "parsl",
        "utils",
        "RepresentationMixin",
        "wtime_to_minutes",
        "logging",
        "getLogger",
        "ClusterProvider",
        "RepresentationMixin",
        "channel",
        "LocalChannel",
        "nodes_per_block",
        "init_blocks",
        "min_blocks",
        "max_blocks",
        "parallelism",
        "walltime",
        "scheduler_options",
        "worker_init",
        "project",
        "cmd_timeout",
        "move_files",
        "launcher",
        "SingleNodeLauncher",
        "label",
        "channel",
        "nodes_per_block",
        "init_blocks",
        "min_blocks",
        "max_blocks",
        "parallelism",
        "walltime",
        "cmd_timeout",
        "cmd_timeout",
        "launcher",
        "launcher",
        "project",
        "move_files",
        "scheduler_options",
        "worker_init",
        "join",
        "resources",
        "keys",
        "format",
        "job_id_list",
        "execute_wait",
        "cmd",
        "retcode",
        "logger",
        "debug",
        "format",
        "label",
        "retcode",
        "resources",
        "keys",
        "line",
        "stdout",
        "split",
        "line",
        "split",
        "parts",
        "parts",
        "parts",
        "translate_table",
        "get",
        "parts",
        "resources",
        "job_id",
        "status",
        "jobs_missing",
        "remove",
        "job_id",
        "missing_job",
        "jobs_missing",
        "resources",
        "missing_job",
        "resources",
        "missing_job",
        "command",
        "tasks_per_node",
        "job_name",
        "provisioned_blocks",
        "max_blocks",
        "logger",
        "warn",
        "format",
        "label",
        "format",
        "job_name",
        "time",
        "time",
        "format",
        "script_dir",
        "job_name",
        "os",
        "path",
        "abspath",
        "script_path",
        "logger",
        "debug",
        "format",
        "nodes_per_block",
        "channel",
        "script_dir",
        "nodes_per_block",
        "tasks_per_node",
        "wtime_to_minutes",
        "walltime",
        "scheduler_options",
        "worker_init",
        "project",
        "command",
        "launcher",
        "command",
        "tasks_per_node",
        "nodes_per_block",
        "logger",
        "debug",
        "_write_submit_script",
        "template_string",
        "script_path",
        "job_name",
        "job_config",
        "move_files",
        "logger",
        "debug",
        "channel",
        "push_file",
        "script_path",
        "channel",
        "script_dir",
        "logger",
        "debug",
        "script_path",
        "execute_wait",
        "format",
        "channel_script_path",
        "retcode",
        "line",
        "stdout",
        "split",
        "line",
        "lower",
        "startswith",
        "line",
        "lower",
        "line",
        "split",
        "strip",
        "resources",
        "job_id",
        "logger",
        "warning",
        "logger",
        "error",
        "retcode",
        "stdout",
        "strip",
        "stderr",
        "strip",
        "job_id",
        "job_ids",
        "join",
        "job_ids",
        "execute_wait",
        "format",
        "job_id_list",
        "retcode",
        "jid",
        "job_ids",
        "resources",
        "jid",
        "translate_table",
        "i",
        "job_ids",
        "i",
        "job_ids",
        "rets"
    ],
    "literals": [
        "'PEND'",
        "'PENDING'",
        "'RUN'",
        "'RUNNING'",
        "'DONE'",
        "'COMPLETED'",
        "'EXIT'",
        "'FAILED'",
        "'PSUSP'",
        "'CANCELLED'",
        "'USUSP'",
        "'CANCELLED'",
        "'SSUSP'",
        "'CANCELLED'",
        "\"00:10:00\"",
        "''",
        "''",
        "'LSF'",
        "','",
        "\"bjobs {0}\"",
        "\"Updating job status from {} failed with return code {}\"",
        "'\\n'",
        "'JOBID'",
        "'UNKNOWN'",
        "'status'",
        "'status'",
        "'PENDING'",
        "'RUNNING'",
        "'status'",
        "'COMPLETED'",
        "\"parsl.auto\"",
        "\"LSF provider '{}' is at capacity (no more blocks will be added)\"",
        "\"{0}.{1}\"",
        "\"{0}/{1}.submit\"",
        "\"Requesting one block with {} nodes\"",
        "\"submit_script_dir\"",
        "\"nodes\"",
        "\"tasks_per_node\"",
        "\"walltime\"",
        "\"scheduler_options\"",
        "\"worker_init\"",
        "\"project\"",
        "\"user_script\"",
        "\"user_script\"",
        "\"Writing submit script\"",
        "\"moving files\"",
        "\"not moving files\"",
        "\"bsub {0}\"",
        "'\\n'",
        "\"job\"",
        "\"is submitted to\"",
        "'<>'",
        "'job_id'",
        "'status'",
        "'PENDING'",
        "\"Submission of command to scale_out failed\"",
        "\"Retcode:%s STDOUT:%s STDERR:%s\"",
        "' '",
        "\"bkill {0}\"",
        "'status'",
        "'USUSP'"
    ],
    "variables": [
        "logger",
        "translate_table",
        "label",
        "project",
        "move_files",
        "scheduler_options",
        "worker_init",
        "job_id_list",
        "cmd",
        "retcode",
        "stdout",
        "stderr",
        "jobs_missing",
        "parts",
        "job_id",
        "status",
        "job_name",
        "script_path",
        "script_path",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "job_config",
        "channel_script_path",
        "channel_script_path",
        "retcode",
        "stdout",
        "stderr",
        "job_id",
        "job_id",
        "job_id",
        "job_id_list",
        "retcode",
        "stdout",
        "stderr",
        "rets",
        "rets",
        "rets"
    ],
    "comments": [
        "(failed),",
        "Execute_wait failed. Do no update",
        "squeue does not report on jobs that are not running. So we are filling in the",
        "blanks for missing jobs, we might lose some information about why the jobs failed.",
        "Wrap the command",
        "Job suspended by user/admin"
    ],
    "docstrings": [
        "\"\"\"LSF Execution Provider\n\n    This provider uses sbatch to submit, squeue for status and scancel to cancel\n    jobs. The sbatch script to be used is created from a template file in this\n    same module.\n\n    Parameters\n    ----------\n    channel : Channel\n        Channel for accessing this provider. Possible channels include\n        :class:`~parsl.channels.LocalChannel` (the default),\n        :class:`~parsl.channels.SSHChannel`, or\n        :class:`~parsl.channels.SSHInteractiveLoginChannel`.\n    nodes_per_block : int\n        Nodes to provision per block.\n    init_blocks : int\n        Number of blocks to request at the start of the run.\n    min_blocks : int\n        Minimum number of blocks to maintain.\n    max_blocks : int\n        Maximum number of blocks to maintain.\n    parallelism : float\n        Ratio of provisioned task slots to active tasks. A parallelism value of 1 represents aggressive\n        scaling where as many resources as possible are used; parallelism close to 0 represents\n        the opposite situation in which as few resources as possible (i.e., min_blocks) are used.\n    walltime : str\n        Walltime requested per block in HH:MM:SS.\n    project : str\n        Project to which the resources must be charged\n    scheduler_options : str\n        String to prepend to the #SBATCH blocks in the submit script to the scheduler.\n    worker_init : str\n        Command to be run before starting a worker, such as 'module load Anaconda; source activate env'.\n    cmd_timeout : int\n        Seconds after which requests to the scheduler will timeout. Default: 120s\n    launcher : Launcher\n        Launcher for this provider. Possible launchers include\n        :class:`~parsl.launchers.SingleNodeLauncher` (the default),\n        :class:`~parsl.launchers.SrunLauncher`, or\n        :class:`~parsl.launchers.AprunLauncher`\n     move_files : Optional[Bool]: should files be moved? by default, Parsl will try to move files.\n    \"\"\"",
        "''' Internal: Do not call. Returns the status list for a list of job_ids\n\n        Args:\n              self\n\n        Returns:\n              [status...] : Status list of all jobs\n        '''",
        "\"\"\"Submit the command as an LSF job.\n\n        Parameters\n        ----------\n        command : str\n            Command to be made on the remote side.\n        tasks_per_node : int\n            Command invocations to be launched per node\n        job_name : str\n            Name for the job (must be unique).\n        Returns\n        -------\n        None or str\n            If at capacity, returns None; otherwise, a string identifier for the job\n        \"\"\"",
        "''' Cancels the jobs specified by a list of job ids\n\n        Args:\n        job_ids : [<job_id> ...]\n\n        Returns :\n        [True/False...] : If the cancel operation fails the entire list will be False.\n        '''"
    ],
    "functions": [
        "_status",
        "submit",
        "cancel"
    ],
    "classes": [
        "LSFProvider"
    ]
}