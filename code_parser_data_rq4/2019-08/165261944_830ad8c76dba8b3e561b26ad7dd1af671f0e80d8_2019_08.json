{
    "identifiers": [
        "uk",
        "gov",
        "hmcts",
        "reform",
        "amapi",
        "functional",
        "client",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableMap",
        "com",
        "warrenstrange",
        "googleauth",
        "GoogleAuthenticator",
        "io",
        "restassured",
        "RestAssured",
        "io",
        "restassured",
        "response",
        "Response",
        "lombok",
        "slf4j",
        "Slf4j",
        "java",
        "util",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "springframework",
        "http",
        "HttpHeaders",
        "CONTENT_TYPE",
        "org",
        "springframework",
        "http",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "Slf4j",
        "s2sUrl",
        "microserviceName",
        "microserviceKey",
        "authenticator",
        "s2sUrl",
        "microserviceName",
        "microserviceKey",
        "s2sUrl",
        "s2sUrl",
        "microserviceName",
        "microserviceName",
        "microserviceKey",
        "microserviceKey",
        "ImmutableMap",
        "of",
        "microserviceName",
        "authenticator",
        "getTotpPassword",
        "microserviceKey",
        "response",
        "RestAssured",
        "given",
        "relaxedHTTPSValidation",
        "baseUri",
        "s2sUrl",
        "header",
        "CONTENT_TYPE",
        "APPLICATION_JSON_VALUE",
        "body",
        "post",
        "andReturn",
        "assertThat",
        "response",
        "getStatusCode",
        "isEqualTo",
        "jwtToken",
        "response",
        "getBody",
        "asString",
        "log",
        "debug",
        "jwtToken",
        "jwtToken"
    ],
    "literals": [
        "\"microservice\"",
        "\"oneTimePassword\"",
        "\"/lease\"",
        "\"Got JWT from S2S service: \""
    ],
    "variables": [
        "s2sUrl",
        "microserviceName",
        "microserviceKey"
    ],
    "comments": [],
    "docstrings": [
        "* Sign in to s2s.\n     *\n     * @return s2s JWT token."
    ],
    "functions": [
        "S2sClient",
        "signIntoS2S"
    ],
    "classes": [
        "S2sClient"
    ]
}