{
    "identifiers": [
        "sys",
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "utils",
        "save_predictions",
        "save_probabilities",
        "utils",
        "preprocess_image",
        "utils",
        "kappa_loss",
        "ordinal_loss",
        "cauchy_loss",
        "correntropy_loss",
        "keras",
        "models",
        "load_model",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "load_model",
        "os",
        "path",
        "join",
        "model_path",
        "model_name",
        "custom_objects",
        "kappa_loss",
        "ordinal_loss",
        "cauchy_loss",
        "correntropy_loss",
        "pd",
        "read_csv",
        "output_csv",
        "iloc",
        "values",
        "f",
        "sorted",
        "os",
        "listdir",
        "file_path",
        "f",
        "endswith",
        "f",
        "endswith",
        "f",
        "endswith",
        "files",
        "append",
        "f",
        "len",
        "files",
        "N",
        "np",
        "empty",
        "N",
        "im_size",
        "im_size",
        "dtype",
        "np",
        "uint8",
        "i",
        "N",
        "files",
        "i",
        "os",
        "path",
        "join",
        "file_path",
        "filename",
        "filename",
        "endswith",
        "filename",
        "endswith",
        "filename",
        "endswith",
        "filename",
        "endswith",
        "os",
        "path",
        "exists",
        "filename",
        "filename",
        "os",
        "path",
        "exists",
        "filename",
        "filename",
        "os",
        "path",
        "exists",
        "filename",
        "filename",
        "os",
        "path",
        "exists",
        "filename",
        "filename",
        "preprocess_image",
        "filename",
        "fill_type",
        "fill_type",
        "desired_size",
        "im_size",
        "x_test",
        "softmax_activation",
        "model",
        "predict",
        "x_test",
        "verbose",
        "np",
        "argmax",
        "y_test_raw",
        "axis",
        "model",
        "predict",
        "x_test",
        "verbose",
        "y_test_raw",
        "astype",
        "sum",
        "axis",
        "save_predictions",
        "y_test",
        "files",
        "save_name",
        "output_csv",
        "predict_test",
        "x_test"
    ],
    "literals": [
        "'data'",
        "'output.csv'",
        "'.'",
        "'DCNet.h5'",
        "'kappa_loss'",
        "'ordinal_loss'",
        "'cauchy_loss'",
        "'correntropy_loss'",
        "'mix'",
        "'.tif'",
        "'.jpeg'",
        "'.jpg'",
        "\"Files:\"",
        "'.tif'",
        "'.jpeg'",
        "'.jpg'",
        "'.png'",
        "'.tif'",
        "'.tif'",
        "'.jpeg'",
        "'.jpeg'",
        "'.jpg'",
        "'.jpg'",
        "'.png'",
        "'.png'",
        "\"Check file extension\"",
        "\"__main__\""
    ],
    "variables": [
        "file_path",
        "file_path",
        "output_csv",
        "output_csv",
        "model_path",
        "model_name",
        "model",
        "fill_type",
        "softmax_activation",
        "im_size",
        "files",
        "files",
        "N",
        "x_test",
        "filename",
        "filename",
        "x_test",
        "i",
        "y_test_raw",
        "y_test",
        "y_test_raw",
        "y_test"
    ],
    "comments": [
        "from sklearn.model_selection import train_test_split",
        "from sklearn.metrics import cohen_kappa_score",
        "Name of the model file to load",
        "Fill type for image proprocessing. 'crop, 'pad', or 'mix'",
        "If True, softmax activation was used for the output layer, otherwise sigmoid was used",
        "299 for inception style networks, 244 for densenet style networks",
        "Load data"
    ],
    "docstrings": [],
    "functions": [
        "predict_test"
    ],
    "classes": []
}