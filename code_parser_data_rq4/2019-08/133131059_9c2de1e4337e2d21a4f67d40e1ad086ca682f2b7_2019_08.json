{
    "identifiers": [
        "Collections",
        "Generic",
        "Data",
        "Data",
        "Common",
        "Linq",
        "Microsoft",
        "ML",
        "Microsoft",
        "ML",
        "CommandLine",
        "Microsoft",
        "ML",
        "Data",
        "Microsoft",
        "ML",
        "Internal",
        "Utilities",
        "Microsoft",
        "ML",
        "Runtime",
        "LoadableClass",
        "DatabaseLoader",
        "Summary",
        "DatabaseLoader",
        "SignatureLoadModel",
        "DatabaseLoader",
        "LoaderSignature",
        "Microsoft",
        "ML",
        "Data",
        "IDataLoader",
        "Func",
        "DbDataReader",
        "VersionInfo",
        "modelSignature",
        "verWrittenCur",
        "verReadableCur",
        "verWeCanReadBack",
        "loaderSignature",
        "LoaderSignature",
        "loaderAssemblyName",
        "DatabaseLoader",
        "Assembly",
        "FullName",
        "IHostEnvironment",
        "env",
        "Options",
        "options",
        "options",
        "options",
        "Options",
        "Contracts",
        "CheckValue",
        "env",
        "nameof",
        "env",
        "_host",
        "env",
        "Register",
        "RegistrationName",
        "_host",
        "CheckValue",
        "options",
        "nameof",
        "options",
        "options",
        "Columns",
        "Utils",
        "Size",
        "cols",
        "_host",
        "Except",
        "_bindings",
        "Bindings",
        "cols",
        "IHost",
        "host",
        "ModelLoadContext",
        "ctx",
        "Contracts",
        "AssertValue",
        "host",
        "host",
        "AssertValue",
        "ctx",
        "_host",
        "host",
        "_bindings",
        "Bindings",
        "ctx",
        "IHostEnvironment",
        "env",
        "ModelLoadContext",
        "ctx",
        "Contracts",
        "CheckValue",
        "env",
        "nameof",
        "env",
        "env",
        "Register",
        "RegistrationName",
        "h",
        "CheckValue",
        "ctx",
        "nameof",
        "ctx",
        "ctx",
        "CheckAtModel",
        "GetVersionInfo",
        "h",
        "Apply",
        "DatabaseLoader",
        "h",
        "ctx",
        "ICanSaveModel",
        "ModelSaveContext",
        "ctx",
        "_host",
        "CheckValue",
        "ctx",
        "nameof",
        "ctx",
        "ctx",
        "CheckAtModel",
        "ctx",
        "SetVersionInfo",
        "GetVersionInfo",
        "_bindings",
        "Save",
        "ctx",
        "_bindings",
        "OutputSchema",
        "Func",
        "DbDataReader",
        "input",
        "BoundLoader",
        "input",
        "Argument",
        "ArgumentType",
        "AtMostOnce",
        "HelpText",
        "Argument",
        "ArgumentType",
        "AtMostOnce",
        "HelpText",
        "DbType",
        "Single",
        "Argument",
        "ArgumentType",
        "Multiple",
        "HelpText",
        "ShortName",
        "Argument",
        "ArgumentType",
        "Multiple",
        "HelpText",
        "ShortName",
        "Argument",
        "ArgumentType",
        "Multiple",
        "HelpText",
        "Name",
        "ShortName",
        "SortOrder",
        "Column",
        "name",
        "sourceIndex",
        "DataViewType",
        "colType",
        "Contracts",
        "AssertNonEmpty",
        "name",
        "Contracts",
        "Assert",
        "sourceIndex",
        "HasValue",
        "sourceIndex",
        "Contracts",
        "AssertValue",
        "colType",
        "Name",
        "name",
        "SourceIndex",
        "sourceIndex",
        "ColType",
        "colType",
        "ColInfo",
        "DatabaseLoader",
        "parent",
        "Column",
        "cols",
        "Contracts",
        "AssertNonEmpty",
        "cols",
        "parent",
        "_host",
        "Start",
        "col",
        "cols",
        "col",
        "Source",
        "ch",
        "ExceptUserArg",
        "nameof",
        "Column",
        "Source",
        "Infos",
        "ColInfo",
        "cols",
        "Length",
        "Infos",
        "Length",
        "iinfo",
        "Infos",
        "Length",
        "iinfo",
        "cols",
        "iinfo",
        "ch",
        "CheckNonWhiteSpace",
        "col",
        "Name",
        "nameof",
        "col",
        "Name",
        "col",
        "Name",
        "Trim",
        "iinfo",
        "nameToInfoIndex",
        "Count",
        "nameToInfoIndex",
        "ContainsKey",
        "name",
        "ch",
        "Info",
        "col",
        "KeyCount",
        "itemType",
        "ConstructKeyType",
        "col",
        "Type",
        "col",
        "KeyCount",
        "itemType",
        "ColumnTypeExtensions",
        "PrimitiveTypeFromType",
        "col",
        "Type",
        "ToType",
        "Infos",
        "iinfo",
        "ColInfo",
        "name",
        "col",
        "Source",
        "itemType",
        "nameToInfoIndex",
        "name",
        "iinfo",
        "OutputSchema",
        "ComputeOutputSchema",
        "ModelLoadContext",
        "ctx",
        "DatabaseLoader",
        "parent",
        "Contracts",
        "AssertValue",
        "ctx",
        "ctx",
        "Reader",
        "ReadInt32",
        "Contracts",
        "CheckDecode",
        "cinfo",
        "Infos",
        "ColInfo",
        "cinfo",
        "iinfo",
        "cinfo",
        "iinfo",
        "ctx",
        "LoadNonEmptyString",
        "InternalDataKind",
        "ctx",
        "Reader",
        "ReadByte",
        "Contracts",
        "CheckDecode",
        "Enum",
        "IsDefined",
        "InternalDataKind",
        "kind",
        "ctx",
        "Reader",
        "ReadBoolByte",
        "isKey",
        "Contracts",
        "CheckDecode",
        "KeyDataViewType",
        "IsValidDataType",
        "kind",
        "ToType",
        "count",
        "ctx",
        "Reader",
        "ReadUInt64",
        "Contracts",
        "CheckDecode",
        "count",
        "itemType",
        "KeyDataViewType",
        "kind",
        "ToType",
        "count",
        "itemType",
        "ColumnTypeExtensions",
        "PrimitiveTypeFromKind",
        "kind",
        "ctx",
        "Reader",
        "ReadBoolByte",
        "hasSourceIndex",
        "sourceIndex",
        "ctx",
        "Reader",
        "ReadInt32",
        "Infos",
        "iinfo",
        "ColInfo",
        "name",
        "sourceIndex",
        "itemType",
        "OutputSchema",
        "ComputeOutputSchema",
        "ModelSaveContext",
        "ctx",
        "Contracts",
        "AssertValue",
        "ctx",
        "ctx",
        "Writer",
        "Write",
        "Infos",
        "Length",
        "iinfo",
        "Infos",
        "Length",
        "iinfo",
        "Infos",
        "iinfo",
        "ctx",
        "SaveNonEmptyString",
        "info",
        "Name",
        "info",
        "ColType",
        "GetItemType",
        "GetRawKind",
        "Contracts",
        "Assert",
        "InternalDataKind",
        "rawKind",
        "rawKind",
        "ctx",
        "Writer",
        "Write",
        "rawKind",
        "ctx",
        "Writer",
        "WriteBoolByte",
        "KeyDataViewType",
        "KeyDataViewType",
        "key",
        "ctx",
        "Writer",
        "Write",
        "key",
        "Count",
        "ctx",
        "Writer",
        "WriteBoolByte",
        "info",
        "SourceIndex",
        "HasValue",
        "info",
        "SourceIndex",
        "HasValue",
        "ctx",
        "Writer",
        "Write",
        "info",
        "SourceIndex",
        "GetValueOrDefault",
        "DataViewSchema",
        "Builder",
        "i",
        "Infos",
        "Length",
        "i",
        "Infos",
        "i",
        "schemaBuilder",
        "AddColumn",
        "info",
        "Name",
        "info",
        "ColType",
        "schemaBuilder",
        "ToSchema",
        "DbType",
        "dbType",
        "KeyCount",
        "keyCount",
        "Contracts",
        "CheckValue",
        "keyCount",
        "nameof",
        "keyCount",
        "dbType",
        "ToType",
        "Contracts",
        "CheckUserArg",
        "KeyDataViewType",
        "IsValidDataType",
        "rawType",
        "nameof",
        "DatabaseLoader",
        "Column",
        "Type",
        "keyCount",
        "Count",
        "keyType",
        "KeyDataViewType",
        "rawType",
        "rawType",
        "ToMaxInt",
        "keyType",
        "KeyDataViewType",
        "rawType",
        "keyCount",
        "Count",
        "GetValueOrDefault",
        "keyType",
        "IDataView",
        "Func",
        "DbDataReader",
        "DatabaseLoader",
        "loader",
        "Func",
        "DbDataReader",
        "input",
        "_loader",
        "loader",
        "_host",
        "loader",
        "_host",
        "Register",
        "nameof",
        "BoundLoader",
        "_host",
        "CheckValue",
        "input",
        "nameof",
        "input",
        "_input",
        "input",
        "_loader",
        "_bindings",
        "OutputSchema",
        "DataViewSchema",
        "Column",
        "columnsNeeded",
        "Random",
        "rand",
        "_host",
        "CheckValueOrNull",
        "rand",
        "Utils",
        "BuildArray",
        "_loader",
        "_bindings",
        "OutputSchema",
        "Count",
        "columnsNeeded",
        "Cursor",
        "Create",
        "_loader",
        "_input",
        "active",
        "DataViewRowCursor",
        "DataViewSchema",
        "Column",
        "columnsNeeded",
        "n",
        "Random",
        "rand",
        "DataViewRowCursor",
        "GetRowCursor",
        "columnsNeeded",
        "rand"
    ],
    "literals": [
        "\"Database Loader\"",
        "\"Loads data from a DbDataReader.\"",
        "\"DatabaseLoader\"",
        "\"DBLOADER\"",
        "\"DatabaseLoader\"",
        "\"DatabaseLoader requires at least one Column\"",
        "\"host\"",
        "\"Loading Model\"",
        "\"Name of the column\"",
        "\"Type of the items in the column\"",
        "\"Source index of the column\"",
        "\"src\"",
        "\"For a key column, this defines the range of values\"",
        "\"key\"",
        "\"Column groups. Each group is specified as name:type:numeric-ranges, eg, col=Features:R4:1-17,26,35-40\"",
        "\"Column\"",
        "\"col\"",
        "\"Binding\"",
        "\"Source column index must be non-negative\"",
        "\"Duplicate name(s) specified - later columns will hide earlier ones\"",
        "\"Bad item type for Key\""
    ],
    "variables": [
        "Summary",
        "LoaderSignature",
        "Bindings",
        "_bindings",
        "IHost",
        "_host",
        "RegistrationName",
        "cols",
        "IHost",
        "h",
        "Name",
        "DbType",
        "Type",
        "Source",
        "KeyCount",
        "KeyCount",
        "Columns",
        "Name",
        "SourceIndex",
        "DataViewType",
        "ColType",
        "Infos",
        "DataViewSchema",
        "OutputSchema",
        "ch",
        "nameToInfoIndex",
        "iinfo",
        "col",
        "name",
        "PrimitiveDataViewType",
        "itemType",
        "cinfo",
        "iinfo",
        "name",
        "PrimitiveDataViewType",
        "itemType",
        "kind",
        "isKey",
        "count",
        "sourceIndex",
        "hasSourceIndex",
        "iinfo",
        "info",
        "InternalDataKind",
        "rawKind",
        "schemaBuilder",
        "i",
        "info",
        "KeyDataViewType",
        "keyType",
        "Type",
        "rawType",
        "DatabaseLoader",
        "_loader",
        "IHost",
        "_host",
        "_input",
        "CanShuffle",
        "DataViewSchema",
        "Schema",
        "active"
    ],
    "comments": [
        "Licensed to the .NET Foundation under one or more agreements.",
        "The .NET Foundation licenses this file to you under the MIT license.",
        "See the LICENSE file in the project root for more information.",
        "Initial",
        "bindings",
        "The output <see cref=\"DataViewSchema\"/> that will be produced by the loader.",
        "</summary>",
        "Loads data from <paramref name=\"input\"/> into an <see cref=\"IDataView\"/>.",
        "</summary>",
        "<param name=\"input\">A function that returns a DbDataReader from which to load data.</param>",
        "Describes how an input column should be mapped to an <see cref=\"IDataView\"/> column.",
        "</summary>",
        "Name of the column.",
        "</summary>",
        "<see cref=\"DbType\"/> of the items in the column.",
        "</summary>",
        "Source index of the column.",
        "</summary>",
        "For a key column, this defines the range of values.",
        "</summary>",
        "The settings for <see cref=\"DatabaseLoader\"/>",
        "</summary>",
        "Specifies the input columns that should be mapped to <see cref=\"IDataView\"/> columns.",
        "</summary>",
        "Information for an output column.",
        "</summary>",
        "<see cref=\"Infos\"/>[i] stores the i-th column's name and type. Columns are loaded from the input text file.",
        "</summary>",
        "Make sure all columns have at least one source range.",
        "This dictionary is used only for detecting duplicated column names specified by user.",
        "int: number of columns",
        "foreach column:",
        "int: id of column name",
        "byte: DataKind",
        "byte: bool of whether this is a key type",
        "for a key type:",
        "ulong: count for key range",
        "byte: bool of whether the source index is valid",
        "for a valid source index:",
        "int: source index",
        "int: number of columns",
        "foreach column:",
        "int: id of column name",
        "byte: DataKind",
        "byte: bool of whether this is a key type",
        "for a key type:",
        "ulong: count for key range",
        "byte: bool of whether the source index is valid",
        "for a valid source index:",
        "int: source index",
        "Iterate through all loaded columns. The index i indicates the i-th column loaded.",
        "Construct a <see cref=\"KeyDataViewType\"/> out of the DbType and the keyCount.",
        "</summary>"
    ],
    "docstrings": [
        "*** Binary format ***",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "*** Binary format ***",
        "*** Binary format ***",
        "<summary>"
    ],
    "functions": [
        "VersionInfo",
        "GetVersionInfo",
        "DatabaseLoader",
        "DatabaseLoader",
        "DatabaseLoader",
        "Create",
        "Save",
        "DataViewSchema",
        "GetOutputSchema",
        "IDataView",
        "Load",
        "ColInfo",
        "Bindings",
        "Bindings",
        "Save",
        "DataViewSchema",
        "ComputeOutputSchema",
        "KeyDataViewType",
        "ConstructKeyType",
        "BoundLoader",
        "GetRowCount",
        "DataViewRowCursor",
        "GetRowCursor",
        "GetRowCursorSet"
    ],
    "classes": [
        "DatabaseLoader",
        "Column",
        "Options",
        "ColInfo",
        "Bindings",
        "BoundLoader"
    ]
}