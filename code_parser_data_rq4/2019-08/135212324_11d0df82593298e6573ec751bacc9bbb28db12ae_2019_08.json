{
    "identifiers": [
        "unittest",
        "numpy",
        "np",
        "bcipy",
        "helpers",
        "load",
        "load_json_parameters",
        "bcipy",
        "signal",
        "evaluate",
        "rules",
        "Rule",
        "HighVoltage",
        "LowVoltage",
        "unittest",
        "TestCase",
        "load_json_parameters",
        "params_file",
        "parameters",
        "parameters",
        "HighVoltage",
        "parameters",
        "LowVoltage",
        "parameters",
        "assertEqual",
        "highvoltage_rule",
        "name",
        "assertEqual",
        "highvoltage_rule",
        "threshold",
        "parameters",
        "assertEqual",
        "lowvoltage_rule",
        "name",
        "assertEqual",
        "lowvoltage_rule",
        "threshold",
        "parameters",
        "assertIsInstance",
        "lowvoltage_rule",
        "Rule",
        "assertIsInstance",
        "highvoltage_rule",
        "Rule",
        "assertTrue",
        "lowvoltage_rule",
        "is_broken",
        "failing_sample",
        "assertFalse",
        "lowvoltage_rule",
        "is_broken",
        "passing_sample",
        "np",
        "ones",
        "np",
        "ones",
        "assertTrue",
        "lowvoltage_rule",
        "is_broken",
        "failing_array",
        "assertFalse",
        "lowvoltage_rule",
        "is_broken",
        "passing_array",
        "assertTrue",
        "highvoltage_rule",
        "is_broken",
        "failing_sample",
        "assertFalse",
        "highvoltage_rule",
        "is_broken",
        "passing_sample",
        "np",
        "ones",
        "np",
        "ones",
        "assertTrue",
        "highvoltage_rule",
        "is_broken",
        "failing_array",
        "assertFalse",
        "highvoltage_rule",
        "is_broken",
        "passing_array",
        "unittest",
        "main"
    ],
    "literals": [
        "'bcipy/parameters/parameters.json'",
        "'highvoltage_value'",
        "'lowhvoltage_value'",
        "'highvoltage_threshold'",
        "'highvoltage_value'",
        "'lowvoltage_threshold'",
        "'lowhvoltage_value'",
        "'highvoltage_threshold'",
        "'highvoltage_value'",
        "'lowvoltage_threshold'",
        "'lowhvoltage_value'",
        "\"__main__\""
    ],
    "variables": [
        "params_file",
        "parameters",
        "highvoltage_rule",
        "lowvoltage_rule",
        "failing_sample",
        "passing_sample",
        "failing_array",
        "passing_array",
        "failing_sample",
        "passing_sample",
        "failing_array",
        "passing_array"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Test Rules init and class methods \"\"\"",
        "\"\"\"Create rule objects to test \"\"\"",
        "\"\"\"Set thresholds for testing \"\"\"",
        "\"\"\"Test that names and thresholds init correctly \"\"\"",
        "\"\"\"Test passing and failing samples for lowvoltage \"\"\"",
        "\"\"\"Test passing and failing arrays for lowvoltage \"\"\"",
        "\"\"\"Test passing and failing samples for highvoltage \"\"\"",
        "\"\"\"Test passing and failing arrays for highvoltage \"\"\""
    ],
    "functions": [
        "setUp",
        "test_rule_init",
        "test_lowvoltage_on_single_datapoint",
        "test_lowvoltage_on_array",
        "test_highvoltage_on_single_datapoint",
        "test_highvoltage_on_array"
    ],
    "classes": [
        "TestRules"
    ]
}