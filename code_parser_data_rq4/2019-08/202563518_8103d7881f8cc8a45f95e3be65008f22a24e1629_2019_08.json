{
    "identifiers": [
        "print_function",
        "os",
        "platform",
        "platform",
        "system",
        "Import",
        "e",
        "e",
        "env",
        "get",
        "current_OS",
        "subprocess",
        "subprocess",
        "check_output",
        "driveStr",
        "strip",
        "lstrip",
        "driveStr",
        "split",
        "drive",
        "drives",
        "drive",
        "strip",
        "rstrip",
        "subprocess",
        "check_output",
        "final_drive_name",
        "stderr",
        "subprocess",
        "STDOUT",
        "e",
        "target_drive",
        "volume_info",
        "target_file_found",
        "final_drive_name",
        "target_filename",
        "volume_info",
        "target_file_found",
        "final_drive_name",
        "target_file_found",
        "target_drive_found",
        "env",
        "Replace",
        "UPLOAD_PORT",
        "upload_disk",
        "upload_disk",
        "print_error",
        "current_OS",
        "os",
        "listdir",
        "media",
        "medias",
        "os",
        "listdir",
        "media",
        "target_drive",
        "drives",
        "target_file_found",
        "media",
        "target_drive",
        "drive",
        "drives",
        "os",
        "listdir",
        "media",
        "drive",
        "target_filename",
        "files",
        "target_file_found",
        "media",
        "drive",
        "target_file_found",
        "target_drive_found",
        "env",
        "Replace",
        "UPLOAD_FLAGS",
        "UPLOAD_PORT",
        "upload_disk",
        "upload_disk",
        "print_error",
        "current_OS",
        "os",
        "listdir",
        "target_drive",
        "drives",
        "target_file_found",
        "target_drive",
        "drive",
        "drives",
        "os",
        "listdir",
        "drive",
        "target_filename",
        "filenames",
        "target_file_found",
        "drive",
        "target_file_found",
        "target_drive_found",
        "env",
        "Replace",
        "UPLOAD_PORT",
        "upload_disk",
        "upload_disk",
        "print_error",
        "e",
        "print_error",
        "e"
    ],
    "literals": [
        "\"FIRMWARE.CUR\"",
        "\"REARM\"",
        "\"env\"",
        "'\\nUnable to find destination disk ('",
        "')\\n'",
        "'Please select it in platformio.ini using the upload_port keyword '",
        "'(https://docs.platformio.org/en/latest/projectconf/section_env_upload.html) '",
        "'or copy the firmware (.pio/build/'",
        "'PIOENV'",
        "'/firmware.bin) manually to the appropriate disk\\n'",
        "'Windows'",
        "\"fsutil fsinfo drives\"",
        "'Drives: '",
        "'Disk not found'",
        "'\\\\'",
        "'cmd /C dir '",
        "'upload disk: '",
        "'Autodetect Error'",
        "'Linux'",
        "'Disk not found'",
        "'/media'",
        "'/media/'",
        "'/media/'",
        "'/'",
        "'/'",
        "'/media/'",
        "'/'",
        "'/media/'",
        "'/'",
        "'/'",
        "\"-P$UPLOAD_PORT\"",
        "'upload disk: '",
        "'Autodetect Error'",
        "'Darwin'",
        "'Disk not found'",
        "'/Volumes'",
        "'/Volumes/'",
        "'/'",
        "'/Volumes/'",
        "'/'",
        "'/Volumes/'",
        "'/'",
        "'\\nupload disk: '",
        "'\\n'",
        "'Autodetect Error'"
    ],
    "variables": [
        "target_filename",
        "target_drive",
        "current_OS",
        "driveStr",
        "driveStr",
        "drives",
        "upload_disk",
        "target_file_found",
        "target_drive_found",
        "final_drive_name",
        "volume_info",
        "target_drive_found",
        "upload_disk",
        "upload_disk",
        "target_file_found",
        "upload_disk",
        "target_file_found",
        "target_drive_found",
        "medias",
        "drives",
        "target_drive_found",
        "upload_disk",
        "files",
        "upload_disk",
        "target_file_found",
        "upload_disk",
        "drives",
        "target_file_found",
        "target_drive_found",
        "target_drive_found",
        "upload_disk",
        "filenames",
        "upload_disk",
        "target_file_found"
    ],
    "comments": [
        "",
        "sets output_port",
        "if target_filename is found then that drive is used",
        "else if target_drive is found then that drive is used",
        "",
        "",
        "platformio.ini will accept this for a Windows upload port designation: 'upload_port = L:'",
        "Windows - doesn't care about the disk's name, only cares about the drive letter",
        "",
        "",
        "get all drives on this computer",
        "",
        "typical result (string): 'Drives: C:\\ D:\\ E:\\ F:\\ G:\\ H:\\ I:\\ J:\\ K:\\ L:\\ M:\\ Y:\\ Z:\\'",
        "typical result (string): 'C:\\ D:\\ E:\\ F:\\ G:\\ H:\\ I:\\ J:\\ K:\\ L:\\ M:\\ Y:\\ Z:\\'",
        "typical result (array of stings): ['C:\\\\', 'D:\\\\', 'E:\\\\', 'F:\\\\',",
        "'G:\\\\', 'H:\\\\', 'I:\\\\', 'J:\\\\', 'K:\\\\', 'L:\\\\', 'M:\\\\', 'Y:\\\\', 'Z:\\\\']",
        "typical result (string): 'C:'",
        "set upload if not found target file yet",
        "",
        "set upload_port to drive if found",
        "",
        "",
        "platformio.ini will accept this for a Linux upload port designation: 'upload_port = /media/media_name/drive'",
        "",
        "",
        "",
        "set upload if not found target file yet",
        "",
        "set upload_port to drive if found",
        "",
        "MAC",
        "",
        "platformio.ini will accept this for a OSX upload port designation: 'upload_port = /media/media_name/drive'",
        "",
        "human readable names",
        "set upload if not found target file yet",
        "will get an error if the drive is protected",
        "",
        "set upload_port to drive if found",
        ""
    ],
    "docstrings": [],
    "functions": [
        "print_error"
    ],
    "classes": []
}