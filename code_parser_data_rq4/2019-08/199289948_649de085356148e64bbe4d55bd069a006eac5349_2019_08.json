{
    "identifiers": [
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "DataOutputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "util",
        "LINE_SEP",
        "getProperty",
        "command",
        "execCmd",
        "command",
        "command",
        "isRooted",
        "execCmd",
        "command",
        "isRooted",
        "commands",
        "execCmd",
        "commands",
        "commands",
        "toArray",
        "commands",
        "isRooted",
        "execCmd",
        "commands",
        "commands",
        "toArray",
        "isRooted",
        "commands",
        "execCmd",
        "commands",
        "commands",
        "isRooted",
        "execCmd",
        "commands",
        "isRooted",
        "command",
        "isRooted",
        "isNeedResultMsg",
        "execCmd",
        "command",
        "isRooted",
        "isNeedResultMsg",
        "commands",
        "isRooted",
        "isNeedResultMsg",
        "execCmd",
        "commands",
        "commands",
        "toArray",
        "isRooted",
        "isNeedResultMsg",
        "commands",
        "isRooted",
        "isNeedResultMsg",
        "result",
        "commands",
        "commands",
        "length",
        "result",
        "process",
        "successResult",
        "errorResult",
        "successMsg",
        "errorMsg",
        "os",
        "process",
        "Runtime",
        "getRuntime",
        "exec",
        "isRooted",
        "os",
        "process",
        "getOutputStream",
        "command",
        "commands",
        "command",
        "os",
        "write",
        "command",
        "getBytes",
        "os",
        "writeBytes",
        "LINE_SEP",
        "os",
        "flush",
        "os",
        "writeBytes",
        "LINE_SEP",
        "os",
        "flush",
        "result",
        "process",
        "waitFor",
        "isNeedResultMsg",
        "successMsg",
        "errorMsg",
        "successResult",
        "process",
        "getInputStream",
        "errorResult",
        "process",
        "getErrorStream",
        "line",
        "line",
        "successResult",
        "readLine",
        "successMsg",
        "append",
        "line",
        "line",
        "successResult",
        "readLine",
        "successMsg",
        "append",
        "LINE_SEP",
        "append",
        "line",
        "line",
        "errorResult",
        "readLine",
        "errorMsg",
        "append",
        "line",
        "line",
        "errorResult",
        "readLine",
        "errorMsg",
        "append",
        "LINE_SEP",
        "append",
        "line",
        "e",
        "e",
        "printStackTrace",
        "os",
        "os",
        "close",
        "e",
        "e",
        "printStackTrace",
        "successResult",
        "successResult",
        "close",
        "e",
        "e",
        "printStackTrace",
        "errorResult",
        "errorResult",
        "close",
        "e",
        "e",
        "printStackTrace",
        "process",
        "process",
        "destroy",
        "result",
        "successMsg",
        "successMsg",
        "toString",
        "errorMsg",
        "errorMsg",
        "toString",
        "result",
        "successMsg",
        "errorMsg",
        "result",
        "successMsg",
        "errorMsg",
        "result",
        "result",
        "successMsg",
        "successMsg",
        "errorMsg",
        "errorMsg",
        "Override",
        "result",
        "successMsg",
        "errorMsg"
    ],
    "literals": [
        "\"line.separator\"",
        "\"u can't instantiate me...\"",
        "\"\"",
        "\"\"",
        "\"su\"",
        "\"sh\"",
        "\"exit\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"\"",
        "\"\"",
        "\"result: \"",
        "\"\\n\"",
        "\"successMsg: \"",
        "\"\\n\"",
        "\"errorMsg: \""
    ],
    "variables": [
        "line",
        "result",
        "successMsg",
        "errorMsg"
    ],
    "comments": [],
    "docstrings": [
        "* <pre>\n *     author: Blankj\n *     blog  : http://blankj.com\n *     time  : 2016/08/07\n *     desc  : utils about shell\n * </pre>",
        "* Execute the command.\n     *\n     * @param command The command.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param command  The command.\n     * @param isRooted True to use root, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands The commands.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands The commands.\n     * @param isRooted True to use root, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands The commands.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands The commands.\n     * @param isRooted True to use root, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param command         The command.\n     * @param isRooted        True to use root, false otherwise.\n     * @param isNeedResultMsg True to return the message of result, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands        The commands.\n     * @param isRooted        True to use root, false otherwise.\n     * @param isNeedResultMsg True to return the message of result, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* Execute the command.\n     *\n     * @param commands        The commands.\n     * @param isRooted        True to use root, false otherwise.\n     * @param isNeedResultMsg True to return the message of result, false otherwise.\n     * @return the single {@link CommandResult} instance",
        "* The result of command."
    ],
    "functions": [
        "ShellUtils",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "execCmd",
        "CommandResult",
        "toString"
    ],
    "classes": [
        "ShellUtils",
        "CommandResult"
    ]
}