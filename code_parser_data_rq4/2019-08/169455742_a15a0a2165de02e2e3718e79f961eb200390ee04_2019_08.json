{
    "identifiers": [
        "unittest",
        "copy",
        "itertools",
        "os",
        "warnings",
        "qiskit",
        "BasicAer",
        "numpy",
        "np",
        "qiskit",
        "quantum_info",
        "Pauli",
        "qiskit",
        "assembler",
        "RunConfig",
        "qiskit",
        "transpiler",
        "PassManager",
        "test",
        "aqua",
        "common",
        "QiskitAquaTestCase",
        "qiskit",
        "aqua",
        "Operator",
        "aqua_globals",
        "qiskit",
        "aqua",
        "components",
        "variational_forms",
        "RYRZ",
        "QiskitAquaTestCase",
        "warnings",
        "filterwarnings",
        "category",
        "DeprecationWarning",
        "setUp",
        "np",
        "random",
        "seed",
        "np",
        "power",
        "num_qubits",
        "np",
        "random",
        "rand",
        "m_size",
        "m_size",
        "Operator",
        "matrix",
        "matrix",
        "RYRZ",
        "qubitOp",
        "num_qubits",
        "depth",
        "var_form",
        "construct_circuit",
        "np",
        "array",
        "np",
        "random",
        "randn",
        "var_form",
        "num_parameters",
        "RunConfig",
        "shots",
        "RunConfig",
        "shots",
        "qubitOp",
        "eval",
        "circuit",
        "BasicAer",
        "get_backend",
        "run_config",
        "run_config_ref",
        "reference",
        "real",
        "BasicAer",
        "get_backend",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "paulis_mode",
        "paulis_mode",
        "paulis_mode",
        "paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "assertLessEqual",
        "reference",
        "paulis_mode_p_3sigma",
        "real",
        "assertGreaterEqual",
        "reference",
        "paulis_mode_m_3sigma",
        "real",
        "assertLessEqual",
        "reference",
        "grouped_paulis_mode_p_3sigma",
        "real",
        "assertGreaterEqual",
        "reference",
        "grouped_paulis_mode_m_3sigma",
        "real",
        "RunConfig",
        "shots",
        "PassManager",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "compile_config",
        "compile_config",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "compile_config",
        "compile_config",
        "paulis_mode",
        "paulis_mode",
        "paulis_mode",
        "paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "grouped_paulis_mode",
        "assertLessEqual",
        "reference",
        "paulis_mode_p_3sigma",
        "real",
        "assertGreaterEqual",
        "reference",
        "paulis_mode_m_3sigma",
        "real",
        "assertLessEqual",
        "reference",
        "grouped_paulis_mode_p_3sigma",
        "real",
        "assertGreaterEqual",
        "reference",
        "grouped_paulis_mode_m_3sigma",
        "real",
        "RYRZ",
        "qubitOp",
        "num_qubits",
        "depth",
        "var_form",
        "construct_circuit",
        "np",
        "array",
        "np",
        "random",
        "randn",
        "var_form",
        "num_parameters",
        "RunConfig",
        "shots",
        "BasicAer",
        "get_backend",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "abs",
        "matrix_mode",
        "non_matrix_mode",
        "assertLess",
        "diff",
        "format",
        "matrix_mode",
        "non_matrix_mode",
        "RunConfig",
        "shots",
        "PassManager",
        "qubitOp",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "compile_config",
        "compile_config",
        "abs",
        "matrix_mode",
        "non_matrix_mode",
        "assertLess",
        "diff",
        "format",
        "matrix_mode",
        "non_matrix_mode",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "coeff",
        "Pauli",
        "from_label",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "RYRZ",
        "op",
        "num_qubits",
        "depth",
        "var_form",
        "construct_circuit",
        "np",
        "array",
        "np",
        "random",
        "randn",
        "var_form",
        "num_parameters",
        "RunConfig",
        "shots",
        "BasicAer",
        "get_backend",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "assertAlmostEqual",
        "matrix_mode",
        "non_matrix_mode",
        "num_qubits",
        "np",
        "power",
        "num_qubits",
        "np",
        "random",
        "rand",
        "m_size",
        "m_size",
        "Operator",
        "matrix",
        "matrix",
        "RYRZ",
        "op",
        "num_qubits",
        "depth",
        "var_form",
        "construct_circuit",
        "np",
        "array",
        "np",
        "random",
        "randn",
        "var_form",
        "num_parameters",
        "BasicAer",
        "get_backend",
        "RunConfig",
        "shots",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "assertAlmostEqual",
        "matrix_mode",
        "non_matrix_mode",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "to_label",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "op_a",
        "Operator",
        "paulis",
        "pauli_term_c",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "to_matrix",
        "op_b",
        "to_matrix",
        "op_a",
        "op_b",
        "op_a",
        "to_paulis",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "Operator",
        "paulis",
        "pauli_term_c",
        "op_c",
        "to_matrix",
        "op_a",
        "to_matrix",
        "op_a",
        "op_c",
        "op_a",
        "to_paulis",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "to_matrix",
        "op_b",
        "to_matrix",
        "op_a",
        "op_b",
        "op_a",
        "to_paulis",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "Operator",
        "paulis",
        "pauli_term_c",
        "op_c",
        "to_matrix",
        "op_a",
        "to_matrix",
        "op_a",
        "op_c",
        "op_a",
        "to_paulis",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "copy",
        "deepcopy",
        "op_a",
        "op_a",
        "op_b",
        "assertEqual",
        "copy_op_a",
        "op_a",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "new_op",
        "Operator",
        "paulis",
        "pauli_term_c",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "copy",
        "deepcopy",
        "op_a",
        "op_a",
        "op_b",
        "assertEqual",
        "copy_op_a",
        "op_a",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "new_op",
        "Operator",
        "paulis",
        "pauli_term_c",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "assertEqual",
        "new_op",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "coeff_c",
        "Pauli",
        "from_label",
        "pauli_c",
        "op_a",
        "Operator",
        "paulis",
        "pauli_term_c",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "op_a",
        "scaling_coeff",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "assertEqual",
        "op_a",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "assertEqual",
        "op_a",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "coeff_b",
        "Pauli",
        "from_label",
        "pauli_b",
        "Operator",
        "paulis",
        "pauli_term_a",
        "Operator",
        "paulis",
        "pauli_term_b",
        "op_a",
        "op_b",
        "new_op",
        "zeros_coeff_elimination",
        "assertEqual",
        "len",
        "new_op",
        "paulis",
        "format",
        "new_op",
        "print_operators",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op",
        "Operator",
        "paulis",
        "pauli_term",
        "i",
        "Operator",
        "paulis",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "op",
        "op_a",
        "op",
        "zeros_coeff_elimination",
        "assertEqual",
        "i",
        "len",
        "op",
        "paulis",
        "coeff_a",
        "Pauli",
        "from_label",
        "pauli_a",
        "Operator",
        "paulis",
        "pauli_term_a",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "format",
        "op_a",
        "print_operators",
        "op_a",
        "zeros_coeff_elimination",
        "assertEqual",
        "len",
        "op_a",
        "paulis",
        "format",
        "op_a",
        "print_operators",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "pauli_term",
        "append",
        "coeff",
        "Pauli",
        "from_label",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "op",
        "to_matrix",
        "op",
        "to_grouped_paulis",
        "op",
        "_to_dia_matrix",
        "assertEqual",
        "op",
        "matrix",
        "ndim",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "pauli_term",
        "append",
        "coeff",
        "Pauli",
        "from_label",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "op",
        "to_matrix",
        "op",
        "_to_dia_matrix",
        "assertEqual",
        "op",
        "matrix",
        "ndim",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op1",
        "Operator",
        "paulis",
        "pauli_term",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op2",
        "Operator",
        "paulis",
        "pauli_term",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op3",
        "Operator",
        "paulis",
        "pauli_term",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op4",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op1",
        "op2",
        "assertNotEqual",
        "op1",
        "op3",
        "assertNotEqual",
        "op1",
        "op4",
        "assertNotEqual",
        "op3",
        "op4",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op1",
        "Operator",
        "paulis",
        "pauli_term",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op2",
        "Operator",
        "paulis",
        "pauli_term",
        "assertNotEqual",
        "op1",
        "op2",
        "assertEqual",
        "op1",
        "op2",
        "assertEqual",
        "op1",
        "op2",
        "op1",
        "scaling_coeff",
        "assertEqual",
        "op1",
        "op2",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op",
        "Operator",
        "paulis",
        "pauli_term",
        "copy",
        "deepcopy",
        "op",
        "op1",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op1",
        "paulis",
        "format",
        "op1",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op1",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op1",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op1",
        "gt_op1",
        "copy",
        "deepcopy",
        "op",
        "op2",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op2",
        "paulis",
        "format",
        "op2",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op2",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op2",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op2",
        "gt_op2",
        "copy",
        "deepcopy",
        "op",
        "op3",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op3",
        "paulis",
        "format",
        "op3",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op3",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op3",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op3",
        "gt_op3",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op",
        "Operator",
        "paulis",
        "pauli_term",
        "copy",
        "deepcopy",
        "op",
        "op1",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op1",
        "paulis",
        "format",
        "op1",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op1",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op1",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op1",
        "gt_op1",
        "copy",
        "deepcopy",
        "op",
        "op2",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op2",
        "paulis",
        "format",
        "op2",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op2",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op2",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op2",
        "gt_op2",
        "copy",
        "deepcopy",
        "op",
        "op3",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op3",
        "paulis",
        "format",
        "op3",
        "print_operators",
        "Operator",
        "paulis",
        "i",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op3",
        "Operator",
        "paulis",
        "pauli_term",
        "coeffs",
        "i",
        "Pauli",
        "from_label",
        "paulis",
        "i",
        "gt_op3",
        "Operator",
        "paulis",
        "pauli_term",
        "assertEqual",
        "op3",
        "gt_op3",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op",
        "Operator",
        "paulis",
        "pauli_term",
        "copy",
        "deepcopy",
        "op",
        "op1",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op1",
        "paulis",
        "format",
        "op1",
        "print_operators",
        "copy",
        "deepcopy",
        "op",
        "op2",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op2",
        "paulis",
        "format",
        "op2",
        "print_operators",
        "copy",
        "deepcopy",
        "op",
        "op3",
        "chop",
        "threshold",
        "assertEqual",
        "len",
        "op3",
        "paulis",
        "format",
        "op3",
        "print_operators",
        "assertEqual",
        "len",
        "qubitOp",
        "representations",
        "assertEqual",
        "qubitOp",
        "representations",
        "qubitOp",
        "to_paulis",
        "assertEqual",
        "len",
        "qubitOp",
        "representations",
        "assertEqual",
        "qubitOp",
        "representations",
        "qubitOp",
        "to_grouped_paulis",
        "assertEqual",
        "len",
        "qubitOp",
        "representations",
        "assertEqual",
        "qubitOp",
        "representations",
        "Operator",
        "paulis",
        "assertEqual",
        "op",
        "num_qubits",
        "assertEqual",
        "qubitOp",
        "num_qubits",
        "num_qubits",
        "Operator",
        "paulis",
        "assertTrue",
        "op",
        "is_empty",
        "assertFalse",
        "qubitOp",
        "is_empty",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "pauli_term",
        "append",
        "coeff",
        "Pauli",
        "from_label",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "RYRZ",
        "op",
        "num_qubits",
        "depth",
        "var_form",
        "construct_circuit",
        "np",
        "array",
        "np",
        "random",
        "randn",
        "var_form",
        "num_parameters",
        "RunConfig",
        "shots",
        "BasicAer",
        "get_backend",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "op",
        "eval",
        "circuit",
        "backend",
        "run_config",
        "run_config",
        "assertAlmostEqual",
        "matrix_mode",
        "non_matrix_mode",
        "Operator",
        "paulis",
        "coeff",
        "pauli",
        "coeffs",
        "paulis",
        "coeff",
        "Pauli",
        "from_label",
        "pauli",
        "op",
        "Operator",
        "paulis",
        "pauli_term",
        "op",
        "save_to_file",
        "Operator",
        "load_from_file",
        "assertTrue",
        "os",
        "path",
        "exists",
        "assertEqual",
        "op",
        "load_op",
        "os",
        "remove",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "pauli_term",
        "append",
        "coeff",
        "Pauli",
        "from_label",
        "join",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "copy",
        "deepcopy",
        "op",
        "paulis",
        "op",
        "to_grouped_paulis",
        "pauli",
        "group",
        "op",
        "grouped_paulis",
        "pauli",
        "group",
        "gp",
        "flattened_grouped_paulis",
        "p",
        "paulis",
        "p",
        "gp",
        "p",
        "gp",
        "assertTrue",
        "passed",
        "format",
        "gp",
        "to_label",
        "pauli_label",
        "itertools",
        "product",
        "repeat",
        "num_qubits",
        "np",
        "random",
        "random",
        "pauli_term",
        "append",
        "coeff",
        "Pauli",
        "from_label",
        "join",
        "pauli_label",
        "Operator",
        "paulis",
        "pauli_term",
        "copy",
        "deepcopy",
        "op",
        "paulis",
        "op",
        "to_grouped_paulis",
        "pauli",
        "group",
        "op",
        "grouped_paulis",
        "pauli",
        "group",
        "gp",
        "flattened_grouped_paulis",
        "p",
        "paulis",
        "p",
        "gp",
        "p",
        "gp",
        "assertTrue",
        "passed",
        "format",
        "gp",
        "to_label",
        "unittest",
        "main"
    ],
    "literals": [
        "\"ignore\"",
        "'matrix'",
        "'statevector_simulator'",
        "'qasm_simulator'",
        "'paulis'",
        "'grouped_paulis'",
        "'pass_manager'",
        "'paulis'",
        "'grouped_paulis'",
        "\"Without any pass manager\"",
        "\"Without any pass manager\"",
        "\"Without any pass manager\"",
        "\"Without any pass manager\"",
        "'statevector_simulator'",
        "'matrix'",
        "'paulis'",
        "\"Values: ({} vs {})\"",
        "'pass_manager'",
        "'paulis'",
        "\"Without any pass manager, Values: ({} vs {})\"",
        "'IXYZ'",
        "'statevector_simulator'",
        "'paulis'",
        "'matrix'",
        "'statevector_simulator'",
        "'paulis'",
        "'matrix'",
        "'IXYZ'",
        "'ZYIX'",
        "'ZZYY'",
        "'IXYZ'",
        "'ZYIX'",
        "'IXYZ'",
        "'IX'",
        "'ZY'",
        "'IX'",
        "'IX'",
        "'ZY'",
        "'IX'",
        "'IXYZ'",
        "'ZYIX'",
        "'IXYZ'",
        "'IXYZ'",
        "'ZYIX'",
        "'IXYZ'",
        "'IXYZ'",
        "'ZYIX'",
        "'IXYZ'",
        "'IXYZ'",
        "'ZYIX'",
        "'IXYZ'",
        "'ZYIX'",
        "\"Representation: paulis, qubits: 4, size: 2\"",
        "'IXYZ'",
        "'IXYZ'",
        "\"{}\"",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "\"{}\"",
        "\"{}\"",
        "'IZ'",
        "'grouped_paulis'",
        "'YZ'",
        "'matrix'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYY'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "\"\\n{}\"",
        "'matrix'",
        "'paulis'",
        "'grouped_paulis'",
        "'IXYZ'",
        "'statevector_simulator'",
        "'paulis'",
        "'matrix'",
        "'IXYZ'",
        "'XXZY'",
        "'IIZZ'",
        "'XXYY'",
        "'ZZXX'",
        "'YYYY'",
        "'temp_op.json'",
        "'temp_op.json'",
        "'temp_op.json'",
        "'temp_op.json'",
        "'IXYZ'",
        "''",
        "\"non-existed paulis in grouped_paulis: {}\"",
        "'IXYZ'",
        "''",
        "\"non-existed paulis in grouped_paulis: {}\"",
        "'__main__'"
    ],
    "variables": [
        "aqua_globals",
        "random_seed",
        "num_qubits",
        "m_size",
        "matrix",
        "qubitOp",
        "depth",
        "var_form",
        "circuit",
        "run_config_ref",
        "run_config",
        "reference",
        "reference",
        "backend",
        "paulis_mode",
        "grouped_paulis_mode",
        "paulis_mode_p_3sigma",
        "paulis_mode_m_3sigma",
        "grouped_paulis_mode_p_3sigma",
        "grouped_paulis_mode_m_3sigma",
        "run_config",
        "compile_config",
        "paulis_mode",
        "grouped_paulis_mode",
        "paulis_mode_p_3sigma",
        "paulis_mode_m_3sigma",
        "grouped_paulis_mode_p_3sigma",
        "grouped_paulis_mode_m_3sigma",
        "depth",
        "var_form",
        "circuit",
        "run_config",
        "backend",
        "matrix_mode",
        "non_matrix_mode",
        "diff",
        "run_config",
        "compile_config",
        "non_matrix_mode",
        "diff",
        "num_qubits",
        "coeff",
        "pauli_term",
        "op",
        "depth",
        "var_form",
        "circuit",
        "run_config",
        "backend",
        "non_matrix_mode",
        "matrix_mode",
        "m_size",
        "matrix",
        "op",
        "depth",
        "var_form",
        "circuit",
        "backend",
        "run_config",
        "non_matrix_mode",
        "matrix_mode",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "new_op",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "op_c",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "op_c",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "copy_op_a",
        "new_op",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "new_op",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "copy_op_a",
        "new_op",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "new_op",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_c",
        "coeff_c",
        "pauli_term_c",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "pauli_a",
        "pauli_b",
        "coeff_a",
        "coeff_b",
        "pauli_term_a",
        "pauli_term_b",
        "op_a",
        "op_b",
        "new_op",
        "paulis",
        "coeffs",
        "op",
        "pauli_term",
        "op_a",
        "pauli_a",
        "coeff_a",
        "pauli_term_a",
        "op_a",
        "num_qubits",
        "pauli_term",
        "coeff",
        "op",
        "num_qubits",
        "pauli_term",
        "coeff",
        "op",
        "paulis",
        "coeffs",
        "op1",
        "pauli_term",
        "paulis",
        "coeffs",
        "op2",
        "pauli_term",
        "paulis",
        "coeffs",
        "op3",
        "pauli_term",
        "paulis",
        "coeffs",
        "op4",
        "pauli_term",
        "paulis",
        "coeffs",
        "op1",
        "pauli_term",
        "paulis",
        "coeffs",
        "op2",
        "pauli_term",
        "paulis",
        "coeffs",
        "op",
        "pauli_term",
        "op1",
        "gt_op1",
        "pauli_term",
        "pauli_term",
        "op2",
        "gt_op2",
        "pauli_term",
        "pauli_term",
        "op3",
        "gt_op3",
        "pauli_term",
        "pauli_term",
        "paulis",
        "coeffs",
        "op",
        "pauli_term",
        "op1",
        "gt_op1",
        "pauli_term",
        "pauli_term",
        "op2",
        "gt_op2",
        "pauli_term",
        "pauli_term",
        "op3",
        "gt_op3",
        "pauli_term",
        "pauli_term",
        "paulis",
        "coeffs",
        "op",
        "pauli_term",
        "op1",
        "op2",
        "op3",
        "op",
        "op",
        "num_qubits",
        "pauli_term",
        "coeff",
        "op",
        "depth",
        "var_form",
        "circuit",
        "run_config",
        "backend",
        "non_matrix_mode",
        "matrix_mode",
        "paulis",
        "coeffs",
        "op",
        "pauli_term",
        "load_op",
        "num_qubits",
        "pauli_term",
        "coeff",
        "op",
        "paulis",
        "flattened_grouped_paulis",
        "passed",
        "passed",
        "num_qubits",
        "pauli_term",
        "coeff",
        "op",
        "op",
        "coloring",
        "paulis",
        "flattened_grouped_paulis",
        "passed",
        "passed"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "This code is part of Qiskit.",
        "",
        "(C) Copyright IBM 2018, 2019.",
        "",
        "This code is licensed under the Apache License, Version 2.0. You may",
        "obtain a copy of this license in the LICENSE.txt file in the root directory",
        "of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.",
        "",
        "Any modifications or derivative works of this code must retain this",
        "copyright notice, and modified files need to carry a notice indicating",
        "that they have been altered from the originals.",
        "print(new_op.print_operators())"
    ],
    "docstrings": [
        "\"\"\"Operator tests.\"\"\"",
        "\"\"\"Test with single paulis.\"\"\"",
        "\"\"\"Test with matrix initialization.\"\"\"",
        "\"\"\"Test multiplication.\"\"\"",
        "\"\"\"Test addition.\"\"\"",
        "\"\"\"\n            test addition in the matrix mode\n        \"\"\"",
        "\"\"\"\n            test subtraction in the matrix mode\n        \"\"\"",
        "\"\"\"\n            test addition\n        \"\"\"",
        "\"\"\"\n            test subtraction\n        \"\"\"",
        "\"\"\"\n            test addition\n        \"\"\"",
        "\"\"\"\n            test scale\n        \"\"\"",
        "\"\"\"\n            test str\n        \"\"\"",
        "\"\"\"\n            test addition\n        \"\"\"",
        "\"\"\"\n            test conversion to dia_matrix\n        \"\"\"",
        "\"\"\"\n            test with single paulis\n        \"\"\"",
        "\"\"\"\n            Test with color grouping approach\n        \"\"\"",
        "\"\"\"\n            Test with normal grouping approach\n        \"\"\""
    ],
    "functions": [
        "setUp",
        "test_real_eval",
        "test_exact_eval",
        "test_create_from_paulis_0",
        "test_create_from_matrix",
        "test_multiplication",
        "test_addition_paulis_inplace",
        "test_addition_matrix",
        "test_subtraction_matrix",
        "test_addition_paulis_noninplace",
        "test_subtraction_noninplace",
        "test_subtraction_inplace",
        "test_scaling_coeff",
        "test_str",
        "test_zero_coeff",
        "test_zero_elimination",
        "test_dia_matrix",
        "test_equal_operator",
        "test_negation_operator",
        "test_chop_real_only",
        "test_chop_complex_only_1",
        "test_chop_complex_only_2",
        "test_representations",
        "test_num_qubits",
        "test_is_empty",
        "test_submit_multiple_circuits",
        "test_load_from_file",
        "test_group_paulis_1",
        "test_group_paulis_2"
    ],
    "classes": [
        "TestOperator"
    ]
}