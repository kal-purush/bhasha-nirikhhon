{
    "identifiers": [
        "numpy",
        "np",
        "waterz",
        "agglomerate",
        "chunkflow",
        "chunk",
        "Chunk",
        "OperatorBase",
        "OperatorBase",
        "verbose",
        "name",
        "threshold",
        "aff_threshold_low",
        "aff_threshold_high",
        "scoring_function",
        "flip_channel",
        "name",
        "name",
        "verbose",
        "verbose",
        "threshold",
        "aff_threshold_low",
        "aff_threshold_high",
        "scoring_function",
        "flip_channel",
        "affs",
        "np",
        "ndarray",
        "fragments",
        "np",
        "ndarray",
        "isinstance",
        "affs",
        "Chunk",
        "affs",
        "global_offset",
        "flip_channel",
        "np",
        "flip",
        "affs",
        "axis",
        "np",
        "ascontiguousarray",
        "affs",
        "dtype",
        "np",
        "float32",
        "agglomerate",
        "affs",
        "threshold",
        "fragments",
        "fragments",
        "aff_threshold_low",
        "aff_threshold_low",
        "aff_threshold_high",
        "aff_threshold_high",
        "scoring_function",
        "scoring_function",
        "force_rebuild",
        "next",
        "seg_generator",
        "Chunk",
        "seg",
        "global_offset",
        "global_offset"
    ],
    "literals": [
        "'agglomerate'",
        "'OneMinus<MeanAffinity<RegionGraphType, ScoreValue>>'"
    ],
    "variables": [
        "threshold",
        "aff_threshold_low",
        "aff_threshold_high",
        "scoring_function",
        "flip_channel",
        "global_offset",
        "global_offset",
        "affs",
        "affs",
        "seg_generator",
        "seg"
    ],
    "comments": [
        "the segmentation is 3d, so we only need the zyx",
        "our affinity map channel order is x,y,z!",
        "meaning the first channel is x, the second is y,",
        "the third is z. We have to reverse the channel.",
        "waterz need datatype float32 and",
        "the array memory layout is contiguous",
        "the output is a generator, and the computation is delayed",
        "there is only one threshold, so there is also only one result",
        "in generator"
    ],
    "docstrings": [
        "\"\"\"Mean/max agglomeration of affinity map including watershed step.\"\"\"",
        "\"\"\"\n        Parameters:\n        -----------\n        affs: affinity map with 4 dimensions: channel, z, y, x\n        \"\"\""
    ],
    "functions": [
        "__call__"
    ],
    "classes": [
        "AgglomerateOperator"
    ]
}