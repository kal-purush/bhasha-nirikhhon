{
    "identifiers": [
        "functools",
        "left",
        "connector",
        "right",
        "level",
        "left",
        "connector",
        "right",
        "level",
        "c",
        "l",
        "count",
        "r",
        "count",
        "c",
        "l",
        "level",
        "l",
        "c",
        "r",
        "l",
        "level",
        "c",
        "r",
        "left",
        "connector",
        "right",
        "left",
        "connector",
        "right",
        "l",
        "count",
        "r",
        "count",
        "r",
        "isStruc",
        "r",
        "r",
        "b",
        "r",
        "r",
        "c",
        "c",
        "l",
        "r",
        "l",
        "c",
        "r",
        "formula",
        "term",
        "formula",
        "form",
        "count",
        "term",
        "form",
        "isContext",
        "isContext",
        "ruleName",
        "lhs",
        "rhs",
        "i",
        "proof1",
        "proof2",
        "ruleName",
        "lhs",
        "rhs",
        "proof1",
        "proof2",
        "ruleName",
        "lhs",
        "term",
        "ruleName",
        "ruleName",
        "ruleName",
        "i",
        "premise1",
        "term",
        "ruleName",
        "ruleName",
        "premise2",
        "term",
        "ruleName",
        "ruleName",
        "premise1",
        "term",
        "lhs",
        "goal",
        "other",
        "other",
        "other",
        "term",
        "other",
        "term",
        "hash",
        "term",
        "indent",
        "premise1",
        "prems",
        "premise1",
        "proofString",
        "indent",
        "premise2",
        "prems",
        "premise2",
        "proofString",
        "indent",
        "prems",
        "indent",
        "ruleName",
        "Combinator",
        "Combinator",
        "Combinator",
        "Combinator",
        "functools",
        "lru_cache",
        "maxsize",
        "s",
        "s",
        "isLeaf",
        "s",
        "i",
        "s",
        "isStruc",
        "s",
        "r",
        "b",
        "s",
        "r",
        "c",
        "s",
        "i",
        "pairs",
        "foc",
        "Struc",
        "con",
        "s",
        "c",
        "Struc",
        "s",
        "r",
        "b",
        "foc",
        "con",
        "foci",
        "s",
        "l",
        "foc",
        "Struc",
        "s",
        "l",
        "s",
        "c",
        "Struc",
        "con",
        "c",
        "foc",
        "con",
        "foci",
        "s",
        "r",
        "functools",
        "lru_cache",
        "maxsize",
        "foc",
        "con",
        "level",
        "reduction",
        "con",
        "isContext",
        "con",
        "i",
        "foc",
        "con",
        "r",
        "r",
        "b",
        "reduction",
        "level",
        "con",
        "c",
        "Struc",
        "plug",
        "foc",
        "con",
        "l",
        "level",
        "reduction",
        "con",
        "c",
        "con",
        "r",
        "l",
        "con",
        "r",
        "r",
        "c",
        "reduction",
        "level",
        "con",
        "c",
        "Struc",
        "con",
        "l",
        "con",
        "c",
        "plug",
        "foc",
        "con",
        "r",
        "l",
        "level",
        "reduction",
        "functools",
        "lru_cache",
        "maxsize",
        "l",
        "r",
        "b",
        "i",
        "min",
        "b",
        "l",
        "count",
        "r",
        "count",
        "l",
        "isLeaf",
        "l",
        "form",
        "r",
        "Proof",
        "l",
        "r",
        "i",
        "r",
        "c",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "x",
        "prove",
        "Struc",
        "Leaf",
        "r",
        "l",
        "i",
        "r",
        "level",
        "l",
        "r",
        "r",
        "b",
        "i",
        "r",
        "c",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "x",
        "prove",
        "Struc",
        "l",
        "r",
        "level",
        "Leaf",
        "r",
        "r",
        "i",
        "r",
        "l",
        "b",
        "i",
        "foc",
        "con",
        "foci",
        "l",
        "foc",
        "isStruc",
        "foc",
        "r",
        "isLeaf",
        "foc",
        "r",
        "form",
        "c",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "y",
        "x",
        "prove",
        "foc",
        "l",
        "foc",
        "r",
        "form",
        "l",
        "b",
        "i",
        "y",
        "prove",
        "plug",
        "Leaf",
        "foc",
        "r",
        "form",
        "r",
        "foc",
        "r",
        "term",
        "x",
        "term",
        "con",
        "r",
        "b",
        "i",
        "foc",
        "isStruc",
        "foc",
        "l",
        "isLeaf",
        "foc",
        "l",
        "form",
        "c",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "y",
        "x",
        "prove",
        "foc",
        "r",
        "foc",
        "l",
        "form",
        "r",
        "b",
        "i",
        "y",
        "prove",
        "plug",
        "Leaf",
        "foc",
        "l",
        "form",
        "l",
        "foc",
        "l",
        "term",
        "x",
        "term",
        "con",
        "r",
        "b",
        "i",
        "foc",
        "isStruc",
        "foc",
        "r",
        "isContext",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "x",
        "prove",
        "plug",
        "plug",
        "foc",
        "l",
        "foc",
        "r",
        "foc",
        "c",
        "con",
        "r",
        "b",
        "i",
        "foc2",
        "con2",
        "foci",
        "foc",
        "foc2",
        "isLeaf",
        "b",
        "proofs",
        "Proof",
        "l",
        "r",
        "i",
        "x",
        "x",
        "prove",
        "plug",
        "Struc",
        "foc2",
        "con2",
        "con",
        "r",
        "b",
        "i",
        "proofs",
        "For",
        "For",
        "For",
        "For",
        "For",
        "For",
        "s",
        "isinstance",
        "s",
        "Leaf",
        "s",
        "len",
        "s",
        "Struc",
        "build",
        "s",
        "build",
        "s",
        "len",
        "s",
        "Struc",
        "build",
        "s",
        "s",
        "build",
        "s",
        "s",
        "isinstance",
        "s",
        "Leaf",
        "s",
        "term",
        "len",
        "s",
        "sentenceToString",
        "s",
        "sentenceToString",
        "s",
        "len",
        "s",
        "sentenceToString",
        "s",
        "sentenceToString",
        "s",
        "sentence",
        "goal",
        "s",
        "budget",
        "build",
        "sentence",
        "sentenceToString",
        "sentence",
        "x",
        "x",
        "term",
        "x",
        "proofString",
        "prove",
        "sen",
        "goal",
        "budget",
        "Leaf",
        "dp",
        "Leaf",
        "dp",
        "Leaf",
        "dp",
        "Leaf",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "For",
        "dp",
        "s",
        "dp",
        "Leaf",
        "For",
        "For",
        "For",
        "dp",
        "s",
        "dp",
        "dp",
        "Leaf",
        "For",
        "For",
        "dp",
        "s",
        "s",
        "Leaf",
        "For",
        "For",
        "s",
        "s",
        "s",
        "Leaf",
        "For",
        "s",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "s",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "s",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "For",
        "s",
        "For",
        "dp",
        "s",
        "nom",
        "Leaf",
        "For",
        "dp",
        "nom",
        "Leaf",
        "nom",
        "Leaf",
        "nom",
        "Leaf",
        "nom",
        "Leaf",
        "nom",
        "Leaf",
        "nom",
        "Leaf",
        "For",
        "nom",
        "nom",
        "Leaf",
        "For",
        "top",
        "For",
        "For",
        "nom",
        "nom",
        "s",
        "Leaf",
        "For",
        "top",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "dp",
        "dp",
        "Leaf",
        "For",
        "For",
        "dp",
        "s",
        "For",
        "For",
        "nom",
        "nom",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "For",
        "For",
        "dp",
        "s",
        "For",
        "dp",
        "For",
        "dp",
        "s",
        "For",
        "For",
        "nom",
        "nom",
        "dp",
        "Leaf",
        "For",
        "q",
        "For",
        "unit",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "q",
        "For",
        "dp",
        "s",
        "Leaf",
        "For",
        "For",
        "s",
        "s",
        "q",
        "Leaf",
        "For",
        "For",
        "For",
        "dp",
        "s",
        "s",
        "For",
        "For",
        "dp",
        "s",
        "For",
        "For",
        "dp",
        "s",
        "s",
        "Leaf",
        "For",
        "For",
        "f",
        "For",
        "dp",
        "For",
        "dp",
        "s",
        "dp",
        "Leaf",
        "For",
        "For",
        "dp",
        "s",
        "f",
        "ann",
        "thought",
        "everyone",
        "left",
        "ann",
        "thought",
        "someone",
        "left"
    ],
    "literals": [
        "\"(\"",
        "\")\"",
        "\"(\"",
        "\")\"",
        "\"[\"",
        "\" \"",
        "\"*\"",
        "\" \"",
        "\"]\"",
        "\"[\"",
        "\" \"",
        "\" \"",
        "\"]\"",
        "\"Axiom\"",
        "\"\\\\R\"",
        "\"/R\"",
        "\"TRACE\"",
        "\"(\\\\\"",
        "\" \"",
        "\")\"",
        "\"\\\\L\"",
        "\"/L\"",
        "\"RED\"",
        "\"EXP\"",
        "\" |- \"",
        "\"  \"",
        "\"\"",
        "\"  \"",
        "\"  \"",
        "\"  \"",
        "\"\\n\"",
        "\"I\"",
        "\"B\"",
        "\"C\"",
        "\"1\"",
        "\"Axiom\"",
        "\"\\\\\"",
        "\"\\\\R\"",
        "\"/\"",
        "\"/R\"",
        "'\\\\'",
        "\"\\\\L\"",
        "\"(\"",
        "\" \"",
        "\")\"",
        "\"/\"",
        "\"/L\"",
        "\"(\"",
        "\" \"",
        "\")\"",
        "\"RED\"",
        "\"EXP\"",
        "\"DP\"",
        "\"S\"",
        "\"Q\"",
        "\"N\"",
        "\"F\"",
        "\"T\"",
        "\" \"",
        "\" \"",
        "\":\\n\"",
        "\"ann\"",
        "\"bill\"",
        "\"carl\"",
        "\"\\\\\"",
        "\"left\"",
        "\"\\\\\"",
        "\"/\"",
        "\"saw\"",
        "\"\\\\\"",
        "\"/\"",
        "\"/\"",
        "\"gave\"",
        "\"\\\\\"",
        "\"/\"",
        "\"thought\"",
        "\"/\"",
        "\"/\"",
        "\"if\"",
        "\"/\"",
        "\"\\\\\"",
        "\"everyone\"",
        "\"/\"",
        "\"\\\\\"",
        "\"someone\"",
        "\"/\"",
        "\"\\\\\"",
        "\"anyone\"",
        "\"/\"",
        "\"\\\\\"",
        "\"/\"",
        "\"a\"",
        "\"/\"",
        "\"the\"",
        "\"bee\"",
        "\"dog\"",
        "\"man\"",
        "\"woman\"",
        "\"people\"",
        "\"/\"",
        "\"red\"",
        "\"/\"",
        "\"/\"",
        "\"\\\\\"",
        "\"damn\"",
        "\"/\"",
        "\"\\\\\"",
        "\"the-damn-dog\"",
        "\"/\"",
        "\"part\"",
        "\"\\\\\"",
        "\"/\"",
        "\"/\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"same\"",
        "\"\\\\\"",
        "\"/\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"/\"",
        "\"/\"",
        "\"\\\\\"",
        "\"mssame\"",
        "\"/\"",
        "\"x\"",
        "\"\\\\\"",
        "\"who1\"",
        "\"/\"",
        "\"\\\\\"",
        "\"who\"",
        "\"\\\\\"",
        "\"/\"",
        "\"bidk\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"/\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"sg\"",
        "\"/\"",
        "\"\\\\\"",
        "\"\\\\\"",
        "\"/\"",
        "\"foc\"",
        "\"\\\\\"",
        "\"/\"",
        "\"only\""
    ],
    "variables": [
        "l",
        "c",
        "r",
        "level",
        "count",
        "count",
        "l",
        "c",
        "r",
        "isLeaf",
        "isStruc",
        "count",
        "isContext",
        "form",
        "isLeaf",
        "isStruc",
        "isContext",
        "count",
        "term",
        "isLeaf",
        "isStruc",
        "isContext",
        "count",
        "ruleName",
        "lhs",
        "goal",
        "premise1",
        "premise2",
        "term",
        "term",
        "term",
        "term",
        "prems",
        "i",
        "b",
        "c",
        "unit",
        "pairs",
        "pairs",
        "b",
        "proofs",
        "dp",
        "s",
        "q",
        "nom",
        "f",
        "top",
        "sen",
        "ann",
        "bill",
        "carl",
        "left",
        "saw",
        "gave",
        "thought",
        "xif",
        "everyone",
        "someone",
        "anyone",
        "a",
        "the",
        "bee",
        "dog",
        "man",
        "woman",
        "people",
        "red",
        "damn",
        "tdd",
        "someof",
        "same",
        "mssame",
        "who1",
        "who",
        "bidk",
        "sg",
        "foc",
        "only"
    ],
    "comments": [
        "formula",
        "branching structure",
        "non-branching structure",
        "structural punctuation mark, either I, B, or C",
        "Struc, For, expansion budget, least unused variable index",
        "print(l.string, \"|-\", r.string, b, i)",
        "delete \"set\" to get all proof variants",
        "do((ann, left))",
        "do((everyone, left))",
        "do((ann, (saw, everyone)))",
        "do((someone, (saw, everyone)))",
        "do((ann, (saw, (the, (same, bee)))))",
        "do(((the, (same, bee)), (saw, ann)))",
        "do(((the, (same, bee)), (saw, everyone)))",
        "do((ann, ((gave, (the, (same, man))), (the, (same, bee)))), 2)",
        "do(((the, (same, man)), ((gave, (a, woman)), (the, (same, bee)))), 3)",
        "do((who, (ann, saw)))",
        "do((ann, (saw, (someof, (the, (same, people))))))",
        "do((who, left))",
        "do((someone, left))",
        "do(((ann, left), (bidk, (who, left))))",
        "do(((someone, left), (bidk, (who, left))))",
        "do(((someone, left), (bidk, (who, sg))))",
        "do(((bill, (saw, ann)), (bidk, (who, sg))))",
        "do(((bill, (saw, someone)), (bidk, (who, sg))), 3)",
        "do((ann, (only, (saw, (foc, bill)))))",
        "do((ann, (only, 4, (thought, 1, (bill, (saw, (foc, carl)))))))",
        "do((ann, (only, 4, (thought, 1, (everyone, (saw, (foc, carl)))))))",
        "do((ann, (only, 4, (thought, 2, (someone, (saw, (foc, carl)))))))",
        "do(((xif, 3, (someone, left)), (ann, left)))",
        "do(((xif, 3, (anyone, left)), (ann, left)))",
        "do(((xif, 3, (everyone, left)), (ann, left)))",
        "do(((xif, 3, (ann, (thought, 2, (someone, left)))), (bill, left)))",
        "do(((xif, 3, (ann, (thought, 2, (anyone, left)))), (bill, left)))",
        "do((ann, (thought, 2, ((the, (damn, dog)), left))), top)",
        "do(((the, (damn, dog)), (only, 4, (thought, 2, (ann, (saw, (foc, carl)))))), top)",
        "do(((xif, ((the, (damn, dog)), left)), (ann, left)), top)",
        "do((ann, (only, 4, (saw, (foc, bill)))))",
        "do((ann, (only, 4, (thought, 2, (someone, (saw, (foc, carl)))))))",
        "do((ann, (thought, 2, (someone, (saw, carl)))))",
        "do((ann, (only, 4, (thought, 2, ((the, (red, dog)), (saw, (foc, carl)))))))",
        "do((ann, (only, 4, (thought, 2, ((the, (damn, dog)), (saw, (foc, carl)))))), top, 2)",
        "do((ann, (only, 4, (thought, 2, (tdd, (saw, (foc, carl)))))), top, 2)"
    ],
    "docstrings": [],
    "functions": [
        "__eq__",
        "__hash__",
        "proofString",
        "foci",
        "plug",
        "prove",
        "build",
        "sentenceToString"
    ],
    "classes": [
        "For",
        "Struc",
        "Leaf",
        "Combinator",
        "Proof"
    ]
}