{
    "identifiers": [
        "Microsoft",
        "EntityFrameworkCore",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "TicketingSystem",
        "BLL",
        "Contracts",
        "TicketingSystem",
        "BLL",
        "Helpers",
        "TicketingSystem",
        "DAL",
        "Models",
        "TicketingSystem",
        "ViewModel",
        "ViewModel",
        "TicketingSystem",
        "ViewModel",
        "ViewModels",
        "TicketingSystem",
        "BLL",
        "Services",
        "IGenericService",
        "EmployeeTypeVM",
        "ToViewModel",
        "ToModel",
        "TicketingSystemContext",
        "_context",
        "context",
        "_context",
        "EmployeeTypeVM",
        "employeetypeVM",
        "context",
        "context",
        "EmployeeTypes",
        "Where",
        "b",
        "EmployeeTypeName",
        "ToLower",
        "employeetypeVM",
        "EmployeeTypeName",
        "ToLower",
        "Any",
        "ResponseVM",
        "ResponseVM",
        "ALREADY_EXIST",
        "context",
        "Database",
        "BeginTransaction",
        "employeetypeVM",
        "EmployeeTypeid",
        "Guid",
        "NewGuid",
        "context",
        "EmployeeTypes",
        "Add",
        "toModel",
        "EmployeeType",
        "employeetypeVM",
        "context",
        "SaveChanges",
        "dbTransaction",
        "Commit",
        "ResponseVM",
        "ex",
        "dbTransaction",
        "Rollback",
        "ResponseVM",
        "ResponseVM",
        "SOMETHING_WENT_WRONG",
        "ex",
        "EmployeeTypeVM",
        "employeetypeVM",
        "context",
        "context",
        "EmployeeTypes",
        "Where",
        "b",
        "EmployeeTypeName",
        "ToLower",
        "employeetypeVM",
        "EmployeeTypeName",
        "ToLower",
        "Any",
        "ResponseVM",
        "ResponseVM",
        "ALREADY_EXIST",
        "context",
        "Database",
        "BeginTransaction",
        "context",
        "EmployeeTypes",
        "Find",
        "employeetypeVM",
        "EmployeeTypeid",
        "employeeTypeToBeUpdated",
        "ResponseVM",
        "ResponseVM",
        "DOES_NOT_EXIST",
        "employeeTypeToBeUpdated",
        "EmployeeTypeid",
        "employeetypeVM",
        "EmployeeTypeid",
        "employeeTypeToBeUpdated",
        "EmployeeTypeName",
        "employeetypeVM",
        "EmployeeTypeName",
        "context",
        "SaveChanges",
        "dbTransaction",
        "Commit",
        "ResponseVM",
        "ex",
        "dbTransaction",
        "Rollback",
        "ResponseVM",
        "ResponseVM",
        "SOMETHING_WENT_WRONG",
        "ex",
        "Guid",
        "id",
        "context",
        "context",
        "Employees",
        "Where",
        "b",
        "EmployeeTypeid",
        "id",
        "Any",
        "ResponseVM",
        "context",
        "Database",
        "BeginTransaction",
        "context",
        "EmployeeTypes",
        "Find",
        "id",
        "employeeTypeToBeDeleted",
        "ResponseVM",
        "ResponseVM",
        "DOES_NOT_EXIST",
        "context",
        "EmployeeTypes",
        "Remove",
        "employeeTypeToBeDeleted",
        "context",
        "SaveChanges",
        "dbTransaction",
        "Commit",
        "ResponseVM",
        "ex",
        "dbTransaction",
        "Rollback",
        "ResponseVM",
        "ResponseVM",
        "SOMETHING_WENT_WRONG",
        "ex",
        "EmployeeTypeVM",
        "context",
        "context",
        "EmployeeTypes",
        "ToList",
        "OrderByDescending",
        "x",
        "EmployeeTypeid",
        "employeetypes",
        "Select",
        "toViewModel",
        "EmployeeType",
        "x",
        "employeetypesVm",
        "ex",
        "Guid",
        "id",
        "context",
        "context",
        "EmployeeTypes",
        "Find",
        "id",
        "employeetypes",
        "employeetypeVM",
        "toViewModel",
        "EmployeeType",
        "employeetypes",
        "employeetypeVM"
    ],
    "literals": [
        "\"created\"",
        "\"Employee Type\"",
        "\"created\"",
        "\"Employee Type\"",
        "\"created\"",
        "\"Employee Type\"",
        "\"\"",
        "\"created\"",
        "\"Employee Type\"",
        "\"updated\"",
        "\"Employee Type\"",
        "\"updated\"",
        "\"Employee Type\"",
        "\"updated\"",
        "\"Employee Type\"",
        "\"\"",
        "\"deleted\"",
        "\"Employee Type\"",
        "\"Can't delete record. It is used in a transaction\"",
        "\"deleted\"",
        "\"Employee Type\"",
        "\"deleted\"",
        "\"Employee Type\"",
        "\"deleted\"",
        "\"Employee Type\"",
        "\"\""
    ],
    "variables": [
        "ToViewModel",
        "toViewModel",
        "ToModel",
        "toModel",
        "TicketingSystemContext",
        "context",
        "dbTransaction",
        "dbTransaction",
        "EmployeeType",
        "employeeTypeToBeUpdated",
        "dbTransaction",
        "EmployeeType",
        "employeeTypeToBeDeleted",
        "employeetypes",
        "employeetypesVm",
        "employeetypes",
        "EmployeeTypeVM",
        "employeetypeVM"
    ],
    "comments": [
        "inject dependencies",
        "check if record already exists",
        "converts to book type then save to context",
        "commits changes to db",
        "check if record already exists",
        "find employee from the database",
        "ends function if employee does not exists",
        "update changes then save to context",
        "commit changes to db",
        "check if employee exists in ticket",
        "ends function if employee does not exists",
        "delete employee then save to context",
        "commit changes to db",
        "gets all employees and order the from last to first"
    ],
    "docstrings": [],
    "functions": [
        "EmployeeTypeService",
        "ResponseVM",
        "Create",
        "ResponseVM",
        "Update",
        "ResponseVM",
        "Delete",
        "GetAll",
        "EmployeeTypeVM",
        "GetSingleBy"
    ],
    "classes": [
        "EmployeeTypeService"
    ]
}