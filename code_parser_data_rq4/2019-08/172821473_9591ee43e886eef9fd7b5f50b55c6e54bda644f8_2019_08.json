{
    "identifiers": [
        "getDependencyChain",
        "indentedLine",
        "text",
        "space",
        "space",
        "text",
        "getPaths",
        "dependencyChain",
        "dependencyChain",
        "dependency",
        "indentedLine",
        "dependency",
        "getBuildCommands",
        "dependencyChain",
        "dependencyChain",
        "dependencyChain",
        "dependency",
        "commands",
        "indentedLine",
        "dependency",
        "indentedLine",
        "dependency",
        "dependencyChain",
        "dependencyChain",
        "commands",
        "indentedLine",
        "workspace",
        "indentedLine",
        "workspace",
        "commands",
        "generateFrontendPackageCIWorkflow",
        "workspace",
        "getDependencyChain",
        "workspace",
        "workspace",
        "workspace",
        "getPaths",
        "dependencyChain",
        "getBuildCommands",
        "dependencyChain",
        "workspace",
        "ymlContent",
        "generateFrontendPackageCDWorkflow",
        "workspace",
        "deployStepGenerator",
        "getDependencyChain",
        "workspace",
        "workspace",
        "workspace",
        "getPaths",
        "dependencyChain",
        "getBuildCommands",
        "dependencyChain",
        "deployStepGenerator",
        "workspace",
        "ymlContent",
        "generateReactFrontendPackageCDWorkflow",
        "workspace",
        "deployStepGenerator",
        "workspace",
        "workspace",
        "generateFrontendPackageCDWorkflow",
        "workspace",
        "deployStepGenerator",
        "generateBlogPackageCDWorkflow",
        "deployStepGenerator",
        "generateFrontendPackageCDWorkflow",
        "deployStepGenerator",
        "generateFrontendPackageCIWorkflow",
        "generateFrontendPackageCIWorkflow",
        "generateFrontendPackageCIWorkflow",
        "generateFrontendPackageCIWorkflow",
        "generateFrontendPackageCIWorkflow",
        "generateBlogPackageCDWorkflow",
        "generateReactFrontendPackageCDWorkflow",
        "generateReactFrontendPackageCDWorkflow",
        "generateReactFrontendPackageCDWorkflow"
    ],
    "literals": [
        "'./workspace'",
        "string",
        "string",
        "${' '.repeat(space)}${text}",
        "' '",
        "string",
        "string",
        "- ${dependency}/*",
        "'\\n'",
        "string",
        "string",
        "string",
        "${indentedLine(`- name: Build dependency ${dependency}`, 6)}",
        "- name: Build dependency ${dependency}",
        "${indentedLine(`  run: yarn workspace ${dependency} build`, 6)}",
        "run: yarn workspace ${dependency} build",
        "${indentedLine(`- name: Build ${workspace}`, 6)}",
        "- name: Build ${workspace}",
        "${indentedLine(`  run: yarn workspace ${workspace} build`, 6)}",
        "run: yarn workspace ${workspace} build",
        "'\\n'",
        "string",
        "string",
        "string",
        "# @generated\n\nname: ci-${workspace}\non:\n  pull_request:\n    paths:\n      - .github/workflows/ci-workflow-${workspace}.yml\n      - configuration/*\n      - tooling/*\n${getPaths(dependencyChain)}\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@master\n      - name: Set up Node\n        uses: actions/setup-node@v1\n      - name: Yarn Install\n        run: yarn install\n\n${getBuildCommands(dependencyChain)}",
        "ci-workflow-${workspace}.yml",
        "string",
        "string",
        "string",
        "string",
        "# @generated\n\nname: cd-${workspace}\non:\n  push:\n    branches:\n      - master\n    paths:\n      - .github/workflows/cd-workflow-${workspace}.yml\n      - configuration/*\n      - tooling/*\n${getPaths(dependencyChain)}\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@master\n      - name: Set up Node\n        uses: actions/setup-node@v1\n      - name: Yarn Install\n        run: yarn install\n\n${getBuildCommands(dependencyChain)}\n${deployStepGenerator()}",
        "cd-workflow-${workspace}.yml",
        "string",
        "string",
        "string",
        "string",
        "- name: Deploy ${workspace}\n        env:\n          FIREBASE_TOKEN: \\${{ secrets.FIREBASE_TOKEN }}\n        run: |\n          ./tooling/node_modules/.bin/firebase deploy \\\n          --token=$FIREBASE_TOKEN --non-interactive --only hosting:${workspace}",
        "string",
        "string",
        "string",
        "- name: Build & Deploy blog\n        env:\n          DEPLOY_GH_PAGE_TOKEN: \\${{ secrets.DEPLOY_GH_PAGE_TOKEN }}\n          FIREBASE_TOKEN: \\${{ secrets.FIREBASE_TOKEN }}\n        run: |\n          git config --global user.name \"SamChou19815\"\n          git config --global user.email \"sam@developersam.com\"\n          GIT_USER=$DEPLOY_GH_PAGE_TOKEN yarn workspace blog deploy",
        "'blog'",
        "string",
        "string",
        "'blog'",
        "'main-site-frontend'",
        "'sam-highlighter'",
        "'samlang-demo-frontend'",
        "'ten-web-frontend'",
        "'main-site-frontend'",
        "'samlang-demo-frontend'",
        "'ten-web-frontend'"
    ],
    "variables": [
        "indentedLine",
        "getPaths",
        "getBuildCommands",
        "commands",
        "workspace",
        "generateFrontendPackageCIWorkflow",
        "dependencyChain",
        "ymlContent",
        "generateFrontendPackageCDWorkflow",
        "dependencyChain",
        "ymlContent",
        "generateReactFrontendPackageCDWorkflow",
        "deployStepGenerator",
        "generateBlogPackageCDWorkflow",
        "deployStepGenerator"
    ],
    "comments": [
        "CI",
        "CD"
    ],
    "docstrings": [
        "* @returns a list of tuple: (workflow file name, workflow file content),"
    ],
    "functions": [],
    "classes": []
}