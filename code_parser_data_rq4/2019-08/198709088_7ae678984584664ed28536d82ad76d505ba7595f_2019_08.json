{
    "identifiers": [
        "pipe",
        "Column",
        "ColumnMetaData",
        "Model",
        "Op",
        "select",
        "where",
        "USER",
        "select",
        "USER",
        "select",
        "USER",
        "USER",
        "select",
        "USER",
        "USER",
        "select",
        "USER",
        "select",
        "USER",
        "USER",
        "pipe",
        "USER",
        "select",
        "USER",
        "select",
        "USER",
        "pipe",
        "INVOICE",
        "select",
        "INVOICE",
        "select",
        "INVOICE",
        "pipe",
        "USER",
        "select",
        "USER",
        "select",
        "USER",
        "where",
        "USER",
        "Op"
    ],
    "literals": [
        "'ramda/es/pipe'",
        "'./index'",
        "'user.id'",
        "'TINYINT'",
        "'user.age'",
        "'TEXT'",
        "'user'",
        "'TEXT'",
        "'TINYINT'",
        "'invoice.id'",
        "'TINYINT'",
        "'invoice.age'",
        "'TEXT'",
        "'invoice'",
        "'TINYINT'",
        "'TEXT'"
    ],
    "variables": [
        "USER",
        "INVOICE",
        "r1",
        "r12",
        "r2",
        "r2b",
        "r3",
        "execute1",
        "execute2",
        "execute3"
    ],
    "comments": [
        "tslint:disable:no-magic-numbers",
        "$ExpectType () => Query<User, never, never, string>",
        "$ExpectType <K2 extends string, ExistingColumns extends Column<K2, ColumnMetaData<User, any>>>(q: Query<User, ExistingColumns, never, string>) => Query<User, Column<\"user.id\", ColumnMetaData<User, any>> | ExistingColumns, never, string>",
        "$ExpectType Query<User, Column<\"user.id\", ColumnMetaData<User, any>>, never, string>",
        "$ExpectType Query<User, Column<\"user.age\", ColumnMetaData<User, any>>, never, string>",
        "$ExpectType Query<User, Column<\"user.id\", ColumnMetaData<User, any>> | Column<\"user.age\", ColumnMetaData<User, any>>, never, string>",
        "$ExpectType () => Query<User, Column<\"user.id\", ColumnMetaData<User, any>> | Column<\"user.age\", ColumnMetaData<User, any>>, never, string>",
        "$ExpectType () => Query<Invoice, Column<\"invoice.id\", ColumnMetaData<Invoice, any>> | Column<\"invoice.age\", ColumnMetaData<Invoice, any>>, never, string>",
        "$ExpectType () => Query<User, Column<string, Column<\"user.id\", ColumnMetaData<User, any>> | Column<\"user.age\", ColumnMetaData<User, any>>>, never, string>"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}