{
    "identifiers": [
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "clawpack",
        "pyclaw",
        "Solution",
        "numpy",
        "np",
        "model_output_dir",
        "regions_to_check",
        "frames_to_check",
        "mean_tol_abs",
        "min_depth",
        "glob",
        "join",
        "model_output_dir",
        "output_files",
        "split",
        "open",
        "join",
        "model_output_dir",
        "f",
        "l",
        "f",
        "l",
        "l",
        "strip",
        "split",
        "Solution",
        "frame",
        "last_frame",
        "frames_to_check",
        "last_frame",
        "soln",
        "read",
        "frame",
        "path",
        "model_output_dir",
        "file_format",
        "read_aux",
        "r",
        "regions_to_check",
        "np",
        "array",
        "s",
        "soln",
        "states",
        "s",
        "patch",
        "level",
        "s",
        "grid",
        "c_centers",
        "s",
        "grid",
        "c_centers",
        "s",
        "q",
        "eta",
        "s",
        "q",
        "np",
        "where",
        "topo",
        "min_depth",
        "eta",
        "np",
        "nan",
        "eta",
        "np",
        "ix_",
        "x",
        "r",
        "x",
        "r",
        "y",
        "r",
        "y",
        "r",
        "np",
        "concatenate",
        "all_vals",
        "in_reg",
        "flatten",
        "all_vals",
        "sl_init",
        "all_vals",
        "shape",
        "abs",
        "np",
        "nanmean",
        "all_vals",
        "mean_tol_abs",
        "InstabilityError",
        "format",
        "np",
        "nanmean",
        "all_vals",
        "r",
        "model_output_dir",
        "max_refinement_depth_to_check",
        "frames_to_check",
        "glob",
        "join",
        "model_output_dir",
        "i",
        "split",
        "i",
        "output_files",
        "max",
        "frames",
        "open",
        "join",
        "model_output_dir",
        "f",
        "l",
        "f",
        "l",
        "i",
        "i",
        "l",
        "strip",
        "split",
        "l",
        "i",
        "i",
        "l",
        "strip",
        "split",
        "l",
        "l",
        "strip",
        "split",
        "of",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "np",
        "inf",
        "f",
        "last_frame",
        "frames_to_check",
        "last_frame",
        "Solution",
        "soln",
        "read",
        "f",
        "path",
        "model_output_dir",
        "file_format",
        "file_format",
        "read_aux",
        "s",
        "soln",
        "states",
        "max_refinement_depth_to_check",
        "s",
        "patch",
        "level",
        "max_refinement_depth_to_check",
        "s",
        "grid",
        "dimensions",
        "delta",
        "delta",
        "s",
        "grid",
        "c_centers",
        "s",
        "grid",
        "c_nodes",
        "s",
        "grid",
        "c_centers",
        "s",
        "grid",
        "c_nodes",
        "s",
        "q",
        "s",
        "q",
        "s",
        "q",
        "hx",
        "h",
        "s",
        "q",
        "hy",
        "h",
        "eta",
        "s",
        "q",
        "np",
        "nanmax",
        "np",
        "abs",
        "hx",
        "max",
        "maxhx_overall",
        "np",
        "nanmax",
        "np",
        "abs",
        "hy",
        "max",
        "maxhy_overall",
        "np",
        "nanmax",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_x",
        "maxcurrx_overall",
        "np",
        "nanmax",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_y",
        "maxcurry_overall",
        "abs",
        "xedges",
        "xl",
        "edge_tol",
        "np",
        "nanmax",
        "maxhxl",
        "np",
        "nanmax",
        "np",
        "abs",
        "hx",
        "np",
        "nanmax",
        "maxcurrxl",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_x",
        "abs",
        "xedges",
        "xu",
        "edge_tol",
        "np",
        "nanmax",
        "maxhxu",
        "np",
        "nanmax",
        "np",
        "abs",
        "hx",
        "np",
        "nanmax",
        "maxcurrxu",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_x",
        "abs",
        "yedges",
        "yl",
        "edge_tol",
        "np",
        "nanmax",
        "maxhyl",
        "np",
        "nanmax",
        "np",
        "abs",
        "hy",
        "np",
        "nanmax",
        "maxcurryl",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_y",
        "abs",
        "yedges",
        "yu",
        "edge_tol",
        "np",
        "nanmax",
        "maxhyu",
        "np",
        "nanmax",
        "np",
        "abs",
        "hy",
        "np",
        "nanmax",
        "maxcurryu",
        "np",
        "nanmax",
        "np",
        "abs",
        "curr_y",
        "maxhxl",
        "maxhxu",
        "maxhyu",
        "maxhyl",
        "maxcurrxl",
        "maxcurrxu",
        "maxcurryu",
        "maxcurryl",
        "maxhx_overall",
        "maxhy_overall",
        "maxcurrx_overall",
        "maxcurry_overall"
    ],
    "literals": [
        "'fort.b*'",
        "'/'",
        "'geoclaw.data'",
        "'r'",
        "'=: sea_level'",
        "'binary'",
        "\"Model possibly unstable due to large magnitude deep \"",
        "\"ocean surge at end of run ({:.1f} cm in region {})\"",
        "'fort.q*'",
        "'/'",
        "'claw.data'",
        "'r'",
        "'=: lower'",
        "'=: upper'",
        "'=: output_format'",
        "'ascii'",
        "'netcdf'",
        "'binary'",
        "'max_normal_fluxes'",
        "'W'",
        "'E'",
        "'N'",
        "'S'",
        "'max_normal_currents'",
        "'W'",
        "'E'",
        "'N'",
        "'S'",
        "'domain_maxs'",
        "'hu'",
        "'hv'",
        "'u'",
        "'v'"
    ],
    "variables": [
        "output_files",
        "last_frame",
        "sl_init",
        "soln",
        "all_vals",
        "x",
        "y",
        "eta",
        "topo",
        "eta",
        "in_reg",
        "all_vals",
        "all_vals",
        "output_files",
        "frames",
        "last_frame",
        "xl",
        "yl",
        "xu",
        "yu",
        "of",
        "file_format",
        "maxhxl",
        "maxhyl",
        "maxcurrxl",
        "maxcurryl",
        "maxhxu",
        "maxhyu",
        "maxcurrxu",
        "maxcurryu",
        "maxhx_overall",
        "maxhy_overall",
        "maxcurrx_overall",
        "maxcurry_overall",
        "soln",
        "delta",
        "edge_tol",
        "x",
        "xedges",
        "y",
        "yedges",
        "eta",
        "h",
        "hx",
        "curr_x",
        "hy",
        "curr_y",
        "topo",
        "maxhx_overall",
        "maxhy_overall",
        "maxcurrx_overall",
        "maxcurry_overall",
        "maxhxl",
        "maxcurrxl",
        "maxhxu",
        "maxcurrxu",
        "maxhyl",
        "maxcurryl",
        "maxhyu",
        "maxcurryu"
    ],
    "comments": [
        "atlantic",
        "gulf",
        "carribean",
        "find which frame is last",
        "get sl_init",
        "bring in solution",
        "only looking at lowest AMR level",
        "only count",
        "adjust for sl_init",
        "find which frame is last",
        "get domain and file format",
        "only looking at lowest AMR levels",
        "get rounding error tolerance"
    ],
    "docstrings": [
        "\"\"\"Module for QA/QC on GEOCLAW model outputs.\"\"\"",
        "\"\"\"Run a simple check to flag runs that were potentially numerically unstable.\n    This function looks through the final *frames_to_check* frames of a model output\n    and checks all cells in AMR level 1 that are below *min_depth* and \n    fall within each region in the *regions_to_check* list (which are intended \n    to encompass individual basins). If the absolute value of the mean surface height\n    for these cells, which should not really have much surge, is above/mean_tol_abs, \n    it raises an error.\n    \n    :Input:\n    - *model_output_dir* (str) Path to the output directory for a given model\n    - *regions_to_check* (list of lists of floats) A list of 4-element lists\n        which define the (left, bottom, right, top) of regions to check within.\n    - *frames_to_check* (int) The number of final frames of the model output to check\n    - *mean_tol_abs* (float) Model is flagged if the absolute value of the mean surface\n        height within any region in *regions_to_check* is above this value (meters).\n    - *min_depth* (float) Only cells that are below *min_depth* (meters) are checked, in \n        order to avoid including cells that potentially should have large surge values.\n        \n    :Raises:\n    - InstabilityError if the model is flagged as potentially unstable in one of the regions.\n    \"\"\"",
        "\"\"\"A common cause of instability is a persistant normal flux at the boundary.\n    This code checks the last frame(s) of a model output and returns the maximum\n    magnitude normal fluxes and currents at each boundary, as well as the maximum \n    magnitude fluxes and currents observed within the entire domain.\n    \n    :Input:\n    - *model_output_dir* (str) Path to the output directory for a given model\n    - *max_refinement_depth_to_check* (int or None, optional) How many refinement levels to \n        loop through to find max values. Runs quicker when just checking level 1, but\n        you may find higher max values at higher refinement levels. None (default)\n        means check all levels\n    - *frames_to_check* (int) How many of the last output frames to check for max. Default\n        is just one.\n    \"\"\""
    ],
    "functions": [
        "quality_check",
        "get_max_boundary_fluxes"
    ],
    "classes": [
        "InstabilityError"
    ]
}