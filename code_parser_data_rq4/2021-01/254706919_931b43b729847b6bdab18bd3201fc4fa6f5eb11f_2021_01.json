{
    "identifiers": [
        "Threading",
        "Threading",
        "Tasks",
        "Sylvan",
        "Data",
        "Csv",
        "curFieldCount",
        "recordStart",
        "idx",
        "idx",
        "bufferEnd",
        "FillBufferAsync",
        "idx",
        "bufferEnd",
        "ReadField",
        "fieldIdx",
        "result",
        "ReadResult",
        "fieldIdx",
        "result",
        "ReadResult",
        "result",
        "ReadResult",
        "Incomplete",
        "recordStart",
        "CsvRecordTooLargeException",
        "RowNumber",
        "fieldIdx",
        "FillBufferAsync",
        "buffer",
        "recordStart",
        "Copy",
        "buffer",
        "recordStart",
        "buffer",
        "bufferEnd",
        "recordStart",
        "bufferEnd",
        "recordStart",
        "idx",
        "recordStart",
        "recordStart",
        "buffer",
        "Length",
        "bufferEnd",
        "reader",
        "ReadBlockAsync",
        "buffer",
        "bufferEnd",
        "count",
        "bufferEnd",
        "c",
        "c",
        "count",
        "atEndOfText",
        "c",
        "CancellationToken",
        "cancellationToken",
        "cancellationToken",
        "ThrowIfCancellationRequested",
        "rowNumber",
        "state",
        "State",
        "Open",
        "NextRecordAsync",
        "state",
        "State",
        "Initialized",
        "hasRows",
        "state",
        "State",
        "Open",
        "CompleteTrue",
        "state",
        "State",
        "End",
        "rowNumber",
        "CompleteFalse",
        "CancellationToken",
        "cancellationToken",
        "state",
        "State",
        "End",
        "CompleteFalse",
        "NETSTANDARD2_1",
        "state",
        "State",
        "Closed",
        "ownsReader",
        "reader",
        "Dispose",
        "state",
        "State",
        "Closed",
        "CompletedTask"
    ],
    "literals": [],
    "variables": [
        "fieldIdx",
        "result",
        "buffer",
        "count",
        "c"
    ],
    "comments": [
        "we were unable to read an entire record out of the buffer synchronously",
        "if we consumed the entire buffer reading this record, then this is an exceptional situation",
        "we expect a record to be able to fit entirely within the buffer.",
        "after filling the buffer, we will resume reading fields from where we left off.",
        "move any pending data to the front of the buffer.",
        "<inheritdoc/>",
        "after initizialization, the first record would already be in the buffer",
        "if hasRows is true.",
        "<inheritdoc/>",
        "<inheritdoc/>"
    ],
    "docstrings": [],
    "functions": [
        "NextRecordAsync",
        "FillBufferAsync",
        "ReadAsync",
        "NextResultAsync",
        "CloseAsync"
    ],
    "classes": [
        "CsvDataReader"
    ]
}