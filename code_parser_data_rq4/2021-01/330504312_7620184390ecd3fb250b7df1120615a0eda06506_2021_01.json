{
    "identifiers": [
        "discord",
        "discord",
        "client",
        "discord",
        "guildId",
        "client",
        "guildId",
        "client",
        "commandData",
        "commandData",
        "commandId",
        "commandId",
        "commandName",
        "handler",
        "commandName",
        "commandName",
        "commandName",
        "handler",
        "commandName",
        "val",
        "val",
        "handler",
        "filtered",
        "commandName",
        "filtered",
        "interaction",
        "ResponseType",
        "interaction",
        "interaction",
        "guildId",
        "interaction",
        "commandName",
        "handlerList",
        "interaction",
        "interaction",
        "InteractionEvent",
        "userId",
        "channelId",
        "interaction",
        "handler",
        "handlerList",
        "handler",
        "hasResponse",
        "handlerResponse",
        "response",
        "handlerResponse",
        "hasResponse",
        "interaction",
        "response",
        "ResponseType",
        "interaction",
        "interaction",
        "response",
        "response",
        "options",
        "options",
        "obj",
        "options",
        "obj",
        "obj",
        "obj",
        "ret",
        "obj",
        "obj",
        "obj",
        "ret",
        "OptionType",
        "discord",
        "client",
        "discord",
        "userId",
        "channelId",
        "options",
        "client",
        "userId",
        "channelId",
        "options",
        "discord",
        "discord",
        "key",
        "ResponseType"
    ],
    "literals": [
        "\"discord.js\"",
        "string",
        "string",
        "string",
        "\"INTERACTION_CREATE\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "filtered",
        "response",
        "guildId",
        "commandName",
        "handlerList",
        "userId",
        "channelId",
        "hasResponse",
        "handlerResponse",
        "ret"
    ],
    "comments": [
        "@ts-expect-error",
        "@ts-expect-error",
        "@ts-expect-error",
        "@ts-expect-error",
        "@ts-expect-error",
        "@ts-expect-error",
        "@ts-expect-error",
        "remove the handler from the list",
        "default response",
        "command response type",
        "fire all command handlers, only keeping response from first valid return",
        "ping response, shouldn't happen but this is a just-in-case",
        "send the response to the API",
        "@ts-expect-error",
        "@ts-expect-error",
        "A subcommand that can hold non-subcommand options",
        "A group of subcommands that can ONLY hold subcommands as options",
        "A string option",
        "An integer option",
        "A boolean option",
        "A user option. Returns a string with the user's ID.",
        "A channel option. Returns a string with the channel's ID.",
        "A role option. Returns a string with the role's ID.",
        "Response to a ping. Shouldn't need to be used.",
        "Acknowledge an interaction. The default response. Shouldn't need to be used.",
        "Respond with a message. Requires the `data` parameter to be sent.",
        "Respond with a message and show the source command. Requires the `data` parameter to be sent.",
        "Acknowledge the interaction and show the source command."
    ],
    "docstrings": [
        "* Wrapper for the Discord slash commands API because discord.js does not officially support it yet\n *\n * Also because Typescript doesn't play nice with the workaround",
        "* @param client The discord client object\n   * @param guildId The guild to update commands for",
        "* Create or update a command in the guild\n   * @param commandData Command data object\n   * @returns A promise with the command object that was created",
        "* Delete a command from the guild\n   * @param commandId The command ID to delete",
        "* Get all commands in the guild\n   * @returns A promise with an array of command objects",
        "* Register a command handler for a specific command\n   * * Only the first handler to return a response object has its response sent to the API\n   * @param commandName The command to respond to\n   * @param handler Function that runs when a user sends the command. Returns an optional {@link InteractionResponse} object.\n   * @returns Function that invalidates the given handler when called.",
        "* Helper method to handle the interactions from the websocket response\n   * @param interaction The interaction object from the API",
        "* Helper function that recursively converts command options into a more usable map\n   * @param options The options array passed from the API"
    ],
    "functions": [
        "postCommand",
        "deleteCommand",
        "getCommands",
        "on",
        "_handleInteraction",
        "_convertOptionsData",
        "getUser",
        "getChannel"
    ],
    "classes": [
        "CommandClient",
        "InteractionEvent"
    ]
}