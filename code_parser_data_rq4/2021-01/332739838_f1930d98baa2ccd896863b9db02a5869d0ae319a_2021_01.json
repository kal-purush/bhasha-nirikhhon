{
    "identifiers": [
        "pytest",
        "jina",
        "jaml",
        "parsers",
        "executor",
        "legacy",
        "LegacyParser",
        "a00",
        "a00",
        "A00",
        "a0",
        "a0",
        "A0",
        "a",
        "a",
        "b",
        "b",
        "c",
        "c",
        "A",
        "B",
        "C",
        "A",
        "B",
        "C",
        "d",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "d",
        "pytest",
        "mark",
        "parametrize",
        "E",
        "E_arguments",
        "D",
        "D_arguments",
        "A_dummy",
        "A_dummy_arguments",
        "input_class",
        "expected_arguments",
        "LegacyParser",
        "_get_all_arguments",
        "class_",
        "input_class",
        "arguments_from_cls",
        "expected_arguments"
    ],
    "literals": [
        "'a00'",
        "'a0'",
        "'a'",
        "'b'",
        "'c'",
        "'d'",
        "'self'",
        "'args'",
        "'kwargs'",
        "'a00'",
        "'a0'",
        "'a'",
        "'b'",
        "'c'",
        "'self'",
        "'args'",
        "'kwargs'",
        "'self'",
        "'args'",
        "'kwargs'",
        "'input_class, expected_arguments'"
    ],
    "variables": [
        "a00",
        "a0",
        "a",
        "b",
        "c",
        "d",
        "D_arguments",
        "E_arguments",
        "A_dummy_arguments",
        "arguments_from_cls"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Tests LegacyParser._get_all_arguments retriving all arguments from a class and any class it inherits from\n    \"\"\""
    ],
    "functions": [
        "test_get_all_arguments"
    ],
    "classes": [
        "A00",
        "A0",
        "A",
        "B",
        "C",
        "E",
        "D",
        "A_dummy"
    ]
}