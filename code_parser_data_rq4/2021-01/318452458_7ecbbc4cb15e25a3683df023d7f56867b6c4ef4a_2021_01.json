{
    "identifiers": [
        "com",
        "mercari",
        "solution",
        "source",
        "com",
        "mercari",
        "solution",
        "util",
        "gcp",
        "StorageUtil",
        "freemarker",
        "template",
        "Configuration",
        "freemarker",
        "template",
        "TemplateException",
        "org",
        "apache",
        "beam",
        "sdk",
        "coders",
        "org",
        "apache",
        "beam",
        "sdk",
        "metrics",
        "Distribution",
        "org",
        "apache",
        "beam",
        "sdk",
        "metrics",
        "Metrics",
        "org",
        "apache",
        "beam",
        "sdk",
        "state",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "org",
        "apache",
        "beam",
        "sdk",
        "transforms",
        "windowing",
        "org",
        "apache",
        "beam",
        "sdk",
        "values",
        "org",
        "apache",
        "commons",
        "collections4",
        "ListUtils",
        "org",
        "joda",
        "time",
        "Duration",
        "org",
        "joda",
        "time",
        "Instant",
        "org",
        "joda",
        "time",
        "format",
        "ISODateTimeFormat",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "io",
        "java",
        "io",
        "StringReader",
        "java",
        "io",
        "StringWriter",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "freemarker",
        "template",
        "Template",
        "query",
        "startDatetime",
        "intervalSecond",
        "gapSecond",
        "maxDurationMinute",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "query",
        "startDatetime",
        "intervalSecond",
        "gapSecond",
        "maxDurationMinute",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "SQL_SPLITTER",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "tagCheckpoint",
        "serialVersionUID",
        "tagQueryResult",
        "serialVersionUID",
        "query",
        "startDatetime",
        "intervalSecond",
        "gapSecond",
        "maxDurationMinute",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "query",
        "startDatetime",
        "intervalSecond",
        "gapSecond",
        "maxDurationMinute",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "query",
        "query",
        "startDatetime",
        "startDatetime",
        "intervalSecond",
        "intervalSecond",
        "gapSecond",
        "gapSecond",
        "maxDurationMinute",
        "maxDurationMinute",
        "outputCheckpoint",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "queryExecuteDoFn",
        "begin",
        "startInstantView",
        "begin",
        "getPipeline",
        "apply",
        "Create",
        "of",
        "KV",
        "of",
        "apply",
        "ParDo",
        "of",
        "apply",
        "Min",
        "globally",
        "apply",
        "View",
        "asSingleton",
        "queryResults",
        "begin",
        "apply",
        "Window",
        "into",
        "triggering",
        "Repeatedly",
        "forever",
        "AfterPane",
        "elementCountAtLeast",
        "discardingFiredPanes",
        "withAllowedLateness",
        "Duration",
        "standardDays",
        "apply",
        "WithKeys",
        "of",
        "apply",
        "ParDo",
        "of",
        "intervalSecond",
        "gapSecond",
        "query",
        "maxDurationMinute",
        "catchupIntervalSecond",
        "startInstantView",
        "withSideInputs",
        "startInstantView",
        "apply",
        "Reshuffle",
        "viaRandomKey",
        "apply",
        "ParDo",
        "of",
        "queryExecuteDoFn",
        "withOutputTags",
        "tagQueryResult",
        "TupleTagList",
        "of",
        "tagCheckpoint",
        "outputCheckpoint",
        "queryResults",
        "get",
        "tagCheckpoint",
        "apply",
        "Window",
        "configure",
        "triggering",
        "Repeatedly",
        "forever",
        "AfterPane",
        "elementCountAtLeast",
        "discardingFiredPanes",
        "withAllowedLateness",
        "Duration",
        "standardDays",
        "apply",
        "WithKeys",
        "of",
        "apply",
        "ParDo",
        "of",
        "startInstantView",
        "withSideInputs",
        "startInstantView",
        "apply",
        "Window",
        "into",
        "FixedWindows",
        "of",
        "Duration",
        "standardSeconds",
        "triggering",
        "Repeatedly",
        "forever",
        "AfterProcessingTime",
        "pastFirstElementInPane",
        "apply",
        "Max",
        "globally",
        "withoutDefaults",
        "apply",
        "ParDo",
        "of",
        "outputCheckpoint",
        "queryResults",
        "get",
        "tagQueryResult",
        "STATEID_START_INSTANT",
        "StateId",
        "STATEID_START_INSTANT",
        "startState",
        "StateSpecs",
        "value",
        "InstantCoder",
        "of",
        "ProcessElement",
        "c",
        "StateId",
        "STATEID_START_INSTANT",
        "startState",
        "startState",
        "read",
        "LOG",
        "info",
        "format",
        "startState",
        "read",
        "c",
        "output",
        "startState",
        "read",
        "start",
        "getStartDateTimeOrCheckpoint",
        "LOG",
        "info",
        "format",
        "start",
        "startState",
        "write",
        "start",
        "c",
        "output",
        "start",
        "useCheckpointAsStartDatetime",
        "start",
        "getCheckpointDateTime",
        "start",
        "start",
        "LOG",
        "warn",
        "getStartDateTime",
        "outputCheckpoint",
        "errorMessage",
        "LOG",
        "error",
        "errorMessage",
        "errorMessage",
        "StorageUtil",
        "exists",
        "outputCheckpoint",
        "LOG",
        "warn",
        "format",
        "outputCheckpoint",
        "checkpointDatetimeString",
        "StorageUtil",
        "readString",
        "outputCheckpoint",
        "trim",
        "LOG",
        "info",
        "format",
        "checkpointDatetimeString",
        "Instant",
        "parse",
        "checkpointDatetimeString",
        "e",
        "errorMessage",
        "format",
        "checkpointDatetimeString",
        "e",
        "getMessage",
        "LOG",
        "error",
        "errorMessage",
        "errorMessage",
        "LOG",
        "info",
        "format",
        "startDatetime",
        "startDatetime",
        "errorMessage",
        "LOG",
        "error",
        "errorMessage",
        "errorMessage",
        "Instant",
        "parse",
        "startDatetime",
        "e",
        "errorMessage",
        "format",
        "startDatetime",
        "e",
        "getMessage",
        "LOG",
        "error",
        "errorMessage",
        "errorMessage",
        "STATEID_INTERVAL_COUNT",
        "STATEID_LASTEVENT_TIME",
        "STATEID_LASTPROCESSING_TIME",
        "STATEID_CATCHUP",
        "STATEID_PRECATCHUP",
        "intervalSecond",
        "gapSecond",
        "query",
        "maxDurationMinute",
        "catchupIntervalSecond",
        "startInstantView",
        "template",
        "durationGap",
        "durationInterval",
        "durationCatchupInterval",
        "durationMax",
        "intervalSecond",
        "gapSecond",
        "query",
        "maxDurationMinute",
        "catchupIntervalSecond",
        "startInstantView",
        "intervalSecond",
        "intervalSecond",
        "gapSecond",
        "gapSecond",
        "query",
        "query",
        "maxDurationMinute",
        "maxDurationMinute",
        "catchupIntervalSecond",
        "catchupIntervalSecond",
        "startInstantView",
        "startInstantView",
        "StateId",
        "STATEID_INTERVAL_COUNT",
        "queryCountState",
        "StateSpecs",
        "value",
        "BigEndianLongCoder",
        "of",
        "StateId",
        "STATEID_LASTEVENT_TIME",
        "lastEventTimeState",
        "StateSpecs",
        "value",
        "InstantCoder",
        "of",
        "StateId",
        "STATEID_LASTPROCESSING_TIME",
        "lastProcessingTimeState",
        "StateSpecs",
        "value",
        "InstantCoder",
        "of",
        "StateId",
        "STATEID_CATCHUP",
        "catchupState",
        "StateSpecs",
        "value",
        "BooleanCoder",
        "of",
        "StateId",
        "STATEID_PRECATCHUP",
        "preCatchupState",
        "StateSpecs",
        "value",
        "BooleanCoder",
        "of",
        "Setup",
        "template",
        "createTemplate",
        "query",
        "durationGap",
        "Duration",
        "standardSeconds",
        "gapSecond",
        "durationInterval",
        "Duration",
        "standardSeconds",
        "intervalSecond",
        "durationCatchupInterval",
        "Duration",
        "standardSeconds",
        "catchupIntervalSecond",
        "durationMax",
        "Duration",
        "standardMinutes",
        "maxDurationMinute",
        "ProcessElement",
        "c",
        "StateId",
        "STATEID_LASTEVENT_TIME",
        "lastEventTimeState",
        "StateId",
        "STATEID_LASTPROCESSING_TIME",
        "lastProcessingTimeState",
        "StateId",
        "STATEID_INTERVAL_COUNT",
        "queryCountState",
        "StateId",
        "STATEID_CATCHUP",
        "catchupState",
        "StateId",
        "STATEID_PRECATCHUP",
        "preCatchupState",
        "currentTime",
        "Instant",
        "now",
        "endEventTime",
        "currentTime",
        "minus",
        "durationGap",
        "lastQueryEventTime",
        "Optional",
        "ofNullable",
        "lastEventTimeState",
        "read",
        "orElse",
        "c",
        "sideInput",
        "startInstantView",
        "lastQueryEventTime",
        "plus",
        "durationInterval",
        "isAfter",
        "endEventTime",
        "catchup",
        "Optional",
        "ofNullable",
        "catchupState",
        "read",
        "orElse",
        "lastProcessingTime",
        "Optional",
        "ofNullable",
        "lastProcessingTimeState",
        "read",
        "orElse",
        "lastProcessingTime",
        "plus",
        "catchup",
        "durationCatchupInterval",
        "durationInterval",
        "isAfter",
        "currentTime",
        "allEventDuration",
        "lastQueryEventTime",
        "endEventTime",
        "queryEventTime",
        "allEventDuration",
        "getStandardMinutes",
        "maxDurationMinute",
        "queryEventTime",
        "lastQueryEventTime",
        "plus",
        "durationMax",
        "catchupState",
        "write",
        "preCatchupState",
        "write",
        "queryEventTime",
        "lastQueryEventTime",
        "plus",
        "allEventDuration",
        "preCatchup",
        "Optional",
        "ofNullable",
        "preCatchupState",
        "read",
        "orElse",
        "catchupState",
        "write",
        "preCatchup",
        "preCatchupState",
        "write",
        "queryCount",
        "Optional",
        "ofNullable",
        "queryCountState",
        "read",
        "orElse",
        "queryString",
        "createQuery",
        "template",
        "lastQueryEventTime",
        "queryEventTime",
        "queries",
        "queryString",
        "split",
        "SQL_SPLITTER",
        "queryIdx",
        "queryIdx",
        "queries",
        "length",
        "queryIdx",
        "checkpoint",
        "KV",
        "of",
        "queryIdx",
        "KV",
        "of",
        "queryCount",
        "queryEventTime",
        "c",
        "output",
        "KV",
        "of",
        "checkpoint",
        "queries",
        "queryIdx",
        "LOG",
        "info",
        "format",
        "lastQueryEventTime",
        "toString",
        "queryEventTime",
        "toString",
        "queryCount",
        "queryCount",
        "lastEventTimeState",
        "write",
        "queryEventTime",
        "lastProcessingTimeState",
        "write",
        "currentTime",
        "queryCountState",
        "write",
        "queryCount",
        "Override",
        "org",
        "joda",
        "time",
        "Duration",
        "standardDays",
        "INITIAL_COUNT",
        "STATEID_HEAD",
        "STATEID_VALUES",
        "startInstantView",
        "queryNum",
        "Setup",
        "queryNum",
        "query",
        "split",
        "SQL_SPLITTER",
        "length",
        "StateId",
        "STATEID_HEAD",
        "headState",
        "StateSpecs",
        "value",
        "MapCoder",
        "of",
        "BigEndianIntegerCoder",
        "of",
        "KvCoder",
        "of",
        "BigEndianLongCoder",
        "of",
        "InstantCoder",
        "of",
        "StateId",
        "STATEID_VALUES",
        "valuesState",
        "StateSpecs",
        "value",
        "MapCoder",
        "of",
        "BigEndianIntegerCoder",
        "of",
        "ListCoder",
        "of",
        "KvCoder",
        "of",
        "BigEndianLongCoder",
        "of",
        "InstantCoder",
        "of",
        "startInstantView",
        "startInstantView",
        "startInstantView",
        "ProcessElement",
        "c",
        "Element",
        "kv",
        "StateId",
        "STATEID_HEAD",
        "headState",
        "StateId",
        "STATEID_VALUES",
        "valuesState",
        "input",
        "kv",
        "getValue",
        "head",
        "Optional",
        "ofNullable",
        "headState",
        "read",
        "orElse",
        "values",
        "Optional",
        "ofNullable",
        "valuesState",
        "read",
        "orElse",
        "startInstant",
        "c",
        "sideInput",
        "startInstantView",
        "addInput",
        "head",
        "values",
        "input",
        "startInstant",
        "values",
        "put",
        "input",
        "getKey",
        "values",
        "get",
        "input",
        "getKey",
        "stream",
        "value",
        "head",
        "containsKey",
        "input",
        "getKey",
        "value",
        "getKey",
        "head",
        "get",
        "input",
        "getKey",
        "getKey",
        "value",
        "getKey",
        "INITIAL_COUNT",
        "distinct",
        "collect",
        "Collectors",
        "toList",
        "head",
        "values",
        "size",
        "head",
        "values",
        "size",
        "queryNum",
        "output",
        "startInstant",
        "output",
        "Collections",
        "min",
        "head",
        "values",
        "kv1",
        "kv2",
        "kv1",
        "getKey",
        "kv2",
        "getKey",
        "getValue",
        "headState",
        "write",
        "head",
        "valuesState",
        "write",
        "values",
        "head",
        "index",
        "head",
        "containsKey",
        "index",
        "head",
        "get",
        "index",
        "getKey",
        "INITIAL_COUNT",
        "key",
        "head",
        "values",
        "isHead",
        "head",
        "key",
        "Collections",
        "sort",
        "values",
        "get",
        "key",
        "e1",
        "e2",
        "e1",
        "getKey",
        "e2",
        "getKey",
        "headCount",
        "head",
        "get",
        "key",
        "getKey",
        "headTime",
        "head",
        "get",
        "key",
        "getValue",
        "value",
        "values",
        "get",
        "key",
        "value",
        "getKey",
        "headCount",
        "headCount",
        "value",
        "getKey",
        "headTime",
        "value",
        "getValue",
        "head",
        "put",
        "key",
        "KV",
        "of",
        "headCount",
        "headTime",
        "head",
        "values",
        "input",
        "startInstant",
        "head",
        "containsKey",
        "input",
        "getKey",
        "initialHead",
        "KV",
        "of",
        "INITIAL_COUNT",
        "startInstant",
        "head",
        "put",
        "input",
        "getKey",
        "initialHead",
        "input",
        "getValue",
        "getKey",
        "head",
        "get",
        "input",
        "getKey",
        "getKey",
        "isHead",
        "head",
        "input",
        "getKey",
        "INITIAL_COUNT",
        "input",
        "getValue",
        "getKey",
        "head",
        "put",
        "input",
        "getKey",
        "input",
        "getValue",
        "values",
        "merge",
        "input",
        "getKey",
        "Arrays",
        "asList",
        "input",
        "getValue",
        "ListUtils",
        "union",
        "updateHead",
        "input",
        "getKey",
        "head",
        "values",
        "checkpointDistribution",
        "Metrics",
        "distribution",
        "outputCheckpoint",
        "outputCheckpoint",
        "outputCheckpoint",
        "outputCheckpoint",
        "ProcessElement",
        "c",
        "executedMinEventTime",
        "c",
        "element",
        "executedMinEventTime",
        "getMillis",
        "LOG",
        "info",
        "checkpointDatetimeString",
        "executedMinEventTime",
        "toString",
        "StorageUtil",
        "writeString",
        "outputCheckpoint",
        "checkpointDatetimeString",
        "LOG",
        "info",
        "format",
        "checkpointDatetimeString",
        "checkpointLagMillis",
        "Instant",
        "now",
        "getMillis",
        "executedMinEventTime",
        "getMillis",
        "LOG",
        "info",
        "format",
        "checkpointLagMillis",
        "checkpointDistribution",
        "update",
        "checkpointLagMillis",
        "template",
        "templateConfig",
        "Configuration",
        "VERSION_2_3_30",
        "templateConfig",
        "setNumberFormat",
        "template",
        "templateConfig",
        "e",
        "e",
        "template",
        "lastTime",
        "eventTime",
        "context",
        "context",
        "put",
        "eventTime",
        "getMillis",
        "context",
        "put",
        "lastTime",
        "getMillis",
        "context",
        "put",
        "eventTime",
        "getMillis",
        "context",
        "put",
        "lastTime",
        "getMillis",
        "context",
        "put",
        "eventTime",
        "toString",
        "ISODateTimeFormat",
        "dateTime",
        "context",
        "put",
        "lastTime",
        "toString",
        "ISODateTimeFormat",
        "dateTime",
        "sw",
        "template",
        "process",
        "context",
        "sw",
        "sw",
        "toString",
        "e",
        "e",
        "e",
        "e"
    ],
    "literals": [
        "\"--SPLITTER--\"",
        "\"checkpoint\"",
        "\"Seed\"",
        "\"ReadCheckpointText\"",
        "\"ToSingleton\"",
        "\"AsView\"",
        "\"GlobalWindow\"",
        "\"WithFixedKey\"",
        "\"GenerateQuery\"",
        "\"Reshuffle\"",
        "\"MicrobatchQuery\"",
        "\"CheckpointCalcTrigger\"",
        "\"WithStateDummyKey\"",
        "\"CalcCheckpoint\"",
        "\"WriteWindow\"",
        "\"ExtractOne\"",
        "\"WriteCheckpoint\"",
        "\"startInstant\"",
        "\"ReadStartDatetime from state: %s\"",
        "\"ReadStartDatetime from startDatetime parameter: %s\"",
        "\"'useCheckpointAsStartDatetime' is 'True' but checkpoint object doesn't exist. Using 'startDatetime' instead\"",
        "\"'outputCheckpoint' is not specified\"",
        "\"outputCheckpoint object %s does not exist\"",
        "\"Start from checkpoint: %s\"",
        "\"Failed to parse checkpoint text %s,  cause %s\"",
        "\"Start from startDatetime: %s\"",
        "\"'startDatetimeString' is not specified\"",
        "\"Failed to parse startDatetime %s, cause %s\"",
        "\"intervalCount\"",
        "\"lastEventTime\"",
        "\"lastProcessingTime\"",
        "\"catchup\"",
        "\"preCatchup\"",
        "\"Query from: %s to: %s count: %d\"",
        "\"headState\"",
        "\"valuesState\"",
        "\"checkpoint\"",
        "\"lag_millis\"",
        "\"Query not yet executed\"",
        "\"Checkpoint: %s\"",
        "\"Checkpoint lag millis: %d\"",
        "\"computer\"",
        "\"config\"",
        "\"__EVENT_EPOCH_SECOND__\"",
        "\"__EVENT_EPOCH_SECOND_PRE__\"",
        "\"__EVENT_EPOCH_MILLISECOND__\"",
        "\"__EVENT_EPOCH_MILLISECOND_PRE__\"",
        "\"__EVENT_DATETIME_ISO__\"",
        "\"__EVENT_DATETIME_ISO_PRE__\""
    ],
    "variables": [
        "query",
        "startDatetime",
        "intervalSecond",
        "gapSecond",
        "maxDurationMinute",
        "outputCheckpoint",
        "catchupIntervalSecond",
        "useCheckpointAsStartDatetime",
        "queryExecuteDoFn",
        "intervalSecond",
        "gapSecond",
        "query",
        "maxDurationMinute",
        "catchupIntervalSecond",
        "startInstantView",
        "template",
        "durationGap",
        "durationInterval",
        "durationCatchupInterval",
        "durationMax",
        "queryEventTime",
        "startInstantView",
        "queryNum",
        "outputCheckpoint"
    ],
    "comments": [
        "Returns Instant object from outputCheckpoint or null if the storage object does not exist",
        "Skip if last queried event time(plus interval) is over current time(minus gap duration)",
        "Skip if pre-query's duration was over maxDurationMinute.",
        "Determine query duration",
        "To skip pre-pre-query's duration was over maxDurationMinute",
        "Generate Queries and output",
        "Update states"
    ],
    "docstrings": [],
    "functions": [
        "of",
        "Transform",
        "expand",
        "processElement",
        "Instant",
        "getStartDateTimeOrCheckpoint",
        "Instant",
        "getCheckpointDateTime",
        "Instant",
        "getStartDateTime",
        "QueryGenerateDoFn",
        "setup",
        "processElement",
        "getAllowedTimestampSkew",
        "setup",
        "MaxSequenceCalcDoFn",
        "processElement",
        "isHead",
        "updateHead",
        "addInput",
        "CheckpointSaveDoFn",
        "processElement",
        "Template",
        "createTemplate",
        "createQuery"
    ],
    "classes": [
        "MicrobatchQuery",
        "Transform",
        "ReadStartDatetimeDoFn",
        "QueryGenerateDoFn",
        "MaxSequenceCalcDoFn",
        "CheckpointSaveDoFn"
    ]
}