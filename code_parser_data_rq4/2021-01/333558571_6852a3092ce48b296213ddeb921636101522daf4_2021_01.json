{
    "identifiers": [
        "common",
        "math",
        "os",
        "secrets",
        "sys",
        "table",
        "time",
        "table_int",
        "n",
        "min_max_reqs",
        "time",
        "time",
        "i",
        "n",
        "tries_total",
        "last_reported_tries",
        "REPORT_FRACTION",
        "time",
        "time",
        "format",
        "i",
        "i",
        "last_reported_i",
        "this_print",
        "last_print",
        "tries_total",
        "last_reported_tries",
        "this_print",
        "last_print",
        "file",
        "sys",
        "stderr",
        "this_print",
        "i",
        "tries_total",
        "table",
        "sample_table_int",
        "table_int",
        "common",
        "try_sample_deal_4suits_hpc",
        "sample_4suits",
        "min_max_reqs",
        "tries_total",
        "tries",
        "sample_deal",
        "i",
        "FORMAT",
        "sample_deal",
        "FORMAT",
        "common",
        "deal_to_string",
        "sample_deal",
        "FORMAT",
        "AssertionError",
        "FORMAT",
        "num_samples",
        "min_max_reqs",
        "len",
        "min_max_reqs",
        "common",
        "tighten_mmr",
        "min_max_reqs",
        "tightened_reqs",
        "min_max_reqs",
        "format",
        "min_max_reqs",
        "tightened_reqs",
        "file",
        "sys",
        "stderr",
        "tightened_reqs",
        "min_max_reqs",
        "table",
        "compute_table_4suits",
        "table",
        "filter_table",
        "entries",
        "min_max_reqs",
        "min_max_reqs",
        "table",
        "filter_table",
        "entries",
        "min_max_reqs",
        "min_max_reqs",
        "table",
        "filter_table",
        "entries",
        "min_max_reqs",
        "min_max_reqs",
        "table",
        "filter_table",
        "entries",
        "min_max_reqs",
        "min_max_reqs",
        "table",
        "rescale_table_int",
        "entries",
        "print_samples",
        "table_int",
        "num_samples",
        "min_max_reqs",
        "len",
        "sys",
        "argv",
        "run_with",
        "DEFAULT_NUM_SAMPLES",
        "x",
        "x",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "run_with",
        "sys",
        "argv",
        "x",
        "x",
        "sys",
        "argv",
        "format",
        "sys",
        "argv",
        "file",
        "sys",
        "stderr",
        "file",
        "sys",
        "stderr",
        "file",
        "sys",
        "stderr",
        "format",
        "DEFAULT_NUM_SAMPLES",
        "file",
        "sys",
        "stderr",
        "exit"
    ],
    "literals": [
        "'str'",
        "'iter {}, about {}/s, about {} tries/s'",
        "'int'",
        "'str'",
        "'None'",
        "'Suit requirements tightened from {} to {}'",
        "'__main__'",
        "'USAGE: {} <MIN_MAX_REQS> [<NUM_SAMPLES>]'",
        "'MIN_MAX_REQS is 10 integers, 2 for each suit, and 2 for HPC, describing the minimum and maximum interesting amount.'",
        "'(Use \"0\" \"99\" for \"no restriction\", and \"3\" \"3\" for \"exactly 3\", etc.)'",
        "'NUM_SAMPLES is the number of samples to print. Defaults to {}'"
    ],
    "variables": [
        "FORMAT",
        "DEFAULT_NUM_SAMPLES",
        "REPORT_FRACTION",
        "last_print",
        "tries_total",
        "last_reported_tries",
        "i",
        "last_reported_i",
        "this_print",
        "last_print",
        "last_reported_i",
        "last_reported_tries",
        "sample_4suits",
        "sample_deal",
        "tries",
        "tightened_reqs",
        "min_max_reqs",
        "entries",
        "entries",
        "entries",
        "entries",
        "entries",
        "table_int"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "'None' or 'int' or 'str'",
        "Don't even need to rescale to 1 first!"
    ],
    "docstrings": [],
    "functions": [
        "print_samples",
        "run_with"
    ],
    "classes": []
}