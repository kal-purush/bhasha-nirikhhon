{
    "identifiers": [
        "com",
        "fly",
        "data",
        "sync",
        "dao",
        "impl",
        "com",
        "fly",
        "data",
        "sync",
        "dao",
        "ModelDao",
        "com",
        "fly",
        "data",
        "sync",
        "entity",
        "DataModel",
        "com",
        "fly",
        "data",
        "sync",
        "entity",
        "UpdateData",
        "org",
        "springframework",
        "jdbc",
        "core",
        "BeanPropertyRowMapper",
        "org",
        "springframework",
        "jdbc",
        "core",
        "JdbcTemplate",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "NamedParameterJdbcTemplate",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "SqlParameterSourceUtils",
        "org",
        "springframework",
        "stereotype",
        "Repository",
        "java",
        "util",
        "Repository",
        "jdbcTemplate",
        "namedJdbcTemplate",
        "jdbcTemplate",
        "namedParameterJdbcTemplate",
        "jdbcTemplate",
        "jdbcTemplate",
        "namedJdbcTemplate",
        "namedParameterJdbcTemplate",
        "Override",
        "dataList",
        "model",
        "insertSql",
        "namedJdbcTemplate",
        "batchUpdate",
        "insertSql",
        "SqlParameterSourceUtils",
        "createBatch",
        "dataList",
        "Override",
        "model",
        "queryAddSql",
        "addSql",
        "addList",
        "jdbcTemplate",
        "query",
        "queryAddSql",
        "model",
        "getRowMapper",
        "jdbcTemplate",
        "update",
        "addSql",
        "addList",
        "Override",
        "model",
        "Override",
        "model",
        "queryDeleteSql",
        "deleteSql",
        "queryDeleteSql",
        "parseSql",
        "queryDeleteSql",
        "model",
        "deleteSql",
        "parseSql",
        "deleteSql",
        "model",
        "deleteList",
        "jdbcTemplate",
        "queryForList",
        "queryDeleteSql",
        "model",
        "getModelClass",
        "jdbcTemplate",
        "update",
        "deleteSql",
        "deleteList",
        "Override",
        "model",
        "jdbcTemplate",
        "execute",
        "model",
        "getTempTable",
        "sql",
        "model",
        "sql",
        "replace",
        "model",
        "getTable",
        "replace",
        "model",
        "getTempTable",
        "replace",
        "model",
        "getId",
        "replace",
        "model",
        "getFieldNameListString",
        "replace",
        "model",
        "getFieldNameListStringWithPrefix",
        "replace",
        "model",
        "getFieldNameListStringWithPrefix"
    ],
    "literals": [
        "\"\"",
        "\"select ${a.fieldList} from ${tempTable} a \"",
        "\"left join ${table} b on a.${id} = b.${id} \"",
        "\"where b.${id} is null\"",
        "\"insert into ${table} (${a.fieldList}) \"",
        "\"select ${a.fieldList} from ${tempTable} a \"",
        "\"left join ${table} b on a.${id} = b.${id} \"",
        "\"where b.${id} is null\"",
        "\"select ${a.fieldList} from ${table} a \"",
        "\"left join ${tempTable} b on a.${id} = b.${id} \"",
        "\"where b.${id} is null\"",
        "\"delete a from ${table} a \"",
        "\"left join ${tempTable} b on a.${id} = b.${id} \"",
        "\"where b.${id} is null\"",
        "\"truncate \"",
        "\"${table}\"",
        "\"${tempTable}\"",
        "\"${id}\"",
        "\"${fieldList}\"",
        "\"${a.fieldList}\"",
        "\"a\"",
        "\"${b.fieldList}\"",
        "\"b\""
    ],
    "variables": [
        "jdbcTemplate",
        "namedJdbcTemplate"
    ],
    "comments": [
        "bå·®a"
    ],
    "docstrings": [
        "* @author guoxiang\n * @version 1.0.0\n * @since 2021/1/7"
    ],
    "functions": [
        "ModelDaoImpl",
        "loadToTemp",
        "add",
        "update",
        "truncateTemp",
        "parseSql"
    ],
    "classes": [
        "ModelDaoImpl"
    ]
}