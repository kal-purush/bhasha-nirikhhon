{
    "identifiers": [
        "Moq",
        "NUnit",
        "Framework",
        "PiLed",
        "Devices",
        "Config",
        "PiLed",
        "Devices",
        "Implementations",
        "PiLed",
        "Devices",
        "SPI",
        "PiLed",
        "Models",
        "Diagnostics",
        "PiLed",
        "Test",
        "Device",
        "Mock",
        "ISpiHandler",
        "SetUp",
        "_spiHandlerMock",
        "Mock",
        "ISpiHandler",
        "_config",
        "PixelConfig",
        "NumLeds",
        "FlushRate",
        "Test",
        "PixelBuffer",
        "buffer",
        "PixelIndices",
        "buffer",
        "Color",
        "PixelColor",
        "_spiHandlerMock",
        "Setup",
        "x",
        "FlushBytesToSpi",
        "expectedByteArray",
        "WS2801PixelDevice",
        "_config",
        "_spiHandlerMock",
        "device",
        "FlushColorToLeds",
        "buffer",
        "_spiHandlerMock",
        "VerifyAll",
        "Test",
        "_config",
        "NumLeds",
        "PixelBuffer",
        "buffer",
        "PixelIndices",
        "buffer",
        "Color",
        "PixelColor",
        "_spiHandlerMock",
        "Setup",
        "x",
        "FlushBytesToSpi",
        "expectedByteArray",
        "WS2801PixelDevice",
        "_config",
        "_spiHandlerMock",
        "device",
        "FlushColorToLeds",
        "buffer",
        "_spiHandlerMock",
        "VerifyAll",
        "Test",
        "_config",
        "NumLeds",
        "PixelBuffer",
        "buffer",
        "PixelIndices",
        "buffer",
        "Color",
        "PixelColor",
        "_spiHandlerMock",
        "Setup",
        "x",
        "FlushBytesToSpi",
        "expectedByteArray",
        "WS2801PixelDevice",
        "_config",
        "_spiHandlerMock",
        "device",
        "FlushColorToLeds",
        "buffer",
        "_spiHandlerMock",
        "VerifyAll",
        "Test",
        "_config",
        "NumLeds",
        "PixelBuffer",
        "bufferArray",
        "PixelBuffer",
        "bufferArray",
        "PixelIndices",
        "bufferArray",
        "Color",
        "PixelColor",
        "bufferArray",
        "PixelBuffer",
        "bufferArray",
        "PixelIndices",
        "bufferArray",
        "Color",
        "PixelColor",
        "_spiHandlerMock",
        "Setup",
        "x",
        "FlushBytesToSpi",
        "expectedByteArray",
        "WS2801PixelDevice",
        "_config",
        "_spiHandlerMock",
        "device",
        "FlushColorToLeds",
        "bufferArray",
        "_spiHandlerMock",
        "VerifyAll",
        "Test",
        "_config",
        "FlushRate",
        "PixelBuffer",
        "buffer",
        "PixelIndices",
        "buffer",
        "Color",
        "PixelColor",
        "_spiHandlerMock",
        "Setup",
        "x",
        "FlushBytesToSpi",
        "expectedByteArray",
        "WS2801PixelDevice",
        "_config",
        "_spiHandlerMock",
        "Stopwatch",
        "stopwatch",
        "Start",
        "device",
        "FlushColorToLeds",
        "buffer",
        "device",
        "FlushColorToLeds",
        "buffer",
        "device",
        "FlushColorToLeds",
        "buffer",
        "device",
        "FlushColorToLeds",
        "buffer",
        "stopwatch",
        "ElapsedMilliseconds",
        "Assert",
        "Greater",
        "elapsedMs",
        "Assert",
        "Less",
        "elapsedMs",
        "_spiHandlerMock",
        "VerifyAll"
    ],
    "literals": [],
    "variables": [
        "_spiHandlerMock",
        "PixelConfig",
        "_config",
        "buffer",
        "expectedByteArray",
        "device",
        "buffer",
        "expectedByteArray",
        "device",
        "buffer",
        "expectedByteArray",
        "device",
        "bufferArray",
        "expectedByteArray",
        "device",
        "buffer",
        "expectedByteArray",
        "device",
        "stopwatch",
        "elapsedMs"
    ],
    "comments": [
        "Since almost no logic exist in the individual implementations, we can just one of the implementing classes to test the abstraction"
    ],
    "docstrings": [],
    "functions": [
        "Setup",
        "WS2801ConvertBufferToBytes_Happy",
        "WS2801ConvertBuffersToColor_Happy",
        "WS2801ConvertBuffersToColor_InvalidPixelIndexDoesntBreak",
        "WS2801ConvertBuffersToColor_DifferentColorsInBuffer",
        "WS2801ConvertBuffersToColor_FlushRateHappy"
    ],
    "classes": [
        "WS2801PixelDeviceTests"
    ]
}