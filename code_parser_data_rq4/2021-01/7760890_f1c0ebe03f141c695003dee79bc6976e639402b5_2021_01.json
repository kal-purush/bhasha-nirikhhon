{
    "identifiers": [
        "slimeknights",
        "tconstruct",
        "library",
        "recipe",
        "com",
        "google",
        "gson",
        "JsonElement",
        "com",
        "google",
        "gson",
        "JsonObject",
        "com",
        "google",
        "gson",
        "JsonPrimitive",
        "com",
        "google",
        "gson",
        "JsonSyntaxException",
        "lombok",
        "RequiredArgsConstructor",
        "net",
        "minecraft",
        "item",
        "Item",
        "net",
        "minecraft",
        "item",
        "ItemStack",
        "net",
        "minecraft",
        "nbt",
        "CompoundNBT",
        "net",
        "minecraft",
        "network",
        "PacketBuffer",
        "net",
        "minecraft",
        "tags",
        "ITag",
        "net",
        "minecraft",
        "tags",
        "TagCollectionManager",
        "net",
        "minecraft",
        "util",
        "IItemProvider",
        "net",
        "minecraft",
        "util",
        "JSONUtils",
        "net",
        "minecraft",
        "util",
        "ResourceLocation",
        "net",
        "minecraftforge",
        "common",
        "crafting",
        "CraftingHelper",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Supplier",
        "Override",
        "stack",
        "stack",
        "item",
        "fromStack",
        "item",
        "tag",
        "count",
        "tag",
        "count",
        "element",
        "element",
        "isJsonPrimitive",
        "fromItem",
        "JSONUtils",
        "getItem",
        "element",
        "element",
        "isJsonObject",
        "json",
        "element",
        "getAsJsonObject",
        "json",
        "has",
        "name",
        "JSONUtils",
        "getString",
        "json",
        "tag",
        "TagCollectionManager",
        "getManager",
        "getItemTags",
        "get",
        "name",
        "tag",
        "name",
        "count",
        "JSONUtils",
        "getInt",
        "json",
        "fromTag",
        "tag",
        "count",
        "fromStack",
        "CraftingHelper",
        "getItemStack",
        "json",
        "buffer",
        "buffer",
        "writeItemStack",
        "get",
        "buffer",
        "fromStack",
        "buffer",
        "readItemStack",
        "RequiredArgsConstructor",
        "stack",
        "Override",
        "stack",
        "Override",
        "itemName",
        "Objects",
        "requireNonNull",
        "stack",
        "getItem",
        "getRegistryName",
        "toString",
        "count",
        "stack",
        "getCount",
        "stack",
        "hasTag",
        "stack",
        "getCount",
        "jsonResult",
        "jsonResult",
        "addProperty",
        "itemName",
        "count",
        "jsonResult",
        "addProperty",
        "count",
        "nbt",
        "stack",
        "getTag",
        "nbt",
        "jsonResult",
        "addProperty",
        "nbt",
        "toString",
        "jsonResult",
        "itemName",
        "RequiredArgsConstructor",
        "tag",
        "count",
        "Override",
        "TagPreference",
        "getItems",
        "getPreference",
        "tag",
        "item",
        "item",
        "count",
        "orElse",
        "ItemStack",
        "EMPTY",
        "Override",
        "json",
        "json",
        "addProperty",
        "TagCollectionManager",
        "getManager",
        "getItemTags",
        "getValidatedIdFromTag",
        "tag",
        "toString",
        "count",
        "json",
        "addProperty",
        "count",
        "json"
    ],
    "literals": [
        "\"item\"",
        "\"Invalid item output, must be a string or an object\"",
        "\"tag\"",
        "\"tag\"",
        "\"Unknown tag \"",
        "\" for item output\"",
        "\"count\"",
        "\"item\"",
        "\"count\"",
        "\"nbt\"",
        "\"tag\"",
        "\"count\""
    ],
    "variables": [
        "stack",
        "tag",
        "count"
    ],
    "comments": [
        "if it has a tag, parse as tag",
        "default: parse as item stack using Forge",
        "if the item has NBT or a count, write as object"
    ],
    "docstrings": [
        "* Class representing an item stack output. Supports both direct stacks and tag output, behaving like an ingredient used for output",
        "* Gets the item output of this recipe\n   * @return  Item output",
        "* Writes this output to JSON\n   * @return  Json element",
        "* Creates a new output for the given stack\n   * @param stack  Stack\n   * @return  Output",
        "* Creates a new output for the given item\n   * @param item  Item\n   * @return  Output",
        "* Creates a new output for the given tag\n   * @param tag  Tag\n   * @return Output",
        "* Reads an item output from JSON\n   * @param element  Json element\n   * @return  Read output",
        "* Writes this output to the packet buffer\n   * @param buffer  Packet buffer instance",
        "* Reads an item output from the packet buffer\n   * @param buffer  Buffer instance\n   * @return  Item output",
        "Class for an output that is just a stack",
        "Class for an output from a tag preference"
    ],
    "functions": [
        "ItemStack",
        "get",
        "JsonElement",
        "serialize",
        "ItemOutput",
        "fromStack",
        "ItemOutput",
        "fromItem",
        "ItemOutput",
        "fromTag",
        "ItemOutput",
        "fromJson",
        "write",
        "ItemOutput",
        "read",
        "ItemStack",
        "get",
        "JsonElement",
        "serialize",
        "ItemStack",
        "get",
        "JsonElement",
        "serialize"
    ],
    "classes": [
        "ItemOutput",
        "OfStack",
        "OfTagPreference"
    ]
}