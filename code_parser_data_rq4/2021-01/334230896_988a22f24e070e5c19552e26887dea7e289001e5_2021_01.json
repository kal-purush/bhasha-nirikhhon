{
    "identifiers": [
        "flask",
        "Flask",
        "jsonify",
        "request",
        "model",
        "expense",
        "Expense",
        "ExpenseSchema",
        "model",
        "income",
        "Income",
        "IncomeSchema",
        "model",
        "transaction_type",
        "TransactionType",
        "json",
        "requests",
        "Flask",
        "Income",
        "Income",
        "Expense",
        "Expense",
        "app",
        "route",
        "IncomeSchema",
        "many",
        "schema",
        "dump",
        "t",
        "t",
        "TransactionType",
        "INCOME",
        "transactions",
        "jsonify",
        "incomes",
        "app",
        "route",
        "app",
        "route",
        "request",
        "args",
        "get",
        "request",
        "args",
        "request",
        "args",
        "get",
        "request",
        "args",
        "get",
        "requests",
        "get",
        "tags",
        "json",
        "loads",
        "response",
        "text",
        "x",
        "y",
        "json_data",
        "items",
        "x",
        "response",
        "text",
        "app",
        "route",
        "methods",
        "ExpenseSchema",
        "load",
        "request",
        "get_json",
        "transactions",
        "append",
        "expense",
        "data",
        "app",
        "run"
    ],
    "literals": [
        "'Salary'",
        "'Dividends'",
        "'pizza'",
        "'Rock Concert'",
        "'/incomes'",
        "'/api/ping'",
        "\"{success: true}\"",
        "'/api/posts'",
        "'tags'",
        "'sortBy'",
        "'direction'",
        "\"https://api.hatchways.io/assessment/blog/posts\"",
        "'tag'",
        "'/expenses'",
        "'POST'",
        "\"\"",
        "\"__main__\""
    ],
    "variables": [
        "app",
        "transactions",
        "schema",
        "incomes",
        "tags",
        "sortBy",
        "direction",
        "response",
        "json_data",
        "expense"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n@app.route('/expenses')\ndef get_expenses():\n  schema = ExpenseSchema(many=True)\n  expenses = schema.dump(\n      filter(lambda t: t.type == TransactionType.EXPENSE, transactions)\n  )\n  print(\"hello test\", expenses)\n\n  return jsonify(expenses.data)\n\"\"\""
    ],
    "functions": [
        "get_incomes",
        "add_income",
        "add_expenses",
        "add_expense"
    ],
    "classes": []
}