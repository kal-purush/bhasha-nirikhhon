{
    "identifiers": [
        "argparse",
        "itertools",
        "zip_longest",
        "binascii",
        "hexlify",
        "iterable",
        "n",
        "fillvalue",
        "iter",
        "iterable",
        "n",
        "zip_longest",
        "args",
        "fillvalue",
        "fillvalue",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "file",
        "open",
        "outfilename",
        "open",
        "args",
        "file",
        "open",
        "args",
        "file",
        "f",
        "f",
        "read",
        "idx",
        "chunk",
        "grouper",
        "data",
        "outfile",
        "write",
        "idx",
        "join",
        "chunk"
    ],
    "literals": [
        "\"Collect data into fixed-length chunks or blocks\"",
        "\"Convert compiled gb assembly to mush attributes.\"",
        "'file'",
        "'specify input file'",
        "'.mush'",
        "'w'",
        "'rb'",
        "'rb'",
        "'&MEM-'",
        "' zei ='",
        "' '",
        "'\\n'"
    ],
    "variables": [
        "args",
        "parser",
        "args",
        "outfilename",
        "outfile",
        "f",
        "data"
    ],
    "comments": [
        "Attribute Export",
        "Samuel Volk, 2020",
        "",
        "Converts a binary file of compiled gameboy assembly into mush attributes.",
        "",
        "grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx\"",
        "print (list(grouper(data, 256, 0)))"
    ],
    "docstrings": [],
    "functions": [
        "grouper"
    ],
    "classes": []
}