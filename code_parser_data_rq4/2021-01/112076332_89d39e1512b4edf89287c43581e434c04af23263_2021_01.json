{
    "identifiers": [
        "Security",
        "Claims",
        "Threading",
        "Tasks",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "OrchardCore",
        "Users",
        "Services",
        "IUserClaimsProvider",
        "UserManager",
        "IUser",
        "UserManager",
        "IUser",
        "userManager",
        "_userManager",
        "userManager",
        "IUser",
        "user",
        "ClaimsIdentity",
        "claims",
        "user",
        "ArgumentNullException",
        "nameof",
        "user",
        "claims",
        "ArgumentNullException",
        "nameof",
        "claims",
        "_userManager",
        "GetEmailAsync",
        "user",
        "IsNullOrEmpty",
        "email",
        "claims",
        "AddClaim",
        "Claim",
        "email",
        "_userManager",
        "IsEmailConfirmedAsync",
        "user",
        "claims",
        "AddClaim",
        "Claim",
        "confirmed",
        "TrueString",
        "FalseString",
        "ClaimValueTypes"
    ],
    "literals": [
        "\"email\"",
        "\"email_verified\""
    ],
    "variables": [
        "_userManager",
        "email",
        "confirmed"
    ],
    "comments": [
        "Todo: In a future version the base implementation will generate the email claim if the user store is an 'IUserEmailStore',",
        "so we will not have to add it here, and everywhere we are using the hardcoded \"email\" claim type, we will have to use the",
        "new 'IdentityOptions.ClaimsIdentity.EmailClaimType' or at least its default value which is 'ClaimTypes.Email'."
    ],
    "docstrings": [],
    "functions": [
        "EmailClaimsProvider",
        "GenerateAsync"
    ],
    "classes": [
        "EmailClaimsProvider"
    ]
}