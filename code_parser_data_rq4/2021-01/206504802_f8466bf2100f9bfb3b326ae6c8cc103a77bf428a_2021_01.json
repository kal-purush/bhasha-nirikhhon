{
    "identifiers": [
        "Position",
        "Range",
        "TextEdit",
        "Diff",
        "diff_match_patch",
        "EOL",
        "EOL",
        "EditAction",
        "action",
        "start",
        "action",
        "start",
        "EditAction",
        "TextEdit",
        "EditAction",
        "TextEdit",
        "Range",
        "EditAction",
        "TextEdit",
        "Range",
        "Range",
        "before",
        "diffs",
        "startLine",
        "line",
        "before",
        "beforeLines",
        "_l",
        "i",
        "i",
        "line",
        "l",
        "character",
        "l",
        "NEW_LINE_LENGTH",
        "i",
        "diffs",
        "i",
        "curr",
        "diffs",
        "i",
        "curr",
        "diffs",
        "i",
        "curr",
        "character",
        "character",
        "line",
        "require",
        "diffs",
        "i",
        "dmp",
        "edit",
        "edit",
        "Edit",
        "EditAction",
        "start",
        "edit",
        "EditAction",
        "edit",
        "dmp",
        "edit",
        "edit",
        "Edit",
        "EditAction",
        "start",
        "edit",
        "EditAction",
        "edit",
        "EditAction",
        "line",
        "start",
        "character",
        "start",
        "edit",
        "diffs",
        "i",
        "dmp",
        "edit",
        "edits",
        "edit",
        "edit",
        "edit",
        "edits",
        "edit",
        "edits",
        "textline",
        "textline",
        "patches",
        "textline",
        "textPointer",
        "text",
        "text",
        "textPointer",
        "patchHeader",
        "m",
        "text",
        "textPointer",
        "diff_match_patch",
        "patches",
        "patch",
        "patch",
        "parseInt",
        "m",
        "m",
        "patch",
        "patch",
        "m",
        "patch",
        "patch",
        "patch",
        "parseInt",
        "m",
        "patch",
        "parseInt",
        "m",
        "m",
        "patch",
        "patch",
        "m",
        "patch",
        "patch",
        "patch",
        "parseInt",
        "m",
        "textPointer",
        "require",
        "textPointer",
        "text",
        "text",
        "textPointer",
        "line",
        "text",
        "textPointer",
        "ex",
        "sign",
        "patch",
        "dmp",
        "line",
        "sign",
        "patch",
        "dmp",
        "line",
        "sign",
        "patch",
        "dmp",
        "line",
        "sign",
        "sign",
        "sign",
        "line",
        "textPointer",
        "patches",
        "before",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "patch",
        "require",
        "dmp",
        "patch_fromText",
        "d",
        "patch",
        "patches",
        "patches",
        "patches",
        "p",
        "p",
        "diff",
        "diff",
        "EOL",
        "getTextEditsInternal",
        "before",
        "p",
        "p",
        "edit",
        "textEdits",
        "edit",
        "textEdits"
    ],
    "literals": [
        "'coc.nvim'",
        "'diff-match-patch'",
        "'os'",
        "string",
        "''",
        "''",
        "string",
        "string",
        "'\\n'",
        "'diff-match-patch'",
        "'diff-match-patch'",
        "'cannot format due to an internal error.'",
        "string",
        "Invalid patch string: ${text[textPointer]}",
        "''",
        "'0'",
        "''",
        "'0'",
        "'diff-match-patch'",
        "'diff-match-patch'",
        "string",
        "'Illegal escape in patch_fromText'",
        "'-'",
        "'+'",
        "' '",
        "'@'",
        "''",
        "Invalid patch mode '${sign}' in: ${line}",
        "string",
        "string",
        "'---'",
        "'@@'",
        "''",
        "'diff-match-patch'",
        "'diff-match-patch'",
        "'Unable to parse Patch string'"
    ],
    "variables": [
        "NEW_LINE_LENGTH",
        "line",
        "startLine",
        "character",
        "beforeLines",
        "edits",
        "edit",
        "i",
        "start",
        "curr",
        "dmp",
        "patches",
        "text",
        "textPointer",
        "patchHeader",
        "m",
        "patch",
        "dmp",
        "sign",
        "line",
        "dmp",
        "d",
        "patches",
        "textEdits"
    ],
    "comments": [
        "eslint-disable @typescript-eslint/no-var-requires",
        "Compute the line/character after the diff is applied.",
        "insert and replace edits are all relative to the original state",
        "of the document, so inserts should reset the current line/character",
        "position to the start.",
        "Start Modification by Don Jayamanne 24/06/2016 Support for CRLF",
        "End Modification",
        "var line = decodeURI(text[textPointer].substring(1))",
        "For some reason the patch generated by python files don't encode any characters",
        "And this patch module (code from Google) is expecting the text to be encoded!!",
        "Temporary solution, disable decoding",
        "Issue #188",
        "Malformed URI sequence.",
        "Deletion.",
        "Insertion.",
        "Minor equality.",
        "Start of next patch.",
        "Blank line?  Whatever.",
        "WTF?",
        "Strip the first two lines",
        "Remove the text added by unified_diff",
        "# Work around missing newline (http://bugs.python.org/issue2142).",
        "Add line feeds and build the text edits"
    ],
    "docstrings": [
        "* Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input."
    ],
    "functions": [
        "apply",
        "getTextEditsInternal",
        "patch_fromText",
        "getTextEditsFromPatch"
    ],
    "classes": [
        "Patch",
        "Edit"
    ]
}