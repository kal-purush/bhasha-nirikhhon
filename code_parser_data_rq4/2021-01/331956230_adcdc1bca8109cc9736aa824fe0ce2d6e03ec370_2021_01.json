{
    "identifiers": [
        "socket",
        "cv2",
        "numpy",
        "time",
        "sys",
        "json",
        "threading",
        "frame_size",
        "fps",
        "encode_rate",
        "cv2",
        "VideoCapture",
        "round",
        "time",
        "time",
        "cv2",
        "IMWRITE_JPEG_QUALITY",
        "encode_rate",
        "i",
        "itr",
        "capture",
        "read",
        "cv2",
        "imencode",
        "frame",
        "encode_param",
        "numpy",
        "array",
        "imgencode",
        "frame_size_tot",
        "data",
        "size",
        "frame_size_tot",
        "itr",
        "round",
        "time",
        "time",
        "start_time",
        "itr",
        "time_interval",
        "frame_size",
        "fps",
        "isReady",
        "is_set",
        "isReady",
        "wait",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "sock",
        "connect",
        "address",
        "socket",
        "error",
        "msg",
        "msg",
        "sys",
        "exit",
        "address",
        "capture",
        "read",
        "round",
        "time",
        "time",
        "ret",
        "needAdjust",
        "is_set",
        "encode_rate",
        "needAdjust",
        "clear",
        "cv2",
        "imencode",
        "frame",
        "encode_param",
        "numpy",
        "array",
        "imgencode",
        "reset_flag",
        "data",
        "size",
        "data",
        "tostring",
        "round",
        "time",
        "time",
        "len",
        "string_data",
        "time_stamp",
        "current_time",
        "json",
        "dumps",
        "body",
        "sock",
        "send",
        "encode",
        "len",
        "body",
        "ljust",
        "sock",
        "send",
        "body",
        "encode",
        "sock",
        "send",
        "string_data",
        "capture",
        "read",
        "round",
        "time",
        "time",
        "sock",
        "close",
        "encode_rate",
        "frame_size",
        "fps",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "s",
        "bind",
        "address",
        "s",
        "listen",
        "sock",
        "count",
        "count",
        "sock",
        "recv",
        "count",
        "newbuf",
        "buf",
        "newbuf",
        "count",
        "len",
        "newbuf",
        "buf",
        "s",
        "accept",
        "addr",
        "isReady",
        "recvall",
        "conn",
        "rstrip",
        "json",
        "loads",
        "recvall",
        "conn",
        "length",
        "response",
        "fps",
        "frame_size",
        "average_bandwidth",
        "expected",
        "down_count",
        "down_count",
        "encode_rate",
        "needAdjust",
        "average_bandwidth",
        "expected",
        "encode_rate",
        "up_count",
        "up_count",
        "min",
        "encode_rate",
        "needAdjust",
        "threading",
        "Event",
        "threading",
        "Event",
        "threading",
        "target",
        "send_video",
        "threading",
        "target",
        "receive_message",
        "t1",
        "start",
        "t2",
        "start"
    ],
    "literals": [
        "'localhost'",
        "'.jpg'",
        "\"avg frame size is: \"",
        "\"KB, fps is: \"",
        "\"Initialization finished, you can start server now.\"",
        "\"sending side: built connection with \"",
        "'.jpg'",
        "\"length\"",
        "\"event_time\"",
        "\"current_time\"",
        "'utf-8'",
        "'0.0.0.0'",
        "b''",
        "'receiving side: accepted connection from '",
        "\"bandwidth\"",
        "\"bandwidth is not enough, performing downgrade\"",
        "\"bandwidth is enough, performing upgrade\"",
        "'__main__'",
        "\"Please don't start server until the initialization finishes!\""
    ],
    "variables": [
        "address",
        "capture",
        "frame_size_tot",
        "start_time",
        "itr",
        "encode_param",
        "ret",
        "frame",
        "result",
        "imgencode",
        "data",
        "frame_size",
        "time_interval",
        "fps",
        "sock",
        "ret",
        "frame",
        "time_stamp",
        "reset_flag",
        "encode_param",
        "reset_flag",
        "result",
        "imgencode",
        "data",
        "frame_size",
        "string_data",
        "current_time",
        "body",
        "body",
        "ret",
        "frame",
        "time_stamp",
        "address",
        "s",
        "buf",
        "newbuf",
        "conn",
        "addr",
        "up_count",
        "down_count",
        "length",
        "response",
        "average_bandwidth",
        "expected",
        "encode_rate",
        "fps",
        "frame_size",
        "encode_rate",
        "isReady",
        "needAdjust",
        "t1",
        "t2"
    ],
    "comments": [
        "estimate frame_size and fps",
        "iteration times set to 100, you can change it as you want",
        "jpeg, 'encode_rate' for quality, higher the number, higher the quality(0-100)",
        "unit: KB",
        "waiting for the other thread",
        "socket.SOCK_STREAM：for TCP",
        "ret == 1 for success, 0 for failure",
        "record event time",
        "time.sleep(0.01)  # you can put it to sleep in each loop to release the pressure of server",
        "need to adjust image quality to adapt to bandwidth",
        "built mat",
        "update frame size",
        "'current_time': enable server to calculate bandwidth",
        "then read next frame",
        "if cv2.waitKey(10) == 27:",
        "break",
        "socket.SOCK_STREAM：for TCP",
        "param: max connection number",
        "buf type: byte",
        "set event to inform the other thread",
        "compare current bandwidth and expected bandwidth"
    ],
    "docstrings": [],
    "functions": [
        "send_video",
        "receive_message",
        "recvall"
    ],
    "classes": []
}