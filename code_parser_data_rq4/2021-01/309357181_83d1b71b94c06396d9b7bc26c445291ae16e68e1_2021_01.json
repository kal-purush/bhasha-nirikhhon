{
    "identifiers": [
        "threading",
        "tqdm",
        "tqdm",
        "time",
        "sleep",
        "models_code",
        "gradcam",
        "GradCAM",
        "utils",
        "config",
        "utils",
        "handle_modes",
        "process_path",
        "tensorflow",
        "tf",
        "os",
        "numpy",
        "np",
        "imutils",
        "random",
        "cv2",
        "heatmap",
        "filename",
        "cati",
        "results_path",
        "smali_data",
        "os",
        "path",
        "exists",
        "cati",
        "filename",
        "cati",
        "filename",
        "exit",
        "cv2",
        "imread",
        "cati",
        "filename",
        "heatmap",
        "reshape",
        "heatmap",
        "shape",
        "heatmap",
        "shape",
        "astype",
        "cv2",
        "resize",
        "cleaned_heatmap",
        "cati_img",
        "shape",
        "cati_img",
        "shape",
        "y",
        "cleaned_heatmap",
        "shape",
        "x",
        "cleaned_heatmap",
        "shape",
        "cleaned_heatmap",
        "x",
        "y",
        "relevant_pixels",
        "append",
        "enumerate_pixel",
        "x",
        "y",
        "cleaned_heatmap",
        "open",
        "cati",
        "filename",
        "legend",
        "line",
        "legend",
        "line",
        "strip",
        "replace",
        "replace",
        "strm",
        "split",
        "enumerate_pixel",
        "strm",
        "split",
        "split",
        "strm",
        "split",
        "split",
        "cati_img",
        "start_zero",
        "mapped_smali",
        "append",
        "end",
        "smali_class",
        "rp",
        "relevant_pixels",
        "ms",
        "mapped_smali",
        "rp",
        "ms",
        "ms",
        "smali_to_look_into",
        "ms",
        "smali_to_look_into",
        "append",
        "ms",
        "ms",
        "split",
        "smali_name",
        "smali_data",
        "ms",
        "smali_data",
        "smali_name",
        "smali_data",
        "smali_name",
        "append",
        "ms",
        "open",
        "results_path",
        "filename",
        "to_analyse",
        "stli",
        "smali_to_look_into",
        "to_analyse",
        "write",
        "stli",
        "pic",
        "threshold",
        "threshold",
        "threshold",
        "threshold",
        "exit",
        "np",
        "zeros",
        "shape",
        "pic",
        "shape",
        "pic",
        "shape",
        "dtype",
        "x",
        "pic",
        "shape",
        "y",
        "pic",
        "shape",
        "pic",
        "x",
        "y",
        "pix",
        "threshold",
        "pix",
        "pic_new",
        "x",
        "y",
        "pic",
        "start_zero",
        "start_zero",
        "y",
        "pic",
        "shape",
        "x",
        "y",
        "pic",
        "shape",
        "x",
        "arguments",
        "model",
        "class_info",
        "cati",
        "GradCAM",
        "model",
        "cati",
        "arguments",
        "dataset",
        "split",
        "config",
        "main_path",
        "cati_db",
        "os",
        "path",
        "isdir",
        "cati_path_base",
        "cati_path_base",
        "exit",
        "img_class",
        "class_info",
        "config",
        "main_path",
        "arguments",
        "dataset",
        "img_class",
        "cati",
        "cati_path_base",
        "img_class",
        "threading",
        "Lock",
        "i",
        "i",
        "os",
        "walk",
        "label_path",
        "random",
        "sample",
        "files",
        "num_samples",
        "os",
        "path",
        "isdir",
        "config",
        "main_path",
        "img_class",
        "os",
        "mkdir",
        "config",
        "main_path",
        "img_class",
        "os",
        "mkdir",
        "config",
        "main_path",
        "img_class",
        "os",
        "mkdir",
        "config",
        "main_path",
        "img_class",
        "os",
        "mkdir",
        "config",
        "main_path",
        "img_class",
        "os",
        "mkdir",
        "config",
        "main_path",
        "img_class",
        "config",
        "main_path",
        "img_class",
        "i",
        "tqdm",
        "num_samples",
        "label_path",
        "imgs",
        "i",
        "imgs",
        "i",
        "split",
        "img_filename",
        "img_filename",
        "split",
        "cv2",
        "imread",
        "complete_path",
        "process_path",
        "complete_path",
        "tf",
        "expand_dims",
        "image",
        "model",
        "predict",
        "image",
        "np",
        "argmax",
        "preds",
        "class_info",
        "i",
        "img_class",
        "class_info",
        "i",
        "img_class",
        "format",
        "correctness",
        "preds",
        "i",
        "cam",
        "compute_heatmap",
        "image",
        "i",
        "cv2",
        "resize",
        "heatmap",
        "copy",
        "orig",
        "shape",
        "orig",
        "shape",
        "cam",
        "overlay_heatmap",
        "cv2",
        "resize",
        "heatmap",
        "orig",
        "shape",
        "orig",
        "shape",
        "orig",
        "alpha",
        "imutils",
        "resize",
        "orig",
        "width",
        "imutils",
        "resize",
        "heatmap",
        "width",
        "imutils",
        "resize",
        "output",
        "width",
        "np",
        "zeros",
        "orig",
        "shape",
        "np",
        "uint8",
        "cv2",
        "vconcat",
        "black",
        "orig",
        "cv2",
        "vconcat",
        "black",
        "heatmap",
        "cv2",
        "vconcat",
        "black",
        "output",
        "cv2",
        "putText",
        "orig",
        "label",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "cv2",
        "putText",
        "heatmap",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "cv2",
        "putText",
        "output",
        "cv2",
        "FONT_HERSHEY_SIMPLEX",
        "np",
        "hstack",
        "orig",
        "heatmap",
        "output",
        "cv2",
        "imwrite",
        "result_images_path",
        "img_filename",
        "complete",
        "cv2",
        "imwrite",
        "result_images_path",
        "correctness",
        "correctness",
        "img_filename",
        "heatmap_origin_size",
        "clean_heatmap",
        "heatmap_origin_size",
        "cv2",
        "imwrite",
        "result_images_path",
        "correctness",
        "correctness",
        "img_filename",
        "cleaned_heatmap",
        "cati",
        "threading",
        "target",
        "from_pic_to_code",
        "args",
        "cleaned_heatmap",
        "img_filename",
        "cati_path",
        "result_images_path",
        "smali_code",
        "threading",
        "activeCount",
        "sleep",
        "new_thread",
        "start",
        "threads",
        "append",
        "new_thread",
        "cati",
        "t",
        "threads",
        "t",
        "is_alive",
        "t",
        "join",
        "e",
        "smali_code",
        "smali_code_list",
        "append",
        "smali_code",
        "e",
        "e",
        "smali_code",
        "e",
        "smali_code_list",
        "sort",
        "key",
        "x",
        "x",
        "reverse",
        "open",
        "result_images_path",
        "to_analyse",
        "i",
        "to_analyse",
        "write",
        "smali_code_list",
        "i",
        "smali_code_list",
        "i",
        "smali_code_list",
        "i"
    ],
    "literals": [
        "f\"{cati}/{filename}.png\"",
        "f\"ERROR, file {cati}/{filename}.png does not exist...\"",
        "f\"{cati}/{filename}.png\"",
        "'float32'",
        "f\"{cati}/{filename}_legend.txt\"",
        "\"r\"",
        "\"[\"",
        "\"\"",
        "\"]\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\",\"",
        "\" \"",
        "\",\"",
        "\"google/android\"",
        "\"/\"",
        "'occ'",
        "'paths'",
        "'occ'",
        "'paths'",
        "f\"/smali/{filename}.txt\"",
        "\"w\"",
        "\"\\n\"",
        "f\"ERROR clean_heatmap: threashold {threshold} should be between 0 and 255, exiting...\"",
        "\"_\"",
        "f\"/cati/RESULTS/{cati_db}/\"",
        "f\"ERROR! cati db with smali class info not found in {cati_path_base}, exiting...\"",
        "\"class_names\"",
        "\"/test/\"",
        "'results/images/'",
        "'results/images/'",
        "'results/images/'",
        "'/heatmap'",
        "'results/images/'",
        "'/complete'",
        "'results/images/'",
        "'/highlights_heatmap'",
        "'results/images/'",
        "'/smali'",
        "'results/images/'",
        "\"/\"",
        "\".\"",
        "\"_\"",
        "'_'",
        "f\"WRONG{class_info['class_names'][int(i)]}\"",
        "'class_names'",
        "\"class_names\"",
        "f\"{img_class}\"",
        "\"{} - {:.1f}%\"",
        "\"Heatmap\"",
        "\"Overlay with Heatmap\"",
        "'/complete/complete_'",
        "'.png'",
        "f'/heatmap/heatmap{correctness if \"WRONG\" in correctness else \"\"}_'",
        "\"WRONG\"",
        "\"\"",
        "'.png'",
        "f'/highlights_heatmap/heatmap{correctness if \"WRONG\" in correctness else \"\"}_'",
        "\"WRONG\"",
        "\"\"",
        "'.png'",
        "'occ'",
        "'paths'",
        "\"/SMALI_CLASS.txt\"",
        "\"w\"",
        "f\"{smali_code_list[i][1]} {smali_code_list[i][0]} {smali_code_list[i][2]}\\n\""
    ],
    "variables": [
        "cati_img",
        "cleaned_heatmap",
        "cleaned_heatmap",
        "relevant_pixels",
        "mapped_smali",
        "strm",
        "smali_class",
        "end",
        "smali_to_look_into",
        "smali_name",
        "smali_data",
        "smali_name",
        "pic_new",
        "pix",
        "pic_new",
        "x",
        "y",
        "cam",
        "cati_db",
        "cati_path_base",
        "label_path",
        "cati_path",
        "smali_code",
        "threads",
        "files",
        "num_samples",
        "imgs",
        "result_images_path",
        "complete_path",
        "img_filename",
        "img_filename",
        "orig",
        "image",
        "_",
        "image",
        "preds",
        "i",
        "correctness",
        "label",
        "heatmap",
        "heatmap_origin_size",
        "heatmap",
        "output",
        "orig",
        "heatmap",
        "output",
        "black",
        "black",
        "orig",
        "heatmap",
        "output",
        "complete",
        "cleaned_heatmap",
        "new_thread",
        "smali_code_list"
    ],
    "comments": [
        "convert image to float, necessary before resizing it",
        "start = enumerate_pixel(int(strm.split(\" \")[1].split(\",\")[0]),",
        "int(strm.split(\" \")[1].split(\",\")[1]),",
        "cati_img, start_zero=False)",
        "print(f\"{smali_class} {start} {end}\")",
        "initialize the gradient class activation map",
        "hardcoded path to cati folder with decompiled results",
        "TODO: improve checks on path",
        "ASSUMING that dataset path is DATASETS/name_date_timestamp/",
        "Adding also a '/' to ensure path correctness",
        "Initialize data struct for analyze heatmaps and decompiled smali",
        "Get all file paths in 'label_path' for the class 'label'",
        "Randomly extract 'num_sample' from the file paths, in files there is a [[files_paths1, filepath2,...]]",
        "create folder in /results/images for this class",
        "CHECK if varieties info are stored in filename",
        "load the original image from disk (in OpenCV format) and then",
        "resize the image to its target dimensions",
        "resized = cv2.resize(orig, (arguments.image_size, arguments.image_size))",
        "use the network to make predictions on the input imag and find",
        "the class label index with the largest corresponding probability",
        "decode the ImageNet predictions to obtain the human-readable label",
        "decoded = imagenet_utils.decode_predictions(preds)",
        "(imagenetID, label, prob) = decoded[0][0]",
        "label = \"{}: {:.2f}%\".format(label, prob * 100)",
        "print(\"[INFO] {}\".format(label))",
        "build the heatmap",
        "resize heatmap to size of origin file and copy to stored later",
        "at this point the heatmap contains integer value scaled [0, 255]",
        "resize the heatmap to the original input image dimensions and overlay heatmap on top of the image",
        "resize images",
        "create a black background to include text",
        "concatenate vertically to the image",
        "write some text over each image",
        "display the original image and resulting heatmap and output image",
        "complete = imutils.resize(complete, width=700)",
        "semi_complete = np.hstack([orig, output])",
        "semi_complete = imutils.resize(semi_complete, width=350)",
        "cv2.imwrite(result_images_path + '/semi_' + img_filename.split('_')[2] + '.png', semi_complete)",
        "store heatmaps",
        "clean and store heatmaps",
        "lock, heatmap, filename, cati, results_path, smali_data",
        "convert dict to list -> the dict was faster for threading search/insert on shared struct, but now we prefer",
        "list to order the element by occurencies"
    ],
    "docstrings": [],
    "functions": [
        "from_pic_to_code",
        "clean_heatmap",
        "enumerate_pixel",
        "apply_gradcam"
    ],
    "classes": []
}