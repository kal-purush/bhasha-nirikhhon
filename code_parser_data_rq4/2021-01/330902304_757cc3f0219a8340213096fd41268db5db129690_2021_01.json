{
    "identifiers": [
        "unittest",
        "random",
        "text_processing2",
        "tp",
        "unittest",
        "TestCase",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "digits_to_words",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred",
        "tp",
        "to_camel_case",
        "test_str",
        "assertEqual",
        "pred"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"Zip Code: 19104\"",
        "\"one nine one zero four\"",
        "\"Pi is 3.1415...\"",
        "\"three one four one five\"",
        "\"There are 3 jellies.\"",
        "\"three\"",
        "\"Your room number is 205.\"",
        "\"two zero five\"",
        "\"1588-1588\"",
        "\"one five eight eight one five eight eight\"",
        "\"My number: 010-1234-5678\"",
        "\"zero one zero one two three four five six seven eight\"",
        "\"No digits\"",
        "\"\"",
        "\"No digits here too!?$%\"",
        "\"\"",
        "\"to_camel_case\"",
        "\"toCamelCase\"",
        "\"__EXAMPLE__NAME__\"",
        "\"exampleName\"",
        "\"alreadyCamel\"",
        "\"alreadyCamel\"",
        "\"_______\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"not_Camel_Yet\"",
        "\"notCamelYet\"",
        "\"NOT_CAMEL_Yet\"",
        "\"notCamelYet\"",
        "\"abc_def_ghi\"",
        "\"abcDefGhi\"",
        "\"     \"",
        "\"     \"",
        "\".....\"",
        "\".....\""
    ],
    "variables": [
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred",
        "test_str",
        "pred"
    ],
    "comments": [
        "-*- coding: utf8 -*-"
    ],
    "docstrings": [],
    "functions": [
        "test_digits_to_words",
        "test_to_camel_case"
    ],
    "classes": [
        "TestTextProcessing"
    ]
}