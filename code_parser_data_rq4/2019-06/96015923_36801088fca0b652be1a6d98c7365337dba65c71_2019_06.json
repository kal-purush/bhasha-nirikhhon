{
    "identifiers": [
        "os",
        "shutil",
        "subprocess",
        "snapcraft",
        "snapcraft",
        "errors",
        "sources",
        "source",
        "checksum",
        "source",
        "checksum",
        "source",
        "checksum",
        "snapcraft",
        "errors",
        "SnapcraftError",
        "architecture",
        "architecture",
        "architecture",
        "snapcraft",
        "BasePlugin",
        "classmethod",
        "cls",
        "schema",
        "schema",
        "schema",
        "schema",
        "schema",
        "classmethod",
        "cls",
        "classmethod",
        "cls",
        "name",
        "options",
        "project",
        "name",
        "options",
        "project",
        "project",
        "info",
        "errors",
        "PluginBaseError",
        "part_name",
        "name",
        "project",
        "info",
        "os",
        "path",
        "join",
        "partdir",
        "os",
        "path",
        "join",
        "partdir",
        "sources",
        "Script",
        "_MINICONDA_URL",
        "get",
        "options",
        "conda_miniconda_version",
        "miniconda_url",
        "_MINICONDA_UNKNOWN_VERSION_URL",
        "miniconda_url",
        "format",
        "options",
        "conda_miniconda_version",
        "sources",
        "Script",
        "source",
        "miniconda_url",
        "source_dir",
        "partdir",
        "source_checksum",
        "miniconda_url",
        "project",
        "deb_arch",
        "MinicondaBadArchitectureError",
        "architecture",
        "project_arch",
        "_get_miniconda_source",
        "miniconda_source_script",
        "download",
        "filepath",
        "_miniconda_script",
        "os",
        "chmod",
        "_miniconda_script",
        "mode",
        "clean_pull",
        "os",
        "path",
        "exists",
        "_conda_home",
        "shutil",
        "rmtree",
        "_conda_home",
        "build",
        "os",
        "path",
        "join",
        "_conda_home",
        "os",
        "path",
        "exists",
        "conda_cmd",
        "subprocess",
        "check_call",
        "_miniconda_script",
        "_conda_home",
        "conda_cmd",
        "installdir",
        "options",
        "conda_python_version",
        "deploy_cmd",
        "append",
        "format",
        "options",
        "conda_python_version",
        "os",
        "path",
        "join",
        "os",
        "path",
        "sep",
        "project",
        "info",
        "name",
        "subprocess",
        "check_call",
        "deploy_cmd",
        "options",
        "conda_packages",
        "env",
        "CONDA_TARGET_PREFIX_OVERRIDE",
        "conda_target_prefix"
    ],
    "literals": [
        "\"4.6.14\"",
        "\"https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh\"",
        "\"md5/718259965f234088d785cad1fbd7de03\"",
        "\"latest\"",
        "\"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\"",
        "\"https://repo.anaconda.com/miniconda/Miniconda3-{}-Linux-x86_64.sh\"",
        "\"Failed to fetch miniconda: \"",
        "\"The architecture {architecture!r} is not supported.\"",
        "\"properties\"",
        "\"conda-packages\"",
        "\"type\"",
        "\"array\"",
        "\"minitems\"",
        "\"uniqueItems\"",
        "\"items\"",
        "\"type\"",
        "\"string\"",
        "\"default\"",
        "\"properties\"",
        "\"conda-python-version\"",
        "\"type\"",
        "\"string\"",
        "\"default\"",
        "\"\"",
        "\"properties\"",
        "\"conda-miniconda-version\"",
        "\"type\"",
        "\"string\"",
        "\"default\"",
        "\"latest\"",
        "\"required\"",
        "\"conda-packages\"",
        "\"conda-miniconda-version\"",
        "\"conda-python-version\"",
        "\"conda-packages\"",
        "\"core\"",
        "\"core16\"",
        "\"core18\"",
        "\"miniconda\"",
        "\"miniconda.sh\"",
        "\"source\"",
        "\"source\"",
        "\"source\"",
        "\"checksum\"",
        "\"amd64\"",
        "\"bin\"",
        "\"conda\"",
        "\"-bfp\"",
        "\"create\"",
        "\"--prefix\"",
        "\"--yes\"",
        "\"python={}\"",
        "\"snap\"",
        "\"current\""
    ],
    "variables": [
        "_MINICONDA_URL",
        "_MINICONDA_UNKNOWN_VERSION_URL",
        "fmt",
        "schema",
        "schema",
        "_conda_home",
        "_miniconda_script",
        "miniconda_url",
        "miniconda_url",
        "miniconda_url",
        "miniconda_source_script",
        "conda_cmd",
        "deploy_cmd",
        "conda_target_prefix"
    ],
    "comments": [
        "-*- Mode:Python; indent-tabs-mode:nil; tab-width:4 -*-",
        "",
        "Copyright (C) 2019 Canonical Ltd",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License version 3 as",
        "published by the Free Software Foundation.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "Supported versions https://repo.anaconda.com/miniconda/",
        "Inform Snapcraft of the properties associated with pulling. If these",
        "change in the YAML Snapcraft will consider the pull step dirty.",
        "Inform Snapcraft of the properties associated with building. If these",
        "change in the YAML Snapcraft will consider the pull step dirty.",
        "Remove conda_home (if present)",
        "-b: batch mode (agrees to license and does not inject into bash profile)",
        "-f: force",
        "-p: prefix",
        "conda needs to rewrite the prefixes in the python shebangs and binaries"
    ],
    "docstrings": [
        "\"\"\"Create snaps from conda packages.\n\nThis plugin uses the common plugin keywords as well as those for 'sources'.\nFor more information check the 'plugins' topic for the former and the\n'sources' topic for the latter.\n\nIn the cases where dumping the content needs some mangling or organizing\none would take advantage of the core functionalities available to plugins\nsuch as: `filesets`, `stage`, `snap` and `organize`.\n\"\"\""
    ],
    "functions": [
        "schema",
        "get_pull_properties",
        "get_build_properties",
        "_get_miniconda_source",
        "pull",
        "clean_pull",
        "build"
    ],
    "classes": [
        "MinicondaBadArchitectureError",
        "CondaPlugin"
    ]
}