{
    "identifiers": [
        "IO",
        "Linq",
        "ICSharpCode",
        "SharpZipLib",
        "Zip",
        "Nuke",
        "Common",
        "Nuke",
        "Common",
        "BuildServers",
        "Nuke",
        "Common",
        "Execution",
        "Nuke",
        "Common",
        "Git",
        "Nuke",
        "Common",
        "IO",
        "Nuke",
        "Common",
        "ProjectModel",
        "Nuke",
        "Common",
        "Tooling",
        "Nuke",
        "Common",
        "Tools",
        "DotNet",
        "Nuke",
        "Common",
        "Tools",
        "GitVersion",
        "Nuke",
        "Common",
        "Tools",
        "NuGet",
        "Nuke",
        "Common",
        "Utilities",
        "Collections",
        "Octokit",
        "Nuke",
        "Common",
        "EnvironmentInfo",
        "Nuke",
        "Common",
        "IO",
        "FileSystemTasks",
        "Nuke",
        "Common",
        "IO",
        "PathConstruction",
        "Nuke",
        "Common",
        "Tools",
        "DotNet",
        "DotNetTasks",
        "FileMode",
        "IO",
        "FileMode",
        "ZipFile",
        "IO",
        "Compression",
        "ZipFile",
        "CheckBuildProjectConfigurations",
        "UnsetVisualStudioEnvironmentVariables",
        "NukeBuild",
        "StackType",
        "Windows",
        "Linux",
        "Execute",
        "Build",
        "x",
        "Publish",
        "BuildpackProjectName",
        "Runtime",
        "GitVersion",
        "MajorMinorPatch",
        "Parameter",
        "IsLocalBuild",
        "Configuration",
        "Debug",
        "Configuration",
        "Release",
        "Parameter",
        "StackType",
        "Windows",
        "Parameter",
        "StackType",
        "Windows",
        "StackType",
        "Windows",
        "Solution",
        "GitRepository",
        "GitVersion",
        "RootDirectory",
        "RootDirectory",
        "RootDirectory",
        "_",
        "Description",
        "Before",
        "Restore",
        "Executes",
        "SourceDirectory",
        "GlobDirectories",
        "ForEach",
        "DeleteDirectory",
        "TestsDirectory",
        "GlobDirectories",
        "ForEach",
        "DeleteDirectory",
        "EnsureCleanDirectory",
        "ArtifactsDirectory",
        "_",
        "Description",
        "Executes",
        "DotNetRestore",
        "s",
        "SetProjectFile",
        "Solution",
        "SetRuntime",
        "Runtime",
        "_",
        "Description",
        "DependsOn",
        "Restore",
        "Executes",
        "Logger",
        "Info",
        "DotNetBuild",
        "s",
        "SetProjectFile",
        "Solution",
        "SetConfiguration",
        "Configuration",
        "SetFramework",
        "Framework",
        "SetRuntime",
        "Runtime",
        "SetAssemblyVersion",
        "GitVersion",
        "GetNormalizedAssemblyVersion",
        "SetFileVersion",
        "GitVersion",
        "GetNormalizedFileVersion",
        "SetInformationalVersion",
        "GitVersion",
        "InformationalVersion",
        "EnableNoRestore",
        "_",
        "Description",
        "DependsOn",
        "Restore",
        "Executes",
        "DotNetPublish",
        "s",
        "SetProject",
        "Solution",
        "SetConfiguration",
        "Configuration",
        "SetFramework",
        "Framework",
        "SetRuntime",
        "Runtime",
        "SetAssemblyVersion",
        "GitVersion",
        "GetNormalizedAssemblyVersion",
        "SetFileVersion",
        "GitVersion",
        "GetNormalizedFileVersion",
        "SetInformationalVersion",
        "GitVersion",
        "InformationalVersion",
        "EnableNoRestore",
        "TemporaryDirectory",
        "EnsureCleanDirectory",
        "TemporaryDirectory",
        "Solution",
        "GetProject",
        "BuildpackProjectName",
        "buildpackProject",
        "Directory",
        "Configuration",
        "Framework",
        "Runtime",
        "workDirectory",
        "RootDirectory",
        "CopyDirectoryRecursively",
        "publishDirectory",
        "workBinDirectory",
        "DirectoryExistsPolicy",
        "Merge",
        "CopyDirectoryRecursively",
        "scriptsDirectory",
        "workBinDirectory",
        "DirectoryExistsPolicy",
        "Merge",
        "TemporaryDirectory",
        "PackageZipName",
        "ZipFile",
        "CreateFromDirectory",
        "workDirectory",
        "tempZipFile",
        "MakeFilesInZipUnixExecutable",
        "tempZipFile",
        "CopyFileToDirectory",
        "tempZipFile",
        "ArtifactsDirectory",
        "FileExistsPolicy",
        "Overwrite",
        "Logger",
        "Block",
        "ArtifactsDirectory",
        "PackageZipName",
        "_",
        "Description",
        "DependsOn",
        "Publish",
        "Requires",
        "GitHubToken",
        "Executes",
        "GitRepository",
        "IsGitHubRepository",
        "GitHubClient",
        "ProductHeaderValue",
        "BuildpackProjectName",
        "Credentials",
        "Credentials",
        "GitHubToken",
        "AuthenticationType",
        "Bearer",
        "GitRepository",
        "Identifier",
        "Split",
        "gitIdParts",
        "gitIdParts",
        "GitVersion",
        "MajorMinorPatch",
        "release",
        "client",
        "Repository",
        "Release",
        "Get",
        "owner",
        "repoName",
        "releaseName",
        "NotFoundException",
        "NewRelease",
        "releaseName",
        "Name",
        "releaseName",
        "Draft",
        "Prerelease",
        "release",
        "client",
        "Repository",
        "Release",
        "Create",
        "owner",
        "repoName",
        "newRelease",
        "release",
        "Assets",
        "FirstOrDefault",
        "x",
        "Name",
        "PackageZipName",
        "existingAsset",
        "client",
        "Repository",
        "Release",
        "DeleteAsset",
        "owner",
        "repoName",
        "existingAsset",
        "Id",
        "ArtifactsDirectory",
        "PackageZipName",
        "ReleaseAssetUpload",
        "PackageZipName",
        "File",
        "OpenRead",
        "zipPackageLocation",
        "client",
        "Repository",
        "Release",
        "UploadAsset",
        "release",
        "releaseAssetUpload",
        "Logger",
        "Block",
        "releaseAsset",
        "BrowserDownloadUrl",
        "AbsolutePath",
        "zipFile",
        "zipFile",
        "ZipInputStream",
        "File",
        "Open",
        "zipFile",
        "FileMode",
        "Open",
        "ZipOutputStream",
        "File",
        "Open",
        "tmpFileName",
        "FileMode",
        "Create",
        "output",
        "SetLevel",
        "entry",
        "input",
        "GetNextEntry",
        "ZipEntry",
        "entry",
        "Name",
        "outEntry",
        "HostSystem",
        "HostSystemID",
        "Unix",
        "outEntry",
        "ExternalFileAttributes",
        "output",
        "PutNextEntry",
        "outEntry",
        "input",
        "CopyTo",
        "output",
        "output",
        "Finish",
        "output",
        "Flush",
        "DeleteFile",
        "zipFile",
        "RenameFile",
        "tmpFileName",
        "zipFile",
        "FileExistsPolicy",
        "Overwrite"
    ],
    "literals": [
        "\"Pivotal.Web.Config.Transform.Buildpack\"",
        "\"Configuration to build - Default is 'Debug' (local) or 'Release' (server)\"",
        "\"Target CF stack type - 'windows' or 'linux'. Determines buildpack runtime (Framework or Core). Default is 'windows'\"",
        "\"GitHub personal access token with access to the repo\"",
        "\"win-x64\"",
        "\"linux-x64\"",
        "\"net47\"",
        "\"netcoreapp2.2\"",
        "\"src\"",
        "\"tests\"",
        "\"artifacts\"",
        "\"Cleans up **/bin and **/obj folders\"",
        "\"**/bin\"",
        "\"**/obj\"",
        "\"**/bin\"",
        "\"**/obj\"",
        "\"Restores NuGet dependencies for the buildpack\"",
        "\"Compiles the buildpack\"",
        "\"Packages buildpack in Cloud Foundry expected format into /artifacts directory\"",
        "\"pack\"",
        "\"bin\"",
        "\"publish\"",
        "\"bin\"",
        "\"scripts\"",
        "\"Creates a GitHub release (or ammends existing) and uploads buildpack artifact\"",
        "\"Only supported when git repo remote is github\"",
        "\"/\"",
        "\"application/zip\"",
        "\".tmp\""
    ],
    "variables": [
        "BuildpackProjectName",
        "PackageZipName",
        "Configuration",
        "Configuration",
        "StackType",
        "GitHubToken",
        "Runtime",
        "Framework",
        "Solution",
        "Solution",
        "GitRepository",
        "GitRepository",
        "GitVersion",
        "GitVersion",
        "AbsolutePath",
        "SourceDirectory",
        "AbsolutePath",
        "TestsDirectory",
        "AbsolutePath",
        "ArtifactsDirectory",
        "Target",
        "Clean",
        "Target",
        "Restore",
        "Target",
        "Compile",
        "Target",
        "Publish",
        "workDirectory",
        "buildpackProject",
        "publishDirectory",
        "workBinDirectory",
        "scriptsDirectory",
        "tempZipFile",
        "Target",
        "Release",
        "client",
        "gitIdParts",
        "owner",
        "repoName",
        "releaseName",
        "Release",
        "release",
        "newRelease",
        "existingAsset",
        "zipPackageLocation",
        "releaseAssetUpload",
        "releaseAsset",
        "tmpFileName",
        "input",
        "output",
        "ZipEntry",
        "entry",
        "outEntry"
    ],
    "comments": [
        "Support plugins are available for:",
        "- JetBrains ReSharper        https://nuke.build/resharper",
        "- JetBrains Rider            https://nuke.build/rider",
        "- Microsoft VisualStudio     https://nuke.build/visualstudio",
        "- Microsoft VSCode           https://nuke.build/vscode"
    ],
    "docstrings": [],
    "functions": [
        "Main",
        "MakeFilesInZipUnixExecutable"
    ],
    "classes": [
        "Build"
    ]
}