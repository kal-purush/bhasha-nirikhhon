{
    "identifiers": [
        "useCallback",
        "useState",
        "useToggle",
        "initial",
        "status",
        "useState",
        "initial",
        "open",
        "open",
        "useCallback",
        "open",
        "setOpen",
        "open",
        "open",
        "open"
    ],
    "literals": [
        "'react'",
        "'open: '"
    ],
    "variables": [
        "useToggle",
        "open",
        "setOpen"
    ],
    "comments": [
        "tslint:disable-next-line:no-shadowed-variable"
    ],
    "docstrings": [
        "* TODO: figure out how to use useCallback without warning for shadowed-variable\n     * return [open, useCallback((open) => setOpen((open) => !open), [open])]",
        "* ERROR:\n * [ts] Cannot invoke an expression whose type lacks a call signature.\n * Type 'string | ((item: string) => void)' has no compatible call signatures. [2349]",
        "* CAUSE:\n * TypeScript inferred the return type as\n * (string | ((item: string) => void))[] which is not right.\n *\n * FIX:\n * so you have to be explecit with the return type of the function\n * (initial: boolean): [boolean, (s: boolean) => void]\n * reference: https://www.slightedgecoder.com/2019/02/10/being-explicit-with-your-own-react-hook-typescript-return-type/"
    ],
    "functions": [],
    "classes": []
}