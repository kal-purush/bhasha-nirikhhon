{
    "identifiers": [
        "Readable",
        "Writable",
        "MongoClient",
        "MongoUtils",
        "BaseMongoObject",
        "data",
        "data",
        "Writable",
        "pageSize",
        "consumerFn",
        "chunk",
        "encoding",
        "callback",
        "error",
        "chunk",
        "err",
        "callback",
        "err",
        "callback",
        "callback",
        "error",
        "callback",
        "Writable",
        "consumerFn",
        "chunk",
        "encoding",
        "callback",
        "error",
        "chunk",
        "err",
        "callback",
        "err",
        "callback",
        "Readable",
        "mongoClient",
        "query",
        "pageSize",
        "projection",
        "consumerFn",
        "resolve",
        "reject",
        "PageConsumerWritable",
        "consumerFn",
        "reject",
        "resolve",
        "consumerFn",
        "resolve",
        "reject",
        "ItemConsumerWritable",
        "consumerFn",
        "reject",
        "resolve",
        "size",
        "MongoUtils",
        "cursor",
        "resultLength",
        "item",
        "cursor",
        "item",
        "item",
        "item",
        "item",
        "resultLength"
    ],
    "literals": [
        "'stream'",
        "'./client'",
        "'./mongo-utils'",
        "\"./models\"",
        "string",
        "string",
        "string",
        "\"error\"",
        "\"finish\"",
        "\"error\"",
        "\"finish\"",
        "'_id'"
    ],
    "variables": [
        "cursor",
        "resultLength",
        "item"
    ],
    "comments": [],
    "docstrings": [
        "* Readable stream that streams the content of a collection.\n * This stream implement pagination without using cursor.skip() but rather by using limit and a comparison\n * with _id. This behaviour has better performance when reading large collections.",
        "* Call the given callback for each page in series\n\t * Return a promise that is resolved when all the items have been consumed",
        "* Call the given callback for each item in series\n\t * Return a promise that is resolved when all the items have been consumed"
    ],
    "functions": [
        "_write",
        "_final",
        "_write",
        "forEachPage",
        "forEach",
        "_read"
    ],
    "classes": [
        "PageConsumerWritable",
        "ItemConsumerWritable",
        "MongoReadStream"
    ]
}