{
    "identifiers": [
        "lastRankFilled",
        "filesWithQueens",
        "old",
        "filesWithQueens",
        "old",
        "filesWithQueens",
        "length",
        "i",
        "i",
        "old",
        "filesWithQueens",
        "length",
        "i",
        "filesWithQueens",
        "i",
        "old",
        "filesWithQueens",
        "i",
        "lastRankFilled",
        "old",
        "lastRankFilled",
        "ranks",
        "filesWithQueens",
        "ranks",
        "lastRankFilled",
        "filesWithQueens",
        "length",
        "lastRankFilled",
        "fileOfLast",
        "filesWithQueens",
        "lastRankFilled",
        "previouslyFilledRank",
        "previouslyFilledRank",
        "lastRankFilled",
        "previouslyFilledRank",
        "fileOfPrev",
        "filesWithQueens",
        "previouslyFilledRank",
        "fileOfLast",
        "fileOfPrev",
        "lastRankFilled",
        "previouslyFilledRank",
        "abs",
        "fileOfLast",
        "fileOfPrev",
        "lastRankFilled",
        "filesWithQueens",
        "length",
        "lastIsNg",
        "file",
        "filesWithQueens",
        "lastRankFilled",
        "file",
        "lastRankFilled",
        "INDENT",
        "size",
        "filesWithQueens",
        "length",
        "pic",
        "INDENT",
        "size",
        "lastRankFilled",
        "lastRankFilled",
        "format",
        "hashCode",
        "format",
        "filesWithQueens",
        "hashCode",
        "lineSeparator",
        "size",
        "pic",
        "pic",
        "INDENT",
        "lineSeparator",
        "INDENT",
        "underscores",
        "file",
        "file",
        "size",
        "file",
        "pic",
        "format",
        "file",
        "underscores",
        "pic",
        "lineSeparator",
        "INDENT",
        "underscores",
        "lineSeparator",
        "rank",
        "rank",
        "size",
        "rank",
        "pic",
        "format",
        "rank",
        "file",
        "file",
        "size",
        "file",
        "rank",
        "lastRankFilled",
        "filesWithQueens",
        "rank",
        "file",
        "pic",
        "pic",
        "pic",
        "lineSeparator",
        "pic"
    ],
    "literals": [
        "\"         \"",
        "\" ranks, \"",
        "\"unpopulated\"",
        "\"populated through rank \"",
        "\", in board with ID \"",
        "\"%x\"",
        "\" with filesWithQueens \"",
        "\"%x\"",
        "\"files\"",
        "\"\"",
        "\"%-3d\"",
        "\"___\"",
        "\"rank %2d|\"",
        "\" _ \"",
        "\" Q \""
    ],
    "variables": [
        "lastRankFilled",
        "filesWithQueens"
    ],
    "comments": [
        "Or use the object clone method on the filesWithQueens.",
        "----- skeletal code below here needs no modification -----",
        "since it was tested for previous homework",
        "rank 0 is the next to fill",
        "empty boards are ok trivially",
        "There are 2 ways to conflict:",
        "on the same file",
        "always +",
        "just for shorthand",
        "sizes and labels that precede the ranks",
        "?: conditional operator",
        "short-circuit the picture for a zero-sized board",
        "file numbers, each in a 3-column field",
        "there's gotta be a better way",
        "underline the header",
        "picture each rank",
        "right-justified rank number:",
        "no queen in this rank yet",
        "no queen in this file"
    ],
    "docstrings": [
        "Represent a square chess board for a queens puzzle\n  of a particular size.",
        "the highest-numbered rank\n      that holds a queen.",
        "indexed by rank, giving\n      the file number that a queen occupies in that rank.\n      Interacts with lastRankFilled: entries in filesWithQueens\n      are meaningful only for ranks <= lastRankFilled. Entries\n      at higher indexes hold bit patterns that can be interpreted\n      as integers, as always. But those entries are meaningless.\n      This common thinking was used for the filledElements field\n      in List_inArraySlots exactly the same way.",
        "A copy constructor\n\n      @return a reference to a copy of @old board, with the copy\n              having a reference to its own, separate copy of\n              filesWithQueens.",
        "Construct an empty instance of the specified size",
        "@return the size of the board",
        "@return the boolean value of the statement\n              \"The last-added queen introduced a conflict.\"\n\n      @precondition: Before the latest queen was added,\n                     no queen attacked another.",
        "using integer arithmetic: on same diagonal\n                   if difference in ranks\n                   == difference in files or its negative",
        "@return the boolean value of the statement...\n                \"The board is fully and legally populated.\"\n\n      precondition: All ranks except possibly the last-filled\n        are populated legally. (That is, considering only the\n        ranks before the last-filled rank, no queen attacks\n        another.\n\n        This method checks the last-filled rank.",
        "Populate the next rank with a queen in position @file",
        "Recall that ++lastRankFilled increases the value\n           in lastRankFilled, and uses the new values as the\n           value of the expression. That is, the new, higher\n           value is used as the index into filesWithQueens.",
        "Un-do a populate(), to have no queen in the\n      most-recently-populated rank.\n      @precondition: Some rank(s) have been populated.",
        "@return a string representation of this board",
        "Make a header containing file numbers like...\n               3 ranks, populated through rank 1\n               files\n               0  1  2  3 ...\n               __________ ..."
    ],
    "functions": [
        "BoardForQueensPuzzle",
        "BoardForQueensPuzzle",
        "ranks",
        "lastIsNg",
        "accept",
        "populate",
        "depopulate",
        "toString"
    ],
    "classes": [
        "BoardForQueensPuzzle"
    ]
}