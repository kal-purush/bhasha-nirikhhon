{
    "identifiers": [
        "logging",
        "tempfile",
        "os",
        "re",
        "yaml",
        "subprocess",
        "fnmatch",
        "fnmatch",
        "logging",
        "getLogger",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "sp",
        "format",
        "sp",
        "sp",
        "sp",
        "sp",
        "sp",
        "whitelist",
        "sp",
        "whitelist",
        "logger",
        "debug",
        "sp",
        "format",
        "sp",
        "sp",
        "long_name",
        "whitelist",
        "logger",
        "debug",
        "long_name",
        "entry",
        "whitelist",
        "fnmatch",
        "sp",
        "entry",
        "logger",
        "debug",
        "sp",
        "entry",
        "sp1",
        "sp2",
        "whitelist",
        "format",
        "sp1",
        "sp2",
        "whitelist",
        "logger",
        "debug",
        "sp1",
        "sp2",
        "sp1",
        "sp2",
        "whitelist",
        "_check_exists_in_whitelist",
        "sp1",
        "whitelist",
        "_check_exists_in_whitelist",
        "sp2",
        "whitelist",
        "_check_colon_format",
        "sp1",
        "sp2",
        "whitelist",
        "_check_colon_format",
        "sp2",
        "sp1",
        "whitelist",
        "pfile",
        "target_packages",
        "whitelist",
        "os",
        "path",
        "join",
        "SCRIPT_PATH",
        "subprocess",
        "run",
        "script",
        "pfile",
        "stdout",
        "subprocess",
        "PIPE",
        "p",
        "returncode",
        "len",
        "p",
        "stdout",
        "yaml",
        "safe_load",
        "p",
        "stdout",
        "conflict",
        "conflicts",
        "conflict",
        "conflict",
        "sp1",
        "target_packages",
        "sp2",
        "target_packages",
        "_check_conflicts_whitelist",
        "sp1",
        "sp2",
        "whitelist",
        "output",
        "format",
        "_format_pkg",
        "sp1",
        "_format_pkg",
        "sp2",
        "file",
        "conflict",
        "split",
        "output",
        "format",
        "file",
        "output",
        "len",
        "output",
        "output",
        "pfile",
        "arch",
        "target_packages",
        "whitelist",
        "subprocess",
        "run",
        "arch",
        "pfile",
        "stdout",
        "subprocess",
        "PIPE",
        "text",
        "p",
        "returncode",
        "re",
        "compile",
        "line",
        "p",
        "stdout",
        "split",
        "line",
        "startswith",
        "install_re",
        "match",
        "line",
        "match",
        "match",
        "group",
        "target_packages",
        "in_problem",
        "output",
        "line",
        "output",
        "directories",
        "arch",
        "whitelist",
        "ignore_conflicts",
        "tempfile",
        "TemporaryDirectory",
        "prefix",
        "dir",
        "os",
        "path",
        "join",
        "dir",
        "os",
        "path",
        "join",
        "SCRIPT_PATH",
        "script",
        "dir",
        "directories",
        "subprocess",
        "run",
        "parts",
        "p",
        "returncode",
        "CorruptRepos",
        "open",
        "os",
        "path",
        "join",
        "dir",
        "file",
        "yaml",
        "safe_load",
        "file",
        "catalog",
        "directories",
        "_fileconflicts",
        "pfile",
        "target_packages",
        "ignore_conflicts",
        "output",
        "parts",
        "append",
        "output",
        "_installcheck",
        "pfile",
        "arch",
        "target_packages",
        "whitelist",
        "output",
        "parts",
        "append",
        "output",
        "parts"
    ],
    "literals": [
        "'InstallChecker'",
        "\"{}-{}-{}.{}\"",
        "\"Found %s in whitelist, ignoring\"",
        "\"{}-{}\"",
        "\"Found %s in whitelist, ignoring\"",
        "\"Found %s matching whitelist entry %s, ignoring\"",
        "\"{}:{}\"",
        "\"Found %s:%s in whitelist, ignoring\"",
        "'..'",
        "'findfileconflicts'",
        "'perl'",
        "''",
        "'between'",
        "'between'",
        "\"found conflict of {} with {}\\n\"",
        "'conflicts'",
        "'\\n'",
        "\"  {}\\n\"",
        "\"\\n\"",
        "'/usr/bin/installcheck'",
        "''",
        "r\"^can't install (.*)-[^-]+-[^-]+:$\"",
        "'\\n'",
        "' '",
        "\"\\n\"",
        "'repochecker'",
        "'packages'",
        "'..'",
        "'write_repo_susetags_file.pl'",
        "'perl'",
        "'catalog.yml'"
    ],
    "variables": [
        "logger",
        "SCRIPT_PATH",
        "long_name",
        "script",
        "p",
        "output",
        "conflicts",
        "sp1",
        "sp2",
        "p",
        "output",
        "in_problem",
        "install_re",
        "in_problem",
        "match",
        "in_problem",
        "pfile",
        "script",
        "parts",
        "p",
        "target_packages",
        "catalog",
        "target_packages",
        "parts",
        "output",
        "output"
    ],
    "comments": [
        "the content of sp is name, version, release, arch",
        "check with version",
        "dir = '.'",
        "technically only 126, but there is no other value atm -",
        "so if some other perl error happens, we don't continue"
    ],
    "docstrings": [],
    "functions": [
        "_format_pkg",
        "_check_exists_in_whitelist",
        "_check_colon_format",
        "_check_conflicts_whitelist",
        "_fileconflicts",
        "_installcheck",
        "installcheck"
    ],
    "classes": [
        "CorruptRepos"
    ]
}