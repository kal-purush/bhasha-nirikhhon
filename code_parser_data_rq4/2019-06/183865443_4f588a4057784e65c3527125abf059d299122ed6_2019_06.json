{
    "identifiers": [
        "numpy",
        "np",
        "height",
        "width",
        "player",
        "np",
        "zeros",
        "height",
        "width",
        "dtype",
        "player",
        "i",
        "j",
        "i",
        "height",
        "j",
        "width",
        "property",
        "__ox",
        "property",
        "__next_player",
        "property",
        "__free_moves",
        "property",
        "__move_steps",
        "format",
        "end",
        "j",
        "__ox",
        "shape",
        "format",
        "j",
        "end",
        "i",
        "__ox",
        "shape",
        "format",
        "i",
        "end",
        "j",
        "__ox",
        "shape",
        "__ox",
        "i",
        "j",
        "format",
        "end",
        "__ox",
        "i",
        "j",
        "format",
        "end",
        "__ox",
        "i",
        "j",
        "format",
        "end",
        "location",
        "location",
        "moves",
        "__ox",
        "__next_player",
        "__next_player",
        "__free_moves",
        "remove",
        "location",
        "__move_steps",
        "append",
        "location",
        "__move_steps",
        "pop",
        "__free_moves",
        "append",
        "undo",
        "__ox",
        "__next_player",
        "ninline",
        "__ox",
        "i",
        "i",
        "ninline",
        "j",
        "j",
        "ninline",
        "i",
        "__ox",
        "shape",
        "ninline",
        "j",
        "__ox",
        "shape",
        "ninline",
        "nm",
        "matrixlist",
        "nm",
        "sum",
        "axis",
        "nm",
        "sum",
        "axis",
        "n_line",
        "add",
        "nm",
        "trace",
        "n_line",
        "add",
        "nm",
        "trace",
        "ninline",
        "n_line",
        "ninline",
        "n_line",
        "states",
        "states",
        "states",
        "len",
        "__free_moves",
        "states",
        "len",
        "__free_moves",
        "__free_moves"
    ],
    "literals": [
        "'x'",
        "\"{0:>15}\"",
        "'x\\y'",
        "''",
        "\"{0:^5}\"",
        "''",
        "'\\n'",
        "\"{0:>15}\"",
        "''",
        "\"{0:^5}\"",
        "'+'",
        "''",
        "\"{0:^5}\"",
        "'X'",
        "''",
        "\"{0:^5}\"",
        "'Q'",
        "''",
        "'\\n'",
        "'x'",
        "'o'",
        "'x'",
        "'x'",
        "'o'",
        "'x'",
        "'x'"
    ],
    "variables": [
        "__ox",
        "__next_player",
        "__free_moves",
        "__move_steps",
        "location",
        "__next_player",
        "undo",
        "undo",
        "__next_player",
        "matrixlist",
        "n_line",
        "states"
    ],
    "comments": [
        "M x N 矩阵初始化棋盘ox，值是棋子类型，0空，1代表'x'，-1代表'o';",
        "现棋盘空余可下位置列表如{(0,0), (0,1), }",
        "下棋的落子顺序",
        "返回可下位置列表",
        "返回落子的顺序位置，第一个player是X",
        "'''打印列标号'''",
        "5个字符",
        "5个字符",
        "换行,打印空行",
        "'''打印棋盘'''",
        "行数",
        "'''打印行标号'''",
        "5个字符",
        "'''打印该行棋盘'''",
        "未落子  5个字符",
        "x 落子  5个字符",
        "o 落子",
        "落子位置可用则更新棋盘，返回1. 否则返回0",
        "此处应该考虑ninline要小于等于矩阵行列的最小值",
        "生成棋盘所有ninline维方阵，并判断方阵是否有连成一线的情况",
        "计算方阵连线情况,1代表'x'连成一线，-1代表'o'连成一线，0代表没有出现'''",
        "把各行,列的和组成集合，查找集合中是否存在ninline或-ninline，代表连成一行'''",
        "第一条对角线的和加入列表；使用方阵的迹'''",
        "第二条对角线的和加入列表；使用方阵反转后的迹'''",
        "只要存在连成一线的情况，就不在检查后续。",
        "有ninline维方阵返回1或者-1，加权可落子处多少，输赢结果'''",
        "所有ninline维方阵返回都是0，检查是否有可落子处，无则返回0代表平局，有则None代表未结束'''"
    ],
    "docstrings": [
        "'''棋盘，默认是“井字棋”Tie Tac Toe，也可以作为五子棋,围棋等黑白棋的棋盘'''",
        "'''通过 Q X + 展示棋盘'''",
        "'''通过位置更新棋盘，严格的X/Q顺序：玩家使用默认的player，只能输入位置，之后更改player'''",
        "'''毁一步棋严格的X/Q顺序'''",
        "'''ninline表示连成一线的子数是多少为赢\n           返回棋盘棋局胜负标志，>=1代表'x'赢，<=-1代表'o'赢，0代表平局，None代表未结束'''"
    ],
    "functions": [
        "ox",
        "player",
        "moves",
        "steps",
        "show",
        "move",
        "retract_move",
        "states"
    ],
    "classes": [
        "Board"
    ]
}