{
    "identifiers": [
        "GRPCHealthIndicator",
        "checkPackages",
        "Transport",
        "UnhealthyResponseCodeError",
        "TimeoutError",
        "HealthCheckError",
        "jest",
        "jest",
        "jest",
        "healthServiceMock",
        "jest",
        "grpcClientMock",
        "clientProxyFactoryMock",
        "describe",
        "beforeEach",
        "checkPackages",
        "jest",
        "nestJSMicroservicesMock",
        "grpc",
        "GRPCHealthIndicator",
        "afterEach",
        "clientProxyFactoryMock",
        "grpcClientMock",
        "healthServiceMock",
        "describe",
        "it",
        "grpc",
        "expect",
        "result",
        "it",
        "grpc",
        "expect",
        "clientProxyFactoryMock",
        "expect",
        "Transport",
        "it",
        "grpc",
        "expect",
        "clientProxyFactoryMock",
        "Transport",
        "it",
        "healthServiceMock",
        "grpc",
        "err",
        "expect",
        "err",
        "UnhealthyResponseCodeError",
        "it",
        "grpc",
        "err",
        "expect",
        "err",
        "TimeoutError",
        "it",
        "jest",
        "grpc",
        "expect",
        "healthServiceCheck",
        "it",
        "grpc",
        "expect",
        "grpcClientMock",
        "it",
        "grpcClientMock",
        "error",
        "grpc",
        "err",
        "expect",
        "err",
        "error",
        "it",
        "grpcClientMock",
        "error",
        "grpc",
        "err",
        "expect",
        "err",
        "HealthCheckError",
        "it",
        "grpc",
        "err",
        "expect",
        "err",
        "HealthCheckError"
    ],
    "literals": [
        "'./grpc.health'",
        "'../../utils/checkPackage.util'",
        "'@nestjs/microservices'",
        "'../../errors'",
        "'mongoose'",
        "'@godaddy/terminus'",
        "'../../utils/checkPackage.util'",
        "'GRPCHealthIndicator'",
        "'checkService'",
        "'should return a healthy result'",
        "'grpc'",
        "'test'",
        "'SERVING'",
        "'up'",
        "'should correctly call the ClientProxyFactory with default'",
        "'grpc'",
        "'test'",
        "'grpc.health.v1'",
        "'should correctly all the ClientProxyFactory with custom options'",
        "'grpc'",
        "'test'",
        "'test.proto'",
        "'grpc.health.v2'",
        "'grpc.health.v2'",
        "'test.proto'",
        "'should throw an error in case the health service returns a faulty response code'",
        "'grpc'",
        "'test'",
        "'should throw an error when the timeout runs out'",
        "'grpc'",
        "'test'",
        "'should use the custom healthServiceCheck function'",
        "'grpc'",
        "'test'",
        "'should use the custom healthServiceName'",
        "'grpc'",
        "'test'",
        "'health2'",
        "'health2'",
        "'should throw TypeError further in client.getService'",
        "'test'",
        "'grpc'",
        "'test'",
        "'should throw HealthCheckError in client.getService'",
        "'test'",
        "'grpc'",
        "'test'",
        "'should throw HealthCheckError if the grpc check function fails'",
        "'grpc'",
        "'test'",
        "'test'"
    ],
    "variables": [
        "healthServiceMock",
        "grpcClientMock",
        "clientProxyFactoryMock",
        "nestJSMicroservicesMock",
        "grpc",
        "result",
        "healthServiceCheck",
        "error",
        "error"
    ],
    "comments": [
        "== MOCKS =="
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}