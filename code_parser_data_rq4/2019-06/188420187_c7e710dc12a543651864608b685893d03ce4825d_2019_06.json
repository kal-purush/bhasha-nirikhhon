{
    "identifiers": [
        "require",
        "address",
        "localStorage",
        "KEY_TAG",
        "address",
        "storedKey",
        "storedKey",
        "name",
        "address",
        "ciphertext",
        "ciphertext",
        "localStorage",
        "KEY_TAG",
        "address",
        "storedWallet",
        "address",
        "password",
        "loadFromStorage",
        "address",
        "storedWallet",
        "decrypt",
        "storedWallet",
        "password",
        "decrypted",
        "wallet",
        "err",
        "name",
        "name",
        "localStorage",
        "KEY_TAG",
        "x",
        "x",
        "storedIndex",
        "name",
        "storedIndex",
        "name",
        "localStorage",
        "KEY_TAG",
        "updatedIndex",
        "wallet",
        "name",
        "password",
        "loadFromStorage",
        "wallet",
        "storedWallet",
        "updateIndex",
        "name",
        "encrypt",
        "wallet",
        "password",
        "addToStorage",
        "name",
        "wallet",
        "ciphertext",
        "address",
        "password",
        "loadFromStorage",
        "address",
        "storedWallet",
        "decrypt",
        "storedWallet",
        "password",
        "decrypted",
        "err",
        "message",
        "password",
        "CryptoJS",
        "CryptoJS",
        "password",
        "salt",
        "keySize",
        "iterations",
        "CryptoJS",
        "CryptoJS",
        "message",
        "key",
        "iv",
        "CryptoJS",
        "CryptoJS",
        "salt",
        "iv",
        "encrypted",
        "transitmessage",
        "transitMessage",
        "password",
        "CryptoJS",
        "transitMessage",
        "CryptoJS",
        "transitMessage",
        "transitMessage",
        "CryptoJS",
        "password",
        "salt",
        "keySize",
        "iterations",
        "CryptoJS",
        "encrypted",
        "key",
        "iv",
        "CryptoJS",
        "CryptoJS",
        "CryptoJS",
        "decrypted"
    ],
    "literals": [
        "'crypto-js'",
        "cosmos-wallets",
        "string",
        "'-'",
        "string",
        "string",
        "string",
        "'-'",
        "string",
        "string",
        "'No wallet found for request address'",
        "Incorrect password",
        "string",
        "','",
        "\"Name can't include a ','\"",
        "'-index'",
        "''",
        "','",
        "Key with that name already exists",
        "','",
        "'-index'",
        "string",
        "string",
        "\"The wallet was already stored. Can't store the same wallet again.\"",
        "string",
        "string",
        "'No wallet found for request address'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "CryptoJS",
        "KEY_TAG",
        "keySize",
        "iterations",
        "storedKey",
        "storedWallet",
        "storedWallet",
        "decrypted",
        "wallet",
        "storedIndex",
        "updatedIndex",
        "storedWallet",
        "ciphertext",
        "storedWallet",
        "decrypted",
        "salt",
        "key",
        "iv",
        "encrypted",
        "transitmessage",
        "salt",
        "iv",
        "encrypted",
        "key",
        "decrypted"
    ],
    "comments": [
        "<reference path=\"cosmos-keys.d.ts\" />",
        "loads an encrypted wallet from localstorage",
        "stores an encrypted wallet in localstorage",
        "loads and decrypts a wallet from localstorage",
        "stores the names of the keys to prevent name collision",
        "store a wallet encrypted in localstorage",
        "test password by trying to decrypt a key with said password",
        "try to decode and check if is json format to proof that decoding worked",
        "salt, iv will be hex 32 in length",
        "append them to the ciphertext for use  in decryption"
    ],
    "docstrings": [],
    "functions": [
        "loadFromStorage",
        "addToStorage",
        "getStoredWallet",
        "updateIndex",
        "storeWallet",
        "testPassword",
        "encrypt",
        "decrypt"
    ],
    "classes": []
}