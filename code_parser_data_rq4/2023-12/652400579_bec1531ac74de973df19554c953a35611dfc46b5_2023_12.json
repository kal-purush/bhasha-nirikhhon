{
    "identifiers": [
        "useEffect",
        "useRef",
        "MutableRefObject",
        "getScrollParent",
        "useMemo",
        "elRef",
        "enabled",
        "useRef",
        "useRef",
        "useEffect",
        "resizeObserverRef",
        "enabled",
        "elRef",
        "getScrollParent",
        "elRef",
        "scrollParent",
        "scrollParent",
        "_unlisten",
        "scrollParent",
        "_unlisten",
        "scrollParent",
        "_unlisten",
        "elRef",
        "resizeObserverRef",
        "resizeObserverRef",
        "ResizeObserver",
        "restore",
        "resizeObserverRef",
        "elRef",
        "enabled",
        "saveTopOffsetRef",
        "resizeObserverRef",
        "elRef",
        "getScrollParent",
        "elRef",
        "scrollParent",
        "scrollParent",
        "_unlisten",
        "scrollParent",
        "_unlisten",
        "scrollParent",
        "_unlisten",
        "enabled",
        "elRef",
        "getScrollParent",
        "elRef",
        "scrollView",
        "saveTopOffsetRef",
        "saveScrollPositionFromBottom",
        "scrollView",
        "_listen",
        "enabled",
        "saveTopOffsetRef",
        "previousTopOffset",
        "elRef",
        "getScrollParent",
        "elRef",
        "scrollView",
        "requestAnimationFrame",
        "restoreScrollPositionFromBottom",
        "scrollView",
        "previousTopOffset",
        "useMemo",
        "scrollableElement",
        "scrollableElement",
        "scrollableElement",
        "scrollableElement",
        "scrollFromBottom",
        "scrollableElement",
        "savedScrollPosition",
        "scrollableElement",
        "savedScrollPosition",
        "scrollableElement",
        "scrollableElement",
        "scrollTop"
    ],
    "literals": [
        "\"react\"",
        "\"react\"",
        "\"./dom\"",
        "\"react\"",
        "\"mousedown\"",
        "\"touchstart\"",
        "\"wheel\"",
        "\"mousedown\"",
        "\"touchstart\"",
        "\"wheel\""
    ],
    "variables": [
        "saveTopOffsetRef",
        "resizeObserverRef",
        "scrollParent",
        "scrollParent",
        "scrollView",
        "previousTopOffset",
        "scrollView",
        "scrollFromBottom",
        "scrollTop"
    ],
    "comments": [
        "eslint-disable-next-line react-hooks/exhaustive-deps"
    ],
    "docstrings": [
        "* Sometimes we want to preserve the scroll position\n * relative to the bottom of the scroll view. This function\n * observes reflow to programatically scroll until user interaction\n *\n * This is because sometimes images will load above the viewport\n * (and Safari doesn't have a good scroll anchoring implementation yet)\n *\n * Good test: https://lemmy.world/comment/5835936 (Load parent comments...)\n *\n * @param elRef An element within the scroll view wrapping all\n * content that can be observed for size changes",
        "* Call before scroll position will change",
        "* Call in react useEffect after value change that will affect the DOM\n   *\n   * Note: restore can be called multiple times."
    ],
    "functions": [
        "usePreservePositionFromBottomInScrollView",
        "_listen",
        "_unlisten",
        "save",
        "restore",
        "saveScrollPositionFromBottom",
        "restoreScrollPositionFromBottom"
    ],
    "classes": []
}