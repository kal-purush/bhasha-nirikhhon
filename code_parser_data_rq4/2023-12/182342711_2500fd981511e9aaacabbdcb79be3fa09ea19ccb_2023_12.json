{
    "identifiers": [
        "Microsoft",
        "Extensions",
        "Logging",
        "Diagnostics",
        "LinkerTest",
        "ILogger",
        "ILogger",
        "logger",
        "_logger",
        "logger",
        "illinkerDllPath",
        "descriptorXmlPath",
        "noLinkArgs",
        "prelinkAppPath",
        "prelinkDir",
        "postlinkDir",
        "File",
        "Exists",
        "illinkerDllPath",
        "FileNotFoundException",
        "illinkerDllPath",
        "descriptorXmlPath",
        "noLinkArgs",
        "prelinkAppPath",
        "postlinkDir",
        "_logger",
        "Log",
        "LogLevel",
        "Information",
        "Process",
        "process",
        "StartInfo",
        "WorkingDirectory",
        "Directory",
        "GetDirectoryRoot",
        "illinkerDllPath",
        "process",
        "StartInfo",
        "FileName",
        "process",
        "StartInfo",
        "Arguments",
        "monolinker_args",
        "process",
        "StartInfo",
        "UseShellExecute",
        "process",
        "StartInfo",
        "CreateNoWindow",
        "process",
        "StartInfo",
        "RedirectStandardError",
        "process",
        "StartInfo",
        "RedirectStandardOutput",
        "process",
        "Start",
        "process",
        "StandardOutput",
        "stdOutReaderResult",
        "stdOutReader",
        "ReadToEndAsync",
        "WriteLine",
        "stdOutReaderResult",
        "_logger",
        "Log",
        "LogLevel",
        "Debug",
        "stdOutReaderResult",
        "process",
        "WaitForExitAsync",
        "process",
        "ExitCode",
        "_logger",
        "Log",
        "LogLevel",
        "Debug",
        "process",
        "StartInfo",
        "FileName",
        "process",
        "StartInfo",
        "Arguments",
        "process",
        "ExitCode"
    ],
    "literals": [
        "\"Cannot run trimming operation, illink.dll not found\"",
        "\"\"",
        "\"Trimming assemblies\"",
        "\"dotnet\"",
        "\"StandardOutput Contains: \"",
        "\"StandardOutput Contains: \"",
        "\"Trimming failed\""
    ],
    "variables": [
        "_logger",
        "monolinker_args",
        "process",
        "stdOutReaderResult",
        "StreamReader",
        "stdOutReader"
    ],
    "comments": [
        "original",
        "var monolinker_args = $\"\\\"{illinkerDllPath}\\\" -x \\\"{descriptorXmlPath}\\\" {noLinkArgs} --skip-unresolved --deterministic --keep-facades true --ignore-descriptors true -b true -c link -o \\\"{postlinkDir}\\\" -r \\\"{prelinkAppPath}\\\" -a \\\"{prelink_os}\\\" -d \\\"{prelinkDir}\\\"\";",
        "link files in the descriptor file (needed)",
        "arguments to skip linking - will be blank if we are linking",
        "link the app in the prelink folder (needed)",
        "skip unresolved references (needed -hangs without)",
        "make deterministic (to avoid pushing unchanged files to the device)",
        "keep facades (needed - will skip key libs without)",
        "Update debug symbols for each linked module (needed - will skip key libs without)",
        "output directory",
        "old",
        "$\"--ignore-descriptors false \" + //ignore descriptors (doesn't appear to impact behavior)",
        "$\"-c link \" + //link framework assemblies",
        "$\"-d \\\"{prelinkDir}\\\"\" //additional folder to link (not needed)",
        "experimental",
        "$\"--explicit-reflection true \" + //enable explicit reflection (throws an exception with it)",
        "$\"--keep-dep-attributes true \" + //keep dependency attributes (files are slightly larger with, doesn't fix dependency issue)",
        "To avoid deadlocks, read the output stream first and then wait"
    ],
    "docstrings": [],
    "functions": [
        "ILLinker",
        "RunILLink"
    ],
    "classes": [
        "ILLinker"
    ]
}