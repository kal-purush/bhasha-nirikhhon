{
    "identifiers": [
        "json",
        "ert",
        "shared",
        "plugins",
        "plugin_manager",
        "hook_implementation",
        "ert",
        "shared",
        "plugins",
        "plugin_response",
        "plugin_response",
        "pkg_resources",
        "resource_filename",
        "stea",
        "arg",
        "os",
        "path",
        "isfile",
        "arg",
        "arg",
        "argparse",
        "ArgumentTypeError",
        "arg",
        "argparse",
        "ArgumentParser",
        "description",
        "DESCRIPTION",
        "parser",
        "add_argument",
        "help",
        "valid_file",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "_get_args_parser",
        "parser",
        "parse_args",
        "options",
        "ecl_case",
        "stea",
        "SteaInput",
        "options",
        "config",
        "options",
        "ecl_case",
        "stea",
        "calculate",
        "stea_input",
        "res",
        "value",
        "result",
        "results",
        "stea",
        "SteaKeys",
        "CORPORATE",
        "items",
        "open",
        "res",
        "encoding",
        "ofh",
        "ofh",
        "write",
        "value",
        "_get_profiles",
        "stea_input",
        "stea_server",
        "stea_input",
        "project_id",
        "stea_input",
        "project_version",
        "stea_input",
        "config_date",
        "_build_full_response",
        "result",
        "data",
        "stea",
        "SteaKeys",
        "KEY_VALUES",
        "profiles",
        "open",
        "options",
        "response_file",
        "encoding",
        "fout",
        "json",
        "dump",
        "full_response",
        "fout",
        "indent",
        "server",
        "project_id",
        "project_version",
        "config_date",
        "stea",
        "SteaClient",
        "server",
        "client",
        "get_project",
        "project_id",
        "project_version",
        "config_date",
        "project",
        "profiles",
        "result",
        "profiles",
        "result",
        "profiles",
        "hook_implementation",
        "plugin_response",
        "plugin_name",
        "resource_filename",
        "hook_implementation",
        "plugin_response",
        "plugin_name",
        "job_name",
        "job_name",
        "DESCRIPTION",
        "description",
        "examples",
        "category"
    ],
    "literals": [
        "f\"{arg} is not an existing file!\"",
        "\"STEA is a powerful economic analysis tool used for complex economic \"",
        "\"analysis and portfolio optimization. STEA helps you analyze single \"",
        "\"projects, large and small portfolios and complex decision trees. \"",
        "\"As output, for each of the entries in the result section of the \"",
        "\"yaml config file, STEA will create result files \"",
        "\"ex: Res1_0, Res2_0, .. Res#_0\"",
        "\"-c\"",
        "\"--config\"",
        "\"STEA config file, yaml format required\"",
        "\"-r\"",
        "\"--response_file\"",
        "\"STEA response, json format\"",
        "\"stea_response.json\"",
        "\"-e\"",
        "\"--ecl_case\"",
        "\"Case name, will overwrite the value in the config if provided\"",
        "\"__NONE__\"",
        "\"--ecl_case\"",
        "f\"{res}_0\"",
        "\"w\"",
        "\"utf-8\"",
        "f\"{value}\\n\"",
        "\"w\"",
        "\"utf-8\"",
        "\"response\"",
        "\"profiles\"",
        "\"fmu-steaclient\"",
        "\"STEA\"",
        "\"stea\"",
        "\"fm_stea/STEA_CONFIG\"",
        "\"fmu-steaclient\"",
        "\"STEA\"",
        "\"\"",
        "\"modelling.financial\"",
        "\"description\"",
        "\"examples\"",
        "\"category\""
    ],
    "variables": [
        "DESCRIPTION",
        "parser",
        "parser",
        "options",
        "options",
        "ecl_case",
        "stea_input",
        "result",
        "profiles",
        "full_response",
        "client",
        "project",
        "description",
        "examples",
        "category"
    ],
    "comments": [
        "This is because ert cant handle optionals"
    ],
    "docstrings": [],
    "functions": [
        "valid_file",
        "_get_args_parser",
        "main_entry_point",
        "_get_profiles",
        "_build_full_response",
        "installable_jobs",
        "job_documentation"
    ],
    "classes": []
}