{
    "identifiers": [
        "org",
        "vaadin",
        "example",
        "com",
        "vaadin",
        "flow",
        "component",
        "html",
        "H3",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "com",
        "vaadin",
        "flow",
        "component",
        "Key",
        "com",
        "vaadin",
        "flow",
        "component",
        "button",
        "Button",
        "com",
        "vaadin",
        "flow",
        "component",
        "button",
        "ButtonVariant",
        "com",
        "vaadin",
        "flow",
        "component",
        "html",
        "Paragraph",
        "com",
        "vaadin",
        "flow",
        "component",
        "orderedlayout",
        "VerticalLayout",
        "com",
        "vaadin",
        "flow",
        "component",
        "textfield",
        "TextField",
        "com",
        "vaadin",
        "flow",
        "router",
        "Route",
        "Route",
        "Autowired",
        "service",
        "textField",
        "button",
        "e",
        "add",
        "service",
        "greet",
        "textField",
        "getValue",
        "addClassName",
        "add",
        "textField",
        "button"
    ],
    "literals": [
        "\"flow\"",
        "\"Your name\"",
        "\"Say hello\"",
        "\"centered-content\"",
        "\"Flow View\""
    ],
    "variables": [],
    "comments": [
        "Use TextField for standard text input",
        "Button click listeners can be defined as lambda expressions",
        "Use custom CSS classes to apply styling. This is defined in",
        "styles.css."
    ],
    "docstrings": [
        "* A sample Vaadin view class.\n * <p>\n * To implement a Vaadin view just extend any Vaadin component and use @Route\n * annotation to announce it in a URL as a Spring managed bean.\n * <p>\n * A new instance of this class is created for every new user and every browser\n * tab/window.\n * <p>\n * The main view contains a text field for getting the user name and a button\n * that shows a greeting message in a notification.",
        "* Construct a new Vaadin view.\n     * <p>\n     * Build the initial UI state for the user accessing the application.\n     *\n     * @param service\n     *            The message service. Automatically injected Spring managed\n     *            bean."
    ],
    "functions": [
        "FlowView"
    ],
    "classes": [
        "FlowView"
    ]
}