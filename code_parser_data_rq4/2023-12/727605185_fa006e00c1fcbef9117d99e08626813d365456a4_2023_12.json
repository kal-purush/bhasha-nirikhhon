{
    "identifiers": [
        "com",
        "acorn",
        "baemin",
        "order",
        "domain",
        "lombok",
        "Data",
        "Data",
        "partner_order_id",
        "partner_user_id",
        "item_name",
        "quantity",
        "total_amount",
        "orderNumber",
        "menuCode",
        "userCode",
        "storeCode",
        "orderMenuName",
        "orderMenuNumber",
        "orderMenuPrice",
        "orderStoreName",
        "orderStoreImage",
        "orderDate",
        "payType",
        "orderType",
        "reqToSeller",
        "reqToRider",
        "orderStatus",
        "deliveryFee",
        "deliveryAddress",
        "userPhone",
        "optionsInfo",
        "reviewStatus",
        "com",
        "acorn",
        "baemin",
        "order",
        "kakaotest",
        "com",
        "acorn",
        "baemin",
        "order",
        "kakaotest"
    ],
    "literals": [],
    "variables": [
        "partner_order_id",
        "partner_user_id",
        "item_name",
        "quantity",
        "total_amount",
        "orderNumber",
        "menuCode",
        "userCode",
        "storeCode",
        "orderMenuName",
        "orderMenuNumber",
        "orderMenuPrice",
        "orderStoreName",
        "orderStoreImage",
        "orderDate",
        "payType",
        "orderType",
        "reqToSeller",
        "reqToRider",
        "orderStatus",
        "deliveryFee",
        "deliveryAddress",
        "userPhone",
        "optionsInfo",
        "reviewStatus"
    ],
    "comments": [],
    "docstrings": [
        "* package com.acorn.baemin.order.controller;\n * \n * import java.net.URI; import java.net.URISyntaxException;\n * \n * import org.springframework.http.HttpEntity; import\n * org.springframework.http.HttpHeaders; import\n * org.springframework.http.MediaType; import\n * org.springframework.stereotype.Service; import\n * org.springframework.util.LinkedMultiValueMap; import\n * org.springframework.util.MultiValueMap; import\n * org.springframework.web.client.RestClientException; import\n * org.springframework.web.client.RestTemplate;\n * \n * import com.acorn.baemin.domain.OrderDTO; import\n * com.acorn.baemin.order.domain.KakaoPayApprovalVO; import\n * com.acorn.baemin.order.domain.KakaoPayReadyVO;\n * \n * import lombok.extern.java.Log;\n * \n * @Service\n * \n * @Log public class KakaoPay구 {\n * \n * private static final String HOST = \"https://kapi.kakao.com\"; private\n * KakaoPayReadyVO kakaoPayReadyVO; private KakaoPayApprovalVO\n * kakaoPayApprovalVO;\n * \n * public String kakaoPayReady( OrderDTO orderDTO) {\n * \n * RestTemplate restTemplate = new RestTemplate();\n * \n * \n * \n * // 서버로 요청할 Header HttpHeaders headers = new HttpHeaders();\n * \n * headers.add(\"Authorization\", \"KakaoAK \" +\n * \"8b44519adc0723877cc1352fbf89cf6f\"); headers.add(\"Accept\",\n * MediaType.APPLICATION_JSON_UTF8_VALUE); headers.add(\"Content-Type\",\n * MediaType.APPLICATION_FORM_URLENCODED_VALUE + \";charset=UTF-8\");\n * \n * String quantity = String.valueOf(orderDTO.getOrderMenuNumber()); String\n * total_amount = String.valueOf(orderDTO.getOrderMenuPrice());\n * \n * // 서버로 요청할 Body MultiValueMap<String, String> params = new\n * LinkedMultiValueMap<String, String>(); params.add(\"cid\", \"TC0ONETIME\");\n * params.add(\"partner_order_id\", \"test\"); params.add(\"partner_user_id\",\n * \"test\"); params.add(\"item_name\", orderDTO.getOrderMenuName());\n * params.add(\"quantity\", quantity); params.add(\"total_amount\", total_amount);\n * params.add(\"tax_free_amount\", \"0\"); params.add(\"approval_url\",\n * \"http://localhost:8080/kakaoPaySuccess\");\n * \n * \n * //헤더,바디 합치는 방법 . HttpEntity<MultiValueMap<String, String>> body = new\n * HttpEntity<MultiValueMap<String, String>>(params, headers);\n * \n * try { // RestTemplate= 카카오페이 데이터 보낼때 사용 , kakaoPayReadyVO =\n * restTemplate.postForObject(new URI(HOST + \"/v1/payment/ready\"), body,\n * KakaoPayReadyVO.class);\n * \n * log.info(\"\" + kakaoPayReadyVO);\n * \n * return kakaoPayReadyVO.getNext_redirect_pc_url();\n * \n * } catch (RestClientException e) { // TODO Auto-generated catch block\n * e.printStackTrace(); } catch (URISyntaxException e) { // TODO Auto-generated\n * catch block e.printStackTrace(); }\n * \n * return \"/pay\";\n * \n * }\n * \n * public KakaoPayApprovalVO kakaoPayInfo(String pg_token , OrderDTO orderDTO) {\n * \n * log.info(\"KakaoPayInfoVO............................................\");\n * log.info(\"-----------------------------\");\n * \n * RestTemplate restTemplate = new RestTemplate();\n * \n * String total_amount = String.valueOf(orderDTO.getOrderMenuPrice());\n * \n * // 서버로 요청할 Header HttpHeaders headers = new HttpHeaders();\n * \n * headers.add(\"Authorization\", \"KakaoAK \" +\n * \"8b44519adc0723877cc1352fbf89cf6f\"); headers.add(\"Accept\",\n * MediaType.APPLICATION_JSON_UTF8_VALUE); headers.add(\"Content-Type\",\n * MediaType.APPLICATION_FORM_URLENCODED_VALUE + \";charset=UTF-8\");\n * \n * // 서버로 요청할 Body MultiValueMap<String, String> params = new\n * LinkedMultiValueMap<String, String>(); params.add(\"cid\", \"TC0ONETIME\");\n * params.add(\"tid\", kakaoPayReadyVO.getTid()); params.add(\"partner_order_id\",\n * \"test\"); params.add(\"partner_user_id\", \"test\"); params.add(\"pg_token\",\n * pg_token); params.add(\"total_amount\", total_amount);\n * \n * HttpEntity<MultiValueMap<String, String>> body = new\n * HttpEntity<MultiValueMap<String, String>>(params, headers);\n * \n * try { kakaoPayApprovalVO = restTemplate.postForObject(new URI(HOST +\n * \"/v1/payment/approve\"), body, KakaoPayApprovalVO.class); log.info(\"\" +\n * kakaoPayApprovalVO);\n * \n * return kakaoPayApprovalVO;\n * \n * } catch (RestClientException e) { // TODO Auto-generated catch block\n * e.printStackTrace(); } catch (URISyntaxException e) { // TODO Auto-generated\n * catch block e.printStackTrace(); }\n * \n * return null; }\n * \n * }\n *",
        "* package com.acorn.baemin.order.controller;\n * \n * \n * import javax.servlet.http.HttpSession;\n * \n * import org.springframework.beans.factory.annotation.Autowired;\n * \n * import org.springframework.stereotype.Controller; import\n * org.springframework.ui.Model; import\n * org.springframework.web.bind.annotation.GetMapping; import\n * org.springframework.web.bind.annotation.PostMapping; import\n * org.springframework.web.bind.annotation.RequestParam; import\n * org.springframework.web.servlet.mvc.support.RedirectAttributes;\n * \n * import com.acorn.baemin.domain.OrderDTO; import\n * com.acorn.baemin.order.domain.KakaoPayApprovalVO; import\n * com.acorn.baemin.order.service.UserOrderServiceImp;\n * \n * import lombok.Setter; import lombok.extern.java.Log;\n * \n * @Log\n * \n * @Controller public class SampleController구 {\n * \n * @Setter(onMethod_ = @Autowired) private KakaoPay kakaopay;\n * \n * \n * @Autowired UserOrderServiceImp userOrderService;\n * \n * \n * \n * \n * // @GetMapping(\"/kakaoPay\") public void kakaoPayGet() {\n * \n * }\n * \n * @PostMapping(\"/kakaoPay\") public String kakaoPay(HttpSession\n * session, @RequestParam String deliveryAddress, @RequestParam int deliveryFee,\n * \n * @RequestParam int payType,\n * \n * @RequestParam int orderType,\n * \n * @RequestParam String reqToSeller,\n * \n * @RequestParam String reqToRider,\n * \n * @RequestParam String userPhone) {\n * log.info(\"kakaoPay post............................................\");\n * \n * OrderDTO orderDTO = (OrderDTO) session.getAttribute(\"orderDTO\");\n * orderDTO.setDeliveryAddress(deliveryAddress);\n * orderDTO.setDeliveryFee(deliveryFee); orderDTO.setReqToRider(reqToRider);\n * orderDTO.setReqToSeller(reqToSeller); orderDTO.setOrderStatus(\"주문접수\");\n * orderDTO.setUserPhone(userPhone); orderDTO.setPayType(payType);\n * orderDTO.setOrderType(orderType); orderDTO.setOrderDate(\"오늘\");\n * userOrderService.insertOrder(orderDTO); OrderDTO lastOrderDTO =\n * userOrderService.getLastOrder(); System.out.println(\"주문번호 : \");\n * System.out.println(lastOrderDTO.getOrderNumber());\n * orderDTO.setOrderNumber(lastOrderDTO.getOrderNumber());\n * System.out.println(orderDTO); return \"redirect:\" \n * kakaopay.kakaoPayReady(orderDTO);\n * \n * }\n * \n * @GetMapping(\"/kakaoPaySuccess\") public String\n * kakaoPaySuccess(RedirectAttributes\n * redirectAttributes, @RequestParam(\"pg_token\") String pg_token, Model model,\n * HttpSession session) {\n * log.info(\"kakaoPaySuccess get............................................\");\n * log.info(\"kakaoPaySuccess pg_token : \" + pg_token);\n * System.out.println(\"카카오페이 테스트1\"); OrderDTO orderDTO = (OrderDTO)\n * session.getAttribute(\"orderDTO\"); System.out.println(\"카카오페이 테스트2\");\n * System.out.println(orderDTO); model.addAttribute(\"info\",\n * kakaopay.kakaoPayInfo(pg_token, orderDTO));\n * \n * OrderDTO lastOrderDTO = userOrderService.getLastOrder();\n * System.out.println(lastOrderDTO.getOrderNumber());\n * redirectAttributes.addAttribute(\"orderNumber\",\n * lastOrderDTO.getOrderNumber()); return \"redirect:orderDetail\"; }\n * \n * }"
    ],
    "functions": [],
    "classes": [
        "KakaoOrderDTO"
    ]
}