{
    "identifiers": [
        "os",
        "glob",
        "sys",
        "folder_path",
        "file_path",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "folder_path",
        "recursive",
        "os",
        "path",
        "dirname",
        "file_path",
        "header_paths",
        "os",
        "path",
        "dirname",
        "file_path",
        "header_paths",
        "add",
        "os",
        "path",
        "dirname",
        "file_path",
        "file_path",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "folder_path",
        "recursive",
        "os",
        "path",
        "dirname",
        "file_path",
        "header_paths",
        "os",
        "path",
        "dirname",
        "file_path",
        "header_paths",
        "add",
        "os",
        "path",
        "dirname",
        "file_path",
        "header_paths",
        "paths",
        "base_path",
        "path",
        "paths",
        "path",
        "startswith",
        "base_path",
        "path",
        "base_path",
        "os",
        "path",
        "split",
        "path",
        "tail",
        "parts",
        "append",
        "os",
        "path",
        "join",
        "path",
        "tail",
        "parts",
        "append",
        "path",
        "split_paths",
        "extend",
        "parts",
        "sorted",
        "split_paths",
        "output_file",
        "header_paths",
        "directories",
        "directory",
        "directories",
        "header_path",
        "split_and_sort_paths",
        "header_paths",
        "os",
        "path",
        "dirname",
        "directory",
        "compile_flags",
        "append",
        "header_path",
        "open",
        "output_file",
        "file",
        "file",
        "write",
        "join",
        "lines",
        "compile_flags",
        "os",
        "getcwd",
        "sys",
        "argv",
        "directories",
        "append",
        "current_folder",
        "directory",
        "directories",
        "directory",
        "unique_header_paths",
        "find_unique_header_paths",
        "directory",
        "write_compile_flags_file",
        "unique_header_paths",
        "directories",
        "main"
    ],
    "literals": [
        "'**'",
        "'*.h'",
        "f\"Add *.h header path {os.path.dirname(file_path)}\"",
        "'**'",
        "'*.hpp'",
        "f\"Add *.hpp header path {os.path.dirname(file_path)}\"",
        "'If:'",
        "'   PathMatch: [.*/.cpp, .*/.cxx, .*/.cc, .*/.h, .*/.hpp, .*/.hxx]'",
        "'CompileFlags:'",
        "'   Compiler: g++'",
        "'   Add:'",
        "'       - \\\"-std=c++11\\\"'",
        "'---'",
        "'If:'",
        "'   PathMatch: [.*/.c]'",
        "'CompileFlags:'",
        "'   Compiler: gcc'",
        "'   Add:'",
        "'       - \\\"-std=c99\\\"'",
        "'---'",
        "\"CompileFlags:\"",
        "\"    Add:\"",
        "f\"        - -I{header_path}\"",
        "'w'",
        "'\\n'",
        "f\"-- Searching for header files in: {directory}\"",
        "\".clangd\"",
        "\"__main__\""
    ],
    "variables": [
        "header_paths",
        "split_paths",
        "parts",
        "path",
        "tail",
        "lines",
        "compile_flags",
        "current_folder",
        "unique_header_paths",
        "directories"
    ],
    "comments": [
        "!/usr/bin/python3",
        "遍历当前目录及子目录中的.h文件",
        "遍历当前目录及子目录中的.hpp文件",
        "确保路径以base_path开头，否则跳过",
        "拆解路径并添加到列表，保留最短的路径部分",
        "对拆解后的路径进行排序并去重",
        "获取当前文件夹路径",
        "获取唯一的.h和.hpp文件所在路径集合"
    ],
    "docstrings": [],
    "functions": [
        "find_unique_header_paths",
        "split_and_sort_paths",
        "write_compile_flags_file",
        "main"
    ],
    "classes": []
}