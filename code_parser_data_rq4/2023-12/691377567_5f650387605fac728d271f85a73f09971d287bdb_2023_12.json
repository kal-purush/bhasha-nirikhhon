{
    "identifiers": [
        "ru",
        "nsu",
        "chaiko",
        "java",
        "lang",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Scanner",
        "java",
        "util",
        "inputData",
        "stack",
        "inputString",
        "debug",
        "debug",
        "debug",
        "debug",
        "inputString",
        "debug",
        "debug",
        "debug",
        "inputString",
        "isEmpty",
        "inputString",
        "inputString",
        "inputString",
        "scanner",
        "debug",
        "scanner",
        "inputString",
        "scanner",
        "scanner",
        "hasNext",
        "inputData",
        "add",
        "scanner",
        "next",
        "value",
        "res",
        "value",
        "charAt",
        "value",
        "length",
        "value",
        "value",
        "replace",
        "res",
        "parseDouble",
        "value",
        "PI",
        "res",
        "value",
        "charAt",
        "value",
        "value",
        "replace",
        "value",
        "value",
        "replace",
        "value",
        "value",
        "replace",
        "numbers",
        "value",
        "split",
        "res",
        "parseDouble",
        "numbers",
        "res",
        "parseDouble",
        "numbers",
        "res",
        "res",
        "parseDouble",
        "value",
        "res",
        "elem",
        "builder",
        "builder",
        "append",
        "valueOf",
        "elem",
        "append",
        "builder",
        "append",
        "valueOf",
        "elem",
        "append",
        "builder",
        "toString",
        "readData",
        "inputData",
        "size",
        "elem",
        "inputData",
        "removeLast",
        "elem",
        "charAt",
        "elem",
        "length",
        "stack",
        "push",
        "elem",
        "elem",
        "charAt",
        "elem",
        "charAt",
        "elem",
        "length",
        "stack",
        "push",
        "elem",
        "parseDouble",
        "elem",
        "stack",
        "push",
        "elem",
        "ignored",
        "stack",
        "isEmpty",
        "result",
        "values",
        "values",
        "stack",
        "pop",
        "complexValues",
        "elem",
        "stack",
        "size",
        "values",
        "stack",
        "pop",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "complexValues",
        "stack",
        "size",
        "values",
        "stack",
        "pop",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "complexValues",
        "stack",
        "size",
        "values",
        "stack",
        "pop",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "convertToComplex",
        "values",
        "result",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "result",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "stack",
        "size",
        "values",
        "stack",
        "pop",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "convertToComplex",
        "values",
        "result",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "pow",
        "complexValues",
        "pow",
        "complexValues",
        "result",
        "complexValues",
        "complexValues",
        "complexValues",
        "complexValues",
        "pow",
        "complexValues",
        "pow",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "elem",
        "result",
        "sin",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "elem",
        "result",
        "cos",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "elem",
        "result",
        "sqrt",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "stack",
        "size",
        "values",
        "stack",
        "pop",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "result",
        "complexValues",
        "result",
        "complexValues",
        "i",
        "i",
        "complexValues",
        "i",
        "subtotal1",
        "complexValues",
        "result",
        "complexValues",
        "result",
        "subtotal2",
        "complexValues",
        "result",
        "complexValues",
        "result",
        "result",
        "subtotal1",
        "result",
        "subtotal2",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "complexValues",
        "convertToComplex",
        "values",
        "complexValues",
        "elem",
        "result",
        "log",
        "complexValues",
        "stack",
        "push",
        "wrapToComplex",
        "result",
        "stack",
        "pop"
    ],
    "literals": [
        "\"no input expression\"",
        "\"missed input expression\"",
        "\"\"",
        "\"`\"",
        "\"\"",
        "\"(\"",
        "\"\"",
        "\")\"",
        "\"\"",
        "\",\"",
        "\" \"",
        "\" \"",
        "\"(\"",
        "\",\"",
        "\")\"",
        "\"no number to calculate with\"",
        "\"+\"",
        "\"missed second argument\"",
        "\"-\"",
        "\"missed second argument\"",
        "\"*\"",
        "\"missed second argument\"",
        "\"/\"",
        "\"missed second argument\"",
        "\"sin\"",
        "\"can't apply\"",
        "\"func to complex value\"",
        "\"cos\"",
        "\"can't apply\"",
        "\"func to complex value\"",
        "\"sqrt\"",
        "\"can't apply\"",
        "\"func to complex value\"",
        "\"pow\"",
        "\"missed second argument\"",
        "\"second argument of pow must be rational\"",
        "\"log\"",
        "\"can't apply\"",
        "\"func to complex value\"",
        "\"unsupported function\""
    ],
    "variables": [
        "inputString",
        "scanner"
    ],
    "comments": [
        "` - means degree"
    ],
    "docstrings": [
        "* main class of the task.",
        "* firs classes constructors.",
        "* second classes constructor.",
        "* getting input.",
        "* converts any format number to complex.",
        "* wrapped arrays representation to strings.",
        "* processing input expression."
    ],
    "functions": [
        "Calculator",
        "Calculator",
        "readData",
        "convertToComplex",
        "wrapToComplex",
        "calculateAnswer"
    ],
    "classes": [
        "Calculator"
    ]
}