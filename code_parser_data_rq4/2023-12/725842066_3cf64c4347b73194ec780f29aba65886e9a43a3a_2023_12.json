{
    "identifiers": [
        "gptparser",
        "GptMarkdownFile",
        "typing",
        "Tuple",
        "os",
        "src_path",
        "dst_path",
        "Tuple",
        "os",
        "path",
        "exists",
        "src_path",
        "src_path",
        "os",
        "path",
        "exists",
        "dst_path",
        "os",
        "makedirs",
        "dst_path",
        "src_path",
        "dst_path",
        "src_file_path",
        "os",
        "listdir",
        "src_path",
        "os",
        "path",
        "splitext",
        "src_file_path",
        "ext",
        "nb_total",
        "os",
        "path",
        "join",
        "dst_path",
        "src_file_path",
        "os",
        "path",
        "join",
        "src_path",
        "src_file_path",
        "GptMarkdownFile",
        "parse",
        "src_file_path",
        "ok",
        "gpt",
        "save",
        "dst_file_path",
        "ok",
        "gpt",
        "id",
        "id",
        "id",
        "id",
        "id",
        "name",
        "info",
        "id",
        "name",
        "os",
        "path",
        "basename",
        "src_file_path",
        "info",
        "nb_ok",
        "src_file_path",
        "msg",
        "src_file_path",
        "gpt",
        "nb_ok",
        "nb_total",
        "nb_ok",
        "nb_total",
        "ok",
        "msg"
    ],
    "literals": [
        "f\"Source path '{src_path}' does not exist.\"",
        "f\"Reformatting GPT files in '{src_path}' and saving them to '{dst_path}'...\"",
        "'.md'",
        "f\"; id={id.id}\"",
        "f\", name='{id.name}'\"",
        "''",
        "f\"[+] saved '{os.path.basename(src_file_path)}'{info}\"",
        "f\"[!] failed to save '{src_file_path}': {msg}\"",
        "f\"[!] failed to parse '{src_file_path}': {gpt}\"",
        "f\"Reformatted {nb_ok} out of {nb_total} GPT files.\""
    ],
    "variables": [
        "nb_ok",
        "nb_total",
        "_",
        "ext",
        "dst_file_path",
        "src_file_path",
        "ok",
        "gpt",
        "ok",
        "msg",
        "id",
        "info",
        "info",
        "msg",
        "ok"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n'oneoff.py' is a script that performs one-off operations on the GPT files\n\n- Reformat all the GPT files in the source path and save them to the destination path.\n\n\"\"\"",
        "\"\"\"\n    Reformat all the GPT files in the source path and save them to the destination path.\n    :param src_path: str, path to the source directory.\n    :param dst_path: str, path to the destination directory.\n    \"\"\""
    ],
    "functions": [
        "reformat_gpt_files"
    ],
    "classes": []
}