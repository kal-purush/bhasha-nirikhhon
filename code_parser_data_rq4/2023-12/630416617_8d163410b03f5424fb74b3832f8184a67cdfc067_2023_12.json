{
    "identifiers": [
        "json",
        "common",
        "Parameter",
        "urllib",
        "parse",
        "quote",
        "_errors",
        "ArgumentException",
        "Parameter",
        "client",
        "delivery_token_uid",
        "client",
        "delivery_token_uid",
        "client",
        "client",
        "get",
        "path",
        "headers",
        "client",
        "headers",
        "validate_uid",
        "path",
        "delivery_token_uid",
        "client",
        "get",
        "url",
        "headers",
        "client",
        "headers",
        "data",
        "json",
        "dumps",
        "data",
        "client",
        "post",
        "path",
        "headers",
        "client",
        "headers",
        "data",
        "data",
        "data",
        "validate_uid",
        "path",
        "delivery_token_uid",
        "json",
        "dumps",
        "data",
        "client",
        "put",
        "url",
        "headers",
        "client",
        "headers",
        "data",
        "data",
        "validate_uid",
        "path",
        "delivery_token_uid",
        "client",
        "url",
        "headers",
        "client",
        "headers",
        "delivery_token_uid",
        "ArgumentException"
    ],
    "literals": [
        "\"stacks/delivery_tokens\"",
        "f\"{self.path}/{self.delivery_token_uid}\"",
        "f\"{self.path}/{self.delivery_token_uid}\"",
        "f\"{self.path}/{self.delivery_token_uid}\"",
        "''",
        "\"Delivery Token Uid is required\""
    ],
    "variables": [
        "client",
        "delivery_token_uid",
        "path",
        "url",
        "data",
        "url",
        "data",
        "url"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"This class takes a base URL as an argument when it's initialized, \nwhich is the endpoint for the RESTFUL API that we'll be interacting with.\nThe create(), read(), update(), and delete() methods each correspond to \nthe CRUD operations that can be performed on the API \"\"\"",
        "\"\"\"\n    This class takes a base URL as an argument when it's initialized, \n    which is the endpoint for the RESTFUL API that\n    we'll be interacting with. The create(), read(), update(), and delete() \n    methods each correspond to the CRUD \n    operations that can be performed on the API \"\"\"",
        "\"\"\"\n        The \"Get all delivery tokens\" request returns the details of all the delivery tokens created in a stack.\n        :return: Json, with delivery_token details.\n\n        -------------------------------\n        [Example:]\n\n            >>> import contentstack_management\n            >>> client = contentstack_management.Client(authtoken='your_authtoken')\n            >>> result = client.stack(\"api_key\").delivery_token().find().json()\n\n        -------------------------------\n        \"\"\"",
        "\"\"\"\n        The \"Get a single delivery token\" request returns the details of all the delivery tokens created in a stack.\n        :return: Json, with delivery_token details.\n        -------------------------------\n        [Example:]\n\n            >>> import contentstack_management\n            >>> client = contentstack_management.Client(authtoken='your_authtoken')\n            >>> result = client.stack('api_key').delivery_token('delivery_token_uid').fetch().json()\n\n        -------------------------------\n        \"\"\"",
        "\"\"\"\n        The Create delivery token request creates a delivery token in the stack.\n\n        :param data: The `data` parameter is the payload that you want to send in the request body. It\n        should be a dictionary or a JSON serializable object that you want to send as the request body\n        :return: Json, with delivery_token details.\n\n        -------------------------------\n        [Example:]\n            >>> data ={\n            >>>        \"token\":{\n            >>>            \"name\":\"Test\",\n            >>>            \"description\":\"This is a demo token.\",\n            >>>            \"scope\":[\n            >>>                {\n            >>>                    \"module\":\"environment\",\n            >>>                    \"environments\":[\n            >>>                        \"production\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                },\n            >>>                {\n            >>>                    \"module\":\"branch\",\n            >>>                    \"branches\":[\n            >>>                        \"main\",\n            >>>                        \"development\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                },\n            >>>                {\n            >>>                    \"module\":\"branch_alias\",\n            >>>                    \"branch_aliases\":[\n            >>>                        \"deploy\",\n            >>>                        \"release\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                }\n            >>>            ]\n            >>>        }\n            >>>    }\n            >>> import contentstack_management\n            >>> client = contentstack_management.Client(authtoken='your_authtoken')\n            >>> result = client.stack('api_key').delivery_token().create(data).json()\n\n        -------------------------------\n        \"\"\"",
        "\"\"\"\n        The \"Update delivery token\" request lets you update the details of a delivery token.\n\n        :param data: The `data` parameter is the data that you want to update. It should be a dictionary\n        or an object that can be serialized to JSON\n        :return: Json, with updated delivery_token details.\n        -------------------------------\n        [Example:]\n            >>> data = {\n            >>>        \"token\":{\n            >>>            \"name\":\"Test\",\n            >>>            \"description\":\"This is a updated token.\",\n            >>>            \"scope\":[\n            >>>                {\n            >>>                    \"module\":\"environment\",\n            >>>                    \"environments\":[\n            >>>                        \"production\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                },\n            >>>                {\n            >>>                    \"module\":\"branch\",\n            >>>                    \"branches\":[\n            >>>                        \"main\",\n            >>>                        \"development\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                },\n            >>>                {\n            >>>                    \"module\":\"branch_alias\",\n            >>>                    \"branch_aliases\":[\n            >>>                        \"deploy\"\n            >>>                    ],\n            >>>                    \"acl\":{\n            >>>                        \"read\":true\n            >>>                    }\n            >>>                }\n            >>>            ]\n            >>>        }\n            >>>    }\n            >>> import contentstack_management\n            >>> client = contentstack_management.Client(authtoken='your_authtoken')\n            >>> result = client.stack('api_key').delivery_token(\"delivery_token_uid\").update(data).json()\n\n        -------------------------------\n        \"\"\"",
        "\"\"\"\n        The \"Delete delivery token\" request deletes a specific delivery token.\n\n        :return: The delete() method returns the status code and message as a response.\n\n        -------------------------------\n        [Example:]\n\n            >>> import contentstack_management\n            >>> client = contentstack_management.Client(authtoken='your_authtoken')\n            >>> result = client.stack('api_key').delivery_token('delivery_token_uid').delete().json()\n\n        -------------------------------\n        \"\"\""
    ],
    "functions": [
        "find",
        "fetch",
        "create",
        "update",
        "validate_uid"
    ],
    "classes": [
        "DeliveryToken"
    ]
}