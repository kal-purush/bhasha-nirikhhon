{
    "identifiers": [
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "duty",
        "com",
        "google",
        "common",
        "Optional",
        "org",
        "apache",
        "druid",
        "client",
        "DataSourcesSnapshot",
        "org",
        "apache",
        "druid",
        "java",
        "util",
        "common",
        "DateTimes",
        "org",
        "apache",
        "druid",
        "java",
        "util",
        "common",
        "Intervals",
        "org",
        "apache",
        "druid",
        "java",
        "util",
        "common",
        "granularity",
        "Granularities",
        "org",
        "apache",
        "druid",
        "java",
        "util",
        "common",
        "logger",
        "Logger",
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "DruidCoordinatorRuntimeParams",
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "stats",
        "CoordinatorRunStats",
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "stats",
        "Dimension",
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "stats",
        "RowKey",
        "org",
        "apache",
        "druid",
        "server",
        "coordinator",
        "stats",
        "Stats",
        "org",
        "apache",
        "druid",
        "timeline",
        "DataSegment",
        "org",
        "apache",
        "druid",
        "timeline",
        "Partitions",
        "org",
        "apache",
        "druid",
        "timeline",
        "SegmentId",
        "org",
        "apache",
        "druid",
        "timeline",
        "SegmentTimeline",
        "org",
        "apache",
        "druid",
        "timeline",
        "partition",
        "TombstoneShardSpec",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "log",
        "deleteHandler",
        "deleteHandler",
        "deleteHandler",
        "deleteHandler",
        "Override",
        "dataSourcesSnapshot",
        "getDataSourcesSnapshot",
        "datasourceToNonOvershadowedEternityTombstones",
        "determineNonOvershadowedEternityTombstones",
        "dataSourcesSnapshot",
        "datasourceToNonOvershadowedEternityTombstones",
        "size",
        "log",
        "debug",
        "log",
        "debug",
        "datasourceToNonOvershadowedEternityTombstones",
        "size",
        "datasourceToNonOvershadowedEternityTombstones",
        "stats",
        "getCoordinatorStats",
        "datasourceToNonOvershadowedEternityTombstones",
        "forEach",
        "datasource",
        "nonOvershadowedEternityTombstones",
        "datasourceKey",
        "RowKey",
        "of",
        "Dimension",
        "DATASOURCE",
        "datasource",
        "stats",
        "add",
        "Stats",
        "Segments",
        "UNNEEDED_ETERNITY_TOMBSTONE",
        "datasourceKey",
        "nonOvershadowedEternityTombstones",
        "size",
        "unusedCount",
        "deleteHandler",
        "markSegmentsAsUnused",
        "nonOvershadowedEternityTombstones",
        "log",
        "info",
        "unusedCount",
        "nonOvershadowedEternityTombstones",
        "datasource",
        "dataSourcesSnapshot",
        "datasourceToNonOvershadowedEternityTombstones",
        "dataSourcesSnapshot",
        "getDataSourcesMap",
        "keySet",
        "forEach",
        "datasource",
        "usedSegmentsTimeline",
        "dataSourcesSnapshot",
        "getUsedSegmentsTimelinesPerDataSource",
        "get",
        "datasource",
        "usedNonOvershadowedSegments",
        "Optional",
        "fromNullable",
        "usedSegmentsTimeline",
        "transform",
        "timeline",
        "timeline",
        "findNonOvershadowedObjectsInInterval",
        "Intervals",
        "ETERNITY",
        "Partitions",
        "ONLY_COMPLETE",
        "usedNonOvershadowedSegments",
        "isPresent",
        "usedNonOvershadowedSegments",
        "get",
        "forEach",
        "candidateSegment",
        "isNewGenerationEternityTombstone",
        "candidateSegment",
        "overlaps",
        "dataSourcesSnapshot",
        "getOvershadowedSegments",
        "stream",
        "overshadowedSegment",
        "candidateSegment",
        "getDataSource",
        "equals",
        "overshadowedSegment",
        "getDataSource",
        "anyMatch",
        "overshadowedSegment",
        "candidateSegment",
        "getInterval",
        "overlaps",
        "overshadowedSegment",
        "getInterval",
        "overlaps",
        "datasourceToNonOvershadowedEternityTombstones",
        "computeIfAbsent",
        "datasource",
        "ds",
        "add",
        "candidateSegment",
        "getId",
        "datasourceToNonOvershadowedEternityTombstones",
        "segment",
        "segment",
        "isTombstone",
        "segment",
        "getShardSpec",
        "getNumCorePartitions",
        "DateTimes",
        "MIN",
        "equals",
        "segment",
        "getInterval",
        "getStart",
        "DateTimes",
        "MAX",
        "equals",
        "segment",
        "getInterval",
        "getEnd"
    ],
    "literals": [
        "\"No non-overshadowed eternity tombstones found.\"",
        "\"Found [%d] datasource containing non-overshadowed eternity tombstones[%s]\"",
        "\"Successfully marked [%d] non-overshadowed eternity tombstones[%s] of datasource[%s] as unused.\""
    ],
    "variables": [
        "deleteHandler"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* Mark eternity tombstones not overshadowed by currently served segments as unused. A candidate segment must fit all\n * the criteria:\n * <li> It is a tombstone that starts at {@link DateTimes#MIN} or ends at {@link DateTimes#MAX} </li>\n * <li> It does not overlap with any overshadowed segment in the datasource </li>\n * <li> It has has 0 core partitions i.e., {@link TombstoneShardSpec#getNumCorePartitions()} == 0</li>\n *\n * <p>\n * Only infinite-interval tombstones are considered as candidate segments in this duty because they\n * don't honor the preferred segment granularity specified at ingest time to cover an underlying segment with\n * {@link Granularities#ALL} as it can generate too many segments per time chunk and cause an OOM. The infinite-interval\n * tombstones make it hard to append data on the end of a data set that started out with an {@link Granularities#ALL} eternity\n * and then moved to actual time grains, so the compromise is that the coordinator will remove these segments as long as it\n * doesn't overlap any other segment.\n * </p>\n * <p>\n * The overlapping condition is necessary as a candidate segment can overlap with an overshadowed segment, and the latter\n * needs to be marked as unused first by {@link MarkOvershadowedSegmentsAsUnused} duty before the tombstone candidate\n * can be marked as unused by {@link MarkEternityTombstonesAsUnused} duty.\n *</p>\n * <p>\n * Only tombstones with 0 core partitions is considered as candidate segments. Earlier generation tombstones with 1 core\n * partition (i.e., {@link TombstoneShardSpec#getNumCorePartitions()} == 1) are ignored by this duty because it can potentially\n * cause data loss in a concurrent append and replace scenario and needs to be manually cleaned up. See this\n * <a href=\"https://github.com/apache/druid/pull/15379\">for details</a>.\n * </p>",
        "* Computes the set of unneeded eternity tombstones per datasource using the datasources snapshot. The computation is\n   * as follows:\n   *\n   * <li> Determine the set of used and non-overshadowed segments from the used segments' timeline. </li>\n   * <li> For each such candidate segment that is a tombstone with an infinite start or end, look at the set of overshadowed\n   * segments to see if any of the intervals overlaps with the candidate segment.\n   * <li> If there is no overlap, add the candidate segment to the eternity segments result set. </li>\n   * There can at most be two such candidate tombstones per datasource  -- one that starts at {@link DateTimes#MIN}\n   * and another that ends at {@link DateTimes#MAX}. </li>\n   * </p>\n   *\n   * @param dataSourcesSnapshot the datasources snapshot for segments timeline\n   * @return the set of non-overshadowed eternity tombstones grouped by datasource"
    ],
    "functions": [
        "MarkEternityTombstonesAsUnused",
        "DruidCoordinatorRuntimeParams",
        "run",
        "determineNonOvershadowedEternityTombstones",
        "isNewGenerationEternityTombstone"
    ],
    "classes": [
        "MarkEternityTombstonesAsUnused"
    ]
}