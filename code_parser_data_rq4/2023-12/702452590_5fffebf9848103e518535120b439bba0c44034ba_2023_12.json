{
    "identifiers": [
        "Router",
        "Request",
        "Response",
        "Session",
        "driver",
        "User",
        "OkErrorResponse",
        "FriendsErrorResponse",
        "Router",
        "session",
        "res",
        "userId",
        "session",
        "userExistsResult",
        "session",
        "res",
        "json",
        "userExistsResult",
        "friendshipRouter",
        "req",
        "res",
        "driver",
        "req",
        "userExists",
        "session",
        "res",
        "userId",
        "user",
        "session",
        "res",
        "session",
        "session",
        "friendQuery",
        "f",
        "f",
        "res",
        "err",
        "err",
        "res",
        "err",
        "friendshipRouter",
        "req",
        "res",
        "driver",
        "req",
        "userExists",
        "session",
        "res",
        "userId",
        "user",
        "session",
        "res",
        "session",
        "session",
        "friendRequests",
        "f",
        "f",
        "res",
        "err",
        "err",
        "res",
        "err",
        "friendshipRouter",
        "req",
        "res",
        "driver",
        "req",
        "req",
        "userExists",
        "session",
        "res",
        "userId1",
        "user",
        "session",
        "res",
        "session",
        "session",
        "session",
        "res",
        "err",
        "err",
        "res",
        "err",
        "friendshipRouter",
        "req",
        "res",
        "driver",
        "req",
        "req",
        "userExists",
        "session",
        "res",
        "userId1",
        "user",
        "session",
        "res",
        "session",
        "session",
        "friendRequest",
        "f",
        "f",
        "res",
        "err",
        "err",
        "res",
        "err",
        "friendshipRouter",
        "req",
        "res",
        "driver",
        "req",
        "req",
        "userExists",
        "session",
        "res",
        "userId1",
        "user",
        "session",
        "res",
        "session",
        "session",
        "session",
        "res",
        "err",
        "err",
        "res",
        "err",
        "friendshipRouter"
    ],
    "literals": [
        "\"express\"",
        "\"neo4j-driver\"",
        "\"../driver/driver\"",
        "\"../models/User\"",
        "\"../types/userResponse\"",
        "string",
        "MATCH (u:User {id: $userId}) RETURN u",
        "\"error\"",
        "\"not found\"",
        "\"u\"",
        "\"/:userId/friends\"",
        "\"json\"",
        "MATCH (u:User {id: $userId})-[:IS_FRIENDS_WITH]->(f:User)-[:IS_FRIENDS_WITH]->(u) RETURN DISTINCT f",
        "\"f\"",
        "\"ok\"",
        "\"Error:\"",
        "\"error\"",
        "\"/:userId/friend-requests\"",
        "\"json\"",
        "MATCH (u:User {id: $userId})<-[:SEND_INVITE_TO]-(f:User)\n          RETURN DISTINCT f",
        "\"f\"",
        "\"ok\"",
        "\"Error:\"",
        "\"error\"",
        "\"/:userId1/remove/:userId2\"",
        "\"json\"",
        "MATCH (a:User {id: $userId1})-[r:IS_FRIENDS_WITH]-(b:User {id: $userId2})\n          DELETE r",
        "MATCH (a:User {id: $userId1})-[r:SEND_INVITE_TO]-(b:User {id: $userId2})\n          DELETE r",
        "\"ok\"",
        "\"Error:\"",
        "\"error\"",
        "\"/:userId1/add/:userId2\"",
        "\"json\"",
        "MATCH (a:User {id: $userId1}), (b:User {id: $userId2})\n          MERGE (a)-[:SEND_INVITE_TO]->(b)",
        "\"f\"",
        "\"ok\"",
        "\"Error:\"",
        "\"error\"",
        "\"/:userId1/accept/:userId2\"",
        "\"json\"",
        "MATCH (a:User {id: $userId1})-[r:SEND_INVITE_TO]-(b:User {id: $userId2})\n          DELETE r",
        "MATCH (a:User {id: $userId1}), (b:User {id: $userId2})\n          MERGE (a)-[:IS_FRIENDS_WITH]->(b)\n          MERGE (b)-[:IS_FRIENDS_WITH]->(a)",
        "\"ok\"",
        "\"Error:\"",
        "\"error\""
    ],
    "variables": [
        "friendshipRouter",
        "userExistsResult",
        "json",
        "session",
        "userId",
        "user",
        "friendQuery",
        "friends",
        "session",
        "userId",
        "user",
        "friendRequests",
        "friends",
        "session",
        "userId1",
        "userId2",
        "user",
        "session",
        "userId1",
        "userId2",
        "user",
        "friendRequest",
        "friends",
        "session",
        "userId1",
        "userId2",
        "user"
    ],
    "comments": [
        "Deletes all types of relations",
        "Delete every SEND_INVITE_TO between 2 users",
        "Add IS_FRIENDS_WITH both ways"
    ],
    "docstrings": [],
    "functions": [
        "userExists"
    ],
    "classes": []
}