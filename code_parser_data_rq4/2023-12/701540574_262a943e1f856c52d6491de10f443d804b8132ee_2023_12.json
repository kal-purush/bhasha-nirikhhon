{
    "identifiers": [
        "argparse",
        "torch",
        "tqdm",
        "tqdm",
        "transformers",
        "AutoTokenizer",
        "AutoModelForCausalLM",
        "ferret",
        "model",
        "utils",
        "auto_upgrade",
        "base_model_path",
        "target_model_path",
        "delta_path",
        "hub_repo_id",
        "AutoModelForCausalLM",
        "from_pretrained",
        "base_model_path",
        "torch_dtype",
        "torch",
        "float16",
        "low_cpu_mem_usage",
        "auto_upgrade",
        "target_model_path",
        "AutoModelForCausalLM",
        "from_pretrained",
        "target_model_path",
        "torch_dtype",
        "torch",
        "float16",
        "low_cpu_mem_usage",
        "name",
        "param",
        "tqdm",
        "target",
        "state_dict",
        "items",
        "desc",
        "name",
        "state_dict",
        "name",
        "exclude_name_lists",
        "name",
        "param",
        "data",
        "shape",
        "state_dict",
        "name",
        "shape",
        "param",
        "data",
        "state_dict",
        "name",
        "name",
        "name",
        "param",
        "data",
        "shape",
        "state_dict",
        "name",
        "shape",
        "state_dict",
        "name",
        "param",
        "data",
        "bparam",
        "shape",
        "bparam",
        "shape",
        "bparam",
        "hub_repo_id",
        "hub_repo_id",
        "target",
        "save_pretrained",
        "delta_path",
        "kwargs",
        "AutoTokenizer",
        "from_pretrained",
        "target_model_path",
        "target_tokenizer",
        "save_pretrained",
        "delta_path",
        "kwargs",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "required",
        "parser",
        "add_argument",
        "required",
        "parser",
        "add_argument",
        "required",
        "parser",
        "add_argument",
        "parser",
        "parse_args",
        "make_delta",
        "args",
        "base_model_path",
        "args",
        "target_model_path",
        "args",
        "delta_path",
        "args",
        "hub_repo_id"
    ],
    "literals": [
        "'model.mm_projector.weight'",
        "'model.mm_projector.bias'",
        "'model.region_geo_sampler.agg_projector_list.0.net.0.bias'",
        "'model.region_geo_sampler.agg_projector_list.0.net.0.weight'",
        "'model.region_geo_sampler.agg_projector_list.0.norm.bias'",
        "'model.region_geo_sampler.agg_projector_list.0.norm.weight'",
        "'model.region_geo_sampler.agg_projector_list.1.net.0.bias'",
        "'model.region_geo_sampler.agg_projector_list.1.net.0.weight'",
        "'model.region_geo_sampler.agg_projector_list.1.norm.bias'",
        "'model.region_geo_sampler.agg_projector_list.1.norm.weight'",
        "'model.region_geo_sampler.diff_projector_list.0.bias'",
        "'model.region_geo_sampler.diff_projector_list.0.weight'",
        "'model.region_geo_sampler.diff_projector_list.1.bias'",
        "'model.region_geo_sampler.diff_projector_list.1.weight'",
        "'model.region_geo_sampler.dim_projector.bias'",
        "'model.region_geo_sampler.dim_projector.weight'",
        "'model.region_geo_sampler.flatten_projector.bias'",
        "'model.region_geo_sampler.flatten_projector.weight'",
        "\"Loading base model\"",
        "\"Loading target model\"",
        "\"Calculating delta\"",
        "\"Calculating delta\"",
        "f'{name} not in base model'",
        "'model.embed_tokens.weight'",
        "'lm_head.weight'",
        "f'{name} dimension mismatch: {param.data.shape} vs {base.state_dict()[name].shape}'",
        "\"Saving delta\"",
        "\"push_to_hub\"",
        "\"repo_id\"",
        "\"__main__\"",
        "\"--base-model-path\"",
        "\"--target-model-path\"",
        "\"--delta-path\"",
        "\"--hub-repo-id\""
    ],
    "variables": [
        "exclude_name_lists",
        "target",
        "bparam",
        "kwargs",
        "kwargs",
        "target_tokenizer",
        "parser",
        "args"
    ],
    "comments": [
        "all the parameters inside the geosampler and mm projector"
    ],
    "docstrings": [
        "\"\"\"\nUsage:\n# 7B\npython3 -m ferret.model.make_delta \\\n    --base ./model/vicuna-7b-v1-3 \\\n    --target ./checkpoints/ferret_ft_clipL336_vicunaV1-3-7b_3Ep_dataV16_RSamplerV2/checkpoint-final \\\n    --delta ./checkpoints/ferret_ft_clipL336_vicunaV1-3-7b_3Ep_dataV16_RSamplerV2/ferret-7b-delta\n\n# 13B\npython3 -m ferret.model.make_delta \\\n    --base ./model/vicuna-13b-v1-3 \\\n    --target ./checkpoints/ferret_ft_clipL336_vicunaV1-3-13b_3Ep_dataV16_RSamplerV2/checkpoint-final \\\n    --delta ./checkpoints/ferret_ft_clipL336_vicunaV1-3-13b_3Ep_dataV16_RSamplerV2/ferret-13b-delta\n\"\"\""
    ],
    "functions": [
        "make_delta"
    ],
    "classes": []
}