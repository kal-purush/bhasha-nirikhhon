{
    "identifiers": [
        "cmd",
        "sys",
        "models",
        "base_model",
        "BaseModel",
        "models",
        "storage",
        "models",
        "user",
        "User",
        "models",
        "place",
        "Place",
        "models",
        "state",
        "State",
        "models",
        "city",
        "City",
        "models",
        "amenity",
        "Amenity",
        "models",
        "review",
        "Review",
        "cmd",
        "Cmd",
        "sys",
        "__stdin__",
        "isatty",
        "BaseModel",
        "User",
        "Place",
        "State",
        "City",
        "Amenity",
        "Review",
        "sys",
        "__stdin__",
        "isatty",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "pline",
        "pline",
        "find",
        "pline",
        "pline",
        "find",
        "pline",
        "find",
        "_cmd",
        "HBNBCommand",
        "dot_cmds",
        "pline",
        "pline",
        "find",
        "pline",
        "find",
        "pline",
        "pline",
        "partition",
        "pline",
        "replace",
        "pline",
        "strip",
        "pline",
        "pline",
        "pline",
        "eval",
        "pline",
        "pline",
        "pline",
        "replace",
        "join",
        "_cmd",
        "_cls",
        "_id",
        "_args",
        "mess",
        "line",
        "stop",
        "line",
        "sys",
        "__stdin__",
        "isatty",
        "end",
        "stop",
        "command",
        "exit",
        "arg",
        "exit",
        "args",
        "args",
        "SyntaxError",
        "args",
        "split",
        "arg",
        "arg_list",
        "arg",
        "split",
        "eval",
        "arg_splited",
        "arg_splited",
        "arg_splited",
        "replace",
        "replace",
        "arg_splited",
        "arg_splited",
        "SyntaxError",
        "NameError",
        "HBNBCommand",
        "classes",
        "arg_list",
        "kw",
        "new_instance",
        "save",
        "new_instance",
        "id",
        "args",
        "args",
        "partition",
        "c_id",
        "c_id",
        "c_id",
        "partition",
        "c_name",
        "c_name",
        "HBNBCommand",
        "classes",
        "c_id",
        "c_name",
        "c_id",
        "storage",
        "_FileStorage__objects",
        "key",
        "KeyError",
        "args",
        "args",
        "partition",
        "c_id",
        "c_id",
        "c_id",
        "partition",
        "c_name",
        "c_name",
        "HBNBCommand",
        "classes",
        "c_id",
        "c_name",
        "c_id",
        "storage",
        "all",
        "key",
        "storage",
        "save",
        "KeyError",
        "args",
        "args",
        "args",
        "split",
        "args",
        "HBNBCommand",
        "classes",
        "k",
        "v",
        "storage",
        "_FileStorage__objects",
        "items",
        "k",
        "split",
        "args",
        "print_list",
        "append",
        "v",
        "k",
        "v",
        "storage",
        "_FileStorage__objects",
        "items",
        "print_list",
        "append",
        "v",
        "print_list",
        "args",
        "k",
        "v",
        "storage",
        "_FileStorage__objects",
        "items",
        "args",
        "k",
        "split",
        "count",
        "count",
        "args",
        "args",
        "partition",
        "args",
        "args",
        "c_name",
        "HBNBCommand",
        "classes",
        "args",
        "partition",
        "args",
        "args",
        "c_name",
        "c_id",
        "key",
        "storage",
        "all",
        "args",
        "args",
        "eval",
        "args",
        "eval",
        "args",
        "k",
        "v",
        "kwargs",
        "items",
        "args",
        "append",
        "k",
        "args",
        "append",
        "v",
        "args",
        "args",
        "args",
        "args",
        "find",
        "args",
        "second_quote",
        "args",
        "second_quote",
        "args",
        "partition",
        "att_name",
        "args",
        "args",
        "args",
        "args",
        "args",
        "args",
        "find",
        "att_val",
        "args",
        "args",
        "partition",
        "att_name",
        "att_val",
        "storage",
        "all",
        "key",
        "i",
        "att_name",
        "args",
        "i",
        "args",
        "i",
        "att_name",
        "att_val",
        "att_name",
        "HBNBCommand",
        "types",
        "HBNBCommand",
        "types",
        "att_name",
        "att_val",
        "new_dict",
        "__dict__",
        "update",
        "att_name",
        "att_val",
        "new_dict",
        "save",
        "HBNBCommand",
        "cmdloop"
    ],
    "literals": [
        "'(hbnb) '",
        "''",
        "'BaseModel'",
        "'User'",
        "'Place'",
        "'State'",
        "'City'",
        "'Amenity'",
        "'Review'",
        "'all'",
        "'count'",
        "'show'",
        "'destroy'",
        "'update'",
        "'number_rooms'",
        "'number_bathrooms'",
        "'max_guest'",
        "'price_by_night'",
        "'latitude'",
        "'longitude'",
        "'(hbnb)'",
        "''",
        "'.'",
        "'('",
        "')'",
        "'.'",
        "'.'",
        "'('",
        "'('",
        "')'",
        "', '",
        "'\\\"'",
        "''",
        "'{'",
        "'}'",
        "','",
        "''",
        "' '",
        "'(hbnb) '",
        "''",
        "\"Exits the program with formatting\\n\"",
        "\"Exits the program without formatting\\n\"",
        "\" \"",
        "\"=\"",
        "\"_\"",
        "\" \"",
        "'\"'",
        "'\\\\\"'",
        "\"** class name missing **\"",
        "\"** class doesn't exist **\"",
        "\"Creates a class of any type\"",
        "\"[Usage]: create <className>\\n\"",
        "\" \"",
        "' '",
        "' '",
        "\"** class name missing **\"",
        "\"** class doesn't exist **\"",
        "\"** instance id missing **\"",
        "\".\"",
        "\"** no instance found **\"",
        "\"Shows an individual instance of a class\"",
        "\"[Usage]: show <className> <objectId>\\n\"",
        "\" \"",
        "' '",
        "' '",
        "\"** class name missing **\"",
        "\"** class doesn't exist **\"",
        "\"** instance id missing **\"",
        "\".\"",
        "\"** no instance found **\"",
        "\"Destroys an individual instance of a class\"",
        "\"[Usage]: destroy <className> <objectId>\\n\"",
        "' '",
        "\"** class doesn't exist **\"",
        "'.'",
        "\"Shows all objects, or all of a class\"",
        "\"[Usage]: all <className>\\n\"",
        "'.'",
        "\"Usage: count <class_name>\"",
        "''",
        "\" \"",
        "\"** class name missing **\"",
        "\"** class doesn't exist **\"",
        "\" \"",
        "\"** instance id missing **\"",
        "\".\"",
        "\"** no instance found **\"",
        "'{'",
        "'}'",
        "'\\\"'",
        "'\\\"'",
        "' '",
        "' '",
        "'\\\"'",
        "'\\\"'",
        "' '",
        "\"** attribute name missing **\"",
        "\"** value missing **\"",
        "\"Updates an object with new information\"",
        "\"Usage: update <className> <id> <attName> <attVal>\\n\"",
        "\"__main__\""
    ],
    "variables": [
        "prompt",
        "classes",
        "dot_cmds",
        "types",
        "_cmd",
        "_cls",
        "_id",
        "_args",
        "pline",
        "_cls",
        "_cmd",
        "pline",
        "pline",
        "_id",
        "pline",
        "_args",
        "_args",
        "line",
        "arg_list",
        "kw",
        "arg_splited",
        "arg_splited",
        "arg_splited",
        "kw",
        "new_instance",
        "c_name",
        "c_id",
        "c_id",
        "key",
        "c_name",
        "c_id",
        "c_id",
        "key",
        "print_list",
        "args",
        "count",
        "c_name",
        "c_id",
        "att_name",
        "att_val",
        "kwargs",
        "args",
        "c_name",
        "args",
        "c_id",
        "key",
        "kwargs",
        "args",
        "args",
        "second_quote",
        "att_name",
        "args",
        "args",
        "att_name",
        "att_val",
        "att_val",
        "args",
        "new_dict",
        "att_val",
        "att_val"
    ],
    "comments": [
        "!/usr/bin/python3",
        "determines prompt for interactive/non-interactive modes",
        "initialize line elements",
        "scan for general formating - i.e '.', '(', ')'",
        "parse line left to right",
        "parsed line",
        "isolate <class name>",
        "isolate and validate <command>",
        "if parantheses contain arguments, parse them",
        "partition args: (<id>, [<delim>], [<*args>])",
        "pline convert to tuple",
        "isolate _id, stripping quotes",
        "possible bug here:",
        "empty quotes register as empty _id when replaced",
        "if arguments exist beyond _id",
        "pline is now str",
        "check for *args or **kwargs",
        "_args = _args.replace('\\\"', '')",
        "guard against trailing args",
        "remove possible trailing args",
        "isolate cls from id/args, ex: (<cls>, delim, <id/args>)",
        "class name not present",
        "class name invalid",
        "isolate id from args",
        "id not present",
        "generate key from class and id",
        "determine if key is present",
        "first determine if kwargs or args",
        "reformat kwargs into list, ex: [<name>, <value>, ...]",
        "isolate args",
        "check for quoted arg",
        "if att_name was not quoted arg",
        "check for quoted val arg",
        "if att_val was not quoted arg",
        "retrieve dictionary of current objects",
        "iterate through attr names and values",
        "block only runs on even iterations",
        "following item is value",
        "check for att_name",
        "check for att_value",
        "type cast as necessary",
        "update dictionary with name, value pair",
        "save updates to file"
    ],
    "docstrings": [
        "\"\"\" Console Module \"\"\"",
        "\"\"\" Contains the functionality for the HBNB console\"\"\"",
        "\"\"\"Prints if isatty is false\"\"\"",
        "\"\"\"Reformat command line for advanced command syntax.\n\n        Usage: <class name>.<command>([<id> [<*args> or <**kwargs>]])\n        (Brackets denote optional fields in usage example.)\n        \"\"\"",
        "\"\"\"Prints if isatty is false\"\"\"",
        "\"\"\" Method to exit the HBNB console\"\"\"",
        "\"\"\" Prints the help documentation for quit  \"\"\"",
        "\"\"\" Handles EOF to exit program \"\"\"",
        "\"\"\" Prints the help documentation for EOF \"\"\"",
        "\"\"\" Overrides the emptyline method of CMD \"\"\"",
        "\"\"\" Create an object of any class\"\"\"",
        "\"\"\" Help information for the create method \"\"\"",
        "\"\"\" Method to show an individual object \"\"\"",
        "\"\"\" Help information for the show command \"\"\"",
        "\"\"\" Destroys a specified object \"\"\"",
        "\"\"\" Help information for the destroy command \"\"\"",
        "\"\"\" Shows all objects, or all objects of a class\"\"\"",
        "\"\"\" Help information for the all command \"\"\"",
        "\"\"\"Count current number of class instances\"\"\"",
        "\"\"\" \"\"\"",
        "\"\"\" Updates a certain object with new info \"\"\"",
        "\"\"\" Help information for the update class \"\"\""
    ],
    "functions": [
        "preloop",
        "precmd",
        "postcmd",
        "do_quit",
        "help_quit",
        "do_EOF",
        "help_EOF",
        "emptyline",
        "do_create",
        "help_create",
        "do_show",
        "help_show",
        "do_destroy",
        "help_destroy",
        "do_all",
        "help_all",
        "do_count",
        "help_count",
        "do_update",
        "help_update"
    ],
    "classes": [
        "HBNBCommand"
    ]
}