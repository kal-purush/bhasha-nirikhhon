{
    "identifiers": [
        "com",
        "windanesz",
        "ancientspellcraft",
        "item",
        "com",
        "windanesz",
        "ancientspellcraft",
        "AncientSpellcraft",
        "com",
        "windanesz",
        "ancientspellcraft",
        "Settings",
        "com",
        "windanesz",
        "ancientspellcraft",
        "registry",
        "ASItems",
        "com",
        "windanesz",
        "ancientspellcraft",
        "registry",
        "ASSpells",
        "com",
        "windanesz",
        "ancientspellcraft",
        "registry",
        "ASTabs",
        "com",
        "windanesz",
        "ancientspellcraft",
        "spell",
        "IRunicHammerSpell",
        "electroblob",
        "wizardry",
        "Wizardry",
        "electroblob",
        "wizardry",
        "constants",
        "Constants",
        "electroblob",
        "wizardry",
        "data",
        "IStoredVariable",
        "electroblob",
        "wizardry",
        "data",
        "Persistence",
        "electroblob",
        "wizardry",
        "data",
        "SpellGlyphData",
        "electroblob",
        "wizardry",
        "data",
        "WizardData",
        "electroblob",
        "wizardry",
        "SpellCastEvent",
        "electroblob",
        "wizardry",
        "item",
        "IManaStoringItem",
        "electroblob",
        "wizardry",
        "item",
        "ISpellCastingItem",
        "electroblob",
        "wizardry",
        "item",
        "IWorkbenchItem",
        "electroblob",
        "wizardry",
        "item",
        "ItemWand",
        "electroblob",
        "wizardry",
        "packet",
        "PacketCastSpell",
        "electroblob",
        "wizardry",
        "packet",
        "WizardryPacketHandler",
        "electroblob",
        "wizardry",
        "registry",
        "WizardryItems",
        "electroblob",
        "wizardry",
        "registry",
        "WizardryRecipes",
        "electroblob",
        "wizardry",
        "spell",
        "Spell",
        "electroblob",
        "wizardry",
        "util",
        "SpellModifiers",
        "electroblob",
        "wizardry",
        "util",
        "WandHelper",
        "net",
        "minecraft",
        "client",
        "Minecraft",
        "net",
        "minecraft",
        "client",
        "resources",
        "I18n",
        "net",
        "minecraft",
        "client",
        "settings",
        "GameSettings",
        "net",
        "minecraft",
        "entity",
        "Entity",
        "net",
        "minecraft",
        "entity",
        "EntityLivingBase",
        "net",
        "minecraft",
        "entity",
        "player",
        "EntityPlayer",
        "net",
        "minecraft",
        "inventory",
        "Slot",
        "net",
        "minecraft",
        "item",
        "EnumAction",
        "net",
        "minecraft",
        "item",
        "Item",
        "net",
        "minecraft",
        "item",
        "ItemStack",
        "net",
        "minecraft",
        "util",
        "ActionResult",
        "net",
        "minecraft",
        "util",
        "EnumActionResult",
        "net",
        "minecraft",
        "util",
        "EnumHand",
        "net",
        "minecraft",
        "util",
        "math",
        "BlockPos",
        "net",
        "minecraft",
        "util",
        "text",
        "Style",
        "net",
        "minecraft",
        "util",
        "text",
        "TextFormatting",
        "net",
        "minecraft",
        "world",
        "World",
        "net",
        "minecraftforge",
        "common",
        "MinecraftForge",
        "net",
        "minecraftforge",
        "fml",
        "common",
        "Mod",
        "net",
        "minecraftforge",
        "fml",
        "common",
        "network",
        "simpleimpl",
        "IMessage",
        "net",
        "minecraftforge",
        "fml",
        "relauncher",
        "Side",
        "net",
        "minecraftforge",
        "fml",
        "relauncher",
        "SideOnly",
        "javax",
        "annotation",
        "java",
        "util",
        "com",
        "windanesz",
        "ancientspellcraft",
        "item",
        "WizardClassWeaponHelper",
        "getDistributedCost",
        "Mod",
        "EventBusSubscriber",
        "TOME_BASE_SPELL_SLOTS",
        "LAST_POS",
        "IStoredVariable",
        "StoredVariable",
        "ofBlockPos",
        "Persistence",
        "NEVER",
        "MANA_AVAILABLE_TAG",
        "setCreativeTab",
        "ASTabs",
        "ANCIENTSPELLCRAFT_GEAR",
        "setMaxDamage",
        "setMaxStackSize",
        "WizardryRecipes",
        "addToManaFlaskCharging",
        "stack",
        "entity",
        "entity",
        "getHeldItemMainhand",
        "getItem",
        "EnumHand",
        "OFF_HAND",
        "EnumHand",
        "MAIN_HAND",
        "Override",
        "stack",
        "Override",
        "stack",
        "world",
        "entity",
        "slot",
        "isHeld",
        "WandHelper",
        "decrementCooldowns",
        "stack",
        "world",
        "isRemote",
        "isManaFull",
        "stack",
        "world",
        "getTotalWorldTime",
        "Constants",
        "CONDENSER_TICK_INTERVAL",
        "rechargeMana",
        "stack",
        "WandHelper",
        "getUpgradeLevel",
        "stack",
        "WizardryItems",
        "condenser_upgrade",
        "Override",
        "stack",
        "getMaxDamage",
        "stack",
        "Constants",
        "STORAGE_INCREASE_PER_LEVEL",
        "WandHelper",
        "getUpgradeLevel",
        "stack",
        "WizardryItems",
        "storage_upgrade",
        "Override",
        "stack",
        "damage",
        "setDamage",
        "stack",
        "damage",
        "Override",
        "stack",
        "material",
        "Override",
        "oldStack",
        "newStack",
        "ItemStack",
        "areItemsEqualIgnoreDurability",
        "oldStack",
        "newStack",
        "canContinueUsing",
        "oldStack",
        "newStack",
        "Override",
        "Override",
        "stack",
        "Override",
        "stack",
        "book",
        "Override",
        "oldStack",
        "newStack",
        "ItemStack",
        "areItemsEqualIgnoreDurability",
        "oldStack",
        "newStack",
        "shouldCauseBlockBreakReset",
        "oldStack",
        "newStack",
        "Override",
        "oldStack",
        "newStack",
        "slotChanged",
        "oldStack",
        "isEmpty",
        "newStack",
        "isEmpty",
        "oldStack",
        "getItem",
        "newStack",
        "getItem",
        "slotChanged",
        "oldStack",
        "getItem",
        "newStack",
        "getItem",
        "shouldCauseReequipAnimation",
        "oldStack",
        "newStack",
        "slotChanged",
        "SideOnly",
        "Side",
        "CLIENT",
        "Override",
        "stack",
        "world",
        "text",
        "advanced",
        "player",
        "Minecraft",
        "getMinecraft",
        "player",
        "player",
        "WandHelper",
        "getUpgradeLevel",
        "stack",
        "ASItems",
        "empowerment_upgrade",
        "text",
        "add",
        "Wizardry",
        "proxy",
        "translate",
        "Wizardry",
        "MODID",
        "setColor",
        "TextFormatting",
        "DARK_GRAY",
        "WandHelper",
        "getUpgradeLevel",
        "stack",
        "ASItems",
        "empowerment_upgrade",
        "Settings",
        "generalSettings",
        "empowerment_upgrade_potency_gain",
        "Wizardry",
        "proxy",
        "translate",
        "spell",
        "WandHelper",
        "getCurrentSpell",
        "stack",
        "discovered",
        "Wizardry",
        "settings",
        "discoveryMode",
        "player",
        "isCreative",
        "WizardData",
        "get",
        "player",
        "WizardData",
        "get",
        "player",
        "hasSpellBeenDiscovered",
        "spell",
        "text",
        "add",
        "Wizardry",
        "proxy",
        "translate",
        "Wizardry",
        "MODID",
        "setColor",
        "TextFormatting",
        "GRAY",
        "discovered",
        "spell",
        "getDisplayNameWithFormatting",
        "TextFormatting",
        "BLUE",
        "SpellGlyphData",
        "getGlyphName",
        "spell",
        "player",
        "world",
        "GameSettings",
        "isKeyDown",
        "Minecraft",
        "getMinecraft",
        "gameSettings",
        "keyBindSneak",
        "AncientSpellcraft",
        "proxy",
        "addMultiLineDescription",
        "text",
        "I18n",
        "format",
        "text",
        "add",
        "I18n",
        "format",
        "advanced",
        "isAdvanced",
        "text",
        "add",
        "Wizardry",
        "proxy",
        "translate",
        "Wizardry",
        "MODID",
        "setColor",
        "TextFormatting",
        "BLUE",
        "getMana",
        "stack",
        "getManaCapacity",
        "stack",
        "Override",
        "itemstack",
        "WandHelper",
        "getCurrentSpell",
        "itemstack",
        "action",
        "Override",
        "stack",
        "Override",
        "world",
        "player",
        "hand",
        "stack",
        "player",
        "getHeldItem",
        "hand",
        "WizardClassWeaponHelper",
        "selectMinionTarget",
        "player",
        "world",
        "EnumActionResult",
        "SUCCESS",
        "stack",
        "spell",
        "WandHelper",
        "getCurrentSpell",
        "stack",
        "modifiers",
        "calculateModifiers",
        "stack",
        "player",
        "spell",
        "canCast",
        "stack",
        "spell",
        "player",
        "hand",
        "modifiers",
        "chargeup",
        "spell",
        "getChargeup",
        "modifiers",
        "get",
        "SpellModifiers",
        "CHARGEUP",
        "spell",
        "isContinuous",
        "chargeup",
        "player",
        "isHandActive",
        "player",
        "setActiveHand",
        "hand",
        "WizardData",
        "get",
        "player",
        "WizardData",
        "get",
        "player",
        "itemCastingModifiers",
        "modifiers",
        "chargeup",
        "world",
        "isRemote",
        "Wizardry",
        "proxy",
        "playChargeupSound",
        "player",
        "EnumActionResult",
        "SUCCESS",
        "stack",
        "cast",
        "stack",
        "spell",
        "player",
        "hand",
        "modifiers",
        "spell",
        "ASSpells",
        "awaken_tome",
        "stack",
        "player",
        "getHeldItem",
        "hand",
        "EnumActionResult",
        "SUCCESS",
        "stack",
        "EnumActionResult",
        "FAIL",
        "stack",
        "Override",
        "stack",
        "user",
        "count",
        "user",
        "player",
        "user",
        "spell",
        "WandHelper",
        "getCurrentSpell",
        "stack",
        "modifiers",
        "WizardData",
        "get",
        "player",
        "modifiers",
        "WizardData",
        "get",
        "player",
        "itemCastingModifiers",
        "modifiers",
        "calculateModifiers",
        "stack",
        "user",
        "spell",
        "useTick",
        "stack",
        "getMaxItemUseDuration",
        "count",
        "chargeup",
        "spell",
        "getChargeup",
        "modifiers",
        "get",
        "SpellModifiers",
        "CHARGEUP",
        "spell",
        "isContinuous",
        "useTick",
        "chargeup",
        "castingTick",
        "useTick",
        "chargeup",
        "castingTick",
        "canCast",
        "stack",
        "spell",
        "player",
        "player",
        "getActiveHand",
        "castingTick",
        "modifiers",
        "cast",
        "stack",
        "spell",
        "player",
        "player",
        "getActiveHand",
        "castingTick",
        "modifiers",
        "player",
        "stopActiveHand",
        "chargeup",
        "useTick",
        "chargeup",
        "cast",
        "stack",
        "spell",
        "player",
        "player",
        "getActiveHand",
        "modifiers",
        "Override",
        "stack",
        "WandHelper",
        "getCurrentSpell",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "getNextSpell",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "getPreviousSpell",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "getSpells",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "selectNextSpell",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "selectPreviousSpell",
        "stack",
        "Override",
        "stack",
        "index",
        "WandHelper",
        "selectSpell",
        "stack",
        "index",
        "Override",
        "stack",
        "WandHelper",
        "getCurrentCooldown",
        "stack",
        "Override",
        "stack",
        "WandHelper",
        "getCurrentMaxCooldown",
        "stack",
        "Override",
        "stack",
        "spell",
        "caster",
        "hand",
        "castingTick",
        "modifiers",
        "castingTick",
        "MinecraftForge",
        "EVENT_BUS",
        "post",
        "AncientSpellcraft",
        "SAGE_ITEM",
        "spell",
        "caster",
        "modifiers",
        "MinecraftForge",
        "EVENT_BUS",
        "post",
        "AncientSpellcraft",
        "SAGE_ITEM",
        "spell",
        "caster",
        "modifiers",
        "castingTick",
        "cost",
        "spell",
        "getCost",
        "modifiers",
        "get",
        "SpellModifiers",
        "COST",
        "spell",
        "isContinuous",
        "cost",
        "getDistributedCost",
        "cost",
        "castingTick",
        "cost",
        "getMana",
        "stack",
        "WandHelper",
        "getCurrentCooldown",
        "stack",
        "caster",
        "isCreative",
        "Override",
        "stack",
        "spell",
        "caster",
        "hand",
        "castingTick",
        "modifiers",
        "otherHand",
        "hand",
        "EnumHand",
        "MAIN_HAND",
        "EnumHand",
        "OFF_HAND",
        "EnumHand",
        "MAIN_HAND",
        "world",
        "caster",
        "world",
        "world",
        "isRemote",
        "spell",
        "isContinuous",
        "spell",
        "requiresPacket",
        "spell",
        "cast",
        "world",
        "caster",
        "hand",
        "castingTick",
        "modifiers",
        "castingTick",
        "MinecraftForge",
        "EVENT_BUS",
        "post",
        "AncientSpellcraft",
        "SAGE_ITEM",
        "spell",
        "caster",
        "modifiers",
        "world",
        "isRemote",
        "spell",
        "isContinuous",
        "spell",
        "requiresPacket",
        "msg",
        "caster",
        "getEntityId",
        "hand",
        "spell",
        "modifiers",
        "WizardryPacketHandler",
        "net",
        "sendToDimension",
        "msg",
        "world",
        "provider",
        "getDimension",
        "cost",
        "spell",
        "getCost",
        "modifiers",
        "get",
        "SpellModifiers",
        "COST",
        "spell",
        "isContinuous",
        "cost",
        "getDistributedCost",
        "cost",
        "castingTick",
        "cost",
        "caster",
        "getHeldItem",
        "otherHand",
        "getItem",
        "mana",
        "caster",
        "getHeldItem",
        "otherHand",
        "getItem",
        "getMana",
        "caster",
        "getHeldItem",
        "otherHand",
        "mana",
        "cost",
        "consumeMana",
        "stack",
        "otherHand",
        "caster",
        "cost",
        "consumeMana",
        "stack",
        "cost",
        "caster",
        "caster",
        "setActiveHand",
        "hand",
        "spell",
        "isContinuous",
        "caster",
        "isCreative",
        "WandHelper",
        "setCurrentCooldown",
        "stack",
        "spell",
        "getCooldown",
        "modifiers",
        "get",
        "WizardryItems",
        "cooldown_upgrade",
        "Override",
        "stack",
        "world",
        "user",
        "timeLeft",
        "user",
        "player",
        "user",
        "spell",
        "WandHelper",
        "getCurrentSpell",
        "stack",
        "modifiers",
        "WizardData",
        "get",
        "player",
        "modifiers",
        "WizardData",
        "get",
        "player",
        "itemCastingModifiers",
        "modifiers",
        "calculateModifiers",
        "stack",
        "user",
        "spell",
        "castingTick",
        "stack",
        "getMaxItemUseDuration",
        "timeLeft",
        "cost",
        "getDistributedCost",
        "spell",
        "getCost",
        "modifiers",
        "get",
        "SpellModifiers",
        "COST",
        "castingTick",
        "spell",
        "isContinuous",
        "cost",
        "getMana",
        "stack",
        "MinecraftForge",
        "EVENT_BUS",
        "post",
        "AncientSpellcraft",
        "SAGE_ITEM",
        "spell",
        "player",
        "modifiers",
        "castingTick",
        "spell",
        "finishCasting",
        "world",
        "player",
        "NaN",
        "NaN",
        "NaN",
        "castingTick",
        "modifiers",
        "player",
        "isCreative",
        "WandHelper",
        "setCurrentCooldown",
        "stack",
        "spell",
        "getCooldown",
        "modifiers",
        "get",
        "WizardryItems",
        "cooldown_upgrade",
        "Override",
        "player",
        "stack",
        "Override",
        "stack",
        "TOME_BASE_SPELL_SLOTS",
        "WandHelper",
        "getUpgradeLevel",
        "stack",
        "WizardryItems",
        "attunement_upgrade",
        "Override",
        "player",
        "wand",
        "upgrade",
        "wand",
        "Override",
        "player",
        "centre",
        "crystals",
        "upgrade",
        "spellBooks",
        "changed",
        "upgrade",
        "getHasStack",
        "original",
        "centre",
        "getStack",
        "copy",
        "centre",
        "putStack",
        "applyUpgrade",
        "player",
        "centre",
        "getStack",
        "upgrade",
        "getStack",
        "changed",
        "ItemStack",
        "areItemStacksEqual",
        "centre",
        "getStack",
        "original",
        "spells",
        "WandHelper",
        "getSpells",
        "centre",
        "getStack",
        "spells",
        "length",
        "spells",
        "ItemWand",
        "BASE_SPELL_SLOTS",
        "i",
        "i",
        "spells",
        "length",
        "i",
        "spellBooks",
        "i",
        "getStack",
        "ItemStack",
        "EMPTY",
        "spell",
        "Spell",
        "byMetadata",
        "spellBooks",
        "i",
        "getStack",
        "getItemDamage",
        "spells",
        "i",
        "spell",
        "spell",
        "spells",
        "i",
        "spell",
        "changed",
        "WandHelper",
        "setSpells",
        "centre",
        "getStack",
        "spells",
        "crystals",
        "getStack",
        "ItemStack",
        "EMPTY",
        "isManaFull",
        "centre",
        "getStack",
        "chargeDepleted",
        "getManaCapacity",
        "centre",
        "getStack",
        "getMana",
        "centre",
        "getStack",
        "manaPerItem",
        "Constants",
        "MANA_PER_CRYSTAL",
        "crystals",
        "getStack",
        "getItem",
        "WizardryItems",
        "crystal_shard",
        "manaPerItem",
        "Constants",
        "MANA_PER_SHARD",
        "crystals",
        "getStack",
        "getItem",
        "WizardryItems",
        "grand_crystal",
        "manaPerItem",
        "Constants",
        "GRAND_CRYSTAL_MANA",
        "crystals",
        "getStack",
        "getCount",
        "manaPerItem",
        "chargeDepleted",
        "rechargeMana",
        "centre",
        "getStack",
        "crystals",
        "getStack",
        "getCount",
        "manaPerItem",
        "crystals",
        "decrStackSize",
        "crystals",
        "getStack",
        "getCount",
        "setMana",
        "centre",
        "getStack",
        "getManaCapacity",
        "centre",
        "getStack",
        "crystals",
        "decrStackSize",
        "ceil",
        "chargeDepleted",
        "manaPerItem",
        "changed",
        "changed",
        "Override",
        "stack",
        "Override",
        "stack",
        "getManaCapacity",
        "stack",
        "getDamage",
        "stack",
        "Override",
        "stack",
        "mana",
        "setDamage",
        "stack",
        "getManaCapacity",
        "stack",
        "mana",
        "Override",
        "stack",
        "getMaxDamage",
        "stack",
        "Override",
        "player",
        "stack",
        "Override",
        "stack",
        "mana",
        "wielder",
        "IManaStoringItem",
        "consumeMana",
        "stack",
        "mana",
        "wielder",
        "Override",
        "stack",
        "mana",
        "IManaStoringItem",
        "rechargeMana",
        "stack",
        "mana",
        "Override",
        "stack",
        "IManaStoringItem",
        "isManaFull",
        "stack",
        "Override",
        "stack",
        "IManaStoringItem",
        "isManaEmpty",
        "stack",
        "Override",
        "stack",
        "IManaStoringItem",
        "getFullness",
        "stack",
        "stack",
        "player",
        "spell",
        "modifiers",
        "modifiers"
    ],
    "literals": [
        "\"lastPlayerPos\"",
        "\"mana_available\"",
        "\"item.\"",
        "\":wand.buff\"",
        "\"item.ancientspellcraft:all_other_elements\"",
        "\"item.\"",
        "\":wand.spell\"",
        "\"#\"",
        "\"tooltip.ancientspellcraft:sage_tome.more_info\"",
        "\"tooltip.ancientspellcraft:more_info\"",
        "\"item.\"",
        "\":wand.mana\""
    ],
    "variables": [
        "modifiers",
        "modifiers"
    ],
    "comments": [
        "TODO: expose to settings",
        "Decrements tome damage (increases mana) every 1.5 seconds if it has a condenser upgrade",
        "If the upgrade level is 0, this does nothing anyway.",
        "Max damage is modifiable with upgrades.",
        "+ 0.5f corrects small float errors rounding down",
        "/** Does nothing, use {@link ItemWand#setMana(ItemStack, int)} to modify wand mana. */",
        "Overridden to do nothing to stop repair things from 'repairing' the mana in a wand",
        "Ignore durability changes",
        "Ignore durability changes",
        "Only called client-side",
        "This method is always called on the item in oldStack, meaning that oldStack.getItem() == this",
        "This method does some VERY strange things! Despite its name, it also seems to affect the updating of NBT...",
        "We only care about the situation where we specifically want the animation NOT to play.",
        "text.add(Wizardry.proxy.translate(\"item.ancientspellcraft:battlemage_sword_armour_requirements_tooltip\"));",
        "Element element = WizardArmourUtils.getFullSetElementForClass(player, ItemWizardArmour.ArmourClass.BATTLEMAGE);",
        "+0.5f is necessary due to the error in the way floats are calculated.",
        "show innate mana",
        "Continuous spells use the onUsingItemTick method instead of this one.",
        "Alternate right-click function; overrides spell casting.",
        "Need to account for the modifier since it could be zero even if the original charge-up wasn't",
        "Spells that need the mouse to be held (continuous, charge-up or both)",
        "Store the modifiers for use later",
        "All other (instant) spells",
        "--------------------------  ISpellCastingItem implementation  --------------------------//",
        "For continuous spells and spells with a charge-up time. The count argument actually decrements by 1 each tick.",
        "N.B. The first time this gets called is the tick AFTER onItemRightClick is called, not the same tick",
        "Fallback to the old way, should never be used",
        "Continuous spell charge-up is simple, just don't do anything until it's charged",
        "castingTick needs to be relative to when the spell actually started",
        "Continuous spells (these must check if they can be cast each tick since the mana changes)",
        "Don't call canCast when castingTick == 0 because we already did it in onItemRightClick - even",
        "with charge-up times, because we don't want to trigger events twice",
        "Stops the casting if it was interrupted, either by events or because the wand ran out of mana",
        "Non-continuous spells need to check they actually have a charge-up since ALL spells call setActiveHand",
        "Once the spell is charged, it's exactly the same as in onItemRightClick",
        "Spells can only be cast if the casting events aren't cancelled...",
        "Weird floaty rounding",
        "As of wizardry 4.2 mana cost is only divided over two intervals each second",
        "...and the wand has enough mana to cast the spell...",
        "This comes first because it changes over time",
        "...and the wand is the same tier as the spell or higher...",
        "...and either the spell is not in cooldown or the player is in creative mode",
        "--------------------------  IWorkbenchItem implementation  --------------------------//",
        "Continuous spells never require packets so don't rely on the requiresPacket method to specify it",
        "Sends a packet to all players in dimension to tell them to spawn particles.",
        "Mana cost",
        "Weird floaty rounding",
        "As of wizardry 4.2 mana cost is only divided over two intervals each second",
        "wand",
        "Cooldown",
        "Spells only have a cooldown in survival",
        "Fallback to the old way, should never be used",
        "Might as well include this",
        "Still need to check there's enough mana or the spell will finish twice, since running out of mana is",
        "handled separately.",
        "Spells only have a cooldown in survival",
        "Used for advancements",
        "Reads NBT spell metadata array to variable, edits this, then writes it back to NBT.",
        "Original spells are preserved; if a slot is left empty the existing spell binding will remain.",
        "Accounts for spells which cannot be applied because they are above the wand's tier; these spells",
        "will not bind but the existing spell in that slot will remain and other applicable spells will",
        "be bound as normal, along with any upgrades and crystals.",
        "Base value here because if the spell array doesn't exist, the wand can't possibly have attunement upgrades",
        "If the wand is powerful enough for the spell, it's not already bound to that slot and it's enabled for wands",
        "Charges wand by appropriate amount",
        "If there aren't enough crystals to fully charge the wand",
        "If there are excess crystals (or just enough)",
        "--------------------------  IManaStoringItem implementation  --------------------------//",
        "Using super (which can only be done from in here) bypasses the above override",
        "--------------------------  Helper methods  --------------------------//",
        "This is now public because artefacts use it"
    ],
    "docstrings": [
        "* The number of spell slots a tome has with no attunement upgrades applied.",
        "An important thing to note about this method: it is only called on the server and the client of the player\n\t * holding the item (I call this client-inconsistency). This means if you spawn particles here they will not show up\n\t * on other players' screens. Instead, this must be done via packets.",
        "* Returns whether the tooltip (dark grey box) should be drawn when this item is in an arcane workbench. Only\n\t * called client-side.\n\t *\n\t * @param stack The ItemStack to query.\n\t * @return True if the workbench tooltip should be shown, false if not.",
        "* Returns a SpellModifiers object with the appropriate modifiers applied for the given ItemStack and Spell.\n\t * This is now public because artefacts use it",
        "* Returns a SpellModifiers object with the appropriate modifiers applied for the given ItemStack and Spell."
    ],
    "functions": [
        "ItemRunicHammer",
        "EnumHand",
        "getOtherHandForSword",
        "hasEffect",
        "onUpdate",
        "getMaxDamage",
        "setDamage",
        "getIsRepairable",
        "canContinueUsing",
        "getItemEnchantability",
        "isEnchantable",
        "isBookEnchantable",
        "shouldCauseBlockBreakReset",
        "shouldCauseReequipAnimation",
        "addInformation",
        "EnumAction",
        "getItemUseAction",
        "getMaxItemUseDuration",
        "onItemRightClick",
        "onUsingTick",
        "Spell",
        "getCurrentSpell",
        "Spell",
        "getNextSpell",
        "Spell",
        "getPreviousSpell",
        "getSpells",
        "selectNextSpell",
        "selectPreviousSpell",
        "selectSpell",
        "getCurrentCooldown",
        "getCurrentMaxCooldown",
        "canCast",
        "cast",
        "onPlayerStoppedUsing",
        "showSpellHUD",
        "getSpellSlotCount",
        "ItemStack",
        "applyUpgrade",
        "onApplyButtonPressed",
        "showTooltip",
        "getMana",
        "setMana",
        "getManaCapacity",
        "showManaInWorkbench",
        "consumeMana",
        "rechargeMana",
        "isManaFull",
        "isManaEmpty",
        "getFullness",
        "SpellModifiers",
        "calculateModifiers"
    ],
    "classes": [
        "ItemRunicHammer"
    ]
}