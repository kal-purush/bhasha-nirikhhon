{
    "identifiers": [
        "io",
        "github",
        "martinwitt",
        "laughing_train",
        "github",
        "com",
        "google",
        "common",
        "flogger",
        "FluentLogger",
        "io",
        "github",
        "martinwitt",
        "laughing_train",
        "commons",
        "result",
        "Result",
        "jakarta",
        "enterprise",
        "context",
        "ApplicationScoped",
        "java",
        "io",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "kohsuke",
        "github",
        "GHIssue",
        "org",
        "kohsuke",
        "github",
        "GHIssueSearchBuilder",
        "org",
        "kohsuke",
        "github",
        "GHIssueState",
        "org",
        "kohsuke",
        "github",
        "GitHub",
        "ApplicationScoped",
        "logger",
        "FluentLogger",
        "forEnclosingClass",
        "userName",
        "searchIssuesWithFixes",
        "userName",
        "userName",
        "Result",
        "ok",
        "convertGHIssueToPullRequest",
        "getGitHubIssues",
        "userName",
        "e",
        "logger",
        "atSevere",
        "withCause",
        "e",
        "log",
        "userName",
        "Result",
        "error",
        "e",
        "issues",
        "issues",
        "stream",
        "toPullRequest",
        "collect",
        "Collectors",
        "toList",
        "queries",
        "gitHub",
        "connectToGitHubUsingOAuth",
        "issueQueryBuilder",
        "gitHub",
        "searchIssues",
        "query",
        "queries",
        "issueQueryBuilder",
        "issueQueryBuilder",
        "q",
        "query",
        "issueQueryBuilder",
        "toList",
        "stream",
        "v",
        "v",
        "getRepository",
        "isFork",
        "toList",
        "GitHub",
        "connectUsingOAuth",
        "getenv",
        "issue",
        "toPullRequestState",
        "issue",
        "getState",
        "issue",
        "getTitle",
        "issue",
        "getBody",
        "issue",
        "getRepository",
        "getOwnerName",
        "issue",
        "getRepository",
        "getName",
        "issue",
        "getNumber",
        "issue",
        "getHtmlUrl",
        "toString",
        "state",
        "Enum",
        "valueOf",
        "state",
        "name",
        "searchSummaryIssue",
        "issue",
        "getFirstIssue",
        "Result",
        "ofNullable",
        "toIssue",
        "issue",
        "e",
        "logger",
        "atSevere",
        "withCause",
        "e",
        "log",
        "Result",
        "error",
        "e",
        "label",
        "connectToGitHubUsingOAuth",
        "getRepository",
        "queryIssues",
        "pageSize",
        "label",
        "label",
        "state",
        "GHIssueState",
        "OPEN",
        "pageSize",
        "toList",
        "getFirst",
        "issue",
        "toPullRequestState",
        "issue",
        "getState",
        "issue",
        "getTitle",
        "issue",
        "getBody",
        "issue",
        "getRepository",
        "getOwnerName",
        "issue",
        "getRepository",
        "getName",
        "issue",
        "getNumber",
        "issue",
        "getHtmlUrl",
        "toString"
    ],
    "literals": [
        "\"is:pr\"",
        "\"author:\"",
        "\"fingerprint in:body\"",
        "\"Error while searching for issues with fixes for user %s\"",
        "\"GITHUB_TOKEN\"",
        "\"laughing-train-summary\"",
        "\"Error while searching for summary issue\"",
        "\"MartinWitt/laughing-train\""
    ],
    "variables": [
        "queries"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "findPullRequests",
        "searchIssuesWithFixes",
        "convertGHIssueToPullRequest",
        "getGitHubIssues",
        "GitHub",
        "connectToGitHubUsingOAuth",
        "PullRequest",
        "toPullRequest",
        "GitHubState",
        "toPullRequestState",
        "findSummaryIssue",
        "searchSummaryIssue",
        "GHIssue",
        "getFirstIssue",
        "Issue",
        "toIssue"
    ],
    "classes": [
        "GitHubIssueSearch"
    ]
}