{
    "identifiers": [
        "math",
        "random",
        "sys",
        "numpy",
        "np",
        "collections",
        "defaultdict",
        "Counter",
        "itertools",
        "combinations",
        "chain",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "seaborn",
        "sns",
        "json",
        "tqdm",
        "torch",
        "pyro",
        "pyro",
        "optim",
        "brmp",
        "transformers",
        "significance",
        "mean_diff_conf_inter",
        "mean_diff_p",
        "cohens_d",
        "util",
        "fit",
        "mappings",
        "fit",
        "marginals",
        "m",
        "row_labels",
        "torch",
        "FloatTensor",
        "m",
        "array",
        "m",
        "row_labels",
        "torch",
        "FloatTensor",
        "m",
        "array",
        "m",
        "row_labels",
        "torch",
        "FloatTensor",
        "m",
        "array",
        "k",
        "mean",
        "sorted",
        "means",
        "items",
        "sds",
        "k",
        "n_effs",
        "k",
        "k",
        "startswith",
        "k",
        "split",
        "replace",
        "f_id",
        "len",
        "f_id",
        "split",
        "mean",
        "mean",
        "mean",
        "interesting",
        "get",
        "fixed_f_id",
        "mean",
        "k",
        "startswith",
        "k",
        "abs",
        "mean",
        "mean",
        "mean",
        "sd",
        "n_eff",
        "k",
        "startswith",
        "k",
        "strip",
        "split",
        "i",
        "split",
        "replace",
        "f_id",
        "f_id",
        "split",
        "i",
        "split",
        "_is",
        "torch",
        "tensor",
        "_is",
        "mappings",
        "fixed_f_id",
        "result_means",
        "len",
        "mappings",
        "_f",
        "_f",
        "fs",
        "torch",
        "zeros",
        "ns",
        "torch",
        "zeros",
        "ns",
        "torch",
        "zeros",
        "ns",
        "result_means",
        "fixed_f_id",
        "index_put_",
        "_is",
        "mean",
        "result_sds",
        "fixed_f_id",
        "index_put_",
        "_is",
        "sd",
        "result_n_effs",
        "fixed_f_id",
        "index_put_",
        "_is",
        "n_eff",
        "result_means",
        "result_sds",
        "result_n_effs",
        "interesting",
        "torch",
        "nn",
        "Module",
        "factors",
        "out_size",
        "emb_size",
        "contrasts",
        "MLP",
        "factors",
        "emb_size",
        "len",
        "x",
        "x",
        "factors",
        "values",
        "emb_size",
        "len",
        "x",
        "x",
        "factors",
        "values",
        "sum",
        "abs",
        "x",
        "x",
        "factors",
        "values",
        "x",
        "out_size",
        "max",
        "in_size",
        "max",
        "in_size",
        "in_size",
        "out_size",
        "contrasts",
        "torch",
        "nn",
        "ModuleDict",
        "name",
        "siz",
        "factors",
        "items",
        "siz",
        "embeddings",
        "torch",
        "nn",
        "Embedding",
        "siz",
        "emb_size",
        "torch",
        "nn",
        "ModuleList",
        "in_size",
        "siz",
        "hidden_sizes",
        "layers",
        "append",
        "torch",
        "nn",
        "Linear",
        "prev",
        "siz",
        "siz",
        "layers",
        "append",
        "torch",
        "nn",
        "Linear",
        "prev",
        "out_size",
        "torch",
        "nn",
        "GELU",
        "torch",
        "nn",
        "Dropout",
        "torch",
        "nn",
        "Dropout",
        "torch",
        "nn",
        "BCEWithLogitsLoss",
        "x",
        "inp_dropout",
        "x",
        "clone",
        "to",
        "next",
        "parameters",
        "device",
        "layer",
        "layers",
        "layer",
        "_in",
        "activation",
        "dropout",
        "clone",
        "row",
        "f",
        "siz",
        "sorted",
        "factors",
        "items",
        "row",
        "f",
        "siz",
        "contrasts",
        "f",
        "idx",
        "torch",
        "tensor",
        "idx",
        "siz",
        "embeddings",
        "f",
        "t",
        "t",
        "dtype",
        "torch",
        "torch",
        "f",
        "t",
        "result",
        "append",
        "t",
        "view",
        "torch",
        "cat",
        "result",
        "dim",
        "result",
        "data",
        "obs",
        "iter",
        "dev_data",
        "patience",
        "optim",
        "lr",
        "batch_size",
        "seed",
        "optim",
        "torch",
        "optim",
        "AdamW",
        "parameters",
        "lr",
        "lr",
        "len",
        "data",
        "tqdm",
        "tqdm",
        "iter",
        "unit_scale",
        "desc",
        "pbar",
        "n",
        "iter",
        "data",
        "sample",
        "frac",
        "random_state",
        "seed",
        "i",
        "_",
        "d",
        "data",
        "iterrows",
        "dfrow_to_inp",
        "d",
        "batch",
        "append",
        "x",
        "unsqueeze",
        "torch",
        "tensor",
        "d",
        "obs",
        "view",
        "tgt_batch",
        "append",
        "tgt",
        "unsqueeze",
        "len",
        "batch",
        "batch_size",
        "i",
        "data_len",
        "torch",
        "cat",
        "batch",
        "dim",
        "torch",
        "cat",
        "tgt_batch",
        "dim",
        "train",
        "optim",
        "zero_grad",
        "forward",
        "batch",
        "loss",
        "view",
        "tgt_batch",
        "view",
        "loss",
        "backward",
        "optim",
        "step",
        "epoch_loss",
        "loss",
        "item",
        "epoch_loss",
        "i",
        "i",
        "pbar",
        "update",
        "data_len",
        "dev_data",
        "data",
        "sample",
        "frac",
        "predict",
        "dev_data",
        "pred_from_probs",
        "probs",
        "torch",
        "LongTensor",
        "dev_data",
        "obs",
        "to_numpy",
        "view",
        "pred",
        "gold",
        "mean",
        "item",
        "epoch_acc",
        "acc",
        "epoch_acc",
        "i",
        "pbar",
        "set_postfix",
        "i",
        "i",
        "loss",
        "loss",
        "item",
        "epoch_loss",
        "epoch_loss_norm",
        "acc",
        "acc",
        "epoch_acc",
        "epoch_acc_norm",
        "best_dev_acc",
        "best_dev_acc",
        "dev_acc_plateau",
        "plateau_dev_acc",
        "plateau",
        "patience",
        "plateau",
        "epoch_acc_norm",
        "best_dev_acc",
        "epoch_acc_norm",
        "epoch_acc_norm",
        "plateau",
        "plateau",
        "patience",
        "plateau_dev_acc",
        "best_dev_acc",
        "patience",
        "n",
        "data",
        "eval",
        "i",
        "d",
        "data",
        "iterrows",
        "dfrow_to_inp",
        "d",
        "batch",
        "append",
        "x",
        "unsqueeze",
        "torch",
        "cat",
        "batch",
        "dim",
        "forward",
        "batch",
        "result",
        "sigmoid",
        "view",
        "s",
        "tgt_char",
        "lm",
        "tokenizer",
        "tokenizer",
        "s",
        "return_tensors",
        "tok_outp",
        "input_ids",
        "toks",
        "shape",
        "torch",
        "ones",
        "length",
        "length",
        "triu",
        "tril",
        "toks",
        "expand",
        "length",
        "where",
        "diag_mask",
        "torch",
        "ones_like",
        "toks",
        "tokenizer",
        "mask_token_id",
        "lm",
        "masked_toks",
        "masked_outps",
        "logits",
        "diag_mask",
        "softmax",
        "dim",
        "gather",
        "toks",
        "squeeze",
        "unsqueeze",
        "detach",
        "lm",
        "toks",
        "output_hidden_states",
        "tok_outp",
        "char_to_token",
        "tgt_char",
        "h",
        "squeeze",
        "tgt_idx",
        "detach",
        "h",
        "outps",
        "hidden_states",
        "ps",
        "squeeze",
        "hiddens",
        "tgt_idx",
        "data",
        "np",
        "mean",
        "data",
        "np",
        "std",
        "data",
        "x",
        "mu",
        "sd",
        "x",
        "data",
        "mu",
        "sd",
        "mappings",
        "n_train",
        "n_students",
        "n_conditions",
        "n_answers",
        "n_prepositions",
        "n_fxns",
        "n_idioms",
        "n_tasks",
        "n_times",
        "student_ids",
        "item_ids",
        "answer_ids",
        "preposition_ids",
        "construal_ids",
        "idiom_ids",
        "task_ids",
        "time_ids",
        "obs",
        "ax1",
        "ax2",
        "ax3",
        "ax4",
        "ax5",
        "ax6",
        "ax7",
        "ax8",
        "ax9",
        "ax10",
        "ax11",
        "ax12",
        "ax13",
        "ax14",
        "loss_ax",
        "t",
        "pd",
        "read_csv",
        "FILENAME",
        "astype",
        "open",
        "MAP_FILENAME",
        "f",
        "json",
        "load",
        "f",
        "len",
        "data",
        "data",
        "data",
        "data",
        "data",
        "mappings",
        "mappings",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "mappings",
        "len",
        "data",
        "setting_name",
        "factors_to_include",
        "settings",
        "factors_to_include",
        "fixed_eff",
        "factors_to_include",
        "fixed_eff",
        "factors_to_include",
        "fixed_eff",
        "fac",
        "fac",
        "factors_to_include",
        "fac",
        "fixed_eff",
        "setting_name",
        "formula",
        "factors_to_include",
        "formula",
        "fixed_eff",
        "factor",
        "interaction_factors",
        "factor",
        "formula",
        "fixed_eff",
        "factor",
        "factors_to_include",
        "formula",
        "interaction_factors",
        "len",
        "interaction_factors",
        "join",
        "tup",
        "tup",
        "get_tuples",
        "interaction_factors",
        "interaction_ns",
        "formula",
        "join",
        "fixed_eff",
        "rand_e",
        "rand_e",
        "random_effs",
        "setting_name",
        "factors_to_include",
        "formula",
        "all_data",
        "all_data",
        "mappings",
        "copy",
        "len",
        "gjt_data",
        "all_data",
        "all_data",
        "mappings",
        "copy",
        "len",
        "pdt_data",
        "factor",
        "factor",
        "factors_to_include",
        "transformers",
        "RobertaForMaskedLM",
        "from_pretrained",
        "transformers",
        "RobertaTokenizerFast",
        "from_pretrained",
        "pd",
        "read_csv",
        "STIMULI_FILENAME",
        "i",
        "d",
        "tqdm",
        "tqdm",
        "stimuli_df",
        "iterrows",
        "desc",
        "d",
        "d",
        "d",
        "d",
        "sentence",
        "strip",
        "sentence",
        "target",
        "gpt_sentence_prob",
        "sentence",
        "target",
        "roberta",
        "tokenizer",
        "ps",
        "idx",
        "mappings",
        "defaultdict",
        "mappings",
        "number",
        "answer",
        "i",
        "mappings",
        "i",
        "number",
        "answer",
        "hiddens",
        "append",
        "hs",
        "view",
        "detach",
        "Counter",
        "Counter",
        "i",
        "d",
        "gjt_data",
        "iterrows",
        "mappings",
        "d",
        "mappings",
        "d",
        "mappings",
        "d",
        "response_correctness",
        "answer",
        "response_correctness",
        "answer",
        "probs",
        "number",
        "answer",
        "KeyError",
        "ValueError",
        "mappings",
        "d",
        "__task",
        "__task",
        "data_lm_tgt_probs",
        "append",
        "data_lm_avg_probs",
        "append",
        "data_hiddens",
        "append",
        "mappings",
        "d",
        "pretest_responses",
        "number",
        "answer",
        "response",
        "mappings",
        "d",
        "mappings",
        "d",
        "posttest_responses",
        "number",
        "answer",
        "response",
        "i",
        "idx",
        "i",
        "len",
        "ps",
        "data_lm_tgt_probs",
        "append",
        "ps",
        "idx",
        "data_lm_avg_probs",
        "append",
        "ps",
        "not_idx_mask",
        "log",
        "mean",
        "exp",
        "data_hiddens",
        "append",
        "mappings",
        "number",
        "answer",
        "number",
        "answer",
        "sorted",
        "stimuli_dict",
        "stimuli_dict",
        "number",
        "answer",
        "probs",
        "number",
        "answer",
        "probs",
        "number",
        "probs",
        "number",
        "ps_true",
        "idx_true",
        "ps_false",
        "idx_false",
        "ps_true",
        "mean",
        "ps_false",
        "mean",
        "pretest_responses",
        "number",
        "answer",
        "pretest_responses",
        "number",
        "answer",
        "pretest_responses",
        "number",
        "answer",
        "posttest_responses",
        "number",
        "answer",
        "posttest_responses",
        "number",
        "answer",
        "posttest_responses",
        "number",
        "answer",
        "standardize",
        "data_lm_tgt_probs",
        "standardize",
        "data_lm_avg_probs",
        "old_tgt_mu",
        "old_tgt_sd",
        "np",
        "mean",
        "lm_tgt_p",
        "np",
        "std",
        "lm_tgt_p",
        "old_avg_mu",
        "old_avg_sd",
        "np",
        "mean",
        "lm_avg_p",
        "np",
        "std",
        "lm_avg_p",
        "lm_tgt_p",
        "lm_avg_p",
        "data_hiddens",
        "gjt_data",
        "astype",
        "setting_name",
        "gjt_data",
        "setting_name",
        "pdt_data",
        "all_data",
        "x",
        "hiddens",
        "numel",
        "x",
        "len",
        "mappings",
        "x",
        "x",
        "mappings",
        "x",
        "factors_to_include",
        "N",
        "runs",
        "global_seed",
        "global_seed",
        "N",
        "N",
        "SEED",
        "random",
        "seed",
        "SEED",
        "pyro",
        "set_rng_seed",
        "SEED",
        "pyro",
        "clear_param_store",
        "data",
        "sample",
        "frac",
        "random_state",
        "SEED",
        "train_test_split",
        "data",
        "split_fracs",
        "SEED",
        "len",
        "train",
        "len",
        "test",
        "torch",
        "LongTensor",
        "test",
        "to_numpy",
        "view",
        "torch",
        "LongTensor",
        "train",
        "to_numpy",
        "view",
        "torch",
        "randint_like",
        "gold_train",
        "torch",
        "randint_like",
        "gold",
        "rand_pred_train",
        "gold_train",
        "rand_all_train_accs",
        "mean",
        "rand_pred",
        "gold",
        "rand_all_accs",
        "mean",
        "rand_overall_train_acc",
        "rand_pred_train",
        "mean",
        "gold_train",
        "mean",
        "rand_overall_acc",
        "rand_pred",
        "mean",
        "gold",
        "mean",
        "gold_train",
        "mean",
        "torch",
        "ones_like",
        "gold_train",
        "maj",
        "torch",
        "ones_like",
        "gold",
        "maj",
        "maj_pred_train",
        "gold_train",
        "maj_all_train_accs",
        "mean",
        "maj_pred",
        "gold",
        "maj_all_accs",
        "mean",
        "maj_overall_train_acc",
        "maj_pred_train",
        "mean",
        "gold_train",
        "mean",
        "maj_overall_acc",
        "maj_pred",
        "mean",
        "gold",
        "mean",
        "factors_to_include",
        "torch",
        "cat",
        "hiddens",
        "dim",
        "MLP",
        "factors",
        "factor_sizes",
        "out_size",
        "contrasts",
        "contrasts",
        "ffnn",
        "train_model",
        "data",
        "train",
        "dev_data",
        "dev",
        "patience",
        "obs",
        "iter",
        "n_ffnn_iter",
        "batch_size",
        "lr",
        "seed",
        "SEED",
        "ffnn",
        "predict",
        "train",
        "pred_from_probs",
        "ffnn_probs_train",
        "ffnn_pred_train",
        "gold_train",
        "ffnn_all_train_accs",
        "mean",
        "ffnn_overall_train_acc",
        "ffnn_pred_train",
        "mean",
        "gold_train",
        "mean",
        "ffnn",
        "predict",
        "test",
        "pred_from_probs",
        "ffnn_probs",
        "ffnn_pred",
        "gold",
        "ffnn_all_accs",
        "mean",
        "ffnn_overall_acc",
        "ffnn_pred",
        "mean",
        "gold",
        "mean",
        "pyro",
        "optim",
        "AdamW",
        "pyro",
        "autoguide",
        "AutoNormal",
        "brmp",
        "brm",
        "formula",
        "data",
        "family",
        "brmp",
        "family",
        "Bernoulli",
        "priors",
        "brmp",
        "priors",
        "Prior",
        "brmp",
        "family",
        "Normal",
        "brmp",
        "priors",
        "Prior",
        "brmp",
        "family",
        "HalfNormal",
        "contrasts",
        "contrasts",
        "k",
        "v",
        "numpy",
        "k",
        "v",
        "contrasts",
        "items",
        "pyro",
        "clear_param_store",
        "model_and_data",
        "prior",
        "num_samples",
        "n_samples",
        "seed",
        "SEED",
        "predict",
        "train",
        "train_prior",
        "what",
        "mean",
        "dim",
        "pred_from_probs",
        "probs_prior_train",
        "view",
        "pred_prior_train",
        "gold_train",
        "all_prior_train_accs",
        "mean",
        "overall_prior_train_acc",
        "pred_prior_train",
        "mean",
        "gold_train",
        "mean",
        "predict",
        "test",
        "train_prior",
        "what",
        "mean",
        "dim",
        "pred_from_probs",
        "prior_probs",
        "view",
        "prior_pred",
        "gold",
        "all_prior_accs",
        "mean",
        "overall_prior_acc",
        "prior_pred",
        "mean",
        "gold",
        "mean",
        "model_and_data",
        "svi",
        "df",
        "train",
        "iter",
        "n_svi_iter",
        "num_samples",
        "n_samples",
        "seed",
        "SEED",
        "optim",
        "optim",
        "autoguide",
        "autoguide",
        "predict",
        "train",
        "train_fit",
        "what",
        "mean",
        "dim",
        "pred_from_probs",
        "probs_train",
        "view",
        "pred_train",
        "gold_train",
        "all_train_accs",
        "mean",
        "overall_train_acc",
        "pred_train",
        "mean",
        "gold_train",
        "mean",
        "predict",
        "test",
        "train_fit",
        "what",
        "mean",
        "dim",
        "pred_from_probs",
        "probs",
        "view",
        "pred",
        "gold",
        "all_accs",
        "mean",
        "overall_acc",
        "pred",
        "mean",
        "gold",
        "mean",
        "pred_train",
        "ffnn_pred_train",
        "maj_pred_train",
        "rand_pred_train",
        "pred",
        "ffnn_pred",
        "maj_pred",
        "rand_pred",
        "model_names",
        "model_train_preds",
        "model_names",
        "model_preds",
        "i",
        "nm1",
        "pr1",
        "zipped_train",
        "nm2",
        "pr2",
        "zipped_train",
        "i",
        "nm1",
        "nm2",
        "pr1",
        "pr2",
        "mean",
        "i",
        "nm1",
        "pr1",
        "zipped",
        "nm2",
        "pr2",
        "zipped",
        "i",
        "nm1",
        "nm2",
        "pr1",
        "pr2",
        "mean",
        "pyro",
        "clear_param_store",
        "open",
        "setting_name",
        "f",
        "f",
        "write",
        "brmp",
        "pyro_codegen",
        "genmodel",
        "model_and_data",
        "model",
        "desc",
        "model_and_data",
        "svi",
        "iter",
        "n_svi_iter",
        "num_samples",
        "n_samples",
        "seed",
        "SEED",
        "optim",
        "optim",
        "autoguide",
        "autoguide",
        "fit",
        "marginals",
        "summarize",
        "fit",
        "fit",
        "mappings",
        "mappings",
        "name_i",
        "name",
        "interesting",
        "defaultdict",
        "setting_name",
        "means",
        "name",
        "numel",
        "name",
        "means",
        "name",
        "sds",
        "name",
        "n_effs",
        "name",
        "mean_diff_conf_inter",
        "mu",
        "sd",
        "n_samples",
        "q",
        "cohens_d",
        "mu",
        "sd",
        "n_samples",
        "mean_diff_p",
        "mu",
        "sd",
        "n_samples",
        "setting_signi",
        "name",
        "p_val",
        "eff_size",
        "conf_inter",
        "name",
        "mu",
        "sd",
        "n_eff",
        "diff_name",
        "eff_size",
        "math",
        "isnan",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "mu",
        "item",
        "sd",
        "item",
        "name",
        "name",
        "interesting",
        "name",
        "sds",
        "name",
        "nonzero",
        "tolist",
        "name",
        "split",
        "sorted",
        "means",
        "name",
        "view",
        "idxs",
        "sds",
        "name",
        "view",
        "n_effs",
        "name",
        "view",
        "reverse",
        "i",
        "vals1",
        "itr",
        "vals1",
        "join",
        "mappings",
        "f",
        "_idx",
        "_idx",
        "f",
        "idx",
        "fs",
        "plot_mus",
        "append",
        "mu",
        "item",
        "plot_names",
        "append",
        "idx_name",
        "plot_sds",
        "append",
        "sd",
        "item",
        "name",
        "name",
        "name",
        "idx_name",
        "mu",
        "sd",
        "n_eff",
        "vals2",
        "itr",
        "i",
        "mu1",
        "idx1",
        "sd1",
        "n1",
        "mu2",
        "idx2",
        "sd2",
        "n2",
        "sorted",
        "vals1",
        "vals2",
        "reverse",
        "sum",
        "i2",
        "i1",
        "i1",
        "i2",
        "idx1",
        "idx2",
        "idx2",
        "idx1",
        "mu1",
        "mu2",
        "idx_diff",
        "join",
        "f",
        "mappings",
        "f",
        "i1",
        "i1",
        "f",
        "idx1",
        "fs",
        "join",
        "f",
        "mappings",
        "f",
        "i2",
        "i2",
        "f",
        "idx2",
        "fs",
        "idx1_name",
        "idx2_name",
        "mean_diff_conf_inter",
        "mu1",
        "sd1",
        "n_samples",
        "mu2",
        "sd2",
        "n_samples",
        "q",
        "cohens_d",
        "mu1",
        "sd1",
        "n_samples",
        "mu2",
        "sd2",
        "n_samples",
        "mean_diff_p",
        "mu1",
        "sd1",
        "n_samples",
        "mu2",
        "sd2",
        "n_samples",
        "setting_signi",
        "name",
        "idx1_name",
        "p_val",
        "eff_size",
        "conf_inter",
        "setting_signi",
        "name",
        "idx2_name",
        "p_val",
        "eff_size",
        "conf_inter",
        "diff_name",
        "mu1",
        "sd1",
        "mu2",
        "sd2",
        "mu1",
        "mu2",
        "conf_inter",
        "conf_inter",
        "eff_size",
        "math",
        "isnan",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "p_val",
        "plot_mus",
        "plot_sds",
        "plot_names",
        "setting_plot_data",
        "setting_signi",
        "open",
        "join",
        "plot_data",
        "keys",
        "f",
        "json",
        "dump",
        "plot_data",
        "f",
        "e",
        "e",
        "file",
        "sys",
        "stderr",
        "open",
        "f",
        "json",
        "dump",
        "signi",
        "f",
        "e",
        "e",
        "file",
        "sys",
        "stderr"
    ],
    "literals": [
        "'data/all_71_proper_pre2.csv'",
        "'data/map_71_proper_pre2.json'",
        "'data/stimuli.csv'",
        "'sd_'",
        "'__'",
        "':'",
        "'x'",
        "f'{fixed}:{f_id}'",
        "':'",
        "'b_'",
        "'r_'",
        "']'",
        "'['",
        "','",
        "':'",
        "'x'",
        "f'{fixed}:{f_id}'",
        "':'",
        "'_'",
        "'v2i'",
        "'i2v'",
        "'0'",
        "'v2i'",
        "'Training FFNN...'",
        "f'{plateau_dev_acc:.3f}({plateau}<{patience})'",
        "'--'",
        "f'\\nNo improvement on dev ({plateau_dev_acc:.3f}<{best_dev_acc:.3f}) for more than {patience} epochs. '",
        "f'Ending training after {n} epochs.'",
        "'pt'",
        "'__main__'",
        "'category'",
        "'all data len'",
        "'Unnamed: 0'",
        "'item_id'",
        "'Filler'",
        "'Rule Number'",
        "'item_id'",
        "'Filler'",
        "'Rule Number'",
        "'student_id'",
        "'v2i'",
        "'condition_id'",
        "'v2i'",
        "'prep_id'",
        "'v2i'",
        "'fxn_id'",
        "'v2i'",
        "'idiom_id'",
        "'v2i'",
        "'task_id'",
        "'v2i'",
        "'time_id'",
        "'v2i'",
        "'gjt-ext'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'answer_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'gjt-ext_no-p'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'answer_id'",
        "'gjt-ext_no-ans'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'gjt-ext_no-stud'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'answer_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'gjt-ext_no-prep'",
        "'condition_id'",
        "'time_id'",
        "'student_id'",
        "'answer_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'gjt-ext_no-interv'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'answer_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'all'",
        "'condition_id'",
        "'time_id'",
        "'answer_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'all_no-stud'",
        "'condition_id'",
        "'time_id'",
        "'answer_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'all_no-prep'",
        "'condition_id'",
        "'time_id'",
        "'answer_id'",
        "'student_id'",
        "'all_no-ans'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'all_no-interv'",
        "'answer_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'pet'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'pet_no-stud'",
        "'condition_id'",
        "'time_id'",
        "'fxn_id'",
        "'idiom_id'",
        "'pet_no-prep'",
        "'condition_id'",
        "'time_id'",
        "'student_id'",
        "'pet_no-interv'",
        "'fxn_id'",
        "'idiom_id'",
        "'student_id'",
        "'1'",
        "'lm_tgt_p'",
        "' + lm_tgt_p'",
        "'lm_avg_p'",
        "' + lm_avg_p'",
        "'lm_tgt_p'",
        "' + lm_tgt_p:lm_avg_p'",
        "'student_id'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'lm_hidden'",
        "f'outcomes ~ {fixed_eff}'",
        "'gjt-irt'",
        "' + (1 || student_id:fxn_id:idiom_id:answer_id) + (1 || condition_id:time_id) + (1 || lm_hidden)'",
        "'student_id'",
        "f' + ({fixed_eff} || student_id)'",
        "'time_id'",
        "'condition_id'",
        "f' + ({fixed_eff} || student_id:{factor})'",
        "'lm_hidden'",
        "' + (1 || lm_hidden)'",
        "\":\"",
        "' + '",
        "' + '",
        "f'({fixed_eff} || {rand_e})'",
        "'\\n SETTING NAME:'",
        "'\\n FACTORS:'",
        "'\\n FORMULA:'",
        "'task_id'",
        "'task_id'",
        "'v2i'",
        "'GJT'",
        "f'task=GJT data len'",
        "'task_id'",
        "'task_id'",
        "'v2i'",
        "'PD'",
        "f'task=PD data len'",
        "'lm'",
        "'roberta-base'",
        "'roberta-base'",
        "'Getting LM probs and hiddens...'",
        "'Number'",
        "'Answer'",
        "'Sentence'",
        "'Target'",
        "'lm_hidden'",
        "'lm_hidden'",
        "'lm_hidden'",
        "'v2i'",
        "f'{number}-{answer}'",
        "'lm_hidden'",
        "'i2v'",
        "f'{number}-{answer}'",
        "'answer_id'",
        "'i2v'",
        "'answer_id'",
        "'TRUE'",
        "'Number'",
        "'i2v'",
        "'Number'",
        "'outcomes'",
        "'i2v'",
        "'outcomes'",
        "'RIGHT'",
        "'WRONG'",
        "'task_id'",
        "'i2v'",
        "'task_id'",
        "\"PD\"",
        "'time_id'",
        "'i2v'",
        "'time_id'",
        "'PRE'",
        "'time_id'",
        "'i2v'",
        "'time_id'",
        "'POST'",
        "'condition_id'",
        "'i2v'",
        "'condition_id'",
        "'CONTROL'",
        "'lm_hidden'",
        "'v2i'",
        "f'{number}-{answer}'",
        "'OK'",
        "'??'",
        "'OK'",
        "'??'",
        "f'lm_tgt_p was N(mu={old_tgt_mu}, sd={old_tgt_sd}), standardized to N(mu={np.mean(lm_tgt_p)}, sd={np.std(lm_tgt_p)})'",
        "f'lm_avg_p was N(mu={old_avg_mu}, sd={old_avg_sd}), standardized to N(mu={np.mean(lm_avg_p)}, sd={np.std(lm_avg_p)})'",
        "'lm_tgt_p'",
        "'lm_avg_p'",
        "'lm_hidden'",
        "'lm_hidden'",
        "'lm_hidden'",
        "'category'",
        "'gjt'",
        "'pdt'",
        "'lm_hidden'",
        "'v2i'",
        "f'\\n\\nN={N}, SEED={SEED}'",
        "'outcomes'",
        "'outcomes'",
        "f'Rand BL overall train accuracy: {rand_overall_train_acc * 100:.2f}% '",
        "f'(pred: {rand_pred_train.float().mean() * 100:.2f}%, gold: {gold_train.float().mean() * 100:.2f}%)'",
        "f'Rand BL overall accuracy: {rand_overall_acc * 100:.2f}% '",
        "f'(pred: {rand_pred.float().mean() * 100:.2f}%, gold: {gold.float().mean() * 100:.2f}%)'",
        "f'Maj BL overall train accuracy: {maj_overall_train_acc * 100:.2f}% '",
        "f'(pred: {maj_pred_train.float().mean() * 100:.2f}%, gold: {gold_train.float().mean() * 100:.2f}%)'",
        "f'Maj BL overall accuracy: {maj_overall_acc * 100:.2f}% '",
        "f'(pred: {maj_pred.float().mean() * 100:.2f}%, gold: {gold.float().mean() * 100:.2f}%)'",
        "'lm_hidden'",
        "'lm_hidden'",
        "'outcomes'",
        "f'FFNN overall train accuracy: {ffnn_overall_train_acc * 100:.2f}% '",
        "f'(pred: {ffnn_pred_train.float().mean() * 100:.2f}%, gold: {gold_train.float().mean() * 100:.2f}%)'",
        "f'FFNN overall accuracy: {ffnn_overall_acc * 100:.2f}% '",
        "f'(pred: {ffnn_pred.float().mean() * 100:.2f}%, gold: {gold.float().mean() * 100:.2f}%)'",
        "'lr'",
        "'b'",
        "'sd'",
        "'sample'",
        "'outcomes'",
        "f'BRM prior overall train accuracy: {overall_prior_train_acc * 100:.2f}% '",
        "f'(pred: {pred_prior_train.float().mean() * 100:.2f}%, gold: {gold_train.float().mean() * 100:.2f}%)'",
        "'sample'",
        "'outcomes'",
        "f'BRM prior overall accuracy: {overall_prior_acc * 100:.2f}% '",
        "f'(pred: {prior_pred.float().mean() * 100:.2f}%, gold: {gold.float().mean() * 100:.2f}%)'",
        "'sample'",
        "'outcomes'",
        "f'BRM overall train accuracy: {overall_train_acc * 100:.2f}% '",
        "f'(pred: {pred_train.float().mean() * 100:.2f}%, gold: {gold_train.float().mean() * 100:.2f}%)'",
        "'sample'",
        "'outcomes'",
        "f'BRM overall accuracy: {overall_acc * 100:.2f}% '",
        "f'(pred: {pred.float().mean() * 100:.2f}%, gold: {gold.float().mean() * 100:.2f}%)'",
        "'BRM'",
        "'FFNN'",
        "'Maj BL'",
        "'Rand BL'",
        "f'Agreement {nm1}-{nm2} (train): {(pr1 == pr2).float().mean() * 100:.2f}'",
        "f'Agreement {nm1}-{nm2}: {(pr1 == pr2).float().mean() * 100:.2f}'",
        "f'brmp_pyro_model_{setting_name}.py'",
        "'w'",
        "'\\nALL MARGINALS'",
        "'SIGNIFICANCE'",
        "f'{name} > 0'",
        "'p'",
        "'d'",
        "'ci'",
        "f'mu={mu:.2f}'",
        "f'sd={sd:.2f}'",
        "f'n_eff={n_eff:.2f}'",
        "f'Cohen\\'s d={eff_size:.4f}'",
        "'p is NaN'",
        "f'p={p_val:.4f}'",
        "'p<0.0001'",
        "'***'",
        "'**'",
        "'*'",
        "'--'",
        "'mu'",
        "'sd'",
        "'name'",
        "f'{name} max sd'",
        "f'{interesting[name]:.2f}'",
        "':'",
        "':'",
        "f\"{mappings[f]['i2v'][str(_idx)]}\"",
        "'i2v'",
        "'student_id'",
        "'lm_hidden'",
        "f'{name}={idx_name}'",
        "f'mu={mu:.2f}'",
        "f'sd={sd:.2f}'",
        "f'n_eff={n_eff:.2f}'",
        "';'",
        "f\"{f}={mappings[f]['i2v'][str(i1)]}\"",
        "'i2v'",
        "';'",
        "f\"{f}={mappings[f]['i2v'][str(i2)]}\"",
        "'i2v'",
        "f'{idx1_name} > {idx2_name}'",
        "'p'",
        "'d'",
        "'ci'",
        "'p'",
        "'d'",
        "'ci'",
        "f'{mu1:.3f} +- {sd1:.3f} > {mu2:.3f} +- {sd2:.3f}'",
        "f'diff={mu1 - mu2:.3f}'",
        "f'CI={conf_inter[0]:.3f};{conf_inter[1]:.3f}'",
        "f'Cohen\\'s d={eff_size:.3f}'",
        "'p is NaN'",
        "f'p={p_val:.4f}'",
        "'p<0.0001'",
        "'***'",
        "'**'",
        "'*'",
        "'--'",
        "'mu'",
        "'sd'",
        "'name'",
        "f'plot_data_{\"_\".join(plot_data.keys())}.json'",
        "\"_\"",
        "'w'",
        "'failed to write plot data'",
        "'signi_data.json'",
        "'w'",
        "'failed to write signi data'"
    ],
    "variables": [
        "FILENAME",
        "MAP_FILENAME",
        "STIMULI_FILENAME",
        "runs",
        "global_seed",
        "n_ffnn_iter",
        "n_svi_iter",
        "n_samples",
        "split_fracs",
        "m",
        "means",
        "sds",
        "n_effs",
        "result_means",
        "result_sds",
        "result_n_effs",
        "interesting",
        "sd",
        "n_eff",
        "f_id",
        "fixed_f_id",
        "interesting",
        "fixed_f_id",
        "interesting",
        "fixed_f_id",
        "f_id",
        "interesting",
        "f_id",
        "result_means",
        "f_id",
        "result_sds",
        "f_id",
        "result_n_effs",
        "f_id",
        "f_id",
        "i",
        "i",
        "fixed_f_id",
        "fs",
        "_is",
        "_is",
        "_is",
        "mappings",
        "ns",
        "result_means",
        "fixed_f_id",
        "result_sds",
        "fixed_f_id",
        "result_n_effs",
        "fixed_f_id",
        "factors",
        "emb_size",
        "in_size",
        "out_size",
        "hidden_sizes",
        "contrasts",
        "embeddings",
        "name",
        "layers",
        "prev",
        "prev",
        "activation",
        "inp_dropout",
        "dropout",
        "loss",
        "_in",
        "_in",
        "result",
        "idx",
        "t",
        "t",
        "t",
        "result",
        "optim",
        "best_dev_acc",
        "plateau",
        "data_len",
        "epoch_loss",
        "epoch_acc",
        "data",
        "batch",
        "tgt_batch",
        "x",
        "tgt",
        "batch",
        "tgt_batch",
        "loss",
        "batch",
        "tgt_batch",
        "epoch_loss_norm",
        "dev_data",
        "probs",
        "pred",
        "gold",
        "acc",
        "epoch_acc_norm",
        "best_dev_acc",
        "plateau",
        "plateau_dev_acc",
        "batch",
        "x",
        "batch",
        "result",
        "tok_outp",
        "toks",
        "length",
        "diag_mask",
        "masked_toks",
        "masked_outps",
        "ps",
        "outps",
        "tgt_idx",
        "hiddens",
        "mu",
        "sd",
        "all_data",
        "data",
        "mappings",
        "n_students",
        "n_conditions",
        "n_prepositions",
        "n_fxns",
        "n_idioms",
        "n_tasks",
        "n_times",
        "n",
        "settings",
        "plot_data",
        "signi",
        "contrasts",
        "fixed_eff",
        "interaction_factors",
        "formula",
        "interaction_ns",
        "random_effs",
        "gjt_data",
        "pdt_data",
        "roberta",
        "tokenizer",
        "stimuli_df",
        "stimuli_dict",
        "probs",
        "hiddens",
        "number",
        "answer",
        "sentence",
        "target",
        "sentence",
        "stimuli_dict",
        "number",
        "answer",
        "ps",
        "hs",
        "idx",
        "probs",
        "number",
        "answer",
        "mappings",
        "data_lm_tgt_probs",
        "data_lm_avg_probs",
        "data_hiddens",
        "pretest_responses",
        "posttest_responses",
        "answer",
        "number",
        "response_correctness",
        "response",
        "ps",
        "idx",
        "__task",
        "not_idx_mask",
        "sentence",
        "_",
        "ps",
        "idx",
        "ps_true",
        "idx_true",
        "ps_false",
        "idx_false",
        "expected1",
        "expected2",
        "pre_resp",
        "post_resp",
        "lm_tgt_p",
        "old_tgt_mu",
        "old_tgt_sd",
        "lm_avg_p",
        "old_avg_mu",
        "old_avg_sd",
        "gjt_data",
        "gjt_data",
        "gjt_data",
        "gjt_data",
        "data",
        "data",
        "data",
        "factor_sizes",
        "SEED",
        "data",
        "train",
        "dev",
        "test",
        "n_train",
        "n_test",
        "gold",
        "gold_train",
        "rand_pred_train",
        "rand_pred",
        "rand_all_train_accs",
        "rand_overall_train_acc",
        "rand_all_accs",
        "rand_overall_acc",
        "maj",
        "maj_pred_train",
        "maj_pred",
        "maj_all_train_accs",
        "maj_overall_train_acc",
        "maj_all_accs",
        "maj_overall_acc",
        "contrasts",
        "ffnn",
        "ffnn_probs_train",
        "ffnn_pred_train",
        "ffnn_all_train_accs",
        "ffnn_overall_train_acc",
        "ffnn_probs",
        "ffnn_pred",
        "ffnn_all_accs",
        "ffnn_overall_acc",
        "optim",
        "autoguide",
        "model_and_data",
        "train_prior",
        "probs_prior_train",
        "pred_prior_train",
        "all_prior_train_accs",
        "overall_prior_train_acc",
        "prior_probs",
        "prior_pred",
        "all_prior_accs",
        "overall_prior_acc",
        "train_fit",
        "probs_train",
        "pred_train",
        "all_train_accs",
        "overall_train_acc",
        "probs",
        "pred",
        "all_accs",
        "overall_acc",
        "model_names",
        "model_train_preds",
        "model_preds",
        "zipped_train",
        "zipped",
        "fit",
        "means",
        "sds",
        "n_effs",
        "interesting",
        "setting_signi",
        "setting_plot_data",
        "setting_signi",
        "name",
        "diff_name",
        "mu",
        "sd",
        "n_eff",
        "conf_inter",
        "eff_size",
        "p_val",
        "setting_plot_data",
        "name",
        "idxs",
        "fs",
        "itr",
        "plot_mus",
        "plot_names",
        "plot_sds",
        "mu",
        "idx",
        "sd",
        "n_eff",
        "idx_name",
        "idx_diff",
        "idx1_name",
        "idx2_name",
        "diff_name",
        "conf_inter",
        "eff_size",
        "p_val",
        "idx2_name",
        "idx1_name",
        "setting_plot_data",
        "name",
        "plot_data",
        "setting_name",
        "signi",
        "setting_name"
    ],
    "comments": [
        "from pyro.infer.autoguide import AutoDelta",
        "FILENAME = 'data/all_71.csv'",
        "MAP_FILENAME = 'data/map_71.json'",
        "FILENAME = 'data/all_71_proper_pre.csv'",
        "MAP_FILENAME = 'data/map_71_proper_pre.json'",
        "FILENAME = 'data/all.csv'",
        "MAP_FILENAME = 'data/map.json'",
        "global_seed = 123",
        "n_warmup = 5",
        "n_chains = 1",
        "n_print = n_iter",
        "trace_len = 50",
        "train, dev, test",
        "qs=[0.001, 0.005, 0.01, 0.9, 0.95, 0.99])",
        "if fixed != 'intercept':",
        "f_id = fixed_f_id",
        "print(data.dtypes)",
        "('base', ['condition_id', 'task_id', 'time_id', 'idiom_id']),",
        "('prep1', ['fxn_id']),",
        "('prep2', ['fxn_id', 'idiom_id']),",
        "('stud1', ['student_id']),",
        "('stud2', ['student_id', 'answer_id']),",
        "('prep-base', ['condition_id', 'task_id', 'time_id', 'fxn_id', 'idiom_id']),",
        "('stud-base', ['condition_id', 'answer_id', 'time_id', 'student_id', 'idiom_id']),",
        "('prep-stud-base', ['condition_id', 'time_id', 'task_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "('gjt-prep-stud-answer-base', ['condition_id', 'time_id', 'answer_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "('gjt-prep-stud-answer-ctrl', ['control_id', 'time_id', 'answer_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "('pdt-prep-stud-ctrl', ['control_id', 'time_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "('prep-stud-task-base', ['condition_id', 'time_id', 'task_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "('gjt',  # 'gjt-ext',",
        "['condition_id', 'time_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "# ('gjt-lm', ['lm_hidden', 'condition_id', 'time_id', 'fxn_id', 'idiom_id', 'student_id', 'answer_id']),",
        "# ('gjt-irt', ['lm_hidden', 'condition_id', 'time_id', 'fxn_id', 'idiom_id', 'student_id', 'answer_id']),",
        "('pet',  # 'pdt-prep-stud-base',",
        "['condition_id', 'time_id', 'fxn_id', 'idiom_id', 'student_id']),",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "'prep-stud-answer-base',",
        "print('SENTENCE ANSWER TGT_P AVG_P RESP')",
        "print(expected1, expected2, sentence, answer,",
        "f'{pre_resp * 100:.2f}%', f'{post_resp * 100:.2f}%', f'{ps[idx] * 100:.2f}%', f'{ps.mean() * 100:.2f}%')",
        "random.randint(1, 9999)",
        "# formula += ' + ' + ' + '.join((f'(1 | {\":\".join(tup)})' for tup in get_tuples(['student_id', 'answer_id'], [2])))",
        ", 'betas': [0.8, 0.99]})",
        "exit(0)",
        "visualize([mu], [name], sds=[sd], ax=ax, color=name_i)",
        "plt.show()",
        "visualize(plot_mus, plot_names, sds=plot_sds, ax=ax, color=name_i)",
        "print()",
        "if 'pet' in plot_data and 'gjt' in plot_data:",
        "_, ax1 = plt.subplots(1)",
        "for plot_factor in ['intercept:idiom_id', 'intercept:condition_id:time_id', 'intercept:time_id']:",
        "pet_d = plot_data['pet'][plot_factor]",
        "gjt_d = plot_data['gjt'][plot_factor]",
        "plot_factor = plot_factor.replace('intercept:', '')",
        "if plot_factor == 'condition_id:time_id':",
        "gjt_mus, gjt_sds, gjt_labels = [], [], []",
        "pet_mus, pet_sds, pet_labels = [], [], []",
        "l2gjt_ms = {l: (m, s) for m, s, l in zip(gjt_d['mu'], gjt_d['sd'], gjt_d['name'])}",
        "l2pet_ms = {l: (m, s) for m, s, l in zip(pet_d['mu'], pet_d['sd'], pet_d['name'])}",
        "for l in ['SM:DELAYED', 'RM:DELAYED', 'CM:DELAYED', 'CONTROL:DELAYED',",
        "'SM:POST', 'RM:POST', 'CM:POST', 'CONTROL:POST']:",
        "gjt_m, gjt_s = l2gjt_ms[l]",
        "pet_m, pet_s = l2pet_ms[l]",
        "l = l.replace('DELAYED', 'DLY').replace('CONTROL', 'CTRL')",
        "gjt_mus.append(gjt_m)",
        "gjt_sds.append(gjt_s)",
        "gjt_labels.append(l)",
        "pet_mus.append(pet_m)",
        "pet_sds.append(pet_s)",
        "pet_labels.append(l)",
        "else:",
        "gjt_mus, gjt_sds, gjt_labels = gjt_d['mu'], gjt_d['sd'], gjt_d['name']",
        "pet_mus, pet_sds, pet_labels = pet_d['mu'], pet_d['sd'], pet_d['name']",
        "visualize(gjt_mus, gjt_labels, sds=gjt_sds, ax=ax1, marker='^', alpha=0.9)",
        "visualize(pet_mus, pet_labels, sds=pet_sds, ax=ax1, marker='o', alpha=0.5)",
        "",
        "_, ax3 = plt.subplots(1)",
        "if 'all' in plot_data:",
        "_, ax2 = plt.subplots(1)",
        "for m, s, l in zip(plot_data['all']['intercept:student_id:answer_id']['mu'],",
        "plot_data['all']['intercept:student_id:answer_id']['sd'],",
        "plot_data['all']['intercept:student_id:answer_id']['name']):",
        "stud_x, stud_xerr, stud_y, stud_yerr, stud_c = [], [], [], [], []",
        "if 'TRUE' in l:",
        "stud_y.append(m)",
        "stud_yerr.append(s)",
        "if 'FALSE' in l:",
        "stud_x.append(m)",
        "stud_xerr.append(s)",
        "if 'DESCRIBE' in l:",
        "stud_c.append(m)",
        "ax2.errorbar(x=stud_x, y=stud_y, xerr=stud_xerr, yerr=stud_yerr, linestyle='', elinewidth=0.5)",
        "ax2.scatter(x=stud_x, y=stud_y, c=stud_c, marker='.', cmap='cool')",
        "",
        "for plot_factor in ['intercept:time_id:answer_id', 'intercept:time_id:fxn_id:answer_id']:",
        "# ax3",
        "pass",
        "",
        "if 'gjt' in plot_data:",
        "for plot_factor in ['lm_tgt_p:lm_avg_p:answer_id:idiom_id', 'lm_tgt_p:answer_id:fxn_id:idiom_id',",
        "'lm_avg_p:answer_id:fxn_id:idiom_id']:",
        "# ax3",
        "pass",
        "# ax.tick_params(labelsize=9)",
        "# plt.savefig('fig.pgf')",
        "plt.show()"
    ],
    "docstrings": [
        "* 2 - 1)  #  * 100))",
        "* 2 - 1)  #  * 100))"
    ],
    "functions": [
        "summarize",
        "forward",
        "dfrow_to_inp",
        "train_model",
        "predict",
        "gpt_sentence_prob",
        "standardize"
    ],
    "classes": [
        "MLP"
    ]
}