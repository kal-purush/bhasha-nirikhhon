{
    "identifiers": [
        "schemacrawler",
        "crawl",
        "schemacrawler",
        "schemacrawler",
        "InformationSchemaKey",
        "TRIGGERS",
        "schemacrawler",
        "utility",
        "EnumUtility",
        "enumValue",
        "us",
        "fatehi",
        "utility",
        "Utility",
        "isBlank",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "SQLException",
        "java",
        "sql",
        "Statement",
        "java",
        "util",
        "EnumSet",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "schemacrawler",
        "schema",
        "ActionOrientationType",
        "schemacrawler",
        "schema",
        "ConditionTimingType",
        "schemacrawler",
        "schema",
        "EventManipulationType",
        "schemacrawler",
        "schemacrawler",
        "InformationSchemaViews",
        "schemacrawler",
        "schemacrawler",
        "Query",
        "schemacrawler",
        "schemacrawler",
        "SchemaCrawlerOptions",
        "us",
        "fatehi",
        "utility",
        "StringFormat",
        "LOGGER",
        "Logger",
        "getLogger",
        "getName",
        "retrieverConnection",
        "catalog",
        "options",
        "retrieverConnection",
        "catalog",
        "options",
        "informationSchemaViews",
        "getRetrieverConnection",
        "getInformationSchemaViews",
        "informationSchemaViews",
        "hasQuery",
        "TRIGGERS",
        "LOGGER",
        "log",
        "Level",
        "INFO",
        "LOGGER",
        "log",
        "Level",
        "FINE",
        "LOGGER",
        "log",
        "Level",
        "INFO",
        "triggerInformationSql",
        "informationSchemaViews",
        "getQuery",
        "TRIGGERS",
        "connection",
        "getRetrieverConnection",
        "getConnection",
        "statement",
        "connection",
        "createStatement",
        "results",
        "triggerInformationSql",
        "statement",
        "getLimitMap",
        "results",
        "next",
        "catalogName",
        "normalizeCatalogName",
        "results",
        "getString",
        "schemaName",
        "normalizeSchemaName",
        "results",
        "getString",
        "triggerName",
        "results",
        "getString",
        "LOGGER",
        "log",
        "Level",
        "FINER",
        "triggerName",
        "tableName",
        "results",
        "getString",
        "tableOptional",
        "lookupTable",
        "catalogName",
        "schemaName",
        "tableName",
        "tableOptional",
        "isPresent",
        "LOGGER",
        "log",
        "Level",
        "FINE",
        "catalogName",
        "schemaName",
        "tableName",
        "table",
        "tableOptional",
        "get",
        "eventManipulationTypes",
        "getEventManipulationType",
        "results",
        "actionOrder",
        "results",
        "getInt",
        "actionCondition",
        "results",
        "getString",
        "actionStatement",
        "results",
        "getString",
        "actionOrientation",
        "results",
        "getEnum",
        "ActionOrientationType",
        "conditionTimingString",
        "results",
        "getString",
        "conditionTimingString",
        "conditionTimingString",
        "results",
        "getString",
        "conditionTiming",
        "ConditionTimingType",
        "valueOfFromValue",
        "conditionTimingString",
        "trigger",
        "optionalTrigger",
        "table",
        "lookupTrigger",
        "triggerName",
        "optionalTrigger",
        "isPresent",
        "trigger",
        "optionalTrigger",
        "get",
        "trigger",
        "table",
        "triggerName",
        "trigger",
        "setActionOrder",
        "actionOrder",
        "trigger",
        "appendActionCondition",
        "actionCondition",
        "trigger",
        "appendActionStatement",
        "actionStatement",
        "trigger",
        "setActionOrientation",
        "actionOrientation",
        "trigger",
        "setConditionTiming",
        "conditionTiming",
        "trigger",
        "withQuoting",
        "getRetrieverConnection",
        "getIdentifiers",
        "trigger",
        "setEventManipulationTypes",
        "eventManipulationTypes",
        "trigger",
        "addAttributes",
        "results",
        "getAttributes",
        "table",
        "addTrigger",
        "trigger",
        "e",
        "LOGGER",
        "log",
        "Level",
        "WARNING",
        "e",
        "results",
        "results",
        "eventManipulationString",
        "results",
        "getString",
        "isBlank",
        "eventManipulationString",
        "eventManipulationString",
        "eventManipulationString",
        "toLowerCase",
        "Locale",
        "ENGLISH",
        "splitBy",
        "oracleSeparator",
        "plainSeparator",
        "eventManipulationString",
        "contains",
        "oracleSeparator",
        "splitBy",
        "oracleSeparator",
        "eventManipulationString",
        "contains",
        "plainSeparator",
        "splitBy",
        "plainSeparator",
        "splitBy",
        "eventManipulationTypeStrings",
        "splitBy",
        "isEmpty",
        "eventManipulationTypeStrings",
        "eventManipulationString",
        "eventManipulationTypeStrings",
        "eventManipulationString",
        "split",
        "splitBy",
        "eventManipulationTypes",
        "EnumSet",
        "noneOf",
        "eventManipulationTypeString",
        "eventManipulationTypeStrings",
        "eventManipulationType",
        "enumValue",
        "eventManipulationTypeString",
        "EventManipulationType",
        "eventManipulationTypes",
        "add",
        "eventManipulationType",
        "eventManipulationTypes",
        "size",
        "eventManipulationTypes",
        "remove",
        "EventManipulationType",
        "eventManipulationTypes"
    ],
    "literals": [
        "\"Not retrieving trigger definitions, since this was not requested\"",
        "\"Trigger definition SQL statement was not provided\"",
        "\"Retrieving trigger definitions\"",
        "\"TRIGGER_CATALOG\"",
        "\"TRIGGER_SCHEMA\"",
        "\"TRIGGER_NAME\"",
        "\"Retrieving trigger <%s>\"",
        "\"EVENT_OBJECT_TABLE\"",
        "\"Cannot find table <%s.%s.%s>\"",
        "\"ACTION_ORDER\"",
        "\"ACTION_CONDITION\"",
        "\"ACTION_STATEMENT\"",
        "\"ACTION_ORIENTATION\"",
        "\"ACTION_TIMING\"",
        "\"CONDITION_TIMING\"",
        "\"Could not retrieve triggers\"",
        "\"EVENT_MANIPULATION\"",
        "\" or \"",
        "\",\"",
        "\"\""
    ],
    "variables": [
        "trigger",
        "splitBy",
        "eventManipulationTypeStrings"
    ],
    "comments": [
        "\"EVENT_OBJECT_CATALOG\", \"EVENT_OBJECT_SCHEMA\"",
        "Set fields only for the first time the trigger is seen",
        "Add trigger to the table",
        "Find what to split multiple values by",
        "Oracle returns values separated by \"OR\"",
        "Split into multiple event manipulation types"
    ],
    "docstrings": [
        "========================================================================\nSchemaCrawler\nhttp://www.schemacrawler.com\nCopyright (c) 2000-2024, Sualeh Fatehi <sualeh@hotmail.com>.\nAll rights reserved.\n------------------------------------------------------------------------\n\nSchemaCrawler is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nSchemaCrawler and the accompanying materials are made available under\nthe terms of the Eclipse Public License v1.0, GNU General Public License\nv3 or GNU Lesser General Public License v3.\n\nYou may elect to redistribute this code under any of these licenses.\n\nThe Eclipse Public License is available at:\nhttp://www.eclipse.org/legal/epl-v10.html\n\nThe GNU General Public License v3 and the GNU Lesser General Public\nLicense v3 are available at:\nhttp://www.gnu.org/licenses/\n\n========================================================================",
        "A retriever uses database metadata to get the extended details about the database tables.",
        "* Retrieves a trigger information from the database, in the INFORMATION_SCHEMA format.\n   *\n   * @throws SQLException On a SQL exception"
    ],
    "functions": [
        "TriggerRetriever",
        "retrieveTriggerInformation",
        "getEventManipulationType"
    ],
    "classes": [
        "TriggerRetriever"
    ]
}