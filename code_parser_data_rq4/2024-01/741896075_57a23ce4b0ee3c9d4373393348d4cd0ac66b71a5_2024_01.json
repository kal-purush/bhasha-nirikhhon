{
    "identifiers": [
        "ProwlynxNET",
        "Core",
        "Extensions",
        "ProwlynxNET",
        "Core",
        "Models",
        "Services",
        "Security",
        "Cryptography",
        "ProwlynxNET",
        "Core",
        "Services",
        "Crypto",
        "ICryptoService",
        "_keyBytes",
        "_keyBytes",
        "DeriveKey",
        "value",
        "AesKeySize",
        "nameof",
        "AesService",
        "CipherMode",
        "CBC",
        "data",
        "Key",
        "NullReferenceException",
        "nameof",
        "Key",
        "Aes",
        "Create",
        "aes",
        "Key",
        "Key",
        "aes",
        "KeySize",
        "AesKeySize",
        "aes",
        "Mode",
        "AesCipherMode",
        "aes",
        "Padding",
        "PaddingMode",
        "PKCS7",
        "aes",
        "GenerateIV",
        "aes",
        "IV",
        "AdditionalData",
        "iv",
        "aes",
        "CreateEncryptor",
        "aes",
        "Key",
        "iv",
        "MemoryStream",
        "CryptoStream",
        "cipherStream",
        "encrypter",
        "CryptoStreamMode",
        "Write",
        "BinaryWriter",
        "tCryptoStream",
        "cipherStream",
        "Write",
        "iv",
        "tBinaryWriter",
        "Write",
        "data",
        "tCryptoStream",
        "FlushFinalBlock",
        "cipherStream",
        "ToArray",
        "cipherBytes",
        "data",
        "Key",
        "NullReferenceException",
        "nameof",
        "Key",
        "Aes",
        "Create",
        "aes",
        "Key",
        "Key",
        "aes",
        "KeySize",
        "AesKeySize",
        "aes",
        "Mode",
        "AesCipherMode",
        "aes",
        "Padding",
        "PaddingMode",
        "PKCS7",
        "aes",
        "BlockSize",
        "Copy",
        "data",
        "iv",
        "iv",
        "Length",
        "AdditionalData",
        "iv",
        "MemoryStream",
        "CryptoStream",
        "ms",
        "aes",
        "CreateDecryptor",
        "aes",
        "Key",
        "iv",
        "CryptoStreamMode",
        "Write",
        "BinaryWriter",
        "cs",
        "binaryWriter",
        "Write",
        "data",
        "iv",
        "Length",
        "data",
        "Length",
        "iv",
        "Length",
        "ms",
        "ToArray",
        "dataBytes",
        "size",
        "Rfc2898DeriveBytes",
        "Utils",
        "SHA256",
        "HashAlgorithmName",
        "SHA3_256",
        "rb",
        "GetBytes",
        "size"
    ],
    "literals": [
        "\"Provides AES Services\""
    ],
    "variables": [
        "_keyBytes",
        "Key",
        "AdditionalData",
        "Name",
        "Description",
        "CipherMode",
        "AesCipherMode",
        "AesKeySize",
        "aes",
        "iv",
        "encrypter",
        "cipherStream",
        "tCryptoStream",
        "tBinaryWriter",
        "cipherBytes",
        "aes",
        "iv",
        "ms",
        "cs",
        "binaryWriter",
        "dataBytes",
        "Rfc2898DeriveBytes",
        "rb"
    ],
    "comments": [
        "A basic AES service with some customisability.",
        "</summary>",
        "The AES Key. When set, will derive a key from the bytes passed to it.",
        "This is the true key, do not assume the key you give it will become the true key.",
        "</summary>",
        "The AES IV, this is randomly generated and prepended to the data every encryption.",
        "</summary>",
        "<inheritdoc />",
        "<inheritdoc />",
        "The cipher mode to use when encrypting and decrypting.",
        "</summary>",
        "The Aes Key Size: 64, 128, 256.",
        "</summary>",
        "Encrypt using the set mode of AES.",
        "</summary>",
        "<param name=\"data\">Raw data.</param>",
        "<returns>The encrypted bytes.</returns>",
        "prepend IV to data",
        "Decrypt using the set mode of AES.",
        "</summary>",
        "<param name=\"data\">Encrypted data.</param>",
        "<returns>The decrypted bytes.</returns>",
        "Get first KeySize bytes of IV and use it to decrypt",
        "IV is always blocksize / 8.",
        "Decrypt cipher text from data, starting just past the IV",
        "Salt isn't great... think up another way, user supplies salt?"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Encrypt",
        "Decrypt",
        "DeriveKey"
    ],
    "classes": [
        "AesService"
    ]
}