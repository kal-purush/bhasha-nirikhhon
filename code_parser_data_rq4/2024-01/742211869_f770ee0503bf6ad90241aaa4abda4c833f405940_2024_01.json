{
    "identifiers": [
        "camp",
        "model",
        "Score",
        "camp",
        "model",
        "Student",
        "camp",
        "model",
        "Subject",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Scanner",
        "studentStore",
        "subjectStore",
        "ScoreStore",
        "SUBJECT_TYPE_MANDATORY",
        "SUBJECT_TYPE_CHOICE",
        "studentIndex",
        "INDEX_TYPE_STUDENT",
        "subjectIndex",
        "INDEX_TYPE_SUBJECT",
        "scoreIndex",
        "INDEX_TYPE_SCORE",
        "sc",
        "args",
        "setInitData",
        "displayMainView",
        "e",
        "studentStore",
        "subjectStore",
        "of",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_MANDATORY",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_MANDATORY",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_MANDATORY",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_MANDATORY",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_MANDATORY",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_CHOICE",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_CHOICE",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_CHOICE",
        "sequence",
        "INDEX_TYPE_SUBJECT",
        "SUBJECT_TYPE_CHOICE",
        "ScoreStore",
        "INDEX_TYPE_STUDENT",
        "studentIndex",
        "INDEX_TYPE_STUDENT",
        "studentIndex",
        "INDEX_TYPE_SUBJECT",
        "subjectIndex",
        "INDEX_TYPE_SUBJECT",
        "subjectIndex",
        "scoreIndex",
        "INDEX_TYPE_SCORE",
        "scoreIndex",
        "flag",
        "flag",
        "input",
        "sc",
        "nextInt",
        "input",
        "displayStudentView",
        "displayScoreView",
        "flag",
        "sleep",
        "flag",
        "flag",
        "input",
        "sc",
        "nextInt",
        "input",
        "createStudent",
        "inquireStudent",
        "flag",
        "flag",
        "studentName",
        "sc",
        "next",
        "student",
        "sequence",
        "INDEX_TYPE_STUDENT",
        "studentName",
        "flag",
        "flag",
        "input",
        "sc",
        "nextInt",
        "input",
        "createScore",
        "updateRoundScoreBySubject",
        "inquireRoundGradeBySubject",
        "flag",
        "flag",
        "sc",
        "next",
        "studentId",
        "getStudentId",
        "studentId",
        "getStudentId",
        "studentId",
        "getStudentId"
    ],
    "literals": [
        "\"MANDATORY\"",
        "\"CHOICE\"",
        "\"ST\"",
        "\"SU\"",
        "\"SC\"",
        "\"\\n오류 발생!\\n프로그램을 종료합니다.\"",
        "\"Java\"",
        "\"객체지향\"",
        "\"Spring\"",
        "\"JPA\"",
        "\"MySQL\"",
        "\"디자인 패턴\"",
        "\"Spring Security\"",
        "\"Redis\"",
        "\"MongoDB\"",
        "\"\\n==================================\"",
        "\"내일배움캠프 수강생 관리 프로그램 실행 중...\"",
        "\"1. 수강생 관리\"",
        "\"2. 점수 관리\"",
        "\"3. 프로그램 종료\"",
        "\"관리 항목을 선택하세요...\"",
        "\"잘못된 입력입니다.\\n되돌아갑니다!\"",
        "\"프로그램을 종료합니다.\"",
        "\"==================================\"",
        "\"수강생 관리 실행 중...\"",
        "\"1. 수강생 등록\"",
        "\"2. 수강생 목록 조회\"",
        "\"3. 메인 화면 이동\"",
        "\"관리 항목을 선택하세요...\"",
        "\"잘못된 입력입니다.\\n메인 화면 이동...\"",
        "\"\\n수강생을 등록합니다...\"",
        "\"수강생 이름 입력: \"",
        "\"수강생 등록 성공!\\n\"",
        "\"\\n수강생 목록을 조회합니다...\"",
        "\"\\n수강생 목록 조회 성공!\"",
        "\"==================================\"",
        "\"점수 관리 실행 중...\"",
        "\"1. 수강생의 과목별 시험 회차 및 점수 등록\"",
        "\"2. 수강생의 과목별 회차 점수 수정\"",
        "\"3. 수강생의 특정 과목 회차별 등급 조회\"",
        "\"4. 메인 화면 이동\"",
        "\"관리 항목을 선택하세요...\"",
        "\"잘못된 입력입니다.\\n메인 화면 이동...\"",
        "\"\\n관리할 수강생의 번호를 입력하시오...\"",
        "\"시험 점수를 등록합니다...\"",
        "\"\\n점수 등록 성공!\"",
        "\"시험 점수를 수정합니다...\"",
        "\"\\n점수 수정 성공!\"",
        "\"회차별 등급을 조회합니다...\"",
        "\"\\n등급 조회 성공!\""
    ],
    "variables": [
        "studentStore",
        "subjectStore",
        "ScoreStore",
        "studentIndex",
        "subjectIndex",
        "scoreIndex"
    ],
    "comments": [
        "데이터 저장소",
        "과목 타입",
        "index 관리 필드",
        "스캐너",
        "초기 데이터 생성",
        "index 자동 증가",
        "수강생 관리",
        "점수 관리",
        "프로그램 종료",
        "수강생 등록",
        "수강생 목록 조회",
        "메인 화면 이동",
        "수강생 등록",
        "기능 구현 (필수 과목, 선택 과목)",
        "수강생 인스턴스 생성 예시 코드",
        "기능 구현",
        "수강생 목록 조회",
        "기능 구현",
        "수강생의 과목별 시험 회차 및 점수 등록",
        "수강생의 과목별 회차 점수 수정",
        "수강생의 특정 과목 회차별 등급 조회",
        "메인 화면 이동",
        "수강생의 과목별 시험 회차 및 점수 등록",
        "관리할 수강생 고유 번호",
        "기능 구현",
        "수강생의 과목별 회차 점수 수정",
        "관리할 수강생 고유 번호",
        "기능 구현 (수정할 과목 및 회차, 점수)",
        "기능 구현",
        "수강생의 특정 과목 회차별 등급 조회",
        "관리할 수강생 고유 번호",
        "기능 구현 (조회할 특정 과목)",
        "기능 구현"
    ],
    "docstrings": [
        "* Notification\n * Java, 객체지향이 아직 익숙하지 않은 분들은 위한 소스코드 틀입니다.\n * main 메서드를 실행하면 프로그램이 실행됩니다.\n * model 의 클래스들과 아래 (// 기능 구현...) 주석 부분을 완성해주세요!\n * 프로젝트 구조를 변경하거나 기능을 추가해도 괜찮습니다!\n * 구현에 도움을 주기위한 Base 프로젝트입니다. 자유롭게 이용해주세요!"
    ],
    "functions": [
        "main",
        "setInitData",
        "sequence",
        "displayMainView",
        "displayStudentView",
        "createStudent",
        "inquireStudent",
        "displayScoreView",
        "getStudentId",
        "createScore",
        "updateRoundScoreBySubject",
        "inquireRoundGradeBySubject"
    ],
    "classes": [
        "CampManagementApplication"
    ]
}