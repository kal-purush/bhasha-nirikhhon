{
    "identifiers": [
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "history",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Entry",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "camunda",
        "bpm",
        "engine",
        "ProcessEngineException",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "cfg",
        "ProcessEngineConfigurationImpl",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "interceptor",
        "CommandContext",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "persistence",
        "entity",
        "PropertyChange",
        "SynchronousOperationLogProducer",
        "SUMMARY_LOG",
        "UNLIMITED_LOG",
        "results",
        "results",
        "commandContext",
        "result",
        "propChanges",
        "isSummary",
        "commandContext",
        "results",
        "results",
        "results",
        "isEmpty",
        "logEntriesPerSyncOperationLimit",
        "commandContext",
        "getProcessEngineConfiguration",
        "getLogEntriesPerSyncOperationLimit",
        "logEntriesPerSyncOperationLimit",
        "SUMMARY_LOG",
        "results",
        "size",
        "propChangesForOperation",
        "getSummarizingPropChangesForOperation",
        "results",
        "propChangesForOperation",
        "propChangesForOperation",
        "Collections",
        "singletonList",
        "PropertyChange",
        "EMPTY_CHANGE",
        "createOperationLogEntry",
        "commandContext",
        "results",
        "get",
        "propChangesForOperation",
        "propChangesForOperation",
        "getPropChangesForOperation",
        "results",
        "propChangesForOperation",
        "propChangesForOperation",
        "results",
        "stream",
        "collect",
        "Collectors",
        "toMap",
        "identity",
        "result",
        "Collections",
        "singletonList",
        "PropertyChange",
        "EMPTY_CHANGE",
        "logEntriesPerSyncOperationLimit",
        "UNLIMITED_LOG",
        "logEntriesPerSyncOperationLimit",
        "propChangesForOperation",
        "size",
        "logEntriesPerSyncOperationLimit",
        "propChangesForOperation",
        "size",
        "propChanges",
        "propChangesForOperation",
        "entrySet",
        "createOperationLogEntry",
        "commandContext",
        "propChanges",
        "getKey",
        "propChanges",
        "getValue"
    ],
    "literals": [
        "\"Maximum number of operation log entries for operation type synchronous APIs reached. Configured limit is \"",
        "\" but \"",
        "\" entities were affected by API call.\""
    ],
    "variables": [],
    "comments": [
        "create summary from multi-result operation",
        "convert null return value to empty list",
        "use first result as representative for summarized operation log entry",
        "create detailed log for each operation result",
        "create a map with empty result lists for each result item",
        "produce one operation log per affected entity"
    ],
    "docstrings": [
        "* Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership. Camunda licenses this file to you under the Apache License,\n * Version 2.0; you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Interface for Commands that synchronously modify multiple entities in one operation.\n * The methods of this interface take care of producing operation log entries based on the\n * {@link ProcessEngineConfigurationImpl#getLogEntriesPerSyncOperationLimit() logEntriesPerSyncOperationLimit} property.",
        "* Returns a map containing a list of changed properties for every result of the operation.\n   * Used to produce an operation log entry per entry contained in the returned map.",
        "* Returns a list of changed properties summarizing the whole operation involving multiple entities.",
        "* Calls the code that produces the operation log. Usually <code>commandContext.getOperationLogManager().log...</code>\n   *\n   * The implementation must be capable of producing a single, summarizing operation log that contain information about an operation\n   * spanning affecting multiple entities as well as producing a single, detailed operation log containing information about a single\n   * affected entity. This method is called by the {@link SynchronousOperationLogProducer#produceOperationLog(CommandContext, List) produceOperationLog}\n   * method.\n   *\n   * @param commandContext the current command context\n   * @param result An object resulting from the operation for which this method produces the operation log. In case the operation produced\n   * multiple objects, depending on the implementation a representative object from the list of results or null can be passed.\n   * @param propChanges property changes to be attached to the operation log\n   * @param isSummary indicates whether the implementation should produce a summary log or a detailed log",
        "* The implementing command can call this method to produce the operation log entries for the current operation."
    ],
    "functions": [
        "getPropChangesForOperation",
        "getSummarizingPropChangesForOperation",
        "createOperationLogEntry",
        "produceOperationLog"
    ],
    "classes": []
}