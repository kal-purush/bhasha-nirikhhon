{
    "identifiers": [
        "Nop",
        "Web",
        "Factories",
        "Nop",
        "Services",
        "Localization",
        "NUnit",
        "Framework",
        "FluentAssertions",
        "Nop",
        "Tests",
        "Nop",
        "Web",
        "Tests",
        "Public",
        "Factories",
        "WebTest",
        "OneTimeSetUp",
        "_countryModelFactory",
        "GetService",
        "ICountryModelFactory",
        "_localizationService",
        "GetService",
        "ILocalizationService",
        "_countryId",
        "_invalidCountryId",
        "Test",
        "_countryModelFactory",
        "GetStatesByCountryIdAsync",
        "_countryId",
        "models",
        "Should",
        "NotBeNullOrEmpty",
        "Test",
        "_countryModelFactory",
        "GetStatesByCountryIdAsync",
        "_invalidCountryId",
        "models",
        "Should",
        "NotBeNullOrEmpty",
        "Test",
        "_countryModelFactory",
        "GetStatesByCountryIdAsync",
        "_countryId",
        "models",
        "AllAwaitAsync",
        "m",
        "name",
        "_localizationService",
        "GetResourceAsync",
        "result",
        "Should",
        "BeTrue",
        "Test",
        "_countryModelFactory",
        "GetStatesByCountryIdAsync",
        "_countryId",
        "models",
        "AnyAwaitAsync",
        "m",
        "name",
        "_localizationService",
        "GetResourceAsync",
        "result",
        "Should",
        "BeTrue"
    ],
    "literals": [
        "\"41\"",
        "\"0\"",
        "\"Address.SelectState\"",
        "\"Address.SelectState\""
    ],
    "variables": [
        "ICountryModelFactory",
        "_countryModelFactory",
        "ILocalizationService",
        "_localizationService",
        "_countryId",
        "_invalidCountryId",
        "models",
        "models",
        "models",
        "result",
        "models",
        "result"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "SetUp",
        "CanGetStatesByValidCountryId",
        "CanGetStatesByInvalidCountryId",
        "CanGetStatesByCountryIdWithoutSelectState",
        "CanGetStatesByCountryIdWithSelectState"
    ],
    "classes": [
        "CountryModelFactoryTests"
    ]
}