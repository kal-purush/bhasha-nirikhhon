{
    "identifiers": [
        "frc",
        "lib",
        "math",
        "positionCounts",
        "gearRatio",
        "positionCounts",
        "gearRatio",
        "degrees",
        "gearRatio",
        "degrees",
        "gearRatio",
        "positionCounts",
        "gearRatio",
        "positionCounts",
        "gearRatio",
        "degrees",
        "gearRatio",
        "degrees",
        "gearRatio",
        "velocityCounts",
        "gearRatio",
        "motorRPM",
        "velocityCounts",
        "mechRPM",
        "motorRPM",
        "gearRatio",
        "mechRPM",
        "RPM",
        "gearRatio",
        "motorRPM",
        "RPM",
        "gearRatio",
        "sensorCounts",
        "motorRPM",
        "sensorCounts",
        "velocitycounts",
        "circumference",
        "gearRatio",
        "wheelRPM",
        "falconToRPM",
        "velocitycounts",
        "gearRatio",
        "wheelMPS",
        "wheelRPM",
        "circumference",
        "wheelMPS",
        "velocity",
        "circumference",
        "gearRatio",
        "wheelRPM",
        "velocity",
        "circumference",
        "wheelVelocity",
        "RPMToFalcon",
        "wheelRPM",
        "gearRatio",
        "wheelVelocity",
        "positionCounts",
        "circumference",
        "gearRatio",
        "positionCounts",
        "circumference",
        "gearRatio",
        "meters",
        "circumference",
        "gearRatio",
        "meters",
        "circumference",
        "gearRatio"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* @param positionCounts CANCoder Position Counts\n     * @param gearRatio Gear Ratio between CANCoder and Mechanism\n     * @return Degrees of Rotation of Mechanism",
        "* @param degrees Degrees of rotation of Mechanism\n     * @param gearRatio Gear Ratio between CANCoder and Mechanism\n     * @return CANCoder Position Counts",
        "* @param counts Falcon Position Counts\n     * @param gearRatio Gear Ratio between Falcon and Mechanism\n     * @return Degrees of Rotation of Mechanism",
        "* @param degrees Degrees of rotation of Mechanism\n     * @param gearRatio Gear Ratio between Falcon and Mechanism\n     * @return Falcon Position Counts",
        "* @param velocityCounts Falcon Velocity Counts\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return RPM of Mechanism",
        "* @param RPM RPM of mechanism\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return RPM of Mechanism",
        "* @param velocitycounts Falcon Velocity Counts\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon MPS)\n     * @return Falcon Velocity Counts",
        "* @param velocity Velocity MPS\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon MPS)\n     * @return Falcon Velocity Counts",
        "* @param positionCounts Falcon Position Counts\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Wheel\n     * @return Meters",
        "* @param meters Meters\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Wheel\n     * @return Falcon Position Counts"
    ],
    "functions": [
        "CANcoderToDegrees",
        "degreesToCANcoder",
        "falconToDegrees",
        "degreesToFalcon",
        "falconToRPM",
        "RPMToFalcon",
        "falconToMPS",
        "MPSToFalcon",
        "falconToMeters",
        "MetersToFalcon"
    ],
    "classes": [
        "Conversions"
    ]
}