{
    "identifiers": [
        "numpy",
        "np",
        "time",
        "pylsl",
        "StreamInfo",
        "StreamOutlet",
        "local_clock",
        "random",
        "random",
        "rand",
        "num_channels",
        "noise_level",
        "primary_frequency",
        "t",
        "np",
        "array",
        "np",
        "sin",
        "np",
        "pi",
        "primary_frequency",
        "t",
        "i",
        "num_channels",
        "noise_level",
        "np",
        "random",
        "randn",
        "num_channels",
        "eeg_signals",
        "noise",
        "eeg_signals_with_noise",
        "local_clock",
        "StreamInfo",
        "stream_name",
        "num_channels",
        "sampling_rate",
        "StreamOutlet",
        "info",
        "local_clock",
        "start_time",
        "sampling_rate",
        "elapsed_time",
        "sent_samples",
        "sample_ix",
        "required_samples",
        "generate_eeg_data",
        "num_channels",
        "sampling_rate",
        "noise_level",
        "primary_frequency",
        "timestamp",
        "outlet",
        "push_sample",
        "eeg_frame",
        "flatten",
        "timestamp",
        "timestamp",
        "timestamp",
        "sampling_rate",
        "sent_samples",
        "required_samples",
        "time",
        "sleep"
    ],
    "literals": [
        "'Dummy-EEG'",
        "'my_stream_type'",
        "'float32'",
        "'my_stream_id'"
    ],
    "variables": [
        "eeg_signals",
        "noise",
        "eeg_signals_with_noise",
        "num_channels",
        "duration",
        "num_samples",
        "sampling_rate",
        "noise_level",
        "primary_frequency",
        "start_time",
        "sent_samples",
        "timestamp",
        "stream_name",
        "info",
        "outlet",
        "elapsed_time",
        "required_samples",
        "eeg_frame"
    ],
    "comments": [
        "Generate a sinusoidal signal to simulate brainwave activity",
        "Add random noise to the signal",
        "Usage",
        "seconds",
        "Hz",
        "Hz",
        "using the local_clock() to track elapsed time",
        "track how many samples we have sent",
        "recursively send this data to LSL",
        "now send it and wait for a bit before trying again."
    ],
    "docstrings": [
        "\"\"\"\n    Simulates EEG (Electroencephalography) data by generating sinusoidal signals with specified properties.\n\n    The function creates a set of sinusoidal signals, each representing the EEG data for a single channel.\n    It then adds Gaussian noise to these signals to simulate real-world EEG data more accurately.\n\n    Parameters:\n    - num_channels (int): The number of EEG channels to simulate. Each channel will have its own sinusoidal signal. Default is 8.\n    - noise_level (float): The standard deviation of the Gaussian noise added to the signals. This controls how noisy the simulated EEG data will be. Default is 0.5.\n    - primary_frequency (float): The frequency of the sinusoidal wave in Hz, representing the primary frequency component of the EEG data. Default is 12Hz.\n    - t (float or array-like): The time points at which the EEG signals are sampled. Can be a single number or an array of numbers. Default is 0.\n\n    Returns:\n    - eeg_signals_with_noise (ndarray): An array of shape (num_channels,) containing the simulated EEG data for each channel, with noise added.\n\n    Example:\n    >>> generate_eeg_data(num_channels=4, noise_level=0.2, primary_frequency=10, t=np.linspace(0, 1, 500))\n    array([...])  # Returns a (4,) array with the simulated EEG data for 4 channels\n    \"\"\""
    ],
    "functions": [
        "generate_eeg_data"
    ],
    "classes": []
}