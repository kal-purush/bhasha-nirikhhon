{
    "identifiers": [
        "pydantic",
        "BaseModel",
        "typing",
        "pydantic_resolve",
        "Resolver",
        "LoaderDepend",
        "aiodataloader",
        "DataLoader",
        "pytest",
        "pydantic_resolve",
        "exceptions",
        "GlobalLoaderFieldOverlappedError",
        "DataLoader",
        "keys",
        "k",
        "power",
        "k",
        "keys",
        "DataLoader",
        "keys",
        "k",
        "power",
        "k",
        "keys",
        "DataLoader",
        "keys",
        "k",
        "power",
        "add",
        "k",
        "keys",
        "keys",
        "k",
        "k",
        "keys",
        "BaseModel",
        "loader",
        "LoaderDepend",
        "LoaderA",
        "loader",
        "load",
        "val",
        "loader",
        "LoaderDepend",
        "LoaderB",
        "loader",
        "load",
        "val",
        "loader",
        "LoaderDepend",
        "LoaderC",
        "loader",
        "load",
        "val",
        "pytest",
        "mark",
        "asyncio",
        "A",
        "val",
        "n",
        "n",
        "Resolver",
        "global_loader_filter",
        "loader_filters",
        "LoaderC",
        "resolve",
        "data",
        "data",
        "a",
        "data",
        "b",
        "data",
        "c",
        "pytest",
        "mark",
        "asyncio",
        "A",
        "val",
        "n",
        "n",
        "Resolver",
        "loader_filters",
        "LoaderA",
        "LoaderB",
        "LoaderC",
        "resolve",
        "data",
        "data",
        "a",
        "data",
        "b",
        "data",
        "c",
        "pytest",
        "mark",
        "asyncio",
        "A",
        "val",
        "n",
        "n",
        "pytest",
        "raises",
        "GlobalLoaderFieldOverlappedError",
        "Resolver",
        "global_loader_filter",
        "loader_filters",
        "LoaderC",
        "resolve",
        "data"
    ],
    "literals": [
        "'power'",
        "'add'",
        "'power'",
        "'power'",
        "'power'",
        "'add'",
        "'power'",
        "'add'",
        "'power'"
    ],
    "variables": [
        "power",
        "power",
        "power",
        "add",
        "val",
        "a",
        "b",
        "c",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "batch_load_fn",
        "batch_load_fn",
        "batch_load_fn",
        "loader_fn_a",
        "resolve_a",
        "resolve_b",
        "resolve_c",
        "test_case_0",
        "test_case_1",
        "test_case_3"
    ],
    "classes": [
        "LoaderA",
        "LoaderB",
        "LoaderC",
        "A"
    ]
}