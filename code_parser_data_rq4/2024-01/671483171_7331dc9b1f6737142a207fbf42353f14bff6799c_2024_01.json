{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "bs4",
        "BeautifulSoup",
        "crispy_forms",
        "utils",
        "render_crispy_form",
        "django",
        "db",
        "models",
        "Max",
        "django",
        "http",
        "HttpResponse",
        "django",
        "urls",
        "reverse_lazy",
        "path",
        "django",
        "utils",
        "translation",
        "gettext",
        "_",
        "django_pandas",
        "io",
        "read_frame",
        "core",
        "views",
        "models",
        "forms",
        "dart2",
        "views",
        "GenericDetailView",
        "GenericDetailView",
        "models",
        "MissionSampleType",
        "_",
        "_",
        "mission",
        "name",
        "name",
        "reverse_lazy",
        "args",
        "pk",
        "kwargs",
        "get_context_data",
        "kwargs",
        "key",
        "reverse_lazy",
        "views",
        "reports",
        "key",
        "args",
        "mission",
        "pk",
        "key",
        "views",
        "reports",
        "keys",
        "datatype",
        "id",
        "mission",
        "id",
        "data_type_seq",
        "data_type_seq",
        "data_type_seq",
        "forms",
        "BioChemDataType",
        "initial",
        "initial",
        "context",
        "request",
        "kwargs",
        "kwargs",
        "models",
        "MissionSampleType",
        "objects",
        "get",
        "pk",
        "mission_sample_type_id",
        "forms",
        "CardForm",
        "card_title",
        "mission_sample_type",
        "card_name",
        "render_crispy_form",
        "sample_type_form",
        "BeautifulSoup",
        "sample_type_html",
        "sample_type_soup",
        "find",
        "id",
        "sample_type_form",
        "get_card_body_id",
        "card_body_div",
        "attrs",
        "reverse_lazy",
        "args",
        "mission_sample_type_id",
        "card_body_div",
        "attrs",
        "BeautifulSoup",
        "sample_type_form",
        "get_card_name",
        "form_soup",
        "find",
        "form",
        "append",
        "sample_type_soup",
        "HttpResponse",
        "form_soup",
        "request",
        "kwargs",
        "kwargs",
        "models",
        "MissionSampleType",
        "objects",
        "get",
        "pk",
        "sensor_id",
        "mission_sample_type",
        "mission",
        "request",
        "GET",
        "request",
        "GET",
        "page_limit",
        "page",
        "BeautifulSoup",
        "models",
        "DiscreteSampleValue",
        "objects",
        "sample__type__id",
        "sensor_id",
        "aggregate",
        "Max",
        "models",
        "Sample",
        "objects",
        "type_id",
        "sensor_id",
        "queryset",
        "order_by",
        "page_start",
        "page_start",
        "page_limit",
        "queryset",
        "exists",
        "HttpResponse",
        "queryset",
        "values",
        "read_frame",
        "queryset",
        "headings",
        "df",
        "pivot",
        "index",
        "columns",
        "j",
        "column",
        "headings",
        "i",
        "replicates",
        "column",
        "i",
        "col_index",
        "df",
        "columns",
        "j",
        "replicates",
        "i",
        "index",
        "df",
        "shape",
        "df",
        "insert",
        "index",
        "col_index",
        "np",
        "nan",
        "np",
        "nan",
        "format_sensor_table",
        "df",
        "mission_sample_type",
        "soup",
        "find",
        "table",
        "attrs",
        "table",
        "find",
        "table",
        "find",
        "table_body",
        "find_all",
        "last_tr",
        "attrs",
        "last_tr",
        "attrs",
        "last_tr",
        "attrs",
        "reverse_lazy",
        "args",
        "sensor_id",
        "page",
        "last_tr",
        "attrs",
        "soup",
        "find",
        "find_all",
        "td",
        "tds",
        "page",
        "HttpResponse",
        "soup",
        "find",
        "findAll",
        "recursive",
        "HttpResponse",
        "soup",
        "response",
        "df",
        "pd",
        "DataFrame",
        "mission_sample_type",
        "models",
        "MissionSampleType",
        "BeautifulSoup",
        "df",
        "fillna",
        "inplace",
        "i",
        "df",
        "shape",
        "i",
        "df",
        "i",
        "astype",
        "i",
        "df",
        "i",
        "x",
        "x",
        "x",
        "x",
        "df",
        "to_html",
        "BeautifulSoup",
        "html",
        "soup",
        "find",
        "id",
        "sample_table",
        "attrs",
        "soup",
        "new_tag",
        "msg_div",
        "attrs",
        "sample_table",
        "insert",
        "msg_div",
        "soup",
        "find",
        "find",
        "soup",
        "find",
        "findNext",
        "replicate_header",
        "replicate_header",
        "decompose",
        "sensor_headers",
        "find",
        "sensor_column",
        "findNext",
        "mission_sample_type",
        "name",
        "soup",
        "findChildren",
        "soup",
        "find",
        "table",
        "attrs",
        "table",
        "find",
        "find",
        "th",
        "attrs",
        "th",
        "th",
        "findNext",
        "th",
        "attrs",
        "th",
        "th",
        "attrs",
        "root",
        "append",
        "table",
        "soup",
        "request",
        "kwargs",
        "kwargs",
        "models",
        "MissionSampleType",
        "objects",
        "get",
        "pk",
        "sample_type",
        "mission_sample_type",
        "mission",
        "request",
        "method",
        "models",
        "Sample",
        "objects",
        "mission_sample_type",
        "mission_sample_type",
        "_",
        "reverse_lazy",
        "args",
        "mission",
        "pk",
        "forms",
        "save_load_component",
        "attrs",
        "HttpResponse",
        "soup",
        "list_samples",
        "request",
        "mission_id",
        "mission",
        "path",
        "SampleTypeDetails",
        "as_view",
        "name",
        "path",
        "sample_type_card",
        "name",
        "path",
        "list_samples",
        "name",
        "path",
        "sample_delete",
        "name"
    ],
    "literals": [
        "\"Sample Type\"",
        "\"core/mission_sample_type.html\"",
        "\"Mission Sample Type\"",
        "f\" : {self.object.mission.name} - {self.object.name}\"",
        "\"core:mission_edit\"",
        "'reports'",
        "'mission_sample_type'",
        "'sample_type_id'",
        "'mission_id'",
        "'data_type_code'",
        "'biochem_form'",
        "'mission_sample_type_id'",
        "\"mission_sample_type\"",
        "'html.parser'",
        "'hx-get'",
        "\"core:sample_type_sample_list\"",
        "'hx-trigger'",
        "'load'",
        "f'<div id=\"div_id_{sample_type_form.get_card_name()}\"></div>'",
        "'html.parser'",
        "'div'",
        "'mission_sample_type_id'",
        "'page'",
        "'page'",
        "'<table id=\"sample_table\"></table>'",
        "'html.parser'",
        "'replicate'",
        "'replicate__max'",
        "'bottle__bottle_id'",
        "'bottle__bottle_id'",
        "'bottle__pressure'",
        "'discrete_values__replicate'",
        "'discrete_values__value'",
        "'discrete_values__flag'",
        "'discrete_values__datatype'",
        "'discrete_values__comment'",
        "'Value'",
        "'Flag'",
        "'Datatype'",
        "'Comments'",
        "\"Sample\"",
        "\"Pressure\"",
        "\"Replicate\"",
        "'Sample'",
        "'Pressure'",
        "'Replicate'",
        "'table'",
        "'class'",
        "'dataframe table table-striped '",
        "'table-sm tscroll horizontal-scrollbar'",
        "'thead'",
        "'tbody'",
        "'tr'",
        "'hx-target'",
        "'this'",
        "'hx-trigger'",
        "'intersect once'",
        "'hx-get'",
        "'core:sample_type_sample_list'",
        "f\"?page={page + 1}\"",
        "'hx-swap'",
        "\"afterend\"",
        "'table'",
        "'td'",
        "'class'",
        "'text-center text-nowrap'",
        "'tbody'",
        "'tr'",
        "'---'",
        "'Datatype'",
        "'Datatype'",
        "'Datatype'",
        "'string'",
        "'Datatype'",
        "'Datatype'",
        "'---'",
        "'<div id=\"sample_table\">'",
        "\"</div>\"",
        "'html.parser'",
        "\"sample_table\"",
        "'class'",
        "\"vertical-scrollbar\"",
        "\"div\"",
        "'id'",
        "\"div_id_sample_table_msg\"",
        "\"thead\"",
        "\"tr\"",
        "'tr'",
        "'tr'",
        "'th'",
        "'th'",
        "f'{mission_sample_type.name}'",
        "'table'",
        "'id'",
        "'table_id_sample_table'",
        "'tr'",
        "'th'",
        "'class'",
        "'text-center'",
        "'th'",
        "'class'",
        "'text-center'",
        "'Comments'",
        "'class'",
        "' w-100'",
        "'mission_sample_type_id'",
        "\"POST\"",
        "'component_id'",
        "\"div_id_delete_samples\"",
        "'alert_type'",
        "'info'",
        "'message'",
        "\"Loading\"",
        "'hx-get'",
        "'core:mission_samples_sample_details'",
        "'hx-trigger'",
        "'load'",
        "'hx-push-url'",
        "'true'",
        "'sampletype/<int:pk>/'",
        "\"sample_type_details\"",
        "'sampletype/card/<int:mission_sample_type_id>/'",
        "\"sample_type_card\"",
        "'sampletype/list/<int:mission_sample_type_id>/'",
        "\"sample_type_sample_list\"",
        "'sampletype/delete/<int:mission_sample_type_id>/'",
        "\"sample_type_delete\""
    ],
    "variables": [
        "model",
        "page_title",
        "template_name",
        "context",
        "context",
        "context",
        "data_type_seq",
        "initial",
        "initial",
        "initial",
        "initial",
        "context",
        "mission_sample_type_id",
        "mission_sample_type",
        "sample_type_form",
        "sample_type_html",
        "sample_type_soup",
        "card_body_div",
        "form_soup",
        "form",
        "sensor_id",
        "mission_sample_type",
        "mission",
        "page",
        "page_limit",
        "page_start",
        "soup",
        "replicates",
        "queryset",
        "queryset",
        "queryset",
        "headings",
        "df",
        "df",
        "columns",
        "df",
        "col_index",
        "index",
        "df",
        "col_index",
        "soup",
        "table",
        "table_head",
        "table_body",
        "last_tr",
        "tds",
        "td",
        "response",
        "response",
        "df",
        "df",
        "html",
        "soup",
        "sample_table",
        "msg_div",
        "sensor_headers",
        "replicate_header",
        "sensor_column",
        "column",
        "column",
        "root",
        "table",
        "th",
        "sample_type",
        "mission_sample_type",
        "mission",
        "attrs",
        "soup",
        "mission_sample_type_urls"
    ],
    "comments": [
        "unfortunately if a page doesn't contain columns for 1 or 2 replicates when there's more the",
        "HTML table that gets returned to the interface will be missing columns and it throws everything",
        "out of alignment. We'll get the replicate columns here and use that value to insert blank",
        "columns into the dataframe if a replicate column is missing from the query set.",
        "if there are no more bottles then we stop loading, otherwise weird things happen",
        "add styles to the table so it's consistent with the rest of the application",
        "now we'll attach an HTMX call to the last queried table row so when the user scrolls to it the next batch",
        "of samples will be loaded into the table.",
        "finally, align all text in each column to the center of the cell",
        "Pandas has the ability to render dataframes as HTML and it's super fast, but the default table looks awful.",
        "start by replacing nan values with '---'",
        "reformat the Datatype columns, which will be represented as floats, but we want them as integers",
        "convert the dataframe to an HTML table",
        "Using BeautifulSoup for html manipulation to post process the HTML table Pandas created",
        "this will be a big table add scrolling",
        "add a message area that will hold saving, loading, error alerts",
        "delete the row with the 'replicates' labels",
        "soup.find(\"thead\").find('tr').findNext('tr').decompose()",
        "The next few rows will be the 'Sensor' row with labels like C0SM, T090C, and oxy",
        "followed by the 'replicate' row that describes if this is a single, double, triple sample.",
        "We're going to flatten the headers down to one row then remove the others.",
        "we now have two header rows. The first contains all the sensor/sample names. The second contains the \"Sample\"",
        "and \"Pressure\" labels. I want to copy the first two columns from the second header to the first two columns",
        "of the first header (because the labels might be translated) then delete the second row",
        "'Value' column",
        "if the sensor_id is present then we want to show the specific details for this sensor/sample",
        "center all of the header text",
        "send the user back to the all samples page.",
        "###### Mission Sample ###### #"
    ],
    "docstrings": [],
    "functions": [
        "get_page_title",
        "get_settings_url",
        "get_context_data",
        "sample_type_card",
        "list_samples",
        "format_sensor_table",
        "sample_delete"
    ],
    "classes": [
        "SampleTypeDetails"
    ]
}