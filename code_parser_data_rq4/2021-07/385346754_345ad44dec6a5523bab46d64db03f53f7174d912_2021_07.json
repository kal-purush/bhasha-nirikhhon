{
    "identifiers": [
        "os",
        "sys",
        "subprocess",
        "inspect",
        "logging",
        "glob",
        "os",
        "environ",
        "homeDir",
        "baseDir",
        "glob",
        "glob",
        "baseDir",
        "os",
        "mkdir",
        "baseDir",
        "open",
        "logfile",
        "open",
        "logfile",
        "logging",
        "basicConfig",
        "filename",
        "logfile",
        "filemode",
        "format",
        "level",
        "logging",
        "INFO",
        "logging",
        "info",
        "baseDirState",
        "logging",
        "warning",
        "baseDir",
        "logstate",
        "logging",
        "info",
        "logfile",
        "msg",
        "kwargs",
        "msg",
        "sys",
        "exc_info",
        "tb_lineno",
        "AttributeError",
        "inspect",
        "currentframe",
        "f_back",
        "f_lineno",
        "format",
        "ln",
        "msg",
        "sys",
        "exit",
        "DrexError",
        "kwargs",
        "msg",
        "kwargs",
        "DrexError",
        "kwargs",
        "msg",
        "kwargs",
        "file",
        "file",
        "sys",
        "argv",
        "split",
        "subprocess",
        "run",
        "capture_output",
        "stdout",
        "_kdeID",
        "decode",
        "strip",
        "kdeID",
        "subprocess",
        "run",
        "kdeID",
        "files",
        "capture_output",
        "logging",
        "info",
        "share",
        "logging",
        "error",
        "DeviceNotFoundError",
        "e",
        "logging",
        "error",
        "exc_info",
        "IndexError",
        "logging",
        "error",
        "exc_info",
        "NoFileError",
        "e",
        "logging",
        "error",
        "exc_info"
    ],
    "literals": [
        "\"HOME\"",
        "f\"{homeDir}/.local/share/kconnectnemo\"",
        "f\"{baseDir}/kconnectnemo.log\"",
        "\"exists\"",
        "\"exists\"",
        "\"created\"",
        "\"r+\"",
        "\"a+\"",
        "\"created\"",
        "\"a+\"",
        "'%(asctime)s - %(message)s'",
        "\"\\n\"",
        "\"-\"",
        "\"Log Start\"",
        "\"-\"",
        "\"created\"",
        "f\"Base directory created at {baseDir}. This is not normal and your files might be damaged/missing.\"",
        "\"created\"",
        "f\"Log file created at {logfile}\"",
        "\"{0.__name__} (line {1}): {2}\"",
        "\"No devices were found. Try checking if both devices are on the same WiFi network or re-pair if the problem persists\"",
        "\"No files where selected to share. Try selecting one or more files this time\"",
        "\",\"",
        "\"kdeconnect-cli\"",
        "\"-a\"",
        "\"--id-only\"",
        "'utf-8'",
        "\"kdeconnect-cli\"",
        "\"-d\"",
        "\"--share\"",
        "\"No device was found connected to KDE Connect. Process was aborted.\"",
        "\"Exception occured after checking for device ID\"",
        "\"No file name specified. Atleast one file should be given as an argument. Process aborted\"",
        "\"Exception occured before checking for device ID\""
    ],
    "variables": [
        "homeDir",
        "baseDir",
        "logfile",
        "logstate",
        "baseDirState",
        "baseDirState",
        "file",
        "file",
        "logstate",
        "msg",
        "ln",
        "ln",
        "args",
        "msg",
        "msg",
        "files",
        "_kdeID",
        "kdeID",
        "share"
    ],
    "comments": [
        "! /usr/bin/python3 -OOt",
        "check if the base directory exists or has been somehow damaged/deleted",
        "creates new base directory, this is not normal and should not happen!",
        "check if an error line number exists",
        "use the child class as the error line",
        "output the child message as the error with child class name and line number",
        "exit the interpreter",
        "catch the result of kdeconnect-cli -a --id-only",
        "convert byte object to string and remove newline and whitespace characters"
    ],
    "docstrings": [
        "'''Log messages will be improved in the future.'''",
        "'''Custom exception class by drexfall that implements a custom traceback message'''",
        "'''Exception raised when no device is found'''",
        "'''Exception raised when no file is given as argument'''"
    ],
    "functions": [],
    "classes": [
        "DrexError",
        "DeviceNotFoundError",
        "NoFileError"
    ]
}