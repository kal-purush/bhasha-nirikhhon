{
    "identifiers": [
        "NET",
        "Collections",
        "Generic",
        "Diagnostics",
        "IO",
        "Reflection",
        "Runtime",
        "InteropServices",
        "Runtime",
        "CompilerServices",
        "Xml",
        "Microsoft",
        "Xna",
        "Framework",
        "OperatingSystem",
        "IsWindows",
        "OperatingSystem",
        "IsMacOS",
        "OperatingSystem",
        "IsLinux",
        "OperatingSystem",
        "IsFreeBSD",
        "libraryName",
        "Assembly",
        "assembly",
        "DllImportSearchPath",
        "dllImportSearchPath",
        "mapDictionary",
        "TryGetValue",
        "libraryName",
        "mappedName",
        "mappedName",
        "libraryName",
        "NativeLibrary",
        "Load",
        "mappedName",
        "assembly",
        "dllImportSearchPath",
        "ModuleInitializer",
        "GetPlatformName",
        "RuntimeInformation",
        "ProcessArchitecture",
        "ToString",
        "ToLowerInvariant",
        "IntPtr",
        "Size",
        "ToString",
        "Assembly",
        "GetExecutingAssembly",
        "Path",
        "Combine",
        "Path",
        "GetDirectoryName",
        "assembly",
        "Location",
        "assembly",
        "GetName",
        "Name",
        "File",
        "Exists",
        "xmlPath",
        "XmlDocument",
        "xmlDoc",
        "Load",
        "xmlPath",
        "xmlDoc",
        "GetElementsByTagName",
        "Count",
        "WriteLine",
        "msg",
        "Debugger",
        "IsAttached",
        "Debug",
        "WriteLine",
        "msg",
        "XmlNode",
        "node",
        "xmlDoc",
        "GetElementsByTagName",
        "attribute",
        "node",
        "Attributes",
        "attribute",
        "attribute",
        "Value",
        "Contains",
        "os",
        "attribute",
        "Value",
        "StartsWith",
        "containsOS",
        "invert",
        "containsOS",
        "invert",
        "attribute",
        "node",
        "Attributes",
        "attribute",
        "attribute",
        "Value",
        "Contains",
        "cpu",
        "attribute",
        "Value",
        "StartsWith",
        "containsCPU",
        "invert",
        "containsCPU",
        "invert",
        "attribute",
        "node",
        "Attributes",
        "attribute",
        "attribute",
        "Value",
        "Contains",
        "wordsize",
        "attribute",
        "Value",
        "StartsWith",
        "containsWordsize",
        "invert",
        "containsWordsize",
        "invert",
        "node",
        "Attributes",
        "node",
        "Attributes",
        "dllAttribute",
        "targetAttribute",
        "dllAttribute",
        "Value",
        "targetAttribute",
        "Value",
        "IsNullOrWhiteSpace",
        "oldLib",
        "IsNullOrWhiteSpace",
        "newLib",
        "mapDictionary",
        "ContainsKey",
        "oldLib",
        "mapDictionary",
        "Add",
        "oldLib",
        "newLib",
        "NativeLibrary",
        "SetDllImportResolver",
        "assembly",
        "MapAndLoad"
    ],
    "literals": [
        "\"windows\"",
        "\"osx\"",
        "\"linux\"",
        "\"freebsd\"",
        "\"unknown\"",
        "\".dll.config\"",
        "\"dllentry\"",
        "\"Function remapping is not supported by .NET Core. Ignoring dllentry elements...\"",
        "\"dllmap\"",
        "\"os\"",
        "\"!\"",
        "\"cpu\"",
        "\"!\"",
        "\"wordsize\"",
        "\"!\"",
        "\"dll\"",
        "\"target\""
    ],
    "variables": [
        "mapDictionary",
        "mappedName",
        "os",
        "cpu",
        "wordsize",
        "Assembly",
        "assembly",
        "xmlPath",
        "XmlDocument",
        "xmlDoc",
        "msg",
        "XmlAttribute",
        "attribute",
        "containsOS",
        "invert",
        "containsCPU",
        "invert",
        "containsWordsize",
        "invert",
        "XmlAttribute",
        "dllAttribute",
        "XmlAttribute",
        "targetAttribute",
        "oldLib",
        "newLib"
    ],
    "comments": [
        "FNA - XNA4 Reimplementation for Desktop Platforms\n * Copyright 2009-2021 Ethan Lee and the MonoGame Team\n *\n * Released under the Microsoft Public License.\n * See LICENSE for details.",
        "Maybe this platform statically links?",
        "Get the platform and architecture",
        "Locate the config file",
        "Let's hope for the best...",
        "Load the XML",
        "The NativeLibrary API cannot remap function names. :(",
        "Log it in the debugger for non-console apps.",
        "Parse the XML into a mapping dictionary",
        "Check the OS",
        "Check the CPU",
        "Check the word size",
        "Check for the existence of 'dll' and 'target' attributes",
        "Get the actual library names",
        "Don't allow duplicates",
        "Set the resolver callback",
        "NET"
    ],
    "docstrings": [],
    "functions": [
        "GetPlatformName",
        "IntPtr",
        "MapAndLoad",
        "Init"
    ],
    "classes": [
        "FNADllMap"
    ]
}