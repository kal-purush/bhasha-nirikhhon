{
    "identifiers": [
        "argparse",
        "os",
        "re",
        "requests",
        "typing",
        "Tuple",
        "datetime",
        "datetime",
        "re",
        "compile",
        "re",
        "compile",
        "os",
        "getenv",
        "TOKEN",
        "os",
        "getenv",
        "args",
        "kwargs",
        "__builtins__",
        "datetime",
        "now",
        "strftime",
        "args",
        "kwargs",
        "timestamped_print",
        "dataset",
        "i",
        "len",
        "dataset",
        "row_length",
        "html_card",
        "element",
        "dataset",
        "i",
        "i",
        "row_length",
        "html_card",
        "element",
        "html_card",
        "html_card",
        "prs",
        "Tuple",
        "pr",
        "prs",
        "pr",
        "get",
        "inner_pr",
        "PR_NUMBER_REGEX",
        "search",
        "pr_body",
        "pr_bodies",
        "append",
        "pr_body",
        "inner_prs",
        "append",
        "inner_pr",
        "pr_bodies",
        "inner_prs",
        "url",
        "res",
        "link",
        "res",
        "headers",
        "get",
        "link",
        "split",
        "link",
        "links",
        "link",
        "link",
        "find",
        "link",
        "find",
        "last_page",
        "requests",
        "request",
        "url",
        "headers",
        "HEADERS",
        "verify",
        "VERIFY",
        "response",
        "raise_for_status",
        "response",
        "json",
        "get",
        "prs",
        "extend",
        "next_page_prs",
        "prs",
        "URL",
        "query",
        "requests",
        "request",
        "url",
        "headers",
        "HEADERS",
        "verify",
        "VERIFY",
        "res",
        "raise_for_status",
        "res",
        "json",
        "get",
        "github_pagination_prs",
        "url",
        "res",
        "prs",
        "extend",
        "next_pages_prs",
        "get_external_prs",
        "prs",
        "inner_prs",
        "Tuple",
        "URL",
        "query",
        "requests",
        "request",
        "url",
        "headers",
        "HEADERS",
        "verify",
        "VERIFY",
        "res",
        "raise_for_status",
        "res",
        "json",
        "get",
        "github_pagination_prs",
        "url",
        "res",
        "prs",
        "extend",
        "next_pages_prs",
        "get_external_prs",
        "prs",
        "get_contractors_prs",
        "pr",
        "inner_prs",
        "pr",
        "contractors_prs",
        "inner_prs",
        "remove",
        "pr",
        "pr_bodies",
        "inner_prs",
        "user_name",
        "Tuple",
        "URL",
        "user_name",
        "requests",
        "request",
        "url",
        "headers",
        "HEADERS",
        "verify",
        "VERIFY",
        "res",
        "json",
        "response",
        "get",
        "response",
        "get",
        "github_avatar",
        "github_profile",
        "get_contrib_prs",
        "pr",
        "inner_prs",
        "URL",
        "pr",
        "requests",
        "request",
        "url",
        "headers",
        "HEADERS",
        "verify",
        "VERIFY",
        "res",
        "status_code",
        "pr",
        "res",
        "status_code",
        "res",
        "json",
        "json_res",
        "get",
        "res",
        "status_code",
        "res",
        "reason",
        "ValueError",
        "res",
        "status_code",
        "res",
        "reason",
        "res",
        "status_code",
        "res",
        "json",
        "prs_info",
        "append",
        "response",
        "prs_info",
        "prs_info",
        "item",
        "prs_info",
        "item",
        "get",
        "get",
        "item",
        "get",
        "get",
        "user",
        "users",
        "append",
        "item",
        "get",
        "get",
        "github_profile",
        "user",
        "user",
        "item",
        "get",
        "pr_body",
        "USER_NAME_REGEX",
        "search",
        "pr_body",
        "replace",
        "get_github_user",
        "contributor",
        "github_avatar",
        "github_profile",
        "contributor",
        "users",
        "append",
        "github_avatar",
        "github_profile",
        "contributor",
        "user",
        "users",
        "users",
        "count",
        "user",
        "user",
        "update",
        "prs",
        "i",
        "i",
        "i",
        "reversed",
        "users",
        "values",
        "sorted",
        "result",
        "key",
        "k",
        "k",
        "reverse",
        "user",
        "new_res",
        "user",
        "user",
        "list_users",
        "append",
        "user",
        "list_users",
        "argparse",
        "ArgumentParser",
        "description",
        "formatter_class",
        "argparse",
        "ArgumentDefaultsHelpFormatter",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "args",
        "target",
        "get_inner_pr_request",
        "get_contributors_users",
        "response",
        "open",
        "contrib_target",
        "encoding",
        "f",
        "f",
        "write",
        "create_grid",
        "users_list",
        "main"
    ],
    "literals": [
        "r'(?<=pull/)([0-9]+)'",
        "r'(?<=@)[a-zA-Z-0-9]+'",
        "'GITHUB_TOKEN'",
        "''",
        "'https://api.github.com'",
        "'Accept'",
        "'application/vnd.github.v3+json'",
        "'Authorization'",
        "'Bearer '",
        "'SKIP_SSL_VERIFY'",
        "\"%H:%M:%S.%f\"",
        "''",
        "'<tr>'",
        "f'\\n<td>{element} </td>\\n'",
        "'</tr>\\n'",
        "'body'",
        "''",
        "'Link'",
        "','",
        "\"<\"",
        "\">\"",
        "'page'",
        "'page'",
        "'page'",
        "'GET'",
        "'items'",
        "'/search/issues'",
        "'type:pr state:closed org:demisto repo:content is:merged base:master '",
        "'head:contrib/crest head:contrib/qmasters head:contrib/mchasepan head:contrib/roybi72'",
        "'q'",
        "'per_page'",
        "'page'",
        "'GET'",
        "'items'",
        "'/search/issues'",
        "'type:pr state:closed org:demisto repo:content is:merged base:master head:contrib/'",
        "'q'",
        "'per_page'",
        "'page'",
        "'GET'",
        "'items'",
        "f'{URL}/users/{user_name}'",
        "'GET'",
        "'avatar_url'",
        "'html_url'",
        "f'/repos/demisto/content/pulls/{pr}'",
        "'GET'",
        "f'The following PR was not found: {pr}'",
        "'errors'",
        "'Error in API call to the GitHub Integration [%d] - %s'",
        "'Error in API call to GitHub Integration [%d] - %s'",
        "'user'",
        "'login'",
        "'user'",
        "'html_url'",
        "'xsoar-bot'",
        "'Contributor'",
        "f\"<img src='{item.get('user').get('avatar_url')}'/><br></br> \"",
        "'user'",
        "'avatar_url'",
        "f\"<a href='{github_profile}' target='_blank'>{user}</a>\"",
        "'xsoar-bot'",
        "'body'",
        "'Contributor'",
        "'\\n'",
        "''",
        "f'The user \"{contributor}\" was not found.'",
        "'Contributor'",
        "f\"<img src='{github_avatar}'/><br></br> \"",
        "f\"<a href='{github_profile}' target='_blank'>{contributor}</a>\"",
        "'Number of Contributions'",
        "'Contributor'",
        "'Number of Contributions'",
        "'Contributor'",
        "f'<br></br>{user[\"Number of Contributions\"]} Contributions'",
        "\"Number of Contributions\"",
        "'Contributor'",
        "'Generate Top contributors page.'",
        "\"-t\"",
        "\"--target\"",
        "\"Target dir to generate docs at.\"",
        "'/top-contributors.md'",
        "'a'",
        "'utf-8'",
        "f'\\n {create_grid(users_list)}'",
        "'__main__'"
    ],
    "variables": [
        "PR_NUMBER_REGEX",
        "USER_NAME_REGEX",
        "TOKEN",
        "URL",
        "HEADERS",
        "VERIFY",
        "row_length",
        "html_card",
        "inner_prs",
        "pr_bodies",
        "pr_body",
        "prs",
        "links",
        "last_page",
        "response",
        "next_page_prs",
        "url",
        "query",
        "res",
        "prs",
        "next_pages_prs",
        "_",
        "inner_prs",
        "url",
        "query",
        "res",
        "prs",
        "next_pages_prs",
        "pr_bodies",
        "inner_prs",
        "contractors_prs",
        "url",
        "res",
        "response",
        "github_avatar",
        "github_profile",
        "prs_info",
        "_",
        "inner_prs",
        "url",
        "res",
        "json_res",
        "response",
        "users",
        "user",
        "github_profile",
        "pr_body",
        "contributor",
        "github_avatar",
        "github_profile",
        "prs",
        "list_users",
        "result",
        "new_res",
        "parser",
        "args",
        "contrib_target",
        "response",
        "users_list"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "override print so we have a timestamp with each print",
        "Get all the PRs from all pages",
        "print(item)"
    ],
    "docstrings": [
        "\"\"\"\n    Create a table grid of the github users\n    Args:\n        dataset (list): The dataset to create the table from, in this case, the list of github users.\n\n    Returns (str): table grid of github users\n\n    \"\"\"",
        "\"\"\"\n    Get the external prs from the internal.\n    We are using this to get the contributor github user in get_pr_user command.\n    Args:\n        prs: list of internal prs.\n\n    Returns:\n        inner_prs: list of external prs.\n        pr_bodies: list of external pr bodies.\n    \"\"\"",
        "\"\"\"\n    Paginate through all the pages in Github according to search query\n    Args:\n        url (str): the request url\n        params (dict): params for the request\n        res: the response from the http_request\n\n    Returns: prs (dict)\n    \"\"\"",
        "\"\"\"\n    Get all contractors pr numbers and users we want to ignore in the calculation.\n    Returns: The inner pr numbers list of the contractors and the users we want to ignore.\n    \"\"\"",
        "\"\"\"\n    Get the contributors prs.\n    Returns: The list of inner PRs and a list of the pr bodies.\n    \"\"\"",
        "\"\"\"\n    Get the github user.\n    Args:\n        user_name (str): the github username.\n\n    Returns: The user avatar and its profile.\n\n    \"\"\"",
        "\"\"\"\n    Get the inner pr information (will be used to get the user).\n    Returns (list): http response - prs_info.\n    \"\"\"",
        "\"\"\"\n    Get the github users from the inner PRs.\n    Args:\n        prs_info (list): the response of get_inner_pr_request()\n\n    Returns (list): Github users\n\n    \"\"\""
    ],
    "functions": [
        "timestamped_print",
        "create_grid",
        "get_external_prs",
        "github_pagination_prs",
        "get_contractors_prs",
        "get_contrib_prs",
        "get_github_user",
        "get_inner_pr_request",
        "get_contributors_users",
        "main"
    ],
    "classes": []
}