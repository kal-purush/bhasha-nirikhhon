{
    "identifiers": [
        "io",
        "jmix",
        "graphql",
        "schema",
        "scalar",
        "graphql",
        "Scalars",
        "graphql",
        "schema",
        "GraphQLScalarType",
        "io",
        "jmix",
        "core",
        "metamodel",
        "datatype",
        "DatatypeRegistry",
        "io",
        "jmix",
        "core",
        "metamodel",
        "model",
        "MetaProperty",
        "io",
        "jmix",
        "graphql",
        "MetadataUtils",
        "io",
        "jmix",
        "graphql",
        "datafetcher",
        "GqlEntityValidationException",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "stereotype",
        "Component",
        "java",
        "math",
        "BigDecimal",
        "java",
        "sql",
        "Time",
        "java",
        "time",
        "java",
        "util",
        "io",
        "jmix",
        "graphql",
        "schema",
        "scalar",
        "CustomScalars",
        "Component",
        "localTimeScalar",
        "timeScalar",
        "offsetTimeScalar",
        "Autowired",
        "datatypeRegistry",
        "localTimeScalar",
        "datatypeRegistry",
        "get",
        "timeScalar",
        "datatypeRegistry",
        "get",
        "datatypeRegistry",
        "get",
        "offsetTimeScalar",
        "datatypeRegistry",
        "get",
        "scalars",
        "Scalars",
        "GraphQLInt",
        "Scalars",
        "GraphQLBigInteger",
        "Scalars",
        "GraphQLBoolean",
        "Scalars",
        "GraphQLByte",
        "Scalars",
        "GraphQLChar",
        "Scalars",
        "GraphQLFloat",
        "Scalars",
        "GraphQLShort",
        "Scalars",
        "GraphQLString",
        "CustomScalars",
        "GraphQLVoid",
        "CustomScalars",
        "GraphQLLocalDateTime",
        "CustomScalars",
        "GraphQLLocalDate",
        "CustomScalars",
        "GraphQLOffsetDateTime",
        "CustomScalars",
        "GraphQLDate",
        "CustomScalars",
        "GraphQLDateTime",
        "GraphQLBigDecimal",
        "GraphQLLong",
        "CustomScalars",
        "GraphQLUUID",
        "metaProperty",
        "javaType",
        "metaProperty",
        "getRange",
        "asDatatype",
        "getJavaClass",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLString",
        "getName",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLChar",
        "getName",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLInt",
        "getName",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLShort",
        "getName",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLFloat",
        "getName",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "Scalars",
        "GraphQLBoolean",
        "getName",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLUUID",
        "getName",
        "isAssignableFrom",
        "javaType",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLLong",
        "getName",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLBigDecimal",
        "getName",
        "isAssignableFrom",
        "javaType",
        "MetadataUtils",
        "isDate",
        "metaProperty",
        "CustomScalars",
        "GraphQLDate",
        "getName",
        "MetadataUtils",
        "isTime",
        "metaProperty",
        "timeScalar",
        "getName",
        "MetadataUtils",
        "isDateTime",
        "metaProperty",
        "CustomScalars",
        "GraphQLDateTime",
        "getName",
        "metaProperty",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLLocalDateTime",
        "getName",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLLocalDate",
        "getName",
        "isAssignableFrom",
        "javaType",
        "localTimeScalar",
        "getName",
        "isAssignableFrom",
        "javaType",
        "CustomScalars",
        "GraphQLOffsetDateTime",
        "getName",
        "isAssignableFrom",
        "javaType",
        "offsetTimeScalar",
        "getName",
        "scalarTypes",
        "Arrays",
        "asList",
        "scalars",
        "scalarTypes",
        "addAll",
        "timeScalars",
        "scalarTypes",
        "scalars",
        "scalars",
        "add",
        "localTimeScalar",
        "scalars",
        "add",
        "timeScalar",
        "scalars",
        "add",
        "offsetTimeScalar",
        "scalars",
        "scalar",
        "timeScalars",
        "stream",
        "anyMatch",
        "ts",
        "ts",
        "getName",
        "equals",
        "scalar",
        "getName"
    ],
    "literals": [
        "\"gqL_ScalarTypes\"",
        "\"Unsupported datatype mapping for date property \"",
        "\"String\""
    ],
    "variables": [
        "localTimeScalar",
        "timeScalar",
        "offsetTimeScalar"
    ],
    "comments": [
        "scalars from graphql-java",
        "more scalars added in jmix-graphql",
        "log.warn(\"getDatatypeFieldTypeName: can't resolve type for datatype meta property {} class {}\", metaProperty, javaType);",
        "todo a couple of classes are not supported now",
        "throw new UnsupportedOperationException(String.format(\"Can't define field type name for datatype class %s\", javaType));"
    ],
    "docstrings": [
        "* Copyright 2021 Haulmont.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "ScalarTypes",
        "getScalarFieldTypeName",
        "scalars",
        "timeScalars",
        "isTimeType"
    ],
    "classes": [
        "ScalarTypes"
    ]
}