{
    "identifiers": [
        "print_function",
        "sys",
        "argparse",
        "os",
        "subprocess",
        "textwrap",
        "dedent",
        "dedent",
        "workspace",
        "dedent",
        "format",
        "workspace",
        "workspace",
        "cwd",
        "os",
        "getcwd",
        "key",
        "os",
        "environ",
        "key",
        "os",
        "environ",
        "key",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "source_url",
        "source_branch",
        "target_branch",
        "sourceSHA",
        "source_url",
        "strip",
        "source_branch",
        "strip",
        "target_branch",
        "strip",
        "sourceSHA",
        "strip",
        "subprocess",
        "check_output",
        "isinstance",
        "remote_list",
        "remote_list",
        "decode",
        "remote_list",
        "file",
        "sys",
        "stdout",
        "subprocess",
        "check_call",
        "subprocess",
        "check_call",
        "source_url",
        "i",
        "subprocess",
        "check_call",
        "source_branch",
        "subprocess",
        "CalledProcessError",
        "fetch_succeeded",
        "SystemExit",
        "subprocess",
        "check_call",
        "target_branch",
        "subprocess",
        "check_call",
        "subprocess",
        "check_call",
        "target_branch",
        "target_branch",
        "subprocess",
        "check_call",
        "source_branch",
        "subprocess",
        "check_output",
        "source_branch",
        "isinstance",
        "actual_source_SHA",
        "actual_source_SHA",
        "decode",
        "isinstance",
        "actual_source_SHA",
        "actual_source_SHA",
        "decode",
        "actual_source_SHA",
        "strip",
        "actual_source_SHA",
        "sourceSHA",
        "format",
        "source_sha",
        "actual_source_SHA",
        "source_branch",
        "source_branch",
        "file",
        "sys",
        "stdout",
        "format",
        "source_repo",
        "source_url",
        "file",
        "sys",
        "stdout",
        "format",
        "source_sha",
        "sourceSHA",
        "file",
        "sys",
        "stdout",
        "SystemExit",
        "parseArgs",
        "SystemExit",
        "return_value",
        "os",
        "chdir",
        "os",
        "path",
        "join",
        "arguments",
        "workspaceDir",
        "format",
        "dirName",
        "os",
        "path",
        "join",
        "arguments",
        "workspaceDir",
        "write_header",
        "echoJenkinsVars",
        "arguments",
        "workspaceDir",
        "merge_branch",
        "arguments",
        "sourceRepo",
        "arguments",
        "sourceBranch",
        "arguments",
        "targetBranch",
        "arguments",
        "sourceSHA",
        "SystemExit",
        "subprocess",
        "CalledProcessError",
        "cpe",
        "format",
        "error_num",
        "cpe",
        "returncode",
        "file",
        "sys",
        "stdout",
        "format",
        "cmd",
        "cpe",
        "cmd",
        "file",
        "sys",
        "stdout",
        "format",
        "cpe",
        "output",
        "file",
        "sys",
        "stdout",
        "format",
        "cpe",
        "stdout",
        "file",
        "sys",
        "stdout",
        "AttributeError",
        "format",
        "eout",
        "cpe",
        "stderr",
        "file",
        "sys",
        "stdout",
        "AttributeError",
        "return_value",
        "run",
        "returnValue",
        "exit",
        "exit"
    ],
    "literals": [
        "' = '",
        "'\\n'",
        "\"=\"",
        "'Parse the repo and merge information'",
        "'sourceRepo'",
        "'Repo with the new changes'",
        "'store'",
        "'sourceBranch'",
        "'Branch with the new changes'",
        "'store'",
        "'targetRepo'",
        "'Repo to merge into'",
        "'store'",
        "'targetBranch'",
        "'Branch to merge to'",
        "'store'",
        "'sourceSHA'",
        "'SHA1 of the commit to use from the source branch'",
        "'store'",
        "'workspaceDir'",
        "'The local workspace directory jenkins set up'",
        "'git'",
        "'remote'",
        "'-v'",
        "'utf-8'",
        "'source_remote'",
        "'git remote exists, removing it'",
        "'git'",
        "'remote'",
        "'rm'",
        "'source_remote'",
        "'git'",
        "'remote'",
        "'add'",
        "'source_remote'",
        "'git'",
        "'fetch'",
        "'source_remote'",
        "'git'",
        "'fetch'",
        "'origin'",
        "'git'",
        "'reset'",
        "'--hard'",
        "'HEAD'",
        "'git'",
        "'checkout'",
        "'-B'",
        "'origin/'",
        "'git'",
        "'merge'",
        "'--no-edit'",
        "'source_remote/'",
        "'git'",
        "'rev-parse'",
        "'source_remote/'",
        "'utf-8'",
        "'utf-8'",
        "'The SHA ({source_sha}) for the last commit on branch {source_branch}'",
        "'  in repo {source_repo} is different than the expected SHA,'",
        "'  which is: {source_sha}.'",
        "'Trilinos'",
        "\"Set CWD = {dirName}\"",
        "'Trilinos'",
        "'Recieved subprocess.CalledProcessError - returned {error_num}'",
        "'  from command {cmd}'",
        "'  output {out}'",
        "'  stdout {out}'",
        "'  stderr {eout}'",
        "'__main__'"
    ],
    "variables": [
        "sys",
        "dont_write_bytecode",
        "parser",
        "source_url",
        "source_branch",
        "target_branch",
        "sourceSHA",
        "remote_list",
        "remote_list",
        "fetch_succeeded",
        "fetch_succeeded",
        "actual_source_SHA",
        "actual_source_SHA",
        "actual_source_SHA",
        "actual_source_SHA",
        "return_value",
        "arguments",
        "return_value",
        "return_value",
        "return_value",
        "returnValue"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- mode: python; py-indent-offset: 4; py-continuation-offset: 4 -*-",
        "Change above to '/usr/bin/python -3' for python 3.x porting warnings",
        "pragma nocover"
    ],
    "docstrings": [
        "\"\"\"\nThis script drives a PR testing build.  It assume that Trilinos is already\ncloned under $PWD/Trilinos and that the 'origin' remote points to\n$TRILINOS_TARGET_REPO (but that is not checked here).\n\nAs long as the ${PWD}/Trilinos git repo has the correct 'origin', this\nscript will automatically set it up to do the merge correctly, no matter\nwhat its state before this script is called (i.e. from a past PR\nattempt). Unless the Trilinos/.git directory becomes corrupted, there should\n*NEVER* be any need to delete and reclone this Trilinos git repo.\n\nThis script can be run in a mode where the driver scripts are run from one\nTrilinos git repo and operate on another Trilinos git repo that gets\nmanipulated in order to merge the \"source\" topic branch into the \"target\"\nbranch.  This makes it easy to test changes to the PR scripts.  But if this\nscript is run from ${PWD}/Trilinos, then these repos are one and the same\nand we get the correct behavior for PR testing.\n\"\"\"",
        "'''\\\n          --------------------------------------------------------------------------------\n          -\n          - Begin: PullRequestLinuxDriver-Merge.py\n          -\n          --------------------------------------------------------------------------------'''",
        "'''\\\n\n            ================================================================================\n            Jenkins Environment Variables:\n            - WORKSPACE    : {workspace}\n\n            ================================================================================\n            Environment:\n\n              pwd = {cwd}\n            '''",
        "'''Parse the arguments - no  options are available at this time'''"
    ],
    "functions": [
        "write_header",
        "echoJenkinsVars",
        "parseArgs",
        "merge_branch",
        "run"
    ],
    "classes": []
}