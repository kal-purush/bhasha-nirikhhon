{
    "identifiers": [
        "os",
        "SCons",
        "Node",
        "SCons",
        "Node",
        "FS",
        "SCons",
        "Scanner",
        "SCons",
        "Util",
        "env",
        "libs",
        "SCons",
        "Util",
        "is_String",
        "libs",
        "env",
        "subst",
        "libs",
        "SCons",
        "Util",
        "is_String",
        "libs",
        "libs",
        "split",
        "SCons",
        "Util",
        "is_Sequence",
        "libs",
        "lib",
        "libs",
        "_libs",
        "_subst_libs",
        "env",
        "lib",
        "_libs",
        "libs",
        "libs",
        "dirname",
        "files",
        "fname",
        "files",
        "os",
        "path",
        "splitext",
        "fname",
        "append",
        "os",
        "path",
        "join",
        "dirname",
        "fname",
        "node",
        "env",
        "libpath",
        "env",
        "get",
        "_subst_libs",
        "env",
        "classpath",
        "path",
        "classpath",
        "SCons",
        "Util",
        "is_String",
        "path",
        "path",
        "env",
        "Glob",
        "path",
        "path",
        "lib",
        "libs",
        "os",
        "path",
        "isdir",
        "lib",
        "env",
        "Dir",
        "lib",
        "walk",
        "_collect_classes",
        "result",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "lib",
        "_collect_classes",
        "result",
        "root",
        "files",
        "result",
        "append",
        "lib",
        "x",
        "os",
        "path",
        "splitext",
        "x",
        "result",
        "SCons",
        "Scanner",
        "Base",
        "scan",
        "skeys"
    ],
    "literals": [
        "\"__FILE__ __REVISION__ __DATE__ __DEVELOPER__\"",
        "\".class\"",
        "'JAVACLASSPATH'",
        "\"*\"",
        "\".class\"",
        "\".zip\"",
        "\".jar\"",
        "'JavaScanner'",
        "'.java'"
    ],
    "variables": [
        "__revision__",
        "libs",
        "libs",
        "_libs",
        "libs",
        "libs",
        "classpath",
        "classpath",
        "result",
        "libs",
        "libs"
    ],
    "comments": [
        "",
        "__COPYRIGHT__",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining",
        "a copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to",
        "permit persons to whom the Software is furnished to do so, subject to",
        "the following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY",
        "KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE",
        "WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND",
        "NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE",
        "LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION",
        "OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION",
        "WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "",
        "libs is an object (Node, for example)",
        "grab the in-memory nodes",
        "now the on-disk ones",
        "Local Variables:",
        "tab-width:4",
        "indent-tabs-mode:nil",
        "End:",
        "vim: set expandtab tabstop=4 shiftwidth=4:"
    ],
    "docstrings": [
        "\"\"\"\n    Substitute environment variables and split into list.\n    \"\"\"",
        "\"\"\"Scan for files on the JAVACLASSPATH.\n\n    The classpath can contain:\n     - Explicit paths to JAR/Zip files\n     - Wildcards (*)\n     - Directories which contain classes in an unnamed package\n     - Parent directories of the root package for classes in a named package\n\n     Class path entries that are neither directories nor archives (.zip or JAR files) nor the asterisk (*) wildcard character are ignored.\n     \"\"\""
    ],
    "functions": [
        "_subst_libs",
        "_collect_classes",
        "scan",
        "JavaScanner"
    ],
    "classes": []
}