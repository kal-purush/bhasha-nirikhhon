{
    "identifiers": [
        "JwtService",
        "Test",
        "TestingModule",
        "AuthModule",
        "LoginController",
        "TokenService",
        "jest",
        "originDomain",
        "originDomain",
        "xdescribe",
        "beforeEach",
        "Test",
        "AuthModule",
        "LoginController",
        "TokenService",
        "JwtService",
        "MockJwtService",
        "tokenService",
        "TokenService",
        "it",
        "expect",
        "tokenService"
    ],
    "literals": [
        "'@nestjs/jwt'",
        "'@nestjs/testing'",
        "'./auth.module'",
        "'./login.controller'",
        "'./token.service'",
        "string",
        "'TokenService'",
        "'should be defined'"
    ],
    "variables": [
        "MockJwtService",
        "tokenService"
    ],
    "comments": [
        "import { INestApplication } from '@nestjs/common';",
        "import request from 'supertest';",
        "let app: INestApplication;",
        "app = module.createNestApplication();",
        "await app.init();",
        "const testOrigin = async (method: string) => {",
        "const initReq = await request(app.getHttpServer())[method]('/*')",
        "const { origin } = MockJwtService.decode(initReq.headers['origin'])",
        "expect(initReq.headers['origin']).toBe(origin)",
        "}",
        "it('should have same GET request ORIGIN header as stored in JWT token ', async () => {",
        "testOrigin('get')",
        "});",
        "it('should have same POST request ORIGIN header as stored in JWT token ', async () => {",
        "testOrigin('post')",
        "});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}