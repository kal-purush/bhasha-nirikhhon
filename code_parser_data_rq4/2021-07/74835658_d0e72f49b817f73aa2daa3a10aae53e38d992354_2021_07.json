{
    "identifiers": [
        "empymod",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "plt",
        "style",
        "use",
        "np",
        "random",
        "default_rng",
        "data",
        "ntype",
        "rel_error",
        "noise_floor",
        "mu",
        "np",
        "sqrt",
        "noise_floor",
        "rel_error",
        "abs",
        "data",
        "ntype",
        "rng",
        "standard_normal",
        "data",
        "size",
        "ntype",
        "rng",
        "standard_normal",
        "data",
        "size",
        "noise",
        "rng",
        "standard_normal",
        "data",
        "size",
        "np",
        "exp",
        "rng",
        "uniform",
        "np",
        "pi",
        "data",
        "size",
        "data",
        "std",
        "mu",
        "noise",
        "n",
        "data",
        "ntype",
        "kwargs",
        "add_noise",
        "data",
        "ntype",
        "kwargs",
        "n",
        "_",
        "n",
        "add_noise",
        "data",
        "ntype",
        "kwargs",
        "n",
        "np",
        "array",
        "relative_error",
        "abs",
        "d",
        "plt",
        "subplots",
        "figsize",
        "sharex",
        "sharey",
        "axs",
        "fig",
        "suptitle",
        "relative_error",
        "mean",
        "y",
        "fontsize",
        "ax1",
        "set_title",
        "ax2",
        "set_title",
        "ax",
        "axs",
        "ax",
        "plot",
        "np",
        "r_",
        "d",
        "real",
        "np",
        "r_",
        "d",
        "imag",
        "c",
        "ax",
        "plot",
        "d",
        "real",
        "d",
        "imag",
        "ms",
        "label",
        "zorder",
        "ax1",
        "plot",
        "d",
        "real",
        "np",
        "r_",
        "std",
        "mean",
        "d",
        "imag",
        "np",
        "r_",
        "std",
        "mean",
        "label",
        "zorder",
        "ax1",
        "plot",
        "d",
        "real",
        "np",
        "r_",
        "std",
        "mean",
        "std",
        "mean",
        "d",
        "imag",
        "np",
        "r_",
        "std",
        "mean",
        "std",
        "mean",
        "label",
        "std",
        "mean",
        "np",
        "exp",
        "np",
        "linspace",
        "np",
        "pi",
        "ax1",
        "plot",
        "d",
        "real",
        "uniform_mean",
        "real",
        "d",
        "imag",
        "uniform_mean",
        "imag",
        "label",
        "i",
        "ax1",
        "plot",
        "d",
        "real",
        "np",
        "r_",
        "std",
        "std",
        "i",
        "std",
        "mean",
        "d",
        "imag",
        "np",
        "r_",
        "std",
        "std",
        "i",
        "std",
        "mean",
        "lw",
        "i",
        "label",
        "i",
        "ax1",
        "plot",
        "d",
        "real",
        "np",
        "r_",
        "std",
        "std",
        "std",
        "std",
        "std",
        "i",
        "std",
        "mean",
        "d",
        "imag",
        "np",
        "r_",
        "std",
        "std",
        "std",
        "std",
        "std",
        "i",
        "std",
        "mean",
        "lw",
        "i",
        "label",
        "i",
        "np",
        "ones",
        "dtype",
        "d",
        "data",
        "shape",
        "np",
        "random",
        "default_rng",
        "i",
        "ntype",
        "ntypes",
        "add_noise",
        "data",
        "ntype",
        "relative_error",
        "mean",
        "ax2",
        "plot",
        "ndata",
        "real",
        "ndata",
        "imag",
        "ls",
        "i",
        "label",
        "ntype",
        "ax",
        "axs",
        "ax",
        "axhline",
        "c",
        "ax",
        "axvline",
        "c",
        "ax",
        "legend",
        "framealpha",
        "loc",
        "ax",
        "set_aspect",
        "ax",
        "set_ylabel",
        "ax",
        "set_xlim",
        "ax2",
        "set_xlabel",
        "fig",
        "show",
        "np",
        "linspace",
        "np",
        "logspace",
        "empymod",
        "dipole",
        "rec",
        "offs",
        "offs",
        "freqtime",
        "freq",
        "model",
        "empymod",
        "dipole",
        "rec",
        "freqtime",
        "freqs",
        "model",
        "resp",
        "noise",
        "abs",
        "noise",
        "resp",
        "resp",
        "x",
        "data",
        "reim",
        "comp",
        "plt",
        "subplots",
        "constrained_layout",
        "figsize",
        "sharex",
        "axs",
        "set_title",
        "axs",
        "plot",
        "x",
        "abs",
        "data",
        "real",
        "axs",
        "plot",
        "x",
        "abs",
        "reim",
        "real",
        "axs",
        "plot",
        "x",
        "abs",
        "comp",
        "real",
        "axs",
        "set_yscale",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "real",
        "reim",
        "real",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "real",
        "comp",
        "real",
        "axs",
        "set_ylabel",
        "axs",
        "set_title",
        "axs",
        "plot",
        "x",
        "abs",
        "data",
        "imag",
        "label",
        "axs",
        "plot",
        "x",
        "abs",
        "reim",
        "imag",
        "label",
        "axs",
        "plot",
        "x",
        "abs",
        "comp",
        "imag",
        "label",
        "axs",
        "set_yscale",
        "axs",
        "legend",
        "fontsize",
        "framealpha",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "imag",
        "reim",
        "imag",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "imag",
        "comp",
        "imag",
        "axs",
        "set_title",
        "axs",
        "plot",
        "x",
        "data",
        "amp",
        "axs",
        "plot",
        "x",
        "reim",
        "amp",
        "axs",
        "plot",
        "x",
        "comp",
        "amp",
        "axs",
        "set_yscale",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "amp",
        "reim",
        "amp",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "amp",
        "comp",
        "amp",
        "axs",
        "set_title",
        "axs",
        "plot",
        "x",
        "data",
        "pha",
        "phase",
        "axs",
        "plot",
        "x",
        "reim",
        "pha",
        "phase",
        "axs",
        "plot",
        "x",
        "comp",
        "pha",
        "phase",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "pha",
        "phase",
        "reim",
        "pha",
        "phase",
        "axs",
        "plot",
        "x",
        "error",
        "data",
        "pha",
        "phase",
        "comp",
        "pha",
        "phase",
        "fig",
        "axs",
        "mu",
        "rel_error",
        "noise_floor",
        "mu",
        "add_noise",
        "oresp",
        "inp",
        "add_noise",
        "oresp",
        "inp",
        "figure",
        "offs",
        "oresp",
        "onoise_reim",
        "onoise_comp",
        "fig",
        "suptitle",
        "freq",
        "model",
        "mu",
        "fontsize",
        "i",
        "axs",
        "i",
        "set_ylim",
        "i",
        "axs",
        "i",
        "set_xlabel",
        "axs",
        "i",
        "set_yscale",
        "axs",
        "i",
        "set_ylim",
        "offset_single",
        "mu",
        "offset_single",
        "mu",
        "mu",
        "rel_error",
        "noise_floor",
        "mu",
        "stack",
        "n_stack",
        "oresp",
        "inp",
        "stack",
        "n_stack",
        "oresp",
        "inp",
        "figure",
        "offs",
        "oresp",
        "sonoise_reim",
        "sonoise_comp",
        "fig",
        "suptitle",
        "n_stack",
        "mu",
        "fontsize",
        "i",
        "axs",
        "i",
        "set_ylim",
        "i",
        "axs",
        "i",
        "set_xlabel",
        "axs",
        "i",
        "set_ylim",
        "offset_stacked",
        "mu",
        "offset_stacked",
        "mu",
        "mu",
        "rel_error",
        "noise_floor",
        "mu",
        "add_noise",
        "fresp",
        "inp",
        "add_noise",
        "fresp",
        "inp",
        "figure",
        "freqs",
        "fresp",
        "fnoise_reim",
        "fnoise_comp",
        "fig",
        "suptitle",
        "off",
        "model",
        "mu",
        "fontsize",
        "i",
        "axs",
        "i",
        "set_ylim",
        "i",
        "axs",
        "i",
        "set_xscale",
        "axs",
        "i",
        "set_xlabel",
        "axs",
        "i",
        "set_yscale",
        "axs",
        "i",
        "set_ylim",
        "frequency_single",
        "mu",
        "frequency_single",
        "mu",
        "mu",
        "rel_error",
        "noise_floor",
        "mu",
        "stack",
        "n_stack",
        "fresp",
        "inp",
        "stack",
        "n_stack",
        "fresp",
        "inp",
        "figure",
        "freqs",
        "fresp",
        "sfnoise_reim",
        "sfnoise_comp",
        "fig",
        "suptitle",
        "n_stack",
        "mu",
        "fontsize",
        "i",
        "axs",
        "i",
        "set_ylim",
        "i",
        "axs",
        "i",
        "set_xscale",
        "axs",
        "i",
        "set_xlabel",
        "axs",
        "i",
        "set_ylim",
        "frequency_stacked",
        "mu",
        "frequency_stacked",
        "mu",
        "empymod",
        "Report"
    ],
    "literals": [
        "r\"\"\"\nAdding random noise to frequency-domain CSEM data\n=================================================\n\nAdding random noise to frequency-domain CSEM data is not a trivial task, and\nthere are many different ways how it can be done. The problem comes from the\nfact that we live in the time domain, we do our measurements in the time\ndomain, our noise is therefore time-domain noise, but we want to add\ncomplex-valued noise in the frequency domain.\n\nHere we are going to look at some possibilities. However, keep in mind that\nthere are more possibilities than the ones shown here.\n\n1. Theory\n---------\n\nLet's assume we have complex-valued data :math:`d=x+\\text{i}y`. We can add\nrandom noise to the data in the following way,\n\n.. math::\n    :label: generalnoise\n\n    \\tilde{d} = d + \\sigma \\left[(1 + \\text{i})\\,\\mu + \\mathcal{R} \\right] \\, ,\n\nwhere :math:`\\tilde{d}` is the data with added noise, :math:`\\sigma` is the\nstandard deviation, :math:`\\mu` is the mean value of the randomly distributed\nnoise, and :math:`\\mathcal{R}` is the random noise. We define the standard\ndeviation as\n\n.. math::\n    :label: stdev\n\n    \\sigma = \\sqrt{\\epsilon_\\text{n}^2 + \\left(\\epsilon_\\text{r}|d|\\right)^2 }\n    \\, ,\n\nwhere :math:`\\epsilon_\\text{n}` is the noise floor and\n:math:`\\epsilon_\\text{r}` is the relative error.\n\nWe compare here three ways of computing the random noise :math:`\\mathcal{R}`.\nOf course there are other possibilities, e.g., one could make the non-zero mean\na random realization itself.\n\n\n1. Adding random uniform phases but constant amplitude\n\n   .. math::\n       :label: uniform\n\n       \\mathcal{R}_\\text{wn} = \\exp[\\text{i}\\,\\mathcal{U}(0, 2\\pi)] \\, ,\n\n   where :math:`\\mathcal{U}(0, 2\\pi)` is the uniform distribution and its\n   range. This adds white noise with a flat amplitude spectrum and random\n   phases.\n\n\n2. Adding Gaussian noise to real and imaginary parts\n\n   - Adding correlated random Gaussian noise\n\n      .. math::\n          :label: cgaussian\n\n          \\mathcal{R}_\\text{gc} = (1+\\text{i})\\,\\mathcal{N}(0, 1) \\, ,\n\n      where :math:`\\mathcal{N}(0, 1)` is the standard normal distribution of\n      zero mean and unit standard deviation.\n\n   - Adding uncorrelated random Gaussian noise\n\n      Above is the correlated version. Noise could also be added completely\n      uncorrelated,\n\n      .. math::\n          :label: ugaussian\n\n          \\mathcal{R}_\\text{gu} =\n          \\mathcal{N}(0, 1) + \\text{i}\\,\\mathcal{N}(0, 1) \\, .\n\n\"\"\"",
        "'bmh'",
        "'gaussian_correlated'",
        "'gaussian_uncorrelated'",
        "r\"Random noise with $\\epsilon_n = 0, \"",
        "f\"\\\\epsilon_r={relative_error}, \\\\mu={mean}$\"",
        "'Theoretical distributions'",
        "'Random realizations'",
        "'--'",
        "'.5'",
        "'ko'",
        "'$d^{obs}$'",
        "'C8'",
        "r'Scaled mean $\\sigma (1+i)\\mu$'",
        "'C1'",
        "r'Standard deviation $\\sigma$'",
        "'C0'",
        "'Random uniform phase'",
        "'C3-'",
        "f'Gaussian $\\\\pm {i} \\\\sigma$, correlated'",
        "'C2:'",
        "f'Gaussian $\\\\pm {i} \\\\sigma$, uncorrelated'",
        "'C0x'",
        "'C3+'",
        "'C2x'",
        "'white_noise'",
        "'gaussian_correlated'",
        "'gaussian_uncorrelated'",
        "'k'",
        "'k'",
        "'upper left'",
        "'equal'",
        "'Imaginary part'",
        "'Real part'",
        "'src'",
        "'depth'",
        "'res'",
        "'ab'",
        "'unwrap'",
        "'deg'",
        "'lag'",
        "'|Real| (V/m)'",
        "'k'",
        "'C0'",
        "'C1--'",
        "'log'",
        "'C0'",
        "'C1--'",
        "'Rel. Error (%)'",
        "'|Imaginary| (V/m)'",
        "'k'",
        "'Data'",
        "'C0'",
        "'Noise to Re; Im'",
        "'C1--'",
        "'Noise to Complex'",
        "'log'",
        "'C0'",
        "'C1--'",
        "'Amplitude (V/m)'",
        "'k'",
        "'C0'",
        "'C1--'",
        "'log'",
        "'C0'",
        "'C1--'",
        "'Phase (rad)'",
        "'k'",
        "'C0'",
        "'C1--'",
        "'C0'",
        "'C1--'",
        "'rel_error'",
        "'noise_floor'",
        "'mu'",
        "'gaussian_correlated'",
        "'white_noise'",
        "f\"Inline $E_{{xx}}$; $s_z=r_z=0$; $f=${freq} Hz; \"",
        "f\"fullspace of {model['res']} $\\\\Omega\\\\,$m; $\\\\mu=${mu}\"",
        "'res'",
        "'Offset (m)'",
        "'log'",
        "'rel_error'",
        "'noise_floor'",
        "'mu'",
        "'gaussian_correlated'",
        "'white_noise'",
        "f\"STACKED {n_stack} times; $\\\\mu=${mu}\"",
        "'Offset (m)'",
        "'rel_error'",
        "'noise_floor'",
        "'mu'",
        "'gaussian_correlated'",
        "'white_noise'",
        "f\"Inline $E_{{xx}}$; $s_z=r_z=0$; offset$=${off/1e3} km; \"",
        "f\"fullspace of {model['res']} $\\\\Omega\\\\,$m; $\\\\mu=${mu}\"",
        "'res'",
        "'log'",
        "'Frequency (Hz)'",
        "'log'",
        "'rel_error'",
        "'noise_floor'",
        "'mu'",
        "'gaussian_correlated'",
        "'white_noise'",
        "f\"STACKED {n_stack} times; $\\\\mu=${mu}\"",
        "'log'",
        "'Frequency (Hz)'"
    ],
    "variables": [
        "rng",
        "std",
        "noise",
        "noise",
        "noise",
        "d",
        "mean",
        "relative_error",
        "std",
        "fig",
        "axs",
        "ax1",
        "ax2",
        "uniform_mean",
        "data",
        "shape",
        "rng",
        "ls",
        "ntypes",
        "ndata",
        "model",
        "offs",
        "off",
        "freqs",
        "freq",
        "oresp",
        "fresp",
        "rel_error",
        "noise_floor",
        "n_stack",
        "phase",
        "fig",
        "axs",
        "inp",
        "onoise_reim",
        "onoise_comp",
        "fig",
        "axs",
        "inp",
        "sonoise_reim",
        "sonoise_comp",
        "fig",
        "axs",
        "inp",
        "fnoise_reim",
        "fnoise_comp",
        "fig",
        "axs",
        "inp",
        "sfnoise_reim",
        "sfnoise_comp",
        "fig",
        "axs"
    ],
    "comments": [
        "",
        "Noise computation",
        "~~~~~~~~~~~~~~~~~",
        "Initiate random number generator.",
        "Standard deviation",
        "Random noise",
        "Scale and move noise; add to data and return",
        "",
        "2. Graphical illustration",
        "-------------------------",
        "",
        "The following is a graphical illustration. Please note that the relative",
        "error is **very** high (20%)! This is only for illustration purposes.",
        "Inputs",
        "observed data point",
        "Non-zero mean",
        "Very high relative error",
        "std (without noise floor)",
        "Create figure",
        "Titles",
        "Plot data point",
        "Mean and standard deviation",
        "Random uniform phase",
        "Gaussian",
        "Correlated",
        "Uncorrelated",
        "Plot random realizations",
        "Add random noise of ntype.",
        "Axis etc",
        "fig.tight_layout()",
        "",
        "",
        "Intuitively one might think that the Gaussian uncorrelated noise is the",
        "\"best\" one, as it looks truly random. However, it is arguably the least",
        "\"physical\" one, as real and imaginary part of the electromagnetic field are",
        "not independent - if one changes, the other changes too. The uniformly",
        "distributed phases (blue circle) is the most physical noise corresponding to",
        "white noise adding random phases with a constant amplitude.",
        "",
        "To get a better understanding we look at some numerical examples where we",
        "plot amplitude-vs-offset for a fixed frequency, and amplitude-vs-frequency",
        "for a fixed offset; for single realizations and when we stack it many times",
        "in order to reduce the noise.",
        "",
        "3. Numerical examples",
        "---------------------",
        "",
        "Model",
        "~~~~~",
        "Model parameters",
        "Source at origin",
        "Homogenous space",
        "3 Ohm.m",
        "Ex-source, Ex-receiver}",
        "Single offset and offsets",
        "Single frequency and frequencies",
        "Responses",
        "Inline receivers",
        "Inline receiver",
        "Relative error, noise floor, mean of noise",
        "Phase settings: wrapped, radians, lag-defined (+iw)",
        "",
        "Plotting function",
        "~~~~~~~~~~~~~~~~~",
        "",
        "3.1 Offset-range for single frequency",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "Add noise",
        "",
        "",
        "",
        "3.2 Offset-range for single frequency - STACKED",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "Stack noise",
        "",
        "",
        "",
        "3.3 Frequency-range for single offset",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "Add noise",
        "",
        "",
        "",
        "3.4 Frequency-range for single offset - STACKED",
        "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~",
        "Stack noise",
        "",
        "",
        ""
    ],
    "docstrings": [
        "\"\"\"Add random noise to complex-valued data.\n\n    If `ntype='white_noise'`, complex noise is generated from uniform randomly\n    distributed phases.\n\n    If `ntype='gaussian_correlated'`, correlated Gaussian random noise is added\n    to real and imaginary part.\n\n    If `ntype='gaussian_uncorrelated'`, uncorrelated Gaussian random noise is\n    added to real and imaginary part.\n\n    \"\"\"",
        "\"\"\"Stack n-times the noise, return normalized.\"\"\"",
        "\"\"\"Return relative error (%) of noise with respect to resp.\"\"\"",
        "\"\"\"Single frequency, many offsets, one realization.\"\"\"",
        "\"\"\"Single frequency, many offsets, stacked.\"\"\"",
        "\"\"\"Single offset, many frequencies, one realization.\"\"\"",
        "\"\"\"Single offset, many frequencies, stacked.\"\"\""
    ],
    "functions": [
        "add_noise",
        "stack",
        "error",
        "figure",
        "offset_single",
        "offset_stacked",
        "frequency_single",
        "frequency_stacked"
    ],
    "classes": []
}