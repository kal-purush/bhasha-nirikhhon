{
    "identifiers": [
        "java",
        "lang",
        "capstone",
        "Capstone",
        "capstone",
        "M680x",
        "capstone",
        "M680x_const",
        "sAccess",
        "M6800_CODE",
        "M6801_CODE",
        "M6805_CODE",
        "M6808_CODE",
        "HD6301_CODE",
        "M6809_CODE",
        "M6811_CODE",
        "CPU12_CODE",
        "HD6309_CODE",
        "HCS08_CODE",
        "s",
        "len",
        "s",
        "length",
        "data",
        "len",
        "i",
        "i",
        "len",
        "i",
        "data",
        "i",
        "digit",
        "s",
        "charAt",
        "i",
        "digit",
        "s",
        "charAt",
        "i",
        "data",
        "code",
        "buf",
        "ch",
        "code",
        "buf",
        "append",
        "format",
        "ch",
        "buf",
        "toString",
        "code",
        "buf",
        "ch",
        "code",
        "buf",
        "append",
        "format",
        "ch",
        "buf",
        "toString",
        "cs",
        "ins",
        "stringToHexShortUc",
        "ins",
        "printf",
        "ins",
        "address",
        "ins",
        "mnemonic",
        "ins",
        "opStr",
        "operands",
        "ins",
        "operands",
        "operands",
        "op",
        "length",
        "printf",
        "operands",
        "op",
        "length",
        "c",
        "c",
        "operands",
        "op",
        "length",
        "c",
        "i",
        "operands",
        "op",
        "c",
        "i",
        "M680X_OP_REGISTER",
        "comment",
        "c",
        "operands",
        "flags",
        "M680X_FIRST_OP_IN_MNEM",
        "c",
        "operands",
        "flags",
        "M680X_SECOND_OP_IN_MNEM",
        "comment",
        "printf",
        "c",
        "ins",
        "regName",
        "i",
        "value",
        "reg",
        "comment",
        "i",
        "M680X_OP_CONSTANT",
        "printf",
        "c",
        "i",
        "value",
        "const_val",
        "i",
        "M680X_OP_IMMEDIATE",
        "printf",
        "c",
        "i",
        "value",
        "imm",
        "i",
        "M680X_OP_DIRECT",
        "printf",
        "c",
        "i",
        "value",
        "direct_addr",
        "i",
        "M680X_OP_EXTENDED",
        "printf",
        "c",
        "i",
        "value",
        "ext",
        "indirect",
        "i",
        "value",
        "ext",
        "address",
        "i",
        "M680X_OP_RELATIVE",
        "printf",
        "c",
        "i",
        "value",
        "rel",
        "address",
        "i",
        "M680X_OP_INDEXED",
        "printf",
        "c",
        "i",
        "value",
        "idx",
        "flags",
        "M680X_IDX_INDIRECT",
        "i",
        "value",
        "idx",
        "base_reg",
        "M680X_REG_INVALID",
        "regName",
        "ins",
        "regName",
        "i",
        "value",
        "idx",
        "base_reg",
        "regName",
        "printf",
        "regName",
        "i",
        "value",
        "idx",
        "offset_reg",
        "M680X_REG_INVALID",
        "regName",
        "ins",
        "regName",
        "i",
        "value",
        "idx",
        "offset_reg",
        "regName",
        "printf",
        "regName",
        "i",
        "value",
        "idx",
        "offset_bits",
        "i",
        "value",
        "idx",
        "offset_reg",
        "M680X_REG_INVALID",
        "i",
        "value",
        "idx",
        "inc_dec",
        "printf",
        "i",
        "value",
        "idx",
        "offset",
        "i",
        "value",
        "idx",
        "base_reg",
        "M680X_REG_PC",
        "printf",
        "i",
        "value",
        "idx",
        "offset_addr",
        "printf",
        "i",
        "value",
        "idx",
        "offset_bits",
        "i",
        "value",
        "idx",
        "inc_dec",
        "post_pre",
        "i",
        "value",
        "idx",
        "flags",
        "M680X_IDX_POST_INC_DEC",
        "inc_dec",
        "i",
        "value",
        "idx",
        "inc_dec",
        "printf",
        "post_pre",
        "inc_dec",
        "abs",
        "i",
        "value",
        "idx",
        "inc_dec",
        "i",
        "size",
        "printf",
        "i",
        "size",
        "i",
        "access",
        "Capstone",
        "CS_AC_INVALID",
        "printf",
        "sAccess",
        "i",
        "access",
        "ins",
        "regsRead",
        "length",
        "printf",
        "c",
        "c",
        "ins",
        "regsRead",
        "length",
        "c",
        "printf",
        "ins",
        "regName",
        "ins",
        "regsRead",
        "c",
        "printf",
        "ins",
        "regsWrite",
        "length",
        "printf",
        "c",
        "c",
        "ins",
        "regsWrite",
        "length",
        "c",
        "printf",
        "ins",
        "regName",
        "ins",
        "regsWrite",
        "c",
        "printf",
        "ins",
        "groups",
        "length",
        "printf",
        "ins",
        "groups",
        "length",
        "argv",
        "all_tests",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6301",
        "hexString2Byte",
        "HD6301_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6309",
        "hexString2Byte",
        "HD6309_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6800",
        "hexString2Byte",
        "M6800_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6801",
        "hexString2Byte",
        "M6801_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6805",
        "hexString2Byte",
        "M6805_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6808",
        "hexString2Byte",
        "M6808_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6809",
        "hexString2Byte",
        "M6809_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_6811",
        "hexString2Byte",
        "M6811_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_CPU12",
        "hexString2Byte",
        "CPU12_CODE",
        "Capstone",
        "CS_ARCH_M680X",
        "Capstone",
        "CS_MODE_M680X_HCS08",
        "hexString2Byte",
        "HCS08_CODE",
        "i",
        "i",
        "all_tests",
        "length",
        "i",
        "test",
        "all_tests",
        "i",
        "replace",
        "test",
        "comment",
        "stringToHexUc",
        "test",
        "code",
        "cs",
        "test",
        "arch",
        "test",
        "mode",
        "cs",
        "setDetail",
        "Capstone",
        "CS_OPT_ON",
        "all_ins",
        "cs",
        "disasm",
        "test",
        "code",
        "j",
        "j",
        "all_ins",
        "length",
        "j",
        "print_ins_detail",
        "all_ins",
        "j",
        "cs",
        "close"
    ],
    "literals": [
        "\"UNCHANGED\"",
        "\"READ\"",
        "\"WRITE\"",
        "\"READ | WRITE\"",
        "\"010936647f7410009010A410b6100039\"",
        "\"04053c3d389310ec10ed1039\"",
        "\"047f00172228002e0040425a708e979ca015ad00c31000da1234e57ffe\"",
        "\"31220035224510004b005110525e226265123472848586878a8b8c9495a710af109e607f9e6b7f009ed610009ee67f\"",
        "\"6b100071100072101039\"",
        "\"0610191a551e0123e931063455a681a7897fffa69d1000a791a69f100011ac99100039A607A627A647A667A60FA610A680A681A682A683A684A685A686A6887FA68880A6897FFFA6898000A68BA68C10A68D1000A691A693A694A695A696A6987FA69880A6997FFFA6998000A69BA69C10A69D1000A69F1000\"",
        "\"0203127f100013990800147f02157f011e7f20008fcf18081830183c1867188c1000188f18ce100018ff10001aa37f1aac1aee7f1aef7fcdac7f\"",
        "\"000401000c00800e008000111e100080003b4a1000044b01044f7f80008f1000b752b7b1a667a6fea6f71802e23039e21000180c30391000181118121000181900181e00183e183f00\"",
        "\"0110106210107b101000cd499602d21030231038103b1053105d1130431011372510113812113923113b34118e100011af1011ab1011f68000\"",
        "\"3210009eae9ece7f9ebe10009efe7f3e10009ef37f9610009eff7f82\"",
        "\" 0x%02X\"",
        "\"%02X\"",
        "\"0x%04X:\\t%s\\t%s\\t%s\\n\"",
        "\"\\top_count: %d\\n\"",
        "\"\"",
        "\" (in mnemonic)\"",
        "\"\\t\\toperands[%d].type: REGISTER = %s%s\\n\"",
        "\"\\t\\toperands[%d].type: CONSTANT = %d\\n\"",
        "\"\\t\\toperands[%d].type: IMMEDIATE = #%d\\n\"",
        "\"\\t\\toperands[%d].type: DIRECT = 0x%02X\\n\"",
        "\"\\t\\toperands[%d].type: EXTENDED %s = 0x%04X\\n\"",
        "\"INDIRECT\"",
        "\"\"",
        "\"\\t\\toperands[%d].type: RELATIVE = 0x%04X\\n\"",
        "\"\\t\\toperands[%d].type: INDEXED%s\\n\"",
        "\" INDIRECT\"",
        "\"\"",
        "\"\\t\\t\\tbase register: %s\\n\"",
        "\"\\t\\t\\toffset register: %s\\n\"",
        "\"\\t\\t\\toffset: %d\\n\"",
        "\"\\t\\t\\toffset address: 0x%04X\\n\"",
        "\"\\t\\t\\toffset bits: %d\\n\"",
        "\"post\"",
        "\"pre\"",
        "\"increment\"",
        "\"decrement\"",
        "\"\\t\\t\\t%s %s: %d\\n\"",
        "\"\\t\\t\\tsize: %d\\n\"",
        "\"\\t\\t\\taccess: %s\\n\"",
        "\"\\tRegisters read:\"",
        "\" %s\"",
        "\"\\n\"",
        "\"\\tRegisters modified:\"",
        "\" %s\"",
        "\"\\n\"",
        "\"\\tgroups_count: %d\\n\"",
        "\"M680X_HD6301\"",
        "\"M680X_HD6309\"",
        "\"M680X_M6800\"",
        "\"M680X_M6801\"",
        "\"M680X_M68HC05\"",
        "\"M680X_M68HC08\"",
        "\"M680X_M6809\"",
        "\"M680X_M68HC11\"",
        "\"M680X_CPU12\"",
        "\"M680X_HCS08\"",
        "\"\\0\"",
        "\"*\"",
        "\"Platform: \"",
        "\"Code: \"",
        "\"Disasm:\""
    ],
    "variables": [
        "cs"
    ],
    "comments": [
        "Capstone Java binding",
        "from http://stackoverflow.com/questions/140131/convert-a-string-representation-of-a-hex-dump-to-a-byte-array-using-java",
        "Close when done"
    ],
    "docstrings": [
        "M680X Backend by Wolfgang Schwotzer <wolfgang.schwotzer@gmx.net> 2017",
        "private static String hex(int i) {\n    return Integer.toString(i, 16);\n  }\n\n  private static String hex(long i) {\n    return Long.toString(i, 16);\n  }"
    ],
    "functions": [
        "hexString2Byte",
        "stringToHexUc",
        "stringToHexShortUc",
        "print_ins_detail",
        "main"
    ],
    "classes": [
        "TestM680x"
    ]
}