{
    "identifiers": [
        "sun",
        "util",
        "calendar",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "io",
        "BufferedInputStream",
        "java",
        "io",
        "DataInput",
        "java",
        "io",
        "DataInputStream",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "java",
        "io",
        "StreamCorruptedException",
        "java",
        "security",
        "AccessController",
        "java",
        "security",
        "PrivilegedAction",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "time",
        "ZoneOffset",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Calendar",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "java",
        "util",
        "Entry",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "java",
        "util",
        "SimpleTimeZone",
        "java",
        "util",
        "concurrent",
        "ConcurrentHashMap",
        "java",
        "util",
        "CRC32",
        "sun",
        "security",
        "action",
        "GetPropertyAction",
        "checkHaveData",
        "len",
        "regions",
        "length",
        "oldMappings",
        "length",
        "USE_OLDMAPPING",
        "len",
        "ids",
        "Arrays",
        "copyOf",
        "regions",
        "len",
        "i",
        "regions",
        "length",
        "USE_OLDMAPPING",
        "ids",
        "i",
        "ids",
        "i",
        "ids",
        "i",
        "j",
        "j",
        "oldMappings",
        "length",
        "j",
        "ids",
        "i",
        "oldMappings",
        "j",
        "ids",
        "regions",
        "dis",
        "getResourceAsStream",
        "load",
        "dis",
        "e",
        "e",
        "printStackTrace",
        "rawOffset",
        "ids",
        "id",
        "getZoneIds",
        "zi",
        "getZoneInfo",
        "id",
        "zi",
        "getRawOffset",
        "rawOffset",
        "ids",
        "add",
        "id",
        "ids",
        "toArray",
        "ids",
        "size",
        "Arrays",
        "sort",
        "zoneId",
        "zoneId",
        "zoneId",
        "startsWith",
        "checkHaveData",
        "zi",
        "getZoneInfo0",
        "zoneId",
        "replace",
        "zi",
        "zi",
        "zi",
        "clone",
        "zi",
        "setID",
        "zoneId",
        "zi",
        "zoneId",
        "zi",
        "zones",
        "get",
        "zoneId",
        "zi",
        "zi",
        "zid",
        "zoneId",
        "aliases",
        "containsKey",
        "zoneId",
        "zid",
        "aliases",
        "get",
        "zoneId",
        "index",
        "Arrays",
        "binarySearch",
        "regions",
        "zid",
        "index",
        "ruleArray",
        "indices",
        "index",
        "dis",
        "zi",
        "getZoneInfo",
        "dis",
        "zid",
        "zones",
        "put",
        "zoneId",
        "zi",
        "zi",
        "ex",
        "zoneId",
        "versionId",
        "ex",
        "Collections",
        "unmodifiableMap",
        "aliases",
        "versionId",
        "originalId",
        "gmtOffset",
        "id",
        "toCustomID",
        "gmtOffset",
        "id",
        "gmtOffset",
        "gmtOffset",
        "sign",
        "offset",
        "gmtOffset",
        "offset",
        "sign",
        "sign",
        "offset",
        "offset",
        "hh",
        "offset",
        "mm",
        "offset",
        "buf",
        "sign",
        "hh",
        "buf",
        "hh",
        "buf",
        "hh",
        "mm",
        "buf",
        "mm",
        "buf",
        "mm",
        "buf",
        "versionId",
        "zones",
        "aliases",
        "ruleArray",
        "regions",
        "indices",
        "USE_OLDMAPPING",
        "oldMappings",
        "alias",
        "oldMappings",
        "aliases",
        "put",
        "alias",
        "alias",
        "USE_OLDMAPPING",
        "aliases",
        "put",
        "aliases",
        "put",
        "aliases",
        "put",
        "zones",
        "put",
        "zones",
        "put",
        "zones",
        "put",
        "USE_OLDMAPPING",
        "dis",
        "dis",
        "readByte",
        "groupId",
        "dis",
        "readUTF",
        "equals",
        "groupId",
        "versionCount",
        "dis",
        "readShort",
        "i",
        "i",
        "versionCount",
        "i",
        "versionId",
        "dis",
        "readUTF",
        "regionCount",
        "dis",
        "readShort",
        "regionArray",
        "regionCount",
        "i",
        "i",
        "regionCount",
        "i",
        "regionArray",
        "i",
        "dis",
        "readUTF",
        "ruleCount",
        "dis",
        "readShort",
        "ruleArray",
        "ruleCount",
        "i",
        "i",
        "ruleCount",
        "i",
        "dis",
        "readShort",
        "dis",
        "readFully",
        "ruleArray",
        "i",
        "i",
        "i",
        "versionCount",
        "i",
        "regionCount",
        "dis",
        "readShort",
        "regions",
        "regionCount",
        "indices",
        "regionCount",
        "j",
        "j",
        "regionCount",
        "j",
        "regions",
        "j",
        "regionArray",
        "dis",
        "readShort",
        "indices",
        "j",
        "dis",
        "readShort",
        "zones",
        "remove",
        "i",
        "i",
        "versionCount",
        "i",
        "aliasCount",
        "dis",
        "readShort",
        "aliases",
        "clear",
        "j",
        "j",
        "aliasCount",
        "j",
        "alias",
        "regionArray",
        "dis",
        "readShort",
        "region",
        "regionArray",
        "dis",
        "readShort",
        "aliases",
        "put",
        "alias",
        "region",
        "addOldMapping",
        "zoneId",
        "readByte",
        "stdSize",
        "readInt",
        "stdTrans",
        "stdSize",
        "i",
        "i",
        "stdSize",
        "i",
        "stdTrans",
        "i",
        "readEpochSec",
        "stdOffsets",
        "stdSize",
        "i",
        "i",
        "stdOffsets",
        "length",
        "i",
        "stdOffsets",
        "i",
        "readOffset",
        "savSize",
        "readInt",
        "savTrans",
        "savSize",
        "i",
        "i",
        "savSize",
        "i",
        "savTrans",
        "i",
        "readEpochSec",
        "savOffsets",
        "savSize",
        "i",
        "i",
        "savOffsets",
        "length",
        "i",
        "savOffsets",
        "i",
        "readOffset",
        "ruleSize",
        "readByte",
        "rules",
        "ruleSize",
        "i",
        "i",
        "ruleSize",
        "i",
        "rules",
        "i",
        "getZoneInfo",
        "zoneId",
        "stdTrans",
        "stdOffsets",
        "savTrans",
        "savOffsets",
        "rules",
        "offsetByte",
        "readByte",
        "offsetByte",
        "readInt",
        "offsetByte",
        "hiByte",
        "readByte",
        "hiByte",
        "readLong",
        "midByte",
        "readByte",
        "loByte",
        "readByte",
        "tot",
        "hiByte",
        "midByte",
        "loByte",
        "tot",
        "UTC1900",
        "UTC2037",
        "LDT2037",
        "CURRT",
        "currentTimeMillis",
        "zoneId",
        "standardTransitions",
        "standardOffsets",
        "savingsInstantTransitions",
        "wallOffsets",
        "lastRules",
        "rawOffset",
        "dstSavings",
        "checksum",
        "willGMTOffsetChange",
        "standardTransitions",
        "length",
        "rawOffset",
        "standardOffsets",
        "standardOffsets",
        "length",
        "willGMTOffsetChange",
        "standardTransitions",
        "standardTransitions",
        "length",
        "CURRT",
        "rawOffset",
        "standardOffsets",
        "transitions",
        "offsets",
        "nOffsets",
        "nTrans",
        "savingsInstantTransitions",
        "length",
        "transitions",
        "offsets",
        "lastyear",
        "getYear",
        "savingsInstantTransitions",
        "savingsInstantTransitions",
        "length",
        "wallOffsets",
        "savingsInstantTransitions",
        "length",
        "i",
        "k",
        "i",
        "savingsInstantTransitions",
        "length",
        "savingsInstantTransitions",
        "i",
        "UTC1900",
        "i",
        "i",
        "savingsInstantTransitions",
        "length",
        "i",
        "savingsInstantTransitions",
        "length",
        "offsets",
        "standardOffsets",
        "standardOffsets",
        "length",
        "nOffsets",
        "nOffsets",
        "addTrans",
        "transitions",
        "nTrans",
        "offsets",
        "nOffsets",
        "UTC1900",
        "wallOffsets",
        "i",
        "getStandardOffset",
        "standardTransitions",
        "standardOffsets",
        "UTC1900",
        "i",
        "savingsInstantTransitions",
        "length",
        "i",
        "trans",
        "savingsInstantTransitions",
        "i",
        "trans",
        "UTC2037",
        "lastyear",
        "LASTYEAR",
        "k",
        "standardTransitions",
        "length",
        "trans_s",
        "standardTransitions",
        "k",
        "trans_s",
        "UTC1900",
        "trans_s",
        "trans",
        "trans_s",
        "trans",
        "nOffsets",
        "offsets",
        "length",
        "offsets",
        "Arrays",
        "copyOf",
        "offsets",
        "offsets",
        "length",
        "nTrans",
        "transitions",
        "length",
        "transitions",
        "Arrays",
        "copyOf",
        "transitions",
        "transitions",
        "length",
        "nOffsets",
        "addTrans",
        "transitions",
        "nTrans",
        "offsets",
        "nOffsets",
        "trans_s",
        "wallOffsets",
        "i",
        "standardOffsets",
        "k",
        "k",
        "nOffsets",
        "offsets",
        "length",
        "offsets",
        "Arrays",
        "copyOf",
        "offsets",
        "offsets",
        "length",
        "nTrans",
        "transitions",
        "length",
        "transitions",
        "Arrays",
        "copyOf",
        "transitions",
        "transitions",
        "length",
        "nOffsets",
        "addTrans",
        "transitions",
        "nTrans",
        "offsets",
        "nOffsets",
        "trans",
        "wallOffsets",
        "i",
        "getStandardOffset",
        "standardTransitions",
        "standardOffsets",
        "trans",
        "k",
        "standardTransitions",
        "length",
        "trans",
        "standardTransitions",
        "k",
        "trans",
        "UTC1900",
        "offset",
        "wallOffsets",
        "i",
        "offsetIndex",
        "indexOf",
        "offsets",
        "nOffsets",
        "offset",
        "offsetIndex",
        "nOffsets",
        "nOffsets",
        "transitions",
        "nTrans",
        "trans",
        "TRANSITION_NSHIFT",
        "offsetIndex",
        "OFFSET_MASK",
        "k",
        "lastRules",
        "length",
        "lastyear",
        "LASTYEAR",
        "zotr",
        "lastRules",
        "trans",
        "zotr",
        "getTransitionEpochSecond",
        "lastyear",
        "nOffsets",
        "offsets",
        "length",
        "offsets",
        "Arrays",
        "copyOf",
        "offsets",
        "offsets",
        "length",
        "nTrans",
        "transitions",
        "length",
        "transitions",
        "Arrays",
        "copyOf",
        "transitions",
        "transitions",
        "length",
        "nOffsets",
        "addTrans",
        "transitions",
        "nTrans",
        "offsets",
        "nOffsets",
        "trans",
        "zotr",
        "offsetAfter",
        "zotr",
        "standardOffset",
        "startRule",
        "lastRules",
        "lastRules",
        "length",
        "endRule",
        "lastRules",
        "lastRules",
        "length",
        "startRule",
        "offsetAfter",
        "startRule",
        "offsetBefore",
        "endRule",
        "offsetAfter",
        "endRule",
        "offsetBefore",
        "tmp",
        "tmp",
        "startRule",
        "startRule",
        "endRule",
        "endRule",
        "tmp",
        "startRule",
        "month",
        "dom",
        "startRule",
        "dom",
        "dow",
        "startRule",
        "dow",
        "dow",
        "dom",
        "dom",
        "dom",
        "toCalendarDOW",
        "dow",
        "dom",
        "toCalendarDOW",
        "dow",
        "startRule",
        "secondOfDay",
        "toSTZTime",
        "startRule",
        "timeDefinition",
        "endRule",
        "month",
        "dom",
        "endRule",
        "dom",
        "dow",
        "endRule",
        "dow",
        "dow",
        "dom",
        "dom",
        "dom",
        "toCalendarDOW",
        "dow",
        "dom",
        "toCalendarDOW",
        "dow",
        "endRule",
        "secondOfDay",
        "toSTZTime",
        "endRule",
        "timeDefinition",
        "dstSavings",
        "startRule",
        "offsetAfter",
        "startRule",
        "offsetBefore",
        "zoneId",
        "equals",
        "zoneId",
        "equals",
        "zoneId",
        "equals",
        "zoneId",
        "equals",
        "nTrans",
        "lastyear",
        "LASTYEAR",
        "trans",
        "LDT2037",
        "rawOffset",
        "offsetIndex",
        "indexOf",
        "offsets",
        "nOffsets",
        "rawOffset",
        "offsetIndex",
        "nOffsets",
        "nOffsets",
        "transitions",
        "nTrans",
        "trans",
        "TRANSITION_NSHIFT",
        "offsetIndex",
        "OFFSET_MASK",
        "savingsInstantTransitions",
        "length",
        "m",
        "savingsInstantTransitions",
        "length",
        "startTrans",
        "savingsInstantTransitions",
        "m",
        "startOffset",
        "wallOffsets",
        "m",
        "startStd",
        "getStandardOffset",
        "standardTransitions",
        "standardOffsets",
        "startTrans",
        "endTrans",
        "savingsInstantTransitions",
        "m",
        "endOffset",
        "wallOffsets",
        "m",
        "endStd",
        "getStandardOffset",
        "standardTransitions",
        "standardOffsets",
        "endTrans",
        "startOffset",
        "startStd",
        "endOffset",
        "endStd",
        "m",
        "savingsInstantTransitions",
        "length",
        "before",
        "ZoneOffset",
        "ofTotalSeconds",
        "wallOffsets",
        "m",
        "after",
        "ZoneOffset",
        "ofTotalSeconds",
        "wallOffsets",
        "m",
        "ldt",
        "LocalDateTime",
        "ofEpochSecond",
        "savingsInstantTransitions",
        "m",
        "before",
        "startLDT",
        "after",
        "getTotalSeconds",
        "before",
        "getTotalSeconds",
        "startLDT",
        "ldt",
        "startLDT",
        "ldt",
        "plusSeconds",
        "wallOffsets",
        "m",
        "wallOffsets",
        "m",
        "m",
        "savingsInstantTransitions",
        "length",
        "before",
        "ZoneOffset",
        "ofTotalSeconds",
        "wallOffsets",
        "m",
        "after",
        "ZoneOffset",
        "ofTotalSeconds",
        "wallOffsets",
        "m",
        "ldt",
        "LocalDateTime",
        "ofEpochSecond",
        "savingsInstantTransitions",
        "m",
        "before",
        "endLDT",
        "after",
        "getTotalSeconds",
        "before",
        "getTotalSeconds",
        "endLDT",
        "ldt",
        "plusSeconds",
        "wallOffsets",
        "m",
        "wallOffsets",
        "m",
        "endLDT",
        "ldt",
        "startLDT",
        "getMonthValue",
        "startLDT",
        "getDayOfMonth",
        "startLDT",
        "toLocalTime",
        "toSecondOfDay",
        "SimpleTimeZone",
        "WALL_TIME",
        "endLDT",
        "getMonthValue",
        "endLDT",
        "getDayOfMonth",
        "endLDT",
        "toLocalTime",
        "toSecondOfDay",
        "SimpleTimeZone",
        "WALL_TIME",
        "dstSavings",
        "startOffset",
        "startStd",
        "transitions",
        "transitions",
        "length",
        "nTrans",
        "nTrans",
        "transitions",
        "transitions",
        "Arrays",
        "copyOf",
        "transitions",
        "nTrans",
        "offsets",
        "offsets",
        "length",
        "nOffsets",
        "nOffsets",
        "offsets",
        "offsets",
        "Arrays",
        "copyOf",
        "offsets",
        "nOffsets",
        "transitions",
        "zoneId",
        "rawOffset",
        "dstSavings",
        "checksum",
        "transitions",
        "offsets",
        "willGMTOffsetChange",
        "standardTransitions",
        "standardOffsets",
        "epochSec",
        "index",
        "index",
        "standardTransitions",
        "length",
        "index",
        "epochSec",
        "standardTransitions",
        "index",
        "standardOffsets",
        "index",
        "SECONDS_PER_DAY",
        "DAYS_PER_CYCLE",
        "DAYS_0000_TO_1970",
        "DAYS_PER_CYCLE",
        "epochSecond",
        "offset",
        "second",
        "epochSecond",
        "offset",
        "epochDay",
        "floorDiv",
        "second",
        "SECONDS_PER_DAY",
        "zeroDay",
        "epochDay",
        "DAYS_0000_TO_1970",
        "zeroDay",
        "adjust",
        "zeroDay",
        "adjustCycles",
        "zeroDay",
        "DAYS_PER_CYCLE",
        "adjust",
        "adjustCycles",
        "zeroDay",
        "adjustCycles",
        "DAYS_PER_CYCLE",
        "yearEst",
        "zeroDay",
        "DAYS_PER_CYCLE",
        "doyEst",
        "zeroDay",
        "yearEst",
        "yearEst",
        "yearEst",
        "yearEst",
        "doyEst",
        "yearEst",
        "doyEst",
        "zeroDay",
        "yearEst",
        "yearEst",
        "yearEst",
        "yearEst",
        "yearEst",
        "adjust",
        "marchDoy0",
        "doyEst",
        "marchMonth0",
        "marchDoy0",
        "month",
        "marchMonth0",
        "dom",
        "marchDoy0",
        "marchMonth0",
        "yearEst",
        "marchMonth0",
        "yearEst",
        "toCalendarDOW",
        "Calendar",
        "MONDAY",
        "Calendar",
        "TUESDAY",
        "Calendar",
        "WEDNESDAY",
        "Calendar",
        "THURSDAY",
        "Calendar",
        "FRIDAY",
        "Calendar",
        "SATURDAY",
        "Calendar",
        "SUNDAY",
        "toSTZTime",
        "SimpleTimeZone",
        "UTC_TIME",
        "SimpleTimeZone",
        "WALL_TIME",
        "SimpleTimeZone",
        "STANDARD_TIME",
        "OFFSET_MASK",
        "DST_MASK",
        "DST_NSHIFT",
        "TRANSITION_NSHIFT",
        "LASTYEAR",
        "offsets",
        "nOffsets",
        "offset",
        "offset",
        "nOffsets",
        "offsets",
        "offset",
        "offsets",
        "offset",
        "transitions",
        "nTrans",
        "offsets",
        "nOffsets",
        "trans",
        "offset",
        "stdOffset",
        "offsetIndex",
        "indexOf",
        "offsets",
        "nOffsets",
        "offset",
        "offsetIndex",
        "nOffsets",
        "nOffsets",
        "dstIndex",
        "offset",
        "stdOffset",
        "dstIndex",
        "indexOf",
        "offsets",
        "nOffsets",
        "offset",
        "stdOffset",
        "dstIndex",
        "nOffsets",
        "nOffsets",
        "transitions",
        "nTrans",
        "trans",
        "TRANSITION_NSHIFT",
        "dstIndex",
        "DST_NSHIFT",
        "DST_MASK",
        "offsetIndex",
        "OFFSET_MASK",
        "nOffsets",
        "month",
        "dom",
        "dow",
        "secondOfDay",
        "timeEndOfDay",
        "timeDefinition",
        "standardOffset",
        "offsetBefore",
        "offsetAfter",
        "data",
        "readInt",
        "dowByte",
        "data",
        "timeByte",
        "data",
        "stdByte",
        "data",
        "beforeByte",
        "data",
        "afterByte",
        "data",
        "month",
        "data",
        "dom",
        "data",
        "dow",
        "dowByte",
        "dowByte",
        "secondOfDay",
        "timeByte",
        "readInt",
        "timeByte",
        "timeEndOfDay",
        "timeByte",
        "timeDefinition",
        "data",
        "standardOffset",
        "stdByte",
        "readInt",
        "stdByte",
        "offsetBefore",
        "beforeByte",
        "readInt",
        "standardOffset",
        "beforeByte",
        "offsetAfter",
        "afterByte",
        "readInt",
        "standardOffset",
        "afterByte",
        "year",
        "epochDay",
        "dom",
        "epochDay",
        "toEpochDay",
        "year",
        "month",
        "lengthOfMonth",
        "year",
        "month",
        "dom",
        "dow",
        "epochDay",
        "previousOrSame",
        "epochDay",
        "dow",
        "epochDay",
        "toEpochDay",
        "year",
        "month",
        "dom",
        "dow",
        "epochDay",
        "nextOrSame",
        "epochDay",
        "dow",
        "timeEndOfDay",
        "epochDay",
        "difference",
        "timeDefinition",
        "difference",
        "difference",
        "offsetBefore",
        "difference",
        "standardOffset",
        "epochDay",
        "secondOfDay",
        "difference",
        "year",
        "year",
        "year",
        "year",
        "year",
        "month",
        "month",
        "isLeapYear",
        "year",
        "year",
        "month",
        "day",
        "y",
        "year",
        "m",
        "month",
        "total",
        "total",
        "y",
        "y",
        "total",
        "y",
        "y",
        "y",
        "total",
        "y",
        "y",
        "y",
        "total",
        "m",
        "total",
        "day",
        "m",
        "total",
        "isLeapYear",
        "year",
        "total",
        "total",
        "DAYS_0000_TO_1970",
        "epochDay",
        "dayOfWeek",
        "adjust",
        "epochDay",
        "dayOfWeek",
        "epochDay",
        "dayOfWeek",
        "adjust",
        "epochDay",
        "dayOfWeek",
        "epochDay",
        "dow",
        "relative",
        "calDow",
        "floorMod",
        "epochDay",
        "relative",
        "calDow",
        "dow",
        "epochDay",
        "relative",
        "daysDiff",
        "calDow",
        "dow",
        "epochDay",
        "daysDiff",
        "daysDiff",
        "daysDiff",
        "daysDiff",
        "dow",
        "calDow",
        "epochDay",
        "daysDiff",
        "daysDiff",
        "daysDiff"
    ],
    "literals": [
        "\"EST\"",
        "\"HST\"",
        "\"MST\"",
        "\"tzdb.dat\"",
        "\"GMT\"",
        "\"Invalid binary time-zone data: TZDB:\"",
        "\", version: \"",
        "\"ACT\"",
        "\"Australia/Darwin\"",
        "\"AET\"",
        "\"Australia/Sydney\"",
        "\"AGT\"",
        "\"America/Argentina/Buenos_Aires\"",
        "\"ART\"",
        "\"Africa/Cairo\"",
        "\"AST\"",
        "\"America/Anchorage\"",
        "\"BET\"",
        "\"America/Sao_Paulo\"",
        "\"BST\"",
        "\"Asia/Dhaka\"",
        "\"CAT\"",
        "\"Africa/Harare\"",
        "\"CNT\"",
        "\"America/St_Johns\"",
        "\"CST\"",
        "\"America/Chicago\"",
        "\"CTT\"",
        "\"Asia/Shanghai\"",
        "\"EAT\"",
        "\"Africa/Addis_Ababa\"",
        "\"ECT\"",
        "\"Europe/Paris\"",
        "\"IET\"",
        "\"America/Indiana/Indianapolis\"",
        "\"IST\"",
        "\"Asia/Kolkata\"",
        "\"JST\"",
        "\"Asia/Tokyo\"",
        "\"MIT\"",
        "\"Pacific/Apia\"",
        "\"NET\"",
        "\"Asia/Yerevan\"",
        "\"NST\"",
        "\"Pacific/Auckland\"",
        "\"PLT\"",
        "\"Asia/Karachi\"",
        "\"PNT\"",
        "\"America/Phoenix\"",
        "\"PRT\"",
        "\"America/Puerto_Rico\"",
        "\"PST\"",
        "\"America/Los_Angeles\"",
        "\"SST\"",
        "\"Pacific/Guadalcanal\"",
        "\"VST\"",
        "\"Asia/Ho_Chi_Minh\"",
        "\"EST\"",
        "\"America/New_York\"",
        "\"MST\"",
        "\"America/Denver\"",
        "\"HST\"",
        "\"Pacific/Honolulu\"",
        "\"EST\"",
        "\"EST\"",
        "\"MST\"",
        "\"MST\"",
        "\"HST\"",
        "\"HST\"",
        "\"File format not recognised\"",
        "\"TZDB\"",
        "\"File format not recognised\"",
        "\"ROC\"",
        "\"Asia/Amman\"",
        "\"Asia/Gaza\"",
        "\"Asia/Hebron\"",
        "\"Africa/Cairo\""
    ],
    "variables": [
        "sign",
        "versionId",
        "ruleArray",
        "regions",
        "indices",
        "tmp",
        "startLDT",
        "endLDT",
        "month",
        "dom",
        "dow",
        "secondOfDay",
        "timeEndOfDay",
        "timeDefinition",
        "standardOffset",
        "offsetBefore",
        "offsetAfter"
    ],
    "comments": [
        "EST/HST/MST not in tzdb.dat",
        "It appears the \"zi\" implementation returns the",
        "sorted list, though the specification does not",
        "specify it. Keep the same behavior for better",
        "compatibility.",
        "BH SwingJS",
        "",
        "Flag for supporting JDK backward compatible IDs, such as \"EST\".",
        "static {",
        "String oldmapping = AccessController.doPrivileged(",
        "new GetPropertyAction(\"sun.timezone.ids.oldmapping\", \"false\")).toLowerCase(Locale.ROOT);",
        "USE_OLDMAPPING = (oldmapping.equals(\"yes\") || oldmapping.equals(\"true\"));",
        "AccessController.doPrivileged(new PrivilegedAction<Object>() {",
        "public Object run() {",
        "try {",
        "String libDir = System.getProperty(\"java.home\") + File.separator + \"lib\";",
        "try (DataInputStream dis = new DataInputStream(",
        "new BufferedInputStream(new FileInputStream(",
        "new File(libDir, \"tzdb.dat\"))))) {",
        "load(dis);",
        "}",
        "} catch (Exception x) {",
        "throw new Error(x);",
        "}",
        "return null;",
        "}",
        "});",
        "}",
        "group",
        "versions, only keep the last one",
        "regions",
        "rules",
        "link version-region-rules, only keep the last version, if more than one",
        "remove the following ids from the map, they",
        "are exclued from the \"old\" ZoneInfo",
        "old us time-zone names",
        "Ser/////////////////////////////////",
        "TBD: assert ZRULES:",
        "ZoneRules --> ZoneInfo/////////////////////////////////",
        "ZoneInfo starts with UTC1900",
        "ZoneInfo ends with   UTC2037",
        "LocalDateTime.of(2038, 1, 1, 0, 0, 0).toEpochSecond(ZoneOffset.UTC) - 1;",
        "ZoneInfo has an ending entry for 2037, this need to be offset by",
        "a \"rawOffset\"",
        "LocalDateTime.of(2037, 1, 1, 0, 0, 0).toEpochSecond(ZoneOffset.UTC));",
        "Current time. Used to determine future GMToffset transitions",
        "rawOffset, pick the last one",
        "transitions, offsets;",
        "TBD: ZoneInfo actually can't handle",
        "offsets.length > 16 (4-bit index limit)",
        "last year in trans table",
        "It should not matter to use before or after offset for year",
        "skip any date before UTC1900",
        "javazic writes the last GMT offset into index 0!",
        "ZoneInfo has a beginning entry for 1900.",
        "Only add it if this is not the only one in table",
        "no trans beyond LASTYEAR",
        "some standard offset transitions don't exist in",
        "savingInstantTrans, if the offset \"change\" doesn't",
        "really change the \"effectiveWallOffset\". For example",
        "the 1999/2000 pair in Zone Arg/Buenos_Aires, in which",
        "the daylightsaving \"happened\" but it actually does",
        "not result in the timezone switch. ZoneInfo however",
        "needs them in its transitions table",
        "append any leftover standard trans",
        "fill the gap between the last trans until LASTYEAR",
        "ZoneRulesBuilder adjusts < 0 case (-1, for last, don't have",
        "\"<=\" case yet) to positive value if not February (it appears",
        "we don't have February cutoff in tzdata table yet)",
        "Ideally, if JSR310 can just pass in the nagative and",
        "we can then pass in the dom = -1, dow > 0 into ZoneInfo",
        "",
        "hacking, assume the >=24 is the result of ZRB optimization for",
        "\"last\", it works for now.",
        "To specify a day of week on or after an exact day of month,",
        "set the month to an exact month value, day-of-month to the",
        "day on or after which the rule is applied, and day-of-week",
        "to a negative Calendar.DAY_OF_WEEK DAY_OF_WEEK field value.",
        "hacking: see comment above",
        "Note: known mismatching -> Asia/Amman",
        "Asia/Gaza",
        "Asia/Hebron",
        "ZoneInfo :      startDayOfWeek=5     <= Thursday",
        "startTime=86400000   <= 24 hours",
        "This:           startDayOfWeek=6",
        "startTime=0",
        "Similar workaround needs to be applied to Africa/Cairo and",
        "its endDayOfWeek and endTime",
        "Below is the workarounds, it probably slows down everyone a little",
        "endDayOfWeek and endTime workaround",
        "only do this if there is something in table already",
        "ZoneInfo has an ending entry for 2037",
        "long trans = OffsetDateTime.of(LASTYEAR, 1, 1, 0, 0, 0, 0,",
        "ZoneOffset.ofTotalSeconds(rawOffset/1000))",
        ".toEpochSecond();",
        "Workaround: create the params based on the last pair for",
        "zones like Israel and Iran which have trans defined",
        "up until 2037, but no \"transition rule\" defined",
        "",
        "Note: Known mismatching for Israel, Asia/Jerusalem/Tel Aviv",
        "ZoneInfo:        startMode=3",
        "startMonth=2",
        "startDay=26",
        "startDayOfWeek=6",
        "",
        "This:            startMode=1",
        "startMonth=2",
        "startDay=27",
        "startDayOfWeek=0",
        "these two are actually the same for 2037, the SimpleTimeZone",
        "for the last \"known\" year",
        "last - 1 trans",
        "isGap()",
        "last trans",
        "isGap()",
        "Checksum sum = new Checksum();",
        "for (i = 0; i < transitions.length; i++) {",
        "long val = transitions[i];",
        "int dst = (int)((val >>> DST_NSHIFT) & 0xfL);",
        "int saving = (dst == 0) ? 0 : offsets[dst];",
        "int index = (int)(val & OFFSET_MASK);",
        "int offset = offsets[index];",
        "long second = (val >> TRANSITION_NSHIFT);",
        "// javazic uses \"index of the offset in offsets\",",
        "// instead of the real offset value itself to",
        "// calculate the checksum. Have to keep doing",
        "// the same thing, checksum is part of the",
        "// ZoneInfo serialization form.",
        "sum.update(second + index);",
        "sum.update(index);",
        "sum.update(dst == 0 ? -1 : dst);",
        "}",
        "checksum = (int)sum.getValue();",
        "The size of stdOffsets is [0..9], with most are",
        "[1..4] entries , simple loop search is faster",
        "",
        "int index  = Arrays.binarySearch(standardTransitions, epochSec);",
        "if (index < 0) {",
        "// switch negative insert position to start of matched range",
        "index = -index - 2;",
        "}",
        "return standardOffsets[index + 1];",
        "overflow caught later",
        "find the march-based year",
        "adjust to 0000-03-01 so leap day is at end of four year cycle",
        "adjust negative years to positive for calculation",
        "fix estimate",
        "reset any negative year",
        "convert march-based values back to january-based",
        "from: 0 for offset lookup, 1 for dstsvings lookup",
        "return updated nOffsets",
        "// ZoneInfo checksum, copy/pasted from javazic",
        "private static class Checksum extends CRC32 {",
        "public void update(int val) {",
        "byte[] b = new byte[4];",
        "b[0] = (byte)(val >>> 24);",
        "b[1] = (byte)(val >>> 16);",
        "b[2] = (byte)(val >>> 8);",
        "b[3] = (byte)(val);",
        "update(b);",
        "}",
        "void update(long val) {",
        "byte[] b = new byte[8];",
        "b[0] = (byte)(val >>> 56);",
        "b[1] = (byte)(val >>> 48);",
        "b[2] = (byte)(val >>> 40);",
        "b[3] = (byte)(val >>> 32);",
        "b[4] = (byte)(val >>> 24);",
        "b[5] = (byte)(val >>> 16);",
        "b[6] = (byte)(val >>> 8);",
        "b[7] = (byte)(val);",
        "update(b);",
        "}",
        "}",
        "A simple/raw version of j.t.ZoneOffsetTransitionRule",
        "UTC",
        "WALL",
        "STANDARD",
        "FEBRUARY:",
        "APRIL:",
        "JUNE:",
        "SEPTEMBER:",
        "NOVEMBER:"
    ],
    "docstrings": [
        "* Copyright (c) 2012, 2013, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.",
        "* Loads TZDB time-zone rules for j.u.TimeZone\n * <p>\n * @since 1.8",
        "* Gets all available IDs supported in the Java run-time.\n     *\n     * @return a set of time zone IDs.",
        "* Gets all available IDs that have the same value as the\n     * specified raw GMT offset.\n     *\n     * @param rawOffset  the GMT offset in milliseconds. This\n     *                   value should not include any daylight saving time.\n     * @return an array of time zone IDs.",
        "* Returns a Map from alias time zone IDs to their standard\n     * time zone IDs.\n     *\n     * @return an unmodified alias mapping",
        "* Gets the version of this tz data.\n     *\n     * @return the tzdb version",
        "* Gets a ZoneInfo with the given GMT offset. The object\n     * has its ID in the format of GMT{+|-}hh:mm.\n     *\n     * @param originalId  the given custom id (before normalized such as \"GMT+9\")\n     * @param gmtOffset   GMT offset <em>in milliseconds</em>\n     * @return a ZoneInfo constructed with the given GMT offset",
        "* Loads the rules from a DateInputStream\n     *\n     * @param dis  the DateInputStream to load, not null\n     * @throws Exception if an error occurs",
        "Get a ZoneInfo instance.\n     *\n     * @param standardTransitions  the standard transitions, not null\n     * @param standardOffsets  the standard offsets, not null\n     * @param savingsInstantTransitions  the standard transitions, not null\n     * @param wallOffsets  the wall offsets, not null\n     * @param lastRules  the recurring last rules, size 15 or less, not null"
    ],
    "functions": [
        "getZoneIds",
        "checkHaveData",
        "getZoneIds",
        "ZoneInfo",
        "getZoneInfo",
        "ZoneInfo",
        "getZoneInfo0",
        "getAliasMap",
        "getVersion",
        "ZoneInfo",
        "getCustomTimeZone",
        "toCustomID",
        "ZoneInfoFile",
        "addOldMapping",
        "useOldMapping",
        "load",
        "ZoneInfo",
        "getZoneInfo",
        "readOffset",
        "readEpochSec",
        "ZoneInfo",
        "getZoneInfo",
        "getStandardOffset",
        "getYear",
        "indexOf",
        "addTrans",
        "ZoneOffsetTransitionRule",
        "getTransitionEpochSecond",
        "isLeapYear",
        "lengthOfMonth",
        "toEpochDay",
        "previousOrSame",
        "nextOrSame",
        "adjust"
    ],
    "classes": [
        "ZoneInfoFile",
        "ZoneOffsetTransitionRule"
    ]
}