{
    "identifiers": [
        "typing",
        "re",
        "os",
        "subprocess",
        "file",
        "open",
        "f",
        "f",
        "readlines",
        "l",
        "lines",
        "re",
        "match",
        "l",
        "files",
        "add",
        "l",
        "strip",
        "files",
        "os",
        "popen",
        "readlines",
        "f",
        "strip",
        "f",
        "stdout",
        "files",
        "os",
        "popen",
        "readlines",
        "f",
        "strip",
        "f",
        "stdout",
        "files",
        "os",
        "popen",
        "readlines",
        "f",
        "strip",
        "f",
        "stdout",
        "files",
        "lc_files",
        "xpp_files",
        "git_hash",
        "os",
        "popen",
        "git_hash",
        "readlines",
        "f",
        "strip",
        "f",
        "stdout",
        "files",
        "scanned_files",
        "all_files",
        "f",
        "scanned_files",
        "f",
        "endswith",
        "scanned_header_files",
        "add",
        "f",
        "strip",
        "f",
        "endswith",
        "scanned_source_files",
        "add",
        "f",
        "strip",
        "scanned_header_files",
        "scanned_source_files",
        "x",
        "x",
        "all_files",
        "source_file_exists",
        "missing_source_files",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "add",
        "white_list",
        "get_changed_files_since",
        "last_checked_git_commit_hash",
        "get_files_from_copyright_format",
        "get_files_containing_copyright_or_license",
        "summary_files",
        "scanned_files",
        "summary_files",
        "scanned_files",
        "get_whitelist_not_found",
        "scanned_files",
        "summary_files",
        "get_whitelist_not_listed",
        "get_whitelist_not_found",
        "get_whitelist_not_listed",
        "all_whitelisted",
        "summary_files",
        "changed_files",
        "get_source_files_missing_license_of_header",
        "scanned_files",
        "get_all_files",
        "len",
        "found",
        "not_listed",
        "f",
        "sorted",
        "not_listed",
        "f",
        "not_found",
        "f",
        "sorted",
        "not_found",
        "f",
        "out_of_date",
        "f",
        "sorted",
        "out_of_date",
        "f",
        "missing_source_license",
        "f",
        "sorted",
        "missing_source_license",
        "f",
        "not_found",
        "not_listed",
        "exit",
        "out_of_date",
        "exit",
        "missing_source_license",
        "exit",
        "exit"
    ],
    "literals": [
        "'copyright.txt'",
        "'r'",
        "\"^Files: |^ {7}[a-zA-Z0-9/_\\-.*]* *$\"",
        "'rg --files'",
        "'rg -i -e \"copyright\" -e \"license\" -l | rg -v \"\\.po\"'",
        "'rg --files-without-match \"@author Xournal\\+\\+\"'",
        "f'git diff {git_hash} HEAD --name-only'",
        "\".h\"",
        "'.h'",
        "'.cpp'",
        "'.cpp'",
        "'.cpp'",
        "\"ABOUT-NLS\"",
        "\"copyright.txt\"",
        "\"scripts/compare_license.py\"",
        "\"CMakeLists.txt\"",
        "\"LICENSE\"",
        "\"rpm/fedora/xournalpp.spec\"",
        "\"windows-setup/xournalpp.nsi\"",
        "\"ui/about.glade\"",
        "\"src/win32/xpp.rc.in\"",
        "\"*\"",
        "\"debian/changelog\"",
        "\"debian/compat\"",
        "\"debian/control\"",
        "\"debian/docs\"",
        "\"debian/package_description\"",
        "\"debian/rules\"",
        "\"debian/source/format\"",
        "\"ui/pixmaps/application-x-xojpp.svg\"",
        "\"ui/pixmaps/application-x-xopp.svg\"",
        "\"ui/pixmaps/application-x-xopt.svg\"",
        "\"ui/pixmaps/com.github.xournalpp.xournalpp.png\"",
        "\"ui/pixmaps/com.github.xournalpp.xournalpp.svg\"",
        "\"ui/pixmaps/gnome-mime-application-x-xopp.svg\"",
        "\"ui/pixmaps/gnome-mime-application-x-xopt.svg\"",
        "\"ui/pixmaps/xopt.svg\"",
        "\"ui/iconsColor-dark/*\"",
        "\"ui/iconsColor-light/*\"",
        "\"b9239d17213a5f9644913203ffb38d69e435e749\"",
        "\"copyright.txt\"",
        "\"copyright.txt\"",
        "\"Found License/Copyright both in copyright.txt and repo: \"",
        "\"No License/Copyright listed in copyright.txt (but found in repo):\"",
        "\" \"",
        "\"- All automatically detected files listed or whitelisted\"",
        "\"No License/Copyright found in repo (but listed in copyright.txt):\"",
        "\" \"",
        "\"- All listed files automatically detected or whitelisted\"",
        "\"Following items are whitelisted or listed in copyright.txt but changed since last check:\"",
        "\" \"",
        "\"- No listed file got changed since the last check.\"",
        "\"Following `.cpp` files do NOT contain a license even though their accompanying `.h` file does.\"",
        "\" \"",
        "\"‚ö†Ô∏è Update required\"",
        "\"‚ö†Ô∏è Recheck required\"",
        "\"‚ö†Ô∏è Adding license header required\"",
        "\"üéâ Success\""
    ],
    "variables": [
        "lines",
        "files",
        "stdout",
        "files",
        "stdout",
        "files",
        "lc_files",
        "stdout",
        "files",
        "xpp_files",
        "stdout",
        "files",
        "scanned_header_files",
        "scanned_source_files",
        "missing_source_files",
        "source_file_exists",
        "white_list",
        "white_list",
        "last_checked_git_commit_hash",
        "changed_files",
        "summary_files",
        "scanned_files",
        "found",
        "not_found",
        "not_listed",
        "all_whitelisted",
        "out_of_date",
        "missing_source_license"
    ],
    "comments": [
        "I: Add an entry if a file is detected automatically as a file with special",
        "license/copyright, but which is actually licensed/copyrighted under the same",
        "license/copyright as xournalpp.",
        "Please add a short comment explaining why it's whitelisted",
        "false positive",
        "copyright/license summary file",
        "this very script",
        "false positive",
        "main license file",
        "false positive",
        "false positive",
        "false positive",
        "false positive",
        "II: Add an entry to the whitelist if you added a file which has special",
        "licensing/copyright but does not contain any of the substrings used to",
        "automatically identify such files",
        "The rational should be explained in the copyright.txt file itself.",
        "Do not use comments in this file to explain the rational.",
        "III: Update git commit hash to current commit once you checked",
        "that the changes do not affect the licensing information in copyright.txt",
        "Copyright could change with the same commit. Hence, it needs to be exluded.",
        "Files inside copyright.txt or mentioned in whitelist should be checked for",
        "diffs affecting the license/copyright"
    ],
    "docstrings": [
        "\"\"\"Script for copyright/license reports\n\nDependencies:\n - python3\n - ripgrep\n\nAssumptions:\n - copyright.txt file is in CWD\n - copyright.txt is in https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/ format\n - all relevant files are within CWD and not ignored by git (ripgrep default behaviour)\n\nFor xournalpp execute using:\n\n    python3 scripts/compare_license.py\n\n\nWorkflow:\n\n 1. Run the script\n 2. In case script exits with status 1 adapt copyright.txt or this script (see comments I, II, III in below code)\n 3. Rerun script now it should exit with status 0\n\nNote: This script cannot automatically detect whether you added a file that should be licensed differently\nbut does not indicate this in any way. Please refer to comment II in the code below and add it to the whitelist.\n\"\"\"",
        "\"\"\"Get all Files listed in a copyright file\n\n    Args:\n     - file: file formatted according to https://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n    \"\"\"",
        "\"\"\"Find all files containing either\n     - copyright\n     - license\n    (case insensitive)\n    Exluding .po files as they create only false positives\n    \"\"\"",
        "\"\"\"Return all `.cpp` files which do not have a license but their corrsponding `.h` file has.\n\n    Args:\n        scanned_files (Set[str]): Files which have a license header\n        all_files (Set[str]): all Files in the project (used for existence check)\n    \"\"\"",
        "\"\"\"Whitelist for files containing the searched for substrings but\n    are not necessary for the copyright.txt\"\"\"",
        "\"\"\"Whitelist for files listed in copyright.txt but do not include \n    the searched for substrings\"\"\""
    ],
    "functions": [
        "get_files_from_copyright_format",
        "get_all_files",
        "get_files_containing_copyright_or_license",
        "get_changed_files_since",
        "get_source_files_missing_license_of_header",
        "get_whitelist_not_listed",
        "get_whitelist_not_found"
    ],
    "classes": []
}