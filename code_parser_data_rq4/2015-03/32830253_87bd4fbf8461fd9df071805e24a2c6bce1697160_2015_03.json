{
    "identifiers": [
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "math",
        "sklearn",
        "ensemble",
        "sklearn",
        "cross_validation",
        "train_test_split",
        "sklearn",
        "metrics",
        "mean_absolute_error",
        "sklearn",
        "grid_search",
        "GridSearchCV",
        "datetime",
        "datetime",
        "pd",
        "read_csv",
        "parse_dates",
        "pd",
        "read_csv",
        "parse_dates",
        "pd",
        "DatetimeIndex",
        "train",
        "temp",
        "year",
        "temp",
        "month",
        "temp",
        "hour",
        "temp",
        "weekday",
        "pd",
        "DatetimeIndex",
        "test",
        "temp",
        "year",
        "temp",
        "month",
        "temp",
        "hour",
        "temp",
        "weekday",
        "col",
        "col",
        "train",
        "col",
        "apply",
        "x",
        "np",
        "log1p",
        "x",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "max_depth",
        "clf",
        "fit",
        "train",
        "features",
        "train",
        "clf",
        "predict",
        "test",
        "features",
        "np",
        "expm1",
        "result",
        "pd",
        "DataFrame",
        "test",
        "result",
        "df",
        "to_csv",
        "index",
        "columns",
        "pd",
        "DatetimeIndex",
        "train",
        "train",
        "temp",
        "day",
        "train",
        "temp",
        "day",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "GridSearchCV",
        "est",
        "param_grid",
        "n_jobs",
        "fit",
        "training",
        "features",
        "training",
        "gs_cv",
        "best_params_",
        "mean_absolute_error",
        "validation",
        "gs_cv",
        "predict",
        "validation",
        "features",
        "gs_cv",
        "predict",
        "test",
        "features",
        "np",
        "expm1",
        "result",
        "pd",
        "DataFrame",
        "test",
        "result",
        "df",
        "to_csv",
        "index",
        "columns",
        "k",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "k",
        "learning_rate",
        "max_depth",
        "min_samples_leaf",
        "clf",
        "fit",
        "training",
        "features",
        "training",
        "clf",
        "predict",
        "training",
        "features",
        "error_train",
        "append",
        "mean_absolute_error",
        "result",
        "training",
        "clf",
        "predict",
        "validation",
        "features",
        "error_validation",
        "append",
        "mean_absolute_error",
        "result",
        "validation",
        "plt",
        "style",
        "use",
        "plt",
        "plot",
        "x",
        "error_train",
        "plt",
        "plot",
        "x",
        "error_validation",
        "plt",
        "xlabel",
        "fontsize",
        "plt",
        "ylabel",
        "fontsize",
        "plt",
        "legend",
        "fontsize",
        "plt",
        "title",
        "fontsize",
        "model1",
        "model2",
        "test_data",
        "np",
        "expm1",
        "model1",
        "predict",
        "test_data",
        "np",
        "expm1",
        "model2",
        "predict",
        "test_data",
        "p1",
        "p2",
        "p_total",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "learning_rate",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "learning_rate",
        "GridSearchCV",
        "est_casual",
        "param_grid2",
        "n_jobs",
        "fit",
        "training",
        "features",
        "training",
        "GridSearchCV",
        "est_registered",
        "param_grid2",
        "n_jobs",
        "fit",
        "training",
        "features",
        "training",
        "mean_absolute_error",
        "validation",
        "gs_registered",
        "predict",
        "validation",
        "features",
        "mean_absolute_error",
        "validation",
        "gs_casual",
        "predict",
        "validation",
        "features",
        "error_count",
        "error_casual",
        "error_registered",
        "merge_predict",
        "gs_casual",
        "gs_registered",
        "test",
        "features",
        "pd",
        "DataFrame",
        "test",
        "result3",
        "df",
        "to_csv",
        "index",
        "columns",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "learning_rate",
        "max_depth",
        "min_samples_leaf",
        "ensemble",
        "GradientBoostingRegressor",
        "n_estimators",
        "learning_rate",
        "max_depth",
        "min_samples_leaf",
        "est_casual",
        "fit",
        "train",
        "features",
        "values",
        "train",
        "values",
        "est_registered",
        "fit",
        "train",
        "features",
        "values",
        "train",
        "values",
        "merge_predict",
        "est_casual",
        "est_registered",
        "test",
        "features",
        "pd",
        "DataFrame",
        "test",
        "result4",
        "df",
        "to_csv",
        "index",
        "columns"
    ],
    "literals": [
        "'__main__'",
        "'train.csv'",
        "'test.csv'",
        "'datetime'",
        "'year'",
        "'month'",
        "'hour'",
        "'weekday'",
        "'datetime'",
        "'year'",
        "'month'",
        "'hour'",
        "'weekday'",
        "'casual'",
        "'registered'",
        "'count'",
        "'log-'",
        "'season'",
        "'holiday'",
        "'workingday'",
        "'weather'",
        "'temp'",
        "'atemp'",
        "'humidity'",
        "'windspeed'",
        "'year'",
        "'month'",
        "'weekday'",
        "'hour'",
        "'log-count'",
        "'datetime'",
        "'datetime'",
        "'count'",
        "'results1.csv'",
        "'datetime'",
        "'count'",
        "'datetime'",
        "'learning_rate'",
        "'max_depth'",
        "'min_samples_leaf'",
        "'log-count'",
        "'log-count'",
        "'datetime'",
        "'datetime'",
        "'count'",
        "'results2.csv'",
        "'datetime'",
        "'count'",
        "'log-count'",
        "'log-count'",
        "'log-count'",
        "'ggplot'",
        "'k'",
        "'b'",
        "'Number of Estimators'",
        "'Error'",
        "'Train'",
        "'Validation'",
        "'Error vs. Number of Estimators'",
        "'max_depth'",
        "'min_samples_leaf'",
        "'log-casual'",
        "'log-registered'",
        "'log-registered'",
        "'log-casual'",
        "'datetime'",
        "'datetime'",
        "'count'",
        "'results3.csv'",
        "'datetime'",
        "'count'",
        "'log-casual'",
        "'log-registered'",
        "'datetime'",
        "'datetime'",
        "'count'",
        "'results4.csv'",
        "'datetime'",
        "'count'"
    ],
    "variables": [
        "train",
        "test",
        "temp",
        "train",
        "train",
        "train",
        "train",
        "temp",
        "test",
        "test",
        "test",
        "test",
        "train",
        "features",
        "clf",
        "result",
        "result",
        "df",
        "temp",
        "training",
        "validation",
        "param_grid",
        "est",
        "gs_cv",
        "error_count",
        "result",
        "result",
        "df",
        "error_train",
        "error_validation",
        "clf",
        "result",
        "result",
        "x",
        "p1",
        "p2",
        "p_total",
        "est_casual",
        "est_registered",
        "param_grid2",
        "gs_casual",
        "gs_registered",
        "error_registered",
        "error_casual",
        "result3",
        "df",
        "est_casual",
        "est_registered",
        "result4",
        "df"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Load Data with pandas, and parse the first column into datetime",
        "Feature engineering",
        "the evaluation metric is the RMSE in the log domain,",
        "so we should transform the target columns into log domain as well.",
        "Define features vector",
        "Some of the important parameters for the GBM are:",
        "number of trees (n_estimators)",
        "depth of each individual tree (max_depth)",
        "loss function (loss)",
        "learning rate (learning_rate)",
        "So far, not that great of a result and we are in the bottom 10%.",
        "The first step might be to try to tune the parameters.",
        "Hyperparameter tuning",
        "Split data into training and validation sets",
        "this may take awhile",
        "best hyperparameter setting",
        "{'learning_rate': 0.05, 'max_depth': 10, 'min_samples_leaf': 20}",
        "Our results are now in the top 20%!",
        "Lets take a look at the number of estimators now",
        "Plot the data",
        "Given that the count is the sum of registered and casual we might",
        "get better performance modeling them separately.",
        "Combine the predictions of two separately  trained models.",
        "The input models are in the log domain and returns the predictions",
        "in original domain.",
        "[0.20943850897991825, 0.40021857004963229, 0.1985197355367242]",
        "If we take a look, we get the same hyper parameters which shouldn't be a big",
        "suprise",
        "Looking at the different users seperatly moved me up a few of percent,",
        "Lastly, lets train our models on the whole dateset without leaving any out for",
        "looking at our error.",
        "With that I have a result in the top 10%"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Sun Mar  8 21:29:59 2015\n\n@author: damienrj\n\"\"\""
    ],
    "functions": [
        "merge_predict"
    ],
    "classes": []
}