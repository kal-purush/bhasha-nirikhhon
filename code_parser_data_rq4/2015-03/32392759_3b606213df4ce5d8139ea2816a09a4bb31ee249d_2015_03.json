{
    "identifiers": [
        "com",
        "laboon",
        "_state",
        "State",
        "DEAD",
        "_xLoc",
        "_yLoc",
        "_state",
        "_state",
        "State",
        "ALIVE",
        "numNeighbors",
        "toReturn",
        "_state",
        "State",
        "ALIVE",
        "numNeighbors",
        "numNeighbors",
        "toReturn",
        "State",
        "DEAD",
        "toReturn",
        "State",
        "ALIVE",
        "_state",
        "State",
        "DEAD",
        "numNeighbors",
        "toReturn",
        "State",
        "ALIVE",
        "toReturn",
        "State",
        "DEAD",
        "toReturn",
        "toReturn",
        "_state",
        "State",
        "DEAD",
        "toReturn",
        "_state",
        "State",
        "ALIVE",
        "toReturn",
        "toReturn",
        "toReturn",
        "initialState",
        "xLoc",
        "yLoc",
        "_state",
        "initialState",
        "_xLoc",
        "xLoc",
        "_yLoc",
        "yLoc"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Public getter for the cell\n\t * @return Current state of the cell",
        "* Returns whether or not the cell is alive. \n\t * @return True if cell alive, false if dead",
        "* Any live cell with fewer than two live neighbors dies, as if caused by under-population.\n\t * Any live cell with two or three live neighbors lives on to the next generation.\n     * Any live cell with more than three live neighbors dies, as if by overcrowding.\n     * Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n\t * @param int numNeighbors - the current number of neighbors \n\t * @return State - the new state of the cell (alive or dead)",
        "* Get the character to display for the current state.\n\t * Modifying this code will allow you to change the terminal display \n\t * of when a cell is alive or dead.\n\t * @return Character representation of the cell's state",
        "* Constructor for a new cell.\n\t * @param initialState - Initial state of a cell, dead or alive\n\t * @param xLoc - x location\n\t * @param yLoc - y location"
    ],
    "functions": [
        "State",
        "state",
        "isAlive",
        "State",
        "iterate",
        "getStateRep",
        "Cell"
    ],
    "classes": [
        "Cell"
    ]
}