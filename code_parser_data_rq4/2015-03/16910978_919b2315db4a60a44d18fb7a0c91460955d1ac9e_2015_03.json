{
    "identifiers": [
        "com",
        "mushroomrevival",
        "mrcommand",
        "org",
        "bukkit",
        "Bukkit",
        "org",
        "bukkit",
        "configuration",
        "file",
        "YamlConfiguration",
        "org",
        "bukkit",
        "configuration",
        "InvalidConfigurationException",
        "org",
        "bukkit",
        "plugin",
        "Plugin",
        "org",
        "bukkit",
        "plugin",
        "PluginDescriptionFile",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "OutputStreamWriter",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "net",
        "Proxy",
        "java",
        "net",
        "URL",
        "java",
        "net",
        "URLConnection",
        "java",
        "net",
        "URLEncoder",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "LinkedHashSet",
        "java",
        "util",
        "java",
        "util",
        "UUID",
        "java",
        "util",
        "logging",
        "Level",
        "REVISION",
        "BASE_URL",
        "REPORT_URL",
        "CONFIG_FILE",
        "CUSTOM_DATA_SEPARATOR",
        "PING_INTERVAL",
        "plugin",
        "graphs",
        "Collections",
        "synchronizedSet",
        "defaultGraph",
        "configuration",
        "configurationFile",
        "guid",
        "optOutLock",
        "taskId",
        "plugin",
        "plugin",
        "plugin",
        "plugin",
        "configurationFile",
        "CONFIG_FILE",
        "configuration",
        "YamlConfiguration",
        "loadConfiguration",
        "configurationFile",
        "configuration",
        "addDefault",
        "configuration",
        "addDefault",
        "UUID",
        "randomUUID",
        "toString",
        "configuration",
        "get",
        "configuration",
        "options",
        "header",
        "copyDefaults",
        "configuration",
        "save",
        "configurationFile",
        "guid",
        "configuration",
        "getString",
        "name",
        "name",
        "graph",
        "name",
        "graphs",
        "add",
        "graph",
        "graph",
        "plotter",
        "plotter",
        "defaultGraph",
        "addPlotter",
        "plotter",
        "graphs",
        "add",
        "defaultGraph",
        "SuppressWarnings",
        "optOutLock",
        "isOptOut",
        "taskId",
        "taskId",
        "plugin",
        "getServer",
        "getScheduler",
        "scheduleAsyncRepeatingTask",
        "plugin",
        "firstPost",
        "optOutLock",
        "isOptOut",
        "taskId",
        "plugin",
        "getServer",
        "getScheduler",
        "cancelTask",
        "taskId",
        "taskId",
        "postPlugin",
        "firstPost",
        "firstPost",
        "e",
        "Bukkit",
        "getLogger",
        "log",
        "Level",
        "INFO",
        "e",
        "getMessage",
        "PING_INTERVAL",
        "optOutLock",
        "configuration",
        "load",
        "CONFIG_FILE",
        "ex",
        "Bukkit",
        "getLogger",
        "log",
        "Level",
        "INFO",
        "ex",
        "getMessage",
        "ex",
        "Bukkit",
        "getLogger",
        "log",
        "Level",
        "INFO",
        "ex",
        "getMessage",
        "configuration",
        "getBoolean",
        "optOutLock",
        "isOptOut",
        "configuration",
        "configuration",
        "save",
        "configurationFile",
        "taskId",
        "start",
        "optOutLock",
        "isOptOut",
        "configuration",
        "configuration",
        "save",
        "configurationFile",
        "taskId",
        "plugin",
        "getServer",
        "getScheduler",
        "cancelTask",
        "taskId",
        "taskId",
        "isPing",
        "description",
        "plugin",
        "getDescription",
        "data",
        "data",
        "append",
        "encode",
        "append",
        "append",
        "encode",
        "guid",
        "encodeDataPair",
        "data",
        "description",
        "getVersion",
        "encodeDataPair",
        "data",
        "Bukkit",
        "getVersion",
        "encodeDataPair",
        "data",
        "toString",
        "Bukkit",
        "getServer",
        "getOnlinePlayers",
        "length",
        "encodeDataPair",
        "data",
        "valueOf",
        "REVISION",
        "isPing",
        "encodeDataPair",
        "data",
        "graphs",
        "iter",
        "graphs",
        "iterator",
        "iter",
        "hasNext",
        "graph",
        "iter",
        "next",
        "plotter",
        "graph",
        "getPlotters",
        "key",
        "format",
        "CUSTOM_DATA_SEPARATOR",
        "graph",
        "getName",
        "CUSTOM_DATA_SEPARATOR",
        "plotter",
        "getColumnName",
        "value",
        "toString",
        "plotter",
        "getValue",
        "encodeDataPair",
        "data",
        "key",
        "value",
        "url",
        "BASE_URL",
        "format",
        "REPORT_URL",
        "encode",
        "plugin",
        "getDescription",
        "getName",
        "connection",
        "isMineshafterPresent",
        "connection",
        "url",
        "openConnection",
        "Proxy",
        "NO_PROXY",
        "connection",
        "url",
        "openConnection",
        "connection",
        "setDoOutput",
        "writer",
        "connection",
        "getOutputStream",
        "writer",
        "write",
        "data",
        "toString",
        "writer",
        "flush",
        "reader",
        "connection",
        "getInputStream",
        "response",
        "reader",
        "readLine",
        "writer",
        "close",
        "reader",
        "close",
        "response",
        "response",
        "startsWith",
        "response",
        "response",
        "contains",
        "graphs",
        "iter",
        "graphs",
        "iterator",
        "iter",
        "hasNext",
        "graph",
        "iter",
        "next",
        "plotter",
        "graph",
        "getPlotters",
        "plotter",
        "reset",
        "Class",
        "forName",
        "e",
        "buffer",
        "key",
        "value",
        "buffer",
        "append",
        "append",
        "encode",
        "key",
        "append",
        "append",
        "encode",
        "value",
        "text",
        "URLEncoder",
        "encode",
        "text",
        "name",
        "plotters",
        "name",
        "name",
        "name",
        "name",
        "plotter",
        "plotters",
        "add",
        "plotter",
        "plotter",
        "plotters",
        "remove",
        "plotter",
        "Collections",
        "unmodifiableSet",
        "plotters",
        "Override",
        "name",
        "hashCode",
        "Override",
        "graph",
        "graph",
        "name",
        "equals",
        "name",
        "name",
        "name",
        "name",
        "name",
        "name",
        "Override",
        "getColumnName",
        "hashCode",
        "getValue",
        "Override",
        "plotter",
        "plotter",
        "name",
        "equals",
        "name",
        "plotter",
        "getValue",
        "getValue"
    ],
    "literals": [
        "\"http://mcstats.org\"",
        "\"/report/%s\"",
        "\"plugins/PluginMetrics/config.yml\"",
        "\"~~\"",
        "\"Default\"",
        "\"Plugin cannot be null\"",
        "\"opt-out\"",
        "\"guid\"",
        "\"guid\"",
        "\"http://mcstats.org\"",
        "\"guid\"",
        "\"Graph name cannot be null\"",
        "\"Plotter cannot be null\"",
        "\"deprecation\"",
        "\"[Metrics] \"",
        "\"[Metrics] \"",
        "\"[Metrics] \"",
        "\"opt-out\"",
        "\"opt-out\"",
        "\"opt-out\"",
        "\"guid\"",
        "\"version\"",
        "\"server\"",
        "\"players\"",
        "\"revision\"",
        "\"ping\"",
        "\"true\"",
        "\"C%s%s%s%s\"",
        "\"ERR\"",
        "\"OK This is your first update this hour\"",
        "\"mineshafter.MineServer\"",
        "\"UTF-8\"",
        "\"Default\""
    ],
    "variables": [
        "plugin",
        "configuration",
        "configurationFile",
        "guid",
        "connection",
        "name",
        "name"
    ],
    "comments": [
        "load the config",
        "add some defaults",
        "Do we need to create the file?",
        "Load the guid then",
        "Construct the graph object",
        "Now we can add our graph",
        "and return back",
        "Add the plotter to the graph o/",
        "Ensure the default graph is included in the submitted graphs",
        "Did we opt out?",
        "Is metrics already running?",
        "Begin hitting the server with glorious data",
        "This has to be synchronised or it can collide",
        "with the disable method.",
        "Disable Task, if it is running and the",
        "server owner decided to opt-out",
        "We use the inverse of firstPost because if it",
        "is the first time we are posting,",
        "it is not a interval ping, so it evaluates to",
        "FALSE",
        "Each time thereafter it will evaluate to",
        "TRUE, i.e PING!",
        "After the first post we set firstPost to",
        "false",
        "Each post thereafter will be a ping",
        "Reload the metrics file",
        "This has to be synchronised or it can collide with the check in the",
        "task.",
        "Check if the server owner has already set opt-out, if not, set",
        "it.",
        "Enable Task, if it is not running",
        "This has to be synchronised or it can collide with the check in the",
        "task.",
        "Check if the server owner has already set opt-out, if not, set",
        "it.",
        "Disable Task, if it is running",
        "The plugin's description file contain all of the plugin data such as",
        "name, version, author, etc",
        "Construct the post data",
        "If we're pinging, append it",
        "Acquire a lock on the graphs, which lets us make the assumption we",
        "also lock everything",
        "inside of the graph (e.g plotters)",
        "The key name to send to the metrics server",
        "The format is C-GRAPHNAME-PLOTTERNAME where separator -",
        "is defined at the top",
        "Legacy (R4) submitters use the format Custom%s, or",
        "CustomPLOTTERNAME",
        "The value to send, which for the foreseeable future is",
        "just the string",
        "value of plotter.getValue()",
        "Add it to the http post data :)",
        "Create the URL",
        "Connect to the website",
        "Mineshafter creates a socks proxy, so we can safely bypass it",
        "It does not reroute POST requests so we need to go around it",
        "Write the data",
        "Now read the response",
        "close resources",
        "Throw the exception",
        "Is this the first update this hour?"
    ],
    "docstrings": [
        "* The current revision number",
        "* The base URL of the metrics domain",
        "* The URL used to report a server's status",
        "* The file where guid and opt out is stored in",
        "* The separator to use for custom data. This MUST NOT change unless you are\n\t * hosting your own version of metrics and want to change it.",
        "* Interval of time to ping (in minutes)",
        "* The plugin this metrics submits for",
        "* All of the custom graphs to submit to metrics",
        "* The default graph, used for addCustomData when you don't want a specific\n\t * graph",
        "* The plugin configuration file",
        "* The plugin configuration file",
        "* Unique server id",
        "* Lock for synchronisation",
        "* Id of the scheduled task",
        "* Construct and create a Graph that can be used to separate specific\n\t * plotters to their own graphs on the metrics website. Plotters can be\n\t * added to the graph object returned.\n\t * \n\t * @param name\n\t * @return Graph object created. Will never return NULL under normal\n\t *         circumstances unless bad parameters are given",
        "* Adds a custom data plotter to the default graph\n\t * \n\t * @param plotter",
        "* Start measuring statistics. This will immediately create an async\n\t * repeating task as the plugin and send the initial data to the metrics\n\t * backend, and then after that it will post in increments of PING_INTERVAL\n\t * * 1200 ticks.\n\t * \n\t * @return True if statistics measuring is running, otherwise false.",
        "* Has the server owner denied plugin metrics?\n\t * \n\t * @return",
        "* Enables metrics for the server by setting \"opt-out\" to false in the\n\t * config file and starting the metrics task.\n\t * \n\t * @throws IOException",
        "* Disables metrics for the server by setting \"opt-out\" to true in the\n\t * config file and cancelling the metrics task.\n\t * \n\t * @throws IOException",
        "* Generic method that posts a plugin to the metrics website",
        "* Check if mineshafter is present. If it is, we need to bypass it to send\n\t * POST requests\n\t * \n\t * @return",
        "* <p>\n\t * Encode a key/value data pair to be used in a HTTP post request. This\n\t * INCLUDES a & so the first key/value pair MUST be included manually, e.g:\n\t * </p>\n\t * <code>\n\t * StringBuffer data = new StringBuffer();\n\t * data.append(encode(\"guid\")).append('=').append(encode(guid));\n\t * encodeDataPair(data, \"version\", description.getVersion());\n\t * </code>\n\t * \n\t * @param buffer\n\t * @param key\n\t * @param value\n\t * @return",
        "* Encode text as UTF-8\n\t * \n\t * @param text\n\t * @return",
        "* Represents a custom graph on the website",
        "* The graph's name, alphanumeric and spaces only :) If it does not\n\t\t * comply to the above when submitted, it is rejected",
        "* The set of plotters that are contained within this graph",
        "* Gets the graph's name\n\t\t * \n\t\t * @return",
        "* Add a plotter to the graph, which will be used to plot entries\n\t\t * \n\t\t * @param plotter",
        "* Remove a plotter from the graph\n\t\t * \n\t\t * @param plotter",
        "* Gets an <b>unmodifiable</b> set of the plotter objects in the graph\n\t\t * \n\t\t * @return",
        "* Interface used to collect custom data for a plugin",
        "* The plot's name",
        "* Construct a plotter with the default plot name",
        "* Construct a plotter with a specific plot name\n\t\t * \n\t\t * @param name",
        "* Get the current value for the plotted point\n\t\t * \n\t\t * @return",
        "* Get the column name for the plotted point\n\t\t * \n\t\t * @return the plotted point's column name",
        "* Called after the website graphs have been updated"
    ],
    "functions": [
        "Metrics",
        "Graph",
        "createGraph",
        "addCustomData",
        "start",
        "run",
        "isOptOut",
        "enable",
        "disable",
        "postPlugin",
        "isMineshafterPresent",
        "encodeDataPair",
        "encode",
        "Graph",
        "getName",
        "addPlotter",
        "removePlotter",
        "getPlotters",
        "hashCode",
        "equals",
        "Plotter",
        "Plotter",
        "getValue",
        "getColumnName",
        "reset",
        "hashCode",
        "equals"
    ],
    "classes": [
        "Metrics",
        "Graph",
        "Plotter"
    ]
}