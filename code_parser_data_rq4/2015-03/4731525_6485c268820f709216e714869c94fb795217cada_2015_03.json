{
    "identifiers": [
        "urllib",
        "urllib2",
        "re",
        "sys",
        "httplib",
        "cookielib",
        "os",
        "cookielib",
        "StringIO",
        "os",
        "time",
        "base64",
        "logging",
        "datetime",
        "datetime",
        "utils",
        "json",
        "ImportError",
        "simplejson",
        "json",
        "BASE_URL",
        "split",
        "base_url_name",
        "url",
        "base_txt",
        "url",
        "grabUrlSource",
        "url",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match",
        "numPage",
        "match",
        "numPage",
        "isdigit",
        "intNumPage",
        "append",
        "numPage",
        "max",
        "intNumPage",
        "url",
        "len",
        "match",
        "ii",
        "numPage",
        "url",
        "ii",
        "Episode_Listing",
        "episodeListPage",
        "epList",
        "Episode_Listing",
        "episodeListPage",
        "epList",
        "Episode_Listing",
        "episodeListPage",
        "epList",
        "url",
        "grabUrlSource",
        "url",
        "link",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match1",
        "re",
        "compile",
        "findall",
        "match1",
        "len",
        "match",
        "episodePageLink",
        "episodePageName",
        "match",
        "episodePageName",
        "replace",
        "epNum",
        "episodePageName",
        "strip",
        "split",
        "epNumTest",
        "reversed",
        "epNumPart",
        "epNumTest",
        "isdigit",
        "epNumTest",
        "epNum",
        "episodePageName",
        "strip",
        "split",
        "epNumTest",
        "reversed",
        "epNumPart",
        "epNumTest",
        "isdigit",
        "epNumTest",
        "epNum",
        "episodePageLink",
        "strip",
        "split",
        "epNumTest",
        "reversed",
        "epNumPart",
        "epNumTest",
        "isdigit",
        "epNumTest",
        "episodePageLink",
        "re",
        "compile",
        "findall",
        "episodePageLink",
        "episodePageName",
        "title",
        "re",
        "compile",
        "findall",
        "episodePageName",
        "title",
        "season",
        "episodePageName",
        "title",
        "replace",
        "replace",
        "replace",
        "replace",
        "strip",
        "epList",
        "append",
        "episodePageLink",
        "episodePageName",
        "epNum",
        "season",
        "base_txt",
        "url",
        "epList",
        "url",
        "base_txt",
        "url",
        "grabUrlSource",
        "url",
        "url",
        "Episode_Media_Link",
        "episodeMediaMirrors",
        "epMedia",
        "url",
        "mirror",
        "grabUrlSource",
        "url",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match",
        "garbage",
        "garbage1",
        "episodeMediaLink",
        "match",
        "episodeMediaLink",
        "base_url_name",
        "episodeMediaLink",
        "Media_Link_Finder",
        "episodeMediaLink",
        "epMedia",
        "append",
        "base_url_name",
        "episodeMediaLink",
        "mirror",
        "part",
        "len",
        "epMedia",
        "base_txt",
        "url",
        "epMedia",
        "url",
        "grabUrlSource",
        "url",
        "re",
        "compile",
        "findall",
        "link",
        "re",
        "compile",
        "findall",
        "seriesBlock",
        "videoImg",
        "videoName",
        "match",
        "urllib",
        "unquote",
        "videoName",
        "mostPop",
        "append",
        "BASE_URL",
        "videoImg",
        "videoName",
        "mostPop",
        "url",
        "grabUrlSource",
        "url",
        "link",
        "replace",
        "re",
        "compile",
        "findall",
        "link",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match",
        "match",
        "len",
        "match1",
        "match1",
        "len",
        "epMediaFound",
        "url",
        "base_txt",
        "url",
        "epMediaFound",
        "searchText",
        "link",
        "re",
        "compile",
        "searchText",
        "findall",
        "link",
        "searchText",
        "len",
        "match",
        "linkFound",
        "match",
        "re",
        "compile",
        "findall",
        "linkFound",
        "videoInfo",
        "videoLink",
        "split",
        "videoNameSplit",
        "replace",
        "replace",
        "title",
        "strip",
        "urllib",
        "unquote",
        "videoName",
        "videoLink",
        "videoLink",
        "searchRes",
        "append",
        "videoLink",
        "videoName",
        "searchRes",
        "link",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match1",
        "re",
        "compile",
        "findall",
        "link",
        "len",
        "match1",
        "re",
        "compile",
        "findall",
        "match1",
        "len",
        "match",
        "linkFound",
        "videoName",
        "match",
        "re",
        "compile",
        "findall",
        "linkFound",
        "len",
        "videoInfo",
        "videoInfo",
        "videoLink",
        "split",
        "videoName",
        "replace",
        "replace",
        "title",
        "strip",
        "videoLink",
        "videoLink",
        "searchRes",
        "append",
        "videoLink",
        "videoName",
        "videoNameSplit",
        "replace",
        "replace",
        "title",
        "strip",
        "searchRes",
        "append",
        "videoLink",
        "videoName",
        "base_txt",
        "searchRes"
    ],
    "literals": [
        "'http://www.animetoon.tv'",
        "'www.'",
        "': '",
        "'http://www.animetoon.tv/cartoon'",
        "'/page/(.+?)\"'",
        "'/page/'",
        "'  '",
        "' '",
        "'  '",
        "' '",
        "'  '",
        "' '",
        "'  '",
        "' '",
        "'  '",
        "' '",
        "'> <'",
        "'><'",
        "'<div id=\"videos\">(.+?)<ul class=\"pagination\">'",
        "'<li><a href=\"(.+?)\">(.+?)<'",
        "'1'",
        "'# '",
        "'#'",
        "'#'",
        "'-'",
        "'season'",
        "'season-(.+?)-'",
        "'Season'",
        "'Season (.+?) '",
        "' Episode'",
        "''",
        "' - '",
        "' '",
        "':'",
        "' '",
        "'-'",
        "' '",
        "''",
        "'Nothing was parsed from Episode_Listing: '",
        "'<(iframe|embed)(.+?)src=\"(.+?)\"'",
        "'http://ads.'",
        "'Nothing was parsed from Episode_Media_Link: '",
        "''",
        "'</div><hr class=\"separator\" />(.+?)<div class=\"s_right_col\">'",
        "'<a href=\"(.+?)\">(.+?)<'",
        "''",
        "' '",
        "''",
        "'(iframe|embed)src=\"(.+?)\"'",
        "'(iframe|embed)src=\\'(.+?)\\''",
        "'Nothing was parsed from Media_Link_Finder: '",
        "'<a(.+?)>'",
        "'href=\"(.+?)\"'",
        "'/'",
        "'-'",
        "' '",
        "'_'",
        "' '",
        "'http://ads.'",
        "'episode'",
        "'<hr class=\"separator\" />(.+?)<hr class=\"separator\" />'",
        "'<form action=(.+?)<div id=\"user_status\">'",
        "'<a(.+?)>(.+?)</a>'",
        "'href=\"(.+?)\"'",
        "'/'",
        "'-'",
        "' '",
        "'_'",
        "' '",
        "'http://ads.'",
        "'episode'",
        "'-'",
        "' '",
        "'_'",
        "' '",
        "'Nothing was parsed from Total_Video_List'"
    ],
    "variables": [
        "BASE_URL",
        "base_url_name",
        "base_txt",
        "aniUrls",
        "link",
        "match",
        "intNumPage",
        "numPage",
        "epList",
        "episodeListPage",
        "episodeListPage",
        "epList",
        "epList",
        "link",
        "link",
        "match1",
        "match",
        "match",
        "epList",
        "season",
        "epNum",
        "epNumPart",
        "epNum",
        "epNumPart",
        "epNum",
        "epNumPart",
        "epNum",
        "season",
        "season",
        "season",
        "episodePageName",
        "link",
        "episodeMediaMirrors",
        "epMedia",
        "link",
        "match",
        "epMedia",
        "part",
        "episodeMediaLink",
        "link",
        "mostPop",
        "videoImg",
        "seriesBlock",
        "match",
        "videoName",
        "link",
        "link",
        "match",
        "match1",
        "epMediaFound",
        "epMediaFound",
        "epMediaFound",
        "epMediaFound",
        "searchRes",
        "match",
        "videoName",
        "videoInfo",
        "videoLink",
        "videoNameSplit",
        "videoName",
        "videoName",
        "searchRes",
        "match",
        "match1",
        "match1",
        "match",
        "videoInfo",
        "videoLink",
        "videoNameSplit",
        "videoName",
        "videoName"
    ],
    "comments": [
        "import xbmcplugin,xbmcgui,xbmcaddon,urlresolver",
        "testing in shell",
        "TEST 1",
        "python -c \"execfile('animetoon.py'); Episode_Listing_Pages('http://www.anime44.com/category/fairy-tail')\"",
        "TEST2",
        "python -c \"execfile('animetoon.py'); Episode_Media_Link('http://www.anime44.com/fairy-tail-90-fairy-tail-90')\"",
        "animestream",
        "modded from --> <addon id=\"plugin.video.animecrazy\" name=\"Anime Crazy\" version=\"1.0.9\" provider-name=\"AJ\">",
        "Identifies the number of pages attached to the original content page",
        "Extracts the URL and Page name of the various content pages",
        "Identifies the number of mirrors for the content",
        "Extracts the URL for the content media file",
        "Extracts the URL for the content media file",
        "Generate list of shows/movies based on the provide keyword(s)",
        "url = 'http://www.myanimelinks.com/full-anime-list/'",
        "else:",
        "print base_txt +  'Nothing was parsed from Video_List_Searched'",
        "Generate list of shows/movies",
        "searchRes.sort(key=lambda name: name[1])",
        "searchRes = U2A_List(searchRes)",
        "searchRes = f2(searchRes)"
    ],
    "docstrings": [],
    "functions": [
        "Episode_Listing_Pages",
        "Episode_Listing",
        "Episode_Page",
        "Episode_Media_Link",
        "Video_List_And_Pagination",
        "Media_Link_Finder",
        "Video_List_Searched",
        "Total_Video_List"
    ],
    "classes": []
}