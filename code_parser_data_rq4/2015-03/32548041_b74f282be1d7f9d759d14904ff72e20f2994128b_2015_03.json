{
    "identifiers": [
        "socket",
        "re",
        "sys",
        "os",
        "time",
        "fcntl",
        "select",
        "errno",
        "signal",
        "getpass",
        "getopt",
        "types",
        "urllib",
        "quote_plus",
        "socks",
        "ImportError",
        "ssl",
        "sslmodule",
        "hostname",
        "s",
        "ssl_cert_path",
        "sslmodule",
        "wrap_socket",
        "s",
        "cert_reqs",
        "sslmodule",
        "CERT_REQUIRED",
        "ca_certs",
        "ssl_cert_path",
        "ssl_sock",
        "do_handshake",
        "verify_certificate_host",
        "ssl_sock",
        "getpeercert",
        "ssl_sock",
        "getpeername",
        "hostname",
        "sslmodule",
        "wrap_socket",
        "s",
        "ssl_sock",
        "do_handshake",
        "sslmodule",
        "SSLError",
        "e",
        "e",
        "MyException",
        "e",
        "ssl_sock",
        "ImportError",
        "hostname",
        "s",
        "socket",
        "ssl",
        "s",
        "SystemExit",
        "fd",
        "fcntl",
        "fcntl",
        "fd",
        "fcntl",
        "F_GETFL",
        "flags",
        "os",
        "O_NONBLOCK",
        "fcntl",
        "fcntl",
        "fd",
        "fcntl",
        "F_SETFL",
        "flags",
        "fn",
        "args",
        "kwargs",
        "os",
        "seteuid",
        "fn",
        "args",
        "kwargs",
        "os",
        "seteuid",
        "os",
        "getuid",
        "sts",
        "os",
        "WIFSIGNALED",
        "sts",
        "os",
        "WTERMSIG",
        "sts",
        "os",
        "WIFEXITED",
        "sts",
        "os",
        "WEXITSTATUS",
        "sts",
        "os",
        "error",
        "args",
        "stdin",
        "stdin",
        "os",
        "pipe",
        "os",
        "fork",
        "pid",
        "pipe_r",
        "os",
        "dup2",
        "pipe_r",
        "os",
        "close",
        "pipe_r",
        "os",
        "close",
        "pipe_w",
        "os",
        "seteuid",
        "os",
        "setuid",
        "os",
        "execv",
        "args",
        "args",
        "os",
        "_exit",
        "pipe_r",
        "os",
        "close",
        "pipe_r",
        "os",
        "write",
        "pipe_w",
        "stdin",
        "os",
        "close",
        "pipe_w",
        "os",
        "waitpid",
        "pid",
        "sts_result",
        "sts",
        "code",
        "MyException",
        "args",
        "code",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "Platform",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "exists",
        "MyException",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "route_path",
        "action",
        "net",
        "bits",
        "ifname",
        "args",
        "ifname",
        "args",
        "gateway_ip",
        "run_as_root",
        "args",
        "SystemConfiguration",
        "SystemConfiguration",
        "ImportError",
        "objc",
        "types",
        "ModuleType",
        "objc",
        "loadBundle",
        "SystemConfiguration",
        "SystemConfiguration",
        "__dict__",
        "bundle_identifier",
        "objc",
        "loadBundleFunctions",
        "SCbndl",
        "SystemConfiguration",
        "__dict__",
        "SystemConfiguration",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "load_SystemConfigurationFramework",
        "SystemConfiguration",
        "SCDynamicStoreCreate",
        "config",
        "join",
        "dns_servers",
        "override_gateway",
        "config",
        "join",
        "dns_domains",
        "config",
        "join",
        "dns_domains",
        "config",
        "service_id",
        "run_as_root",
        "stdin",
        "config",
        "SystemConfiguration",
        "SCDynamicStoreCreate",
        "SystemConfiguration",
        "NSMutableDictionary",
        "dns_servers",
        "override_gateway",
        "dns_domains",
        "dns_domains",
        "revdns_domains",
        "SystemConfiguration",
        "SCDynamicStoreSetValue",
        "sc",
        "service_id",
        "d",
        "as_root",
        "setup_helper",
        "Platform",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "bits",
        "net",
        "net",
        "bits2mask",
        "bits",
        "run_as_root",
        "action",
        "host_or_net",
        "gateway_ip",
        "Platform",
        "ifname",
        "gateway_ip",
        "net",
        "bits",
        "action",
        "action",
        "net",
        "bits",
        "ifname",
        "args",
        "ifname",
        "args",
        "gateway_ip",
        "run_as_root",
        "args",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "override_gateway",
        "open",
        "readlines",
        "line",
        "old_resolv_conf",
        "line",
        "rstrip",
        "line",
        "startswith",
        "line",
        "startswith",
        "line",
        "split",
        "line",
        "startswith",
        "nses",
        "append",
        "line",
        "split",
        "other_lines",
        "append",
        "line",
        "new_resolv_conf",
        "append",
        "join",
        "dns_domains",
        "search",
        "ns",
        "dns_servers",
        "nses",
        "new_resolv_conf",
        "append",
        "ns",
        "new_resolv_conf",
        "extend",
        "other_lines",
        "new_resolv_conf",
        "append",
        "os",
        "rename",
        "open",
        "write",
        "join",
        "new_resolv_conf",
        "as_root",
        "_create_file",
        "os",
        "stat",
        "st_mtime",
        "as_root",
        "_teardown_dns",
        "resolv_conf_timestamp",
        "os",
        "stat",
        "st_mtime",
        "resolv_conf_timestamp",
        "os",
        "rename",
        "sys",
        "stderr",
        "write",
        "os",
        "unlink",
        "iface_name",
        "service_id",
        "dns_servers",
        "dns_domains",
        "revdns_domains",
        "override_gateway",
        "iface_name",
        "join",
        "dns_servers",
        "join",
        "dns_domains",
        "run_as_root",
        "iface_name",
        "stdin",
        "cmd",
        "as_root",
        "_teardown_dns",
        "run_as_root",
        "iface_name",
        "ManualFrobbingDNSMixin",
        "Linux2Platform",
        "ResolvConfHelperDNSMixin",
        "Linux2Platform",
        "ManualFrobbingDNSMixin",
        "FreeBSD6Base",
        "sys",
        "platform",
        "DarwinPlatform",
        "sys",
        "platform",
        "os",
        "path",
        "exists",
        "Linux2ResolvconfPlatform",
        "Linux2ManualPlatform",
        "sys",
        "platform",
        "FreeBSD6Platform",
        "sys",
        "platform",
        "FreeBSD6Platform",
        "sys",
        "platform",
        "FreeBSD6Platform",
        "MyException",
        "sys",
        "platform",
        "get_platform",
        "cert",
        "cert",
        "has_key",
        "rdn",
        "cert",
        "rdn",
        "lower",
        "ret",
        "append",
        "rdn",
        "rdn",
        "lower",
        "ret",
        "append",
        "rdn",
        "ret",
        "cert",
        "cert",
        "has_key",
        "rdn",
        "cert",
        "rdn",
        "lower",
        "ret",
        "append",
        "rdn",
        "ret",
        "cert",
        "ip",
        "host",
        "match",
        "match",
        "startswith",
        "host",
        "split",
        "len",
        "hostparts",
        "hostparts",
        "match",
        "host",
        "match",
        "get_commonName",
        "cert",
        "get_subjectAltName",
        "cert",
        "validate_entry",
        "cn",
        "validate_entry",
        "san",
        "MyException",
        "host",
        "cn",
        "san",
        "objc",
        "tempfile",
        "OSX_cert_tempfile",
        "types",
        "ModuleType",
        "objc",
        "loadBundle",
        "Security",
        "Security",
        "__dict__",
        "bundle_identifier",
        "objc",
        "parseBridgeSupport",
        "Security",
        "__dict__",
        "Security",
        "Security",
        "SecTrustCopyAnchorCertificates",
        "res",
        "cert",
        "certs",
        "Security",
        "SecKeychainItemExport",
        "cert",
        "Security",
        "kSecFormatX509Cert",
        "Security",
        "kSecItemPemArmour",
        "res",
        "tempfile",
        "NamedTemporaryFile",
        "OSX_cert_tempfile",
        "write",
        "buffer",
        "data",
        "OSX_cert_tempfile",
        "flush",
        "OSX_cert_tempfile",
        "name",
        "ssl_cert_path",
        "sslmodule",
        "sys",
        "stderr",
        "write",
        "p",
        "CERTIFICATE_FILE_LOCATIONS",
        "os",
        "path",
        "exists",
        "p",
        "p",
        "ssl_cert_path",
        "sys",
        "platform",
        "OSX_get_a_certificate",
        "ssl_cert_path",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "s",
        "s",
        "recv",
        "data",
        "data",
        "data",
        "output",
        "data",
        "output",
        "ip",
        "port",
        "proxy_addr",
        "proxy_addr",
        "socket",
        "socket",
        "s",
        "connect",
        "proxy_addr",
        "s",
        "send",
        "ip",
        "port",
        "readline_from_sock",
        "s",
        "split",
        "len",
        "statusline",
        "statusline",
        "MyException",
        "join",
        "statusline",
        "readline_from_sock",
        "s",
        "line",
        "proxy_addr",
        "proxy_addr",
        "socks",
        "socksocket",
        "s",
        "setproxy",
        "socks",
        "PROXY_TYPE_SOCKS5",
        "proxy_addr",
        "proxy_addr",
        "s",
        "connect",
        "ip",
        "port",
        "socket",
        "socket",
        "s",
        "connect",
        "ip",
        "port",
        "s",
        "host",
        "default_port",
        "host",
        "split",
        "len",
        "ipport",
        "ipport",
        "ipport",
        "ipport",
        "ip",
        "port",
        "host",
        "request",
        "parse_hostport",
        "host",
        "proxy_connect",
        "ip",
        "port",
        "sslwrap",
        "ip",
        "s",
        "ssl",
        "write",
        "request",
        "ssl",
        "read",
        "newdata",
        "data",
        "newdata",
        "socket",
        "error",
        "socket",
        "sslerror",
        "data",
        "host",
        "host",
        "host",
        "send_request",
        "host",
        "request",
        "re",
        "search",
        "result",
        "match",
        "match",
        "group",
        "re",
        "search",
        "result",
        "match",
        "match",
        "group",
        "client_data",
        "host",
        "username",
        "password",
        "user",
        "quote_plus",
        "username",
        "password",
        "quote_plus",
        "password",
        "client_data",
        "client_data",
        "host",
        "host",
        "len",
        "len",
        "body",
        "body",
        "body",
        "send_request",
        "host",
        "request",
        "re",
        "compile",
        "re",
        "MULTILINE",
        "match",
        "pat",
        "finditer",
        "result",
        "match",
        "group",
        "sessid",
        "sessid",
        "session",
        "re",
        "compile",
        "re",
        "MULTILINE",
        "match",
        "pat",
        "finditer",
        "result",
        "sys",
        "stderr",
        "write",
        "match",
        "re",
        "search",
        "result",
        "match",
        "sys",
        "stderr",
        "write",
        "match",
        "group",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "result",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "session",
        "host",
        "session",
        "host",
        "host",
        "session",
        "session",
        "send_request",
        "host",
        "request",
        "re",
        "search",
        "result",
        "match",
        "match",
        "group",
        "send_request",
        "host",
        "request",
        "match",
        "group",
        "re",
        "search",
        "result",
        "sys",
        "stderr",
        "write",
        "host",
        "session",
        "menu_number",
        "menu_number",
        "menu_number",
        "session",
        "session",
        "host",
        "host",
        "send_request",
        "host",
        "request",
        "re",
        "finditer",
        "result",
        "matches",
        "re",
        "finditer",
        "result",
        "matches",
        "re",
        "search",
        "result",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "result",
        "matches",
        "match",
        "group",
        "replace",
        "replace",
        "decode_params",
        "paramsDict",
        "paramsStr",
        "param",
        "paramsStr",
        "split",
        "param",
        "split",
        "re",
        "match",
        "k",
        "v",
        "decode",
        "split",
        "v",
        "paramsDict",
        "ip_up",
        "ip_up",
        "exp",
        "re",
        "search",
        "exp",
        "collected_log",
        "re",
        "MULTILINE",
        "match",
        "match",
        "group",
        "logmsg",
        "logmsg",
        "collected_log",
        "logmsg",
        "iface_name",
        "_get_match",
        "tty",
        "_get_match",
        "remote_ip",
        "_get_match",
        "local_ip",
        "_get_match",
        "notified",
        "iface_name",
        "tty",
        "remote_ip",
        "local_ip",
        "iface_name",
        "tty",
        "local_ip",
        "remote_ip",
        "ip_up",
        "iface_name",
        "tty",
        "local_ip",
        "remote_ip",
        "host",
        "keepalive_socket",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "keepalive_socket",
        "connect",
        "host",
        "keepalive_socket",
        "setblocking",
        "pppd_fd",
        "ssl_socket",
        "ssl",
        "logpipe_r",
        "ppp_ip_up",
        "ssl_socket",
        "setblocking",
        "set_non_blocking",
        "pppd_fd",
        "set_non_blocking",
        "logpipe_r",
        "sig",
        "frame",
        "sys",
        "stderr",
        "write",
        "ssl_write_blocked_on_read",
        "ssl_read_blocked_on_write",
        "data_to_pppd",
        "data_to_ssl",
        "data_to_ssl_buf2",
        "time",
        "time",
        "last_activity_time",
        "signal",
        "signal",
        "signal",
        "SIGUSR1",
        "sigusr1",
        "LogWatcher",
        "ppp_ip_up",
        "time",
        "time",
        "logpipe_r",
        "data_to_pppd",
        "writes",
        "append",
        "pppd_fd",
        "ssl_read_blocked_on_write",
        "writes",
        "append",
        "ssl_socket",
        "reads",
        "append",
        "ssl_socket",
        "data_to_ssl",
        "ssl_write_blocked_on_read",
        "reads",
        "append",
        "ssl_socket",
        "writes",
        "append",
        "ssl_socket",
        "reads",
        "append",
        "pppd_fd",
        "keepalive_socket",
        "max",
        "last_activity_time",
        "KEEPALIVE_TIMEOUT",
        "time",
        "time",
        "select",
        "select",
        "reads",
        "writes",
        "timeout",
        "select",
        "error",
        "se",
        "se",
        "args",
        "errno",
        "EAGAIN",
        "errno",
        "EINTR",
        "keepalive_socket",
        "reads",
        "writes",
        "time",
        "time",
        "last_activity_time",
        "KEEPALIVE_TIMEOUT",
        "sys",
        "stderr",
        "write",
        "keepalive_socket",
        "send",
        "os",
        "read",
        "logpipe_r",
        "logmsg",
        "logwatcher",
        "process",
        "logmsg",
        "OSError",
        "se",
        "se",
        "args",
        "errno",
        "EAGAIN",
        "errno",
        "EINTR",
        "data_to_ssl",
        "os",
        "read",
        "pppd_fd",
        "data_to_ssl",
        "OSError",
        "se",
        "se",
        "args",
        "errno",
        "EAGAIN",
        "errno",
        "EINTR",
        "data_to_pppd",
        "ssl",
        "read",
        "data_to_pppd",
        "time",
        "time",
        "socket",
        "sslerror",
        "se",
        "se",
        "args",
        "socket",
        "SSL_ERROR_WANT_READ",
        "se",
        "args",
        "socket",
        "SSL_ERROR_WANT_WRITE",
        "data_to_pppd",
        "os",
        "write",
        "pppd_fd",
        "data_to_pppd",
        "data_to_pppd",
        "num_written",
        "OSError",
        "se",
        "se",
        "args",
        "errno",
        "EAGAIN",
        "errno",
        "EINTR",
        "data_to_ssl_buf2",
        "data_to_ssl",
        "data_to_ssl",
        "data_to_ssl_buf2",
        "ssl",
        "write",
        "data_to_ssl_buf2",
        "num_written",
        "len",
        "data_to_ssl_buf2",
        "time",
        "time",
        "socket",
        "sslerror",
        "se",
        "se",
        "args",
        "socket",
        "SSL_ERROR_WANT_READ",
        "se",
        "args",
        "socket",
        "SSL_ERROR_WANT_WRITE",
        "pid",
        "os",
        "waitpid",
        "pid",
        "os",
        "WNOHANG",
        "res_pid",
        "result",
        "sys",
        "stdout",
        "write",
        "result",
        "sys",
        "stdout",
        "write",
        "os",
        "kill",
        "pid",
        "signal",
        "SIGTERM",
        "os",
        "waitpid",
        "pid",
        "x",
        "x",
        "x",
        "mask",
        "mask",
        "mask",
        "mask",
        "parts",
        "n",
        "parts",
        "num",
        "n",
        "num",
        "len",
        "parts",
        "num",
        "routespec",
        "routespec",
        "routespec",
        "split",
        "net",
        "split",
        "len",
        "netparts",
        "netparts",
        "append",
        "bits",
        "bits",
        "split",
        "n",
        "netmaskparts",
        "netmask",
        "n",
        "netmask",
        "len",
        "netmaskparts",
        "mask2bits",
        "get",
        "netmask",
        "bits",
        "MyException",
        "routespec",
        "bits",
        "routespec",
        "split",
        "len",
        "netparts",
        "len",
        "netparts",
        "netparts",
        "append",
        "netparts",
        "bits",
        "netparts",
        "bits",
        "bits",
        "netparts",
        "i",
        "domain",
        "bits",
        "i",
        "bits",
        "domain",
        "bits",
        "netparts",
        "i",
        "remaining_bits",
        "n",
        "domain",
        "n",
        "start_addr",
        "start_addr",
        "remaining_bits",
        "tunnel_host",
        "i",
        "proxy_connect",
        "tunnel_host",
        "tunnel_port",
        "ssl_socket",
        "setsockopt",
        "socket",
        "IPPROTO_TCP",
        "socket",
        "TCP_NODELAY",
        "sslwrap",
        "tunnel_host",
        "ssl_socket",
        "ssl",
        "write",
        "request",
        "ssl",
        "read",
        "socket",
        "sslerror",
        "e",
        "e",
        "args",
        "sys",
        "stderr",
        "write",
        "i",
        "os",
        "openpty",
        "os",
        "pipe",
        "get",
        "parse_net_bits",
        "routespec",
        "routespec",
        "split",
        "override_gateway",
        "ssl_socket",
        "getpeername",
        "os",
        "popen",
        "read",
        "split",
        "sys",
        "stderr",
        "write",
        "gw_ip",
        "sys",
        "stderr",
        "write",
        "platform",
        "setup_route",
        "gw_ip",
        "tunnel_ip",
        "platform",
        "setup_route",
        "gw_ip",
        "tunnel_ip",
        "sys",
        "platform",
        "routes_to_add",
        "routes_to_add",
        "insert",
        "os",
        "fork",
        "pid",
        "os",
        "close",
        "ssl_socket",
        "fileno",
        "os",
        "close",
        "pppd_fd",
        "os",
        "setsid",
        "os",
        "dup2",
        "slave_pppd_fd",
        "os",
        "close",
        "slave_pppd_fd",
        "os",
        "dup2",
        "logpipe_w",
        "os",
        "close",
        "logpipe_r",
        "os",
        "close",
        "logpipe_w",
        "os",
        "seteuid",
        "os",
        "setuid",
        "override_gateway",
        "args",
        "append",
        "args",
        "append",
        "sys",
        "platform",
        "args",
        "extend",
        "serviceid",
        "os",
        "execvp",
        "args",
        "os",
        "_exit",
        "os",
        "close",
        "slave_pppd_fd",
        "os",
        "close",
        "logpipe_w",
        "iface_name",
        "tty",
        "local_ip",
        "remote_ip",
        "net",
        "bits",
        "routes_to_add",
        "platform",
        "setup_route",
        "iface_name",
        "local_ip",
        "join",
        "net",
        "bits",
        "revdns_domains",
        "extend",
        "routespec_to_revdns",
        "net",
        "bits",
        "set_keepalive_host",
        "local_ip",
        "get",
        "platform",
        "setup_dns",
        "iface_name",
        "serviceid",
        "split",
        "re",
        "split",
        "get",
        "revdns_domains",
        "override_gateway",
        "run_event_loop",
        "pppd_fd",
        "ssl_socket",
        "ssl",
        "logpipe_r",
        "ppp_ip_up",
        "get",
        "platform",
        "teardown_dns",
        "as_root",
        "shutdown_pppd",
        "pid",
        "override_gateway",
        "platform",
        "setup_route",
        "gw_ip",
        "tunnel_ip",
        "exename",
        "s",
        "s",
        "exename",
        "open",
        "os",
        "path",
        "expanduser",
        "CONFIG_FILE",
        "conf",
        "readline",
        "line",
        "open",
        "os",
        "path",
        "expanduser",
        "CONFIG_FILE",
        "f",
        "write",
        "line",
        "CONFIG_FILE",
        "argv",
        "proxy_addr",
        "argv",
        "usage",
        "argv",
        "sys",
        "stdout",
        "sys",
        "exit",
        "sys",
        "version_info",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "os",
        "geteuid",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "os",
        "seteuid",
        "os",
        "getuid",
        "getpass",
        "getuser",
        "getopt",
        "getopt",
        "argv",
        "getopt",
        "GetoptError",
        "e",
        "sys",
        "stderr",
        "write",
        "e",
        "opt",
        "usage",
        "argv",
        "sys",
        "stderr",
        "sys",
        "exit",
        "len",
        "args",
        "usage",
        "argv",
        "sys",
        "stderr",
        "sys",
        "exit",
        "get_prefs",
        "prefs",
        "prefs",
        "split",
        "len",
        "args",
        "args",
        "userhost",
        "args",
        "userhost",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "userhost",
        "userhost",
        "rsplit",
        "userhost",
        "opt",
        "val",
        "opts",
        "opt",
        "opt",
        "parse_hostport",
        "val",
        "sys",
        "stderr",
        "write",
        "proxy_addr",
        "opt",
        "socks",
        "sys",
        "stderr",
        "write",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "parse_hostport",
        "val",
        "sys",
        "stderr",
        "write",
        "proxy_addr",
        "opt",
        "check_certificates",
        "find_certificates_file",
        "old_session",
        "get_vpn_menu_number",
        "host",
        "old_session",
        "menu_number",
        "get_VPN_params",
        "host",
        "old_session",
        "menu_number",
        "old_session",
        "get_vpn_client_data",
        "host",
        "getpass",
        "getpass",
        "user",
        "host",
        "do_login",
        "client_data",
        "host",
        "user",
        "password",
        "session",
        "session",
        "get_vpn_menu_number",
        "host",
        "session",
        "menu_number",
        "sys",
        "stderr",
        "write",
        "sys",
        "exit",
        "get_VPN_params",
        "host",
        "session",
        "menu_number",
        "sys",
        "exit",
        "write_prefs",
        "join",
        "userhost",
        "session",
        "verbosity",
        "sys",
        "stderr",
        "write",
        "k",
        "v",
        "iteritems",
        "sys",
        "stderr",
        "write",
        "k",
        "v",
        "execPPPd",
        "main",
        "sys",
        "argv",
        "KeyboardInterrupt",
        "SystemExit",
        "se",
        "se"
    ],
    "literals": [
        "\"~/.f5vpn-login.conf\"",
        "'/etc/ssl/certs/ca-certificates.crt'",
        "'/etc/pki/tls/certs/ca-bundle.crt'",
        "'/usr/share/ssl/certs/ca-bundle.crt'",
        "'/etc/ssl/cert.pem'",
        "'/etc/certs/ca-bundle.crt'",
        "'/usr/local/ssl/certs/ca-bundle.crt'",
        "'/etc/apache/ssl.crt/ca-bundle.crt'",
        "'/usr/share/curl/curl-ca-bundle.crt'",
        "'/usr/lib/ssl/cert.pem'",
        "'SSL3_GET_SERVER_CERTIFICATE:certificate verify failed'",
        "\"Couldn't validate server certificate.\\nAre you being MITM'd? If not, try --dont-check-certificates\\n\"",
        "\"Not signaled or exited???\"",
        "\"%r: exited with result %d\"",
        "\"setup_route(ifname=%r, gateway_ip=%r, net=%r, bits=%r, action=%r\"",
        "\"teardown_route(ifname=%r, gateway_ip=%r, net=%r, bits=%r\"",
        "\"setup_dns(iface_name=%r, service_id=%r, dns_servers=%r, dns_domains=%r, revdns_domains=%r, override_gateway=%r)\"",
        "\"teardown_dns()\"",
        "\"/sbin/route\"",
        "\"/sbin/route\"",
        "\"/usr/bin/route\"",
        "\"/usr/bin/route\"",
        "\"Couldn't find route command\"",
        "'-net'",
        "\"%s/%s\"",
        "'-interface'",
        "'SystemConfiguration'",
        "\"com.apple.SystemConfiguration\"",
        "u'SCDynamicStoreCreate'",
        "'@@@@@'",
        "u'SCDynamicStoreSetValue'",
        "'B@@@'",
        "\"d.init\\n\"",
        "\"d.add ServerAddresses * %s\\n\"",
        "' '",
        "\"d.add SearchDomains * %s\\n\"",
        "' '",
        "\"d.add SupplementalMatchDomains * %s\\n\"",
        "' '",
        "\"set State:/Network/Service/%s/DNS\\n\"",
        "'/usr/sbin/scutil'",
        "\"f5vpn-login\"",
        "u'ServerAddresses'",
        "u'SearchDomains'",
        "u'SupplementalMatchDomains'",
        "'State:/Network/Service/%s/DNS'",
        "\"-host\"",
        "\"-net\"",
        "'netmask'",
        "'/sbin/route'",
        "'gw'",
        "'/sbin/route'",
        "\"%s/%s\"",
        "'-interface'",
        "\"/etc/resolv.conf\"",
        "''",
        "'\\n'",
        "'search '",
        "'domain '",
        "' '",
        "'nameserver '",
        "' '",
        "\"search %s %s\"",
        "' '",
        "\"nameserver %s\"",
        "''",
        "'/etc/resolv.conf'",
        "'/etc/resolv.conf.f5_bak'",
        "'/etc/resolv.conf'",
        "'w'",
        "'\\n'",
        "'/etc/resolv.conf'",
        "'/etc/resolv.conf'",
        "'/etc/resolv.conf.f5_bak'",
        "'/etc/resolv.conf'",
        "\"Not restoring resolv.conf: modified by another process.\\n\"",
        "'/etc/resolv.conf.f5_bak'",
        "\"nameserver %s\\nsearch %s\\n\"",
        "' '",
        "' '",
        "'/sbin/resolvconf'",
        "'-a'",
        "'tun-%s'",
        "\"/sbin/resolvconf\"",
        "'-d'",
        "'tun-%s'",
        "\"darwin\"",
        "\"linux2\"",
        "'/sbin/resolvconf'",
        "\"freebsd6\"",
        "\"freebsd7\"",
        "\"freebsd8\"",
        "\"Don't know how to setup routes/dns for platform %r\"",
        "'subjectAltName'",
        "'subjectAltName'",
        "'dns'",
        "'ip'",
        "'subject'",
        "'subject'",
        "'commonname'",
        "'*.'",
        "'.'",
        "\"Invalid certificate, connecting to host %r, but cert is for cn: %r subjectAltName: %r.\\nAre you being MITM'd? If not, try --dont-check-certificates\\n\"",
        "'Security'",
        "\"com.apple.security\"",
        "\"Warning: server certificate checking disabled, requires Python >= 2.6.\\n\"",
        "\"darwin\"",
        "\"Warning: server certificate checking disabled, couldn't locate the certificates file.\\n\"",
        "\"         Do you know where it is on your OS? Lemme know...\\n\"",
        "''",
        "'\\n'",
        "'\\r'",
        "'http'",
        "\"CONNECT %s:%d HTTP/1.0\\r\\n\\r\\n\"",
        "' '",
        "'200'",
        "\"Proxy returned bad status for CONNECT: %r\"",
        "' '",
        "''",
        "'socks5'",
        "':'",
        "''",
        "'document.external_data_post_cls.client_data.value = \\\"([\\w=]+)\\\"'",
        "'name=\"client_data\" value=\"([\\w=]+)\"'",
        "''",
        "\"rsa_port=&vhost=standard&username=%(user)s&password=%(password)s&client_data=%(client_data)s&login=Logon&state=&mrhlogonform=1&miniui=1&tzoffsetmin=1&sessContentType=HTML&overpass=&lang=en&charset=iso-8859-1&uilang=en&uicharset=iso-8859-1&uilangchar=en.iso-8859-1&langswitcher=\"",
        "'^Set-Cookie: MRHSession=([^;]*);'",
        "\"deleted\"",
        "'<font color=red>(.*?)</font>'",
        "'\\n'",
        "\"(Challenge: [^<]*)\"",
        "\"\\n\"",
        "\"Login process failed, unknown output. Sorry!\\n\"",
        "\"\\n\"",
        "'<favorite id=\"Z=([^\"]*)\">'",
        "'^Location: /my.logon.php3'",
        "\"Old session no longer valid.\\n\"",
        "\"<embed [^>]*?(version=[^>]*)>\"",
        "\"document.writeln\\('(version=[^)]*)'\\)\"",
        "'^Location: /my.logon.php3'",
        "\"Old session no longer valid.\\n\"",
        "\"Embed info output:\\n\"",
        "' '",
        "'&'",
        "'\"'",
        "''",
        "'&'",
        "'='",
        "'q[0-9]+'",
        "'hex'",
        "'='",
        "''",
        "\"PPPD LOG: %r\"",
        "\"Using interface (.*)$\"",
        "\"Connect: .* <--> (.*)$\"",
        "\"remote IP address (.*)$\"",
        "\"local  IP address (.*)$\"",
        "\"CALLING ip_up%r\"",
        "''",
        "''",
        "''",
        "\"ssl_write_blocked_on_read=%r, ssl_read_blocked_on_write=%r, data_to_pppd=%r, data_to_ssl=%r, data_to_ssl_buf2=%r, time_since_last_activity=%r\\n\"",
        "\"Sending keepalive\\n\"",
        "'keepalive'",
        "\"EOF on logpipe_r\"",
        "\"EOF on pppd\"",
        "\"EOF on ssl\"",
        "''",
        "''",
        "\"PPPd exited unexpectedly with result %s\\n\"",
        "\"Shutting down pppd, please wait...\\n\"",
        "'%d.%d.%d.%d'",
        "'/'",
        "'/'",
        "'.'",
        "'.'",
        "'.'",
        "\"Non-contiguous netmask in routespec: %s\\n\"",
        "'.'",
        "'in-addr.arpa'",
        "'.'",
        "'.'",
        "'tunnel_host0'",
        "'tunnel_port0'",
        "\"f5vpn-%s\"",
        "'Session_ID'",
        "'Session_ID'",
        "\"VPN socket unexpectedly closed during connection setup, retrying (%d/5)...\\n\"",
        "'LAN0'",
        "'LAN0'",
        "' '",
        "'UseDefaultGateway0'",
        "\"netstat -rn|grep '^default\\|^0.0.0.0'|awk '{print $2}'\"",
        "\"Detected current default route: %r\\n\"",
        "\"Attempting to delete and override route to VPN server.\\n\"",
        "''",
        "'delete'",
        "''",
        "'add'",
        "\"darwin\"",
        "'pppd'",
        "'logfd'",
        "'4'",
        "'noauth'",
        "'nodetach'",
        "'crtscts'",
        "'passive'",
        "'ipcp-accept-local'",
        "'ipcp-accept-remote'",
        "'local'",
        "'nodeflate'",
        "'novj'",
        "'defaultroute'",
        "'nodefaultroute'",
        "\"darwin\"",
        "'serviceid'",
        "\"pppd\"",
        "'.'",
        "'add'",
        "'DNS0'",
        "'DNS0'",
        "','",
        "'[, ]+'",
        "'DNSSuffix0'",
        "''",
        "\"VPN link is up!\"",
        "'DNS0'",
        "''",
        "'delete'",
        "\"Usage: %s [--dont-check-certificates] [--{http,socks5}-proxy=host:port] [[user@]host]\"",
        "'w'",
        "\"Couldn't write prefs file: %s\"",
        "'--help'",
        "\"Python 2.3.5 or later is required.\\n\"",
        "\"ERROR: \\n\"",
        "\"  This script must be run as root. Preferably setuid (via companion .c\\n\"",
        "\"  program), but it'll work when invoked as root directly, too.\\n\"",
        "\"\"",
        "'verbose'",
        "'http-proxy='",
        "'socks5-proxy='",
        "'dont-check-certificates'",
        "\"Unknown option: %s\\n\"",
        "'\\0'",
        "\"The host argument must be provided the first time.\\n\"",
        "'@'",
        "'@'",
        "'--verbose'",
        "'--http-proxy'",
        "'http'",
        "\"Using proxy: %r\\n\"",
        "'--socks5-proxy'",
        "\"Cannot use a socks5 proxy: you do not seem to have the socks module available.\\n\"",
        "\"Please install SocksiPy: http://socksipy.sourceforge.net/\\n\"",
        "'socks5'",
        "\"Using proxy: %r\\n\"",
        "'--dont-check-certificates'",
        "\"Trying old session...\"",
        "\"password for %s@%s? \"",
        "\"Session id gotten:\"",
        "\"Getting params...\"",
        "\"Unable to find the 'Network Access' entry in main menu. Do you have VPN access?\\n\"",
        "\"Couldn't get embed info. Sorry.\"",
        "'\\0'",
        "''",
        "\"VPN Parameter dump:\\n\"",
        "\"   %r: %r\\n\"",
        "\"Got plugin params, execing vpn client\"",
        "'__main__'",
        "\"ERROR:\"",
        "\"Shut-down.\""
    ],
    "variables": [
        "CONFIG_FILE",
        "KEEPALIVE_TIMEOUT",
        "CERTIFICATE_FILE_LOCATIONS",
        "socks",
        "ssl_cert_path",
        "proxy_addr",
        "ssl_sock",
        "ssl_sock",
        "sslmodule",
        "flags",
        "flags",
        "pipe_r",
        "pipe_w",
        "pipe_r",
        "pipe_w",
        "pid",
        "wpid",
        "sts",
        "code",
        "route_path",
        "route_path",
        "args",
        "SystemConfiguration",
        "SCbndl",
        "SystemConfiguration",
        "config",
        "sc",
        "d",
        "d",
        "d",
        "d",
        "host_or_net",
        "host_or_net",
        "args",
        "resolv_conf_timestamp",
        "old_resolv_conf",
        "old_resolv_conf",
        "other_lines",
        "search",
        "nses",
        "line",
        "search",
        "new_resolv_conf",
        "resolv_conf_timestamp",
        "iface_name",
        "cmd",
        "platform",
        "ret",
        "ret",
        "hostparts",
        "cn",
        "san",
        "san_ip",
        "OSX_cert_tempfile",
        "Security",
        "res",
        "certs",
        "res",
        "data",
        "OSX_cert_tempfile",
        "ssl_cert_path",
        "ssl_cert_path",
        "output",
        "data",
        "s",
        "statusline",
        "line",
        "s",
        "s",
        "ipport",
        "ip",
        "port",
        "ip",
        "port",
        "ip",
        "port",
        "s",
        "ssl",
        "data",
        "newdata",
        "request",
        "result",
        "match",
        "match",
        "body",
        "request",
        "result",
        "session",
        "pat",
        "sessid",
        "session",
        "session",
        "pat",
        "match",
        "request",
        "result",
        "match",
        "menu_number",
        "result",
        "request",
        "result",
        "matches",
        "matches",
        "match",
        "paramsDict",
        "paramsDict",
        "k",
        "v",
        "k",
        "v",
        "paramsDict",
        "k",
        "collected_log",
        "iface_name",
        "tty",
        "remote_ip",
        "local_ip",
        "notified",
        "ip_up",
        "match",
        "iface_name",
        "tty",
        "remote_ip",
        "local_ip",
        "notified",
        "keepalive_socket",
        "keepalive_socket",
        "ssl_write_blocked_on_read",
        "ssl_read_blocked_on_write",
        "data_to_pppd",
        "data_to_ssl",
        "data_to_ssl_buf2",
        "logwatcher",
        "last_activity_time",
        "reads",
        "writes",
        "timeout",
        "timeout",
        "reads",
        "writes",
        "exc",
        "logmsg",
        "data_to_ssl",
        "ssl_read_blocked_on_write",
        "data_to_pppd",
        "last_activity_time",
        "ssl_read_blocked_on_write",
        "num_written",
        "data_to_pppd",
        "data_to_ssl_buf2",
        "data_to_ssl",
        "ssl_write_blocked_on_read",
        "num_written",
        "data_to_ssl_buf2",
        "last_activity_time",
        "ssl_write_blocked_on_read",
        "res_pid",
        "result",
        "mask2bits",
        "bits2mask",
        "mask",
        "mask2bits",
        "mask",
        "bits2mask",
        "x",
        "num",
        "num",
        "net",
        "bits",
        "netparts",
        "netmaskparts",
        "netmask",
        "netmask",
        "bits",
        "bits",
        "netparts",
        "bits",
        "domain",
        "i",
        "domain",
        "remaining_bits",
        "start_addr",
        "tunnel_host",
        "tunnel_port",
        "serviceid",
        "request",
        "ssl_socket",
        "ssl",
        "initial_data",
        "pppd_fd",
        "slave_pppd_fd",
        "logpipe_r",
        "logpipe_w",
        "routes_to_add",
        "routes_to_add",
        "override_gateway",
        "tunnel_ip",
        "gw_ip",
        "pid",
        "args",
        "revdns_domains",
        "conf",
        "f",
        "user",
        "opts",
        "args",
        "prefs",
        "old_session",
        "userhost",
        "path",
        "userhost",
        "old_session",
        "old_session",
        "userhost",
        "user",
        "host",
        "host",
        "verbosity",
        "check_certificates",
        "verbosity",
        "proxy_addr",
        "proxy_addr",
        "check_certificates",
        "menu_number",
        "session",
        "client_data",
        "password",
        "session",
        "menu_number"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Debian/Ubuntu/Gentoo",
        "New redhat",
        "Old redhat",
        "FreeBSD",
        "Your OS goes here? Email me if you know of more places to look...",
        "Other paths I've seen mentioned on teh internets, what the heck, can't hurt",
        "File that contains certificates to use",
        "The ssl module is New in python 2.6, and required for cert validation.",
        "setup stdin pipe",
        "If it's already been wrapped, we're done.",
        "Nope, so, try again, the hard way...",
        "Preferentially use the SystemConfiguration library (included with OSX",
        "10.5) if available, as scutil has a command-length limitation of 256",
        "chars. With 256 chars it's generally not reasonable to add in the",
        "revdns domains, so don't bother trying.",
        "NOTE: There's a 3rd party SystemConfiguration package for 10.4 which",
        "seems to have a different API (that I don't support currently)",
        "fall back to scutil.",
        "domain entry is simply an alternative spelling for search",
        "FIXME: should I be doing something different here based on override_gateway?",
        "ResolvConf is a system for managing your resolv.conf file in a",
        "structured way on unix systems. When it is installed, go through it,",
        "rather than munging the file manually (and thus causing potential",
        "conflicts)",
        "We append tun- to the interface so the proper record order is",
        "established with the resolvconf distribution.  Since we're essentially",
        "using ppp for the same reason as most people would use tun, this",
        "should be okay",
        "Choose a dns resolver setup routine",
        "Other Unix-like platforms aren't supported at the moment...but there's",
        "no reason they can't be, when someone with such a platform tells me",
        "the syntax for their \"route\" command. Patches welcome!",
        "SSL certificate checking support.",
        "WTF isn't this function in the python stdlib somewhere???",
        "TODO: check san_ip too...",
        "This function is @#$@#@#$ retarded. Its only point is to extract a single",
        "cert from the OSX trusted cert store, so I can put it in a file, so I give",
        "that file to Python's SSL module (which gives it to OpenSSL), which then",
        "basically ignores that I'm explicitly telling it to only trust that one",
        "certificate, and uses all the certificates in OSX's trusted cert store,",
        "anyways. But it forces me to give it a file with a cert in it regardless",
        "of the fact that it's planning to use the **entire cert store**",
        "regardless of what I actually ask for...sigh. Why???",
        "ALSO, wtf doesn't Security.framework already have python wrappers like the",
        "rest of OSX's frameworks?? Just make up a minimal wrapper here...",
        "Check for the file in all the places I know about...",
        "Oh, and for OSX, which doesn't ship a openssl cert file, do some black magic.",
        "END SSL certificate checking gunk",
        "Connect a socket to ip and port, and return a socket object.",
        "If a proxy is defined, connect via the proxy.",
        "Read remaining headers, if any",
        "Now the ssl connection is going",
        "Socks method",
        "print data",
        "Some FirePass servers are configured to redirect to an external \"pre-login",
        "check\" server.  This server is supposed to run some random additional",
        "checks to see if it likes you, and then redirects back to the firepass,",
        "with the client_data gunk as an extra POST variable.",
        "If such an element is present, the firepass will refuse login unless we",
        "pass it through to the my.activation.php3 script. So, do so. Secureetay!",
        "Find out the \"Z\" parameter to use to open a VPN connection",
        "a redirect to the login page.",
        "print \"RESULT:\", result",
        "Try to find the plugin parameters",
        "A new version of the server has switched to using javascript to write",
        "the parameters, now, so try matching that too.",
        "a redirect to the login page.",
        "Tiny little event-loop: don't try this at home.",
        "try to write data to pppd if pending, otherwise read more data from ssl",
        "Conversely, write data to ssl if pending, otherwise read more data from pppd",
        "Run the select, woot",
        "loop back around to try again",
        "Returned from select because of timeout (probably)",
        "print \"SELECT GOT:\", reads,writes,exc",
        "To simplify matters, don't bother with what select returned. Just try",
        "everything; it doesn't matter if it fails.",
        "Read data from log pipe",
        "EOF",
        "Read data from pppd",
        "EOF",
        "print \"READ PPPD: %r\" % data_to_ssl",
        "Read data from SSL",
        "EOF",
        "print \"READ SSL: %r\" % data_to_pppd",
        "Write data to pppd",
        "print \"WROTE PPPD: %r\" % data_to_pppd[:num_written]",
        "Write data to SSL",
        "Write in SSL is not like unix write; you *must* call it with the",
        "same pointer as previously if it fails.  Otherwise, it'll raise a",
        "\"bad write retry\" error.",
        "should always either write all data, or raise a WANT_*",
        "print \"WROTE SSL: %r\" % data_to_ssl[:num_written]",
        "This routine parses the following formats:",
        "w.x.y.z/numbits",
        "w.x.y.z/A.B.C.D",
        "w[.x[.y[.z]]] (netmask implicit in number of .s)",
        "Sometimes the server seems to respond with \"EOF occurred in violation of protocol\"",
        "instead of establishing the connection. Try to deal with this by retrying...",
        "Make new PTY",
        "Make log pipe",
        "If the server says to redirect the default gateway, we need to first add",
        "an explicit route for the VPN server with the /current/ default gateway.",
        "FIXME: This is a total hack...and incorrect in some cases, too.  But",
        "it'll work in the normal case where the VPN server isn't on your local",
        "subnet.  This should really be using some (platform-specific) method",
        "of finding the current route to tunnel_ip instead of assuming that's",
        "the default route.",
        "Now, add a new default route, if it wasn't already specified (but not",
        "on darwin: pppd's \"defaultroute\" option actually works there)",
        "Setup new controlling TTY",
        "setup log pipe",
        "Become root",
        "Run pppd",
        "sending a packet to the \"local\" ip appears to actually send data",
        "across the connection, which is the desired behavior.",
        "2.3.5 or higher is required because of this (2.2.X ought to work too, but I've not tested it):",
        "------------------------------------------------------------------------",
        "r37117 | doko | 2004-08-24 17:48:15 -0400 (Tue, 24 Aug 2004) | 4 lines",
        "[Patch #945642] Fix non-blocking SSL sockets, which blocked on reads/writes in Python 2.3.",
        "Taken from HEAD, tested as part of the unstable and testing Debian packages since May on",
        "various architectures.",
        "Set effective uid to userid; will become root as necessary",
        "Don't attempt to reuse session if switching users or servers.",
        "Updates global ssl_cert_path",
        "Loop keep asking for passwords while the site gives a new prompt"
    ],
    "docstrings": [
        "\"\"\"Log in to a F5 Firepass SSL VPN from a command-line, without using F5's\nbrowser-plugin and associated junk. Yay.\n\nWorks with OSX and linux, at the moment.\n\nCopyright 2006-2010, James Y Knight <foom@fuhm.net>\n\n2010-08-30\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\"\"\"",
        "\"\"\"Setup DNS the OSX magic way.\"\"\"",
        "'''<signatures version=\"0.9\"><depends_on path=\"/System/Library/Frameworks/CoreFoundation.framework\"/><enum name=\"kSecFormatX509Cert\" value=\"9\"/><enum name=\"kSecItemPemArmour\" value=\"1\"/><function name=\"SecTrustCopyAnchorCertificates\"><arg type=\"o^@\"/><retval type=\"l\"/></function><function name=\"SecKeychainItemExport\"><arg type=\"@\"/><arg type=\"I\"/><arg type=\"I\"/><arg type=\"^{?=II^v@@@II}\"/><arg type=\"o^@\"/><retval type=\"l\"/></function></signatures>'''",
        "\"\"\"GET /my.logon.php3?check=1&no_inspectors=1 HTTP/1.0\\r\nAccept: */*\\r\nAccept-Language: en\\r\nCookie: uRoamTestCookie=TEST; VHOST=standard\\r\nReferer: https://%(host)s/my.activation.php3\\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.9.2\\r\nHost: %(host)s\\r\n\\r\n\"\"\"",
        "\"\"\"POST /my.activation.php3 HTTP/1.0\\r\nAccept: */*\\r\nAccept-Language: en\\r\nCookie: VHOST=standard; uRoamTestCookie=TEST\\r\nContent-Type: application/x-www-form-urlencoded\\r\nReferer: https://%(host)s/my.activation.php3\\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.9.2\\r\nHost: %(host)s\\r\nContent-Length: %(len)d\\r\n\\r\n%(body)s\n\"\"\"",
        "\"\"\"GET /vdesk/vpn/index.php3?outform=xml HTTP/1.0\\r\nAccept: */*\\r\nAccept-Language: en\\r\nCookie: uRoamTestCookie=TEST; VHOST=standard; MRHSession=%(session)s\\r\nReferer: https://%(host)s/my.activation.php3\\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.9.2\\r\nHost: %(host)s\\r\n\\r\n\"\"\"",
        "\"\"\"GET /vdesk/vpn/connect.php3?Z=%(menu_number)s HTTP/1.0\\r\nAccept: */*\\r\nAccept-Language: en\\r\nCookie: uRoamTestCookie=TEST; VHOST=standard; MRHSession=%(session)s\\r\nReferer: https://%(host)s/vdesk/index.php3\\r\nUser-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.9.2\\r\nHost: %(host)s\\r\n\\r\n\"\"\"",
        "\"\"\"Collect (iface_name, tty, local_ip, remote_ip) from the ppp log messages\n    and call ppp_ip_up when they've all arrived.\"\"\"",
        "\"\"\"GET /myvpn?sess=%s HTTP/1.0\\r\nCookie: MRHSession=%s\\r\n\\r\n\"\"\""
    ],
    "functions": [
        "sslwrap",
        "sslwrap",
        "set_non_blocking",
        "as_root",
        "sts_result",
        "run_as_root",
        "setup_route",
        "setup_dns",
        "teardown_dns",
        "setup_route",
        "setup_host_route",
        "setup_dns",
        "teardown_dns",
        "setup_route",
        "load_SystemConfigurationFramework",
        "setup_dns",
        "setup_helper",
        "setup_route",
        "setup_route",
        "setup_dns",
        "_create_file",
        "teardown_dns",
        "_teardown_dns",
        "setup_dns",
        "teardown_dns",
        "_teardown_dns",
        "get_platform",
        "get_subjectAltName",
        "get_commonName",
        "verify_certificate_host",
        "validate_entry",
        "OSX_get_a_certificate",
        "find_certificates_file",
        "readline_from_sock",
        "proxy_connect",
        "parse_hostport",
        "send_request",
        "get_vpn_client_data",
        "do_login",
        "get_vpn_menu_number",
        "get_VPN_params",
        "decode_params",
        "_get_match",
        "process",
        "set_keepalive_host",
        "run_event_loop",
        "sigusr1",
        "shutdown_pppd",
        "parts_to_int",
        "parse_net_bits",
        "routespec_to_revdns",
        "execPPPd",
        "ppp_ip_up",
        "usage",
        "get_prefs",
        "write_prefs",
        "main"
    ],
    "classes": [
        "MyException",
        "Platform",
        "DummyPlatform",
        "DarwinPlatform",
        "Linux2Platform",
        "FreeBSD6Base",
        "ManualFrobbingDNSMixin",
        "ResolvConfHelperDNSMixin",
        "Linux2ManualPlatform",
        "Linux2ResolvconfPlatform",
        "FreeBSD6Platform",
        "LogWatcher"
    ]
}