{
    "identifiers": [
        "apt",
        "apt_pkg",
        "json",
        "os",
        "subprocess",
        "sys",
        "subprocess",
        "check_output",
        "universal_newlines",
        "strip",
        "cache",
        "depcache",
        "depcache",
        "init",
        "cache",
        "depcache",
        "depcache",
        "upgrade",
        "depcache",
        "del_count",
        "clean",
        "cache",
        "depcache",
        "depcache",
        "upgrade",
        "ver",
        "DISTRO",
        "DISTRO",
        "DISTRO",
        "file",
        "index",
        "ver",
        "file_list",
        "origin",
        "archive",
        "security_pockets",
        "file",
        "archive",
        "archive",
        "file",
        "origin",
        "origin",
        "apt_pkg",
        "init",
        "apt_pkg",
        "config",
        "apt_pkg",
        "Cache",
        "apt",
        "progress",
        "OpProgress",
        "SystemError",
        "e",
        "sys",
        "stderr",
        "write",
        "e",
        "sys",
        "exit",
        "apt_pkg",
        "DepCache",
        "cache",
        "depcache",
        "read_pinfile",
        "os",
        "path",
        "exists",
        "SYNAPTIC_PINFILE",
        "depcache",
        "read_pinfile",
        "SYNAPTIC_PINFILE",
        "depcache",
        "init",
        "saveDistUpgrade",
        "cache",
        "depcache",
        "SystemError",
        "e",
        "sys",
        "stderr",
        "write",
        "e",
        "sys",
        "exit",
        "pkg",
        "cache",
        "packages",
        "depcache",
        "marked_install",
        "pkg",
        "depcache",
        "marked_upgrade",
        "pkg",
        "pkg",
        "current_ver",
        "depcache",
        "get_candidate_ver",
        "pkg",
        "cand_ver",
        "inst_ver",
        "inst_ver",
        "cand_ver",
        "pkg",
        "name",
        "BLACKLIST",
        "pkg",
        "name",
        "isSecurityUpgrade",
        "cand_ver",
        "inst_ver",
        "ver_str",
        "cand_ver",
        "ver_str",
        "pkgs",
        "append",
        "record",
        "pkgs",
        "get_update_packages",
        "p",
        "p",
        "get",
        "pkgs",
        "e",
        "e",
        "sys",
        "exit",
        "pkgs",
        "json",
        "dumps",
        "pkgs",
        "sys",
        "exit",
        "security_pkgs",
        "json",
        "dumps",
        "pkgs",
        "sys",
        "exit",
        "json",
        "dumps",
        "pkgs",
        "sys",
        "exit",
        "package_check_metric"
    ],
    "literals": [
        "\"/var/lib/synaptic/preferences\"",
        "\"lsb_release\"",
        "\"-c\"",
        "\"-s\"",
        "'linux-virtual'",
        "'linux-image-virtual'",
        "'linux-headers-virtual'",
        "\"Ubuntu\"",
        "\"%s-security\"",
        "\"gNewSense\"",
        "\"%s-security\"",
        "\"Debian\"",
        "\"%s-updates\"",
        "\"Dir::Cache::pkgcache\"",
        "\"\"",
        "\"Error: Opening the cache (%s)\"",
        "\"Error: Marking the upgrade (%s)\"",
        "\"name\"",
        "\"security\"",
        "\"current_version\"",
        "\"candidate_version\"",
        "'security'",
        "'__main__'"
    ],
    "variables": [
        "SYNAPTIC_PINFILE",
        "DISTRO",
        "BLACKLIST",
        "security_pockets",
        "pkgs",
        "cache",
        "depcache",
        "inst_ver",
        "cand_ver",
        "record",
        "pkgs",
        "security_pkgs"
    ],
    "comments": [
        "!/usr/bin/env python",
        "coding=utf-8",
        "The packages in BLACKLIST WON'T be checked.",
        "mvo: looping is too inefficient with the new auto-mark code",
        "for pkg in cache.Packages:",
        "depcache.MarkKeep(pkg)",
        "force apt to build its caches in memory for now to make sure",
        "that there is no race when the pkgcache file gets re-generated",
        "read the pin files",
        "read the synaptic pins too",
        "init the depcache",
        "Package does not have available update",
        "Some packages are not installed(i.e. linux-headers-3.2.0-77)",
        "skip these updates",
        "skip the package in blacklist",
        "Catch all unknown exceptions",
        "No available update",
        "Has available updates",
        "Has available security updates"
    ],
    "docstrings": [
        "\"\"\"\nsecurity-updates-metric is used to check avaliable package updates\nfor Debian or Ubuntu system.\n\nThe program is inspired by /usr/lib/update-notifier/apt_check.py\n\"\"\"",
        "\"\"\" unmark (clean) all changes from the given depcache \"\"\"",
        "\"\"\" this functions mimics a upgrade but will never remove anything \"\"\"",
        "\"\"\" check if the given version is a security update (or masks one) \"\"\"",
        "\"\"\"\n    Return a list of dict about package updates\n    \"\"\"",
        "\"\"\"\n    Return output and exit status as Sensu required.\n    OK       0: no updates\n    WARNING  1: available normal updates\n    CRITICAL 2: available security updates\n    UNKNOWN  3: exceptions or errors\n    \"\"\""
    ],
    "functions": [
        "clean",
        "saveDistUpgrade",
        "isSecurityUpgrade",
        "get_update_packages",
        "package_check_metric"
    ],
    "classes": []
}