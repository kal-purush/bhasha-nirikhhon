{
    "identifiers": [
        "pageModule",
        "observableModule",
        "bindableModule",
        "trace",
        "trace",
        "trace",
        "trace",
        "args",
        "observableModule",
        "pageModule",
        "pageModule",
        "args",
        "observableModule",
        "model",
        "bindableModule",
        "value",
        "param1",
        "param1",
        "value",
        "value",
        "param1",
        "value",
        "model",
        "toUpperConverter",
        "model",
        "page",
        "model"
    ],
    "literals": [
        "\"ui/page\"",
        "\"data/observable\"",
        "\"ui/core/bindable\"",
        "\"trace\"",
        "\"paramProperty\"",
        "\"%%%\"",
        "\"toUpper\"",
        "\"testProperty\"",
        "\"Alabala\""
    ],
    "variables": [
        "page",
        "model",
        "toUpperConverter"
    ],
    "comments": [
        "import stackLayoutModule = require(\"ui/layouts/stack-layout\");",
        "import textFieldModule = require(\"ui/text-field\");",
        "import enums = require(\"ui/enums\");",
        "var model = page.bindingContext;",
        "export function createPage() {",
        "var stackLayout = new stackLayoutModule.StackLayout();",
        "var firstTextField = new textFieldModule.TextField();",
        "firstTextField.updateTextTrigger = enums.UpdateTextTrigger.textChanged;",
        "var secondTextField = new textFieldModule.TextField();",
        "secondTextField.updateTextTrigger = enums.UpdateTextTrigger.textChanged;",
        "var model = new observableModule.Observable();",
        "var bindOptions: bindableModule.BindingOptions = {",
        "sourceProperty: \"testProperty\",",
        "targetProperty: \"text\",",
        "twoWay: true,",
        "expression: \"testProperty | toUpper('$$$')\"",
        "};",
        "firstTextField.bind(bindOptions, model);",
        "secondTextField.bind({",
        "sourceProperty: \"testProperty\",",
        "targetProperty: \"text\",",
        "twoWay: true",
        "}, model);",
        "stackLayout.addChild(firstTextField);",
        "stackLayout.addChild(secondTextField);",
        "var page = new pageModule.Page();",
        "page.on(\"loaded\", pageLoaded);",
        "page.content = stackLayout;",
        "page.bindingContext = model;",
        "return page;",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "pageLoaded"
    ],
    "classes": []
}