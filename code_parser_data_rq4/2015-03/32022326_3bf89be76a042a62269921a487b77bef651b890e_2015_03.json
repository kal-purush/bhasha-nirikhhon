{
    "identifiers": [
        "angular",
        "ng",
        "myApp",
        "$stateProvider",
        "ng",
        "$urlRouterProvider",
        "ng",
        "$urlMatcherFactory",
        "ng",
        "ng",
        "$urlMatcherFactory",
        "$urlMatcherFactory",
        "item",
        "item",
        "item",
        "item",
        "item",
        "matcher",
        "ng",
        "matcher",
        "matcher",
        "matcher",
        "$urlRouterProvider",
        "$injector",
        "ng",
        "$location",
        "ng",
        "$injector",
        "ng",
        "$location",
        "ng",
        "matcher",
        "matcher",
        "$injector",
        "ng",
        "$location",
        "ng",
        "matcher",
        "$injector",
        "ng",
        "$location",
        "ng",
        "$stateProvider",
        "$scope",
        "$scope",
        "$scope",
        "$scope",
        "$http",
        "ng",
        "$rootScope",
        "ng",
        "$urlRouter",
        "ng",
        "$state",
        "ng",
        "$rootScope",
        "ng",
        "ng",
        "user",
        "user",
        "myApp",
        "UrlLocatorTestService",
        "UiViewScrollProviderTests",
        "angular",
        "app",
        "$uiViewScrollProvider",
        "ng",
        "$uiViewScrollProvider"
    ],
    "literals": [
        "'testModule'",
        "string",
        "string",
        "\"/foo/:bar?param1\"",
        "\"myType2\"",
        "'/user/bob'",
        "'1'",
        "'hello'",
        "'/test'",
        "string",
        "'bob'",
        "'yes'",
        "string",
        "'/test'",
        "'/list'",
        "'/test'",
        "'/list'",
        "'/test'",
        "'/list'",
        "'/list'",
        "'/list'",
        "'$injector'",
        "'$location'",
        "'/list'",
        "'/list'",
        "'/list'",
        "'$injector'",
        "'$location'",
        "'/list'",
        "\"/state1\"",
        "'state1'",
        "\"/state1\"",
        "\"partials/state1.html\"",
        "\"defaultValue\"",
        "'state1.list'",
        "\"/list\"",
        "\"partials/state1.list.html\"",
        "\"A\"",
        "\"List\"",
        "\"Of\"",
        "\"Items\"",
        "'state2'",
        "\"/state2\"",
        "\"partials/state2.html\"",
        "'state2.list'",
        "\"/list\"",
        "\"partials/state2.list.html\"",
        "\"A\"",
        "\"Set\"",
        "\"Of\"",
        "\"Things\"",
        "'index'",
        "\"\"",
        "\"viewA\"",
        "\"index.viewA\"",
        "\"viewB\"",
        "\"index.viewB\"",
        "'route1'",
        "\"/route1\"",
        "\"viewA\"",
        "\"route1.viewA\"",
        "\"viewB\"",
        "\"route1.viewB\"",
        "'route2'",
        "\"/route2\"",
        "\"viewA\"",
        "\"route2.viewA\"",
        "\"viewB\"",
        "\"route2.viewB\"",
        "\"$http\"",
        "\"$rootScope\"",
        "\"$urlRouter\"",
        "\"$state\"",
        "\"$locationChangeSuccess\"",
        "\"/api/me\"",
        "\"GET\"",
        "\"myState\"",
        "\"myState\"",
        "\"myState\"",
        "\"myState\"",
        "\"myState\"",
        "\"/myState\"",
        "\"myState\"",
        "\"urlLocatorTest\"",
        "\"uiViewScrollProviderTests\"",
        "\"ui.router\"",
        "'$uiViewScrollProvider'"
    ],
    "variables": [
        "myApp",
        "matcher",
        "obj",
        "concat",
        "arr",
        "app"
    ],
    "comments": [
        "<reference path=\"angular-ui-router.d.ts\" />",
        "Now set up the states",
        "Service for determining who the currently logged on user is.",
        "If the current user is unknown, halt the state change and request current",
        "user details from the server",
        "Note that we do not concern ourselves with what to do if this request fails,",
        "because if it fails, the web page will be redirected away to the login screen.",
        "sync the ui-state with the location in the browser, which effectively",
        "restarts the state change that was stopped previously",
        "",
        "",
        "",
        "This prevents unwanted scrolling to the active nested state view.",
        "Use this when you have nested states, but you don't want the browser to scroll down the page",
        "to the nested state view.",
        "",
        "See https://github.com/angular-ui/ui-router/issues/848",
        "And https://github.com/angular-ui/ui-router/releases/tag/0.2.8"
    ],
    "docstrings": [],
    "functions": [
        "onLocationChangeSuccess",
        "stateServiceTest"
    ],
    "classes": [
        "UrlLocatorTestService"
    ]
}