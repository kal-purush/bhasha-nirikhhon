{
    "identifiers": [
        "$",
        "$",
        "options",
        "$",
        "options",
        "plugin",
        "$",
        "$",
        "slider",
        "$",
        "defaults",
        "options",
        "slider",
        "parseInt",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "i",
        "props",
        "div",
        "props",
        "i",
        "slider",
        "props",
        "i",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "el",
        "slider",
        "$",
        "$",
        "setup",
        "el",
        "slider",
        "el",
        "slider",
        "$",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "slider",
        "getViewportMaxWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getSlideWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "appendCaptions",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "el",
        "slider",
        "slider",
        "slider",
        "preloadSelector",
        "slider",
        "slider",
        "slider",
        "appendPager",
        "slider",
        "appendControls",
        "slider",
        "slider",
        "appendControlsAuto",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "loadElements",
        "preloadSelector",
        "start",
        "selector",
        "callback",
        "selector",
        "total",
        "callback",
        "selector",
        "$",
        "$",
        "$",
        "$",
        "setTimeout",
        "count",
        "total",
        "callback",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "sliceAppend",
        "slicePrepend",
        "slider",
        "setSlidePosition",
        "slider",
        "slider",
        "slider",
        "getViewportHeight",
        "el",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "resizeWindow",
        "slider",
        "slider",
        "initAuto",
        "slider",
        "initTicker",
        "slider",
        "updatePagerActive",
        "slider",
        "slider",
        "updateDirectionControls",
        "slider",
        "slider",
        "initTouch",
        "$",
        "slider",
        "slider",
        "children",
        "slider",
        "slider",
        "children",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getMoveBy",
        "children",
        "slider",
        "currentIndex",
        "i",
        "i",
        "slider",
        "i",
        "currentIndex",
        "i",
        "slider",
        "children",
        "children",
        "slider",
        "i",
        "children",
        "children",
        "slider",
        "currentIndex",
        "i",
        "slider",
        "children",
        "index",
        "height",
        "$",
        "slider",
        "height",
        "slider",
        "slider",
        "height",
        "children",
        "$",
        "height",
        "slider",
        "slider",
        "width",
        "slider",
        "slider",
        "slider",
        "slider",
        "width",
        "slider",
        "width",
        "slider",
        "slider",
        "slider",
        "slider",
        "wrapWidth",
        "slider",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "slider",
        "wrapWidth",
        "slider",
        "wrapWidth",
        "slider",
        "newElWidth",
        "wrapWidth",
        "slider",
        "slider",
        "slider",
        "newElWidth",
        "slider",
        "slider",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "slidesShowing",
        "slider",
        "childWidth",
        "slider",
        "slidesShowing",
        "slider",
        "slidesShowing",
        "slider",
        "slider",
        "pagerQty",
        "slider",
        "getMoveBy",
        "breakPoint",
        "slider",
        "pagerQty",
        "breakPoint",
        "counter",
        "getNumberSlidesShowing",
        "counter",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "getNumberSlidesShowing",
        "pagerQty",
        "slider",
        "getNumberSlidesShowing",
        "pagerQty",
        "slider",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "getNumberSlidesShowing",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "lastChild",
        "setPositionProperty",
        "position",
        "slider",
        "lastChild",
        "slider",
        "slider",
        "slider",
        "slider",
        "lastShowingIndex",
        "setPositionProperty",
        "position",
        "slider",
        "slider",
        "getMoveBy",
        "slider",
        "getPagerQty",
        "slider",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "value",
        "duration",
        "slider",
        "slider",
        "value",
        "value",
        "el",
        "slider",
        "duration",
        "el",
        "slider",
        "propValue",
        "el",
        "el",
        "updateAfterSlideTransition",
        "el",
        "slider",
        "propValue",
        "el",
        "slider",
        "el",
        "slider",
        "propValue",
        "el",
        "el",
        "setPositionProperty",
        "tickerLoop",
        "animateObj",
        "slider",
        "value",
        "el",
        "animateObj",
        "duration",
        "slider",
        "updateAfterSlideTransition",
        "el",
        "slider",
        "value",
        "el",
        "animateObj",
        "speed",
        "setPositionProperty",
        "tickerLoop",
        "getPagerQty",
        "i",
        "pagerQty",
        "i",
        "slider",
        "$",
        "slider",
        "linkContent",
        "slider",
        "i",
        "slider",
        "linkContent",
        "i",
        "slider",
        "pagerHtml",
        "i",
        "linkContent",
        "slider",
        "pagerHtml",
        "slider",
        "slider",
        "$",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "populatePager",
        "slider",
        "$",
        "slider",
        "slider",
        "clickPagerBind",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "clickNextBind",
        "slider",
        "clickPrevBind",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "$",
        "slider",
        "clickStartBind",
        "slider",
        "clickStopBind",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "updateAutoControls",
        "slider",
        "slider",
        "index",
        "$",
        "title",
        "title",
        "$",
        "title",
        "e",
        "slider",
        "el",
        "el",
        "e",
        "e",
        "slider",
        "el",
        "el",
        "e",
        "e",
        "el",
        "e",
        "e",
        "el",
        "e",
        "e",
        "slider",
        "el",
        "$",
        "e",
        "parseInt",
        "pagerLink",
        "pagerIndex",
        "slider",
        "el",
        "pagerIndex",
        "e",
        "slideIndex",
        "slider",
        "slider",
        "slider",
        "len",
        "slider",
        "slider",
        "slider",
        "slideIndex",
        "slider",
        "len",
        "slider",
        "slider",
        "i",
        "el",
        "$",
        "el",
        "slideIndex",
        "slider",
        "slider",
        "position",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "position",
        "slider",
        "getPagerQty",
        "getMoveBy",
        "slider",
        "slider",
        "position",
        "slider",
        "slider",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "setPositionProperty",
        "position",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "state",
        "slider",
        "slider",
        "slider",
        "state",
        "slider",
        "slider",
        "state",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "setTimeout",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "slider",
        "startPosition",
        "slider",
        "position",
        "position",
        "setPositionProperty",
        "startPosition",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "el",
        "slider",
        "index",
        "totalDimens",
        "slider",
        "$",
        "$",
        "slider",
        "totalDimens",
        "slider",
        "ratio",
        "totalDimens",
        "parseInt",
        "el",
        "property",
        "tickerLoop",
        "newSpeed",
        "tickerLoop",
        "resumeSpeed",
        "speed",
        "resumeSpeed",
        "resumeSpeed",
        "slider",
        "slider",
        "position",
        "el",
        "reset",
        "slider",
        "slider",
        "position",
        "position",
        "slider",
        "reset",
        "reset",
        "resetValue",
        "setPositionProperty",
        "animateProperty",
        "speed",
        "slider",
        "slider",
        "onTouchStart",
        "e",
        "slider",
        "e",
        "slider",
        "el",
        "e",
        "slider",
        "orig",
        "slider",
        "orig",
        "slider",
        "onTouchMove",
        "slider",
        "onTouchEnd",
        "e",
        "e",
        "orig",
        "slider",
        "orig",
        "slider",
        "xMovement",
        "yMovement",
        "slider",
        "e",
        "yMovement",
        "xMovement",
        "slider",
        "e",
        "slider",
        "slider",
        "slider",
        "orig",
        "slider",
        "value",
        "slider",
        "change",
        "orig",
        "slider",
        "value",
        "slider",
        "change",
        "setPositionProperty",
        "value",
        "e",
        "slider",
        "onTouchMove",
        "e",
        "slider",
        "orig",
        "slider",
        "orig",
        "slider",
        "slider",
        "slider",
        "distance",
        "slider",
        "slider",
        "slider",
        "el",
        "el",
        "el",
        "slider",
        "distance",
        "slider",
        "slider",
        "value",
        "slider",
        "distance",
        "slider",
        "slider",
        "value",
        "slider",
        "slider",
        "slider",
        "distance",
        "slider",
        "distance",
        "setPositionProperty",
        "value",
        "distance",
        "slider",
        "distance",
        "el",
        "el",
        "el",
        "setPositionProperty",
        "value",
        "slider",
        "onTouchEnd",
        "e",
        "$",
        "$",
        "windowWidth",
        "windowWidthNew",
        "windowHeight",
        "windowHeightNew",
        "windowWidth",
        "windowWidthNew",
        "windowHeight",
        "windowHeightNew",
        "el",
        "el",
        "slideIndex",
        "direction",
        "slider",
        "slider",
        "slideIndex",
        "slider",
        "slider",
        "slider",
        "slideIndex",
        "slider",
        "getPagerQty",
        "slideIndex",
        "getPagerQty",
        "slider",
        "slider",
        "slideIndex",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "direction",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "direction",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "updatePagerActive",
        "slider",
        "slider",
        "updateDirectionControls",
        "slider",
        "slider",
        "slider",
        "getViewportHeight",
        "slider",
        "getViewportHeight",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "updateAfterSlideTransition",
        "slider",
        "slider",
        "getViewportHeight",
        "slider",
        "getViewportHeight",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "position",
        "lastChild",
        "moveBy",
        "slider",
        "lastChild",
        "slider",
        "slider",
        "position",
        "slider",
        "lastShowingIndex",
        "slider",
        "slider",
        "direction",
        "slider",
        "slider",
        "getMoveBy",
        "getPagerQty",
        "getMoveBy",
        "slider",
        "slider",
        "el",
        "eq",
        "position",
        "lastChild",
        "direction",
        "slider",
        "position",
        "el",
        "slider",
        "slider",
        "slideIndex",
        "slideIndex",
        "getMoveBy",
        "position",
        "slider",
        "requestEl",
        "position",
        "slider",
        "position",
        "moveBy",
        "position",
        "setPositionProperty",
        "value",
        "slider",
        "el",
        "slider",
        "slider",
        "parseInt",
        "slider",
        "el",
        "pagerIndex",
        "el",
        "slider",
        "slider",
        "parseInt",
        "slider",
        "el",
        "pagerIndex",
        "el",
        "preventControlUpdate",
        "slider",
        "slider",
        "setInterval",
        "slider",
        "el",
        "el",
        "slider",
        "slider",
        "preventControlUpdate",
        "updateAutoControls",
        "el",
        "preventControlUpdate",
        "slider",
        "clearInterval",
        "slider",
        "slider",
        "slider",
        "preventControlUpdate",
        "updateAutoControls",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "slider",
        "el",
        "getSlideWidth",
        "slider",
        "getViewportHeight",
        "slider",
        "setSlidePosition",
        "slider",
        "slider",
        "getPagerQty",
        "slider",
        "getPagerQty",
        "slider",
        "slider",
        "slider",
        "populatePager",
        "updatePagerActive",
        "slider",
        "el",
        "slider",
        "slider",
        "$",
        "slider",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "slider",
        "$",
        "slider",
        "slider",
        "clearInterval",
        "slider",
        "slider",
        "$",
        "resizeWindow",
        "el",
        "settings",
        "settings",
        "options",
        "settings",
        "el",
        "init",
        "init",
        "jQuery"
    ],
    "literals": [
        "'horizontal'",
        "''",
        "'visible'",
        "'full'",
        "' / '",
        "'Next'",
        "'Prev'",
        "'Start'",
        "'Stop'",
        "'next'",
        "'all'",
        "'vertical'",
        "'top'",
        "'left'",
        "'fade'",
        "'div'",
        "'WebkitPerspective'",
        "'MozPerspective'",
        "'OPerspective'",
        "'msPerspective'",
        "'Perspective'",
        "''",
        "'-'",
        "'-transform'",
        "'vertical'",
        "\"origStyle\"",
        "\"style\"",
        "\"origStyle\"",
        "\"style\"",
        "'<div class=\"bx-wrapper\"><div class=\"bx-viewport\"></div></div>'",
        "'<div class=\"bx-loading\" />'",
        "'horizontal'",
        "'%'",
        "'auto'",
        "'relative'",
        "'-'",
        "'-transition-timing-function'",
        "'swing'",
        "'100%'",
        "'hidden'",
        "'relative'",
        "'0 auto 0px'",
        "'float'",
        "'horizontal'",
        "'left'",
        "'none'",
        "'none'",
        "'relative'",
        "'width'",
        "'horizontal'",
        "'marginRight'",
        "'vertical'",
        "'marginBottom'",
        "'fade'",
        "'absolute'",
        "'none'",
        "'block'",
        "'<div class=\"bx-controls\" />'",
        "\"all\"",
        "'img, iframe'",
        "'img, iframe'",
        "'img'",
        "'src'",
        "'src'",
        "'?timestamp='",
        "'fade'",
        "'vertical'",
        "'bx-clone'",
        "'bx-clone'",
        "'vertical'",
        "'resize'",
        "'vertical'",
        "'vertical'",
        "'100%'",
        "'horizontal'",
        "'vertical'",
        "'horizontal'",
        "'horizontal'",
        "'vertical'",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'vertical'",
        "'translate3d(0, '",
        "'px, 0)'",
        "'translate3d('",
        "'px, 0, 0)'",
        "'-'",
        "'-transition-duration'",
        "'s'",
        "'slide'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'reset'",
        "'ticker'",
        "'-'",
        "'-transition-timing-function'",
        "'linear'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd'",
        "'resetValue'",
        "'reset'",
        "'slide'",
        "'reset'",
        "'ticker'",
        "'linear'",
        "'resetValue'",
        "'reset'",
        "''",
        "''",
        "'bx-custom-pager'",
        "'bx-default-pager'",
        "'<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"'",
        "'\" class=\"bx-pager-link\">'",
        "'</a></div>'",
        "'<div class=\"bx-pager\" />'",
        "'bx-has-pager'",
        "'a'",
        "'click'",
        "'<a class=\"bx-next\" href=\"\">'",
        "'</a>'",
        "'<a class=\"bx-prev\" href=\"\">'",
        "'</a>'",
        "'click'",
        "'click'",
        "'<div class=\"bx-controls-direction\" />'",
        "'bx-has-controls-direction'",
        "'<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">'",
        "'</a></div>'",
        "'<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">'",
        "'</a></div>'",
        "'<div class=\"bx-controls-auto\" />'",
        "'.bx-start'",
        "'click'",
        "'.bx-stop'",
        "'click'",
        "'bx-has-controls-auto'",
        "'stop'",
        "'start'",
        "'img:first'",
        "'title'",
        "''",
        "'<div class=\"bx-caption\"><span>'",
        "'</span></div>'",
        "'data-slide-index'",
        "'short'",
        "'a'",
        "'active'",
        "'a'",
        "'active'",
        "''",
        "'horizontal'",
        "'reset'",
        "'vertical'",
        "'reset'",
        "'a'",
        "'active'",
        "'a:not(.bx-'",
        "')'",
        "'active'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'disabled'",
        "'next'",
        "'bx-clone'",
        "'bx-clone'",
        "'horizontal'",
        "'reset'",
        "'horizontal'",
        "'horizontal'",
        "'left'",
        "'top'",
        "'next'",
        "'.bx-clone'",
        "'horizontal'",
        "'horizontal'",
        "'ticker'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'fade'",
        "'horizontal'",
        "'reset'",
        "'touchmove'",
        "'fade'",
        "'horizontal'",
        "'reset'",
        "'reset'",
        "'touchend'",
        "'next'",
        "'prev'",
        "'fade'",
        "':visible'",
        "'zIndex'",
        "'zIndex'",
        "'horizontal'",
        "'prev'",
        "'.bx-clone'",
        "'next'",
        "'> .bx-clone'",
        "\"undefined\"",
        "'horizontal'",
        "'slide'",
        "'next'",
        "'prev'",
        "'next'",
        "'stop'",
        "'start'",
        "'.bx-clone'",
        "'height'",
        "'.bx-clone'",
        "\"origStyle\"",
        "\"style\"",
        "\"origStyle\"",
        "'style'",
        "\"origStyle\"",
        "\"style\"",
        "\"origStyle\"",
        "'style'",
        "'.bx-caption'",
        "'resize'"
    ],
    "variables": [
        "plugin",
        "defaults",
        "slider",
        "el",
        "windowWidth",
        "windowHeight",
        "init",
        "div",
        "props",
        "setup",
        "slidesShowing",
        "preloadSelector",
        "loadElements",
        "total",
        "count",
        "start",
        "sliceAppend",
        "slicePrepend",
        "getViewportHeight",
        "height",
        "children",
        "currentIndex",
        "getViewportMaxWidth",
        "width",
        "getSlideWidth",
        "newElWidth",
        "wrapWidth",
        "getNumberSlidesShowing",
        "slidesShowing",
        "childWidth",
        "getPagerQty",
        "pagerQty",
        "breakPoint",
        "counter",
        "getMoveBy",
        "setSlidePosition",
        "lastChild",
        "position",
        "lastShowingIndex",
        "position",
        "position",
        "setPositionProperty",
        "propValue",
        "animateObj",
        "populatePager",
        "pagerHtml",
        "pagerQty",
        "i",
        "linkContent",
        "appendPager",
        "appendControls",
        "appendControlsAuto",
        "appendCaptions",
        "title",
        "clickNextBind",
        "clickPrevBind",
        "clickStartBind",
        "clickStopBind",
        "clickPagerBind",
        "pagerLink",
        "pagerIndex",
        "updatePagerActive",
        "len",
        "updateAfterSlideTransition",
        "position",
        "updateAutoControls",
        "updateDirectionControls",
        "initAuto",
        "timeout",
        "initTicker",
        "startPosition",
        "position",
        "totalDimens",
        "ratio",
        "property",
        "newSpeed",
        "tickerLoop",
        "position",
        "reset",
        "animateProperty",
        "resetValue",
        "initTouch",
        "onTouchStart",
        "orig",
        "onTouchMove",
        "orig",
        "xMovement",
        "yMovement",
        "value",
        "change",
        "change",
        "onTouchEnd",
        "orig",
        "value",
        "distance",
        "distance",
        "resizeWindow",
        "windowWidthNew",
        "windowHeightNew",
        "moveBy",
        "position",
        "lastChild",
        "lastShowingIndex",
        "eq",
        "lastChild",
        "requestEl",
        "value",
        "pagerIndex",
        "pagerIndex"
    ],
    "comments": [
        "GENERAL",
        "TOUCH",
        "PAGER",
        "CONTROLS",
        "AUTO",
        "CAROUSEL",
        "CALLBACKS",
        "support mutltiple elements",
        "create a namespace to be used throughout the plugin",
        "set a reference to our slider element",
        "first get the original window dimens (thanks alot IE)",
        "merge user-supplied options with the defaults",
        "parse slideWidth setting",
        "store the original children",
        "check if actual number of slides is less than minSlides / maxSlides",
        "if random start, set the startSlide setting to random number",
        "store active slide information",
        "store if the slider is in carousel mode (displaying / moving multiple slides)",
        "if carousel, force preloadImages = 'all'",
        "calculate the min / max width thresholds based on min / max number of slides",
        "used to setup and update carousel slides dimensions",
        "store the current state of the slider (if currently animating, working is true)",
        "initialize the controls object",
        "initialize an auto interval",
        "determine which property to use for transitions",
        "determine if hardware acceleration can be used",
        "create our test div element",
        "css transition properties",
        "test for each property",
        "if vertical mode always make maxSlides and minSlides equal",
        "save original style data",
        "perform all DOM / CSS modifications",
        "wrap el in a wrapper",
        "store a namspace reference to .bx-viewport",
        "add a loading div to display while images are loading",
        "set el to a massive width, to hold any needed slides",
        "also strip any margin and padding from el",
        "if using CSS, add the easing property",
        "if not using CSS and no easing value was supplied, use the default JS animation easing (swing)",
        "make modifications to the viewport (.bx-viewport)",
        "make modification to the wrapper (.bx-wrapper)",
        "apply css to all slider children",
        "apply the calculated width after the float is applied to prevent scrollbar interference",
        "if slideMargin is supplied, add the css",
        "if \"fade\" mode, add positioning and z-index CSS",
        "prepare the z-index on the showing element",
        "create an element to contain all slider controls (pager, start / stop, etc)",
        "if captions are requested, add them",
        "check if startSlide is last slide",
        "if video is true, set up the fitVids plugin",
        "set the default preload selector (visible)",
        "only check for control addition if not in \"ticker\" mode",
        "if pager is requested, add it",
        "if controls are requested, add them",
        "if auto is true, and auto controls are requested, add them",
        "if any control option is requested, add the controls wrapper",
        "if ticker mode, do not allow a pager",
        "preload all images, then perform final DOM / CSS modifications that depend on images being loaded",
        "if infinite loop, prepare additional slides",
        "remove the loading DOM element",
        "set the left / top position of \"el\"",
        "if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior",
        "set the viewport height",
        "make sure everything is positioned just right (same as a window resize)",
        "onSliderLoad callback",
        "slider has been fully initialized",
        "bind the resize call to the window",
        "if auto is true, start the show",
        "if ticker is true, start the ticker",
        "if pager is requested, make the appropriate pager link active",
        "check for any updates to the controls (like hideControlOnEnd updates)",
        "if touchEnabled is true, setup the touch events",
        "first determine which children (slides) should be used in our height calculation",
        "if mode is not \"vertical\" and adaptiveHeight is false, include all children",
        "if not carousel, return the single active child",
        "if carousel, return a slice of children",
        "get the individual slide index",
        "add the current slide to the children",
        "cycle through the remaining \"showing\" slides",
        "if looped back to the start",
        "if \"vertical\" mode, calculate the sum of the heights of the children",
        "add user-supplied margins",
        "if not \"vertical\" mode, calculate the max height of the children",
        "start with any user-supplied slide width",
        "get the current viewport width",
        "if slide width was not supplied, or is larger than the viewport use the viewport width",
        "if carousel, use the thresholds to determine the width",
        "newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.maxSlides - 1))) / slider.settings.maxSlides;",
        "if viewport is smaller than minThreshold, return minSlides",
        "if viewport is larger than minThreshold, return maxSlides",
        "if viewport is between min / max thresholds, divide viewport width by first child width",
        "if \"vertical\" mode, slides showing will always be minSlides",
        "if moveSlides is specified by the user",
        "use a while loop to determine pages",
        "when breakpoint goes above children length, counter is the number of pages",
        "if moveSlides is 0 (auto) divide children length by sides showing, then round up",
        "if moveSlides was set by the user and moveSlides is less than number of slides showing",
        "if moveSlides is 0 (auto)",
        "if last slide, not infinite loop, and number of children is larger than specified maxSlides",
        "get the last child's position",
        "set the left position",
        "get the last showing index's position",
        "set the top position",
        "if not last slide",
        "get the position of the first showing slide",
        "check for last slide",
        "set the repective position",
        "use CSS transform",
        "determine the translate3d value",
        "add the CSS transition-duration",
        "set the property value",
        "bind a callback method - executes when CSS transition completes",
        "unbind the callback",
        "make the transition use 'linear'",
        "bind a callback method - executes when CSS transition completes",
        "unbind the callback",
        "reset the position",
        "start the loop again",
        "use JS animate",
        "run the recursive loop after animation",
        "loop through each pager item",
        "if a buildPager function is supplied, use it to get pager link value, else use index + 1",
        "var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;",
        "add the markup to the string",
        "populate the pager element with pager links",
        "create the pager DOM element",
        "if a pager selector was supplied, populate it with the pager",
        "if no pager selector was supplied, add it after the wrapper",
        "populate the pager",
        "assign the pager click binding",
        "bind click actions to the controls",
        "if nextSlector was supplied, populate it",
        "if prevSlector was supplied, populate it",
        "if no custom selectors were supplied",
        "add the controls to the DOM",
        "add the control elements to the directionEl",
        "slider.viewport.append(slider.controls.directionEl);",
        "add the controls to the DOM",
        "bind click actions to the controls",
        "if autoControlsCombine, insert only the \"start\" control",
        "if autoControlsCombine is false, insert both controls",
        "if auto controls selector was supplied, populate it with the controls",
        "if auto controls selector was not supplied, add it after the wrapper",
        "update the auto controls",
        "cycle through each child",
        "get the image title attribute",
        "append the caption",
        "if auto show is running, stop it",
        "if auto show is running, stop it",
        "if auto show is running, stop it",
        "if clicked pager link is not active, continue with the goToSlide call",
        "if \"short\" pager type",
        "nb of children",
        "remove all pager active classes",
        "apply the active class for all pagers",
        "if infinte loop is true",
        "first slide",
        "set the new position",
        "carousel, last slide",
        "last slide",
        "declare that the transition is complete",
        "onSlideAfter callback",
        "if autoControlsCombine is true, replace the current control with the new state",
        "if autoControlsCombine is false, apply the \"active\" class to the appropriate control",
        "if first slide",
        "if last slide",
        "if any slide in the middle",
        "if autoDelay was supplied, launch the auto show using a setTimeout() call",
        "if autoDelay was not supplied, start the auto show normally",
        "if autoHover is requested",
        "on el hover",
        "if the auto show is currently playing (has an active interval)",
        "stop the auto show and pass true agument which will prevent control update",
        "create a new autoPaused value which will be used by the relative \"mouseout\" event",
        "if the autoPaused value was created be the prior \"mouseover\" event",
        "start the auto show and pass true agument which will prevent control update",
        "reset the autoPaused value",
        "if autoDirection is \"next\", append a clone of the entire slider",
        "if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position",
        "do not allow controls in ticker mode",
        "if autoHover is requested",
        "on el hover",
        "calculate the total width of children (used to calculate the speed ratio)",
        "calculate the speed ratio (used to determine the new speed to finish the paused animation)",
        "determine which property to use",
        "calculate the new speed",
        "start the ticker loop",
        "if \"next\" animate left position to last child, then reset left to 0",
        "if \"prev\" animate left position to 0, then reset left to first non-clone child",
        "initialize object to contain all touch values",
        "record the original position when touch starts",
        "record the starting touch x, y coordinates",
        "bind a \"touchmove\" event to the viewport",
        "bind a \"touchend\" event to the viewport",
        "if scrolling on y axis, do not prevent default",
        "x axis swipe",
        "y axis swipe",
        "if horizontal, drag along x axis",
        "if vertical, drag along y axis",
        "record end x, y positions",
        "if fade mode, check if absolute x distance clears the threshold",
        "not fade mode",
        "calculate distance and el's animate property",
        "if not infinite loop and first / last slide, do not attempt a slide transition",
        "check if distance clears threshold",
        "el.animate(property, 200);",
        "get the new window dimens (again, thank you IE)",
        "make sure that it is a true window resize",
        "are resized. Can you just die already?*",
        "set the new window dimens",
        "update all dynamic elements",
        "if plugin is currently in motion, ignore request",
        "declare that plugin is in motion",
        "store the old index",
        "if slideIndex is less than zero, set active index to last child (this happens during infinite loop)",
        "if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)",
        "set active index to requested slide",
        "onSlideBefore, onSlideNext, onSlidePrev callbacks",
        "check if last slide",
        "update the pager with active class",
        "// check for direction control update",
        "if slider is set to mode: \"fade\"",
        "if adaptiveHeight is true and next height is different from current height, animate to the new height",
        "fade out the visible child and reset its z-index value",
        "fade in the newly requested slide",
        "slider mode is not \"fade\"",
        "if adaptiveHeight is true and next height is different from current height, animate to the new height",
        "if carousel and not infinite loop",
        "get the last child position",
        "calculate the position of the last slide",
        "get last showing index position",
        "horizontal carousel, going previous while on first slide (infiniteLoop mode)",
        "get the last child position",
        "if infinite loop and \"Next\" is clicked on the last slide",
        "get the last clone position",
        "normal non-zero requests",
        "If the position doesn't exist \n\t\t\t\t * (e.g. if you destroy the slider on a next click),\n\t\t\t\t * it doesn't throw an error.",
        "plugin values to be animated",
        "if infiniteLoop is false and last page is showing, disregard call",
        "if infiniteLoop is false and last page is showing, disregard call",
        "if an interval already exists, disregard call",
        "create an interval",
        "if auto controls are displayed and preventControlUpdate is not true",
        "if no interval exists, disregard call",
        "clear the interval",
        "if auto controls are displayed and preventControlUpdate is not true",
        "resize all children in ratio to new screen size",
        "adjust the height",
        "update the slide position",
        "if active.last was true before the screen resize, we want",
        "to keep it last no matter what screen size we end on",
        "if the active index (page) no longer exists due to the resize, simply set the index as last",
        "if a pager is being displayed and a custom pager is not being used, update it",
        "don't do anything if slider has already been destroyed",
        "returns the current jQuery object"
    ],
    "docstrings": [
        "* BxSlider v4.1.1 - Fully loaded, responsive content slider\n * http://bxslider.com\n *\n * Copyright 2012, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com\n * Written while drinking Belgian ales and listening to jazz\n *\n * Released under the WTFPL license - http://sam.zoy.org/wtfpl/",
        "* Makes slideshow responsive",
        "* ===================================================================================\n\t\t * = PRIVATE FUNCTIONS\n\t\t * ===================================================================================",
        "* Initializes namespace settings to be used throughout plugin",
        "* Performs all DOM and CSS modifications",
        "* Start the slider",
        "* Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value",
        "* Returns the calculated width to be used for the outer wrapper / viewport",
        "* Returns the calculated width to be applied to each slide",
        "* Returns the number of slides currently visible in the viewport (includes partially visible slides)",
        "* Returns the number of pages (one full viewport of slides is one \"page\")",
        "* Returns the number of indivual slides by which to shift the slider",
        "* Sets the slider's (el) left or top position",
        "* Sets the el's animating property position (which in turn will sometimes animate el).\n\t\t * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n\t\t *\n\t\t * @param value (int) \n\t\t *  - the animating property's value\n\t\t *\n\t\t * @param type (string) 'slider', 'reset', 'ticker'\n\t\t *  - the type of instance for which the function is being\n\t\t *\n\t\t * @param duration (int) \n\t\t *  - the amount of time (in ms) the transition should occupy\n\t\t *\n\t\t * @param params (array) optional\n\t\t *  - an optional parameter containing any variables that need to be passed in",
        "* Populates the pager with proper amount of pages",
        "* Appends the pager to the controls element",
        "* Appends prev / next controls to the controls element",
        "* Appends start / stop auto controls to the controls element",
        "* Appends image captions to the DOM",
        "* Click next binding\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Click prev binding\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Click start binding\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Click stop binding\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Click pager binding\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Updates the pager links with an active class\n\t\t *\n\t\t * @param slideIndex (int) \n\t\t *  - index of slide to make active",
        "* Performs needed actions after a slide transition",
        "* Updates the auto controls state (either active, or combined switch)\n\t\t *\n\t\t * @param state (string) \"start\", \"stop\"\n\t\t *  - the new state of the auto show",
        "* Updates the direction controls (checks if either should be hidden)",
        "* Initialzes the auto process",
        "* Initialzes the ticker process",
        "* Runs a continuous loop, news ticker-style",
        "* Initializes touch events",
        "* Event handler for \"touchstart\"\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Event handler for \"touchmove\"\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Event handler for \"touchend\"\n\t\t *\n\t\t * @param e (event) \n\t\t *  - DOM event object",
        "* Window resize event callback",
        "*we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements",
        "* ===================================================================================\n\t\t * = PUBLIC FUNCTIONS\n\t\t * ===================================================================================",
        "* Performs slide transition to the specified slide\n\t\t *\n\t\t * @param slideIndex (int) \n\t\t *  - the destination slide's index (zero-based)\n\t\t *\n\t\t * @param direction (string) \n\t\t *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")",
        "* Transitions to the next slide in the show",
        "* Transitions to the prev slide in the show",
        "* Starts the auto show\n\t\t *\n\t\t * @param preventControlUpdate (boolean) \n\t\t *  - if true, auto controls state will not be updated",
        "* Stops the auto show\n\t\t *\n\t\t * @param preventControlUpdate (boolean) \n\t\t *  - if true, auto controls state will not be updated",
        "* Returns current slide index (zero-based)",
        "* Returns number of slides in show",
        "* Update all dynamic slider elements",
        "* Destroy the current instance of the slider (revert everything back to original state)",
        "* Reload the slider (revert all DOM changes, and re-initialize)"
    ],
    "functions": [],
    "classes": []
}