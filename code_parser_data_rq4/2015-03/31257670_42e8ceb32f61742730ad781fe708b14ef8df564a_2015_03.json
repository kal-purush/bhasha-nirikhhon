{
    "identifiers": [
        "socket",
        "request",
        "rest",
        "parsedRequest",
        "request",
        "request",
        "split",
        "prefix",
        "apps",
        "keys",
        "resource",
        "startswith",
        "prefix",
        "prefix",
        "resource",
        "len",
        "prefix",
        "apps",
        "prefix",
        "resource",
        "len",
        "prefix",
        "myApp",
        "resource",
        "hostname",
        "port",
        "apps",
        "apps",
        "app",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "mySocket",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_REUSEADDR",
        "mySocket",
        "bind",
        "hostname",
        "port",
        "mySocket",
        "listen",
        "mySocket",
        "accept",
        "recvSocket",
        "recv",
        "request",
        "select",
        "request",
        "theApp",
        "parse",
        "request",
        "rest",
        "theApp",
        "process",
        "parsedRequest",
        "recvSocket",
        "send",
        "returnCode",
        "htmlAnswer",
        "recvSocket",
        "close"
    ],
    "literals": [
        "\"200 OK\"",
        "\"<html><body><h1>\"",
        "\"Dumb application just saying 'It works!'\"",
        "\"</h1><p>App id: \"",
        "\"<p></body></html>\"",
        "' '",
        "\"Running app for prefix: \"",
        "\", rest of resource: \"",
        "\".\"",
        "\"Running default app\"",
        "'Waiting for connections'",
        "'HTTP request received (going to parse and process):'",
        "'Answering back...'",
        "\"HTTP/1.1 \"",
        "\" \\r\\n\\r\\n\"",
        "\"\\r\\n\""
    ],
    "variables": [
        "resource",
        "apps",
        "myApp",
        "mySocket",
        "recvSocket",
        "address",
        "request",
        "theApp",
        "rest",
        "parsedRequest",
        "returnCode",
        "htmlAnswer"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "Create a TCP objet socket and bind it to a port",
        "Queue a maximum of 5 TCP connection requests",
        "Accept connections, read incoming data, and call",
        "parse and process methods (in a loop)"
    ],
    "docstrings": [
        "\"\"\"\nwebAppMulti class\n\nRoot for hierarchy of classes implementing web applications\nEach class can dispatch to serveral web applications, depending\non the prefix of the resource name\n\nCopyright Jesus M. Gonzalez-Barahona, Gregorio Robles (2009-15)\njgb @ gsyc.es\nTSAI, SAT and SARO subjects (Universidad Rey Juan Carlos)\nOctober 2009, February 2015\n\"\"\"",
        "\"\"\"Application to which webApp dispatches. Does the real work\n\n    Usually real applications inherit from this class, and redefine\n    parse and process methods\"\"\"",
        "\"\"\"Parse the received request, extracting the relevant information.\n\n        request: HTTP request received from the client\n        rest:    rest of the resource name after stripping the prefix\n        \"\"\"",
        "\"\"\"Process the relevant elements of the request.\n\n        Returns the HTTP code for the reply, and an HTML page.\n        \"\"\"",
        "\"\"\"Root of a hierarchy of classes implementing web applications\n\n    This class does almost nothing. Usually, new classes will\n    inherit from it, and by redefining \"parse\" and \"process\" methods\n    will implement the logic of a web application in particular.\n    \"\"\"",
        "\"\"\"Selects the application (in the app hierarchy) to run.\n\n        Having into account the prefix of the resource obtained\n        in the request, return the class in the app hierarchy to be\n        invoked. If prefix is not found, return app class\n        \"\"\"",
        "\"\"\"Initialize the web application.\"\"\""
    ],
    "functions": [
        "parse",
        "process",
        "select"
    ],
    "classes": [
        "app",
        "webApp"
    ]
}