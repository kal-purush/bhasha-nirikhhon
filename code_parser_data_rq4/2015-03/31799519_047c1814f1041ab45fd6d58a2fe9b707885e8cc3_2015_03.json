{
    "identifiers": [
        "webapp2",
        "jinja2",
        "logging",
        "os",
        "urllib",
        "google",
        "appengine",
        "ext",
        "blobstore",
        "google",
        "appengine",
        "ext",
        "webapp",
        "blobstore_handlers",
        "google",
        "appengine",
        "api",
        "images",
        "models",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "jinja2",
        "Environment",
        "loader",
        "jinja2",
        "FileSystemLoader",
        "template_dir",
        "autoescape",
        "template",
        "env",
        "get_template",
        "template",
        "t",
        "render",
        "webapp2",
        "RequestHandler",
        "a",
        "kw",
        "response",
        "write",
        "a",
        "kw",
        "template",
        "kw",
        "response",
        "write",
        "render_template",
        "template",
        "kw",
        "BaseHandler",
        "ImageInfo",
        "query",
        "fetch",
        "render",
        "all_image_info",
        "all_image_info",
        "BaseHandler",
        "blobstore",
        "create_upload_url",
        "render",
        "upload_url",
        "upload_url",
        "blobstore_handlers",
        "BlobstoreUploadHandler",
        "get_uploads",
        "logging",
        "info",
        "upload_files",
        "upload_files",
        "ImageInfo",
        "blob_key",
        "blob_info",
        "key",
        "image_info",
        "put",
        "redirect",
        "blob_info",
        "key",
        "blobstore_handlers",
        "BlobstoreDownloadHandler",
        "template",
        "kw",
        "response",
        "write",
        "render_template",
        "template",
        "kw",
        "resource",
        "logging",
        "info",
        "resource",
        "urllib",
        "unquote",
        "resource",
        "blobstore",
        "BlobInfo",
        "get",
        "resource",
        "images",
        "get_serving_url",
        "blob_info",
        "render",
        "url",
        "url",
        "BaseHandler",
        "Post",
        "query",
        "fetch",
        "render",
        "all_posts",
        "all_posts",
        "request",
        "get",
        "Post",
        "title",
        "title",
        "post",
        "put",
        "redirect",
        "post",
        "key",
        "id",
        "BaseHandler",
        "post_id",
        "Post",
        "get_by_id",
        "post_id",
        "render",
        "post",
        "post",
        "BaseHandler",
        "post_id",
        "Post",
        "get_by_id",
        "post_id",
        "ImageInfo",
        "query",
        "ImageInfo",
        "post_key",
        "post",
        "key",
        "fetch",
        "img",
        "post_images",
        "image_urls",
        "append",
        "images",
        "get_serving_url",
        "img",
        "blob_key",
        "render",
        "post",
        "post",
        "image_urls",
        "image_urls",
        "blobstore_handlers",
        "BlobstoreUploadHandler",
        "template",
        "kw",
        "response",
        "write",
        "render_template",
        "template",
        "kw",
        "post_id",
        "Post",
        "get_by_id",
        "post_id",
        "blobstore",
        "create_upload_url",
        "post_id",
        "ImageInfo",
        "query",
        "fetch",
        "render",
        "post",
        "post",
        "upload_url",
        "upload_url",
        "all_image_info",
        "all_image_info",
        "blobstore_handlers",
        "BlobstoreUploadHandler",
        "post_id",
        "Post",
        "get_by_id",
        "post_id",
        "get_uploads",
        "uploaded_file",
        "key",
        "logging",
        "info",
        "blob_key",
        "uploaded_file",
        "ImageInfo",
        "blob_key",
        "blob_key",
        "post_key",
        "post",
        "key",
        "image",
        "put",
        "webapp2",
        "WSGIApplication",
        "Front",
        "NewPost",
        "PostPage",
        "PostEdit",
        "SimpleMethod",
        "UploadHandler",
        "NewImage",
        "ImageUploadHandler",
        "ServeHandler",
        "debug"
    ],
    "literals": [
        "'templates'",
        "'front.html'",
        "'/upload'",
        "'simple-uploader.html'",
        "'image'",
        "'/serve/%s'",
        "'raw.html'",
        "'new-post.html'",
        "'title'",
        "'/post/%s'",
        "'post-edit.html'",
        "'post-page.html'",
        "'/image-upload/%s'",
        "'new-image.html'",
        "'my-image'",
        "'/'",
        "'/new-post'",
        "'/post/([0-9]+)/?'",
        "'/post/([0-9]+)/edit/?'",
        "'/simple'",
        "'/upload'",
        "'/new-image/([0-9]+)/?'",
        "'/image-upload/([0-9]+)/?'",
        "'/serve/([^/]+)?'"
    ],
    "variables": [
        "template_dir",
        "env",
        "t",
        "all_image_info",
        "upload_url",
        "upload_files",
        "blob_info",
        "image_info",
        "resource",
        "blob_info",
        "url",
        "all_posts",
        "title",
        "post",
        "post",
        "post",
        "post_images",
        "image_urls",
        "post",
        "upload_url",
        "all_image_info",
        "post",
        "uploaded_file",
        "blob_key",
        "image",
        "app"
    ],
    "comments": [
        "Set up template directory with the Jinja environment",
        "used by self.render()",
        "A basic upload method from the docs",
        "Upload Handler",
        "self.get_uploads() returns a list of BlobInfo objects",
        "'image' is the name of the input field in the form",
        "[<google.appengine.ext.blobstore.blobstore.BlobInfo object at 0x105c63a50>]",
        "a BlobInfo object",
        "logging.info(upload_files[0])",
        "select the first BlobInfo object",
        "create a Photo entity with the blob key of uploaded file",
        "redirect control to the ServerHander",
        "Download / Blob-serving Handler",
        "serves the image using given the blob_info.key()",
        "AgVNdqxMr5dUXnxPzPWR-A==",
        "unquote replaces %xx escapes by their single-character equivalent",
        "example: unquote('%7Ehome') yields '~home'",
        "get the blob info from a given BlobKey object",
        "(is resource a BlobKey Object?)",
        "takes BlobKey obj, string key, or BlobInfo obj as parameter",
        "and returns the blob",
        "self.send_blob(blob_info)",
        "New Post Form Page",
        "self.redirect('/new-post')",
        "NEXTTTTTTTTTTTTTTTTTTTTTTT todo:",
        "query for images where their post_id property == this post's id",
        "extract the url via blobkey",
        "and add it to this template",
        "queries for all images relevant to this post",
        "run get_serving_url() on all blob_keys",
        "append each url to image_urls list",
        "Create an image given a post_id",
        "this, the image is in reference to a post",
        "include the post_id in the upload_url",
        "see regex route handler for image-upload/post_id",
        "this query to show all images uploaded (for debugging)",
        "handles upload of images which are in reference of a post",
        "the post_id is passed in the upload url",
        "get post by id",
        "get the BlobInfo object from the uploaded file",
        "handles simple upload",
        "presents a form for image upload",
        "handles upload of images in reference to posts"
    ],
    "docstrings": [],
    "functions": [
        "render_template",
        "write",
        "render",
        "get",
        "get",
        "post",
        "render",
        "get",
        "get",
        "post",
        "get",
        "get",
        "render",
        "get",
        "post"
    ],
    "classes": [
        "BaseHandler",
        "Front",
        "SimpleMethod",
        "UploadHandler",
        "ServeHandler",
        "NewPost",
        "PostEdit",
        "PostPage",
        "NewImage",
        "ImageUploadHandler"
    ]
}