{
    "identifiers": [
        "sys",
        "os",
        "subprocess",
        "time",
        "signal",
        "os",
        "getpid",
        "signum",
        "stack",
        "open",
        "qemu_pid",
        "pidfile",
        "read",
        "os",
        "killpg",
        "pid",
        "signal",
        "SIGTERM",
        "pidfile",
        "close",
        "len",
        "hugetlbfs_dir",
        "hugetlbfs_dir",
        "os",
        "access",
        "os",
        "F_OK",
        "open",
        "f",
        "readline",
        "line",
        "line",
        "split",
        "line_split",
        "line_split",
        "f",
        "readline",
        "exit",
        "f",
        "close",
        "len",
        "huge_mount",
        "exit",
        "huge_mount",
        "os",
        "access",
        "us_vhost_path",
        "os",
        "F_OK",
        "os",
        "open",
        "us_vhost_path",
        "os",
        "O_RDWR",
        "us_vhost_path",
        "exit",
        "fd",
        "arg",
        "fd_list",
        "arg",
        "split",
        "opt",
        "netdev_opts",
        "opt",
        "new_opts",
        "append",
        "opt",
        "vhost_in_use",
        "new_opts",
        "append",
        "get_vhost_fd",
        "new_opts",
        "append",
        "new_fd",
        "fd_list",
        "append",
        "new_fd",
        "opt",
        "new_opts",
        "len",
        "s",
        "s",
        "s",
        "opt",
        "s",
        "fd_list",
        "vhost_in_use",
        "len",
        "sys",
        "argv",
        "num",
        "num_cmd_args",
        "sys",
        "argv",
        "num",
        "arg",
        "len",
        "fd_list",
        "new_args",
        "append",
        "arg",
        "num",
        "sys",
        "argv",
        "num",
        "modify_netdev_arg",
        "arg",
        "new_args",
        "append",
        "mod_arg",
        "num_vhost_devs",
        "len",
        "fd_list",
        "num",
        "sys",
        "argv",
        "num",
        "arg",
        "new_args",
        "append",
        "arg",
        "num",
        "sys",
        "argv",
        "num",
        "flag",
        "vhost_flags",
        "join",
        "new_arg",
        "flag",
        "new_args",
        "append",
        "new_arg",
        "new_args",
        "append",
        "arg",
        "arg",
        "new_args",
        "append",
        "arg",
        "arg",
        "new_args",
        "append",
        "arg",
        "new_args",
        "append",
        "arg",
        "num",
        "emul_call",
        "emul_path",
        "emul_call",
        "len",
        "fd_list",
        "mem_prealloc_set",
        "emul_call",
        "len",
        "fd_list",
        "mem_path_set",
        "find_huge_mount",
        "join",
        "mp",
        "emul_call",
        "mp",
        "emul_call",
        "opt",
        "emul_opts_user",
        "emul_call",
        "opt",
        "emul_call",
        "len",
        "fd_list",
        "opt",
        "emul_opts_user_vhost",
        "emul_call",
        "opt",
        "emul_call",
        "iter",
        "new_args",
        "next",
        "iter_args",
        "arg",
        "iter_args",
        "emul_call",
        "arg",
        "emul_call",
        "emul_call",
        "qemu_pid",
        "subprocess",
        "Popen",
        "emul_call",
        "shell",
        "preexec_fn",
        "os",
        "setsid",
        "sig",
        "signal",
        "SIGTERM",
        "signal",
        "SIGINT",
        "signal",
        "SIGHUP",
        "signal",
        "SIGQUIT",
        "signal",
        "signal",
        "sig",
        "kill_qemu_process",
        "process",
        "wait",
        "fd",
        "fd_list",
        "os",
        "close",
        "fd",
        "os",
        "access",
        "qemu_pid",
        "os",
        "F_OK",
        "os",
        "remove",
        "qemu_pid",
        "main"
    ],
    "literals": [
        "\"/usr/local/bin/qemu-system-x86_64\"",
        "\"/dev/usvhost-1\"",
        "\"\"",
        "\"csum=off\"",
        "\"gso=off\"",
        "\"guest_tso4=off\"",
        "\"guest_tso6=off\"",
        "\"guest_ecn=off\"",
        "\"/tmp/%d-qemu.pid\"",
        "'r'",
        "\"\"",
        "\"/proc/mounts\"",
        "\"/proc/mounts\"",
        "\"r\"",
        "\" \"",
        "'hugetlbfs'",
        "\"/proc/mounts not found\"",
        "\"Failed to find hugetlbfs mount point\"",
        "\"US-Vhost file %s not found\"",
        "''",
        "\",\"",
        "\"vhost\"",
        "'vhost=on'",
        "'vhostfd='",
        "','",
        "''",
        "'-netdev'",
        "'-device'",
        "''",
        "','",
        "'-mem-prealloc'",
        "'-mem-path'",
        "\" \"",
        "\"-mem-prealloc \"",
        "\"\"",
        "\"-mem-path \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"-pidfile %s \"",
        "\"__main__\""
    ],
    "variables": [
        "emul_path",
        "us_vhost_path",
        "emul_opts_user",
        "emul_opts_user_vhost",
        "use_huge_all",
        "hugetlbfs_dir",
        "fd_list",
        "vhost_flags",
        "qemu_pid",
        "pidfile",
        "pid",
        "huge_mount",
        "f",
        "line",
        "line_split",
        "huge_mount",
        "line",
        "fd",
        "vhost_in_use",
        "s",
        "new_opts",
        "netdev_opts",
        "vhost_in_use",
        "new_fd",
        "new_args",
        "num_cmd_args",
        "emul_call",
        "mem_prealloc_set",
        "mem_path_set",
        "num",
        "arg",
        "num_vhost_devs",
        "arg",
        "mod_arg",
        "arg",
        "new_arg",
        "new_arg",
        "mem_prealloc_set",
        "mem_path_set",
        "mp",
        "mp",
        "iter_args",
        "process"
    ],
    "comments": [
        "!/usr/bin/python",
        "",
        "BSD LICENSE",
        "",
        "Copyright(c) 2010-2014 Intel Corporation. All rights reserved.",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions",
        "are met:",
        "",
        "notice, this list of conditions and the following disclaimer.",
        "notice, this list of conditions and the following disclaimer in",
        "the documentation and/or other materials provided with the",
        "distribution.",
        "contributors may be used to endorse or promote products derived",
        "from this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS",
        "\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT",
        "LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR",
        "A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT",
        "OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,",
        "SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT",
        "LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,",
        "DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY",
        "THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT",
        "(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "",
        "",
        "This script is designed to modify the call to the QEMU emulator",
        "to support userspace vhost when starting a guest machine through",
        "libvirt with vhost enabled. The steps to enable this are as follows",
        "and should be run as root:",
        "",
        "1. Place this script in a libvirtd's binary search PATH ($PATH)",
        "A good location would be in the same directory that the QEMU",
        "binary is located",
        "",
        "2. Ensure that the script has the same owner/group and file",
        "permissions as the QEMU binary",
        "",
        "3. Update the VM xml file using \"virsh edit VM.xml\"",
        "",
        "3.a) Set the VM to use the launch script",
        "",
        "Set the emulator path contained in the",
        "<emulator><emulator/> tags",
        "",
        "e.g replace <emulator>/usr/bin/qemu-kvm<emulator/>",
        "with    <emulator>/usr/bin/qemu-wrap.py<emulator/>",
        "",
        "3.b) Set the VM's device's to use vhost-net offload",
        "",
        "<interface type=\"network\">",
        "<model type=\"virtio\"/>",
        "<driver name=\"vhost\"/>",
        "<interface/>",
        "",
        "4. Enable libvirt to access our userpace device file by adding it to",
        "controllers cgroup for libvirtd using the following steps",
        "",
        "4.a) In /etc/libvirt/qemu.conf add/edit the following lines:",
        "1) cgroup_controllers = [ ... \"devices\", ... ]",
        "2) clear_emulator_capabilities = 0",
        "3) user = \"root\"",
        "4) group = \"root\"",
        "5) cgroup_device_acl = [",
        "\"/dev/null\", \"/dev/full\", \"/dev/zero\",",
        "\"/dev/random\", \"/dev/urandom\",",
        "\"/dev/ptmx\", \"/dev/kvm\", \"/dev/kqemu\",",
        "\"/dev/rtc\", \"/dev/hpet\", \"/dev/net/tun\",",
        "\"/dev/<devbase-name>-<index>\",",
        "\"/dev/hugepages\"",
        "]",
        "",
        "4.b) Disable SELinux or set to permissive mode",
        "",
        "4.c) Mount cgroup device controller",
        "\"mkdir /dev/cgroup\"",
        "\"mount -t cgroup none /dev/cgroup -o devices\"",
        "",
        "4.d) Set hugetlbfs_mount variable - ( Optional )",
        "VMs using userspace vhost must use hugepage backed",
        "memory. This can be enabled in the libvirt XML",
        "config by adding a memory backing section to the",
        "XML config e.g.",
        "<memoryBacking>",
        "<hugepages/>",
        "</memoryBacking>",
        "This memory backing section should be added after the",
        "<memory> and <currentMemory> sections. This will add",
        "flags \"-mem-prealloc -mem-path <path>\" to the QEMU",
        "command line. The hugetlbfs_mount variable can be used",
        "to override the default <path> passed through by libvirt.",
        "",
        "if \"-mem-prealloc\" or \"-mem-path <path>\" are not passed",
        "through and a vhost device is detected then these options will",
        "be automatically added by this script. This script will detect",
        "the system hugetlbfs mount point to be used for <path>. The",
        "default <path> for this script can be overidden by the",
        "hugetlbfs_dir variable in the configuration section of this script.",
        "",
        "",
        "4.e) Restart the libvirtd system process",
        "e.g. on Fedora \"systemctl restart libvirtd.service\"",
        "",
        "",
        "4.f) Edit the Configuration Parameters section of this script",
        "to point to the correct emulator location and set any",
        "addition options",
        "",
        "The script modifies the libvirtd Qemu call by modifying/adding",
        "options based on the configuration parameters below.",
        "NOTE:",
        "emul_path and us_vhost_path must be set",
        "All other parameters are optional",
        "",
        "",
        "Configuration Parameters",
        "",
        "Path to QEMU binary",
        "Path to userspace vhost device file",
        "This filename should match the --dev-basename --dev-index parameters of",
        "the command used to launch the userspace vhost sample application e.g.",
        "if the sample app lauch command is:",
        "./build/vhost-switch ..... --dev-basename usvhost --dev-index 1",
        "then this variable should be set to:",
        "us_vhost_path = \"/dev/usvhost-1\"",
        "List of additional user defined emulation options. These options will",
        "be added to all Qemu calls",
        "List of additional user defined emulation options for vhost only.",
        "These options will only be added to vhost enabled guests",
        "For all VHOST enabled VMs, the VM memory is preallocated from hugetlbfs",
        "Set this variable to one to enable this option for all VMs",
        "Instead of autodetecting, override the hugetlbfs directory by setting",
        "this variable",
        "",
        "",
        "",
        "List of open userspace vhost file descriptors",
        "additional virtio device flags when using userspace vhost",
        "String of the path to the Qemu process pid",
        "",
        "Signal haldler to kill Qemu subprocess",
        "",
        "",
        "Find the system hugefile mount point.",
        "Note:",
        "if multiple hugetlbfs mount points exist",
        "then the first one found will be used",
        "",
        "",
        "Get a userspace Vhost file descriptor",
        "",
        "",
        "Check for vhostfd. if found then replace",
        "with our own vhost fd and append any vhost",
        "flags onto the end",
        "",
        "check if vhost is used",
        "if using vhost append vhost options",
        "append vhost on option",
        "append vhostfd ption",
        "concatenate all options",
        "",
        "Main",
        "",
        "parse the parameters",
        "Check netdev +1 parameter for vhostfd",
        "append vhost flags if this is a vhost device",
        "and -device is the next arg",
        "i.e -device -opt1,-opt2,...,-opt3,%vhost",
        "Set Qemu binary location",
        "Add prealloc mem options if using vhost and not already added",
        "Add mempath mem options if using vhost and not already added",
        "Detect and add hugetlbfs mount point",
        "add user options",
        "Add add user vhost only options",
        "Add updated libvirt options",
        "skip 1st arg i.e. call to this script",
        "Call QEMU",
        "Close usvhost files",
        "Cleanup temporary files"
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright",
        "* Redistributions in binary form must reproduce the above copyright",
        "* Neither the name of Intel Corporation nor the names of its",
        "****** Do Not Modify Below this Line ******"
    ],
    "functions": [
        "kill_qemu_process",
        "find_huge_mount",
        "get_vhost_fd",
        "modify_netdev_arg",
        "main"
    ],
    "classes": []
}