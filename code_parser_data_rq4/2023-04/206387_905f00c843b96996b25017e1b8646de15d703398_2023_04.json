{
    "identifiers": [
        "org",
        "apache",
        "activemq",
        "web",
        "async",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicBoolean",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicLong",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicReference",
        "javax",
        "servlet",
        "AsyncContext",
        "javax",
        "servlet",
        "AsyncEvent",
        "javax",
        "servlet",
        "AsyncListener",
        "javax",
        "servlet",
        "DispatcherType",
        "javax",
        "servlet",
        "ServletRequest",
        "javax",
        "servlet",
        "ServletRequestWrapper",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "LOG",
        "LoggerFactory",
        "getLogger",
        "ACTIVEMQ_ASYNC_SERVLET_REQUEST",
        "request",
        "contextRef",
        "dispatched",
        "expired",
        "timeoutMs",
        "request",
        "request",
        "request",
        "context",
        "getContext",
        "context",
        "complete",
        "dispatched",
        "expired",
        "context",
        "request",
        "startAsync",
        "contextRef",
        "context",
        "context",
        "setTimeout",
        "timeoutMs",
        "get",
        "context",
        "addListener",
        "context",
        "getContext",
        "dispatched",
        "context",
        "dispatch",
        "name",
        "attribute",
        "request",
        "setAttribute",
        "name",
        "attribute",
        "timeoutMs",
        "timeoutMs",
        "timeoutMs",
        "request",
        "getDispatcherType",
        "DispatcherType",
        "ASYNC",
        "expired",
        "get",
        "dispatched",
        "get",
        "contextRef",
        "get",
        "Override",
        "LOG",
        "isDebugEnabled",
        "LOG",
        "debug",
        "Override",
        "expired",
        "LOG",
        "isDebugEnabled",
        "LOG",
        "debug",
        "Override",
        "error",
        "getThrowable",
        "error",
        "LOG",
        "warn",
        "error",
        "getMessage",
        "LOG",
        "isDebugEnabled",
        "LOG",
        "debug",
        "error",
        "getMessage",
        "error",
        "Override",
        "LOG",
        "isDebugEnabled",
        "LOG",
        "debug",
        "context",
        "contextRef",
        "get",
        "context",
        "context",
        "request",
        "Objects",
        "requireNonNull",
        "request",
        "Optional",
        "ofNullable",
        "request",
        "getAttribute",
        "ACTIVEMQ_ASYNC_SERVLET_REQUEST",
        "sr",
        "sr",
        "orElseGet",
        "asyncRequest",
        "unwrap",
        "request",
        "request",
        "setAttribute",
        "ACTIVEMQ_ASYNC_SERVLET_REQUEST",
        "asyncRequest",
        "asyncRequest",
        "request",
        "Objects",
        "requireNonNull",
        "request",
        "request",
        "request",
        "request",
        "getRequest",
        "request"
    ],
    "literals": [
        "\"activemq.async.servlet.request\"",
        "\"ActiveMQAsyncRequest \"",
        "\" completed.\"",
        "\"ActiveMQAsyncRequest \"",
        "\" timeout.\"",
        "\"ActiveMQAsyncRequest \"",
        "\" error: {}\"",
        "\"ActiveMQAsyncRequest \"",
        "\" async started.\"",
        "\"Async request has not been started.\"",
        "\"ServletRequest must not be null\"",
        "\"ServletRequest must not be null\""
    ],
    "variables": [
        "request"
    ],
    "comments": [
        "Reset previous state",
        "If it's a wrapper object then unwrap to get the source request"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Wrapper object to hold and track Async servlet requests. This is\n * a replacement for the deprecated/removed Jetty Continuation\n * API as that has long been replaced by the Servlet Async api.\n *",
        "* Look up the existing async request or create/ store a new request that be referenced later\n     * @param request the ServletRequest\n     * @return the existing or new ActiveMQAsyncRequest"
    ],
    "functions": [
        "AsyncServletRequest",
        "complete",
        "startAsync",
        "dispatch",
        "setAttribute",
        "setTimeoutMs",
        "isInitial",
        "isExpired",
        "isDispatched",
        "AsyncContext",
        "getAsyncContext",
        "onComplete",
        "onTimeout",
        "onError",
        "onStartAsync",
        "AsyncContext",
        "getContext",
        "AsyncServletRequest",
        "getAsyncRequest",
        "ServletRequest",
        "unwrap"
    ],
    "classes": [
        "AsyncServletRequest"
    ]
}