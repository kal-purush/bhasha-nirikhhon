{
    "identifiers": [
        "logging",
        "os",
        "urllib",
        "request",
        "xml",
        "etree",
        "ElementTree",
        "ET",
        "click",
        "msc_pygeoapi",
        "cli_options",
        "msc_pygeoapi",
        "connector",
        "elasticsearch_",
        "ElasticsearchConnector",
        "msc_pygeoapi",
        "env",
        "MSC_PYGEOAPI_CACHEDIR",
        "msc_pygeoapi",
        "loader",
        "BaseLoader",
        "msc_pygeoapi",
        "util",
        "configure_es_connection",
        "check_es_indexes_to_delete",
        "logging",
        "getLogger",
        "format",
        "STATIONS_LIST_NAME",
        "os",
        "path",
        "join",
        "MSC_PYGEOAPI_CACHEDIR",
        "STATIONS_LIST_NAME",
        "os",
        "path",
        "exists",
        "MSC_PYGEOAPI_CACHEDIR",
        "os",
        "makedirs",
        "MSC_PYGEOAPI_CACHEDIR",
        "format",
        "INDEX_BASENAME",
        "BaseLoader",
        "conn_config",
        "BaseLoader",
        "ElasticsearchConnector",
        "conn_config",
        "STATIONS_CACHE",
        "os",
        "path",
        "exists",
        "filepath",
        "download_stations",
        "conn",
        "create_template",
        "INDEX_BASENAME",
        "SETTINGS",
        "ET",
        "parse",
        "filepath",
        "tree",
        "getroot",
        "administrative_region",
        "root",
        "region_list",
        "administrative_region",
        "region",
        "region_list",
        "items",
        "append",
        "region",
        "attrib",
        "region",
        "attrib",
        "items",
        "i",
        "attr",
        "val",
        "administrative_region",
        "attrib",
        "items",
        "administrative_region",
        "tag",
        "attr",
        "field_name",
        "val",
        "field_name",
        "val",
        "field_name",
        "val",
        "field_name",
        "val",
        "region",
        "attrib",
        "items",
        "field_name",
        "val",
        "field_name",
        "val",
        "field_name",
        "val",
        "info",
        "region",
        "info",
        "text",
        "strip",
        "info",
        "tag",
        "info",
        "text",
        "info",
        "tag",
        "info",
        "text",
        "info",
        "properties_",
        "index",
        "station",
        "info",
        "prop_dict",
        "field",
        "value",
        "station",
        "attrib",
        "items",
        "prop_dict",
        "index",
        "value",
        "properties_",
        "items",
        "i",
        "id_",
        "id_",
        "INDEX_BASENAME",
        "items",
        "i",
        "action",
        "i",
        "LOGGER",
        "debug",
        "format",
        "filepath",
        "generate_geojson_features",
        "conn",
        "submit_elastic_package",
        "LOGGER",
        "debug",
        "format",
        "STATIONS_LIST_URL",
        "STATIONS_CACHE",
        "urllib",
        "request",
        "urlretrieve",
        "STATIONS_LIST_URL",
        "STATIONS_CACHE",
        "click",
        "group",
        "click",
        "command",
        "click",
        "pass_context",
        "cli_options",
        "OPTION_FILE",
        "cli_options",
        "OPTION_ELASTICSEARCH",
        "cli_options",
        "OPTION_ES_USERNAME",
        "cli_options",
        "OPTION_ES_PASSWORD",
        "cli_options",
        "OPTION_ES_IGNORE_CERTS",
        "ctx",
        "file_",
        "es",
        "username",
        "password",
        "ignore_certs",
        "file_",
        "download_stations",
        "configure_es_connection",
        "es",
        "username",
        "password",
        "ignore_certs",
        "AQHIStationLoader",
        "conn_config",
        "loader",
        "load_data",
        "result",
        "click",
        "echo",
        "click",
        "command",
        "click",
        "pass_context",
        "cli_options",
        "OPTION_ELASTICSEARCH",
        "cli_options",
        "OPTION_ES_USERNAME",
        "cli_options",
        "OPTION_ES_PASSWORD",
        "cli_options",
        "OPTION_ES_IGNORE_CERTS",
        "cli_options",
        "OPTION_YES",
        "prompt",
        "ctx",
        "es",
        "username",
        "password",
        "ignore_certs",
        "configure_es_connection",
        "es",
        "username",
        "password",
        "ignore_certs",
        "ElasticsearchConnector",
        "conn_config",
        "conn",
        "get",
        "INDEX_BASENAME",
        "indexes",
        "check_es_indexes_to_delete",
        "indexes",
        "indexes_to_delete",
        "click",
        "echo",
        "format",
        "indexes_to_delete",
        "conn",
        "join",
        "indexes_to_delete",
        "click",
        "echo",
        "click",
        "command",
        "click",
        "pass_context",
        "cli_options",
        "OPTION_ELASTICSEARCH",
        "cli_options",
        "OPTION_ES_USERNAME",
        "cli_options",
        "OPTION_ES_PASSWORD",
        "cli_options",
        "OPTION_ES_IGNORE_CERTS",
        "cli_options",
        "OPTION_INDEX_TEMPLATE",
        "ctx",
        "es",
        "username",
        "password",
        "ignore_certs",
        "index_template",
        "configure_es_connection",
        "es",
        "username",
        "password",
        "ignore_certs",
        "ElasticsearchConnector",
        "conn_config",
        "format",
        "INDEX_BASENAME",
        "click",
        "echo",
        "format",
        "indexes",
        "conn",
        "indexes",
        "index_template",
        "INDEX_BASENAME",
        "click",
        "echo",
        "format",
        "index_name",
        "conn",
        "delete_template",
        "index_name",
        "click",
        "echo",
        "aqhi_stations",
        "add_command",
        "add",
        "aqhi_stations",
        "add_command",
        "clean_index",
        "aqhi_stations",
        "add_command",
        "delete_index"
    ],
    "literals": [
        "'aqhi_stations'",
        "'AQHI_XML_File_List.xml'",
        "'https://dd.weather.gc.ca/air_quality/doc/{}'",
        "'order'",
        "'version'",
        "'index_patterns'",
        "'{}'",
        "'settings'",
        "'number_of_shards'",
        "'number_of_replicas'",
        "'mappings'",
        "'properties'",
        "'geometry'",
        "'type'",
        "'geo_shape'",
        "'properties'",
        "'properties'",
        "'location_id'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'location_name_en'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'location_name_fr'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'eccc_administrative-zone'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'eccc_administrative-zone_name_en'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'eccc_administrative-zone_name_fr'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'url_msc-datamart_observation'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'url_msc-datamart_forecast'",
        "'type'",
        "'text'",
        "'fields'",
        "'raw'",
        "'type'",
        "'keyword'",
        "'type'",
        "'Feature'",
        "'geometry'",
        "'type'",
        "'Point'",
        "'coordinates'",
        "'longitude'",
        "'latitude'",
        "'properties'",
        "'properties'",
        "f'{administrative_region.tag}_{attr}'",
        "'EC_administrativeZone_abreviation'",
        "'eccc_administrative-zone'",
        "'EC_administrativeZone_name_en_CA'",
        "'eccc_administrative-zone_name_en'",
        "'EC_administrativeZone_name_fr_CA'",
        "'eccc_administrative-zone_name_fr'",
        "'cgndb'",
        "'location_id'",
        "'nameEn'",
        "'location_name_en'",
        "'nameFr'",
        "'location_name_fr'",
        "'pathToCurrentForecast'",
        "'url_msc-datamart_forecast'",
        "'pathToCurrentObservation'",
        "'url_msc-datamart_observation'",
        "'station'",
        "'station'",
        "'station'",
        "'location_id'",
        "'id'",
        "'_id'",
        "'_index'",
        "'_op_type'",
        "'update'",
        "'doc'",
        "'doc_as_upsert'",
        "'Received file {}'",
        "'Caching {} to {}'",
        "'features not generated'",
        "'Are you sure you want to delete old index?'",
        "'Deleting indexes {}'",
        "','",
        "'Done'",
        "'{}*'",
        "'Deleting indexes {}'",
        "'Deleting index template {}'",
        "'Done'"
    ],
    "variables": [
        "LOGGER",
        "INDEX_BASENAME",
        "STATIONS_LIST_NAME",
        "STATIONS_LIST_URL",
        "STATIONS_CACHE",
        "SETTINGS",
        "conn",
        "filepath",
        "items",
        "tree",
        "root",
        "i",
        "properties_",
        "field_name",
        "properties_",
        "properties_",
        "properties_",
        "properties_",
        "properties_",
        "properties_",
        "properties_",
        "properties_",
        "prop_dict",
        "prop_dict",
        "index",
        "as_dict",
        "as_dict",
        "field",
        "id_",
        "action",
        "conn_config",
        "loader",
        "result",
        "conn_config",
        "conn",
        "indexes",
        "indexes_to_delete",
        "conn_config",
        "conn",
        "indexes",
        "index_name"
    ],
    "comments": [
        "=================================================================",
        "",
        "Author: Louis-Philippe Rousseau-Lambert",
        "<louis-philippe.rousseaulambert@ec.gc.ca>",
        "",
        "Copyright (c) 2023 Louis-Philippe Rousseau-Lambert",
        "",
        "Permission is hereby granted, free of charge, to any person",
        "obtaining a copy of this software and associated documentation",
        "files (the \"Software\"), to deal in the Software without",
        "restriction, including without limitation the rights to use,",
        "copy, modify, merge, publish, distribute, sublicense, and/or sell",
        "copies of the Software, and to permit persons to whom the",
        "Software is furnished to do so, subject to the following",
        "conditions:",
        "",
        "The above copyright notice and this permission notice shall be",
        "included in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,",
        "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES",
        "OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND",
        "NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT",
        "HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,",
        "WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING",
        "FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR",
        "OTHER DEALINGS IN THE SOFTWARE.",
        "",
        "=================================================================",
        "index settings",
        "add values from EC_administrativeZone tag",
        "add values from region tag",
        "add values under region tag",
        "means there are associated stations, add them too",
        "I need to keep increasing otherwise you'll end up",
        "overwriting data, so can't use enumerate",
        "generate geojson features"
    ],
    "docstrings": [
        "\"\"\"AQHI Station loader\"\"\"",
        "\"\"\"initializer\"\"\"",
        "\"\"\"\n        Generates and yields a series of aqhi station.\n        Forecasts and observations are returned as Elasticsearch bulk API\n        upsert actions,with documents in GeoJSON to match the Elasticsearch\n        index mappings.\n        :returns: Generator of Elasticsearch actions to upsert the AQHI\n                  stations\n        \"\"\"",
        "\"\"\"\n        loads data from event to target\n        :returns: `bool` of status result\n        \"\"\"",
        "\"\"\"\n    Download realtime stations\n    :returns: void\n    \"\"\"",
        "\"\"\"Manages AQHI indexes\"\"\"",
        "\"\"\"Add AQHI data to Elasticsearch\"\"\"",
        "\"\"\"Delete old AQHI stations index\"\"\"",
        "\"\"\"Delete all AQHI realtime indexes\"\"\""
    ],
    "functions": [
        "generate_geojson_features",
        "load_data",
        "download_stations",
        "aqhi_stations",
        "add",
        "clean_index",
        "delete_index"
    ],
    "classes": [
        "AQHIStationLoader"
    ]
}