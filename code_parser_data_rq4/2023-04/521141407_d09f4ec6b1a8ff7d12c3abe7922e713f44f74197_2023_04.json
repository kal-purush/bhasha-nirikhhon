{
    "identifiers": [
        "core",
        "github",
        "exec",
        "spawn",
        "minimatch",
        "core",
        "core",
        "github",
        "github_token",
        "github",
        "context",
        "context",
        "context",
        "context",
        "context",
        "core",
        "context",
        "octokit",
        "octokit",
        "releases_opts",
        "release",
        "releases",
        "release",
        "release",
        "release",
        "current_release_tag",
        "found_current",
        "found_current",
        "found_prev",
        "release",
        "found_prev",
        "exec",
        "exec",
        "options",
        "data",
        "git_diff_result",
        "data",
        "core",
        "found_prev",
        "current_release_tag",
        "spawn",
        "found_prev",
        "current_release_tag",
        "options",
        "git_diff_result",
        "v",
        "minimatch",
        "v",
        "core",
        "result",
        "result",
        "core",
        "core",
        "github",
        "github_token",
        "github",
        "context",
        "context",
        "context",
        "context",
        "head",
        "context",
        "context",
        "head",
        "context",
        "core",
        "context",
        "core",
        "core",
        "head",
        "core",
        "head",
        "core",
        "context",
        "octokit",
        "octokit",
        "compare_opts",
        "diff",
        "diffs",
        "file",
        "diff",
        "files",
        "file",
        "files",
        "v",
        "minimatch",
        "v",
        "core",
        "result",
        "result"
    ],
    "literals": [
        "\"@actions/core\"",
        "\"@actions/github\"",
        "\"child_process\"",
        "\"minimatch\"",
        "\"github_token\"",
        "\"filter_string\"",
        "'release'",
        "'Only releases accepted'",
        "'released'",
        "'Only released type of release is accepted'",
        "'Prerelease is not accepted in this step'",
        "'ENV var FILTER is mandatory'",
        "\"base validations completed\"",
        "'Could not find previous release'",
        "git fetch --tags",
        "git status",
        "string",
        "string",
        "Searching in diff between ${found_prev} ${current_release_tag} using filter: ${filter}",
        "'git'",
        "'diff'",
        "'--name-only'",
        "tags/${found_prev}",
        "tags/${current_release_tag}",
        "git difference of multiple tags is ${result}",
        "\"github_token\"",
        "\"filter_string\"",
        "'pull_request'",
        "'push'",
        "This action only supports pull requests and pushes, ${context.eventName} events are not supported.",
        "\"Please submit an issue.\"",
        "Base commit: ${base}",
        "Head commit: ${head}",
        "'ENV var FILTER is mandatory'",
        "The base and head commits are missing from the payload for this ${context.eventName} event.",
        "\"Please submit an issue.\"",
        "at least 1 file matching 'filter_string' is ${result}"
    ],
    "variables": [
        "github_token",
        "octokit",
        "context",
        "owner",
        "repo",
        "current_release_tag",
        "releases_opts",
        "releases",
        "found_current",
        "found_prev",
        "git_diff_result",
        "options",
        "result",
        "github_token",
        "octokit",
        "context",
        "owner",
        "repo",
        "head",
        "compare_opts",
        "diffs",
        "files",
        "result"
    ],
    "comments": [
        "Validation",
        "Log the base and head commits",
        "Validation",
        "Ensure that the base and head properties are set on the payload."
    ],
    "docstrings": [
        "* 1. Is release?\n   * 2. Is not pre_release?\n   * 3. Has previous releases\n   * 4. has ENV FILTER var"
    ],
    "functions": [
        "privateValidator",
        "publicValidator"
    ],
    "classes": []
}