{
    "identifiers": [
        "bnfparsing",
        "funcy",
        "strings",
        "re_all",
        "bnfparsing",
        "ParserBase",
        "bnfparsing",
        "rule",
        "index",
        "len",
        "index",
        "isalpha",
        "index",
        "isdigit",
        "index",
        "index",
        "bnfparsing",
        "Token",
        "index",
        "index",
        "bnfparsing",
        "rule",
        "index",
        "len",
        "index",
        "isalpha",
        "index",
        "isdigit",
        "index",
        "index",
        "bnfparsing",
        "Token",
        "index",
        "index",
        "ws_handler",
        "bnfparsing",
        "ignore",
        "new_rule",
        "new_rule",
        "new_rule",
        "new_rule",
        "new_rule",
        "new_rule",
        "new_rule",
        "token",
        "token",
        "tags",
        "build_path",
        "token",
        "children",
        "token",
        "token_type",
        "build_path",
        "token",
        "children",
        "build_path",
        "token",
        "children",
        "token",
        "token_type",
        "token",
        "value",
        "token",
        "token_type",
        "token",
        "value",
        "token",
        "token",
        "parent",
        "token",
        "token",
        "children",
        "value",
        "build_path",
        "token",
        "children",
        "token",
        "children",
        "value",
        "build_path",
        "token",
        "children",
        "path",
        "first_run",
        "len",
        "path",
        "path",
        "path",
        "isinstance",
        "c",
        "c",
        "duckdb_jsonpath",
        "rest",
        "first_run",
        "prefix",
        "c",
        "duckdb_jsonpath",
        "rest",
        "path",
        "duckdb_jsonpath",
        "path",
        "duckdb_jsonpath",
        "duckdb_age",
        "i",
        "dialect",
        "re_all",
        "i",
        "exp",
        "exprs",
        "IfStmtParser",
        "parser",
        "parse",
        "exp",
        "prepare_token",
        "token",
        "exp",
        "DIALECTS",
        "dialect",
        "fn",
        "path",
        "i",
        "k",
        "v",
        "vs",
        "items",
        "res",
        "replace",
        "k",
        "v",
        "res",
        "sql",
        "dialect",
        "resolve_string_template",
        "sql",
        "dialect"
    ],
    "literals": [
        "\"identifier\"",
        "\"integer\"",
        "\"expression\"",
        "\"column path-item+ | age-fn path-item+ \"",
        "\"column\"",
        "'\"$\"'",
        "\"age-fn\"",
        "'\"age\"'",
        "\"path-item\"",
        "\"index | element\"",
        "\"path-item+\"",
        "\"path-item path-item+ | path-item\"",
        "\"element\"",
        "'\".\" identifier'",
        "\"index\"",
        "'\"[\" integer \"]\"'",
        "\"path-item\"",
        "\"path-item+\"",
        "\"identifier\"",
        "\"integer\"",
        "\"MISS\"",
        "\"$\"",
        "\"json_path\"",
        "\"age\"",
        "\"age\"",
        "\"\"",
        "f\"[{c+1}]\"",
        "\".\"",
        "\"\"",
        "f\"{prefix}{c}\"",
        "f\"datediff('year', {duckdb_jsonpath(path)}::date, current_date )\"",
        "\"duckdb\"",
        "\"json_path\"",
        "\"age\"",
        "r\"(?P<macro>\\(\\{(?P<exp>\\S*\\s+\\S+)\\s*\\}\\))\"",
        "\"exp\"",
        "\"macro\""
    ],
    "variables": [
        "BNF_definition",
        "index",
        "index",
        "index",
        "index",
        "c",
        "rest",
        "prefix",
        "prefix",
        "DIALECTS",
        "exprs",
        "vs",
        "parser",
        "token",
        "fn",
        "path",
        "vs",
        "res",
        "res"
    ],
    "comments": [
        "import bnf",
        "bnf.grammar(BNF_definition)",
        "self.new_rule(\"expression\", \"column path-item | table path-item | path-item\")"
    ],
    "docstrings": [
        "\"\"\"\nexpression: (column path-item+) | ( table path-item+) | path-item+\ncolumn: '!' path-item\ntable: identifier\npath-item: index | element\nelement: '.' identifier\nindex: '[' integer ']'\nidentifier: [a-zA-Z0-9]+\ninteger: [0-9]+\n\"\"\""
    ],
    "functions": [
        "identifier",
        "integer",
        "build_path",
        "prepare_token",
        "duckdb_jsonpath",
        "duckdb_age",
        "resolve_string_template",
        "convert"
    ],
    "classes": [
        "IfStmtParser"
    ]
}