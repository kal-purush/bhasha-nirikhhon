{
    "identifiers": [
        "com",
        "foobnix",
        "web",
        "java",
        "io",
        "java",
        "net",
        "java",
        "util",
        "sbuf",
        "idx",
        "idx",
        "length",
        "idx",
        "intVal",
        "idx",
        "intVal",
        "sbuf",
        "append",
        "sbuf",
        "append",
        "toHexString",
        "intVal",
        "toUpperCase",
        "sbuf",
        "toString",
        "getBytes",
        "ex",
        "filename",
        "BUFLEN",
        "filename",
        "BUFLEN",
        "baos",
        "BUFLEN",
        "BUFLEN",
        "isUTF8",
        "read",
        "count",
        "read",
        "read",
        "count",
        "isUTF8",
        "baos",
        "write",
        "read",
        "baos",
        "write",
        "read",
        "count",
        "read",
        "isUTF8",
        "baos",
        "toByteArray",
        "baos",
        "toByteArray",
        "close",
        "ignored",
        "interfaceName",
        "interfaces",
        "Collections",
        "NetworkInterface",
        "getNetworkInterfaces",
        "intf",
        "interfaces",
        "interfaceName",
        "intf",
        "getName",
        "equalsIgnoreCase",
        "interfaceName",
        "mac",
        "intf",
        "getHardwareAddress",
        "mac",
        "buf",
        "aMac",
        "mac",
        "buf",
        "append",
        "format",
        "aMac",
        "buf",
        "length",
        "buf",
        "deleteCharAt",
        "buf",
        "length",
        "buf",
        "toString",
        "ignored",
        "useIPv4",
        "interfaces",
        "Collections",
        "NetworkInterface",
        "getNetworkInterfaces",
        "intf",
        "interfaces",
        "addrs",
        "Collections",
        "intf",
        "getInetAddresses",
        "addr",
        "addrs",
        "addr",
        "isLoopbackAddress",
        "sAddr",
        "addr",
        "getHostAddress",
        "isIPv4",
        "sAddr",
        "indexOf",
        "useIPv4",
        "isIPv4",
        "sAddr",
        "isIPv4",
        "delim",
        "sAddr",
        "indexOf",
        "delim",
        "sAddr",
        "toUpperCase",
        "sAddr",
        "substring",
        "delim",
        "toUpperCase",
        "ignored"
    ],
    "literals": [
        "\"0\"",
        "\"UTF-8\"",
        "\"UTF-8\"",
        "\"\"",
        "\"%02X:\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "read"
    ],
    "comments": [
        "import org.apache.http.conn.util.InetAddressUtils;",
        "drop UTF8 bom marker",
        "for now eat exceptions",
        "boolean isIPv4 = InetAddressUtils.isIPv4Address(sAddr);",
        "drop ip6 zone suffix",
        "for now eat exceptions"
    ],
    "docstrings": [
        "* Convert byte array to hex string\n     * @param bytes toConvert\n     * @return hexValue",
        "* Get utf8 byte array.\n     * @param str which to be converted\n     * @return  array of NULL if error was found",
        "* Load UTF8withBOM or any ansi text file.\n     * @param filename which to be converted to string\n     * @return String value of File\n     * @throws java.io.IOException if error occurs",
        "* Returns MAC address of the given interface name.\n     * @param interfaceName eth0, wlan0 or NULL=use first interface \n     * @return  mac address or empty string",
        "ry {\n            // this is so Linux hack\n            return loadFileAsString(\"/sys/class/net/\" +interfaceName + \"/address\").toUpperCase().trim();\n        } catch (IOException ex) {\n            return null;\n        }",
        "* Get IP address from first non-localhost interface\n     * @param useIPv4   true=return ipv4, false=return ipv6\n     * @return  address or empty string"
    ],
    "functions": [
        "bytesToHex",
        "getUTF8Bytes",
        "loadFileAsString",
        "getMACAddress",
        "getIPAddress"
    ],
    "classes": [
        "Utils"
    ]
}