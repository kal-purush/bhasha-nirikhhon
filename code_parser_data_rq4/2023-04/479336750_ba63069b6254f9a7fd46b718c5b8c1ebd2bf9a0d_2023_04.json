{
    "identifiers": [
        "Microsoft",
        "Diagnostics",
        "Tracing",
        "StackSources",
        "Collections",
        "Generic",
        "Text",
        "Microsoft",
        "Diagnostics",
        "Tracing",
        "Stacks",
        "Linux",
        "LinuxPerfScriptThreadState",
        "LinuxPerfScriptThreadState",
        "LinuxPerfScriptThreadState",
        "LinuxPerfScriptThreadState",
        "LinuxEvent",
        "linuxEvent",
        "_beginningStates",
        "ContainsKey",
        "linuxEvent",
        "ThreadID",
        "_beginningStates",
        "Add",
        "linuxEvent",
        "ThreadID",
        "LinuxPerfScriptThreadState",
        "ThreadState",
        "LinuxThreadState",
        "CPU_TIME",
        "Event",
        "linuxEvent",
        "_endingStates",
        "linuxEvent",
        "ThreadID",
        "_beginningStates",
        "linuxEvent",
        "ThreadID",
        "ThreadExitEvent",
        "exitEvent",
        "_endingStates",
        "Remove",
        "exitEvent",
        "Exit",
        "ThreadID",
        "threadID",
        "_beginningStates",
        "TryGetValue",
        "threadID",
        "LinuxPerfScriptThreadState",
        "value",
        "value",
        "threadID",
        "_endingStates",
        "TryGetValue",
        "threadID",
        "LinuxPerfScriptThreadState",
        "value",
        "value",
        "IReadOnlyDictionary",
        "LinuxPerfScriptThreadState",
        "_beginningStates",
        "IReadOnlyDictionary",
        "LinuxPerfScriptThreadState",
        "_endingStates"
    ],
    "literals": [],
    "variables": [
        "_beginningStates",
        "_endingStates",
        "BeginningStates",
        "EndingStates",
        "LinuxThreadState",
        "ThreadState",
        "LinuxEvent",
        "Event"
    ],
    "comments": [
        "TODO: If this is a sched_switch event, then connect the two thread ids.",
        "TODO: Do we need to also get the in-container thread ID?",
        "TODO: Do we also need to remove from beginning states?",
        "Only allow the thread state computer to create instances.",
        "This is important because we're going to use the same instance",
        "across multiple thread IDs.",
        "",
        "This is required to handle cases when the capture took place inside",
        "of a container and the thread ID is from inside the container,",
        "but the prev_pid is from outside the container."
    ],
    "docstrings": [],
    "functions": [
        "PrimeThreadState",
        "RemoveThread",
        "LinuxPerfScriptThreadState",
        "GetBeginningState",
        "LinuxPerfScriptThreadState",
        "GetEndingStateState",
        "LinuxPerfScriptThreadState"
    ],
    "classes": [
        "LinuxPerfScriptThreadStateComputer",
        "LinuxPerfScriptThreadState"
    ]
}