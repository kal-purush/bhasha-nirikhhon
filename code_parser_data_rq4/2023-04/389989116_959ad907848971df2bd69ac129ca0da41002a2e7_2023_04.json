{
    "identifiers": [
        "CompletionItem",
        "CompletionItemKind",
        "URI",
        "Node",
        "Scalar",
        "YAMLMap",
        "YAMLSeq",
        "AncestryBuilder",
        "isPlayParam",
        "pathUri",
        "existsSync",
        "readFileSync",
        "parseDocument",
        "documentUri",
        "path",
        "isPlayParam",
        "path",
        "varPriority",
        "varPriority",
        "AncestryBuilder",
        "path",
        "YAMLMap",
        "YAMLMap",
        "parentKeyPath",
        "parentKeyPath",
        "parentKeyPath",
        "parentKeyNode",
        "Scalar",
        "parentKeyNode",
        "path",
        "parentKeyPath",
        "path",
        "path",
        "scopedNode",
        "scopedNode",
        "varsObject",
        "varsObject",
        "element",
        "element",
        "key",
        "varsCompletion",
        "key",
        "varPriority",
        "varsObject",
        "key",
        "varsCompletion",
        "key",
        "varPriority",
        "parentKeyPath",
        "AncestryBuilder",
        "path",
        "YAMLMap",
        "YAMLSeq",
        "YAMLMap",
        "parentKeyPath",
        "parentKeyPath",
        "parentKeyPath",
        "parentKeyNode",
        "Scalar",
        "parentKeyNode",
        "path",
        "parentKeyPath",
        "path",
        "path",
        "scopedNode",
        "scopedNode",
        "varsObject",
        "varsObject",
        "element",
        "element",
        "key",
        "varsCompletion",
        "key",
        "varPriority",
        "varsObject",
        "key",
        "varsCompletion",
        "key",
        "varPriority",
        "varPriority",
        "varPriority",
        "path",
        "path",
        "playNode",
        "playNode",
        "varsPromptObject",
        "element",
        "varsCompletion",
        "element",
        "varPriority",
        "varPriority",
        "varPriority",
        "playNode",
        "playNode",
        "pathUri",
        "URI",
        "documentUri",
        "varsPromptObject",
        "element",
        "pathUri",
        "element",
        "varFilePath",
        "element",
        "varFilePath",
        "URI",
        "pathUri",
        "currentDirectory",
        "element",
        "existsSync",
        "varFilePath",
        "readFileSync",
        "varFilePath",
        "parseDocument",
        "file",
        "yamlDocContent",
        "yamlDocContent",
        "element",
        "element",
        "element",
        "key",
        "varsCompletion",
        "key",
        "varPriority",
        "varsCompletion",
        "variable",
        "priority",
        "variable",
        "CompletionItemKind",
        "completionItem"
    ],
    "literals": [
        "\"vscode-languageserver\"",
        "\"vscode-uri\"",
        "\"yaml/types\"",
        "\"../utils/yaml\"",
        "\"path\"",
        "\"fs\"",
        "\"yaml\"",
        "string",
        "\"string\"",
        "\"vars\"",
        "\"vars\"",
        "\"string\"",
        "\"vars\"",
        "\"vars\"",
        "\"vars_prompt\"",
        "\"vars_prompt\"",
        "\"name\"",
        "\"vars_files\"",
        "\"vars_files\"",
        "\"utf8\"",
        "\"object\"",
        "${priority}_${variable}"
    ],
    "variables": [
        "varsCompletion",
        "varPriority",
        "parentKeyPath",
        "parentKeyNode",
        "scopedNode",
        "varsObject",
        "parentKeyNode",
        "scopedNode",
        "varsObject",
        "playNode",
        "varsPromptObject",
        "varsPromptObject",
        "currentDirectory",
        "varFilePath",
        "file",
        "yamlDocContent",
        "completionItem"
    ],
    "comments": [
        "the loop calculates and traverses till the path reaches the play level from the position where the auto-completion was asked",
        "handle case when it is a dict",
        "handle case when it is a list",
        "At this point path is at play level",
        "At play level, there are two more ways in which vars can be defined:",
        "1. vars_prompt",
        "2. vars_files",
        "handling vars_prompt",
        "handling vars_files",
        "read the vars_file and get the variables declared inside it",
        "variables declared in the file should be in list format only",
        "return the completions as completion items"
    ],
    "docstrings": [
        "* A function that computes the possible variable auto-completions scope-wise for a given position\n * @param documentUri uri of the document\n * @param path array of nodes leading to that position\n * @returns a list of completion items"
    ],
    "functions": [
        "getVarsCompletion"
    ],
    "classes": []
}