{
    "identifiers": [
        "json",
        "base64",
        "warnings",
        "pyarrow",
        "pyarrow",
        "flight",
        "pyarrow",
        "flight",
        "FlightServerError",
        "hsfs",
        "client",
        "hsfs",
        "feature_group",
        "hsfs",
        "client",
        "exceptions",
        "FeatureStoreException",
        "hsfs",
        "core",
        "variable_api",
        "VariableApi",
        "_arrow_flight_instance",
        "_arrow_flight_instance",
        "ArrowFlightClient",
        "_arrow_flight_instance",
        "VariableApi",
        "_variable_api",
        "get_flyingduck_enabled",
        "_is_enabled",
        "_initialize_connection",
        "e",
        "warnings",
        "warn",
        "e",
        "client",
        "get_instance",
        "_extract_certs",
        "_client",
        "pyarrow",
        "flight",
        "FlightClient",
        "location",
        "host_url",
        "tls_root_certs",
        "tls_root_certs",
        "cert_chain",
        "cert_chain",
        "private_key",
        "private_key",
        "override_hostname",
        "_health_check",
        "_register_certificates",
        "pyarrow",
        "flight",
        "Action",
        "pyarrow",
        "flight",
        "FlightCallOptions",
        "timeout",
        "_connection",
        "do_action",
        "action",
        "options",
        "options",
        "read_options",
        "read_options",
        "read_options",
        "read_options",
        "_is_enabled",
        "query",
        "read_options",
        "_should_be_used",
        "read_options",
        "_is_query_supported_rec",
        "query",
        "data_format",
        "read_options",
        "_should_be_used",
        "read_options",
        "data_format",
        "ArrowFlightClient",
        "SUPPORTED_FORMATS",
        "query",
        "isinstance",
        "query",
        "_left_feature_group",
        "feature_group",
        "FeatureGroup",
        "query",
        "_left_feature_group",
        "time_travel_format",
        "query",
        "_left_feature_group_start_time",
        "query",
        "_left_feature_group_start_time",
        "query",
        "_left_feature_group_end_time",
        "j",
        "query",
        "_joins",
        "supported",
        "_is_query_supported_rec",
        "j",
        "_query",
        "supported",
        "client",
        "open",
        "client",
        "_get_ca_chain_path",
        "f",
        "f",
        "read",
        "open",
        "client",
        "_get_client_cert_path",
        "f",
        "f",
        "read",
        "open",
        "client",
        "_get_client_key_path",
        "f",
        "f",
        "read",
        "tls_root_certs",
        "cert_chain",
        "private_key",
        "path",
        "open",
        "path",
        "f",
        "f",
        "read",
        "base64",
        "b64encode",
        "content",
        "decode",
        "_encode_certs",
        "_client",
        "_get_jks_key_store_path",
        "_encode_certs",
        "_client",
        "_get_jks_trust_store_path",
        "_client",
        "_cert_key",
        "json",
        "dumps",
        "kstore",
        "tstore",
        "cert_key",
        "encode",
        "pyarrow",
        "py_buffer",
        "certificates_json",
        "pyarrow",
        "flight",
        "Action",
        "certificates_json_buf",
        "_connection",
        "do_action",
        "action",
        "method",
        "args",
        "kw",
        "method",
        "args",
        "kw",
        "e",
        "e",
        "isinstance",
        "e",
        "FlightServerError",
        "message",
        "args",
        "_register_certificates",
        "method",
        "args",
        "kw",
        "FeatureStoreException",
        "e",
        "afs_error_handler_wrapper",
        "descriptor",
        "_connection",
        "get_flight_info",
        "descriptor",
        "_connection",
        "do_get",
        "_info_to_ticket",
        "info",
        "reader",
        "read_pandas",
        "_handle_afs_exception",
        "query_object",
        "json",
        "dumps",
        "query_object",
        "encode",
        "pyarrow",
        "flight",
        "FlightDescriptor",
        "for_command",
        "query_encoded",
        "_get_dataset",
        "descriptor",
        "_handle_afs_exception",
        "path",
        "pyarrow",
        "flight",
        "FlightDescriptor",
        "for_path",
        "path",
        "_get_dataset",
        "descriptor",
        "query",
        "query_str",
        "_collect_featuregroups_features_and_filters",
        "query",
        "_translate_to_duckdb",
        "query",
        "query_str",
        "featuregroups",
        "features",
        "filters",
        "query",
        "query_obj",
        "isinstance",
        "query_obj",
        "query_obj",
        "query",
        "query_str",
        "query_str",
        "replace",
        "query",
        "_left_feature_group",
        "feature_store_name",
        "query",
        "_left_feature_group",
        "_get_project_name",
        "replace",
        "features",
        "fg_name",
        "new_features",
        "features",
        "get",
        "fg_name",
        "updated_features",
        "update",
        "new_features",
        "updated_features",
        "query",
        "_collect_featuregroups_features_and_filters_rec",
        "query",
        "_filter_to_expression",
        "filters",
        "featuregroups",
        "feature",
        "features",
        "features",
        "feature",
        "featuregroups",
        "features",
        "filters",
        "query",
        "query",
        "_left_feature_group",
        "fg",
        "_get_project_name",
        "fg",
        "name",
        "fg",
        "version",
        "fg",
        "_id",
        "fg_name",
        "query",
        "_filter",
        "fg_name",
        "feat",
        "_name",
        "feat",
        "query",
        "_left_features",
        "fg",
        "event_time",
        "features",
        "fg_name",
        "update",
        "fg",
        "event_time",
        "fg",
        "primary_key",
        "features",
        "fg_name",
        "update",
        "fg",
        "primary_key",
        "join",
        "query",
        "_joins",
        "join",
        "_query",
        "_left_feature_group",
        "join_fg",
        "_get_project_name",
        "join_fg",
        "name",
        "join_fg",
        "version",
        "join",
        "_on",
        "len",
        "join",
        "_on",
        "join",
        "_left_on",
        "join",
        "_on",
        "len",
        "join",
        "_on",
        "join",
        "_right_on",
        "_update_features",
        "features",
        "fg_name",
        "feat",
        "_name",
        "feat",
        "left_on",
        "_update_features",
        "features",
        "join_fg_name",
        "feat",
        "_name",
        "feat",
        "right_on",
        "_collect_featuregroups_features_and_filters_rec",
        "join",
        "_query",
        "featuregroups",
        "update",
        "join_featuregroups",
        "join_fg_name",
        "join_features",
        "_update_features",
        "features",
        "join_fg_name",
        "join_features",
        "join_fg_name",
        "filters",
        "join_filters",
        "join_filters",
        "filters",
        "featuregroups",
        "features",
        "filters",
        "filters",
        "featuregroups",
        "filters",
        "_resolve_logic",
        "filters",
        "featuregroups",
        "logic",
        "featuregroups",
        "logic",
        "_type",
        "_resolve_filter_or_logic",
        "logic",
        "_left_f",
        "logic",
        "_left_l",
        "featuregroups",
        "_resolve_filter_or_logic",
        "logic",
        "_right_f",
        "logic",
        "_right_l",
        "featuregroups",
        "logic",
        "featuregroups",
        "_resolve_filter",
        "featuregroups",
        "logic",
        "_resolve_logic",
        "logic",
        "featuregroups",
        "featuregroups",
        "_condition",
        "_value",
        "featuregroups",
        "_feature",
        "_feature_group_id",
        "_feature",
        "_name",
        "_feature",
        "_type",
        "ArrowFlightClient",
        "FILTER_NUMERIC_TYPES",
        "info",
        "info",
        "endpoints",
        "ticket"
    ],
    "literals": [
        "\"parquet\"",
        "\"bigint\"",
        "\"tinyint\"",
        "\"smallint\"",
        "\"int\"",
        "\"float\"",
        "\"double\"",
        "f\"Could not establish connection to FlyingDuck. ({e}) \"",
        "f\"Will fall back to spark for this session. \"",
        "f\"If the error persists, you can disable FlyingDuck \"",
        "f\"by changing the cluster configuration (set 'enable_flyingduck'='false').\"",
        "\"grpc+tls://flyingduck.service.consul:5005\"",
        "\"flyingduck.service.consul\"",
        "\"healthcheck\"",
        "b\"\"",
        "\"use_hive\"",
        "\"use_hive\"",
        "\"HUDI\"",
        "\"rb\"",
        "\"r\"",
        "\"r\"",
        "\"rb\"",
        "\"utf-8\"",
        "\"kstore\"",
        "\"tstore\"",
        "\"cert_key\"",
        "\"ascii\"",
        "\"register-client-certificates\"",
        "\"Please register client certificates first.\"",
        "\"Could not read data using FlyingDuck. \"",
        "\"If the issue persists, \"",
        "'use read_options={\"use_hive\": True} instead.'",
        "\"ascii\"",
        "\"query_string\"",
        "\"featuregroups\"",
        "\"features\"",
        "\"filters\"",
        "\"query_string\"",
        "f\"`{query._left_feature_group.feature_store_name}`.`\"",
        "f\"`{query._left_feature_group._get_project_name()}.\"",
        "\"`\"",
        "'\"'",
        "f\"{fg._get_project_name()}.{fg.name}_{fg.version}\"",
        "f\"{join_fg._get_project_name()}.{join_fg.name}_{join_fg.version}\"",
        "\"type\"",
        "\"logic\"",
        "\"logic_type\"",
        "\"left_filter\"",
        "\"right_filter\"",
        "\"type\"",
        "\"filter\"",
        "\"condition\"",
        "\"value\"",
        "\"feature\"",
        "f\"{featuregroups[filter._feature._feature_group_id]}.{filter._feature._name}\"",
        "\"numeric\""
    ],
    "variables": [
        "_arrow_flight_instance",
        "_arrow_flight_instance",
        "SUPPORTED_FORMATS",
        "FILTER_NUMERIC_TYPES",
        "_variable_api",
        "_is_enabled",
        "_is_enabled",
        "_is_enabled",
        "_client",
        "host_url",
        "tls_root_certs",
        "cert_chain",
        "private_key",
        "_connection",
        "action",
        "options",
        "supported",
        "tls_root_certs",
        "cert_chain",
        "private_key",
        "content",
        "kstore",
        "tstore",
        "cert_key",
        "certificates_json",
        "certificates_json_buf",
        "action",
        "message",
        "info",
        "reader",
        "query_encoded",
        "descriptor",
        "descriptor",
        "featuregroups",
        "features",
        "filters",
        "query",
        "updated_features",
        "features",
        "fg_name",
        "featuregroups",
        "features",
        "filters",
        "filters",
        "features",
        "feature",
        "featuregroups",
        "fg",
        "fg_name",
        "featuregroups",
        "filters",
        "features",
        "join_fg",
        "join_fg_name",
        "left_on",
        "right_on",
        "join_featuregroups",
        "join_features",
        "join_filters",
        "filters"
    ],
    "comments": [
        "",
        "Copyright 2023 Hopsworks AB",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "if feature flag cannot be retrieved, assume it is disabled",
        "featurestore.name_version"
    ],
    "docstrings": [],
    "functions": [
        "get_instance",
        "_initialize_connection",
        "_health_check",
        "_should_be_used",
        "is_query_supported",
        "is_data_format_supported",
        "_is_query_supported_rec",
        "_extract_certs",
        "_encode_certs",
        "_register_certificates",
        "_handle_afs_exception",
        "afs_error_handler_wrapper",
        "_get_dataset",
        "read_query",
        "read_path",
        "_construct_query_object",
        "is_flyingduck_query_object",
        "_translate_to_duckdb",
        "_update_features",
        "_collect_featuregroups_features_and_filters",
        "_collect_featuregroups_features_and_filters_rec",
        "_filter_to_expression",
        "_resolve_logic",
        "_resolve_filter_or_logic",
        "_resolve_filter",
        "_info_to_ticket"
    ],
    "classes": [
        "ArrowFlightClient"
    ]
}