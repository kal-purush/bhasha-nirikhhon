{
    "identifiers": [
        "socket",
        "threading",
        "pathlib",
        "Path",
        "os",
        "copy",
        "time",
        "datetime",
        "logging",
        "logging",
        "handlers",
        "TimedRotatingFileHandler",
        "os",
        "name",
        "resource",
        "resource",
        "setrlimit",
        "resource",
        "RLIMIT_NOFILE",
        "host",
        "port",
        "host",
        "port",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "sock",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_REUSEADDR",
        "sock",
        "bind",
        "host",
        "port",
        "sock",
        "listen",
        "sock",
        "accept",
        "client_sock",
        "settimeout",
        "my_socket_timeout",
        "time",
        "sleep",
        "accept_time_sleep",
        "threading",
        "target",
        "my_upstream",
        "args",
        "client_sock",
        "thread_up",
        "start",
        "client_sock",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "backend_sock",
        "settimeout",
        "my_socket_timeout",
        "first_flag",
        "time",
        "sleep",
        "first_time_sleep",
        "client_sock",
        "recv",
        "data",
        "backend_sock",
        "connect",
        "Cloudflare_IP",
        "Cloudflare_port",
        "threading",
        "target",
        "my_downstream",
        "args",
        "backend_sock",
        "client_sock",
        "thread_down",
        "start",
        "send_data_in_fragment",
        "data",
        "backend_sock",
        "client_sock",
        "recv",
        "data",
        "backend_sock",
        "sendall",
        "data",
        "e",
        "time",
        "sleep",
        "client_sock",
        "close",
        "backend_sock",
        "close",
        "backend_sock",
        "client_sock",
        "first_flag",
        "backend_sock",
        "recv",
        "data",
        "client_sock",
        "sendall",
        "data",
        "backend_sock",
        "recv",
        "data",
        "client_sock",
        "sendall",
        "data",
        "e",
        "time",
        "sleep",
        "backend_sock",
        "close",
        "client_sock",
        "close",
        "data",
        "sock",
        "i",
        "len",
        "data",
        "L_fragment",
        "data",
        "i",
        "i",
        "L_fragment",
        "len",
        "fragment_data",
        "sock",
        "sendall",
        "fragment_data",
        "time",
        "sleep",
        "fragment_sleep",
        "listen_PORT",
        "ThreadedServer",
        "listen_PORT",
        "listen"
    ],
    "literals": [
        "'posix'",
        "'os is linux'",
        "'162.159.135.42'",
        "'cli syn close'",
        "'cli pipe close'",
        "'backend pipe close at first'",
        "'backend pipe close'",
        "'send '",
        "' bytes'",
        "'----------finish------------'",
        "\"Now listening at: 127.0.0.1:\"",
        "''"
    ],
    "variables": [
        "listen_PORT",
        "Cloudflare_IP",
        "Cloudflare_port",
        "L_fragment",
        "fragment_sleep",
        "my_socket_timeout",
        "first_time_sleep",
        "accept_time_sleep",
        "host",
        "port",
        "sock",
        "client_sock",
        "client_addr",
        "thread_up",
        "thread_up",
        "daemon",
        "first_flag",
        "backend_sock",
        "first_flag",
        "data",
        "thread_down",
        "thread_down",
        "daemon",
        "data",
        "first_flag",
        "first_flag",
        "data",
        "data",
        "fragment_data"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "( -> pip install python-resources )",
        "set linux max_num_open_socket from 1024 to 128k",
        "pyprox listening to 127.0.0.1:listen_PORT",
        "plos.org (can be any dirty cloudflare ip)",
        "length of fragments of Client Hello packet (L_fragment Byte in each chunk)",
        "sleep between each fragment to make GFW-cache full so it forget previous chunks. LOL.",
        "ignore description below , its for old code , just leave it intact.",
        "default for google is ~21 sec , recommend 60 sec unless you have low ram and need close soon",
        "speed control , avoid server crash if huge number of users flooding",
        "avoid server crash on flooding request -> max 100 sockets per second",
        "up to 128 concurrent unaccepted socket queued , the more is refused untill accepting those.",
        "print('someone connected')",
        "avoid server crash on flooding request",
        "avoid memory leak by telling os its belong to main program , its not a separate program , so gc collect it when thread finish",
        "speed control + waiting for packet to fully recieve",
        "print('len data -> ',str(len(data)))",
        "print('user talk :')",
        "backend_sock.sendall(data)",
        "print('upstream : '+ repr(e) )",
        "wait two second for another thread to flush",
        "print('downstream '+backend_name +' : '+ repr(e))",
        "wait two second for another thread to flush",
        "sock.send(fragment_data)"
    ],
    "docstrings": [],
    "functions": [
        "listen",
        "my_upstream",
        "my_downstream",
        "send_data_in_fragment"
    ],
    "classes": [
        "ThreadedServer"
    ]
}