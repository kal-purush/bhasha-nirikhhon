{
    "identifiers": [
        "pseudoArray",
        "pseudoArray",
        "ajaxForm",
        "ajaxForm",
        "enctype",
        "ajaxForm",
        "ajaxForm",
        "method",
        "method",
        "method",
        "proposedMethod",
        "proposedMethod",
        "ajaxForm",
        "ajaxForm",
        "ajaxForm",
        "sendFormData",
        "ajaxForm",
        "fakeSubmitEl",
        "fakeSubmitEl",
        "ajaxForm",
        "fakeSubmitEl",
        "ajaxForm",
        "ajaxForm",
        "ajaxForm",
        "fakeSubmitEl",
        "ajaxForm",
        "getTransport",
        "ajaxForm",
        "sender",
        "ajaxForm",
        "customElement",
        "data",
        "customElement",
        "customElement",
        "customElement",
        "coreMenu",
        "coreMenu",
        "selectedItem",
        "data",
        "customElement",
        "selectedItem",
        "selectedItem",
        "element",
        "data",
        "element",
        "element",
        "element",
        "element",
        "element",
        "data",
        "fileInputName",
        "arrayOf",
        "element",
        "customElement",
        "data",
        "customElement",
        "customElement",
        "data",
        "customElement",
        "customElement",
        "form",
        "parseFileInputs",
        "arrayOf",
        "form",
        "el",
        "parseFileInputs",
        "maybeParseFileInput",
        "el",
        "data",
        "maybeParseCoreDropdownMenu",
        "el",
        "data",
        "maybeParseGenericCustomElement",
        "el",
        "data",
        "data",
        "element",
        "element",
        "elementTag",
        "elementValue",
        "parseInputElementValue",
        "element",
        "elementTag",
        "elementValue",
        "element",
        "elementTag",
        "elementValue",
        "parseSelectElementValues",
        "element",
        "elementValue",
        "form",
        "parseFileInputs",
        "form",
        "parseCustomElements",
        "form",
        "parseFileInputs",
        "formElements",
        "arrayOf",
        "formElements",
        "formElements",
        "formElements",
        "arrayOf",
        "form",
        "formElements",
        "formElements",
        "arrayOf",
        "form",
        "formElements",
        "formElement",
        "formElement",
        "parseFileInputs",
        "maybeParseFileInput",
        "formElement",
        "formObj",
        "formElement",
        "parseElementValue",
        "formElement",
        "key",
        "val",
        "formObj",
        "key",
        "val",
        "customElementsData",
        "fieldName",
        "formObj",
        "fieldName",
        "customElementsData",
        "fieldName",
        "formObj",
        "element",
        "element",
        "element",
        "elementType",
        "elementType",
        "elementValue",
        "parseRadioElementValue",
        "element",
        "elementValue",
        "element",
        "elementValue",
        "element",
        "element",
        "value",
        "element",
        "value",
        "element",
        "element",
        "elementValue",
        "element",
        "elementValue",
        "element",
        "arrayOf",
        "element",
        "optionElement",
        "parseSelectOptionElementValue",
        "optionElement",
        "tempElementValue",
        "elementValues",
        "tempElementValue",
        "elementValues",
        "ajaxForm",
        "getEnctype",
        "ajaxForm",
        "parseForm",
        "ajaxForm",
        "enctype",
        "ajaxForm",
        "formData",
        "formData",
        "submittingEvent",
        "enctype",
        "enctype",
        "sendUrlencodedForm",
        "ajaxForm",
        "formData",
        "ajaxForm",
        "sendUrlencodedForm",
        "ajaxForm",
        "formData",
        "enctype",
        "sendMultipartForm",
        "ajaxForm",
        "formData",
        "enctype",
        "sendJsonEncodedForm",
        "ajaxForm",
        "formData",
        "ajaxForm",
        "data",
        "getTransport",
        "ajaxForm",
        "ajaxForm",
        "sender",
        "sender",
        "getEnctype",
        "ajaxForm",
        "sender",
        "data",
        "sender",
        "ajaxForm",
        "data",
        "getTransport",
        "ajaxForm",
        "FormData",
        "data",
        "fieldName",
        "data",
        "fieldName",
        "fieldValue",
        "fieldValue",
        "fieldName",
        "fieldValue",
        "file",
        "formData",
        "fieldName",
        "file",
        "formData",
        "fieldName",
        "data",
        "fieldName",
        "sender",
        "ajaxForm",
        "sender",
        "sender",
        "formData",
        "sender",
        "ajaxForm",
        "formData",
        "getTransport",
        "ajaxForm",
        "toQueryString",
        "formData",
        "ajaxForm",
        "sender",
        "ajaxForm",
        "sender",
        "data",
        "sender",
        "sender",
        "data",
        "sender",
        "key",
        "key",
        "key",
        "encodeURIComponent",
        "key",
        "val",
        "val",
        "val",
        "valInArray",
        "queryParams",
        "key",
        "encodeURIComponent",
        "valInArray",
        "queryParams",
        "val",
        "key",
        "key",
        "encodeURIComponent",
        "val",
        "queryParams",
        "ajaxForm",
        "existingEventListeners",
        "arrayOf",
        "ajaxForm",
        "field",
        "field",
        "field",
        "invalidFields",
        "field",
        "field",
        "clearTimeout",
        "timer",
        "timer",
        "setTimeout",
        "ajaxForm",
        "invalidFields",
        "invalidFields",
        "observer",
        "records",
        "records",
        "record",
        "record",
        "arrayOf",
        "record",
        "addedNode",
        "addedNode",
        "listenForInvalidEvent",
        "addedNode",
        "ajaxForm",
        "ajaxForm",
        "mutationHandler",
        "initialFields",
        "field",
        "listenForInvalidEvent",
        "field",
        "ajaxForm",
        "ajaxForm",
        "mutationHandler",
        "ajaxForm",
        "getValidMethod",
        "ajaxForm",
        "ajaxForm",
        "watchForInvalidFields",
        "ajaxForm",
        "interceptSubmit",
        "ajaxForm",
        "listenForAjaxComplete",
        "ajaxForm"
    ],
    "literals": [
        "'enctype'",
        "'application/x-www-form-urlencoded'",
        "'ajax-form'",
        "'core-ajax'",
        "'GET'",
        "'POST'",
        "'PUT'",
        "'submit'",
        "'input'",
        "'type'",
        "'submit'",
        "'none'",
        "'submit'",
        "'core-complete'",
        "'submitted'",
        "'core-dropdown-menu'",
        "'paper-dropdown-menu'",
        "'core-menu'",
        "'name'",
        "'file-input'",
        "'input'",
        "'type'",
        "'file'",
        "'name'",
        "'-'",
        "'name'",
        "'*[name]'",
        "'input'",
        "'textarea'",
        "'select'",
        "'input'",
        "'select'",
        "'textarea'",
        "'type'",
        "'file'",
        "'submit'",
        "'reset'",
        "'button'",
        "'image'",
        "'radio'",
        "'multipart/form-data'",
        "'submitting'",
        "'multipart/form-data'",
        "'application/json'",
        "'GET'",
        "'multipart/form-data'",
        "'application/json'",
        "'[]'",
        "'POST'",
        "'?'",
        "'&'",
        "'?'",
        "'[object Array]'",
        "'='",
        "'='",
        "'&'",
        "':invalid, :valid'",
        "'invalid'",
        "'invalid'",
        "'Form submission blocked - constraints violation.'",
        "'method'",
        "'Invalid method!'"
    ],
    "variables": [
        "arrayOf",
        "getEnctype",
        "enctype",
        "getTransport",
        "getValidMethod",
        "proposedMethod",
        "interceptSubmit",
        "fakeSubmitEl",
        "listenForAjaxComplete",
        "sender",
        "maybeParseCoreDropdownMenu",
        "coreMenu",
        "selectedItem",
        "maybeParseFileInput",
        "fileInputName",
        "maybeParseGenericCustomElement",
        "parseCustomElements",
        "data",
        "parseElementValue",
        "elementValue",
        "elementTag",
        "parseForm",
        "formObj",
        "formElements",
        "customElementsData",
        "key",
        "val",
        "parseInputElementValue",
        "elementValue",
        "elementType",
        "parseRadioElementValue",
        "value",
        "parseSelectOptionElementValue",
        "elementValue",
        "parseSelectElementValues",
        "elementValues",
        "tempElementValue",
        "sendFormData",
        "enctype",
        "formData",
        "submittingEvent",
        "sendJsonEncodedForm",
        "sender",
        "sendMultipartForm",
        "sender",
        "formData",
        "fieldValue",
        "sendUrlencodedForm",
        "sender",
        "data",
        "toQueryString",
        "queryParams",
        "val",
        "watchForInvalidFields",
        "initialFields",
        "invalidFields",
        "listenForInvalidEvent",
        "mutationHandler",
        "timer",
        "ajaxForm"
    ],
    "comments": [
        "NOTE: Safari doesn't have any visual indications when submit is blocked",
        "Intercept submit event",
        "Stop form submission.  Believe it or not,",
        "both of these are required for some reason,",
        "and returning false doesn't seem to reliably work.",
        "respect any field validation attributes",
        "Intercept native form submit function.",
        "In order to force the browser to highlight the invalid fields,",
        "we need to create a hidden submit button and click it if the form is invalid.",
        "do nothing for these button types",
        "make sure Polymer/core-ajax doesn't touch the Content-Type.",
        "The browser must set this with the proper multipart boundary ID.",
        "We must URL encode the data and place it in the body or",
        "query parameter section of the URI (depending on the method).",
        "core-ajax attempts to do this for us, but this requires we pass",
        "an Object to core-ajax with the params and we cannot properly",
        "express multiple values for a <select> (which is possible)",
        "via a JavaScript Object.",
        "In case another element is invalid and the event",
        "hasn't been triggered yet, hold off on firing the",
        "invalid event on the custom el.",
        "Be sure to observe any validatable form fields added in the future",
        "The method attribute set on the light-DOM `<form>`",
        "can't seem to be accessed as a property of this element,",
        "unlike other attributes.  Perhaps due to the fact that",
        "we are extending a form and a \"natural\" form also has a",
        "method attr?  Perhaps something special about this attr?",
        "Need to look into this further."
    ],
    "docstrings": [
        "* Return the value of some `HTMLElement`s  value attribute if possible.\n         * @param HTMLElement element\n         * @return mixed The element's value attribute",
        "* Parse an `HTMLFormElement` into key value pairs\n         * @param HTMLFormElement form\n         * @return Object key, value pairs representing the html form",
        "* Parse an `HTMLInputElement`'s value.\n         * @param HTMLInputElement element\n         * @return mixed The element's value",
        "* Parse an `HTMLRadioElement`'s value, returning the value iff\n         * the element has a present `checked` attribute.\n         *\n         * @param HTMLRadioElement element\n         * @return mixed The element's value",
        "* Parse an `HTMLOptionElement`'s value, returning the value iff\n         * the element has a present `selected` attribute.\n         * @param HTMLOptionElement element\n         * @return mixed The element's value",
        "* Parse an `HTMLSelectElement`'s value.\n         *\n         * @param HTMLSelectElement element\n         * @return mixed The element's selected values",
        "* Fired when a response is received.\n        *\n        * @event core-response"
    ],
    "functions": [],
    "classes": []
}