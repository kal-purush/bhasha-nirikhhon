{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "gulp",
        "gulp",
        "gulp",
        "appFiles",
        "supportingFiles",
        "target",
        "inject",
        "sources",
        "filepath",
        "filepath",
        "gulp",
        "gulp",
        "gulp",
        "stripline",
        "gulp",
        "gulp",
        "gulp",
        "tslint",
        "tslint",
        "gulp",
        "gulp",
        "tsc",
        "gulp"
    ],
    "literals": [
        "'use strict'",
        "'gulp'",
        "'gulp-inject'",
        "'gulp-strip-line'",
        "'gulp-typescript'",
        "'gulp-tslint'",
        "string",
        "'index.ts'",
        "'lib/**/*.ts'",
        "string",
        "'gen-app-references'",
        "'./app.ts'",
        "'//{'",
        "'//}'",
        "'/// <reference path=\".'",
        "'\" />'",
        "''",
        "'strip-js-ref-comment'",
        "'**/*.js'",
        "'!node_modules/**/*.js'",
        "'!gulpfile.js'",
        "'/// <reference path='",
        "'//# sourceMappingURL='",
        "''",
        "'tslint'",
        "'**/*.ts'",
        "'!**/*.d.ts'",
        "'prose'",
        "'compile-ts'",
        "'**/*.ts'",
        "''"
    ],
    "variables": [
        "gulp",
        "inject",
        "stripline",
        "tsc",
        "tslint",
        "appFiles",
        "supportingFiles",
        "target",
        "sources"
    ],
    "comments": [
        "<reference path=\"./typings/tsd.d.ts\" />",
        "load gulp",
        "all files used in the app",
        "all supporting files used in app (ie: TypeScript interfaces)",
        "gulp.task('npm-publish', ['strip-js-ref-comment'], () => {",
        "});"
    ],
    "docstrings": [
        "* -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\n *\n *      tasks\n *\n * -+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-",
        "* Generates the app.ts references file dynamically from all application *.ts files.",
        "* Strip all JS comments used in TypeScript => JavaScript. This is designed to be run\n * prior to publishing a refreshed codebase => NPM registry as all TypeScript is\n * ignored when publishing to NPM per .npmignore.",
        "* Lint all TypeScript files except those 3rd party type definitions.",
        "* Compile TypeScript",
        "* Prepare the package for publication to NPM's registry. This includes:\n * - remove *.js for any TypeScript interfaces (as they are dummy files not used in JS)\n * - remove JS comments added by TypeScript compiler not needed at JS runtime\n * - publish to NPM registry"
    ],
    "functions": [],
    "classes": []
}