{
    "identifiers": [
        "itertools",
        "sys",
        "warnings",
        "sys",
        "path",
        "bson",
        "codec_options",
        "CodecOptions",
        "bson",
        "objectid",
        "ObjectId",
        "bson",
        "py3compat",
        "u",
        "bson",
        "son",
        "SON",
        "pymongo",
        "ASCENDING",
        "DESCENDING",
        "pymongo",
        "errors",
        "ConfigurationError",
        "DocumentTooLarge",
        "DuplicateKeyError",
        "InvalidDocument",
        "InvalidOperation",
        "OperationFailure",
        "WTimeoutError",
        "pymongo",
        "son_manipulator",
        "AutoReference",
        "NamespaceInjector",
        "SONManipulator",
        "pymongo",
        "write_concern",
        "WriteConcern",
        "test",
        "client_context",
        "qcheck",
        "unittest",
        "test",
        "test_client",
        "IntegrationTest",
        "test",
        "utils",
        "oid_generated_on_client",
        "rs_or_single_client",
        "wait_until",
        "IntegrationTest",
        "classmethod",
        "cls",
        "TestLegacy",
        "cls",
        "setUpClass",
        "client_context",
        "w",
        "warnings",
        "catch_warnings",
        "cls",
        "warn_context",
        "__enter__",
        "warnings",
        "simplefilter",
        "DeprecationWarning",
        "classmethod",
        "cls",
        "cls",
        "warn_context",
        "__exit__",
        "db",
        "db",
        "test",
        "drop",
        "assertEqual",
        "len",
        "db",
        "test",
        "find",
        "u",
        "db",
        "test",
        "insert",
        "doc",
        "assertEqual",
        "len",
        "db",
        "test",
        "find",
        "assertEqual",
        "doc",
        "db",
        "test",
        "find_one",
        "assertEqual",
        "doc",
        "_id",
        "assertTrue",
        "isinstance",
        "_id",
        "ObjectId",
        "sys",
        "platform",
        "startswith",
        "sys",
        "version_info",
        "SON",
        "client",
        "get_database",
        "db",
        "name",
        "codec_options",
        "CodecOptions",
        "as_class",
        "doc_class",
        "doc",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "insert",
        "doc",
        "db",
        "test",
        "find_one",
        "doc",
        "to_dict",
        "qcheck",
        "check_unittest",
        "remove_insert_find_one",
        "qcheck",
        "gen_mongo_dict",
        "db",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "test",
        "insert",
        "i",
        "i",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "insert",
        "i",
        "i",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "db",
        "db",
        "drop_collection",
        "u",
        "u",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "test",
        "insert",
        "doc1",
        "doc2",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "assertEqual",
        "doc1",
        "db",
        "test",
        "find_one",
        "u",
        "assertEqual",
        "doc2",
        "db",
        "test",
        "find_one",
        "u",
        "assertEqual",
        "len",
        "ids",
        "assertEqual",
        "doc1",
        "ids",
        "assertEqual",
        "doc2",
        "ids",
        "db",
        "test",
        "insert",
        "assertTrue",
        "isinstance",
        "ids",
        "assertEqual",
        "len",
        "ids",
        "assertRaises",
        "InvalidOperation",
        "db",
        "test",
        "insert",
        "assertRaises",
        "InvalidOperation",
        "db",
        "test",
        "insert",
        "i",
        "i",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "ensure_index",
        "ASCENDING",
        "unique",
        "db",
        "test",
        "insert",
        "i",
        "i",
        "w",
        "wait_until",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "insert",
        "w",
        "wait_until",
        "db",
        "test",
        "count",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "db",
        "drop_collection",
        "client",
        "get_database",
        "db",
        "name",
        "write_concern",
        "WriteConcern",
        "w",
        "db",
        "test",
        "ensure_index",
        "ASCENDING",
        "unique",
        "db",
        "test",
        "insert",
        "wait_until",
        "db",
        "test",
        "count",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "fsync",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "w",
        "db",
        "drop_collection",
        "db",
        "assertRaises",
        "db",
        "test",
        "insert",
        "assertRaises",
        "db",
        "test",
        "insert",
        "assertRaises",
        "db",
        "test",
        "insert",
        "db",
        "drop_collection",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "test",
        "insert",
        "u",
        "u",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "drop_collection",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "test",
        "insert",
        "x",
        "itertools",
        "repeat",
        "assertEqual",
        "db",
        "test",
        "find",
        "count",
        "db",
        "test_insert_manipulate_false",
        "collection",
        "drop",
        "ObjectId",
        "oid",
        "assertTrue",
        "collection",
        "insert",
        "doc",
        "manipulate",
        "assertEqual",
        "oid",
        "doc",
        "collection",
        "find_one",
        "assertFalse",
        "oid_generated_on_client",
        "server_doc",
        "assertEqual",
        "collection",
        "insert",
        "manipulate",
        "collection",
        "insert",
        "manipulate",
        "assertEqual",
        "ids",
        "collection",
        "drop",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "insert",
        "assertEqual",
        "db",
        "test",
        "count",
        "docs",
        "append",
        "oid",
        "docs",
        "append",
        "docs",
        "append",
        "docs",
        "append",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "docs",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "count",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "docs",
        "manipulate",
        "continue_on_error",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "drop_collection",
        "db",
        "test",
        "insert",
        "oid",
        "w",
        "assertEqual",
        "db",
        "test",
        "count",
        "docs",
        "pop",
        "docs",
        "oid",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "insert",
        "docs",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "insert",
        "docs",
        "manipulate",
        "continue_on_error",
        "w",
        "wait_until",
        "db",
        "test",
        "count",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "insert",
        "a",
        "db",
        "test",
        "insert",
        "a",
        "w",
        "assertRaises",
        "OperationFailure",
        "db",
        "test",
        "insert",
        "a",
        "db",
        "test",
        "insert",
        "doc",
        "assertTrue",
        "doc",
        "db",
        "test",
        "insert",
        "docs",
        "doc",
        "docs",
        "assertTrue",
        "doc",
        "client",
        "test_insert_large_batch",
        "addCleanup",
        "client",
        "drop_database",
        "client",
        "max_bson_size",
        "client_context",
        "version",
        "at_least",
        "max_bson_size",
        "max_bson_size",
        "big_string",
        "big_string",
        "big_string",
        "big_string",
        "db",
        "collection_0",
        "insert",
        "successful_insert",
        "w",
        "assertEqual",
        "db",
        "collection_0",
        "count",
        "big_string",
        "big_string",
        "big_string",
        "big_string",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "collection_1",
        "insert",
        "insert_second_fails",
        "assertEqual",
        "db",
        "collection_1",
        "count",
        "assertTrue",
        "db",
        "collection_2",
        "insert",
        "insert_second_fails",
        "w",
        "wait_until",
        "db",
        "collection_2",
        "count",
        "timeout",
        "big_string",
        "big_string",
        "big_string",
        "big_string",
        "assertRaises",
        "OperationFailure",
        "context",
        "db",
        "collection_3",
        "insert",
        "insert_two_failures",
        "continue_on_error",
        "w",
        "assertIn",
        "context",
        "exception",
        "assertEqual",
        "db",
        "collection_3",
        "count",
        "db",
        "collection_4",
        "insert",
        "insert_two_failures",
        "continue_on_error",
        "w",
        "wait_until",
        "db",
        "collection_4",
        "count",
        "timeout",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "save",
        "db",
        "test",
        "update",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "id1",
        "db",
        "test",
        "save",
        "db",
        "test",
        "update",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "id1",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "id2",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "update",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "SONManipulator",
        "son",
        "dummy",
        "son",
        "db",
        "add_son_manipulator",
        "AddField",
        "db",
        "test",
        "update",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "db",
        "test",
        "update",
        "manipulate",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "db",
        "db",
        "drop_collection",
        "client",
        "max_wire_version",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "update",
        "used_write_commands",
        "assertEqual",
        "result",
        "assertFalse",
        "result",
        "db",
        "test",
        "update",
        "used_write_commands",
        "assertEqual",
        "result",
        "assertFalse",
        "result",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "save",
        "db",
        "test",
        "save",
        "db",
        "test",
        "save",
        "db",
        "test",
        "update",
        "multi",
        "assertEqual",
        "db",
        "test",
        "count",
        "doc",
        "db",
        "test",
        "find",
        "assertEqual",
        "doc",
        "assertEqual",
        "db",
        "test",
        "update",
        "multi",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "update",
        "upsert",
        "db",
        "test",
        "update",
        "upsert",
        "assertEqual",
        "db",
        "test",
        "count",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "create_index",
        "unique",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "insert",
        "assertEqual",
        "db",
        "test",
        "update",
        "_id",
        "w",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "update",
        "_id",
        "assertEqual",
        "db",
        "test",
        "update",
        "_id",
        "assertEqual",
        "db",
        "test",
        "update",
        "db",
        "drop_collection",
        "db",
        "test",
        "c",
        "drop",
        "ObjectId",
        "c",
        "update",
        "oid",
        "upsert",
        "assertFalse",
        "res",
        "get",
        "assertEqual",
        "oid",
        "res",
        "get",
        "c",
        "update",
        "oid",
        "assertTrue",
        "res",
        "get",
        "db",
        "drop_collection",
        "db",
        "test",
        "save",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "_id",
        "assertTrue",
        "isinstance",
        "_id",
        "ObjectId",
        "db",
        "test",
        "save",
        "db",
        "test",
        "find_one",
        "assertEqual",
        "doc",
        "assertEqual",
        "doc",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "save",
        "_id",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "save",
        "assertEqual",
        "db",
        "test",
        "count",
        "assertEqual",
        "db",
        "test",
        "find_one",
        "db",
        "test",
        "create_index",
        "unique",
        "db",
        "test",
        "save",
        "w",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "save",
        "db",
        "drop_collection",
        "db",
        "drop_collection",
        "assertTrue",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "find_one",
        "InvalidDocument",
        "client_context",
        "version",
        "at_least",
        "OperationFailure",
        "assertRaises",
        "expected",
        "db",
        "test",
        "save",
        "doc",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "create_index",
        "unique",
        "db",
        "test",
        "save",
        "db",
        "test",
        "save",
        "w",
        "assertRaises",
        "DuplicateKeyError",
        "db",
        "test",
        "save",
        "db",
        "drop_collection",
        "db",
        "test",
        "save",
        "doc",
        "assertTrue",
        "doc",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "insert",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "multi",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "insert",
        "db",
        "test",
        "insert",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "db",
        "drop_collection",
        "db",
        "test",
        "insert_one",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "test",
        "remove",
        "assertEqual",
        "db",
        "test",
        "count",
        "db",
        "connection",
        "max_bson_size",
        "max_size",
        "assertEqual",
        "max_size",
        "DocumentTooLarge",
        "client_context",
        "version",
        "at_least",
        "OperationFailure",
        "assertRaises",
        "expected",
        "db",
        "test",
        "insert",
        "max_size",
        "assertRaises",
        "expected",
        "db",
        "test",
        "save",
        "max_size",
        "assertRaises",
        "expected",
        "db",
        "test",
        "insert",
        "max_size",
        "db",
        "test",
        "insert",
        "half_size",
        "half_size",
        "db",
        "test",
        "insert",
        "assertRaises",
        "DocumentTooLarge",
        "db",
        "test",
        "update",
        "max_size",
        "w",
        "db",
        "test",
        "update",
        "max_size",
        "db",
        "test",
        "save",
        "w",
        "wtimeout",
        "db",
        "test",
        "insert",
        "w",
        "wtimeout",
        "db",
        "test",
        "remove",
        "w",
        "wtimeout",
        "db",
        "test",
        "update",
        "w",
        "wtimeout",
        "client_context",
        "replica_set_name",
        "client_context",
        "w",
        "f",
        "args",
        "kwargs",
        "f",
        "args",
        "kwargs",
        "WTimeoutError",
        "exc",
        "assertIsNotNone",
        "exc",
        "details",
        "OperationFailure",
        "exc",
        "assertIsNotNone",
        "exc",
        "details",
        "assertEqual",
        "exc",
        "code",
        "exc",
        "fail",
        "f",
        "db",
        "test",
        "wtimeout_err",
        "coll",
        "save",
        "w",
        "w",
        "wtimeout",
        "wtimeout_err",
        "coll",
        "insert",
        "w",
        "w",
        "wtimeout",
        "wtimeout_err",
        "coll",
        "update",
        "w",
        "w",
        "wtimeout",
        "wtimeout_err",
        "coll",
        "remove",
        "w",
        "w",
        "wtimeout",
        "assertRaises",
        "ConfigurationError",
        "db",
        "test",
        "insert",
        "j",
        "fsync",
        "db",
        "test",
        "c",
        "drop",
        "c",
        "insert",
        "warnings",
        "catch_warnings",
        "warnings",
        "simplefilter",
        "DeprecationWarning",
        "assertRaises",
        "DeprecationWarning",
        "c",
        "find_and_modify",
        "client_context",
        "version",
        "at_least",
        "c",
        "ensure_index",
        "unique",
        "assertRaises",
        "DuplicateKeyError",
        "c",
        "find_and_modify",
        "query",
        "update",
        "upsert",
        "c",
        "drop_indexes",
        "assertEqual",
        "c",
        "find_and_modify",
        "assertEqual",
        "c",
        "find_and_modify",
        "assertEqual",
        "c",
        "find_and_modify",
        "remove",
        "assertEqual",
        "c",
        "find_one",
        "assertEqual",
        "c",
        "find_and_modify",
        "client_context",
        "version",
        "at_least",
        "assertEqual",
        "c",
        "find_and_modify",
        "upsert",
        "assertEqual",
        "c",
        "find_and_modify",
        "upsert",
        "assertEqual",
        "c",
        "find_and_modify",
        "upsert",
        "assertEqual",
        "c",
        "find_and_modify",
        "fields",
        "assertEqual",
        "c",
        "find_and_modify",
        "fields",
        "c",
        "find_and_modify",
        "upsert",
        "full_response",
        "fields",
        "assertEqual",
        "result",
        "assertEqual",
        "result",
        "c",
        "find_and_modify",
        "upsert",
        "full_response",
        "fields",
        "assertEqual",
        "result",
        "assertEqual",
        "result",
        "c",
        "find_and_modify",
        "fields",
        "assertFalse",
        "isinstance",
        "result",
        "ExtendedDict",
        "db",
        "get_collection",
        "codec_options",
        "CodecOptions",
        "as_class",
        "ExtendedDict",
        "c",
        "find_and_modify",
        "fields",
        "assertTrue",
        "isinstance",
        "result",
        "ExtendedDict",
        "db",
        "test",
        "c",
        "drop",
        "j",
        "c",
        "insert",
        "j",
        "DESCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "ASCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "DESCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "ASCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "SON",
        "DESCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "SON",
        "ASCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "collections",
        "OrderedDict",
        "OrderedDict",
        "DESCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "OrderedDict",
        "ASCENDING",
        "assertEqual",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "ImportError",
        "DESCENDING",
        "DESCENDING",
        "assertRaises",
        "c",
        "find_and_modify",
        "sort",
        "sort",
        "SONManipulator",
        "son",
        "dummy",
        "SON",
        "son",
        "copy",
        "copy",
        "copy",
        "son",
        "collection",
        "SON",
        "son",
        "collection",
        "name",
        "copy",
        "client",
        "pymongo_test",
        "db",
        "add_son_manipulator",
        "AddCollectionNameManipulator",
        "db",
        "test",
        "c",
        "drop",
        "c",
        "insert",
        "assertEqual",
        "c",
        "find_and_modify",
        "manipulate",
        "assertEqual",
        "c",
        "find_and_modify",
        "manipulate",
        "assertEqual",
        "c",
        "find_and_modify",
        "assertEqual",
        "c",
        "find_and_modify",
        "rs_or_single_client",
        "max_pool_size",
        "pymongo_test",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "save",
        "db",
        "test",
        "update",
        "w",
        "assertTrue",
        "db",
        "last_status",
        "db",
        "test",
        "update",
        "w",
        "assertFalse",
        "db",
        "last_status",
        "client",
        "pymongo_test",
        "db",
        "add_son_manipulator",
        "AutoReference",
        "db",
        "db",
        "add_son_manipulator",
        "NamespaceInjector",
        "db",
        "test",
        "a",
        "remove",
        "db",
        "test",
        "b",
        "remove",
        "db",
        "test",
        "c",
        "remove",
        "u",
        "db",
        "test",
        "a",
        "save",
        "a",
        "a",
        "db",
        "test",
        "b",
        "save",
        "b",
        "b",
        "db",
        "test",
        "c",
        "save",
        "c",
        "db",
        "test",
        "a",
        "save",
        "a",
        "assertEqual",
        "db",
        "test",
        "a",
        "find_one",
        "a",
        "assertEqual",
        "db",
        "test",
        "b",
        "find_one",
        "a",
        "assertEqual",
        "db",
        "test",
        "c",
        "find_one",
        "a",
        "assertEqual",
        "db",
        "test",
        "b",
        "find_one",
        "b",
        "assertEqual",
        "db",
        "test",
        "c",
        "find_one",
        "b",
        "assertEqual",
        "db",
        "test",
        "c",
        "find_one",
        "c",
        "client",
        "pymongo_test",
        "db",
        "add_son_manipulator",
        "AutoReference",
        "db",
        "db",
        "add_son_manipulator",
        "NamespaceInjector",
        "db",
        "drop_collection",
        "db",
        "drop_collection",
        "db",
        "messages",
        "save",
        "message_1",
        "db",
        "messages",
        "save",
        "message_2",
        "message_1",
        "message_2",
        "db",
        "users",
        "save",
        "user",
        "db",
        "messages",
        "update",
        "message_1",
        "assertEqual",
        "db",
        "users",
        "find_one",
        "assertEqual",
        "db",
        "users",
        "find_one",
        "value",
        "value",
        "SONManipulator",
        "thing",
        "dummy",
        "thing",
        "value",
        "client",
        "foo",
        "db",
        "add_son_manipulator",
        "ThingTransformer",
        "Thing",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "insert",
        "t",
        "db",
        "test",
        "find_one",
        "assertEqual",
        "get",
        "value",
        "value",
        "SONManipulator",
        "thing",
        "dummy",
        "thing",
        "value",
        "son",
        "dummy",
        "Thing",
        "son",
        "ThingTransformer",
        "client",
        "foo",
        "db",
        "add_son_manipulator",
        "Child",
        "Thing",
        "db",
        "test",
        "remove",
        "db",
        "test",
        "insert",
        "t",
        "db",
        "test",
        "find_one",
        "assertTrue",
        "isinstance",
        "Thing",
        "assertEqual",
        "value",
        "unittest",
        "main"
    ],
    "literals": [
        "\"\"",
        "\"ignore\"",
        "\"hello\"",
        "\"world\"",
        "\"_id\"",
        "'java'",
        "'a'",
        "'a'",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"mike\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"mike\"",
        "\"_id\"",
        "\"_id\"",
        "\"hello\"",
        "\"test\"",
        "'i'",
        "'i'",
        "'insert 5 documents'",
        "'i'",
        "'insert 1 document'",
        "'i'",
        "\"test\"",
        "'i'",
        "'i'",
        "'insert 1 document'",
        "'i'",
        "'i'",
        "\"test\"",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"world\"",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "'a'",
        "'a'",
        "'_id'",
        "\"test\"",
        "\"one\"",
        "\"_id\"",
        "\"two\"",
        "\"three\"",
        "\"four\"",
        "\"five\"",
        "\"test\"",
        "\"_id\"",
        "\"one\"",
        "\"_id\"",
        "\"_id\"",
        "'insert 3 documents'",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"world\"",
        "\"_id\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"world\"",
        "\"_id\"",
        "'test_insert_large_batch'",
        "'x'",
        "'x'",
        "'x'",
        "'x'",
        "'x'",
        "'x'",
        "'_id'",
        "'id0'",
        "'x'",
        "'_id'",
        "'id0'",
        "'x'",
        "'_id'",
        "'id1'",
        "'x'",
        "'_id'",
        "'id2'",
        "'x'",
        "'insert 1 document'",
        "'_id'",
        "'id0'",
        "'x'",
        "'_id'",
        "'id0'",
        "'x'",
        "'_id'",
        "'id1'",
        "'x'",
        "'_id'",
        "'id1'",
        "'x'",
        "'id1'",
        "'insert 2 documents'",
        "\"test\"",
        "\"x\"",
        "\"$inc\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"$inc\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"test\"",
        "'_id'",
        "'_id'",
        "'a'",
        "'_id'",
        "'a'",
        "'field'",
        "'value'",
        "'_id'",
        "'a'",
        "'_id'",
        "'a'",
        "'_id'",
        "'a'",
        "'_id'",
        "'a'",
        "'field'",
        "'value'",
        "\"test\"",
        "'_id'",
        "'_id'",
        "'$set'",
        "'x'",
        "'nModified'",
        "'nModified'",
        "'_id'",
        "'$set'",
        "'x'",
        "'nModified'",
        "'nModified'",
        "\"test\"",
        "\"x\"",
        "\"y\"",
        "\"x\"",
        "\"y\"",
        "\"x\"",
        "\"y\"",
        "\"x\"",
        "\"$set\"",
        "\"y\"",
        "\"y\"",
        "\"x\"",
        "\"$set\"",
        "\"y\"",
        "\"n\"",
        "\"test\"",
        "\"page\"",
        "\"/\"",
        "\"$inc\"",
        "\"count\"",
        "\"page\"",
        "\"/\"",
        "\"$inc\"",
        "\"count\"",
        "\"count\"",
        "\"test\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"_id\"",
        "\"$inc\"",
        "\"x\"",
        "\"_id\"",
        "\"$inc\"",
        "\"x\"",
        "\"_id\"",
        "\"$inc\"",
        "\"x\"",
        "\"n\"",
        "\"_id\"",
        "\"foo\"",
        "\"$inc\"",
        "\"x\"",
        "\"n\"",
        "\"test\"",
        "'_id'",
        "'$set'",
        "'a'",
        "'a'",
        "'updatedExisting'",
        "'upserted'",
        "'_id'",
        "'$set'",
        "'b'",
        "'b'",
        "'updatedExisting'",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "\"_id\"",
        "\"_id\"",
        "\"explicit_id\"",
        "\"hello\"",
        "\"bar\"",
        "\"_id\"",
        "\"explicit_id\"",
        "'_id'",
        "'explicit_id'",
        "'hello'",
        "'bar'",
        "'_id'",
        "'hello'",
        "'world'",
        "'_id'",
        "'explicit_id'",
        "'hello'",
        "'baz'",
        "'baz'",
        "'_id'",
        "'explicit_id'",
        "'hello'",
        "\"hello\"",
        "'_id'",
        "'explicit_id'",
        "'hello'",
        "'world'",
        "'_id'",
        "'explicit_id'",
        "'hello'",
        "'world'",
        "\"test\"",
        "\"test\"",
        "\"hello\"",
        "\"world\"",
        "'a.b'",
        "'c'",
        "\"test\"",
        "\"hello\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"world\"",
        "\"hello\"",
        "\"world\"",
        "\"test\"",
        "\"hello\"",
        "\"jesse\"",
        "\"_id\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"x\"",
        "\"y\"",
        "\"test\"",
        "\"_id\"",
        "\"foo\"",
        "\"x\"",
        "\"foo\"",
        "\"x\"",
        "\"x\"",
        "\"foo\"",
        "\"x\"",
        "\"foo\"",
        "\"x\"",
        "\"foo\"",
        "\"x\"",
        "\"bar\"",
        "\"x\"",
        "\"bar\"",
        "\"x\"",
        "\"bar\"",
        "\"x\"",
        "\"bar\"",
        "\"x\"",
        "\"bar\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"Unexpected error: %r\"",
        "\"%s should have failed\"",
        "\"x\"",
        "\"x\"",
        "\"x\"",
        "\"y\"",
        "\"x\"",
        "\"_id\"",
        "'_id'",
        "'i'",
        "\"error\"",
        "'i'",
        "'i'",
        "'i'",
        "'j'",
        "'$set'",
        "'k'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'_id'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "'_id'",
        "'i'",
        "\"value\"",
        "\"lastErrorObject\"",
        "\"updatedExisting\"",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "'_id'",
        "'i'",
        "\"value\"",
        "\"lastErrorObject\"",
        "\"updatedExisting\"",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "\"test\"",
        "'_id'",
        "'$inc'",
        "'i'",
        "'i'",
        "'j'",
        "'i'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'$inc'",
        "'i'",
        "'j'",
        "'j'",
        "'foo'",
        "'$inc'",
        "'i'",
        "'collection'",
        "'collection'",
        "'collection'",
        "'_id'",
        "'i'",
        "'_id'",
        "'i'",
        "'collection'",
        "'test'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'collection'",
        "'test'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "'_id'",
        "'i'",
        "'_id'",
        "'$inc'",
        "'i'",
        "\"i\"",
        "\"i\"",
        "\"$set\"",
        "\"i\"",
        "\"updatedExisting\"",
        "\"i\"",
        "\"$set\"",
        "\"i\"",
        "\"updatedExisting\"",
        "\"hello\"",
        "\"world\"",
        "\"test\"",
        "\"another test\"",
        "\"hello\"",
        "\"mike\"",
        "\"test\"",
        "\"another test\"",
        "\"test\"",
        "\"another test\"",
        "\"users\"",
        "\"messages\"",
        "\"title\"",
        "\"foo\"",
        "\"title\"",
        "\"bar\"",
        "\"messages\"",
        "\"title\"",
        "\"buzz\"",
        "\"buzz\"",
        "\"messages\"",
        "\"title\"",
        "\"bar\"",
        "\"messages\"",
        "\"title\"",
        "'value'",
        "'value'",
        "'value'",
        "'value'",
        "'value'",
        "'value'",
        "'value'",
        "'value'",
        "\"__main__\""
    ],
    "variables": [
        "cls",
        "w",
        "cls",
        "warn_context",
        "cls",
        "warn_context",
        "db",
        "doc",
        "_id",
        "doc_class",
        "doc_class",
        "db",
        "db",
        "db",
        "doc1",
        "doc2",
        "ids",
        "ids",
        "db",
        "db",
        "db",
        "ids",
        "collection",
        "oid",
        "doc",
        "server_doc",
        "ids",
        "db",
        "oid",
        "docs",
        "oid",
        "db",
        "a",
        "doc",
        "docs",
        "db",
        "max_bson_size",
        "big_string",
        "big_string",
        "successful_insert",
        "insert_second_fails",
        "insert_two_failures",
        "db",
        "id1",
        "id2",
        "db",
        "son",
        "db",
        "used_write_commands",
        "result",
        "result",
        "db",
        "db",
        "db",
        "_id",
        "c",
        "oid",
        "res",
        "res",
        "_id",
        "doc",
        "doc",
        "doc",
        "expected",
        "expected",
        "db",
        "doc",
        "db",
        "max_size",
        "half_size",
        "expected",
        "expected",
        "w",
        "coll",
        "c",
        "result",
        "result",
        "result",
        "c",
        "result",
        "c",
        "sort",
        "sort",
        "sort",
        "sort",
        "sort",
        "sort",
        "sort",
        "sort",
        "sort",
        "copy",
        "copy",
        "copy",
        "db",
        "c",
        "db",
        "db",
        "a",
        "b",
        "c",
        "a",
        "db",
        "message_1",
        "message_2",
        "user",
        "value",
        "db",
        "t",
        "value",
        "db",
        "t"
    ],
    "comments": [
        "Copyright 2015 MongoDB, Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Tests legacy insert.",
        "Work around http://bugs.jython.org/issue1728",
        "SON equality is order sensitive.",
        "Only legacy insert currently supports insert from a generator.",
        "Tests legacy insert.",
        "Generator that raises StopIteration on first call to next().",
        "Tests legacy insert.",
        "No error",
        "No error",
        "No error.",
        "Implied acknowledged.",
        "Explicit acknowledged.",
        "Tests legacy insert.",
        "Test three aspects of legacy insert with manipulate=False:",
        "1. The return value is None or [None] as appropriate.",
        "2. _id is not set on the passed-in document object.",
        "3. _id is not sent to server.",
        "The return value is None.",
        "insert() shouldn't set _id on the passed-in document object.",
        "_id is not sent to server, so it's generated server-side.",
        "Bulk insert. The return value is a list of None.",
        "Tests legacy insert.",
        "Duplicate _id.",
        "Tests legacy insert.",
        "Tests legacy insert.",
        "Tests legacy insert.",
        "Write commands are limited to 16MB + 16k per batch",
        "Batch insert that requires 2 batches.",
        "Test that inserts fail after first error.",
        "2 batches, 2nd insert fails, don't continue on error.",
        "2 batches, ids of docs 0 and 1 are dupes, ids of docs 2 and 3 are",
        "dupes. Acknowledged, continue on error.",
        "Only the first and third documents should be inserted.",
        "2 batches, 2 errors, unacknowledged, continue on error.",
        "Only the first and third documents are inserted.",
        "Tests legacy update.",
        "Tests legacy update.",
        "Tests legacy update.",
        "x is already 1.",
        "Tests legacy update.",
        "Tests legacy update.",
        "Tests legacy update.",
        "MongoDB versions >= 2.6.0 don't return the updatedExisting field",
        "and return upsert _id in an array subdocument. This test should",
        "pass regardless of server version or type (mongod/s).",
        "Tests legacy update.",
        "Tests legacy save.",
        "Save a doc with autogenerated id",
        "Save a doc with explicit id",
        "Save docs with _id field already present (shouldn't create new docs)",
        "Acknowledged mode.",
        "No exception, even though we duplicate the first doc's \"hello\" value",
        "Tests legacy save.",
        "Tests legacy save.",
        "Tests legacy save.",
        "Tests legacy remove.",
        "Tests legacy remove.",
        "Tests legacy remove.",
        "Tests legacy insert, save, and update.",
        "Document too large handled by the server",
        "Use w=0 here to test legacy doc size checking in all server versions",
        "This will pass with OP_UPDATE or the update command.",
        "Tests legacy write methods.",
        "client_context.w is the number of hosts in the replica set",
        "MongoDB 2.8+ raises error code 100, CannotSatisfyWriteConcern,",
        "if w > number of members. Older versions just time out after 1 ms",
        "as if they had enough secondaries but some are lagging. They",
        "return an error with 'wtimeout': True and no code.",
        "can't use fsync and j options together",
        "Test that we raise DuplicateKeyError when appropriate.",
        "MongoDB doesn't have a code field for DuplicateKeyError",
        "from commands before 2.2.",
        "Test correct findAndModify",
        "The return value changed in 2.1.2. See SERVER-6226.",
        "Test with full_response=True.",
        "Test that a standard dict with two keys is rejected.",
        "Test correct findAndModify",
        "With manipulators",
        "With out manipulators",
        "Tests many legacy API elements.",
        "We must call getlasterror on same socket as the last operation.",
        "Legacy API.",
        "Legacy API.",
        "PYTHON-709: Some users rely on their custom SONManipulators to run",
        "before any other checks, so they can insert non-dict objects and",
        "have them dictified before the _id is inserted or any other",
        "processing.",
        "Tests legacy API elements.",
        "Tests legacy API elements."
    ],
    "docstrings": [
        "\"\"\"Test various legacy / deprecated API features.\"\"\""
    ],
    "functions": [
        "setUpClass",
        "tearDownClass",
        "test_insert_find_one",
        "remove_insert_find_one",
        "test_generator_insert",
        "test_insert_multiple",
        "test_insert_multiple_with_duplicate",
        "test_insert_iterables",
        "test_insert_manipulate_false",
        "test_continue_on_error",
        "test_acknowledged_insert",
        "test_insert_adds_id",
        "test_insert_large_batch",
        "test_update",
        "test_update_manipulate",
        "transform_incoming",
        "test_update_nmodified",
        "test_multi_update",
        "test_upsert",
        "test_acknowledged_update",
        "test_update_backward_compat",
        "test_save",
        "test_save_with_invalid_key",
        "test_acknowledged_save",
        "test_save_adds_id",
        "test_remove_one",
        "test_remove_all",
        "test_remove_non_objectid",
        "test_write_large_document",
        "test_last_error_options",
        "wtimeout_err",
        "test_find_and_modify",
        "test_find_and_modify_with_sort",
        "test_find_and_modify_with_manipulator",
        "will_copy",
        "transform_incoming",
        "transform_outgoing",
        "test_last_status",
        "test_auto_ref_and_deref",
        "test_auto_ref_and_deref_list",
        "test_object_to_dict_transformer",
        "transform_incoming",
        "test_son_manipulator_inheritance",
        "transform_incoming",
        "transform_outgoing"
    ],
    "classes": [
        "TestLegacy",
        "AddField",
        "ExtendedDict",
        "AddCollectionNameManipulator",
        "Thing",
        "ThingTransformer",
        "Thing",
        "ThingTransformer",
        "Child"
    ]
}