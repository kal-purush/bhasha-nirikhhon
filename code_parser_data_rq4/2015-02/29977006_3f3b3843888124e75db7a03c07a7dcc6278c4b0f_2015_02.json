{
    "identifiers": [
        "com",
        "squareup",
        "okhttp",
        "com",
        "squareup",
        "okhttp",
        "Util",
        "java",
        "net",
        "Proxy",
        "java",
        "net",
        "UnknownHostException",
        "java",
        "util",
        "javax",
        "net",
        "ssl",
        "HostnameVerifier",
        "javax",
        "net",
        "ssl",
        "SSLSocketFactory",
        "com",
        "squareup",
        "okhttp",
        "Util",
        "equal",
        "proxy",
        "uriHost",
        "uriPort",
        "sslSocketFactory",
        "hostnameVerifier",
        "authenticator",
        "transports",
        "uriHost",
        "uriPort",
        "sslSocketFactory",
        "hostnameVerifier",
        "authenticator",
        "proxy",
        "transports",
        "uriHost",
        "uriPort",
        "uriPort",
        "authenticator",
        "transports",
        "proxy",
        "proxy",
        "uriHost",
        "uriHost",
        "uriPort",
        "uriPort",
        "sslSocketFactory",
        "sslSocketFactory",
        "hostnameVerifier",
        "hostnameVerifier",
        "authenticator",
        "authenticator",
        "transports",
        "Util",
        "immutableList",
        "transports",
        "uriHost",
        "uriPort",
        "sslSocketFactory",
        "hostnameVerifier",
        "authenticator",
        "transports",
        "proxy",
        "Override",
        "other",
        "other",
        "that",
        "other",
        "equal",
        "proxy",
        "that",
        "proxy",
        "uriHost",
        "equals",
        "that",
        "uriHost",
        "uriPort",
        "that",
        "uriPort",
        "equal",
        "sslSocketFactory",
        "that",
        "sslSocketFactory",
        "equal",
        "hostnameVerifier",
        "that",
        "hostnameVerifier",
        "equal",
        "authenticator",
        "that",
        "authenticator",
        "equal",
        "transports",
        "that",
        "transports",
        "Override",
        "result",
        "result",
        "result",
        "uriHost",
        "hashCode",
        "result",
        "result",
        "uriPort",
        "result",
        "result",
        "sslSocketFactory",
        "sslSocketFactory",
        "hashCode",
        "result",
        "result",
        "hostnameVerifier",
        "hostnameVerifier",
        "hashCode",
        "result",
        "result",
        "authenticator",
        "authenticator",
        "hashCode",
        "result",
        "result",
        "proxy",
        "proxy",
        "hashCode",
        "result",
        "result",
        "transports",
        "hashCode",
        "result"
    ],
    "literals": [
        "\"uriHost == null\"",
        "\"uriPort <= 0: \"",
        "\"authenticator == null\"",
        "\"transports == null\""
    ],
    "variables": [
        "proxy",
        "uriHost",
        "uriPort",
        "sslSocketFactory",
        "hostnameVerifier",
        "authenticator",
        "transports"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (C) 2012 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* A specification for a connection to an origin server. For simple connections,\n * this is the server's hostname and port. If an explicit proxy is requested (or\n * {@link Proxy#NO_PROXY no proxy} is explicitly requested), this also includes\n * that proxy information. For secure connections the address also includes the\n * SSL socket factory and hostname verifier.\n *\n * <p>HTTP requests that share the same {@code Address} may also share the same\n * {@link Connection}.",
        "Returns the hostname of the origin server.",
        "* Returns the port of the origin server; typically 80 or 443. Unlike\n   * may {@code getPort()} accessors, this method never returns -1.",
        "* Returns the SSL socket factory, or null if this is not an HTTPS\n   * address.",
        "* Returns the hostname verifier, or null if this is not an HTTPS\n   * address.",
        "* Returns the client's authenticator. This method never returns null.",
        "* Returns the client's transports. This method always returns a non-null list\n   * that contains \"http/1.1\", possibly among other transports.",
        "* Returns this address's explicitly-specified HTTP proxy, or null to\n   * delegate to the HTTP client's proxy selector."
    ],
    "functions": [
        "Address",
        "getUriHost",
        "getUriPort",
        "SSLSocketFactory",
        "getSslSocketFactory",
        "HostnameVerifier",
        "getHostnameVerifier",
        "OkAuthenticator",
        "getAuthenticator",
        "getTransports",
        "Proxy",
        "getProxy",
        "equals",
        "hashCode"
    ],
    "classes": [
        "Address"
    ]
}