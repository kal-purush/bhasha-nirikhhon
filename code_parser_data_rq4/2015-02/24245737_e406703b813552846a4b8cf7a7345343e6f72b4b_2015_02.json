{
    "identifiers": [
        "random",
        "math",
        "mesa",
        "Model",
        "Agent",
        "mesa",
        "time",
        "RandomActivation",
        "mesa",
        "space",
        "Grid",
        "mesa",
        "datacollection",
        "DataCollector",
        "Agent",
        "unique_id",
        "x",
        "y",
        "hardship",
        "regime_legitimacy",
        "risk_aversion",
        "threshold",
        "vision",
        "model",
        "Citizen",
        "unique_id",
        "model",
        "unique_id",
        "x",
        "y",
        "hardship",
        "regime_legitimacy",
        "risk_aversion",
        "threshold",
        "vision",
        "hardship",
        "regime_legitimacy",
        "model",
        "jail_sentence",
        "jail_sentence",
        "update_neighbors",
        "model",
        "update_estimated_arrest_probability",
        "model",
        "risk_aversion",
        "arrest_probability",
        "condition",
        "grievance",
        "net_risk",
        "threshold",
        "condition",
        "grievance",
        "net_risk",
        "threshold",
        "model",
        "movement",
        "empty_neighbors",
        "random",
        "choice",
        "empty_neighbors",
        "model",
        "grid",
        "y",
        "x",
        "model",
        "grid",
        "new_y",
        "new_x",
        "new_y",
        "model",
        "model",
        "grid",
        "get_neighborhood",
        "x",
        "y",
        "moore",
        "radius",
        "model",
        "grid",
        "get_cell_list_contents",
        "neighborhood",
        "c",
        "c",
        "neighborhood",
        "model",
        "grid",
        "is_cell_empty",
        "c",
        "model",
        "len",
        "c",
        "c",
        "neighbors",
        "c",
        "breed",
        "c",
        "neighbors",
        "c",
        "breed",
        "c",
        "condition",
        "c",
        "jail_sentence",
        "actives_in_vision",
        "math",
        "exp",
        "model",
        "arrest_prob_constant",
        "cops_in_vision",
        "actives_in_vision",
        "Agent",
        "unique_id",
        "x",
        "y",
        "vision",
        "model",
        "Cop",
        "unique_id",
        "model",
        "x",
        "y",
        "vision",
        "model",
        "update_neighbors",
        "model",
        "agent",
        "neighbors",
        "agent",
        "breed",
        "agent",
        "condition",
        "agent",
        "jail_sentence",
        "active_neighbors",
        "append",
        "agent",
        "active_neighbors",
        "random",
        "choice",
        "active_neighbors",
        "random",
        "randint",
        "model",
        "max_jail_term",
        "sentence",
        "model",
        "movement",
        "empty_neighbors",
        "random",
        "choice",
        "empty_neighbors",
        "model",
        "grid",
        "y",
        "x",
        "model",
        "grid",
        "new_y",
        "new_x",
        "new_y",
        "model",
        "model",
        "grid",
        "get_neighborhood",
        "x",
        "y",
        "moore",
        "radius",
        "model",
        "grid",
        "get_cell_list_contents",
        "neighborhood",
        "c",
        "c",
        "neighborhood",
        "model",
        "grid",
        "is_cell_empty",
        "c",
        "Model",
        "height",
        "width",
        "citizen_density",
        "cop_density",
        "citizen_vision",
        "cop_vision",
        "legitimacy",
        "max_jail_term",
        "active_threshold",
        "arrest_prob_constant",
        "movement",
        "max_iters",
        "CivilViolenceModel",
        "height",
        "width",
        "citizen_density",
        "cop_density",
        "citizen_vision",
        "cop_vision",
        "legitimacy",
        "max_jail_term",
        "active_threshold",
        "arrest_prob_constant",
        "movement",
        "max_iters",
        "RandomActivation",
        "Grid",
        "height",
        "width",
        "torus",
        "DataCollector",
        "model_reporters",
        "m",
        "count_type_citizens",
        "m",
        "m",
        "count_type_citizens",
        "m",
        "m",
        "count_jailed",
        "m",
        "agent_reporters",
        "a",
        "a",
        "x",
        "a",
        "a",
        "y",
        "a",
        "a",
        "breed",
        "a",
        "getattr",
        "a",
        "a",
        "getattr",
        "a",
        "a",
        "getattr",
        "a",
        "cop_density",
        "citizen_density",
        "ValueError",
        "x",
        "width",
        "y",
        "height",
        "random",
        "random",
        "cop_density",
        "Cop",
        "unique_id",
        "x",
        "y",
        "vision",
        "cop_vision",
        "model",
        "unique_id",
        "grid",
        "y",
        "cop",
        "schedule",
        "add",
        "cop",
        "random",
        "random",
        "cop_density",
        "citizen_density",
        "Citizen",
        "unique_id",
        "x",
        "y",
        "hardship",
        "random",
        "random",
        "regime_legitimacy",
        "legitimacy",
        "risk_aversion",
        "random",
        "random",
        "threshold",
        "active_threshold",
        "vision",
        "citizen_vision",
        "model",
        "unique_id",
        "grid",
        "y",
        "citizen",
        "schedule",
        "add",
        "citizen",
        "schedule",
        "step",
        "dc",
        "collect",
        "iteration",
        "iteration",
        "max_iters",
        "staticmethod",
        "model",
        "condition",
        "exclude_jailed",
        "agent",
        "model",
        "schedule",
        "agents",
        "agent",
        "breed",
        "exclude_jailed",
        "agent",
        "jail_sentence",
        "agent",
        "condition",
        "condition",
        "count",
        "count",
        "staticmethod",
        "model",
        "agent",
        "model",
        "schedule",
        "agents",
        "agent",
        "breed",
        "agent",
        "jail_sentence",
        "count",
        "count"
    ],
    "literals": [
        "'citizen'",
        "\"Quiescent\"",
        "'Quiescent'",
        "'Active'",
        "'Active'",
        "'Quiescent'",
        "'cop'",
        "'citizen'",
        "'Active'",
        "'cop'",
        "'citizen'",
        "'Active'",
        "\"Quiescent\"",
        "\"Quiescent\"",
        "\"Active\"",
        "\"Active\"",
        "\"Jailed\"",
        "\"x\"",
        "\"y\"",
        "'breed'",
        "\"jail_sentence\"",
        "'jail_sentence'",
        "\"condition\"",
        "\"condition\"",
        "\"arrest_probability\"",
        "\"arrest_probability\"",
        "'Cop density + citizen density must be less than 1'",
        "'cop'",
        "'citizen'"
    ],
    "variables": [
        "breed",
        "unique_id",
        "x",
        "y",
        "hardship",
        "regime_legitimacy",
        "risk_aversion",
        "threshold",
        "condition",
        "vision",
        "jail_sentence",
        "grievance",
        "arrest_probability",
        "net_risk",
        "condition",
        "condition",
        "new_x",
        "new_y",
        "new_x",
        "x",
        "y",
        "neighborhood",
        "neighbors",
        "empty_neighbors",
        "cops_in_vision",
        "actives_in_vision",
        "arrest_probability",
        "breed",
        "x",
        "y",
        "vision",
        "active_neighbors",
        "arrestee",
        "sentence",
        "arrestee",
        "jail_sentence",
        "new_x",
        "new_y",
        "new_x",
        "x",
        "y",
        "neighborhood",
        "neighbors",
        "empty_neighbors",
        "height",
        "width",
        "citizen_density",
        "cop_density",
        "citizen_vision",
        "cop_vision",
        "legitimacy",
        "max_jail_term",
        "active_threshold",
        "arrest_prob_constant",
        "movement",
        "running",
        "max_iters",
        "iteration",
        "schedule",
        "grid",
        "dc",
        "unique_id",
        "cop",
        "x",
        "citizen",
        "x",
        "running",
        "count",
        "count"
    ],
    "comments": [
        "no other changes or movements if agent is in jail.",
        "citizen counts herself, asking p(arrest | I Activate)"
    ],
    "docstrings": [
        "\"\"\"\n    A member of the general population, may or may not be in active rebellion.\n    Summary of rule: If grievance - risk > threshold, rebel.\n\n    Attributes:\n        unique_id: unique int\n        x, y: Grid coordinates\n        hardship: Agent's 'perceived hardship (i.e., physical or economic privation).' Exogenous, drawn from U(0,1).\n        regime_legitimacy: Agent's perception of regime legitimacy, equal across agents.  Exogenous.\n        risk_aversion: Exogenous, drawn from U(0,1).\n        threshold: if (grievance - (risk_aversion * arrest_probability)) > threshold, go/remain Active\n        vision: number of cells in each direction (N, S, E and W) that agent can inspect\n        condition: Can be \"Quiescent\" or \"Active;\" deterministic function of greivance, perceived risk, and\n        grievance: deterministic function of hardship and regime_legitimacy; how aggrieved is agent at the regime?\n        arrest_probability: agent's assessment of arrest probability, given rebellion\n\n    \"\"\"",
        "\"\"\"\n        Create a new Citizen.\n        Args:\n            unique_id: unique int\n            x, y: Grid coordinates\n            hardship: Agent's 'perceived hardship (i.e., physical or economic privation).' Exogenous, drawn from U(0,1).\n            regime_legitimacy: Agent's perception of regime legitimacy, equal across agents.  Exogenous.\n            risk_aversion: Exogenous, drawn from U(0,1).\n            threshold: if (grievance - (risk_aversion * arrest_probability)) > threshold, go/remain Active\n            vision: number of cells in each direction (N, S, E and W) that agent can inspect. Exogenous.\n            model: model instance\n        \"\"\"",
        "\"\"\"\n        Decide whether to activate, then move if applicable.\n        \"\"\"",
        "\"\"\"\n        Look around and see who my neighbors are\n        \"\"\"",
        "\"\"\"\n        Based on the ratio of cops to actives in my neighborhood, estimate the p(Arrest | I go active).\n\n        \"\"\"",
        "\"\"\"\n    A cop for life.  No defection.\n    Summary of rule: Inspect local vision and arrest a random active agent.\n\n    Attributes:\n        unique_id: unique int\n        x, y: Grid coordinates\n        vision: number of cells in each direction (N, S, E and W) that cop is able to inspect\n    \"\"\"",
        "\"\"\"\n        Create a new Cop.\n        Args:\n            unique_id: unique int\n            x, y: Grid coordinates\n            vision: number of cells in each direction (N, S, E and W) that agent can inspect. Exogenous.\n            model: model instance\n        \"\"\"",
        "\"\"\"\n        Inspect local vision and arrest a random active agent. Move if applicable.\n        \"\"\"",
        "\"\"\"\n        Look around and see who my neighbors are.\n        \"\"\"",
        "\"\"\"\n    Model 1 from \"Modeling civil violence: An agent-based computational approach,\" by Joshua Epstein.\n    http://www.pnas.org/content/99/suppl_3/7243.full\n    Attributes:\n        height: grid height\n        width: grid width\n        citizen_density: approximate % of cells occupied by citizens.\n        cop_density: approximate % of calles occupied by cops.\n        citizen_vision: number of cells in each direction (N, S, E and W) that citizen can inspect\n        cop_vision: number of cells in each direction (N, S, E and W) that cop can inspect\n        legitimacy:  (L) citizens' perception of regime legitimacy, equal across all citizens\n        max_jail_term: (J_max)\n        active_threshold: if (grievance - (risk_aversion * arrest_probability)) > threshold, citizen rebels\n        arrest_prob_constant: set to ensure agents make plausible arrest probability estimates\n        movement: binary, whether agents try to move at step end\n        max_iters: model may not have a natural stopping point, so we set a max.\n\n    \"\"\"",
        "\"\"\"\n        Advance the model by one step and collect data.\n        \"\"\"",
        "\"\"\"\n        Helper method to count agents by Quiescent/Active.\n        \"\"\"",
        "\"\"\"\n        Helper method to count jailed agents.\n        \"\"\""
    ],
    "functions": [
        "step",
        "update_neighbors",
        "update_estimated_arrest_probability",
        "step",
        "update_neighbors",
        "step",
        "count_type_citizens",
        "count_jailed"
    ],
    "classes": [
        "Citizen",
        "Cop",
        "CivilViolenceModel"
    ]
}