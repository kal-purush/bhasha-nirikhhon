{
    "identifiers": [
        "org",
        "archive",
        "wayback",
        "resourceindex",
        "java",
        "nio",
        "file",
        "StandardWatchEventKinds",
        "ENTRY_CREATE",
        "java",
        "nio",
        "file",
        "StandardWatchEventKinds",
        "ENTRY_DELETE",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "DirectoryStream",
        "java",
        "nio",
        "file",
        "FileSystems",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "nio",
        "file",
        "WatchEvent",
        "java",
        "nio",
        "file",
        "WatchKey",
        "java",
        "nio",
        "file",
        "WatchService",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "logging",
        "Logger",
        "org",
        "archive",
        "wayback",
        "resourceindex",
        "cdx",
        "CDXIndex",
        "LOGGER",
        "Logger",
        "getLogger",
        "getName",
        "watcherThread",
        "path",
        "path",
        "path",
        "Paths",
        "get",
        "path",
        "watcherThread",
        "watcherThread",
        "path",
        "e",
        "LOGGER",
        "log",
        "Level",
        "SEVERE",
        "e",
        "getMessage",
        "e",
        "watcherThread",
        "start",
        "addExistingSources",
        "path",
        "e",
        "LOGGER",
        "log",
        "Level",
        "SEVERE",
        "e",
        "getMessage",
        "e",
        "path",
        "toString",
        "path",
        "directoryStream",
        "Files",
        "newDirectoryStream",
        "path",
        "file",
        "directoryStream",
        "index",
        "index",
        "setPath",
        "file",
        "toString",
        "LOGGER",
        "info",
        "index",
        "getPath",
        "addSource",
        "index",
        "deleted",
        "sources",
        "remove",
        "deleted",
        "watcher",
        "dir",
        "path",
        "dir",
        "path",
        "watcher",
        "FileSystems",
        "getDefault",
        "newWatchService",
        "dir",
        "register",
        "watcher",
        "ENTRY_CREATE",
        "ENTRY_DELETE",
        "SuppressWarnings",
        "key",
        "key",
        "watcher",
        "take",
        "x",
        "key",
        "pollEvents",
        "kind",
        "kind",
        "kind",
        "ENTRY_CREATE",
        "ev",
        "cdx",
        "dir",
        "resolve",
        "ev",
        "context",
        "LOGGER",
        "info",
        "cdx",
        "index",
        "index",
        "setPath",
        "cdx",
        "toString",
        "LOGGER",
        "info",
        "index",
        "getPath",
        "addSource",
        "index",
        "kind",
        "ENTRY_DELETE",
        "ev",
        "cdx",
        "dir",
        "resolve",
        "ev",
        "context",
        "LOGGER",
        "info",
        "cdx",
        "index",
        "index",
        "setPath",
        "cdx",
        "toString",
        "removeSource",
        "index",
        "LOGGER",
        "info",
        "cdx",
        "valid",
        "key",
        "reset",
        "valid"
    ],
    "literals": [
        "\"Could not watch CDX directory: \"",
        "\"Could not add existing CDXs: \"",
        "\"Adding CDX: \"",
        "\"rawtypes\"",
        "\"unchecked\"",
        "\"Adding new CDX \"",
        "\"Adding CDX: \"",
        "\"Removing CDX \"",
        "\"CDX \"",
        "\" not found in list of sources.\""
    ],
    "variables": [
        "watcherThread",
        "path",
        "watcher",
        "dir",
        "key"
    ],
    "comments": [
        "\"If the key is no longer valid, the directory is inaccessible",
        "so exit the loop.\""
    ],
    "docstrings": [
        "* SearchResultSource that watches a single directory for new\n * SearchResultSources.\n * \n * @author rcoram\n *",
        "* adds already-existing SearchResultSource in the watched directory\n     * \n     * @param path\n     * @throws IOException",
        "* removes a SearchResultSource upon from the list of sources.\n     * \n     * @param deleted\n     * @return",
        "* Monitors a directory for ENTRY_CREATE events, creating\n     * SearchResultSources.\n     * \n     * @author rcoram\n     *"
    ],
    "functions": [
        "setPath",
        "getPath",
        "addExistingSources",
        "removeSource",
        "WatcherThread",
        "run"
    ],
    "classes": [
        "WatchedCDXSource",
        "WatcherThread"
    ]
}