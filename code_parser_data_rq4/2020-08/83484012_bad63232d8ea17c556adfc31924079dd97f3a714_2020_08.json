{
    "identifiers": [
        "tap_tester",
        "connections",
        "connections",
        "tap_tester",
        "menagerie",
        "menagerie",
        "tap_tester",
        "runner",
        "runner",
        "re",
        "TestGithubBase",
        "conn_id",
        "catalogs",
        "catalog",
        "catalogs",
        "menagerie",
        "get_annotated_schema",
        "conn_id",
        "catalog",
        "connections",
        "select_catalog_and_fields_via_metadata",
        "conn_id",
        "catalog",
        "schema",
        "TestGithubBase",
        "connections",
        "ensure_connection",
        "runner",
        "run_check_mode",
        "conn_id",
        "menagerie",
        "get_exit_status",
        "conn_id",
        "check_job_name",
        "menagerie",
        "verify_check_exit_status",
        "exit_status",
        "check_job_name",
        "menagerie",
        "get_catalogs",
        "conn_id",
        "assertGreater",
        "len",
        "found_catalogs",
        "msg",
        "format",
        "conn_id",
        "assertEqual",
        "len",
        "found_catalogs",
        "len",
        "expected_check_streams",
        "msg",
        "format",
        "len",
        "expected_check_streams",
        "len",
        "found_catalogs",
        "found_catalogs",
        "conn_id",
        "c",
        "c",
        "found_catalogs",
        "assertEqual",
        "expected_check_streams",
        "found_catalog_names",
        "msg",
        "assertTrue",
        "all",
        "re",
        "fullmatch",
        "name",
        "name",
        "found_catalog_names",
        "msg",
        "expected_check_streams",
        "symmetric_difference",
        "found_catalog_names",
        "assertEqual",
        "len",
        "diff",
        "msg",
        "format",
        "diff",
        "catalog",
        "catalog",
        "found_catalogs",
        "catalog",
        "get",
        "catalogs_to_test",
        "select_all_streams_and_fields",
        "conn_id",
        "our_catalogs",
        "runner",
        "run_sync_mode",
        "conn_id",
        "menagerie",
        "get_exit_status",
        "conn_id",
        "sync_job_name",
        "menagerie",
        "verify_sync_exit_status",
        "exit_status",
        "sync_job_name",
        "runner",
        "get_records_from_target_output",
        "catalog_name",
        "catalogs_to_test",
        "synced_records",
        "get",
        "catalog_name",
        "get",
        "assertGreater",
        "len",
        "synced_messages",
        "msg",
        "format",
        "catalog_name"
    ],
    "literals": [
        "'stream_id'",
        "\"tap_tester_github_issue_events_streams\"",
        "\"unable to locate schemas for connection {}\"",
        "\"Expected {} streams, actual was {} for connection {},\"",
        "\" actual {}\"",
        "'tap_stream_id'",
        "\"Expected streams don't match actual streams\"",
        "r\"[a-z_]+\"",
        "\"One or more streams don't follow standard naming\"",
        "\"discovered schemas do not match: {}\"",
        "\"discovered schemas are OK\"",
        "'issue_events'",
        "'tap_stream_id'",
        "'messages'",
        "\"Expect synced_messages to sync data for stream {}\""
    ],
    "variables": [
        "schema",
        "conn_id",
        "check_job_name",
        "exit_status",
        "found_catalogs",
        "found_catalog_names",
        "diff",
        "catalogs_to_test",
        "our_catalogs",
        "sync_job_name",
        "exit_status",
        "synced_records",
        "synced_messages"
    ],
    "comments": [
        "run in check mode",
        "verify check exit codes",
        "Verify stream names follow naming convention",
        "streams should only have lowercase alphas and underscores",
        "Run a sync job using orchestrator",
        "Verify tap and target exit codes",
        "Verify actual rows were synced"
    ],
    "docstrings": [
        "\"\"\"Select all streams and all fields within streams\"\"\""
    ],
    "functions": [
        "select_all_streams_and_fields",
        "name",
        "test_run"
    ],
    "classes": [
        "TestGithubIssueEventsStreams"
    ]
}