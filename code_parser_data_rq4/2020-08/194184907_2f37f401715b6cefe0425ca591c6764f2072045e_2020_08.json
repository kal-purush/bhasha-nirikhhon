{
    "identifiers": [
        "org",
        "apache",
        "solr",
        "util",
        "circuitbreaker",
        "java",
        "lang",
        "invoke",
        "MethodHandles",
        "java",
        "lang",
        "management",
        "ManagementFactory",
        "java",
        "lang",
        "management",
        "OperatingSystemMXBean",
        "org",
        "apache",
        "solr",
        "core",
        "SolrConfig",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "log",
        "LoggerFactory",
        "getLogger",
        "MethodHandles",
        "lookup",
        "lookupClass",
        "operatingSystemMXBean",
        "ManagementFactory",
        "getOperatingSystemMXBean",
        "enabled",
        "cpuUsageThreshold",
        "seenCPUUsage",
        "ThreadLocal",
        "withInitial",
        "allowedCPUUsage",
        "ThreadLocal",
        "withInitial",
        "solrConfig",
        "solrConfig",
        "enabled",
        "solrConfig",
        "cpuCBEnabled",
        "cpuUsageThreshold",
        "solrConfig",
        "cpuCBThreshold",
        "Override",
        "isEnabled",
        "enabled",
        "localAllowedCPUUsage",
        "getCpuUsageThreshold",
        "localSeenCPUUsage",
        "calculateLiveCPUUsage",
        "localSeenCPUUsage",
        "log",
        "isWarnEnabled",
        "msg",
        "log",
        "warn",
        "msg",
        "allowedCPUUsage",
        "localAllowedCPUUsage",
        "seenCPUUsage",
        "localSeenCPUUsage",
        "localSeenCPUUsage",
        "localAllowedCPUUsage",
        "Override",
        "seenCPUUsage",
        "get",
        "seenCPUUsage",
        "get",
        "log",
        "warn",
        "seenCPUUsage",
        "get",
        "allowedCPUUsage",
        "get",
        "Override",
        "seenCPUUsage",
        "get",
        "allowedCPUUsage",
        "get",
        "cpuUsageThreshold",
        "operatingSystemMXBean",
        "getSystemLoadAverage"
    ],
    "literals": [
        "\"Unable to get CPU usage\"",
        "\"CPUCircuitBreaker's monitored values (seenCPUUSage, allowedCPUUsage) not set\"",
        "\"seenCPUUSage=\"",
        "\" allowedCPUUsage=\"",
        "\"CPU Circuit Breaker triggered as seen CPU usage is above allowed threshold.\"",
        "\"Seen CPU usage \"",
        "\" and allocated threshold \""
    ],
    "variables": [
        "enabled",
        "cpuUsageThreshold"
    ],
    "comments": [
        "Assumption -- the value of these parameters will be set correctly before invoking getDebugInfo()"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* <p>\n * Tracks current CPU usage and triggers if the specified threshold is breached.\n *\n * This circuit breaker gets the average CPU load over the last minute and uses\n * that data to take a decision. We depend on OperatingSystemMXBean which does\n * not allow a configurable interval of collection of data.\n * //TODO: Use Codahale Meter to calculate the value locally.\n * </p>\n *\n * <p>\n * The configuration to define which mode to use and the trigger threshold are defined in\n * solrconfig.xml\n * </p>"
    ],
    "functions": [
        "CPUCircuitBreaker",
        "isTripped",
        "getDebugInfo",
        "getErrorMessage",
        "getCpuUsageThreshold",
        "calculateLiveCPUUsage"
    ],
    "classes": [
        "CPUCircuitBreaker"
    ]
}