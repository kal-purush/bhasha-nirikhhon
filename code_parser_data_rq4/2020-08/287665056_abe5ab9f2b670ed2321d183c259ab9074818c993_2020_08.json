{
    "identifiers": [
        "UIManager",
        "JestEnvironment",
        "jsxEmptyExpression",
        "exportAllDeclaration",
        "JestMock",
        "path",
        "fs",
        "fs",
        "path",
        "__dirname",
        "operationManager",
        "test",
        "html",
        "calculator",
        "calculator",
        "calculator",
        "calculator",
        "calculator",
        "operators",
        "operatorList",
        "UIManager",
        "calculator",
        "keys",
        "display",
        "displayMini",
        "operatorList",
        "parameters",
        "expect",
        "calculatorUI"
    ],
    "literals": [
        "\"./UIManager.js\"",
        "\"@jest/environment\"",
        "\"@babel/types\"",
        "\"jest-mock\"",
        "\"path\"",
        "\"fs\"",
        "\"./index.html\"",
        "\"utf8\"",
        "'./operationManager.js'",
        "'test 1 '",
        "'.calculator'",
        "\"button\"",
        "\".calculator__display\"",
        "\".calculator__display_mini\"",
        "\".key--operator\"",
        "\".key--equal\"",
        "\"23\"",
        "\"add\"",
        "\"calculate\""
    ],
    "variables": [
        "html",
        "calculator",
        "keys",
        "display",
        "displayMini",
        "operators",
        "operatorList",
        "parameters",
        "calculatorUI"
    ],
    "comments": [
        "import CalculatorParameters from './calculatorParameters.js';",
        "beforeEach(()=>{",
        "document.documentElement.innerHTML = html.toString();",
        "const calculator = document.querySelector('.calculator');",
        "const keys = calculator.querySelectorAll(\"button\");",
        "const display = calculator.querySelector(\".calculator__display\");",
        "const displayMini = calculator.querySelector(\".calculator__display_mini\");",
        "const operators = [...calculator.querySelectorAll(\".key--operator\"), ...calculator.querySelectorAll(\".key--equal\")];",
        "const operatorList = {};",
        "operators.forEach(operator => operatorList[operator.dataset.action] = operator.innerHTML);",
        "})"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}