{
    "identifiers": [
        "info",
        "ro",
        "gadget",
        "atsignconfig",
        "old",
        "addition",
        "holder",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Entry",
        "info",
        "ro",
        "gadget",
        "atsignconfig",
        "core",
        "AtsignConfig",
        "info",
        "ro",
        "gadget",
        "atsignconfig",
        "core",
        "AtsignConfigParser",
        "info",
        "ro",
        "gadget",
        "atsignconfig",
        "core",
        "exception",
        "AcWrongParamException",
        "info",
        "ro",
        "gadget",
        "atsignconfig",
        "reader",
        "ConfigReader",
        "configMap",
        "parser",
        "SuppressWarnings",
        "key",
        "clazz",
        "clazz",
        "tmpMap",
        "configMap",
        "get",
        "key",
        "tmpMap",
        "tmpMap",
        "get",
        "clazz",
        "key",
        "clazz",
        "conf",
        "tmpMap",
        "configMap",
        "get",
        "key",
        "tmpMap",
        "tmpMap",
        "configMap",
        "put",
        "key",
        "tmpMap",
        "conf",
        "tmpMap",
        "put",
        "conf",
        "getClass",
        "conf",
        "parser",
        "key",
        "clazz",
        "src",
        "section",
        "reader",
        "tmpConfig",
        "parser",
        "getConfig",
        "src",
        "section",
        "clazz",
        "reader",
        "putConfig",
        "key",
        "clazz",
        "tmpConfig",
        "tmpConfig",
        "key",
        "clazz",
        "pickConfig",
        "key",
        "clazz",
        "key",
        "clazz",
        "conf",
        "pickConfig",
        "key",
        "clazz",
        "conf",
        "conf",
        "isModified",
        "conf",
        "newConf",
        "parser",
        "getConfig",
        "conf",
        "getSourcePath",
        "conf",
        "getReadSection",
        "clazz",
        "conf",
        "getReader",
        "putConfig",
        "key",
        "clazz",
        "newConf",
        "newConf",
        "clazz",
        "reload",
        "retMap",
        "key",
        "configMap",
        "keySet",
        "conf",
        "pickConfig",
        "key",
        "clazz",
        "conf",
        "retMap",
        "put",
        "key",
        "conf",
        "reload",
        "key",
        "retMap",
        "keySet",
        "conf",
        "reloadConfig",
        "key",
        "clazz",
        "retMap",
        "put",
        "key",
        "conf",
        "e",
        "e",
        "printStackTrace",
        "retMap",
        "key",
        "newMap",
        "configMap",
        "containsKey",
        "key",
        "entry",
        "configMap",
        "get",
        "key",
        "entrySet",
        "conf",
        "entry",
        "getValue",
        "conf",
        "conf",
        "parser",
        "getConfig",
        "conf",
        "getSourcePath",
        "conf",
        "getReadSection",
        "entry",
        "getKey",
        "conf",
        "getReader",
        "e",
        "e",
        "printStackTrace",
        "conf",
        "newMap",
        "put",
        "entry",
        "getKey",
        "conf",
        "newMap",
        "size",
        "configMap",
        "put",
        "key",
        "newMap"
    ],
    "literals": [
        "\"unchecked\""
    ],
    "variables": [],
    "comments": [
        "readerとsrcとclazz使ってコンフィグ読み込む",
        "読み込んだらkeyに入れる",
        "TODO Auto-generated catch block"
    ],
    "docstrings": [
        "* コンフィグを読み込みつつ、それを複数保管して使いまわそうともくろむためのクラス<br>\n * 昔、同じ型の設定を場合によって異なるファイルから読んで運用することがあったので<br>\n * それ用にそれっぽいことをした時の産物（その時はシングルトンでした）<br>\n * @author Robert_Ordis\n *",
        "* 備え付けたパーサを取得する。<br>\n\t * 主にパーサに特定のオブジェクト用のデシリアライザを登録するため<br>\n\t * @return",
        "* 指定したキーとクラスにて、コンフィグを読み込ませて登録する。\n\t * @param key\n\t * @param clazz\n\t * @param src\n\t * @param section\n\t * @param reader\n\t * @return\n\t * @throws AcWrongParamException\n\t * @throws IOException",
        "* 指定したキーとクラスの読み込み済みコンフィグを取得する。\n\t * @param key\n\t * @param clazz\n\t * @return",
        "* 指定したキーとクラスのコンフィグを再読み込みさせる。\n\t * 読み込まれていない場合は無視される。\n\t * @param key\n\t * @param clazz\n\t * @throws IOException \n\t * @throws AcWrongParamException",
        "* 指定された種類のコンフィグをすべて取得する。\n\t * @param clazz\n\t * @param reload\n\t * @return",
        "* 指定されたキーのコンフィグを全部読み直す。\n\t * @param key"
    ],
    "functions": [
        "AtsignConfigHolder",
        "T",
        "pickConfig",
        "putConfig",
        "AtsignConfigParser",
        "getParser",
        "T",
        "registerConfig",
        "T",
        "getConfig",
        "T",
        "reloadConfig",
        "getSpecifiedConfigs",
        "reloadConfigsOnKey"
    ],
    "classes": [
        "AtsignConfigHolder"
    ]
}