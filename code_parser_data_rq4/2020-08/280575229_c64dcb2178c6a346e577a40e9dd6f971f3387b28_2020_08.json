{
    "identifiers": [
        "argparse",
        "pydantic_kms_secrets",
        "kms",
        "decrypt",
        "encrypt",
        "argparse",
        "ArgumentParser",
        "argparse",
        "ArgumentParser",
        "add_help",
        "description",
        "parser",
        "add_argument",
        "dest",
        "required",
        "help",
        "parser",
        "add_argument",
        "dest",
        "required",
        "help",
        "parser",
        "add_argument",
        "dest",
        "action",
        "help",
        "parser",
        "add_argument",
        "dest",
        "action",
        "help",
        "parser",
        "args",
        "args",
        "decrypt",
        "args",
        "encrypt",
        "args",
        "decrypt",
        "decrypt",
        "args",
        "key_id",
        "args",
        "value",
        "decrypted_value",
        "args",
        "encrypt",
        "encrypt",
        "args",
        "key_id",
        "args",
        "value",
        "encrypted_value",
        "initialize_parser",
        "parser",
        "parse_args",
        "parse_args",
        "args",
        "result"
    ],
    "literals": [
        "'--help'",
        "'Tool to encrypt and decrypt secrets via a KMS key'",
        "'-k'",
        "'--key-id'",
        "'key_id'",
        "'ID of the KMS key to use'",
        "'-v'",
        "'--value'",
        "'value'",
        "'The value to be encrypted'",
        "'-e'",
        "'--encrypt'",
        "'encrypt'",
        "'store_const'",
        "'Set to encrypt value'",
        "'-d'",
        "'--decrypt'",
        "'decrypt'",
        "'store_const'",
        "'Set to decrypt value'",
        "'ERROR: Only one of --decrypt or --encrypt flags can be set'",
        "'ERROR: Either --decrypt or --encrypt flag must be set'"
    ],
    "variables": [
        "parser",
        "decrypted_value",
        "encrypted_value",
        "parser",
        "args",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Initializes the arg parser and adds arguments\n    \"\"\"",
        "\"\"\"\n    Parses incoming args and returns the appropriate value\n    depending on the passed args.\n    \"\"\"",
        "\"\"\"\n    Initializes the parser, parses the incomin args, and prints\n    the result for the end user\n    \"\"\""
    ],
    "functions": [
        "initialize_parser",
        "parse_args",
        "main"
    ],
    "classes": []
}