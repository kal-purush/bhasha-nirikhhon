{
    "identifiers": [
        "io",
        "etcd",
        "jetcd",
        "resolver",
        "java",
        "net",
        "InetSocketAddress",
        "java",
        "net",
        "SocketAddress",
        "java",
        "net",
        "URI",
        "java",
        "util",
        "java",
        "util",
        "Hashtable",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "Executor",
        "javax",
        "annotation",
        "concurrent",
        "GuardedBy",
        "javax",
        "naming",
        "NamingEnumeration",
        "javax",
        "naming",
        "directory",
        "Attributes",
        "javax",
        "naming",
        "directory",
        "DirContext",
        "javax",
        "naming",
        "directory",
        "InitialDirContext",
        "com",
        "google",
        "common",
        "Preconditions",
        "com",
        "google",
        "common",
        "Splitter",
        "com",
        "google",
        "common",
        "Strings",
        "io",
        "etcd",
        "jetcd",
        "common",
        "exception",
        "ErrorCode",
        "io",
        "etcd",
        "jetcd",
        "common",
        "exception",
        "EtcdExceptionFactory",
        "io",
        "grpc",
        "EquivalentAddressGroup",
        "io",
        "grpc",
        "NameResolver",
        "io",
        "grpc",
        "Status",
        "io",
        "grpc",
        "GrpcUtil",
        "io",
        "grpc",
        "SharedResourceHolder",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "SCHEME",
        "LOGGER",
        "LoggerFactory",
        "getLogger",
        "ATTRIBUTE_IDS",
        "ENV",
        "ATTRIBUTE_IDS",
        "ENV",
        "ENV",
        "put",
        "ENV",
        "put",
        "authority",
        "targetUri",
        "shutdown",
        "resolving",
        "GuardedBy",
        "executor",
        "GuardedBy",
        "listener",
        "targetUri",
        "targetUri",
        "targetUri",
        "authority",
        "targetUri",
        "getAuthority",
        "targetUri",
        "getAuthority",
        "SCHEME",
        "Override",
        "authority",
        "Override",
        "listener",
        "Preconditions",
        "checkState",
        "listener",
        "executor",
        "SharedResourceHolder",
        "get",
        "GrpcUtil",
        "SHARED_CHANNEL_EXECUTOR",
        "listener",
        "Preconditions",
        "checkNotNull",
        "listener",
        "resolve",
        "Override",
        "resolve",
        "Override",
        "shutdown",
        "shutdown",
        "executor",
        "executor",
        "SharedResourceHolder",
        "release",
        "GrpcUtil",
        "SHARED_CHANNEL_EXECUTOR",
        "executor",
        "resolving",
        "shutdown",
        "executor",
        "execute",
        "doResolve",
        "savedListener",
        "shutdown",
        "resolving",
        "savedListener",
        "listener",
        "groups",
        "address",
        "resolveAddresses",
        "groups",
        "add",
        "address",
        "Strings",
        "isNullOrEmpty",
        "authority",
        "io",
        "grpc",
        "Attributes",
        "newBuilder",
        "EquivalentAddressGroup",
        "ATTR_AUTHORITY_OVERRIDE",
        "targetUri",
        "getAuthority",
        "build",
        "io",
        "grpc",
        "Attributes",
        "EMPTY",
        "groups",
        "isEmpty",
        "EtcdExceptionFactory",
        "newEtcdException",
        "ErrorCode",
        "INVALID_ARGUMENT",
        "targetUri",
        "savedListener",
        "onAddresses",
        "groups",
        "io",
        "grpc",
        "Attributes",
        "EMPTY",
        "e",
        "LOGGER",
        "warn",
        "e",
        "savedListener",
        "onError",
        "Status",
        "NOT_FOUND",
        "resolving",
        "addresses",
        "address",
        "targetUri",
        "getPath",
        "address",
        "startsWith",
        "address",
        "address",
        "substring",
        "ctx",
        "ENV",
        "attributes",
        "ctx",
        "getAttributes",
        "address",
        "ATTRIBUTE_IDS",
        "resolved",
        "attributes",
        "get",
        "getAll",
        "resolved",
        "hasMore",
        "record",
        "resolved",
        "next",
        "split",
        "Splitter",
        "on",
        "splitToList",
        "record",
        "split",
        "size",
        "host",
        "split",
        "get",
        "trim",
        "port",
        "split",
        "get",
        "trim",
        "addresses",
        "add",
        "host",
        "parseInt",
        "port",
        "e",
        "EtcdExceptionFactory",
        "toEtcdException",
        "e",
        "addresses"
    ],
    "literals": [
        "\"dns+srv\"",
        "\"SRV\"",
        "\"java.naming.factory.initial\"",
        "\"com.sun.jndi.dns.DnsContextFactory\"",
        "\"java.naming.provider.url\"",
        "\"dns:\"",
        "\"lock\"",
        "\"lock\"",
        "\"already started\"",
        "\"listener\"",
        "\"Unable to resolve endpoint \"",
        "\"Error wile getting list of servers\"",
        "\"/\"",
        "\"srv\""
    ],
    "variables": [
        "ATTRIBUTE_IDS",
        "ENV",
        "lock",
        "authority",
        "targetUri",
        "shutdown",
        "resolving",
        "executor",
        "listener",
        "savedListener"
    ],
    "comments": [
        "",
        "if the authority is not explicit set on the builder",
        "then it will be computed from the URI",
        ""
    ],
    "docstrings": [
        "* Copyright 2016-2020 The jetcd authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "DnsSrvNameResolver",
        "getServiceAuthority",
        "start",
        "refresh",
        "shutdown",
        "resolve",
        "doResolve",
        "resolveAddresses"
    ],
    "classes": [
        "DnsSrvNameResolver"
    ]
}