{
    "identifiers": [
        "Linq",
        "Net",
        "Threading",
        "Threading",
        "Tasks",
        "FluentAssertions",
        "MongoDB",
        "Bson",
        "MongoDB",
        "Bson",
        "TestHelpers",
        "MongoDB",
        "Bson",
        "TestHelpers",
        "XunitExtensions",
        "MongoDB",
        "Driver",
        "Core",
        "Clusters",
        "MongoDB",
        "Driver",
        "Core",
        "Clusters",
        "ServerSelectors",
        "MongoDB",
        "Driver",
        "Core",
        "Configuration",
        "MongoDB",
        "Driver",
        "Core",
        "ConnectionPools",
        "MongoDB",
        "Driver",
        "Core",
        "Connections",
        "MongoDB",
        "Driver",
        "Core",
        "Events",
        "MongoDB",
        "Driver",
        "Core",
        "Helpers",
        "MongoDB",
        "Driver",
        "Core",
        "Servers",
        "MongoDB",
        "Driver",
        "Core",
        "WireProtocol",
        "Messages",
        "MongoDB",
        "Driver",
        "Core",
        "WireProtocol",
        "Messages",
        "Encoders",
        "Moq",
        "Xunit",
        "MongoDB",
        "Driver",
        "Core",
        "Tests",
        "Jira",
        "ClusterConnectionMode",
        "Sharded",
        "ClusterId",
        "DnsEndPoint",
        "DnsEndPoint",
        "TimeSpan",
        "FromMilliseconds",
        "ServerId",
        "__clusterId",
        "__endPoint1",
        "ServerId",
        "__clusterId",
        "__endPoint2",
        "Theory",
        "ParameterAttributeData",
        "Values",
        "async",
        "Values",
        "streamable",
        "EventCapturer",
        "Capture",
        "ServerDescriptionChangedEvent",
        "TaskCompletionSource",
        "TaskCompletionSource",
        "CreateAndSetupCluster",
        "hasNetworkErrorBeenTriggered",
        "hasClusterBeenDisposed",
        "eventCapturer",
        "streamable",
        "ForceClusterId",
        "cluster",
        "__clusterId",
        "cluster",
        "Initialize",
        "cluster",
        "SelectServer",
        "CreateWritableServerAndEndPointSelector",
        "__endPoint1",
        "CancellationToken",
        "initialSelectedEndpoint",
        "selectedServer",
        "EndPoint",
        "initialSelectedEndpoint",
        "Should",
        "Be",
        "__endPoint1",
        "Sleep",
        "__heartbeatInterval",
        "TimeSpan",
        "FromMilliseconds",
        "exception",
        "selectedServer",
        "GetChannelAsync",
        "CancellationToken",
        "GetAwaiter",
        "GetResult",
        "exception",
        "selectedServer",
        "GetChannel",
        "CancellationToken",
        "e",
        "exception",
        "Should",
        "BeOfType",
        "MongoConnectionException",
        "Subject",
        "Message",
        "Should",
        "Be",
        "hasNetworkErrorBeenTriggered",
        "SetResult",
        "Sleep",
        "s",
        "Type",
        "ServerType",
        "Unknown",
        "knownServers",
        "Select",
        "s",
        "EndPoint",
        "Contains",
        "initialSelectedEndpoint",
        "initialSelectedEndpoint",
        "selectedServer",
        "cluster",
        "SelectServer",
        "WritableServerSelector",
        "Instance",
        "CancellationToken",
        "selectedServer",
        "EndPoint",
        "Should",
        "Be",
        "__endPoint2",
        "eventCapturer",
        "WaitForOrThrowIfTimeout",
        "events",
        "Count",
        "TimeSpan",
        "FromSeconds",
        "hasClusterBeenDisposed",
        "SetCanceled",
        "eventCapturer",
        "Next",
        "Should",
        "BeOfType",
        "ServerDescriptionChangedEvent",
        "Subject",
        "eventCapturer",
        "Next",
        "Should",
        "BeOfType",
        "ServerDescriptionChangedEvent",
        "Subject",
        "OrderBy",
        "GetPort",
        "c",
        "NewDescription",
        "EndPoint",
        "ToList",
        "AssertEvent",
        "initialHeartbeatEvents",
        "__endPoint1",
        "ServerType",
        "ShardRouter",
        "AssertEvent",
        "initialHeartbeatEvents",
        "__endPoint2",
        "ServerType",
        "ShardRouter",
        "AssertNextEvent",
        "eventCapturer",
        "initialSelectedEndpoint",
        "ServerType",
        "Unknown",
        "AssertNextEvent",
        "eventCapturer",
        "initialSelectedEndpoint",
        "ServerType",
        "Unknown",
        "MongoConnectionException",
        "eventCapturer",
        "Any",
        "Should",
        "BeFalse",
        "GetPort",
        "EndPoint",
        "endpoint",
        "DnsEndPoint",
        "endpoint",
        "Port",
        "ServerDescriptionChangedEvent",
        "@event",
        "EndPoint",
        "expectedEndPoint",
        "ServerType",
        "expectedServerType",
        "expectedReasonStart",
        "Type",
        "exceptionType",
        "@event",
        "ServerId",
        "ClusterId",
        "Should",
        "Be",
        "__clusterId",
        "@event",
        "NewDescription",
        "EndPoint",
        "Should",
        "Be",
        "expectedEndPoint",
        "@event",
        "NewDescription",
        "Type",
        "Should",
        "Be",
        "expectedServerType",
        "@event",
        "NewDescription",
        "State",
        "Should",
        "Be",
        "expectedServerType",
        "ServerType",
        "Unknown",
        "ServerState",
        "Disconnected",
        "ServerState",
        "Connected",
        "exceptionType",
        "@event",
        "NewDescription",
        "HeartbeatException",
        "Should",
        "BeOfType",
        "exceptionType",
        "@event",
        "NewDescription",
        "HeartbeatException",
        "Should",
        "BeNull",
        "@event",
        "NewDescription",
        "ReasonChanged",
        "Should",
        "StartWith",
        "expectedReasonStart",
        "EventCapturer",
        "eventCapturer",
        "EndPoint",
        "expectedEndPoint",
        "ServerType",
        "expectedServerType",
        "expectedReasonStart",
        "Type",
        "exceptionType",
        "eventCapturer",
        "Next",
        "Should",
        "BeOfType",
        "ServerDescriptionChangedEvent",
        "Subject",
        "AssertEvent",
        "@event",
        "expectedEndPoint",
        "expectedServerType",
        "expectedReasonStart",
        "exceptionType",
        "ServerId",
        "ServerId",
        "EndPoint",
        "Endpoint",
        "IsHealthy",
        "serverInfoCollection",
        "Mock",
        "IConnectionPoolFactory",
        "serverInfo",
        "serverInfoCollection",
        "Mock",
        "IConnectionPool",
        "SetupConnectionPoolFactory",
        "mockConnectionPoolFactory",
        "mockConnectionPool",
        "serverInfo",
        "ServerId",
        "serverInfo",
        "Endpoint",
        "Mock",
        "IConnectionHandle",
        "SetupConnection",
        "mockServerConnection",
        "serverInfo",
        "ServerId",
        "SetupConnectionPool",
        "mockConnectionPool",
        "mockServerConnection",
        "mockConnectionPoolFactory",
        "SetupConnection",
        "Mock",
        "IConnectionHandle",
        "mockConnectionHandle",
        "ServerId",
        "serverId",
        "mockConnectionHandle",
        "SetupGet",
        "c",
        "ConnectionId",
        "Returns",
        "ConnectionId",
        "serverId",
        "mockConnectionHandle",
        "Setup",
        "c",
        "Open",
        "It",
        "IsAny",
        "CancellationToken",
        "Throws",
        "CreateDnsException",
        "mockConnectionHandle",
        "ConnectionId",
        "mockConnectionHandle",
        "Setup",
        "c",
        "OpenAsync",
        "It",
        "IsAny",
        "CancellationToken",
        "Throws",
        "CreateDnsException",
        "mockConnectionHandle",
        "ConnectionId",
        "SetupConnectionPool",
        "Mock",
        "IConnectionPool",
        "mockConnectionPool",
        "IConnectionHandle",
        "connection",
        "mockConnectionPool",
        "Setup",
        "c",
        "AcquireConnection",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "connection",
        "mockConnectionPool",
        "Setup",
        "c",
        "AcquireConnectionAsync",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "FromResult",
        "connection",
        "SetupConnectionPoolFactory",
        "Mock",
        "IConnectionPoolFactory",
        "mockFactory",
        "IConnectionPool",
        "connectionPool",
        "ServerId",
        "serverId",
        "EndPoint",
        "endPoint",
        "mockFactory",
        "Setup",
        "c",
        "CreateConnectionPool",
        "serverId",
        "endPoint",
        "Returns",
        "connectionPool",
        "TaskCompletionSource",
        "hasNetworkErrorBeenTriggered",
        "TaskCompletionSource",
        "hasClusterBeenDisposed",
        "streamable",
        "ServerId",
        "ServerId",
        "EndPoint",
        "Endpoint",
        "IsHealthy",
        "serverInfoCollection",
        "Mock",
        "IConnectionFactory",
        "serverInfo",
        "serverInfoCollection",
        "Mock",
        "IConnection",
        "SetupServerMonitorConnection",
        "mockServerMonitorConnection",
        "serverInfo",
        "ServerId",
        "serverInfo",
        "IsHealthy",
        "hasNetworkErrorBeenTriggered",
        "hasClusterBeenDisposed",
        "streamable",
        "mockConnectionFactory",
        "Setup",
        "c",
        "CreateConnection",
        "serverInfo",
        "ServerId",
        "serverInfo",
        "Endpoint",
        "Returns",
        "mockServerMonitorConnection",
        "mockConnectionFactory",
        "TaskCompletionSource",
        "hasNetworkErrorBeenTriggered",
        "TaskCompletionSource",
        "hasClusterBeenDisposed",
        "EventCapturer",
        "eventCapturer",
        "streamable",
        "ServerId",
        "ServerId",
        "EndPoint",
        "Endpoint",
        "IsHealthy",
        "__serverId1",
        "__endPoint1",
        "__serverId2",
        "__endPoint2",
        "ClusterSettings",
        "connectionMode",
        "__clusterConnectionMode",
        "serverSelectionTimeout",
        "TimeSpan",
        "FromSeconds",
        "endPoints",
        "serverInfoCollection",
        "Select",
        "c",
        "Endpoint",
        "ToArray",
        "ServerMonitorSettings",
        "connectTimeout",
        "TimeSpan",
        "FromMilliseconds",
        "heartbeatInterval",
        "__heartbeatInterval",
        "ServerSettings",
        "serverMonitorSettings",
        "HeartbeatInterval",
        "CreateAndSetupConnectionPoolFactory",
        "serverInfoCollection",
        "CreateAndSetupServerMonitorConnectionFactory",
        "hasNetworkErrorBeenTriggered",
        "hasClusterBeenDisposed",
        "streamable",
        "serverInfoCollection",
        "ServerMonitorFactory",
        "serverMonitorSettings",
        "serverMonitorConnectionFactory",
        "eventCapturer",
        "ServerFactory",
        "__clusterConnectionMode",
        "serverSettings",
        "connectionPoolFactory",
        "serverMonitorFactory",
        "eventCapturer",
        "MultiServerCluster",
        "clusterSettings",
        "serverFactory",
        "eventCapturer",
        "ConnectionId",
        "connectionId",
        "MongoConnectionException",
        "connectionId",
        "EndPoint",
        "endPoint",
        "EndPointServerSelector",
        "endPoint",
        "CompositeServerSelector",
        "WritableServerSelector",
        "Instance",
        "endPointServerSelector",
        "MultiServerCluster",
        "cluster",
        "ClusterId",
        "clusterId",
        "Reflector",
        "SetFieldValue",
        "cluster",
        "clusterId",
        "Reflector",
        "SetFieldValue",
        "cluster",
        "ClusterDescription",
        "CreateInitial",
        "clusterId",
        "__clusterConnectionMode",
        "Mock",
        "IConnection",
        "mockConnection",
        "ServerId",
        "serverId",
        "isHealthy",
        "TaskCompletionSource",
        "hasNetworkErrorBeenTriggered",
        "TaskCompletionSource",
        "hasClusterBeenDisposed",
        "streamable",
        "ConnectionId",
        "serverId",
        "streamable",
        "BsonDocument",
        "serverVersion",
        "TopologyVersion",
        "ObjectId",
        "Empty",
        "ToBsonDocument",
        "streamable",
        "mockConnection",
        "SetupGet",
        "c",
        "ConnectionId",
        "Returns",
        "connectionId",
        "mockConnection",
        "SetupGet",
        "c",
        "EndPoint",
        "Returns",
        "serverId",
        "EndPoint",
        "mockConnection",
        "SetupGet",
        "c",
        "Description",
        "Returns",
        "ConnectionDescription",
        "mockConnection",
        "ConnectionId",
        "IsMasterResult",
        "isMasterDocument",
        "BuildInfoResult",
        "BsonDocument",
        "serverVersion",
        "Func",
        "ResponseMessage",
        "streamable",
        "commandResponseAction",
        "MessageHelper",
        "BuildCommandResponse",
        "RawBsonDocument",
        "isMasterDocument",
        "ToBson",
        "moreToCome",
        "commandResponseAction",
        "MessageHelper",
        "BuildReply",
        "RawBsonDocument",
        "isMasterDocument",
        "ToBson",
        "isHealthy",
        "SetupHealthyConnection",
        "mockConnection",
        "SetupFailedConnection",
        "mockConnection",
        "SetupFailedConnection",
        "Mock",
        "IConnection",
        "mockFaultyConnection",
        "mockFaultyConnection",
        "SetupSequence",
        "c",
        "OpenAsync",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "FromResult",
        "Returns",
        "FromResult",
        "Throws",
        "CreateDnsException",
        "mockConnection",
        "ConnectionId",
        "Returns",
        "WaitForTaskOrTimeout",
        "hasClusterBeenDisposed",
        "TimeSpan",
        "FromMinutes",
        "ConfigureAwait",
        "mockFaultyConnection",
        "Setup",
        "c",
        "ReceiveMessageAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "IMessageEncoderSelector",
        "It",
        "IsAny",
        "MessageEncoderSettings",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "WaitForTaskOrTimeout",
        "hasNetworkErrorBeenTriggered",
        "TimeSpan",
        "FromMinutes",
        "ConfigureAwait",
        "commandResponseAction",
        "SetupHealthyConnection",
        "Mock",
        "IConnection",
        "mockHealthyConnection",
        "mockHealthyConnection",
        "Setup",
        "c",
        "Open",
        "It",
        "IsAny",
        "CancellationToken",
        "mockHealthyConnection",
        "Setup",
        "c",
        "OpenAsync",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "FromResult",
        "mockHealthyConnection",
        "Setup",
        "c",
        "ReceiveMessage",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "IMessageEncoderSelector",
        "It",
        "IsAny",
        "MessageEncoderSettings",
        "It",
        "IsAny",
        "CancellationToken",
        "Returns",
        "commandResponseAction",
        "mockConnection",
        "Setup",
        "c",
        "ReceiveMessageAsync",
        "It",
        "IsAny",
        "It",
        "IsAny",
        "IMessageEncoderSelector",
        "It",
        "IsAny",
        "MessageEncoderSettings",
        "It",
        "IsAny",
        "CancellationToken",
        "ReturnsAsync",
        "commandResponseAction",
        "task",
        "TimeSpan",
        "timeout",
        "testTarget",
        "WhenAny",
        "task",
        "Delay",
        "timeout",
        "ConfigureAwait",
        "resultedTask",
        "task",
        "testTarget",
        "timeout"
    ],
    "literals": [
        "\"localhost\"",
        "\"localhost\"",
        "\"DnsException\"",
        "\"Heartbeat\"",
        "\"Heartbeat\"",
        "\"InvalidatedBecause:ChannelException during handshake: MongoDB.Driver.MongoConnectionException: DnsException\"",
        "\"Heartbeat\"",
        "\"DnsException\"",
        "\"_clusterId\"",
        "\"_description\"",
        "\"4.4\"",
        "\"2.6\"",
        "\"ok\"",
        "\"minWireVersion\"",
        "\"maxWireVersion\"",
        "\"msg\"",
        "\"isdbgrid\"",
        "\"version\"",
        "\"topologyVersion\"",
        "\"version\"",
        "\"cluster dispose\"",
        "\"network error\""
    ],
    "variables": [
        "ClusterConnectionMode",
        "__clusterConnectionMode",
        "ClusterId",
        "__clusterId",
        "EndPoint",
        "__endPoint1",
        "EndPoint",
        "__endPoint2",
        "TimeSpan",
        "__heartbeatInterval",
        "ServerId",
        "__serverId1",
        "ServerId",
        "__serverId2",
        "eventCapturer",
        "hasNetworkErrorBeenTriggered",
        "hasClusterBeenDisposed",
        "EndPoint",
        "initialSelectedEndpoint",
        "cluster",
        "selectedServer",
        "exception",
        "initialHeartbeatEvents",
        "@event",
        "mockConnectionPoolFactory",
        "mockConnectionPool",
        "mockServerConnection",
        "mockConnectionFactory",
        "mockServerMonitorConnection",
        "serverInfoCollection",
        "clusterSettings",
        "serverMonitorSettings",
        "serverSettings",
        "connectionPoolFactory",
        "serverMonitorConnectionFactory",
        "serverMonitorFactory",
        "serverFactory",
        "IServerSelector",
        "endPointServerSelector",
        "connectionId",
        "serverVersion",
        "isMasterDocument",
        "commandResponseAction",
        "resultedTask"
    ],
    "comments": [
        "Copyright 2020-present MongoDB Inc.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.",
        "ensure that isMaster check response is finished only after network error",
        "ensure that there are no unexpected events between test ending and cluster disposing",
        "0. Initial heartbeat via `connection.Open`",
        "The next isMaster response will be delayed because the Task.WaitAny in the mock.Returns",
        "make sure the next isMaster check has been called",
        "1. Trigger the command network error BEFORE handshake. At this time isMaster response is alreaady delayed until `hasNetworkErrorBeenTriggered.SetResult`",
        "2. Waiting for the isMaster check",
        "unlock the in-progress isMaster response",
        "make sure the delayed isMaster check had time to change description if there is a bug",
        "ensure that a new server can be selected",
        "ensure that the selected server is not the same as the initial",
        "the 4th event is MongoConnectionException which will trigger the next isMaster check immediately",
        "Cut off not related events. Stop waiting in the latest mock.Returns for OpenAsync",
        "Events asserting",
        "endpoints can be in random order",
        "the next 27018 events will be suppressed",
        "private method",
        "throw command dns exception",
        "throw command dns exception",
        "sync path is not used in serverMonitor",
        "the first isMaster configuration passes",
        "RTT",
        "the dns exception. Should be triggered after Invalidate",
        "ensure that there is no unrelated events",
        "wait until the command network error has been triggered",
        "no action is required",
        "no action is required"
    ],
    "docstrings": [],
    "functions": [
        "Ensure_command_network_error_before_hadnshake_is_correctly_handled",
        "AssertEvent",
        "AssertNextEvent",
        "IConnectionPoolFactory",
        "CreateAndSetupConnectionPoolFactory",
        "IConnectionFactory",
        "CreateAndSetupServerMonitorConnectionFactory",
        "MultiServerCluster",
        "CreateAndSetupCluster",
        "CreateDnsException",
        "IServerSelector",
        "CreateWritableServerAndEndPointSelector",
        "ForceClusterId",
        "SetupServerMonitorConnection",
        "WaitForTaskOrTimeout"
    ],
    "classes": [
        "CSharp3173Tests"
    ]
}