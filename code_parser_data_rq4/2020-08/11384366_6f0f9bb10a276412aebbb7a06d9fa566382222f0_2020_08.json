{
    "identifiers": [
        "org",
        "apache",
        "bcel",
        "data",
        "java",
        "io",
        "DataInput",
        "java",
        "io",
        "DataOutputStream",
        "java",
        "io",
        "org",
        "apache",
        "bcel",
        "Const",
        "org",
        "apache",
        "bcel",
        "classfile",
        "constantPool",
        "c",
        "i",
        "tag",
        "c",
        "getTag",
        "tag",
        "Const",
        "CONSTANT_Class",
        "i",
        "c",
        "getNameIndex",
        "c",
        "getConstant",
        "i",
        "Const",
        "CONSTANT_Utf8",
        "Utility",
        "compactClassName",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_String",
        "i",
        "c",
        "getStringIndex",
        "c",
        "getConstant",
        "i",
        "Const",
        "CONSTANT_Utf8",
        "escape",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Utf8",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Double",
        "valueOf",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Float",
        "valueOf",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Long",
        "valueOf",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Integer",
        "valueOf",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_NameAndType",
        "constantToString",
        "c",
        "getNameIndex",
        "Const",
        "CONSTANT_Utf8",
        "constantToString",
        "c",
        "getSignatureIndex",
        "Const",
        "CONSTANT_Utf8",
        "Const",
        "CONSTANT_InterfaceMethodref",
        "Const",
        "CONSTANT_Methodref",
        "Const",
        "CONSTANT_Fieldref",
        "constantToString",
        "c",
        "getClassIndex",
        "Const",
        "CONSTANT_Class",
        "constantToString",
        "c",
        "getNameAndTypeIndex",
        "Const",
        "CONSTANT_NameAndType",
        "Const",
        "CONSTANT_MethodHandle",
        "cmh",
        "c",
        "Const",
        "getMethodHandleName",
        "cmh",
        "getReferenceKind",
        "constantToString",
        "cmh",
        "getReferenceIndex",
        "getConstant",
        "cmh",
        "getReferenceIndex",
        "getTag",
        "Const",
        "CONSTANT_MethodType",
        "cmt",
        "c",
        "constantToString",
        "cmt",
        "getDescriptorIndex",
        "Const",
        "CONSTANT_Utf8",
        "Const",
        "CONSTANT_InvokeDynamic",
        "cid",
        "c",
        "cid",
        "getBootstrapMethodAttrIndex",
        "constantToString",
        "cid",
        "getNameAndTypeIndex",
        "Const",
        "CONSTANT_NameAndType",
        "Const",
        "CONSTANT_Module",
        "i",
        "c",
        "getNameIndex",
        "c",
        "getConstant",
        "i",
        "Const",
        "CONSTANT_Utf8",
        "Utility",
        "compactClassName",
        "c",
        "getBytes",
        "Const",
        "CONSTANT_Package",
        "i",
        "c",
        "getNameIndex",
        "c",
        "getConstant",
        "i",
        "Const",
        "CONSTANT_Utf8",
        "Utility",
        "compactClassName",
        "c",
        "getBytes",
        "tag",
        "len",
        "length",
        "buf",
        "len",
        "ch",
        "toCharArray",
        "i",
        "i",
        "len",
        "i",
        "ch",
        "i",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "buf",
        "append",
        "ch",
        "i",
        "buf",
        "toString",
        "index",
        "tag",
        "c",
        "getConstant",
        "index",
        "tag",
        "constantToString",
        "c",
        "file",
        "file",
        "writeShort",
        "constantPool",
        "length",
        "i",
        "i",
        "constantPool",
        "length",
        "i",
        "constantPool",
        "i",
        "constantPool",
        "i",
        "dump",
        "file",
        "index",
        "index",
        "constantPool",
        "length",
        "index",
        "index",
        "constantPool",
        "length",
        "constantPool",
        "index",
        "index",
        "tag",
        "c",
        "c",
        "getConstant",
        "index",
        "c",
        "index",
        "c",
        "getTag",
        "tag",
        "Const",
        "getConstantName",
        "tag",
        "index",
        "c",
        "c",
        "constantPool",
        "index",
        "tag",
        "c",
        "i",
        "c",
        "getConstant",
        "index",
        "tag",
        "tag",
        "Const",
        "CONSTANT_Class",
        "i",
        "c",
        "getNameIndex",
        "Const",
        "CONSTANT_String",
        "i",
        "c",
        "getStringIndex",
        "Const",
        "CONSTANT_Module",
        "i",
        "c",
        "getNameIndex",
        "Const",
        "CONSTANT_Package",
        "i",
        "c",
        "getNameIndex",
        "tag",
        "c",
        "getConstant",
        "i",
        "Const",
        "CONSTANT_Utf8",
        "c",
        "getBytes",
        "constantPool",
        "constantPool",
        "length",
        "index",
        "constant",
        "constantPool",
        "index",
        "constant",
        "constantPool",
        "constantPool",
        "constantPool",
        "Override",
        "buf",
        "i",
        "i",
        "constantPool",
        "length",
        "i",
        "buf",
        "append",
        "i",
        "append",
        "append",
        "constantPool",
        "i",
        "append",
        "buf",
        "toString"
    ],
    "literals": [
        "\"\\\"\"",
        "\"\\\"\"",
        "\" \"",
        "\".\"",
        "\" \"",
        "\":\"",
        "\"Unknown constant type \"",
        "\"\\\\n\"",
        "\"\\\\r\"",
        "\"\\\\t\"",
        "\"\\\\b\"",
        "\"\\\\\\\"\"",
        "\"Invalid constant pool reference: \"",
        "\". Constant pool size is: \"",
        "\"Constant pool at index \"",
        "\" is null.\"",
        "\"Expected class `\"",
        "\"' at index \"",
        "\" and got \"",
        "\"getConstantString called with illegal tag \"",
        "\")\"",
        "\"\\n\""
    ],
    "variables": [
        "constantPool",
        "str",
        "i",
        "c",
        "c",
        "i"
    ],
    "comments": [
        "Note that the ReferenceIndex may point to a Fieldref, Methodref or",
        "InterfaceMethodref - so we need to peek ahead to get the actual type.",
        "Never reached",
        "Finally get the string from the constant pool"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n *",
        "* This file is a modified copy of org.apache.bcel.classfile.ConstantPool.java.\n * It was chosen as it generates both tableswitch and lookupswitch byte codes.\n * It has been modified to compile stand alone within the BCEL test environment.\n * The code is not executed but the classfile is used as input to a BCEL test case.",
        "* This class represents the constant pool, i.e., a table of constants, of\n * a parsed classfile. It may contain null references, due to the JVM\n * specification that skips an entry after an 8-byte constant (double,\n * long) entry.  Those interested in generating constant pools\n * programatically should see <a href=\"../generic/ConstantPoolGen.html\">\n * ConstantPoolGen</a>.\n\n * @see     Constant\n * @see     org.apache.bcel.generic.ConstantPoolGen",
        "* Resolves constant to a string representation.\n     *\n     * @param  c Constant to be printed\n     * @return String representation",
        "* Retrieves constant at `index' from constant pool and resolve it to\n     * a string representation.\n     *\n     * @param  index of constant in constant pool\n     * @param  tag expected type\n     * @return String representation",
        "* Dump constant pool to file stream in binary format.\n     *\n     * @param file Output file stream\n     * @throws IOException",
        "* Gets constant from constant pool.\n     *\n     * @param  index Index in constant pool\n     * @return Constant value\n     * @see    Constant",
        "* Gets constant from constant pool and check whether it has the\n     * expected type.\n     *\n     * @param  index Index in constant pool\n     * @param  tag Tag of expected constant, i.e., its type\n     * @return Constant value\n     * @see    Constant\n     * @throws  ClassFormatException",
        "* @return Array of constants.\n     * @see    Constant",
        "* Gets string from constant pool and bypass the indirection of\n     * `ConstantClass' and `ConstantString' objects. I.e. these classes have\n     * an index field that points to another entry of the constant pool of\n     * type `ConstantUtf8' which contains the real data.\n     *\n     * @param  index Index in constant pool\n     * @param  tag Tag of expected constant, either ConstantClass or ConstantString\n     * @return Contents of string reference\n     * @see    ConstantClass\n     * @see    ConstantString\n     * @throws  ClassFormatException",
        "This switch() is not that elegant, since the four classes have the\n         * same contents, they just differ in the name of the index\n         * field variable.\n         * But we want to stick to the JVM naming conventions closely though\n         * we could have solved these more elegantly by using the same\n         * variable name or by subclassing.",
        "* @return Length of constant pool.",
        "* @param constant Constant to set",
        "* @param constantPool",
        "* @return String representation."
    ],
    "functions": [
        "constantToString",
        "escape",
        "constantToString",
        "dump",
        "Constant",
        "getConstant",
        "Constant",
        "getConstant",
        "getConstantPool",
        "getConstantString",
        "getLength",
        "setConstant",
        "setConstantPool",
        "toString"
    ],
    "classes": [
        "ConstantPoolX"
    ]
}