{
    "identifiers": [
        "org",
        "zowe",
        "apiml",
        "product",
        "logging",
        "ch",
        "qos",
        "logback",
        "classic",
        "Level",
        "ch",
        "qos",
        "logback",
        "classic",
        "Logger",
        "ch",
        "qos",
        "logback",
        "classic",
        "LoggerContext",
        "ch",
        "qos",
        "logback",
        "classic",
        "spi",
        "ILoggingEvent",
        "ch",
        "qos",
        "logback",
        "core",
        "read",
        "ListAppender",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "regex",
        "Pattern",
        "java",
        "util",
        "stream",
        "Collectors",
        "logAppender",
        "loggedClass",
        "loggedClass",
        "getName",
        "loggerName",
        "logAppender",
        "setContext",
        "LoggerFactory",
        "getILoggerFactory",
        "log",
        "LoggerFactory",
        "getLogger",
        "loggerName",
        "log",
        "setLevel",
        "Level",
        "ALL",
        "log",
        "addAppender",
        "logAppender",
        "logAppender",
        "start",
        "logAppender",
        "clear",
        "logAppender",
        "stop",
        "regex",
        "logAppender",
        "stream",
        "anyMatch",
        "regex",
        "matcher",
        "getFormattedMessage",
        "find",
        "content",
        "logAppender",
        "stream",
        "anyMatch",
        "getFormattedMessage",
        "contains",
        "content",
        "regex",
        "level",
        "logAppender",
        "stream",
        "anyMatch",
        "regex",
        "matcher",
        "getFormattedMessage",
        "find",
        "getLevel",
        "equals",
        "level",
        "content",
        "level",
        "logAppender",
        "stream",
        "anyMatch",
        "getFormattedMessage",
        "contains",
        "content",
        "getLevel",
        "equals",
        "level",
        "regex",
        "logAppender",
        "stream",
        "regex",
        "matcher",
        "getFormattedMessage",
        "find",
        "collect",
        "Collectors",
        "toList",
        "content",
        "logAppender",
        "stream",
        "getFormattedMessage",
        "contains",
        "content",
        "collect",
        "Collectors",
        "toList",
        "regex",
        "level",
        "logAppender",
        "stream",
        "regex",
        "matcher",
        "getFormattedMessage",
        "find",
        "getLevel",
        "equals",
        "level",
        "collect",
        "Collectors",
        "toList",
        "content",
        "level",
        "logAppender",
        "stream",
        "getFormattedMessage",
        "contains",
        "content",
        "getLevel",
        "equals",
        "level",
        "collect",
        "Collectors",
        "toList",
        "logAppender",
        "size",
        "Collections",
        "unmodifiableList",
        "logAppender",
        "level",
        "logAppender",
        "stream",
        "getLevel",
        "equals",
        "level",
        "collect",
        "Collectors",
        "toList"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* This program and the accompanying materials are made available under the terms of the\n * Eclipse Public License v2.0 which accompanies this distribution, and is available at\n * https://www.eclipse.org/legal/epl-v20.html\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Copyright Contributors to the Zowe Project.",
        "* Class that contains the content made by a given logger.\n * Utility functions are available to search for and confirm general or specific log entries and events.",
        "* @param loggedClass Class that generates the logs to be searched.",
        "* @param loggerName String name of the logger that generates the logs to be searched. This can be the\n     *                   package of the class that generates logs, or a specific name like Logger.ROOT_LOGGER_NAME.",
        "* Method used to start log tracking, avoiding memory consumption when tracking isn't wanted.\n     * Must be invoked before log tracking will work.",
        "* Method used to lower memory usage. Clears the tracked logs and stops log tracking until ListAppender.start is invoked.",
        "* @param regex Pattern regex used to search for an ILoggingEvent message.\n     * @return true if and only if the list contains an ILoggingEvent with content matching the given regex.",
        "* @param content log content for the ILoggingEvent to be searched for. Not case sensitive.\n     * @return true if and only if the list contains an ILoggingEvent matching the content.",
        "* @param regex Pattern regex used to search for an ILoggingEvent message.\n     * @param level severity level for the ILoggingEvent to be searched for.\n     * @return true if and only if the list contains an ILoggingEvent matching the content and severity.",
        "* @param content log content for the ILoggingEvent to be searched for. Not case sensitive.\n     * @param level   severity level for the ILoggingEvent to be searched for.\n     * @return true if and only if the list contains an ILoggingEvent matching the content and severity.",
        "* @param regex Pattern regex used to search for log content.\n     * @return List of ILoggingEvent matching the given content.",
        "* @param content String used to search for log content. Not case sensitive.\n     * @return List of ILoggingEvent matching the given content.",
        "* @param regex Pattern regex used to search for log content.\n     * @param level severity level for be searched for.\n     * @return List of ILoggingEvent matching the given content and severity level.",
        "* @param content String used to search for log content. Not case sensitive.\n     * @param level   severity level for be searched for.\n     * @return List of ILoggingEvent matching the given content and severity level.",
        "* @return the number (as a long) of ILoggingEvent generated.",
        "* @return unmodifiable List of the ILoggingEvent that were generated.",
        "* @param level Level used to filter for ILoggingEvent instances.\n     * @return List of ILoggingEvent with a matching Level to the one given."
    ],
    "functions": [
        "LogMessageTracker",
        "LogMessageTracker",
        "startTracking",
        "stopTracking",
        "contains",
        "contains",
        "contains",
        "contains",
        "search",
        "search",
        "search",
        "search",
        "countEvents",
        "getAllLoggedEvents",
        "getAllLoggedEventsWithLevel"
    ],
    "classes": [
        "LogMessageTracker"
    ]
}