{
    "identifiers": [
        "State_driving",
        "tkinter",
        "pynput",
        "keyboard",
        "threading",
        "ObserverAndMotorCommunication",
        "ASDW_Control",
        "MotorController",
        "MotorController",
        "Toplevel",
        "asdw_window",
        "geometry",
        "asdw_w_wight",
        "asdw_w_height",
        "Canvas",
        "asdw_window",
        "asdw_w_c",
        "place",
        "x",
        "y",
        "Label",
        "asdw_w_c",
        "text",
        "asdw_label",
        "place",
        "x",
        "asdw_w_wight",
        "y",
        "anchor",
        "N",
        "Label",
        "asdw_w_c",
        "fg",
        "text",
        "font",
        "a_arrow",
        "place",
        "x",
        "asdw_w_wight",
        "y",
        "asdw_w_height",
        "anchor",
        "W",
        "Label",
        "asdw_w_c",
        "fg",
        "text",
        "font",
        "d_arrow",
        "place",
        "x",
        "asdw_w_wight",
        "y",
        "asdw_w_height",
        "anchor",
        "E",
        "Label",
        "asdw_w_c",
        "fg",
        "text",
        "font",
        "w_arrow",
        "place",
        "x",
        "asdw_w_wight",
        "y",
        "asdw_w_height",
        "anchor",
        "S",
        "Label",
        "asdw_w_c",
        "fg",
        "text",
        "font",
        "s_arrow",
        "place",
        "x",
        "asdw_w_wight",
        "y",
        "asdw_w_height",
        "anchor",
        "N",
        "loop_key_input",
        "key",
        "drive",
        "key",
        "key",
        "stop_drive",
        "key",
        "keyboard",
        "Listener",
        "on_press",
        "on_press",
        "on_release",
        "on_release",
        "listener",
        "start",
        "direction",
        "direction",
        "a_pressed",
        "d_pressed",
        "a_arrow",
        "configure",
        "fg",
        "cont",
        "turn_left",
        "direction",
        "s_pressed",
        "w_pressed",
        "s_arrow",
        "configure",
        "fg",
        "cont",
        "drive_back",
        "direction",
        "d_pressed",
        "a_pressed",
        "d_arrow",
        "configure",
        "fg",
        "cont",
        "turn_right",
        "direction",
        "w_pressed",
        "s_pressed",
        "w_arrow",
        "configure",
        "fg",
        "cont",
        "drive_forward",
        "direction",
        "direction",
        "a_pressed",
        "a_arrow",
        "configure",
        "fg",
        "cont",
        "stop_turn",
        "direction",
        "s_pressed",
        "s_arrow",
        "configure",
        "fg",
        "cont",
        "stop_drive",
        "direction",
        "d_pressed",
        "d_arrow",
        "configure",
        "fg",
        "cont",
        "stop_turn",
        "direction",
        "w_pressed",
        "w_arrow",
        "configure",
        "fg",
        "cont",
        "stop_drive",
        "_",
        "asdw_window",
        "destroy",
        "asdw_window",
        "update",
        "State_driving",
        "State",
        "STOP",
        "threading"
    ],
    "literals": [
        "\"x\"",
        "\"You can use 'asdw' to drive \\n and press 'q' to exit this mode\"",
        "\"black\"",
        "u\"\\u2190\"",
        "\"Ariel\"",
        "\"black\"",
        "u\"\\u2192\"",
        "\"Ariel\"",
        "\"black\"",
        "u\"\\u2191\"",
        "\"Ariel\"",
        "\"black\"",
        "u\"\\u2193\"",
        "\"Ariel\"",
        "'Test geschafft'",
        "\"'a'\"",
        "\"green\"",
        "'a'",
        "\"'s'\"",
        "\"green\"",
        "'s'",
        "\"'d'\"",
        "\"green\"",
        "'d'",
        "\"'w'\"",
        "\"green\"",
        "'w'",
        "\"'a'\"",
        "\"black\"",
        "'stop a'",
        "\"'s'\"",
        "\"black\"",
        "'stop s'",
        "\"'d'\"",
        "\"black\"",
        "'stop d'",
        "\"'w'\"",
        "\"black\"",
        "'stop w'"
    ],
    "variables": [
        "cont",
        "asdw_w_wight",
        "asdw_w_height",
        "w_pressed",
        "s_pressed",
        "a_pressed",
        "d_pressed",
        "asdw_window",
        "asdw_w_c",
        "asdw_label",
        "a_arrow",
        "d_arrow",
        "w_arrow",
        "s_arrow",
        "listener",
        "a_pressed",
        "s_pressed",
        "d_pressed",
        "w_pressed",
        "a_pressed",
        "s_pressed",
        "d_pressed",
        "w_pressed",
        "State_driving",
        "state"
    ],
    "comments": [
        "if w or s and a or d are pressed, cannot be pressed one more time",
        "print(\"pressed: {0}\".format(key))",
        "print(\"released {0}\".format(key))",
        "print(self.a_pressed)",
        "print(direction)"
    ],
    "docstrings": [
        "'''self.asdw_window.bind('<KeyPress-a>', lambda event, c=\"a\": self.drive(event, c))\n        self.asdw_window.bind('<KeyPress-d>', lambda event, c=\"d\": self.drive(event, c))\n        self.asdw_window.bind('<KeyPress-w>', lambda event, c=\"w\": self.drive(event, c))\n        self.asdw_window.bind('<KeyPress-s>', lambda event, c=\"s\": self.drive(event, c))\n\n        # self.asdw_window.bind('<KeyPress-q>', self.destroy_asdw_w)'''",
        "''' was in the loop key input funstion with the listener initialisation\n\nwhile State_driving.state == State_driving.State.STOP:\n    if keyboard.is_pressed(\"a\"):\n        print(\"a\")\n    if keyboard.is_pressed(\"s\"):\n        print(\"s\")\n    if keyboard.is_pressed(\"d\"):\n        print(\"d\")\n    if keyboard.is_pressed(\"w\"):\n        print(\"w\")'''"
    ],
    "functions": [
        "asdw_window_f",
        "on_press",
        "on_release",
        "loop_key_input",
        "drive",
        "stop_drive",
        "destroy_asdw_w"
    ],
    "classes": [
        "ASDWDriving",
        "Keybord_Threading"
    ]
}