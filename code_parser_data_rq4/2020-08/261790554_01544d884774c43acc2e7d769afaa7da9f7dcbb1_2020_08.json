{
    "identifiers": [
        "argparse",
        "os",
        "requests",
        "rq",
        "io",
        "BytesIO",
        "typing",
        "Tuple",
        "Dict",
        "openpyxl",
        "load_workbook",
        "Workbook",
        "openpyxl",
        "worksheet",
        "worksheet",
        "Worksheet",
        "openpyxl",
        "utils",
        "cell",
        "get_column_letter",
        "sheet",
        "Worksheet",
        "fqk",
        "row_number",
        "cell",
        "sheet",
        "row_number",
        "cell",
        "value",
        "fqk",
        "get_column_letter",
        "cell",
        "column",
        "get_column_letter",
        "sheet",
        "max_column",
        "sheet",
        "column_letter",
        "row_number",
        "fqk",
        "column_letter",
        "hca_spreadsheet",
        "Workbook",
        "entity_dictionary",
        "Dict",
        "sheet",
        "hca_spreadsheet",
        "sheetnames",
        "row",
        "hca_spreadsheet",
        "sheet",
        "rows",
        "row",
        "value",
        "entity_dictionary",
        "accession_mapping",
        "entity_dictionary",
        "row",
        "value",
        "replace",
        "sheet",
        "lower",
        "replace",
        "search_fqk_in_sheet",
        "hca_spreadsheet",
        "sheet",
        "fqk",
        "row",
        "coordinate",
        "coordinate_column",
        "coordinate_row",
        "hca_spreadsheet",
        "sheet",
        "cell_coordinate",
        "entity_dictionary",
        "row",
        "value",
        "hca_spreadsheet",
        "archive_entities_list",
        "Dict",
        "Dict",
        "entity",
        "archive_entities_list",
        "accessionedMetadata",
        "entity",
        "get",
        "entity",
        "entity_dictionary",
        "submission_uuid",
        "Dict",
        "rq",
        "get",
        "submission_uuid",
        "json",
        "archive_submission",
        "rq",
        "get",
        "entities_link",
        "json",
        "entities_page",
        "entities_page",
        "get",
        "get",
        "rq",
        "get",
        "entities_page",
        "json",
        "all_entities",
        "extend",
        "entities_page",
        "all_entities",
        "uuid",
        "Tuple",
        "Workbook",
        "uuid",
        "rq",
        "get",
        "url",
        "response",
        "raise_for_status",
        "BytesIO",
        "response",
        "content",
        "load_workbook",
        "file",
        "response",
        "headers",
        "split",
        "spreadsheet",
        "filename",
        "argparse",
        "Namespace",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "dest",
        "os",
        "getcwd",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "parse_args",
        "submission_uuid",
        "output_path",
        "get_hca_spreadsheet",
        "submission_uuid",
        "get_all_entities",
        "submission_uuid",
        "get_entity_dictionary",
        "all_entities",
        "parse_spreadsheet",
        "hca_spreadsheet",
        "entity_dictionary",
        "hca_spreadsheet",
        "save",
        "output_path",
        "filename",
        "replace",
        "parse_args",
        "main",
        "args",
        "submission_uuid",
        "args",
        "output_path"
    ],
    "literals": [
        "'sample'",
        "'tab'",
        "'Donor organism'",
        "'Specimen from organism'",
        "'Cell suspension'",
        "'fqk'",
        "'{}.biomaterial_core.biosamples_accession'",
        "'project'",
        "'tab'",
        "'Project'",
        "'fqk'",
        "'{}.biostudies_accessions'",
        "'sequencingExperiment'",
        "'tab'",
        "'Sequence File'",
        "'fqk'",
        "'process.insdc_experiment.insdc_experiment_accession'",
        "'sequencingRun'",
        "'tab'",
        "'Sequence File'",
        "'fqk'",
        "'{}.insdc_run_accessions'",
        "'study'",
        "'tab'",
        "'Project'",
        "'fqk'",
        "'{}.insdc_project_accessions'",
        "f\"{column_letter}{row_number}\"",
        "'type'",
        "'fqk'",
        "\"{}\"",
        "\" \"",
        "\"_\"",
        "f'{coordinate_column}{coordinate_row}'",
        "'accession'",
        "'accessionedMetadataUuids'",
        "f'https://api.ingest.archive.data.humancellatlas.org/archiveSubmissions/search/'",
        "f'findBySubmissionUuid?submissionUuid={submission_uuid}'",
        "'_links'",
        "'entities'",
        "'href'",
        "'_embedded'",
        "'archiveEntities'",
        "'_links'",
        "'next'",
        "'_links'",
        "'next'",
        "'href'",
        "'_embedded'",
        "'archiveEntities'",
        "f'https://ingest.archive.data.humancellatlas.org/submissions/{uuid}/spreadsheet'",
        "'Content-Disposition'",
        "'filename='",
        "'--hca_spreadsheet_output'",
        "'-o'",
        "'Path where the HCA spreadsheet will be saved'",
        "\"output_path\"",
        "'--submission_uuid'",
        "'-u'",
        "'uuid of the ingest submission'",
        "f\"{output_path}/{filename.replace('.xlsx', '_accessions.xlsx')}\"",
        "'.xlsx'",
        "'_accessions.xlsx'",
        "'__main__'"
    ],
    "variables": [
        "accession_mapping",
        "column_letter",
        "column_letter",
        "value",
        "fqk",
        "coordinate_column",
        "coordinate_row",
        "cell_coordinate",
        "value",
        "entity_dictionary",
        "entity_dictionary",
        "accessionedMetadata",
        "archive_submission",
        "entities_link",
        "entities_page",
        "all_entities",
        "entities_page",
        "url",
        "response",
        "file",
        "spreadsheet",
        "filename",
        "parser",
        "hca_spreadsheet",
        "filename",
        "all_entities",
        "entity_dictionary",
        "hca_spreadsheet",
        "args"
    ],
    "comments": [
        "(for -> else) If the fqk is not found append a column creating it.",
        "Parse each sheet for the UUIDs",
        "Get fqk, search for it, add accession based on the entity dictionary",
        "A single entity may refer to multiple files (e.g. 1 SequencingRun -> 3 data files)",
        "Get the archiveEntities response and put them into a list",
        "Deal with pagination",
        "Get spreadsheet from URL",
        "Get openpyxl object from request",
        "Get filename from headers",
        "TODO Work way of adding sequencingExperiment entities. Can't be done by uuid."
    ],
    "docstrings": [
        "\"\"\"\n    Search for a Full Qualified Key (fqk) in the spreadsheet at a certain row and return the column letter.\n\n    :param sheet: Worksheet to search in\n    :param fqk: Full Qualified Key to search for\n    :param row_number: In which row to search for the fqk (1-based index)\n    :return: column letter where the key can be found\n    \"\"\"",
        "\"\"\"\n    Parse the spreadsheet and fill the metadata with accessions.\n\n    :param hca_spreadsheet: Workbook object of the spreadsheet\n    :param entity_dictionary: Dictionary mapping by entity UUID to the proper archiveEntity\n    :return: Accessioned spreadsheet\n    \"\"\"",
        "\"\"\"\n    Given a list of ingest's archiveEntities, return a dictionary mapping UUIDs to the archiveEntities\n\n    :param archive_entities_list: List of archiveEntities\n    :return: Map of ingest UUIDs to archiveEntities metadata\n    \"\"\"",
        "\"\"\"\n    Get all Ingest's archiveEntitites for a submission\n\n    :param submission_uuid: UUID of the submission in ingest\n    :return: List containing all archiveEntities for a submission\n    \"\"\"",
        "\"\"\"\n    Get the HCA spreadsheet from an ingest submission UUID loaded as an openpyxl Workbook.\n\n    :param uuid: Ingest submission UUID\n    :return: Tuple(Workbook, filename)\n    \"\"\"",
        "\"\"\"\n    Parse the arguments and return them.\n\n    :return: Arguments from Command Line\n    \"\"\""
    ],
    "functions": [
        "search_fqk_in_sheet",
        "parse_spreadsheet",
        "get_entity_dictionary",
        "get_all_entities",
        "get_hca_spreadsheet",
        "parse_args",
        "main"
    ],
    "classes": []
}