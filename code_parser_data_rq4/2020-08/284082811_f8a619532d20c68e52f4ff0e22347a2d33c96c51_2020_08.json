{
    "identifiers": [
        "Attribute",
        "IMemberNames",
        "IImportsTracker",
        "IObjectNames",
        "importsTracker",
        "memberNames",
        "importsTracker",
        "memberNames",
        "attribute",
        "objectType",
        "objectNames",
        "attribute",
        "attribute",
        "value",
        "expression",
        "name",
        "expression",
        "objectType",
        "objectNames",
        "objectType",
        "value",
        "parsedObject",
        "parsedObject",
        "objectNames",
        "name",
        "parsedObject",
        "value",
        "objectNames",
        "name",
        "value",
        "attribute",
        "attribute",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "expression",
        "expression",
        "objectParsers",
        "objectType",
        "regex",
        "value",
        "value",
        "value",
        "value",
        "value",
        "expressionRegex",
        "expressionMatch",
        "expressionMatch",
        "attributeName",
        "expression",
        "objectType",
        "objectNames",
        "objectType",
        "modelLoaderEvents",
        "attributeName",
        "attributeName",
        "expression",
        "objectNames",
        "attributeName",
        "expression",
        "objectType",
        "attributeName",
        "objectNames",
        "attributeName",
        "expression",
        "propertySetterTemplate",
        "expression",
        "expression",
        "propertySetterTemplate",
        "objectNames",
        "attributeName",
        "attributeName",
        "expression",
        "propertySetterTemplate",
        "expression",
        "expression",
        "propertySetterTemplate",
        "expression",
        "expression",
        "expression",
        "propertySetterTemplate",
        "bindingKeyRegex",
        "expression",
        "expression",
        "propertySetterTemplate",
        "value",
        "objectParsers",
        "regex",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value"
    ],
    "literals": [
        "'libxmljs'",
        "'./DocumentTranslator'",
        "'./ObjectNames'",
        "string",
        "'Vector3'",
        "'Color3'",
        "'Color4'",
        "string",
        "'loaded'",
        "'loading'",
        "'loadFailed'",
        "'progress'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Custom'",
        "string",
        "this.${objectNames.privateName}.${name} = ${parsedObject};",
        "this.${objectNames.privateName}.${name} = ${value};",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'ModelLoader'",
        "this.${objectNames.privateName}.${attributeName}.subscribe(${expression});",
        "'Custom'",
        "'enabled'",
        "string",
        "this.${objectNames.privateName}.setEnabled(@value);",
        "'@value'",
        "string",
        "this.${objectNames.privateName}.${attributeName} = @value;",
        "'@value'",
        "string",
        "string",
        "'this.'",
        "this.${this._memberNames.host}.",
        "string",
        "string",
        "string",
        "this.${this._memberNames.addBinding}(${expression}, (value) => { ${propertySetterTemplate.replace('@value', 'value')} })",
        "'@value'",
        "'value'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'Color'",
        "'\\'#'",
        "${type}.FromHexString(${value})",
        "new ${type}(${value})"
    ],
    "variables": [
        "expressionRegex",
        "bindingKeyRegex",
        "objectParsers",
        "modelLoaderEvents",
        "name",
        "value",
        "expression",
        "parsedObject",
        "value",
        "expression",
        "objectType",
        "regex",
        "expressionMatch",
        "propertySetterTemplate",
        "propertySetterTemplate",
        "regex"
    ],
    "comments": [
        "TODO figure out what to do with this"
    ],
    "docstrings": [],
    "functions": [
        "translate",
        "extractExpression",
        "extractExpressionFromTypeAndValue",
        "_tryExtractExpression",
        "_handleExpression",
        "_cleanExpression",
        "_getAddBinding",
        "_tryParseObject",
        "_parseObject"
    ],
    "classes": [
        "AttributeTranslator"
    ]
}