{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "pandas",
        "pd",
        "numpy",
        "np",
        "uncertainties",
        "ufloat",
        "uncertainties",
        "umath",
        "openpyxl",
        "load_workbook",
        "scipy",
        "optimize",
        "curve_fit",
        "pd",
        "read_excel",
        "data",
        "drop",
        "axis",
        "inplace",
        "data",
        "dropna",
        "axis",
        "how",
        "inplace",
        "max",
        "min",
        "data",
        "min",
        "max",
        "data",
        "x",
        "a",
        "b",
        "c",
        "a1",
        "b1",
        "c1",
        "a",
        "x",
        "b",
        "np",
        "exp",
        "c",
        "x",
        "a1",
        "x",
        "b1",
        "np",
        "exp",
        "c1",
        "x",
        "np",
        "arange",
        "minT",
        "maxT",
        "np",
        "array",
        "data",
        "np",
        "zeros",
        "len",
        "Tlist",
        "len",
        "Authorlist",
        "np",
        "zeros",
        "len",
        "Tlist",
        "len",
        "Authorlist",
        "i",
        "len",
        "data",
        "index",
        "ufloat",
        "data",
        "iloc",
        "i",
        "data",
        "iloc",
        "i",
        "ufloat",
        "data",
        "iloc",
        "i",
        "data",
        "iloc",
        "i",
        "ufloat",
        "data",
        "iloc",
        "i",
        "data",
        "iloc",
        "i",
        "j",
        "len",
        "Tlist",
        "j",
        "minT",
        "data",
        "iloc",
        "i",
        "T",
        "data",
        "iloc",
        "i",
        "A",
        "T",
        "n",
        "umath",
        "exp",
        "E",
        "T",
        "klist",
        "j",
        "k",
        "n",
        "kulist",
        "j",
        "k",
        "s",
        "klist",
        "j",
        "np",
        "nan",
        "kulist",
        "j",
        "np",
        "nan",
        "pd",
        "DataFrame",
        "klist",
        "columns",
        "Authorlist",
        "index",
        "Tlist",
        "pd",
        "DataFrame",
        "kulist",
        "columns",
        "Authorlist",
        "index",
        "Tlist",
        "rate",
        "dropna",
        "axis",
        "how",
        "inplace",
        "len",
        "rate",
        "index",
        "rate",
        "values",
        "tolist",
        "rateu",
        "dropna",
        "axis",
        "how",
        "inplace",
        "rateu",
        "index",
        "tolist",
        "rateu",
        "values",
        "tolist",
        "Tlist",
        "np",
        "square",
        "kulist",
        "np",
        "nansum",
        "np",
        "multiply",
        "klist",
        "weights",
        "axis",
        "np",
        "nansum",
        "weights",
        "axis",
        "np",
        "sqrt",
        "np",
        "nansum",
        "weights",
        "axis",
        "x",
        "x",
        "average_rate",
        "np",
        "isnan",
        "x",
        "x",
        "x",
        "uncertainty",
        "np",
        "isfinite",
        "x",
        "curve_fit",
        "rate_function",
        "Tlist",
        "average_rate",
        "sigma",
        "uncertainty",
        "maxfev",
        "np",
        "sqrt",
        "np",
        "diag",
        "pcov",
        "pfit",
        "perr",
        "rate_function",
        "T",
        "pfit",
        "T",
        "Tlist",
        "T",
        "T",
        "Tlist",
        "plt",
        "plot",
        "reverseTlist",
        "average_rate",
        "plt",
        "plot",
        "reverseTlist",
        "evaluated_rate",
        "pd",
        "DataFrame",
        "average_rate",
        "uncertainty",
        "evaluated_rate",
        "reverseTlist",
        "Tlist",
        "load_workbook",
        "path",
        "pd",
        "ExcelWriter",
        "path",
        "engine",
        "book",
        "rate",
        "to_excel",
        "writer",
        "rateu",
        "to_excel",
        "writer",
        "evaluated",
        "to_excel",
        "writer",
        "index",
        "writer",
        "save",
        "writer",
        "close"
    ],
    "literals": [
        "'HO2+OH=H2O+O2.xlsx'",
        "'HO2+OH=H2O+O2_Ref'",
        "'comments'",
        "'any'",
        "'min T'",
        "'max T'",
        "'Author'",
        "'A'",
        "'Au'",
        "'n'",
        "'nu'",
        "'E'",
        "'Eu'",
        "'min T'",
        "'max T'",
        "'all'",
        "'all'",
        "'bo'",
        "'r--'",
        "'average_rate'",
        "'uncertainty'",
        "'evaluated_rate'",
        "'10000/T'",
        "'Temperature'",
        "\"HO2+OH=H2O+O2.xlsx\"",
        "'openpyxl'",
        "\"rate\"",
        "\"rateu\"",
        "\"evaluated\""
    ],
    "variables": [
        "data",
        "minT",
        "maxT",
        "Tlist",
        "Authorlist",
        "klist",
        "kulist",
        "A",
        "n",
        "E",
        "T",
        "k",
        "i",
        "i",
        "i",
        "i",
        "rate",
        "rateu",
        "klist",
        "Tlist",
        "kulist",
        "weights",
        "average_rate",
        "uncertainty",
        "simu_average_rate",
        "simu_uncertainty",
        "p0",
        "pfit",
        "pcov",
        "perr",
        "evaluated_rate",
        "reverseTlist",
        "evaluated",
        "path",
        "book",
        "writer",
        "writer",
        "book"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "return a * (x/298) ** b * np.exp(-c*1000/8.314/x)",
        "print(minT, maxT)",
        "print(klist)",
        "print(i)",
        "print(T)",
        "print(average_rate)",
        "print(uncertainty)",
        "print(simu_average_rate,simu_uncertainty)",
        "average = pd.DataFrame(average_rate,columns=Authorlist,index=Tlist)",
        "print(rate)"
    ],
    "docstrings": [],
    "functions": [
        "rate_function"
    ],
    "classes": []
}