{
    "identifiers": [
        "n",
        "logs",
        "logs",
        "n",
        "log",
        "logs",
        "log",
        "split",
        "str_arr",
        "str_arr",
        "st",
        "res",
        "st",
        "curr",
        "prev",
        "st",
        "append",
        "str_arr",
        "curr",
        "res",
        "st",
        "pop",
        "curr",
        "prev",
        "curr",
        "res"
    ],
    "literals": [
        "\":\"",
        "\"start\""
    ],
    "variables": [
        "st",
        "prev",
        "res",
        "str_arr",
        "curr",
        "prev",
        "prev"
    ],
    "comments": [
        "maintining active functions",
        "maintaining prev interval",
        "",
        "for each log",
        "current interval",
        "if its not the first interval",
        "add running till now for the prev function id",
        "add curr id to stack",
        "update prev",
        "end case",
        "pop and add the time for which the function ran to res",
        "update prev"
    ],
    "docstrings": [
        "\"\"\"\n// Time Complexity : o(n), n->number of logs\n// Space Complexity : o(n)\n// Did this code successfully run on Leetcode : yes\n// Any problem you faced while coding this : no\n\n\n// Your code here along with comments explaining your approach\n\"\"\""
    ],
    "functions": [
        "exclusiveTime"
    ],
    "classes": [
        "Solution"
    ]
}