{
    "identifiers": [
        "Collections",
        "Linq",
        "Expressions",
        "WorkflowCore",
        "Models",
        "WorkflowCore",
        "Primitives",
        "WorkflowCore",
        "Interface",
        "IWorkflowModifier",
        "TData",
        "TStepBody",
        "TStepBody",
        "IStepBody",
        "IStepBuilder",
        "TData",
        "TStep",
        "TStep",
        "Action",
        "IStepBuilder",
        "TData",
        "TStep",
        "stepSetup",
        "TStep",
        "IStepBody",
        "IStepBuilder",
        "TData",
        "TStep",
        "TStep",
        "IStepBuilder",
        "TData",
        "TStep",
        "newStep",
        "TStep",
        "IStepBody",
        "IStepBuilder",
        "TData",
        "InlineStepBody",
        "Func",
        "IStepExecutionContext",
        "ExecutionResult",
        "body",
        "IStepBuilder",
        "TData",
        "ActionStepBody",
        "Action",
        "IStepExecutionContext",
        "body",
        "IStepBuilder",
        "TData",
        "WaitFor",
        "eventName",
        "Expression",
        "Func",
        "TData",
        "eventKey",
        "Expression",
        "Func",
        "TData",
        "effectiveDate",
        "Expression",
        "Func",
        "TData",
        "cancelCondition",
        "IStepBuilder",
        "TData",
        "WaitFor",
        "eventName",
        "Expression",
        "Func",
        "TData",
        "IStepExecutionContext",
        "eventKey",
        "Expression",
        "Func",
        "TData",
        "effectiveDate",
        "Expression",
        "Func",
        "TData",
        "cancelCondition",
        "IStepBuilder",
        "TData",
        "Delay",
        "Expression",
        "Func",
        "TData",
        "TimeSpan",
        "period",
        "IStepBuilder",
        "TData",
        "Decide",
        "Expression",
        "Func",
        "TData",
        "expression",
        "IContainerStepBuilder",
        "TData",
        "Foreach",
        "Foreach",
        "Expression",
        "Func",
        "TData",
        "collection",
        "IContainerStepBuilder",
        "TData",
        "While",
        "While",
        "Expression",
        "Func",
        "TData",
        "condition",
        "IContainerStepBuilder",
        "TData",
        "If",
        "If",
        "Expression",
        "Func",
        "TData",
        "condition",
        "IContainerStepBuilder",
        "TData",
        "When",
        "OutcomeSwitch",
        "Expression",
        "Func",
        "TData",
        "outcomeValue",
        "label",
        "IParallelStepBuilder",
        "TData",
        "Sequence",
        "IStepBuilder",
        "TData",
        "Sequence",
        "Action",
        "IWorkflowBuilder",
        "TData",
        "builder",
        "IContainerStepBuilder",
        "TData",
        "Schedule",
        "TStepBody",
        "Expression",
        "Func",
        "TData",
        "TimeSpan",
        "time",
        "IContainerStepBuilder",
        "TData",
        "Recur",
        "TStepBody",
        "Expression",
        "Func",
        "TData",
        "TimeSpan",
        "interval",
        "Expression",
        "Func",
        "TData",
        "until",
        "IStepBuilder",
        "TData",
        "Activity",
        "activityName",
        "Expression",
        "Func",
        "TData",
        "parameters",
        "Expression",
        "Func",
        "TData",
        "effectiveDate",
        "Expression",
        "Func",
        "TData",
        "cancelCondition"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "Specify the next step in the workflow",
        "</summary>",
        "<typeparam name=\"TStep\">The type of the step to execute</typeparam>",
        "<param name=\"stepSetup\">Configure additional parameters for this step</param>",
        "<returns></returns>",
        "Specify the next step in the workflow",
        "</summary>",
        "<typeparam name=\"TStep\"></typeparam>",
        "<param name=\"newStep\"></param>",
        "<returns></returns>",
        "Specify an inline next step in the workflow",
        "</summary>",
        "<param name=\"body\"></param>",
        "<returns></returns>",
        "Specify an inline next step in the workflow",
        "</summary>",
        "<param name=\"body\"></param>",
        "<returns></returns>",
        "Wait here until to specified event is published",
        "</summary>",
        "<param name=\"eventName\">The name used to identify the kind of event to wait for</param>",
        "<param name=\"eventKey\">A specific key value within the context of the event to wait for</param>",
        "<param name=\"effectiveDate\">Listen for events as of this effective date</param>",
        "<param name=\"cancelCondition\">A conditon that when true will cancel this WaitFor</param>",
        "<returns></returns>",
        "Wait here until to specified event is published",
        "</summary>",
        "<param name=\"eventName\">The name used to identify the kind of event to wait for</param>",
        "<param name=\"eventKey\">A specific key value within the context of the event to wait for</param>",
        "<param name=\"effectiveDate\">Listen for events as of this effective date</param>",
        "<param name=\"cancelCondition\">A conditon that when true will cancel this WaitFor</param>",
        "<returns></returns>",
        "Wait for a specified period",
        "</summary>",
        "<param name=\"period\"></param>",
        "<returns></returns>",
        "Evaluate an expression and take a different path depending on the value",
        "</summary>",
        "<param name=\"expression\">Expression to evaluate for decision</param>",
        "<returns></returns>",
        "Execute a block of steps, once for each item in a collection in a parallel foreach",
        "</summary>",
        "<param name=\"collection\">Resolves a collection for iterate over</param>",
        "<returns></returns>",
        "Repeat a block of steps until a condition becomes true",
        "</summary>",
        "<param name=\"condition\">Resolves a condition to break out of the while loop</param>",
        "<returns></returns>",
        "Execute a block of steps if a condition is true",
        "</summary>",
        "<param name=\"condition\">Resolves a condition to evaluate</param>",
        "<returns></returns>",
        "Configure an outcome for this step, then wire it to a sequence",
        "</summary>",
        "<param name=\"outcomeValue\"></param>",
        "<returns></returns>",
        "Execute multiple blocks of steps in parallel",
        "</summary>",
        "<returns></returns>",
        "Execute a sequence of steps in a container",
        "</summary>",
        "<returns></returns>",
        "Schedule a block of steps to execute in parallel sometime in the future",
        "</summary>",
        "<param name=\"time\">The time span to wait before executing the block</param>",
        "<returns></returns>",
        "Schedule a block of steps to execute in parallel sometime in the future at a recurring interval",
        "</summary>",
        "<param name=\"interval\">The time span to wait between recurring executions</param>",
        "<param name=\"until\">Resolves a condition to stop the recurring task</param>",
        "<returns></returns>",
        "Wait here until an external activity is complete",
        "</summary>",
        "<param name=\"activityName\">The name used to identify the activity to wait for</param>",
        "<param name=\"parameters\">The data to pass the external activity worker</param>",
        "<param name=\"effectiveDate\">Listen for events as of this effective date</param>",
        "<param name=\"cancelCondition\">A conditon that when true will cancel this WaitFor</param>",
        "<returns></returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Then",
        "Then",
        "Then",
        "Then",
        "WaitFor",
        "WaitFor",
        "Delay",
        "Decide",
        "ForEach",
        "While",
        "If",
        "When",
        "Parallel",
        "Saga",
        "Schedule",
        "Recur",
        "Activity"
    ],
    "classes": []
}