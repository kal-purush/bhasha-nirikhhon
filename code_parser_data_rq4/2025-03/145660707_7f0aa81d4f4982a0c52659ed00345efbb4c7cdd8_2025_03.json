{
    "identifiers": [
        "factory",
        "exports",
        "factory",
        "exports",
        "define",
        "define",
        "define",
        "factory",
        "globalThis",
        "globalThis",
        "factory",
        "exports",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeUItoBG",
        "MessageTypeBGtoUI",
        "MessageTypeBGtoUI",
        "MessageTypeBGtoUI",
        "MessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "MessageTypeBGtoCS",
        "DebugMessageTypeBGtoCS",
        "DebugMessageTypeBGtoCS",
        "DebugMessageTypeBGtoCS",
        "DebugMessageTypeBGtoCS",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "MessageTypeCStoBG",
        "DebugMessageTypeCStoBG",
        "DebugMessageTypeCStoBG",
        "DebugMessageTypeCStoBG",
        "DebugMessageTypeCStoBG",
        "MessageTypeCStoUI",
        "MessageTypeCStoUI",
        "MessageTypeCStoUI",
        "MessageTypeCStoUI",
        "MessageTypeUItoCS",
        "MessageTypeUItoCS",
        "MessageTypeUItoCS",
        "MessageTypeUItoCS",
        "navigator",
        "isNavigatorDefined",
        "navigator",
        "navigator",
        "navigator",
        "brand",
        "brand",
        "brand",
        "navigator",
        "isNavigatorDefined",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "userAgent",
        "isChromium",
        "platform",
        "platform",
        "isNavigatorDefined",
        "navigator",
        "navigator",
        "userAgent",
        "ShadowRoot",
        "MediaQueryList",
        "MediaQueryList",
        "CSSLayerBlockRule",
        "userAgent",
        "m",
        "m",
        "m",
        "userAgent",
        "m",
        "m",
        "m",
        "err",
        "el",
        "el",
        "el",
        "el",
        "el",
        "e",
        "url",
        "mimeType",
        "origin",
        "origin",
        "url",
        "origin",
        "fetch",
        "url",
        "origin",
        "isFirefox",
        "mimeType",
        "url",
        "url",
        "response",
        "mimeType",
        "response",
        "mimeType",
        "url",
        "response",
        "url",
        "response",
        "response",
        "response",
        "url",
        "mimeType",
        "getOKResponse",
        "url",
        "mimeType",
        "readResponseAsDataURL",
        "response",
        "url",
        "mimeType",
        "getOKResponse",
        "url",
        "mimeType",
        "response",
        "response",
        "response",
        "resolve",
        "FileReader",
        "reader",
        "resolve",
        "reader",
        "reader",
        "blob",
        "dataURL",
        "url",
        "mimeType",
        "origin",
        "getOKResponse",
        "url",
        "mimeType",
        "origin",
        "response",
        "throwCORSError",
        "url",
        "url",
        "fetch",
        "fetch",
        "fetcher",
        "fetch",
        "fetcher",
        "throwCORSError",
        "url",
        "fetcher",
        "url",
        "chrome",
        "chrome",
        "args",
        "args",
        "args",
        "MessageTypeCStoBG",
        "args",
        "args",
        "callFetchMethod",
        "url",
        "responseType",
        "text",
        "readResponseAsDataURL",
        "response",
        "text",
        "response",
        "messageListeners",
        "cb",
        "cb",
        "MessageTypeBGtoCS",
        "text",
        "error",
        "error",
        "messageListeners",
        "cb",
        "cb",
        "MessageTypeBGtoCS",
        "callback",
        "messageListeners",
        "callback",
        "chrome",
        "chrome",
        "chrome",
        "args",
        "sendMessage",
        "args",
        "nativeSendMessage",
        "chrome",
        "args",
        "chrome",
        "sendMessage",
        "chrome",
        "chrome",
        "chrome",
        "chrome",
        "chrome",
        "args",
        "addMessageListener",
        "args",
        "nativeAddListener",
        "chrome",
        "args",
        "chrome",
        "args",
        "addMessageListener",
        "args",
        "ThemeEngine",
        "ThemeEngine",
        "ThemeEngine",
        "ThemeEngine",
        "ThemeEngine",
        "ThemeEngine",
        "ThemeEngine",
        "AutomationMode",
        "AutomationMode",
        "AutomationMode",
        "AutomationMode",
        "AutomationMode",
        "AutomationMode",
        "AutomationMode",
        "isMacOS",
        "isWindows",
        "ThemeEngine",
        "DEFAULT_COLORS",
        "DEFAULT_COLORS",
        "DEFAULT_COLORS",
        "DEFAULT_COLORS",
        "isCSSColorSchemePropSupported",
        "filterModeSites",
        "url",
        "isChromium",
        "ThemeEngine",
        "ThemeEngine",
        "url",
        "DEFAULT_THEME",
        "AutomationMode",
        "regex",
        "input",
        "group",
        "m",
        "regex",
        "input",
        "matches",
        "m",
        "group",
        "matches",
        "regex",
        "input",
        "group",
        "m",
        "regex",
        "input",
        "matches",
        "m",
        "group",
        "m",
        "matches",
        "text",
        "text",
        "i",
        "len",
        "i",
        "text",
        "i",
        "hash",
        "hash",
        "hash",
        "c",
        "hash",
        "input",
        "input",
        "input",
        "searchStartIndex",
        "getOpenCloseRange",
        "input",
        "searchStartIndex",
        "input",
        "searchStartIndex",
        "openToken",
        "closeToken",
        "excludeRanges",
        "excludeRanges",
        "indexOf",
        "token",
        "pos",
        "input",
        "token",
        "pos",
        "indexOf",
        "token",
        "pos",
        "indexOfExcluding",
        "input",
        "token",
        "pos",
        "excludeRanges",
        "i",
        "length",
        "i",
        "depth",
        "indexOf",
        "openToken",
        "i",
        "openIndex",
        "firstOpenIndex",
        "openIndex",
        "depth",
        "i",
        "openIndex",
        "indexOf",
        "closeToken",
        "i",
        "closeIndex",
        "indexOf",
        "openToken",
        "i",
        "openIndex",
        "closeIndex",
        "openIndex",
        "depth",
        "depth",
        "firstOpenIndex",
        "closeIndex",
        "i",
        "closeIndex",
        "depth",
        "i",
        "openIndex",
        "input",
        "search",
        "position",
        "excludeRanges",
        "input",
        "search",
        "position",
        "excludeRanges",
        "r",
        "i",
        "r",
        "i",
        "r",
        "exclusion",
        "indexOfExcluding",
        "input",
        "search",
        "exclusion",
        "excludeRanges",
        "i",
        "input",
        "separator",
        "excludeRanges",
        "commaIndex",
        "indexOfExcluding",
        "input",
        "separator",
        "currIndex",
        "excludeRanges",
        "parts",
        "input",
        "currIndex",
        "commaIndex",
        "currIndex",
        "commaIndex",
        "parts",
        "input",
        "currIndex",
        "parts",
        "$url",
        "anchor",
        "anchor",
        "anchor",
        "$url",
        "anchor",
        "$url",
        "$base",
        "$url",
        "$base",
        "$base",
        "parsedURLCache",
        "key",
        "parsedURLCache",
        "key",
        "$base",
        "URL",
        "$url",
        "fixBaseURL",
        "$base",
        "parsedURLCache",
        "key",
        "parsedURL",
        "parsedURL",
        "URL",
        "fixBaseURL",
        "$url",
        "parsedURLCache",
        "$url",
        "parsedURL",
        "parsedURL",
        "$base",
        "$relative",
        "$relative",
        "$relative",
        "$relative",
        "location",
        "$relative",
        "parseURL",
        "$base",
        "parseURL",
        "$relative",
        "b",
        "a",
        "href",
        "href",
        "parseURL",
        "href",
        "url",
        "location",
        "url",
        "location",
        "url",
        "location",
        "url",
        "location",
        "config",
        "lines",
        "excludedSelectors",
        "config",
        "config",
        "lines",
        "config",
        "config",
        "lines",
        "config",
        "lines",
        "config",
        "lines",
        "lines",
        "items",
        "items",
        "items",
        "iterator",
        "isArrayLike",
        "items",
        "items",
        "i",
        "len",
        "i",
        "iterator",
        "items",
        "i",
        "item",
        "items",
        "iterator",
        "item",
        "array",
        "addition",
        "forEach",
        "addition",
        "a",
        "array",
        "a",
        "items",
        "items",
        "i",
        "len",
        "i",
        "results",
        "items",
        "i",
        "results",
        "x",
        "inLow",
        "inHigh",
        "outLow",
        "outHigh",
        "x",
        "inLow",
        "outHigh",
        "outLow",
        "inHigh",
        "inLow",
        "outLow",
        "x",
        "min",
        "max",
        "max",
        "min",
        "x",
        "m1",
        "m2",
        "m1",
        "i",
        "len",
        "i",
        "result",
        "i",
        "m2",
        "j",
        "len2",
        "j",
        "m1",
        "k",
        "len3",
        "k",
        "sum",
        "m1",
        "i",
        "k",
        "m2",
        "k",
        "j",
        "result",
        "i",
        "j",
        "sum",
        "result",
        "config",
        "Matrix",
        "config",
        "m",
        "multiplyMatrices",
        "m",
        "Matrix",
        "config",
        "config",
        "m",
        "multiplyMatrices",
        "m",
        "Matrix",
        "config",
        "config",
        "m",
        "multiplyMatrices",
        "m",
        "Matrix",
        "config",
        "config",
        "m",
        "multiplyMatrices",
        "m",
        "Matrix",
        "config",
        "config",
        "m",
        "multiplyMatrices",
        "m",
        "Matrix",
        "m",
        "matrix",
        "r",
        "g",
        "b",
        "multiplyMatrices",
        "matrix",
        "rgb",
        "i",
        "clamp",
        "result",
        "i",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "t",
        "v",
        "t",
        "v",
        "t",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "FilterMode",
        "FilterMode",
        "FilterMode",
        "FilterMode",
        "FilterMode",
        "FilterMode",
        "FilterMode",
        "config",
        "config",
        "FilterMode",
        "filters",
        "config",
        "filters",
        "config",
        "config",
        "filters",
        "config",
        "config",
        "filters",
        "config",
        "config",
        "filters",
        "config",
        "filters",
        "filters",
        "expression",
        "expression",
        "i",
        "len",
        "i",
        "expression",
        "i",
        "token",
        "token",
        "operators",
        "token",
        "operators",
        "token",
        "workingStack",
        "operators",
        "workingStack",
        "currentOp",
        "op",
        "currentOp",
        "rpnStack",
        "workingStack",
        "workingStack",
        "token",
        "lastToken",
        "operators",
        "lastToken",
        "rpnStack",
        "token",
        "rpnStack",
        "rpnStack",
        "token",
        "lastToken",
        "token",
        "rpnStack",
        "workingStack",
        "rpnStack",
        "i",
        "len",
        "i",
        "operators",
        "rpnStack",
        "i",
        "op",
        "stack",
        "stack",
        "op",
        "args",
        "args",
        "stack",
        "parseFloat",
        "rpnStack",
        "i",
        "stack",
        "precedence",
        "method",
        "precedence",
        "method",
        "left",
        "right",
        "left",
        "right",
        "op",
        "op",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "isSystemDarkModeEnabled",
        "matchMedia",
        "$color",
        "$color",
        "$color",
        "rgbaParseCache",
        "$color",
        "rgbaParseCache",
        "$color",
        "$color",
        "$color",
        "lowerCalcExpression",
        "$color",
        "parse",
        "$color",
        "color",
        "rgbaParseCache",
        "$color",
        "color",
        "color",
        "color",
        "hslaParseCache",
        "color",
        "hslaParseCache",
        "color",
        "parseColorWithCache",
        "color",
        "rgb",
        "rgbToHSL",
        "rgb",
        "hslaParseCache",
        "color",
        "hsl",
        "hsl",
        "hslaParseCache",
        "rgbaParseCache",
        "s",
        "l",
        "l",
        "l",
        "x",
        "x",
        "l",
        "s",
        "c",
        "h",
        "l",
        "c",
        "h",
        "c",
        "x",
        "h",
        "x",
        "c",
        "h",
        "c",
        "x",
        "h",
        "x",
        "c",
        "h",
        "x",
        "c",
        "c",
        "x",
        "n",
        "n",
        "m",
        "r255",
        "g255",
        "b255",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "max",
        "min",
        "max",
        "min",
        "c",
        "max",
        "r",
        "g",
        "b",
        "c",
        "max",
        "g",
        "b",
        "r",
        "c",
        "r",
        "g",
        "c",
        "h",
        "h",
        "c",
        "l",
        "n",
        "digits",
        "n",
        "digits",
        "digits",
        "dot",
        "zerosMatch",
        "zerosMatch",
        "dot",
        "dot",
        "zerosMatch",
        "rgb",
        "a",
        "a",
        "toFixed",
        "r",
        "toFixed",
        "g",
        "toFixed",
        "b",
        "toFixed",
        "a",
        "toFixed",
        "r",
        "toFixed",
        "g",
        "toFixed",
        "b",
        "a",
        "a",
        "r",
        "g",
        "b",
        "a",
        "r",
        "g",
        "b",
        "x",
        "x",
        "x",
        "hsl",
        "a",
        "a",
        "toFixed",
        "h",
        "toFixed",
        "s",
        "toFixed",
        "l",
        "toFixed",
        "a",
        "toFixed",
        "h",
        "toFixed",
        "s",
        "toFixed",
        "l",
        "$color",
        "$color",
        "c",
        "domParseColor",
        "c",
        "c",
        "rgbMatch",
        "c",
        "c",
        "domParseColor",
        "c",
        "parseRGB",
        "c",
        "c",
        "hslMatch",
        "parseHSL",
        "c",
        "c",
        "hexMatch",
        "parseHex",
        "c",
        "knownColors",
        "c",
        "getColorByName",
        "c",
        "systemColors",
        "c",
        "getSystemColor",
        "c",
        "c",
        "c",
        "supportedColorFuncs",
        "fn",
        "c",
        "fn",
        "c",
        "fn",
        "domParseColor",
        "c",
        "c",
        "c",
        "c",
        "match",
        "isSystemDarkModeEnabled",
        "match",
        "match",
        "parse",
        "schemeColor",
        "$color",
        "$color",
        "$color",
        "$color",
        "startIndex",
        "$color",
        "i",
        "$color",
        "i",
        "$color",
        "i",
        "c",
        "c",
        "c",
        "c",
        "c",
        "isMining",
        "isMining",
        "c",
        "c",
        "c",
        "numbers",
        "$color",
        "prevPos",
        "i",
        "isMining",
        "prevPos",
        "i",
        "isMining",
        "prevPos",
        "i",
        "isMining",
        "numbers",
        "$color",
        "prevPos",
        "$color",
        "numbers",
        "units",
        "getNumbers",
        "units",
        "raw",
        "r",
        "r",
        "r",
        "i",
        "unitsList",
        "r",
        "u",
        "unit",
        "n",
        "parseFloat",
        "r",
        "r",
        "unit",
        "unit",
        "i",
        "n",
        "parseFloat",
        "r",
        "i",
        "n",
        "n",
        "numbers",
        "$rgb",
        "a",
        "getNumbersFromString",
        "$rgb",
        "rgbRange",
        "rgbUnits",
        "r",
        "g",
        "b",
        "a",
        "$hsl",
        "a",
        "getNumbersFromString",
        "$hsl",
        "hslRange",
        "hslUnits",
        "h",
        "s",
        "l",
        "a",
        "hslToRGB",
        "$hex",
        "$hex",
        "h",
        "i",
        "parseInt",
        "h",
        "i",
        "h",
        "i",
        "h",
        "parseInt",
        "h",
        "h",
        "i",
        "parseInt",
        "h",
        "i",
        "i",
        "h",
        "parseInt",
        "h",
        "$color",
        "knownColors",
        "$color",
        "n",
        "n",
        "n",
        "$color",
        "systemColors",
        "$color",
        "n",
        "n",
        "n",
        "color",
        "replaceBetweenIndices",
        "start",
        "end",
        "replacement",
        "color",
        "color",
        "start",
        "replacement",
        "color",
        "end",
        "searchIndex",
        "color",
        "getParenthesesRange",
        "color",
        "searchIndex",
        "color",
        "evalMath",
        "replaceBetweenIndices",
        "output",
        "includesPercentage",
        "color",
        "key",
        "value",
        "r",
        "g",
        "b",
        "r",
        "g",
        "b",
        "$color",
        "context$1",
        "canvas$1",
        "canvas$1",
        "canvas$1",
        "context$1",
        "canvas$1",
        "context$1",
        "$color",
        "context$1",
        "context$1",
        "d",
        "d",
        "d",
        "d",
        "parseRGB",
        "color",
        "callback",
        "throttled",
        "args",
        "lastArgs",
        "args",
        "frameId",
        "pending",
        "callback",
        "lastArgs",
        "frameId",
        "requestAnimationFrame",
        "frameId",
        "pending",
        "callback",
        "lastArgs",
        "pending",
        "cancel",
        "cancelAnimationFrame",
        "frameId",
        "pending",
        "frameId",
        "throttled",
        "task",
        "tasks",
        "task",
        "frameId",
        "task",
        "tasks",
        "task",
        "frameId",
        "frameId",
        "requestAnimationFrame",
        "runTasks",
        "tasks",
        "cancelAnimationFrame",
        "frameId",
        "frameId",
        "token",
        "callback",
        "delayTokens",
        "token",
        "delayTokens",
        "token",
        "requestAnimationFrame",
        "delayTokens",
        "token",
        "callback",
        "number",
        "number",
        "number",
        "crypto",
        "crypto",
        "uuid",
        "uuid",
        "uuid",
        "uuid",
        "uuid",
        "crypto",
        "crypto",
        "Uint8Array",
        "x",
        "hexify",
        "x",
        "documentVisibilityListener",
        "listenerOptions",
        "documentVisibilityListener",
        "listenerOptions",
        "documentVisibilityListener",
        "listenerOptions",
        "documentVisibilityListener",
        "listenerOptions",
        "documentVisibilityListener",
        "listenerOptions",
        "documentVisibilityListener",
        "listenerOptions",
        "callback",
        "documentVisibilityListener",
        "documentVisibilityListener",
        "removeDocumentVisibilityListener",
        "callback",
        "documentIsVisible_",
        "alreadyWatching",
        "watchForDocumentVisibility",
        "stopWatchingForDocumentVisibility",
        "documentVisibilityListener",
        "documentIsVisible_",
        "time",
        "time",
        "duration",
        "time",
        "time",
        "duration",
        "time",
        "time",
        "duration",
        "time",
        "time",
        "duration",
        "time",
        "duration",
        "args",
        "args",
        "args",
        "description",
        "condition",
        "condition",
        "logAssert",
        "description",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "mode",
        "onRestore",
        "getDuration",
        "getDuration",
        "node",
        "node",
        "parent",
        "mode",
        "prevSibling",
        "throttle",
        "timeoutId",
        "attempts",
        "start",
        "start",
        "now",
        "attempts",
        "MAX_ATTEMPTS_COUNT",
        "now",
        "start",
        "ATTEMPTS_INTERVAL",
        "logWarn",
        "RETRY_TIMEOUT",
        "node",
        "prevSibling",
        "timeoutId",
        "setTimeout",
        "start",
        "attempts",
        "timeoutId",
        "restore",
        "RETRY_TIMEOUT",
        "start",
        "now",
        "attempts",
        "mode",
        "prevSibling",
        "prevSibling",
        "parent",
        "logWarn",
        "node",
        "prevSibling",
        "parent",
        "prevSibling",
        "mode",
        "prevSibling",
        "logWarn",
        "node",
        "prevSibling",
        "parent",
        "stop",
        "prevSibling",
        "parent",
        "logWarn",
        "node",
        "prevSibling",
        "parent",
        "updateParent",
        "prevSibling",
        "mode",
        "parent",
        "parent",
        "logWarn",
        "node",
        "prevSibling",
        "parent",
        "parent",
        "node",
        "prevSibling",
        "prevSibling",
        "prevSibling",
        "parent",
        "observer",
        "onRestore",
        "onRestore",
        "MutationObserver",
        "mode",
        "node",
        "parent",
        "node",
        "mode",
        "node",
        "prevSibling",
        "restore",
        "run",
        "observer",
        "parent",
        "stop",
        "clearTimeout",
        "timeoutId",
        "observer",
        "restore",
        "skip",
        "observer",
        "updateParent",
        "parentNode",
        "parent",
        "parentNode",
        "stop",
        "run",
        "run",
        "root",
        "iterator",
        "root",
        "root",
        "NodeFilter",
        "node",
        "node",
        "NodeFilter",
        "NodeFilter",
        "root",
        "walker",
        "walker",
        "node",
        "node",
        "walker",
        "node",
        "iterator",
        "node",
        "iterateShadowHosts",
        "node",
        "iterator",
        "isDOMReady",
        "newFunc",
        "isDOMReady",
        "newFunc",
        "listener",
        "isDOMReady",
        "listener",
        "readyStateListeners",
        "listener",
        "listener",
        "readyStateListeners",
        "listener",
        "listener",
        "isReadyStateComplete",
        "listener",
        "readyStateCompleteListeners",
        "listener",
        "readyStateCompleteListeners",
        "isDOMReady",
        "onReadyStateChange",
        "isDOMReady",
        "readyStateListeners",
        "listener",
        "listener",
        "readyStateListeners",
        "isReadyStateComplete",
        "onReadyStateChange",
        "readyStateCompleteListeners",
        "listener",
        "listener",
        "readyStateCompleteListeners",
        "onReadyStateChange",
        "mutations",
        "mutations",
        "HUGE_MUTATIONS_COUNT",
        "i",
        "mutations",
        "i",
        "addedNodesCount",
        "mutations",
        "i",
        "addedNodesCount",
        "HUGE_MUTATIONS_COUNT",
        "mutations",
        "mutations",
        "m",
        "forEach",
        "m",
        "n",
        "n",
        "Element",
        "n",
        "additions",
        "n",
        "forEach",
        "m",
        "n",
        "n",
        "Element",
        "n",
        "moves",
        "n",
        "additions",
        "n",
        "deletions",
        "n",
        "additions",
        "node",
        "additions",
        "node",
        "duplicateAdditions",
        "node",
        "deletions",
        "node",
        "deletions",
        "node",
        "duplicateDeletions",
        "node",
        "duplicateAdditions",
        "node",
        "additions",
        "node",
        "duplicateDeletions",
        "node",
        "deletions",
        "node",
        "root",
        "callbacks",
        "optimizedTreeObservers",
        "root",
        "observer",
        "optimizedTreeObservers",
        "root",
        "observerCallbacks",
        "optimizedTreeCallbacks",
        "observer",
        "observer",
        "MutationObserver",
        "mutations",
        "isHugeMutation",
        "mutations",
        "hadHugeMutationsBefore",
        "isDOMReady",
        "observerCallbacks",
        "onHugeMutations",
        "root",
        "subscribedForReadyState",
        "domReadyListener",
        "observerCallbacks",
        "onHugeMutations",
        "root",
        "addDOMReadyListener",
        "domReadyListener",
        "subscribedForReadyState",
        "hadHugeMutationsBefore",
        "getElementsTreeOperations",
        "mutations",
        "observerCallbacks",
        "onMinorMutations",
        "root",
        "elementsOperations",
        "observer",
        "root",
        "optimizedTreeObservers",
        "root",
        "observer",
        "observerCallbacks",
        "optimizedTreeCallbacks",
        "observer",
        "observerCallbacks",
        "observerCallbacks",
        "callbacks",
        "observerCallbacks",
        "callbacks",
        "domReadyListener",
        "removeDOMReadyListener",
        "domReadyListener",
        "observerCallbacks",
        "observer",
        "optimizedTreeCallbacks",
        "observer",
        "optimizedTreeObservers",
        "root",
        "rules",
        "iterate",
        "onImportError",
        "forEach",
        "rules",
        "rule",
        "isStyleRule",
        "rule",
        "iterate",
        "rule",
        "isImportRule",
        "rule",
        "iterateCSSRules",
        "rule",
        "iterate",
        "onImportError",
        "err",
        "onImportError",
        "isMediaRule",
        "rule",
        "rule",
        "media",
        "m",
        "m",
        "m",
        "m",
        "media",
        "m",
        "m",
        "m",
        "isScreenOrAllOrQuery",
        "isPrintOrSpeech",
        "iterateCSSRules",
        "rule",
        "iterate",
        "onImportError",
        "isSupportsRule",
        "rule",
        "CSS",
        "rule",
        "iterateCSSRules",
        "rule",
        "iterate",
        "onImportError",
        "isLayerRule",
        "rule",
        "iterateCSSRules",
        "rule",
        "iterate",
        "onImportError",
        "logWarn",
        "rule",
        "isSafari",
        "shorthandVarDependantProperties",
        "prop",
        "prop",
        "prop",
        "regexp",
        "style",
        "iterate",
        "forEach",
        "style",
        "property",
        "style",
        "property",
        "value",
        "iterate",
        "property",
        "value",
        "style",
        "cssText",
        "isSafari",
        "shorthandVarDepPropRegexps",
        "cssText",
        "regexp",
        "match",
        "match",
        "match",
        "iterate",
        "prop",
        "val",
        "shorthandVarDependantProperties",
        "prop",
        "style",
        "prop",
        "val",
        "val",
        "iterate",
        "prop",
        "val",
        "cssText",
        "style",
        "handleEmptyShorthand",
        "style",
        "iterate",
        "cssText",
        "cssText",
        "style",
        "handleEmptyShorthand",
        "style",
        "iterate",
        "shorthand",
        "style",
        "iterate",
        "style",
        "isStyleRule",
        "parentRule",
        "parentRule",
        "sourceCSSText",
        "escapeRegExpSpecialChars",
        "parentRule",
        "escapedSelector",
        "escapedSelector",
        "escapedSelector",
        "escapedSelector",
        "escapedSelector",
        "shorthand",
        "sourceCSSText",
        "regexp",
        "match",
        "iterate",
        "shorthand",
        "match",
        "shorthand",
        "iterate",
        "cssURL",
        "cssURL",
        "url",
        "parseURL",
        "url",
        "cssURL",
        "cssURL",
        "$css",
        "cssBasePath",
        "$css",
        "cssURLRegex",
        "match",
        "getCSSURLValue",
        "match",
        "getAbsoluteURL",
        "cssBasePath",
        "url",
        "absoluteURL",
        "escapedURL",
        "err",
        "logWarn",
        "match",
        "$css",
        "$css",
        "fontFaceRegex",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "importRules",
        "rule",
        "rule",
        "importRules",
        "rule",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "mediaRules",
        "rule",
        "rule",
        "mediaRules",
        "rule",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "supportsRules",
        "rule",
        "rule",
        "CSSSupportsRule",
        "supportsRules",
        "rule",
        "rule",
        "rule",
        "styleRules",
        "rule",
        "layerRules",
        "rule",
        "isLayerRuleSupported",
        "rule",
        "CSSLayerBlockRule",
        "layerRules",
        "rule",
        "sheet",
        "node",
        "sheetsScopes",
        "sheet",
        "node",
        "sheet",
        "sheet",
        "sheetsScopes",
        "sheet",
        "sheetsScopes",
        "sheet",
        "sheet",
        "node",
        "node",
        "ShadowRoot",
        "node",
        "Document",
        "defineSheetScope",
        "sheet",
        "node",
        "node",
        "node",
        "node",
        "conicGradient",
        "value",
        "conicGradient",
        "index",
        "value",
        "startIndex",
        "linearGradient",
        "radialGradient",
        "conicGradient",
        "possibleType",
        "index",
        "possibleType",
        "value",
        "index",
        "possibleType",
        "index",
        "possibleGradient",
        "possibleType",
        "value",
        "index",
        "possibleType",
        "index",
        "possibleType",
        "typeGradient",
        "possibleType",
        "value",
        "index",
        "possibleType",
        "index",
        "possibleType",
        "typeGradient",
        "possibleType",
        "typeGradient",
        "possibleType",
        "typeGradient",
        "getParenthesesRange",
        "value",
        "index",
        "gradientLength",
        "value",
        "start",
        "end",
        "startIndex",
        "end",
        "conicGradientLength",
        "result",
        "typeGradient",
        "index",
        "typeGradient",
        "gradientLength",
        "result",
        "result",
        "result",
        "result",
        "imageDetailsCacheQueue",
        "details",
        "url",
        "url",
        "url",
        "details",
        "sessionStorage",
        "STORAGE_KEY_IMAGE_DETAILS_PREFIX",
        "url",
        "json",
        "cachedImageUrls",
        "url",
        "err",
        "imageDetailsCacheQueue",
        "sessionStorage",
        "STORAGE_KEY_IMAGE_DETAILS_LIST",
        "cachedImageUrls",
        "url",
        "imageDetails",
        "url",
        "url",
        "imageDetailsCacheQueue",
        "url",
        "imageDetails",
        "clearTimeout",
        "imageCacheTimeout",
        "imageCacheTimeout",
        "setTimeout",
        "writeImageDetailsQueue",
        "targetMap",
        "sessionStorage",
        "STORAGE_KEY_IMAGE_DETAILS_LIST",
        "jsonList",
        "jsonList",
        "url",
        "sessionStorage",
        "STORAGE_KEY_IMAGE_DETAILS_PREFIX",
        "url",
        "json",
        "json",
        "targetMap",
        "url",
        "details",
        "err",
        "url",
        "cssText",
        "STORAGE_KEY_CSS_FETCH_PREFIX",
        "url",
        "sessionStorage",
        "key",
        "cssText",
        "err",
        "url",
        "STORAGE_KEY_CSS_FETCH_PREFIX",
        "url",
        "sessionStorage",
        "key",
        "err",
        "matrix",
        "matrix",
        "m",
        "m",
        "m",
        "m",
        "config",
        "toSVGMatrix",
        "createFilterMatrix",
        "config",
        "task",
        "task",
        "cancelAnimationFrame",
        "requestAnimationFrame",
        "cb",
        "cb",
        "start",
        "MAX_FRAME_DURATION",
        "request",
        "request",
        "resolve",
        "reject",
        "generateUID",
        "resolvers$1",
        "id",
        "resolve",
        "rejectors",
        "id",
        "reject",
        "chrome",
        "MessageTypeCStoBG",
        "request",
        "chrome",
        "MessageTypeBGtoCS",
        "resolvers$1",
        "id",
        "rejectors",
        "id",
        "resolvers$1",
        "id",
        "rejectors",
        "id",
        "error",
        "reject",
        "reject",
        "error",
        "resolve",
        "resolve",
        "data",
        "AsyncQueue",
        "url",
        "resolve",
        "reject",
        "url",
        "url",
        "getDataURL",
        "url",
        "tryConvertDataURLToBlobSync",
        "dataURL",
        "loadAsBlob",
        "url",
        "dataURL",
        "image",
        "loadImage",
        "dataURL",
        "image",
        "tryCreateImageBitmap",
        "blob",
        "loadImage",
        "dataURL",
        "imageManager",
        "analyzeImage",
        "image",
        "resolve",
        "url",
        "analysis",
        "dataURL",
        "image",
        "image",
        "analysis",
        "error",
        "reject",
        "error",
        "url",
        "URL",
        "url",
        "parsedURL",
        "location",
        "loadAsDataURL",
        "url",
        "bgFetch",
        "blob",
        "createImageBitmap",
        "blob",
        "err",
        "logWarn",
        "blob",
        "err",
        "url",
        "resolve",
        "reject",
        "Image",
        "image",
        "resolve",
        "image",
        "image",
        "reject",
        "url",
        "loadingImagesCount",
        "INCOMPLETE_DOC_LOADING_IMAGE_LIMIT",
        "isReadyStateComplete",
        "image",
        "url",
        "addReadyStateCompleteListener",
        "image",
        "url",
        "canvas",
        "canvas",
        "maxWidth",
        "canvas",
        "maxHeight",
        "context",
        "canvas",
        "context",
        "canvas",
        "context",
        "image",
        "canvas",
        "createCanvas",
        "image",
        "HTMLImageElement",
        "sw",
        "image",
        "sh",
        "image",
        "sw",
        "image",
        "sh",
        "image",
        "sw",
        "sh",
        "logWarn",
        "sw",
        "sh",
        "LARGE_IMAGE_PIXELS_COUNT",
        "sw",
        "sh",
        "MAX_ANALYSIS_PIXELS_COUNT",
        "sourcePixelsCount",
        "sw",
        "k",
        "sh",
        "k",
        "context",
        "width",
        "height",
        "context",
        "image",
        "sw",
        "sh",
        "width",
        "height",
        "context",
        "width",
        "height",
        "imageData",
        "y",
        "y",
        "height",
        "y",
        "x",
        "x",
        "width",
        "x",
        "i",
        "y",
        "width",
        "x",
        "r",
        "d",
        "i",
        "g",
        "d",
        "i",
        "b",
        "d",
        "i",
        "a",
        "d",
        "i",
        "a",
        "TRANSPARENT_ALPHA_THRESHOLD",
        "transparentPixelsCount",
        "l",
        "getSRGBLightness",
        "r",
        "g",
        "b",
        "l",
        "DARK_LIGHTNESS_THRESHOLD",
        "darkPixelsCount",
        "l",
        "LIGHT_LIGHTNESS_THRESHOLD",
        "lightPixelsCount",
        "width",
        "height",
        "totalPixelsCount",
        "transparentPixelsCount",
        "darkPixelsCount",
        "opaquePixelsCount",
        "DARK_IMAGE_THRESHOLD",
        "lightPixelsCount",
        "opaquePixelsCount",
        "LIGHT_IMAGE_THRESHOLD",
        "transparentPixelsCount",
        "totalPixelsCount",
        "TRANSPARENT_IMAGE_THRESHOLD",
        "canUseProxy",
        "canUseProxy",
        "blobURLCheckRequested",
        "resolve",
        "blobURLCheckAwaiters",
        "resolve",
        "blobURLCheckRequested",
        "resolve",
        "e",
        "isBlobURLSupported",
        "e",
        "resolve",
        "blobURLCheckAwaiters",
        "r",
        "r",
        "blobURLCheckAwaiters",
        "CustomEvent",
        "isBlobURLSupported",
        "canUseProxy",
        "err",
        "err",
        "isBlobURLSupported",
        "onCSPError",
        "onCSPError",
        "theme",
        "dataURL",
        "dataURL",
        "escapeXML",
        "dataURL",
        "getSVGFilterMatrixValue",
        "theme",
        "width",
        "height",
        "matrix",
        "width",
        "height",
        "dataURL",
        "isBlobURLSupported",
        "btoa",
        "svg",
        "Uint8Array",
        "svg",
        "i",
        "svg",
        "i",
        "i",
        "svg",
        "i",
        "Blob",
        "URL",
        "blob",
        "objectURLs",
        "objectURL",
        "objectURL",
        "c",
        "xmlEscapeChars",
        "c",
        "c",
        "dataURL",
        "dataURL",
        "dataURL",
        "colonIndex",
        "dataURL",
        "semicolonIndex",
        "dataURL",
        "semicolonIndex",
        "commaIndex",
        "dataURL",
        "colonIndex",
        "semicolonIndex",
        "encoding",
        "mediaType",
        "atob",
        "dataURL",
        "commaIndex",
        "Uint8Array",
        "characters",
        "i",
        "characters",
        "i",
        "i",
        "characters",
        "i",
        "Blob",
        "mediaType",
        "dataURL",
        "isBlobURLSupported",
        "getHashCode",
        "dataURL",
        "dataURLBlobURLs",
        "hash",
        "blobURL",
        "blobURL",
        "tryConvertDataURLToBlobSync",
        "dataURL",
        "blob",
        "fetch",
        "dataURL",
        "blob",
        "response",
        "blobURL",
        "URL",
        "blob",
        "dataURLBlobURLs",
        "hash",
        "blobURL",
        "blobURL",
        "imageManager",
        "imageManager",
        "removeCanvas",
        "objectURLs",
        "u",
        "URL",
        "u",
        "objectURLs",
        "dataURLBlobURLs",
        "u",
        "URL",
        "u",
        "dataURLBlobURLs",
        "sheet",
        "variablesSheet",
        "sheet",
        "registeredColors",
        "registered",
        "types",
        "registered",
        "registered",
        "variablesSheet",
        "variable",
        "value",
        "variablesSheet",
        "clearColorPalette",
        "registered",
        "registered",
        "registered",
        "parsed",
        "rgbToHexString",
        "parsed",
        "registeredColors",
        "hex",
        "registered",
        "getRegisteredVariableValue",
        "registered",
        "parsed",
        "value",
        "rgbToHexString",
        "parsed",
        "registeredColors",
        "hex",
        "registered",
        "registeredColors",
        "hex",
        "parseColorWithCache",
        "hex",
        "registered",
        "registeredColors",
        "hex",
        "registered",
        "hex",
        "registered",
        "variablesSheet",
        "variablesSheet",
        "variable",
        "value",
        "getRegisteredVariableValue",
        "registered",
        "registeredColors",
        "registered",
        "registered",
        "background",
        "registered",
        "registered",
        "border",
        "registered",
        "registered",
        "text",
        "registered",
        "registeredColors",
        "theme",
        "theme",
        "isDarkScheme",
        "theme",
        "prop",
        "theme",
        "theme",
        "isDarkScheme",
        "theme",
        "prop",
        "colorModificationCache",
        "rgb",
        "theme",
        "rgbCacheKeys",
        "key",
        "resultId",
        "rgb",
        "key",
        "themeCacheKeys$1",
        "key",
        "resultId",
        "theme",
        "key",
        "resultId",
        "rgb",
        "theme",
        "modifyHSL",
        "poleColor",
        "anotherPoleColor",
        "colorModificationCache",
        "modifyHSL",
        "fnCache",
        "colorModificationCache",
        "modifyHSL",
        "fnCache",
        "colorModificationCache",
        "modifyHSL",
        "fnCache",
        "getCacheId",
        "rgb",
        "theme",
        "fnCache",
        "id",
        "fnCache",
        "id",
        "rgbToHSL",
        "rgb",
        "poleColor",
        "parseToHSLWithCache",
        "poleColor",
        "anotherPoleColor",
        "parseToHSLWithCache",
        "anotherPoleColor",
        "modifyHSL",
        "hsl",
        "pole",
        "anotherPole",
        "hslToRGB",
        "modified",
        "createFilterMatrix",
        "theme",
        "applyColorMatrix",
        "r",
        "g",
        "b",
        "matrix",
        "a",
        "rgbToHexString",
        "rf",
        "gf",
        "bf",
        "rgbToString",
        "rf",
        "gf",
        "bf",
        "fnCache",
        "id",
        "color",
        "color",
        "rgb",
        "theme",
        "modifier",
        "getRegisteredColor",
        "rgb",
        "registered",
        "registered",
        "modifier",
        "rgb",
        "theme",
        "registerColor",
        "rgb",
        "value",
        "rgb",
        "theme",
        "getBgPole",
        "theme",
        "getFgPole",
        "theme",
        "modifyColorWithCache",
        "rgb",
        "theme",
        "modifyLightModeHSL",
        "poleFg",
        "poleBg",
        "poleFg",
        "poleBg",
        "l",
        "isDark",
        "isNeutral",
        "l",
        "s",
        "h",
        "h",
        "isNeutral",
        "s",
        "l",
        "isBlue",
        "isNeutral",
        "isDark",
        "hx",
        "poleFg",
        "sx",
        "poleFg",
        "hx",
        "poleBg",
        "sx",
        "poleBg",
        "scale",
        "l",
        "poleFg",
        "poleBg",
        "hx",
        "sx",
        "lx",
        "pole",
        "l",
        "h",
        "h",
        "s",
        "l",
        "isBlue",
        "isDark",
        "scale",
        "l",
        "MAX_BG_LIGHTNESS",
        "isNeutral",
        "pole",
        "pole",
        "hx",
        "sx",
        "lx",
        "lx",
        "scale",
        "l",
        "MAX_BG_LIGHTNESS",
        "pole",
        "isNeutral",
        "pole",
        "pole",
        "hx",
        "sx",
        "lx",
        "h",
        "h",
        "isYellow",
        "h",
        "isCloserToGreen",
        "hx",
        "scale",
        "h",
        "hx",
        "scale",
        "h",
        "hx",
        "hx",
        "lx",
        "hx",
        "lx",
        "rgb",
        "theme",
        "theme",
        "modifyLightSchemeColor",
        "rgb",
        "theme",
        "getBgPole",
        "theme",
        "modifyColorWithCache",
        "rgb",
        "theme",
        "modifyBgHSL",
        "pole",
        "rgb",
        "theme",
        "shouldRegisterColorVariable",
        "shouldRegisterColorVariable",
        "_modifyBackgroundColor",
        "rgb",
        "theme",
        "modifyAndRegisterColor",
        "rgb",
        "theme",
        "_modifyBackgroundColor",
        "hue",
        "scale",
        "hue",
        "pole",
        "l",
        "l",
        "s",
        "isNeutral",
        "h",
        "h",
        "isLight",
        "scale",
        "l",
        "MIN_FG_LIGHTNESS",
        "pole",
        "isNeutral",
        "pole",
        "pole",
        "hx",
        "sx",
        "lx",
        "isBlue",
        "hx",
        "modifyBlueFgHue",
        "h",
        "hx",
        "lx",
        "isNeutral",
        "pole",
        "pole",
        "scale",
        "l",
        "pole",
        "MIN_FG_LIGHTNESS",
        "hx",
        "sx",
        "lx",
        "isBlue",
        "hx",
        "modifyBlueFgHue",
        "h",
        "lx",
        "scale",
        "l",
        "pole",
        "MIN_FG_LIGHTNESS",
        "lx",
        "scale",
        "l",
        "pole",
        "MIN_FG_LIGHTNESS",
        "hx",
        "lx",
        "rgb",
        "theme",
        "theme",
        "modifyLightSchemeColor",
        "rgb",
        "theme",
        "getFgPole",
        "theme",
        "modifyColorWithCache",
        "rgb",
        "theme",
        "modifyFgHSL",
        "pole",
        "rgb",
        "theme",
        "shouldRegisterColorVariable",
        "shouldRegisterColorVariable",
        "_modifyForegroundColor",
        "rgb",
        "theme",
        "modifyAndRegisterColor",
        "rgb",
        "theme",
        "_modifyForegroundColor",
        "poleFg",
        "poleBg",
        "l",
        "l",
        "s",
        "isNeutral",
        "isDark",
        "hx",
        "poleFg",
        "sx",
        "poleFg",
        "hx",
        "poleBg",
        "sx",
        "poleBg",
        "scale",
        "l",
        "hx",
        "sx",
        "lx",
        "rgb",
        "theme",
        "theme",
        "modifyLightSchemeColor",
        "rgb",
        "theme",
        "getFgPole",
        "theme",
        "getBgPole",
        "theme",
        "modifyColorWithCache",
        "rgb",
        "theme",
        "modifyBorderHSL",
        "poleFg",
        "poleBg",
        "rgb",
        "theme",
        "shouldRegisterColorVariable",
        "shouldRegisterColorVariable",
        "_modifyBorderColor",
        "rgb",
        "theme",
        "modifyAndRegisterColor",
        "rgb",
        "theme",
        "_modifyBorderColor",
        "rgb",
        "theme",
        "modifyBackgroundColor",
        "rgb",
        "theme",
        "rgb",
        "theme",
        "modifyBackgroundColor",
        "rgb",
        "theme",
        "ruleStyle",
        "property",
        "ruleStyle",
        "ruleStyle",
        "property",
        "property",
        "value",
        "rule",
        "variablesStore",
        "ignoreImageSelectors",
        "isCancelled",
        "property",
        "modifier",
        "getVariableModifier",
        "variablesStore",
        "property",
        "value",
        "rule",
        "ignoreImageSelectors",
        "isCancelled",
        "value",
        "modifier",
        "getVariableDependantModifier",
        "variablesStore",
        "property",
        "value",
        "property",
        "modifier",
        "getColorSchemeModifier",
        "property",
        "modifier",
        "getScrollbarColorModifier",
        "value",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "property",
        "value",
        "property",
        "property",
        "rule",
        "borderSideProp",
        "borderSideVal",
        "borderSideVal",
        "property",
        "borderSideProp",
        "modifier",
        "borderSideVal",
        "modifier",
        "value",
        "modifier",
        "getColorModifier",
        "property",
        "value",
        "rule",
        "property",
        "property",
        "modifier",
        "getBgImageModifier",
        "value",
        "rule",
        "ignoreImageSelectors",
        "isCancelled",
        "property",
        "modifier",
        "getShadowModifier",
        "value",
        "modifier",
        "modifier",
        "getPriority",
        "rule",
        "property",
        "value",
        "selectors",
        "selectors",
        "theme",
        "isIFrame",
        "styleSystemControls",
        "isIFrame",
        "lines",
        "lines",
        "modifyBackgroundColor",
        "theme",
        "lines",
        "isCSSColorSchemePropSupported",
        "theme",
        "joinSelectors",
        "isIFrame",
        "styleSystemControls",
        "bgSelectors",
        "lines",
        "bgSelectors",
        "lines",
        "modifyBackgroundColor",
        "theme",
        "lines",
        "lines",
        "joinSelectors",
        "styleSystemControls",
        "lines",
        "modifyBorderColor",
        "theme",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "modifyBorderColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "modifyBackgroundColor",
        "theme",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "theme",
        "hostsWithOddScrollbars",
        "location",
        "lines",
        "getModifiedScrollbarStyle",
        "theme",
        "theme",
        "lines",
        "getModifiedSelectionStyle",
        "theme",
        "isLayerRuleSupported",
        "lines",
        "lines",
        "lines",
        "theme",
        "theme",
        "backgroundColorSelection",
        "modifyBackgroundColor",
        "theme",
        "foregroundColorSelection",
        "modifyForegroundColor",
        "theme",
        "parseColorWithCache",
        "theme",
        "rgbToHSL",
        "rgb",
        "backgroundColorSelection",
        "theme",
        "hsl",
        "foregroundColorSelection",
        "foregroundColorSelection",
        "theme",
        "getSelectionColor",
        "theme",
        "modifiedSelectionColor",
        "modifiedSelectionColor",
        "selection",
        "lines",
        "selection",
        "lines",
        "backgroundColorSelection",
        "lines",
        "foregroundColorSelection",
        "lines",
        "lines",
        "theme",
        "theme",
        "colorTrack",
        "modifyBackgroundColor",
        "theme",
        "colorThumb",
        "modifyBackgroundColor",
        "theme",
        "parseColorWithCache",
        "theme",
        "rgbToHSL",
        "rgb",
        "darken",
        "darker",
        "hsl",
        "clamp",
        "hsl",
        "darker",
        "colorTrack",
        "hslToString",
        "darken",
        "colorThumb",
        "hslToString",
        "hsl",
        "colorThumb",
        "colorTrack",
        "theme",
        "factory",
        "theme",
        "theme",
        "lines",
        "strict",
        "lines",
        "modifyBackgroundColor",
        "theme",
        "lines",
        "modifyBorderColor",
        "theme",
        "lines",
        "modifyForegroundColor",
        "theme",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "prop",
        "value",
        "rule",
        "unparsableColors",
        "value",
        "value",
        "parseColorWithCache",
        "value",
        "rgb",
        "logWarn",
        "value",
        "prop",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "theme",
        "modifyForegroundColor",
        "rgb",
        "theme",
        "theme",
        "modifyBackgroundColor",
        "rgb",
        "theme",
        "prop",
        "prop",
        "theme",
        "modifyBorderColor",
        "rgb",
        "theme",
        "theme",
        "modifyForegroundColor",
        "rgb",
        "theme",
        "selectorText",
        "selectors",
        "selectorText",
        "selectors",
        "selectors",
        "s",
        "s",
        "selectorText",
        "i",
        "selectors",
        "i",
        "selectors",
        "i",
        "ignoredSelector",
        "ignoredSelector",
        "ruleSelectors",
        "s",
        "s",
        "beginning",
        "ignoredSelector",
        "ignoredSelector",
        "ignoredSelector",
        "ruleSelectors",
        "s",
        "s",
        "ending",
        "ruleSelectors",
        "s",
        "s",
        "ignoredSelector",
        "node",
        "imageSelectorQueue",
        "node",
        "selector",
        "node",
        "Element",
        "node",
        "selector",
        "imageSelectorQueue",
        "selector",
        "callbacks",
        "cb",
        "cb",
        "classObserver",
        "classObserver",
        "MutationObserver",
        "mutations",
        "mutations",
        "mutation",
        "imageSelectorNodeQueue",
        "mutation",
        "imageSelectorQueueFrameId",
        "imageSelectorQueueFrameId",
        "requestAnimationFrame",
        "imageSelectorNodeQueue",
        "element",
        "checkImageSelectors",
        "element",
        "imageSelectorNodeQueue",
        "imageSelectorQueueFrameId",
        "classObserver",
        "value",
        "rule",
        "ignoreImageSelectors",
        "isCancelled",
        "shouldIgnoreImage",
        "rule",
        "ignoreImageSelectors",
        "value",
        "parseGradient",
        "value",
        "getMatches",
        "cssURLRegex",
        "value",
        "urls",
        "gradients",
        "value",
        "getIndices",
        "matches",
        "matches",
        "match",
        "value",
        "match",
        "index",
        "index",
        "valueIndex",
        "match",
        "valueIndex",
        "gradients",
        "i",
        "i",
        "getIndices",
        "urls",
        "i",
        "i",
        "a",
        "b",
        "a",
        "b",
        "getGradientModifier",
        "gradient",
        "getMatches",
        "partsRegex",
        "match",
        "part",
        "part",
        "part",
        "parseColorWithCache",
        "part",
        "rgb",
        "theme",
        "modifyGradientColor",
        "rgb",
        "theme",
        "part",
        "rgb",
        "parseColorWithCache",
        "part",
        "space",
        "rgb",
        "theme",
        "modifyGradientColor",
        "rgb",
        "theme",
        "part",
        "space",
        "part",
        "colorStopRegex",
        "colorStopMatch",
        "rgb",
        "parseColorWithCache",
        "colorStopMatch",
        "rgb",
        "theme",
        "colorStopMatch",
        "colorStopMatch",
        "colorStopMatch",
        "modifyGradientColor",
        "rgb",
        "theme",
        "part",
        "theme",
        "typeGradient",
        "parts",
        "modify",
        "modify",
        "theme",
        "hasComma",
        "getURLModifier",
        "urlValue",
        "didTryLoadCache",
        "didTryLoadCache",
        "readImageDetailsCache",
        "imageDetailsCache",
        "getCSSURLValue",
        "urlValue",
        "url",
        "parentStyleSheet",
        "parentStyleSheet",
        "getSheetScope",
        "parentStyleSheet",
        "parentStyleSheet",
        "parentStyleSheet",
        "getCSSBaseBath",
        "parentStyleSheet",
        "ownerNode",
        "location",
        "url",
        "getAbsoluteURL",
        "baseURL",
        "url",
        "theme",
        "isURLEmpty",
        "rule",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "scope",
        "selector",
        "resolve",
        "imageSelectorQueue",
        "selector",
        "imageSelectorQueue",
        "selector",
        "resolve",
        "imageSelectorQueue",
        "selector",
        "resolve",
        "imageSelectorValues",
        "selector",
        "urlValue",
        "imageDetailsCache",
        "url",
        "imageDetails",
        "imageDetailsCache",
        "url",
        "isBlobURLCheckResultReady",
        "requestBlobURLCheck",
        "awaitingForImageLoading",
        "url",
        "awaitingForImageLoading",
        "url",
        "imageDetails",
        "resolve",
        "awaiters",
        "resolve",
        "imageDetails",
        "awaitingForImageLoading",
        "url",
        "imageDetails",
        "getImageDetails",
        "url",
        "imageDetailsCache",
        "url",
        "imageDetails",
        "writeImageDetailsCache",
        "url",
        "imageDetails",
        "awaitingForImageLoading",
        "url",
        "resolve",
        "resolve",
        "imageDetails",
        "awaitingForImageLoading",
        "url",
        "isCancelled",
        "err",
        "logWarn",
        "err",
        "awaitingForImageLoading",
        "url",
        "awaitingForImageLoading",
        "url",
        "resolve",
        "resolve",
        "awaitingForImageLoading",
        "url",
        "imageDetails",
        "getBgImageValue",
        "imageDetails",
        "theme",
        "bgImageValue",
        "bgImageValue",
        "url",
        "tryConvertDataURLToBlobURL",
        "url",
        "blobURL",
        "blobURL",
        "url",
        "getBgImageValue",
        "imageDetails",
        "theme",
        "imageDetails",
        "imageDetails",
        "isLarge",
        "isLight",
        "isTransparent",
        "theme",
        "logInfo",
        "logSrc",
        "result",
        "isDark",
        "isTransparent",
        "theme",
        "width",
        "logInfo",
        "logSrc",
        "getFilteredImageURL",
        "imageDetails",
        "theme",
        "clamp",
        "theme",
        "result",
        "inverted",
        "isLight",
        "isTransparent",
        "theme",
        "logInfo",
        "logSrc",
        "getFilteredImageURL",
        "imageDetails",
        "theme",
        "result",
        "dimmed",
        "theme",
        "isLight",
        "logInfo",
        "logSrc",
        "getFilteredImageURL",
        "imageDetails",
        "theme",
        "clamp",
        "theme",
        "clamp",
        "theme",
        "result",
        "filtered",
        "logInfo",
        "logSrc",
        "result",
        "result",
        "matches",
        "i",
        "matchStart",
        "match",
        "offset",
        "matchIndex",
        "matchEnd",
        "prefixStart",
        "matchStart",
        "prevHasComma",
        "modifiers",
        "value",
        "prefixStart",
        "matchStart",
        "betweenValue",
        "betweenValue",
        "betweenValue",
        "betweenValue",
        "modifiers",
        "value",
        "prefixStart",
        "matchStart",
        "prevHasComma",
        "hasComma",
        "modifiers",
        "getURLModifier",
        "match",
        "modifiers",
        "getGradientModifier",
        "typeGradient",
        "hasComma",
        "i",
        "matches",
        "modifiers",
        "value",
        "matchEnd",
        "theme",
        "modifiers",
        "modify",
        "modify",
        "theme",
        "results",
        "r",
        "r",
        "results",
        "asyncResults",
        "asyncResults",
        "results",
        "combinedResult",
        "combinedResult",
        "combinedResult",
        "err",
        "logWarn",
        "value",
        "err",
        "value",
        "getMatches",
        "value",
        "colorMatches",
        "match",
        "i",
        "value",
        "match",
        "index",
        "matchIndex",
        "match",
        "index",
        "matchEnd",
        "parseColorWithCache",
        "match",
        "rgb",
        "notParsed",
        "value",
        "prefixIndex",
        "matchEnd",
        "theme",
        "value",
        "prefixIndex",
        "matchIndex",
        "modifyShadowColor",
        "rgb",
        "theme",
        "i",
        "colorMatches",
        "value",
        "matchEnd",
        "theme",
        "modifiers",
        "modify",
        "modify",
        "theme",
        "colorMatches",
        "notParsed",
        "modified",
        "err",
        "logWarn",
        "value",
        "err",
        "value",
        "getShadowModifierWithInfo",
        "value",
        "shadowModifier",
        "theme",
        "shadowModifier",
        "theme",
        "value",
        "value",
        "colorsMatch",
        "value",
        "parseColorWithCache",
        "colorsMatch",
        "parseColorWithCache",
        "colorsMatch",
        "thumb",
        "track",
        "logWarn",
        "thumb",
        "track",
        "c",
        "c",
        "theme",
        "modifyForegroundColor",
        "thumb",
        "theme",
        "modifyBackgroundColor",
        "thumb",
        "theme",
        "theme",
        "theme",
        "variablesStore",
        "prop",
        "value",
        "rule",
        "ignoredImgSelectors",
        "isCancelled",
        "variablesStore",
        "prop",
        "value",
        "variablesStore",
        "prop",
        "value",
        "variablesStore",
        "prop",
        "value",
        "clearColorModificationCache",
        "imageDetailsCache",
        "cleanImageProcessingCache",
        "awaitingForImageLoading",
        "imageSelectorQueue",
        "classObserver",
        "classObserver",
        "varName",
        "typeNum",
        "varName",
        "varName",
        "typeNum",
        "rules",
        "rules",
        "style",
        "style",
        "refs",
        "v",
        "refs",
        "r",
        "v",
        "r",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "VAR_TYPE_BG_COLOR",
        "v",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_TEXT_COLOR",
        "VAR_TYPE_BORDER_COLOR",
        "v",
        "v",
        "v",
        "v",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_TEXT_COLOR",
        "VAR_TYPE_BORDER_COLOR",
        "hasColor",
        "v",
        "VAR_TYPE_BG_COLOR",
        "v",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_BG_IMG",
        "v",
        "v",
        "varName",
        "varName",
        "varName",
        "callback",
        "callback",
        "options",
        "theme",
        "getDeclarations",
        "addModifiedValue",
        "typeNum",
        "varNameWrapper",
        "colorModifier",
        "varName",
        "typeNum",
        "varNameWrapper",
        "varName",
        "isVarDependant",
        "sourceValue",
        "isConstructedColorVar",
        "sourceValue",
        "insertVarValues",
        "sourceValue",
        "value",
        "value",
        "typeNum",
        "VAR_TYPE_BG_COLOR",
        "modifiedValue",
        "colorModifier",
        "value",
        "theme",
        "modifiedValue",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "varNameWrapper",
        "v",
        "fallback",
        "colorModifier",
        "fallback",
        "theme",
        "modifiedValue",
        "colorModifier",
        "sourceValue",
        "theme",
        "declarations",
        "modifiedValue",
        "addModifiedValue",
        "VAR_TYPE_BG_COLOR",
        "wrapBgColorVariableName",
        "tryModifyBgColor",
        "addModifiedValue",
        "VAR_TYPE_TEXT_COLOR",
        "wrapTextColorVariableName",
        "tryModifyTextColor",
        "addModifiedValue",
        "VAR_TYPE_BORDER_COLOR",
        "wrapBorderColorVariableName",
        "tryModifyBorderColor",
        "varName",
        "VAR_TYPE_BG_IMG",
        "wrapBgImgVariableName",
        "varName",
        "isVarDependant",
        "sourceValue",
        "modifiedValue",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "wrapBgColorVariableName",
        "v",
        "fallback",
        "tryModifyBgColor",
        "fallback",
        "theme",
        "getBgImageModifier",
        "modifiedValue",
        "rule",
        "ignoredImgSelectors",
        "isCancelled",
        "modifiedValue",
        "bgModifier",
        "bgModifier",
        "theme",
        "bgModifier",
        "declarations",
        "modifiedValue",
        "declarations",
        "addListener",
        "onTypeChange",
        "callback",
        "getDeclarations",
        "onTypeChange",
        "decs",
        "callbacks",
        "callback",
        "varName",
        "callback",
        "removeListeners",
        "callbacks",
        "callback",
        "varName",
        "callback",
        "getDeclarations",
        "property",
        "sourceValue",
        "sourceValue",
        "sourceValue",
        "isConstructedColor",
        "isSimpleConstructedColor",
        "property",
        "isTextColorProperty",
        "property",
        "theme",
        "insertVarValues",
        "sourceValue",
        "value",
        "value",
        "isBg",
        "isBg",
        "tryModifyBgColor",
        "isText",
        "tryModifyTextColor",
        "tryModifyBorderColor",
        "modifier",
        "value",
        "theme",
        "property",
        "isSimpleConstructedColor",
        "property",
        "theme",
        "tryModifyBgColor",
        "isConstructedColor",
        "theme",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "wrapBgColorVariableName",
        "v",
        "fallback",
        "tryModifyBgColor",
        "fallback",
        "theme",
        "defaultFallback",
        "isTextColorProperty",
        "property",
        "theme",
        "tryModifyTextColor",
        "isConstructedColor",
        "theme",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "wrapTextColorVariableName",
        "v",
        "fallback",
        "tryModifyTextColor",
        "fallback",
        "theme",
        "defaultFallback",
        "property",
        "property",
        "property",
        "theme",
        "modify",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "v",
        "VAR_TYPE_BG_COLOR",
        "wrapBgColorVariableName",
        "v",
        "v",
        "VAR_TYPE_BG_IMG",
        "wrapBgImgVariableName",
        "v",
        "unknownVars",
        "v",
        "v",
        "fallback",
        "tryModifyBgColor",
        "fallback",
        "theme",
        "property",
        "getShadowModifierWithInfo",
        "variableReplaced",
        "shadowModifier",
        "theme",
        "modifiedShadow",
        "modifiedShadow",
        "modifiedShadow",
        "variableReplaced",
        "modify",
        "unknownVars",
        "modified",
        "isFallbackResolved",
        "modified",
        "resolve",
        "unknownVar",
        "unknownVars",
        "callback",
        "unknownVar",
        "callback",
        "modify",
        "resolve",
        "newValue",
        "unknownVar",
        "callback",
        "modified",
        "property",
        "property",
        "theme",
        "replaceCSSVariablesNames",
        "sourceValue",
        "v",
        "wrapBorderColorVariableName",
        "v",
        "fallback",
        "tryModifyBorderColor",
        "fallback",
        "theme",
        "varName",
        "callback",
        "varName",
        "varName",
        "varName",
        "rootStore",
        "callback",
        "rootStore",
        "callback",
        "varName",
        "callback",
        "varName",
        "varName",
        "callback",
        "rules",
        "iterateCSSRules",
        "rules",
        "rule",
        "rule",
        "rule",
        "style",
        "style",
        "style",
        "iterateCSSDeclarations",
        "style",
        "property",
        "value",
        "isVariable",
        "property",
        "property",
        "value",
        "isVarDependant",
        "value",
        "property",
        "value",
        "iterateCSSDeclarations",
        "property",
        "value",
        "isVariable",
        "property",
        "property",
        "value",
        "varName",
        "value",
        "varName",
        "value",
        "isVarDependant",
        "value",
        "isConstructedColorVar",
        "value",
        "varName",
        "varName",
        "varName",
        "varName",
        "value",
        "rawRGBSpaceRegex",
        "value",
        "rawRGBCommaRegex",
        "parseColorWithCache",
        "value",
        "isColor",
        "varName",
        "value",
        "value",
        "value",
        "varName",
        "VAR_TYPE_BG_IMG",
        "varName",
        "typeNum",
        "varName",
        "varName",
        "currentType",
        "typeNum",
        "varName",
        "newType",
        "newType",
        "initialType",
        "varName",
        "varName",
        "varName",
        "varName",
        "varName",
        "iterateCSSDeclarations",
        "property",
        "value",
        "isVarDependant",
        "value",
        "property",
        "value",
        "property",
        "value",
        "isVariable",
        "property",
        "value",
        "property",
        "property",
        "property",
        "property",
        "property",
        "value",
        "v",
        "v",
        "VAR_TYPE_BG_COLOR",
        "isTextColorProperty",
        "property",
        "value",
        "v",
        "v",
        "VAR_TYPE_TEXT_COLOR",
        "property",
        "property",
        "value",
        "v",
        "v",
        "VAR_TYPE_BORDER_COLOR",
        "property",
        "property",
        "value",
        "v",
        "v",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_BG_IMG",
        "v",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_TEXT_COLOR",
        "VAR_TYPE_BORDER_COLOR",
        "v",
        "isBgColor",
        "VAR_TYPE_BG_COLOR",
        "value",
        "iterator",
        "iterateVarDependencies",
        "value",
        "v",
        "varDeps",
        "v",
        "varDeps",
        "v",
        "iterator",
        "v",
        "varName",
        "iterator",
        "stack",
        "stack",
        "varName",
        "stack",
        "varName",
        "iterator",
        "varName",
        "result",
        "varName",
        "varName",
        "refs",
        "refs",
        "refs",
        "iterator",
        "stack",
        "found",
        "found",
        "varName",
        "iterator",
        "varName",
        "iterator",
        "callback",
        "callback",
        "styleElement",
        "theme",
        "styleElement",
        "sheet",
        "sheet",
        "iterateCSSDeclarations",
        "property",
        "value",
        "isVariable",
        "property",
        "property",
        "VAR_TYPE_BG_COLOR",
        "declarations",
        "wrapBgColorVariableName",
        "property",
        "tryModifyBgColor",
        "value",
        "theme",
        "property",
        "VAR_TYPE_TEXT_COLOR",
        "declarations",
        "wrapTextColorVariableName",
        "property",
        "tryModifyTextColor",
        "value",
        "theme",
        "property",
        "VAR_TYPE_BORDER_COLOR",
        "declarations",
        "wrapBorderColorVariableName",
        "property",
        "tryModifyBorderColor",
        "value",
        "theme",
        "property",
        "cssLines",
        "declarations",
        "cssLines",
        "property",
        "value",
        "cssLines",
        "cssLines",
        "sheet",
        "cssText",
        "VariablesStore",
        "input",
        "searchStart",
        "input",
        "searchStart",
        "start",
        "getParenthesesRange",
        "input",
        "start",
        "input",
        "getVariableRange",
        "input",
        "i",
        "ranges",
        "input",
        "start",
        "end",
        "i",
        "ranges",
        "input",
        "replacer",
        "getVariablesMatches",
        "input",
        "matches",
        "matchesCount",
        "input",
        "input",
        "matches",
        "m",
        "replacer",
        "m",
        "matches",
        "parts",
        "input",
        "matches",
        "i",
        "matchesCount",
        "i",
        "parts",
        "replacements",
        "i",
        "matches",
        "i",
        "i",
        "matchesCount",
        "matches",
        "i",
        "inputLength",
        "parts",
        "input",
        "start",
        "end",
        "parts",
        "match",
        "match",
        "commaIndex",
        "name",
        "match",
        "commaIndex",
        "fallback",
        "match",
        "commaIndex",
        "match",
        "name",
        "match",
        "match",
        "fallback",
        "value",
        "nameReplacer",
        "fallbackReplacer",
        "finalFallback",
        "matchReplacer",
        "match",
        "getVariableNameAndFallback",
        "match",
        "nameReplacer",
        "name",
        "fallback",
        "finalFallback",
        "newName",
        "finalFallback",
        "newName",
        "isVarDependant",
        "fallback",
        "newFallback",
        "replaceCSSVariablesNames",
        "fallback",
        "nameReplacer",
        "fallbackReplacer",
        "fallbackReplacer",
        "newFallback",
        "fallbackReplacer",
        "fallback",
        "newFallback",
        "fallback",
        "newName",
        "newFallback",
        "replaceVariablesMatches",
        "value",
        "matchReplacer",
        "value",
        "iterator",
        "replaceCSSVariablesNames",
        "value",
        "varName",
        "iterator",
        "varName",
        "varName",
        "name",
        "name",
        "name",
        "name",
        "name",
        "name",
        "name",
        "name",
        "property",
        "property",
        "value",
        "value",
        "value",
        "value",
        "value",
        "property",
        "textColorProps",
        "property",
        "input",
        "input",
        "rawRGBSpaceRegex",
        "input",
        "rawRGBCommaRegex",
        "match",
        "match",
        "match",
        "match",
        "input",
        "input",
        "theme",
        "modifyFunction",
        "parseRawColorValue",
        "input",
        "parseColorWithCache",
        "color",
        "rgb",
        "modifyFunction",
        "rgb",
        "theme",
        "isRaw",
        "isRaw",
        "parseColorWithCache",
        "outputColor",
        "outputInRGB",
        "outputInRGB",
        "outputInRGB",
        "outputInRGB",
        "outputColor",
        "outputColor",
        "color",
        "color",
        "theme",
        "handleRawColorValue",
        "color",
        "theme",
        "modifyBackgroundColor",
        "color",
        "theme",
        "handleRawColorValue",
        "color",
        "theme",
        "modifyForegroundColor",
        "color",
        "theme",
        "handleRawColorValue",
        "color",
        "theme",
        "modifyBorderColor",
        "source",
        "varValues",
        "fullStack",
        "matchReplacer",
        "match",
        "count",
        "getVariableNameAndFallback",
        "match",
        "count",
        "fullStack",
        "fullStack",
        "stack",
        "name",
        "containsUnresolvedVar",
        "stack",
        "name",
        "varValues",
        "name",
        "fallback",
        "varValue",
        "isVarDependant",
        "varValue",
        "inserted",
        "insertVarValues",
        "varValue",
        "varValues",
        "stack",
        "inserted",
        "varValue",
        "inserted",
        "containsUnresolvedVar",
        "inserted",
        "replaceVariablesMatches",
        "source",
        "matchReplacer",
        "containsUnresolvedVar",
        "replaced",
        "theme",
        "themeCacheKeys",
        "key",
        "resultKey",
        "key",
        "theme",
        "key",
        "resultKey",
        "createAsyncTasksQueue",
        "rule",
        "rule",
        "isMediaRule",
        "rule",
        "cssText",
        "rule",
        "cssText",
        "getHashCode",
        "cssText",
        "hasNonLoadedLink",
        "wasRebuilt",
        "options",
        "options",
        "rulesModCache",
        "rulesModCache",
        "getThemeKey",
        "theme",
        "themeKey",
        "prevFilterKey",
        "hasNonLoadedLink",
        "wasRebuilt",
        "iterateCSSRules",
        "rules",
        "rule",
        "getStyleRuleHash",
        "rule",
        "notFoundCacheKeys",
        "hash",
        "rulesTextCache",
        "hash",
        "rulesTextCache",
        "hash",
        "textDiffersFromPrev",
        "textDiffersFromPrev",
        "rulesChanged",
        "modRules",
        "rulesModCache",
        "hash",
        "rule",
        "rule",
        "iterateCSSDeclarations",
        "rule",
        "property",
        "value",
        "getModifiableCSSDeclaration",
        "property",
        "value",
        "rule",
        "variablesStore",
        "ignoreImageAnalysis",
        "isAsyncCancelled",
        "mod",
        "modDecs",
        "mod",
        "modDecs",
        "rule",
        "modRule",
        "rule",
        "modDecs",
        "modRules",
        "modRule",
        "rulesModCache",
        "hash",
        "modRule",
        "hasNonLoadedLink",
        "notFoundCacheKeys",
        "key",
        "rulesTextCache",
        "key",
        "rulesModCache",
        "key",
        "prevFilterKey",
        "themeKey",
        "force",
        "rulesChanged",
        "themeChanged",
        "renderId",
        "target",
        "index",
        "rule",
        "isChromium",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "emptyIsWhereSelector",
        "viewTransitionSelector",
        "selectorText",
        "selectorText",
        "dec",
        "declarations",
        "value",
        "ruleText",
        "property",
        "value",
        "important",
        "ruleText",
        "target",
        "ruleText",
        "index",
        "rule",
        "rule",
        "rootReadyGroup",
        "groupRefs",
        "rule",
        "groupRefs",
        "rule",
        "groupRefs",
        "rule",
        "group",
        "getGroup",
        "rule",
        "parentGroup",
        "group",
        "group",
        "varTypeChangeCleaners",
        "clear",
        "clear",
        "varTypeChangeCleaners",
        "modRules",
        "r",
        "r",
        "getGroup",
        "parentRule",
        "readyStyleRule",
        "group",
        "readyStyleRule",
        "property",
        "modified",
        "important",
        "sourceValue",
        "asyncDeclarationCounter",
        "readyDeclarations",
        "asyncDeclaration",
        "modified",
        "asyncValue",
        "asyncValue",
        "isAsyncCancelled",
        "currentRenderId",
        "renderId",
        "asyncDeclaration",
        "asyncValue",
        "asyncQueue",
        "isAsyncCancelled",
        "currentRenderId",
        "renderId",
        "rebuildAsyncRule",
        "asyncKey",
        "property",
        "modified",
        "important",
        "sourceValue",
        "varDeclarationCounter",
        "readyDeclarations",
        "varDecs",
        "sourceValue",
        "readyDeclarations",
        "tempDec",
        "oldDecs",
        "tempDec",
        "varDecs",
        "mod",
        "mod",
        "handleAsyncDeclaration",
        "mod",
        "mod",
        "important",
        "sourceValue",
        "mod",
        "mod",
        "readyDeclarations",
        "readyDec",
        "oldDecs",
        "readyDec",
        "onTypeChange",
        "newDecs",
        "isAsyncCancelled",
        "currentRenderId",
        "renderId",
        "newDecs",
        "mod",
        "mod",
        "mod",
        "readyDeclarations",
        "oldDecs",
        "initialIndex",
        "readyDeclarations",
        "index",
        "oldDecs",
        "readyVarDecs",
        "oldDecs",
        "readyVarDecs",
        "rebuildVarRule",
        "varKey",
        "varTypeChangeCleaners",
        "onTypeChange",
        "declarations",
        "value",
        "value",
        "theme",
        "modified",
        "handleAsyncDeclaration",
        "property",
        "modified",
        "important",
        "sourceValue",
        "property",
        "handleVarDeclarations",
        "property",
        "modified",
        "important",
        "sourceValue",
        "readyDeclarations",
        "modified",
        "readyDeclarations",
        "prepareSheet",
        "group",
        "parent",
        "isMediaRule",
        "rule",
        "parent",
        "parent",
        "media",
        "index",
        "parent",
        "index",
        "isLayerRule",
        "rule",
        "parent",
        "parent",
        "name",
        "index",
        "parent",
        "index",
        "parent",
        "group",
        "target",
        "styleIterator",
        "group",
        "r",
        "r",
        "createTarget",
        "r",
        "target",
        "iterateReadyRules",
        "r",
        "t",
        "styleIterator",
        "styleIterator",
        "r",
        "target",
        "iterateReadyRules",
        "rootReadyGroup",
        "sheet",
        "rule",
        "target",
        "target",
        "rule",
        "asyncKey",
        "asyncDeclarations",
        "asyncKey",
        "varKey",
        "varDeclarations",
        "varKey",
        "setRule",
        "target",
        "index",
        "rule",
        "key",
        "asyncDeclarations",
        "key",
        "target",
        "index",
        "setRule",
        "target",
        "index",
        "rule",
        "asyncDeclarations",
        "key",
        "key",
        "varDeclarations",
        "key",
        "target",
        "index",
        "setRule",
        "target",
        "index",
        "rule",
        "buildStyleSheet",
        "canUseSheetProxy$1",
        "node",
        "node",
        "node",
        "iterator",
        "node",
        "sheet",
        "overrides$1",
        "sheet",
        "iterator",
        "sheet",
        "defineSheetScope",
        "sheet",
        "node",
        "sheet",
        "node",
        "newSheets",
        "sheet",
        "newSheets",
        "overrideIndex",
        "newSheets",
        "overrideIndex",
        "newSheets",
        "sheetIndex",
        "node",
        "newSheets",
        "node",
        "newSheets",
        "i",
        "i",
        "newSheets",
        "i",
        "overrides$1",
        "sheet",
        "newSheets",
        "i",
        "node",
        "newSheets",
        "node",
        "newSheets",
        "sourceSheets",
        "sourceDeclarations",
        "cleaners",
        "c",
        "c",
        "cleaners",
        "cancelAsyncOperations",
        "clear",
        "frameId",
        "cancelAnimationFrame",
        "frameId",
        "frameId",
        "iterateSourceSheets",
        "sheet",
        "count",
        "sheet",
        "count",
        "node",
        "rule",
        "CSSStyleRule",
        "rule",
        "count",
        "count",
        "theme",
        "ignoreImageAnalysis",
        "clear",
        "node",
        "i",
        "i",
        "node",
        "i",
        "overrides$1",
        "sheet",
        "sourceSheets",
        "sheet",
        "overridesBySource",
        "sheet",
        "readyOverride",
        "rulesChangeKey",
        "getRulesChangeKey",
        "injectSheet",
        "sheet",
        "readyOverride",
        "sheet",
        "CSSStyleSheet",
        "overridesBySource",
        "sheet",
        "iterateCSSRules",
        "rules",
        "rule",
        "sourceDeclarations",
        "rule",
        "prepareSheet",
        "i",
        "i",
        "i",
        "injectSheet",
        "sheet",
        "overrides$1",
        "createStyleSheetModifier",
        "sheetModifier",
        "rules",
        "cancelAsyncOperations",
        "rulesChangeKey",
        "getRulesChangeKey",
        "callback",
        "callbackRequested",
        "callbackRequested",
        "queueMicrotask",
        "callbackRequested",
        "node",
        "s",
        "overrides$1",
        "s",
        "sheets",
        "sheet",
        "overridesBySource",
        "sheet",
        "callback",
        "sheets",
        "getRulesChangeKey",
        "rulesChangeKey",
        "callback",
        "frameId",
        "requestAnimationFrame",
        "canUseSheetProxy$1",
        "checkForUpdates",
        "handleArrayChange",
        "callback",
        "watchUsingRAF",
        "callback",
        "listener",
        "node",
        "listener",
        "cleaners",
        "node",
        "listener",
        "callback",
        "onAdoptedSheetsChange",
        "canUseSheetProxy$1",
        "handleArrayChange",
        "callback",
        "addSheetChangeEventListener",
        "onAdoptedSheetsChange",
        "addSheetChangeEventListener",
        "onAdoptedSheetsChange",
        "addSheetChangeEventListener",
        "onAdoptedSheetsChange",
        "canUseSheetProxy$1",
        "watchUsingRAF",
        "callback",
        "cssText",
        "index",
        "index",
        "StyleSheetCommandBuilder",
        "index",
        "index",
        "index",
        "cssText",
        "cssText",
        "command",
        "deep",
        "command",
        "command",
        "command",
        "command",
        "command",
        "rule",
        "i",
        "rule",
        "childCommands",
        "c",
        "c",
        "i",
        "deep",
        "rule",
        "rule",
        "StyleSheetCommandBuilder",
        "options",
        "prepareSheet",
        "builder",
        "builder",
        "createStyleSheetModifier",
        "sheetModifier",
        "options",
        "options",
        "options",
        "cancelAsyncOperations",
        "builder",
        "builder",
        "commands",
        "cancelAsyncOperations",
        "overrides",
        "overridesList",
        "normalizedPropList",
        "customProp",
        "cssProp",
        "INLINE_STYLE_ATTRS",
        "attr",
        "attr",
        "overridesList",
        "shorthandOverrides",
        "allOverrides",
        "dataAttr",
        "cssProp",
        "customProp",
        "root",
        "root",
        "Element",
        "root",
        "INLINE_STYLE_SELECTOR",
        "results",
        "root",
        "root",
        "Element",
        "isShadowDomSupported",
        "root",
        "ShadowRoot",
        "root",
        "Document",
        "push",
        "results",
        "root",
        "INLINE_STYLE_SELECTOR",
        "results",
        "elementStyleDidChange",
        "shadowRootDiscovered",
        "deepWatchForInlineStyles",
        "elementStyleDidChange",
        "shadowRootDiscovered",
        "iterateShadowHosts",
        "host",
        "deepWatchForInlineStyles",
        "host",
        "elementStyleDidChange",
        "shadowRootDiscovered",
        "root",
        "elementStyleDidChange",
        "shadowRootDiscovered",
        "treeObservers",
        "root",
        "treeObservers",
        "root",
        "attrObservers",
        "root",
        "node",
        "getInlineStyleElements",
        "node",
        "el",
        "discoveredNodes",
        "el",
        "discoveredNodes",
        "el",
        "elementStyleDidChange",
        "el",
        "iterateShadowHosts",
        "node",
        "n",
        "discoveredNodes",
        "node",
        "discoveredNodes",
        "node",
        "shadowRootDiscovered",
        "n",
        "deepWatchForInlineStyles",
        "n",
        "elementStyleDidChange",
        "shadowRootDiscovered",
        "variablesStore",
        "createOptimizedTreeObserver",
        "root",
        "_root",
        "additions",
        "added",
        "discoverNodes",
        "added",
        "discoverNodes",
        "root",
        "treeObservers",
        "root",
        "treeObserver",
        "getDuration",
        "getDuration",
        "throttle",
        "mutations",
        "mutations",
        "m",
        "m",
        "handledTargets",
        "target",
        "INLINE_STYLE_ATTRS",
        "m",
        "handledTargets",
        "target",
        "elementStyleDidChange",
        "target",
        "variablesStore",
        "MutationObserver",
        "mutations",
        "timeoutId",
        "cache",
        "mutations",
        "attemptCount",
        "start",
        "start",
        "now",
        "attemptCount",
        "MAX_ATTEMPTS_COUNT",
        "now",
        "start",
        "ATTEMPTS_INTERVAL",
        "timeoutId",
        "setTimeout",
        "start",
        "attemptCount",
        "timeoutId",
        "cache",
        "handleAttributeMutations",
        "attributeCache",
        "RETRY_TIMEOUT",
        "cache",
        "mutations",
        "start",
        "now",
        "attemptCount",
        "handleAttributeMutations",
        "mutations",
        "attrObserver",
        "root",
        "INLINE_STYLE_ATTRS",
        "overridesList",
        "dataAttr",
        "attrObservers",
        "root",
        "attrObserver",
        "treeObservers",
        "o",
        "o",
        "attrObservers",
        "o",
        "o",
        "treeObservers",
        "attrObservers",
        "svg",
        "svgAnalysisConditionCache",
        "svg",
        "svgAnalysisConditionCache",
        "svg",
        "svg",
        "svg",
        "svg",
        "svgAnalysisConditionCache",
        "svg",
        "shouldAnalyze",
        "shouldAnalyze",
        "el",
        "theme",
        "INLINE_STYLE_ATTRS",
        "attr",
        "attr",
        "el",
        "attr",
        "themeProps",
        "prop",
        "prop",
        "theme",
        "prop",
        "element",
        "selectors",
        "selectors",
        "i",
        "len",
        "i",
        "selectors",
        "i",
        "element",
        "ingnoredSelector",
        "element",
        "theme",
        "ignoreInlineSelectors",
        "ignoreImageSelectors",
        "getInlineStyleCacheKey",
        "element",
        "theme",
        "cacheKey",
        "inlineStyleCache",
        "element",
        "overrides",
        "targetCSSProp",
        "modifierCSSProp",
        "cssVal",
        "getModifiableCSSDeclaration",
        "modifierCSSProp",
        "cssVal",
        "element",
        "variablesStore",
        "ignoreImageSelectors",
        "mod",
        "value",
        "overrides",
        "targetCSSProp",
        "shorthandOverrides",
        "targetCSSProp",
        "element",
        "customProp",
        "value",
        "element",
        "dataAttr",
        "element",
        "dataAttr",
        "unsetProps",
        "targetCSSProp",
        "mod",
        "declarations",
        "prevDeclarations",
        "element",
        "property",
        "declarations",
        "value",
        "element",
        "property",
        "value",
        "prevDeclarations",
        "declarations",
        "setProps",
        "mod",
        "mod",
        "setProps",
        "promise",
        "sourceValue",
        "promise",
        "value",
        "value",
        "targetCSSProp",
        "value",
        "setStaticValue",
        "value",
        "value",
        "targetCSSProp",
        "element",
        "element",
        "value",
        "sourceValue",
        "value",
        "setStaticValue",
        "value",
        "inlineStyleCache",
        "element",
        "getInlineStyleCacheKey",
        "element",
        "theme",
        "mod",
        "mod",
        "theme",
        "mod",
        "value",
        "setStaticValue",
        "value",
        "value",
        "setAsyncValue",
        "value",
        "cssVal",
        "value",
        "setVarDeclaration",
        "value",
        "ignoreInlineSelectors",
        "shouldIgnoreInlineStyle",
        "element",
        "ignoreInlineSelectors",
        "unsetProps",
        "cssProp",
        "element",
        "overrides",
        "cssProp",
        "element",
        "SVGElement",
        "isSVGElement",
        "element",
        "element",
        "SVGSVGElement",
        "element",
        "isSVGElement",
        "theme",
        "svg",
        "svgInversionCache",
        "svg",
        "shouldAnalyzeSVGAsImage",
        "svg",
        "svgInversionCache",
        "svg",
        "analyzeSVGAsImage",
        "svg",
        "svgString",
        "svgString",
        "btoa",
        "svgString",
        "getImageDetails",
        "dataURL",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "svg",
        "svg",
        "analyzeSVGAsImage",
        "isDOMReady",
        "addDOMReadyListener",
        "analyzeSVGAsImage",
        "element",
        "element",
        "value",
        "value",
        "value",
        "value",
        "setCustomProp",
        "value",
        "element",
        "element",
        "element",
        "getAbsoluteURL",
        "location",
        "element",
        "url",
        "setCustomProp",
        "value",
        "element",
        "element",
        "element",
        "value",
        "value",
        "value",
        "value",
        "setCustomProp",
        "value",
        "isSVGElement",
        "element",
        "element",
        "value",
        "element",
        "SVGTextElement",
        "handleSVGElement",
        "element",
        "width",
        "SMALL_SVG_LIMIT",
        "height",
        "SMALL_SVG_LIMIT",
        "setCustomProp",
        "isBg",
        "value",
        "isReadyStateComplete",
        "handleSVGElement",
        "addReadyStateCompleteListener",
        "handleSVGElement",
        "setCustomProp",
        "value",
        "element",
        "setCustomProp",
        "element",
        "element",
        "element",
        "setCustomProp",
        "element",
        "SVGLineElement",
        "element",
        "SVGTextElement",
        "value",
        "element",
        "iterateCSSDeclarations",
        "element",
        "property",
        "value",
        "property",
        "value",
        "element",
        "element",
        "setCustomProp",
        "property",
        "property",
        "value",
        "overrides",
        "property",
        "property",
        "normalizedPropList",
        "property",
        "setCustomProp",
        "property",
        "property",
        "value",
        "shorthandOverrides",
        "property",
        "value",
        "setCustomProp",
        "property",
        "property",
        "value",
        "normalizedPropList",
        "property",
        "overriddenProp",
        "element",
        "overriddenProp",
        "element",
        "overriddenProp",
        "overriddenProp",
        "element",
        "element",
        "property",
        "element",
        "element",
        "SVGTextElement",
        "element",
        "setCustomProp",
        "element",
        "element",
        "variablesStore",
        "element",
        "forEach",
        "unsetProps",
        "cssProp",
        "element",
        "overrides",
        "cssProp",
        "inlineStyleCache",
        "element",
        "getInlineStyleCacheKey",
        "element",
        "theme",
        "metaThemeColorName",
        "meta",
        "theme",
        "srcMetaThemeColor",
        "srcMetaThemeColor",
        "meta",
        "parseColorWithCache",
        "srcMetaThemeColor",
        "color",
        "logWarn",
        "color",
        "meta",
        "modifyBackgroundColor",
        "color",
        "theme",
        "theme",
        "metaThemeColorSelector",
        "meta",
        "changeMetaThemeColor",
        "meta",
        "theme",
        "observer",
        "observer",
        "observer",
        "MutationObserver",
        "mutations",
        "i",
        "mutations",
        "i",
        "mutations",
        "i",
        "j",
        "addedNodes",
        "j",
        "addedNodes",
        "j",
        "node",
        "HTMLMetaElement",
        "node",
        "metaThemeColorName",
        "observer",
        "observer",
        "changeMetaThemeColor",
        "node",
        "theme",
        "observer",
        "observer",
        "observer",
        "observer",
        "metaThemeColorSelector",
        "meta",
        "srcMetaThemeColor",
        "meta",
        "srcMetaThemeColor",
        "cssText",
        "cssText",
        "cssCommentsRegex",
        "canUseSheetProxy",
        "element",
        "safeGetSheetRules",
        "callback",
        "isCancelled",
        "watchForSheetChangesUsingProxy",
        "canUseSheetProxy",
        "element",
        "rafSheetWatcher",
        "createRAFSheetWatcher",
        "element",
        "safeGetSheetRules",
        "callback",
        "isCancelled",
        "rafSheetWatcher",
        "canUseSheetProxy",
        "rafSheetWatcher",
        "areSheetChangesPending",
        "areSheetChangesPending",
        "isCancelled",
        "callback",
        "areSheetChangesPending",
        "queueMicrotask",
        "handleSheetChanges",
        "element",
        "onSheetChange",
        "element",
        "onSheetChange",
        "stopWatchingForSheetChangesUsingProxy",
        "rafSheetWatcher",
        "watchForSheetChanges",
        "stopWatchingForSheetChanges",
        "element",
        "safeGetSheetRules",
        "callback",
        "isCancelled",
        "safeGetSheetRules",
        "rules",
        "rules",
        "getRulesChangeKey",
        "rulesChangeKey",
        "rulesChangeKey",
        "getRulesChangeKey",
        "stopWatchingForSheetChangesUsingRAF",
        "checkForUpdate",
        "isCancelled",
        "cancelled",
        "didRulesKeyChange",
        "rulesChangeKey",
        "getRulesChangeKey",
        "callback",
        "cancelled",
        "canUseSheetProxy",
        "element",
        "stopWatchingForSheetChangesUsingRAF",
        "rulesCheckFrameId",
        "requestAnimationFrame",
        "checkForUpdate",
        "checkForUpdate",
        "rulesCheckFrameId",
        "cancelAnimationFrame",
        "rulesCheckFrameId",
        "watchForSheetChangesUsingRAF",
        "stopWatchingForSheetChangesUsingRAF",
        "element",
        "element",
        "URL",
        "element",
        "elementURL",
        "err",
        "logInfo",
        "element",
        "element",
        "element",
        "HTMLStyleElement",
        "element",
        "SVGStyleElement",
        "hostsBreakingOnSVGStyleOverride",
        "location",
        "element",
        "HTMLLinkElement",
        "element",
        "element",
        "element",
        "element",
        "isFirefox",
        "element",
        "isFontsGoogleApiStyle",
        "element",
        "element",
        "element",
        "element",
        "node",
        "results",
        "deep",
        "shouldManageStyle",
        "node",
        "results",
        "node",
        "node",
        "Element",
        "isShadowDomSupported",
        "node",
        "ShadowRoot",
        "node",
        "forEach",
        "node",
        "STYLE_SELECTOR",
        "style",
        "getManageableStyles",
        "style",
        "results",
        "deep",
        "iterateShadowHosts",
        "node",
        "host",
        "getManageableStyles",
        "host",
        "results",
        "results",
        "rejectorsForLoadingLinks",
        "element",
        "next",
        "next",
        "next",
        "prevStyles",
        "next",
        "prevStyles",
        "el",
        "el",
        "corsStyleSet",
        "el",
        "prevStyles",
        "el",
        "el",
        "syncStyleSet",
        "el",
        "isAsyncCancelled",
        "cancelAsyncOperations",
        "createStyleSheetModifier",
        "MutationObserver",
        "mutations",
        "mutations",
        "m",
        "m",
        "containsCSSImport",
        "element",
        "createOrUpdateCORSCopy",
        "cssText",
        "location",
        "update",
        "update",
        "element",
        "HTMLStyleElement",
        "removeCSSComments",
        "element",
        "cssText",
        "cssImportRegex",
        "cssRules",
        "checkCrossOrigin",
        "cssRules",
        "cssRules",
        "i",
        "len",
        "i",
        "rule",
        "cssRules",
        "i",
        "rule",
        "checkCrossOrigin",
        "rule",
        "rule",
        "rule",
        "location",
        "result",
        "result",
        "result",
        "corsCopy",
        "corsCopy",
        "containsCSSImport",
        "safeGetSheetRules",
        "element",
        "HTMLLinkElement",
        "isRelativeHrefOnAbsolutePath",
        "element",
        "hasImports",
        "cssRules",
        "hasImports",
        "cssRules",
        "cssRules",
        "logWarn",
        "cssRules",
        "corsCopy",
        "element",
        "corsCopy",
        "element",
        "corsCopy",
        "element",
        "corsCopy",
        "syncStyle",
        "element",
        "syncStyle",
        "corsCopy",
        "element",
        "syncStyle",
        "element",
        "syncStyle",
        "element",
        "syncStyle",
        "element",
        "SVGStyleElement",
        "syncStyle",
        "syncStyle",
        "syncStyle",
        "element",
        "syncStyle",
        "element",
        "syncStyleSet",
        "syncStyle",
        "loadingLinkCounter",
        "element",
        "HTMLLinkElement",
        "getRulesOrError",
        "accessError",
        "logWarn",
        "accessError",
        "isSafari",
        "element",
        "isSafari",
        "cssRules",
        "accessError",
        "isStillLoadingError",
        "accessError",
        "logInfo",
        "loadingLinkId",
        "element",
        "linkLoading",
        "element",
        "loadingLinkId",
        "err",
        "logWarn",
        "err",
        "wasLoadingError",
        "cancelAsyncOperations",
        "getRulesOrError",
        "accessError",
        "logWarn",
        "accessError",
        "cssRules",
        "hasImports",
        "cssRules",
        "cssRules",
        "cssText",
        "loadText",
        "element",
        "cssBasePath",
        "getCSSBaseBath",
        "element",
        "cancelAsyncOperations",
        "containsCSSImport",
        "cssText",
        "element",
        "cssBasePath",
        "getCSSBaseBath",
        "location",
        "createOrUpdateCORSCopy",
        "cssText",
        "cssBasePath",
        "corsCopy",
        "corsCopy",
        "cssText",
        "cssBasePath",
        "cssText",
        "replaceCSSImports",
        "cssText",
        "cssBasePath",
        "corsCopy",
        "corsCopy",
        "fullCSSText",
        "corsCopy",
        "fullCSSText",
        "corsCopy",
        "createCORSCopy",
        "element",
        "fullCSSText",
        "err",
        "logWarn",
        "err",
        "corsCopy",
        "corsCopyPositionWatcher",
        "watchForNodePosition",
        "corsCopy",
        "options",
        "getRulesSync",
        "rules",
        "options",
        "logWarn",
        "isLoadingRules",
        "wasLoadingError",
        "isLoadingRules",
        "loadingStart",
        "getRulesAsync",
        "results",
        "isLoadingRules",
        "loadingEnd",
        "results",
        "update",
        "err",
        "logWarn",
        "err",
        "isLoadingRules",
        "loadingEnd",
        "theme",
        "ignoreImageAnalysis",
        "getRulesSync",
        "rules",
        "cancelAsyncOperations",
        "sheet",
        "sheet",
        "sheet",
        "i",
        "i",
        "sheet",
        "i",
        "syncStyle",
        "createSyncStyle",
        "syncStylePositionWatcher",
        "syncStylePositionWatcher",
        "insertStyle",
        "syncStyle",
        "syncStyle",
        "syncStyle",
        "removeCSSRulesFromSheet",
        "sheet",
        "syncStylePositionWatcher",
        "syncStylePositionWatcher",
        "syncStylePositionWatcher",
        "watchForNodePosition",
        "syncStyle",
        "forceRenderStyle",
        "buildOverrides",
        "syncStyle",
        "forceRenderStyle",
        "sheetModifier",
        "prepareOverridesSheet",
        "rules",
        "isOverrideEmpty",
        "syncStyle",
        "sheetModifier",
        "addReadyStateCompleteListener",
        "update",
        "buildOverrides",
        "element",
        "element",
        "err",
        "err",
        "error",
        "error",
        "error",
        "error",
        "getRulesOrError",
        "err",
        "logWarn",
        "err",
        "cssRules",
        "createSheetWatcher",
        "element",
        "safeGetSheetRules",
        "update",
        "isAsyncCancelled",
        "observer",
        "cancelAsyncOperations",
        "corsCopyPositionWatcher",
        "corsCopyPositionWatcher",
        "syncStylePositionWatcher",
        "syncStylePositionWatcher",
        "sheetChangeWatcher",
        "pause",
        "removeNode",
        "corsCopy",
        "removeNode",
        "syncStyle",
        "loadingEnd",
        "rejectorsForLoadingLinks",
        "loadingLinkId",
        "rejectorsForLoadingLinks",
        "loadingLinkId",
        "rejectorsForLoadingLinks",
        "loadingLinkId",
        "reject",
        "reject",
        "observer",
        "element",
        "observerOptions",
        "element",
        "HTMLStyleElement",
        "sheetChangeWatcher",
        "syncStyle",
        "moveCount",
        "moveCount",
        "maxMoveCount",
        "logWarn",
        "element",
        "logWarn",
        "syncStyle",
        "element",
        "insertStyle",
        "corsCopyPositionWatcher",
        "corsCopyPositionWatcher",
        "syncStylePositionWatcher",
        "syncStylePositionWatcher",
        "isOverrideEmpty",
        "forceRenderStyle",
        "update",
        "link",
        "loadingId",
        "resolve",
        "reject",
        "cleanUp",
        "link",
        "onLoad",
        "link",
        "onError",
        "rejectorsForLoadingLinks",
        "loadingId",
        "onLoad",
        "cleanUp",
        "resolve",
        "onError",
        "cleanUp",
        "reject",
        "loadingId",
        "link",
        "rejectorsForLoadingLinks",
        "loadingId",
        "cleanUp",
        "reject",
        "link",
        "onLoad",
        "link",
        "onError",
        "link",
        "onError",
        "importDeclaration",
        "getCSSURLValue",
        "importDeclaration",
        "url",
        "url",
        "fetch",
        "url",
        "readCSSFetchCache",
        "url",
        "cache",
        "cache",
        "URL",
        "url",
        "parsedURL",
        "location",
        "text",
        "loadAsText",
        "url",
        "location",
        "text",
        "bgFetch",
        "location",
        "writeCSSFetchCache",
        "url",
        "text",
        "text",
        "cssText",
        "basePath",
        "cache",
        "cssText",
        "removeCSSComments",
        "cssText",
        "cssText",
        "replaceCSSFontFace",
        "cssText",
        "cssText",
        "replaceCSSRelativeURLsWithAbsolute",
        "cssText",
        "basePath",
        "getMatchesWithOffsets",
        "cssImportRegex",
        "cssText",
        "match",
        "importMatches",
        "prev",
        "prev",
        "prev",
        "match",
        "cssText",
        "prevImportEnd",
        "cssText",
        "prevImportEnd",
        "shouldIgnoreImportsInBetween",
        "openBraceIndex",
        "openBraceIndex",
        "nextImportStart",
        "closeBraceIndex",
        "closeBraceIndex",
        "nextImportStart",
        "shouldIgnoreImportsInBetween",
        "importedCSS",
        "getCSSImportURL",
        "match",
        "getAbsoluteURL",
        "basePath",
        "importURL",
        "cache",
        "absoluteURL",
        "importedCSS",
        "cache",
        "absoluteURL",
        "importedCSS",
        "loadText",
        "absoluteURL",
        "cache",
        "absoluteURL",
        "importedCSS",
        "importedCSS",
        "replaceCSSImports",
        "importedCSS",
        "getCSSBaseBath",
        "absoluteURL",
        "cache",
        "err",
        "logWarn",
        "err",
        "importedCSS",
        "cssText",
        "cssText",
        "match",
        "diff",
        "importedCSS",
        "cssText",
        "match",
        "match",
        "diff",
        "diff",
        "importedCSS",
        "match",
        "prev",
        "match",
        "cssText",
        "cssText",
        "cssText",
        "srcElement",
        "cssText",
        "cssText",
        "cors",
        "cors",
        "cors",
        "cors",
        "cssText",
        "srcElement",
        "cors",
        "srcElement",
        "cors",
        "corsStyleSet",
        "cors",
        "cors",
        "enableStyleSheetsProxy",
        "enableCustomElementRegistryProxy",
        "CustomEvent",
        "cleaners",
        "clean",
        "clean",
        "cleaners",
        "listener",
        "options",
        "listener",
        "options",
        "cleaners",
        "listener",
        "disableWPDarkMode",
        "disableWPDarkMode",
        "documentEventListener",
        "cleanUp",
        "documentEventListener",
        "disableConflictingPlugins",
        "cls",
        "prop",
        "overrides",
        "cls",
        "proto",
        "prop",
        "oldDescriptor",
        "oldDescriptor",
        "overrides",
        "key",
        "overrides",
        "key",
        "newDescriptor",
        "key",
        "factory",
        "oldDescriptor",
        "key",
        "proto",
        "prop",
        "newDescriptor",
        "cleaners",
        "proto",
        "prop",
        "oldDescriptor",
        "cls",
        "prop",
        "factory",
        "overrideProperty",
        "cls",
        "prop",
        "factory",
        "element",
        "element",
        "sheet",
        "isDRElement",
        "sheet",
        "CustomEvent",
        "CustomEvent",
        "CustomEvent",
        "sheet",
        "adoptedSheetOwners",
        "sheet",
        "owners",
        "node",
        "node",
        "node",
        "adoptedSheetChangeEvent",
        "owners",
        "node",
        "sheet",
        "sheet",
        "isDRSheet",
        "sheet",
        "sheet",
        "updateSheetEvent",
        "adoptedSheetOwners",
        "sheet",
        "onAdoptedSheetChange",
        "sheet",
        "sheet",
        "promise",
        "ownerNode",
        "isDRSheet",
        "sheet",
        "promise",
        "promise",
        "promise",
        "ownerNode",
        "updateSheetEvent",
        "adoptedSheetOwners",
        "sheet",
        "promise",
        "promise",
        "promise",
        "onAdoptedSheetChange",
        "sheet",
        "CSSStyleSheet",
        "selector",
        "style",
        "index",
        "selector",
        "style",
        "index",
        "reportSheetChange",
        "CSSStyleSheet",
        "rule",
        "index",
        "rule",
        "index",
        "reportSheetChange",
        "returnValue",
        "CSSStyleSheet",
        "index",
        "index",
        "reportSheetChange",
        "CSSStyleSheet",
        "index",
        "index",
        "reportSheetChange",
        "CSSStyleSheet",
        "cssText",
        "cssText",
        "reportSheetChangeAsync",
        "returnValue",
        "returnValue",
        "CSSStyleSheet",
        "cssText",
        "cssText",
        "reportSheetChange",
        "Element",
        "options",
        "shadowDomAttachingEvent",
        "options",
        "location",
        "location",
        "shouldWrapHTMLElement",
        "Element",
        "tagName",
        "tagName",
        "tagName",
        "getCurrentElementValue",
        "tagName",
        "elements",
        "element",
        "element",
        "isDRElement",
        "element",
        "NodeList",
        "getCurrentElementValue",
        "_",
        "property",
        "getCurrentElementValue",
        "property",
        "property",
        "elements",
        "Proxy",
        "elements",
        "nodeListBehavior",
        "elements",
        "location",
        "shouldProxyChildNodes",
        "overrideProperty",
        "Node",
        "childNodes",
        "element",
        "isDRElement",
        "element",
        "NodeList",
        "tag",
        "customElements",
        "tag",
        "CustomEvent",
        "documentEventListener",
        "e",
        "resolveCustomElement",
        "e",
        "enableCustomElementRegistryProxy",
        "CustomElementRegistry",
        "name",
        "options",
        "resolveCustomElement",
        "name",
        "name",
        "options",
        "blobURLAllowed",
        "CustomEvent",
        "Uint8Array",
        "svg",
        "i",
        "svg",
        "i",
        "i",
        "svg",
        "i",
        "Blob",
        "URL",
        "blob",
        "Image",
        "image",
        "blobURLAllowed",
        "sendBlobURLCheckResponse",
        "image",
        "blobURLAllowed",
        "sendBlobURLCheckResponse",
        "image",
        "objectURL",
        "CustomEvent",
        "documentEventListener",
        "checkBlobURLSupport",
        "enableStyleSheetsProxy",
        "overrideProperty",
        "Document",
        "getCurrentValue",
        "docSheets",
        "styleSheet",
        "styleSheet",
        "isDRSheet",
        "styleSheet",
        "filteredSheets",
        "item",
        "filteredSheets",
        "item",
        "filteredSheets",
        "StyleSheetList",
        "getCurrentValue",
        "_",
        "property",
        "getCurrentValue",
        "property",
        "elements",
        "Proxy",
        "elements",
        "styleSheetListBehavior",
        "elements",
        "CustomEvent",
        "isDRAdoptedSheetOverride",
        "sheet",
        "sheet",
        "sheet",
        "adoptedSheetOverrideCache",
        "sheet",
        "sheet",
        "sheet",
        "adoptedSheetOverrideCache",
        "sheet",
        "areArraysEqual",
        "a",
        "b",
        "a",
        "b",
        "a",
        "x",
        "i",
        "x",
        "b",
        "i",
        "onAdoptedSheetsChange",
        "node",
        "adoptedSheetsSnapshots",
        "node",
        "node",
        "s",
        "isDRAdoptedSheetOverride",
        "s",
        "adoptedSheetsSnapshots",
        "node",
        "curr",
        "prev",
        "areArraysEqual",
        "prev",
        "curr",
        "curr",
        "sheet",
        "adoptedSheetOwners",
        "sheet",
        "adoptedSheetOwners",
        "sheet",
        "adoptedSheetOwners",
        "sheet",
        "node",
        "rule",
        "sheet",
        "rule",
        "declaration",
        "adoptedDeclarationSheets",
        "declaration",
        "sheet",
        "node",
        "adoptedSheetsChangeEvent",
        "proxyAdoptedSheetsArray",
        "node",
        "source",
        "adoptedSheetsProxySources",
        "source",
        "source",
        "adoptedSheetsSourceProxies",
        "source",
        "adoptedSheetsSourceProxies",
        "source",
        "Proxy",
        "source",
        "target",
        "property",
        "target",
        "property",
        "target",
        "property",
        "value",
        "target",
        "property",
        "value",
        "property",
        "onAdoptedSheetsChange",
        "node",
        "adoptedSheetsSourceProxies",
        "source",
        "proxy",
        "adoptedSheetsProxySources",
        "proxy",
        "source",
        "proxy",
        "Document",
        "ShadowRoot",
        "ctor",
        "overrideProperty",
        "ctor",
        "proxyAdoptedSheetsArray",
        "source",
        "source",
        "adoptedSheetsProxySources",
        "source",
        "source",
        "adoptedSheetsProxySources",
        "source",
        "source",
        "onAdoptedSheetsChange",
        "CustomEvent",
        "key",
        "CSSStyleDeclaration",
        "key",
        "args",
        "args",
        "adoptedDeclarationSheets",
        "sheet",
        "adoptedSheetOwners",
        "sheet",
        "owners",
        "owners",
        "node",
        "node",
        "adoptedDeclarationChangeEvent",
        "returnValue",
        "element",
        "element",
        "element",
        "element",
        "element",
        "tag",
        "element",
        "extendedTag",
        "tag",
        "extendedTag",
        "undefinedGroups",
        "tag",
        "undefinedGroups",
        "tag",
        "customElementsWhenDefined",
        "tag",
        "elementsDefinitionCallback",
        "undefinedGroups",
        "tag",
        "ASSERT",
        "elements",
        "undefinedGroups",
        "tag",
        "elementsDefinitionCallback",
        "elements",
        "undefinedGroups",
        "tag",
        "element",
        "root",
        "isDefinedSelectorSupported",
        "forEach",
        "root",
        "recordUndefinedElement",
        "canOptimizeUsingProxy",
        "e",
        "e",
        "unhandledShadowHosts",
        "queueMicrotask",
        "unhandledShadowHosts",
        "el",
        "el",
        "elementsDefinitionCallback",
        "hosts",
        "unhandledShadowHosts",
        "unhandledShadowHosts",
        "host",
        "e",
        "canOptimizeUsingProxy",
        "e",
        "ASSERT",
        "tag",
        "tag",
        "definedCustomElements",
        "tag",
        "resolvers",
        "tag",
        "resolvers",
        "tag",
        "resolvers",
        "tag",
        "r",
        "r",
        "r",
        "tag",
        "ASSERT",
        "tag",
        "tag",
        "definedCustomElements",
        "tag",
        "resolve",
        "customElements",
        "customElements",
        "tag",
        "resolve",
        "canOptimizeUsingProxy",
        "resolvers",
        "tag",
        "resolvers",
        "tag",
        "resolve",
        "resolvers",
        "tag",
        "resolve",
        "CustomEvent",
        "checkIfDefined",
        "undefinedGroups",
        "tag",
        "elements",
        "elements",
        "elements",
        "resolve",
        "requestAnimationFrame",
        "checkIfDefined",
        "requestAnimationFrame",
        "checkIfDefined",
        "callback",
        "elementsDefinitionCallback",
        "callback",
        "elementsDefinitionCallback",
        "undefinedGroups",
        "handleIsDefined",
        "currentStyles",
        "update",
        "shadowRootDiscovered",
        "stopWatchingForStylePositions",
        "getPrevStyles",
        "root",
        "prevStylesByRoot",
        "root",
        "prevStylesByRoot",
        "root",
        "prevStylesByRoot",
        "root",
        "currentStyles",
        "node",
        "root",
        "root",
        "root",
        "root",
        "Node",
        "getPrevStyles",
        "root",
        "prevStyles",
        "node",
        "style",
        "prevStyleSiblings",
        "style",
        "style",
        "nextStyleSiblings",
        "style",
        "style",
        "style",
        "prevStyleSiblings",
        "style",
        "nextStyleSiblings",
        "style",
        "style",
        "style",
        "prevStyleSiblings",
        "style",
        "style",
        "nextStyleSiblings",
        "style",
        "currentStyles",
        "saveStylePosition",
        "root",
        "operations",
        "createdStyles",
        "s",
        "saveStylePosition",
        "s",
        "movedStyles",
        "s",
        "saveStylePosition",
        "s",
        "removedStyles",
        "s",
        "forgetStylePosition",
        "s",
        "getPrevStyles",
        "root",
        "createdStyles",
        "s",
        "prevStyles",
        "s",
        "removedStyles",
        "s",
        "prevStyles",
        "s",
        "createdStyles",
        "removedStyles",
        "movedStyles",
        "update",
        "createdStyles",
        "removedStyles",
        "movedStyles",
        "root",
        "additions",
        "node",
        "getManageableStyles",
        "node",
        "style",
        "createdStyles",
        "style",
        "deletions",
        "node",
        "getManageableStyles",
        "node",
        "style",
        "removedStyles",
        "style",
        "moves",
        "node",
        "getManageableStyles",
        "node",
        "style",
        "movedStyles",
        "style",
        "handleStyleOperations",
        "root",
        "additions",
        "n",
        "deepObserve",
        "n",
        "collectUndefinedElements",
        "n",
        "additions",
        "node",
        "isCustomElement",
        "node",
        "recordUndefinedElement",
        "node",
        "additions",
        "node",
        "checkImageSelectors",
        "node",
        "root",
        "getManageableStyles",
        "root",
        "getPrevStyles",
        "root",
        "styles",
        "s",
        "prevStyles",
        "s",
        "createdStyles",
        "s",
        "prevStyles",
        "s",
        "styles",
        "s",
        "removedStyles",
        "s",
        "styles",
        "s",
        "createdStyles",
        "s",
        "removedStyles",
        "s",
        "didStylePositionChange",
        "s",
        "movedStyles",
        "s",
        "handleStyleOperations",
        "root",
        "deepObserve",
        "root",
        "collectUndefinedElements",
        "root",
        "checkImageSelectors",
        "root",
        "mutations",
        "mutations",
        "m",
        "target",
        "shouldManageStyle",
        "target",
        "updatedStyles",
        "target",
        "target",
        "HTMLLinkElement",
        "target",
        "removedStyles",
        "target",
        "updatedStyles",
        "removedStyles",
        "update",
        "updatedStyles",
        "removedStyles",
        "root",
        "observedRoots",
        "root",
        "createOptimizedTreeObserver",
        "root",
        "handleMinorTreeMutations",
        "handleHugeTreeMutations",
        "MutationObserver",
        "handleAttributeMutations",
        "attrObserver",
        "root",
        "observers",
        "treeObserver",
        "attrObserver",
        "observedRoots",
        "root",
        "node",
        "shadowRoot",
        "observedRoots",
        "shadowRoot",
        "observe",
        "shadowRoot",
        "shadowRootDiscovered",
        "shadowRoot",
        "node",
        "iterateShadowHosts",
        "node",
        "subscribeForShadowRootChanges",
        "observe",
        "deepObserve",
        "watchWhenCustomElementsDefined",
        "hosts",
        "hosts",
        "hosts",
        "node",
        "handledShadowHosts",
        "node",
        "hosts",
        "host",
        "push",
        "newStyles",
        "getManageableStyles",
        "host",
        "update",
        "newStyles",
        "hosts",
        "host",
        "shadowRoot",
        "subscribeForShadowRootChanges",
        "host",
        "deepObserve",
        "shadowRoot",
        "collectUndefinedElements",
        "shadowRoot",
        "hosts",
        "node",
        "handledShadowHosts",
        "node",
        "handleIsDefined",
        "collectUndefinedElements",
        "observers",
        "o",
        "o",
        "observers",
        "observers",
        "observedRoots",
        "handledShadowHosts",
        "resetObservers",
        "unsubscribeFromDefineCustomElements",
        "currentStyles",
        "update",
        "shadowRootDiscovered",
        "watchForStylePositions",
        "currentStyles",
        "update",
        "shadowRootDiscovered",
        "stopWatchingForStylePositions",
        "generateUID",
        "className",
        "root",
        "root",
        "className",
        "element",
        "staticStyleMap",
        "className",
        "element",
        "staticStyleMap",
        "className",
        "element",
        "staticStyleMap",
        "className",
        "element",
        "element",
        "element",
        "className",
        "element",
        "element",
        "staticStyleMap",
        "className",
        "element",
        "element",
        "className",
        "root",
        "root",
        "className",
        "element",
        "element",
        "element",
        "element",
        "className",
        "element",
        "node",
        "alias",
        "callback",
        "nodePositionWatchers",
        "alias",
        "nodePositionWatchers",
        "alias",
        "nodePositionWatchers",
        "alias",
        "watchForNodePosition",
        "node",
        "callback",
        "forEach",
        "nodePositionWatchers",
        "watcher",
        "watcher",
        "nodePositionWatchers",
        "createOrUpdateStyle",
        "fallbackStyle",
        "getModifiedFallbackStyle",
        "theme",
        "fallbackStyle",
        "setupNodePositionWatcher",
        "fallbackStyle",
        "createOrUpdateStyle",
        "userAgentStyle",
        "getModifiedUserAgentStyle",
        "theme",
        "isIFrame$1",
        "theme",
        "userAgentStyle",
        "fallbackStyle",
        "setupNodePositionWatcher",
        "userAgentStyle",
        "createOrUpdateStyle",
        "theme",
        "theme",
        "textStyle",
        "createTextStyle",
        "theme",
        "textStyle",
        "textStyle",
        "fallbackStyle",
        "setupNodePositionWatcher",
        "textStyle",
        "createOrUpdateStyle",
        "fixes",
        "fixes",
        "fixes",
        "invertStyle",
        "fixes",
        "getCSSFilterValue",
        "theme",
        "theme",
        "theme",
        "clamp",
        "theme",
        "invertStyle",
        "invertStyle",
        "textStyle",
        "setupNodePositionWatcher",
        "invertStyle",
        "createOrUpdateStyle",
        "inlineStyle",
        "getInlineOverrideStyle",
        "inlineStyle",
        "invertStyle",
        "setupNodePositionWatcher",
        "inlineStyle",
        "createOrUpdateStyle",
        "overrideStyle",
        "fixes",
        "fixes",
        "replaceCSSTemplates",
        "fixes",
        "overrideStyle",
        "setupNodePositionWatcher",
        "overrideStyle",
        "createOrUpdateStyle",
        "theme",
        "getSelectionColor",
        "theme",
        "modifyBackgroundColor",
        "parseColorWithCache",
        "theme",
        "modifyForegroundColor",
        "parseColorWithCache",
        "theme",
        "variableStyle",
        "neutralBackgroundColor",
        "neutralTextColor",
        "selectionColors",
        "selectionColors",
        "variableStyle",
        "inlineStyle",
        "setupNodePositionWatcher",
        "variableStyle",
        "registerVariablesSheet",
        "variableStyle",
        "registerVariablesSheet",
        "variableStyle",
        "createOrUpdateStyle",
        "rootVarsStyle",
        "variableStyle",
        "fixes",
        "fixes",
        "fixes",
        "fixes",
        "CustomEvent",
        "createOrUpdateScript",
        "proxyScript",
        "injectProxy",
        "enableStyleSheetsProxy",
        "enableCustomElementRegistryProxy",
        "proxyScript",
        "rootVarsStyle",
        "proxyScript",
        "root",
        "createOrUpdateStyle",
        "root",
        "inlineStyle",
        "getInlineOverrideStyle",
        "root",
        "inlineStyle",
        "root",
        "createOrUpdateStyle",
        "root",
        "overrideStyle",
        "fixes",
        "fixes",
        "replaceCSSTemplates",
        "fixes",
        "root",
        "overrideStyle",
        "inlineStyle",
        "createOrUpdateStyle",
        "root",
        "fixes",
        "fixes",
        "fixes",
        "invertStyle",
        "fixes",
        "getCSSFilterValue",
        "theme",
        "theme",
        "theme",
        "clamp",
        "theme",
        "invertStyle",
        "root",
        "invertStyle",
        "overrideStyle",
        "shadowRootsWithOverrides",
        "root",
        "root",
        "MutationObserver",
        "mutations",
        "observer",
        "observer",
        "mutations",
        "removedNodes",
        "nodeName",
        "className",
        "createShadowStaticStyleOverridesInner",
        "root",
        "observer",
        "root",
        "root",
        "root",
        "createShadowStaticStyleOverridesInner",
        "root",
        "delayed",
        "delayedCreateShadowStaticStyleOverrides",
        "root",
        "$cssText",
        "$cssText",
        "_",
        "$color",
        "parseColorWithCache",
        "$color",
        "color",
        "getSRGBLightness",
        "color",
        "color",
        "color",
        "lightness",
        "modifyBackgroundColor",
        "color",
        "theme",
        "modifyForegroundColor",
        "color",
        "theme",
        "logWarn",
        "$color",
        "staticStyleMap",
        "fallback",
        "fallback",
        "cancelRendering",
        "getManageableStyles",
        "allStyles",
        "style",
        "styleManagers",
        "style",
        "style",
        "createManager",
        "style",
        "newManagers",
        "manager",
        "manager",
        "detail",
        "detail",
        "detail",
        "detail",
        "variablesStore",
        "detail",
        "variablesStore",
        "variablesStore",
        "createOrUpdateStyle",
        "variablesStore",
        "rootVarsStyle",
        "theme",
        "createOrUpdateStyle",
        "variablesStore",
        "rootVarsStyle",
        "theme",
        "styleManagers",
        "manager",
        "manager",
        "theme",
        "ignoredImageAnalysisSelectors",
        "loadingStyles",
        "cleanFallbackStyle",
        "newManagers",
        "manager",
        "manager",
        "toArray",
        "INLINE_STYLE_SELECTOR",
        "iterateShadowHosts",
        "host",
        "createShadowStaticStyleOverrides",
        "host",
        "host",
        "INLINE_STYLE_SELECTOR",
        "elements",
        "push",
        "inlineStyleElements",
        "elements",
        "inlineStyleElements",
        "el",
        "overrideInlineStyle",
        "el",
        "theme",
        "ignoredInlineSelectors",
        "ignoredImageAnalysisSelectors",
        "handleAdoptedStyleSheets",
        "variablesStore",
        "isFirefox",
        "onAdoptedCssChange",
        "e",
        "e",
        "sheets",
        "sheets",
        "sheets",
        "variablesStore",
        "cssRules",
        "variablesStore",
        "sheets",
        "getAdoptedStyleSheetFallback",
        "sheet",
        "sheet",
        "fallback",
        "theme",
        "ignoredImageAnalysisSelectors",
        "fallback",
        "response",
        "requestAnimationFrameOnce",
        "getAdoptedStyleChangeToken",
        "sheets",
        "CustomEvent",
        "response",
        "onAdoptedCssChange",
        "cleaners",
        "onAdoptedCssChange",
        "CustomEvent",
        "element",
        "loadingStylesCounter",
        "isDOMReady",
        "documentIsVisible",
        "loadingStyles",
        "loadingStyleId",
        "logInfo",
        "loadingStyles",
        "createOrUpdateStyle",
        "fallbackStyle",
        "fallbackStyle",
        "getModifiedFallbackStyle",
        "theme",
        "loadingStyles",
        "loadingStyleId",
        "logInfo",
        "loadingStyleId",
        "loadingStyles",
        "loadingStyles",
        "isDOMReady",
        "cleanFallbackStyle",
        "manager",
        "details",
        "variablesStore",
        "details",
        "variablesStore",
        "manager",
        "theme",
        "ignoredImageAnalysisSelectors",
        "manageStyle",
        "element",
        "styleManagers",
        "element",
        "manager",
        "manager",
        "element",
        "styleManagers",
        "element",
        "manager",
        "manager",
        "styleManagers",
        "element",
        "throttle",
        "callback",
        "styleManagers",
        "manager",
        "manager",
        "theme",
        "ignoredImageAnalysisSelectors",
        "adoptedStyleManagers",
        "manager",
        "manager",
        "theme",
        "ignoredImageAnalysisSelectors",
        "callback",
        "callback",
        "throttledRenderAllStyles",
        "loadingStyles",
        "cleanFallbackStyle",
        "logWarn",
        "loadingStyles",
        "createDynamicStyleOverrides",
        "watchForUpdates",
        "createStaticStyleOverrides",
        "documentIsVisible",
        "theme",
        "setDocumentVisibilityListener",
        "runDynamicStyle",
        "runDynamicStyle",
        "changeMetaThemeColorWhenAvailable",
        "theme",
        "node",
        "isFirefox",
        "canHaveAdoptedStyleSheets",
        "node",
        "node",
        "s",
        "variablesStore",
        "s",
        "createAdoptedStyleSheetOverride",
        "node",
        "adoptedStyleManagers",
        "newManger",
        "newManger",
        "theme",
        "ignoredImageAnalysisSelectors",
        "newManger",
        "sheets",
        "sheets",
        "s",
        "variablesStore",
        "s",
        "variablesStore",
        "newManger",
        "theme",
        "ignoredImageAnalysisSelectors",
        "sheet",
        "adoptedStyleChangeTokens",
        "sheet",
        "adoptedStyleChangeTokens",
        "sheet",
        "adoptedStyleChangeTokens",
        "sheet",
        "token",
        "token",
        "sheet",
        "adoptedStyleFallbacks",
        "sheet",
        "fallback",
        "fallback",
        "createAdoptedStyleSheetFallback",
        "adoptedStyleFallbacks",
        "sheet",
        "fallback",
        "fallback",
        "styleManagers",
        "watchForStyleChanges",
        "managedStyles",
        "created",
        "updated",
        "moved",
        "style",
        "styleManagers",
        "style",
        "moved",
        "style",
        "styleManagers",
        "style",
        "stylesToRemove",
        "style",
        "removeManager",
        "style",
        "stylesToManage",
        "style",
        "createManager",
        "style",
        "newManagers",
        "manager",
        "manager",
        "detail",
        "detail",
        "detail",
        "detail",
        "variablesStore",
        "detail",
        "variablesStore",
        "newManagers",
        "manager",
        "manager",
        "theme",
        "ignoredImageAnalysisSelectors",
        "newManagers",
        "manager",
        "manager",
        "stylesToRestore",
        "style",
        "styleManagers",
        "style",
        "shadowRoot",
        "createShadowStaticStyleOverrides",
        "shadowRoot",
        "handleAdoptedStyleSheets",
        "shadowRoot",
        "watchForInlineStyles",
        "element",
        "overrideInlineStyle",
        "element",
        "theme",
        "ignoredInlineSelectors",
        "ignoredImageAnalysisSelectors",
        "element",
        "element",
        "styleAttr",
        "variablesStore",
        "createOrUpdateStyle",
        "variablesStore",
        "rootVarsStyle",
        "theme",
        "root",
        "createShadowStaticStyleOverrides",
        "root",
        "root",
        "INLINE_STYLE_SELECTOR",
        "inlineStyleElements",
        "forEach",
        "inlineStyleElements",
        "el",
        "overrideInlineStyle",
        "el",
        "theme",
        "ignoredInlineSelectors",
        "ignoredImageAnalysisSelectors",
        "addDOMReadyListener",
        "onDOMReady",
        "styleManagers",
        "manager",
        "manager",
        "stopStylePositionWatchers",
        "stopWatchingForStyleChanges",
        "stopWatchingForInlineStyles",
        "removeDOMReadyListener",
        "onDOMReady",
        "cleanReadyStateCompleteListeners",
        "metaObserver",
        "MutationObserver",
        "metaObserver",
        "removeDynamicTheme",
        "metaObserver",
        "metaElement",
        "metaElement",
        "INSTANCE_ID",
        "metaElement",
        "meta",
        "meta",
        "INSTANCE_ID",
        "createDarkReaderInstanceMarker",
        "addMetaListener",
        "interceptorAttempts",
        "failure",
        "oldMeta",
        "oldMeta",
        "INSTANCE_ID",
        "queueMicrotask",
        "success",
        "disableWPDarkMode",
        "CustomEvent",
        "disableWPDarkMode",
        "MutationObserver",
        "disableWPDarkMode",
        "observer",
        "themeConfig",
        "dynamicThemeFixes",
        "iframe",
        "theme",
        "themeConfig",
        "fixes",
        "dynamicThemeFixes",
        "prevTheme",
        "prevFixes",
        "theme",
        "prevTheme",
        "key",
        "themeKeys",
        "theme",
        "key",
        "prevTheme",
        "key",
        "colorAffectingKeys",
        "key",
        "onlyColorsChanged",
        "onlyColorsChanged",
        "fixes",
        "prevFixes",
        "onlyColorsChanged",
        "onlyColorsChanged",
        "getColorPalette",
        "clearColorPalette",
        "palette",
        "color",
        "modifyBackgroundColor",
        "color",
        "theme",
        "palette",
        "color",
        "modifyForegroundColor",
        "color",
        "theme",
        "palette",
        "color",
        "modifyBorderColor",
        "color",
        "theme",
        "clearColorPalette",
        "fixes",
        "ignoredImageAnalysisSelectors",
        "fixes",
        "fixes",
        "ignoredInlineSelectors",
        "fixes",
        "fixes",
        "ignoredImageAnalysisSelectors",
        "ignoredInlineSelectors",
        "theme",
        "setIsDOMReady",
        "isIFrame$1",
        "iframe",
        "ready",
        "success",
        "disableConflictingPlugins",
        "theme",
        "createThemeAndWatchForUpdates",
        "failure",
        "removeDynamicTheme",
        "isDRLocked",
        "removeNode",
        "isAnotherDarkReaderInstanceActive",
        "interceptOldScript",
        "success",
        "ready",
        "isFirefox",
        "createOrUpdateStyle",
        "fallbackStyle",
        "fallbackStyle",
        "getModifiedFallbackStyle",
        "theme",
        "headObserver",
        "headObserver",
        "MutationObserver",
        "headObserver",
        "ready",
        "cleaners",
        "headObserver",
        "headObserver",
        "headObserver",
        "prevTheme",
        "theme",
        "prevFixes",
        "fixes",
        "CustomEvent",
        "removeNode",
        "cleanDynamicThemeCache",
        "removeNode",
        "restoreMetaThemeColor",
        "selectors",
        "selector",
        "removeNode",
        "selector",
        "staticStyleMap",
        "removeProxy",
        "shadowRootsWithOverrides",
        "root",
        "removeNode",
        "root",
        "removeNode",
        "root",
        "shadowRootsWithOverrides",
        "forEach",
        "styleManagers",
        "el",
        "removeManager",
        "el",
        "loadingStyles",
        "cleanLoadingLinks",
        "forEach",
        "removeNode",
        "adoptedStyleManagers",
        "manager",
        "manager",
        "adoptedStyleManagers",
        "adoptedStyleFallbacks",
        "fallback",
        "fallback",
        "adoptedStyleFallbacks",
        "metaObserver",
        "metaObserver",
        "cleaners",
        "clean",
        "clean",
        "cleaners",
        "variablesStore",
        "parsedURLCache",
        "removeDocumentVisibilityListener",
        "cancelRendering",
        "stopWatchingForUpdates",
        "cleanModificationCache",
        "clearColorCache",
        "releaseVariablesSheet",
        "prevTheme",
        "prevFixes",
        "cssText",
        "cssText",
        "removeCSSComments",
        "cssText",
        "cssText",
        "cssText",
        "cssText",
        "getTokenExclusionRanges",
        "cssText",
        "getAllOpenCloseRanges",
        "cssText",
        "excludeRanges",
        "bracketRanges",
        "brackets",
        "cssText",
        "ruleStart",
        "brackets",
        "cssText",
        "brackets",
        "brackets",
        "key",
        "key",
        "typeEndIndex",
        "key",
        "key",
        "typeEndIndex",
        "typeEndIndex",
        "key",
        "typeEndIndex",
        "parseCSS",
        "content",
        "rules",
        "rule",
        "parseSelectors",
        "key",
        "parseDeclarations",
        "content",
        "rules",
        "rule",
        "ruleStart",
        "brackets",
        "rules",
        "input",
        "openToken",
        "closeToken",
        "excludeRanges",
        "getOpenCloseRange",
        "input",
        "i",
        "openToken",
        "closeToken",
        "excludeRanges",
        "ranges",
        "i",
        "ranges",
        "cssText",
        "cssText",
        "cssText",
        "singleQuoteGoesFirst",
        "singleQuoteGoesFirst",
        "getAllOpenCloseRanges",
        "cssText",
        "firstQuote",
        "firstQuote",
        "excludeRanges",
        "getAllOpenCloseRanges",
        "cssText",
        "secondQuote",
        "secondQuote",
        "excludeRanges",
        "excludeRanges",
        "getAllOpenCloseRanges",
        "cssText",
        "excludeRanges",
        "excludeRanges",
        "getAllOpenCloseRanges",
        "cssText",
        "excludeRanges",
        "excludeRanges",
        "selectorText",
        "getTokenExclusionRanges",
        "selectorText",
        "splitExcluding",
        "selectorText",
        "excludeRanges",
        "cssDeclarationsText",
        "getTokenExclusionRanges",
        "cssDeclarationsText",
        "splitExcluding",
        "cssDeclarationsText",
        "excludeRanges",
        "part",
        "part",
        "colonIndex",
        "part",
        "declarations",
        "part",
        "colonIndex",
        "part",
        "colonIndex",
        "importantIndex",
        "importantIndex",
        "part",
        "importantIndex",
        "declarations",
        "rule",
        "rule",
        "cssText",
        "parseCSS",
        "cssText",
        "formatParsedCSS",
        "parsed",
        "parsed",
        "rule",
        "indent",
        "isParsedStyleRule",
        "rule",
        "formatStyleRule",
        "rule",
        "indent",
        "formatAtRule",
        "rule",
        "indent",
        "indent",
        "lines",
        "indent",
        "query",
        "rules",
        "child",
        "formatRule",
        "child",
        "indent",
        "tab",
        "lines",
        "indent",
        "indent",
        "selectors",
        "selectors",
        "selector",
        "i",
        "lines",
        "indent",
        "selector",
        "i",
        "lastSelectorIndex",
        "sortDeclarations",
        "declarations",
        "sorted",
        "lines",
        "indent",
        "tab",
        "property",
        "value",
        "important",
        "lines",
        "indent",
        "clearEmptyRules",
        "parsed",
        "parsed",
        "rule",
        "formatRule",
        "rule",
        "lines",
        "declarations",
        "declarations",
        "a",
        "b",
        "a",
        "b",
        "aProp",
        "prefixRegex",
        "bProp",
        "prefixRegex",
        "aPrefix",
        "aProp",
        "prefixRegex",
        "aProp",
        "bPrefix",
        "bProp",
        "prefixRegex",
        "bProp",
        "aNorm",
        "bNorm",
        "aPrefix",
        "bPrefix",
        "aNorm",
        "bNorm",
        "rules",
        "rules",
        "i",
        "i",
        "rules",
        "i",
        "isParsedStyleRule",
        "rule",
        "rule",
        "rules",
        "i",
        "clearEmptyRules",
        "rule",
        "rule",
        "rules",
        "i",
        "text",
        "getMatches",
        "blobRegex",
        "text",
        "url",
        "loadAsDataURL",
        "url",
        "promises",
        "promise",
        "promises",
        "text",
        "blobRegex",
        "data",
        "banner",
        "selector",
        "comment",
        "selector",
        "staticStyle",
        "staticStyle",
        "css",
        "comment",
        "css",
        "staticStyle",
        "css",
        "addStaticCSS",
        "addStaticCSS",
        "addStaticCSS",
        "addStaticCSS",
        "addStaticCSS",
        "element",
        "forEach",
        "element",
        "rule",
        "rule",
        "rule",
        "modifiedCSS",
        "rule",
        "modifiedCSS",
        "formatCSS",
        "modifiedCSS",
        "css",
        "css",
        "replaceBlobs",
        "formattedCSS",
        "css",
        "addStaticCSS",
        "css",
        "err",
        "err",
        "themeOptions",
        "fixes",
        "DEFAULT_THEME",
        "themeOptions",
        "theme",
        "ThemeEngine",
        "createOrUpdateDynamicThemeInternal",
        "theme",
        "fixes",
        "isIFrame",
        "isDarkReaderEnabled",
        "isDarkReaderEnabled",
        "removeDynamicTheme",
        "isDarkReaderEnabled",
        "matchMedia",
        "matchMedia",
        "darkScheme",
        "enable",
        "store",
        "store",
        "disable",
        "themeOptions",
        "fixes",
        "themeOptions",
        "store",
        "handleColorScheme",
        "isMatchMediaChangeEventListenerSupported",
        "darkScheme",
        "handleColorScheme",
        "darkScheme",
        "handleColorScheme",
        "isMatchMediaChangeEventListenerSupported",
        "darkScheme",
        "handleColorScheme",
        "darkScheme",
        "handleColorScheme",
        "disable",
        "collectCSS",
        "exports",
        "auto",
        "exports",
        "disable",
        "exports",
        "enable",
        "exports",
        "exportGeneratedCSS",
        "exports",
        "isEnabled",
        "exports",
        "setFetchMethod",
        "exports"
    ],
    "literals": [
        "\"object\"",
        "\"undefined\"",
        "\"function\"",
        "\"exports\"",
        "\"undefined\"",
        "\"use strict\"",
        "\"GET_DATA\"",
        "\"ui-bg-get-data\"",
        "\"GET_DEVTOOLS_DATA\"",
        "\"ui-bg-get-devtools-data\"",
        "\"SUBSCRIBE_TO_CHANGES\"",
        "\"ui-bg-subscribe-to-changes\"",
        "\"UNSUBSCRIBE_FROM_CHANGES\"",
        "\"ui-bg-unsubscribe-from-changes\"",
        "\"CHANGE_SETTINGS\"",
        "\"ui-bg-change-settings\"",
        "\"SET_THEME\"",
        "\"ui-bg-set-theme\"",
        "\"TOGGLE_ACTIVE_TAB\"",
        "\"ui-bg-toggle-active-tab\"",
        "\"MARK_NEWS_AS_READ\"",
        "\"ui-bg-mark-news-as-read\"",
        "\"MARK_NEWS_AS_DISPLAYED\"",
        "\"ui-bg-mark-news-as-displayed\"",
        "\"LOAD_CONFIG\"",
        "\"ui-bg-load-config\"",
        "\"APPLY_DEV_DYNAMIC_THEME_FIXES\"",
        "\"ui-bg-apply-dev-dynamic-theme-fixes\"",
        "\"RESET_DEV_DYNAMIC_THEME_FIXES\"",
        "\"ui-bg-reset-dev-dynamic-theme-fixes\"",
        "\"APPLY_DEV_INVERSION_FIXES\"",
        "\"ui-bg-apply-dev-inversion-fixes\"",
        "\"RESET_DEV_INVERSION_FIXES\"",
        "\"ui-bg-reset-dev-inversion-fixes\"",
        "\"APPLY_DEV_STATIC_THEMES\"",
        "\"ui-bg-apply-dev-static-themes\"",
        "\"RESET_DEV_STATIC_THEMES\"",
        "\"ui-bg-reset-dev-static-themes\"",
        "\"COLOR_SCHEME_CHANGE\"",
        "\"ui-bg-color-scheme-change\"",
        "\"HIDE_HIGHLIGHTS\"",
        "\"ui-bg-hide-highlights\"",
        "\"CHANGES\"",
        "\"bg-ui-changes\"",
        "\"CSS_UPDATE\"",
        "\"debug-bg-ui-css-update\"",
        "\"UPDATE\"",
        "\"debug-bg-ui-update\"",
        "\"ADD_CSS_FILTER\"",
        "\"bg-cs-add-css-filter\"",
        "\"ADD_DYNAMIC_THEME\"",
        "\"bg-cs-add-dynamic-theme\"",
        "\"ADD_STATIC_THEME\"",
        "\"bg-cs-add-static-theme\"",
        "\"ADD_SVG_FILTER\"",
        "\"bg-cs-add-svg-filter\"",
        "\"CLEAN_UP\"",
        "\"bg-cs-clean-up\"",
        "\"FETCH_RESPONSE\"",
        "\"bg-cs-fetch-response\"",
        "\"UNSUPPORTED_SENDER\"",
        "\"bg-cs-unsupported-sender\"",
        "\"RELOAD\"",
        "\"debug-bg-cs-reload\"",
        "\"COLOR_SCHEME_CHANGE\"",
        "\"cs-bg-color-scheme-change\"",
        "\"DARK_THEME_DETECTED\"",
        "\"cs-bg-dark-theme-detected\"",
        "\"DARK_THEME_NOT_DETECTED\"",
        "\"cs-bg-dark-theme-not-detected\"",
        "\"FETCH\"",
        "\"cs-bg-fetch\"",
        "\"DOCUMENT_CONNECT\"",
        "\"cs-bg-document-connect\"",
        "\"DOCUMENT_FORGET\"",
        "\"cs-bg-document-forget\"",
        "\"DOCUMENT_FREEZE\"",
        "\"cs-bg-document-freeze\"",
        "\"DOCUMENT_RESUME\"",
        "\"cs-bg-document-resume\"",
        "\"LOG\"",
        "\"debug-cs-bg-log\"",
        "\"EXPORT_CSS_RESPONSE\"",
        "\"cs-ui-export-css-response\"",
        "\"EXPORT_CSS\"",
        "\"ui-cs-export-css\"",
        "\"undefined\"",
        "${brand.brand.toLowerCase()} ${brand.version}",
        "\" \"",
        "\"some useragent\"",
        "\"string\"",
        "\"some platform\"",
        "\"chrome\"",
        "\"chromium\"",
        "\"firefox\"",
        "\"thunderbird\"",
        "\"librewolf\"",
        "\"safari\"",
        "\"win\"",
        "\"mac\"",
        "\"mobile\"",
        "\"function\"",
        "\"function\"",
        "\"function\"",
        "\"function\"",
        "\"\"",
        "\"\"",
        "\":defined\"",
        "\"undefined\"",
        "\"div\"",
        "\"object\"",
        "\"string\"",
        "\"style\"",
        "\"color-scheme: dark\"",
        "\"dark\"",
        "${origin}/",
        "\"omit\"",
        "\"force-cache\"",
        "\"text/css\"",
        "\"moz-extension://\"",
        "\".css\"",
        "\"Content-Type\"",
        "Mime type mismatch when loading ${url}",
        "Unable to load ${url} ${response.status} ${response.statusText}",
        "\"Embedded Dark Reader cannot access a cross-origin resource\"",
        "\"Overview your URLs and CORS policies or use\"",
        "\"`DarkReader.setFetchMethod(fetch: (url) => Promise<Response>))`.\"",
        "\"See if using `DarkReader.setFetchMethod(window.fetch)`\"",
        "\"before `DarkReader.enable()` works.\"",
        "\" \"",
        "\"data-url\"",
        "\"function\"",
        "\"function\"",
        "\"cssFilter\"",
        "\"cssFilter\"",
        "\"svgFilter\"",
        "\"svgFilter\"",
        "\"staticTheme\"",
        "\"staticTheme\"",
        "\"dynamicTheme\"",
        "\"dynamicTheme\"",
        "\"NONE\"",
        "\"\"",
        "\"TIME\"",
        "\"time\"",
        "\"SYSTEM\"",
        "\"system\"",
        "\"LOCATION\"",
        "\"location\"",
        "\"#181a1b\"",
        "\"#e8e6e3\"",
        "\"#dcdad7\"",
        "\"#181a1b\"",
        "\"Helvetica Neue\"",
        "\"Segoe UI\"",
        "\"Open Sans\"",
        "\"\"",
        "\"\"",
        "\"auto\"",
        "\"Default\"",
        "\"Default\"",
        "\"*.officeapps.live.com\"",
        "\"*.sharepoint.com\"",
        "\"docs.google.com\"",
        "\"onedrive.live.com\"",
        "\"\\\\$&\"",
        "\"(\"",
        "\")\"",
        "\"a\"",
        "${$url}${$base ? `;${$base}` : \"\"}",
        ";${$base}",
        "\"\"",
        "${location.protocol}${$relative}",
        "\"data:\"",
        "\"pre\"",
        "\"pre *\"",
        "\"code\"",
        "'[aria-hidden=\"true\"]'",
        "'[class*=\"fa-\"]'",
        "\".fa\"",
        "\".fab\"",
        "\".fad\"",
        "\".fal\"",
        "\".far\"",
        "\".fas\"",
        "\".fass\"",
        "\".fasr\"",
        "\".fat\"",
        "\".icofont\"",
        "'[style*=\"font-\"]'",
        "'[class*=\"icon\"]'",
        "'[class*=\"Icon\"]'",
        "'[class*=\"symbol\"]'",
        "'[class*=\"Symbol\"]'",
        "\".glyphicon\"",
        "'[class*=\"material-symbol\"]'",
        "'[class*=\"material-icon\"]'",
        "\"mu\"",
        "'[class*=\"mu-\"]'",
        "\".typcn\"",
        "'[class*=\"vjs-\"]'",
        "*:not(${excludedSelectors.join(\", \")}) {",
        "\", \"",
        "font-family: ${config.fontFamily} !important;",
        "-webkit-text-stroke: ${config.textStroke}px !important;",
        "text-stroke: ${config.textStroke}px !important;",
        "\"}\"",
        "\"\\n\"",
        "\"light\"",
        "\"light\"",
        "\"dark\"",
        "\"dark\"",
        "\"invert(100%) hue-rotate(180deg)\"",
        "brightness(${config.brightness}%)",
        "contrast(${config.contrast}%)",
        "grayscale(${config.grayscale}%)",
        "sepia(${config.sepia}%)",
        "\" \"",
        "\" \"",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\"",
        "\"(prefers-color-scheme: dark)\"",
        "\"calc(\"",
        "\".\"",
        "rgba(${toFixed(r)}, ${toFixed(g)}, ${toFixed(b)}, ${toFixed(a, 2)})",
        "rgb(${toFixed(r)}, ${toFixed(g)}, ${toFixed(b)})",
        "#${(a != null && a < 1\n            ? [r, g, b, Math.round(a * 255)]\n            : [r, g, b]\n        )\n            .map((x) => {\n                return `${x < 16 ? \"0\" : \"\"}${x.toString(16)}`;\n            })\n            .join(\"\")}",
        "${x < 16 ? \"0\" : \"\"}${x.toString(16)}",
        "\"0\"",
        "\"\"",
        "\"\"",
        "hsla(${toFixed(h)}, ${toFixed(s * 100)}%, ${toFixed(l * 100)}%, ${toFixed(a, 2)})",
        "hsl(${toFixed(h)}, ${toFixed(s * 100)}%, ${toFixed(l * 100)}%)",
        "\"color\"",
        "\"color-mix\"",
        "\"hwb\"",
        "\"lab\"",
        "\"lch\"",
        "\"oklab\"",
        "\"oklch\"",
        "\"(from \"",
        "\"rgb(#\"",
        "\"rgba(#\"",
        "\"transparent\"",
        "\")\"",
        "\"(\"",
        "\"light-dark(\"",
        "\")\"",
        "\"(\"",
        "\"0\"",
        "\"9\"",
        "\".\"",
        "\"+\"",
        "\"-\"",
        "\" \"",
        "\",\"",
        "\"/\"",
        "\"%\"",
        "\"%\"",
        "\"deg\"",
        "\"rad\"",
        "\"turn\"",
        "${h[i]}${h[i]}",
        "${h[3]}${h[3]}",
        "\"calc(\"",
        "\"%\"",
        "\"%\"",
        "\"\"",
        "\"%\"",
        "\"\"",
        "\"ActiveBorder\"",
        "\"ActiveCaption\"",
        "\"AppWorkspace\"",
        "\"Background\"",
        "\"ButtonFace\"",
        "\"ButtonHighlight\"",
        "\"ButtonShadow\"",
        "\"ButtonText\"",
        "\"CaptionText\"",
        "\"GrayText\"",
        "\"Highlight\"",
        "\"HighlightText\"",
        "\"InactiveBorder\"",
        "\"InactiveCaption\"",
        "\"InactiveCaptionText\"",
        "\"InfoBackground\"",
        "\"InfoText\"",
        "\"Menu\"",
        "\"MenuText\"",
        "\"Scrollbar\"",
        "\"ThreeDDarkShadow\"",
        "\"ThreeDFace\"",
        "\"ThreeDHighlight\"",
        "\"ThreeDLightShadow\"",
        "\"ThreeDShadow\"",
        "\"Window\"",
        "\"WindowFrame\"",
        "\"WindowText\"",
        "\"-webkit-focus-ring-color\"",
        "\"canvas\"",
        "\"2d\"",
        "rgba(${d[0]}, ${d[1]}, ${d[2]}, ${(d[3] / 255).toFixed(2)})",
        "\"0\"",
        "\"\"",
        "\"randomUUID\"",
        "\"getRandomValues\"",
        "\"\"",
        "\"visibilitychange\"",
        "\"pageshow\"",
        "\"focus\"",
        "\"visibilitychange\"",
        "\"pageshow\"",
        "\"focus\"",
        "\"Unable to watch for node position: parent element not found\"",
        "\"prev-sibling\"",
        "\"Unable to watch for node position: there is no previous sibling\"",
        "Node position watcher paused: retry in ${RETRY_TIMEOUT}ms",
        "\"head\"",
        "\"Sibling moved, moving node to the head end\"",
        "\"prev-sibling\"",
        "\"Unable to restore node position: sibling was removed\"",
        "\"Style was moved to another parent\"",
        "\"head\"",
        "\"Restoring node position\"",
        "\"head\"",
        "\"prev-sibling\"",
        "\"surfingkeys_hints_host\"",
        "\"complete\"",
        "\"interactive\"",
        "\"complete\"",
        "\"readystatechange\"",
        "\"readystatechange\"",
        "\"screen\"",
        "\"all\"",
        "\"(\"",
        "\"print\"",
        "\"speech\"",
        "CSSRule type not supported",
        "\"background\"",
        "\"border\"",
        "\"border-color\"",
        "\"border-bottom\"",
        "\"border-left\"",
        "\"border-right\"",
        "\"border-top\"",
        "\"outline\"",
        "\"outline-color\"",
        "${prop}:\\\\s*(.*?)\\\\s*;",
        "\"var(\"",
        "\"var(\"",
        "\"background-color: ;\"",
        "\"background\"",
        "\"background\"",
        "\"border-\"",
        "\"-color: ;\"",
        "\"border\"",
        "\"border\"",
        "\"\\\\s*\"",
        "\"::?\"",
        "${escapedSelector}\\\\s*{[^}]*${shorthand}:\\\\s*([^;}]+)",
        "\"background\"",
        "\"background-color\"",
        "\"#ffffff\"",
        "\"\"",
        "\"$1\"",
        "\"$1\"",
        "\"$1\"",
        "\"$1\"",
        "${cssURL.origin}${cssURL.pathname.replace(/\\?.*$/, \"\").replace(/(\\/)([^\\/]+)$/i, \"$1\")}",
        "\"\"",
        "\"$1\"",
        "\"'\"",
        "\"\\\\'\"",
        "url('${escapedURL}')",
        "\"Not able to replace relative URL with Absolute URL, skipping\"",
        "\"\"",
        "\"gradient\"",
        "\"conic-\"",
        "\"radial-\"",
        "\"linear-\"",
        "\"gradient\"",
        "\"repeating\"",
        "repeating-${possibleType}gradient",
        "\"-webkit\"",
        "-webkit-${possibleType}gradient",
        "${possibleType}gradient",
        "\"__darkreader__imageDetails_v2_list\"",
        "\"__darkreader__imageDetails_v2_\"",
        "\"__darkreader__cssFetch_\"",
        "\"https://\"",
        "${STORAGE_KEY_IMAGE_DETAILS_PREFIX}${url}",
        "\"https://\"",
        "${STORAGE_KEY_IMAGE_DETAILS_PREFIX}${url}",
        "${STORAGE_KEY_CSS_FETCH_PREFIX}${url}",
        "${STORAGE_KEY_CSS_FETCH_PREFIX}${url}",
        "\" \"",
        "\" \"",
        "\"data:\"",
        "\"data:image/svg+xml\"",
        "\"\"",
        "\"data-url\"",
        "Unable to create image bitmap for type ${blob.type}: ${String(err)}",
        "Unable to load image ${url}",
        "\"canvas\"",
        "\"2d\"",
        "\"Image is empty\"",
        "\"__darkreader__inlineScriptsAllowed\"",
        "\"__darkreader__blobURLCheckResponse\"",
        "\"__darkreader__blobURLCheckRequest\"",
        "\"blob\"",
        "\"securitypolicyviolation\"",
        "\"securitypolicyviolation\"",
        "\"data:image/svg+xml\"",
        "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"${width}\" height=\"${height}\">",
        "\"<defs>\"",
        "'<filter id=\"darkreader-image-filter\">'",
        "<feColorMatrix type=\"matrix\" values=\"${matrix}\" />",
        "\"</filter>\"",
        "\"</defs>\"",
        "<image width=\"${width}\" height=\"${height}\" filter=\"url(#darkreader-image-filter)\" xlink:href=\"${dataURL}\" />",
        "\"</svg>\"",
        "\"\"",
        "data:image/svg+xml;base64,${btoa(svg)}",
        "\"image/svg+xml\"",
        "\"<\"",
        "\"&lt;\"",
        "\">\"",
        "\"&gt;\"",
        "\"&\"",
        "\"&amp;\"",
        "\"'\"",
        "\"&apos;\"",
        "'\"'",
        "\"&quot;\"",
        "\":\"",
        "\";\"",
        "\",\"",
        "\"base64\"",
        "\"background\"",
        "\"text\"",
        "\"border\"",
        "var(${registered[type].variable}, ${registered[type].value})",
        "--darkreader-${type}-${hex.replace(\"#\", \"\")}",
        "\"#\"",
        "\"\"",
        "\"darkSchemeBackgroundColor\"",
        "\"lightSchemeBackgroundColor\"",
        "\"darkSchemeTextColor\"",
        "\"lightSchemeTextColor\"",
        "\"r\"",
        "\"g\"",
        "\"b\"",
        "\"a\"",
        "\"mode\"",
        "\"brightness\"",
        "\"contrast\"",
        "\"grayscale\"",
        "\"sepia\"",
        "\"darkSchemeBackgroundColor\"",
        "\"darkSchemeTextColor\"",
        "\"lightSchemeBackgroundColor\"",
        "\"lightSchemeTextColor\"",
        "\"\"",
        "${rgb[key]};",
        "${theme[key]};",
        "\"background\"",
        "\"text\"",
        "\"border\"",
        "\"--\"",
        "\"var(\"",
        "\"color-scheme\"",
        "\"scrollbar-color\"",
        "\"color\"",
        "\"-webkit-print-color-adjust\"",
        "\"fill\"",
        "\"stroke\"",
        "\"stop-color\"",
        "\"border\"",
        "\"border-color\"",
        "\"initial\"",
        "\"0px\"",
        "\"none\"",
        "\"background-image\"",
        "\"list-style-image\"",
        "\"shadow\"",
        "\", \"",
        "\"calendar.google.com\"",
        "\"html {\"",
        "background-color: ${modifyBackgroundColor({r: 255, g: 255, b: 255}, theme)} !important;",
        "\"}\"",
        "\"\"",
        "\"html, body\"",
        "\"input, textarea, select, button, dialog\"",
        "\"\"",
        "${bgSelectors} {",
        "background-color: ${modifyBackgroundColor({r: 255, g: 255, b: 255}, theme)};",
        "\"}\"",
        "${joinSelectors(\"html, body\", styleSystemControls ? \"input, textarea, select, button\" : \"\")} {",
        "\"html, body\"",
        "\"input, textarea, select, button\"",
        "\"\"",
        "border-color: ${modifyBorderColor({r: 76, g: 76, b: 76}, theme)};",
        "color: ${modifyForegroundColor({r: 0, g: 0, b: 0}, theme)};",
        "\"}\"",
        "\"a {\"",
        "color: ${modifyForegroundColor({r: 0, g: 64, b: 255}, theme)};",
        "\"}\"",
        "\"table {\"",
        "border-color: ${modifyBorderColor({r: 128, g: 128, b: 128}, theme)};",
        "\"}\"",
        "\"mark {\"",
        "color: ${modifyForegroundColor({r: 0, g: 0, b: 0}, theme)};",
        "\"}\"",
        "\"::placeholder {\"",
        "color: ${modifyForegroundColor({r: 169, g: 169, b: 169}, theme)};",
        "\"}\"",
        "\"input:-webkit-autofill,\"",
        "\"textarea:-webkit-autofill,\"",
        "\"select:-webkit-autofill {\"",
        "background-color: ${modifyBackgroundColor({r: 250, g: 255, b: 189}, theme)} !important;",
        "color: ${modifyForegroundColor({r: 0, g: 0, b: 0}, theme)} !important;",
        "\"}\"",
        "\"@layer {\"",
        "\"}\"",
        "\"\\n\"",
        "\"auto\"",
        "\"#FFF\"",
        "\"#000\"",
        "\"::selection\"",
        "\"::-moz-selection\"",
        "${selection} {",
        "background-color: ${backgroundColorSelection} !important;",
        "color: ${foregroundColorSelection} !important;",
        "\"}\"",
        "\"\\n\"",
        "\"auto\"",
        "* {",
        "scrollbar-color: ${colorThumb} ${colorTrack};",
        "}",
        "\"\\n\"",
        "html, body, ${strict ? \"body :not(iframe)\" : \"body > :not(iframe)\"} {",
        "\"body :not(iframe)\"",
        "\"body > :not(iframe)\"",
        "background-color: ${modifyBackgroundColor({r: 255, g: 255, b: 255}, theme)} !important;",
        "border-color: ${modifyBorderColor({r: 64, g: 64, b: 64}, theme)} !important;",
        "color: ${modifyForegroundColor({r: 0, g: 0, b: 0}, theme)} !important;",
        "\"}\"",
        "div[style*=\"background-color: rgb(135, 135, 135)\"] {",
        "background-color: #878787 !important;",
        "\"}\"",
        "\"\\n\"",
        "\"inherit\"",
        "\"transparent\"",
        "\"initial\"",
        "\"currentcolor\"",
        "\"none\"",
        "\"unset\"",
        "\"auto\"",
        "\"Couldn't parse color\"",
        "\"background\"",
        "\"none\"",
        "\"none\"",
        "\"none\"",
        "\"mask-image\"",
        "\"mask-image\"",
        "\"none\"",
        "\"border\"",
        "\"outline\"",
        "\"*\"",
        "\"^\"",
        "\"$\"",
        "\"class\"",
        "\"gradient\"",
        "\"url\"",
        "\" \"",
        "${modifyGradientColor(rgb, theme)} ${part.substring(space + 1)}",
        "${colorStopMatch[1]}(${colorStopMatch[2] ? `${colorStopMatch[2]}, ` : \"\"}${modifyGradientColor(rgb, theme)})",
        "${colorStopMatch[2]},",
        "\"\"",
        "${typeGradient}(${parts.map((modify) => modify(theme)).join(\", \")})${hasComma ? \", \" : \"\"}",
        "\", \"",
        "\", \"",
        "\"\"",
        "\"url('')\"",
        "\"::before\"",
        "\"::before\"",
        "\"\"",
        "\"::after\"",
        "\"::after\"",
        "\"\"",
        "\"data:\"",
        "url(\"${blobURL}\")",
        "url(\"${url}\")",
        "\"data:\"",
        "\"data:\"",
        "Hiding large light image ${logSrc}",
        "\"none\"",
        "Inverting dark image ${logSrc}",
        "url(\"${inverted}\")",
        "Dimming light image ${logSrc}",
        "url(\"${dimmed}\")",
        "Applying filter to image ${logSrc}",
        "url(\"${filtered}\")",
        "Not modifying the image ${logSrc}",
        "\",\"",
        "\"url\"",
        "\"gradient\"",
        "\"\"",
        "\"\"",
        "\", initial\"",
        "Unable to parse gradient ${value}",
        "${value.substring(prefixIndex, matchIndex)}${modifyShadowColor(rgb, theme)}${i === colorMatches.length - 1 ? value.substring(matchEnd) : \"\"}",
        "\"\"",
        "\"\"",
        "Unable to parse shadow ${value}",
        "\"Couldn't parse color\"",
        "${modifyForegroundColor(thumb, theme)} ${modifyBackgroundColor(thumb, theme)}",
        "\"dark light\"",
        "\"dark\"",
        "\"#ffffff\"",
        "\"#000000\"",
        "\"function\"",
        "\"background\"",
        "\"#ffffff\"",
        "\"#000000\"",
        "\"background-color\"",
        "\"background\"",
        "\"255, 255, 255\"",
        "\"#ffffff\"",
        "\"0, 0, 0\"",
        "\"#000000\"",
        "\"background\"",
        "\"background-image\"",
        "\"box-shadow\"",
        "\"box-shadow\"",
        "\"border\"",
        "\"outline\"",
        "\"style\"",
        "\"--\"",
        "\"url(\"",
        "\"linear-gradient(\"",
        "\"radial-gradient(\"",
        "\"background-color\"",
        "\"box-shadow\"",
        "\"border\"",
        "\"outline\"",
        "\"background\"",
        "\"background-image\"",
        "\":root {\"",
        "${property}: ${value};",
        "\"}\"",
        "\"\\n\"",
        "\"var(\"",
        "\"\"",
        "\",\"",
        "\"\"",
        "var(${newName}, ${finalFallback})",
        "var(${newName})",
        "var(${newName}, ${newFallback})",
        "--darkreader-bg${name}",
        "--darkreader-text${name}",
        "--darkreader-border${name}",
        "--darkreader-bgimg${name}",
        "\"--\"",
        "\"var(\"",
        "\"color\"",
        "\"caret-color\"",
        "\"-webkit-text-fill-color\"",
        "\"fill\"",
        "\"stroke\"",
        "rgb(${match[1]}, ${match[2]}, ${match[3]})",
        "${outputInRGB.r}, ${outputInRGB.g}, ${outputInRGB.b}",
        "\"mode\"",
        "\"brightness\"",
        "\"contrast\"",
        "\"grayscale\"",
        "\"sepia\"",
        "\"darkSchemeBackgroundColor\"",
        "\"darkSchemeTextColor\"",
        "\"lightSchemeBackgroundColor\"",
        "\"lightSchemeTextColor\"",
        "\"\"",
        "${key}:${theme[key]};",
        "${rule.parentRule.media.mediaText} { ${cssText} }",
        "\"revert\"",
        "\":is(\"",
        "\":is()\"",
        "\":where()\"",
        "\":where(\"",
        "\":-moz\"",
        "\"::view-transition-\"",
        "\".darkreader-unsupported-selector\"",
        "${selectorText} {",
        "${property}: ${value}${important ? \" !important\" : \"\"};",
        "\" !important\"",
        "\"\"",
        "\" }\"",
        "\"function\"",
        "\"--\"",
        "@media ${media.mediaText} {}",
        "@layer ${name} {}",
        "\"__darkreader__inlineScriptsAllowed\"",
        "\"#__darkreader__adoptedOverride {}\"",
        "\"__darkreader__adoptedStyleSheetsChange\"",
        "\"__darkreader__adoptedStyleSheetChange\"",
        "\"__darkreader__adoptedStyleDeclarationChange\"",
        "\"insert\"",
        "\"delete\"",
        "\"replace\"",
        "\"\"",
        "\"StyleSheetCommandBuilder.replaceSync() is not fully supported\"",
        "\"delete\"",
        "\"\"",
        "\"replace\"",
        "\"\"",
        "\"background-color\"",
        "\"--darkreader-inline-bgcolor\"",
        "\"background-color\"",
        "\"data-darkreader-inline-bgcolor\"",
        "\"background-image\"",
        "\"--darkreader-inline-bgimage\"",
        "\"background-image\"",
        "\"data-darkreader-inline-bgimage\"",
        "\"border-color\"",
        "\"--darkreader-inline-border\"",
        "\"border-color\"",
        "\"data-darkreader-inline-border\"",
        "\"border-bottom-color\"",
        "\"--darkreader-inline-border-bottom\"",
        "\"border-bottom-color\"",
        "\"data-darkreader-inline-border-bottom\"",
        "\"border-left-color\"",
        "\"--darkreader-inline-border-left\"",
        "\"border-left-color\"",
        "\"data-darkreader-inline-border-left\"",
        "\"border-right-color\"",
        "\"--darkreader-inline-border-right\"",
        "\"border-right-color\"",
        "\"data-darkreader-inline-border-right\"",
        "\"border-top-color\"",
        "\"--darkreader-inline-border-top\"",
        "\"border-top-color\"",
        "\"data-darkreader-inline-border-top\"",
        "\"box-shadow\"",
        "\"--darkreader-inline-boxshadow\"",
        "\"box-shadow\"",
        "\"data-darkreader-inline-boxshadow\"",
        "\"color\"",
        "\"--darkreader-inline-color\"",
        "\"color\"",
        "\"data-darkreader-inline-color\"",
        "\"fill\"",
        "\"--darkreader-inline-fill\"",
        "\"fill\"",
        "\"data-darkreader-inline-fill\"",
        "\"stroke\"",
        "\"--darkreader-inline-stroke\"",
        "\"stroke\"",
        "\"data-darkreader-inline-stroke\"",
        "\"outline-color\"",
        "\"--darkreader-inline-outline\"",
        "\"outline-color\"",
        "\"data-darkreader-inline-outline\"",
        "\"stop-color\"",
        "\"--darkreader-inline-stopcolor\"",
        "\"stop-color\"",
        "\"data-darkreader-inline-stopcolor\"",
        "\"background\"",
        "\"--darkreader-inline-bg\"",
        "\"background\"",
        "\"data-darkreader-inline-bg\"",
        "\"border\"",
        "\"--darkreader-inline-border-short\"",
        "\"border\"",
        "\"data-darkreader-inline-border-short\"",
        "\"border-bottom\"",
        "\"--darkreader-inline-border-bottom-short\"",
        "\"border-bottom\"",
        "\"data-darkreader-inline-border-bottom-short\"",
        "\"border-left\"",
        "\"--darkreader-inline-border-left-short\"",
        "\"border-left\"",
        "\"data-darkreader-inline-border-left-short\"",
        "\"border-right\"",
        "\"--darkreader-inline-border-right-short\"",
        "\"border-right\"",
        "\"data-darkreader-inline-border-right-short\"",
        "\"border-top\"",
        "\"--darkreader-inline-border-top-short\"",
        "\"border-top\"",
        "\"data-darkreader-inline-border-top-short\"",
        "\"style\"",
        "\"fill\"",
        "\"stop-color\"",
        "\"stroke\"",
        "\"bgcolor\"",
        "\"color\"",
        "\"background\"",
        "[${attr}]",
        "\", \"",
        "[${dataAttr}] {",
        "${cssProp}: var(${customProp}) !important;",
        "\"}\"",
        "\"\\n\"",
        "\"[data-darkreader-inline-invert] {\"",
        "\"    filter: invert(100%) hue-rotate(180deg);\"",
        "\"}\"",
        "\"\\n\"",
        "\"brightness\"",
        "\"contrast\"",
        "\"grayscale\"",
        "\"sepia\"",
        "\"mode\"",
        "\"class\"",
        "\"logo\"",
        "\"class\"",
        "\"logo\"",
        "${attr}=\"${el.getAttribute(attr)}\"",
        "${prop}=\"${theme[prop]}\"",
        "\" \"",
        "\"\"",
        "\"background\"",
        "\"var(--darkreader-bg--\"",
        "\"background-image\"",
        "\"none\"",
        "\"function\"",
        "\"string\"",
        "\"object\"",
        "'<style class=\"darkreader darkreader--sync\" media=\"screen\"></style>'",
        "\"\"",
        "data:image/svg+xml;base64,${btoa(svgString)}",
        "\"data-darkreader-inline-invert\"",
        "\"\"",
        "\"data-darkreader-inline-invert\"",
        "\"bgcolor\"",
        "\"bgcolor\"",
        "#${value}",
        "\"background-color\"",
        "\"background-color\"",
        "\"background\"",
        "\"background\"",
        "\"\"",
        "url(\"${url}\")",
        "\"background-image\"",
        "\"background-image\"",
        "\"color\"",
        "\"mask-icon\"",
        "\"color\"",
        "#${value}",
        "\"color\"",
        "\"color\"",
        "\"fill\"",
        "\"fill\"",
        "\"none\"",
        "\"fill\"",
        "\"background-color\"",
        "\"color\"",
        "\"fill\"",
        "\"color\"",
        "\"stop-color\"",
        "\"stop-color\"",
        "\"background-color\"",
        "\"stop-color\"",
        "\"stroke\"",
        "\"stroke\"",
        "\"stroke\"",
        "\"border-color\"",
        "\"color\"",
        "\"background-image\"",
        "\"url\"",
        "\"--\"",
        "\"var(\"",
        "\"background-color\"",
        "\"bgcolor\"",
        "\"\"",
        "\"fill\"",
        "\"color\"",
        "\"fill\"",
        "\"style\"",
        "\"--\"",
        "\"theme-color\"",
        "meta[name=\"${metaThemeColorName}\"]",
        "\"Invalid meta color\"",
        "\"\"",
        "\"__darkreader__inlineScriptsAllowed\"",
        "\"__darkreader__updateSheet\"",
        "\"__darkreader__updateSheet\"",
        "'style, link[rel*=\"stylesheet\" i]:not([disabled])'",
        "\"fonts.googleapis.com\"",
        "Couldn't construct ${element.href} as URL",
        "\"account.containerstore.com\"",
        "\"containerstore.com\"",
        "\"www.onet.pl\"",
        "\"stylesheet\"",
        "\"moz-extension://\"",
        "\"darkreader\"",
        "\"print\"",
        "\"stylus\"",
        "\".darkreader\"",
        "\".darkreader--cors\"",
        "\".darkreader--sync\"",
        "\"characterData\"",
        "\"\"",
        "\"\"",
        "\"https://fonts.googleapis.com/\"",
        "\"http\"",
        "\"[getRulesSync] cssRules is null, trying again.\"",
        "\"http://www.w3.org/2000/svg\"",
        "\"style\"",
        "\"style\"",
        "\"darkreader\"",
        "\"darkreader--sync\"",
        "\"screen\"",
        "Linkelement ${loadingLinkId} is not loaded yet and thus will be await for",
        "\"prev-sibling\"",
        "\"Detected dead-lock at details(), returning early to prevent it.\"",
        "\"\"",
        "\"prev-sibling\"",
        "\"loading\"",
        "\"Style sheet was moved multiple times\"",
        "\"Restore style\"",
        "\"load\"",
        "\"error\"",
        "Linkelement ${loadingId} couldn't be loaded. ${link.href}",
        "\"load\"",
        "\"error\"",
        "\"\"",
        "\"\"",
        "\"data:\"",
        "\"text/css\"",
        "\"text\"",
        "\"text/css\"",
        "\"{\"",
        "\"}\"",
        "\"\"",
        "\"\"",
        "\"style\"",
        "\"darkreader\"",
        "\"darkreader--cors\"",
        "\"screen\"",
        "\"__darkreader__inlineScriptsAllowed\"",
        "\"__darkreader__cleanUp\"",
        "\"__darkreader__disableConflictingPlugins\"",
        "\"darkreader\"",
        "\"__darkreader__updateSheet\"",
        "\"__darkreader__adoptedStyleSheetChange\"",
        "\"__darkreader__shadowDomAttaching\"",
        "\"addRule\"",
        "\"insertRule\"",
        "\"deleteRule\"",
        "\"removeRule\"",
        "\"replace\"",
        "\"replaceSync\"",
        "\"attachShadow\"",
        "\"baidu.com\"",
        "\".baidu.com\"",
        "\"getElementsByTagName\"",
        "\"style\"",
        "\"brilliant.org\"",
        "\"www.vy.no\"",
        "\"childNodes\"",
        "\"__darkreader__isDefined\"",
        "\"__darkreader__addUndefinedResolver\"",
        "\"define\"",
        "\"__darkreader__blobURLCheckResponse\"",
        "'<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1\" height=\"1\"><rect width=\"1\" height=\"1\" fill=\"transparent\"/></svg>'",
        "\"image/svg+xml\"",
        "\"__darkreader__blobURLCheckResponse\"",
        "\"__darkreader__blobURLCheckRequest\"",
        "\"styleSheets\"",
        "\"__darkreader__adoptedStyleSheetsChange\"",
        "\"#__darkreader__adoptedOverride\"",
        "\"length\"",
        "\"adoptedStyleSheets\"",
        "\"__darkreader__adoptedStyleDeclarationChange\"",
        "\"setProperty\"",
        "\"removeProperty\"",
        "\"-\"",
        "\"is\"",
        "\"-\"",
        "\"is\"",
        "\"recordUndefinedElement() undefined groups should not be empty\"",
        "\":not(:defined)\"",
        "\"__darkreader__inlineScriptsAllowed\"",
        "\"__darkreader__shadowDomAttaching\"",
        "\"handleIsDefined() expects lower-case node names\"",
        "\"customElementsWhenDefined() expects lower-case node names\"",
        "\"function\"",
        "\"__darkreader__addUndefinedResolver\"",
        "\":defined\"",
        "\"__darkreader__isDefined\"",
        "\"rel\"",
        "\"disabled\"",
        "\"media\"",
        "\"href\"",
        "\"__darkreader__isDefined\"",
        ".${className}",
        "\"style\"",
        "\"darkreader\"",
        "\"screen\"",
        "\"\"",
        ".${className}",
        "\"script\"",
        "\"darkreader\"",
        "\"head\"",
        "\"darkreader--fallback\"",
        "\"fallback\"",
        "\"darkreader--user-agent\"",
        "\"user-agent\"",
        "\"darkreader--text\"",
        "\"\"",
        "\"text\"",
        "\"darkreader--invert\"",
        "${fixes.invert.join(\", \")} {",
        "\", \"",
        "filter: ${getCSSFilterValue({\n                    ...theme,\n                    contrast:\n                        theme.mode === 0\n                            ? theme.contrast\n                            : clamp(theme.contrast - 10, 0, 100)\n                })} !important;",
        "\"}\"",
        "\"\\n\"",
        "\"\"",
        "\"invert\"",
        "\"darkreader--inline\"",
        "\"inline\"",
        "\"darkreader--override\"",
        "\"\"",
        "\"override\"",
        "\"darkreader--variables\"",
        "\"#ffffff\"",
        "\"#000000\"",
        ":root {",
        "--darkreader-neutral-background: ${neutralBackgroundColor};",
        "--darkreader-neutral-text: ${neutralTextColor};",
        "--darkreader-selection-background: ${selectionColors?.backgroundColorSelection ?? \"initial\"};",
        "\"initial\"",
        "--darkreader-selection-text: ${selectionColors?.foregroundColorSelection ?? \"initial\"};",
        "\"initial\"",
        "}",
        "\"\\n\"",
        "\"variables\"",
        "\"darkreader--root-vars\"",
        "\"__darkreader__cleanUp\"",
        "\"darkreader--proxy\"",
        "(${injectProxy})(${enableStyleSheetsProxy}, ${enableCustomElementRegistryProxy})",
        "\"darkreader--inline\"",
        "\"darkreader--override\"",
        "\"\"",
        "\"darkreader--invert\"",
        "${fixes.invert.join(\", \")} {",
        "\", \"",
        "filter: ${getCSSFilterValue({\n                    ...theme,\n                    contrast:\n                        theme.mode === 0\n                            ? theme.contrast\n                            : clamp(theme.contrast - 10, 0, 100)\n                })} !important;",
        "\"}\"",
        "\"\\n\"",
        "\"\"",
        "\"childList\"",
        "\"STYLE\"",
        "\"darkreader darkreader--inline\"",
        "\"darkreader darkreader--override\"",
        "\"darkreader darkreader--invert\"",
        "\"Couldn't parse CSSTemplate's color.\"",
        "\"darkreader--fallback\"",
        "\".darkreader--fallback\"",
        "\"\"",
        "\"darkreader--root-vars\"",
        "\"darkreader--root-vars\"",
        "\"__darkreader__adoptedStyleSheetCommands\"",
        "\"__darkreader__adoptedStyleSheetsChange\"",
        "\"__darkreader__adoptedStyleSheetsChange\"",
        "\"__darkreader__startAdoptedStyleSheetsWatcher\"",
        "Current amount of styles loading: ${loadingStyles.size}",
        "\"darkreader--fallback\"",
        "Removed loadingStyle ${loadingStyleId}, now awaiting: ${loadingStyles.size}",
        "DOM is ready, but still have styles being loaded.",
        "\"style\"",
        "\"\"",
        "\"--\"",
        "\"darkreader--root-vars\"",
        "'meta[name=\"darkreader-lock\"]'",
        "\"meta\"",
        "\"darkreader\"",
        "'meta[name=\"darkreader-lock\"]'",
        "'meta[name=\"darkreader\"]'",
        "'meta[name=\"darkreader\"]'",
        "\"meta\"",
        "\"darkreader-lock\"",
        "\"data-wp-dark-mode-preset\"",
        "\"__darkreader__disableConflictingPlugins\"",
        "\"wp-dark-mode-active\"",
        "\"data-wp-dark-mode-active\"",
        "\"wp-dark-mode-active\"",
        "\"data-wp-dark-mode-active\"",
        "\"class\"",
        "\"data-wp-dark-mode-active\"",
        "\"brightness\"",
        "\"contrast\"",
        "\"darkSchemeBackgroundColor\"",
        "\"darkSchemeTextColor\"",
        "\"grayscale\"",
        "\"lightSchemeBackgroundColor\"",
        "\"lightSchemeTextColor\"",
        "\"sepia\"",
        "\"data-darkreader-mode\"",
        "\"dynamic\"",
        "\"data-darkreader-scheme\"",
        "\"dark\"",
        "\"dimmed\"",
        "\".darkreader--fallback\"",
        "\"darkreader--fallback\"",
        "\"__darkreader__cleanUp\"",
        "\".darkreader--proxy\"",
        "data-darkreader-mode",
        "data-darkreader-scheme",
        "\".darkreader--fallback\"",
        "\".darkreader--user-agent\"",
        "\".darkreader--text\"",
        "\".darkreader--invert\"",
        "\".darkreader--inline\"",
        "\".darkreader--override\"",
        "\".darkreader--variables\"",
        "\".darkreader--root-vars\"",
        "'meta[name=\"darkreader\"]'",
        "\".darkreader--inline\"",
        "\".darkreader--override\"",
        "\".darkreader\"",
        "\"{\"",
        "\"}\"",
        "\"@\"",
        "\"\"",
        "\"'\"",
        "'\"'",
        "\"'\"",
        "'\"'",
        "'\"'",
        "\"'\"",
        "\"[\"",
        "\"]\"",
        "\"(\"",
        "\")\"",
        "\",\"",
        "\";\"",
        "\":\"",
        "\"!important\"",
        "\"selectors\"",
        "\"    \"",
        "${indent}${type} ${query} {",
        "${indent}${tab}",
        "${indent}}",
        "${indent}${selector}${i < lastSelectorIndex ? \",\" : \" {\"}",
        "\",\"",
        "\" {\"",
        "${indent}${tab}${property}: ${value}${important ? \" !important\" : \"\"};",
        "\" !important\"",
        "\"\"",
        "${indent}}",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "url(\"${data.shift()}\")",
        "/*\n                        _______\n                       /       \\\\\n                      .==.    .==.\n                     ((  ))==((  ))\n                    / \"==\"    \"==\"\\\\\n                   /____|| || ||___\\\\\n       ________     ____    ________  ___    ___\n       |  ___  \\\\   /    \\\\   |  ___  \\\\ |  |  /  /\n       |  |  \\\\  \\\\ /  /\\\\  \\\\  |  |  \\\\  \\\\|  |_/  /\n       |  |   )  /  /__\\\\  \\\\ |  |__/  /|  ___  \\\\\n       |  |__/  /  ______  \\\\|  ____  \\\\|  |  \\\\  \\\\\n_______|_______/__/ ____ \\\\__\\\\__|___\\\\__\\\\__|___\\\\__\\\\____\n|  ___  \\\\ |  ____/ /    \\\\   |  ___  \\\\ |  ____|  ___  \\\\\n|  |  \\\\  \\\\|  |___ /  /\\\\  \\\\  |  |  \\\\  \\\\|  |___|  |  \\\\  \\\\\n|  |__/  /|  ____/  /__\\\\  \\\\ |  |   )  |  ____|  |__/  /\n|  ____  \\\\|  |__/  ______  \\\\|  |__/  /|  |___|  ____  \\\\\n|__|   \\\\__\\\\____/__/      \\\\__\\\\_______/ |______|__|   \\\\__\\\\\n                https://darkreader.org\n*/\n\n/*! Dark reader generated CSS | Licensed under MIT https://github.com/darkreader/darkreader/blob/main/LICENSE */",
        "/* ${comment} */",
        "\"\"",
        "\".darkreader--fallback\"",
        "\"Fallback Style\"",
        "\".darkreader--user-agent\"",
        "\"User-Agent Style\"",
        "\".darkreader--text\"",
        "\"Text Style\"",
        "\".darkreader--invert\"",
        "\"Invert Style\"",
        "\".darkreader--variables\"",
        "\"Variables Style\"",
        "\".darkreader--sync\"",
        "\"\\n\"",
        "\"/* Modified CSS */\"",
        "\"\"",
        "\".darkreader--override\"",
        "\"Override Style\"",
        "\"\\n\"",
        "\"Theme engine is not supported.\"",
        "\"function\"",
        "\"(prefers-color-scheme: dark)\"",
        "\"change\"",
        "\"change\"",
        "\"__esModule\""
    ],
    "variables": [
        "MessageTypeUItoBG",
        "MessageTypeBGtoUI",
        "DebugMessageTypeBGtoUI",
        "MessageTypeBGtoCS",
        "DebugMessageTypeBGtoCS",
        "MessageTypeCStoBG",
        "DebugMessageTypeCStoBG",
        "MessageTypeCStoUI",
        "MessageTypeUItoCS",
        "isNavigatorDefined",
        "userAgent",
        "platform",
        "isChromium",
        "isFirefox",
        "isSafari",
        "isWindows",
        "isMacOS",
        "isShadowDomSupported",
        "isMatchMediaChangeEventListenerSupported",
        "isLayerRuleSupported",
        "m",
        "m",
        "isDefinedSelectorSupported",
        "isCSSColorSchemePropSupported",
        "el",
        "credentials",
        "response",
        "response",
        "response",
        "blob",
        "dataURL",
        "reader",
        "response",
        "throwCORSError",
        "fetcher",
        "throwCORSError",
        "messageListeners",
        "response",
        "text",
        "nativeSendMessage",
        "nativeAddListener",
        "ThemeEngine",
        "AutomationMode",
        "DEFAULT_COLORS",
        "DEFAULT_THEME",
        "filterModeSites",
        "engine",
        "matches",
        "m",
        "matches",
        "m",
        "len",
        "hash",
        "i",
        "c",
        "indexOf",
        "input",
        "depth",
        "firstOpenIndex",
        "i",
        "searchStartIndex",
        "openIndex",
        "closeIndex",
        "openIndex",
        "i",
        "exclusion",
        "parts",
        "commaIndex",
        "currIndex",
        "anchor",
        "parsedURLCache",
        "key",
        "parsedURL",
        "parsedURL",
        "b",
        "a",
        "url",
        "excludedSelectors",
        "lines",
        "i",
        "len",
        "results",
        "i",
        "len",
        "result",
        "i",
        "len",
        "j",
        "len2",
        "sum",
        "k",
        "len3",
        "m",
        "r",
        "g",
        "b",
        "rgb",
        "result",
        "Matrix",
        "t",
        "FilterMode",
        "filters",
        "rpnStack",
        "workingStack",
        "lastToken",
        "i",
        "len",
        "token",
        "op",
        "currentOp",
        "stack",
        "i",
        "len",
        "op",
        "args",
        "operators",
        "isSystemDarkModeEnabled",
        "hslaParseCache",
        "rgbaParseCache",
        "color",
        "rgb",
        "hsl",
        "r",
        "b",
        "g",
        "c",
        "x",
        "m",
        "r",
        "g",
        "b",
        "r255",
        "g255",
        "b255",
        "r",
        "g",
        "b",
        "max",
        "min",
        "c",
        "l",
        "h",
        "s",
        "dot",
        "zerosMatch",
        "rgb",
        "hsl",
        "rgbMatch",
        "hslMatch",
        "hexMatch",
        "supportedColorFuncs",
        "c",
        "match",
        "schemeColor",
        "numbers",
        "prevPos",
        "isMining",
        "startIndex",
        "i",
        "c",
        "raw",
        "unitsList",
        "numbers",
        "n",
        "unit",
        "u",
        "rgbRange",
        "rgbUnits",
        "r",
        "g",
        "b",
        "hslRange",
        "hslUnits",
        "h",
        "s",
        "l",
        "h",
        "r",
        "g",
        "b",
        "a",
        "r",
        "g",
        "b",
        "a",
        "n",
        "n",
        "searchIndex",
        "replaceBetweenIndices",
        "includesPercentage",
        "output",
        "knownColors",
        "systemColors",
        "key",
        "value",
        "canvas$1",
        "context$1",
        "d",
        "color",
        "pending",
        "frameId",
        "lastArgs",
        "throttled",
        "cancel",
        "tasks",
        "frameId",
        "task",
        "delayTokens",
        "uuid",
        "documentVisibilityListener",
        "documentIsVisible_",
        "listenerOptions",
        "alreadyWatching",
        "duration",
        "MAX_ATTEMPTS_COUNT",
        "RETRY_TIMEOUT",
        "ATTEMPTS_INTERVAL",
        "prevSibling",
        "parent",
        "attempts",
        "start",
        "timeoutId",
        "restore",
        "now",
        "observer",
        "run",
        "stop",
        "skip",
        "updateParent",
        "walker",
        "node",
        "isDOMReady",
        "readyStateListeners",
        "readyStateCompleteListeners",
        "onReadyStateChange",
        "HUGE_MUTATIONS_COUNT",
        "addedNodesCount",
        "i",
        "additions",
        "deletions",
        "moves",
        "duplicateAdditions",
        "duplicateDeletions",
        "optimizedTreeObservers",
        "optimizedTreeCallbacks",
        "observer",
        "observerCallbacks",
        "domReadyListener",
        "hadHugeMutationsBefore",
        "subscribedForReadyState",
        "elementsOperations",
        "media",
        "isScreenOrAllOrQuery",
        "isPrintOrSpeech",
        "shorthandVarDependantProperties",
        "shorthandVarDepPropRegexps",
        "regexp",
        "value",
        "cssText",
        "prop",
        "regexp",
        "match",
        "val",
        "val",
        "parentRule",
        "sourceCSSText",
        "escapedSelector",
        "regexp",
        "match",
        "cssURLRegex",
        "cssImportRegex",
        "cssURL",
        "url",
        "absoluteURL",
        "escapedURL",
        "fontFaceRegex",
        "styleRules",
        "importRules",
        "mediaRules",
        "supportsRules",
        "layerRules",
        "sheetsScopes",
        "node",
        "gradientLength",
        "conicGradient",
        "conicGradientLength",
        "radialGradient",
        "linearGradient",
        "result",
        "index",
        "startIndex",
        "typeGradient",
        "possibleGradient",
        "match",
        "STORAGE_KEY_IMAGE_DETAILS_LIST",
        "STORAGE_KEY_IMAGE_DETAILS_PREFIX",
        "STORAGE_KEY_CSS_FETCH_PREFIX",
        "imageCacheTimeout",
        "imageDetailsCacheQueue",
        "cachedImageUrls",
        "json",
        "jsonList",
        "json",
        "details",
        "key",
        "key",
        "MAX_FRAME_DURATION",
        "start",
        "cb",
        "resolvers$1",
        "rejectors",
        "id",
        "resolve",
        "reject",
        "imageManager",
        "dataURL",
        "blob",
        "image",
        "analysis",
        "parsedURL",
        "INCOMPLETE_DOC_LOADING_IMAGE_LIMIT",
        "loadingImagesCount",
        "image",
        "MAX_ANALYSIS_PIXELS_COUNT",
        "canvas",
        "context",
        "maxWidth",
        "MAX_ANALYSIS_PIXELS_COUNT",
        "maxHeight",
        "MAX_ANALYSIS_PIXELS_COUNT",
        "LARGE_IMAGE_PIXELS_COUNT",
        "sw",
        "sh",
        "isLarge",
        "sourcePixelsCount",
        "k",
        "width",
        "height",
        "imageData",
        "d",
        "TRANSPARENT_ALPHA_THRESHOLD",
        "DARK_LIGHTNESS_THRESHOLD",
        "LIGHT_LIGHTNESS_THRESHOLD",
        "transparentPixelsCount",
        "darkPixelsCount",
        "lightPixelsCount",
        "i",
        "x",
        "y",
        "r",
        "g",
        "b",
        "a",
        "l",
        "totalPixelsCount",
        "opaquePixelsCount",
        "DARK_IMAGE_THRESHOLD",
        "LIGHT_IMAGE_THRESHOLD",
        "TRANSPARENT_IMAGE_THRESHOLD",
        "isBlobURLSupported",
        "canUseProxy",
        "blobURLCheckRequested",
        "blobURLCheckAwaiters",
        "objectURLs",
        "matrix",
        "svg",
        "i",
        "blob",
        "objectURL",
        "xmlEscapeChars",
        "dataURLBlobURLs",
        "colonIndex",
        "semicolonIndex",
        "commaIndex",
        "encoding",
        "mediaType",
        "characters",
        "i",
        "hash",
        "blobURL",
        "blob",
        "response",
        "variablesSheet",
        "registeredColors",
        "types",
        "hex",
        "registered",
        "hex",
        "registered",
        "parsed",
        "variable",
        "background",
        "border",
        "text",
        "isDarkScheme",
        "prop",
        "isDarkScheme",
        "prop",
        "colorModificationCache",
        "rgbCacheKeys",
        "themeCacheKeys$1",
        "resultId",
        "fnCache",
        "id",
        "hsl",
        "pole",
        "anotherPole",
        "modified",
        "matrix",
        "rf",
        "gf",
        "bf",
        "color",
        "registered",
        "value",
        "poleBg",
        "poleFg",
        "isDark",
        "isNeutral",
        "isBlue",
        "hx",
        "h",
        "sx",
        "l",
        "lx",
        "MAX_BG_LIGHTNESS",
        "isDark",
        "isBlue",
        "isNeutral",
        "lx",
        "hx",
        "sx",
        "lx",
        "hx",
        "sx",
        "hx",
        "h",
        "isYellow",
        "isCloserToGreen",
        "pole",
        "MIN_FG_LIGHTNESS",
        "isLight",
        "isNeutral",
        "isBlue",
        "lx",
        "hx",
        "sx",
        "hx",
        "h",
        "hx",
        "sx",
        "lx",
        "hx",
        "h",
        "lx",
        "pole",
        "isDark",
        "isNeutral",
        "hx",
        "h",
        "sx",
        "s",
        "lx",
        "poleFg",
        "poleBg",
        "modifier",
        "borderSideProp",
        "borderSideVal",
        "hostsWithOddScrollbars",
        "lines",
        "bgSelectors",
        "backgroundColorSelection",
        "foregroundColorSelection",
        "rgb",
        "hsl",
        "lines",
        "modifiedSelectionColor",
        "backgroundColorSelection",
        "foregroundColorSelection",
        "colorTrack",
        "colorThumb",
        "rgb",
        "hsl",
        "darken",
        "factory",
        "defaultFallbackFactory",
        "lines",
        "unparsableColors",
        "rgb",
        "imageDetailsCache",
        "awaitingForImageLoading",
        "didTryLoadCache",
        "ruleSelectors",
        "i",
        "ignoredSelector",
        "beginning",
        "ending",
        "imageSelectorQueue",
        "imageSelectorValues",
        "imageSelectorNodeQueue",
        "imageSelectorQueueFrameId",
        "classObserver",
        "selector",
        "callbacks",
        "gradients",
        "urls",
        "getIndices",
        "index",
        "valueIndex",
        "matches",
        "getGradientModifier",
        "gradient",
        "partsRegex",
        "colorStopRegex",
        "parts",
        "rgb",
        "space",
        "colorStopMatch",
        "getURLModifier",
        "url",
        "isURLEmpty",
        "rule",
        "ownerNode",
        "scope",
        "baseURL",
        "selector",
        "imageDetails",
        "awaiters",
        "bgImageValue",
        "blobURL",
        "getBgImageValue",
        "imageDetails",
        "result",
        "logSrc",
        "inverted",
        "dimmed",
        "filtered",
        "modifiers",
        "matchIndex",
        "prevHasComma",
        "matchStart",
        "index",
        "prefixStart",
        "matchIndex",
        "matchEnd",
        "betweenValue",
        "results",
        "combinedResult",
        "index",
        "colorMatches",
        "notParsed",
        "modifiers",
        "prefixIndex",
        "index",
        "matchIndex",
        "matchEnd",
        "rgb",
        "modified",
        "shadowModifier",
        "colorsMatch",
        "thumb",
        "track",
        "VAR_TYPE_BG_COLOR",
        "VAR_TYPE_TEXT_COLOR",
        "VAR_TYPE_BORDER_COLOR",
        "VAR_TYPE_BG_IMG",
        "hasColor",
        "options",
        "getDeclarations",
        "declarations",
        "addModifiedValue",
        "property",
        "modifiedValue",
        "value",
        "property",
        "modifiedValue",
        "sourceValue",
        "bgModifier",
        "callbacks",
        "addListener",
        "callback",
        "decs",
        "removeListeners",
        "isConstructedColor",
        "isSimpleConstructedColor",
        "isBg",
        "isText",
        "value",
        "modifier",
        "defaultFallback",
        "defaultFallback",
        "unknownVars",
        "modify",
        "variableReplaced",
        "shadowModifier",
        "modifiedShadow",
        "modified",
        "isFallbackResolved",
        "callback",
        "newValue",
        "rootStore",
        "isColor",
        "initialType",
        "currentType",
        "newType",
        "isBgColor",
        "varDeps",
        "result",
        "refs",
        "found",
        "sheet",
        "declarations",
        "cssLines",
        "property",
        "value",
        "cssText",
        "variablesStore",
        "start",
        "ranges",
        "i",
        "matches",
        "matchesCount",
        "inputLength",
        "replacements",
        "parts",
        "i",
        "start",
        "end",
        "commaIndex",
        "name",
        "fallback",
        "matchReplacer",
        "newName",
        "newFallback",
        "textColorProps",
        "rawRGBSpaceRegex",
        "rawRGBCommaRegex",
        "match",
        "color",
        "rgb",
        "outputColor",
        "outputInRGB",
        "containsUnresolvedVar",
        "matchReplacer",
        "stack",
        "varValue",
        "inserted",
        "replaced",
        "themeCacheKeys",
        "resultKey",
        "asyncQueue",
        "renderId",
        "cssText",
        "rulesTextCache",
        "rulesModCache",
        "varTypeChangeCleaners",
        "prevFilterKey",
        "hasNonLoadedLink",
        "wasRebuilt",
        "rules",
        "options",
        "rulesChanged",
        "notFoundCacheKeys",
        "themeKey",
        "themeChanged",
        "modRules",
        "hash",
        "textDiffersFromPrev",
        "modDecs",
        "mod",
        "modRule",
        "parentRule",
        "rule",
        "selectorText",
        "selector",
        "emptyIsWhereSelector",
        "viewTransitionSelector",
        "ruleText",
        "dec",
        "asyncDeclarations",
        "varDeclarations",
        "asyncDeclarationCounter",
        "varDeclarationCounter",
        "rootReadyGroup",
        "groupRefs",
        "group",
        "parentGroup",
        "group",
        "readyStyleRule",
        "readyDeclarations",
        "asyncKey",
        "asyncDeclaration",
        "currentRenderId",
        "renderId",
        "varDecs",
        "modified",
        "varKey",
        "currentRenderId",
        "renderId",
        "initialIndex",
        "oldDecs",
        "tempDec",
        "readyDec",
        "readyVarDecs",
        "index",
        "modified",
        "sheet",
        "group",
        "rule",
        "index",
        "rule",
        "index",
        "t",
        "index",
        "canUseSheetProxy$1",
        "overrides$1",
        "overridesBySource",
        "cancelAsyncOperations",
        "newSheets",
        "sheetIndex",
        "overrideIndex",
        "newSheets",
        "i",
        "sheet",
        "cleaners",
        "rulesChangeKey",
        "count",
        "rule",
        "sourceSheets",
        "sourceDeclarations",
        "i",
        "sheet",
        "readyOverride",
        "rules",
        "prepareSheet",
        "i",
        "sheetModifier",
        "callbackRequested",
        "sheets",
        "frameId",
        "onAdoptedSheetsChange",
        "deep",
        "childCommands",
        "cancelAsyncOperations",
        "builder",
        "prepareSheet",
        "sheetModifier",
        "commands",
        "overrides",
        "shorthandOverrides",
        "overridesList",
        "normalizedPropList",
        "INLINE_STYLE_ATTRS",
        "INLINE_STYLE_SELECTOR",
        "allOverrides",
        "results",
        "treeObservers",
        "attrObservers",
        "discoveredNodes",
        "treeObserver",
        "attemptCount",
        "start",
        "ATTEMPTS_INTERVAL",
        "RETRY_TIMEOUT",
        "MAX_ATTEMPTS_COUNT",
        "cache",
        "timeoutId",
        "handleAttributeMutations",
        "handledTargets",
        "target",
        "attrObserver",
        "now",
        "attributeCache",
        "cache",
        "inlineStyleCache",
        "svgInversionCache",
        "svgAnalysisConditionCache",
        "themeProps",
        "shouldAnalyze",
        "i",
        "len",
        "ingnoredSelector",
        "cacheKey",
        "unsetProps",
        "mod",
        "prevDeclarations",
        "value",
        "isSVGElement",
        "svg",
        "analyzeSVGAsImage",
        "svgString",
        "dataURL",
        "value",
        "url",
        "value",
        "value",
        "SMALL_SVG_LIMIT",
        "value",
        "handleSVGElement",
        "isBg",
        "value",
        "overriddenProp",
        "metaThemeColorName",
        "metaThemeColorSelector",
        "srcMetaThemeColor",
        "observer",
        "color",
        "meta",
        "i",
        "j",
        "node",
        "meta",
        "cssCommentsRegex",
        "canUseSheetProxy",
        "rafSheetWatcher",
        "areSheetChangesPending",
        "rulesChangeKey",
        "rulesCheckFrameId",
        "rules",
        "checkForUpdate",
        "cancelled",
        "STYLE_SELECTOR",
        "elementURL",
        "hostsBreakingOnSVGStyleOverride",
        "syncStyleSet",
        "corsStyleSet",
        "loadingLinkCounter",
        "rejectorsForLoadingLinks",
        "prevStyles",
        "next",
        "element",
        "corsCopy",
        "syncStyle",
        "corsCopyPositionWatcher",
        "syncStylePositionWatcher",
        "cancelAsyncOperations",
        "isOverrideEmpty",
        "isAsyncCancelled",
        "sheetModifier",
        "observer",
        "cssText",
        "observerOptions",
        "cssText",
        "result",
        "rule",
        "i",
        "len",
        "cssRules",
        "isLoadingRules",
        "wasLoadingError",
        "loadingLinkId",
        "cssText",
        "cssBasePath",
        "cssRules",
        "accessError",
        "cssRules",
        "accessError",
        "fullCSSText",
        "rules",
        "forceRenderStyle",
        "rules",
        "i",
        "sheet",
        "force",
        "forceRenderStyle",
        "cssRules",
        "err",
        "sheetChangeWatcher",
        "reject",
        "maxMoveCount",
        "moveCount",
        "cleanUp",
        "onLoad",
        "onError",
        "cache",
        "parsedURL",
        "text",
        "importMatches",
        "prev",
        "shouldIgnoreImportsInBetween",
        "diff",
        "importedCSS",
        "prevImportEnd",
        "nextImportStart",
        "openBraceIndex",
        "closeBraceIndex",
        "importURL",
        "absoluteURL",
        "cors",
        "cleaners",
        "disableWPDarkMode",
        "proto",
        "oldDescriptor",
        "newDescriptor",
        "factory",
        "updateSheetEvent",
        "adoptedSheetChangeEvent",
        "shadowDomAttachingEvent",
        "adoptedSheetOwners",
        "adoptedDeclarationSheets",
        "owners",
        "sheet",
        "returnValue",
        "returnValue",
        "shouldWrapHTMLElement",
        "getCurrentElementValue",
        "elements",
        "elements",
        "nodeListBehavior",
        "shouldProxyChildNodes",
        "childNodes",
        "blobURLAllowed",
        "svg",
        "i",
        "blob",
        "objectURL",
        "image",
        "getCurrentValue",
        "docSheets",
        "filteredSheets",
        "elements",
        "styleSheetListBehavior",
        "adoptedSheetsSourceProxies",
        "adoptedSheetsProxySources",
        "adoptedSheetsChangeEvent",
        "adoptedSheetOverrideCache",
        "adoptedSheetsSnapshots",
        "isDRAdoptedSheetOverride",
        "areArraysEqual",
        "onAdoptedSheetsChange",
        "prev",
        "curr",
        "declaration",
        "proxyAdoptedSheetsArray",
        "proxy",
        "source",
        "adoptedDeclarationChangeEvent",
        "returnValue",
        "sheet",
        "owners",
        "definedCustomElements",
        "undefinedGroups",
        "elementsDefinitionCallback",
        "tag",
        "extendedTag",
        "elements",
        "canOptimizeUsingProxy",
        "unhandledShadowHosts",
        "host",
        "hosts",
        "resolvers",
        "tag",
        "r",
        "checkIfDefined",
        "elements",
        "observers",
        "observedRoots",
        "handledShadowHosts",
        "prevStylesByRoot",
        "getPrevStyles",
        "root",
        "node",
        "prevStyles",
        "prevStyleSiblings",
        "nextStyleSiblings",
        "operations",
        "prevStyles",
        "createdStyles",
        "removedStyles",
        "movedStyles",
        "styles",
        "createdStyles",
        "removedStyles",
        "movedStyles",
        "prevStyles",
        "updatedStyles",
        "removedStyles",
        "m",
        "treeObserver",
        "attrObserver",
        "node",
        "newStyles",
        "host",
        "INSTANCE_ID",
        "styleManagers",
        "adoptedStyleManagers",
        "adoptedStyleFallbacks",
        "adoptedStyleChangeTokens",
        "theme",
        "fixes",
        "isIFrame$1",
        "ignoredImageAnalysisSelectors",
        "ignoredInlineSelectors",
        "staticStyleMap",
        "element",
        "element",
        "nodePositionWatchers",
        "fallbackStyle",
        "userAgentStyle",
        "textStyle",
        "invertStyle",
        "inlineStyle",
        "overrideStyle",
        "variableStyle",
        "selectionColors",
        "neutralBackgroundColor",
        "neutralTextColor",
        "rootVarsStyle",
        "enableStyleSheetsProxy",
        "enableCustomElementRegistryProxy",
        "proxyScript",
        "shadowRootsWithOverrides",
        "inlineStyle",
        "overrideStyle",
        "invertStyle",
        "observer",
        "delayed",
        "color",
        "lightness",
        "fallback",
        "allStyles",
        "newManagers",
        "rootVarsStyle",
        "rootVarsStyle",
        "inlineStyleElements",
        "elements",
        "onAdoptedCssChange",
        "sheet",
        "response",
        "fallback",
        "cssRules",
        "commands",
        "loadingStylesCounter",
        "loadingStyles",
        "loadingStyleId",
        "fallbackStyle",
        "details",
        "manager",
        "manager",
        "throttledRenderAllStyles",
        "cancelRendering",
        "newManger",
        "token",
        "fallback",
        "managedStyles",
        "stylesToRemove",
        "removed",
        "stylesToManage",
        "stylesToRestore",
        "newManagers",
        "styleAttr",
        "rootVarsStyle",
        "inlineStyleElements",
        "metaObserver",
        "headObserver",
        "metaElement",
        "meta",
        "interceptorAttempts",
        "oldMeta",
        "disableWPDarkMode",
        "observer",
        "prevTheme",
        "prevFixes",
        "colorAffectingKeys",
        "themeKeys",
        "onlyColorsChanged",
        "palette",
        "ready",
        "success",
        "failure",
        "fallbackStyle",
        "cleaners",
        "selectors",
        "rules",
        "excludeRanges",
        "bracketRanges",
        "ruleStart",
        "key",
        "content",
        "typeEndIndex",
        "rule",
        "rule",
        "ranges",
        "i",
        "singleQuoteGoesFirst",
        "firstQuote",
        "secondQuote",
        "excludeRanges",
        "excludeRanges",
        "declarations",
        "excludeRanges",
        "colonIndex",
        "importantIndex",
        "parsed",
        "lines",
        "tab",
        "lastSelectorIndex",
        "sorted",
        "prefixRegex",
        "aProp",
        "bProp",
        "aPrefix",
        "bPrefix",
        "aNorm",
        "bNorm",
        "i",
        "rule",
        "blobRegex",
        "promises",
        "promise",
        "data",
        "banner",
        "css",
        "staticStyle",
        "modifiedCSS",
        "formattedCSS",
        "isDarkReaderEnabled",
        "isIFrame",
        "theme",
        "darkScheme",
        "store",
        "setFetchMethod",
        "setFetchMethod$1"
    ],
    "comments": [
        "lines.push(\"html {\");",
        "lines.push(`    color-scheme: dark !important;`);",
        "lines.push(\"}\");",
        "lines.push(\"iframe {\");",
        "lines.push(`    color-scheme: dark !important;`);",
        "lines.push(\"}\");",
        "disabled for bugs"
    ],
    "docstrings": [
        "* Dark Reader v4.9.105\n * https://darkreader.org/"
    ],
    "functions": [
        "getOKResponse",
        "loadAsDataURL",
        "loadAsBlob",
        "readResponseAsDataURL",
        "loadAsText",
        "setFetchMethod$1",
        "callFetchMethod",
        "sendMessage",
        "addMessageListener",
        "getMatches",
        "getMatchesWithOffsets",
        "getHashCode",
        "escapeRegExpSpecialChars",
        "getParenthesesRange",
        "getOpenCloseRange",
        "indexOfExcluding",
        "splitExcluding",
        "fixBaseURL",
        "parseURL",
        "getAbsoluteURL",
        "isRelativeHrefOnAbsolutePath",
        "createTextStyle",
        "isArrayLike",
        "forEach",
        "push",
        "toArray",
        "scale",
        "clamp",
        "multiplyMatrices",
        "createFilterMatrix",
        "applyColorMatrix",
        "identity",
        "invertNHue",
        "brightness",
        "contrast",
        "sepia",
        "grayscale",
        "getCSSFilterValue",
        "evalMath",
        "exec",
        "lessOrEqualThan",
        "parseColorWithCache",
        "parseToHSLWithCache",
        "clearColorCache",
        "hslToRGB",
        "rgbToHSL",
        "toFixed",
        "rgbToString",
        "rgbToHexString",
        "hslToString",
        "parse",
        "getNumbers",
        "getNumbersFromString",
        "parseRGB",
        "parseHSL",
        "parseHex",
        "getColorByName",
        "getSystemColor",
        "lowerCalcExpression",
        "getSRGBLightness",
        "domParseColor",
        "throttle",
        "createAsyncTasksQueue",
        "runTasks",
        "add",
        "cancel",
        "requestAnimationFrameOnce",
        "hexify",
        "generateUID",
        "watchForDocumentVisibility",
        "stopWatchingForDocumentVisibility",
        "setDocumentVisibilityListener",
        "removeDocumentVisibilityListener",
        "documentIsVisible",
        "getDuration",
        "logInfo",
        "logWarn",
        "logAssert",
        "ASSERT",
        "removeNode",
        "watchForNodePosition",
        "iterateShadowHosts",
        "acceptNode",
        "setIsDOMReady",
        "addDOMReadyListener",
        "removeDOMReadyListener",
        "isReadyStateComplete",
        "addReadyStateCompleteListener",
        "cleanReadyStateCompleteListeners",
        "isHugeMutation",
        "getElementsTreeOperations",
        "createOptimizedTreeObserver",
        "disconnect",
        "iterateCSSRules",
        "iterateCSSDeclarations",
        "handleEmptyShorthand",
        "getCSSURLValue",
        "getCSSBaseBath",
        "replaceCSSRelativeURLsWithAbsolute",
        "replaceCSSFontFace",
        "isStyleRule",
        "isImportRule",
        "isMediaRule",
        "isSupportsRule",
        "isLayerRule",
        "defineSheetScope",
        "getSheetScope",
        "parseGradient",
        "writeImageDetailsQueue",
        "writeImageDetailsCache",
        "readImageDetailsCache",
        "writeCSSFetchCache",
        "readCSSFetchCache",
        "toSVGMatrix",
        "getSVGFilterMatrixValue",
        "addTask",
        "stop",
        "scheduleFrame",
        "bgFetch",
        "getImageDetails",
        "getDataURL",
        "tryCreateImageBitmap",
        "loadImage",
        "createCanvas",
        "removeCanvas",
        "analyzeImage",
        "requestBlobURLCheck",
        "isBlobURLCheckResultReady",
        "onCSPError",
        "getFilteredImageURL",
        "escapeXML",
        "tryConvertDataURLToBlobSync",
        "tryConvertDataURLToBlobURL",
        "cleanImageProcessingCache",
        "registerVariablesSheet",
        "releaseVariablesSheet",
        "getRegisteredVariableValue",
        "getRegisteredColor",
        "registerColor",
        "getColorPalette",
        "clearColorPalette",
        "getBgPole",
        "getFgPole",
        "clearColorModificationCache",
        "getCacheId",
        "modifyColorWithCache",
        "modifyAndRegisterColor",
        "modifyLightSchemeColor",
        "modifyLightModeHSL",
        "modifyBgHSL",
        "_modifyBackgroundColor",
        "modifyBackgroundColor",
        "modifyBlueFgHue",
        "modifyFgHSL",
        "_modifyForegroundColor",
        "modifyForegroundColor",
        "modifyBorderHSL",
        "_modifyBorderColor",
        "modifyBorderColor",
        "modifyShadowColor",
        "modifyGradientColor",
        "getPriority",
        "getModifiableCSSDeclaration",
        "joinSelectors",
        "getModifiedUserAgentStyle",
        "getSelectionColor",
        "getModifiedSelectionStyle",
        "getModifiedScrollbarStyle",
        "getModifiedFallbackStyle",
        "defaultFallbackFactory",
        "getColorModifier",
        "shouldIgnoreImage",
        "checkImageSelectors",
        "getBgImageModifier",
        "getShadowModifierWithInfo",
        "getShadowModifier",
        "getScrollbarColorModifier",
        "getColorSchemeModifier",
        "getVariableModifier",
        "getVariableDependantModifier",
        "cleanModificationCache",
        "clear",
        "isVarType",
        "addRulesForMatching",
        "addInlineStyleForMatching",
        "matchVariablesAndDependents",
        "getModifierForVariable",
        "getModifierForVarDependant",
        "subscribeForVarTypeChange",
        "unsubscribeFromVariableTypeChanges",
        "collectVariablesAndVarDep",
        "collectVarsFromCSSDeclarations",
        "shouldProcessRootVariables",
        "collectRootVariables",
        "inspectVariable",
        "resolveVariableType",
        "collectRootVarDependents",
        "inspectVarDependant",
        "iterateVarDeps",
        "findVarRef",
        "iterateVarRefs",
        "setOnRootVariableChange",
        "putRootVars",
        "getVariableRange",
        "getVariablesMatches",
        "replaceVariablesMatches",
        "getVariableNameAndFallback",
        "replaceCSSVariablesNames",
        "iterateVarDependencies",
        "wrapBgColorVariableName",
        "wrapTextColorVariableName",
        "wrapBorderColorVariableName",
        "wrapBgImgVariableName",
        "isVariable",
        "isVarDependant",
        "isConstructedColorVar",
        "isTextColorProperty",
        "parseRawColorValue",
        "handleRawColorValue",
        "tryModifyBgColor",
        "tryModifyTextColor",
        "tryModifyBorderColor",
        "insertVarValues",
        "getThemeKey",
        "createStyleSheetModifier",
        "getStyleRuleHash",
        "shouldRebuildStyle",
        "modifySheet",
        "setRule",
        "getGroup",
        "handleAsyncDeclaration",
        "handleVarDeclarations",
        "buildStyleSheet",
        "createTarget",
        "iterateReadyRules",
        "rebuildAsyncRule",
        "rebuildVarRule",
        "canHaveAdoptedStyleSheets",
        "createAdoptedStyleSheetOverride",
        "iterateSourceSheets",
        "injectSheet",
        "clear",
        "destroy",
        "getRulesChangeKey",
        "render",
        "handleArrayChange",
        "checkForUpdates",
        "watchUsingRAF",
        "addSheetChangeEventListener",
        "watch",
        "insertRule",
        "deleteRule",
        "replaceSync",
        "getDeepCSSCommands",
        "clearDeepCSSCommands",
        "createAdoptedStyleSheetFallback",
        "render",
        "commands",
        "destroy",
        "getInlineOverrideStyle",
        "getInlineStyleElements",
        "watchForInlineStyles",
        "deepWatchForInlineStyles",
        "discoverNodes",
        "stopWatchingForInlineStyles",
        "shouldAnalyzeSVGAsImage",
        "getInlineStyleCacheKey",
        "shouldIgnoreInlineStyle",
        "overrideInlineStyle",
        "setCustomProp",
        "setStaticValue",
        "setVarDeclaration",
        "setProps",
        "setAsyncValue",
        "changeMetaThemeColor",
        "changeMetaThemeColorWhenAvailable",
        "restoreMetaThemeColor",
        "removeCSSComments",
        "createSheetWatcher",
        "watchForSheetChanges",
        "onSheetChange",
        "handleSheetChanges",
        "watchForSheetChangesUsingProxy",
        "stopWatchingForSheetChangesUsingProxy",
        "stopWatchingForSheetChanges",
        "createRAFSheetWatcher",
        "getRulesChangeKey",
        "didRulesKeyChange",
        "watchForSheetChangesUsingRAF",
        "stopWatchingForSheetChangesUsingRAF",
        "isFontsGoogleApiStyle",
        "shouldManageStyle",
        "getManageableStyles",
        "cleanLoadingLinks",
        "manageStyle",
        "containsCSSImport",
        "hasImports",
        "getRulesSync",
        "insertStyle",
        "createSyncStyle",
        "getRulesAsync",
        "createOrUpdateCORSCopy",
        "details",
        "render",
        "removeCSSRulesFromSheet",
        "prepareOverridesSheet",
        "buildOverrides",
        "getRulesOrError",
        "isStillLoadingError",
        "safeGetSheetRules",
        "pause",
        "destroy",
        "watch",
        "restore",
        "linkLoading",
        "getCSSImportURL",
        "loadText",
        "replaceCSSImports",
        "createCORSCopy",
        "injectProxy",
        "cleanUp",
        "documentEventListener",
        "disableConflictingPlugins",
        "overrideProperty",
        "isDRElement",
        "isDRSheet",
        "onAdoptedSheetChange",
        "reportSheetChange",
        "reportSheetChangeAsync",
        "resolveCustomElement",
        "checkBlobURLSupport",
        "sendBlobURLCheckResponse",
        "deleteProperty",
        "isCustomElement",
        "recordUndefinedElement",
        "collectUndefinedElements",
        "handleIsDefined",
        "customElementsWhenDefined",
        "watchWhenCustomElementsDefined",
        "unsubscribeFromDefineCustomElements",
        "watchForStylePositions",
        "saveStylePosition",
        "forgetStylePosition",
        "didStylePositionChange",
        "handleStyleOperations",
        "handleMinorTreeMutations",
        "handleHugeTreeMutations",
        "handleAttributeMutations",
        "observe",
        "subscribeForShadowRootChanges",
        "deepObserve",
        "resetObservers",
        "stopWatchingForStylePositions",
        "watchForStyleChanges",
        "stopWatchingForStyleChanges",
        "createOrUpdateStyle",
        "createOrUpdateScript",
        "setupNodePositionWatcher",
        "stopStylePositionWatchers",
        "createStaticStyleOverrides",
        "createShadowStaticStyleOverridesInner",
        "delayedCreateShadowStaticStyleOverrides",
        "createShadowStaticStyleOverrides",
        "replaceCSSTemplates",
        "cleanFallbackStyle",
        "createDynamicStyleOverrides",
        "createManager",
        "loadingStart",
        "loadingEnd",
        "update",
        "removeManager",
        "onDOMReady",
        "runDynamicStyle",
        "createThemeAndWatchForUpdates",
        "handleAdoptedStyleSheets",
        "getAdoptedStyleChangeToken",
        "getAdoptedStyleSheetFallback",
        "watchForUpdates",
        "stopWatchingForUpdates",
        "addMetaListener",
        "createDarkReaderInstanceMarker",
        "isDRLocked",
        "isAnotherDarkReaderInstanceActive",
        "interceptOldScript",
        "disableConflictingPlugins",
        "createOrUpdateDynamicThemeInternal",
        "removeProxy",
        "removeDynamicTheme",
        "cleanDynamicThemeCache",
        "parseCSS",
        "getAllOpenCloseRanges",
        "getTokenExclusionRanges",
        "parseSelectors",
        "parseDeclarations",
        "isParsedStyleRule",
        "formatCSS",
        "formatParsedCSS",
        "formatRule",
        "formatAtRule",
        "formatStyleRule",
        "sortDeclarations",
        "clearEmptyRules",
        "replaceBlobs",
        "collectCSS",
        "addStaticCSS",
        "enable",
        "isEnabled",
        "disable",
        "handleColorScheme",
        "auto",
        "exportGeneratedCSS"
    ],
    "classes": [
        "Operator",
        "AsyncQueue",
        "VariablesStore",
        "StyleSheetCommandBuilder"
    ]
}