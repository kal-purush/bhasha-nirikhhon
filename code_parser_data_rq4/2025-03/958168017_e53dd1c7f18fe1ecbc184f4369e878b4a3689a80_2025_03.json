{
    "identifiers": [
        "os",
        "logging",
        "numpy",
        "np",
        "cv2",
        "pickle",
        "base64",
        "flask",
        "Flask",
        "render_template",
        "request",
        "jsonify",
        "Response",
        "session",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "logging",
        "getLogger",
        "Flask",
        "os",
        "environ",
        "get",
        "open",
        "f",
        "pickle",
        "load",
        "f",
        "logger",
        "debug",
        "FileNotFoundError",
        "logger",
        "debug",
        "game_state",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "reset_game_state",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "json",
        "data",
        "get",
        "data",
        "get",
        "image_data",
        "gesture",
        "jsonify",
        "image_data",
        "image_data",
        "split",
        "base64",
        "b64decode",
        "image_data",
        "np",
        "frombuffer",
        "image_bytes",
        "np",
        "uint8",
        "cv2",
        "imdecode",
        "nparr",
        "cv2",
        "IMREAD_COLOR",
        "preprocess_image",
        "img",
        "extract_features",
        "processed_img",
        "training_data",
        "gesture",
        "append",
        "features",
        "k",
        "len",
        "v",
        "k",
        "v",
        "training_data",
        "items",
        "jsonify",
        "gesture",
        "counts",
        "e",
        "logger",
        "error",
        "e",
        "jsonify",
        "e",
        "app",
        "route",
        "methods",
        "model",
        "min",
        "len",
        "training_data",
        "len",
        "training_data",
        "len",
        "training_data",
        "min_samples",
        "jsonify",
        "len",
        "training_data",
        "len",
        "training_data",
        "len",
        "training_data",
        "sklearn",
        "ensemble",
        "RandomForestClassifier",
        "np",
        "vstack",
        "np",
        "array",
        "training_data",
        "np",
        "array",
        "training_data",
        "np",
        "array",
        "training_data",
        "np",
        "hstack",
        "np",
        "full",
        "len",
        "training_data",
        "np",
        "full",
        "len",
        "training_data",
        "np",
        "full",
        "len",
        "training_data",
        "RandomForestClassifier",
        "n_estimators",
        "model",
        "fit",
        "X",
        "y",
        "open",
        "f",
        "pickle",
        "dump",
        "model",
        "f",
        "jsonify",
        "e",
        "logger",
        "error",
        "e",
        "jsonify",
        "e",
        "app",
        "route",
        "methods",
        "model",
        "game_state",
        "model",
        "jsonify",
        "request",
        "json",
        "data",
        "get",
        "image_data",
        "jsonify",
        "image_data",
        "image_data",
        "split",
        "base64",
        "b64decode",
        "image_data",
        "np",
        "frombuffer",
        "image_bytes",
        "np",
        "uint8",
        "cv2",
        "imdecode",
        "nparr",
        "cv2",
        "IMREAD_COLOR",
        "preprocess_image",
        "img",
        "extract_features",
        "processed_img",
        "model",
        "predict",
        "features",
        "np",
        "random",
        "choice",
        "determine_winner",
        "prediction",
        "computer_choice",
        "result",
        "game_state",
        "result",
        "game_state",
        "game_state",
        "result",
        "jsonify",
        "prediction",
        "computer_choice",
        "result",
        "game_state",
        "e",
        "logger",
        "error",
        "e",
        "jsonify",
        "e",
        "img",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2GRAY",
        "cv2",
        "GaussianBlur",
        "gray",
        "cv2",
        "threshold",
        "blurred",
        "cv2",
        "THRESH_BINARY_INV",
        "cv2",
        "THRESH_OTSU",
        "cv2",
        "resize",
        "threshold",
        "resized",
        "img",
        "img",
        "flatten",
        "features",
        "player",
        "computer",
        "player",
        "computer",
        "player",
        "computer",
        "player",
        "computer",
        "player",
        "computer",
        "app",
        "run",
        "host",
        "port",
        "debug"
    ],
    "literals": [
        "\"SESSION_SECRET\"",
        "\"default_secret_key\"",
        "'rock'",
        "'paper'",
        "'scissors'",
        "'hand_gesture_model.pkl'",
        "'rb'",
        "\"Model loaded successfully\"",
        "\"No model found, training will be required\"",
        "'player_score'",
        "'computer_score'",
        "'rounds'",
        "'result'",
        "''",
        "'player_score'",
        "'computer_score'",
        "'rounds'",
        "'result'",
        "''",
        "'/'",
        "'index.html'",
        "'/training'",
        "'training.html'",
        "'/game'",
        "'game.html'",
        "'/capture_training_image'",
        "'POST'",
        "'image'",
        "'gesture'",
        "'success'",
        "'error'",
        "'Missing image or gesture data'",
        "'base64,'",
        "'base64,'",
        "'success'",
        "'message'",
        "f'Captured {gesture} image'",
        "'counts'",
        "f\"Error processing training image: {str(e)}\"",
        "'success'",
        "'error'",
        "'/train_model'",
        "'POST'",
        "'rock'",
        "'paper'",
        "'scissors'",
        "'success'",
        "'error'",
        "f'Not enough training data. Need at least 10 images per gesture. Currently have: Rock: {len(training_data[\"rock\"])}, Paper: {len(training_data[\"paper\"])}, Scissors: {len(training_data[\"scissors\"])}'",
        "\"rock\"",
        "\"paper\"",
        "\"scissors\"",
        "'rock'",
        "'paper'",
        "'scissors'",
        "'rock'",
        "'rock'",
        "'paper'",
        "'paper'",
        "'scissors'",
        "'scissors'",
        "'hand_gesture_model.pkl'",
        "'wb'",
        "'success'",
        "'message'",
        "'Model trained successfully!'",
        "f\"Error training model: {str(e)}\"",
        "'success'",
        "'error'",
        "'/predict_gesture'",
        "'POST'",
        "'success'",
        "'error'",
        "'Model not trained yet'",
        "'image'",
        "'success'",
        "'error'",
        "'Missing image data'",
        "'base64,'",
        "'base64,'",
        "'rock'",
        "'paper'",
        "'scissors'",
        "'win'",
        "'player_score'",
        "'lose'",
        "'computer_score'",
        "'rounds'",
        "'result'",
        "'success'",
        "'player_gesture'",
        "'computer_choice'",
        "'result'",
        "'game_state'",
        "f\"Error predicting gesture: {str(e)}\"",
        "'success'",
        "'error'",
        "'tie'",
        "'rock'",
        "'scissors'",
        "'scissors'",
        "'paper'",
        "'paper'",
        "'rock'",
        "'win'",
        "'lose'",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "logger",
        "app",
        "app",
        "secret_key",
        "training_data",
        "model",
        "model",
        "game_state",
        "game_state",
        "data",
        "image_data",
        "gesture",
        "image_data",
        "image_bytes",
        "nparr",
        "img",
        "processed_img",
        "features",
        "counts",
        "min_samples",
        "X",
        "y",
        "model",
        "data",
        "image_data",
        "image_data",
        "image_bytes",
        "nparr",
        "img",
        "processed_img",
        "features",
        "prediction",
        "computer_choice",
        "result",
        "game_state",
        "gray",
        "blurred",
        "_",
        "threshold",
        "resized",
        "features"
    ],
    "comments": [
        "Set up logging",
        "Global variables",
        "Load the model if it exists",
        "Game state",
        "Reset the game state when starting a new game",
        "Decode base64 image",
        "Remove the base64 prefix if present",
        "Process the image (convert to grayscale, resize, etc.)",
        "Extract features",
        "Add to training data",
        "Get current counts",
        "Check if we have enough training data",
        "Prepare training data",
        "Train a random forest classifier",
        "Save the model",
        "Decode base64 image",
        "Process the image",
        "Extract features",
        "Make prediction",
        "Generate computer choice",
        "Determine winner",
        "Update game state",
        "Convert to grayscale",
        "Apply Gaussian blur to reduce noise",
        "Apply threshold to create binary image",
        "Resize to a standard size",
        "For a simple approach, we'll just flatten the image and use pixel values as features",
        "Normalize pixel values",
        "Calculate HOG features (optional, for better accuracy)",
        "This is a simplified version, for real applications consider using proper HOG implementation"
    ],
    "docstrings": [
        "\"\"\"Preprocess image for feature extraction\"\"\"",
        "\"\"\"Extract features from processed image\"\"\"",
        "\"\"\"Determine winner of Rock Paper Scissors round\"\"\""
    ],
    "functions": [
        "reset_game_state",
        "index",
        "training",
        "game",
        "capture_training_image",
        "train_model",
        "predict_gesture",
        "preprocess_image",
        "extract_features",
        "determine_winner"
    ],
    "classes": []
}