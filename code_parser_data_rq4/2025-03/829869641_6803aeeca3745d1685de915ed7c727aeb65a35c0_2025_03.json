{
    "identifiers": [
        "base64",
        "os",
        "typing",
        "Any",
        "Dict",
        "Tuple",
        "numpy",
        "np",
        "requests",
        "platform",
        "boxes1",
        "np",
        "ndarray",
        "boxes2",
        "np",
        "ndarray",
        "np",
        "ndarray",
        "boxes1",
        "boxes1",
        "boxes1",
        "boxes1",
        "boxes2",
        "boxes2",
        "boxes2",
        "boxes2",
        "np",
        "maximum",
        "boxes1",
        "boxes2",
        "np",
        "minimum",
        "boxes1",
        "boxes2",
        "np",
        "clip",
        "rb",
        "lt",
        "wh",
        "wh",
        "area1",
        "area2",
        "intersection",
        "np",
        "where",
        "union",
        "intersection",
        "union",
        "iou",
        "platform",
        "system",
        "AppKit",
        "ApplicationServices",
        "AXUIElementCopyAttributeNames",
        "AXUIElementCopyAttributeValue",
        "AXUIElementCreateSystemWide",
        "func",
        "func",
        "top_app_only",
        "ocr",
        "top_app_only",
        "ocr",
        "Any",
        "obs",
        "Dict",
        "tree",
        "Any",
        "exclude_roles",
        "Dict",
        "obs",
        "Dict",
        "show_all_elements",
        "element_id",
        "Dict",
        "key",
        "key",
        "key",
        "directories",
        "directory",
        "directories",
        "os",
        "path",
        "exists",
        "directory",
        "app",
        "app",
        "os",
        "listdir",
        "directory",
        "app",
        "endswith",
        "apps",
        "extend",
        "directory_apps",
        "apps",
        "ACI",
        "top_app_only",
        "ocr",
        "top_app_only",
        "top_app_only",
        "ocr",
        "ocr",
        "list_apps_in_directories",
        "directories_to_search",
        "obs",
        "Dict",
        "UIElement",
        "get_current_applications",
        "obs",
        "obs",
        "Dict",
        "UIElement",
        "get_top_app",
        "obs",
        "tree",
        "exclude_roles",
        "exclude_roles",
        "element",
        "element",
        "attribute",
        "role",
        "exclude_roles",
        "element",
        "attribute",
        "element",
        "attribute",
        "position",
        "size",
        "position",
        "__repr__",
        "split",
        "copy",
        "next",
        "part",
        "part",
        "pos_parts",
        "part",
        "startswith",
        "next",
        "part",
        "part",
        "pos_parts",
        "part",
        "startswith",
        "x_part",
        "split",
        "y_part",
        "split",
        "size",
        "__repr__",
        "split",
        "copy",
        "next",
        "part",
        "part",
        "size_parts",
        "part",
        "startswith",
        "next",
        "part",
        "part",
        "size_parts",
        "part",
        "startswith",
        "width_part",
        "split",
        "height_part",
        "split",
        "x",
        "y",
        "w",
        "h",
        "preserved_nodes",
        "append",
        "x",
        "y",
        "w",
        "h",
        "element",
        "attribute",
        "element",
        "attribute",
        "element",
        "attribute",
        "element",
        "attribute",
        "element",
        "children",
        "children",
        "child_ref",
        "children",
        "UIElement",
        "child_ref",
        "traverse_and_preserve",
        "child_element",
        "traverse_and_preserve",
        "tree",
        "preserved_nodes",
        "screenshot",
        "Dict",
        "Any",
        "os",
        "environ",
        "get",
        "url",
        "EnvironmentError",
        "base64",
        "b64encode",
        "screenshot",
        "decode",
        "requests",
        "post",
        "url",
        "json",
        "encoded_screenshot",
        "response",
        "status_code",
        "response",
        "status_code",
        "response",
        "json",
        "ocr_bboxes",
        "preserved_nodes",
        "Dict",
        "Tuple",
        "Dict",
        "preserved_nodes",
        "np",
        "array",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "preserved_nodes",
        "dtype",
        "np",
        "float32",
        "np",
        "empty",
        "dtype",
        "np",
        "float32",
        "ocr_bboxes",
        "np",
        "array",
        "box",
        "box",
        "box",
        "box",
        "box",
        "ocr_bboxes",
        "dtype",
        "np",
        "float32",
        "len",
        "tree_bboxes",
        "box_iou",
        "tree_bboxes",
        "ocr_boxes_array",
        "max",
        "axis",
        "np",
        "zeros",
        "len",
        "ocr_boxes_array",
        "idx",
        "box",
        "max_iou",
        "ocr_bboxes",
        "max_ious",
        "max_iou",
        "filtered_ocr_bboxes",
        "append",
        "box",
        "filtered_ocr_bboxes",
        "screenshot",
        "linearized_accessibility_tree",
        "preserved_nodes",
        "Dict",
        "Tuple",
        "Dict",
        "preserved_nodes",
        "np",
        "array",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "preserved_nodes",
        "dtype",
        "np",
        "float32",
        "np",
        "empty",
        "dtype",
        "np",
        "float32",
        "extract_elements_from_screenshot",
        "screenshot",
        "e",
        "e",
        "ocr_bboxes",
        "len",
        "preserved_nodes",
        "np",
        "array",
        "box",
        "get",
        "box",
        "get",
        "box",
        "get",
        "box",
        "get",
        "_",
        "_",
        "box",
        "ocr_bboxes",
        "dtype",
        "np",
        "float32",
        "len",
        "tree_bboxes",
        "box_iou",
        "tree_bboxes",
        "ocr_boxes_array",
        "max",
        "axis",
        "np",
        "zeros",
        "len",
        "ocr_boxes_array",
        "idx",
        "_",
        "content",
        "box",
        "max_iou",
        "ocr_bboxes",
        "max_ious",
        "max_iou",
        "box",
        "get",
        "box",
        "get",
        "box",
        "get",
        "box",
        "get",
        "linearized_accessibility_tree",
        "append",
        "preserved_nodes_index",
        "content",
        "x1",
        "y1",
        "x2",
        "x1",
        "y2",
        "y1",
        "content",
        "preserved_nodes",
        "append",
        "node",
        "preserved_nodes_index",
        "linearized_accessibility_tree",
        "preserved_nodes",
        "obs",
        "Dict",
        "show_all_elements",
        "obs",
        "NSWorkspace",
        "sharedWorkspace",
        "frontmostApplication",
        "localizedName",
        "UIElement",
        "accessibility_tree",
        "attribute",
        "preserve_nodes",
        "tree",
        "exclude_roles",
        "copy",
        "idx",
        "node",
        "preserved_nodes",
        "tree_elements",
        "append",
        "idx",
        "node",
        "node",
        "node",
        "preserved_nodes",
        "show_all_elements",
        "preserve_nodes",
        "UIElement",
        "tree",
        "exclude_roles",
        "copy",
        "ocr",
        "obs",
        "get",
        "add_ocr_elements",
        "screenshot",
        "tree_elements",
        "preserved_nodes",
        "preserved_nodes",
        "preserved_nodes",
        "element_id",
        "Dict",
        "nodes",
        "element_id",
        "IndexError",
        "nodes",
        "agent_action",
        "app_or_file_name",
        "repr",
        "app_or_file_name",
        "agent_action",
        "app_or_file_name",
        "repr",
        "app_or_file_name",
        "agent_action",
        "element_id",
        "num_clicks",
        "button_type",
        "hold_keys",
        "find_element",
        "element_id",
        "Tuple",
        "node",
        "Tuple",
        "node",
        "coordinates",
        "sizes",
        "coordinates",
        "sizes",
        "_normalize_key",
        "k",
        "k",
        "hold_keys",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "x",
        "y",
        "num_clicks",
        "repr",
        "button_type",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "agent_action",
        "element_id",
        "text",
        "overwrite",
        "enter",
        "find_element",
        "element_id",
        "element_id",
        "node",
        "node",
        "node",
        "coordinates",
        "sizes",
        "coordinates",
        "sizes",
        "command",
        "x",
        "y",
        "overwrite",
        "command",
        "command",
        "repr",
        "text",
        "enter",
        "command",
        "overwrite",
        "command",
        "command",
        "repr",
        "text",
        "enter",
        "command",
        "command",
        "agent_action",
        "text",
        "notes",
        "extend",
        "text",
        "agent_action",
        "drag_from_id",
        "drop_on_id",
        "hold_keys",
        "find_element",
        "drag_from_id",
        "find_element",
        "drop_on_id",
        "node1",
        "node1",
        "node2",
        "node2",
        "coordinates1",
        "sizes1",
        "coordinates1",
        "sizes1",
        "coordinates2",
        "sizes2",
        "coordinates2",
        "sizes2",
        "command",
        "x1",
        "y1",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "x2",
        "y2",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "agent_action",
        "element_id",
        "clicks",
        "find_element",
        "element_id",
        "find_element",
        "node",
        "node",
        "coordinates",
        "sizes",
        "coordinates",
        "sizes",
        "x",
        "y",
        "clicks",
        "agent_action",
        "keys",
        "_normalize_key",
        "k",
        "k",
        "keys",
        "key",
        "key",
        "keys",
        "join",
        "keys",
        "agent_action",
        "hold_keys",
        "press_keys",
        "_normalize_key",
        "k",
        "k",
        "hold_keys",
        "_normalize_key",
        "k",
        "k",
        "press_keys",
        "join",
        "key",
        "key",
        "press_keys",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "press_keys_str",
        "k",
        "hold_keys",
        "command",
        "repr",
        "k",
        "command",
        "agent_action",
        "time",
        "time",
        "agent_action",
        "agent_action",
        "AXUIElementCopyAttributeNames",
        "attributeNames",
        "key",
        "AXUIElementCopyAttributeValue",
        "key",
        "value",
        "attribute",
        "staticmethod",
        "AXUIElementCreateSystemWide",
        "UIElement",
        "attribute",
        "attribute",
        "pos",
        "pos",
        "__repr__",
        "split",
        "copy",
        "next",
        "part",
        "part",
        "pos_parts",
        "part",
        "startswith",
        "next",
        "part",
        "part",
        "pos_parts",
        "part",
        "startswith",
        "x_part",
        "split",
        "y_part",
        "split",
        "x",
        "y",
        "attribute",
        "size",
        "size",
        "__repr__",
        "split",
        "copy",
        "next",
        "part",
        "part",
        "size_parts",
        "part",
        "startswith",
        "next",
        "part",
        "part",
        "size_parts",
        "part",
        "startswith",
        "width_part",
        "split",
        "height_part",
        "split",
        "w",
        "h",
        "position",
        "size",
        "element",
        "element",
        "position",
        "element",
        "element",
        "size",
        "element",
        "position",
        "size",
        "element",
        "attribute",
        "element",
        "attribute",
        "element",
        "attribute",
        "element",
        "attribute",
        "staticmethod",
        "obs",
        "Dict",
        "NSWorkspace",
        "sharedWorkspace",
        "workspace",
        "runningApplications",
        "app",
        "running_apps",
        "app",
        "activationPolicy",
        "app",
        "localizedName",
        "current_apps",
        "append",
        "app_name",
        "current_apps",
        "staticmethod",
        "directory",
        "directories_to_search",
        "os",
        "path",
        "exists",
        "directory",
        "app",
        "app",
        "os",
        "listdir",
        "directory",
        "app",
        "endswith",
        "apps",
        "extend",
        "directory_apps",
        "apps",
        "staticmethod",
        "obs",
        "Dict",
        "NSWorkspace",
        "sharedWorkspace",
        "frontmostApplication",
        "localizedName"
    ],
    "literals": [
        "\"Darwin\"",
        "\"\"",
        "\"command\"",
        "\"cmd\"",
        "\".app\"",
        "\"/System/Applications\"",
        "\"/Applications\"",
        "\"AXRole\"",
        "\"AXPosition\"",
        "\"AXSize\"",
        "\"x:\"",
        "\"y:\"",
        "\":\"",
        "\":\"",
        "\"w:\"",
        "\"h:\"",
        "\":\"",
        "\":\"",
        "\"position\"",
        "\"size\"",
        "\"title\"",
        "\"AXTitle\"",
        "\"text\"",
        "\"AXDescription\"",
        "\"AXValue\"",
        "\"role\"",
        "\"AXRole\"",
        "\"OCR_SERVER_ADDRESS\"",
        "\"OCR SERVER ADDRESS NOT SET\"",
        "\"utf-8\"",
        "\"img_bytes\"",
        "\"error\"",
        "f\"Request failed with status code {response.status_code}\"",
        "\"results\"",
        "\"position\"",
        "\"position\"",
        "\"position\"",
        "\"size\"",
        "\"position\"",
        "\"size\"",
        "\"position\"",
        "\"position\"",
        "\"position\"",
        "\"size\"",
        "\"position\"",
        "\"size\"",
        "f\"Error: {e}\"",
        "\"left\"",
        "\"top\"",
        "\"right\"",
        "\"bottom\"",
        "\"left\"",
        "\"top\"",
        "\"right\"",
        "\"bottom\"",
        "f\"{preserved_nodes_index}\\tAXButton\\t\\t{content}\\t\\t\"",
        "\"position\"",
        "\"size\"",
        "\"title\"",
        "\"\"",
        "\"text\"",
        "\"role\"",
        "\"AXButton\"",
        "\"accessibility_tree\"",
        "\"AXFocusedApplication\"",
        "\"AXGroup\"",
        "\"AXLayoutArea\"",
        "\"AXLayoutItem\"",
        "\"AXUnknown\"",
        "\"id\\trole\\ttitle\\ttext\"",
        "f\"{idx}\\t{node['role']}\\t{node['title']}\\t{node['text']}\"",
        "'role'",
        "'title'",
        "'text'",
        "\"screenshot\"",
        "\"AXButton\"",
        "\"The index of the selected element was out of range.\"",
        "f\"import pyautogui; import time; pyautogui.hotkey('command', 'space', interval=0.5); pyautogui.typewrite({repr(app_or_file_name)}); pyautogui.press('enter'); time.sleep(1.0)\"",
        "f\"import pyautogui; import time; pyautogui.hotkey('command', 'space', interval=0.5); pyautogui.typewrite({repr(app_or_file_name)}); pyautogui.press('enter'); time.sleep(1.0)\"",
        "\"left\"",
        "\"position\"",
        "\"size\"",
        "\"import pyautogui; \"",
        "f\"pyautogui.keyDown({repr(k)}); \"",
        "f\"\"\"import pyautogui; pyautogui.click({x}, {y}, clicks={num_clicks}, button={repr(button_type)}); \"\"\"",
        "f\"pyautogui.keyUp({repr(k)}); \"",
        "\"\"",
        "\"position\"",
        "\"size\"",
        "\"import pyautogui; \"",
        "f\"pyautogui.click({x}, {y}); \"",
        "f\"pyautogui.hotkey('command', 'a', interval=1); pyautogui.press('backspace'); \"",
        "f\"pyautogui.write({repr(text)}); \"",
        "\"pyautogui.press('enter'); \"",
        "\"import pyautogui; \"",
        "f\"pyautogui.hotkey('command', 'a', interval=1); pyautogui.press('backspace'); \"",
        "f\"pyautogui.write({repr(text)}); \"",
        "\"pyautogui.press('enter'); \"",
        "\"position\"",
        "\"size\"",
        "\"position\"",
        "\"size\"",
        "\"import pyautogui; \"",
        "f\"pyautogui.moveTo({x1}, {y1}); \"",
        "f\"pyautogui.keyDown({repr(k)}); \"",
        "f\"pyautogui.dragTo({x2}, {y2}, duration=1.); pyautogui.mouseUp(); \"",
        "f\"pyautogui.keyUp({repr(k)}); \"",
        "\"position\"",
        "\"size\"",
        "f\"import pyautogui; pyautogui.moveTo({x}, {y}); pyautogui.scroll({clicks})\"",
        "f\"'{key}'\"",
        "f\"import pyautogui; pyautogui.hotkey({', '.join(keys)}, interval=1)\"",
        "', '",
        "\"[\"",
        "\", \"",
        "f\"'{key}'\"",
        "\"]\"",
        "\"import pyautogui; \"",
        "f\"pyautogui.keyDown({repr(k)}); \"",
        "f\"pyautogui.press({press_keys_str}); \"",
        "f\"pyautogui.keyUp({repr(k)}); \"",
        "f\"\"\"import time; time.sleep({time})\"\"\"",
        "\"AXChildren\"",
        "\"AXRole\"",
        "\"AXPosition\"",
        "\"x:\"",
        "\"y:\"",
        "\":\"",
        "\":\"",
        "\"AXSize\"",
        "\"w:\"",
        "\"h:\"",
        "\":\"",
        "\":\"",
        "\"position\"",
        "\"size\"",
        "\"title\"",
        "\"AXTitle\"",
        "\"text\"",
        "\"AXDescription\"",
        "\"AXValue\"",
        "\"role\"",
        "\"AXRole\"",
        "\"/System/Applications\"",
        "\"/Applications\"",
        "\".app\"",
        "\"UIElement%s\""
    ],
    "variables": [
        "area1",
        "area2",
        "lt",
        "rb",
        "wh",
        "intersection",
        "union",
        "iou",
        "func",
        "is_agent_action",
        "top_app_only",
        "ocr",
        "index_out_of_range_flag",
        "notes",
        "clipboard",
        "nodes",
        "apps",
        "directory_apps",
        "directories_to_search",
        "all_apps",
        "exclude_roles",
        "preserved_nodes",
        "role",
        "position",
        "size",
        "pos_parts",
        "x_part",
        "y_part",
        "x",
        "y",
        "size_parts",
        "width_part",
        "height_part",
        "w",
        "h",
        "children",
        "child_element",
        "url",
        "encoded_screenshot",
        "response",
        "tree_bboxes",
        "tree_bboxes",
        "ocr_boxes_array",
        "max_ious",
        "max_ious",
        "filtered_ocr_bboxes",
        "tree_bboxes",
        "tree_bboxes",
        "ocr_bboxes",
        "ocr_bboxes",
        "preserved_nodes_index",
        "ocr_boxes_array",
        "max_ious",
        "max_ious",
        "x1",
        "y1",
        "x2",
        "y2",
        "node",
        "accessibility_tree",
        "top_app",
        "tree",
        "exclude_roles",
        "preserved_nodes",
        "tree_elements",
        "preserved_nodes",
        "screenshot",
        "tree_elements",
        "preserved_nodes",
        "nodes",
        "index_out_of_range_flag",
        "node",
        "coordinates",
        "sizes",
        "x",
        "y",
        "command",
        "hold_keys",
        "node",
        "node",
        "coordinates",
        "sizes",
        "x",
        "y",
        "command",
        "command",
        "node1",
        "node2",
        "coordinates1",
        "sizes1",
        "coordinates2",
        "sizes2",
        "x1",
        "y1",
        "x2",
        "y2",
        "command",
        "node",
        "node",
        "coordinates",
        "sizes",
        "x",
        "y",
        "keys",
        "keys",
        "hold_keys",
        "press_keys",
        "press_keys_str",
        "command",
        "error_code",
        "attributeNames",
        "error",
        "value",
        "pos",
        "pos_parts",
        "x_part",
        "y_part",
        "x",
        "y",
        "size",
        "size_parts",
        "width_part",
        "height_part",
        "w",
        "h",
        "position",
        "size",
        "workspace",
        "running_apps",
        "current_apps",
        "app_name",
        "directories_to_search",
        "apps",
        "directory_apps"
    ],
    "comments": [
        "Calculate areas of boxes1",
        "Calculate areas of boxes2",
        "Get intersections using broadcasting",
        "[N,M,2]",
        "[N,M,2]",
        "Calculate intersection areas",
        "[N,M,2]",
        "[N,M]",
        "Calculate union areas",
        "Calculate IOU",
        "Directories to search for applications in MacOS",
        "Inner function to recursively traverse the accessibility tree",
        "TODO: get coordinate values directly from interface",
        "Find the parts containing 'x:' and 'y:'",
        "Extract the numerical values after 'x:' and 'y:'",
        "Find the parts containing 'Width:' and 'Height:'",
        "Extract the numerical values after 'Width:' and 'Height:'",
        "Start traversing from the given element",
        "从OCR结果中过滤掉与elements重合的",
        "[(content, bbox), ]",
        "Convert preserved nodes to numpy array of bounding boxes",
        "try:",
        "ocr_bboxes = self.extract_elements_from_screenshot(screenshot)",
        "except Exception as e:",
        "print(f\"Error: {e}\")",
        "ocr_bboxes = []",
        "else:",
        "preserved_nodes_index = len(preserved_nodes)",
        "Convert OCR boxes to numpy array",
        "ocr_boxes_array = np.array(",
        "[",
        "[",
        "int(box.get(\"left\", 0)),",
        "int(box.get(\"top\", 0)),",
        "int(box.get(\"right\", 0)),",
        "int(box.get(\"bottom\", 0)),",
        "]",
        "for _, _, box in ocr_bboxes[\"results\"]",
        "],",
        "dtype=np.float32,",
        ")",
        "Calculate max IOUs efficiently",
        "Process boxes with low IOU",
        "if max_iou < 0.1:",
        "Convert preserved nodes to numpy array of bounding boxes",
        "Convert OCR boxes to numpy array",
        "Calculate max IOUs efficiently",
        "Process boxes with low IOU",
        "exclude_roles = [\"AXGroup\", \"AXLayoutArea\", \"AXLayoutItem\", \"AXUnknown\"]",
        "\"\\n\".join(tree_elements)",
        "Calculate the center of the element",
        "Normalize any 'cmd' to 'command'",
        "TODO: specified duration?",
        "Return pyautoguicode to click on the element",
        "Use the provided element_id or default to None",
        "If a node is found, retrieve its coordinates and size",
        "Calculate the center of the element",
        "Start typing at the center of the element",
        "Use 'command' instead of 'cmd'",
        "If no element is found, start typing at the current cursor location",
        "Use 'command' instead of 'cmd'",
        "Calculate the center of the element",
        "TODO: specified duration?",
        "Return pyautoguicode to drag and drop the elements",
        "print(node.attrib)",
        "Calculate the center of the element",
        "Normalize any 'cmd' to 'command'",
        "add quotes around the keys",
        "Normalize any 'cmd' to 'command' in both lists",
        "Find the parts containing 'x:' and 'y:'",
        "Extract the numerical values after 'x:' and 'y:'",
        "Find the parts containing 'Width:' and 'Height:'",
        "Extract the numerical values after 'Width:' and 'Height:'",
        "Get the shared workspace instance",
        "Get a list of running applications",
        "Iterate through the list and print each application's name"
    ],
    "docstrings": [
        "\"\"\"\n    Fast vectorized IOU implementation using only NumPy\n    boxes1: [N, 4] array of boxes\n    boxes2: [M, 4] array of boxes\n    Returns: [N, M] array of IOU values\n    \"\"\"",
        "\"\"\"Convert 'cmd' to 'command' for pyautogui compatibility\"\"\"",
        "\"\"\"\n        Add OCR-detected elements to the accessibility tree if they don't overlap with existing elements\n        Uses optimized NumPy implementation\n        \"\"\"",
        "\"\"\"\n        Add OCR-detected elements to the accessibility tree if they don't overlap with existing elements\n        Uses optimized NumPy implementation\n        \"\"\"",
        "\"\"\"Open an application or file\n        Args:\n            app_or_file_name:str, the name of the application or file to open\n        \"\"\"",
        "\"\"\"Switch to a different an application. Utility function to use instead of command+tab\n        Args:\n            app_or_file_name:str, the name of the application or file to switch to\n        \"\"\"",
        "\"\"\"Click on the element\n        Args:\n            element_id:int, ID of the element to click on\n            num_clicks:int, number of times to click the element\n            button_type:str, which mouse button to press can be \"left\", \"middle\", or \"right\"\n            hold_keys:List, list of keys to hold while clicking\n        \"\"\"",
        "\"\"\"Type text into the element\n        Args:\n            element_id:int ID of the element to type into. If not provided, typing will start at the current cursor location.\n            text:str the text to type\n            overwrite:bool Assign it to True if the text should overwrite the existing text, otherwise assign it to False. Using this argument clears all text in an element.\n            enter:bool Assign it to True if the enter (return) key should be pressed after typing the text, otherwise assign it to False.\n        \"\"\"",
        "\"\"\"Save facts, elements, texts, etc. to a long-term knowledge for reuse during this task. Can be used for copy-pasting text, saving elements, etc. Use this instead of ctrl+c, ctrl+v.\n        Args:\n            text:List[str] the text to save to the knowledge\n        \"\"\"",
        "\"\"\"WAIT\"\"\"",
        "\"\"\"Drag element1 and drop it on element2.\n        Args:\n            drag_from_id:int ID of element to drag\n            drop_on_id:int ID of element to drop on\n            hold_keys:List list of keys to hold while dragging\n        \"\"\"",
        "\"\"\"Scroll in the specified direction inside the specified element\n        Args:\n            element_id:int ID of the element to scroll in\n            clicks:int the number of clicks to scroll can be positive (up) or negative (down).\n        \"\"\"",
        "\"\"\"Press a hotkey combination\n        Args:\n            keys:List the keys to press in combination in a list format (e.g. ['shift', 'c'])\n        \"\"\"",
        "\"\"\"Hold a list of keys and press a list of keys\n        Args:\n            hold_keys:List, list of keys to hold\n            press_keys:List, list of keys to press in a sequence\n        \"\"\"",
        "\"\"\"Wait for a specified amount of time\n        Args:\n            time:float the amount of time to wait in seconds\n        \"\"\"",
        "\"\"\"End the current task with a success\"\"\"",
        "\"\"\"DONE\"\"\"",
        "\"\"\"End the current task with a failure\"\"\"",
        "\"\"\"FAIL\"\"\""
    ],
    "functions": [
        "box_iou",
        "agent_action",
        "get_active_apps",
        "get_top_app",
        "preserve_nodes",
        "linearize_and_annotate_tree",
        "find_element",
        "_normalize_key",
        "list_apps_in_directories",
        "get_active_apps",
        "get_top_app",
        "preserve_nodes",
        "traverse_and_preserve",
        "extract_elements_from_screenshot",
        "filter_ocr_elements",
        "add_ocr_elements",
        "linearize_and_annotate_tree",
        "find_element",
        "open",
        "switch_applications",
        "click",
        "save_to_knowledge",
        "drag_and_drop",
        "scroll",
        "hotkey",
        "hold_and_press",
        "wait",
        "done",
        "fail",
        "getAttributeNames",
        "attribute",
        "children",
        "systemWideElement",
        "role",
        "position",
        "size",
        "isValid",
        "parse",
        "get_current_applications",
        "list_apps_in_directories",
        "get_top_app",
        "__repr__"
    ],
    "classes": [
        "ACI",
        "MacOSACI",
        "UIElement"
    ]
}