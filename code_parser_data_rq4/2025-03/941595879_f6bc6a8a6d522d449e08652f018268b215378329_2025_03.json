{
    "identifiers": [
        "logging",
        "os",
        "sys",
        "optparse",
        "Values",
        "typing",
        "TYPE_CHECKING",
        "Optional",
        "pip",
        "_vendor",
        "certifi",
        "pip",
        "_internal",
        "cli",
        "base_command",
        "Command",
        "pip",
        "_internal",
        "cli",
        "command_context",
        "CommandContextMixIn",
        "TYPE_CHECKING",
        "ssl",
        "SSLContext",
        "pip",
        "_internal",
        "network",
        "session",
        "PipSession",
        "logging",
        "getLogger",
        "Optional",
        "sys",
        "version_info",
        "logger",
        "debug",
        "ssl",
        "ImportError",
        "logger",
        "warning",
        "pip",
        "_vendor",
        "truststore",
        "ImportError",
        "logger",
        "warning",
        "truststore",
        "SSLContext",
        "ssl",
        "PROTOCOL_TLS_CLIENT",
        "ctx",
        "load_verify_locations",
        "certifi",
        "where",
        "ctx",
        "CommandContextMixIn",
        "Optional",
        "PipSession",
        "classmethod",
        "cls",
        "options",
        "Values",
        "Optional",
        "getattr",
        "options",
        "getattr",
        "options",
        "url",
        "index_urls",
        "append",
        "url",
        "getattr",
        "options",
        "urls",
        "index_urls",
        "extend",
        "urls",
        "index_urls",
        "options",
        "Values",
        "_session",
        "enter_context",
        "_build_session",
        "options",
        "_session",
        "_session",
        "options",
        "Values",
        "retries",
        "Optional",
        "timeout",
        "Optional",
        "pip",
        "_internal",
        "network",
        "session",
        "PipSession",
        "options",
        "cache_dir",
        "cache_dir",
        "os",
        "path",
        "isabs",
        "cache_dir",
        "options",
        "deprecated_features_enabled",
        "_create_truststore_ssl_context",
        "PipSession",
        "cache",
        "os",
        "path",
        "join",
        "cache_dir",
        "cache_dir",
        "retries",
        "retries",
        "retries",
        "options",
        "retries",
        "trusted_hosts",
        "options",
        "trusted_hosts",
        "index_urls",
        "_get_index_urls",
        "options",
        "ssl_context",
        "ssl_context",
        "options",
        "cert",
        "options",
        "cert",
        "options",
        "client_cert",
        "options",
        "client_cert",
        "options",
        "timeout",
        "timeout",
        "timeout",
        "timeout",
        "options",
        "timeout",
        "options",
        "proxy",
        "options",
        "proxy",
        "options",
        "proxy",
        "options",
        "proxy",
        "session",
        "auth",
        "options",
        "no_input",
        "session",
        "auth",
        "options",
        "keyring_provider",
        "session",
        "session",
        "options",
        "Values",
        "pip",
        "_internal",
        "self_outdated_check",
        "pip_self_version_check",
        "check",
        "check",
        "session",
        "options",
        "Command",
        "SessionCommandMixin",
        "options",
        "Values",
        "hasattr",
        "options",
        "options",
        "disable_pip_version_check",
        "options",
        "no_index",
        "_build_session",
        "options",
        "retries",
        "timeout",
        "min",
        "options",
        "timeout",
        "session",
        "_pip_self_version_check",
        "session",
        "options",
        "logger",
        "warning",
        "logger",
        "debug",
        "exc_info"
    ],
    "literals": [
        "\"SSLContext\"",
        "\"Disabling truststore because Python version isn't 3.10+\"",
        "\"Disabling truststore since ssl support is missing\"",
        "\"Disabling truststore because platform isn't supported\"",
        "\"no_index\"",
        "\"index_url\"",
        "\"extra_index_urls\"",
        "\"PipSession\"",
        "\"PipSession\"",
        "\"legacy-certs\"",
        "\"http-v2\"",
        "\"http\"",
        "\"https\"",
        "\"PipSession\"",
        "\"no_index\"",
        "\"There was an error checking the latest version of pip.\"",
        "\"See below for error\""
    ],
    "variables": [
        "logger",
        "ctx",
        "_session",
        "index_urls",
        "url",
        "urls",
        "_session",
        "cache_dir",
        "ssl_context",
        "ssl_context",
        "session",
        "session",
        "verify",
        "session",
        "cert",
        "session",
        "timeout",
        "session",
        "proxies",
        "session",
        "trust_env",
        "session",
        "pip_proxy",
        "prompting",
        "keyring_provider",
        "session"
    ],
    "comments": [
        "Return None rather than an empty list",
        "there's no type annotation on requests.Session, so it's",
        "automatically ContextManager[Any] and self._session becomes Any,",
        "then https://github.com/python/mypy/issues/7696 kicks in",
        "Handle custom ca-bundles from the user",
        "Handle SSL client certificate",
        "Handle timeouts",
        "Handle configured proxies",
        "Determine if we can prompt the user for authentication or not",
        "Make sure the index_group options are present.",
        "Otherwise, check if we're using the latest version of pip available."
    ],
    "docstrings": [
        "\"\"\"\nContains command classes which may interact with an index / the network.\n\nUnlike its sister module, req_command, this module still uses lazy imports\nso commands which don't always hit the network (e.g. list w/o --outdated or\n--uptodate) don't need waste time importing PipSession and friends.\n\"\"\"",
        "\"\"\"\n    A class mixin for command classes needing _build_session().\n    \"\"\"",
        "\"\"\"Return a list of index urls from user-provided options.\"\"\"",
        "\"\"\"Get a default-managed session.\"\"\"",
        "\"\"\"\n    Abstract base class for commands with the index_group options.\n\n    This also corresponds to the commands that permit the pip version check.\n    \"\"\"",
        "\"\"\"\n        Do the pip version check if not disabled.\n\n        This overrides the default behavior of not doing the check.\n        \"\"\""
    ],
    "functions": [
        "_create_truststore_ssl_context",
        "_get_index_urls",
        "get_default_session",
        "_build_session",
        "_pip_self_version_check",
        "handle_pip_version_check"
    ],
    "classes": [
        "SessionCommandMixin",
        "IndexGroupCommand"
    ]
}