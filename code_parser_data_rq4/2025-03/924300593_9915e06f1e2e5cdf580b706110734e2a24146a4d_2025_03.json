{
    "identifiers": [
        "datasets",
        "load_dataset",
        "open_r1",
        "rewards",
        "code_reward",
        "time",
        "tqdm",
        "auto",
        "tqdm",
        "dotenv",
        "load_dotenv",
        "load_dotenv",
        "example",
        "time",
        "time",
        "example",
        "example",
        "code_reward",
        "test_completions",
        "reward_kwargs",
        "time",
        "time",
        "rewards",
        "end_time",
        "start_time",
        "example",
        "num_samples",
        "tqdm",
        "desc",
        "num_parallel",
        "parallel_dict",
        "num_samples",
        "load_dataset",
        "code_dataset",
        "shuffle",
        "seed",
        "select",
        "num_samples",
        "example",
        "example",
        "code_dataset",
        "example",
        "example",
        "code_dataset",
        "time",
        "time",
        "code_reward",
        "test_completions",
        "num_parallel",
        "num_parallel",
        "reward_kwargs",
        "time",
        "time",
        "start_time",
        "sum",
        "rewards",
        "len",
        "rewards",
        "min",
        "rewards",
        "max",
        "rewards",
        "results",
        "append",
        "num_samples",
        "num_parallel",
        "execution_time",
        "mean_reward",
        "min_reward",
        "max_reward",
        "result",
        "results",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result"
    ],
    "literals": [
        "\"content\"",
        "\"gold_standard_solution\"",
        "\"verification_info\"",
        "\"verification_info\"",
        "\"test_reward\"",
        "\"reward_time\"",
        "\"__main__\"",
        "\"Benchmarking samples\"",
        "\"open-r1/verifiable-coding-problems-python_decontaminated\"",
        "\"train\"",
        "\"content\"",
        "\"gold_standard_solution\"",
        "\"verification_info\"",
        "\"verification_info\"",
        "\"num_samples\"",
        "\"num_parallel\"",
        "\"execution_time\"",
        "\"mean_reward\"",
        "\"min_reward\"",
        "\"max_reward\"",
        "\"\\n## Benchmark Results\\n\"",
        "\"| Sample Size | Parallelization | Execution Time (s) | Mean Reward | Min Reward | Max Reward |\"",
        "\"|:-----------:|:---------------:|------------------:|:-----------:|:-----------:|:-----------:|\"",
        "f\"| {result['num_samples']:^11} | {result['num_parallel']:^15} | {result['execution_time']:17.2f} | {result['mean_reward']:^11.4f} | {result['min_reward']:^11.4f} | {result['max_reward']:^11.4f} |\"",
        "'num_samples'",
        "'num_parallel'",
        "'execution_time'",
        "'mean_reward'",
        "'min_reward'",
        "'max_reward'"
    ],
    "variables": [
        "start_time",
        "test_completions",
        "reward_kwargs",
        "rewards",
        "end_time",
        "example",
        "example",
        "parallel_dict",
        "results",
        "code_dataset",
        "code_dataset",
        "test_completions",
        "reward_kwargs",
        "start_time",
        "rewards",
        "execution_time",
        "mean_reward",
        "min_reward",
        "max_reward"
    ],
    "comments": [
        "coding=utf-8",
        "Copyright 2025 The HuggingFace Team. All rights reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "cap at 96 as PRO account is limited to 100",
        "Store results for table formatting",
        "Calculate some statistics about rewards",
        "Store results"
    ],
    "docstrings": [
        "\"\"\"\nBenchmark script for the code_reward function with E2B.\n\nThis script measures the performance of the code_reward function with varying numbers\nof samples and parallelization levels.\n\nEach sample is a CodeForces problem with a gold standard solution that is executed against a set of public test cases.\n\"\"\""
    ],
    "functions": [
        "benchmark_code_reward"
    ],
    "classes": []
}