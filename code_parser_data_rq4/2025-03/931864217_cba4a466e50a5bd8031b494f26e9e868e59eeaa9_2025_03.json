{
    "identifiers": [
        "os",
        "asyncio",
        "signal",
        "sys",
        "datetime",
        "uuid",
        "shutil",
        "typing",
        "Dict",
        "Optional",
        "Any",
        "colorama",
        "Fore",
        "Style",
        "init",
        "async_configs",
        "BrowserConfig",
        "browser_manager",
        "ManagedBrowser",
        "async_logger",
        "AsyncLogger",
        "AsyncLoggerBase",
        "utils",
        "get_home_folder",
        "logger",
        "Optional",
        "AsyncLoggerBase",
        "init",
        "logger",
        "AsyncLogger",
        "verbose",
        "isinstance",
        "logger",
        "AsyncLoggerBase",
        "AsyncLogger",
        "verbose",
        "logger",
        "os",
        "path",
        "join",
        "get_home_folder",
        "os",
        "makedirs",
        "profiles_dir",
        "exist_ok",
        "profile_name",
        "Optional",
        "browser_config",
        "Optional",
        "BrowserConfig",
        "Optional",
        "browser_config",
        "async_configs",
        "BrowserConfig",
        "BrowserConfig",
        "browser_type",
        "headless",
        "verbose",
        "profile_name",
        "datetime",
        "datetime",
        "now",
        "strftime",
        "timestamp",
        "uuid",
        "uuid4",
        "hex",
        "join",
        "c",
        "c",
        "isalnum",
        "c",
        "c",
        "profile_name",
        "os",
        "path",
        "join",
        "profiles_dir",
        "profile_name",
        "os",
        "makedirs",
        "profile_path",
        "exist_ok",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "logger",
        "info",
        "border",
        "tag",
        "logger",
        "info",
        "Fore",
        "GREEN",
        "profile_name",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "profile_path",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "tag",
        "logger",
        "info",
        "tag",
        "logger",
        "info",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "tag",
        "logger",
        "info",
        "border",
        "tag",
        "ManagedBrowser",
        "browser_type",
        "browser_config",
        "browser_type",
        "user_data_dir",
        "profile_path",
        "headless",
        "logger",
        "logger",
        "debugging_port",
        "browser_config",
        "debugging_port",
        "signal",
        "getsignal",
        "signal",
        "SIGINT",
        "signal",
        "getsignal",
        "signal",
        "SIGTERM",
        "sig",
        "frame",
        "logger",
        "warning",
        "tag",
        "managed_browser",
        "cleanup",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "original_sigint",
        "signal",
        "signal",
        "signal",
        "SIGTERM",
        "original_sigterm",
        "sig",
        "signal",
        "SIGINT",
        "logger",
        "error",
        "tag",
        "sys",
        "exit",
        "sig",
        "frame",
        "asyncio",
        "create_task",
        "cleanup_handler",
        "sig",
        "frame",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "sigint_handler",
        "signal",
        "signal",
        "signal",
        "SIGTERM",
        "sigint_handler",
        "asyncio",
        "Event",
        "termios",
        "tty",
        "select",
        "logger",
        "info",
        "Fore",
        "CYAN",
        "Fore",
        "WHITE",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "tag",
        "sys",
        "stdin",
        "fileno",
        "termios",
        "tcgetattr",
        "fd",
        "tty",
        "setcbreak",
        "fd",
        "select",
        "select",
        "sys",
        "stdin",
        "readable",
        "sys",
        "stdin",
        "read",
        "key",
        "lower",
        "logger",
        "info",
        "Fore",
        "GREEN",
        "Style",
        "RESET_ALL",
        "tag",
        "user_done_event",
        "managed_browser",
        "browser_process",
        "managed_browser",
        "browser_process",
        "poll",
        "logger",
        "info",
        "tag",
        "user_done_event",
        "asyncio",
        "sleep",
        "termios",
        "tcsetattr",
        "fd",
        "termios",
        "TCSADRAIN",
        "old_settings",
        "managed_browser",
        "start",
        "managed_browser",
        "browser_process",
        "browser_process",
        "logger",
        "error",
        "tag",
        "logger",
        "info",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "tag",
        "asyncio",
        "create_task",
        "listen_for_quit_command",
        "user_done_event",
        "is_set",
        "browser_process",
        "poll",
        "asyncio",
        "sleep",
        "listener_task",
        "done",
        "listener_task",
        "cancel",
        "listener_task",
        "asyncio",
        "CancelledError",
        "browser_process",
        "poll",
        "user_done_event",
        "is_set",
        "logger",
        "info",
        "tag",
        "managed_browser",
        "cleanup",
        "logger",
        "success",
        "Fore",
        "GREEN",
        "profile_path",
        "Style",
        "RESET_ALL",
        "tag",
        "e",
        "logger",
        "error",
        "e",
        "tag",
        "managed_browser",
        "cleanup",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "original_sigint",
        "signal",
        "signal",
        "signal",
        "SIGTERM",
        "original_sigterm",
        "managed_browser",
        "cleanup",
        "profile_path",
        "Dict",
        "Any",
        "os",
        "path",
        "exists",
        "profiles_dir",
        "name",
        "os",
        "listdir",
        "profiles_dir",
        "os",
        "path",
        "join",
        "profiles_dir",
        "name",
        "os",
        "path",
        "isdir",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "is_valid",
        "datetime",
        "datetime",
        "fromtimestamp",
        "os",
        "path",
        "getctime",
        "profile_path",
        "profiles",
        "append",
        "name",
        "profile_path",
        "created",
        "is_valid",
        "profiles",
        "sort",
        "key",
        "x",
        "x",
        "reverse",
        "profiles",
        "profile_name",
        "Optional",
        "os",
        "path",
        "join",
        "profiles_dir",
        "profile_name",
        "os",
        "path",
        "isdir",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "is_profile",
        "profile_path",
        "profile_name_or_path",
        "os",
        "path",
        "isabs",
        "profile_name_or_path",
        "profile_name_or_path",
        "os",
        "path",
        "join",
        "profiles_dir",
        "profile_name_or_path",
        "os",
        "path",
        "isdir",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "profile_path",
        "is_profile",
        "shutil",
        "rmtree",
        "profile_path",
        "crawl_callback",
        "logger",
        "info",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "GREEN",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "RED",
        "Style",
        "RESET_ALL",
        "tag",
        "crawl_callback",
        "logger",
        "info",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "MAGENTA",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "MAGENTA",
        "Style",
        "RESET_ALL",
        "tag",
        "input",
        "Fore",
        "CYAN",
        "exit_option",
        "Style",
        "RESET_ALL",
        "choice",
        "input",
        "Fore",
        "GREEN",
        "Style",
        "RESET_ALL",
        "create_profile",
        "name",
        "choice",
        "list_profiles",
        "profiles",
        "logger",
        "warning",
        "tag",
        "logger",
        "info",
        "tag",
        "i",
        "profile",
        "profiles",
        "logger",
        "info",
        "i",
        "Fore",
        "CYAN",
        "profile",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "profile",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "info",
        "profile",
        "strftime",
        "tag",
        "logger",
        "info",
        "profile",
        "tag",
        "logger",
        "info",
        "tag",
        "choice",
        "list_profiles",
        "profiles",
        "logger",
        "warning",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "Style",
        "RESET_ALL",
        "tag",
        "i",
        "profile",
        "profiles",
        "logger",
        "info",
        "i",
        "profile",
        "tag",
        "input",
        "Fore",
        "RED",
        "Style",
        "RESET_ALL",
        "profile_idx",
        "lower",
        "profile_idx",
        "idx",
        "len",
        "profiles",
        "profiles",
        "idx",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "profile_name",
        "Style",
        "RESET_ALL",
        "tag",
        "input",
        "Fore",
        "RED",
        "Style",
        "RESET_ALL",
        "confirm",
        "lower",
        "delete_profile",
        "profiles",
        "idx",
        "success",
        "logger",
        "success",
        "Fore",
        "GREEN",
        "profile_name",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "error",
        "Fore",
        "RED",
        "profile_name",
        "Style",
        "RESET_ALL",
        "tag",
        "logger",
        "error",
        "tag",
        "ValueError",
        "logger",
        "error",
        "tag",
        "choice",
        "crawl_callback",
        "list_profiles",
        "profiles",
        "logger",
        "warning",
        "tag",
        "logger",
        "info",
        "Fore",
        "YELLOW",
        "Style",
        "RESET_ALL",
        "tag",
        "i",
        "profile",
        "profiles",
        "logger",
        "info",
        "i",
        "profile",
        "tag",
        "input",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "profile_idx",
        "lower",
        "profile_idx",
        "idx",
        "len",
        "profiles",
        "profiles",
        "idx",
        "input",
        "Fore",
        "CYAN",
        "Style",
        "RESET_ALL",
        "url",
        "crawl_callback",
        "profile_path",
        "url",
        "logger",
        "error",
        "tag",
        "logger",
        "error",
        "tag",
        "ValueError",
        "logger",
        "error",
        "tag",
        "choice",
        "exit_option",
        "logger",
        "info",
        "tag",
        "logger",
        "error",
        "exit_option",
        "tag"
    ],
    "literals": [
        "\"profiles\"",
        "\"chromium\"",
        "\"%Y%m%d_%H%M%S\"",
        "f\"profile_{timestamp}_{uuid.uuid4().hex[:6]}\"",
        "\"\"",
        "\"-_\"",
        "\"_\"",
        "f\"{Fore.CYAN}{'='*80}{Style.RESET_ALL}\"",
        "'='",
        "f\"\\n{border}\"",
        "\"PROFILE\"",
        "f\"Creating browser profile: {Fore.GREEN}{profile_name}{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "f\"Profile directory: {Fore.YELLOW}{profile_path}{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "\"\\nInstructions:\"",
        "\"PROFILE\"",
        "\"1. A browser window will open for you to set up your profile.\"",
        "\"PROFILE\"",
        "f\"2. {Fore.CYAN}Log in to websites{Style.RESET_ALL}, configure settings, etc. as needed.\"",
        "\"PROFILE\"",
        "f\"3. When you're done, {Fore.YELLOW}press 'q' in this terminal{Style.RESET_ALL} to close the browser.\"",
        "\"PROFILE\"",
        "\"4. The profile will be saved and ready to use with Crawl4AI.\"",
        "\"PROFILE\"",
        "f\"{border}\\n\"",
        "\"PROFILE\"",
        "\"\\nCleaning up browser process...\"",
        "\"PROFILE\"",
        "\"Profile creation interrupted. Profile may be incomplete.\"",
        "\"PROFILE\"",
        "f\"{Fore.CYAN}Press '{Fore.WHITE}q{Fore.CYAN}' when you've finished using the browser...{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "'q'",
        "f\"{Fore.GREEN}Closing browser and saving profile...{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "\"Browser already closed. Ending input listener.\"",
        "\"PROFILE\"",
        "\"Failed to start browser process.\"",
        "\"PROFILE\"",
        "f\"Browser launched. {Fore.CYAN}Waiting for you to finish...{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "\"Terminating browser process...\"",
        "\"PROFILE\"",
        "f\"Browser closed. Profile saved at: {Fore.GREEN}{profile_path}{Style.RESET_ALL}\"",
        "\"PROFILE\"",
        "f\"Error creating profile: {str(e)}\"",
        "\"PROFILE\"",
        "\"Preferences\"",
        "\"Default\"",
        "\"Preferences\"",
        "\"chromium\"",
        "\"prefs.js\"",
        "\"firefox\"",
        "\"name\"",
        "\"path\"",
        "\"created\"",
        "\"type\"",
        "\"created\"",
        "\"Preferences\"",
        "\"Default\"",
        "\"Preferences\"",
        "\"prefs.js\"",
        "\"Preferences\"",
        "\"Default\"",
        "\"Preferences\"",
        "\"prefs.js\"",
        "f\"\\n{Fore.CYAN}Profile Management Options:{Style.RESET_ALL}\"",
        "\"MENU\"",
        "f\"1. {Fore.GREEN}Create a new profile{Style.RESET_ALL}\"",
        "\"MENU\"",
        "f\"2. {Fore.YELLOW}List available profiles{Style.RESET_ALL}\"",
        "\"MENU\"",
        "f\"3. {Fore.RED}Delete a profile{Style.RESET_ALL}\"",
        "\"MENU\"",
        "f\"4. {Fore.CYAN}Use a profile to crawl a website{Style.RESET_ALL}\"",
        "\"MENU\"",
        "f\"5. {Fore.MAGENTA}Exit{Style.RESET_ALL}\"",
        "\"MENU\"",
        "\"5\"",
        "f\"4. {Fore.MAGENTA}Exit{Style.RESET_ALL}\"",
        "\"MENU\"",
        "\"4\"",
        "f\"\\n{Fore.CYAN}Enter your choice (1-{exit_option}): {Style.RESET_ALL}\"",
        "\"1\"",
        "f\"{Fore.GREEN}Enter a name for the new profile (or press Enter for auto-generated name): {Style.RESET_ALL}\"",
        "\"2\"",
        "\"  No profiles found. Create one first with option 1.\"",
        "\"PROFILES\"",
        "\"\\nAvailable profiles:\"",
        "\"PROFILES\"",
        "f\"[{i+1}] {Fore.CYAN}{profile['name']}{Style.RESET_ALL}\"",
        "'name'",
        "\"PROFILES\"",
        "f\"    Path: {Fore.YELLOW}{profile['path']}{Style.RESET_ALL}\"",
        "'path'",
        "\"PROFILES\"",
        "f\"    Created: {profile['created'].strftime('%Y-%m-%d %H:%M:%S')}\"",
        "'created'",
        "'%Y-%m-%d %H:%M:%S'",
        "\"PROFILES\"",
        "f\"    Browser type: {profile['type']}\"",
        "'type'",
        "\"PROFILES\"",
        "\"\"",
        "\"PROFILES\"",
        "\"3\"",
        "\"No profiles found to delete\"",
        "\"PROFILES\"",
        "f\"\\n{Fore.YELLOW}Available profiles:{Style.RESET_ALL}\"",
        "\"PROFILES\"",
        "f\"[{i+1}] {profile['name']}\"",
        "'name'",
        "\"PROFILES\"",
        "f\"{Fore.RED}Enter the number of the profile to delete (or 'c' to cancel): {Style.RESET_ALL}\"",
        "'c'",
        "\"name\"",
        "f\"Deleting profile: {Fore.YELLOW}{profile_name}{Style.RESET_ALL}\"",
        "\"PROFILES\"",
        "f\"{Fore.RED}Are you sure you want to delete this profile? (y/n): {Style.RESET_ALL}\"",
        "'y'",
        "\"path\"",
        "f\"Profile {Fore.GREEN}{profile_name}{Style.RESET_ALL} deleted successfully\"",
        "\"PROFILES\"",
        "f\"Failed to delete profile {Fore.RED}{profile_name}{Style.RESET_ALL}\"",
        "\"PROFILES\"",
        "\"Invalid profile number\"",
        "\"PROFILES\"",
        "\"Please enter a valid number\"",
        "\"PROFILES\"",
        "\"4\"",
        "\"No profiles found. Create one first.\"",
        "\"PROFILES\"",
        "f\"\\n{Fore.YELLOW}Available profiles:{Style.RESET_ALL}\"",
        "\"PROFILES\"",
        "f\"[{i+1}] {profile['name']}\"",
        "'name'",
        "\"PROFILES\"",
        "f\"{Fore.CYAN}Enter the number of the profile to use (or 'c' to cancel): {Style.RESET_ALL}\"",
        "'c'",
        "\"path\"",
        "f\"{Fore.CYAN}Enter the URL to crawl: {Style.RESET_ALL}\"",
        "\"No URL provided\"",
        "\"CRAWL\"",
        "\"Invalid profile number\"",
        "\"PROFILES\"",
        "\"Please enter a valid number\"",
        "\"PROFILES\"",
        "\"Exiting profile management\"",
        "\"MENU\"",
        "f\"Invalid choice. Please enter a number between 1 and {exit_option}.\"",
        "\"MENU\""
    ],
    "variables": [
        "logger",
        "logger",
        "logger",
        "profiles_dir",
        "browser_config",
        "browser_config",
        "headless",
        "timestamp",
        "profile_name",
        "profile_name",
        "profile_path",
        "border",
        "managed_browser",
        "original_sigint",
        "original_sigterm",
        "user_done_event",
        "fd",
        "old_settings",
        "readable",
        "_",
        "_",
        "key",
        "browser_process",
        "listener_task",
        "profiles",
        "profile_path",
        "is_valid",
        "is_valid",
        "is_valid",
        "created",
        "profile_path",
        "is_profile",
        "profile_path",
        "profile_path",
        "is_profile",
        "exit_option",
        "exit_option",
        "choice",
        "name",
        "profiles",
        "profiles",
        "profile_idx",
        "idx",
        "profile_name",
        "confirm",
        "success",
        "profiles",
        "profile_idx",
        "idx",
        "profile_path",
        "url"
    ],
    "comments": [
        "Initialize colorama for colorful terminal output",
        "Create a logger if not provided",
        "Ensure profiles directory exists",
        "Create default browser config if none provided",
        "Must be visible for user interaction",
        "Ensure headless is False for user interaction",
        "Generate profile name if not provided",
        "Sanitize profile name (replace spaces and special chars)",
        "Set user data directory",
        "Print instructions for the user with colorama formatting",
        "Create managed browser instance",
        "Must be visible",
        "Set up signal handlers to ensure cleanup on interrupt",
        "Define cleanup handler for signals",
        "Restore original signal handlers",
        "Set signal handlers",
        "Event to signal when user is done with the browser",
        "Run keyboard input loop in a separate task",
        "First output the prompt",
        "Save original terminal settings",
        "Switch to non-canonical mode (no line buffering)",
        "Check if input is available (non-blocking)",
        "Check if the browser process has already exited",
        "Restore terminal settings",
        "Start the browser",
        "Check if browser started successfully",
        "Start listening for keyboard input",
        "Wait for either the user to press 'q' or for the browser process to exit naturally",
        "Cancel the listener task if it's still running",
        "If the browser is still running and the user pressed 'q', terminate it",
        "Restore original signal handlers",
        "Make sure browser is fully cleaned up",
        "Return the profile path",
        "Skip if not a directory",
        "Check if this looks like a valid browser profile",
        "For Chromium: Look for Preferences file",
        "For Firefox: Look for prefs.js file",
        "Get creation time",
        "Sort by creation time, newest first",
        "Check if path exists and is a valid profile",
        "Look for profile indicators",
        "Not a valid browser profile",
        "Determine if input is a name or a path",
        "Full path provided",
        "Just a name provided, construct path",
        "Check if path exists and is a valid profile",
        "Look for profile indicators",
        "Not a valid browser profile",
        "Delete the profile directory",
        "Only show crawl option if callback provided",
        "Create new profile",
        "List profiles",
        "Print profile information with colorama formatting",
        "Empty line for spacing",
        "Delete profile",
        "Display numbered list",
        "Get profile to delete",
        "Confirm deletion",
        "Use profile to crawl a site",
        "Display numbered list",
        "Get profile to use",
        "Call the provided crawl callback",
        "Exit"
    ],
    "docstrings": [
        "\"\"\"\nBrowser Profiler Module\n\nThis module provides a dedicated class for managing browser profiles\nthat can be used for identity-based crawling with Crawl4AI.\n\"\"\"",
        "\"\"\"\n    A dedicated class for managing browser profiles for Crawl4AI.\n    \n    The BrowserProfiler allows you to:\n    - Create browser profiles interactively\n    - List available profiles\n    - Delete profiles when no longer needed\n    - Get profile paths for use in BrowserConfig\n    \n    Profiles are stored by default in ~/.crawl4ai/profiles/\n    \"\"\"",
        "\"\"\"\n        Initialize the BrowserProfiler.\n        \n        Args:\n            logger (AsyncLoggerBase, optional): Logger for outputting messages.\n                If None, a default AsyncLogger will be created.\n        \"\"\"",
        "\"\"\"\n        Creates a browser profile by launching a browser for interactive user setup\n        and waits until the user closes it. The profile is stored in a directory that\n        can be used later with BrowserConfig.user_data_dir.\n        \n        Args:\n            profile_name (str, optional): Name for the profile directory.\n                If None, a name is generated based on timestamp.\n            browser_config (BrowserConfig, optional): Configuration for the browser.\n                If None, a default configuration is used with headless=False.\n                \n        Returns:\n            str: Path to the created profile directory, or None if creation failed\n            \n        Example:\n            ```python\n            profiler = BrowserProfiler()\n            \n            # Create a profile interactively\n            profile_path = await profiler.create_profile(\n                profile_name=\"my-login-profile\"\n            )\n            \n            # Use the profile in a crawler\n            browser_config = BrowserConfig(\n                headless=True,\n                use_managed_browser=True,\n                user_data_dir=profile_path\n            )\n            \n            async with AsyncWebCrawler(config=browser_config) as crawler:\n                # The crawler will now use your profile with all your cookies and login state\n                result = await crawler.arun(\"https://example.com/dashboard\")\n            ```\n        \"\"\"",
        "\"\"\"\n        Lists all available browser profiles in the Crawl4AI profiles directory.\n        \n        Returns:\n            list: A list of dictionaries containing profile information:\n                  [{\"name\": \"profile_name\", \"path\": \"/path/to/profile\", \"created\": datetime, \"type\": \"chromium|firefox\"}]\n                  \n        Example:\n            ```python\n            profiler = BrowserProfiler()\n            \n            # List all available profiles\n            profiles = profiler.list_profiles()\n            \n            for profile in profiles:\n                print(f\"Profile: {profile['name']}\")\n                print(f\"  Path: {profile['path']}\")\n                print(f\"  Created: {profile['created']}\")\n                print(f\"  Browser type: {profile['type']}\")\n            ```\n        \"\"\"",
        "\"\"\"\n        Get the full path to a profile by name.\n        \n        Args:\n            profile_name (str): Name of the profile (not the full path)\n            \n        Returns:\n            str: Full path to the profile directory, or None if not found\n            \n        Example:\n            ```python\n            profiler = BrowserProfiler()\n            \n            path = profiler.get_profile_path(\"my-profile\")\n            if path:\n                print(f\"Profile path: {path}\")\n            else:\n                print(\"Profile not found\")\n            ```\n        \"\"\"",
        "\"\"\"\n        Delete a browser profile by name or path.\n        \n        Args:\n            profile_name_or_path (str): Name of the profile or full path to profile directory\n            \n        Returns:\n            bool: True if the profile was deleted successfully, False otherwise\n            \n        Example:\n            ```python\n            profiler = BrowserProfiler()\n            \n            # Delete by name\n            success = profiler.delete_profile(\"my-profile\")\n            \n            # Delete by path\n            success = profiler.delete_profile(\"/path/to/.crawl4ai/profiles/my-profile\")\n            ```\n        \"\"\"",
        "\"\"\"\n        Launch an interactive profile management console.\n        \n        Args:\n            crawl_callback (callable, optional): Function to call when selecting option to use \n                a profile for crawling. It will be called with (profile_path, url).\n                \n        Example:\n            ```python\n            profiler = BrowserProfiler()\n            \n            # Define a custom crawl function\n            async def my_crawl_function(profile_path, url):\n                print(f\"Crawling {url} with profile {profile_path}\")\n                # Implement your crawling logic here\n                \n            # Start interactive manager\n            await profiler.interactive_manager(crawl_callback=my_crawl_function)\n            ```\n        \"\"\""
    ],
    "functions": [
        "create_profile",
        "cleanup_handler",
        "sigint_handler",
        "listen_for_quit_command",
        "list_profiles",
        "get_profile_path",
        "delete_profile",
        "interactive_manager"
    ],
    "classes": [
        "BrowserProfiler"
    ]
}