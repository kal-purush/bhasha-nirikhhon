{
    "identifiers": [
        "Moq",
        "NUnit",
        "Framework",
        "ServerApp",
        "BLL",
        "Services",
        "Base",
        "ServerApp",
        "DAL",
        "Infrastructure",
        "ServerApp",
        "BLL",
        "Test",
        "BaseServiceTests",
        "TestFixture",
        "BaseService",
        "SomeModel",
        "SetUp",
        "Mock",
        "IUnitOfWork",
        "_service",
        "BaseService",
        "SomeModel",
        "unitOfWorkMock",
        "Test",
        "SomeModel",
        "Property1",
        "Property2",
        "Assert",
        "DoesNotThrow",
        "_service",
        "ValidateModelPropertiesWithAttribute",
        "model",
        "Test",
        "SomeModel",
        "Property1",
        "Property2",
        "Assert",
        "Throws",
        "ArgumentException",
        "_service",
        "ValidateModelPropertiesWithAttribute",
        "model",
        "Assert",
        "That",
        "ex",
        "Message",
        "Does",
        "Contain",
        "Test",
        "SomeModel",
        "Property1",
        "Property2",
        "Assert",
        "Throws",
        "ArgumentException",
        "_service",
        "ValidateModelPropertiesWithAttribute",
        "model",
        "Assert",
        "That",
        "ex",
        "Message",
        "Does",
        "Contain",
        "Test",
        "SomeModel",
        "Property1",
        "Property2",
        "Assert",
        "Throws",
        "ArgumentException",
        "_service",
        "ValidateModelPropertiesWithAttribute",
        "model",
        "Assert",
        "That",
        "ex",
        "Message",
        "Does",
        "Contain",
        "Test",
        "SomeModelWithSkipValidation",
        "Property1",
        "Property2",
        "Assert",
        "DoesNotThrow",
        "_service",
        "ValidateModelPropertiesWithAttribute",
        "model",
        "SkipValidation",
        "SkipValidation",
        "AttributeUsage",
        "AttributeTargets",
        "Property",
        "Attribute"
    ],
    "literals": [
        "\"Valid String\"",
        "\"Property 'Property1' in model 'SomeModel' cannot be null.\"",
        "\"\"",
        "\"Property 'Property1' in model 'SomeModel' cannot be an empty string or whitespace.\"",
        "\"   \"",
        "\"Property 'Property1' in model 'SomeModel' cannot be an empty string or whitespace.\"",
        "\"fsdf\""
    ],
    "variables": [
        "_service",
        "unitOfWorkMock",
        "model",
        "model",
        "ex",
        "model",
        "ex",
        "model",
        "ex",
        "model",
        "Property1",
        "Property2",
        "Property1",
        "Property2"
    ],
    "comments": [
        "Kiểm tra trường hợp thuộc tính hợp lệ",
        "Arrange",
        "Act & Assert",
        "Kiểm tra trường hợp thuộc tính là null",
        "Arrange",
        "Property1 là null",
        "Act & Assert",
        "Kiểm tra trường hợp thuộc tính là chuỗi rỗng",
        "Arrange",
        "Property1 là chuỗi rỗng",
        "Act & Assert",
        "Kiểm tra trường hợp thuộc tính chứa chỉ khoảng trắng",
        "Arrange",
        "Property1 chỉ chứa khoảng trắng",
        "Act & Assert",
        "Arrange",
        "Act & Assert",
        "Kiểm tra không có exception khi gọi ValidateModelPropertiesWithAttribute",
        "Mô hình test",
        "Mô hình với SkipValidationAttribute",
        "Attribute SkipValidation"
    ],
    "docstrings": [],
    "functions": [
        "Setup",
        "ValidateModelPropertiesWithAttribute_ValidProperties_DoesNotThrowException",
        "ValidateModelPropertiesWithAttribute_PropertyIsNull_ThrowsArgumentException",
        "ValidateModelPropertiesWithAttribute_PropertyIsEmptyString_ThrowsArgumentException",
        "ValidateModelPropertiesWithAttribute_PropertyIsWhitespace_ThrowsArgumentException",
        "ValidateModelPropertiesWithAttribute_PropertyHasSkipValidationAttribute_DoesNotThrowException"
    ],
    "classes": [
        "BaseServiceTests",
        "SomeModel",
        "SomeModelWithSkipValidation",
        "SkipValidationAttribute"
    ]
}