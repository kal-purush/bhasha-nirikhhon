{
    "identifiers": [
        "cv2",
        "numpy",
        "np",
        "argparse",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "cv2",
        "imread",
        "args",
        "image_path",
        "img",
        "args",
        "image_path",
        "exit",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2GRAY",
        "cv2",
        "GaussianBlur",
        "gray",
        "cv2",
        "adaptiveThreshold",
        "blur",
        "cv2",
        "ADAPTIVE_THRESH_GAUSSIAN_C",
        "cv2",
        "THRESH_BINARY_INV",
        "cv2",
        "Canny",
        "gray",
        "cv2",
        "findContours",
        "thresh",
        "cv2",
        "RETR_LIST",
        "cv2",
        "CHAIN_APPROX_SIMPLE",
        "np",
        "full_like",
        "img",
        "background_color",
        "img",
        "shape",
        "img_width",
        "img_height",
        "contour",
        "edges",
        "cv2",
        "boundingRect",
        "contour",
        "w",
        "max_width",
        "h",
        "max_height",
        "cv2",
        "contourArea",
        "contour",
        "cv2",
        "arcLength",
        "contour",
        "w",
        "h",
        "h",
        "edges",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "perimeter",
        "perimeter",
        "perimeter",
        "cv2",
        "approxPolyDP",
        "contour",
        "epsilon",
        "len",
        "approx",
        "np",
        "pi",
        "area",
        "perimeter",
        "perimeter",
        "perimeter",
        "vertices",
        "circularity",
        "area",
        "vertices",
        "vertices",
        "aspect",
        "np",
        "mean",
        "roi",
        "roi",
        "size",
        "line_thickness",
        "cv2",
        "countNonZero",
        "roi",
        "w",
        "h",
        "line_thickness",
        "cv2",
        "countNonZero",
        "roi",
        "w",
        "h",
        "area",
        "vertices",
        "aspect",
        "vertices",
        "aspect",
        "area",
        "vertices",
        "aspect",
        "vertices",
        "aspect",
        "contour",
        "contours",
        "cv2",
        "contourArea",
        "contour",
        "area",
        "min_area",
        "cv2",
        "boundingRect",
        "contour",
        "classify_symbol",
        "contour",
        "edges",
        "symbol_type",
        "w",
        "max_width",
        "h",
        "max_height",
        "symbol_type",
        "symbols",
        "symbols",
        "symbol_type",
        "append",
        "x",
        "y",
        "w",
        "h",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "img",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "cv2",
        "imwrite",
        "output",
        "symbol_type",
        "boxes",
        "symbols",
        "items",
        "symbol_type",
        "len",
        "boxes",
        "i",
        "x",
        "y",
        "w",
        "h",
        "boxes",
        "i",
        "x",
        "y",
        "w",
        "h",
        "cv2",
        "imshow",
        "output",
        "cv2",
        "waitKey",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "'Detect symbols in P&ID image'",
        "'image_path'",
        "'Path to the P&ID image'",
        "f\"Error: Could not load image from {args.image_path}\"",
        "\"Small Circle\"",
        "\"Circle\"",
        "\"Triangle\"",
        "\"Square\"",
        "\"Rectangle\"",
        "\"Thick Line\"",
        "\"Solid Line\"",
        "\"Dashed Line\"",
        "\"Thin Line\"",
        "\"Tank/Vessel\"",
        "\"Instrument Circle\"",
        "\"Arrow\"",
        "\"Cross\"",
        "\"Unknown\"",
        "'pid_symbols_only.jpg'",
        "\"\\nDetected Symbols (coordinates only):\"",
        "f\"{symbol_type}: {len(boxes)} instances\"",
        "f\"  {i}. Position: ({x}, {y}), Size: ({w}x{h})\"",
        "'P&ID Symbols Only'"
    ],
    "variables": [
        "parser",
        "args",
        "img",
        "gray",
        "blur",
        "thresh",
        "edges",
        "contours",
        "_",
        "background_color",
        "output",
        "img_height",
        "img_width",
        "max_width",
        "max_height",
        "x",
        "y",
        "w",
        "h",
        "area",
        "perimeter",
        "aspect",
        "roi",
        "epsilon",
        "approx",
        "vertices",
        "circularity",
        "line_thickness",
        "symbols",
        "min_area",
        "area",
        "x",
        "y",
        "w",
        "h",
        "symbol_type",
        "symbols",
        "symbol_type",
        "output"
    ],
    "comments": [
        "Set up command-line argument for the image path",
        "Read and preprocess the image",
        "Edge detection for line analysis",
        "Find contours using RETR_LIST to detect all contours, including nested ones",
        "Define the background color (assuming white; adjust if needed)",
        "BGR format: White (common in P&ID)",
        "Create an output image filled with the background color",
        "Get image dimensions and set size constraints",
        "Function to classify symbols with adaptive epsilon",
        "Adaptive epsilon: smaller for smaller perimeters",
        "Circle detection",
        "Triangle detection",
        "Other shapes (e.g., square, rectangle)",
        "Line types (optional for P&ID context)",
        "P&ID-specific symbols (examples)",
        "Detect and bound symbols",
        "Minimum area to detect small symbols (including triangles)",
        "Copy the symbol region from the original image to the output",
        "Save the result",
        "Print detected symbols summary",
        "Display the result"
    ],
    "docstrings": [],
    "functions": [
        "classify_symbol"
    ],
    "classes": []
}