{
    "identifiers": [
        "Net",
        "Security",
        "Cryptography",
        "Security",
        "Cryptography",
        "X509Certificates",
        "HealthChecks",
        "ApplicationStatus",
        "DependencyInjection",
        "Microsoft",
        "AspNetCore",
        "Builder",
        "Microsoft",
        "AspNetCore",
        "Diagnostics",
        "HealthChecks",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Microsoft",
        "Extensions",
        "Logging",
        "OpenTelemetry",
        "OpenTelemetry",
        "Exporter",
        "OpenTelemetry",
        "Logs",
        "OpenTelemetry",
        "Metrics",
        "OpenTelemetry",
        "Trace",
        "Net",
        "WebRequestMethods",
        "Microsoft",
        "Extensions",
        "Hosting",
        "TBuilder",
        "TBuilder",
        "builder",
        "TBuilder",
        "IHostApplicationBuilder",
        "builder",
        "ConfigureOpenTelemetry",
        "builder",
        "AddDefaultHealthChecks",
        "builder",
        "Services",
        "AddServiceDiscovery",
        "builder",
        "TBuilder",
        "TBuilder",
        "builder",
        "TBuilder",
        "IHostApplicationBuilder",
        "builder",
        "Logging",
        "AddOpenTelemetry",
        "logging",
        "IncludeFormattedMessage",
        "logging",
        "IncludeScopes",
        "builder",
        "Services",
        "AddOpenTelemetry",
        "WithMetrics",
        "metrics",
        "AddAspNetCoreInstrumentation",
        "AddHttpClientInstrumentation",
        "AddRuntimeInstrumentation",
        "SetExemplarFilter",
        "ExemplarFilterType",
        "TraceBased",
        "WithTracing",
        "tracing",
        "AddAspNetCoreInstrumentation",
        "AddHttpClientInstrumentation",
        "AddOtlpExporter",
        "builder",
        "AddOpenTelemetryExporters",
        "builder",
        "TBuilder",
        "TBuilder",
        "builder",
        "TBuilder",
        "IHostApplicationBuilder",
        "IsNullOrWhiteSpace",
        "builder",
        "Configuration",
        "useOtlpExporter",
        "Equals",
        "Environment",
        "GetEnvironmentVariable",
        "StringComparison",
        "InvariantCultureIgnoreCase",
        "builder",
        "Services",
        "Configure",
        "OtlpExporterOptions",
        "ConfigureOtlpExporterOptions",
        "builder",
        "Services",
        "AddOpenTelemetry",
        "WithLogging",
        "logging",
        "AddOtlpExporter",
        "WithMetrics",
        "metrics",
        "AddOtlpExporter",
        "WithTracing",
        "tracing",
        "AddOtlpExporter",
        "builder",
        "Services",
        "AddOpenTelemetry",
        "UseOtlpExporter",
        "ConfigureOtlpExporterOptions",
        "OtlpExporterOptions",
        "options",
        "options",
        "HttpClientFactory",
        "HttpClientHandler",
        "handler",
        "ServerCertificateCustomValidationCallback",
        "HttpClientHandler",
        "DangerousAcceptAnyServerCertificateValidator",
        "HttpClient",
        "handler",
        "httpClient",
        "builder",
        "TBuilder",
        "TBuilder",
        "builder",
        "TBuilder",
        "IHostApplicationBuilder",
        "builder",
        "Services",
        "AddHealthChecks",
        "AddApplicationStatus",
        "tags",
        "builder"
    ],
    "literals": [
        "\"OTEL_EXPORTER_OTLP_ENDPOINT\"",
        "\"YARP_UNSAFE_OLTP_CERT_ACCEPT_ANY_SERVER_CERTIFICATE\"",
        "\"true\"",
        "\"live\""
    ],
    "variables": [
        "useOtlpExporter",
        "handler",
        "httpClient"
    ],
    "comments": [
        "Adds common .NET Aspire services: service discovery, resilience, health checks, and OpenTelemetry.",
        "This project should be referenced by each service project in your solution.",
        "To learn more about using this project, see https://aka.ms/dotnet/aspire/service-defaults",
        "We cannot use UseOtlpExporter() since it doesn't support configuration via OtlpExporterOptions",
        "https://github.com/open-telemetry/opentelemetry-dotnet/issues/5802",
        "Add a default liveness check on application status."
    ],
    "docstrings": [],
    "functions": [
        "TBuilder",
        "AddServiceDefaults",
        "TBuilder",
        "ConfigureOpenTelemetry",
        "TBuilder",
        "AddOpenTelemetryExporters",
        "TBuilder",
        "AddDefaultHealthChecks"
    ],
    "classes": [
        "Extensions"
    ]
}