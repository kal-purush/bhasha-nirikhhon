{
    "identifiers": [
        "threading",
        "itertools",
        "time",
        "sys",
        "asyncio",
        "typing",
        "Callable",
        "Optional",
        "Any",
        "message",
        "delay",
        "chars",
        "Optional",
        "message",
        "delay",
        "chars",
        "threading",
        "Event",
        "itertools",
        "cycle",
        "chars",
        "_stop_event",
        "is_set",
        "spinner",
        "message",
        "max",
        "_last_line_length",
        "len",
        "current_line",
        "len",
        "current_line",
        "sys",
        "stdout",
        "write",
        "current_line",
        "padding",
        "sys",
        "stdout",
        "flush",
        "time",
        "sleep",
        "delay",
        "_stop_event",
        "is_set",
        "sys",
        "stdout",
        "write",
        "_last_line_length",
        "sys",
        "stdout",
        "flush",
        "_thread",
        "_stop_event",
        "clear",
        "threading",
        "target",
        "_spin",
        "_thread",
        "_thread",
        "start",
        "_thread",
        "_stop_event",
        "_thread",
        "join",
        "start",
        "exc_type",
        "exc_val",
        "exc_tb",
        "stop",
        "message",
        "func",
        "Callable",
        "args",
        "kwargs",
        "Spinner",
        "message",
        "func",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "Spinner",
        "message",
        "func",
        "args",
        "kwargs",
        "asyncio",
        "iscoroutinefunction",
        "func",
        "wrapper_async",
        "wrapper_sync",
        "decorator",
        "asyncio",
        "Spinner",
        "spinner",
        "start",
        "time",
        "sleep",
        "spinner",
        "stop",
        "Spinner",
        "time",
        "sleep",
        "Spinner",
        "spinner",
        "start",
        "time",
        "sleep",
        "time",
        "sleep",
        "time",
        "sleep",
        "spinner",
        "stop",
        "with_spinner",
        "asyncio",
        "sleep",
        "fetch_data",
        "result",
        "asyncio",
        "run",
        "run_async_demo",
        "with_spinner",
        "time",
        "sleep",
        "calculate",
        "result"
    ],
    "literals": [
        "\"Processing\"",
        "'⠋'",
        "'⠙'",
        "'⠹'",
        "'⠸'",
        "'⠼'",
        "'⠴'",
        "'⠦'",
        "'⠧'",
        "'⠇'",
        "'⠏'",
        "f\"{char} {self.message}...\"",
        "' '",
        "f\"\\r{current_line}{padding}\"",
        "f\"\\r{' ' * (self._last_line_length + 5)}\\r\"",
        "' '",
        "\"Processing\"",
        "\"__main__\"",
        "\"Demo 1: Basic spinner\"",
        "\"Loading\"",
        "\"Finished loading!\"",
        "\"\\nDemo 2: Context manager\"",
        "\"Processing data\"",
        "\"Data processed!\"",
        "\"\\nDemo 3: Variable length messages\"",
        "\"Short message\"",
        "\"This is a much longer message that should replace the shorter one\"",
        "\"Short again\"",
        "\"Variable message test complete!\"",
        "\"\\nDemo 4: Async decorator\"",
        "\"Fetching data\"",
        "\"Data fetched!\"",
        "\"\\nDemo 5: Sync decorator\"",
        "\"Calculating\"",
        "\"Calculation complete!\""
    ],
    "variables": [
        "message",
        "delay",
        "chars",
        "_thread",
        "_stop_event",
        "_last_line_length",
        "spinner",
        "current_line",
        "padding",
        "_last_line_length",
        "_thread",
        "daemon",
        "_thread",
        "spinner",
        "spinner",
        "spinner",
        "message",
        "spinner",
        "message",
        "result",
        "result"
    ],
    "comments": [
        "Create the current line to display",
        "Calculate padding to ensure we overwrite the entire previous line",
        "Save current line length for next iteration",
        "Write the line with padding and reset cursor to beginning of line",
        "Clear the line completely when stopping",
        "Handle both async and sync functions",
        "Demo of the spinner if this file is run directly",
        "Demo 1: Basic usage",
        "Demo 2: Context manager",
        "Demo 3: Test with variable length messages",
        "Demo 4: Decorator with async function",
        "Demo 5: Decorator with sync function"
    ],
    "docstrings": [
        "\"\"\"A text-based spinner to indicate processing in the terminal.\"\"\"",
        "\"\"\"\n        Initialize a spinner.\n\n        Args:\n            message: The message to display next to the spinner\n            delay: Time delay between spinner updates in seconds\n            chars: Optional list of characters to use for the spinner animation\n        \"\"\"",
        "\"\"\"The spinning animation logic.\"\"\"",
        "\"\"\"Start the spinner animation.\"\"\"",
        "\"\"\"Stop the spinner animation.\"\"\"",
        "\"\"\"Start the spinner when used as a context manager.\"\"\"",
        "\"\"\"Stop the spinner when exiting the context.\"\"\"",
        "\"\"\"\n    Decorator to add a spinner to a function.\n\n    Args:\n        message: The message to display next to the spinner\n    \"\"\""
    ],
    "functions": [
        "_spin",
        "start",
        "stop",
        "__enter__",
        "__exit__",
        "with_spinner",
        "decorator",
        "wrapper_async",
        "wrapper_sync",
        "fetch_data",
        "run_async_demo",
        "calculate"
    ],
    "classes": [
        "Spinner"
    ]
}