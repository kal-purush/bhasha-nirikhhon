{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "name",
        "email",
        "password",
        "res",
        "password",
        "User",
        "userExists",
        "res",
        "parser",
        "req",
        "ua",
        "User",
        "generateToken",
        "user",
        "res",
        "token",
        "user",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "email",
        "password",
        "res",
        "User",
        "user",
        "res",
        "bcrypt",
        "password",
        "user",
        "passwordIsCorrect",
        "res",
        "parser",
        "req",
        "ua",
        "thisUserAgent",
        "user",
        "thisUserAgent",
        "allowedAgent",
        "loginCode",
        "Cryptr",
        "process",
        "cryptr",
        "loginCode",
        "Token",
        "user",
        "accessCodeToken",
        "accessCodeToken",
        "Token",
        "user",
        "encryptedLoginCode",
        "res",
        "generateToken",
        "user",
        "user",
        "passwordIsCorrect",
        "res",
        "token",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "User",
        "req",
        "user",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "User",
        "req",
        "user",
        "user",
        "email",
        "user",
        "req",
        "name",
        "user",
        "req",
        "phone",
        "user",
        "req",
        "bio",
        "user",
        "req",
        "photo",
        "user",
        "res",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "updatedUser",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "User",
        "req",
        "user",
        "res",
        "user",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "User",
        "users",
        "res",
        "res",
        "users",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "token",
        "res",
        "jwt",
        "token",
        "process",
        "verified",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "User",
        "id",
        "user",
        "res",
        "user",
        "role",
        "user",
        "res",
        "role",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "subject",
        "send_to",
        "reply_to",
        "template",
        "res",
        "User",
        "send_to",
        "user",
        "res",
        "process",
        "user",
        "process",
        "url",
        "sendEmail",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "res",
        "error",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "User",
        "req",
        "user",
        "res",
        "user",
        "res",
        "Token",
        "user",
        "token",
        "token",
        "crypto",
        "user",
        "veriFicationToken",
        "hashToken",
        "veriFicationToken",
        "Token",
        "user",
        "hashedToken",
        "process",
        "veriFicationToken",
        "user",
        "process",
        "user",
        "sendEmail",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "res",
        "error",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "hashToken",
        "veriToken",
        "Token",
        "hashedToken",
        "userToken",
        "res",
        "User",
        "userToken",
        "user",
        "res",
        "user",
        "user",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "User",
        "user",
        "res",
        "Token",
        "user",
        "token",
        "token",
        "crypto",
        "user",
        "resetToken",
        "hashToken",
        "resetToken",
        "Token",
        "user",
        "hashedToken",
        "process",
        "resetToken",
        "user",
        "process",
        "user",
        "sendEmail",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "res",
        "error",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "req",
        "hashToken",
        "resetToken",
        "Token",
        "hashedToken",
        "userToken",
        "res",
        "User",
        "userToken",
        "user",
        "password",
        "user",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "User",
        "req",
        "user",
        "res",
        "oldPassword",
        "password",
        "res",
        "bcrypt",
        "oldPassword",
        "user",
        "user",
        "passwordIsCorrect",
        "user",
        "password",
        "user",
        "process",
        "user",
        "process",
        "user",
        "sendEmail",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "error",
        "res",
        "res",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "User",
        "user",
        "res",
        "Token",
        "user",
        "userToken",
        "res",
        "userToken",
        "Cryptr",
        "process",
        "cryptr",
        "loginCode",
        "user",
        "process",
        "user",
        "sendEmail",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "res",
        "email",
        "error",
        "res",
        "expressAsyncHandler",
        "req",
        "res",
        "req",
        "req",
        "User",
        "user",
        "res",
        "Token",
        "user",
        "userToken",
        "res",
        "Cryptr",
        "process",
        "cryptr",
        "userToken",
        "loginCode",
        "decryptedLoginCode",
        "res",
        "parser",
        "req",
        "ua",
        "user",
        "thisUserAgent",
        "user",
        "generateToken",
        "user",
        "res",
        "token",
        "res"
    ],
    "literals": [
        "\"express-async-handler\"",
        "\"../models/userModel\"",
        "\"../utils\"",
        "\"bcryptjs\"",
        "\"ua-parser-js\"",
        "\"jsonwebtoken\"",
        "\"../utils/sendEmail\"",
        "\"../models/tokenModel\"",
        "\"crypto\"",
        "\"cryptr\"",
        "\"Please fill in all the required fields.\"",
        "\"Password must be up to 8 characters.\"",
        "\"Email already in use.\"",
        "\"user-agent\"",
        "\"token\"",
        "\"/\"",
        "\"none\"",
        "\"Invalid user data.\"",
        "\"Please add email and password.\"",
        "\"User not found, please signup.\"",
        "\"Invalid email or password.\"",
        "\"user-agent\"",
        "\"New browser or device detected.\"",
        "\"token\"",
        "\"/\"",
        "\"none\"",
        "\"Something went wrong, please try again.\"",
        "\"token\"",
        "\"\"",
        "\"/\"",
        "\"none\"",
        "\"Logout successful.\"",
        "\"User not found\"",
        "\"User not found\"",
        "\"User not found.\"",
        "\"User deleted successfully.\"",
        "\"-createdAt\"",
        "\"-password\"",
        "\"Something went wrong.\"",
        "\"User not found.\"",
        "User role updated to ${role}",
        "\"Missing email parameter.\"",
        "\"User not found.\"",
        "${process.env.FRONTEND_URL}${url}",
        "\"Email send.\"",
        "\"Email not send, please try again.\"",
        "\"User not found.\"",
        "\"User already verified.\"",
        "\"hex\"",
        "${process.env.FRONTEND_URL}/verify/${veriFicationToken}",
        "\"Verify Your Account - AUTH:A\"",
        "\"noreply@sikkul.com\"",
        "\"verifyEmail\"",
        "\"Verification email send.\"",
        "\"Email not send, please try again.\"",
        "\"Invalid or expired token.\"",
        "\"User is already verified.\"",
        "\"Account verification successful.\"",
        "\"No user with this email.\"",
        "\"hex\"",
        "${process.env.FRONTEND_URL}/resetPassword/${resetToken}",
        "\"Password reset request - AUTH:A\"",
        "\"noreply@sikkul.com\"",
        "\"forgotPassword\"",
        "\"Password reset email send.\"",
        "\"Email not send, please try again.\"",
        "\"Invalid or expired token.\"",
        "\"Password reset successful, please login.\"",
        "\"User not found.\"",
        "\"Please enter old and new password.\"",
        "${process.env.FRONTEND_URL}/forgotPassword",
        "\"Your account password changed - AUTH:A\"",
        "\"noreply@sikkul.com\"",
        "\"changePassword\"",
        "\"\"",
        "\"Password change successful, please re-login.\"",
        "\"Old password is incorrect.\"",
        "\"User not found.\"",
        "\"Invalid or expired token, please login again.\"",
        "\"Login Access Code - AUTH:A\"",
        "\"noreply@sikkul.com\"",
        "\"loginCode\"",
        "Access code send to '${email}'.",
        "\"Email not send, please try again.\"",
        "\"User not found.\"",
        "\"Invalid or expired token, please login again.\"",
        "\"Incorrect login code, please try again.\"",
        "\"user-agent\"",
        "\"token\"",
        "\"/\"",
        "\"none\""
    ],
    "variables": [
        "expressAsyncHandler",
        "User",
        "bcrypt",
        "parser",
        "jwt",
        "sendEmail",
        "Token",
        "crypto",
        "Cryptr",
        "registerUser",
        "userExists",
        "ua",
        "userAgent",
        "user",
        "token",
        "user",
        "loginUser",
        "user",
        "passwordIsCorrect",
        "ua",
        "thisUserAgent",
        "allowedAgent",
        "loginCode",
        "cryptr",
        "encryptedLoginCode",
        "accessCodeToken",
        "token",
        "user",
        "logoutUser",
        "getUser",
        "user",
        "user",
        "updateUser",
        "user",
        "user",
        "updatedUser",
        "deleteUser",
        "user",
        "getUsers",
        "users",
        "loginStatus",
        "token",
        "verified",
        "upgradeUser",
        "user",
        "sendAutomatedEmail",
        "user",
        "send_from",
        "name",
        "link",
        "sendVerificationEmail",
        "user",
        "token",
        "veriFicationToken",
        "hashedToken",
        "verificationUrl",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "verificationUrl",
        "verifyUser",
        "veriToken",
        "veriFicationToken",
        "hashedToken",
        "userToken",
        "user",
        "forgotPassword",
        "user",
        "token",
        "resetToken",
        "hashedToken",
        "resetUrl",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "resetUrl",
        "resetPassword",
        "hashedToken",
        "userToken",
        "user",
        "changePassword",
        "user",
        "passwordIsCorrect",
        "changePassUrl",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "changePassUrl",
        "sendLoginCode",
        "user",
        "userToken",
        "loginCode",
        "cryptr",
        "decryptedLoginCode",
        "subject",
        "send_to",
        "send_from",
        "reply_to",
        "template",
        "name",
        "link",
        "decryptedLoginCode",
        "loginWithCode",
        "user",
        "userToken",
        "cryptr",
        "decryptedLoginCode",
        "ua",
        "thisUserAgent",
        "token",
        "user"
    ],
    "comments": [
        "Default Model of Node.js",
        "Register User",
        "Validation",
        "Check if user exists",
        "Get UserAgent",
        "Create new user",
        "Generate Token",
        "Send HTTP-only cookie",
        "1 day",
        "Login User",
        "Validation",
        "Trigger 2FA for unknown UserAgent",
        "Get UserAgent",
        "Generate 6 digit code",
        "Encrypt login code before saving to DB",
        "Delete Access Code Token if it exists in DB",
        "Save Access Code Token to DB",
        "60 min",
        "Generate Token",
        "Send HTTP-only cookie",
        "1 day",
        "Logout User",
        "Immediately expire",
        "Get User",
        "Update User",
        "Delete User",
        "Get Users",
        "Login Status",
        "Verify token",
        "Change User Role",
        "Send Automated Email",
        "Get User",
        "Send Verification Email",
        "Delete Token if it exists in DB",
        "Create Verification Token and Save",
        "Hash Token and Save",
        "10 min",
        "Construct Verification URL",
        "Send Verification Email",
        "Verify User(Send Verification Email)",
        "Find User",
        "Now verify user",
        "Forgot password",
        "Delete Token if it exists in DB",
        "Create Reset Token and Save",
        "Hash Token and Save",
        "10 min",
        "Construct Reset URL",
        "Send Reset Email",
        "Reset password (Forgot password)",
        "Find User",
        "Now reset password",
        "Change Password",
        "Check if the old password is correct",
        "Save new password",
        "Construct Reset URL",
        "Send Reset Email",
        "Send Login Code",
        "Find Login Code in DB",
        "Send Login Code",
        "Login With Code (Access Code)",
        "Find User Login Token",
        "Register userAgent",
        "Generate Token",
        "Send HTTP-only cookie",
        "10 min"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}