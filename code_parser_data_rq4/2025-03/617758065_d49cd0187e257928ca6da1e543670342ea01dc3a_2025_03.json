{
    "identifiers": [
        "com",
        "kmwllc",
        "lucille",
        "stage",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "ConfigUtils",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "Document",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "Stage",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "StageException",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "fileHandler",
        "FileHandler",
        "com",
        "kmwllc",
        "lucille",
        "core",
        "fileHandler",
        "FileHandlerException",
        "com",
        "kmwllc",
        "lucille",
        "util",
        "FileContentFetcher",
        "com",
        "typesafe",
        "config",
        "Config",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "org",
        "apache",
        "commons",
        "io",
        "FilenameUtils",
        "handlerOptions",
        "filePathField",
        "fileContentField",
        "fileFetcher",
        "fileHandlers",
        "config",
        "config",
        "withOptionalParents",
        "withOptionalProperties",
        "handlerOptions",
        "config",
        "getConfig",
        "handlerOptions",
        "isEmpty",
        "filePathField",
        "ConfigUtils",
        "getOrDefault",
        "config",
        "fileContentField",
        "ConfigUtils",
        "getOrDefault",
        "config",
        "fileFetcher",
        "config",
        "Override",
        "fileHandlers",
        "FileHandler",
        "createFromConfig",
        "handlerOptions",
        "fileHandlers",
        "isEmpty",
        "fileFetcher",
        "startup",
        "e",
        "e",
        "Override",
        "fileFetcher",
        "shutdown",
        "fileHandlers",
        "clear",
        "Override",
        "doc",
        "doc",
        "has",
        "filePathField",
        "filePath",
        "doc",
        "getString",
        "filePathField",
        "fileExtension",
        "FilenameUtils",
        "getExtension",
        "filePath",
        "fileHandlers",
        "containsKey",
        "fileExtension",
        "handler",
        "fileHandlers",
        "get",
        "fileExtension",
        "fileContentStream",
        "doc",
        "has",
        "fileContentField",
        "fileContents",
        "doc",
        "getBytes",
        "fileContentField",
        "fileContentStream",
        "fileContents",
        "fileContentStream",
        "fileFetcher",
        "getInputStream",
        "filePath",
        "e",
        "filePath",
        "e",
        "handler",
        "processFile",
        "fileContentStream",
        "filePath",
        "e",
        "filePath",
        "e"
    ],
    "literals": [
        "\"handlerOptions\"",
        "\"gcp\"",
        "\"azure\"",
        "\"s3\"",
        "\"filePathField\"",
        "\"fileContentField\"",
        "\"handlerOptions\"",
        "\"Must specify at least one file handler.\"",
        "\"filePathField\"",
        "\"file_path\"",
        "\"fileContentField\"",
        "\"file_content\"",
        "\"No file handlers could be created from the given handlerOptions.\"",
        "\"Error starting FileContentFetcher.\"",
        "\"Could not fetch InputStream for file \"",
        "\"Could not process file \""
    ],
    "variables": [
        "handlerOptions",
        "filePathField",
        "fileContentField",
        "fileFetcher",
        "fileHandlers",
        "fileContentStream"
    ],
    "comments": [],
    "docstrings": [
        "* <br> Using a document's file path, applies file handlers to create children documents, as appropriate, using the file's content.\n *\n * <br> filePathField (String, Optional): Specify the field in your documents which will has the file path you want to apply handlers to.\n * Defaults to \"file_path\". No processing will occur on documents without this field, even if they have the fileContentField present.\n *\n * <br> fileContentField (String, Optional): Specify the field in your documents which has the file's contents as an array of bytes.\n * Defaults to \"file_content\". When processing a document with a path to a supported file type, the handler will process the array\n * of bytes found in this field, if present, before having the FileContentFetcher to open an InputStream for the file's contents.\n *\n * <br> handlerOptions (Map): Specifies which file types should be handled / processed by this stage. Valid options include:\n * <br>   csv (Map, Optional): csv config options for handling csv type files. Config will be passed to CSVFileHandler\n * <br>   json (Map, Optional): json config options for handling json/jsonl type files. Config will be passed to JsonFileHandler\n *\n * <br> <b>Note:</b> handlerOptions should contain at least one of the above entries, otherwise, an Exception is thrown.\n * <br> <b>Note:</b> XML is not supported.\n *\n * <br> gcp (Map, Optional): options for handling GoogleCloud files. Include if you are going to process documents with the filePathField set to a Google Cloud URI.\n * See FileConnector for necessary arguments.\n *\n * <br> s3 (Map, Optional): options for handling S3 files. Include if you are going to process documents with the filePathField set to an S3 URI.\n * See FileConnector for necessary arguments.\n *\n * <br> azure (Map, Optional): options for handling Azure files. Include if you are going to process documents with the filePathField set to an Azure URI.\n * See FileConnector for necessary arguments.\n *"
    ],
    "functions": [
        "ApplyFileHandlers",
        "start",
        "stop",
        "processDocument"
    ],
    "classes": [
        "ApplyFileHandlers"
    ]
}