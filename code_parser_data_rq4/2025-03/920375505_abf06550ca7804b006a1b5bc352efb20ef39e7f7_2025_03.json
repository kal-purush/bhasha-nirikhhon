{
    "identifiers": [
        "pytest",
        "json",
        "unittest",
        "mock",
        "patch",
        "rest_framework",
        "test",
        "APIClient",
        "users",
        "models",
        "User",
        "storages",
        "backends",
        "s3boto3",
        "S3Boto3Storage",
        "google",
        "oauth2",
        "id_token",
        "pytest",
        "mark",
        "django_db",
        "APIClient",
        "patch",
        "mock_verify_token",
        "User",
        "objects",
        "create",
        "username",
        "mock_email",
        "email",
        "mock_email",
        "google_id",
        "mock_google_user_id",
        "first_name",
        "mock_first_name",
        "last_name",
        "mock_last_name",
        "mock_google_user_id",
        "mock_email",
        "mock_first_name",
        "mock_last_name",
        "mock_first_name",
        "mock_last_name",
        "client",
        "post",
        "valid_id_token",
        "format",
        "response",
        "status_code",
        "response",
        "data",
        "response",
        "data",
        "patch",
        "patch",
        "mock_get",
        "mock_verify_token",
        "mock_google_user_id",
        "mock_email",
        "mock_first_name",
        "mock_last_name",
        "mock_first_name",
        "mock_last_name",
        "client",
        "post",
        "valid_id_token",
        "format",
        "response",
        "status_code",
        "User",
        "objects",
        "email",
        "mock_email",
        "exists",
        "client",
        "post",
        "format",
        "response",
        "status_code",
        "response",
        "data",
        "startswith",
        "patch",
        "mock_verify_token",
        "ValueError",
        "client",
        "post",
        "invalid_id_token",
        "format",
        "response",
        "status_code",
        "response",
        "data",
        "startswith",
        "patch",
        "mock_verify_token",
        "User",
        "objects",
        "create",
        "username",
        "email",
        "mock_email",
        "google_id",
        "mock_google_user_id",
        "first_name",
        "mock_first_name",
        "last_name",
        "mock_last_name",
        "mock_google_user_id",
        "mock_email",
        "client",
        "post",
        "valid_id_token",
        "format",
        "user",
        "refresh_from_db",
        "response",
        "status_code",
        "user",
        "username",
        "response",
        "data",
        "response",
        "data",
        "patch",
        "patch",
        "mock_get",
        "mock_verify_token",
        "User",
        "objects",
        "create",
        "username",
        "email",
        "mock_email",
        "google_id",
        "mock_google_user_id",
        "first_name",
        "mock_first_name",
        "last_name",
        "mock_last_name",
        "profile_image",
        "mock_google_user_id",
        "mock_email",
        "client",
        "post",
        "valid_id_token",
        "format",
        "user",
        "refresh_from_db",
        "response",
        "status_code",
        "user",
        "profile_image",
        "name",
        "endswith",
        "response",
        "data",
        "response",
        "data",
        "patch",
        "mock_verify_token",
        "mock_google_user_id",
        "mock_first_name",
        "mock_last_name",
        "client",
        "post",
        "valid_id_token",
        "format",
        "response",
        "status_code",
        "User",
        "objects",
        "get",
        "google_id",
        "mock_google_user_id",
        "user",
        "email",
        "response",
        "data",
        "response",
        "data",
        "patch",
        "mock_verify_token",
        "User",
        "objects",
        "create",
        "username",
        "email",
        "mock_email",
        "google_id",
        "first_name",
        "last_name",
        "mock_google_user_id",
        "mock_email",
        "mock_first_name",
        "mock_last_name",
        "mock_first_name",
        "mock_last_name",
        "client",
        "post",
        "valid_id_token",
        "format",
        "User",
        "objects",
        "get",
        "email",
        "mock_email",
        "response",
        "status_code",
        "user",
        "google_id",
        "mock_google_user_id",
        "response",
        "data",
        "response",
        "data",
        "patch",
        "patch",
        "mock_get",
        "mock_verify_token",
        "User",
        "objects",
        "create",
        "username",
        "google_id",
        "mock_google_user_id",
        "mock_google_user_id",
        "mock_email",
        "client",
        "post",
        "valid_id_token",
        "format",
        "response",
        "status_code",
        "response",
        "data",
        "response",
        "data",
        "S3Boto3Storage",
        "s3_storage",
        "mock_google_user_id"
    ],
    "literals": [
        "\"valid_google_token\"",
        "\"invalid_google_token\"",
        "\"123456789\"",
        "\"testuser@example.com\"",
        "\"Test\"",
        "\"User\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "'sub'",
        "'email'",
        "'name'",
        "f\"{self.mock_first_name} {self.mock_last_name}\"",
        "'given_name'",
        "'family_name'",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"access\"",
        "\"refresh\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"api.views.requests.get\"",
        "'sub'",
        "'email'",
        "'first_name'",
        "'last_name'",
        "'name'",
        "f\"{self.mock_first_name} {self.mock_last_name}\"",
        "\"Response\"",
        "\"status_code\"",
        "\"content\"",
        "b\"fake_image_bytes\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"/api/auth/google/\"",
        "\"json\"",
        "\"error\"",
        "\"Missing Google\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"Invalid token\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"error\"",
        "\"Invalid google\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"\"",
        "'sub'",
        "'email'",
        "'name'",
        "\"John Doe\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"John Doe\"",
        "\"access\"",
        "\"refresh\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"api.views.requests.get\"",
        "\"testuser\"",
        "\"\"",
        "'sub'",
        "'email'",
        "'name'",
        "\"John Doe\"",
        "'picture'",
        "\"https://example.com/profile.jpg\"",
        "\"Response\"",
        "\"status_code\"",
        "\"content\"",
        "b\"fake_image_bytes\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\".jpg\"",
        "\"access\"",
        "\"refresh\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "'sub'",
        "'name'",
        "f\"{self.mock_first_name} {self.mock_last_name}\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"access\"",
        "\"refresh\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"olduser\"",
        "\"Old\"",
        "\"User\"",
        "'sub'",
        "'email'",
        "'name'",
        "f\"{self.mock_first_name} {self.mock_last_name}\"",
        "'given_name'",
        "'family_name'",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"access\"",
        "\"refresh\"",
        "\"api.views.id_token.verify_oauth2_token\"",
        "\"api.views.requests.get\"",
        "\"avatar_error_user\"",
        "\"sub\"",
        "\"email\"",
        "\"picture\"",
        "\"https://example.com/avatar.jpg\"",
        "\"Network error\"",
        "\"/api/auth/google/\"",
        "\"id_token\"",
        "\"json\"",
        "\"access\"",
        "\"refresh\"",
        "f\"profile_images/{self.mock_google_user_id}_avatar.jpg\""
    ],
    "variables": [
        "client",
        "valid_id_token",
        "invalid_id_token",
        "mock_google_user_id",
        "mock_email",
        "mock_first_name",
        "mock_last_name",
        "mock_verify_token",
        "return_value",
        "response",
        "mock_verify_token",
        "return_value",
        "mock_get",
        "return_value",
        "response",
        "response",
        "mock_verify_token",
        "side_effect",
        "response",
        "user",
        "mock_verify_token",
        "return_value",
        "response",
        "user",
        "mock_verify_token",
        "return_value",
        "mock_get",
        "return_value",
        "response",
        "mock_verify_token",
        "return_value",
        "response",
        "user",
        "mock_verify_token",
        "return_value",
        "response",
        "user",
        "user",
        "mock_verify_token",
        "return_value",
        "mock_get",
        "side_effect",
        "response",
        "s3_storage"
    ],
    "comments": [
        "Create an existing user",
        "Mock the token verification",
        "Mock the token verification",
        "Mock the avatar image download",
        "Create a user with an empty username",
        "Mock token verification",
        "Call the Google login API",
        "Refresh user from the database",
        "Assertions",
        "Username should be updated from Google name",
        "Ensure tokens are returned",
        "Create a user with no profile image",
        "No profile image yet",
        "Mock token verification",
        "Mock image download response",
        "Call the Google login API",
        "Refresh user from database",
        "Assertions",
        "Mock token verification with no email",
        "Call the Google login API",
        "Assertions",
        "Verify that a random email was generated",
        "Create a user with the same email but no google_id",
        "Mock the token verification",
        "Refresh the user from the database",
        "Create user with no profile image",
        "Mock token verification with picture URL",
        "Simulate a network error when fetching avatar",
        "Call the endpoint - it should still succeed despite the avatar error",
        "Assert response was successful, login completed despite avatar error"
    ],
    "docstrings": [
        "\"\"\"Set up test client and test data.\"\"\"",
        "\"\"\"Test logging in an existing user.\"\"\"",
        "\"\"\"Test creating a new user with Google login.\"\"\"",
        "\"\"\"Test missing Google id_token.\"\"\"",
        "\"\"\"Test invalid Google id_token.\"\"\"",
        "\"\"\"Test that Google login updates a user's missing username.\"\"\"",
        "\"\"\"Test downloading profile picture from Google login.\"\"\"",
        "\"\"\"Test handling of missing email in Google token.\"\"\"",
        "\"\"\"\n        Test logging in a user that exists by email but doesn't have a google_id,\n        covering lines 160 and 168-169.\n        \"\"\"",
        "\"\"\"\n        Test error handling during avatar download.\n        \"\"\"",
        "\"\"\"Ensure images are deleted from S3 after tests\"\"\""
    ],
    "functions": [
        "setup_method",
        "test_google_login_existing_user",
        "test_google_login_new_user",
        "test_google_login_missing_token",
        "test_google_login_invalid_token",
        "test_google_login_updates_missing_username",
        "test_google_login_profile_picture_download",
        "test_google_login_missing_email",
        "test_google_login_existing_user_by_email",
        "test_google_avatar_error_handling",
        "teardown_method"
    ],
    "classes": [
        "TestGoogleLoginAPI"
    ]
}