{
    "identifiers": [
        "Ocelot",
        "Configuration",
        "Ocelot",
        "Headers",
        "Ocelot",
        "Metadata",
        "Ocelot",
        "Middleware",
        "Ocelot",
        "Responder",
        "IO",
        "Compression",
        "Text",
        "Text",
        "Json",
        "Text",
        "Json",
        "Nodes",
        "ZstdNet",
        "Ocelot",
        "Samples",
        "Metadata",
        "HttpContextResponder",
        "IRemoveOutputHeaders",
        "removeOutputHeaders",
        "removeOutputHeaders",
        "HttpContext",
        "context",
        "DownstreamResponse",
        "downstream",
        "context",
        "Items",
        "DownstreamRoute",
        "route",
        "MetadataOptions",
        "Metadata",
        "metadata",
        "Count",
        "WriteToUpstreamAsync",
        "context",
        "downstream",
        "context",
        "Items",
        "DownstreamResponse",
        "response",
        "Content",
        "Headers",
        "ContentType",
        "MediaType",
        "route",
        "GetMetadata",
        "AddMetadataHeader",
        "context",
        "metadata",
        "WriteToUpstreamAsync",
        "context",
        "downstream",
        "ReadCompressedJsonAsync",
        "context",
        "Response",
        "response",
        "Content",
        "context",
        "RequestAborted",
        "IsNullOrEmpty",
        "json",
        "AddMetadataHeader",
        "context",
        "metadata",
        "WriteToUpstreamAsync",
        "context",
        "downstream",
        "JsonObject",
        "Parse",
        "json",
        "JsonSerializer",
        "SerializeToNode",
        "metadata",
        "JsonObject",
        "nameof",
        "HttpContext",
        "Response",
        "json1",
        "nameof",
        "MetadataOptions",
        "Metadata",
        "json2",
        "AddMetadataHeader",
        "context",
        "metadata",
        "WriteJsonAsync",
        "context",
        "Response",
        "response",
        "Content",
        "aggregated",
        "context",
        "RequestAborted",
        "AddMetadataHeader",
        "context",
        "metadata",
        "WriteToUpstreamAsync",
        "context",
        "downstream",
        "HttpContext",
        "context",
        "IDictionary",
        "metadata",
        "JsonSerializer",
        "SerializeToNode",
        "metadata",
        "node",
        "ToJsonString",
        "JsonSerializerOptions",
        "Web",
        "Empty",
        "context",
        "Response",
        "Headers",
        "Append",
        "header",
        "HttpContent",
        "content",
        "IsNullOrEmpty",
        "content",
        "Headers",
        "ContentType",
        "CharSet",
        "Encoding",
        "GetEncoding",
        "content",
        "Headers",
        "ContentType",
        "CharSet",
        "ArgumentException",
        "Encoding",
        "UTF8",
        "Encoding",
        "UTF8",
        "HttpResponse",
        "response",
        "HttpContent",
        "content",
        "CancellationToken",
        "token",
        "DetectEncoding",
        "content",
        "content",
        "Headers",
        "ContentEncoding",
        "Contains",
        "content",
        "ReadAsStreamAsync",
        "token",
        "DecompressBrotliAsync",
        "compressed",
        "token",
        "encoding",
        "GetString",
        "decompressed",
        "content",
        "Headers",
        "ContentEncoding",
        "Contains",
        "content",
        "ReadAsStreamAsync",
        "token",
        "DecompressZstandardAsync",
        "compressed",
        "token",
        "encoding",
        "GetString",
        "decompressed",
        "content",
        "Headers",
        "ContentEncoding",
        "Contains",
        "Empty",
        "content",
        "Headers",
        "ContentEncoding",
        "Contains",
        "content",
        "ReadAsStreamAsync",
        "token",
        "DecompressGZip",
        "compressed",
        "encoding",
        "GetString",
        "decompressed",
        "content",
        "ReadAsByteArrayAsync",
        "token",
        "encoding",
        "GetString",
        "buffer",
        "HttpResponse",
        "to",
        "HttpContent",
        "content",
        "JsonObject",
        "json",
        "CancellationToken",
        "token",
        "Encoding",
        "UTF8",
        "json",
        "ToJsonString",
        "JsonSerializerOptions",
        "Web",
        "encoding",
        "GetBytes",
        "serialized",
        "to",
        "ContentLength",
        "buffer",
        "Length",
        "content",
        "Headers",
        "ContentType",
        "encoding",
        "HeaderName",
        "ct",
        "CharSet",
        "encoding",
        "HeaderName",
        "to",
        "ContentType",
        "ct",
        "ToString",
        "content",
        "Headers",
        "ContentEncoding",
        "contentEncoding",
        "Contains",
        "to",
        "Headers",
        "ContentEncoding",
        "contentEncoding",
        "Contains",
        "to",
        "Headers",
        "ContentEncoding",
        "contentEncoding",
        "Contains",
        "contentEncoding",
        "Contains",
        "to",
        "Headers",
        "ContentEncoding",
        "to",
        "Body",
        "WriteAsync",
        "buffer",
        "buffer",
        "Length",
        "token",
        "input",
        "CancellationToken",
        "token",
        "MemoryStream",
        "input",
        "Length",
        "BrotliStream",
        "output",
        "CompressionLevel",
        "SmallestSize",
        "brotli",
        "WriteAsync",
        "input",
        "token",
        "brotli",
        "FlushAsync",
        "token",
        "output",
        "ToArray",
        "Stream",
        "input",
        "CancellationToken",
        "token",
        "MemoryStream",
        "BrotliStream",
        "input",
        "CompressionMode",
        "Decompress",
        "decompressor",
        "CopyToAsync",
        "output",
        "token",
        "output",
        "ToArray",
        "Stream",
        "input",
        "CancellationToken",
        "token",
        "MemoryStream",
        "DecompressionStream",
        "input",
        "decompression",
        "CopyToAsync",
        "output",
        "token",
        "output",
        "ToArray",
        "Stream",
        "input",
        "CancellationToken",
        "token",
        "MemoryStream",
        "DeflateStream",
        "input",
        "CompressionMode",
        "Decompress",
        "decompressor",
        "CopyToAsync",
        "output",
        "token",
        "output",
        "ToArray",
        "Stream",
        "input",
        "MemoryStream",
        "GZipStream",
        "input",
        "CompressionMode",
        "Decompress",
        "decompressor",
        "CopyTo",
        "output",
        "output",
        "ToArray"
    ],
    "literals": [
        "\"application/json\"",
        "\"disableMetadataJson\"",
        "\"OC-Route-Metadata\"",
        "\"br\"",
        "\"zstd\"",
        "\"deflate\"",
        "\"gzip\"",
        "\"application/json\"",
        "\"br\"",
        "\"identity\"",
        "\"zstd\"",
        "\"identity\"",
        "\"deflate\"",
        "\"gzip\"",
        "\"identity\""
    ],
    "variables": [
        "route",
        "metadata",
        "response",
        "json",
        "json1",
        "json2",
        "aggregated",
        "node",
        "header",
        "encoding",
        "compressed",
        "decompressed",
        "compressed",
        "decompressed",
        "compressed",
        "decompressed",
        "buffer",
        "encoding",
        "serialized",
        "buffer",
        "ct",
        "contentEncoding",
        "output",
        "brotli",
        "output",
        "decompressor",
        "output",
        "decompression",
        "output",
        "decompressor",
        "output",
        "decompressor"
    ],
    "comments": [
        "Ensure the route has metadata at all",
        "Content type is 'application/json', so embed route metadata JSON-node",
        "Don't process json requested by scripts aka XHR",
        "but return in the header",
        "var json = await response.Content.ReadAsStringAsync(context.RequestAborted);",
        "Impossible to decompress content and write to body",
        "Write metadata to the contentEncoding and write original content",
        "var json1 = await JsonNode.ParseAsync(jsonStream, cancellationToken: context.RequestAborted);",
        "unknown encoding, fallback to UTF-8",
        "default to UTF-8",
        "Brotli compression: https://www.prowaretech.com/articles/current/dot-net/compression-brotli",
        "Zstandard compression: https://github.com/facebook/zstd",
        "Deflate algorithm compression",
        "Actually it doesn't work: only MS compressed DeflateStream are supported",
        "Decompressor will generate System.IO.InvalidDataException: The archive entry was compressed using an unsupported compression method.",
        "var compressed = await content.ReadAsStreamAsync(token);",
        "var decompressed = await DecompressDeflateAsync(compressed, token);",
        "return encoding.GetString(decompressed);",
        "GZip compression",
        "no compression",
        "We will not use original downstrean encoding, so defaults always to UTF8 for upstream",
        "DetectEncoding(content);",
        "will not require compression",
        "don't use chunked",
        "always -> application/json; charset=utf-8",
        "Brotli compression",
        "var compressed = await CompressBrotliAsync(buffer, token);",
        "var data = encoding.GetString(compressed);",
        "await to.WriteAsync(data, encoding, token); // client app error: Decompression failed",
        "don't compress with Brotli algo",
        "Zstandard compression (Facebook)",
        "don't compress with Zstandard algo",
        "Deflate compression",
        "Do nothing, because of impossibility to decompress third-party streams",
        "GZip compression",
        "don't compress with GZip algo",
        "https://learn.microsoft.com/en-us/dotnet/api/system.io.compression.brotlistream?view=net-9.0",
        "https://learn.microsoft.com/en-us/dotnet/api/system.io.compression.brotlistream?view=net-9.0",
        "https://github.com/skbkontur/ZstdNet",
        "https://learn.microsoft.com/en-us/dotnet/api/system.io.compression.deflatestream?view=net-9.0",
        "https://learn.microsoft.com/en-us/dotnet/api/system.io.compression.gzipstream?view=net-9.0"
    ],
    "docstrings": [],
    "functions": [
        "MetadataResponder",
        "WriteToUpstreamAsync",
        "AddMetadataHeader",
        "Encoding",
        "DetectEncoding",
        "ReadCompressedJsonAsync",
        "WriteJsonAsync",
        "CompressBrotliAsync",
        "DecompressBrotliAsync",
        "DecompressZstandardAsync",
        "DecompressDeflateAsync",
        "DecompressGZip"
    ],
    "classes": [
        "MetadataResponder"
    ]
}