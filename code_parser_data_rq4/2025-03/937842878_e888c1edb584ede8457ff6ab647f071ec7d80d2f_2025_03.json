{
    "identifiers": [
        "numpy",
        "np",
        "E",
        "nu",
        "A",
        "L",
        "Iy",
        "Iz",
        "J",
        "np",
        "ndarray",
        "np",
        "zeros",
        "E",
        "A",
        "L",
        "axial_stiffness",
        "axial_stiffness",
        "axial_stiffness",
        "axial_stiffness",
        "E",
        "J",
        "nu",
        "L",
        "torsional_stiffness",
        "torsional_stiffness",
        "torsional_stiffness",
        "torsional_stiffness",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iz",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "E",
        "Iy",
        "L",
        "k_e",
        "vec",
        "np",
        "ndarray",
        "np",
        "isclose",
        "np",
        "linalg",
        "norm",
        "vec",
        "ValueError",
        "vec_1",
        "np",
        "ndarray",
        "vec_2",
        "np",
        "ndarray",
        "np",
        "isclose",
        "np",
        "linalg",
        "norm",
        "np",
        "cross",
        "vec_1",
        "vec_2",
        "ValueError",
        "x1",
        "y1",
        "z1",
        "x2",
        "y2",
        "z2",
        "v_temp",
        "np",
        "ndarray",
        "np",
        "sqrt",
        "x2",
        "x1",
        "y2",
        "y1",
        "z2",
        "z1",
        "x2",
        "x1",
        "L",
        "y2",
        "y1",
        "L",
        "z2",
        "z1",
        "L",
        "np",
        "asarray",
        "lxp",
        "mxp",
        "nxp",
        "v_temp",
        "np",
        "isclose",
        "lxp",
        "np",
        "isclose",
        "mxp",
        "np",
        "array",
        "np",
        "array",
        "check_unit_vector",
        "v_temp",
        "check_parallel",
        "local_x",
        "v_temp",
        "np",
        "cross",
        "v_temp",
        "local_x",
        "local_y",
        "np",
        "linalg",
        "norm",
        "local_y",
        "np",
        "cross",
        "local_x",
        "local_y",
        "local_z",
        "np",
        "linalg",
        "norm",
        "local_z",
        "np",
        "vstack",
        "local_x",
        "local_y",
        "local_z",
        "gamma",
        "gamma",
        "np",
        "ndarray",
        "np",
        "ndarray",
        "np",
        "zeros",
        "gamma",
        "gamma",
        "gamma",
        "gamma",
        "Gamma",
        "L",
        "A",
        "I_rho",
        "Fx2",
        "Mx2",
        "My1",
        "Mz1",
        "My2",
        "Mz2",
        "np",
        "zeros",
        "Fx2",
        "L",
        "My1",
        "L",
        "Mx2",
        "L",
        "Fx2",
        "Fx2",
        "L",
        "My2",
        "L",
        "Mx2",
        "L",
        "Fx2",
        "Mz1",
        "L",
        "Fx2",
        "Mx2",
        "L",
        "Fx2",
        "L",
        "Mz2",
        "L",
        "Fx2",
        "Mx2",
        "L",
        "Mz1",
        "Mz2",
        "My1",
        "My2",
        "My1",
        "L",
        "Mz1",
        "L",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Mz1",
        "Mz2",
        "My1",
        "My2",
        "Mx2",
        "L",
        "Fx2",
        "Mz1",
        "Mz2",
        "Fx2",
        "L",
        "Mx2",
        "Fx2",
        "Mx2",
        "L",
        "My1",
        "My2",
        "Mx2",
        "Fx2",
        "L",
        "My2",
        "L",
        "Mx2",
        "L",
        "Fx2",
        "Mz2",
        "L",
        "Fx2",
        "Mx2",
        "L",
        "Mz1",
        "Mz2",
        "My1",
        "My2",
        "k_g",
        "k_g",
        "transpose",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "k_g",
        "L",
        "A",
        "I_rho",
        "Fx2",
        "np",
        "zeros",
        "Fx2",
        "L",
        "Fx2",
        "Fx2",
        "L",
        "Fx2",
        "Fx2",
        "Fx2",
        "L",
        "Fx2",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Fx2",
        "Fx2",
        "L",
        "Fx2",
        "Fx2",
        "L",
        "Fx2",
        "Fx2",
        "k_g",
        "k_g",
        "transpose",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "I_rho",
        "A",
        "L",
        "Fx2",
        "L",
        "Fx2",
        "L",
        "k_g",
        "num_nodes",
        "dof_per_node",
        "k_element",
        "np",
        "zeros",
        "num_nodes",
        "dof_per_node",
        "num_nodes",
        "dof_per_node",
        "np",
        "zeros",
        "num_nodes",
        "i",
        "num_nodes",
        "i",
        "i",
        "i",
        "i",
        "connectivity",
        "i",
        "i",
        "connectivity",
        "i",
        "i",
        "connectivity",
        "i",
        "elem",
        "connectivity",
        "shape",
        "connectivity",
        "elem",
        "np",
        "concatenate",
        "np",
        "arange",
        "nodes",
        "nodes",
        "np",
        "arange",
        "nodes",
        "nodes",
        "p",
        "q",
        "global_dof_indices",
        "p",
        "global_dof_indices",
        "q",
        "K",
        "global_p",
        "global_q",
        "k_element",
        "p",
        "q",
        "K"
    ],
    "literals": [
        "\"Expected a unit vector for reference vector.\"",
        "\"Reference vector is parallel to beam axis.\""
    ],
    "variables": [
        "k_e",
        "axial_stiffness",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "torsional_stiffness",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "k_e",
        "L",
        "lxp",
        "mxp",
        "nxp",
        "local_x",
        "v_temp",
        "v_temp",
        "local_y",
        "local_y",
        "local_z",
        "local_z",
        "gamma",
        "Gamma",
        "Gamma",
        "Gamma",
        "Gamma",
        "Gamma",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "k_g",
        "K",
        "connectivity",
        "connectivity",
        "connectivity",
        "connectivity",
        "connectivity",
        "nodes",
        "global_dof_indices",
        "global_p",
        "global_q"
    ],
    "comments": [
        "Axial terms - extension of local x axis",
        "Torsion terms - rotation about local x axis",
        "Bending terms - bending about local z axis",
        "Bending terms - bending about local y axis",
        "choose a vector to orthonormalize the y axis if one is not given",
        "if the beam is oriented vertically, switch to the global y axis",
        "otherwise use the global z axis",
        "check to make sure that given v_temp is a unit vector",
        "check to make sure that given v_temp is not parallel to the local x axis",
        "compute the local y axis",
        "compute the local z axis",
        "assemble R",
        "upper triangle off diagonal terms",
        "add in the symmetric lower triangle",
        "add diagonal terms",
        "upper triangle off diagonal terms",
        "add in the symmetric lower triangle",
        "add diagonal terms",
        "Assembly process",
        "Loop over elements",
        "Get nodes for this element",
        "Compute global DOF indices for this element",
        "DOFs of first node",
        "DOFs of second node",
        "Assemble local stiffness matrix into the global stiffness matrix",
        "Local row",
        "Local column",
        "Map local to global row",
        "Map local to global column",
        "Assemble"
    ],
    "docstrings": [
        "\"\"\"\n    local element elastic stiffness matrix\n    source: p. 73 of McGuire's Matrix Structural Analysis 2nd Edition\n    Given:\n        material and geometric parameters:\n            A, L, Iy, Iz, J, nu, E\n    Context:\n        load vector:\n            [Fx1, Fy1, Fz1, Mx1, My1, Mz1, Fx2, Fy2, Fz2, Mx2, My2, Mz2]\n        DOF vector:\n            [u1, v1, w1, th_x1, th_y1, th_z1, u2, v2, w2, th_x2, th_y2, th_z2]\n        Equation:\n            [load vector] = [stiffness matrix] @ [DOF vector]\n    Returns:\n        12 x 12 elastic stiffness matrix k_e\n    \"\"\"",
        "\"\"\"\n    \"\"\"",
        "\"\"\"\n    \"\"\"",
        "\"\"\"\n    3D rotation matrix\n    source: Chapter 5.1 of McGuire's Matrix Structural Analysis 2nd Edition\n    Given:\n        x, y, z coordinates of the ends of two beams: x1, y1, z1, x2, y2, z2\n        optional: reference z vector direction v_temp to orthonormalize the local y and z axis\n            if v_temp is not given, VVVV\n    Compute:\n        where l, m, n are defined as direction cosines:\n        gamma = [[lx'=cos alpha_x', mx'=cos beta_x', nx'=cos gamma_x'],\n                 [ly'=cos alpha_y', my'=cos beta_y', ny'=cos gamma_y'],\n                 [lz'=cos alpha_z', mz'=cos beta_z', nz'=cos gamma_z']]\n    \"\"\"",
        "\"\"\"\n    3D transformation matrix\n    source: Chapter 5.1 of McGuire's Matrix Structural Analysis 2nd Edition\n    Given:\n        gamma -- the 3x3 rotation matrix\n    Compute:\n        Gamma -- the 12x12 transformation matrix\n    \"\"\"",
        "\"\"\"\n    local element geometric stiffness matrix\n    source: p. 258 of McGuire's Matrix Structural Analysis 2nd Edition\n    Given:\n        material and geometric parameters:\n            L, A, I_rho (polar moment of inertia)\n        element forces and moments:\n            Fx2, Mx2, My1, Mz1, My2, Mz2\n    Context:\n        load vector:\n            [Fx1, Fy1, Fz1, Mx1, My1, Mz1, Fx2, Fy2, Fz2, Mx2, My2, Mz2]\n        DOF vector:\n            [u1, v1, w1, th_x1, th_y1, th_z1, u2, v2, w2, th_x2, th_y2, th_z2]\n        Equation:\n            [load vector] = [stiffness matrix] @ [DOF vector]\n    Returns:\n        12 x 12 geometric stiffness matrix k_g\n    \"\"\"",
        "\"\"\"\n    local element geometric stiffness matrix\n    source: p. 257 of McGuire's Matrix Structural Analysis 2nd Edition\n    Given:\n        material and geometric parameters:\n            L, A, I_rho (polar moment of inertia)\n        element forces and moments:\n            Fx2\n    Context:\n        load vector:\n            [Fx1, Fy1, Fz1, Mx1, My1, Mz1, Fx2, Fy2, Fz2, Mx2, My2, Mz2]\n        DOF vector:\n            [u1, v1, w1, th_x1, th_y1, th_z1, u2, v2, w2, th_x2, th_y2, th_z2]\n        Equation:\n            [load vector] = [stiffness matrix] @ [DOF vector]\n    Returns:\n        12 x 12 geometric stiffness matrix k_g\n    \"\"\""
    ],
    "functions": [
        "local_elastic_stiffness_matrix_3D_beam",
        "check_unit_vector",
        "check_parallel",
        "rotation_matrix_3D",
        "transformation_matrix_3D",
        "local_geometric_stiffness_matrix_3D_beam",
        "local_geometric_stiffness_matrix_3D_beam_without_interaction_terms",
        "K_assembly"
    ],
    "classes": []
}