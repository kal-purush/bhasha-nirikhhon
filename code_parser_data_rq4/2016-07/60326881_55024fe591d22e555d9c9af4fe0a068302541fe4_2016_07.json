{
    "identifiers": [
        "Spring",
        "Context",
        "Spring",
        "Context",
        "Support",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Web",
        "Mvc",
        "Web",
        "Routing",
        "Web",
        "SessionState",
        "ArchitectureFrame",
        "Web",
        "Agency",
        "IControllerFactory",
        "RequestContext",
        "requestContext",
        "controllerName",
        "ContextRegistry",
        "GetContext",
        "controllerName",
        "ctx",
        "ContainsObject",
        "controller",
        "ctx",
        "GetObject",
        "controller",
        "IController",
        "currentController",
        "defaultFactory",
        "defaultFactory",
        "DefaultControllerFactory",
        "defaultFactory",
        "CreateController",
        "requestContext",
        "controllerName",
        "RequestContext",
        "requestContext",
        "controllerName",
        "SessionStateBehavior",
        "Default",
        "IController",
        "controller",
        "ContextRegistry",
        "GetContext",
        "ctx",
        "ContainsObject",
        "controller",
        "GetType",
        "Name",
        "defaultFactory",
        "defaultFactory",
        "DefaultControllerFactory",
        "defaultFactory",
        "ReleaseController",
        "controller"
    ],
    "literals": [
        "\"Controller\""
    ],
    "variables": [
        "DefaultControllerFactory",
        "defaultFactory",
        "IApplicationContext",
        "ctx",
        "controller",
        "currentController",
        "IApplicationContext",
        "ctx"
    ],
    "comments": [
        "对Controller依赖注入需要新建一个ControllerFactory。",
        "我们实现System.Web.Mvc.IControllerFactory接口即可。",
        "实际上就是替换现有的ControllerFactory，让Spring.NET容器管理Controller。",
        "包含Spring.NET容器配置的Controller使用新建的ControllerFactory，",
        "没有包含Spring.NET容器配置的Controller使用原有的DefaultControllerFactory。",
        "bool isMatch = PathMatcher.Match(\"*Controller\", controller, true);",
        "检查是否在容器中注入了该Controller，注入了则使用注入的Controller",
        "没有配置则使用默认的factory创建Controller"
    ],
    "docstrings": [],
    "functions": [
        "IController",
        "CreateController",
        "SessionStateBehavior",
        "GetControllerSessionBehavior",
        "ReleaseController"
    ],
    "classes": [
        "SpringControllerFacotry"
    ]
}