{
    "identifiers": [
        "os",
        "os",
        "path",
        "sys",
        "top_dir",
        "top_dir",
        "text",
        "text",
        "endswith",
        "text",
        "blocks",
        "append",
        "text",
        "relative_input_path",
        "wrap_in_comment",
        "prefix",
        "add_text",
        "add_text",
        "add_text",
        "prefix",
        "relative_input_path",
        "replace",
        "add_text",
        "add_text",
        "add_marker",
        "open",
        "os",
        "path",
        "join",
        "top_dir",
        "relative_input_path",
        "f",
        "read",
        "wrap_in_comment",
        "content",
        "add_text",
        "content",
        "f",
        "close",
        "add_marker",
        "add_text",
        "join",
        "blocks",
        "replace",
        "output_path",
        "os",
        "path",
        "dirname",
        "output_path",
        "output_dir",
        "os",
        "path",
        "isdir",
        "output_dir",
        "os",
        "makedirs",
        "output_dir",
        "open",
        "output_path",
        "f",
        "write",
        "get_value",
        "f",
        "close",
        "source_top_dir",
        "target_source_path",
        "header_include_path",
        "AmalgamationFile",
        "source_top_dir",
        "header",
        "add_text",
        "header",
        "add_text",
        "header_include_path",
        "header",
        "add_file",
        "wrap_in_comment",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_text",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "target_source_path",
        "header_include_path",
        "target_header_path",
        "header",
        "write_to",
        "target_header_path",
        "os",
        "path",
        "splitext",
        "header_include_path",
        "ext",
        "AmalgamationFile",
        "source_top_dir",
        "header",
        "add_text",
        "header",
        "add_text",
        "forward_header_include_path",
        "header",
        "add_text",
        "header",
        "add_file",
        "wrap_in_comment",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_text",
        "header",
        "add_file",
        "header",
        "add_file",
        "header",
        "add_text",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "target_source_path",
        "forward_header_include_path",
        "target_forward_header_path",
        "header",
        "write_to",
        "target_forward_header_path",
        "AmalgamationFile",
        "source_top_dir",
        "source",
        "add_text",
        "source",
        "add_text",
        "target_source_path",
        "source",
        "add_file",
        "wrap_in_comment",
        "source",
        "add_text",
        "source",
        "add_text",
        "header_include_path",
        "source",
        "add_text",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "source",
        "add_file",
        "os",
        "path",
        "join",
        "lib_json",
        "target_source_path",
        "source",
        "write_to",
        "target_source_path",
        "optparse",
        "OptionParser",
        "OptionParser",
        "usage",
        "usage",
        "parser",
        "add_option",
        "dest",
        "action",
        "help",
        "parser",
        "add_option",
        "dest",
        "action",
        "help",
        "parser",
        "add_option",
        "dest",
        "action",
        "os",
        "getcwd",
        "help",
        "parser",
        "enable_interspersed_args",
        "parser",
        "parse_args",
        "amalgamate_source",
        "source_top_dir",
        "options",
        "top_dir",
        "target_source_path",
        "options",
        "target_source_path",
        "header_include_path",
        "options",
        "header_include_path",
        "msg",
        "sys",
        "stderr",
        "write",
        "msg",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "'\\n'",
        "'\\n'",
        "''",
        "'// '",
        "'/'",
        "'// %s of content of file: %s'",
        "'\\\\'",
        "'/'",
        "'// '",
        "'/'",
        "''",
        "'Beginning'",
        "'rt'",
        "'/*\\n'",
        "'\\n*/'",
        "'End'",
        "'\\n\\n\\n\\n'",
        "''",
        "'\\r\\n'",
        "'\\n'",
        "'wb'",
        "'Amalgating header...'",
        "'/// Json-cpp amalgated header (http://jsoncpp.sourceforge.net/).'",
        "'/// It is intented to be used with #include <%s>'",
        "'LICENSE'",
        "'#ifndef JSON_AMALGATED_H_INCLUDED'",
        "'# define JSON_AMALGATED_H_INCLUDED'",
        "'/// If defined, indicates that the source file is amalgated'",
        "'/// to prevent private header inclusion.'",
        "'#define JSON_IS_AMALGAMATION'",
        "'include/json/config.h'",
        "'include/json/forwards.h'",
        "'include/json/features.h'",
        "'include/json/value.h'",
        "'include/json/reader.h'",
        "'include/json/writer.h'",
        "'include/json/assertions.h'",
        "'#endif //ifndef JSON_AMALGATED_H_INCLUDED'",
        "'Writing amalgated header to %r'",
        "'-forwards'",
        "'Amalgating forward header...'",
        "'/// Json-cpp amalgated forward header (http://jsoncpp.sourceforge.net/).'",
        "'/// It is intented to be used with #include <%s>'",
        "'/// This header provides forward declaration for all JsonCpp types.'",
        "'LICENSE'",
        "'#ifndef JSON_FORWARD_AMALGATED_H_INCLUDED'",
        "'# define JSON_FORWARD_AMALGATED_H_INCLUDED'",
        "'/// If defined, indicates that the source file is amalgated'",
        "'/// to prevent private header inclusion.'",
        "'#define JSON_IS_AMALGAMATION'",
        "'include/json/config.h'",
        "'include/json/forwards.h'",
        "'#endif //ifndef JSON_FORWARD_AMALGATED_H_INCLUDED'",
        "'Writing amalgated forward header to %r'",
        "'Amalgating source...'",
        "'/// Json-cpp amalgated source (http://jsoncpp.sourceforge.net/).'",
        "'/// It is intented to be used with #include \"%s\"'",
        "'LICENSE'",
        "''",
        "'#include \"%s\"'",
        "''",
        "'src/lib_json'",
        "'json_tool.h'",
        "'json_reader.cpp'",
        "'json_batchallocator.h'",
        "'json_valueiterator.inl'",
        "'json_value.cpp'",
        "'json_writer.cpp'",
        "'Writing amalgated source to %r'",
        "'-s'",
        "'--source'",
        "\"target_source_path\"",
        "'store'",
        "'dist/jsoncpp.cpp'",
        "'-i'",
        "'--include'",
        "\"header_include_path\"",
        "'store'",
        "'json/json.h'",
        "'-t'",
        "'--top-dir'",
        "\"top_dir\"",
        "'store'",
        "'\\n'",
        "'Source succesfully amalagated'",
        "'__main__'"
    ],
    "variables": [
        "top_dir",
        "blocks",
        "f",
        "content",
        "content",
        "output_dir",
        "f",
        "header",
        "target_header_path",
        "ext",
        "forward_header_include_path",
        "header",
        "target_forward_header_path",
        "source",
        "lib_json",
        "usage",
        "parser",
        "parser",
        "allow_interspersed_args",
        "options",
        "args",
        "msg"
    ],
    "comments": [
        "header.add_file( 'include/json/version.h' )"
    ],
    "docstrings": [
        "\"\"\"Amalgate json-cpp library sources into a single source and header file.\n\nRequires Python 2.6\n\nExample of invocation (must be invoked from json-cpp top directory):\npython amalgate.py\n\"\"\"",
        "\"\"\"Produces amalgated source.\n       Parameters:\n           source_top_dir: top-directory\n           target_source_path: output .cpp path\n           header_include_path: generated header path relative to target_source_path.\n    \"\"\"",
        "\"\"\"%prog [options]\nGenerate a single amalgated source and header file from the sources.\n\"\"\"",
        "\"\"\"Output .cpp source path. [Default: %default]\"\"\"",
        "\"\"\"Header include path. Used to include the header from the amalgated source file. [Default: %default]\"\"\"",
        "\"\"\"Source top-directory. [Default: %default]\"\"\""
    ],
    "functions": [
        "add_text",
        "add_file",
        "add_marker",
        "get_value",
        "write_to",
        "amalgamate_source",
        "main"
    ],
    "classes": [
        "AmalgamationFile"
    ]
}