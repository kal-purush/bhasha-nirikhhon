{
    "identifiers": [
        "yaml",
        "os",
        "time",
        "collections",
        "subprocess",
        "cmd",
        "subprocess",
        "check_output",
        "cmd",
        "shell",
        "strip",
        "creating",
        "find",
        "cmdOut",
        "os",
        "system",
        "creating",
        "time",
        "sleep",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "popen",
        "read",
        "strip",
        "ip",
        "open",
        "text_file",
        "text_file",
        "write",
        "kubeConfig",
        "time",
        "sleep",
        "os",
        "system",
        "os",
        "system",
        "o",
        "os",
        "system",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "cmdOut",
        "cmdOut",
        "cmdOut",
        "cmdOut",
        "cmdOut",
        "os",
        "system",
        "open",
        "text_file",
        "text_file",
        "write",
        "services",
        "os",
        "system",
        "os",
        "system",
        "time",
        "sleep",
        "os",
        "system",
        "time",
        "sleep",
        "poll",
        "os",
        "system"
    ],
    "literals": [
        "\"ContainerCreating\"",
        "\"ContainerCreating\"",
        "\"kubectl get pods --all-namespaces\"",
        "\"clear\"",
        "\"\\nwaiting for services to start...\"",
        "\"rm -rf minikube\"",
        "\"mkdir minikube\"",
        "\"cp ~/.minikube/apiserver.crt minikube/apiserver.crt\"",
        "\"cp ~/.minikube/apiserver.key minikube/apiserver.key\"",
        "\"cp ~/.minikube/ca.crt minikube/ca.crt\"",
        "'minikube ip'",
        "\"minikube/config\"",
        "\"w\"",
        "\"kubectl delete secret minikube-config --namespace spinnaker\"",
        "\"kubectl create secret generic minikube-config --from-file=./minikube/config --from-file=./minikube/ca.crt --from-file=./minikube/apiserver.crt --from-file=./minikube/apiserver.key --namespace spinnaker\"",
        "\"rm -rf minikube\"",
        "'cassandra'",
        "'redis'",
        "'front50'",
        "'clouddriver'",
        "'rosco'",
        "'orca'",
        "'gate'",
        "\"kubectl create --namespace spinnaker -f sets/cassandra.yml\"",
        "\"kubectl create --namespace spinnaker -f services/cassandra.json\"",
        "\"kubectl create --namespace spinnaker -f sets/redis.yml\"",
        "\"kubectl create --namespace spinnaker -f services/redis.json\"",
        "\"kubectl create --namespace spinnaker -f sets/front50.yml\"",
        "\"kubectl create --namespace spinnaker -f services/front50.json\"",
        "\"kubectl create --namespace spinnaker -f sets/clouddriver.yml\"",
        "\"kubectl create --namespace spinnaker -f services/clouddriver.json\"",
        "\"kubectl create --namespace spinnaker -f sets/rosco.yml\"",
        "\"kubectl create --namespace spinnaker -f services/rosco.json\"",
        "\"kubectl create --namespace spinnaker -f sets/orca.yml\"",
        "\"kubectl create --namespace spinnaker -f services/orca.json\"",
        "\"kubectl create --namespace spinnaker -f sets/gate.yml\"",
        "\"kubectl create --namespace spinnaker -f services/gate.json\"",
        "\"kubectl create --namespace spinnaker -f sets/jenkins.yml\"",
        "\"kubectl create --namespace spinnaker -f services/jenkins.json\"",
        "\"kubectl create --namespace spinnaker -f sets/portus.yml\"",
        "\"kubectl create --namespace spinnaker -f sets/igor.yml\"",
        "\"kubectl create --namespace spinnaker -f services/igor.json\"",
        "\"kubectl create -f kubedash/bundle.yaml\"",
        "\"kubectl create -f tectonic/pull.yml\"",
        "\"kubectl create -f tectonic/tectonic-console.yaml\"",
        "\"kubectl create -f tectonic/tectonic.json\"",
        "\"kubectl create -f sets/deck.yml --namespace spinnaker\"",
        "\"kubectl expose deployment spin-deck --namespace spinnaker --type=NodePort\"",
        "\"kubectl expose deployment spin-portus --namespace spinnaker --type=NodePort\"",
        "\"minikube service spin-deck --namespace spinnaker --url\"",
        "\"minikube service kubernetes-dashboard --namespace kube-system --url\"",
        "\"minikube service tectonic --url\"",
        "\"minikube service spin-jenkins --namespace spinnaker --url\"",
        "\"minikube service kubedash --namespace kube-system --url\"",
        "\"rm -f start/services.json\"",
        "\"start/services.json\"",
        "\"w\"",
        "\"kubectl create secret generic start-config --from-file=./start/index.html --from-file=./start/services.json --namespace spinnaker\"",
        "\"kubectl create --namespace spinnaker -f sets/start.yml\"",
        "\"kubectl create --namespace spinnaker -f services/start.json\"",
        "'minikube service spin-start --namespace spinnaker'"
    ],
    "variables": [
        "creating",
        "creating",
        "ip",
        "kubeConfig",
        "components",
        "services"
    ],
    "comments": [
        "#!/usr/local/bin/python",
        "os.system(\"minikube delete\")",
        "time.sleep(5)",
        "os.system(\"minikube start --memory 5000 --cpus 2\")",
        "time.sleep(10)",
        "poll()",
        "os.system(\"kubectl create namespace spinnaker\")",
        "os.system(\"rm minikube/apiserver.crt\")",
        "os.system(\"rm minikube/apiserver.key\")",
        "os.system(\"rm minikube/ca.crt\")",
        "os.system(\"kubectl create secret generic spinnaker-config --from-file=./config/echo.yml --from-file=./config/igor.yml --from-file=./config/gate.yml --from-file=./config/orca.yml --from-file=./config/rosco.yml --from-file=./config/front50.yml --from-file=./config/clouddriver.yml --namespace spinnaker\")",
        "os.system(\"kubectl delete secret nginx-config --namespace spinnaker\")",
        "s.system(\"kubectl create secret generic nginx-config --from-file=./nginx/nginx.conf --namespace spinnaker\")",
        "os.system(\"kubectl create --namespace spinnaker -f services/portus.json\")"
    ],
    "docstrings": [
        "\"\"\"\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority: /root/.kube/ca.crt\n    server: https://\"\"\"",
        "\"\"\":8443\n  name: minikube\ncontexts:\n- context:\n    cluster: minikube\n    user: minikube\n  name: minikube\ncurrent-context: minikube\nkind: Config\npreferences: {}\nusers:\n- name: minikube\n  user:\n    client-certificate: /root/.kube/apiserver.crt\n    client-key: /root/.kube/apiserver.key\n\"\"\"",
        "'''\n{\n\"services\" : [\n\n          {\n    \"title\": \"Spinnaker Dashboard\",\n    \"description\": \"Spinnaker UI\",\n    \"link\": \"'''",
        "'''\"\n    },\n\n    {\n    \"title\": \"Kubernetes Dashboard\",\n    \"description\": \"Management UI\",\n    \"link\": \"'''",
        "'''\"\n    },\n\n        {\n    \"title\": \"Tectonic Console\",\n    \"description\": \"Alternative management UI\",\n    \"link\": \"'''",
        "'''\"\n    },\n\n\n    {\n    \"title\": \"Jenkins\",\n    \"description\": \"Automation Server\",\n    \"link\": \"'''",
        "'''\"\n    },\n\n        {\n    \"title\": \"Cluster Performace\",\n    \"description\": \"Performance analytics UI\",\n    \"link\": \"'''",
        "'''\"\n    }\n\n\n\n]\n}\n'''"
    ],
    "functions": [
        "cmdOut",
        "poll"
    ],
    "classes": []
}