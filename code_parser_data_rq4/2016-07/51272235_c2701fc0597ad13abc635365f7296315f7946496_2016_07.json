{
    "identifiers": [
        "interval",
        "canvas",
        "Graphics",
        "canvas",
        "KochSnowflake",
        "Frame",
        "kochSnowflake",
        "fractalFrame",
        "iterations",
        "iterations",
        "width",
        "height",
        "context",
        "length",
        "iteration",
        "iteration",
        "context",
        "length",
        "kochCurve",
        "length",
        "iteration",
        "right",
        "context",
        "kochCurve",
        "length",
        "iteration",
        "context",
        "kochCurve",
        "length",
        "iteration",
        "context",
        "kochCurve",
        "length",
        "iteration",
        "kochCurve",
        "width",
        "iterations",
        "context",
        "FractalGraphics",
        "setTimeout",
        "$",
        "FractalGraphics",
        "canvas"
    ],
    "literals": [
        "\"\"",
        "\"#fractal canvas\""
    ],
    "variables": [
        "kochSnowflake",
        "fractalFrame",
        "canvas",
        "fractalGraphics"
    ],
    "comments": [
        "this.controlFrame = new ControlFrame(0, 0, 1, 1, \"\")",
        ".add();",
        "this.graphics.addFrame(controlFrame);",
        "var koch_flake = \"FRFRF\";",
        "var koch_flake = \"F\";",
        "",
        "for (var i = 0; i < iterations; i++) {",
        "koch_flake = koch_flake.replace(\"F\",\"FLFRFLF\");",
        "}",
        "",
        "koch_flake = koch_flake.split(\"\");",
        "console.log(koch_flake);",
        "",
        "var angle = 0;",
        "var x = width / 2;",
        "var y = height / 2;",
        "",
        "koch_flake.forEach(function(move) {",
        "if (move === \"F\") {",
        "dist = 100 / (Math.pow(3, (iterations - 1)));",
        "",
        "x += Math.cos(angle) * dist;",
        "y += Math.sin(angle) * dist;",
        "",
        "context.lineTo(x,y);",
        "} else  if (move === \"L\") {",
        "angle -= Math.PI / 3;",
        "} else if (move === \"R\") {",
        "angle += 2 * Math.PI / 3;",
        "}",
        "}.bind(this));",
        "",
        "context.stroke();",
        "fractalGraphics.graphics.drawFrames();"
    ],
    "docstrings": [],
    "functions": [
        "FractalGraphics",
        "KochSnowflake",
        "kochCurve"
    ],
    "classes": []
}