{
    "identifiers": [
        "Node",
        "Node",
        "head",
        "tail",
        "head",
        "tail",
        "value",
        "Node",
        "value",
        "tail",
        "node",
        "node",
        "tail",
        "tail",
        "node",
        "node",
        "head",
        "head",
        "current",
        "next",
        "current",
        "printNode",
        "current",
        "next",
        "current",
        "printNode",
        "value",
        "head",
        "head",
        "value",
        "value",
        "head",
        "next",
        "head",
        "head",
        "current",
        "next",
        "current",
        "value",
        "value",
        "current",
        "next",
        "current",
        "value",
        "value",
        "current",
        "prev",
        "current",
        "next",
        "current",
        "next",
        "current",
        "next",
        "current",
        "prev",
        "value",
        "before",
        "Node",
        "value",
        "head",
        "value",
        "before",
        "head",
        "head",
        "node",
        "node",
        "head",
        "current",
        "next",
        "current",
        "value",
        "before",
        "current",
        "next",
        "current",
        "value",
        "before",
        "current",
        "current",
        "prev",
        "current",
        "prev",
        "node",
        "node"
    ],
    "literals": [
        "\"Empty list\"",
        "\"No nodes to delete.\"",
        "\"Couldn't find that value.\"",
        "\"Can't find that node; can't insert before.\""
    ],
    "variables": [
        "head",
        "tail",
        "node",
        "head",
        "tail",
        "node",
        "prev",
        "node",
        "next",
        "node",
        "prev",
        "next",
        "tail",
        "node",
        "next",
        "current",
        "current",
        "head",
        "prev",
        "current",
        "current",
        "next",
        "prev",
        "node",
        "node",
        "next",
        "prev",
        "head",
        "current",
        "current",
        "node",
        "next",
        "node",
        "prev",
        "next",
        "current",
        "prev"
    ],
    "comments": [
        "adds new node to end of linked list",
        "special case: adding first node to empty list",
        "make former end node the new end node's prev",
        "make new node the end",
        "allow for chaining",
        "prints the data stored in each node of the linked list",
        "special case if no nodes:",
        "loop through all nodes",
        "deletes the first found node (search from front) with node.value = value",
        "if value isn't found, a message is printed but no error is thrown",
        "special case, deleting from front",
        "loop to find value (or end!)",
        "for chaining",
        "inserts a node with value BEFORE the first found node with value=before",
        "BEFORE is used because we already have method to add to end",
        "if before value is not found, no node is inserted",
        "special case: adding to front",
        "list = DoublyLinkedList()",
        "list.addNode(1).addNode(2).addNode(3).addNode(4).addNode(5).addNode(6).printAll()",
        "list.insertNode(10, 7).printAll()"
    ],
    "docstrings": [],
    "functions": [
        "addNode",
        "printAll",
        "deleteNode",
        "insertNode"
    ],
    "classes": [
        "DoublyLinkedList"
    ]
}