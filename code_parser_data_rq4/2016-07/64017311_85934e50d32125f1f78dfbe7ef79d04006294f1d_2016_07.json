{
    "identifiers": [
        "$",
        "$",
        "PluginClass",
        "PluginClass",
        "PluginClass",
        "opts",
        "$",
        "opts",
        "$",
        "opts",
        "noop",
        "message",
        "message",
        "PluginClass",
        "$",
        "options",
        "options",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "$",
        "elem",
        "instance",
        "logError",
        "options",
        "$",
        "instance",
        "options",
        "options",
        "logError",
        "options",
        "instance",
        "options",
        "instance",
        "args",
        "returnValue",
        "returnValue",
        "$",
        "instance",
        "instance",
        "options",
        "instance",
        "instance",
        "PluginClass",
        "options",
        "$",
        "instance",
        "$",
        "PluginClass",
        "addOptionMethod",
        "PluginClass",
        "bridge",
        "PluginClass",
        "$",
        "define",
        "define",
        "define",
        "defineBridget",
        "exports",
        "defineBridget",
        "require",
        "defineBridget",
        "obj",
        "obj",
        "docElem",
        "bind",
        "obj",
        "fn",
        "obj",
        "fn",
        "docElem",
        "bind",
        "obj",
        "fn",
        "obj",
        "fn",
        "fn",
        "getIEEvent",
        "obj",
        "fn",
        "fn",
        "getIEEvent",
        "obj",
        "fn",
        "obj",
        "obj",
        "obj",
        "fn",
        "docElem",
        "unbind",
        "obj",
        "fn",
        "obj",
        "fn",
        "docElem",
        "unbind",
        "obj",
        "fn",
        "obj",
        "obj",
        "fn",
        "obj",
        "fn",
        "err",
        "obj",
        "fn",
        "bind",
        "unbind",
        "define",
        "define",
        "define",
        "eventie",
        "exports",
        "eventie",
        "eventie",
        "EventEmitter",
        "exports",
        "listeners",
        "listener",
        "listeners",
        "i",
        "listeners",
        "i",
        "listener",
        "i",
        "name",
        "aliasClosure",
        "name",
        "arguments",
        "proto",
        "getListeners",
        "evt",
        "evt",
        "response",
        "key",
        "events",
        "events",
        "key",
        "evt",
        "key",
        "response",
        "key",
        "events",
        "key",
        "response",
        "events",
        "evt",
        "events",
        "evt",
        "response",
        "proto",
        "flattenListeners",
        "listeners",
        "i",
        "i",
        "listeners",
        "i",
        "flatListeners",
        "listeners",
        "i",
        "flatListeners",
        "proto",
        "getListenersAsObject",
        "evt",
        "evt",
        "listeners",
        "response",
        "response",
        "evt",
        "listeners",
        "response",
        "listeners",
        "proto",
        "addListener",
        "evt",
        "listener",
        "evt",
        "listener",
        "key",
        "listeners",
        "listeners",
        "key",
        "indexOfListener",
        "listeners",
        "key",
        "listener",
        "listeners",
        "key",
        "listenerIsWrapped",
        "listener",
        "listener",
        "proto",
        "alias",
        "proto",
        "addOnceListener",
        "evt",
        "listener",
        "evt",
        "listener",
        "proto",
        "alias",
        "proto",
        "defineEvent",
        "evt",
        "evt",
        "proto",
        "defineEvents",
        "evts",
        "i",
        "evts",
        "i",
        "evts",
        "i",
        "proto",
        "removeListener",
        "evt",
        "listener",
        "evt",
        "key",
        "listeners",
        "listeners",
        "key",
        "index",
        "indexOfListener",
        "listeners",
        "key",
        "listener",
        "index",
        "listeners",
        "key",
        "index",
        "proto",
        "alias",
        "proto",
        "addListeners",
        "evt",
        "listeners",
        "evt",
        "listeners",
        "proto",
        "removeListeners",
        "evt",
        "listeners",
        "evt",
        "listeners",
        "proto",
        "manipulateListeners",
        "remove",
        "evt",
        "listeners",
        "remove",
        "remove",
        "evt",
        "evt",
        "i",
        "evt",
        "evt",
        "i",
        "value",
        "evt",
        "i",
        "value",
        "single",
        "i",
        "value",
        "multiple",
        "i",
        "value",
        "i",
        "listeners",
        "i",
        "single",
        "evt",
        "listeners",
        "i",
        "proto",
        "removeEvent",
        "evt",
        "evt",
        "events",
        "evt",
        "evt",
        "key",
        "events",
        "events",
        "key",
        "evt",
        "key",
        "events",
        "key",
        "proto",
        "alias",
        "proto",
        "emitEvent",
        "evt",
        "args",
        "evt",
        "key",
        "listeners",
        "listeners",
        "key",
        "i",
        "listeners",
        "key",
        "i",
        "listener",
        "listeners",
        "key",
        "i",
        "listener",
        "evt",
        "listener",
        "response",
        "listener",
        "args",
        "response",
        "evt",
        "listener",
        "proto",
        "alias",
        "proto",
        "emit",
        "evt",
        "arguments",
        "evt",
        "args",
        "proto",
        "setOnceReturnValue",
        "value",
        "value",
        "proto",
        "_getOnceReturnValue",
        "proto",
        "_getEvents",
        "EventEmitter",
        "noConflict",
        "exports",
        "originalGlobalValue",
        "EventEmitter",
        "define",
        "define",
        "define",
        "EventEmitter",
        "EventEmitter",
        "exports",
        "EventEmitter",
        "propName",
        "propName",
        "docElemStyle",
        "propName",
        "propName",
        "propName",
        "propName",
        "propName",
        "prefixes",
        "i",
        "len",
        "i",
        "prefixed",
        "prefixes",
        "i",
        "propName",
        "docElemStyle",
        "prefixed",
        "prefixed",
        "define",
        "define",
        "define",
        "getStyleProperty",
        "exports",
        "getStyleProperty",
        "getStyleProperty",
        "value",
        "parseFloat",
        "value",
        "value",
        "isNaN",
        "num",
        "isValid",
        "num",
        "noop",
        "message",
        "message",
        "measurements",
        "i",
        "len",
        "i",
        "measurements",
        "i",
        "size",
        "measurement",
        "size",
        "getStyleProperty",
        "isSetup",
        "isSetup",
        "getStyle",
        "getComputedStyle",
        "elem",
        "getComputedStyle",
        "elem",
        "elem",
        "elem",
        "getStyle",
        "elem",
        "getStyleFn",
        "elem",
        "style",
        "logError",
        "style",
        "style",
        "boxSizingProp",
        "getStyleProperty",
        "boxSizingProp",
        "div",
        "div",
        "div",
        "div",
        "div",
        "boxSizingProp",
        "body",
        "div",
        "getStyle",
        "div",
        "isBoxSizeOuter",
        "getStyleSize",
        "style",
        "body",
        "div",
        "elem",
        "setup",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "getStyle",
        "elem",
        "style",
        "getZeroSize",
        "size",
        "elem",
        "size",
        "elem",
        "size",
        "boxSizingProp",
        "style",
        "boxSizingProp",
        "style",
        "boxSizingProp",
        "measurements",
        "i",
        "len",
        "i",
        "measurements",
        "i",
        "style",
        "measurement",
        "value",
        "mungeNonPixel",
        "elem",
        "value",
        "parseFloat",
        "value",
        "size",
        "measurement",
        "isNaN",
        "num",
        "num",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "isBorderBox",
        "isBoxSizeOuter",
        "getStyleSize",
        "style",
        "styleWidth",
        "size",
        "styleWidth",
        "isBorderBoxSizeOuter",
        "paddingWidth",
        "borderWidth",
        "getStyleSize",
        "style",
        "styleHeight",
        "size",
        "styleHeight",
        "isBorderBoxSizeOuter",
        "paddingHeight",
        "borderHeight",
        "size",
        "size",
        "paddingWidth",
        "borderWidth",
        "size",
        "size",
        "paddingHeight",
        "borderHeight",
        "size",
        "size",
        "marginWidth",
        "size",
        "size",
        "marginHeight",
        "size",
        "elem",
        "value",
        "value",
        "value",
        "elem",
        "style",
        "elem",
        "rs",
        "rs",
        "rsLeft",
        "rs",
        "elem",
        "style",
        "value",
        "value",
        "style",
        "style",
        "left",
        "rsLeft",
        "rs",
        "rsLeft",
        "value",
        "getSize",
        "define",
        "define",
        "define",
        "defineGetSize",
        "exports",
        "defineGetSize",
        "require",
        "defineGetSize",
        "fn",
        "fn",
        "docReady",
        "fn",
        "queue",
        "fn",
        "docReady",
        "docReady",
        "isIE8NotReady",
        "trigger",
        "docReady",
        "queue",
        "i",
        "len",
        "i",
        "queue",
        "i",
        "fn",
        "eventie",
        "trigger",
        "eventie",
        "onReady",
        "eventie",
        "onReady",
        "eventie",
        "onReady",
        "docReady",
        "define",
        "define",
        "define",
        "defineDocReady",
        "exports",
        "defineDocReady",
        "require",
        "defineDocReady",
        "ElemProto",
        "ElemProto",
        "ElemProto",
        "prefixes",
        "i",
        "len",
        "i",
        "prefixes",
        "i",
        "prefix",
        "ElemProto",
        "method",
        "method",
        "elem",
        "selector",
        "elem",
        "matchesMethod",
        "selector",
        "elem",
        "elem",
        "fragment",
        "elem",
        "elem",
        "selector",
        "checkParent",
        "elem",
        "elem",
        "selector",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elem",
        "elem",
        "selector",
        "checkParent",
        "elem",
        "match",
        "elem",
        "selector",
        "matchesMethod",
        "match",
        "div",
        "matchesSelector",
        "supportsOrphans",
        "match",
        "matchChild",
        "matchesSelector",
        "query",
        "define",
        "define",
        "define",
        "matchesSelector",
        "exports",
        "matchesSelector",
        "matchesSelector",
        "Element",
        "factory",
        "define",
        "define",
        "define",
        "docReady",
        "matchesSelector",
        "factory",
        "docReady",
        "matchesSelector",
        "exports",
        "factory",
        "require",
        "require",
        "factory",
        "factory",
        "docReady",
        "matchesSelector",
        "utils",
        "a",
        "b",
        "prop",
        "b",
        "a",
        "prop",
        "b",
        "prop",
        "a",
        "utils",
        "num",
        "div",
        "num",
        "div",
        "div",
        "div",
        "utils",
        "obj",
        "objToString",
        "obj",
        "utils",
        "obj",
        "utils",
        "obj",
        "ary",
        "obj",
        "obj",
        "obj",
        "obj",
        "i",
        "len",
        "i",
        "ary",
        "obj",
        "i",
        "ary",
        "obj",
        "ary",
        "utils",
        "ary",
        "obj",
        "ary",
        "obj",
        "ary",
        "obj",
        "ary",
        "i",
        "len",
        "i",
        "ary",
        "i",
        "obj",
        "i",
        "utils",
        "ary",
        "obj",
        "utils",
        "ary",
        "obj",
        "index",
        "ary",
        "index",
        "utils",
        "HTMLElement",
        "HTMLElement",
        "isElementDOM2",
        "obj",
        "obj",
        "HTMLElement",
        "isElementQuirky",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "utils",
        "elem",
        "text",
        "setTextProperty",
        "setTextProperty",
        "elem",
        "setTextProperty",
        "text",
        "setText",
        "utils",
        "elem",
        "selector",
        "elem",
        "elem",
        "elem",
        "matchesSelector",
        "elem",
        "selector",
        "elem",
        "utils",
        "elem",
        "elem",
        "elem",
        "elem",
        "utils",
        "method",
        "method",
        "utils",
        "elems",
        "selector",
        "elems",
        "utils",
        "elems",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "utils",
        "elem",
        "selector",
        "matchesSelector",
        "elem",
        "selector",
        "ffElems",
        "elem",
        "elem",
        "selector",
        "childElems",
        "j",
        "jLen",
        "j",
        "ffElems",
        "childElems",
        "j",
        "ffElems",
        "elem",
        "ffElems",
        "utils",
        "_class",
        "methodName",
        "threshold",
        "_class",
        "methodName",
        "methodName",
        "_class",
        "methodName",
        "timeoutName",
        "timeout",
        "clearTimeout",
        "timeout",
        "timeoutName",
        "setTimeout",
        "method",
        "_this",
        "args",
        "_this",
        "timeoutName",
        "threshold",
        "utils",
        "match",
        "$1",
        "$2",
        "$1",
        "$2",
        "utils",
        "WidgetClass",
        "docReady",
        "utils",
        "dashedNamespace",
        "dashedNamespace",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elem",
        "dataAttr",
        "options",
        "attr",
        "attr",
        "error",
        "dataAttr",
        "elem",
        "elem",
        "elem",
        "error",
        "WidgetClass",
        "elem",
        "options",
        "jQuery",
        "jQuery",
        "elem",
        "instance",
        "utils",
        "factory",
        "define",
        "define",
        "define",
        "EventEmitter",
        "getSize",
        "getStyleProperty",
        "utils",
        "factory",
        "EventEmitter",
        "getSize",
        "getStyleProperty",
        "utils",
        "exports",
        "factory",
        "require",
        "require",
        "require",
        "require",
        "factory",
        "factory",
        "EventEmitter",
        "getSize",
        "getStyleProperty",
        "utils",
        "getComputedStyle",
        "elem",
        "getComputedStyle",
        "elem",
        "elem",
        "elem",
        "obj",
        "prop",
        "obj",
        "prop",
        "getStyleProperty",
        "getStyleProperty",
        "transitionProperty",
        "transformProperty",
        "getStyleProperty",
        "transitionProperty",
        "prefixableProperties",
        "i",
        "len",
        "i",
        "prefixableProperties",
        "i",
        "getStyleProperty",
        "prop",
        "supportedProp",
        "supportedProp",
        "prop",
        "cache",
        "prop",
        "supportedProp",
        "cache",
        "element",
        "layout",
        "element",
        "element",
        "layout",
        "utils",
        "Item",
        "EventEmitter",
        "Item",
        "Item",
        "method",
        "method",
        "Item",
        "getSize",
        "Item",
        "style",
        "prop",
        "style",
        "vendorProperties",
        "prop",
        "prop",
        "elemStyle",
        "supportedProp",
        "style",
        "prop",
        "Item",
        "getStyle",
        "layoutOptions",
        "layoutOptions",
        "style",
        "isOriginLeft",
        "style",
        "isOriginTop",
        "xValue",
        "parseFloat",
        "xValue",
        "layoutSize",
        "parseInt",
        "xValue",
        "yValue",
        "parseFloat",
        "yValue",
        "layoutSize",
        "parseInt",
        "yValue",
        "x",
        "isNaN",
        "x",
        "x",
        "y",
        "isNaN",
        "y",
        "y",
        "x",
        "isOriginLeft",
        "layoutSize",
        "layoutSize",
        "y",
        "isOriginTop",
        "layoutSize",
        "layoutSize",
        "x",
        "y",
        "Item",
        "layoutOptions",
        "layoutOptions",
        "layoutOptions",
        "layoutSize",
        "xPadding",
        "style",
        "xProperty",
        "x",
        "style",
        "xResetProperty",
        "layoutOptions",
        "layoutOptions",
        "layoutOptions",
        "layoutSize",
        "yPadding",
        "style",
        "yProperty",
        "y",
        "style",
        "yResetProperty",
        "style",
        "Item",
        "x",
        "layoutOptions",
        "layoutOptions",
        "x",
        "x",
        "Item",
        "y",
        "layoutOptions",
        "layoutOptions",
        "y",
        "y",
        "Item",
        "x",
        "y",
        "parseInt",
        "x",
        "parseInt",
        "y",
        "compareX",
        "compareY",
        "x",
        "y",
        "didNotMove",
        "x",
        "curX",
        "y",
        "curY",
        "transitionStyle",
        "transX",
        "transY",
        "transitionStyle",
        "Item",
        "x",
        "y",
        "x",
        "layoutOptions",
        "x",
        "x",
        "y",
        "layoutOptions",
        "y",
        "y",
        "is3d",
        "x",
        "y",
        "x",
        "y",
        "Item",
        "x",
        "y",
        "x",
        "y",
        "Item",
        "supportsCSS3",
        "Item",
        "Item",
        "Item",
        "x",
        "y",
        "parseInt",
        "x",
        "parseInt",
        "y",
        "Item",
        "args",
        "args",
        "args",
        "args",
        "prop",
        "args",
        "args",
        "prop",
        "Item",
        "args",
        "parseFloat",
        "args",
        "prop",
        "args",
        "_transition",
        "prop",
        "args",
        "prop",
        "prop",
        "args",
        "_transition",
        "prop",
        "args",
        "_transition",
        "prop",
        "args",
        "args",
        "h",
        "args",
        "args",
        "$1",
        "$1",
        "toDashedAll",
        "vendorProperties",
        "Item",
        "transitionProps",
        "transitionEndEvent",
        "Item",
        "Item",
        "transitionProperty",
        "Item",
        "Item",
        "Item",
        "dashedVendorProperties",
        "_transition",
        "propertyName",
        "isEmptyObj",
        "_transition",
        "propertyName",
        "_transition",
        "_transition",
        "propertyName",
        "propertyName",
        "_transition",
        "_transition",
        "propertyName",
        "onTransitionEnd",
        "_transition",
        "propertyName",
        "Item",
        "transitionEndEvent",
        "Item",
        "style",
        "prop",
        "style",
        "cleanStyle",
        "prop",
        "cleanStyle",
        "Item",
        "cleanTransitionStyle",
        "Item",
        "Item",
        "transitionProperty",
        "parseFloat",
        "_this",
        "Item",
        "onTransitionEnd",
        "transitionEndProperty",
        "options",
        "options",
        "onTransitionEnd",
        "Item",
        "Item",
        "styleProperty",
        "styleProperty",
        "optionStyle",
        "prop",
        "optionStyle",
        "prop",
        "Item",
        "onTransitionEnd",
        "transitionEndProperty",
        "options",
        "options",
        "onTransitionEnd",
        "Item",
        "Item",
        "Item",
        "factory",
        "define",
        "define",
        "define",
        "eventie",
        "EventEmitter",
        "getSize",
        "utils",
        "Item",
        "factory",
        "eventie",
        "EventEmitter",
        "getSize",
        "utils",
        "Item",
        "exports",
        "factory",
        "require",
        "require",
        "require",
        "require",
        "require",
        "factory",
        "factory",
        "eventie",
        "EventEmitter",
        "getSize",
        "utils",
        "Item",
        "element",
        "options",
        "utils",
        "element",
        "queryElement",
        "queryElement",
        "element",
        "queryElement",
        "jQuery",
        "jQuery",
        "utils",
        "options",
        "GUID",
        "id",
        "instances",
        "id",
        "Outlayer",
        "Outlayer",
        "Item",
        "Outlayer",
        "utils",
        "Outlayer",
        "EventEmitter",
        "Outlayer",
        "opts",
        "utils",
        "opts",
        "Outlayer",
        "utils",
        "Outlayer",
        "Outlayer",
        "elems",
        "elems",
        "itemElems",
        "i",
        "len",
        "i",
        "itemElems",
        "i",
        "Item",
        "elem",
        "items",
        "item",
        "items",
        "Outlayer",
        "elems",
        "utils",
        "elems",
        "Outlayer",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elems",
        "Outlayer",
        "isInstant",
        "Outlayer",
        "Outlayer",
        "Outlayer",
        "Outlayer",
        "getSize",
        "Outlayer",
        "measurement",
        "size",
        "measurement",
        "option",
        "measurement",
        "option",
        "elem",
        "option",
        "utils",
        "option",
        "elem",
        "option",
        "measurement",
        "elem",
        "getSize",
        "elem",
        "size",
        "option",
        "Outlayer",
        "items",
        "isInstant",
        "items",
        "items",
        "items",
        "isInstant",
        "Outlayer",
        "items",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "layoutItems",
        "item",
        "layoutItems",
        "Outlayer",
        "items",
        "isInstant",
        "items",
        "items",
        "items",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "position",
        "item",
        "position",
        "isInstant",
        "item",
        "queue",
        "position",
        "queue",
        "Outlayer",
        "Outlayer",
        "queue",
        "queue",
        "i",
        "len",
        "i",
        "queue",
        "i",
        "obj",
        "obj",
        "obj",
        "obj",
        "Outlayer",
        "item",
        "x",
        "y",
        "isInstant",
        "isInstant",
        "item",
        "x",
        "y",
        "item",
        "x",
        "y",
        "Outlayer",
        "Outlayer",
        "size",
        "size",
        "size",
        "Outlayer",
        "noop",
        "Outlayer",
        "measure",
        "isWidth",
        "measure",
        "elemSize",
        "measure",
        "isWidth",
        "elemSize",
        "elemSize",
        "elemSize",
        "elemSize",
        "elemSize",
        "elemSize",
        "elemSize",
        "elemSize",
        "measure",
        "measure",
        "isWidth",
        "measure",
        "Outlayer",
        "eventName",
        "items",
        "_this",
        "eventName",
        "items",
        "items",
        "items",
        "count",
        "onComplete",
        "doneCount",
        "doneCount",
        "count",
        "onComplete",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "eventName",
        "tick",
        "Outlayer",
        "args",
        "args",
        "args",
        "emitArgs",
        "jQuery",
        "jQuery",
        "jQuery",
        "$event",
        "$event",
        "args",
        "args",
        "Outlayer",
        "elem",
        "elem",
        "item",
        "item",
        "Outlayer",
        "elem",
        "elem",
        "item",
        "item",
        "Outlayer",
        "elems",
        "elems",
        "elems",
        "elems",
        "elems",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elem",
        "Outlayer",
        "elems",
        "elems",
        "elems",
        "elems",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "utils",
        "elem",
        "elem",
        "Outlayer",
        "elems",
        "elems",
        "elems",
        "elems",
        "elems",
        "elems",
        "utils",
        "elems",
        "elems",
        "Outlayer",
        "i",
        "len",
        "i",
        "i",
        "stamp",
        "Outlayer",
        "boundingRect",
        "size",
        "size",
        "boundingRect",
        "size",
        "size",
        "boundingRect",
        "size",
        "size",
        "boundingRect",
        "size",
        "size",
        "Outlayer",
        "noop",
        "Outlayer",
        "elem",
        "elem",
        "getSize",
        "elem",
        "boundingRect",
        "thisRect",
        "size",
        "boundingRect",
        "thisRect",
        "size",
        "thisRect",
        "boundingRect",
        "size",
        "thisRect",
        "boundingRect",
        "size",
        "offset",
        "Outlayer",
        "method",
        "method",
        "Outlayer",
        "eventie",
        "Outlayer",
        "eventie",
        "Outlayer",
        "clearTimeout",
        "_this",
        "_this",
        "setTimeout",
        "delayed",
        "Outlayer",
        "Outlayer",
        "getSize",
        "size",
        "hasSizes",
        "size",
        "Outlayer",
        "elems",
        "elems",
        "items",
        "items",
        "items",
        "Outlayer",
        "elems",
        "elems",
        "items",
        "items",
        "items",
        "Outlayer",
        "elems",
        "elems",
        "items",
        "items",
        "previousItems",
        "items",
        "items",
        "previousItems",
        "Outlayer",
        "items",
        "items",
        "items",
        "items",
        "len",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "Outlayer",
        "items",
        "items",
        "items",
        "items",
        "len",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "Outlayer",
        "elems",
        "elems",
        "items",
        "Outlayer",
        "elems",
        "elems",
        "items",
        "Outlayer",
        "elem",
        "i",
        "len",
        "i",
        "i",
        "item",
        "elem",
        "item",
        "Outlayer",
        "elems",
        "elems",
        "utils",
        "elems",
        "elems",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elem",
        "item",
        "items",
        "item",
        "items",
        "Outlayer",
        "elems",
        "elems",
        "removeItems",
        "removeItems",
        "removeItems",
        "removeItems",
        "i",
        "len",
        "i",
        "removeItems",
        "i",
        "item",
        "utils",
        "item",
        "Outlayer",
        "style",
        "style",
        "style",
        "i",
        "len",
        "i",
        "i",
        "item",
        "instances",
        "id",
        "jQuery",
        "jQuery",
        "Outlayer",
        "elem",
        "elem",
        "utils",
        "elem",
        "elem",
        "elem",
        "id",
        "instances",
        "id",
        "Outlayer",
        "options",
        "Outlayer",
        "arguments",
        "Layout",
        "Outlayer",
        "utils",
        "Layout",
        "Outlayer",
        "Layout",
        "Layout",
        "Layout",
        "utils",
        "Outlayer",
        "utils",
        "Layout",
        "options",
        "Layout",
        "Layout",
        "Layout",
        "Outlayer",
        "Layout",
        "LayoutItem",
        "Item",
        "arguments",
        "Layout",
        "Item",
        "utils",
        "Layout",
        "jQuery",
        "jQuery",
        "jQuery",
        "Layout",
        "Layout",
        "Outlayer",
        "Item",
        "Outlayer",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "factory",
        "factory",
        "Outlayer",
        "Outlayer",
        "arguments",
        "Item",
        "Outlayer",
        "Item",
        "Outlayer",
        "Item",
        "key",
        "getSortData",
        "sorters",
        "key",
        "key",
        "sorter",
        "Item",
        "Item",
        "_destroy",
        "arguments",
        "Item",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "require",
        "factory",
        "factory",
        "getSize",
        "Outlayer",
        "isotope",
        "isotope",
        "isotope",
        "isotope",
        "isotope",
        "isotope",
        "isotope",
        "facadeMethods",
        "i",
        "len",
        "i",
        "facadeMethods",
        "i",
        "LayoutMode",
        "methodName",
        "getOutlayerMethod",
        "methodName",
        "methodName",
        "Outlayer",
        "methodName",
        "arguments",
        "LayoutMode",
        "getSize",
        "size",
        "hasSizes",
        "size",
        "LayoutMode",
        "arguments",
        "LayoutMode",
        "LayoutMode",
        "LayoutMode",
        "segment",
        "size",
        "segment",
        "size",
        "size",
        "segmentName",
        "outerSize",
        "segmentName",
        "segmentName",
        "firstItemSize",
        "firstItemSize",
        "outerSize",
        "size",
        "LayoutMode",
        "firstItem",
        "firstItem",
        "getSize",
        "firstItem",
        "LayoutMode",
        "arguments",
        "LayoutMode",
        "LayoutMode",
        "LayoutMode",
        "options",
        "LayoutMode",
        "arguments",
        "Mode",
        "LayoutMode",
        "options",
        "Mode",
        "options",
        "Mode",
        "LayoutMode",
        "Mode",
        "Mode",
        "LayoutMode",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "require",
        "require",
        "factory",
        "factory",
        "Outlayer",
        "getSize",
        "utils",
        "Outlayer",
        "Masonry",
        "i",
        "Masonry",
        "firstItem",
        "firstItem",
        "firstItemElem",
        "getSize",
        "firstItemElem",
        "containerWidth",
        "columnWidth",
        "columnWidth",
        "containerWidth",
        "columnWidth",
        "excess",
        "excess",
        "cols",
        "mathMethod",
        "cols",
        "cols",
        "Masonry",
        "getSize",
        "container",
        "size",
        "size",
        "Masonry",
        "item",
        "item",
        "item",
        "remainder",
        "remainder",
        "mathMethod",
        "item",
        "colSpan",
        "colSpan",
        "colSpan",
        "colGroup",
        "utils",
        "colGroup",
        "minimumY",
        "shortColIndex",
        "minimumY",
        "minimumY",
        "item",
        "colGroup",
        "i",
        "setSpan",
        "i",
        "shortColIndex",
        "i",
        "setHeight",
        "position",
        "Masonry",
        "colSpan",
        "colSpan",
        "colSpan",
        "i",
        "groupCount",
        "i",
        "i",
        "i",
        "colSpan",
        "colGroup",
        "i",
        "groupColYs",
        "colGroup",
        "Masonry",
        "stamp",
        "getSize",
        "stamp",
        "stamp",
        "offset",
        "offset",
        "firstX",
        "stampSize",
        "firstX",
        "firstCol",
        "firstCol",
        "lastX",
        "lastCol",
        "lastX",
        "lastCol",
        "lastCol",
        "offset",
        "offset",
        "stampSize",
        "i",
        "lastCol",
        "i",
        "i",
        "stampMaxY",
        "i",
        "Masonry",
        "size",
        "size",
        "Masonry",
        "i",
        "i",
        "unusedCols",
        "unusedCols",
        "Masonry",
        "previousWidth",
        "Masonry",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "require",
        "factory",
        "factory",
        "LayoutMode",
        "Masonry",
        "a",
        "b",
        "prop",
        "b",
        "a",
        "prop",
        "b",
        "prop",
        "a",
        "LayoutMode",
        "MasonryMode",
        "MasonryMode",
        "MasonryMode",
        "extend",
        "MasonryMode",
        "Masonry",
        "MasonryMode",
        "_getElementOffset",
        "MasonryMode",
        "layout",
        "MasonryMode",
        "_getMeasurement",
        "MasonryMode",
        "MasonryMode",
        "measureColumns",
        "MasonryMode",
        "MasonryMode",
        "_manageStamp",
        "arguments",
        "MasonryMode",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "factory",
        "factory",
        "LayoutMode",
        "LayoutMode",
        "FitRows",
        "FitRows",
        "item",
        "item",
        "item",
        "itemWidth",
        "containerWidth",
        "item",
        "itemWidth",
        "position",
        "FitRows",
        "FitRows",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "require",
        "factory",
        "factory",
        "LayoutMode",
        "LayoutMode",
        "Vertical",
        "Vertical",
        "item",
        "item",
        "item",
        "item",
        "x",
        "y",
        "Vertical",
        "Vertical",
        "factory",
        "define",
        "define",
        "define",
        "Outlayer",
        "getSize",
        "matchesSelector",
        "utils",
        "Item",
        "LayoutMode",
        "factory",
        "Outlayer",
        "getSize",
        "matchesSelector",
        "utils",
        "Item",
        "LayoutMode",
        "exports",
        "factory",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "factory",
        "factory",
        "Outlayer",
        "getSize",
        "matchesSelector",
        "utils",
        "Item",
        "LayoutMode",
        "docElem",
        "elem",
        "elem",
        "elem",
        "elem",
        "Outlayer",
        "Isotope",
        "Item",
        "Isotope",
        "LayoutMode",
        "Isotope",
        "Outlayer",
        "name",
        "LayoutMode",
        "name",
        "Isotope",
        "Outlayer",
        "Isotope",
        "Outlayer",
        "arguments",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "items",
        "items",
        "Isotope",
        "name",
        "LayoutMode",
        "name",
        "name",
        "name",
        "Mode",
        "utils",
        "Mode",
        "initialOpts",
        "initialOpts",
        "name",
        "Mode",
        "Isotope",
        "Isotope",
        "isInstant",
        "Isotope",
        "opts",
        "opts",
        "filtered",
        "_this",
        "filtered",
        "_this",
        "filtered",
        "hideReveal",
        "hideReveal",
        "Isotope",
        "Isotope",
        "Isotope",
        "isInstant",
        "isInstant",
        "Isotope",
        "isLayoutComplete",
        "isHideComplete",
        "isRevealComplete",
        "_this",
        "_this",
        "isLayoutComplete",
        "arrangeParallelCallback",
        "isHideComplete",
        "arrangeParallelCallback",
        "isRevealComplete",
        "arrangeParallelCallback",
        "Isotope",
        "items",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "test",
        "item",
        "isMatched",
        "matches",
        "item",
        "isMatched",
        "item",
        "hiddenMatched",
        "item",
        "isMatched",
        "item",
        "visibleUnmatched",
        "item",
        "matches",
        "hiddenMatched",
        "visibleUnmatched",
        "Isotope",
        "jQuery",
        "item",
        "jQuery",
        "item",
        "item",
        "item",
        "item",
        "matchesSelector",
        "item",
        "Isotope",
        "elems",
        "elems",
        "elems",
        "utils",
        "elems",
        "items",
        "elems",
        "items",
        "items",
        "Isotope",
        "key",
        "getSortData",
        "getSortData",
        "key",
        "key",
        "mungeSorter",
        "sorter",
        "Isotope",
        "items",
        "items",
        "items",
        "len",
        "i",
        "len",
        "i",
        "items",
        "i",
        "item",
        "sorter",
        "sorter",
        "sorter",
        "trim",
        "sorter",
        "args",
        "query",
        "attrMatch",
        "attrMatch",
        "getValueGetter",
        "attr",
        "query",
        "Isotope",
        "args",
        "sorter",
        "parser",
        "elem",
        "elem",
        "parser",
        "getValue",
        "elem",
        "elem",
        "elem",
        "getValue",
        "elem",
        "sorter",
        "attr",
        "query",
        "attr",
        "getValue",
        "elem",
        "elem",
        "attr",
        "getValue",
        "elem",
        "elem",
        "query",
        "child",
        "getText",
        "child",
        "getValue",
        "mungeSorter",
        "Isotope",
        "val",
        "parseInt",
        "val",
        "val",
        "parseFloat",
        "val",
        "Isotope",
        "sortByOpt",
        "sortByOpt",
        "getItemSorter",
        "sortBys",
        "itemSorter",
        "sortByOpt",
        "sortByOpt",
        "sortBys",
        "sortAsc",
        "sorter",
        "itemA",
        "itemB",
        "sortBys",
        "i",
        "len",
        "i",
        "sortBys",
        "i",
        "itemA",
        "sortBy",
        "itemB",
        "sortBy",
        "a",
        "b",
        "a",
        "b",
        "sortAsc",
        "sortBy",
        "sortAsc",
        "sortBy",
        "sortAsc",
        "isAscending",
        "a",
        "b",
        "direction",
        "Isotope",
        "layoutMode",
        "mode",
        "layoutMode",
        "mode",
        "layoutMode",
        "mode",
        "Isotope",
        "Outlayer",
        "Isotope",
        "item",
        "item",
        "Isotope",
        "stamp",
        "stamp",
        "Isotope",
        "Isotope",
        "Isotope",
        "elems",
        "elems",
        "items",
        "items",
        "filteredItems",
        "Isotope",
        "elems",
        "elems",
        "items",
        "items",
        "filteredItems",
        "items",
        "Isotope",
        "items",
        "items",
        "filtered",
        "filtered",
        "filtered",
        "filtered",
        "Isotope",
        "elems",
        "elems",
        "items",
        "items",
        "i",
        "i",
        "len",
        "i",
        "item",
        "items",
        "i",
        "item",
        "items",
        "i",
        "i",
        "len",
        "i",
        "items",
        "i",
        "i",
        "i",
        "len",
        "i",
        "items",
        "i",
        "filteredInsertItems",
        "Isotope",
        "Isotope",
        "elems",
        "elems",
        "utils",
        "elems",
        "elems",
        "_remove",
        "elems",
        "removeItems",
        "removeItems",
        "len",
        "i",
        "len",
        "i",
        "removeItems",
        "i",
        "utils",
        "item",
        "Isotope",
        "i",
        "len",
        "i",
        "i",
        "item",
        "Isotope",
        "fn",
        "fn",
        "transitionDuration",
        "returnValue",
        "Isotope",
        "i",
        "len",
        "i",
        "elems",
        "i",
        "elems",
        "Isotope"
    ],
    "literals": [
        "'undefined'",
        "'string'",
        "\"cannot call methods on \"",
        "\" prior to initialization; \"",
        "\"attempted to call '\"",
        "\"'\"",
        "'_'",
        "\"no such method '\"",
        "\"' for \"",
        "\" instance\"",
        "'function'",
        "'jquery-bridget/jquery.bridget'",
        "'jquery'",
        "'object'",
        "'jquery'",
        "\"on\"",
        "\"on\"",
        "'function'",
        "'eventie/eventie'",
        "'object'",
        "'use strict'",
        "'object'",
        "'addListener'",
        "'addOnceListener'",
        "'removeListener'",
        "'object'",
        "'function'",
        "'string'",
        "'removeEvent'",
        "'emitEvent'",
        "'_onceReturnValue'",
        "'function'",
        "'eventEmitter/EventEmitter'",
        "'object'",
        "'Webkit Moz ms Ms O'",
        "' '",
        "'string'",
        "'string'",
        "'function'",
        "'get-style-property/get-style-property'",
        "'object'",
        "'%'",
        "'undefined'",
        "'paddingLeft'",
        "'paddingRight'",
        "'paddingTop'",
        "'paddingBottom'",
        "'marginLeft'",
        "'marginRight'",
        "'marginTop'",
        "'marginBottom'",
        "'borderLeftWidth'",
        "'borderRightWidth'",
        "'borderTopWidth'",
        "'borderBottomWidth'",
        "'Style returned '",
        "'. Are you running this code in a hidden iframe on Firefox? '",
        "'See http://bit.ly/getsizebug1'",
        "'boxSizing'",
        "'div'",
        "'200px'",
        "'1px 2px 3px 4px'",
        "'solid'",
        "'1px 2px 3px 4px'",
        "'border-box'",
        "'string'",
        "'object'",
        "'none'",
        "'border-box'",
        "'%'",
        "'function'",
        "'get-size/get-size'",
        "'get-style-property/get-style-property'",
        "'object'",
        "'desandro-get-style-property'",
        "'function'",
        "'readystatechange'",
        "'complete'",
        "'complete'",
        "'DOMContentLoaded'",
        "'readystatechange'",
        "'load'",
        "'function'",
        "'doc-ready/doc-ready'",
        "'eventie/eventie'",
        "'object'",
        "'eventie'",
        "'use strict'",
        "'matches'",
        "'matchesSelector'",
        "'webkit'",
        "'moz'",
        "'ms'",
        "'o'",
        "'MatchesSelector'",
        "'div'",
        "'div'",
        "'function'",
        "'matches-selector/matches-selector'",
        "'object'",
        "'use strict'",
        "'function'",
        "'fizzy-ui-utils/utils'",
        "'doc-ready/doc-ready'",
        "'matches-selector/matches-selector'",
        "'object'",
        "'doc-ready'",
        "'desandro-matches-selector'",
        "'[object Array]'",
        "'number'",
        "'function'",
        "'object'",
        "'object'",
        "'string'",
        "'textContent'",
        "'innerText'",
        "'string'",
        "'on'",
        "'Timeout'",
        "'-'",
        "'.js-'",
        "'data-'",
        "'-options'",
        "'Error parsing '",
        "' on '",
        "'#'",
        "''",
        "': '",
        "'use strict'",
        "'function'",
        "'outlayer/item'",
        "'eventEmitter/EventEmitter'",
        "'get-size/get-size'",
        "'get-style-property/get-style-property'",
        "'fizzy-ui-utils/utils'",
        "'object'",
        "'wolfy87-eventemitter'",
        "'get-size'",
        "'desandro-get-style-property'",
        "'fizzy-ui-utils'",
        "'use strict'",
        "'transition'",
        "'transform'",
        "'perspective'",
        "'webkitTransitionEnd'",
        "'transitionend'",
        "'otransitionend'",
        "'transitionend'",
        "'transform'",
        "'transition'",
        "'transitionDuration'",
        "'transitionProperty'",
        "'absolute'",
        "'on'",
        "'left'",
        "'right'",
        "'top'",
        "'bottom'",
        "'%'",
        "'%'",
        "'paddingLeft'",
        "'paddingRight'",
        "'left'",
        "'right'",
        "'right'",
        "'left'",
        "''",
        "'paddingTop'",
        "'paddingBottom'",
        "'top'",
        "'bottom'",
        "'bottom'",
        "'top'",
        "''",
        "'layout'",
        "'%'",
        "'px'",
        "'%'",
        "'px'",
        "'translate3d('",
        "'px, '",
        "'px, 0)'",
        "'translate('",
        "'px, '",
        "'px)'",
        "'-'",
        "'opacity,'",
        "'transform'",
        "'_transition'",
        "'_nonTransition'",
        "'-webkit-transform'",
        "'transform'",
        "'-moz-transform'",
        "'transform'",
        "'-o-transform'",
        "'transform'",
        "''",
        "'transitionEnd'",
        "''",
        "''",
        "''",
        "''",
        "'remove'",
        "'transitionEnd'",
        "''",
        "'visibleStyle'",
        "'reveal'",
        "'opacity'",
        "''",
        "'hiddenStyle'",
        "'none'",
        "'hide'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'use strict'",
        "'function'",
        "'outlayer/outlayer'",
        "'eventie/eventie'",
        "'eventEmitter/EventEmitter'",
        "'get-size/get-size'",
        "'fizzy-ui-utils/utils'",
        "'./item'",
        "'object'",
        "'eventie'",
        "'wolfy87-eventemitter'",
        "'get-size'",
        "'fizzy-ui-utils'",
        "'./item'",
        "'use strict'",
        "'Bad element for '",
        "': '",
        "'outlayer'",
        "'relative'",
        "'0.4s'",
        "'scale(0.001)'",
        "'scale(1)'",
        "'string'",
        "'layout'",
        "'width'",
        "'height'",
        "'px'",
        "'Complete'",
        "'string'",
        "'on'",
        "'resize'",
        "'resize'",
        "'reveal'",
        "'hide'",
        "'remove'",
        "''",
        "''",
        "''",
        "'use strict'",
        "'function'",
        "'isotope/js/item'",
        "'outlayer/outlayer'",
        "'object'",
        "'outlayer'",
        "'use strict'",
        "'original-order'",
        "''",
        "'use strict'",
        "'function'",
        "'isotope/js/layout-mode'",
        "'get-size/get-size'",
        "'outlayer/outlayer'",
        "'object'",
        "'get-size'",
        "'outlayer'",
        "'use strict'",
        "'_resetLayout'",
        "'_getItemLayoutPosition'",
        "'_manageStamp'",
        "'_getContainerSize'",
        "'_getElementOffset'",
        "'needsResizeLayout'",
        "'column'",
        "'Width'",
        "'row'",
        "'Height'",
        "'outer'",
        "'inner'",
        "'use strict'",
        "'function'",
        "'masonry/masonry'",
        "'outlayer/outlayer'",
        "'get-size/get-size'",
        "'fizzy-ui-utils/utils'",
        "'object'",
        "'outlayer'",
        "'get-size'",
        "'fizzy-ui-utils'",
        "'masonry'",
        "'columnWidth'",
        "'outerWidth'",
        "'gutter'",
        "'outerWidth'",
        "'round'",
        "'floor'",
        "'round'",
        "'ceil'",
        "'use strict'",
        "'function'",
        "'isotope/js/layout-modes/masonry'",
        "'../layout-mode'",
        "'masonry/masonry'",
        "'object'",
        "'../layout-mode'",
        "'masonry-layout'",
        "'use strict'",
        "'masonry'",
        "'use strict'",
        "'function'",
        "'isotope/js/layout-modes/fit-rows'",
        "'../layout-mode'",
        "'object'",
        "'../layout-mode'",
        "'use strict'",
        "'fitRows'",
        "'gutter'",
        "'outerWidth'",
        "'use strict'",
        "'function'",
        "'isotope/js/layout-modes/vertical'",
        "'../layout-mode'",
        "'object'",
        "'../layout-mode'",
        "'use strict'",
        "'vertical'",
        "'use strict'",
        "'function'",
        "'outlayer/outlayer'",
        "'get-size/get-size'",
        "'matches-selector/matches-selector'",
        "'fizzy-ui-utils/utils'",
        "'isotope/js/item'",
        "'isotope/js/layout-mode'",
        "'isotope/js/layout-modes/masonry'",
        "'isotope/js/layout-modes/fit-rows'",
        "'isotope/js/layout-modes/vertical'",
        "'object'",
        "'outlayer'",
        "'get-size'",
        "'desandro-matches-selector'",
        "'fizzy-ui-utils'",
        "'./item'",
        "'./layout-mode'",
        "'./layout-modes/masonry'",
        "'./layout-modes/fit-rows'",
        "'./layout-modes/vertical'",
        "''",
        "'isotope'",
        "\"masonry\"",
        "'original-order'",
        "'arrangeComplete'",
        "'layoutComplete'",
        "'hideComplete'",
        "'revealComplete'",
        "'*'",
        "'function'",
        "'string'",
        "' '",
        "'parseInt'",
        "'parseFloat'",
        "'No layout mode: '",
        "'random'"
    ],
    "variables": [
        "logError",
        "args",
        "i",
        "len",
        "elem",
        "instance",
        "returnValue",
        "instance",
        "docElem",
        "bind",
        "unbind",
        "eventie",
        "proto",
        "exports",
        "originalGlobalValue",
        "i",
        "events",
        "response",
        "key",
        "flatListeners",
        "i",
        "listeners",
        "response",
        "listeners",
        "listenerIsWrapped",
        "key",
        "i",
        "listeners",
        "index",
        "key",
        "i",
        "value",
        "single",
        "multiple",
        "events",
        "key",
        "listeners",
        "listener",
        "i",
        "key",
        "response",
        "args",
        "prefixes",
        "docElemStyle",
        "prefixed",
        "i",
        "len",
        "num",
        "isValid",
        "logError",
        "measurements",
        "size",
        "i",
        "len",
        "measurement",
        "isSetup",
        "getStyle",
        "boxSizingProp",
        "isBoxSizeOuter",
        "getComputedStyle",
        "getStyleFn",
        "style",
        "div",
        "body",
        "style",
        "style",
        "size",
        "isBorderBox",
        "i",
        "len",
        "measurement",
        "value",
        "num",
        "paddingWidth",
        "paddingHeight",
        "marginWidth",
        "marginHeight",
        "borderWidth",
        "borderHeight",
        "isBorderBoxSizeOuter",
        "styleWidth",
        "styleHeight",
        "style",
        "left",
        "rs",
        "rsLeft",
        "queue",
        "isIE8NotReady",
        "i",
        "len",
        "fn",
        "matchesMethod",
        "prefixes",
        "i",
        "len",
        "prefix",
        "method",
        "fragment",
        "elems",
        "i",
        "len",
        "matchesSelector",
        "div",
        "supportsOrphans",
        "utils",
        "objToString",
        "ary",
        "i",
        "len",
        "i",
        "len",
        "index",
        "setTextProperty",
        "method",
        "ffElems",
        "i",
        "len",
        "elem",
        "childElems",
        "j",
        "jLen",
        "method",
        "timeoutName",
        "timeout",
        "args",
        "arguments",
        "_this",
        "dashedNamespace",
        "elems",
        "dataAttr",
        "i",
        "len",
        "elem",
        "attr",
        "options",
        "instance",
        "jQuery",
        "getComputedStyle",
        "getStyle",
        "transitionProperty",
        "transformProperty",
        "supportsCSS3",
        "is3d",
        "transitionEndEvent",
        "prefixableProperties",
        "vendorProperties",
        "cache",
        "i",
        "len",
        "prop",
        "supportedProp",
        "method",
        "elemStyle",
        "supportedProp",
        "style",
        "layoutOptions",
        "isOriginLeft",
        "isOriginTop",
        "xValue",
        "yValue",
        "layoutSize",
        "x",
        "y",
        "layoutSize",
        "layoutOptions",
        "style",
        "xPadding",
        "xProperty",
        "xResetProperty",
        "x",
        "yPadding",
        "yProperty",
        "yResetProperty",
        "y",
        "layoutOptions",
        "layoutOptions",
        "curX",
        "curY",
        "compareX",
        "compareY",
        "didNotMove",
        "transX",
        "transY",
        "transitionStyle",
        "layoutOptions",
        "_transition",
        "h",
        "transitionProps",
        "dashedVendorProperties",
        "_transition",
        "propertyName",
        "onTransitionEnd",
        "cleanStyle",
        "cleanTransitionStyle",
        "_this",
        "options",
        "onTransitionEnd",
        "transitionEndProperty",
        "optionStyle",
        "options",
        "onTransitionEnd",
        "transitionEndProperty",
        "jQuery",
        "noop",
        "GUID",
        "instances",
        "queryElement",
        "id",
        "itemElems",
        "Item",
        "items",
        "i",
        "len",
        "elem",
        "item",
        "elems",
        "i",
        "len",
        "isInstant",
        "option",
        "elem",
        "layoutItems",
        "i",
        "len",
        "item",
        "queue",
        "i",
        "len",
        "item",
        "position",
        "i",
        "len",
        "obj",
        "size",
        "elemSize",
        "_this",
        "count",
        "doneCount",
        "i",
        "len",
        "item",
        "emitArgs",
        "$event",
        "item",
        "item",
        "i",
        "len",
        "elem",
        "i",
        "len",
        "elem",
        "i",
        "len",
        "stamp",
        "boundingRect",
        "size",
        "boundingRect",
        "thisRect",
        "size",
        "offset",
        "method",
        "_this",
        "size",
        "hasSizes",
        "items",
        "items",
        "items",
        "previousItems",
        "len",
        "i",
        "item",
        "len",
        "i",
        "item",
        "items",
        "items",
        "i",
        "len",
        "item",
        "items",
        "i",
        "len",
        "elem",
        "item",
        "removeItems",
        "i",
        "len",
        "item",
        "style",
        "i",
        "len",
        "item",
        "id",
        "id",
        "getSortData",
        "sorters",
        "sorter",
        "_destroy",
        "facadeMethods",
        "i",
        "len",
        "methodName",
        "size",
        "hasSizes",
        "segmentName",
        "outerSize",
        "firstItemSize",
        "firstItem",
        "Masonry",
        "i",
        "firstItem",
        "firstItemElem",
        "columnWidth",
        "containerWidth",
        "cols",
        "excess",
        "mathMethod",
        "container",
        "size",
        "remainder",
        "mathMethod",
        "colSpan",
        "colGroup",
        "minimumY",
        "shortColIndex",
        "position",
        "setHeight",
        "setSpan",
        "i",
        "colGroup",
        "groupCount",
        "i",
        "groupColYs",
        "stampSize",
        "offset",
        "firstX",
        "lastX",
        "firstCol",
        "lastCol",
        "stampMaxY",
        "i",
        "firstCol",
        "size",
        "unusedCols",
        "i",
        "previousWidth",
        "MasonryMode",
        "_getElementOffset",
        "layout",
        "_getMeasurement",
        "measureColumns",
        "_manageStamp",
        "FitRows",
        "itemWidth",
        "containerWidth",
        "position",
        "Vertical",
        "x",
        "y",
        "jQuery",
        "trim",
        "docElem",
        "getText",
        "Isotope",
        "items",
        "i",
        "len",
        "item",
        "Mode",
        "initialOpts",
        "isInstant",
        "filtered",
        "_this",
        "isInstant",
        "isLayoutComplete",
        "isHideComplete",
        "isRevealComplete",
        "_this",
        "matches",
        "hiddenMatched",
        "visibleUnmatched",
        "test",
        "i",
        "len",
        "item",
        "isMatched",
        "items",
        "getSortData",
        "sorter",
        "len",
        "i",
        "item",
        "mungeSorter",
        "args",
        "query",
        "attrMatch",
        "attr",
        "getValue",
        "parser",
        "getValue",
        "child",
        "sortByOpt",
        "sortBys",
        "itemSorter",
        "i",
        "len",
        "sortBy",
        "a",
        "b",
        "isAscending",
        "direction",
        "layoutMode",
        "mode",
        "items",
        "filteredItems",
        "items",
        "filteredItems",
        "filtered",
        "items",
        "i",
        "item",
        "len",
        "filteredInsertItems",
        "_remove",
        "removeItems",
        "len",
        "i",
        "item",
        "i",
        "len",
        "item",
        "transitionDuration",
        "returnValue",
        "elems",
        "i",
        "len"
    ],
    "comments": [
        "!\n * Isotope PACKAGED v2.2.2\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * http://isotope.metafizzy.co\n * Copyright 2015 Metafizzy",
        "-------------------------- utils -------------------------- //",
        "-------------------------- definition -------------------------- //",
        "bail if no jQuery",
        "-------------------------- addOptionMethod -------------------------- //",
        "don't overwrite original option method",
        "option setter",
        "bail out if not an object",
        "-------------------------- plugin bridge -------------------------- //",
        "helper function for logging errors",
        "$.error breaks jQuery chaining",
        "add to jQuery fn namespace",
        "call plugin method when first argument is a string",
        "get arguments for method",
        "trigger method with arguments",
        "break look and return first value if provided",
        "return this if no return value",
        "apply options & init",
        "initialize new instance",
        "-------------------------- bridget -------------------------- //",
        "transport",
        "AMD",
        "get jquery from browser global",
        "!\n * eventie v1.0.6\n * event binding helper\n *   eventie.bind( elem, 'click', myFn )\n *   eventie.unbind( elem, 'click', myFn )\n * MIT license",
        "jshint browser: true, undef: true, unused: true",
        "global define: false, module: false",
        "add event.target",
        "can't delete window object properties",
        "----- module definition ----- //",
        "AMD",
        "CommonJS",
        "browser global",
        "!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve",
        "Shortcuts to improve speed and size",
        "Return a concatenated array of all matching events if",
        "the selector is a regular expression.",
        "Pass through to manipulateListeners",
        "Pass through to manipulateListeners",
        "If evt is an object then pass each of its properties to this method",
        "Pass the single listener straight through to the singular method",
        "Otherwise pass back to the multiple function",
        "So evt must be a string",
        "And listeners must be an array of listeners",
        "Loop over it and pass each one to the multiple method",
        "Remove different things depending on the state of evt",
        "Remove all listeners for the specified event",
        "Remove all events matching the regex.",
        "Remove all listeners in all events",
        "If the listener returns true then it shall be removed from the event",
        "The function is executed either with a basic call or an apply if there is an args array",
        "Expose the class either via AMD, CommonJS or the global object",
        "!\n * getStyleProperty v1.0.4\n * original by kangax\n * http://perfectionkills.com/feature-testing-css-properties/\n * MIT license",
        "jshint browser: true, strict: true, undef: true",
        "global define: false, exports: false, module: false",
        "test standard property first",
        "capitalize",
        "test vendor specific properties",
        "transport",
        "AMD",
        "CommonJS for Component",
        "browser global",
        "!\n * getSize v1.2.2\n * measure size of elements\n * MIT license",
        "jshint browser: true, strict: true, undef: true, unused: true",
        "global define: false, exports: false, require: false, module: false, console: false",
        "-------------------------- helpers -------------------------- //",
        "get a number from a string, not a percentage",
        "not a percent like '100%', and a number",
        "-------------------------- measurements -------------------------- //",
        "-------------------------- setup -------------------------- //",
        "setup once",
        "-------------------------- box sizing -------------------------- //",
        "-------------------------- getSize -------------------------- //",
        "use querySeletor if elem is string",
        "do not proceed on non-objects",
        "if hidden, everything is 0",
        "get all measurements",
        "any 'auto', 'medium' value will be 0",
        "overwrite width and height if we can get it from style",
        "add padding and border unless it's already including it",
        "add padding and border unless it's already including it",
        "IE8 returns percent values, not pixels",
        "taken from jQuery's curCSS",
        "IE8 and has percent value",
        "Remember the original values",
        "Put in the new values to get a computed value out",
        "Revert the changed values",
        "transport",
        "AMD for RequireJS",
        "CommonJS for Component",
        "browser global",
        "!\n * docReady v1.0.4\n * Cross browser DOMContentLoaded event emitter\n * MIT license",
        "jshint browser: true, strict: true, undef: true, unused: true",
        "global define: false, require: false, module: false",
        "collection of functions to be triggered on ready",
        "throw out non-functions",
        "ready now, hit it",
        "queue function when ready",
        "triggered on various doc ready events",
        "bail if already triggered or IE8 document is not ready just yet",
        "process queue",
        "trigger ready if page is ready",
        "listen for events",
        "transport",
        "AMD",
        "browser global",
        "jshint browser: true, strict: true, undef: true, unused: true",
        "global define: false, module: false",
        "check for the standard method name first",
        "check un-prefixed",
        "check vendor prefixes",
        "----- match ----- //",
        "----- appendToFragment ----- //",
        "not needed if already has parent",
        "----- query ----- //",
        "fall back to using QSA",
        "thx @jonathantneal https://gist.github.com/3062955",
        "append to fragment if no parent",
        "match elem with all selected elems of parent",
        "return true if match",
        "otherwise return false",
        "----- matchChild ----- //",
        "----- matchesSelector ----- //",
        "IE9 supports matchesSelector, but doesn't work on orphaned elems",
        "check for that",
        "transport",
        "AMD",
        "browser global",
        "jshint browser: true, undef: true, unused: true, strict: true",
        "global define: false, module: false, require: false",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "----- extend ----- //",
        "extends objects",
        "----- modulo ----- //",
        "----- isArray ----- //",
        "----- makeArray ----- //",
        "turn element or nodeList into an array",
        "use object if already an array",
        "convert nodeList to array",
        "array of single index",
        "----- indexOf ----- //",
        "index of helper cause IE8",
        "----- removeFrom ----- //",
        "----- isElement ----- //",
        "http://stackoverflow.com/a/384380/182183",
        "----- setText ----- //",
        "only check setTextProperty once",
        "----- getParent ----- //",
        "----- getQueryElement ----- //",
        "use element as selector string",
        "----- handleEvent ----- //",
        "enable .ontype to trigger from .addEventListener( elem, 'type' )",
        "----- filterFindElements ----- //",
        "make array of elems",
        "check that elem is an actual element",
        "filter & find items if we have a selector",
        "filter siblings",
        "find children",
        "concat childElems to filterFound array",
        "----- debounceMethod ----- //",
        "original method",
        "----- htmlInit ----- //",
        "http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/",
        "log error, do not initialize",
        "initialize",
        "make available via $().data('layoutname')",
        "-----  ----- //",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "----- helpers ----- //",
        "-------------------------- CSS3 support -------------------------- //",
        "properties that could have vendor prefix",
        "cache all vendor properties",
        "-------------------------- Item -------------------------- //",
        "parent layout class, i.e. Masonry, Isotope, or Packery",
        "inherit EventEmitter",
        "transition objects",
        "trigger specified handler for event type",
        "use vendor property if available",
        "measure position, and sets it",
        "convert percent to pixels",
        "clean up 'auto' or other non-integer values",
        "remove padding from measurement",
        "set settled position, apply padding",
        "x",
        "set in percentage or pixels",
        "reset other property",
        "y",
        "set in percentage or pixels",
        "reset other property",
        "get current x & y from top/left",
        "save end position",
        "if did not move and not transitioning, just go to layout",
        "flip cooridinates if origin on right or bottom",
        "non transition + transform support",
        "use transition and transforms if supported",
        "----- transition ----- //",
        "non transition, just trigger callback",
        "redirect to nonTransition if no transition duration",
        "keep track of onTransitionEnd callback by css property",
        "keep track of properties that are transitioning",
        "keep track of properties to clean up when transition is done",
        "set from styles",
        "force redraw. http://blog.alexmaccaw.com/css-transitions",
        "hack for JSHint to hush about unused var",
        "enable transition",
        "set styles that are transitioning",
        "dash before all cap letters, including first for",
        "WebkitTransform => -webkit-transform",
        "style",
        "HACK changing transitionProperty during a transition",
        "will cause transition to jump",
        "make `transition: foo, bar, baz` from style object",
        "HACK un-comment this when enableTransition can work",
        "while a transition is happening",
        "var transitionValues = [];",
        "for ( var prop in style ) {",
        "// dash-ify camelCased properties like WebkitTransition",
        "prop = vendorProperties[ prop ] || prop;",
        "transitionValues.push( toDashedAll( prop ) );",
        "}",
        "enable transition styles",
        "listen for transition end event",
        "----- events ----- //",
        "properties that I munge to make my life easier",
        "disregard bubbled events from children",
        "get property name of transitioned property, convert to prefix-free",
        "remove property that has completed transitioning",
        "check if any properties are still transitioning",
        "all properties have completed transitioning",
        "clean style",
        "clean up style",
        "trigger onTransitionEnd callback",
        "clean up transition styles",
        "remove transition",
        "----- show/hide/remove ----- //",
        "remove element from DOM",
        "remove display: none",
        "just remove element if no transition support or no transition",
        "start transition",
        "remove display: none",
        "check if still visible",
        "during transition, item may have been hidden",
        "use opacity",
        "get first property",
        "set flag",
        "remove display: none",
        "keep hidden stuff hidden",
        "check if still hidden",
        "during transition, item may have been un-hidden",
        "!\n * Outlayer v1.4.2\n * the brains and guts of a layout library\n * MIT license",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "----- vars ----- //",
        "-------------------------- Outlayer -------------------------- //",
        "globally unique identifiers",
        "internal store of all Outlayer intances",
        "add jQuery",
        "options",
        "add id for Outlayer.getFromElement",
        "expando",
        "associate via id",
        "kick it off",
        "settings are for internal use only",
        "default options",
        "item options",
        "inherit EventEmitter",
        "get items from children",
        "elements that affect layout, but are not laid out",
        "set container style",
        "bind resize method",
        "goes through all children again and gets bricks in proper order",
        "collection of item elements",
        "create new Outlayer Items for collection",
        "----- init & layout ----- //",
        "don't animate first layout",
        "flag for initalized",
        "_init is alias for layout",
        "default to 0",
        "use option as an element",
        "use size of element, if element",
        "no items, emit event with empty array",
        "get x/y object from method",
        "enqueue",
        "item",
        "if not transition, just set CSS",
        "add padding and border width if border box",
        "bind callback",
        "add original event to arguments",
        "set this.$element",
        "create jQuery event",
        "just trigger with type if no event available",
        "-------------------------- ignore & stamps -------------------------- //",
        "ignore",
        "filter out removed stamp elements",
        "if string, use argument as selector string",
        "update boundingLeft / Top",
        "get bounding rect for container element",
        "-------------------------- resize -------------------------- //",
        "enable event handlers for listeners",
        "i.e. resize -> onresize",
        "bind just one listener",
        "original debounce by John Hann",
        "http://unscriptable.com/index.php/2009/03/20/debouncing-javascript-methods/",
        "this fires every resize",
        "debounced, layout on resize",
        "don't trigger if size did not change",
        "or if resize was unbound. See #9",
        "check that this.size and size are there",
        "IE8 triggers resize on body size change, so they might not be",
        "-------------------------- methods -------------------------- //",
        "add items to collection",
        "layout and reveal just the new items",
        "add items to beginning of collection",
        "start new layout",
        "layout new stuff without transition",
        "layout previous items",
        "loop through items to get the one that matches",
        "return item",
        "bail if no items to remove",
        "remove item from collection",
        "----- destroy ----- //",
        "remove and disable Outlayer instance",
        "clean up dynamic styles",
        "destroy items",
        "remove reference to instance by id",
        "remove data for jQuery",
        "-------------------------- data -------------------------- //",
        "-------------------------- create Outlayer class -------------------------- //",
        "sub-class Outlayer",
        "inherit Outlayer prototype, use Object.create if there",
        "set contructor, used for namespace and Item",
        "apply new options",
        "keep prototype.settings for backwards compatibility (Packery v1.2.0)",
        "sub-class Item",
        "-------------------------- declarative -------------------------- //",
        "-------------------------- jQuery bridge -------------------------- //",
        "make into jQuery plugin",
        "----- fin ----- //",
        "back in global",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "-------------------------- Item -------------------------- //",
        "sub-class Outlayer Item",
        "assign id, used for original-order sorting",
        "default sorters",
        "for backward compatibility",
        "go thru getSortData obj and apply the sorters",
        "call super",
        "reset display, #741",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "layout mode class",
        "link properties",
        "-----  ----- //",
        "for horizontal layout modes, check vertical size",
        "don't trigger if size did not change",
        "check that this.size and size are there",
        "IE8 triggers resize on body size change, so they might not be",
        "----- measurements ----- //",
        "columnWidth / outerWidth // rowHeight / outerHeight",
        "got rowHeight or columnWidth, we can chill",
        "fall back to item of first element",
        "or size of container",
        "----- methods that should reference isotope ----- //",
        "-------------------------- create -------------------------- //",
        "default options",
        "register in Isotope",
        "!\n * Masonry v3.3.1\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "-------------------------- masonryDefinition -------------------------- //",
        "create an Outlayer layout class",
        "reset column Y",
        "if columnWidth is 0, default to outerWidth of first item",
        "columnWidth fall back to item of first element",
        "if first elem has no width, default to size of container",
        "calculate columns",
        "fix rounding errors, typically with gutters",
        "if overshoot is less than a pixel, round up, otherwise floor it",
        "container is parent if fit width",
        "check that this.size and size are there",
        "IE8 triggers resize on body size change, so they might not be",
        "how many columns does this brick span",
        "round if off by 1 pixel, otherwise use ceil",
        "get the minimum Y value from the columns",
        "position the brick",
        "apply setHeight to necessary columns",
        "if brick spans only one column, use all the column Ys",
        "how many different places could this brick fit horizontally",
        "for each group potential horizontal position",
        "make an array of colY values for that one group",
        "and get the max value of the array",
        "get the columns that this stamp affects",
        "lastCol should not go over if multiple of columnWidth #425",
        "set colYs to bottom of the stamp",
        "count unused columns",
        "fit container to columns that have been used",
        "!\n * Masonry layout mode\n * sub-classes Masonry\n * http://masonry.desandro.com",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "-------------------------- helpers -------------------------- //",
        "extend objects",
        "-------------------------- masonryDefinition -------------------------- //",
        "create an Outlayer layout class",
        "save on to these methods",
        "sub-class Masonry",
        "set back, as it was overwritten by Masonry",
        "set items, used if measuring first item",
        "HACK copy over isOriginLeft/Top options",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "if this element cannot fit in the current row",
        "universal module definition",
        "AMD",
        "CommonJS",
        "browser global",
        "!\n * Isotope v2.2.2\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * http://isotope.metafizzy.co\n * Copyright 2015 Metafizzy",
        "universal module definition",
        "AMD",
        "include default layout modes",
        "CommonJS",
        "include default layout modes",
        "browser global",
        "-------------------------- vars -------------------------- //",
        "-------------------------- helpers -------------------------- //",
        "-------------------------- isotopeDefinition -------------------------- //",
        "create an Outlayer layout class",
        "functions that sort items",
        "call super",
        "create layout modes",
        "start filteredItems with all items",
        "keep of track of sortBys",
        "create from registered layout modes",
        "reset item ID counter",
        "call super",
        "assign ID for original-order",
        "-------------------------- layout -------------------------- //",
        "set mode options",
        "HACK extend initial options, back-fill in default options",
        "init layout mode instance",
        "if first time doing layout, do all magic",
        "private method to be used in layout() & magic()",
        "don't animate first layout",
        "layout flow",
        "flag for initalized",
        "filter + sort + layout",
        "set any options pass",
        "filter, sort, and layout",
        "filter",
        "alias to _init for main plugin method",
        "HACK",
        "Don't animate/transition first layout",
        "Or don't animate/transition other layouts",
        "listen for layoutComplete, hideComplete and revealComplete",
        "to trigger arrangeComplete",
        "listen for 3 events to trigger arrangeComplete",
        "-------------------------- filter -------------------------- //",
        "test each item",
        "add item to either matched or unmatched group",
        "item.isFilterMatched = isMatched;",
        "add to matches if its a match",
        "add to additional group if item needs to be hidden or revealed",
        "return collections of items to be manipulated",
        "get a jQuery, function, or a matchesSelector test given the filter",
        "use jQuery",
        "use filter as function",
        "default, use filter as selector string",
        "-------------------------- sorting -------------------------- //",
        "get items",
        "update all items if no elems provided",
        "do not update if no items",
        "----- munge sorter ----- //",
        "encapsulate this, as we just need mungeSorter",
        "other functions in here are just for munging",
        "add a magic layer to sorters for convienent shorthands",
        "`.foo-bar` will use the text of .foo-bar querySelector",
        "`[foo-bar]` will use attribute",
        "you can also add parser",
        "`.foo-bar parseInt` will parse that as a number",
        "if not a string, return function or whatever it is",
        "parse the sorter string",
        "check if query looks like [an-attribute]",
        "use second argument as a parser",
        "parse the value, if there was a parser",
        "otherwise just return value",
        "get an attribute getter, or get text of the querySelector",
        "if query looks like [foo-bar], get attribute",
        "otherwise, assume its a querySelector, and get its text",
        "parsers used in getSortData shortcut strings",
        "----- sort method ----- //",
        "sort filteredItem order",
        "concat all sortBy and sortHistory",
        "sort magic",
        "keep track of sortBy History",
        "add to front, oldest goes in last",
        "returns a function used for sorting",
        "cycle through all sortKeys",
        "if sortAsc is an object, use the value given the sortBy key",
        "-------------------------- methods -------------------------- //",
        "get layout mode",
        "TODO console.error",
        "HACK sync mode's options",
        "any options set after init for layout mode need to be synced",
        "trigger original reset layout",
        "-------------------------- adding & removing -------------------------- //",
        "HEADS UP overwrites default Outlayer appended",
        "filter, layout, reveal new items",
        "add to filteredItems",
        "HEADS UP overwrites default Outlayer prepended",
        "start new layout",
        "filter, layout, reveal new items",
        "layout previous items",
        "add to items and filteredItems",
        "reveal all new items",
        "layout new items, no transition",
        "append item elements",
        "filter new stuff",
        "set flag",
        "reset flag",
        "do regular thing",
        "bail if no items to remove",
        "remove elems from filteredItems",
        "remove item from collection",
        "update random sortData",
        "save transitionDuration before disabling",
        "disable transition",
        "do it",
        "re-enable transition for reveal",
        "----- helper methods ----- //",
        "-----  ----- //"
    ],
    "docstrings": [
        "* Bridget makes jQuery widgets\n * v1.1.0\n * MIT license",
        "* adds option method -> $().plugin('option', {...})\n * @param {Function} PluginClass - constructor class",
        "* jQuery plugin bridge, access methods like $elem.plugin('method')\n * @param {String} namespace - plugin name\n * @param {Function} PluginClass - constructor class",
        "* converts a Prototypical class into a proper jQuery plugin\n *   the class must have a ._init method\n * @param {String} namespace - plugin name, used in $().pluginName\n * @param {Function} PluginClass - constructor class",
        "* Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.",
        "* Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private",
        "* Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private",
        "* Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.",
        "* Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.",
        "* Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.",
        "* Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Alias of addListener",
        "* Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Alias of addOnceListener.",
        "* Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Alias of removeListener",
        "* Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Alias of removeEvent.\n     *\n     * Added to mirror the node API.",
        "* Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Alias of emitEvent",
        "* Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.",
        "* Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private",
        "* Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private",
        "* Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.",
        "* setup vars and functions\n * do it on initial getSize(), rather than on script load\n * For Firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=548397",
        "* WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox measures the inner-width",
        "* matchesSelector v1.0.3\n * matchesSelector( element, '.selector' )\n * MIT license",
        "* Fizzy UI utils v1.0.1\n * MIT license",
        "* allow user to initialize classes via .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-option attribute",
        "* Outlayer Item",
        "* apply CSS styles to element\n * @param {Object} style",
        "* @param {Object} style - CSS\n * @param {Function} onTransitionEnd",
        "* proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback",
        "* removes style property from element\n * @param {Object} style\n*",
        "* get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}",
        "* @param {Element, String} element\n * @param {Object} options\n * @constructor",
        "* set options\n * @param {Object} opts",
        "* turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items",
        "* get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements",
        "* getter method for getting item elements\n * @returns {Array} elems - collection of item elements",
        "* lays out all items",
        "* logic before any new layout",
        "* get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private",
        "* layout a collection of item elements\n * @api public",
        "* get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items",
        "* layout items\n * @param {Array} items\n * @param {Boolean} isInstant",
        "* get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position",
        "* iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue",
        "* Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions",
        "* Any logic you want to do after each layout,\n * i.e. size the container",
        "* Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height",
        "* @param {Number} measure - size of width or height\n * @param {Boolean} isWidth",
        "* emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items",
        "* emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments",
        "* keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem",
        "* return item to layout collection\n * @param {Element} elem",
        "* adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems",
        "* removes elements to stamps\n * @param {NodeList, Array, or Element} elems",
        "* finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems",
        "* @param {Element} stamp\n*",
        "* get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom",
        "* Bind layout to window resizing",
        "* Unbind layout to window resizing",
        "* check if layout is needed post layout\n * @returns Boolean",
        "* add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n*",
        "* Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems",
        "* Layout prepended elements\n * @param {Array or NodeList or Element} elems",
        "* reveal a collection of items\n * @param {Array of Outlayer.Items} items",
        "* hide a collection of items\n * @param {Array of Outlayer.Items} items",
        "* reveal item elements\n * @param {Array}, {Element}, {NodeList} items",
        "* hide item elements\n * @param {Array}, {Element}, {NodeList} items",
        "* get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item",
        "* get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items",
        "* remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems",
        "* get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}",
        "* create a layout class\n * @param {String} namespace",
        "* Isotope Item\n*",
        "* Isotope LayoutMode",
        "* some methods should just defer to default Outlayer method\n   * and reference the Isotope instance as `this`\n  *",
        "* get columnWidth or rowHeight\n   * segment: 'column' or 'row'\n   * size 'Width' or 'Height'\n  *",
        "* @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup",
        "* fitRows layout mode",
        "* vertical layout mode",
        "* @params {Array} elems\n   * @public",
        "* @params {Array} items - of Isotope.Items\n   * @private",
        "* Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems",
        "* trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @returns ret\n   * @private",
        "* getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements"
    ],
    "functions": [
        "noop",
        "defineBridget",
        "addOptionMethod",
        "bridge",
        "getIEEvent",
        "EventEmitter",
        "indexOfListener",
        "alias",
        "getStyleProperty",
        "getStyleSize",
        "noop",
        "getZeroSize",
        "defineGetSize",
        "setup",
        "getSize",
        "mungeNonPixel",
        "docReady",
        "onReady",
        "trigger",
        "defineDocReady",
        "match",
        "checkParent",
        "query",
        "matchChild",
        "setText",
        "isEmptyObj",
        "Item",
        "toDashedAll",
        "Outlayer",
        "onComplete",
        "tick",
        "delayed",
        "Layout",
        "Item",
        "LayoutMode",
        "getOutlayerMethod",
        "Mode",
        "extend",
        "hideReveal",
        "arrangeParallelCallback",
        "mungeSorter",
        "getValueGetter",
        "getItemSorter"
    ],
    "classes": []
}