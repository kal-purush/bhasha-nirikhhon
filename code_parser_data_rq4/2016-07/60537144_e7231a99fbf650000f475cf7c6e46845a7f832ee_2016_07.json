{
    "identifiers": [
        "update",
        "findIndex",
        "ITodoItem",
        "IDataProvider",
        "value",
        "value",
        "value",
        "value",
        "title",
        "resolve",
        "title",
        "setTimeout",
        "newItem",
        "resolve",
        "ADD_ITEMS_DELAY",
        "delItem",
        "resolve",
        "item",
        "item",
        "delItem",
        "resolve",
        "item",
        "update",
        "item",
        "item",
        "resolve",
        "reject",
        "findIndex",
        "item",
        "item",
        "newItem",
        "index",
        "index",
        "newItem",
        "resolve",
        "reject",
        "listener",
        "listener",
        "listener",
        "listener",
        "listenerIdx",
        "listenerIdx",
        "listener",
        "listener",
        "c",
        "c",
        "r",
        "r",
        "v"
    ],
    "literals": [
        "'react-addons-update'",
        "'office-ui-fabric-react/lib/utilities/array'",
        "'./types/index'",
        "'61b59681-2a82-4a51-b221-8c35e333ae89'",
        "'Finish Sample Todo web part before dev kitchen'",
        "'94a844ae-0c6a-4820-8042-dbc386bdf930'",
        "'Finish All the work in Todo web part before dev kitchen'",
        "'5fa55618-90f9-4b5f-b12d-60c9fb1fc7f0'",
        "'SharePoint API investigation for Todo web part'",
        "'2ae54c74-1395-4a49-8dd2-4857efdd0e5e'",
        "'Bug fixing of Pivot Control'",
        "string",
        "Item to update doesn't exist.",
        "string",
        "'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'",
        "'x'"
    ],
    "variables": [
        "ADD_ITEMS_DELAY",
        "newItem",
        "newItem",
        "index",
        "listenerIdx",
        "r",
        "v"
    ],
    "comments": [
        "Create a new Item in which the PercentComplete value has been changed."
    ],
    "docstrings": [
        "* DataProvider the class used to maintain the client side data.\n *\n * It interact with data provider to sync data items with sharepoint list.\n * It also maintain the loading state to tell React Component once the action is\n * started of finished.",
        "* The counter used to identify the latest server call.\n   * If the current call is not the latest one, we don't want to update the list\n   * to mess up with the out of date data with data in this store.",
        "* The items store in the local. It only contains the data recently fetched from server.",
        "* Whether there is unfinished server request currently.",
        "* Create a new item and add it to the list through data provider.",
        "* Delete a item from the list through data provider.",
        "* Toggle the complete state of an item by.\n   *\n   * Will call updateItem function to update complete state of this item.",
        "* Add listener to the provider.\n   *\n   * Once the store has a change of state and emit that change, the listeners will be called.",
        "* Remove the registered listener.\n   *\n   * You must remove the listener registered by addListener method when you are not going to use it anymore.",
        "* Emit the changes in the store to all listeners."
    ],
    "functions": [
        "items",
        "items",
        "isLoading",
        "isLoading",
        "createItem",
        "deleteItem",
        "toggleComplete",
        "addListener",
        "removeListener",
        "_emitChange",
        "_generateGuid"
    ],
    "classes": [
        "DataProvider"
    ]
}