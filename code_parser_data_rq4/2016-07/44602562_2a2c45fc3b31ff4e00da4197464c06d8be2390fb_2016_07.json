{
    "identifiers": [
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "Struct",
        "Struct",
        "classmethod",
        "cls",
        "f",
        "f",
        "read",
        "cls",
        "sfmt",
        "size",
        "cls",
        "sfmt",
        "unpack",
        "d",
        "f",
        "read",
        "slen",
        "f",
        "read",
        "assert_eq",
        "key",
        "s",
        "filename",
        "filename",
        "endswith",
        "open",
        "filename",
        "f",
        "read",
        "header",
        "size",
        "header",
        "unpack_from",
        "data",
        "assert_eq",
        "h1",
        "assert_eq",
        "h2",
        "assert_eq",
        "h3",
        "unpack_key",
        "f",
        "key",
        "value",
        "key",
        "value",
        "key",
        "value",
        "key",
        "date",
        "value",
        "ncdname",
        "part",
        "date",
        "AssertionError",
        "e",
        "e",
        "format",
        "__class__",
        "ncdname",
        "part",
        "date",
        "filename",
        "filename",
        "endswith",
        "open",
        "filename",
        "read",
        "len",
        "HEADER",
        "hdr",
        "HEADER",
        "sys",
        "XilinxBitFile",
        "sys",
        "argv"
    ],
    "literals": [
        "\"%s (%r) != %s (%r)\"",
        "\">\"",
        "\"H\"",
        "\"9s\"",
        "\"2s\"",
        "\">ch\"",
        "'\\x00'",
        "'.bit'",
        "\"Filename should end in .bit\"",
        "'rb'",
        "b'\\x0f\\xf0\\x0f\\xf0\\x0f\\xf0\\x0f\\xf0\\x00'",
        "b'\\x00\\x01'",
        "'a'",
        "'b'",
        "'c'",
        "'d'",
        "\" \"",
        "\"{}(ncdname={!r}, part={!r}, date={!r})\"",
        "b'\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xaa\\x99Uf0\\xa1\\x00\\x07'",
        "'.bin'",
        "\"Filename should end in .bin\"",
        "'rb'",
        "\"File doesn't start with required header.\"",
        "\"__main__\""
    ],
    "variables": [
        "header",
        "sfmt",
        "d",
        "key",
        "slen",
        "s",
        "f",
        "data",
        "h1",
        "h2",
        "h3",
        "ncdname",
        "part",
        "date",
        "key",
        "value",
        "ncdname",
        "part",
        "date",
        "HEADER",
        "hdr"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "vim: set ts=4 sw=4 et sts=4 ai:",
        "big endian",
        "h1, beshort == 0x0009",
        "0f f0 0f f0 0f f0 0f f0 00",
        "h4, null byte",
        "Read the header",
        "Part type",
        "Build date",
        "Build time"
    ],
    "docstrings": [
        "\"\"\"\nFunctions for examining different file types.\n\"\"\"",
        "\"\"\"\n    This page describes the format\n    http://www.fpga-faq.com/FAQ_Pages/0026_Tell_me_about_bit_files.htm\n\n    Field 1\n    2 bytes          length 0x0009           (big endian)\n    9 bytes          0f f0 0f f0 0f f0 0f f0 00\n    2 bytes          00 01\n\n    Field 3\n    1 byte           key 0x61                (The letter \"a\")\n    2 bytes          length 0x000a           (value depends on file name length)\n    10 bytes         string design name \"xform.ncd\" (including a trailing 0x00)\n\n    Field 4\n    1 byte           key 0x62                (The letter \"b\")\n    2 bytes          length 0x000c           (value depends on part name length)\n    12 bytes         string part name \"v1000efg860\" (including a trailing 0x00)\n\n    Field 4\n    1 byte           key 0x63                (The letter \"c\")\n    2 bytes          length 0x000b\n    11 bytes         string date \"2001/08/10\"  (including a trailing 0x00)\n\n    Field 5\n    1 byte           key 0x64                (The letter \"d\")\n    2 bytes          length 0x0009\n    9 bytes          string time \"06:55:04\"    (including a trailing 0x00)\n\n    Field 6\n    1 byte           key 0x65                 (The letter \"e\")\n    4 bytes          length 0x000c9090        (value depends on device type,\n                                               and maybe design details)\n    8233440 bytes    raw bit stream starting with 0xffffffff aa995566 sync\n                     word documented below.\n    \"\"\""
    ],
    "functions": [
        "assert_eq",
        "unpack_key",
        "__str__"
    ],
    "classes": [
        "XilinxBitFile",
        "XilinxBinFile"
    ]
}