{
    "identifiers": [
        "GladNet",
        "Engine",
        "Common",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "GladNet",
        "Common",
        "GladNet",
        "Message",
        "GladNet",
        "Payload",
        "Diagnostics",
        "CodeAnalysis",
        "GladNet",
        "Serializer",
        "Easyception",
        "Common",
        "Logging",
        "Collections",
        "GladNet",
        "PhotonServer",
        "INetworkMessageRouteBackService",
        "IClassLogger",
        "IAUIDService",
        "INetPeer",
        "IAUIDService",
        "INetPeer",
        "peerCollection",
        "ILog",
        "logger",
        "Throw",
        "ArgumentNullException",
        "If",
        "IsNull",
        "peerCollection",
        "Now",
        "nameof",
        "peerCollection",
        "Throw",
        "ArgumentNullException",
        "If",
        "IsNull",
        "logger",
        "Now",
        "nameof",
        "logger",
        "peerAUIDMapCollection",
        "peerCollection",
        "Logger",
        "logger",
        "IResponseMessage",
        "message",
        "IMessageParameters",
        "parameters",
        "RouteMessage",
        "message",
        "parameters",
        "TMessageType",
        "TMessageType",
        "message",
        "IMessageParameters",
        "parameters",
        "TMessageType",
        "INetworkMessage",
        "IRoutableMessage",
        "IOperationTypeMappable",
        "RouteMessage",
        "message",
        "parameters",
        "DeliveryMethod",
        "parameters",
        "Encrypted",
        "parameters",
        "Channel",
        "TMessageType",
        "TMessageType",
        "message",
        "DeliveryMethod",
        "deliveryMethod",
        "encrypt",
        "channel",
        "TMessageType",
        "INetworkMessage",
        "IRoutableMessage",
        "IOperationTypeMappable",
        "message",
        "isMessageRoutable",
        "Logger",
        "nameof",
        "TMessageType",
        "SendResult",
        "Invalid",
        "message",
        "isRoutingBack",
        "message",
        "Pop",
        "AUID",
        "HasValue",
        "Logger",
        "nameof",
        "TMessageType",
        "SendResult",
        "Invalid",
        "TryGetValidNetPeer",
        "AUID",
        "Value",
        "peer",
        "SendResult",
        "Invalid",
        "peer",
        "NetworkSendService",
        "TryRouteMessage",
        "message",
        "deliveryMethod",
        "encrypt",
        "channel",
        "IRequestMessage",
        "message",
        "IMessageParameters",
        "parameters",
        "RouteMessage",
        "message",
        "parameters",
        "SuppressMessage",
        "PacketPayload",
        "payload",
        "IRoutableMessage",
        "routingDetails",
        "DeliveryMethod",
        "deliveryMethod",
        "encrypt",
        "channel",
        "routingDetails",
        "isMessageRoutable",
        "Logger",
        "nameof",
        "IRoutableMessage",
        "RequestMessage",
        "payload",
        "routingDetails",
        "ExportRoutingDataTo",
        "message",
        "RouteMessage",
        "message",
        "deliveryMethod",
        "encrypt",
        "channel",
        "SuppressMessage",
        "PacketPayload",
        "payload",
        "IRoutableMessage",
        "routingDetails",
        "DeliveryMethod",
        "deliveryMethod",
        "encrypt",
        "channel",
        "routingDetails",
        "isMessageRoutable",
        "Logger",
        "nameof",
        "IRoutableMessage",
        "ResponseMessage",
        "payload",
        "routingDetails",
        "ExportRoutingDataTo",
        "message",
        "RouteMessage",
        "message",
        "deliveryMethod",
        "encrypt",
        "channel",
        "TPacketType",
        "TPacketType",
        "payload",
        "IRoutableMessage",
        "routingDetails",
        "TPacketType",
        "PacketPayload",
        "IStaticPayloadParameters",
        "RouteRequest",
        "payload",
        "routingDetails",
        "payload",
        "DeliveryMethod",
        "payload",
        "Encrypted",
        "payload",
        "Channel",
        "TPacketType",
        "TPacketType",
        "payload",
        "IRoutableMessage",
        "routingDetails",
        "TPacketType",
        "PacketPayload",
        "IStaticPayloadParameters",
        "RouteResponse",
        "payload",
        "routingDetails",
        "payload",
        "DeliveryMethod",
        "payload",
        "Encrypted",
        "payload",
        "Channel",
        "AUID",
        "peerAUIDMapCollection",
        "syncObj",
        "EnterReadLock",
        "peerAUIDMapCollection",
        "ContainsKey",
        "AUID",
        "peerAUIDMapCollection",
        "AUID",
        "peerAUIDMapCollection",
        "syncObj",
        "ExitReadLock"
    ],
    "literals": [
        "\"Microsoft.Design\"",
        "\"CA1026:DefaultParametersShouldNotBeUsed\"",
        "\"Microsoft.Design\"",
        "\"CA1026:DefaultParametersShouldNotBeUsed\""
    ],
    "variables": [
        "peerAUIDMapCollection",
        "ILog",
        "Logger",
        "AUID",
        "INetPeer",
        "peer",
        "RequestMessage",
        "message",
        "ResponseMessage",
        "message"
    ],
    "comments": [
        "PhotonServer implementation of the GladNet2 <see cref=\"INetworkMessageRouteBackService\"/>.",
        "Refer to specification on GladNet2 routing for more information.",
        "</summary>",
        "Services that can map routing IDs, which are AUIDs, to <see cref=\"INetPeer\"/>s.",
        "</summary>",
        "Routes a <see cref=\"IResponseMessage\"/> using the provided <see cref=\"IMessageParameters\"/>.",
        "</summary>",
        "<param name=\"message\"></param>",
        "<param name=\"parameters\"></param>",
        "<returns></returns>",
        "enable the message for internal routing",
        "Pop the ID we should route to.",
        "This is ok because it just means they disconnected before we could route back.",
        "Routes a <see cref=\"IRequestMessage\"/> using the provided <see cref=\"IMessageParameters\"/>.",
        "</summary>",
        "<param name=\"message\"></param>",
        "<param name=\"parameters\"></param>",
        "<returns></returns>",
        "Routes a request payload using the provided <paramref name=\"routingDetails\"/>",
        "provided.",
        "</summary>",
        "<param name=\"payload\">Payload instance to be sent in the message.</param>",
        "<param name=\"deliveryMethod\">The deseried <see cref=\"DeliveryMethod\"/> of the message.</param>",
        "<param name=\"encrypt\">Indicates if the message should be encrypted.</param>",
        "<param name=\"channel\">Indicates the channel for this message to be sent over.</param>",
        "<returns>Indication of the message send state.</returns>",
        "We need to actually create the request to be routed.",
        "We have to transfer routing information from the routing details to the request message we created",
        "Routes a response payload using the provided <paramref name=\"routingDetails\"/>",
        "provided.",
        "</summary>",
        "<param name=\"payload\">Payload instance to be sent in the message.</param>",
        "<param name=\"deliveryMethod\">The deseried <see cref=\"DeliveryMethod\"/> of the message.</param>",
        "<param name=\"encrypt\">Indicates if the message should be encrypted.</param>",
        "<param name=\"channel\">Indicates the channel for this message to be sent over.</param>",
        "<returns>Indication of the message send state.</returns>",
        "We need to actually create the request to be routed.",
        "We have to transfer routing information from the routing details to the request message we created",
        "Routes a request payload using the provided <paramref name=\"routingDetails\"/> provided",
        "Additionally this message/payloadtype is known to have static send parameters and those will be used in transit.",
        "</summary>",
        "<typeparam name=\"TPacketType\">Type of the packet payload.</typeparam>",
        "<param name=\"payload\">Payload instance to be sent in the message that contains static message parameters.</param>",
        "<returns>Indication of the message send state.</returns>",
        "Routes a response payload using the provided <paramref name=\"routingDetails\"/> provided",
        "Additionally this message/payloadtype is known to have static send parameters and those will be used in transit.",
        "</summary>",
        "<typeparam name=\"TPacketType\">Type of the packet payload.</typeparam>",
        "<param name=\"payload\">Payload instance to be sent in the message that contains static message parameters.</param>",
        "<returns>Indication of the message send state.</returns>",
        "Attempts to retrive the <see cref=\"INetPeer\"/> instances from the <see cref=\"IAUIDService{TAUIDMapType}\"/>.",
        "</summary>",
        "<param name=\"AUID\">AUID value.</param>",
        "<returns>The peer with the AUID or null if not found.</returns>",
        "We must lock on the sync obj",
        "If the service has the AUID we should grab the peer",
        "If it's not in the collection we'll reach this point"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "PhotonRouteBackService",
        "SendResult",
        "RouteResponse",
        "SendResult",
        "RouteMessage",
        "SendResult",
        "RouteMessage",
        "SendResult",
        "RouteRequest",
        "SendResult",
        "RouteRequest",
        "SendResult",
        "RouteResponse",
        "SendResult",
        "RouteRequest",
        "SendResult",
        "RouteResponse",
        "INetPeer",
        "TryGetValidNetPeer"
    ],
    "classes": [
        "PhotonRouteBackService"
    ]
}