{
    "identifiers": [
        "click",
        "scipy",
        "stats",
        "ss",
        "scipy",
        "scipy",
        "nanmedian",
        "pysurvey",
        "ps",
        "biom",
        "pandas",
        "pd",
        "table",
        "biom",
        "load_table",
        "table",
        "table",
        "matrix_data",
        "toarray",
        "T",
        "pd",
        "DataFrame",
        "mat",
        "columns",
        "table",
        "ids",
        "axis",
        "index",
        "table",
        "ids",
        "fp",
        "sparcc_z",
        "threshold",
        "fp",
        "write",
        "i",
        "idx",
        "row",
        "sparcc_z",
        "iterrows",
        "col",
        "v",
        "sparcc_z",
        "columns",
        "i",
        "row",
        "i",
        "abs",
        "v",
        "threshold",
        "fp",
        "write",
        "idx",
        "col",
        "v",
        "v",
        "fp",
        "table",
        "biom",
        "load_table",
        "table",
        "next",
        "table",
        "iter",
        "axis",
        "header",
        "extend",
        "sorted",
        "tmp_md",
        "keys",
        "fp",
        "write",
        "join",
        "header",
        "fp",
        "write",
        "values",
        "id_",
        "md",
        "table",
        "iter",
        "axis",
        "id_",
        "values",
        "sum",
        "key",
        "sorted",
        "md",
        "keys",
        "md",
        "key",
        "isinstance",
        "md_value",
        "line",
        "append",
        "join",
        "v",
        "v",
        "md_value",
        "line",
        "append",
        "md_value",
        "fp",
        "write",
        "join",
        "line",
        "fp",
        "write",
        "click",
        "group",
        "sparcc",
        "command",
        "click",
        "option",
        "required",
        "click",
        "Path",
        "exists",
        "dir_okay",
        "help",
        "click",
        "option",
        "required",
        "click",
        "Path",
        "exists",
        "help",
        "table",
        "output",
        "_biom_to_pysurvey_mat",
        "table",
        "ps",
        "basis_corr",
        "mat",
        "sparcc_z",
        "to_csv",
        "output",
        "sep",
        "index_label",
        "sparcc",
        "command",
        "click",
        "option",
        "required",
        "click",
        "Path",
        "exists",
        "dir_okay",
        "help",
        "click",
        "option",
        "required",
        "help",
        "click",
        "option",
        "required",
        "help",
        "click",
        "option",
        "required",
        "click",
        "Path",
        "exists",
        "help",
        "correlations",
        "output",
        "threshold",
        "table",
        "pd",
        "read_csv",
        "correlations",
        "sep",
        "index_col",
        "open",
        "output",
        "fp",
        "_format_edges",
        "fp",
        "sparcc_z",
        "threshold",
        "open",
        "output",
        "fp",
        "_format_nodes",
        "fp",
        "table",
        "sparcc"
    ],
    "literals": [
        "'observation'",
        "'Feature1\\tFeature2\\tRho\\tRho_pos_neg\\n'",
        "'%s\\t%s\\t%f\\t%d\\n'",
        "'Feature1'",
        "'Fsum'",
        "'observation'",
        "\"\\t\"",
        "'\\n'",
        "'observation'",
        "\" \"",
        "'\\t'",
        "'\\n'",
        "'--table'",
        "'The input BIOM table'",
        "'--output'",
        "'Filepath for the resulting correlation matrix'",
        "'\\t'",
        "'#OTU ID'",
        "'--correlations'",
        "'The input correlation matrix'",
        "'--output'",
        "'Filename base for the resulting edge and node files'",
        "'--threshold'",
        "'The correlation threshold (applied to the absolute value)'",
        "'--table'",
        "'BIOM table with OTU metadata'",
        "'\\t'",
        "'.edges'",
        "'w'",
        "'.nodes'",
        "'w'",
        "'__main__'"
    ],
    "variables": [
        "ss",
        "nanmedian",
        "table",
        "mat",
        "header",
        "table",
        "_",
        "_",
        "tmp_md",
        "line",
        "md_value",
        "mat",
        "sparcc_z",
        "cov",
        "sparcc_z"
    ],
    "comments": [
        "python 2",
        "conda install biom-format -c bioconda",
        "conda install matplotlib  # pysurvey setup.py is incomplete",
        "pip install -e \"hg+https://bitbucket.org/yonatanf/pysurvey#egg=pysurvey\"",
        "note: the pysurvey build in pypi does not work. unsure why.",
        "this little gem is because pysurvey depends on an older version of scipy",
        "and attempts to import nanmedian from scipy.stats. This is a dirty hack.",
        "i+1 for upper triangle"
    ],
    "docstrings": [
        "\"\"\"Convert a BIOM table to a compatible pysurvey DataFrame\n    Parameters\n    ----------\n    table : biom.Table\n        The BIOM table\n    Returns\n    -------\n    DataFrame\n        A pandas DataFrame representing the BIOM table where the rows are\n        samples and the columns are observations. The sample identifiers are\n        stripped as they are not used, and any BIOM metadata are ignored\n    \"\"\"",
        "\"\"\"Generate edges\n    Parameters\n    ----------\n    fp : open file\n        Where to write the results\n    sparcc_z : pd.DataFrame\n        A pandas DataFrame containing the correlations\n    threshold : float\n        A minimum absolute correlation threshold value\n    \"\"\"",
        "\"\"\"Format the nodes file\n    Paramters\n    ---------\n    fp : open file\n        Where to write the results too\n    table : file path\n        A file path to the BIOM table\n    \"\"\"",
        "\"\"\"Obtain SparCC correlations\"\"\"",
        "\"\"\"Construct network from correlations\"\"\""
    ],
    "functions": [
        "_biom_to_pysurvey_mat",
        "_format_edges",
        "_format_nodes",
        "sparcc",
        "correlations",
        "network"
    ],
    "classes": []
}