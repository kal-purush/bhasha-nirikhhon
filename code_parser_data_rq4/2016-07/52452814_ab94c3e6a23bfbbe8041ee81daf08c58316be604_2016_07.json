{
    "identifiers": [
        "random",
        "time",
        "threading",
        "cflib",
        "crtp",
        "cflib",
        "crazyflie",
        "Crazyflie",
        "link_uri",
        "Crazyflie",
        "_cf",
        "connected",
        "add_callback",
        "_connected",
        "_cf",
        "disconnected",
        "add_callback",
        "_disconnected",
        "_cf",
        "connection_failed",
        "add_callback",
        "_connection_failed",
        "_cf",
        "connection_lost",
        "add_callback",
        "_connection_lost",
        "link_uri",
        "_cf",
        "open_link",
        "link_uri",
        "random",
        "seed",
        "link_uri",
        "link_uri",
        "target",
        "_run_sequence",
        "start",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "msg",
        "link_uri",
        "link_uri",
        "i",
        "len",
        "anchors",
        "_cf",
        "param",
        "set_value",
        "format",
        "i",
        "format",
        "anchors",
        "i",
        "_cf",
        "param",
        "set_value",
        "format",
        "i",
        "format",
        "anchors",
        "i",
        "_cf",
        "param",
        "set_value",
        "format",
        "i",
        "format",
        "anchors",
        "i",
        "_cf",
        "param",
        "set_value",
        "time",
        "sleep",
        "position",
        "sequence",
        "format",
        "position",
        "i",
        "_cf",
        "commander",
        "send_setpoint",
        "position",
        "position",
        "position",
        "position",
        "time",
        "sleep",
        "_cf",
        "commander",
        "send_setpoint",
        "time",
        "sleep",
        "_cf",
        "close_link",
        "cflib",
        "crtp",
        "init_drivers",
        "enable_debug_driver",
        "AutonomousSequence"
    ],
    "literals": [
        "'Connecting to %s'",
        "'Connected to %s'",
        "'Connection to %s failed: %s'",
        "'Connection to %s lost: %s'",
        "'Disconnected from %s'",
        "'anchorpos.anchor{}x'",
        "'{}'",
        "'anchorpos.anchor{}y'",
        "'{}'",
        "'anchorpos.anchor{}z'",
        "'{}'",
        "'flightmode.posSet'",
        "'1'",
        "\"Setting position {}\"",
        "\"__main__\"",
        "\"radio://0/23/2M\""
    ],
    "variables": [
        "anchors",
        "sequence",
        "_cf",
        "is_connected",
        "_param_check_list",
        "_param_groups",
        "is_connected",
        "is_connected",
        "le"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "",
        "||          ____  _ __",
        "+------+      / __ )(_) /_______________ _____  ___",
        "| 0xBC |     / __  / / __/ ___/ ___/ __ `/_  / / _ \\",
        "+------+    / /_/ / / /_/ /__/ /  / /_/ / / /_/  __/",
        "||  ||    /_____/_/\\__/\\___/_/   \\__,_/ /___/\\___/",
        "",
        "Copyright (C) 2014 Bitcraze AB",
        "",
        "Crazyflie Nano Quadcopter Client",
        "",
        "This program is free software; you can redistribute it and/or",
        "modify it under the terms of the GNU General Public License",
        "as published by the Free Software Foundation; either version 2",
        "of the License, or (at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software",
        "Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",
        "MA  02110-1301, USA.",
        "Change anchor position and sequence according to your setup",
        "x    y    z  YAW",
        "Create a Crazyflie object without specifying any cache dirs",
        "Connect some callbacks from the Crazyflie API",
        "Try to connect to the Crazyflie",
        "Variable used to keep main loop occupied until disconnect",
        "Start a separate thread to do the motor test.",
        "Do not hijack the calling thread!",
        "Setting up the anchors position",
        "Make sure that the last packet leaves before the link is closed",
        "since the message queue is not flushed before closing",
        "le = AutonomousSequence(\"radio://0/80/2M/E7E7E7E701\")"
    ],
    "docstrings": [
        "\"\"\"\nSimple example that connects to one crazyflie (check the address on the last\nline and update it to your crazyflie address), sets the anchors postition and\nsend a sequence of setpoints, one every 5 secondes.\n\nThis exemple is intended to work with the Loco Positioning System in TWR TOA\nmode. It aims at documenting how to set the Crazyflie in position control mode\nand how to send setpoints.\n\"\"\"",
        "\"\"\"\n    Simple logging example class that logs the Stabilizer from a supplied\n    link uri and disconnects after 5s.\n    \"\"\"",
        "\"\"\" Initialize and run the example with the specified link_uri \"\"\"",
        "\"\"\" This callback is called form the Crazyflie API when a Crazyflie\n        has been connected and the TOCs have been downloaded.\"\"\"",
        "\"\"\"Callback when connection initial connection fails (i.e no Crazyflie\n        at the specified address)\"\"\"",
        "\"\"\"Callback when disconnected after a connection has been made (i.e\n        Crazyflie moves out of range)\"\"\"",
        "\"\"\"Callback when the Crazyflie is disconnected (called in all cases)\"\"\""
    ],
    "functions": [
        "_connected",
        "_connection_failed",
        "_connection_lost",
        "_disconnected",
        "_run_sequence"
    ],
    "classes": [
        "AutonomousSequence"
    ]
}