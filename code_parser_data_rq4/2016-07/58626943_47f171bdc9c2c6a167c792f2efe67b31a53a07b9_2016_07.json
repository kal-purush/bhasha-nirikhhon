{
    "identifiers": [
        "os",
        "json",
        "re",
        "subprocess",
        "Popen",
        "PIPE",
        "cmd",
        "Popen",
        "cmd",
        "stdout",
        "PIPE",
        "stderr",
        "PIPE",
        "communicate",
        "error",
        "rpm",
        "qf",
        "rpm",
        "run_command",
        "cmd",
        "split",
        "rpm",
        "filepath",
        "filepath",
        "run_command",
        "cmd",
        "split",
        "data",
        "data",
        "split",
        "line",
        "lines",
        "line",
        "strip",
        "line",
        "startswith",
        "re",
        "search",
        "line",
        "match",
        "match",
        "groups",
        "match",
        "groups",
        "source_rpm_of_file",
        "filepath",
        "get_meta_of_rpm",
        "rpm",
        "result",
        "append",
        "match",
        "groups",
        "match",
        "groups",
        "match",
        "groups",
        "get_meta_of_rpm",
        "rpm",
        "result",
        "get_command",
        "run_command",
        "cmd",
        "process_cmd_output_data",
        "result",
        "output_file",
        "_run",
        "output_file",
        "export_report",
        "result",
        "output_file",
        "data",
        "output_file",
        "open",
        "output_file",
        "fin",
        "json",
        "dump",
        "data",
        "fin",
        "RPMVerifyTest",
        "os",
        "path",
        "join",
        "CERT_DIR_PARENT",
        "rpmva_tests",
        "__class__",
        "rpmva_tests",
        "run",
        "output_file",
        "data_file_path"
    ],
    "literals": [
        "\"/var/tmp/container_introspection/\"",
        "\"/bin/rpm\"",
        "\"-Va\"",
        "\"%{SIGPGP:pgpsig}|%{VENDOR}|%{PACKAGER}|%{BUILDHOST}\"",
        "\"/bin/rpm\"",
        "\"-q\"",
        "\"--qf\"",
        "\"|\"",
        "\"RPM\"",
        "\"SIGNATURE\"",
        "\"VENDOR\"",
        "\"PACKAGER\"",
        "\"BUILDHOST\"",
        "\"/bin/rpm\"",
        "\"-qf\"",
        "\" \"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"error:\"",
        "r'^([0-9A-Za-z.]+)\\s+([c]{0,1})\\s+(\\W.*)$'",
        "\"error\"",
        "'c'",
        "\"issue\"",
        "\"config\"",
        "'c'",
        "\"filename\"",
        "\"rpm\"",
        "\"rpmVa_issues\"",
        "\"wb+\"",
        "\"__main__\"",
        "\"%s.json\""
    ],
    "variables": [
        "CERT_DIR_PARENT",
        "error",
        "qf",
        "cmd",
        "_",
        "cmd",
        "_",
        "lines",
        "result",
        "line",
        "match",
        "filepath",
        "rpm",
        "rpm_meta",
        "cmd",
        "error",
        "result",
        "result",
        "result",
        "rpmva_tests",
        "data_file_path",
        "data"
    ],
    "comments": [
        "Copyright 2014 Red Hat Inc.",
        "Navid Shaikh <nshaikh@redhat.com>",
        "",
        "This program is a free software; you can redistribute it and/or modify it",
        "under the terms of the GNU General Public License as published by the Free",
        "Software Foundation; either version 2 of the license, or(at your option) any",
        "later version. See http://www.gnu.org/copyleft/gpl.html for the full text of",
        "the license.",
        "",
        "container specific",
        "do not include the config files in the result",
        "TODO: since this script is running inside container while we have the",
        "logging on host, we should find a better way to log this message back",
        "Also we should log the RPMs failing the rpm -V test",
        "print \"Issue found while running rpm -Va test: \"",
        "print error"
    ],
    "docstrings": [
        "\"\"\"\n    Verify installed RPMs\n    \"\"\"",
        "\"\"\"\n        Command to run the rpm verify test\n        \"\"\"",
        "\"\"\"\n        Run command for rpm verify test\n        \"\"\"",
        "\"\"\"\n        Get metadata of given installed package.\n        Metadata captured: SIGPGP, VENDOR, PACKAGER, BUILDHOST\n        \"\"\"",
        "\"\"\"\n        Find source RPM of given filepath\n        \"\"\"",
        "\"\"\"\n        Process the command output data\n        \"\"\"",
        "\"\"\"\n        Run the RPM verify test\n        \"\"\"",
        "\"\"\"\n        Run the RPM Verify test and export report if required\n        \"\"\"",
        "\"\"\"\n        Export the JSON data in output_file\n        \"\"\""
    ],
    "functions": [
        "get_command",
        "run_command",
        "get_meta_of_rpm",
        "source_rpm_of_file",
        "process_cmd_output_data",
        "_run",
        "run",
        "export_report"
    ],
    "classes": [
        "RPMVerifyTest"
    ]
}