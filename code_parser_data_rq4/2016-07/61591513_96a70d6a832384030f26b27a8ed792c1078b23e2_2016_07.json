{
    "identifiers": [
        "Injectable",
        "AuthHttp",
        "BACKEND_URL",
        "DoseSeries",
        "RequestOptions",
        "Headers",
        "Injectable",
        "BACKEND_URL",
        "http",
        "response",
        "response",
        "id",
        "id",
        "response",
        "response",
        "doseSeries",
        "Headers",
        "RequestOptions",
        "headers",
        "doseSeries",
        "options",
        "res",
        "res",
        "doseSeries",
        "Headers",
        "RequestOptions",
        "headers",
        "doseSeries",
        "doseSeries",
        "options",
        "res",
        "res",
        "doseSeries",
        "doseSeries",
        "doseSeries",
        "doseSeries",
        "error",
        "error",
        "error",
        "error"
    ],
    "literals": [
        "\"@angular/core\"",
        "\"../angular2-jwt\"",
        "\"../backend-config/backend-config\"",
        "\"../dose-series/dose-series\"",
        "\"@angular/http\"",
        "string",
        "${BACKEND_URL}/dose-series",
        "${this.doseSeriesUrl}/${id}",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "${this.doseSeriesUrl}/${doseSeries.id}",
        "\"An error occurred\""
    ],
    "variables": [
        "headers",
        "options",
        "headers",
        "options"
    ],
    "comments": [],
    "docstrings": [
        "* Service for fetching and saving DoseEvent instances.",
        "* Get a list of DoseSeries.\n     * @returns {Promise<Array<DoseSeries>>}",
        "* Retrieves an existing DoseSeries from the server.\n     * @param id to lookup.\n     * @returns {Promise<DoseSeries>}.",
        "* Creates a new DoseSeries object.\n     * @param doseSeries to save.\n     * @returns {Promise<DoseSeries>}.",
        "* Updates an existing DoseSeries object.\n     * @param doseSeries to save.\n     * @returns {Promise<DoseSeries>}.",
        "* Saves an existing or creates a new Dose Series.\n     * @param doseSeries to save.\n     * @returns {Promise<DoseSeries>}.",
        "* Handles any errors communicating with backend.\n     * @param error\n     * @returns {Promise<void>|Promise<T>}"
    ],
    "functions": [
        "get",
        "post",
        "put",
        "save",
        "handleError"
    ],
    "classes": [
        "DoseSeriesService"
    ]
}