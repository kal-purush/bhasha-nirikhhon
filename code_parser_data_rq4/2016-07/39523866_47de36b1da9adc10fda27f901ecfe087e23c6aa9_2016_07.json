{
    "identifiers": [
        "Observable",
        "mock",
        "IMockedObservable",
        "fakeAsync",
        "describe",
        "it",
        "fakeAsync",
        "mock",
        "mockedObservable",
        "result",
        "expect",
        "result",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "value1",
        "value2",
        "value1",
        "value2",
        "mockedObservable",
        "result",
        "expect",
        "result",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "mockedObservable",
        "error",
        "expect",
        "error",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "mockedObservable",
        "mockedObservable",
        "error",
        "expect",
        "error",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "mockedObservable",
        "result1",
        "expect",
        "result1",
        "mockedObservable",
        "result2",
        "expect",
        "result2",
        "mockedObservable",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "value1",
        "value2",
        "value1",
        "value2",
        "mockedObservable",
        "result",
        "expect",
        "result",
        "mockedObservable",
        "result",
        "expect",
        "result",
        "mockedObservable",
        "mockedObservable",
        "it",
        "mock",
        "expect",
        "mockedObservable",
        "mockedObservable",
        "it",
        "mock",
        "expect",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mock",
        "expect",
        "mockedObservable",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "result",
        "result",
        "Observable",
        "mockedObservable",
        "mockedObservable",
        "expect",
        "result1",
        "expect",
        "result2",
        "mockedObservable",
        "it",
        "mock",
        "mockedObservable",
        "sinon",
        "mockedObservable",
        "sinon",
        "mockedObservable",
        "it",
        "fakeAsync",
        "mock",
        "mock",
        "Observable",
        "service",
        "service",
        "expect",
        "result1",
        "expect",
        "result2",
        "mock",
        "service",
        "it",
        "fakeAsync",
        "mock",
        "mock",
        "mockedObservables",
        "mocked",
        "Observable",
        "mocked",
        "Observable",
        "whens",
        "expect",
        "result1",
        "expect",
        "result2",
        "mock",
        "mockedObservables",
        "it",
        "fakeAsync",
        "mock",
        "mockedObservable",
        "result",
        "expect",
        "result",
        "mockedObservable"
    ],
    "literals": [
        "'rxjs'",
        "'./mockObservable'",
        "'./fakeAsync'",
        "'mockObservable'",
        "'should create a request that resolves when flushed'",
        "'should create a request that resolves with dynamic content when flushed'",
        "'should create a request that is rejected'",
        "'an error'",
        "'Request should be rejected, not resolved'",
        "'an error'",
        "'should create a request and set it to be rejected'",
        "'error message'",
        "'Observable should be rejected, not resolved'",
        "'error message'",
        "'should be able to reuse mocked requests'",
        "'should allow unique parameters with successive calls'",
        "'should reuse a pending request when sharing'",
        "'should not reuse a pending request by default or not sharing'",
        "'should flush all requests on an unshared mock request'",
        "'should spy on the request function'",
        "'should flush all request on an object'",
        "'should work with Observable.from and Observable.forkJoin'",
        "'should work with toPromise'"
    ],
    "variables": [
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "mockedObservable",
        "result1",
        "result2",
        "mockedObservable",
        "service",
        "result1",
        "result2",
        "mockedObservables",
        "whens",
        "result1",
        "result2",
        "mockedObservable"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}