{
    "identifiers": [
        "Collections",
        "Collections",
        "Generic",
        "Realms",
        "Helpers",
        "Realms",
        "Schema",
        "T",
        "T",
        "IDictionary",
        "T",
        "T",
        "T",
        "name",
        "_values",
        "name",
        "Argument",
        "NotNull",
        "name",
        "nameof",
        "name",
        "name",
        "GetKey",
        "value",
        "ArgumentException",
        "GetKey",
        "value",
        "name",
        "nameof",
        "name",
        "_values",
        "name",
        "value",
        "_values",
        "Count",
        "T",
        "item",
        "GetKey",
        "item",
        "_values",
        "ContainsKey",
        "key",
        "ArgumentException",
        "key",
        "nameof",
        "item",
        "_values",
        "Add",
        "key",
        "item",
        "T",
        "item",
        "_values",
        "Remove",
        "KeyValuePair",
        "T",
        "GetKey",
        "item",
        "item",
        "name",
        "_values",
        "Remove",
        "name",
        "T",
        "item",
        "_values",
        "Contains",
        "KeyValuePair",
        "T",
        "GetKey",
        "item",
        "item",
        "name",
        "_values",
        "ContainsKey",
        "name",
        "T",
        "item",
        "IEnumerator",
        "T",
        "_values",
        "Values",
        "GetEnumerator",
        "_values",
        "Values",
        "GetEnumerator"
    ],
    "literals": [],
    "variables": [
        "_values",
        "Count",
        "key"
    ],
    "comments": [
        "",
        "",
        "Copyright 2021 Realm Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\")",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "",
        "A base class for the schema builders exposed by Realm.",
        "</summary>",
        "<typeparam name=\"T\">The type of the elements contained in the builder.</typeparam>",
        "Gets or sets an element in the builder by name.",
        "</summary>",
        "<param name=\"name\">The name of the element.</param>",
        "<returns>The element with the specified name.</returns>",
        "<exception cref=\"ArgumentNullException\">Thrown if <paramref name=\"name\"/> is <c>null</c>.</exception>",
        "<exception cref=\"KeyNotFoundException\">Thrown by the getter if the builder doesn't contain an element with the specified <paramref name=\"name\"/>.</exception>",
        "Gets the number of elements the builder contains.",
        "</summary>",
        "Removes an element from the builder.",
        "</summary>",
        "<param name=\"item\">The element to remove.</param>",
        "<returns><c>true</c> if the element was found and removed; <c>false</c> otherwise.</returns>",
        "Removes an element from the builder by name.",
        "</summary>",
        "<param name=\"name\">The name of the element to remove.</param>",
        "<returns><c>true</c> if the element was found and removed; <c>false</c> otherwise.</returns>",
        "Checks if the builder contains the provided element.",
        "</summary>",
        "<param name=\"item\">The item to check for existence.</param>",
        "<returns><c>true</c> if the builder contains the specified item; <c>false</c> otherwise.</returns>",
        "Checks if the builder contains the provided element by name.",
        "</summary>",
        "<param name=\"name\">The name of the element being searched for.</param>",
        "<returns><c>true</c> if the builder contains the specified item; <c>false</c> otherwise.</returns>",
        "<inheritdoc/>",
        "<inheritdoc/>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Add",
        "Remove",
        "Remove",
        "Contains",
        "Contains",
        "GetKey",
        "GetEnumerator",
        "IEnumerator",
        "GetEnumerator"
    ],
    "classes": [
        "SchemaBuilderBase"
    ]
}