{
    "identifiers": [
        "org",
        "gridsuite",
        "study",
        "server",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "RootNodeInfoRepositoryProxy",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "dto",
        "AbstractNode",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "dto",
        "InsertMode",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "dto",
        "RootNode",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "AbstractNodeRepositoryProxy",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "repositories",
        "NetworkModificationNodeInfoRepository",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "NetworkModificationNodeInfoRepositoryProxy",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "repositories",
        "ModelNodeInfoRepository",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "entities",
        "NodeEntity",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "ModelNodeInfoRepositoryProxy",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "repositories",
        "NodeRepository",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "entities",
        "NodeType",
        "org",
        "gridsuite",
        "study",
        "server",
        "networkmodificationtree",
        "repositories",
        "RootNodeInfoRepository",
        "org",
        "gridsuite",
        "study",
        "server",
        "repository",
        "StudyEntity",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "cloud",
        "stream",
        "StreamBridge",
        "org",
        "springframework",
        "integration",
        "support",
        "MessageBuilder",
        "org",
        "springframework",
        "messaging",
        "Message",
        "org",
        "springframework",
        "stereotype",
        "Service",
        "org",
        "springframework",
        "transaction",
        "annotation",
        "Transactional",
        "reactor",
        "core",
        "publisher",
        "Mono",
        "javax",
        "persistence",
        "EntityNotFoundException",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "EnumMap",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "UUID",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "gridsuite",
        "study",
        "server",
        "StudyException",
        "Type",
        "org",
        "gridsuite",
        "study",
        "server",
        "StudyService",
        "HEADER_STUDY_UUID",
        "org",
        "gridsuite",
        "study",
        "server",
        "StudyService",
        "HEADER_UPDATE_TYPE",
        "Service",
        "HEADER_NODES",
        "HEADER_NODE",
        "HEADER_NEW_NODE",
        "HEADER_REMOVE_CHILDREN",
        "NODE_UPDATED",
        "NODE_DELETED",
        "NODE_CREATED",
        "HEADER_INSERT_BEFORE",
        "repositories",
        "nodesRepository",
        "rootNodeInfoRepositoryProxy",
        "CATEGORY_BROKER_OUTPUT",
        "getName",
        "MESSAGE_OUTPUT_LOGGER",
        "LoggerFactory",
        "getLogger",
        "CATEGORY_BROKER_OUTPUT",
        "Autowired",
        "treeUpdatePublisher",
        "Autowired",
        "message",
        "MESSAGE_OUTPUT_LOGGER",
        "debug",
        "message",
        "treeUpdatePublisher",
        "send",
        "message",
        "studyUuid",
        "referenceNode",
        "nodeCreated",
        "insertBefore",
        "sendUpdateMessage",
        "MessageBuilder",
        "withPayload",
        "setHeader",
        "HEADER_STUDY_UUID",
        "studyUuid",
        "setHeader",
        "HEADER_UPDATE_TYPE",
        "NODE_CREATED",
        "setHeader",
        "HEADER_NODE",
        "referenceNode",
        "setHeader",
        "HEADER_NEW_NODE",
        "nodeCreated",
        "setHeader",
        "HEADER_INSERT_BEFORE",
        "insertBefore",
        "name",
        "build",
        "studyUuid",
        "nodes",
        "sendUpdateMessage",
        "MessageBuilder",
        "withPayload",
        "setHeader",
        "HEADER_STUDY_UUID",
        "studyUuid",
        "setHeader",
        "HEADER_UPDATE_TYPE",
        "NODE_UPDATED",
        "setHeader",
        "HEADER_NODES",
        "nodes",
        "build",
        "studyUuid",
        "nodes",
        "deleteChildren",
        "sendUpdateMessage",
        "MessageBuilder",
        "withPayload",
        "setHeader",
        "HEADER_STUDY_UUID",
        "studyUuid",
        "setHeader",
        "HEADER_UPDATE_TYPE",
        "NODE_DELETED",
        "setHeader",
        "HEADER_NODES",
        "nodes",
        "setHeader",
        "HEADER_REMOVE_CHILDREN",
        "deleteChildren",
        "build",
        "Autowired",
        "nodesRepository",
        "rootNodeInfoRepository",
        "modelNodeInfoRepository",
        "networkModificationNodeInfoRepository",
        "nodesRepository",
        "nodesRepository",
        "rootNodeInfoRepositoryProxy",
        "rootNodeInfoRepository",
        "repositories",
        "put",
        "NodeType",
        "ROOT",
        "rootNodeInfoRepositoryProxy",
        "repositories",
        "put",
        "NodeType",
        "MODEL",
        "modelNodeInfoRepository",
        "repositories",
        "put",
        "NodeType",
        "NETWORK_MODIFICATION",
        "networkModificationNodeInfoRepository",
        "Transactional",
        "id",
        "nodeInfo",
        "insertMode",
        "referenceNode",
        "nodesRepository",
        "findById",
        "id",
        "referenceNode",
        "reference",
        "insertMode",
        "equals",
        "InsertMode",
        "BEFORE",
        "reference",
        "getType",
        "equals",
        "NodeType",
        "ROOT",
        "NOT_ALLOWED",
        "parent",
        "insertMode",
        "equals",
        "InsertMode",
        "BEFORE",
        "reference",
        "getParentNode",
        "reference",
        "node",
        "nodesRepository",
        "save",
        "parent",
        "nodeInfo",
        "getType",
        "reference",
        "getStudy",
        "nodeInfo",
        "setId",
        "node",
        "getIdNode",
        "repositories",
        "get",
        "node",
        "getType",
        "createNodeInfo",
        "nodeInfo",
        "insertMode",
        "equals",
        "InsertMode",
        "BEFORE",
        "reference",
        "setParentNode",
        "node",
        "insertMode",
        "equals",
        "InsertMode",
        "AFTER",
        "nodesRepository",
        "findAllByParentNodeIdNode",
        "id",
        "stream",
        "n",
        "n",
        "getIdNode",
        "equals",
        "node",
        "getIdNode",
        "forEach",
        "child",
        "child",
        "setParentNode",
        "node",
        "emitNodeInserted",
        "getStudyUuidForNodeId",
        "id",
        "id",
        "node",
        "getIdNode",
        "insertMode",
        "nodeInfo",
        "orElseThrow",
        "ELEMENT_NOT_FOUND",
        "id",
        "nodeInfo",
        "insertMode",
        "Mono",
        "fromCallable",
        "doCreateNode",
        "id",
        "nodeInfo",
        "insertMode",
        "id",
        "deleteChildren",
        "Mono",
        "fromRunnable",
        "doDeleteNode",
        "id",
        "deleteChildren",
        "Transactional",
        "id",
        "deleteChildren",
        "removedNodes",
        "studyId",
        "getStudyUuidForNodeId",
        "id",
        "deleteNodes",
        "id",
        "deleteChildren",
        "removedNodes",
        "emitNodesDeleted",
        "studyId",
        "removedNodes",
        "deleteChildren",
        "id",
        "node",
        "nodesRepository",
        "findById",
        "id",
        "node",
        "orElseThrow",
        "getStudy",
        "getId",
        "Transactional",
        "id",
        "deleteChildren",
        "allowDeleteRoot",
        "removedNodes",
        "optNodeToDelete",
        "nodesRepository",
        "findById",
        "id",
        "optNodeToDelete",
        "ifPresent",
        "nodeToDelete",
        "allowDeleteRoot",
        "nodeToDelete",
        "getType",
        "NodeType",
        "ROOT",
        "CANT_DELETE_ROOT_NODE",
        "deleteChildren",
        "nodesRepository",
        "findAllByParentNodeIdNode",
        "id",
        "forEach",
        "node",
        "node",
        "setParentNode",
        "nodeToDelete",
        "getParentNode",
        "nodesRepository",
        "findAllByParentNodeIdNode",
        "id",
        "forEach",
        "child",
        "deleteNodes",
        "child",
        "getIdNode",
        "removedNodes",
        "removedNodes",
        "add",
        "id",
        "repositories",
        "get",
        "nodeToDelete",
        "getType",
        "deleteByNodeId",
        "id",
        "nodesRepository",
        "nodeToDelete",
        "Transactional",
        "studyId",
        "nodes",
        "nodesRepository",
        "findAllByStudyId",
        "studyId",
        "repositories",
        "forEach",
        "key",
        "repository",
        "repository",
        "deleteAll",
        "nodes",
        "stream",
        "n",
        "n",
        "getType",
        "equals",
        "key",
        "NodeEntity",
        "getIdNode",
        "collect",
        "Collectors",
        "toSet",
        "nodesRepository",
        "deleteAll",
        "nodes",
        "ignored",
        "Transactional",
        "study",
        "node",
        "nodesRepository",
        "save",
        "NodeType",
        "ROOT",
        "study",
        "root",
        "RootNode",
        "builder",
        "studyId",
        "study",
        "getId",
        "id",
        "node",
        "getIdNode",
        "name",
        "build",
        "repositories",
        "get",
        "node",
        "getType",
        "createNodeInfo",
        "root",
        "Transactional",
        "studyId",
        "nodes",
        "nodesRepository",
        "findAllByStudyId",
        "studyId",
        "nodes",
        "isEmpty",
        "ELEMENT_NOT_FOUND",
        "fullMap",
        "repositories",
        "forEach",
        "key",
        "repository",
        "fullMap",
        "putAll",
        "repository",
        "getAll",
        "nodes",
        "stream",
        "n",
        "n",
        "getType",
        "equals",
        "key",
        "NodeEntity",
        "getIdNode",
        "collect",
        "Collectors",
        "toSet",
        "nodes",
        "stream",
        "n",
        "n",
        "getParentNode",
        "forEach",
        "node",
        "fullMap",
        "get",
        "node",
        "getParentNode",
        "getIdNode",
        "getChildren",
        "add",
        "fullMap",
        "get",
        "node",
        "getIdNode",
        "root",
        "fullMap",
        "get",
        "nodes",
        "stream",
        "n",
        "n",
        "getType",
        "equals",
        "NodeType",
        "ROOT",
        "findFirst",
        "orElseThrow",
        "getIdNode",
        "root",
        "root",
        "setStudyId",
        "studyId",
        "root",
        "studyId",
        "Mono",
        "fromCallable",
        "doGetStudyTree",
        "studyId",
        "node",
        "Mono",
        "fromRunnable",
        "doUpdateNode",
        "node",
        "Transactional",
        "node",
        "repositories",
        "get",
        "node",
        "getType",
        "updateNode",
        "node",
        "emitNodesChanged",
        "getStudyUuidForNodeId",
        "node",
        "getId",
        "Collections",
        "singletonList",
        "node",
        "getId",
        "id",
        "Mono",
        "fromCallable",
        "node",
        "nodesRepository",
        "findById",
        "id",
        "n",
        "repositories",
        "get",
        "n",
        "getType",
        "getNode",
        "id",
        "orElseThrow",
        "ELEMENT_NOT_FOUND",
        "nodesRepository",
        "findAllByParentNodeIdNode",
        "node",
        "getId",
        "stream",
        "NodeEntity",
        "getIdNode",
        "forEach",
        "node",
        "getChildrenIds",
        "add",
        "node"
    ],
    "literals": [
        "\"nodes\"",
        "\"node\"",
        "\"newNode\"",
        "\"removeChildren\"",
        "\"nodeUpdated\"",
        "\"nodeDeleted\"",
        "\"nodeCreated\"",
        "\"insertBefore\"",
        "\".output-broker-messages\"",
        "\"Sending message : {}\"",
        "\"publishStudyUpdate-out-0\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Root\""
    ],
    "variables": [
        "nodesRepository",
        "rootNodeInfoRepositoryProxy",
        "treeUpdatePublisher",
        "self"
    ],
    "comments": [
        "nothing to do"
    ],
    "docstrings": [
        "* Copyright (c) 2021, RTE (http://www.rte-france.com)\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.",
        "* @author Jacques Borsenberger <jacques.borsenberger at rte-france.com",
        "root cannot be deleted by accident"
    ],
    "functions": [
        "sendUpdateMessage",
        "emitNodeInserted",
        "emitNodesChanged",
        "emitNodesDeleted",
        "NetworkModificationTreeService",
        "AbstractNode",
        "doCreateNode",
        "createNode",
        "deleteNode",
        "doDeleteNode",
        "UUID",
        "getStudyUuidForNodeId",
        "deleteNodes",
        "doDeleteTree",
        "createRoot",
        "RootNode",
        "doGetStudyTree",
        "getStudyTree",
        "updateNode",
        "doUpdateNode",
        "getSimpleNode"
    ],
    "classes": [
        "NetworkModificationTreeService"
    ]
}