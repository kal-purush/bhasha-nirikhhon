{
    "identifiers": [
        "rest_framework",
        "permissions",
        "BasePermission",
        "token",
        "decode_token",
        "models",
        "User",
        "BasePermission",
        "request",
        "request",
        "headers",
        "jwt",
        "split",
        "decode_token",
        "jwt",
        "jwt",
        "split",
        "token",
        "e",
        "e",
        "request",
        "view",
        "get_jwt",
        "request",
        "User",
        "objects",
        "get",
        "id",
        "token",
        "uuid",
        "token",
        "user",
        "User",
        "DoesNotExist",
        "e",
        "e",
        "request",
        "view",
        "obj",
        "get_jwt",
        "request",
        "decode_token",
        "token",
        "User",
        "objects",
        "get",
        "id",
        "obj",
        "user_id",
        "decoded",
        "user",
        "id",
        "decoded",
        "user",
        "uuid",
        "e",
        "e"
    ],
    "literals": [
        "'Authorization'",
        "\"Bearer \"",
        "'subject'",
        "\":\"",
        "\"Invalid authorization\"",
        "'id'",
        "'uuid'"
    ],
    "variables": [
        "jwt",
        "jwt",
        "jwt",
        "token",
        "token",
        "user",
        "request",
        "user",
        "token",
        "decoded",
        "user"
    ],
    "comments": [
        "get / post용 permission",
        "put / delete용 permission",
        "에러 핸들링 - 실패하는 경우 -> 유저가 존재하지 않을 때 / 토큰이 유효하지 않을 때 (토큰 값이 유효하지 않거나  / 토큰이 만료 됐거나) (401)  / Unexpected Error(500)",
        "if e.message == \"TokenExpiredError: jwt expired\":",
        "return False",
        "elif e.message == \"InvalidTokenError: invalid jwt\":",
        "return False",
        "elif e.message == \"Invalid authorization\":",
        "return False",
        "else:",
        "print(e)",
        "return False",
        "if e.message == \"TokenExpiredError: jwt expired\":",
        "return False",
        "elif e.message == \"InvalidTokenError: invalid jwt\":",
        "return False",
        "elif e.message == \"Invalid authorization\":",
        "return False",
        "else:",
        "print(e)",
        "return False"
    ],
    "docstrings": [
        "\"\"\"\n            token[0] = user_uuid\n            token[1] = user_id\n            \"\"\""
    ],
    "functions": [
        "get_jwt",
        "has_permission",
        "has_object_permission"
    ],
    "classes": [
        "JwtPermission"
    ]
}