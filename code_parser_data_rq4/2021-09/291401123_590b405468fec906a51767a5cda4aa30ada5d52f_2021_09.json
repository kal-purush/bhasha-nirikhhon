{
    "identifiers": [
        "itertools",
        "json",
        "os",
        "re",
        "shlex",
        "shutil",
        "functools",
        "lru_cache",
        "pathlib",
        "Path",
        "typing",
        "Dict",
        "Iterator",
        "Union",
        "milc",
        "cli",
        "MILC",
        "qmk",
        "commands",
        "create_make_command",
        "qmk",
        "constants",
        "QMK_FIRMWARE",
        "qmk",
        "decorators",
        "automagic_keyboard",
        "automagic_keymap",
        "lru_cache",
        "maxsize",
        "binary",
        "Path",
        "cli",
        "log",
        "debug",
        "binary",
        "shutil",
        "which",
        "binary",
        "Path",
        "bin_path",
        "resolve",
        "parent",
        "parent",
        "glob",
        "bin_path",
        "re",
        "compile",
        "re",
        "compile",
        "f",
        "Iterator",
        "Dict",
        "line",
        "f",
        "state",
        "file_re",
        "search",
        "line",
        "m",
        "m",
        "group",
        "state",
        "this_file",
        "cmd_re",
        "search",
        "line",
        "m",
        "m",
        "group",
        "shlex",
        "split",
        "this_cmd",
        "args",
        "s",
        "s",
        "system_libs",
        "args",
        "join",
        "shlex",
        "quote",
        "s",
        "s",
        "args",
        "s",
        "records",
        "append",
        "QMK_FIRMWARE",
        "resolve",
        "new_cmd",
        "this_file",
        "records",
        "cli",
        "argument",
        "help",
        "cli",
        "argument",
        "help",
        "cli",
        "subcommand",
        "automagic_keyboard",
        "automagic_keymap",
        "cli",
        "MILC",
        "Union",
        "cli",
        "config",
        "generate_compilation_database",
        "keyboard",
        "cli",
        "config",
        "user",
        "keyboard",
        "cli",
        "config",
        "generate_compilation_database",
        "keymap",
        "cli",
        "config",
        "user",
        "keymap",
        "current_keyboard",
        "current_keymap",
        "create_make_command",
        "current_keyboard",
        "current_keymap",
        "dry_run",
        "current_keyboard",
        "cli",
        "log",
        "error",
        "current_keymap",
        "cli",
        "log",
        "error",
        "command",
        "cli",
        "log",
        "error",
        "cli",
        "echo",
        "os",
        "environ",
        "copy",
        "env",
        "pop",
        "command",
        "cli",
        "log",
        "info",
        "join",
        "clean_command",
        "cli",
        "run",
        "clean_command",
        "capture_output",
        "check",
        "env",
        "env",
        "cli",
        "log",
        "info",
        "join",
        "command",
        "cli",
        "run",
        "command",
        "capture_output",
        "check",
        "env",
        "env",
        "parse_make_n",
        "result",
        "stdout",
        "splitlines",
        "db",
        "cli",
        "log",
        "error",
        "result",
        "stdout",
        "cli",
        "log",
        "info",
        "len",
        "db",
        "QMK_FIRMWARE",
        "cli",
        "log",
        "info",
        "dbpath",
        "dbpath",
        "write_text",
        "json",
        "dumps",
        "db",
        "indent"
    ],
    "literals": [
        "\"searching for system library directory for binary: %s\"",
        "\"*/include\"",
        "r'printf \"Compiling: ([^\"]+)'",
        "r'LOG=\\$\\((.+?)&&'",
        "'start'",
        "'start'",
        "'cmd'",
        "'cmd'",
        "'-I%s'",
        "' '",
        "'-mno-thumb-interwork'",
        "\"directory\"",
        "\"command\"",
        "\"file\"",
        "'start'",
        "'-kb'",
        "'--keyboard'",
        "'The keyboard to build a firmware for. Ignored when a configurator export is supplied.'",
        "'-km'",
        "'--keymap'",
        "'The keymap to build a firmware for. Ignored when a configurator export is supplied.'",
        "'Create a compilation database.'",
        "'Could not determine keyboard!'",
        "'Could not determine keymap!'",
        "'You must supply both `--keyboard` and `--keymap`, or be in a directory for a keyboard or keymap.'",
        "'usage: qmk compiledb [-kb KEYBOARD] [-km KEYMAP]'",
        "\"MAKEFLAGS\"",
        "'clean'",
        "'Making clean with {fg_cyan}%s'",
        "' '",
        "'Gathering build instructions from {fg_cyan}%s'",
        "' '",
        "\"Failed to parse output from make output:\\n%s\"",
        "\"Found %s compile commands\"",
        "'compile_commands.json'",
        "f\"Writing build database to {dbpath}\""
    ],
    "variables": [
        "bin_path",
        "file_re",
        "cmd_re",
        "state",
        "this_file",
        "records",
        "m",
        "this_file",
        "state",
        "m",
        "this_cmd",
        "args",
        "new_cmd",
        "state",
        "command",
        "current_keyboard",
        "current_keymap",
        "command",
        "env",
        "clean_command",
        "result",
        "db",
        "dbpath"
    ],
    "comments": [
        "we have a hit!",
        "check both config domains: the magic decorator fills in `generate_compilation_database` but the user is",
        "more likely to have set `compile` in their config file.",
        "Generate the make command for a specific keyboard/keymap.",
        "remove any environment variable overrides which could trip us up",
        "re-use same executable as the main make invocation (might be gmake)"
    ],
    "docstrings": [
        "\"\"\"Creates a compilation database for the given keyboard build.\n\"\"\"",
        "\"\"\"Find the system include directory that the given build tool uses.\n    \"\"\"",
        "\"\"\"parse the output of `make -n <target>`\n\n    This function makes many assumptions about the format of your build log.\n    This happens to work right now for qmk.\n    \"\"\"",
        "\"\"\"Creates a compilation database for the given keyboard build.\n\n    Does a make clean, then a make -n for this target and uses the dry-run output to create\n    a compilation database (compile_commands.json). This file can help some IDEs and\n    IDE-like editors work better. For more information about this:\n\n        https://clang.llvm.org/docs/JSONCompilationDatabase.html\n    \"\"\""
    ],
    "functions": [
        "system_libs",
        "parse_make_n",
        "generate_compilation_database"
    ],
    "classes": []
}