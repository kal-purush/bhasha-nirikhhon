{
    "identifiers": [
        "re",
        "sys",
        "time",
        "google",
        "cloud",
        "speech",
        "pyaudio",
        "six",
        "moves",
        "queue",
        "SAMPLE_RATE",
        "json",
        "urllib",
        "request",
        "round",
        "time",
        "time",
        "rate",
        "chunk_size",
        "rate",
        "chunk_size",
        "queue",
        "get_current_time",
        "pyaudio",
        "PyAudio",
        "_audio_interface",
        "open",
        "format",
        "pyaudio",
        "paInt16",
        "channels",
        "_num_channels",
        "rate",
        "_rate",
        "input",
        "frames_per_buffer",
        "chunk_size",
        "stream_callback",
        "_fill_buffer",
        "value",
        "traceback",
        "_audio_stream",
        "stop_stream",
        "_audio_stream",
        "close",
        "_buff",
        "put",
        "_audio_interface",
        "terminate",
        "in_data",
        "args",
        "kwargs",
        "_buff",
        "put",
        "in_data",
        "pyaudio",
        "paContinue",
        "closed",
        "new_stream",
        "last_audio_input",
        "STREAMING_LIMIT",
        "len",
        "last_audio_input",
        "chunk_time",
        "bridging_offset",
        "bridging_offset",
        "final_request_end_time",
        "final_request_end_time",
        "round",
        "final_request_end_time",
        "bridging_offset",
        "chunk_time",
        "round",
        "len",
        "last_audio_input",
        "chunks_from_ms",
        "chunk_time",
        "i",
        "chunks_from_ms",
        "len",
        "last_audio_input",
        "data",
        "append",
        "last_audio_input",
        "i",
        "_buff",
        "get",
        "audio_input",
        "append",
        "chunk",
        "chunk",
        "data",
        "append",
        "chunk",
        "_buff",
        "get",
        "block",
        "chunk",
        "data",
        "append",
        "chunk",
        "audio_input",
        "append",
        "chunk",
        "queue",
        "Empty",
        "join",
        "data",
        "responses",
        "stream",
        "text",
        "format",
        "ACCESS_TOKEN",
        "USER_ID",
        "text",
        "request",
        "Request",
        "ENDPOIT_URL",
        "json",
        "dumps",
        "data",
        "encode",
        "headers",
        "request",
        "urlopen",
        "req",
        "res",
        "res",
        "read",
        "response",
        "responses",
        "get_current_time",
        "stream",
        "start_time",
        "STREAMING_LIMIT",
        "get_current_time",
        "response",
        "results",
        "response",
        "results",
        "result",
        "alternatives",
        "result",
        "alternatives",
        "transcript",
        "result",
        "result_end_time",
        "seconds",
        "result",
        "result_end_time",
        "seconds",
        "result",
        "result_end_time",
        "microseconds",
        "result",
        "result_end_time",
        "microseconds",
        "result_seconds",
        "result_micros",
        "stream",
        "result_end_time",
        "stream",
        "bridging_offset",
        "STREAMING_LIMIT",
        "stream",
        "restart_counter",
        "result",
        "is_final",
        "VERBOSE",
        "sys",
        "stdout",
        "write",
        "GREEN",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "corrected_time",
        "transcript",
        "post_data",
        "transcript",
        "sendMessage",
        "auth",
        "reciever",
        "sender",
        "transcript",
        "sendMessage",
        "auth",
        "sender",
        "sender",
        "transcript",
        "stream",
        "result_end_time",
        "VERBOSE",
        "re",
        "search",
        "transcript",
        "re",
        "I",
        "sys",
        "stdout",
        "write",
        "YELLOW",
        "sys",
        "stdout",
        "write",
        "typing",
        "TextIO",
        "websocket",
        "create_connection",
        "auth",
        "reciever",
        "sender",
        "text",
        "auth",
        "reciever",
        "sender",
        "text",
        "msg",
        "ws",
        "send",
        "msg",
        "ws",
        "recv",
        "result",
        "ACCESS_TOKEN",
        "ENDPOIT_URL",
        "USER_ID",
        "VERBOSE",
        "argparse",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "json",
        "dumps",
        "args",
        "__dict__",
        "indent",
        "ws",
        "auth",
        "myid",
        "sender",
        "sender",
        "reciever",
        "args",
        "auth",
        "args",
        "sender",
        "args",
        "reciever",
        "args",
        "access_token",
        "args",
        "endpoint",
        "args",
        "user_id",
        "args",
        "verbose",
        "speech",
        "SpeechClient",
        "speech",
        "RecognitionConfig",
        "encoding",
        "speech",
        "RecognitionConfig",
        "AudioEncoding",
        "LINEAR16",
        "sample_rate_hertz",
        "SAMPLE_RATE",
        "language_code",
        "max_alternatives",
        "speech",
        "StreamingRecognitionConfig",
        "config",
        "config",
        "interim_results",
        "ResumableMicrophoneStream",
        "SAMPLE_RATE",
        "CHUNK_SIZE",
        "VERBOSE",
        "mic_manager",
        "chunk_size",
        "sys",
        "stdout",
        "write",
        "YELLOW",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "write",
        "mic_manager",
        "stream",
        "stream",
        "closed",
        "VERBOSE",
        "sys",
        "stdout",
        "write",
        "YELLOW",
        "sys",
        "stdout",
        "write",
        "STREAMING_LIMIT",
        "stream",
        "restart_counter",
        "stream",
        "generator",
        "speech",
        "StreamingRecognizeRequest",
        "audio_content",
        "content",
        "content",
        "audio_generator",
        "client",
        "streaming_recognize",
        "streaming_config",
        "requests",
        "listen_print_loop",
        "responses",
        "stream",
        "stream",
        "result_end_time",
        "stream",
        "is_final_end_time",
        "stream",
        "audio_input",
        "stream",
        "restart_counter",
        "stream",
        "last_transcript_was_final",
        "VERBOSE",
        "sys",
        "stdout",
        "write",
        "ws",
        "create_connection",
        "main",
        "ws",
        "close"
    ],
    "literals": [
        "\"\\033[0;31m\"",
        "\"\\033[0;32m\"",
        "\"\\033[0;33m\"",
        "b\"\"",
        "'Content-Type'",
        "'application/json'",
        "'Authorization'",
        "'Bearer {}'",
        "'User'",
        "'Message'",
        "\"\\033[K\"",
        "\": \"",
        "\"\\n\"",
        "r\"\\b(exit|quit)\\b\"",
        "\"Exiting...\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "f\"{{'auth':'{auth}','cmd':'send','reciever':'{reciever}', 'userid':'{sender}', 'msgtext':'{text}'}}\"",
        "\"Sent\"",
        "\"Receiving...\"",
        "\"Received '%s'\"",
        "''",
        "'--access_token'",
        "'access token'",
        "'--endpoint'",
        "'request url'",
        "'--user_id'",
        "'user id to post'",
        "'--verbose'",
        "'store_true'",
        "'report logs'",
        "'--auth'",
        "'a65bc41dab7b9789c8dd03c486809c41'",
        "'ws server\\'s key'",
        "'--reciever'",
        "'Doctor'",
        "'reciever id'",
        "'--sender'",
        "'Patient'",
        "'sender id'",
        "\"ja-JP\"",
        "'\\nListening, type \"Ctrl + C\" to stop.\\n\\n'",
        "\"End (ms)       Transcript Results/Status\\n\"",
        "\"=====================================================\\n\"",
        "\"\\n\"",
        "\": NEW REQUEST\\n\"",
        "\"\\n\"",
        "\"__main__\"",
        "\"ws://127.0.0.1:6060/Relay\""
    ],
    "variables": [
        "STREAMING_LIMIT",
        "SAMPLE_RATE",
        "CHUNK_SIZE",
        "RED",
        "GREEN",
        "YELLOW",
        "ACCESS_TOKEN",
        "ENDPOIT_URL",
        "USER_ID",
        "VERBOSE",
        "_rate",
        "chunk_size",
        "_num_channels",
        "_buff",
        "closed",
        "start_time",
        "restart_counter",
        "audio_input",
        "last_audio_input",
        "result_end_time",
        "is_final_end_time",
        "final_request_end_time",
        "bridging_offset",
        "last_transcript_was_final",
        "new_stream",
        "_audio_interface",
        "_audio_stream",
        "closed",
        "closed",
        "data",
        "chunk_time",
        "bridging_offset",
        "bridging_offset",
        "chunks_from_ms",
        "bridging_offset",
        "new_stream",
        "chunk",
        "chunk",
        "headers",
        "data",
        "req",
        "body",
        "stream",
        "start_time",
        "result",
        "transcript",
        "result_seconds",
        "result_micros",
        "result_seconds",
        "result_micros",
        "stream",
        "result_end_time",
        "corrected_time",
        "stream",
        "is_final_end_time",
        "stream",
        "last_transcript_was_final",
        "stream",
        "closed",
        "stream",
        "last_transcript_was_final",
        "auth",
        "sender",
        "reciever",
        "msg",
        "result",
        "parser",
        "args",
        "auth",
        "sender",
        "reciever",
        "ACCESS_TOKEN",
        "ENDPOIT_URL",
        "USER_ID",
        "VERBOSE",
        "client",
        "config",
        "streaming_config",
        "mic_manager",
        "stream",
        "audio_input",
        "audio_generator",
        "requests",
        "responses",
        "stream",
        "final_request_end_time",
        "stream",
        "result_end_time",
        "stream",
        "last_audio_input",
        "stream",
        "last_audio_input",
        "stream",
        "audio_input",
        "stream",
        "restart_counter",
        "stream",
        "new_stream",
        "ws"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Copyright 2019 Google LLC",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "[START speech_transcribe_infinite_streaming]",
        "Audio recording parameters",
        "4 minutes",
        "100ms",
        "Run the audio stream asynchronously to fill the buffer object.",
        "This is necessary so that the input device's buffer doesn't",
        "overflow while the calling thread makes network requests, etc.",
        "Signal the generator to terminate so that the client's",
        "streaming_recognize method will not block the process termination.",
        "Use a blocking get() to ensure there's at least one chunk of",
        "data, and stop iteration if the chunk is None, indicating the",
        "end of the audio stream.",
        "Now consume whatever other data's still buffered.",
        "print(body)",
        "Display interim results, but with a carriage return at the end of the",
        "line, so subsequent lines will overwrite them.",
        "for WebSocket",
        "",
        "Exit recognition if any of the transcribed phrases could be",
        "one of our keywords.",
        "if VERBOSE:",
        "sys.stdout.write(RED)",
        "sys.stdout.write(\"\\033[K\")",
        "sys.stdout.write(str(corrected_time) + \": \" + transcript + \"\\r\")",
        "for WebSocket",
        "",
        "for WebSocket",
        "",
        "language_code=\"en-US\",",
        "sys.stdout.write('\\nListening, say \"Quit\" or \"Exit\" to stop.\\n\\n')",
        "Now, put the transcription responses to use.",
        "[END speech_transcribe_infinite_streaming]"
    ],
    "docstrings": [
        "\"\"\"Google Cloud Speech API sample application using the streaming API.\n\nNOTE: This module requires the dependencies `pyaudio` and `termcolor`.\nTo install using pip:\n\n    pip install pyaudio\n    pip install termcolor\n\nExample usage:\n    python transcribe_streaming_infinite.py\n\"\"\"",
        "\"\"\"Return Current Time in MS.\"\"\"",
        "\"\"\"Opens a recording stream as a generator yielding the audio chunks.\"\"\"",
        "\"\"\"Continuously collect data from the audio stream, into the buffer.\"\"\"",
        "\"\"\"Stream Audio from microphone to API and to local buffer\"\"\"",
        "\"\"\"Iterates through server responses and prints them.\n\n    The responses passed is a generator that will block until a response\n    is provided by the server.\n\n    Each response may contain multiple results, and each result may contain\n    multiple alternatives; for details, see https://goo.gl/tjCPAU.  Here we\n    print only the transcription for the top alternative of the top result.\n\n    In this case, responses are provided for interim results as well. If the\n    response is an interim one, print a line feed at the end of it, to allow\n    the next result to overwrite it, until the response is a final one. For the\n    final one, print a newline to preserve the finalized transcription.\n    \"\"\"",
        "\"\"\"start bidirectional streaming from microphone input to speech API\"\"\""
    ],
    "functions": [
        "get_current_time",
        "__enter__",
        "__exit__",
        "_fill_buffer",
        "generator",
        "listen_print_loop",
        "post_data",
        "sendMessage",
        "main"
    ],
    "classes": [
        "ResumableMicrophoneStream"
    ]
}