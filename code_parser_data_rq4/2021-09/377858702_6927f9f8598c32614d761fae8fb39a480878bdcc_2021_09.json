{
    "identifiers": [
        "AutoMapper",
        "VetClinic",
        "Core",
        "Interfaces",
        "Services",
        "Microsoft",
        "Extensions",
        "Configuration",
        "Moq",
        "VetClinic",
        "BLL",
        "Services",
        "VetClinic",
        "Core",
        "Interfaces",
        "Repositories",
        "VetClinic",
        "WebApi",
        "Controllers",
        "Collections",
        "Generic",
        "VetClinic",
        "Core",
        "Entities",
        "Xunit",
        "Threading",
        "Tasks",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Newtonsoft",
        "Json",
        "Microsoft",
        "AspNetCore",
        "Http",
        "IO",
        "Text",
        "VetClinic",
        "WebApi",
        "ViewModels",
        "PetViewModels",
        "VetClinic",
        "WebApi",
        "Mappers",
        "Collections",
        "Specialized",
        "VetClinic",
        "WebApi",
        "Tests",
        "Controllers",
        "Mock",
        "IBlobService",
        "Mock",
        "IBlobService",
        "Mock",
        "IPetImageRepository",
        "Mock",
        "IPetImageRepository",
        "Mock",
        "IConfiguration",
        "Mock",
        "IConfiguration",
        "Mock",
        "ControllerContext",
        "Mock",
        "ControllerContext",
        "PetImage",
        "_mapper",
        "MapperConfiguration",
        "mc",
        "AddProfile",
        "PetImageMapperProfile",
        "_mapper",
        "mappingConfig",
        "CreateMapper",
        "_petImageService",
        "PetImageService",
        "_mockPetImageRepository",
        "_petsImagesController",
        "PetsImagesController",
        "_mockIblobService",
        "_petImageService",
        "_mapper",
        "_mockConfiguration",
        "PetImage",
        "PetImage",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "PetImage",
        "Id",
        "Path",
        "PetId",
        "Fact",
        "FormFile",
        "MemoryStream",
        "Encoding",
        "UTF8",
        "GetBytes",
        "PetImage",
        "Id",
        "PetId",
        "PetImageViewModel",
        "PetId",
        "DefaultHttpContext",
        "httpContext",
        "Request",
        "Headers",
        "JsonConvert",
        "SerializeObject",
        "newPetImage",
        "_petsImagesController",
        "ControllerContext",
        "ControllerContext",
        "HttpContext",
        "httpContext",
        "_petsImagesController",
        "InsertPetImage",
        "file",
        "newPetImage1",
        "Assert",
        "IsType",
        "OkObjectResult",
        "result"
    ],
    "literals": [
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"https://blobuploadsample21.blob.core.windows.net/testcontainer/0533b353-d73e-4819-950b-0188687ffa40\"",
        "\"dummy image\"",
        "\"Data\"",
        "\"image.png\"",
        "\"Data\""
    ],
    "variables": [
        "IMapper",
        "_mapper",
        "_mockIblobService",
        "_mockPetImageRepository",
        "_mockConfiguration",
        "IPetImageService",
        "_petImageService",
        "PetsImagesController",
        "_petsImagesController",
        "_mockControllerContext",
        "_petImages",
        "mappingConfig",
        "FormFile",
        "file",
        "newPetImage",
        "newPetImage1",
        "httpContext",
        "result"
    ],
    "comments": [
        "_petImages = GetPetImages();",
        "Arrange",
        "IFormFile file = new FormFile(new MemoryStream(Encoding.UTF8.GetBytes(\"This is a test file\")), 0, 0, \"Data\", \"test.txt\");",
        "testOption",
        "NameValueCollection form = new NameValueCollection();",
        "form[\"data\"] = JsonConvert.SerializeObject(newPetImage);",
        "var formCol = new FormCollection(new Dictionary<string, Microsoft.Extensions.Primitives.StringValues>",
        "{",
        "{ \"Data\", JsonConvert.SerializeObject(newPetImage) }",
        "});",
        "_mockControllerContext.Setup(frm => frm.HttpContext.Request.Form)",
        ".Returns(formCol);",
        "_mockControllerContext.Setup(frm => frm.HttpContext.Request.Form[\"data\"])",
        ".Returns(JsonConvert.SerializeObject(newPetImage));",
        "_mockPetImageRepository.Setup(x => x.InsertAsync(It.IsAny<PetImage>()));",
        "_mockIblobService.Setup(x => x.UploadFileBlob(It.IsAny<string>(), It.IsAny<IFormFile>(), It.IsAny<string>()));",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "PetImageControllerTests",
        "GetPetImages",
        "InsertPetImage_InsertNewImage_IfCorrectData"
    ],
    "classes": [
        "PetImageControllerTests"
    ]
}