{
    "identifiers": [
        "com",
        "google",
        "idea",
        "blaze",
        "android",
        "filecache",
        "com",
        "google",
        "idea",
        "blaze",
        "command",
        "buildresult",
        "BlazeArtifact",
        "com",
        "google",
        "idea",
        "blaze",
        "scope",
        "BlazeContext",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "Collection",
        "javax",
        "annotation",
        "ArtifactCache",
        "artifacts",
        "context",
        "removeMissingArtifacts",
        "artifact"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2021 The Bazel Authors. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Interface to be used by file caches. Useful for mocking out in tests. See {@link\n * LocalArtifactCache} for more detailed JavaDoc",
        "* Method to initialize the cache helper. This method should be called once before any other\n   * public methods",
        "Removes all artifacts stored in the cache.",
        "* Fetches and caches the given collection of {@link BlazeArtifact} to disk.\n   *\n   * @param artifacts Collection of artifacts to add to cache\n   * @param removeMissingArtifacts if true, will remove any cached artifact that is not present in\n   *     {@code artifacts}.",
        "* Returns the {@link Path} corresponding to the given {@link BlazeArtifact}, or {@code null} if\n   * the artifact is not tracked in cache."
    ],
    "functions": [
        "initialize",
        "clearCache",
        "putAll",
        "Path",
        "get"
    ],
    "classes": []
}