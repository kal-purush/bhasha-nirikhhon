{
    "identifiers": [
        "cwms",
        "radar",
        "data",
        "dao",
        "java",
        "math",
        "BigDecimal",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "SQLException",
        "java",
        "sql",
        "Timestamp",
        "java",
        "time",
        "Duration",
        "java",
        "time",
        "Instant",
        "java",
        "time",
        "LocalDateTime",
        "java",
        "time",
        "ZoneId",
        "java",
        "time",
        "ZoneOffset",
        "java",
        "time",
        "ZonedDateTime",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "time",
        "temporal",
        "TemporalAccessor",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "logging",
        "Logger",
        "java",
        "util",
        "stream",
        "Collectors",
        "cwms",
        "radar",
        "data",
        "dto",
        "Catalog",
        "cwms",
        "radar",
        "data",
        "dto",
        "CwmsDTOPaginated",
        "cwms",
        "radar",
        "data",
        "dto",
        "RecentValue",
        "cwms",
        "radar",
        "data",
        "dto",
        "TimeSeries",
        "cwms",
        "radar",
        "data",
        "dto",
        "Tsv",
        "cwms",
        "radar",
        "data",
        "dto",
        "TsvDqu",
        "cwms",
        "radar",
        "data",
        "dto",
        "TsvDquId",
        "cwms",
        "radar",
        "data",
        "dto",
        "TsvId",
        "cwms",
        "radar",
        "data",
        "dto",
        "catalog",
        "CatalogEntry",
        "cwms",
        "radar",
        "data",
        "dto",
        "catalog",
        "TimeseriesCatalogEntry",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "jooq",
        "Condition",
        "org",
        "jooq",
        "DSLContext",
        "org",
        "jooq",
        "Field",
        "org",
        "jooq",
        "org",
        "jooq",
        "Record1",
        "org",
        "jooq",
        "Record3",
        "org",
        "jooq",
        "Record5",
        "org",
        "jooq",
        "Result",
        "org",
        "jooq",
        "SQL",
        "org",
        "jooq",
        "SelectConditionStep",
        "org",
        "jooq",
        "SelectHavingStep",
        "org",
        "jooq",
        "SelectJoinStep",
        "org",
        "jooq",
        "SelectSelectStep",
        "org",
        "jooq",
        "conf",
        "ParamType",
        "org",
        "jooq",
        "exception",
        "DataAccessException",
        "org",
        "jooq",
        "impl",
        "DSL",
        "usace",
        "cwms",
        "db",
        "dao",
        "ifc",
        "ts",
        "CwmsDbTs",
        "usace",
        "cwms",
        "db",
        "dao",
        "util",
        "services",
        "CwmsDbServiceLookup",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "packages",
        "CWMS_ROUNDING_PACKAGE",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "packages",
        "CWMS_TS_PACKAGE",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "packages",
        "CWMS_UTIL_PACKAGE",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "tables",
        "AV_CWMS_TS_ID2",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "tables",
        "AV_TSV",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "tables",
        "AV_TSV_DQU",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "tables",
        "AV_TS_GRP_ASSGN",
        "org",
        "jooq",
        "impl",
        "DSL",
        "asterisk",
        "org",
        "jooq",
        "impl",
        "DSL",
        "count",
        "org",
        "jooq",
        "impl",
        "DSL",
        "field",
        "org",
        "jooq",
        "impl",
        "DSL",
        "max",
        "org",
        "jooq",
        "impl",
        "DSL",
        "partitionBy",
        "usace",
        "cwms",
        "db",
        "jooq",
        "codegen",
        "tables",
        "AV_CWMS_TS_ID2",
        "AV_CWMS_TS_ID2",
        "logger",
        "Logger",
        "getLogger",
        "getName",
        "STORE_RULE",
        "OVERRIDE_PROTECTION",
        "dsl",
        "dsl",
        "format",
        "names",
        "office",
        "units",
        "datum",
        "begin",
        "end",
        "timezone",
        "CWMS_TS_PACKAGE",
        "call_RETRIEVE_TIME_SERIES_F",
        "dsl",
        "configuration",
        "names",
        "format",
        "units",
        "datum",
        "begin",
        "end",
        "timezone",
        "office",
        "timeStr",
        "fallback",
        "timezone",
        "timeStr",
        "timeStr",
        "fallback",
        "toLocalDateTime",
        "toString",
        "zone",
        "timezone",
        "ZoneOffset",
        "UTC",
        "normalized",
        "ZoneId",
        "of",
        "timezone",
        "beginParsed",
        "DateTimeFormatter",
        "ISO_DATE_TIME",
        "parseBest",
        "timeStr",
        "ZonedDateTime",
        "LocalDateTime",
        "beginTime",
        "beginParsed",
        "beginTime",
        "ZonedDateTime",
        "beginParsed",
        "beginTime",
        "LocalDateTime",
        "beginParsed",
        "atZone",
        "zone",
        "beginTime",
        "page",
        "pageSize",
        "names",
        "office",
        "units",
        "datum",
        "begin",
        "end",
        "timezone",
        "begin",
        "begin",
        "ZonedDateTime",
        "now",
        "minusDays",
        "toLocalDateTime",
        "toString",
        "end",
        "end",
        "ZonedDateTime",
        "now",
        "toLocalDateTime",
        "toString",
        "zone",
        "timezone",
        "ZoneOffset",
        "UTC",
        "normalized",
        "ZoneId",
        "of",
        "timezone",
        "beginParsed",
        "DateTimeFormatter",
        "ISO_DATE_TIME",
        "parseBest",
        "begin",
        "ZonedDateTime",
        "LocalDateTime",
        "endParsed",
        "DateTimeFormatter",
        "ISO_DATE_TIME",
        "parseBest",
        "end",
        "ZonedDateTime",
        "LocalDateTime",
        "beginTime",
        "beginParsed",
        "ZonedDateTime",
        "beginParsed",
        "LocalDateTime",
        "beginParsed",
        "atZone",
        "zone",
        "endTime",
        "endParsed",
        "ZonedDateTime",
        "endParsed",
        "LocalDateTime",
        "endParsed",
        "atZone",
        "beginTime",
        "getZone",
        "timezone",
        "beginTime",
        "getZone",
        "equals",
        "beginTime",
        "getOffset",
        "zone",
        "beginTime",
        "getZone",
        "cursor",
        "tsCursor",
        "total",
        "page",
        "page",
        "isEmpty",
        "parts",
        "CwmsDTOPaginated",
        "decodeCursor",
        "page",
        "logger",
        "fine",
        "p",
        "parts",
        "logger",
        "finest",
        "p",
        "parts",
        "length",
        "cursor",
        "parts",
        "tsCursor",
        "Timestamp",
        "Instant",
        "ofEpochMilli",
        "parseLong",
        "parts",
        "parts",
        "length",
        "total",
        "parseInt",
        "parts",
        "pageSize",
        "parseInt",
        "parts",
        "parts",
        "length",
        "recordCursor",
        "cursor",
        "recordPageSize",
        "pageSize",
        "officeId",
        "CWMS_UTIL_PACKAGE",
        "call_GET_DB_OFFICE_ID",
        "office",
        "DSL",
        "val",
        "office",
        "CWMS_UTIL_PACKAGE",
        "call_USER_OFFICE_ID",
        "tsId",
        "CWMS_TS_PACKAGE",
        "call_GET_TS_ID__2",
        "DSL",
        "val",
        "names",
        "officeId",
        "tsCode",
        "CWMS_TS_PACKAGE",
        "call_GET_TS_CODE__2",
        "tsId",
        "officeId",
        "unit",
        "units",
        "compareToIgnoreCase",
        "units",
        "compareToIgnoreCase",
        "CWMS_UTIL_PACKAGE",
        "call_GET_DEFAULT_UNITS",
        "CWMS_TS_PACKAGE",
        "call_GET_BASE_PARAMETER_ID",
        "tsCode",
        "DSL",
        "val",
        "units",
        "DSL",
        "val",
        "units",
        "SuppressWarnings",
        "retrieveTable",
        "DSL",
        "sql",
        "CWMS_TS_PACKAGE",
        "call_RETRIEVE_TS_OUT_TAB",
        "tsId",
        "unit",
        "CWMS_UTIL_PACKAGE",
        "call_TO_TIMESTAMP__2",
        "DSL",
        "val",
        "beginTime",
        "toInstant",
        "toEpochMilli",
        "CWMS_UTIL_PACKAGE",
        "call_TO_TIMESTAMP__2",
        "DSL",
        "val",
        "endTime",
        "toInstant",
        "toEpochMilli",
        "DSL",
        "inline",
        "officeId",
        "metadataQuery",
        "dsl",
        "select",
        "tsId",
        "officeId",
        "unit",
        "CWMS_TS_PACKAGE",
        "call_GET_INTERVAL",
        "tsId",
        "total",
        "DSL",
        "val",
        "total",
        "DSL",
        "selectCount",
        "retrieveTable",
        "asField",
        "logger",
        "finest",
        "metadataQuery",
        "getSQL",
        "ParamType",
        "INLINED",
        "timeseries",
        "metadataQuery",
        "fetchOne",
        "tsMetadata",
        "recordCursor",
        "recordPageSize",
        "tsMetadata",
        "getValue",
        "tsMetadata",
        "getValue",
        "tsMetadata",
        "getValue",
        "beginTime",
        "endTime",
        "tsMetadata",
        "getValue",
        "Duration",
        "ofMinutes",
        "tsMetadata",
        "get",
        "tsMetadata",
        "getValue",
        "pageSize",
        "query",
        "dsl",
        "select",
        "DSL",
        "field",
        "CWMS_ROUNDING_PACKAGE",
        "call_ROUND_DD_F",
        "DSL",
        "field",
        "DSL",
        "inline",
        "DSL",
        "inline",
        "CWMS_TS_PACKAGE",
        "call_NORMALIZE_QUALITY",
        "DSL",
        "nvl",
        "DSL",
        "field",
        "DSL",
        "inline",
        "retrieveTable",
        "where",
        "DSL",
        "field",
        "greaterOrEqual",
        "CWMS_UTIL_PACKAGE",
        "call_TO_TIMESTAMP__2",
        "DSL",
        "nvl",
        "DSL",
        "val",
        "tsCursor",
        "tsCursor",
        "toInstant",
        "toEpochMilli",
        "DSL",
        "val",
        "beginTime",
        "toInstant",
        "toEpochMilli",
        "DSL",
        "field",
        "lessOrEqual",
        "CWMS_UTIL_PACKAGE",
        "call_TO_TIMESTAMP__2",
        "DSL",
        "val",
        "endTime",
        "toInstant",
        "toEpochMilli",
        "pageSize",
        "query",
        "limit",
        "DSL",
        "val",
        "pageSize",
        "logger",
        "finest",
        "query",
        "getSQL",
        "ParamType",
        "INLINED",
        "query",
        "fetchInto",
        "tsRecord",
        "timeseries",
        "addValue",
        "tsRecord",
        "getValue",
        "tsRecord",
        "getValue",
        "tsRecord",
        "getValue",
        "timeseries",
        "page",
        "pageSize",
        "office",
        "total",
        "tsCursor",
        "page",
        "page",
        "isEmpty",
        "count",
        "dsl",
        "select",
        "count",
        "asterisk",
        "AV_CWMS_TS_ID2",
        "office",
        "isPresent",
        "count",
        "where",
        "AV_CWMS_TS_ID2",
        "DB_OFFICE_ID",
        "eq",
        "office",
        "get",
        "total",
        "count",
        "fetchOne",
        "value1",
        "logger",
        "fine",
        "parts",
        "CwmsDTOPaginated",
        "decodeCursor",
        "page",
        "logger",
        "fine",
        "join",
        "parts",
        "p",
        "parts",
        "logger",
        "finest",
        "p",
        "parts",
        "length",
        "tsCursor",
        "parts",
        "split",
        "total",
        "parseInt",
        "parts",
        "query",
        "dsl",
        "select",
        "AV_CWMS_TS_ID2",
        "DB_OFFICE_ID",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "AV_CWMS_TS_ID2",
        "UNIT_ID",
        "AV_CWMS_TS_ID2",
        "office",
        "isPresent",
        "query",
        "where",
        "AV_CWMS_TS_ID2",
        "DB_OFFICE_ID",
        "upper",
        "eq",
        "office",
        "get",
        "toUpperCase",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "upper",
        "greaterThan",
        "tsCursor",
        "query",
        "where",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "upper",
        "gt",
        "tsCursor",
        "query",
        "orderBy",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "limit",
        "pageSize",
        "logger",
        "finest",
        "query",
        "getSQL",
        "ParamType",
        "INLINED",
        "result",
        "query",
        "fetch",
        "entries",
        "result",
        "stream",
        "e",
        "e",
        "get",
        "AV_CWMS_TS_ID2",
        "DB_OFFICE_ID",
        "e",
        "get",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "e",
        "get",
        "AV_CWMS_TS_ID2",
        "UNIT_ID",
        "collect",
        "Collectors",
        "toList",
        "tsCursor",
        "total",
        "pageSize",
        "entries",
        "tOfficeId",
        "tsId",
        "unit",
        "twoWeeksFromNow",
        "twoWeeksAgo",
        "retval",
        "view",
        "AV_TSV_DQU",
        "AV_TSV_DQU",
        "nestedCondition",
        "view",
        "ALIASED_ITEM",
        "isNull",
        "view",
        "VALUE",
        "isNotNull",
        "view",
        "CWMS_TS_ID",
        "eq",
        "tsId",
        "view",
        "OFFICE_ID",
        "eq",
        "tOfficeId",
        "twoWeeksFromNow",
        "nestedCondition",
        "nestedCondition",
        "view",
        "DATE_TIME",
        "lt",
        "twoWeeksFromNow",
        "twoWeeksAgo",
        "nestedCondition",
        "nestedCondition",
        "view",
        "DATE_TIME",
        "gt",
        "twoWeeksAgo",
        "maxFieldName",
        "select",
        "dsl",
        "select",
        "max",
        "view",
        "DATE_TIME",
        "maxFieldName",
        "view",
        "where",
        "nestedCondition",
        "groupBy",
        "view",
        "TS_CODE",
        "dquRecord",
        "dsl",
        "select",
        "asterisk",
        "view",
        "where",
        "view",
        "DATE_TIME",
        "select",
        "view",
        "CWMS_TS_ID",
        "eq",
        "tsId",
        "view",
        "OFFICE_ID",
        "eq",
        "tOfficeId",
        "view",
        "UNIT_ID",
        "eq",
        "unit",
        "view",
        "VALUE",
        "isNotNull",
        "view",
        "ALIASED_ITEM",
        "isNull",
        "fetchOne",
        "dquRecord",
        "retval",
        "dquRecord",
        "r",
        "dqu",
        "r",
        "into",
        "view",
        "tsv",
        "r",
        "id",
        "dqu",
        "getOFFICE_ID",
        "dqu",
        "getTS_CODE",
        "dqu",
        "getUNIT_ID",
        "dqu",
        "getDATE_TIME",
        "tsv",
        "id",
        "dqu",
        "getCWMS_TS_ID",
        "dqu",
        "getVERSION_DATE",
        "dqu",
        "getDATA_ENTRY_DATE",
        "dqu",
        "getVALUE",
        "dqu",
        "getQUALITY_CODE",
        "dqu",
        "getSTART_DATE",
        "dqu",
        "getEND_DATE",
        "tsv",
        "retval",
        "tsIds",
        "startDate",
        "endDate",
        "retval",
        "Collections",
        "emptyList",
        "tsIds",
        "tsIds",
        "isEmpty",
        "start",
        "startDate",
        "getTime",
        "end",
        "endDate",
        "getTime",
        "tsvView",
        "AV_TSV",
        "AV_TSV",
        "tsView",
        "AV_CWMS_TS_ID2",
        "retval",
        "dsl",
        "select",
        "tsvView",
        "asterisk",
        "tsView",
        "CWMS_TS_ID",
        "tsvView",
        "join",
        "tsView",
        "on",
        "tsvView",
        "TS_CODE",
        "eq",
        "tsView",
        "TS_CODE",
        "cast",
        "where",
        "tsView",
        "CWMS_TS_ID",
        "tsIds",
        "tsvView",
        "DATE_TIME",
        "ge",
        "start",
        "tsvView",
        "DATE_TIME",
        "lt",
        "end",
        "tsvView",
        "START_DATE",
        "le",
        "end",
        "tsvView",
        "END_DATE",
        "gt",
        "start",
        "orderBy",
        "tsvView",
        "DATE_TIME",
        "fetch",
        "jrecord",
        "buildTsvFromViewRow",
        "jrecord",
        "into",
        "tsvView",
        "retval",
        "NotNull",
        "into",
        "id",
        "into",
        "getTS_CODE",
        "into",
        "getDATE_TIME",
        "into",
        "getVERSION_DATE",
        "into",
        "getDATA_ENTRY_DATE",
        "id",
        "into",
        "getVALUE",
        "into",
        "getQUALITY_CODE",
        "into",
        "getSTART_DATE",
        "into",
        "getEND_DATE",
        "tsIds",
        "pastdate",
        "futuredate",
        "retval",
        "tsIds",
        "tsIds",
        "isEmpty",
        "tsvView",
        "AV_TSV_DQU",
        "AV_TSV_DQU",
        "tsView",
        "AV_CWMS_TS_ID2",
        "innerSelect",
        "dsl",
        "select",
        "tsvView",
        "asterisk",
        "max",
        "tsvView",
        "DATE_TIME",
        "over",
        "partitionBy",
        "tsvView",
        "TS_CODE",
        "tsView",
        "CWMS_TS_ID",
        "tsvView",
        "join",
        "tsView",
        "on",
        "tsvView",
        "TS_CODE",
        "eq",
        "tsView",
        "TS_CODE",
        "cast",
        "where",
        "tsView",
        "CWMS_TS_ID",
        "tsIds",
        "tsvView",
        "VALUE",
        "isNotNull",
        "tsvView",
        "DATE_TIME",
        "lt",
        "futuredate",
        "tsvView",
        "DATE_TIME",
        "gt",
        "pastdate",
        "tsvView",
        "START_DATE",
        "le",
        "futuredate",
        "tsvView",
        "END_DATE",
        "gt",
        "pastdate",
        "queryFields",
        "tsView",
        "CWMS_TS_ID",
        "tsvView",
        "OFFICE_ID",
        "tsvView",
        "TS_CODE",
        "tsvView",
        "UNIT_ID",
        "tsvView",
        "DATE_TIME",
        "tsvView",
        "VERSION_DATE",
        "tsvView",
        "DATA_ENTRY_DATE",
        "tsvView",
        "VALUE",
        "tsvView",
        "QUALITY_CODE",
        "tsvView",
        "START_DATE",
        "tsvView",
        "END_DATE",
        "fields",
        "Arrays",
        "stream",
        "queryFields",
        "Field",
        "getName",
        "DSL",
        "field",
        "collect",
        "Collectors",
        "toList",
        "dsl",
        "select",
        "fields",
        "innerSelect",
        "where",
        "field",
        "eq",
        "innerSelect",
        "field",
        "forEach",
        "jrecord",
        "recentValue",
        "buildRecentValue",
        "tsvView",
        "tsView",
        "jrecord",
        "retval",
        "add",
        "recentValue",
        "retval",
        "NotNull",
        "tsvView",
        "tsView",
        "jrecord",
        "buildRecentValue",
        "tsvView",
        "jrecord",
        "tsView",
        "CWMS_TS_ID",
        "getName",
        "NotNull",
        "tsvView",
        "tsView",
        "jrecord",
        "buildRecentValue",
        "tsvView",
        "jrecord",
        "tsView",
        "TS_ID",
        "getName",
        "NotNull",
        "tsvView",
        "jrecord",
        "tsColumnName",
        "dataEntryDate",
        "dataEntryDate",
        "tsv",
        "buildTsvDqu",
        "tsvView",
        "jrecord",
        "dataEntryDate",
        "tsId",
        "jrecord",
        "getValue",
        "tsColumnName",
        "tsId",
        "tsv",
        "NotNull",
        "tsvView",
        "jrecord",
        "dataEntryDate",
        "id",
        "buildDquId",
        "tsvView",
        "jrecord",
        "id",
        "jrecord",
        "getValue",
        "tsvView",
        "CWMS_TS_ID",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "VERSION_DATE",
        "getName",
        "dataEntryDate",
        "jrecord",
        "getValue",
        "tsvView",
        "VALUE",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "QUALITY_CODE",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "START_DATE",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "END_DATE",
        "getName",
        "office",
        "categoryId",
        "groupId",
        "pastLimit",
        "futureLimit",
        "retval",
        "categoryId",
        "groupId",
        "tsvView",
        "AV_TSV_DQU",
        "AV_TSV_DQU",
        "tsView",
        "AV_TS_GRP_ASSGN",
        "AV_TS_GRP_ASSGN",
        "innerSelect",
        "dsl",
        "select",
        "tsvView",
        "asterisk",
        "tsView",
        "TS_ID",
        "tsView",
        "ATTRIBUTE",
        "max",
        "tsvView",
        "DATE_TIME",
        "over",
        "partitionBy",
        "tsvView",
        "TS_CODE",
        "tsView",
        "TS_ID",
        "tsvView",
        "join",
        "tsView",
        "on",
        "tsvView",
        "TS_CODE",
        "eq",
        "tsView",
        "TS_CODE",
        "cast",
        "where",
        "tsView",
        "DB_OFFICE_ID",
        "eq",
        "office",
        "tsView",
        "CATEGORY_ID",
        "eq",
        "categoryId",
        "tsView",
        "GROUP_ID",
        "eq",
        "groupId",
        "tsvView",
        "VALUE",
        "isNotNull",
        "tsvView",
        "DATE_TIME",
        "lt",
        "futureLimit",
        "tsvView",
        "DATE_TIME",
        "gt",
        "pastLimit",
        "tsvView",
        "START_DATE",
        "le",
        "futureLimit",
        "tsvView",
        "END_DATE",
        "gt",
        "pastLimit",
        "queryFields",
        "tsvView",
        "OFFICE_ID",
        "tsvView",
        "TS_CODE",
        "tsvView",
        "DATE_TIME",
        "tsvView",
        "VERSION_DATE",
        "tsvView",
        "DATA_ENTRY_DATE",
        "tsvView",
        "VALUE",
        "tsvView",
        "QUALITY_CODE",
        "tsvView",
        "START_DATE",
        "tsvView",
        "END_DATE",
        "tsvView",
        "UNIT_ID",
        "tsView",
        "TS_ID",
        "tsView",
        "ATTRIBUTE",
        "fields",
        "Arrays",
        "stream",
        "queryFields",
        "Field",
        "getName",
        "DSL",
        "field",
        "collect",
        "Collectors",
        "toList",
        "dsl",
        "select",
        "fields",
        "innerSelect",
        "where",
        "field",
        "tsvView",
        "DATE_TIME",
        "getName",
        "eq",
        "innerSelect",
        "field",
        "orderBy",
        "field",
        "tsView",
        "ATTRIBUTE",
        "getName",
        "forEach",
        "jrecord",
        "recentValue",
        "buildRecentValue",
        "tsvView",
        "tsView",
        "jrecord",
        "retval",
        "add",
        "recentValue",
        "retval",
        "NotNull",
        "tsvView",
        "jrecord",
        "jrecord",
        "getValue",
        "tsvView",
        "OFFICE_ID",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "TS_CODE",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "UNIT_ID",
        "getName",
        "jrecord",
        "getValue",
        "tsvView",
        "DATE_TIME",
        "getName",
        "input",
        "dsl",
        "connection",
        "connection",
        "tsDao",
        "CwmsDbServiceLookup",
        "buildCwmsDb",
        "connection",
        "utcOffsetMinutes",
        "intervalForward",
        "intervalBackward",
        "versionedFlag",
        "activeFlag",
        "tsDao",
        "createTsCodeBigInteger",
        "connection",
        "input",
        "getOfficeId",
        "input",
        "getName",
        "utcOffsetMinutes",
        "intervalForward",
        "intervalBackward",
        "versionedFlag",
        "activeFlag",
        "input",
        "dsl",
        "connection",
        "connection",
        "store",
        "connection",
        "input",
        "getOfficeId",
        "input",
        "getName",
        "input",
        "getUnits",
        "input",
        "getValues",
        "input",
        "name",
        "input",
        "getName",
        "timeseriesExists",
        "name",
        "name",
        "dsl",
        "connection",
        "connection",
        "store",
        "connection",
        "input",
        "getOfficeId",
        "name",
        "input",
        "getUnits",
        "input",
        "getValues",
        "connection",
        "officeId",
        "tsId",
        "units",
        "values",
        "tsDao",
        "CwmsDbServiceLookup",
        "buildCwmsDb",
        "connection",
        "count",
        "values",
        "values",
        "size",
        "timeArray",
        "count",
        "valueArray",
        "count",
        "qualityArray",
        "count",
        "values",
        "values",
        "isEmpty",
        "iter",
        "values",
        "iterator",
        "i",
        "iter",
        "hasNext",
        "i",
        "value",
        "iter",
        "next",
        "timeArray",
        "i",
        "value",
        "getDateTime",
        "getTime",
        "valueArray",
        "i",
        "value",
        "getValue",
        "qualityArray",
        "i",
        "value",
        "getQualityCode",
        "versionDate",
        "createAsLrts",
        "completedAt",
        "tsDao",
        "store",
        "connection",
        "officeId",
        "tsId",
        "units",
        "timeArray",
        "valueArray",
        "qualityArray",
        "count",
        "STORE_RULE",
        "OVERRIDE_PROTECTION",
        "versionDate",
        "createAsLrts",
        "officeId",
        "tsId",
        "dsl",
        "connection",
        "connection",
        "tsDao",
        "CwmsDbServiceLookup",
        "buildCwmsDb",
        "connection",
        "tsDao",
        "deleteAll",
        "connection",
        "officeId",
        "tsId",
        "tsId",
        "dsl",
        "select",
        "AV_CWMS_TS_ID2",
        "AV_CWMS_TS_ID2",
        "TS_CODE",
        "AV_CWMS_TS_ID2",
        "AV_CWMS_TS_ID2",
        "where",
        "AV_CWMS_TS_ID2",
        "AV_CWMS_TS_ID2",
        "CWMS_TS_ID",
        "eq",
        "tsId",
        "fetchOptional",
        "AV_CWMS_TS_ID2",
        "AV_CWMS_TS_ID2",
        "TS_CODE",
        "orElse",
        "tsId",
        "retrieveTsCode",
        "tsId",
        "tsId",
        "numMinutes",
        "intervalVal",
        "CWMS_TS_PACKAGE",
        "call_GET_INTERVAL",
        "dsl",
        "configuration",
        "tsId",
        "intervalVal",
        "numMinutes",
        "intervalVal",
        "longValue",
        "e",
        "e",
        "getMessage",
        "contains",
        "e",
        "Duration",
        "ofMinutes",
        "numMinutes"
    ],
    "literals": [
        "\"DELETE INSERT\"",
        "\"Time cannot contain only an offset without the timezone.\"",
        "\"Decoded cursor\"",
        "\"SI\"",
        "\"EN\"",
        "\"deprecated\"",
        "\"table(\"",
        "\"UTC\"",
        "\")\"",
        "\"NAME\"",
        "\"OFFICE_ID\"",
        "\"UNITS\"",
        "\"INTERVAL\"",
        "\"TOTAL\"",
        "\"TOTAL\"",
        "\"TOTAL\"",
        "\"NAME\"",
        "\"OFFICE_ID\"",
        "\"UNITS\"",
        "\"INTERVAL\"",
        "\"INTERVAL\"",
        "\"DATE_TIME\"",
        "\"DATE_TIME\"",
        "\"VALUE\"",
        "\"5567899996\"",
        "\"VALUE\"",
        "\"QUALITY_CODE\"",
        "\"QUALITY_CODE\"",
        "\"DATE_TIME\"",
        "\"DATE_TIME\"",
        "\"DATE_TIME\"",
        "\"VALUE\"",
        "\"QUALITY_CODE\"",
        "\"*\"",
        "\"getting non-default page\"",
        "\"|||\"",
        "\"decoded cursor: \"",
        "\"|||\"",
        "\"/\"",
        "\"MAX_DATE_TIME\"",
        "\"max_date_time\"",
        "\"DATE_TIME\"",
        "\"max_date_time\"",
        "\"max_date_time\"",
        "\"max_date_time\"",
        "\"Cannot update a non-existant Timeseries. Create \"",
        "\" first.\"",
        "\"ORA-01403\""
    ],
    "variables": [
        "beginTime",
        "dataEntryDate"
    ],
    "comments": [
        "Parse the date time in the best format it can find. Timezone is optional, but use it if it's found.",
        "Parse the date time in the best format it can find. Timezone is optional, but use it if it's found.",
        "If the end time doesn't have a timezone, but begin did, use begin's timezone as end's.",
        "If no timezone was found, get it from begin_time",
        "Use the pageSize from the original cursor, for consistent paging",
        "Last item is pageSize",
        "This code assumes the database timezone is in UTC (per Oracle recommendation)",
        "Wrap in table() so JOOQ can parse the result",
        "All times are sent as UTC to the database, regardless of requested timezone.",
        "If we don't know the total, fetch it from the database (only for first fetch).",
        "Total is only an estimate, as it can change if fetching current data, or the timeseries otherwise changes between queries.",
        "get totally from page",
        ".map( e -> e.into(usace.cwms.db.jooq.codegen.tables.records.AV_CWMS_TIMESERIES_ID2) )",
        "Finds the single most recent TsvDqu within the time window.",
        "Is this really optional?",
        "This is similar to the code used for sparklines...",
        "Finds all the Tsv data points in the time range for all the specified tsIds.",
        "Finds single most recent value within the window for each of the tsCodes",
        "look them back up by name b/c we are using them on results of innerselect.",
        "I want to select tsvView.asterisk but we are selecting from an inner select and",
        "even though the inner select selects tsvView.asterisk it isn't the same.",
        "So we will just select the fields we want.  Unfortunately that means our results",
        "won't map into AV_TSV.AV_TSV",
        "TODO:",
        "!!! skipping DATA_ENTRY_DATE for now.  Need to figure out how to fix mapping in jooq.",
        "!! dataEntryDate= jrecord.getValue(\"data_entry_date\", Timestamp.class); // maps to oracle.sql.TIMESTAMP",
        "!!!",
        "!!!",
        "should we look at the daterange and possible use 30D view?",
        "I want to select tsvView.asterisk but we are selecting from an inner select and",
        "even though the inner select selects tsvView.asterisk it isn't the same.",
        "So we will just select the fields we want.",
        "Unfortunately that means our results won't map into AV_TSV.AV_TSV",
        "Where does this come from?",
        "no data found."
    ],
    "docstrings": [],
    "functions": [
        "TimeSeriesDaoImpl",
        "getTimeseries",
        "ZonedDateTime",
        "asZonedDateTime",
        "TimeSeries",
        "getTimeseries",
        "Catalog",
        "getTimeSeriesCatalog",
        "TsvDqu",
        "findMostRecent",
        "findInDateRange",
        "Tsv",
        "buildTsvFromViewRow",
        "findMostRecentsInRange",
        "RecentValue",
        "buildRecentValue",
        "RecentValue",
        "buildRecentValue",
        "RecentValue",
        "buildRecentValue",
        "TsvDqu",
        "buildTsvDqu",
        "findRecentsInRange",
        "TsvDquId",
        "buildDquId",
        "create",
        "store",
        "update",
        "store",
        "BigDecimal",
        "retrieveTsCode",
        "timeseriesExists",
        "Duration",
        "getDuration"
    ],
    "classes": [
        "TimeSeriesDaoImpl"
    ]
}