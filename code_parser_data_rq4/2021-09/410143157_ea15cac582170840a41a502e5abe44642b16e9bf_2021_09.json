{
    "identifiers": [
        "BinaryRepresentor",
        "Xunit",
        "BinaryRepresentorTests",
        "Fact",
        "BitCalculator",
        "Calculate",
        "data",
        "isLittleEndiann",
        "bitOffset",
        "valueSize",
        "preScalingOffset",
        "postScalingOffset",
        "multiplier",
        "divider",
        "Assert",
        "Equal",
        "result",
        "Fact",
        "BitCalculator",
        "Calculate",
        "data",
        "isLittleEndiann",
        "bitOffset",
        "valueSize",
        "preScalingOffset",
        "postScalingOffset",
        "multiplier",
        "divider",
        "Assert",
        "Equal",
        "result"
    ],
    "literals": [
        "\"Illegal Operation\"",
        "\"Illegal Operation\""
    ],
    "variables": [
        "data",
        "isLittleEndiann",
        "bitOffset",
        "valueSize",
        "preScalingOffset",
        "postScalingOffset",
        "multiplier",
        "divider",
        "result",
        "data",
        "isLittleEndiann",
        "bitOffset",
        "valueSize",
        "preScalingOffset",
        "postScalingOffset",
        "multiplier",
        "divider",
        "result"
    ],
    "comments": [
        "Arrange",
        "Arrange"
    ],
    "docstrings": [],
    "functions": [
        "Calculate_WithDivisor0_ShouldReturnIllegalOperation",
        "Calculate_WithSumOfBitOffsetAndValueSizeGreaterThan8TimesDataLength_ShouldReturnIllegalOperation"
    ],
    "classes": [
        "CalculateTest"
    ]
}