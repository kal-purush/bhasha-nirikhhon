{
    "identifiers": [
        "useQuery",
        "useMutation",
        "gql",
        "useApp",
        "hasura",
        "key",
        "key",
        "useAppPage",
        "pageId",
        "useQuery",
        "hasura",
        "hasura",
        "gql",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "refetch",
        "loading",
        "error",
        "useAppPageCollection",
        "useApp",
        "useQuery",
        "hasura",
        "hasura",
        "gql",
        "data",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "v",
        "refetch",
        "loading",
        "error",
        "useMutateAppPage",
        "useApp",
        "useMutation",
        "hasura",
        "hasura",
        "gql",
        "insertAppPage",
        "values",
        "key",
        "insertAppPageHandler",
        "values",
        "useMutation",
        "hasura",
        "hasura",
        "gql",
        "updateAppPage",
        "values",
        "key",
        "updateAppPageHandler",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values",
        "values"
    ],
    "literals": [
        "'@apollo/react-hooks'",
        "'graphql-tag'",
        "'../contexts/AppContext'",
        "'../hasura'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "query GET_APP_PAGE($pageId: uuid!) {\n        app_page_by_pk(id: $pageId) {\n          id\n          path\n          title\n          craft_data\n          updated_at\n          published_at\n          options\n          editor_id\n          editor {\n            name\n          }\n        }\n      }",
        "query GET_APP_PAGE_COLLECTION($appId: String!) {\n        app_page(where: { app_id: { _eq: $appId }, is_deleted: { _eq: false } }) {\n          id\n          path\n          title\n          craft_data\n          updated_at\n          published_at\n          options\n          editor_id\n          editor {\n            name\n          }\n        }\n      }",
        "mutation INSERT_APP_PAGE($appId: String!, $path: String, $editorId: String!, $title: String!, $craftData: jsonb) {\n      insert_app_page_one(\n        object: { app_id: $appId, path: $path, title: $title, editor_id: $editorId, craft_data: $craftData }\n      ) {\n        id\n      }\n    }",
        "string",
        "string",
        "string",
        "string",
        "mutation UPDATE_APP_PAGE($pageId: uuid!, $updated: app_page_set_input) {\n      update_app_page_by_pk(pk_columns: { id: $pageId }, _set: $updated) {\n        id\n      }\n    }",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "useAppPage",
        "appPage",
        "useAppPageCollection",
        "appId",
        "appPages",
        "useMutateAppPage",
        "appId",
        "insertAppPageHandler",
        "insertAppPage",
        "updateAppPageHandler",
        "updateAppPage"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}