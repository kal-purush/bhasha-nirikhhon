{
    "identifiers": [
        "os",
        "datetime",
        "datetime",
        "timedelta",
        "airflow",
        "DAG",
        "airflow",
        "contrib",
        "operators",
        "kubernetes_pod_operator",
        "KubernetesPodOperator",
        "dags",
        "airflow_utils",
        "DATA_IMAGE",
        "clone_and_setup_extraction_cmd",
        "mm_failed_task",
        "pod_defaults",
        "pod_env_vars",
        "xs_warehouse",
        "dags",
        "kube_secrets",
        "BLAPI_TEST_DATABASE_URL",
        "BLAPI_TEST_TOKEN",
        "BLAPI_TEST_URL",
        "os",
        "environ",
        "copy",
        "pod_env_vars",
        "mm_failed_task",
        "timedelta",
        "minutes",
        "timedelta",
        "hours",
        "datetime",
        "DAG",
        "default_args",
        "default_args",
        "schedule_interval",
        "clone_and_setup_extraction_cmd",
        "KubernetesPodOperator",
        "pod_defaults",
        "image",
        "DATA_IMAGE",
        "task_id",
        "name",
        "secrets",
        "BLAPI_TEST_DATABASE_URL",
        "BLAPI_TEST_TOKEN",
        "BLAPI_TEST_URL",
        "env_vars",
        "env_vars",
        "arguments",
        "run_nightly_billing_cmd",
        "dag",
        "dag"
    ],
    "literals": [
        "\"catchup\"",
        "\"depends_on_past\"",
        "\"owner\"",
        "\"airflow\"",
        "\"on_failure_callback\"",
        "\"retries\"",
        "\"retry_delay\"",
        "\"sla\"",
        "\"start_date\"",
        "\"test_env_nightly_billing\"",
        "\"0 1 2-31 * *\"",
        "f\"\"\"\n    {clone_and_setup_extraction_cmd} &&\n    python billing/run_nightly_billing.py\n\"\"\"",
        "\"test-env-run-nightly-billing\"",
        "\"test-env-run-nightly-billing\""
    ],
    "variables": [
        "env",
        "env_vars",
        "default_args",
        "dag",
        "run_nightly_billing_cmd",
        "run_nightly_billing"
    ],
    "comments": [
        "Load the env vars into a dict and set Secrets",
        "Default arguments for the DAG",
        "We purposely don't run this job on the first day of the month, because stripe will",
        "create the draft invoices for the previous month and we handle that in blapi directly"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}