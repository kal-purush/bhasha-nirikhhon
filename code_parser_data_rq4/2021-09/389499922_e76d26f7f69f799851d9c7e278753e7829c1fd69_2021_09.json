{
    "identifiers": [
        "Xunit",
        "Collections",
        "Generic",
        "CSharpParserGenerator",
        "Test",
        "Parsers",
        "LALRGrammar",
        "Fact",
        "CompileParser",
        "parser",
        "Parse",
        "Assert",
        "objectResult",
        "Success",
        "Lexer",
        "ELang",
        "LexerDefinition",
        "ELang",
        "ELang",
        "TokenRegex",
        "ELang",
        "Ignore",
        "ELang",
        "a",
        "ELang",
        "b",
        "ELang",
        "c",
        "ELang",
        "d",
        "Lexer",
        "ELang",
        "tokens",
        "ELang",
        "Ignore",
        "Parser",
        "ELang",
        "SyntaxDefinition",
        "ELang",
        "ELang",
        "DefinitionRules",
        "ELang",
        "X",
        "DefinitionRules",
        "Token",
        "ELang",
        "M",
        "ELang",
        "a",
        "Token",
        "ELang",
        "b",
        "ELang",
        "M",
        "ELang",
        "c",
        "Token",
        "ELang",
        "d",
        "ELang",
        "c",
        "Token",
        "ELang",
        "b",
        "ELang",
        "d",
        "ELang",
        "a",
        "ELang",
        "M",
        "DefinitionRules",
        "Token",
        "ELang",
        "d",
        "ParserGenerator",
        "ELang",
        "GetLexer",
        "rules",
        "CompileParser",
        "ELang",
        "X",
        "M",
        "a",
        "b",
        "c",
        "d",
        "Ignore"
    ],
    "literals": [
        "\"d a\"",
        "\"[ \\\\n]+\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\""
    ],
    "variables": [
        "parser",
        "objectResult",
        "tokens",
        "rules"
    ],
    "comments": [
        "Object result",
        "S' -> X",
        "X -> M a",
        "X -> b M c",
        "X -> d c",
        "X -> b d a",
        "M -> d"
    ],
    "docstrings": [],
    "functions": [
        "ParserCastTest",
        "GetLexer",
        "CompileParser"
    ],
    "classes": [
        "LALRGrammar"
    ]
}