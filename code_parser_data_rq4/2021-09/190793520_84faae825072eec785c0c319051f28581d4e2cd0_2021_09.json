{
    "identifiers": [
        "IO",
        "Runtime",
        "InteropServices",
        "LLVMSharp",
        "Interop",
        "Ubiquity",
        "NET",
        "Llvm",
        "Ubiquity",
        "NET",
        "Llvm",
        "Values",
        "Microsoft",
        "Quantum",
        "QsCompiler",
        "Testing",
        "Qir",
        "DllImport",
        "ExactSpelling",
        "CallingConvention",
        "Runtime",
        "InteropServices",
        "CallingConvention",
        "Cdecl",
        "seed",
        "DllImport",
        "ExactSpelling",
        "CallingConvention",
        "Runtime",
        "InteropServices",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "driver",
        "trackAllocatedObjects",
        "UnmanagedFunctionPointer",
        "Runtime",
        "InteropServices",
        "CallingConvention",
        "Cdecl",
        "SimpleFunction",
        "args",
        "BuildAndRun",
        "args",
        "args",
        "pathToBitcode",
        "functionNames",
        "InitializeQirContext",
        "CreateFullstateSimulator",
        "File",
        "Exists",
        "pathToBitcode",
        "FileNotFoundException",
        "pathToBitcode",
        "Context",
        "BitcodeModule",
        "LoadFrom",
        "pathToBitcode",
        "context",
        "Verify",
        "verifyMessage",
        "ExternalException",
        "verifyMessage",
        "LLVM",
        "InitializeNativeTarget",
        "LLVM",
        "InitializeNativeAsmParser",
        "LLVM",
        "InitializeNativeAsmPrinter",
        "ModuleHandle",
        "CreateMCJITCompiler",
        "functionName",
        "functionNames",
        "TryGetFunction",
        "functionName",
        "IrFunction",
        "funcDef",
        "ExternalException",
        "functionName",
        "engine",
        "GetPointerToGlobal",
        "SimpleFunction",
        "funcDef",
        "ValueHandle"
    ],
    "literals": [
        "\"Microsoft.Quantum.Qir.QSharp.Core\"",
        "\"Microsoft.Quantum.Qir.Runtime\""
    ],
    "variables": [
        "context",
        "engine"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation.",
        "Licensed under the MIT License.",
        "For testing purposes I needed to make this an executable such that we can properly detect when the invoked",
        "native code throws a runtime exception; I failed to find out how to catch these exceptions as part of a unit test",
        "(usually that should be possible, but it might require a different setup - rather than do this, I opted for",
        "making it an out of process call for unit testing purposes).",
        "To get this line to work, I had to change the CreateFullstateSimulator API to use raw pointers instead of shared pointers,",
        "and I had to update both calls to be \"extern 'C'\" otherwise name mangling makes then impossible to call here.",
        "This should be revised more broadly as we move the runtime to a C-style API for ABI compatibility across langauges."
    ],
    "docstrings": [],
    "functions": [
        "IntPtr",
        "CreateFullstateSimulator",
        "InitializeQirContext",
        "Main",
        "BuildAndRun"
    ],
    "classes": [
        "JitCompilation"
    ]
}