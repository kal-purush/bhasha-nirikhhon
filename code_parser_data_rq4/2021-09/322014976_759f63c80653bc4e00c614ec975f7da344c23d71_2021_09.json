{
    "identifiers": [
        "typing",
        "Union",
        "optimade",
        "models",
        "EntryResource",
        "optimade",
        "server",
        "mappers",
        "entries",
        "BaseResourceMapper",
        "OptimadeBaseResourceMapper",
        "OptimadeBaseResourceMapper",
        "classmethod",
        "cls",
        "results",
        "Union",
        "Union",
        "EntryResource",
        "EntryResource",
        "BaseResourceMapper",
        "cls",
        "deserialize",
        "results"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Generic Resource Mapper that defines and performs the mapping\n    between objects in the database and the resource objects defined by\n    the specification.\n\n    Note:\n        This is a \"wrapped\" sub-class to make certain methods asynchronous.\n\n    Attributes:\n        ALIASES: a tuple of aliases between\n            OPTIMADE field names and the field names in the database ,\n            e.g. `((\"elements\", \"custom_elements_field\"))`.\n        LENGTH_ALIASES: a tuple of aliases between\n            a field name and another field that defines its length, to be used\n            when querying, e.g. `((\"elements\", \"nelements\"))`.\n            e.g. `((\"elements\", \"custom_elements_field\"))`.\n        ENTRY_RESOURCE_CLASS: The entry type that this mapper corresponds to.\n        PROVIDER_FIELDS: a tuple of extra field names that this\n            mapper should support when querying with the database prefix.\n        TOP_LEVEL_NON_ATTRIBUTES_FIELDS: the set of top-level\n            field names common to all endpoints.\n        SUPPORTED_PREFIXES: The set of prefixes registered by this mapper.\n        ALL_ATTRIBUTES: The set of attributes defined across the entry\n            resource class and the server configuration.\n        ENTRY_RESOURCE_ATTRIBUTES: A dictionary of attributes and their definitions\n            defined by the schema of the entry resource class.\n        ENDPOINT: The expected endpoint name for this resource, as defined by\n            the `type` in the schema of the entry resource class.\n\n    \"\"\""
    ],
    "functions": [
        "deserialize"
    ],
    "classes": [
        "BaseResourceMapper"
    ]
}