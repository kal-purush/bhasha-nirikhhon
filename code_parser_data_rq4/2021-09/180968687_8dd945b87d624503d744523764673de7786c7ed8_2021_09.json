{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "glob",
        "sys",
        "getopt",
        "name",
        "name",
        "script",
        "nc",
        "nxios_min",
        "nxios_max",
        "sys",
        "exit",
        "script",
        "nc",
        "nxios_min",
        "nxios_max",
        "argv",
        "name",
        "script",
        "nc",
        "nxios_min",
        "nxios_max",
        "getopt",
        "getopt",
        "argv",
        "getopt",
        "GetoptError",
        "usage",
        "name",
        "opt",
        "arg",
        "opts",
        "opt",
        "usage",
        "name",
        "opt",
        "arg",
        "opt",
        "arg",
        "opt",
        "arg",
        "opt",
        "arg",
        "os",
        "getcwd",
        "file_name",
        "glob",
        "glob",
        "cwd",
        "file_name",
        "sort",
        "i",
        "file_name",
        "pd",
        "read_csv",
        "i",
        "delim_whitespace",
        "header",
        "names",
        "j",
        "len",
        "fl",
        "jpni",
        "append",
        "fl",
        "j",
        "jpnj",
        "append",
        "fl",
        "j",
        "proc",
        "append",
        "fl",
        "j",
        "fl",
        "j",
        "nc",
        "j",
        "fl",
        "j",
        "nc",
        "nc",
        "fl",
        "j",
        "xi",
        "nxios_min",
        "xi",
        "nc",
        "xi",
        "nxios_max",
        "nxios_max",
        "xios",
        "append",
        "xi",
        "outpath",
        "open",
        "outfile",
        "write",
        "i",
        "len",
        "xios",
        "write",
        "script",
        "jpni",
        "i",
        "jpnj",
        "i",
        "proc",
        "i",
        "xios",
        "i",
        "close",
        "set_default",
        "len",
        "sys",
        "argv",
        "usage",
        "sys",
        "argv",
        "parse",
        "sys",
        "argv",
        "os",
        "path",
        "basename",
        "sys",
        "argv",
        "mkrun"
    ],
    "literals": [
        "' '",
        "'USAGE: '",
        "' -h  -n <script_name> -c  <cores>  -x <nxios_min>'",
        "' '",
        "'  PURPOSE:'",
        "'     This python script ends up with a bash script (run.sh) holding'",
        "'     the ad-hoc command lines for submitting a series of simulations'",
        "'     with different domain decomposition, hence total number of cores.'",
        "'  '",
        "'     It assumes that you have already in the local directory an elementary'",
        "'     script launching NEMO and taking 4 online arguments: jpni, jpnj, jpnij, nxios'",
        "'     e.g.  ./run_nemo_occigen_scal.sh  20 30 50 3 '",
        "'    '",
        "'     This script is called from dcmtk_scal_prep which preprocess the processor.layout'",
        "'     file produced by MPP_PREP, writing temporary log files (one for a given domain'",
        "'     decomposition) named log_<totalcore>'",
        "' '",
        "'  OPTIONS:'",
        "'     -h : Display this help message'",
        "'     -n <script_name> : define nemo scalability script name. Default: '",
        "'     -c <cores> : gives number of core per compute note. Default :'",
        "'     -x <cores> : gives the minimum number of cores dedicated to'",
        "'           xios_server.exe. Default : '",
        "'     -X <cores> : gives the maximum number of cores dedicated to'",
        "'           xios_server.exe. Default : '",
        "' '",
        "'./run_nemo_occigen_scal.sh'",
        "\"hn:c:x:X:\"",
        "\"help\"",
        "\"scal_script=\"",
        "\"cores_per_node=\"",
        "\"xios_min_cores=\"",
        "\"xios_max_cores\"",
        "\"-h\"",
        "\"--help\"",
        "\"-n\"",
        "\"--scal_script\"",
        "\"-c\"",
        "\"--cores_per_node\"",
        "\"-x\"",
        "\"--xios_min_cores\"",
        "\"-X\"",
        "\"--xios_max_cores\"",
        "'./'",
        "'/log_*'",
        "'jpni'",
        "'jpnj'",
        "'jpi'",
        "'jpj'",
        "'jpij'",
        "'proc'",
        "'elim'",
        "'sup'",
        "'proc'",
        "'jpni'",
        "'jpnj'",
        "'proc'",
        "'proc'",
        "'proc'",
        "'proc'",
        "'run.sh'",
        "'w'",
        "'#!/bin/bash'",
        "'\\n'",
        "' '",
        "' '",
        "' '",
        "' '",
        "'\\n'",
        "\"__main__\""
    ],
    "variables": [
        "script",
        "nc",
        "nxios_min",
        "nxios_max",
        "opts",
        "args",
        "script",
        "nc",
        "nxios_min",
        "nxios_max",
        "cwd",
        "outpath",
        "file_name",
        "jpni",
        "jpnj",
        "proc",
        "xios",
        "fl",
        "xi",
        "xi",
        "xi",
        "outfile",
        "outf"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "class = @Scalability experiment tools@",
        "set default",
        "get current dir path",
        "set output path",
        "log files",
        "Sort list of file names",
        "allocate vars to be written",
        "read files",
        "write into file",
        "Open file"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Sun Jun 25 19:18:08 2017\n\n@author: Polina\n\"\"\""
    ],
    "functions": [
        "usage",
        "set_default",
        "parse",
        "mkrun"
    ],
    "classes": []
}