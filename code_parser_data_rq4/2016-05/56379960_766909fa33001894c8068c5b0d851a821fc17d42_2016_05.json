{
    "identifiers": [
        "vscode",
        "EType",
        "vscode",
        "vscode",
        "classes",
        "pickedItem",
        "vscode",
        "vscode",
        "vscode",
        "EType",
        "getClass",
        "classes",
        "pickedItem",
        "_class",
        "i",
        "_class",
        "i",
        "_class",
        "i",
        "item",
        "pickedItem",
        "item",
        "vscode",
        "builder",
        "EType",
        "EType",
        "builder",
        "currentPos",
        "createGetter",
        "item",
        "EType",
        "EType",
        "builder",
        "currentPos",
        "createSetter",
        "item",
        "vscode",
        "builder",
        "i",
        "classes",
        "i",
        "currentPos",
        "classes",
        "i",
        "currentPos",
        "classes",
        "i",
        "builder",
        "currentPos",
        "createConstructor",
        "classes",
        "i",
        "classes",
        "vscode",
        "vscode",
        "i",
        "classes",
        "i",
        "j",
        "classes",
        "i",
        "j",
        "quickPickItemList",
        "vscode",
        "classes",
        "i",
        "j",
        "classes",
        "i",
        "classes",
        "i",
        "j",
        "quickPickItemList",
        "vscode",
        "vscode",
        "vscode",
        "vscode",
        "i",
        "lineCount",
        "i",
        "vscode",
        "i",
        "brackets",
        "line",
        "brackets",
        "line",
        "matchers",
        "matches",
        "brackets",
        "matches",
        "brackets",
        "brackets",
        "classes",
        "brackets",
        "vscode",
        "i",
        "brackets",
        "getClass",
        "classes",
        "brackets",
        "line",
        "matchers",
        "line",
        "matchers",
        "line",
        "matchers",
        "_class",
        "matches",
        "matches",
        "matches",
        "matches",
        "_class",
        "matches",
        "publicName",
        "matches",
        "matches",
        "matches",
        "_class",
        "matches",
        "matches",
        "_class",
        "matches",
        "line",
        "brackets",
        "line",
        "brackets",
        "brackets",
        "brackets",
        "brackets",
        "brackets",
        "brackets",
        "_class",
        "_class",
        "vscode",
        "i",
        "scoped",
        "currentPos",
        "_class",
        "currentPos",
        "_class",
        "_class",
        "_class",
        "i",
        "i",
        "EType",
        "EType",
        "j",
        "_class",
        "j",
        "_class",
        "i",
        "_class",
        "j",
        "_class",
        "i",
        "_class",
        "j",
        "_class",
        "i",
        "EType",
        "EType",
        "j",
        "_class",
        "j",
        "_class",
        "i",
        "_class",
        "j",
        "_class",
        "i",
        "classes",
        "fname",
        "vscode",
        "classic",
        "fname",
        "fname",
        "fname",
        "fname",
        "item",
        "vscode",
        "classic",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "vscode",
        "classic",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "items",
        "i",
        "items",
        "i",
        "b",
        "c",
        "c",
        "items",
        "i",
        "items",
        "i",
        "b",
        "b",
        "c",
        "b",
        "i",
        "items",
        "i",
        "c",
        "items",
        "i",
        "items",
        "i",
        "c",
        "c",
        "items",
        "name",
        "i",
        "items",
        "i",
        "items",
        "i",
        "name",
        "items",
        "i"
    ],
    "literals": [
        "'vscode'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'genGetSet'",
        "'scoped'",
        "'genGetSet'",
        "'filter'",
        "'class'",
        "'{'",
        "'}'",
        "string",
        "'genGetSet'",
        "'classic'",
        "'_'",
        "'$'",
        "'genGetSet'",
        "'classic'",
        "'\\n\\tpublic get'",
        "'(): '",
        "' {\\n'",
        "'\\t\\treturn this.'",
        "';\\n'",
        "'\\t}\\n'",
        "'\\n\\tpublic get '",
        "'(): '",
        "' {\\n'",
        "'\\t\\treturn this.'",
        "';\\n'",
        "'\\t}\\n'",
        "'genGetSet'",
        "'classic'",
        "'\\n\\tpublic set'",
        "'(value: '",
        "') {\\n'",
        "'\\t\\tthis.'",
        "' = value;\\n'",
        "'\\t}\\n'",
        "'\\n\\tpublic set '",
        "'(value: '",
        "') {\\n'",
        "'\\t\\tthis.'",
        "' = value;\\n'",
        "'\\t}\\n'",
        "'\\n\\tconstructor('",
        "', '",
        "': '",
        "') {'",
        "'\\n\\t\\tthis.'",
        "' = '",
        "';'",
        "'\\n\\t}\\n'",
        "string"
    ],
    "variables": [
        "matchers",
        "currentPos",
        "_class",
        "i",
        "item",
        "i",
        "quickPickItemList",
        "i",
        "j",
        "classes",
        "brackets",
        "currentPos",
        "lineCount",
        "scoped",
        "i",
        "line",
        "matches",
        "_class",
        "matches",
        "i",
        "j",
        "j",
        "classic",
        "classic",
        "classic",
        "c",
        "b",
        "i",
        "i",
        "i"
    ],
    "comments": [
        "generate code lines into the current active window based on EType",
        "add template code blocks before the cursor position's line number",
        "generate a list of pickable items based on EType",
        "scan the current active text window and construct an IClass array",
        "these are settings which can be adjusted for personal taste",
        "check if we are outside a class (brackets) and a new class definition pops-up",
        "when it does we are now within a class def and we can start checking for private variables",
        "within brackets start matching each line for a private variable",
        "and add them to the corresponding IClass",
        "push the found items into the approriate containers",
        "if the brackets match up we are (maybe) leaving a class definition",
        "no maybe - we were actually within a class",
        "check scoped setting: remove all found items if they are not",
        "found within the class where the cursor is positioned",
        "if filter is enabled: there is also no need to show already added",
        "getters and setters methods in the list",
        "done analyzing a class, up to the next",
        "convert the private name to a public name",
        "based on the 'classic' setting, see README.md"
    ],
    "docstrings": [],
    "functions": [
        "generateCode",
        "quickPickItemListFrom",
        "generateClassesList",
        "publicName",
        "createGetter",
        "createSetter",
        "createConstructor",
        "getClass"
    ],
    "classes": []
}