{
    "identifiers": [
        "getopt",
        "sys",
        "imaplib",
        "os",
        "email",
        "logging",
        "time",
        "subprocess",
        "ConfigParser",
        "traceback",
        "datetime",
        "cStringIO",
        "base64",
        "os",
        "getenv",
        "splunk_home",
        "ConfigError",
        "sys",
        "path",
        "os",
        "path",
        "join",
        "scriptDir",
        "os",
        "path",
        "join",
        "scriptDir",
        "optlist",
        "readConfig",
        "readOptlist",
        "optlist",
        "debug",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "__dict__",
        "keys",
        "keys",
        "sort",
        "k",
        "keys",
        "k",
        "startswith",
        "logging",
        "debug",
        "k",
        "__dict__",
        "k",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "ERROR",
        "server",
        "user",
        "password",
        "xpassword",
        "usage",
        "ConfigError",
        "mimeTypes",
        "find",
        "mimeTypes",
        "split",
        "_mimeTypesList",
        "append",
        "mimeTypes",
        "deleteWhenDone",
        "os",
        "path",
        "exists",
        "configLocalFileName",
        "configLocalFileName",
        "os",
        "path",
        "exists",
        "configDefaultFileName",
        "configDefaultFileName",
        "ConfigParser",
        "RawConfigParser",
        "config",
        "read",
        "path",
        "o",
        "configOptions",
        "config",
        "has_option",
        "configSectionName",
        "o",
        "getattr",
        "o",
        "val",
        "__class__",
        "config",
        "get",
        "configSectionName",
        "o",
        "strip",
        "lower",
        "config",
        "get",
        "configSectionName",
        "o",
        "config",
        "get",
        "configSectionName",
        "o",
        "config",
        "get",
        "configSectionName",
        "o",
        "setattr",
        "o",
        "val",
        "optlist",
        "o",
        "a",
        "optlist",
        "o",
        "o",
        "configOptions",
        "getattr",
        "o",
        "val",
        "__class__",
        "a",
        "len",
        "a",
        "a",
        "strip",
        "lower",
        "a",
        "setattr",
        "o",
        "val",
        "logging",
        "debug",
        "logging",
        "debug",
        "logging",
        "debug",
        "logging",
        "debug",
        "logging",
        "debug",
        "box",
        "noCache",
        "splunk",
        "auth",
        "au",
        "splunk",
        "search",
        "se",
        "splunk",
        "httplib2",
        "time",
        "splunkxpassword",
        "subprocess",
        "Popen",
        "os",
        "path",
        "join",
        "os",
        "environ",
        "shell",
        "stdin",
        "subprocess",
        "PIPE",
        "stdout",
        "subprocess",
        "PIPE",
        "p",
        "communicate",
        "splunkxpassword",
        "e",
        "debug",
        "logging",
        "error",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "ConfigError",
        "logging",
        "debug",
        "splunk",
        "mergeHostPath",
        "splunkHostPath",
        "au",
        "getSessionKey",
        "splunkuser",
        "splunkpassword",
        "httplib2",
        "ServerNotFoundError",
        "e",
        "LoginError",
        "splunkHostPath",
        "e",
        "LoginError",
        "key",
        "LoginError",
        "box",
        "box",
        "box",
        "box",
        "se",
        "dispatch",
        "ss",
        "sessionKey",
        "key",
        "datetime",
        "datetime",
        "now",
        "logging",
        "debug",
        "ss",
        "logging",
        "debug",
        "job",
        "isDone",
        "time",
        "sleep",
        "logging",
        "debug",
        "datetime",
        "datetime",
        "now",
        "now",
        "start",
        "seconds",
        "timeout",
        "logging",
        "debug",
        "timeout",
        "job",
        "results",
        "logging",
        "debug",
        "retVal",
        "e",
        "logging",
        "debug",
        "e",
        "logging",
        "debug",
        "job",
        "cancel",
        "retVal",
        "logging",
        "debug",
        "version",
        "xpassword",
        "subprocess",
        "Popen",
        "os",
        "path",
        "join",
        "os",
        "environ",
        "shell",
        "stdin",
        "subprocess",
        "PIPE",
        "stdout",
        "subprocess",
        "PIPE",
        "p",
        "communicate",
        "xpassword",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "ConfigError",
        "port",
        "useSSL",
        "imaplib",
        "IMAP4_SSL",
        "server",
        "port",
        "imaplib",
        "IMAP4",
        "server",
        "port",
        "useSSL",
        "imaplib",
        "IMAP4_SSL",
        "server",
        "imaplib",
        "IMAP4",
        "server",
        "M",
        "login",
        "user",
        "password",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "LoginError",
        "server",
        "folders",
        "lower",
        "M",
        "f",
        "f",
        "split",
        "join",
        "x",
        "folder_list",
        "append",
        "mailbox",
        "folders",
        "folders",
        "find",
        "folders",
        "split",
        "folder_list",
        "append",
        "folders",
        "i",
        "folder_list",
        "getMailbox",
        "M",
        "i",
        "LoginError",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "e",
        "ConfigError",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "M",
        "logout",
        "e",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "logging",
        "error",
        "M",
        "box",
        "box",
        "replace",
        "box",
        "strip",
        "logging",
        "debug",
        "box",
        "getCacheIDForMailbox",
        "box",
        "logging",
        "debug",
        "latestTime",
        "box",
        "M",
        "select",
        "M",
        "select",
        "box",
        "resText",
        "endid",
        "box",
        "server",
        "END_IMAP_BREAKER",
        "latestTime",
        "getAllMail",
        "M",
        "box",
        "endid",
        "getLatestMail",
        "latestTime",
        "M",
        "box",
        "endid",
        "deleteWhenDone",
        "M",
        "expunge",
        "resCode",
        "ConfigError",
        "box",
        "e",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "logging",
        "error",
        "M",
        "close",
        "M",
        "box",
        "endid",
        "logging",
        "debug",
        "endid",
        "counter",
        "endid",
        "imapSearch",
        "counter",
        "counter",
        "chunksize",
        "logging",
        "debug",
        "searchStr",
        "counter",
        "chunksize",
        "M",
        "search",
        "searchStr",
        "data",
        "split",
        "len",
        "ids",
        "logging",
        "debug",
        "len",
        "ids",
        "logging",
        "debug",
        "ids",
        "num",
        "ids",
        "fetchMessage",
        "M",
        "box",
        "num",
        "e",
        "logging",
        "debug",
        "num",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "debug",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "logging",
        "error",
        "M",
        "box",
        "num",
        "M",
        "fetch",
        "num",
        "data",
        "dates",
        "find",
        "dates",
        "rfind",
        "dates",
        "begin",
        "end",
        "logging",
        "debug",
        "dstr",
        "latestTimeStr",
        "M",
        "box",
        "endid",
        "logging",
        "debug",
        "latestTimeStr",
        "datetime",
        "datetime",
        "strptime",
        "latestTimeStr",
        "logging",
        "debug",
        "lastDateTime",
        "latestTimeStr",
        "split",
        "imapSearch",
        "justDate",
        "logging",
        "debug",
        "searchStr",
        "M",
        "search",
        "searchStr",
        "logging",
        "debug",
        "data",
        "data",
        "split",
        "logging",
        "debug",
        "len",
        "ids",
        "logging",
        "debug",
        "ids",
        "len",
        "ids",
        "logging",
        "debug",
        "num",
        "ids",
        "getInternalDate",
        "M",
        "box",
        "num",
        "dstr",
        "datetime",
        "datetime",
        "strptime",
        "dstr",
        "logging",
        "debug",
        "msgDateTime",
        "lastDateTime",
        "msgDateTime",
        "fetchMessage",
        "M",
        "box",
        "num",
        "dstr",
        "message",
        "body",
        "cstr",
        "message",
        "has_key",
        "message",
        "get",
        "base64",
        "b64decode",
        "body",
        "cstr",
        "write",
        "cstr",
        "write",
        "body",
        "M",
        "box",
        "num",
        "dstr",
        "cStringIO",
        "StringIO",
        "M",
        "fetch",
        "num",
        "data",
        "split",
        "uid",
        "dstr",
        "getInternalDate",
        "M",
        "box",
        "num",
        "M",
        "fetch",
        "num",
        "data",
        "logging",
        "debug",
        "num",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "M",
        "fetch",
        "num",
        "data",
        "split",
        "size",
        "replace",
        "email",
        "message_from_string",
        "body",
        "dstr",
        "message",
        "has_key",
        "message",
        "message",
        "has_key",
        "message",
        "message",
        "has_key",
        "message",
        "cstr",
        "write",
        "dstr",
        "k",
        "v",
        "message",
        "items",
        "k",
        "k",
        "fullHeaders",
        "lower",
        "k",
        "lk",
        "lk",
        "lk",
        "lk",
        "lk",
        "cstr",
        "write",
        "k",
        "replace",
        "v",
        "cstr",
        "write",
        "k",
        "replace",
        "v",
        "box",
        "box",
        "cstr",
        "write",
        "box",
        "cstr",
        "write",
        "box",
        "cstr",
        "write",
        "size",
        "includeBody",
        "cstr",
        "write",
        "body_separator",
        "useBodySourceType",
        "cstr",
        "write",
        "cstr",
        "write",
        "bodySourceType",
        "cstr",
        "write",
        "message",
        "message",
        "is_multipart",
        "message",
        "get_payload",
        "printBody",
        "message",
        "body",
        "cstr",
        "part",
        "message",
        "walk",
        "part",
        "get_content_type",
        "_mimeTypesList",
        "part",
        "get_payload",
        "decode",
        "printBody",
        "message",
        "body",
        "cstr",
        "debug",
        "part",
        "message",
        "walk",
        "cstr",
        "write",
        "part",
        "get_content_type",
        "logging",
        "debug",
        "cstr",
        "write",
        "END_IMAP_BREAKER",
        "useBodySourceType",
        "cstr",
        "write",
        "headerSourceType",
        "cstr",
        "getvalue",
        "deleteWhenDone",
        "M",
        "store",
        "num",
        "e",
        "logging",
        "debug",
        "num",
        "debug",
        "logging",
        "debug",
        "e",
        "traceback",
        "print_exc",
        "file",
        "sys",
        "stderr",
        "logging",
        "debug",
        "num",
        "IMAPProcessor",
        "getopt",
        "getopt",
        "sys",
        "argv",
        "args",
        "sys",
        "argv",
        "imapProc",
        "version",
        "imapProc",
        "initFromOptlist",
        "optlist",
        "getopt",
        "error",
        "val",
        "logging",
        "error",
        "imapProc",
        "usage",
        "ConfigError",
        "imapProc",
        "getMail",
        "parseArgs"
    ],
    "literals": [
        "'SPLUNK_HOME'",
        "'Environment variable SPLUNK_HOME must be set. Run: source ~/bin/setSplunkEnv'",
        "\"server\"",
        "\"user\"",
        "\"password\"",
        "\"xpassword\"",
        "\"port\"",
        "\"folders\"",
        "\"imapSearch\"",
        "\"fullHeaders\"",
        "\"includeBody\"",
        "\"mimeTypes\"",
        "\"splunkuser\"",
        "\"splunkpassword\"",
        "\"splunkxpassword\"",
        "\"splunkHostPath\"",
        "\"timeout\"",
        "\"noCache\"",
        "\"debug\"",
        "\"useSSL\"",
        "\"deleteWhenDone\"",
        "'..'",
        "'default'",
        "'imap.conf'",
        "'..'",
        "'local'",
        "'imap.conf'",
        "\"IMAP Configuration\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'all'",
        "'UNDELETED'",
        "'text/plain'",
        "'admin'",
        "'changeme'",
        "''",
        "'https://localhost:8089'",
        "'EndIMAPMessage'",
        "'imapbody'",
        "'____________________  Message Body  ____________________'",
        "'imap'",
        "\"2.0\"",
        "\"_\"",
        "\"=\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\",\"",
        "\",\"",
        "''",
        "\"true\"",
        "\"1\"",
        "\"0\"",
        "\"true\"",
        "\"The required fields are: server, user and (password or xpassword)\"",
        "\"eg:\"",
        "\"python get_imap_email.py --server=<mail server name> --user=<user name> --password=<unencrypted password> OR\"",
        "\"python get_imap_email.py --server=<mail server name> --user=<user name> --xpassword=<encrypted password>\"",
        "\"Other parameters that can also be supplied. Refer the default/imap.conf file for details\"",
        "'openssl bf -d -a -pass file:%s'",
        "'SPLUNK_HOME'",
        "'etc'",
        "'auth'",
        "'splunk.secret'",
        "'\\n'",
        "'Could not decrypt splunkxpassword'",
        "\"decrypted splunk password\"",
        "\"Unable to find the server at %s\"",
        "\"userid/password combination for splunk user is invalid...\"",
        "\"userid/password combination for splunk user is invalid...\"",
        "\"'\"",
        "'\"'",
        "'search index=mail mailbox='",
        "' | head 1 | stats max(Date)'",
        "'search index=mail mailbox=\"'",
        "'\" | head 1 | stats max(Date)'",
        "\"dispatched search = \"",
        "\"dispatched job to splunk through the REST API. Waiting for response...\"",
        "\"*** waiting \"",
        "\"REST response took more than %s seconds, timing out...using default UID of 0 i.e. same as noCache\"",
        "'max(Date)'",
        "\" got back \"",
        "\" mailbox was empty \"",
        "\"\"",
        "\"\"",
        "\"VERSION = \"",
        "'openssl bf -d -a -pass file:%s'",
        "'SPLUNK_HOME'",
        "'etc'",
        "'auth'",
        "'splunk.secret'",
        "'\\n'",
        "'Could not decrypt xpassword'",
        "'Could not log into server: %s with password provided'",
        "\"all\"",
        "\"\"",
        "\",\"",
        "\",\"",
        "\"*\"",
        "\"ERROR - trying to login to server and get folders\"",
        "'\"/\" '",
        "''",
        "\"about to dump mailbox %s\"",
        "\"using last time of \"",
        "\"*\"",
        "\"***SPLUNK*** source=\"",
        "\" sourcetype=imap host=\"",
        "\"\"",
        "'NO'",
        "\"Folder name %s does not exist...\"",
        "\"ERROR - trying to select mailbox\"",
        "\"about to get all mail up to counter :\"",
        "\"(\"",
        "\" \"",
        "\":\"",
        "\")\"",
        "\"about so imap search with : \"",
        "\"returned from search with \"",
        "\"ids\"",
        "\"id return from search : \"",
        "\"\"",
        "\"ERROR trying to fetrucn message id: \"",
        "\"ERROR - trying to search mailbox\"",
        "''",
        "'(INTERNALDATE)'",
        "'\"'",
        "'\"'",
        "''",
        "\"ERROR - could not get date for message - this is a problem\"",
        "\"About to get lastest mail sinze \"",
        "\"%d-%b-%Y %H:%M:%S\"",
        "\"datetime for latest is \"",
        "' '",
        "\"(\"",
        "\" SINCE \"",
        "\")\"",
        "\"About to search IMAP using ; \"",
        "\"Got back the following for the day \"",
        "\"returned from search with \"",
        "\"ids\"",
        "\"id return from search : \"",
        "\"Got zero ids, doing nothihng\"",
        "\"\"",
        "\"%d-%b-%Y %H:%M:%S\"",
        "\"datetime for message \"",
        "'Content-Transfer-Encoding'",
        "'Content-Transfer-Encoding'",
        "'base64'",
        "'WARNING - could not decode base64'",
        "'\\n'",
        "'\\n'",
        "'UID'",
        "\"\"",
        "'(BODY.PEEK[])'",
        "\"Fetch error\"",
        "'(RFC822.SIZE)'",
        "')'",
        "''",
        "''",
        "'no date in message'",
        "'date'",
        "'date'",
        "'Date'",
        "'Date'",
        "'DATE'",
        "'DATE'",
        "'Date = \"'",
        "'\"\\n'",
        "'date'",
        "'Date'",
        "'from'",
        "'to'",
        "'subject'",
        "'date'",
        "'cc'",
        "' = \"'",
        "'\"'",
        "''",
        "'\"\\n'",
        "' = \"'",
        "'\"'",
        "''",
        "'\"\\n'",
        "\"'\"",
        "'\"'",
        "'mailbox = '",
        "'\\n'",
        "'mailbox = \"'",
        "'\"\\n'",
        "\"size = \"",
        "'\\n'",
        "'\\n'",
        "\"EndIMAPHeader\"",
        "'\\n'",
        "\"sourcetype=\"",
        "'\\n'",
        "\"date = \"",
        "'date'",
        "'\\n'",
        "\"ContentType :\t\"",
        "'\\n'",
        "\"No message context to print as value includeBody is set to False\"",
        "'\\n'",
        "\"***splunk*** sourcetype=\"",
        "'\\n'",
        "'+Flags'",
        "'(\\Deleted)'",
        "\"1. Failed to get and print message with UID \"",
        "\"2. Failed to get and print message with UID \"",
        "'?'",
        "'version'",
        "'server='",
        "'user='",
        "'password='",
        "'xpassword='",
        "'port='",
        "'folders='",
        "'imapSearch='",
        "'fullHeaders='",
        "'includeBody='",
        "'mimeTypes='",
        "'splunkuser='",
        "'splunkpassword='",
        "'splunkxpassword='",
        "'splunkHostPath='",
        "'timeout='",
        "'noCache'",
        "'debug'",
        "'useSSL='",
        "'deleteWhenDone='",
        "'version'",
        "\"version =\"",
        "\"str(val) # tell them what was wrong\"",
        "\"Incorrect usage...\"",
        "'__main__'"
    ],
    "variables": [
        "__doc__",
        "splunk_home",
        "configOptions",
        "scriptDir",
        "configDefaultFileName",
        "configLocalFileName",
        "configSectionName",
        "server",
        "user",
        "password",
        "xpassword",
        "port",
        "folders",
        "imapSearch",
        "fullHeaders",
        "includeBody",
        "mimeTypes",
        "_mimeTypesList",
        "splunkuser",
        "splunkpassword",
        "splunkxpassword",
        "splunkHostPath",
        "timeout",
        "noCache",
        "debug",
        "useSSL",
        "deleteWhenDone",
        "END_IMAP_BREAKER",
        "bodySourceType",
        "body_separator",
        "headerSourceType",
        "useBodySourceType",
        "version",
        "keys",
        "_mimeTypesList",
        "noCache",
        "path",
        "path",
        "path",
        "config",
        "val",
        "val",
        "val",
        "val",
        "val",
        "o",
        "val",
        "val",
        "val",
        "val",
        "p",
        "splunkpassword",
        "key",
        "ss",
        "ss",
        "job",
        "start",
        "now",
        "retVal",
        "retVal",
        "p",
        "password",
        "M",
        "M",
        "M",
        "M",
        "folder_list",
        "result",
        "x",
        "mailbox",
        "folder_list",
        "folder_list",
        "box",
        "box",
        "latestTime",
        "resCode",
        "resText",
        "resCode",
        "resText",
        "endid",
        "chunksize",
        "counter",
        "searchStr",
        "counter",
        "typ",
        "data",
        "ids",
        "dstr",
        "typ",
        "data",
        "dates",
        "begin",
        "end",
        "dstr",
        "dstr",
        "lastDateTime",
        "justDate",
        "searchStr",
        "typ",
        "data",
        "ids",
        "dstr",
        "msgDateTime",
        "body",
        "cstr",
        "typ",
        "data",
        "uid",
        "lastUID",
        "dstr",
        "typ",
        "data",
        "body",
        "typ",
        "data",
        "size",
        "size",
        "message",
        "dstr",
        "dstr",
        "dstr",
        "dstr",
        "lk",
        "body",
        "body",
        "imapProc",
        "optlist",
        "optlist",
        "args"
    ],
    "comments": [
        "Generic error class",
        "",
        "This is the list of configuration options that can be set either on the",
        "command line or via the imap.conf file.  Note that these names must",
        "correspond exactly to field names in the IMAPProcessor class and the names",
        "specified in the optlist near the bottom of this file.",
        "",
        "The imap.conf configuration file provides more detailed documentation about",
        "the effects of each of the options.",
        "",
        "imap server name/ip",
        "imap user account",
        "imap plaintext password",
        "or imap encrypted password",
        "imap server port",
        "list of imap folders to index",
        "imap search string",
        "whether all headers should be indexed",
        "whether the body of messages should be indexed",
        "list of mime types to index if multipart",
        "splunk server userid",
        "splunk server password",
        "or splunk server encrypted password",
        "splunk server host path",
        "seconds to wait for connected to mailserver.",
        "if true, the 'already indexed' markers are ignored",
        "if true, extra debug info is output",
        "true if use ssl",
        "delete messages after indexing",
        "path to the configuration imap.conf file",
        "find it relative to get_imap_email.py file",
        "name of the only stanza in the config file",
        "--------------------------------------------------------------",
        "IMAPprocessor will download mail from an imap server and write to sdtout.",
        "This is how to get mail into splunk.",
        "--------------------------------------------------------------",
        "-------------------",
        "default values.",
        "-------------------",
        "initialize all of the configuration fields with default values that",
        "will be used on the off chance that they don't appear in imap.conf",
        "this is required",
        "this is required",
        "and either this...",
        "...or this is also required",
        "split list of mime types",
        "default splunk admin password",
        "-----------------------------------",
        "read in all options and settings.",
        "-----------------------------------",
        "First read settings in imap.conf, if it exists...",
        "...now, for debugging and backward compat, allow command line",
        "settings to override...",
        "check min required args",
        "sys.exit()",
        "pre-parse the mime types list",
        "deleteWhenDone overrides any caching. Our assumption is that all messages in the box are new each time",
        "-----------------------------------",
        "- Read settings from imap.conf(s)",
        "-----------------------------------",
        "future fyi, v3 will rename ConfigParser to configparser",
        "check to see if the current/default value is a boolean; if so,",
        "makes user user supplied value is a bool, will convert string to bool.",
        "ie. makes 0 = False and 1 = True",
        "----------------------------------------------------------------",
        "Read settings from the command line.  We support command",
        "line args mainly for backwards compat and for quick debugging;",
        "users should be encouraged to use the imap.conf file instead",
        "----------------------------------------------------------------",
        "strip the leading --",
        "check to see if the current/default value is a boolean. If so,",
        "then the value is true if specified as a flag; otherwise, convert",
        "the option value to a bool.",
        "---------------------",
        "usage text for help",
        "---------------------",
        "---------------------------------------------------------",
        "Helper function for mapping folder to UID",
        "Returns the cached id for the given mailbox, or zero if",
        "we've never looked in it before",
        "---------------------------------------------------------",
        "If we are here it means we have to extract the last used UID from splunk...",
        "if (now - start).seconds > self.timeout:",
        "if we have caching on, and we run this for the first time, the result will not have any key like UID",
        "Hence it will throw a KeyError or IndexError. Just ignore that error and return 0",
        "--------------------------------------------------",
        "Method will login and iterate through each folder",
        "--------------------------------------------------",
        "If the user supplied encrypted password then we need to unencrypt.",
        "Try and login",
        "See if we need to interate all folders put them into a list",
        "If the user supplied a list of mailboxes, split them up and put in list",
        "Run though each of the mailboxes",
        "---------------------------------------------------",
        "Method will login and iterate through each folder.",
        "---------------------------------------------------",
        "new method",
        "search for the last internal time",
        "get messages since that day of the latest internal time",
        "get internal time for each message",
        "skip ahead until the internal time is matching",
        "dedupe",
        "for all new messages index.",
        "get message id we read up to last time (0 first time)",
        "Select the mail box at hand, or * for defult",
        "each mailbox is its own source. i",
        "We use the ***SPLUNK*** header processor trick to change sources for each event",
        "each of the below must be on its own line, thus the breaker text after.",
        "if delete when done, clean it up",
        "-------------------------------",
        "Download all email",
        "------------------------------",
        "for each message id....",
        "---------------------------------------------------",
        "------------------------------------------------------------------",
        "get the messages for the day of last time.",
        "unfortunately it looks like the granularity of search is per day.",
        "so we read starting the day and then skip ahead, kinda lame.",
        "------------------------------------------------------------------",
        "convert to a datetime so we can compare",
        "strip off the time, since imap only does day granularity",
        "if empty there is no new data, bail.",
        "for each new message id",
        "get message date so that we can compare to see if is newer",
        "convert message date to datetime so we can compare",
        "see if we are caught up yet...",
        "this is a new message, print it out",
        "------------------------------------------------",
        "print body message to STDOUT for indexing",
        "------------------------------------------------",
        "cstr.write('decoded base64 successfully' + '\\n')",
        "-------------------------------------------------",
        "Get and print to STDOUT the mail message",
        "-------------------------------------------------",
        "get UID",
        "get message body",
        "typ, data = M.fetch(num, '(RFC822)')",
        "get message size",
        "create message object from the body",
        "Try printing out the date first, we will use this to break the events.",
        "include size and name of folder since they are not part of header",
        "interestingly, sometimes these come back quoted - so check.",
        "If option includeBody is True then print STOUT the mail body.",
        "print the body separator line.",
        "This option is old and not needed. We auto set sourcetype in inputs.conf now.",
        "hardcoded the changing of sourcetype to mailbody.",
        "customers can change the procssing of mailbody's differently in props.conf",
        "if we are breaking up the event we need to spit out a timestamp.",
        "if the message is not multipart - its text so just dump it out.",
        "for key in message.keys():",
        "cstr.write(\"***key \" + key + \"\t** value=\" + message.get(key)+ '\\n')",
        "if it is multipart, then only dump parts whose type is",
        "in the mimeTypes list.",
        "else, we are not indexing the message body, so do nothing.",
        "just print debug data only.",
        "set us back to mail sourcetype",
        "if delete when done, then mark the message",
        "--------------------------------------------------------------",
        "- parse all program options",
        "--------------------------------------------------------------",
        "- Do the work....",
        "--------------------------------------------------------------",
        "- Start script",
        "--------------------------------------------------------------"
    ],
    "docstrings": [
        "\"\"\"\n\n# Copyright 2007 Erik Swan and Splunk, Inc. - erikswan@dogandbone.com\n# This file contains a simple imap -> splunk processor\n# It is used by splunk to download mail into the splunk server\n#\n# Change History\n# --------------\n# Date\t\t   Author\t\t Changes\n# -----\t\t   ------\t\t ---------\n# 07/10/2008\t   Jimmy J\t Changes to do the caching by reading the latest UID from splunk messages itself\n#\t\t\t\t Code modified to write a UID key/value pair for every message\n#\t\t\t\t Removed all commented code\n#\t\t\t\t Fixed the function 'usage'\n#\t\t\t\t Removed the hard-coded path separator '/', instead used \n#                                  os.path.join so it will work even if run on a non *nix platform\n#\t\t\t\t Imported traceback module for improved error reporting\n#\t\t\t\t Got rid of the splunk CLI interface to determine the last UID \n#                                  and used the splunk REST API instead\n#\t\t\t\t Got rid of imports that were not being used \n#\t\t\t\t Made the splunkHost, splunkuser, splunkpassword and splunkxpassword configurable\n#\n# 02/11/2014    PJ Balsley       Updated script.\n#                                Fixed reading some imap.conf settings that only worked with False/True, and not with 0/1.\n#                                Minor typeo fixes.\n#                                Minor debug issues fixed.\n#\n# NOTE: If encrypted passwords are being used, the user needs to run the provided genpass.sh script twice, once for the mailbox password\n# and once for the splunk server password. Cut/copy/paste the generated encrypted password and place it into the imap.conf config file\n#\n\"\"\""
    ],
    "functions": [
        "initFromOptlist",
        "readConfig",
        "readOptlist",
        "usage",
        "getCacheIDForMailbox",
        "getMail",
        "getMailbox",
        "getAllMail",
        "getInternalDate",
        "getLatestMail",
        "printBody",
        "fetchMessage",
        "parseArgs"
    ],
    "classes": [
        "ConfigError",
        "LoginError",
        "IMAPProcessor"
    ]
}