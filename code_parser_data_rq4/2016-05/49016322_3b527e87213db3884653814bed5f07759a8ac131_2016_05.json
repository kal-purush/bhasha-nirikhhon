{
    "identifiers": [
        "it",
        "describe",
        "expect",
        "beforeEach",
        "inject",
        "async",
        "fakeAsync",
        "flushMicrotasks",
        "beforeEachProviders",
        "TestComponentBuilder",
        "ComponentFixture",
        "Component",
        "provide",
        "ViewChild",
        "ConnectedOverlayDirective",
        "OverlayOrigin",
        "OVERLAY_CONTAINER_TOKEN",
        "Overlay",
        "ViewportRuler",
        "OverlayPositionBuilder",
        "ConnectedPositionStrategy",
        "describe",
        "beforeEachProviders",
        "Overlay",
        "OverlayPositionBuilder",
        "ViewportRuler",
        "provide",
        "OVERLAY_CONTAINER_TOKEN",
        "overlayContainerElement",
        "overlayContainerElement",
        "beforeEach",
        "inject",
        "TestComponentBuilder",
        "tcb",
        "builder",
        "tcb",
        "beforeEach",
        "async",
        "builder",
        "ConnectedOverlayDirectiveTest",
        "f",
        "fixture",
        "f",
        "fixture",
        "it",
        "expect",
        "overlayContainerElement",
        "it",
        "fakeAsync",
        "fixture",
        "flushMicrotasks",
        "expect",
        "overlayContainerElement",
        "it",
        "fixture",
        "testComponent",
        "overlayDirective",
        "expect",
        "strategy",
        "jasmine",
        "ConnectedPositionStrategy",
        "strategy",
        "expect",
        "positions",
        "Component",
        "ConnectedOverlayDirective",
        "OverlayOrigin",
        "ViewChild",
        "ConnectedOverlayDirective"
    ],
    "literals": [
        "'@angular/core/testing'",
        "'@angular/compiler/testing'",
        "'@angular/core'",
        "'./overlay-directives'",
        "'./overlay'",
        "'./position/viewport-ruler'",
        "'./position/overlay-position-builder'",
        "'./position/connected-position-strategy'",
        "'Overlay directives'",
        "'div'",
        "should create an overlay and attach the directive's template",
        "'Menu content'",
        "'should destroy the overlay when the directive is destroyed'",
        "''",
        "'should use a connected position strategy with a default set of positions'",
        "<button overlay-origin #trigger=\"overlayOrigin\">Toggle menu</button>\n  <template connected-overlay [origin]=\"trigger\">\n    <p>Menu content</p>\n  </template>"
    ],
    "variables": [
        "builder",
        "overlayContainerElement",
        "fixture",
        "testComponent",
        "overlayDirective",
        "strategy",
        "positions"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": [
        "ConnectedOverlayDirectiveTest"
    ]
}