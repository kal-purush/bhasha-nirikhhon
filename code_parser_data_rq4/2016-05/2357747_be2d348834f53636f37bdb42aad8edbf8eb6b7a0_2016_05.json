{
    "identifiers": [
        "datetime",
        "dateutil",
        "tz",
        "jinja2",
        "logging",
        "os",
        "requests",
        "time",
        "urllib",
        "urlparse",
        "teuthology",
        "config",
        "config",
        "teuth_config",
        "teuthology",
        "orchestra",
        "run",
        "teuthology",
        "misc",
        "logging",
        "getLogger",
        "hosts",
        "time_from",
        "time_until",
        "hosts",
        "time_from",
        "time_until",
        "PCPDataSource",
        "host",
        "os",
        "path",
        "join",
        "archive_base_path",
        "host",
        "host",
        "_format_time",
        "time_from",
        "_format_time",
        "time_until",
        "run",
        "Raw",
        "os",
        "path",
        "join",
        "get_archive_input_dir",
        "host",
        "cmd",
        "staticmethod",
        "seconds",
        "isinstance",
        "seconds",
        "basestring",
        "seconds",
        "time",
        "asctime",
        "time",
        "gmtime",
        "seconds",
        "PCPDataSource",
        "hosts",
        "time_from",
        "time_until",
        "PCPGrapher",
        "hosts",
        "time_from",
        "time_until",
        "urlparse",
        "urljoin",
        "teuth_config",
        "pcp_host",
        "_endpoint",
        "PCPGrapher",
        "hosts",
        "time_from",
        "time_until",
        "job_id",
        "GrafanaGrapher",
        "hosts",
        "time_from",
        "time_until",
        "job_id",
        "hosts",
        "join",
        "hosts",
        "time_from",
        "_format_time",
        "time_from",
        "time_until",
        "_format_time",
        "time_until",
        "urllib",
        "urlencode",
        "config",
        "template",
        "format",
        "base_url",
        "base_url",
        "args",
        "args",
        "staticmethod",
        "seconds",
        "isinstance",
        "seconds",
        "basestring",
        "seconds",
        "seconds",
        "datetime",
        "datetime",
        "fromtimestamp",
        "seconds",
        "dateutil",
        "tz",
        "tzutc",
        "dt",
        "strftime",
        "PCPGrapher",
        "width",
        "height",
        "hideLegend",
        "format",
        "hosts",
        "time_from",
        "time_until",
        "dest_dir",
        "job_id",
        "GraphiteGrapher",
        "hosts",
        "time_from",
        "time_until",
        "dest_dir",
        "job_id",
        "hasattr",
        "metric",
        "metrics",
        "graphs",
        "get",
        "metric",
        "get_graph_url",
        "metric",
        "graphs",
        "metric_dict",
        "dest_dir",
        "RuntimeError",
        "mode",
        "_check_dest_dir",
        "generate_html",
        "mode",
        "mode",
        "os",
        "path",
        "join",
        "dest_dir",
        "open",
        "html_path",
        "f",
        "f",
        "write",
        "generated_html",
        "mode",
        "build_graph_urls",
        "os",
        "path",
        "dirname",
        "jinja2",
        "loaders",
        "FileSystemLoader",
        "cwd",
        "jinja2",
        "Environment",
        "loader",
        "loader",
        "env",
        "get_template",
        "template",
        "render",
        "job_id",
        "job_id",
        "graphs",
        "graphs",
        "mode",
        "mode",
        "data",
        "_check_dest_dir",
        "build_graph_urls",
        "metric",
        "graphs",
        "keys",
        "graphs",
        "metric",
        "_sanitize_metric_name",
        "metric",
        "graphs",
        "metric",
        "os",
        "path",
        "join",
        "dest_dir",
        "filename",
        "requests",
        "get",
        "url",
        "resp",
        "ok",
        "log",
        "warn",
        "resp",
        "status_code",
        "resp",
        "reason",
        "url",
        "open",
        "graph_path",
        "f",
        "f",
        "write",
        "resp",
        "content",
        "metric",
        "graph_defaults",
        "config",
        "update",
        "time_from",
        "time_until",
        "get_target_globs",
        "metric",
        "urllib",
        "urlencode",
        "config",
        "doseq",
        "template",
        "format",
        "base_url",
        "base_url",
        "args",
        "args",
        "metric",
        "format",
        "host",
        "host",
        "hosts",
        "metric",
        "format",
        "glob",
        "metric",
        "glob",
        "globs",
        "globs",
        "staticmethod",
        "metric",
        "metric",
        "rep",
        "replacements",
        "result",
        "replace",
        "rep",
        "rep",
        "result",
        "ctx",
        "config",
        "PCP",
        "ctx",
        "config",
        "teuth_config",
        "get",
        "log",
        "ctx",
        "config",
        "get",
        "config",
        "get",
        "config",
        "get",
        "config",
        "get",
        "enabled",
        "PCP",
        "setup",
        "time",
        "time",
        "log",
        "debug",
        "start_time",
        "setup_collectors",
        "log",
        "debug",
        "cluster",
        "rem",
        "shortname",
        "rem",
        "cluster",
        "remotes",
        "keys",
        "setup_grafana",
        "hosts",
        "setup_graphite",
        "hosts",
        "setup_archive",
        "hosts",
        "hosts",
        "use_grafana",
        "GrafanaGrapher",
        "hosts",
        "hosts",
        "time_from",
        "start_time",
        "time_until",
        "stop_time",
        "job_id",
        "job_id",
        "hosts",
        "hasattr",
        "ctx",
        "use_graphite",
        "os",
        "path",
        "join",
        "ctx",
        "archive",
        "os",
        "path",
        "exists",
        "out_dir",
        "os",
        "makedirs",
        "out_dir",
        "GraphiteGrapher",
        "hosts",
        "hosts",
        "time_from",
        "start_time",
        "time_until",
        "stop_time",
        "dest_dir",
        "out_dir",
        "job_id",
        "job_id",
        "hosts",
        "hasattr",
        "ctx",
        "fetch_archives",
        "PCPArchive",
        "hosts",
        "hosts",
        "time_from",
        "start_time",
        "time_until",
        "stop_time",
        "enabled",
        "use_grafana",
        "log",
        "info",
        "grafana",
        "build_graph_url",
        "use_graphite",
        "graphite",
        "write_html",
        "enabled",
        "time",
        "time",
        "setup_collectors",
        "log",
        "debug",
        "stop_time",
        "use_grafana",
        "grafana",
        "build_graph_url",
        "log",
        "info",
        "grafana_url",
        "hasattr",
        "ctx",
        "ctx",
        "summary",
        "grafana_url",
        "use_graphite",
        "graphite",
        "download_graphs",
        "graphite",
        "write_html",
        "mode",
        "fetch_archives",
        "remote",
        "cluster",
        "remotes",
        "keys",
        "log",
        "info",
        "archiver",
        "get_pmlogextract_cmd",
        "remote",
        "shortname",
        "os",
        "path",
        "join",
        "misc",
        "get_testdir",
        "remote",
        "shortname",
        "cmd",
        "append",
        "archive_out_path",
        "remote",
        "run",
        "args",
        "cmd",
        "PCP"
    ],
    "literals": [
        "'now'",
        "'/var/log/pcp/pmlogger'",
        "'0'",
        "'index'",
        "'meta'",
        "'pmlogextract'",
        "'-S'",
        "'-T'",
        "'*.0'",
        "\"@ %s\"",
        "'/'",
        "'now'",
        "'/grafana/index.html#/dashboard/script/index.js'",
        "'now'",
        "','",
        "'time_to'",
        "\"{base_url}?{args}\"",
        "'%Y-%m-%dT%H:%M:%S'",
        "'kernel.all.load.1 minute'",
        "'mem.util.free'",
        "'mem.util.used'",
        "'network.interface.*.bytes.*'",
        "'disk.all.read_bytes'",
        "'disk.all.write_bytes'",
        "'1200'",
        "'300'",
        "'false'",
        "'png'",
        "'/graphite/render'",
        "'now'",
        "'graphs'",
        "'url'",
        "\"Must provide a dest_dir!\"",
        "'dynamic'",
        "'pcp.html'",
        "'w'",
        "'dynamic'",
        "'pcp.j2'",
        "'url'",
        "'.png'",
        "'file'",
        "\"Graph download failed with error %s %s: %s\"",
        "'wb'",
        "'from'",
        "'until'",
        "'target'",
        "\"{base_url}?{args}\"",
        "''",
        "'*{}*'",
        "'{}.{}'",
        "' '",
        "'_'",
        "'*'",
        "'_all_'",
        "'pcp_host'",
        "'job_id'",
        "'now'",
        "'graphite'",
        "'grafana'",
        "'fetch_archives'",
        "\"start_time: %s\"",
        "\"cluster: %s\"",
        "'archive'",
        "'pcp'",
        "'graphite'",
        "'archive'",
        "\"PCP+Grafana dashboard: %s\"",
        "\"stop_time: %s\"",
        "\"PCP+Grafana dashboard: %s\"",
        "'summary'",
        "'pcp_grafana_url'",
        "'static'",
        "\"Copying PCP data into archive...\"",
        "'pcp_archive_%s'"
    ],
    "variables": [
        "log",
        "hosts",
        "time_from",
        "time_until",
        "archive_base_path",
        "archive_file_extensions",
        "cmd",
        "_endpoint",
        "base_url",
        "_endpoint",
        "job_id",
        "config",
        "config",
        "args",
        "template",
        "seconds",
        "dt",
        "metrics",
        "graph_defaults",
        "_endpoint",
        "dest_dir",
        "job_id",
        "graphs",
        "metric_dict",
        "metric_dict",
        "metric",
        "generated_html",
        "html_path",
        "cwd",
        "loader",
        "env",
        "template",
        "data",
        "url",
        "filename",
        "graph_path",
        "resp",
        "config",
        "args",
        "template",
        "globs",
        "globs",
        "result",
        "replacements",
        "result",
        "enabled",
        "enabled",
        "log",
        "job_id",
        "stop_time",
        "use_graphite",
        "use_grafana",
        "fetch_archives",
        "start_time",
        "hosts",
        "grafana",
        "use_graphite",
        "out_dir",
        "graphite",
        "fetch_archives",
        "archiver",
        "stop_time",
        "grafana_url",
        "cmd",
        "archive_out_path",
        "task"
    ],
    "comments": [
        "maybe run pcp role?",
        "urlencode with doseq=True encodes each item as a separate",
        "'target=' arg",
        "until the job stops, we may want to render graphs reflecting the most",
        "current data",
        "fetch_archives defaults to False for now because of various bugs in",
        "pmlogextract"
    ],
    "docstrings": [
        "\"\"\"\n    Collects performance data using PCP during a job.\n\n    Configuration options include:\n        ``graphite``: Whether to render PNG graphs using Graphite (default:\n            True)\n        ``grafana``: Whether to build (and submit to paddles) a link to a\n            dynamic Grafana dashboard containing graphs of performance data\n            (default: True)\n        ``fetch_archives``: Whether to assemble and ship a raw PCP archive\n        containing performance data to the job's output archive (default:\n            False)\n    \"\"\""
    ],
    "functions": [
        "get_archive_input_dir",
        "get_pmlogextract_cmd",
        "_format_time",
        "build_graph_url",
        "_format_time",
        "build_graph_urls",
        "_check_dest_dir",
        "write_html",
        "generate_html",
        "download_graphs",
        "get_graph_url",
        "get_target_globs",
        "_sanitize_metric_name",
        "setup",
        "setup_collectors",
        "setup_grafana",
        "setup_graphite",
        "setup_archive",
        "begin",
        "end"
    ],
    "classes": [
        "PCPDataSource",
        "PCPArchive",
        "PCPGrapher",
        "GrafanaGrapher",
        "GraphiteGrapher",
        "PCP"
    ]
}