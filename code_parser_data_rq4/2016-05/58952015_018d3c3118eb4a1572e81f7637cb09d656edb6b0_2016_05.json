{
    "identifiers": [
        "print_function",
        "argparse",
        "atexit",
        "datetime",
        "getpass",
        "jinja2",
        "os",
        "six",
        "ssl",
        "sys",
        "uuid",
        "collections",
        "defaultdict",
        "six",
        "moves",
        "configparser",
        "time",
        "time",
        "pyVmomi",
        "vim",
        "pyVim",
        "connect",
        "SmartConnect",
        "Disconnect",
        "ImportError",
        "json",
        "ImportError",
        "simplejson",
        "json",
        "vcr",
        "ImportError",
        "sys",
        "version_info",
        "load",
        "_empty_inventory",
        "load",
        "parse_cli_args",
        "read_settings",
        "is_cache_valid",
        "args",
        "refresh_cache",
        "cache_valid",
        "do_api_calls_update_cache",
        "get_inventory_from_cache",
        "text",
        "args",
        "debug",
        "text",
        "args",
        "host",
        "get_host_info",
        "args",
        "host",
        "args",
        "inventory",
        "json",
        "dumps",
        "data_to_print",
        "indent",
        "os",
        "path",
        "isfile",
        "cache_path_cache",
        "os",
        "path",
        "getmtime",
        "cache_path_cache",
        "time",
        "mod_time",
        "cache_max_age",
        "current_time",
        "valid",
        "get_instances",
        "instances",
        "instances_to_inventory",
        "instances",
        "write_to_cache",
        "inventory",
        "cache_path_cache",
        "data",
        "cache_path",
        "open",
        "cache_path_cache",
        "f",
        "f",
        "write",
        "json",
        "dumps",
        "data",
        "open",
        "cache_path_cache",
        "f",
        "f",
        "read",
        "json",
        "loads",
        "jdata",
        "os",
        "path",
        "realpath",
        "os",
        "path",
        "basename",
        "scriptbasename",
        "scriptbasename",
        "replace",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "scriptbasename",
        "six",
        "PY3",
        "configparser",
        "ConfigParser",
        "configparser",
        "SafeConfigParser",
        "os",
        "environ",
        "get",
        "defaults",
        "os",
        "path",
        "expanduser",
        "os",
        "path",
        "expandvars",
        "vmware_ini_path",
        "config",
        "read",
        "vmware_ini_path",
        "k",
        "v",
        "defaults",
        "iteritems",
        "config",
        "has_option",
        "k",
        "config",
        "k",
        "v",
        "os",
        "path",
        "expanduser",
        "config",
        "get",
        "cache_dir",
        "os",
        "path",
        "exists",
        "cache_dir",
        "os",
        "makedirs",
        "cache_dir",
        "config",
        "get",
        "cache_dir",
        "cache_name",
        "config",
        "getint",
        "os",
        "environ",
        "get",
        "config",
        "get",
        "os",
        "environ",
        "get",
        "config",
        "get",
        "os",
        "environ",
        "get",
        "config",
        "get",
        "os",
        "environ",
        "get",
        "config",
        "get",
        "config",
        "get",
        "config",
        "get",
        "lowerkeys",
        "lowerkeys",
        "lower",
        "config",
        "get",
        "split",
        "config",
        "get",
        "split",
        "config",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "server",
        "username",
        "password",
        "port",
        "hasattr",
        "ssl",
        "ssl",
        "SSLContext",
        "ssl",
        "PROTOCOL_TLSv1",
        "ssl",
        "CERT_NONE",
        "context",
        "debugl",
        "_get_instances",
        "kwargs",
        "debugl",
        "instances",
        "inkwargs",
        "SmartConnect",
        "inkwargs",
        "si",
        "atexit",
        "register",
        "Disconnect",
        "si",
        "si",
        "RetrieveContent",
        "child",
        "content",
        "rootFolder",
        "childEntity",
        "instances",
        "_get_instances_from_children",
        "child",
        "args",
        "max_instances",
        "len",
        "instances",
        "args",
        "max_instances",
        "instances",
        "args",
        "max_instances",
        "instance",
        "sorted",
        "instances",
        "facts_from_vobj",
        "instance",
        "instance_tuples",
        "append",
        "instance",
        "ifacts",
        "instance_tuples",
        "child",
        "hasattr",
        "child",
        "debugl",
        "child",
        "childEntity",
        "instances",
        "_get_instances_from_children",
        "child",
        "childEntity",
        "hasattr",
        "child",
        "debugl",
        "child",
        "instances",
        "_get_instances_from_children",
        "child",
        "vmFolder",
        "hasattr",
        "child",
        "debugl",
        "child",
        "x",
        "sorted",
        "child",
        "debugl",
        "x",
        "instances",
        "_get_instances_from_children",
        "x",
        "hasattr",
        "child",
        "debugl",
        "child",
        "instances",
        "append",
        "child",
        "hasattr",
        "child",
        "debugl",
        "child",
        "vm",
        "child",
        "vm",
        "instances",
        "_get_instances_from_children",
        "child",
        "vm",
        "debugl",
        "debugl",
        "child",
        "__dict__",
        "e",
        "debugl",
        "child",
        "instances",
        "instances",
        "_empty_inventory",
        "inventory",
        "len",
        "instances",
        "idx",
        "instance",
        "instances",
        "uuid",
        "uuid4",
        "instance",
        "inventory",
        "append",
        "thisid",
        "inventory",
        "idata",
        "copy",
        "inventory",
        "thisid",
        "thisid",
        "create_template_mapping",
        "inventory",
        "config",
        "get",
        "create_template_mapping",
        "inventory",
        "config",
        "get",
        "k",
        "v",
        "name_mapping",
        "iteritems",
        "inventory",
        "k",
        "host_mapping",
        "k",
        "inventory",
        "k",
        "host_mapping",
        "k",
        "k",
        "v",
        "inventory",
        "append",
        "v",
        "inventory",
        "inventory",
        "k",
        "inventory",
        "remove",
        "k",
        "inventory",
        "pop",
        "k",
        "debugl",
        "i",
        "inventory",
        "debugl",
        "i",
        "hf",
        "host_filters",
        "hf",
        "create_template_mapping",
        "inventory",
        "hf",
        "dtype",
        "k",
        "v",
        "filter_map",
        "iteritems",
        "v",
        "inventory",
        "remove",
        "k",
        "inventory",
        "pop",
        "k",
        "debugl",
        "i",
        "inventory",
        "debugl",
        "i",
        "gbp",
        "groupby_patterns",
        "create_template_mapping",
        "inventory",
        "gbp",
        "k",
        "v",
        "groupby_map",
        "iteritems",
        "v",
        "inventory",
        "inventory",
        "v",
        "k",
        "inventory",
        "v",
        "inventory",
        "v",
        "append",
        "k",
        "inventory",
        "inventory",
        "pattern",
        "dtype",
        "k",
        "v",
        "inventory",
        "iteritems",
        "jinja2",
        "Template",
        "pattern",
        "t",
        "render",
        "v",
        "newkey",
        "strip",
        "e",
        "debugl",
        "e",
        "dtype",
        "newkey",
        "dtype",
        "newkey",
        "lower",
        "newkey",
        "lower",
        "dtype",
        "newkey",
        "mapping",
        "vobj",
        "level",
        "hasattr",
        "vobj",
        "vobj",
        "rdata",
        "level",
        "maxlevel",
        "rdata",
        "hasattr",
        "vobj",
        "level",
        "sorted",
        "vobj",
        "__dict__",
        "keys",
        "k",
        "keys",
        "vobj",
        "__dict__",
        "k",
        "k",
        "startswith",
        "k",
        "lower",
        "skip_keys",
        "lowerkeys",
        "k",
        "lower",
        "_process_object_types",
        "v",
        "level",
        "level",
        "dir",
        "vobj",
        "x",
        "x",
        "methods",
        "x",
        "startswith",
        "x",
        "x",
        "methods",
        "x",
        "bad_types",
        "sorted",
        "methods",
        "method",
        "methods",
        "method",
        "rdata",
        "getattr",
        "vobj",
        "method",
        "e",
        "callable",
        "methodToCall",
        "lowerkeys",
        "method",
        "lower",
        "_process_object_types",
        "methodToCall",
        "level",
        "level",
        "rdata",
        "vobj",
        "level",
        "debugl",
        "vobj",
        "vobj",
        "safe_types",
        "vobj",
        "e",
        "debugl",
        "e",
        "hasattr",
        "vobj",
        "vi",
        "sorted",
        "vobj",
        "vi",
        "safe_types",
        "rdata",
        "append",
        "vi",
        "level",
        "maxlevel",
        "facts_from_vobj",
        "vi",
        "level",
        "level",
        "vid",
        "rdata",
        "append",
        "vid",
        "hasattr",
        "vobj",
        "level",
        "maxlevel",
        "facts_from_vobj",
        "vobj",
        "level",
        "level",
        "md",
        "md",
        "vobj",
        "vobj",
        "safe_types",
        "vobj",
        "vobj",
        "datetime",
        "datetime",
        "vobj",
        "debugl",
        "vobj",
        "rdata",
        "rdata",
        "host",
        "inventory",
        "host",
        "VMWareInventory",
        "show"
    ],
    "literals": [
        "'VMWareInventory'",
        "'Array'",
        "'dynamicproperty'",
        "'dynamictype'",
        "'managedby'",
        "'childtype'",
        "\"_meta\"",
        "\"hostvars\"",
        "'wb'",
        "'rb'",
        "'.py'",
        "''",
        "'vmware'",
        "'server'",
        "''",
        "'port'",
        "'username'",
        "''",
        "'password'",
        "''",
        "'ini_path'",
        "'%s.ini'",
        "'cache_name'",
        "'ansible-vmware'",
        "'cache_path'",
        "'~/.ansible/tmp'",
        "'cache_max_age'",
        "'max_object_level'",
        "'alias_pattern'",
        "'{{ config.name + \"_\" + config.uuid }}'",
        "'host_pattern'",
        "'{{ guest.ipaddress }}'",
        "'host_filters'",
        "'{{ guest.gueststate == \"running\" }}'",
        "'groupby_patterns'",
        "'{{ guest.guestid }},{{ \"templates\" if config.template else \"guests\"}}'",
        "'lower_var_keys'",
        "'VMWARE_INI_PATH'",
        "'vmware'",
        "'ini_path'",
        "'vmware'",
        "'vmware'",
        "'vmware'",
        "'vmware'",
        "'cache_path'",
        "'vmware'",
        "'cache_name'",
        "\"/%s.cache\"",
        "'vmware'",
        "'cache_max_age'",
        "'VMWARE_SERVER'",
        "'vmware'",
        "'server'",
        "'VMWARE_PORT'",
        "'vmware'",
        "'port'",
        "'VMWARE_USERNAME'",
        "'vmware'",
        "'username'",
        "'VMWARE_PASSWORD'",
        "'vmware'",
        "'password'",
        "'vmware'",
        "'max_object_level'",
        "'vmware'",
        "'lower_var_keys'",
        "'yes'",
        "'true'",
        "'1'",
        "'vmware'",
        "'host_filters'",
        "','",
        "'vmware'",
        "'groupby_patterns'",
        "','",
        "'Produce an Ansible Inventory file based on PyVmomi'",
        "'--debug'",
        "'store_true'",
        "'show debug info'",
        "'--list'",
        "'store_true'",
        "'List instances (default: True)'",
        "'--host'",
        "'store'",
        "'Get all the variables about a specific instance'",
        "'--refresh-cache'",
        "'store_true'",
        "'Force refresh of cache by making API requests to VSphere (default: False - use cache files)'",
        "'--max-instances'",
        "'maximum number of instances to retrieve'",
        "'host'",
        "'user'",
        "'pwd'",
        "'port'",
        "'SSLContext'",
        "'sslContext'",
        "\"### RUNNING WITHOUT VCR\"",
        "\"### INSTANCES RETRIEVED\"",
        "\"Could not connect to the specified host using specified \"",
        "\"username and password\"",
        "'childEntity'",
        "\"CHILDREN: %s\"",
        "'vmFolder'",
        "\"FOLDER: %s\"",
        "'index'",
        "\"LIST: %s\"",
        "\"LIST_ITEM: %s\"",
        "'guest'",
        "\"GUEST: %s\"",
        "'vm'",
        "\"RESOURCEPOOL: %s\"",
        "\"ELSE ...\"",
        "'all'",
        "'all'",
        "'hosts'",
        "'all'",
        "'hosts'",
        "'_meta'",
        "'hostvars'",
        "'_meta'",
        "'hostvars'",
        "'ansible_uuid'",
        "'vmware'",
        "'alias_pattern'",
        "'vmware'",
        "'host_pattern'",
        "'_meta'",
        "'hostvars'",
        "'ansible_host'",
        "'_meta'",
        "'hostvars'",
        "'ansible_ssh_host'",
        "'all'",
        "'hosts'",
        "'_meta'",
        "'hostvars'",
        "'_meta'",
        "'hostvars'",
        "'all'",
        "'hosts'",
        "'_meta'",
        "'hostvars'",
        "'PREFILTER_HOSTS:'",
        "'all'",
        "'hosts'",
        "'boolean'",
        "'all'",
        "'hosts'",
        "'_meta'",
        "'hostvars'",
        "'POSTFILTER_HOSTS:'",
        "'all'",
        "'hosts'",
        "'hosts'",
        "'hosts'",
        "'hosts'",
        "'string'",
        "'_meta'",
        "'hostvars'",
        "'integer'",
        "'boolean'",
        "'false'",
        "'true'",
        "'string'",
        "'__name__'",
        "'VMWareInventory'",
        "'__dict__'",
        "'_'",
        "'_'",
        "\"PROCESSING: %s\"",
        "'append'",
        "'__dict__'",
        "\"unknown datatype: %s\"",
        "'_meta'",
        "'hostvars'",
        "\"__main__\""
    ],
    "variables": [
        "HAS_PYVMOMI",
        "HAS_PYVMOMI",
        "hasvcr",
        "hasvcr",
        "instances",
        "debug",
        "load_dumpfile",
        "write_dumpfile",
        "maxlevel",
        "lowerkeys",
        "config",
        "cache_max_age",
        "cache_path_cache",
        "cache_path_index",
        "server",
        "port",
        "username",
        "password",
        "host_filters",
        "groupby_patterns",
        "bad_types",
        "safe_types",
        "safe_types",
        "iter_types",
        "skip_keys",
        "inventory",
        "cache_valid",
        "inventory",
        "data_to_print",
        "data_to_print",
        "data_to_print",
        "valid",
        "mod_time",
        "current_time",
        "valid",
        "instances",
        "instances",
        "inventory",
        "jdata",
        "jdata",
        "scriptbasename",
        "scriptbasename",
        "scriptbasename",
        "defaults",
        "config",
        "config",
        "vmware_ini_path",
        "vmware_ini_path",
        "cache_dir",
        "cache_name",
        "cache_path_cache",
        "cache_max_age",
        "server",
        "port",
        "username",
        "password",
        "maxlevel",
        "lowerkeys",
        "lowerkeys",
        "lowerkeys",
        "host_filters",
        "groupby_patterns",
        "config",
        "parser",
        "args",
        "instances",
        "kwargs",
        "context",
        "context",
        "verify_mode",
        "kwargs",
        "instances",
        "instances",
        "si",
        "content",
        "instances",
        "instance_tuples",
        "ifacts",
        "instances",
        "inventory",
        "inventory",
        "last_idata",
        "total",
        "thisid",
        "idata",
        "thisid",
        "name_mapping",
        "host_mapping",
        "v",
        "filter_map",
        "groupby_map",
        "inventory",
        "v",
        "mapping",
        "t",
        "newkey",
        "newkey",
        "newkey",
        "newkey",
        "newkey",
        "newkey",
        "mapping",
        "k",
        "rdata",
        "keys",
        "v",
        "k",
        "rdata",
        "k",
        "methods",
        "methods",
        "methods",
        "methods",
        "methodToCall",
        "method",
        "rdata",
        "method",
        "rdata",
        "rdata",
        "rdata",
        "vid",
        "md",
        "md",
        "rdata",
        "rdata",
        "rdata",
        "rdata"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Requirements",
        "- pyvmomi >= 6.0.0.2016.4",
        "TODO:",
        "Read settings and parse CLI arguments",
        "Check the cache",
        "Handle Cache",
        "Data to print",
        "Display list of instances for inventory",
        "where is the config?",
        "apply defaults",
        "where is the cache?",
        "set the cache filename and max age",
        "mark the connection info",
        "behavior control",
        "save the config",
        "older ssl libs do not have an SSLContext method:",
        "context = ssl.SSLContext(ssl.PROTOCOL_TLSv1)",
        "AttributeError: 'module' object has no attribute 'SSLContext'",
        "older pyvmomi version also do not have an sslcontext kwarg:",
        "https://github.com/vmware/pyvmomi/commit/92c1de5056be7c5390ac2a28eb08ad939a4b7cdd",
        "resource pools",
        "make a unique id for this object to avoid vmware's",
        "numerous uuid's which aren't all unique.",
        "Put it in the inventory",
        "Make a map of the uuid to the name the user wants",
        "Make a map of the uuid to the ssh hostname the user wants",
        "Reset the inventory keys",
        "set ansible_host (2.x)",
        "1.9.x backwards compliance",
        "add new key",
        "cleanup old key",
        "Apply host filters",
        "delete this host",
        "Create groups",
        "import epdb; epdb.st()",
        "pyvmomi objects are not yet serializable, but may be one day ...",
        "https://github.com/vmware/pyvmomi/issues/21",
        "Do not serialize self",
        "Exit early if maxlevel is reached",
        "Objects usually have a dict property",
        "Skip private methods",
        "Attempt to get the method, skip on fail",
        "Skip callable methods",
        "Run the script"
    ],
    "docstrings": [
        "* more jq examples",
        "* optional folder heirarchy",
        "\"\"\"\n$ jq '._meta.hostvars[].config' data.json | head\n{\n  \"alternateguestname\": \"\",\n  \"instanceuuid\": \"5035a5cd-b8e8-d717-e133-2d383eb0d675\",\n  \"memoryhotaddenabled\": false,\n  \"guestfullname\": \"Red Hat Enterprise Linux 7 (64-bit)\",\n  \"changeversion\": \"2016-05-16T18:43:14.977925Z\",\n  \"uuid\": \"4235fc97-5ddb-7a17-193b-9a3ac97dc7b4\",\n  \"cpuhotremoveenabled\": false,\n  \"vpmcenabled\": false,\n  \"firmware\": \"bios\",\n\"\"\"",
        "''' Determines if the cache files have expired, or if it is still valid '''",
        "''' Get instances and cache the data '''",
        "''' Dump inventory to json file '''",
        "''' Read in jsonified inventory '''",
        "''' Reads the settings from the vmware_inventory.ini file '''",
        "''' Command line argument processing '''",
        "''' Get a list of vm instances with pyvmomi '''",
        "''' Make API calls without VCR fixtures '''",
        "''' Convert a list of vm objects into a json compliant inventory '''",
        "''' Return a hash of uuid to templated string from pattern '''",
        "''' Traverse a VM object and return a json compliant data structure '''",
        "''' Return hostvars for a single host '''"
    ],
    "functions": [
        "_empty_inventory",
        "debugl",
        "show",
        "is_cache_valid",
        "do_api_calls_update_cache",
        "write_to_cache",
        "get_inventory_from_cache",
        "read_settings",
        "parse_cli_args",
        "get_instances",
        "_get_instances",
        "_get_instances_from_children",
        "instances_to_inventory",
        "create_template_mapping",
        "facts_from_vobj",
        "_process_object_types",
        "get_host_info"
    ],
    "classes": [
        "VMWareInventory"
    ]
}