{
    "identifiers": [
        "os",
        "sys",
        "commands",
        "glob",
        "buildtools",
        "BuildContext",
        "sys",
        "argv",
        "CTX",
        "LEVEL",
        "CTX",
        "EXTRAFLAGS",
        "CTX",
        "LEVEL",
        "CTX",
        "EXTRAFLAGS",
        "CTX",
        "LEVEL",
        "CTX",
        "EXTRAFLAGS",
        "CTX",
        "LEVEL",
        "CTX",
        "EXTRAFLAGS",
        "CTX",
        "COVERAGE",
        "CTX",
        "EXTRAFLAGS",
        "CTX",
        "OUTPUT_PREFIX",
        "CTX",
        "VOLT_LOG_LEVEL",
        "CTX",
        "VOLT_LOG_LEVEL",
        "CTX",
        "EXTRAFLAGS",
        "volt_log_level",
        "CTX",
        "TEST_EXTRAFLAGS",
        "volt_log_level",
        "CTX",
        "OUTPUT_PREFIX",
        "gcc_major",
        "gcc_minor",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "PLATFORM",
        "CTX",
        "LDFLAGS",
        "CTX",
        "COVERAGE",
        "CTX",
        "LDFLAGS",
        "CTX",
        "LEVEL",
        "CTX",
        "TEST_EXTRAFLAGS",
        "CTX",
        "LEVEL",
        "CTX",
        "TEST_EXTRAFLAGS",
        "CTX",
        "TEST_EXTRAFLAGS",
        "CTX",
        "JNILIBFLAGS",
        "CTX",
        "SOFLAGS",
        "Popen",
        "split",
        "stdout",
        "PIPE",
        "communicate",
        "join",
        "path",
        "path",
        "strip",
        "split",
        "path",
        "path",
        "CTX",
        "JNIBINFLAGS",
        "libpaths",
        "CTX",
        "JNIBINFLAGS",
        "CTX",
        "PLATFORM",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "PLATFORM_VERSION",
        "split",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "PLATFORM_VERSION",
        "split",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "SOFLAGS",
        "CTX",
        "PLATFORM",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "NMFLAGS",
        "CTX",
        "INPUT",
        "f",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "CTX",
        "INPUT_PREFIX",
        "catalog_files",
        "append",
        "os",
        "path",
        "basename",
        "f",
        "CTX",
        "INPUT",
        "join",
        "sorted",
        "catalog_files",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "INPUT",
        "CTX",
        "THIRD_PARTY_INPUT",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "TESTS",
        "CTX",
        "STORAGE_MMAP",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ARIES",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_BUILD",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_NVM",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_REVERSIBLE_LRU",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_DRAM",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_TIMESTAMPS",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "ANTICACHE_TIMESTAMPS_PRIME",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "SYSTEM_DIRS",
        "append",
        "os",
        "path",
        "join",
        "CTX",
        "OUTPUT_PREFIX",
        "CTX",
        "THIRD_PARTY_STATIC_LIBS",
        "extend",
        "CTX",
        "INPUT",
        "CTX",
        "TESTS",
        "CTX",
        "SYSTEM_DIRS",
        "append",
        "os",
        "path",
        "join",
        "CTX",
        "OUTPUT_PREFIX",
        "CTX",
        "THIRD_PARTY_STATIC_LIBS",
        "extend",
        "buildMakefile",
        "CTX",
        "CTX",
        "PLATFORM",
        "commands",
        "getstatusoutput",
        "strip",
        "split",
        "output",
        "CTX",
        "PLATFORM",
        "line",
        "open",
        "readlines",
        "strip",
        "split",
        "line",
        "len",
        "name_value",
        "name_value",
        "name",
        "numHardwareThreads",
        "CTX",
        "PLATFORM",
        "numHardwareThreads",
        "os",
        "system",
        "CTX",
        "OUTPUT_PREFIX",
        "numHardwareThreads",
        "retval",
        "retval",
        "sys",
        "exit",
        "CTX",
        "TARGET",
        "buildTests",
        "CTX",
        "CTX",
        "TARGET",
        "runTests",
        "CTX",
        "CTX",
        "TARGET",
        "buildIPC",
        "CTX",
        "retval",
        "sys",
        "exit"
    ],
    "literals": [
        "\"MEMCHECK\"",
        "\" -g3 -rdynamic -DDEBUG -DMEMCHECK\"",
        "\"obj/memcheck\"",
        "\"MEMCHECK_NOFREELIST\"",
        "\" -g3 -rdynamic -DDEBUG -DMEMCHECK -DMEMCHECK_NOFREELIST\"",
        "\"obj/memcheck_nofreelist\"",
        "\"DEBUG\"",
        "\" -g3 -rdynamic -DDEBUG\"",
        "\"obj/release\"",
        "\"RELEASE\"",
        "\" -g3 -O3 -mmmx -msse -msse2 -msse3 -DNDEBUG\"",
        "\"obj/release\"",
        "\" -ftest-coverage -fprofile-arcs\"",
        "\"-coverage\"",
        "\" -DVOLT_LOG_LEVEL=%d\"",
        "\" -DVOLT_LOG_LEVEL=%d\"",
        "\"/\"",
        "\" -Wno-ignored-qualifiers -fno-strict-aliasing\"",
        "\"Linux\"",
        "\" -rdynamic\"",
        "\" -ftest-coverage -fprofile-arcs\"",
        "'src/ee'",
        "'third_party/cpp'",
        "\"MEMCHECK\"",
        "\"MEMCHECK_NOFREELIST\"",
        "'/usr/include'",
        "'/usr/lib'",
        "'third_party'",
        "\"src/ee\"",
        "\"third_party/cpp/\"",
        "\"tests/ee\"",
        "\"so\"",
        "\" -shared\"",
        "\" -shared\"",
        "\"so\"",
        "'java -cp tools/ SystemPropertyPrinter java.library.path'",
        "' '",
        "'-L'",
        "':'",
        "''",
        "'/usr/lib'",
        "\" \"",
        "\" -ljava -ljvm -lverify\"",
        "\"Darwin\"",
        "\" -DMACOSX \"",
        "\".\"",
        "\" -arch x86_64\"",
        "\".\"",
        "\" -Wno-sign-conversion\"",
        "\"jnilib\"",
        "\" -bundle\"",
        "\" -framework JavaVM,1.6\"",
        "\"-dynamiclib -undefined dynamic_lookup -single_module\"",
        "\"dylib\"",
        "\"-framework JavaVM,1.6\"",
        "\"Linux\"",
        "\" -Wno-attributes -DLINUX -fPIC -Wno-unused-but-set-variable\"",
        "\" --demangle\"",
        "''",
        "'catalog'",
        "'*.cpp'",
        "'catalog'",
        "\"\\n\"",
        "'common'",
        "'execution'",
        "'executors'",
        "'expressions'",
        "'plannodes'",
        "'indexes'",
        "'storage'",
        "'stats'",
        "'logging'",
        "'json_spirit'",
        "'.'",
        "'catalog'",
        "'logging'",
        "'common'",
        "'execution'",
        "'expressions'",
        "'indexes'",
        "'storage'",
        "\" -DSTORAGE_MMAP\"",
        "\" -DARIES\"",
        "\" -DANTICACHE\"",
        "\" -DANTICACHE_NVM\"",
        "\" -DANTICACHE_REVERSIBLE_LRU\"",
        "\" -DANTICACHE_DRAM\"",
        "\" -DANTICACHE_TIMESTAMPS\"",
        "\" -DANTICACHE_TIMESTAMPS_PRIME\"",
        "'berkeleydb'",
        "\"berkeleydb/libdb.a\"",
        "\"berkeleydb/libdb_cxx.a\"",
        "'anticache'",
        "'anticache'",
        "'masstree'",
        "\"masstree/mtIndexAPI.a\"",
        "\"Darwin\"",
        "\"sysctl hw.ncpu\"",
        "\"Linux\"",
        "'/proc/cpuinfo'",
        "':'",
        "\"processor\"",
        "\"WARNING: Unsupported platform type '%s'\"",
        "\"Detected %d hardware threads to use during the build\"",
        "\"make --directory=%s -j%d nativelibs/libvoltdb.sym\"",
        "\"Make returned: \"",
        "\"BUILDTEST\"",
        "\"TEST\"",
        "\"VOLTDBIPC\""
    ],
    "variables": [
        "CTX",
        "volt_log_level",
        "CTX",
        "OUTPUT_PREFIX",
        "volt_log_level",
        "CTX",
        "OUTPUT_PREFIX",
        "volt_log_level",
        "CTX",
        "OUTPUT_PREFIX",
        "volt_log_level",
        "CTX",
        "OUTPUT_PREFIX",
        "volt_log_level",
        "volt_log_level",
        "CTX",
        "CPPFLAGS",
        "CTX",
        "LDFLAGS",
        "CTX",
        "INCLUDE_DIRS",
        "CTX",
        "SYSTEM_DIRS",
        "CTX",
        "IGNORE_SYS_PREFIXES",
        "CTX",
        "INPUT_PREFIX",
        "CTX",
        "THIRD_PARTY_INPUT_PREFIX",
        "CTX",
        "THIRD_PARTY_STATIC_LIBS",
        "CTX",
        "TEST_PREFIX",
        "CTX",
        "JNIEXT",
        "CTX",
        "SOEXT",
        "libpaths",
        "CTX",
        "JNIEXT",
        "CTX",
        "JNILIBFLAGS",
        "CTX",
        "JNIBINFLAGS",
        "CTX",
        "SOEXT",
        "CTX",
        "JNIFLAGS",
        "catalog_files",
        "numHardwareThreads",
        "numHardwareThreads",
        "output",
        "numHardwareThreads",
        "numHardwareThreads",
        "name_value",
        "name",
        "value",
        "numHardwareThreads",
        "retval",
        "retval",
        "retval",
        "retval",
        "retval"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "usage:",
        "The following all work as you might expect:",
        "python build.py",
        "./build.py debug",
        "python build.py release",
        "python build.py test",
        "./build.py clean",
        "./build.py release clean",
        "python build.py release test",
        "The command line args can include a build level: release or debug",
        "the default is debug",
        "The command line args can include an action: build, clean or test",
        "the default is build",
        "The order doesn't matter",
        "Including multiple levels or actions is a bad idea",
        "",
        "INITIALIZE BUILD CONTEXT",
        "- Detect Platform",
        "- Parse Target and Level from Command Line",
        "",
        "CTX is an instance of BuildContext, which is declared in buildtools.py",
        "BuildContext contains vars that determine how the makefile will be built",
        "and how the build will go down. It also checks the platform and parses",
        "command line args to determine target and build level.",
        "",
        "SET RELEASE LEVEL CONTEXT",
        "",
        "-ffast-math -funroll-loops\"",
        "build in parallel directory instead of subdir so that relative paths work",
        "Override the default log level if they gave us one",
        "",
        "SET GLOBAL CONTEXT VARIABLES FOR BUILDING",
        "",
        "these are the base compile options that get added to every compile step",
        "this does not include header/lib search paths or specific flags for",
        "specific targets",
        "linker flags",
        "Done by default on Darwin -- unrecognized option for the linker on Darwin",
        "for the google perftools profiler and the recommended stack unwinder",
        "CTX.LDFLAGS = \"\"\" -g3 -rdynamic -lprofiler -lunwind\"\"\"",
        "this is where the build will look for header files",
        "- the test source will also automatically look in the test root dir",
        "extra flags that will get added to building test source",
        "don't worry about checking for changes in header files in the following",
        "directories",
        "where to find the source",
        "where to find the source",
        "Third-Party Static Libraries",
        "where to find the tests",
        "",
        "HANDLE PLATFORM SPECIFIC STUFF",
        "",
        "Defaults Section",
        "2012-02-10",
        "Don't include the 'arch' flag for newer versions of OSX",
        "2012-12-18",
        "Disable sign conversion warnings for Mountain Lion",
        "",
        "SPECIFY SOURCE FILE INPUT",
        "",
        "the input is a map from directory name to a list of whitespace",
        "separated source files (cpp only for now).  Preferred ordering is",
        "one file per line, indented one space, in alphabetical order.",
        "2012-03-14",
        "Automatically grab all of our catalog files",
        "specify the third party input",
        "",
        "SPECIFY THE TESTS",
        "",
        "input format similar to source, but the executable name is listed",
        "index_more_test",
        "these are incomplete and out of date. need to be replaced",
        "CTX.TESTS['expressions'] = \"\"\"expserialize_test expression_test\"\"\"",
        "",
        "STORAGE MMAP",
        "",
        "",
        "ARIES",
        "",
        "",
        "ANTI-CACHING",
        "",
        "Bring in berkeleydb library",
        "BerkeleyDB Base Library",
        "BerkeleyDB C++ Library",
        "",
        "ANTI-CACHING",
        "",
        "Bring in masstree library",
        "Masstree C++ Library",
        "",
        "BUILD THE MAKEFILE",
        "",
        "print \"TARGET PLATFORM: \", CTX.PLATFORM, \"-\", CTX.PLATFORM_VERSION",
        "print \"CPPFLAGS: \", CTX.CPPFLAGS",
        "print sys.stdout.flush()",
        "this function (in buildtools.py) generates the makefile",
        "it's currently a bit ugly but it'll get cleaned up soon",
        "",
        "RUN THE MAKEFILE",
        "",
        "",
        "RUN THE TESTS IF ASKED TO",
        ""
    ],
    "docstrings": [
        "\"\"\"-Wall -Wextra -Werror -Woverloaded-virtual -Wconversion\n            -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings\n            -Winit-self -Wno-sign-compare -Wno-unused-parameter\n            -pthread\n            -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS -DNOCLOCK\n            -fno-omit-frame-pointer\n            -fvisibility=hidden -DBOOST_SP_DISABLE_THREADS\"\"\"",
        "\"\"\"-g3 -ldl\"\"\"",
        "\"\"\" -g3 -DDEBUG -DMEMCHECK\"\"\"",
        "\"\"\" -g3 -DDEBUG -DMEMCHECK -DMEMCHECK_NOFREELIST\"\"\"",
        "\"\"\" -g3 -DDEBUG \"\"\"",
        "\"\"\"\n voltdbjni.cpp\n\"\"\"",
        "\"\"\"\n SegvException.cpp\n SerializableEEException.cpp\n SQLException.cpp\n tabletuple.cpp\n TupleSchema.cpp\n types.cpp\n UndoLog.cpp\n NValue.cpp\n MMAPMemoryManager.cpp\n RecoveryProtoMessage.cpp\n RecoveryProtoMessageBuilder.cpp\n DefaultTupleSerializer.cpp\n StringRef.cpp\n\"\"\"",
        "\"\"\"\n JNITopend.cpp\n VoltDBEngine.cpp\n\"\"\"",
        "\"\"\"\n abstractexecutor.cpp\n deleteexecutor.cpp\n distinctexecutor.cpp\n executorutil.cpp\n indexscanexecutor.cpp\n insertexecutor.cpp\n limitexecutor.cpp\n materializeexecutor.cpp\n nestloopexecutor.cpp\n nestloopindexexecutor.cpp\n orderbyexecutor.cpp\n projectionexecutor.cpp\n receiveexecutor.cpp\n sendexecutor.cpp\n seqscanexecutor.cpp\n unionexecutor.cpp\n updateexecutor.cpp\n\"\"\"",
        "\"\"\"\n abstractexpression.cpp\n expressionutil.cpp\n tupleaddressexpression.cpp\n\"\"\"",
        "\"\"\"\n abstractjoinnode.cpp\n abstractoperationnode.cpp\n abstractplannode.cpp\n abstractscannode.cpp\n aggregatenode.cpp\n deletenode.cpp\n distinctnode.cpp\n indexscannode.cpp\n insertnode.cpp\n limitnode.cpp\n materializenode.cpp\n nestloopindexnode.cpp\n nestloopnode.cpp\n orderbynode.cpp\n PlanColumn.cpp\n plannodefragment.cpp\n plannodeutil.cpp\n projectionnode.cpp\n receivenode.cpp\n sendnode.cpp\n seqscannode.cpp\n unionnode.cpp\n updatenode.cpp\n\"\"\"",
        "\"\"\"\n arrayuniqueindex.cpp\n tableindex.cpp\n tableindexfactory.cpp\n IndexStats.cpp\n\"\"\"",
        "\"\"\"\n constraintutil.cpp\n CopyOnWriteContext.cpp\n CopyOnWriteIterator.cpp\n ConstraintFailureException.cpp\n MaterializedViewMetadata.cpp\n mmap_persistenttable.cpp\n persistenttable.cpp\n PersistentTableStats.cpp\n PersistentTableUndoDeleteAction.cpp\n PersistentTableUndoInsertAction.cpp\n PersistentTableUndoUpdateAction.cpp\n StreamedTableStats.cpp\n streamedtable.cpp\n table.cpp\n TableCatalogDelegate.cpp\n tablefactory.cpp\n TableStats.cpp\n tableutil.cpp\n temptable.cpp\n TupleStreamWrapper.cpp\n RecoveryContext.cpp\n ReadWriteTracker.cpp\n\"\"\"",
        "\"\"\"\n StatsAgent.cpp\n StatsSource.cpp\n\"\"\"",
        "\"\"\"\n JNILogProxy.cpp\n LogManager.cpp\n AriesLogProxy.cpp\n Logrecord.cpp\n\"\"\"",
        "\"\"\"\n json_spirit_reader.cpp\n json_spirit_value.cpp\n\"\"\"",
        "\"\"\"\n harness_test\n\"\"\"",
        "\"\"\"\n catalog_test\n\"\"\"",
        "\"\"\"\n logging_test\n\"\"\"",
        "\"\"\"\n debuglog_test\n serializeio_test\n undolog_test\n valuearray_test\n nvalue_test\n tupleschema_test\n tabletuple_test\n\"\"\"",
        "\"\"\"\n engine_test\n\"\"\"",
        "\"\"\"\n expression_test\n\"\"\"",
        "\"\"\"\n index_allocatortracker_test\n index_key_test\n index_multikey_test\n index_scripted_test\n index_test\n\"\"\"",
        "\"\"\"\n CopyOnWriteTest\n constraint_test\n filter_test\n mmap_persistent_table_test\n persistent_table_log_test\n serialize_test\n StreamedTable_test\n table_and_indexes_test\n table_test\n tabletuple_export_test\n TupleStreamWrapper_test\n\"\"\"",
        "\"\"\"\n        EvictedTupleAccessException.cpp\n        UnknownBlockAccessException.cpp\n        FullBackingStoreException.cpp\n        AntiCacheDB.cpp\n        BerkeleyAntiCacheDB.cpp\n        NVMAntiCacheDB.cpp\n        AntiCacheEvictionManager.cpp\n        EvictionIterator.cpp\n        EvictedTable.cpp\n    \"\"\"",
        "\"\"\"\n        anticachedb_test\n        berkeleydb_test\n        anticache_eviction_manager_test\n    \"\"\""
    ],
    "functions": [],
    "classes": []
}