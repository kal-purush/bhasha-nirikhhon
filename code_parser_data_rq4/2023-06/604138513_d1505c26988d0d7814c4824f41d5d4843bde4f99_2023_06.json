{
    "identifiers": [
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "boardreply",
        "web",
        "restassured",
        "io",
        "restassured",
        "RestAssured",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "board",
        "persistence",
        "Board",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "board",
        "persistence",
        "BoardRepository",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "boardreply",
        "persistence",
        "BoardReply",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "boardreply",
        "persistence",
        "BoardReplyRepository",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "boardreply",
        "web",
        "dto",
        "CreateBoardReplyRequest",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "hospital",
        "persistence",
        "Hospital",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "hospital",
        "persistence",
        "HospitalRepository",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "member",
        "persistence",
        "Member",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "member",
        "persistence",
        "MemberRepository",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "staff",
        "persistence",
        "Staff",
        "io",
        "wisoft",
        "capstonedesign",
        "domain",
        "staff",
        "persistence",
        "StaffRepository",
        "io",
        "wisoft",
        "capstonedesign",
        "enumeration",
        "HospitalDept",
        "io",
        "wisoft",
        "capstonedesign",
        "jwt",
        "JwtTokenProvider",
        "io",
        "wisoft",
        "capstonedesign",
        "redis",
        "RedisAdapter",
        "io",
        "wisoft",
        "capstonedesign",
        "setting",
        "common",
        "ApiTest",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayName",
        "org",
        "junit",
        "jupiter",
        "api",
        "Nested",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "MediaType",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "Autowired",
        "boardRepository",
        "Autowired",
        "staffRepository",
        "Autowired",
        "memberRepository",
        "Autowired",
        "hospitalRepository",
        "Autowired",
        "boardReplyRepository",
        "Autowired",
        "jwtTokenProvider",
        "Autowired",
        "redisAdapter",
        "Nested",
        "DisplayName",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "board",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "request",
        "getRequest",
        "board",
        "getId",
        "staff",
        "getId",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "body",
        "request",
        "when",
        "post",
        "then",
        "log",
        "all",
        "extract",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "value",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "request",
        "getRequest",
        "staff",
        "getId",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "body",
        "request",
        "when",
        "post",
        "then",
        "log",
        "all",
        "extract",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "Assertions",
        "assertThat",
        "response",
        "jsonPath",
        "get",
        "isEqualTo",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "board",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "request",
        "getRequest",
        "board",
        "getId",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "body",
        "request",
        "when",
        "post",
        "then",
        "log",
        "all",
        "extract",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "Assertions",
        "assertThat",
        "response",
        "jsonPath",
        "get",
        "isEqualTo",
        "Nested",
        "DisplayName",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "board",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "boardReplyId",
        "게시글댓글저장",
        "board",
        "staff",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "when",
        "boardReplyId",
        "then",
        "log",
        "all",
        "extract",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "value",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "board",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "boardReplyId",
        "게시글댓글저장",
        "board",
        "staff",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "when",
        "then",
        "log",
        "all",
        "extract",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "BAD_REQUEST",
        "value",
        "Assertions",
        "assertThat",
        "response",
        "jsonPath",
        "get",
        "isEqualTo",
        "Nested",
        "DisplayName",
        "Test",
        "DisplayName",
        "nickname",
        "email",
        "password",
        "hospitalName",
        "accessToken",
        "jwtTokenProvider",
        "createAccessToken",
        "email",
        "redisAdapter",
        "setValue",
        "email",
        "accessToken",
        "TimeUnit",
        "SECONDS",
        "member",
        "회원생성",
        "nickname",
        "email",
        "password",
        "board",
        "게시글생성",
        "member",
        "hospital",
        "병원생성",
        "hospitalName",
        "staff",
        "의료진생성",
        "nickname",
        "email",
        "password",
        "hospital",
        "boardReplyId",
        "게시글댓글저장",
        "board",
        "staff",
        "request",
        "board",
        "getId",
        "staff",
        "getId",
        "response",
        "RestAssured",
        "given",
        "log",
        "all",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "header",
        "accessToken",
        "body",
        "request",
        "when",
        "patch",
        "boardReplyId",
        "then",
        "log",
        "all",
        "extract",
        "boardReply",
        "boardReplyRepository",
        "findById",
        "boardReplyId",
        "get",
        "Assertions",
        "assertThat",
        "boardReply",
        "getReply",
        "isEqualTo",
        "Assertions",
        "assertThat",
        "response",
        "statusCode",
        "isEqualTo",
        "HttpStatus",
        "OK",
        "value",
        "NotNull",
        "board",
        "staff",
        "boardReplyRepository",
        "save",
        "BoardReply",
        "createBoardReply",
        "board",
        "staff",
        "getId",
        "NotNull",
        "boardId",
        "staffId",
        "boardId",
        "staffId",
        "NotNull",
        "nickname",
        "email",
        "password",
        "memberRepository",
        "save",
        "Member",
        "newInstance",
        "nickname",
        "email",
        "password",
        "NotNull",
        "nickname",
        "email",
        "password",
        "hospital",
        "staffRepository",
        "save",
        "Staff",
        "newInstance",
        "hospital",
        "nickname",
        "email",
        "password",
        "HospitalDept",
        "DENTAL",
        "NotNull",
        "hospitalName",
        "hospitalRepository",
        "save",
        "Hospital",
        "createHospital",
        "hospitalName",
        "NotNull",
        "member",
        "boardRepository",
        "save",
        "Board",
        "createBoard",
        "member",
        "HospitalDept",
        "DENTAL"
    ],
    "literals": [
        "\"게시글댓글 저장\"",
        "\"요청이 성공적으로 처리되어 게시글에 댓글이 달려야 한다.\"",
        "\"게시글댓글저장성공\"",
        "\"게시글댓글저장성공@email.com\"",
        "\"password12\"",
        "\"게시글댓글저장성공병원\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply\"",
        "\"존재하지 않는 게시글에 댓글을 작성하려 할 경우, 작성에 실패한다.\"",
        "\"게시글댓글저장실패1\"",
        "\"게시글댓글저장실패1@email.com\"",
        "\"password12\"",
        "\"게시글댓글저장실패1병원\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply\"",
        "\"message\"",
        "\"해당 엔티티를 찾을 수 없습니다.\"",
        "\"존재하지 않는 의료진 정보로 댓글을 작성하려 할 경우, 작성에 실패한다.\"",
        "\"게시글댓글저장실패2\"",
        "\"게시글댓글저장실패2@email.com\"",
        "\"password12\"",
        "\"게시글댓글저장실패2병원\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply\"",
        "\"message\"",
        "\"해당 엔티티를 찾을 수 없습니다.\"",
        "\"게시글댓글 삭제\"",
        "\"요청이 성공적으로 수행될 경우, 게시글댓글이 삭제되어야 한다.\"",
        "\"게시글댓글삭제성공\"",
        "\"게시글댓글삭제성공@email.com\"",
        "\"password12\"",
        "\"게시글댓글삭제성공병원\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply/{id}\"",
        "\"존재하지 않는 게시글을 삭제하려 할 경우, 해당 요청은 실패한다.\"",
        "\"게시글댓글삭제실패1\"",
        "\"게시글댓글삭제실패1@email.com\"",
        "\"password12\"",
        "\"게시글댓글삭제실패1병원\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply/{id}\"",
        "\"message\"",
        "\"해당 엔티티를 찾을 수 없습니다.\"",
        "\"게시글댓글 수정\"",
        "\"요청이 성공적으로 수행될 경우, 게시글댓글이 수정되어야 한다.\"",
        "\"게시글댓글수정성공\"",
        "\"게시글댓글수정성공@email.com\"",
        "\"password12\"",
        "\"게시글댓글수정성공병원\"",
        "\"new-reply\"",
        "\"Authorization\"",
        "\"bearer \"",
        "\"/api/board-reply/{id}\"",
        "\"new-reply\"",
        "\"reply\"",
        "\"reply\"",
        "\"멤버\"",
        "\"멤버\"",
        "\"phone\"",
        "\"스탶\"",
        "\"스탶\"",
        "\"licensse\"",
        "\"number\"",
        "\"address\"",
        "\"oper\"",
        "\"title\"",
        "\"body\""
    ],
    "variables": [
        "boardRepository",
        "staffRepository",
        "memberRepository",
        "hospitalRepository",
        "boardReplyRepository",
        "jwtTokenProvider",
        "redisAdapter"
    ],
    "comments": [
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증",
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증",
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증",
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증",
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증",
        "given -- 조건",
        "given -- 조건",
        "헤더에 싣을 JWT",
        "게시글을 작성할 회원 & 게시글 생성",
        "의료진이 다닐 병원 & 의료진 생성",
        "when -- 동작",
        "then -- 검증"
    ],
    "docstrings": [],
    "functions": [
        "성공",
        "실패1",
        "실패2",
        "성공",
        "실패1",
        "성공",
        "게시글댓글저장",
        "CreateBoardReplyRequest",
        "getRequest",
        "Member",
        "회원생성",
        "Staff",
        "의료진생성",
        "Hospital",
        "병원생성",
        "Board",
        "게시글생성"
    ],
    "classes": [
        "BoardReplyApiControllerTest",
        "CreateBoardReply",
        "DeleteBoardReply",
        "UpdateBoardReply"
    ]
}