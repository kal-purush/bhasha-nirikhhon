{
    "identifiers": [
        "subprocess",
        "os",
        "environ",
        "env",
        "pathlib",
        "Path",
        "tempfile",
        "NamedTemporaryFile",
        "github",
        "Github",
        "github",
        "GithubException",
        "GithubException",
        "github",
        "Repository",
        "Repository",
        "env",
        "env",
        "env",
        "get",
        "env",
        "get",
        "repo",
        "Repository",
        "pr_branch_name",
        "pr_title",
        "pr_body",
        "repo",
        "get_branch",
        "pr_branch_name",
        "pr_branch_name",
        "GithubException",
        "ex",
        "ex",
        "status",
        "subprocess",
        "run",
        "check",
        "subprocess",
        "run",
        "pr_title",
        "pr_body",
        "check",
        "env",
        "USER_NAME",
        "USER_NAME",
        "USER_EMAIL",
        "USER_EMAIL",
        "subprocess",
        "run",
        "pr_branch_name",
        "check",
        "repo",
        "create_pull",
        "title",
        "pr_title",
        "body",
        "pr_body",
        "head",
        "pr_branch_name",
        "BASE_BRANCH",
        "pr",
        "add_to_labels",
        "NamedTemporaryFile",
        "log",
        "subprocess",
        "run",
        "log",
        "name",
        "Path",
        "log",
        "name",
        "read_text",
        "Github",
        "API_TOKEN",
        "github",
        "get_repo",
        "REPOSITORY",
        "update_dependencies",
        "changes",
        "changes",
        "title",
        "body",
        "DRY_RUN",
        "create_pr",
        "repo",
        "pr_branch_name",
        "title",
        "body",
        "main"
    ],
    "literals": [
        "\"GITHUB_TOKEN\"",
        "\"GITHUB_REPOSITORY\"",
        "\"GITHUB_BASE_BRANCH\"",
        "\"main\"",
        "\"GITHUB_DRY_RUN\"",
        "\"github-actions[bot]\"",
        "\"github-actions[bot]@users.noreply.github.com\"",
        "f\"Branch '{pr_branch_name}' already exist. Skipping update.\"",
        "\"git\"",
        "\"add\"",
        "\".\"",
        "\"git\"",
        "\"commit\"",
        "\"-m\"",
        "f\"{pr_title}\\n\\n{pr_body}\"",
        "\"GIT_AUTHOR_NAME\"",
        "\"GIT_COMMITTER_NAME\"",
        "\"GIT_AUTHOR_EMAIL\"",
        "\"GIT_COMMITTER_EMAIL\"",
        "\"git\"",
        "\"push\"",
        "\"origin\"",
        "f\"+HEAD:{pr_branch_name}\"",
        "\"automated\"",
        "\"dependencies\"",
        "\"nvfetcher\"",
        "\"--build-dir\"",
        "\"nix/_sources\"",
        "\"--changelog\"",
        "\"-- Everything is up-to date\"",
        "\"chore(deps): Updating vendored nix dependencies\"",
        "f\"\"\"\\\n### Changes in dependencies:\n\n{changes}\n\"\"\"",
        "f\"-- Creating PR\\nTitle: {title}\\nBody:\\n{body}\"",
        "\"DRY-RUN: NOT creating PR...\"",
        "\"refs/heads/update/nix-vendored-dependencies\"",
        "\"__main__\""
    ],
    "variables": [
        "API_TOKEN",
        "REPOSITORY",
        "BASE_BRANCH",
        "DRY_RUN",
        "USER_NAME",
        "USER_EMAIL",
        "pr",
        "github",
        "repo",
        "changes",
        "title",
        "body",
        "pr_branch_name"
    ],
    "comments": [
        "!/usr/bin/env nix-shell",
        "! nix-shell -i python3 -p \"python3.withPackages (ps: with ps; [ PyGithub ])\" nvfetcher",
        "pyright: reportMissingImports=false"
    ],
    "docstrings": [],
    "functions": [
        "create_pr",
        "update_dependencies",
        "main"
    ],
    "classes": []
}