{
    "identifiers": [
        "com",
        "espressif",
        "idf",
        "core",
        "util",
        "test",
        "java",
        "math",
        "BigInteger",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayNameGeneration",
        "org",
        "junit",
        "jupiter",
        "api",
        "DisplayNameGenerator",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "ParameterizedTest",
        "org",
        "junit",
        "jupiter",
        "provider",
        "CsvSource",
        "com",
        "espressif",
        "idf",
        "core",
        "util",
        "BigIntDecoder",
        "DisplayNameGeneration",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "ParameterizedTest",
        "name",
        "CsvSource",
        "stringToDecode",
        "expectedResult",
        "decodedNumber",
        "BigIntDecoder",
        "decode",
        "stringToDecode",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "decodedNumber",
        "intValue",
        "Test",
        "stringToDecode",
        "Assertions",
        "assertThrows",
        "BigIntDecoder",
        "decode",
        "stringToDecode"
    ],
    "literals": [
        "\"value ''{0}'' decoded to {1}\"",
        "\"12345, 12345\"",
        "\"234, 234\"",
        "\"564, 564\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"+12345, 12345\"",
        "\"+234, 234\"",
        "\"+564, 564\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"-12345, -12345\"",
        "\"-234, -234\"",
        "\"-564, -564\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"0xA3F, 2623\"",
        "\"0XA3F, 2623\"",
        "\"0xAA, 170\"",
        "\"0XFF, 255\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"#A3F, 2623\"",
        "\"#A3F, 2623\"",
        "\"#AA, 170\"",
        "\"#FF, 255\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"+0xA3F, 2623\"",
        "\"+0XA3F, 2623\"",
        "\"+0xAA, 170\"",
        "\"+0XFF, 255\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"-0xA3F, -2623\"",
        "\"-0XA3F, -2623\"",
        "\"-0xAA, -170\"",
        "\"-0XFF, -255\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"017, 15\"",
        "\"023, 19\"",
        "\"075, 61\"",
        "\"0127, 87\"",
        "\"0456, 302\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"+017, 15\"",
        "\"+023, 19\"",
        "\"+075, 61\"",
        "\"+0127, 87\"",
        "\"+0456, 302\"",
        "\"value ''{0}'' decoded to {1}\"",
        "\"-017, -15\"",
        "\"-023, -19\"",
        "\"-075, -61\"",
        "\"-0127, -87\"",
        "\"-0456, -302\"",
        "\"12AB\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "*****************************************************************************\n * Copyright 2023 Espressif Systems (Shanghai) PTE LTD. All rights reserved.\n * Use is subject to license terms.\n ******************************************************************************"
    ],
    "functions": [
        "test_decode_positive_dec_number",
        "test_decode_positive_dec_with_sign_number",
        "test_decode_negative_dec_number",
        "test_decode_positive_hexadecimal_number",
        "test_decode_positive_hexadecimal_hash_number",
        "test_decode_positive_with_sign_hexadecimal_number",
        "test_decode_negative_hexadecimal_number",
        "test_decode_positive_octal_number",
        "test_decode_positive_with_sign_octal_number",
        "test_decode_negative_octal_number",
        "test_decode_invalid_number"
    ],
    "classes": [
        "BigIntDecoderTest"
    ]
}