{
    "identifiers": [
        "argparse",
        "json",
        "os",
        "subprocess",
        "time",
        "pathlib",
        "Path",
        "lm_eval",
        "tasks",
        "utils",
        "seq2seq_models",
        "causal_models",
        "completion_tasks",
        "choice_tasks",
        "perplexity_tasks",
        "generation_tasks",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "model_names",
        "parser",
        "add_argument",
        "task_names",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "parse_args",
        "args",
        "branch",
        "branch",
        "os",
        "system",
        "branch",
        "branch",
        "initial_branch",
        "time",
        "time",
        "model",
        "args",
        "models",
        "model",
        "causal_models",
        "model",
        "seq2seq_models",
        "args",
        "model",
        "model",
        "args",
        "model_args",
        "args",
        "tasks",
        "model",
        "causal_models",
        "model_type",
        "task",
        "task",
        "perplexity_tasks",
        "args",
        "tasks",
        "args",
        "batch_size",
        "model",
        "causal_models",
        "model_type",
        "args",
        "batch_size",
        "args",
        "batch_size",
        "start_time",
        "branch",
        "Path",
        "model",
        "name",
        "model_type",
        "model_args",
        "join",
        "tasks",
        "args",
        "num_fewshot",
        "args",
        "limit",
        "args",
        "limit",
        "batch_size",
        "output_path",
        "model",
        "join",
        "tasks",
        "branch",
        "command",
        "os",
        "system",
        "command",
        "json",
        "load",
        "open",
        "output_path",
        "ret",
        "time",
        "time",
        "results",
        "end_time",
        "start_time",
        "args",
        "results",
        "model",
        "task",
        "err",
        "model",
        "results",
        "results",
        "model",
        "task",
        "results",
        "results",
        "task",
        "args",
        "acc_norm",
        "results",
        "results",
        "err",
        "results",
        "results",
        "results",
        "err",
        "results",
        "args",
        "perplexity",
        "results",
        "results",
        "args",
        "perplexity",
        "err",
        "args",
        "results",
        "model",
        "task",
        "extract_value",
        "args",
        "results",
        "model",
        "task",
        "extract_value",
        "args",
        "results",
        "model",
        "task",
        "err",
        "val",
        "err",
        "err",
        "args",
        "results1",
        "results2",
        "model",
        "task",
        "extract_value",
        "args",
        "results1",
        "model",
        "task",
        "extract_value",
        "args",
        "results2",
        "model",
        "task",
        "val2",
        "val1",
        "diff",
        "diff",
        "diff",
        "parse_args",
        "args",
        "branches",
        "split",
        "args",
        "branches",
        "args",
        "branches",
        "args",
        "models",
        "split",
        "args",
        "models",
        "args",
        "models",
        "tasks",
        "ALL_TASKS",
        "args",
        "tasks",
        "utils",
        "pattern_match",
        "args",
        "tasks",
        "split",
        "args",
        "tasks",
        "args",
        "tasks",
        "tasks",
        "ALL_TASKS",
        "initial_branch",
        "subprocess",
        "check_output",
        "shell",
        "decode",
        "strip",
        "eval_models",
        "args",
        "results",
        "runtime",
        "branch",
        "args",
        "branches",
        "runs",
        "append",
        "branch",
        "eval_models",
        "args",
        "branch",
        "os",
        "system",
        "initial_branch",
        "join",
        "model",
        "Path",
        "model",
        "name",
        "args",
        "models",
        "len",
        "args",
        "models",
        "task",
        "args",
        "tasks",
        "task",
        "initial_branch",
        "join",
        "model",
        "format_value",
        "args",
        "results",
        "model",
        "task",
        "args",
        "models",
        "branch",
        "branch_results",
        "branch_runtime",
        "runs",
        "task",
        "branch",
        "join",
        "model",
        "format_value",
        "args",
        "branch_results",
        "model",
        "task",
        "args",
        "models",
        "task",
        "join",
        "model",
        "format_diff",
        "args",
        "results",
        "branch_results",
        "model",
        "task",
        "args",
        "models",
        "initial_branch",
        "runtime",
        "branch",
        "_",
        "branch_runtime",
        "runs",
        "branch",
        "branch_runtime",
        "branch_runtime",
        "runtime",
        "main"
    ],
    "literals": [
        "\"google/flan-t5-small\"",
        "\"gpt2\"",
        "\"facebook/opt-125m\"",
        "\"EleutherAI/gpt-neo-125m\"",
        "\"EleutherAI/pythia-160m\"",
        "\"boolq\"",
        "\"lambada_openai\"",
        "\"winogrande\"",
        "\"hellaswag\"",
        "\"openbookqa\"",
        "\"piqa\"",
        "\"wikitext\"",
        "\"--branches\"",
        "\"--models\"",
        "\"--tasks\"",
        "\"--acc_norm\"",
        "\"--perplexity\"",
        "\"--num_fewshot\"",
        "\"--limit\"",
        "\"--model\"",
        "\"hf-causal-experimental\"",
        "\"--model_args\"",
        "\"use_accelerate=True,load_in_8bit=True\"",
        "\"--batch_size\"",
        "\"auto\"",
        "f\"git checkout {branch}\"",
        "\"hf-causal-experimental\"",
        "\"hf-seq2seq\"",
        "f\"pretrained={model},{args.model_args}\"",
        "\"hf-causal-experimental\"",
        "\"hf-causal-experimental\"",
        "\"auto\"",
        "f\"data/regression/{int(start_time)}-{branch}-{Path(model).name}.json\"",
        "f\"python3 main.py --model {model_type} --model_args {model_args} --tasks {','.join(tasks)} \"",
        "','",
        "f\"--num_fewshot {args.num_fewshot}{'' if args.limit is None else f' --limit {args.limit}'} \"",
        "''",
        "f' --limit {args.limit}'",
        "f\"--batch_size {batch_size} --no_cache --output_path {output_path}\"",
        "f\"{'=' * 80}\\nEvaluating {model} on {', '.join(tasks)} at {branch} with:\\n\\n{command}\\n{'=' * 80}\"",
        "'='",
        "', '",
        "'='",
        "\"results\"",
        "\"results\"",
        "\"acc_norm\"",
        "\"acc_norm\"",
        "\"acc_norm_stderr\"",
        "\"acc\"",
        "\"acc\"",
        "\"acc_stderr\"",
        "\"word_perplexity\"",
        "\"word_perplexity\"",
        "f\"{val:.2f}{f' ± {err:.2f}' if err != 0 else ''}\"",
        "f' ± {err:.2f}'",
        "''",
        "f\"**+{diff:.2f}**\"",
        "f\"{diff:.2f}\"",
        "\",\"",
        "\",\"",
        "\"all_tasks\"",
        "\",\"",
        "\"git branch --show-current\"",
        "\"ascii\"",
        "f\"git checkout {initial_branch}\"",
        "\"\"",
        "f\"|task|{'|'.join(map(lambda model: Path(model).name, args.models))}|\"",
        "'|'",
        "f\"|--|{'--|' * len(args.models)}\"",
        "'--|'",
        "f\"|{task} ({initial_branch})|{'|'.join(map(lambda model: format_value(args, results, model, task), args.models))}|\"",
        "'|'",
        "f\"|{task} ({branch})|{'|'.join(map(lambda model: format_value(args, branch_results, model, task), args.models))}|\"",
        "'|'",
        "f\"|{task} (diff)|{'|'.join(map(lambda model: format_diff(args, results, branch_results, model, task), args.models))}|\"",
        "'|'",
        "\"\"",
        "\"|branch|runtime|%|\"",
        "\"|--|--|--|\"",
        "f\"|{initial_branch}|{runtime:.1f}s|100%|\"",
        "f\"|{branch}|{branch_runtime:.1f}s|{100 * branch_runtime / runtime:.2f}%|\"",
        "\"__main__\""
    ],
    "variables": [
        "seq2seq_models",
        "causal_models",
        "model_names",
        "completion_tasks",
        "choice_tasks",
        "perplexity_tasks",
        "generation_tasks",
        "task_names",
        "parser",
        "branch",
        "start_time",
        "results",
        "model_type",
        "model_args",
        "tasks",
        "batch_size",
        "output_path",
        "command",
        "ret",
        "results",
        "model",
        "end_time",
        "results",
        "results",
        "val",
        "err",
        "val1",
        "val2",
        "diff",
        "args",
        "args",
        "branches",
        "args",
        "models",
        "args",
        "tasks",
        "initial_branch",
        "results",
        "runtime",
        "runs"
    ],
    "comments": [
        "TODO: implement num_fewshot and limit per task, e.g. task1:5,task2:1:100,task3::1000",
        "TODO: implement hf-auto to pick between causal and seq2seq models so we don't need this",
        "Use whatever is faster here",
        "TODO: split_and_pad_windows in AutoSeq2SeqLM doesn\"t exist, #527",
        "TODO: OOM with auto for seq2seq models, also can OOM with llama",
        "TODO: implement proper timing for each task",
        "TODO: reduce IO by sharing tasks between models?"
    ],
    "docstrings": [],
    "functions": [
        "parse_args",
        "eval_models",
        "extract_value",
        "format_value",
        "format_diff",
        "main"
    ],
    "classes": []
}