{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "patstat",
        "dtypes_patstat_declaration",
        "types",
        "os",
        "re",
        "requests",
        "json",
        "xmltodict",
        "Levenshtein",
        "lev",
        "time",
        "unidecode",
        "unidecode",
        "boto3",
        "logging",
        "threading",
        "sys",
        "concurrent",
        "futures",
        "os",
        "getenv",
        "name",
        "name",
        "loggers",
        "loggers",
        "name",
        "logging",
        "getLogger",
        "name",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "Formatter",
        "fmt",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "ch",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "ch",
        "logger",
        "loggers",
        "name",
        "dict_nb",
        "query",
        "pd",
        "DataFrame",
        "jointure",
        "concurrent",
        "futures",
        "ThreadPoolExecutor",
        "max_workers",
        "thread_name_prefix",
        "executor",
        "executor",
        "submit",
        "query",
        "df",
        "df",
        "df",
        "dict_nb",
        "values",
        "future",
        "concurrent",
        "futures",
        "as_completed",
        "future_to_req",
        "future_to_req",
        "future",
        "future",
        "result",
        "res",
        "append",
        "data",
        "pd",
        "concat",
        "res",
        "exc",
        "req",
        "exc",
        "flush",
        "jointure",
        "df",
        "pd",
        "DataFrame",
        "round",
        "len",
        "df",
        "prct10",
        "df",
        "iloc",
        "deb",
        "fin",
        "fin",
        "prct10",
        "len",
        "df",
        "dixieme",
        "len",
        "df",
        "i",
        "i",
        "prct10",
        "i",
        "df",
        "iloc",
        "deb",
        "fin",
        "reste",
        "len",
        "df",
        "iloc",
        "fin",
        "fin_reste",
        "df",
        "iloc",
        "fin",
        "fin_reste",
        "fin",
        "dict_nb",
        "ul",
        "requests",
        "get",
        "ul",
        "res",
        "status_code",
        "status",
        "ConnectionError",
        "flush",
        "res",
        "rt",
        "xmltodict",
        "parse",
        "rt",
        "content",
        "json",
        "dumps",
        "data",
        "json",
        "loads",
        "djson",
        "djson2",
        "djson2",
        "xjson",
        "xml_json",
        "xjson",
        "jsn",
        "res_part1",
        "res_part1",
        "pd",
        "DataFrame",
        "df1",
        "isinstance",
        "res_part1",
        "isinstance",
        "res_part1",
        "pd",
        "json_normalize",
        "res_part1",
        "record_path",
        "meta",
        "df1",
        "drop",
        "columns",
        "df1",
        "fillna",
        "col",
        "df1",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "df1",
        "col_address",
        "i",
        "len",
        "col_address",
        "df1",
        "df1",
        "col_address",
        "i",
        "df1",
        "apply",
        "a",
        "a",
        "strip",
        "col",
        "col_address",
        "re",
        "sub",
        "col",
        "df1",
        "rename",
        "columns",
        "col",
        "name",
        "df1",
        "rename",
        "columns",
        "pd",
        "json_normalize",
        "res_part1",
        "df1",
        "drop",
        "columns",
        "df1",
        "fillna",
        "col",
        "df1",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "df1",
        "col_address",
        "i",
        "len",
        "col_address",
        "df1",
        "df1",
        "col_address",
        "i",
        "df1",
        "apply",
        "a",
        "a",
        "strip",
        "col",
        "col_address",
        "re",
        "sub",
        "col",
        "df1",
        "rename",
        "columns",
        "col",
        "name",
        "df1",
        "rename",
        "columns",
        "isinstance",
        "item",
        "item",
        "res_part1",
        "set_liste",
        "len",
        "set_liste",
        "set_liste",
        "pd",
        "json_normalize",
        "res_part1",
        "record_path",
        "meta",
        "df1",
        "drop",
        "columns",
        "df1",
        "fillna",
        "col",
        "df1",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "df1",
        "col_address",
        "i",
        "len",
        "col_address",
        "df1",
        "df1",
        "col_address",
        "i",
        "df1",
        "apply",
        "a",
        "a",
        "strip",
        "col",
        "col_address",
        "re",
        "sub",
        "col",
        "df1",
        "rename",
        "columns",
        "col",
        "name",
        "df1",
        "rename",
        "columns",
        "len",
        "set_liste",
        "set_liste",
        "item",
        "res_part1",
        "isinstance",
        "item",
        "pd",
        "json_normalize",
        "item",
        "record_path",
        "meta",
        "tmp",
        "drop",
        "columns",
        "tmp",
        "fillna",
        "col",
        "tmp",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "tmp",
        "col_address",
        "i",
        "len",
        "col_address",
        "tmp",
        "tmp",
        "col_address",
        "i",
        "tmp",
        "apply",
        "a",
        "a",
        "strip",
        "tmp",
        "drop",
        "columns",
        "col_address",
        "tmp",
        "rename",
        "columns",
        "liste_part",
        "append",
        "tmp",
        "pd",
        "json_normalize",
        "item",
        "tmp",
        "drop",
        "columns",
        "tmp",
        "fillna",
        "col",
        "tmp",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "tmp",
        "col_address",
        "i",
        "len",
        "col_address",
        "tmp",
        "tmp",
        "col_address",
        "i",
        "tmp",
        "apply",
        "a",
        "a",
        "strip",
        "col",
        "col_address",
        "re",
        "sub",
        "col",
        "df1",
        "rename",
        "columns",
        "col",
        "name",
        "tmp",
        "rename",
        "columns",
        "liste_part",
        "append",
        "tmp",
        "pd",
        "concat",
        "liste_part",
        "pd",
        "json_normalize",
        "res_part1",
        "df1",
        "drop",
        "columns",
        "df1",
        "fillna",
        "col",
        "df1",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "df1",
        "col_address",
        "i",
        "len",
        "col_address",
        "df1",
        "df1",
        "col_address",
        "i",
        "df1",
        "apply",
        "a",
        "a",
        "strip",
        "col",
        "col_address",
        "re",
        "sub",
        "col",
        "df1",
        "rename",
        "columns",
        "col",
        "name",
        "df1",
        "rename",
        "columns",
        "df1",
        "os",
        "getenv",
        "key",
        "requests",
        "post",
        "token_url",
        "data",
        "data",
        "headers",
        "headers",
        "r",
        "content",
        "decode",
        "json",
        "loads",
        "rs",
        "response",
        "get",
        "tken",
        "pn",
        "tkn",
        "pd",
        "DataFrame",
        "d_app",
        "requests",
        "get",
        "pn",
        "headers",
        "tkn",
        "ret1",
        "status_code",
        "status",
        "ret1",
        "text",
        "ConnectionError",
        "flush",
        "r_dict",
        "ret1",
        "df_applicant",
        "res_part1",
        "d_app",
        "a",
        "a2",
        "a",
        "a",
        "isdigit",
        "a",
        "c",
        "c",
        "a",
        "c",
        "isdigit",
        "li",
        "item",
        "li",
        "sep",
        "item",
        "sep",
        "re",
        "split",
        "sep",
        "a",
        "a",
        "a",
        "a2",
        "a",
        "a",
        "a",
        "a2",
        "a",
        "a",
        "a",
        "a2",
        "fromkeys",
        "a2",
        "a2",
        "sort",
        "np",
        "NaN",
        "a2",
        "t_ad",
        "pd",
        "DataFrame",
        "col",
        "pd",
        "DataFrame",
        "adresse",
        "t_ad",
        "col",
        "get_url",
        "adresse",
        "json",
        "loads",
        "res",
        "content",
        "r",
        "pd",
        "json_normalize",
        "r",
        "record_path",
        "df",
        "loc",
        "df",
        "len",
        "df",
        "df",
        "max",
        "df",
        "loc",
        "df",
        "smax",
        "r",
        "col",
        "df",
        "columns",
        "col",
        "liste_cols",
        "col",
        "re",
        "sub",
        "col",
        "nom",
        "col",
        "renomme",
        "keys",
        "df",
        "agarder",
        "df",
        "rename",
        "columns",
        "renomme",
        "df",
        "loc",
        "df",
        "isna",
        "df",
        "loc",
        "df",
        "isna",
        "df",
        "apply",
        "a",
        "a",
        "split",
        "df",
        "apply",
        "a",
        "re",
        "sub",
        "df",
        "item",
        "a",
        "df",
        "values",
        "type_insee",
        "keys",
        "type_insee",
        "df",
        "item",
        "df",
        "upper",
        "liste_address",
        "append",
        "df",
        "pd",
        "concat",
        "liste_address",
        "df_ad",
        "df_path_fr",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "boto3",
        "Session",
        "region_name",
        "aws_access_key_id",
        "os",
        "getenv",
        "aws_secret_access_key",
        "os",
        "getenv",
        "session",
        "client",
        "aws_access_key_id",
        "os",
        "getenv",
        "aws_secret_access_key",
        "os",
        "getenv",
        "endpoint_url",
        "os",
        "getenv",
        "get_logger",
        "threading",
        "current_thread",
        "name",
        "logger",
        "info",
        "_",
        "r",
        "df_path_fr",
        "iterrows",
        "xmltodict",
        "parse",
        "conn",
        "get_object",
        "Bucket",
        "Key",
        "r",
        "fullpath",
        "get",
        "read",
        "decode",
        "json",
        "dumps",
        "data",
        "json",
        "loads",
        "djson",
        "djson2",
        "djson2",
        "keys",
        "djson2",
        "clef_parties",
        "djson2",
        "clef_biblio",
        "djson2",
        "pd",
        "json_normalize",
        "data",
        "djson_app",
        "pd",
        "json_normalize",
        "data",
        "djson_own",
        "pd",
        "concat",
        "df_app",
        "df_own",
        "r",
        "publication_number",
        "r",
        "publication_number_fr",
        "liste",
        "append",
        "df",
        "pd",
        "concat",
        "liste",
        "pd",
        "merge",
        "df_path_fr",
        "df_inpi",
        "on",
        "logger",
        "info",
        "df_inpi",
        "fam_fr",
        "pd",
        "DataFrame",
        "pths_aws",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "pths_aws",
        "rename",
        "columns",
        "pd",
        "merge",
        "fam_fr",
        "pths_aws",
        "on",
        "how",
        "df_path_fr",
        "loc",
        "df_path_fr",
        "df_path_fr",
        "drop_duplicates",
        "subset_df",
        "df_path_fr",
        "res_futures",
        "subpath_fr",
        "req_xml_aws",
        "df_inpi",
        "drop",
        "columns",
        "df_inpi",
        "drop",
        "columns",
        "drop_duplicates",
        "df_inpi",
        "rename",
        "columns",
        "df_inpi",
        "fillna",
        "df_inpi",
        "strip",
        "df_inpi",
        "strip",
        "df_inpi",
        "strip",
        "df_inpi",
        "lstrip",
        "rstrip",
        "df_inpi",
        "strip",
        "df_inpi",
        "replace",
        "regex",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "loc",
        "df_inpi",
        "notna",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "drop_duplicates",
        "pd",
        "merge",
        "fam_fr",
        "drop",
        "columns",
        "df_inpi2",
        "on",
        "how",
        "df_inpi3",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "df_inpi3",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "df_inpi3",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "pn",
        "df_inpi3",
        "df_inpi3",
        "loc",
        "df_inpi3",
        "pn",
        "min",
        "df_inpi3",
        "loc",
        "df_inpi3",
        "pn",
        "df_inpi3",
        "minimum",
        "liste_inpi",
        "append",
        "tmp_inpi",
        "pd",
        "concat",
        "liste_inpi",
        "drop_duplicates",
        "df_inpi4",
        "apply",
        "a",
        "a",
        "replace",
        "df_inpi4",
        "loc",
        "df_inpi4",
        "drop",
        "columns",
        "drop_duplicates",
        "df_inpi4",
        "loc",
        "df_inpi4",
        "drop_duplicates",
        "df_inpi4_sup",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "df_inpi4_sup",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "df_inpi4_sup",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "df_inpi4_sup",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "df_inpi4_sup",
        "apply",
        "a",
        "a",
        "address_api",
        "df_inpi4_sup",
        "pd",
        "merge",
        "df_inpi4_sup",
        "df_address_inpi",
        "left_on",
        "right_on",
        "how",
        "df_inpi4_sup_address",
        "copy",
        "df_inpi4_sup_address_check",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "df_inpi4_sup_address_check",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "loc",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "reset_index",
        "drop",
        "columns",
        "df_inpi4_sup_address_check_true",
        "columns",
        "intersection",
        "df_inpi4_0",
        "columns",
        "df_inpi4_sup_address_check_true",
        "cols",
        "drop_duplicates",
        "pd",
        "concat",
        "df_inpi4_0",
        "df_inpi4_sup_address_check_true",
        "drop_duplicates",
        "df_inpi4_k",
        "tst_na",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "tst_na",
        "pb",
        "pub",
        "tst_na",
        "loc",
        "tst_na",
        "pb",
        "pb",
        "pub",
        "time",
        "sleep",
        "get_token_oeb",
        "requests",
        "get",
        "pb",
        "headers",
        "token",
        "fam",
        "status_code",
        "xmltodict",
        "parse",
        "fam",
        "content",
        "json",
        "dumps",
        "data",
        "json",
        "loads",
        "djson",
        "djson2",
        "isinstance",
        "djson3",
        "item",
        "djson3",
        "item",
        "pd",
        "json_normalize",
        "item",
        "record_path",
        "liste",
        "append",
        "tmp",
        "djson3",
        "pd",
        "json_normalize",
        "djson3",
        "record_path",
        "liste",
        "append",
        "tmp",
        "pd",
        "concat",
        "liste",
        "df",
        "loc",
        "df",
        "df2",
        "loc",
        "df2",
        "isin",
        "pb",
        "df2",
        "loc",
        "df2",
        "df2",
        "len",
        "df2",
        "df2",
        "liste_famille",
        "append",
        "df2",
        "pd",
        "concat",
        "liste_famille",
        "df_fam",
        "rename",
        "columns",
        "df_fam",
        "t_address",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "get_logger",
        "threading",
        "current_thread",
        "name",
        "logger",
        "info",
        "_",
        "r",
        "t_address",
        "iterrows",
        "r",
        "t_address",
        "columns",
        "r",
        "r",
        "r",
        "cmc",
        "dpt",
        "ville",
        "cp",
        "URL",
        "requete",
        "get_url",
        "url",
        "json",
        "loads",
        "response",
        "text",
        "data",
        "item",
        "item",
        "rec",
        "json",
        "loads",
        "item",
        "item",
        "fields",
        "pd",
        "json_normalize",
        "personnes",
        "cmc",
        "df",
        "columns",
        "liste_col",
        "df",
        "loc",
        "df",
        "col",
        "liste_col",
        "col",
        "col_drop",
        "df",
        "drop",
        "columns",
        "col",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "loc",
        "df",
        "notna",
        "apply",
        "a",
        "a",
        "lower",
        "df",
        "drop_duplicates",
        "reset_index",
        "drop",
        "columns",
        "df",
        "replace",
        "regex",
        "lste_bodacc",
        "append",
        "df",
        "t_address",
        "columns",
        "r",
        "r",
        "cmc",
        "dpt",
        "cp",
        "URL",
        "requete",
        "get_url",
        "url",
        "json",
        "loads",
        "response",
        "text",
        "data",
        "item",
        "item",
        "rec",
        "json",
        "loads",
        "item",
        "item",
        "fields",
        "pd",
        "json_normalize",
        "personnes",
        "cmc",
        "df",
        "columns",
        "liste_col",
        "df",
        "loc",
        "df",
        "col",
        "liste_col",
        "col",
        "col_drop",
        "df",
        "drop",
        "columns",
        "col",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "loc",
        "df",
        "notna",
        "apply",
        "a",
        "a",
        "lower",
        "df",
        "drop_duplicates",
        "reset_index",
        "drop",
        "columns",
        "df",
        "replace",
        "regex",
        "lste_bodacc",
        "append",
        "df",
        "lste_bodacc",
        "pd",
        "concat",
        "lste_bodacc",
        "pd",
        "DataFrame",
        "logger",
        "info",
        "df_bo",
        "df_stru_fuz",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "os",
        "getenv",
        "get_logger",
        "threading",
        "current_thread",
        "name",
        "logger",
        "info",
        "df_stru_fuz",
        "fillna",
        "_",
        "r",
        "df_stru_fuz",
        "iterrows",
        "r",
        "name_propre",
        "r",
        "name_propre",
        "requests",
        "get",
        "url_structures",
        "headers",
        "headers",
        "json",
        "query1",
        "json",
        "res1",
        "get",
        "len",
        "res1",
        "get",
        "get",
        "dict_res",
        "append",
        "r",
        "person_id",
        "dict_res",
        "append",
        "r",
        "name_source",
        "dict_res",
        "append",
        "r",
        "name_propre",
        "dict_res",
        "append",
        "r",
        "address_source",
        "dict_res",
        "append",
        "r",
        "key_appln_nr_person",
        "dict_res",
        "append",
        "res1",
        "get",
        "get",
        "get",
        "get",
        "dict_res",
        "append",
        "res1",
        "get",
        "get",
        "get",
        "get",
        "get",
        "dict_res",
        "append",
        "res1",
        "get",
        "get",
        "get",
        "get",
        "get",
        "dict_res",
        "append",
        "res1",
        "get",
        "get",
        "get",
        "get",
        "pd",
        "DataFrame",
        "data",
        "dict_res",
        "logger",
        "info",
        "df",
        "os",
        "chdir",
        "DATA_PATH",
        "pd",
        "read_csv",
        "sep",
        "encoding",
        "dtype",
        "types",
        "part_entp_types",
        "pd",
        "read_csv",
        "sep",
        "encoding",
        "dtype",
        "types",
        "part_entp_types",
        "p05",
        "drop_duplicates",
        "part_entp_final",
        "copy",
        "noms",
        "loc",
        "noms",
        "noms",
        "loc",
        "noms",
        "notna",
        "noms",
        "isna",
        "noms",
        "loc",
        "noms",
        "notna",
        "noms",
        "isna",
        "noms",
        "loc",
        "noms",
        "isna",
        "pd",
        "merge",
        "noms",
        "p05",
        "on",
        "how",
        "noms",
        "loc",
        "noms",
        "noms",
        "loc",
        "noms",
        "notna",
        "noms",
        "loc",
        "noms",
        "noms",
        "noms",
        "loc",
        "noms",
        "noms",
        "loc",
        "noms",
        "reset_index",
        "drop",
        "boto3",
        "Session",
        "region_name",
        "aws_access_key_id",
        "os",
        "getenv",
        "aws_secret_access_key",
        "os",
        "getenv",
        "session",
        "client",
        "aws_access_key_id",
        "os",
        "getenv",
        "aws_secret_access_key",
        "os",
        "getenv",
        "endpoint_url",
        "os",
        "getenv",
        "conn",
        "get_paginator",
        "i",
        "i",
        "flush",
        "paginator",
        "paginate",
        "operation_parameters",
        "page",
        "page_iterator",
        "item",
        "page",
        "item",
        "split",
        "file",
        "replace",
        "item",
        "dirfile",
        "append",
        "flpath",
        "dirfile",
        "append",
        "nf",
        "flush",
        "pd",
        "DataFrame",
        "data",
        "dirfile",
        "pd",
        "merge",
        "fr",
        "paths_aws",
        "on",
        "how",
        "df_path_fr",
        "loc",
        "df_path_fr",
        "df_path_fr",
        "drop_duplicates",
        "flush",
        "flush",
        "_",
        "r",
        "df_path_fr",
        "iterrows",
        "xmltodict",
        "parse",
        "conn",
        "get_object",
        "Bucket",
        "Key",
        "r",
        "fullpath",
        "get",
        "read",
        "decode",
        "json",
        "dumps",
        "data",
        "json",
        "loads",
        "djson",
        "djson2",
        "djson2",
        "keys",
        "djson2",
        "clef_parties",
        "djson2",
        "clef_biblio",
        "djson2",
        "pd",
        "json_normalize",
        "data",
        "djson_app",
        "pd",
        "json_normalize",
        "data",
        "djson_own",
        "pd",
        "concat",
        "df_app",
        "df_own",
        "r",
        "publication_number",
        "liste",
        "append",
        "df",
        "flush",
        "pd",
        "concat",
        "liste",
        "df_inpi",
        "drop",
        "columns",
        "drop_duplicates",
        "df_inpi",
        "rename",
        "columns",
        "df_inpi",
        "fillna",
        "df_inpi",
        "strip",
        "df_inpi",
        "strip",
        "df_inpi",
        "strip",
        "df_inpi",
        "lstrip",
        "rstrip",
        "df_inpi",
        "strip",
        "df_inpi",
        "replace",
        "regex",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "loc",
        "df_inpi",
        "notna",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "drop_duplicates",
        "pd",
        "merge",
        "fr",
        "df_inpi2",
        "on",
        "how",
        "df_inpi3",
        "apply",
        "a",
        "join",
        "isalpha",
        "unidecode",
        "a",
        "lower",
        "df_inpi3",
        "apply",
        "a",
        "join",
        "isalpha",
        "unidecode",
        "a",
        "lower",
        "df_inpi3",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "df_inpi3",
        "loc",
        "df_inpi3",
        "df_app_inpi",
        "df_app_inpi",
        "astype",
        "df_app_inpi",
        "loc",
        "df_app_inpi",
        "df_app_inpi",
        "df_app_inpi",
        "drop_duplicates",
        "df_app_inpi",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "df_app_inpi",
        "loc",
        "df_app_inpi",
        "isin",
        "compte_app_inpi",
        "loc",
        "compte_app_inpi",
        "drop_duplicates",
        "df_app_inpi",
        "loc",
        "df_app_inpi",
        "isin",
        "df_app_inpi_ok",
        "df_app_inpi_multi",
        "drop",
        "columns",
        "drop_duplicates",
        "df_app_inpi_multi",
        "loc",
        "df_app_inpi_multi",
        "df_app_inpi_multi",
        "drop_duplicates",
        "df_app_inpi_multi",
        "loc",
        "df_app_inpi_multi",
        "isin",
        "df_app_inpi_multi_ok",
        "pn",
        "fnok",
        "fnok",
        "loc",
        "fnok",
        "pn",
        "min",
        "fnok",
        "loc",
        "fnok",
        "pn",
        "fnok",
        "minimum",
        "liste_fnok",
        "append",
        "tmp_inpi_fnok",
        "pd",
        "concat",
        "liste_fnok",
        "fnok2",
        "drop_duplicates",
        "pd",
        "concat",
        "df_app_inpi_ok",
        "df_app_inpi_multi_ok",
        "fnok2",
        "inpi_ok1",
        "inpi_ok1",
        "df_inpi3",
        "copy",
        "df_inpi3_reste",
        "df_inpi3_reste",
        "df_inpi3_reste",
        "loc",
        "df_inpi3_reste",
        "isin",
        "inpi_ok1",
        "pn",
        "df_inpi3_reste",
        "df_inpi3_reste",
        "loc",
        "df_inpi3",
        "pn",
        "min",
        "df_inpi3_reste",
        "loc",
        "df_inpi3_reste",
        "pn",
        "df_inpi3_reste",
        "minimum",
        "liste_inpi",
        "append",
        "tmp_inpi",
        "pd",
        "concat",
        "liste_inpi",
        "drop_duplicates",
        "df_inpi4",
        "loc",
        "df_inpi4",
        "drop_duplicates",
        "pd",
        "concat",
        "inpi_ok1",
        "df_inpi4_0",
        "inpi_ok2",
        "drop",
        "columns",
        "fr",
        "drop",
        "columns",
        "pd",
        "merge",
        "fr2",
        "inpi_ok2",
        "on",
        "how",
        "drop_duplicates",
        "fr2",
        "replace",
        "regex",
        "fr2",
        "loc",
        "fr2",
        "notna",
        "fr2",
        "loc",
        "fr2",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "fr2",
        "astype",
        "pd",
        "Int64Dtype",
        "fr2",
        "loc",
        "fr2",
        "fr2",
        "loc",
        "fr2",
        "fr2",
        "loc",
        "fr2",
        "fr2",
        "loc",
        "fr2",
        "apply",
        "a",
        "a",
        "fr2",
        "loc",
        "fr2",
        "isin",
        "np",
        "nan",
        "fr2",
        "drop",
        "columns",
        "drop_duplicates",
        "fr2",
        "loc",
        "fr2",
        "isna",
        "fr2",
        "notna",
        "fr2",
        "loc",
        "fr2",
        "isna",
        "fr2",
        "notna",
        "apply",
        "a",
        "a",
        "fr2",
        "groupby",
        "nunique",
        "dropna",
        "reset_index",
        "unique_siren",
        "loc",
        "unique_siren",
        "fr2",
        "loc",
        "fr2",
        "isin",
        "multi",
        "np",
        "nan",
        "fr2",
        "groupby",
        "nunique",
        "dropna",
        "reset_index",
        "unique_siret",
        "loc",
        "unique_siret",
        "unique_siret",
        "loc",
        "unique_siret",
        "person",
        "multi_siret",
        "fr2",
        "loc",
        "fr2",
        "person",
        "dropna",
        "item",
        "fr2",
        "loc",
        "fr2",
        "person",
        "fr2",
        "isna",
        "sir",
        "len",
        "trop_siret",
        "person",
        "trop_siret",
        "fr2",
        "loc",
        "fr2",
        "person",
        "np",
        "nan",
        "fr2",
        "drop_duplicates",
        "fr2",
        "loc",
        "fr2",
        "isna",
        "len",
        "fr",
        "len",
        "fr2",
        "flush",
        "flush",
        "os",
        "getenv",
        "key",
        "requests",
        "post",
        "token_url",
        "data",
        "data",
        "headers",
        "headers",
        "r",
        "content",
        "decode",
        "json",
        "loads",
        "rs",
        "response",
        "get",
        "flush",
        "clef",
        "ep",
        "get_part",
        "clef",
        "token",
        "len",
        "dpn",
        "dpn",
        "astype",
        "liste_appln",
        "append",
        "dpn",
        "ep",
        "loc",
        "ep",
        "clef",
        "reset_index",
        "drop",
        "columns",
        "drop_duplicates",
        "clef",
        "dd",
        "astype",
        "len",
        "dpn",
        "pd",
        "merge",
        "dd",
        "dpn",
        "left_on",
        "right_on",
        "how",
        "liste_publn",
        "append",
        "dpn3",
        "len",
        "dpn3",
        "liste_publn",
        "append",
        "dpn3",
        "len",
        "dpn",
        "loc",
        "dpn",
        "dpn",
        "loc",
        "dpn",
        "pd",
        "merge",
        "dd",
        "dpn2",
        "left_on",
        "right_on",
        "how",
        "liste_publn",
        "append",
        "dpn3",
        "len",
        "dpn3",
        "liste_publn",
        "append",
        "dpn3",
        "dd",
        "drop_duplicates",
        "d1",
        "astype",
        "pd",
        "merge",
        "d1",
        "dpn",
        "left_on",
        "right_on",
        "how",
        "dpn2",
        "drop",
        "columns",
        "len",
        "dpn2",
        "pd",
        "merge",
        "dd",
        "dpn2",
        "left_on",
        "right_on",
        "how",
        "liste_publn",
        "append",
        "dpn3",
        "len",
        "dpn2",
        "dpn2",
        "apply",
        "pd",
        "to_datetime",
        "min",
        "dpn2",
        "len",
        "dpn2",
        "loc",
        "dpn2",
        "mdate",
        "dpn2",
        "loc",
        "dpn2",
        "mdate",
        "pd",
        "merge",
        "dd",
        "dpn2",
        "left_on",
        "right_on",
        "how",
        "dpn3",
        "drop",
        "columns",
        "liste_publn",
        "append",
        "dpn3",
        "flush",
        "pd",
        "concat",
        "liste_appln",
        "pd",
        "concat",
        "liste_publn",
        "ep",
        "publn",
        "flush",
        "clef",
        "diff",
        "get_part",
        "clef",
        "token",
        "clef",
        "ep",
        "loc",
        "ep",
        "clef",
        "reset_index",
        "drop",
        "columns",
        "drop_duplicates",
        "dpn",
        "loc",
        "dpn",
        "dpn2",
        "astype",
        "dd",
        "astype",
        "clef",
        "pd",
        "merge",
        "dd",
        "dpn2",
        "left_on",
        "right_on",
        "how",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "concat",
        "publn",
        "dd2",
        "flush",
        "publn",
        "copy",
        "reset_index",
        "drop",
        "drop_duplicates",
        "publn_bodacc",
        "replace",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "split",
        "publn_bodacc",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "publn_bodacc",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "col",
        "publn_bodacc",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "col",
        "col_address",
        "col",
        "publn_bodacc",
        "col",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "isinstance",
        "a",
        "a",
        "publn_bodacc",
        "drop",
        "columns",
        "col",
        "col_address",
        "remove",
        "col",
        "col",
        "publn_bodacc",
        "columns",
        "col",
        "startswith",
        "col",
        "endswith",
        "col",
        "col_address",
        "col_address2",
        "append",
        "col",
        "col",
        "col_address2",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "col",
        "apply",
        "b",
        "len",
        "a",
        "re",
        "match",
        "a",
        "b",
        "isinstance",
        "b",
        "len",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "col",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "isinstance",
        "b",
        "publn_bodacc",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "isinstance",
        "a",
        "a",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "isinstance",
        "a",
        "len",
        "a",
        "a",
        "apply",
        "a",
        "isinstance",
        "a",
        "a",
        "publn_bodacc",
        "drop",
        "columns",
        "flush",
        "address_api",
        "publn_bodacc",
        "pd",
        "merge",
        "publn_bodacc",
        "df_ad_publn",
        "on",
        "how",
        "flush",
        "flush",
        "subset_df",
        "publn_bodacc",
        "res_futures",
        "sub_publn_bodacc",
        "bodacc",
        "flush",
        "pd",
        "merge",
        "publn_bodacc",
        "df_bodacc",
        "on",
        "how",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "loc",
        "i",
        "r",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "iterrows",
        "r",
        "housenumber",
        "split_hs",
        "chaine",
        "publn_bodacc",
        "at",
        "ch",
        "ch",
        "min",
        "ch",
        "max",
        "ch",
        "publn_bodacc",
        "at",
        "mini",
        "publn_bodacc",
        "at",
        "maxi",
        "i",
        "r",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "iterrows",
        "r",
        "split_hs",
        "chaine2",
        "publn_bodacc",
        "at",
        "ch2",
        "ch2",
        "min",
        "ch2",
        "max",
        "ch2",
        "publn_bodacc",
        "at",
        "mini2",
        "publn_bodacc",
        "at",
        "maxi2",
        "publn_bodacc",
        "astype",
        "pd",
        "Int64Dtype",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "a",
        "nbr_min",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "axis",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "a",
        "no_min",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "axis",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "publn_bodacc",
        "astype",
        "pd",
        "Int64Dtype",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "notna",
        "publn_bodacc",
        "drop",
        "columns",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "loc",
        "apply",
        "a",
        "a",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "drop",
        "columns",
        "col",
        "publn_bodacc",
        "columns",
        "col",
        "startswith",
        "col",
        "endswith",
        "publn_bodacc",
        "drop",
        "columns",
        "col",
        "publn_bodacc",
        "drop",
        "columns",
        "publn_bodacc",
        "drop_duplicates",
        "publn_bodacc",
        "apply",
        "a",
        "a",
        "lower",
        "publn_bodacc",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "name",
        "publn_bodacc",
        "publn_bodacc",
        "loc",
        "publn_bodacc",
        "name",
        "min",
        "df",
        "df",
        "loc",
        "df",
        "dmin",
        "df",
        "drop",
        "columns",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "rename",
        "columns",
        "df",
        "astype",
        "liste_publn_bodacc",
        "append",
        "df",
        "pd",
        "concat",
        "liste_publn_bodacc",
        "publn_bodacc2",
        "copy",
        "cmpte",
        "astype",
        "cmpte",
        "astype",
        "cmpte",
        "astype",
        "cmpte",
        "cmpte",
        "cmpte",
        "cmpte",
        "astype",
        "cmpte",
        "drop_duplicates",
        "reset_index",
        "drop",
        "cmpte",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "pd",
        "merge",
        "cmpte",
        "cmpte_cmp",
        "on",
        "how",
        "cmpte",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "publn_bodacc2",
        "cmpte",
        "on",
        "how",
        "publn_bodacc3",
        "loc",
        "publn_bodacc3",
        "np",
        "nan",
        "publn_bodacc3",
        "drop",
        "columns",
        "publn_bodacc3",
        "loc",
        "publn_bodacc3",
        "notna",
        "publn_bodacc3",
        "ep",
        "columns",
        "drop_duplicates",
        "ep",
        "loc",
        "ep",
        "isin",
        "publn_bodacc3",
        "notepfr",
        "loc",
        "notepfr",
        "isin",
        "publn",
        "notepfr",
        "notna",
        "nepfr_address",
        "rename",
        "columns",
        "nepfr_address",
        "drop",
        "columns",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "nepfr_address",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "nepfr_address",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "flush",
        "address_api",
        "nepfr_address",
        "flush",
        "pd",
        "merge",
        "nepfr_address",
        "df_ad_nepfr",
        "on",
        "how",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "col",
        "nepfr_address",
        "columns",
        "col",
        "startswith",
        "col_address",
        "append",
        "col",
        "col",
        "col_address",
        "col",
        "nepfr_address",
        "col",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "isinstance",
        "a",
        "a",
        "nepfr_address",
        "drop",
        "columns",
        "col",
        "col_address",
        "remove",
        "col",
        "col",
        "nepfr_address",
        "columns",
        "col",
        "startswith",
        "col",
        "endswith",
        "col",
        "col_address",
        "col_address2",
        "append",
        "col",
        "nepfr_address",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "isinstance",
        "b",
        "nepfr_address",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "flush",
        "subset_df",
        "nepfr_address",
        "res_futures",
        "sub_nepfr_address",
        "bodacc",
        "flush",
        "len",
        "df_bodacc",
        "pd",
        "merge",
        "nepfr_address",
        "df_bodacc",
        "on",
        "how",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "loc",
        "i",
        "r",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "iterrows",
        "r",
        "housenumber",
        "split_hs",
        "chaine",
        "nepfr_address",
        "at",
        "ch",
        "ch",
        "min",
        "ch",
        "max",
        "ch",
        "nepfr_address",
        "at",
        "mini",
        "nepfr_address",
        "at",
        "maxi",
        "i",
        "r",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "iterrows",
        "r",
        "split_hs",
        "chaine2",
        "nepfr_address",
        "at",
        "ch2",
        "ch2",
        "min",
        "ch2",
        "max",
        "ch2",
        "nepfr_address",
        "at",
        "mini2",
        "nepfr_address",
        "at",
        "maxi2",
        "nepfr_address",
        "astype",
        "pd",
        "Int64Dtype",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "a",
        "nbr_min",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "axis",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "a",
        "no_min",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "axis",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "nepfr_address",
        "astype",
        "pd",
        "Int64Dtype",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "notna",
        "nepfr_address",
        "drop",
        "columns",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "loc",
        "apply",
        "a",
        "a",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "drop",
        "columns",
        "nepfr_address",
        "apply",
        "a",
        "a",
        "lower",
        "nepfr_address",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "name",
        "nepfr_address",
        "nepfr_address",
        "loc",
        "nepfr_address",
        "name",
        "min",
        "df",
        "df",
        "loc",
        "df",
        "dmin",
        "df",
        "drop",
        "columns",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "loc",
        "df",
        "notna",
        "df",
        "rename",
        "columns",
        "df",
        "astype",
        "liste_publn_nepfr",
        "append",
        "df",
        "pd",
        "concat",
        "liste_publn_nepfr",
        "nepfr_address2",
        "copy",
        "cmpte",
        "astype",
        "cmpte",
        "astype",
        "cmpte",
        "astype",
        "cmpte",
        "cmpte",
        "cmpte",
        "cmpte",
        "astype",
        "cmpte",
        "drop_duplicates",
        "reset_index",
        "drop",
        "cmpte",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "pd",
        "merge",
        "cmpte",
        "cmpte_cmp",
        "on",
        "how",
        "cmpte",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "nepfr_address2",
        "cmpte",
        "on",
        "how",
        "nepfr_address3",
        "loc",
        "nepfr_address3",
        "np",
        "nan",
        "nepfr_address3",
        "drop",
        "columns",
        "nepfr_address3",
        "loc",
        "nepfr_address3",
        "notna",
        "nepfr_address3",
        "columns",
        "intersection",
        "notepfr",
        "columns",
        "nepfr_address3",
        "com_cols",
        "drop_duplicates",
        "len",
        "nepfr_address3",
        "notepfr",
        "loc",
        "notepfr",
        "isin",
        "nepfr_address3",
        "notepfr",
        "copy",
        "fam_oeb",
        "reste_ep",
        "df_famille",
        "loc",
        "df_famille",
        "drop_duplicates",
        "df_famille_fr",
        "rename",
        "columns",
        "df_famille_fr2",
        "replace",
        "df_famille_fr2",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "reste_ep",
        "df_famille_fr2",
        "on",
        "how",
        "drop_duplicates",
        "siren_inpi_famille",
        "df_famille_fr2",
        "paths_aws",
        "key",
        "df_famille_fr_ok",
        "df_famille_fr_ok",
        "loc",
        "df_famille_fr_ok",
        "key",
        "min",
        "df",
        "df",
        "loc",
        "df",
        "dmin",
        "liste_df_famille_fr_ok",
        "append",
        "df",
        "pd",
        "concat",
        "liste_df_famille_fr_ok",
        "df_famille_fr_ok2",
        "drop",
        "columns",
        "rename",
        "columns",
        "df_famille_fr_ok2",
        "columns",
        "intersection",
        "noms",
        "columns",
        "df_famille_fr_ok2",
        "com_col",
        "reste_ep",
        "loc",
        "reste_ep",
        "isin",
        "df_famille_fr_ok2",
        "reste_ep",
        "isin",
        "df_famille_fr2",
        "df_famille_fr_ok2",
        "union",
        "reste_ep_fr",
        "df_famille",
        "copy",
        "df_famille_ep",
        "replace",
        "regex",
        "df_famille_ep",
        "loc",
        "df_famille_ep",
        "df_famille_ep",
        "isin",
        "notpn",
        "drop_duplicates",
        "df_famille_ep",
        "rename",
        "columns",
        "pd",
        "merge",
        "reste_ep",
        "df_famille_ep2",
        "on",
        "how",
        "drop_duplicates",
        "df_famille_ep2",
        "drop",
        "columns",
        "rename",
        "columns",
        "os",
        "getenv",
        "key",
        "requests",
        "post",
        "token_url",
        "data",
        "data",
        "headers",
        "headers",
        "r",
        "content",
        "decode",
        "json",
        "loads",
        "rs",
        "response",
        "get",
        "df_famille_ep2",
        "apply",
        "a",
        "a",
        "pub",
        "df_famille_ep2",
        "time",
        "sleep",
        "get_token_oeb",
        "get_part",
        "pub",
        "token",
        "dpn",
        "astype",
        "pub",
        "dpn",
        "loc",
        "dpn",
        "len",
        "dpn",
        "pd",
        "merge",
        "dpn",
        "df_famille_ep2",
        "loc",
        "df_famille_ep2",
        "pub",
        "on",
        "how",
        "dpn2",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "dpn2",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "dpn2",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "min",
        "dpn2",
        "dpn2",
        "loc",
        "dpn2",
        "dmin",
        "dpn2",
        "drop",
        "columns",
        "drop_duplicates",
        "liste_oeb",
        "append",
        "dpn2",
        "pd",
        "concat",
        "liste_oeb",
        "df_oeb",
        "drop",
        "columns",
        "flush",
        "address_api",
        "df_oeb",
        "pd",
        "merge",
        "df_oeb",
        "df_address_oeb",
        "on",
        "how",
        "flush",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "df_address_oeb",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "df_address_oeb",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "subset_df",
        "df_address_oeb",
        "res_futures",
        "sub_address_oeb",
        "bodacc",
        "pd",
        "merge",
        "df_address_oeb",
        "df_oeb_bodacc",
        "on",
        "how",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "loc",
        "i",
        "r",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "iterrows",
        "r",
        "housenumber",
        "split_hs",
        "chaine",
        "df_address_oeb",
        "at",
        "ch",
        "ch",
        "min",
        "ch",
        "max",
        "ch",
        "df_address_oeb",
        "at",
        "mini",
        "df_address_oeb",
        "at",
        "maxi",
        "i",
        "r",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "iterrows",
        "r",
        "split_hs",
        "chaine2",
        "df_address_oeb",
        "at",
        "ch2",
        "ch2",
        "min",
        "ch2",
        "max",
        "ch2",
        "df_address_oeb",
        "at",
        "mini2",
        "df_address_oeb",
        "at",
        "maxi2",
        "df_address_oeb",
        "astype",
        "pd",
        "Int64Dtype",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "a",
        "nbr_min",
        "x",
        "x",
        "a",
        "nbr_min",
        "a",
        "nbr_max",
        "x",
        "axis",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "apply",
        "a",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "a",
        "no_min",
        "x",
        "x",
        "a",
        "no_min",
        "a",
        "no_max",
        "x",
        "axis",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "apply",
        "a",
        "len",
        "a",
        "df_address_oeb",
        "astype",
        "pd",
        "Int64Dtype",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "a",
        "axis",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "drop",
        "columns",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "loc",
        "apply",
        "a",
        "a",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "drop",
        "columns",
        "df_address_oeb",
        "apply",
        "a",
        "a",
        "lower",
        "df_address_oeb",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "min",
        "df_address_oeb",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "dmin",
        "df_address_oeb",
        "drop",
        "columns",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "loc",
        "df_address_oeb",
        "notna",
        "df_address_oeb",
        "rename",
        "columns",
        "df_address_oeb",
        "astype",
        "df_address_oeb",
        "drop",
        "columns",
        "drop_duplicates",
        "df_address_oeb",
        "com_col",
        "drop_duplicates",
        "pd",
        "merge",
        "noms",
        "nepfr_address3",
        "on",
        "how",
        "len",
        "nepfr_address3",
        "pd",
        "concat",
        "fr2",
        "loc",
        "fr2",
        "notna",
        "publn_bodacc3",
        "nepfr_address3",
        "df_famille_fr_ok2",
        "df_address_oeb2",
        "pd",
        "concat",
        "fr2",
        "loc",
        "fr2",
        "notna",
        "publn_bodacc3",
        "df_famille_fr_ok2",
        "df_address_oeb2",
        "ok",
        "drop_duplicates",
        "noms",
        "loc",
        "noms",
        "isin",
        "ok",
        "reste",
        "drop_duplicates",
        "reste_name_ad",
        "reste_name_ad",
        "ok",
        "drop_duplicates",
        "ok_ex",
        "ok_ex",
        "ok_ex",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "ok_ex",
        "loc",
        "ok_ex",
        "isin",
        "compte_ok_ex",
        "loc",
        "compte_ok_ex",
        "ok_ex",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "reste_name_ad",
        "ok_ex",
        "on",
        "how",
        "drop",
        "columns",
        "drop_duplicates",
        "reste",
        "copy",
        "reste_ok2",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "reste_ok2",
        "reste_ok",
        "on",
        "how",
        "pd",
        "concat",
        "ok",
        "reste_ok2",
        "ok",
        "drop_duplicates",
        "noms",
        "loc",
        "noms",
        "isin",
        "ok",
        "reste2",
        "rename",
        "columns",
        "reste2_address",
        "drop",
        "columns",
        "reste2_address",
        "fillna",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "reste2_address",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "reste2_address",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "reste2_address",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "reste2_address",
        "apply",
        "a",
        "a",
        "flush",
        "subset_df",
        "reste2_address",
        "res_futures",
        "sub_reste2_address",
        "bodacc",
        "flush",
        "df_bodacc_reste2",
        "rename",
        "columns",
        "df_bodacc_reste2",
        "loc",
        "df_bodacc_reste2",
        "notna",
        "df_bodacc_reste2",
        "loc",
        "df_bodacc_reste2",
        "notna",
        "len",
        "df_bodacc_reste2",
        "pd",
        "merge",
        "reste2_address",
        "df_bodacc_reste2",
        "on",
        "how",
        "reste2_address",
        "apply",
        "a",
        "a",
        "lower",
        "reste2_address",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "reste2_address",
        "loc",
        "reste2_address",
        "drop",
        "columns",
        "drop_duplicates",
        "reste2_address_ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "reste2_address_ok",
        "loc",
        "reste2_address_ok",
        "isin",
        "compte_reste2",
        "loc",
        "compte_reste2",
        "np",
        "nan",
        "reste2_address_ok",
        "loc",
        "reste2_address_ok",
        "notna",
        "reste2_address_ok",
        "rename",
        "columns",
        "reste2_address_ok",
        "reste2",
        "columns",
        "drop_duplicates",
        "pd",
        "concat",
        "ok",
        "reste2_address_ok",
        "ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "ok",
        "loc",
        "ok",
        "isin",
        "ok_compte",
        "loc",
        "ok_compte",
        "np",
        "nan",
        "ok",
        "loc",
        "ok",
        "notna",
        "reste2",
        "loc",
        "reste2",
        "isin",
        "ok",
        "ok",
        "copy",
        "ok_test",
        "ok_test",
        "reste2_reste",
        "copy",
        "reste2_reste_test",
        "reste2_reste_test",
        "pd",
        "merge",
        "reste2_reste_test",
        "ok_test",
        "on",
        "how",
        "len",
        "test",
        "reste2_reste",
        "loc",
        "reste2_reste",
        "isin",
        "test",
        "reste2_reste_ok",
        "drop",
        "columns",
        "pd",
        "merge",
        "reste2_reste_ok",
        "test",
        "on",
        "how",
        "pd",
        "concat",
        "ok",
        "reste2_reste_ok",
        "ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "ok",
        "loc",
        "ok",
        "isin",
        "ok_compte2",
        "loc",
        "ok_compte2",
        "np",
        "nan",
        "ok",
        "loc",
        "ok",
        "notna",
        "reste2",
        "loc",
        "reste2",
        "isin",
        "ok",
        "reste3",
        "apply",
        "a",
        "a",
        "encode",
        "decode",
        "strip",
        "part_entp_final",
        "copy",
        "noms_siren",
        "loc",
        "noms_siren",
        "noms_siren",
        "loc",
        "noms_siren",
        "notna",
        "noms_siren",
        "isna",
        "noms_siren",
        "loc",
        "noms_siren",
        "notna",
        "noms_siren",
        "isna",
        "noms_siren",
        "loc",
        "noms_siren",
        "notna",
        "noms_siren",
        "drop_duplicates",
        "noms_siren2",
        "astype",
        "noms_siren2",
        "astype",
        "noms_siren2",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "noms_siren2",
        "loc",
        "noms_siren2",
        "isin",
        "compte_siren2",
        "loc",
        "compte_siren2",
        "np",
        "nan",
        "noms_siren2",
        "loc",
        "noms_siren2",
        "notna",
        "reste3",
        "copy",
        "reste3_2",
        "drop",
        "columns",
        "reste3_2",
        "astype",
        "reste3_2",
        "astype",
        "pd",
        "merge",
        "reste3_2",
        "noms_siren2",
        "on",
        "how",
        "reste3",
        "loc",
        "reste3",
        "isin",
        "reste3_2",
        "reste3_reste_ok",
        "drop",
        "columns",
        "pd",
        "merge",
        "reste3_reste_ok",
        "reste3_2",
        "on",
        "how",
        "reste3_reste_ok",
        "drop",
        "columns",
        "pd",
        "concat",
        "ok",
        "reste3_reste_ok",
        "ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "ok",
        "loc",
        "ok",
        "isin",
        "compte_ok",
        "loc",
        "compte_ok",
        "np",
        "nan",
        "ok",
        "loc",
        "ok",
        "notna",
        "reste3",
        "loc",
        "reste3",
        "isin",
        "ok",
        "noms_siren",
        "drop_duplicates",
        "noms_siren3",
        "groupby",
        "nunique",
        "reset_index",
        "compte_siren3",
        "loc",
        "compte_siren3",
        "noms_siren3",
        "loc",
        "noms_siren3",
        "isin",
        "compte_siren3",
        "pd",
        "merge",
        "reste4",
        "noms_siren3",
        "on",
        "how",
        "pd",
        "concat",
        "ok",
        "reste4_ok",
        "reste4",
        "loc",
        "reste4",
        "reste5",
        "copy",
        "reste5",
        "apply",
        "a",
        "a",
        "replace",
        "reste5",
        "apply",
        "a",
        "join",
        "letter",
        "letter",
        "a",
        "letter",
        "isprintable",
        "i",
        "r",
        "reste5",
        "iterrows",
        "r",
        "name_propre",
        "chaine",
        "encode",
        "decode",
        "chaine",
        "cod",
        "cod",
        "key",
        "dico_l",
        "keys",
        "reste5",
        "loc",
        "reste5",
        "key",
        "dico_l",
        "key",
        "subset_df",
        "reste5",
        "res_futures",
        "sub_structure",
        "req_scanr_stru",
        "futures_stru",
        "to_csv",
        "sep",
        "encoding",
        "index",
        "futures_stru",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "futures_stru",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "futures_stru",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "key",
        "futures_stru",
        "futures_stru",
        "loc",
        "futures_stru",
        "key",
        "min",
        "futures_stru",
        "loc",
        "futures_stru",
        "key",
        "futures_stru",
        "minimum",
        "liste_scanr",
        "append",
        "tmp_scanr",
        "pd",
        "concat",
        "liste_scanr",
        "_",
        "r",
        "df_scanr",
        "iterrows",
        "r",
        "externalIds",
        "ids",
        "dict_ids",
        "append",
        "r",
        "key_appln_nr_person",
        "item",
        "ids",
        "item",
        "keys",
        "it",
        "liste_keys",
        "it",
        "ids",
        "remove",
        "item",
        "id",
        "get",
        "id",
        "ids",
        "item",
        "lab_id",
        "lab_id",
        "count",
        "item",
        "lab_id2",
        "item",
        "lab_id2",
        "item",
        "k",
        "k",
        "lab_id2",
        "keys",
        "k",
        "keys",
        "k",
        "id",
        "get",
        "id",
        "ids",
        "k",
        "keys",
        "item",
        "ids",
        "item",
        "k",
        "ids",
        "remove",
        "item",
        "item",
        "ids",
        "item",
        "get",
        "item",
        "get",
        "dict_ids",
        "typ",
        "append",
        "id",
        "typ",
        "not_keys",
        "dict_ids",
        "typ",
        "append",
        "r",
        "address_scanr",
        "ad",
        "pd",
        "DataFrame",
        "data",
        "ad",
        "r",
        "key_appln_nr_person",
        "liste_scanr_ad",
        "append",
        "tmp",
        "pd",
        "DataFrame",
        "data",
        "dict_ids",
        "df_ids",
        "drop_duplicates",
        "pd",
        "concat",
        "liste_scanr_ad",
        "df_scanr_ad",
        "df_scanr_ad",
        "drop_duplicates",
        "pd",
        "merge",
        "df_scanr",
        "drop",
        "columns",
        "df_ids",
        "on",
        "how",
        "df_scanr2",
        "drop_duplicates",
        "pd",
        "merge",
        "df_scanr2",
        "df_scanr_ad",
        "on",
        "how",
        "df_scanr2_ad",
        "drop_duplicates",
        "key",
        "df_scanr2_ad",
        "len",
        "df_scanr2_ad",
        "loc",
        "df_scanr2_ad",
        "key",
        "df_scanr2_ad",
        "loc",
        "df_scanr2_ad",
        "key",
        "liste",
        "append",
        "df",
        "df_scanr2_ad",
        "loc",
        "df_scanr2_ad",
        "df_scanr_0",
        "drop",
        "columns",
        "drop_duplicates",
        "pd",
        "merge",
        "reste5",
        "drop",
        "columns",
        "df_scanr_0",
        "on",
        "how",
        "rename",
        "columns",
        "drop_duplicates",
        "reste5_ok",
        "drop",
        "columns",
        "pd",
        "concat",
        "ok",
        "reste5_ok",
        "ok",
        "loc",
        "ok",
        "notna",
        "df_scanr2_ad",
        "loc",
        "df_scanr2_ad",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "apply",
        "a",
        "a",
        "replace",
        "split",
        "df_scanr_sup",
        "apply",
        "b",
        "a",
        "re",
        "findall",
        "a",
        "b",
        "df_scanr_sup",
        "apply",
        "a",
        "item",
        "item",
        "a",
        "item",
        "df_scanr_sup",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "apply",
        "a",
        "a",
        "len",
        "a",
        "df_scanr_sup",
        "loc",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "cp",
        "df_scanr_0",
        "columns",
        "pd",
        "merge",
        "reste5",
        "drop",
        "columns",
        "cp",
        "on",
        "how",
        "rename",
        "columns",
        "drop_duplicates",
        "pd",
        "concat",
        "ok",
        "reste5_cp_ok",
        "ok",
        "loc",
        "ok",
        "notna",
        "ok",
        "drop",
        "columns",
        "reste5",
        "loc",
        "reste5",
        "isin",
        "ok",
        "pd",
        "concat",
        "cp",
        "df_scanr_0",
        "ok5",
        "loc",
        "ok5",
        "isin",
        "reste6",
        "autres_noms_j",
        "pd",
        "merge",
        "reste6",
        "drop",
        "columns",
        "autres_noms_j",
        "on",
        "how",
        "rename",
        "columns",
        "drop_duplicates",
        "reste6_ok",
        "ok",
        "columns",
        "pd",
        "concat",
        "ok",
        "reste6_ok",
        "reste6",
        "loc",
        "reste6",
        "isin",
        "ok",
        "reste7",
        "drop_duplicates",
        "requests",
        "post",
        "data",
        "auth",
        "os",
        "getenv",
        "os",
        "getenv",
        "res",
        "json",
        "token",
        "_",
        "r",
        "name_address",
        "iterrows",
        "r",
        "name_propre",
        "requests",
        "get",
        "url",
        "headers",
        "api_call_headers",
        "verify",
        "rinit",
        "status_code",
        "pd",
        "json_normalize",
        "rinit",
        "json",
        "rep",
        "drop_duplicates",
        "r",
        "name_source",
        "r",
        "name_propre",
        "r",
        "address_source",
        "liste_etab",
        "append",
        "rep",
        "pd",
        "concat",
        "liste_etab",
        "etab",
        "groupby",
        "nunique",
        "reset_index",
        "compte_etab",
        "rename",
        "columns",
        "pd",
        "merge",
        "etab",
        "compte_etab",
        "on",
        "how",
        "etab",
        "loc",
        "etab",
        "drop_duplicates",
        "rename",
        "columns",
        "etab_single",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "pd",
        "merge",
        "etab_single",
        "etab_single_c",
        "on",
        "how",
        "etab_single",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "replace",
        "regex",
        "etab_single",
        "apply",
        "a",
        "unidecode",
        "a",
        "lower",
        "replace",
        "regex",
        "etab_single",
        "apply",
        "a",
        "lev",
        "distance",
        "a",
        "a",
        "axis",
        "etab_single",
        "loc",
        "etab_single",
        "etab_single_0",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "etab_single_0",
        "loc",
        "etab_single_0",
        "isin",
        "etab_single_0_c",
        "loc",
        "etab_single_0_c",
        "pd",
        "merge",
        "reste7",
        "drop",
        "columns",
        "etab_single_0",
        "drop",
        "columns",
        "on",
        "reste7_ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "reste7_ok",
        "loc",
        "reste7_ok",
        "isin",
        "compte",
        "loc",
        "compte",
        "pd",
        "concat",
        "ok",
        "reste7_ok",
        "ok",
        "loc",
        "ok",
        "notna",
        "reste7",
        "loc",
        "reste7",
        "isin",
        "ok",
        "ok",
        "loc",
        "ok",
        "isin",
        "reste8",
        "autres_noms_j",
        "pd",
        "merge",
        "reste8",
        "drop",
        "columns",
        "autres_noms_j",
        "on",
        "how",
        "drop_duplicates",
        "pd",
        "concat",
        "ok",
        "reste8_ok",
        "ok",
        "loc",
        "ok",
        "notna",
        "ok",
        "groupby",
        "nunique",
        "reset_index",
        "rename",
        "columns",
        "ok",
        "loc",
        "ok",
        "isin",
        "compte",
        "loc",
        "compte",
        "ok",
        "drop",
        "columns",
        "drop_duplicates",
        "ok",
        "drop_duplicates",
        "ok_merge",
        "rename",
        "columns",
        "pd",
        "merge",
        "part_entp_final",
        "ok_merge",
        "on",
        "how",
        "col",
        "col",
        "part_entp_final2",
        "loc",
        "part_entp_final2",
        "col",
        "isna",
        "part_entp_final2",
        "col2",
        "notna",
        "part_entp_final2",
        "loc",
        "part_entp_final2",
        "col",
        "isna",
        "part_entp_final2",
        "col2",
        "notna",
        "col2",
        "part_entp_final2",
        "drop",
        "columns",
        "part_entp_final2",
        "to_csv",
        "sep",
        "encoding",
        "index"
    ],
    "literals": [
        "'MOUNTED_VOLUME_TEST'",
        "'https://bodacc-datadila.opendatasoft.com/api/records/1.0/search/?dataset=annonces-commerciales&'",
        "'%(asctime)s - %(threadName)s - %(levelname)s - %(message)s'",
        "\"thread\"",
        "'%r generated an exception: %s'",
        "\"df1\"",
        "\"df\"",
        "\"reste\"",
        "\"Failed while trying to access the URL\"",
        "\"URL successfully accessed\"",
        "\"ops:world-patent-data\"",
        "\"ops:register-search\"",
        "\"reg:register-documents\"",
        "\"reg:register-document\"",
        "\"reg:bibliographic-data\"",
        "\"reg:parties\"",
        "\"reg:applicants\"",
        "\"reg:applicant\"",
        "\"reg:applicant\"",
        "\"@change-date\"",
        "\"@change-gazette-num\"",
        "\"@app-type\"",
        "\"@designation\"",
        "\"reg:nationality.reg:country\"",
        "\"reg:residence.reg:country\"",
        "\"\"",
        "\"reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"reg:addressbook.reg:address.reg:\"",
        "\"\"",
        "\"@sequence\"",
        "\"sequence\"",
        "\"reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "\"reg:applicant.@app-type\"",
        "\"reg:applicant.@designation\"",
        "\"reg:applicant.reg:nationality.reg:country\"",
        "\"reg:applicant.reg:residence.reg:country\"",
        "\"\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:\"",
        "\"\"",
        "\"reg:applicant.@sequence\"",
        "\"sequence\"",
        "\"reg:applicant.reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:applicant.reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "\"reg:applicant\"",
        "\"reg:applicant\"",
        "\"@change-date\"",
        "\"@change-gazette-num\"",
        "\"@app-type\"",
        "\"@designation\"",
        "\"reg:nationality.reg:country\"",
        "\"reg:residence.reg:country\"",
        "\"\"",
        "\"reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"reg:addressbook.reg:address.reg:\"",
        "\"\"",
        "\"@sequence\"",
        "\"sequence\"",
        "\"reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "\"reg:applicant\"",
        "\"reg:applicant\"",
        "\"@change-date\"",
        "\"@change-gazette-num\"",
        "\"@app-type\"",
        "\"@designation\"",
        "\"reg:nationality.reg:country\"",
        "\"reg:residence.reg:country\"",
        "\"\"",
        "\"reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"@sequence\"",
        "\"sequence\"",
        "\"reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "\"reg:applicant.@app-type\"",
        "\"reg:applicant.@designation\"",
        "\"reg:applicant.reg:nationality.reg:country\"",
        "\"reg:applicant.reg:residence.reg:country\"",
        "\"\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:\"",
        "\"\"",
        "\"reg:applicant.@sequence\"",
        "\"sequence\"",
        "\"reg:applicant.reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:applicant.reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "\"reg:applicant.@app-type\"",
        "\"reg:applicant.@designation\"",
        "\"reg:applicant.reg:nationality.reg:country\"",
        "\"reg:applicant.reg:residence.reg:country\"",
        "\"\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:address-\"",
        "\"address\"",
        "\"address\"",
        "\"address\"",
        "\" \"",
        "\"address\"",
        "\"address\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:\"",
        "\"\"",
        "\"reg:applicant.@sequence\"",
        "\"sequence\"",
        "\"reg:applicant.reg:addressbook.@cdsid\"",
        "\"cdsid\"",
        "\"reg:applicant.reg:addressbook.reg:name\"",
        "\"name\"",
        "\"reg:applicant.reg:addressbook.reg:address.reg:country\"",
        "\"country\"",
        "'https://ops.epo.org/3.2/auth/accesstoken'",
        "\"KEY_OPS_OEB\"",
        "'grant_type'",
        "'client_credentials'",
        "'Authorization'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "f\"Bearer {response.get('access_token')}\"",
        "'access_token'",
        "f\"http://ops.epo.org/3.2/rest-services/register/search/biblio?q=pn%3D{pn}\"",
        "\"Authorization\"",
        "'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\\n'",
        "'<fault xmlns=\"http://ops.epo.org\">\\n    <code>SERVER.EntityNotFound</code>\\n'",
        "'    <message>No results found</message>\\n</fault>\\n'",
        "\"Failed while trying to access the URL\"",
        "\"URL successfully accessed\"",
        "\"[\"",
        "\"]\"",
        "\"-\"",
        "\"Allée\"",
        "\"ALL\"",
        "\"Avenue\"",
        "\"AV\"",
        "\"Boulevard\"",
        "\"BD\"",
        "\"Carrefour\"",
        "\"CAR\"",
        "\"Chemin\"",
        "\"CHE\"",
        "\"Chaussée\"",
        "\"CHS\"",
        "\"Cité\"",
        "\"CITE\"",
        "\"Corniche\"",
        "\"COR\"",
        "\"Cours\"",
        "\"CRS\"",
        "\"Domaine\"",
        "\"DOM\"",
        "\"Descente\"",
        "\"DSC\"",
        "\"Ecart\"",
        "\"ECA\"",
        "\"Esplanade\"",
        "\"ESP\"",
        "\"Faubourg\"",
        "\"FG\"",
        "\"Grande Rue\"",
        "\"GR\"",
        "\"Hameau\"",
        "\"HAM\"",
        "\"Halle\"",
        "\"HLE\"",
        "\"Impasse\"",
        "\"IMP\"",
        "\"Lieu-dit\"",
        "\"LD\"",
        "\"Lotissement\"",
        "\"LOT\"",
        "\"Marché\"",
        "\"MAR\"",
        "\"Montée\"",
        "\"MTE\"",
        "\"Passage\"",
        "\"PAS\"",
        "\"Place\"",
        "\"PL\"",
        "\"Plaine\"",
        "\"PLN\"",
        "\"Plateau\"",
        "\"PLT\"",
        "\"Promenade\"",
        "\"PRO\"",
        "\"Parvis\"",
        "\"PRV\"",
        "\"Quartier\"",
        "\"QUA\"",
        "\"Quai\"",
        "\"QUAI\"",
        "\"Résidence\"",
        "\"RES\"",
        "\"Ruelle\"",
        "\"RLE\"",
        "\"Rocade\"",
        "\"ROC\"",
        "\"Rond-point\"",
        "\"RPT\"",
        "\"Route\"",
        "\"RTE\"",
        "\"Rue\"",
        "\"RUE\"",
        "\"Sente\"",
        "\"SEN\"",
        "\"Sentier\"",
        "\"SEN\"",
        "\"Square\"",
        "\"SQ\"",
        "\"Terre-plein\"",
        "\"TPL\"",
        "\"Traverse\"",
        "\"TRA\"",
        "\"Villa\"",
        "\"VLA\"",
        "\"Village\"",
        "\"VLGE\"",
        "f\"https://api-adresse.data.gouv.fr/search/?q={adresse}&type=housenumber\"",
        "\"features\"",
        "\"features\"",
        "\"properties.type\"",
        "\"housenumber\"",
        "\"properties.score\"",
        "\"properties.score\"",
        "\"address\"",
        "\"query\"",
        "\"properties.label\"",
        "\"properties.housenumber\"",
        "\"properties.name\"",
        "\"properties.postcode\"",
        "\"properties.citycode\"",
        "\"properties.city\"",
        "\"properties.street\"",
        "\"address\"",
        "\"properties.label\"",
        "\"properties.name\"",
        "\"properties.\"",
        "\"\"",
        "\"properties.label\"",
        "\"label_address\"",
        "\"name_address\"",
        "\"street\"",
        "\"street\"",
        "\"street\"",
        "\"name_address\"",
        "\"type_lib\"",
        "\"street\"",
        "\" \"",
        "\"libelle\"",
        "\"street\"",
        "f\"{df['type_lib'].item()} \"",
        "'type_lib'",
        "\"\"",
        "'type_lib'",
        "\"type_insee\"",
        "'type_lib'",
        "\"type_insee\"",
        "'type_lib'",
        "'gra'",
        "\"AWS_ACCESS_KEY_ID\"",
        "\"AWS_SECRET_ACCESS_KEY\"",
        "\"s3\"",
        "\"AWS_ACCESS_KEY_ID\"",
        "\"AWS_SECRET_ACCESS_KEY\"",
        "\"ENDPOINT_URL\"",
        "\"start query scranr structures\"",
        "\"inpi-xmls\"",
        "\"Body\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"applicants\"",
        "\"applicant\"",
        "\"fr-owners\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"fr-owners\"",
        "\"fr-owner\"",
        "\"fr-owners\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"fr-owners\"",
        "\"fr-owner\"",
        "\"publication_number\"",
        "\"publication_number_fr\"",
        "\"publication_number\"",
        "\"publication_number_fr\"",
        "\"end query xml aws\"",
        "\"publication_number\"",
        "\"publication_number_fr\"",
        "\"publication_number_fr\"",
        "\"inner\"",
        "\"applt_seq_nr\"",
        "\"siren\"",
        "\"@app-type\"",
        "\"@designation\"",
        "\"@sequence\"",
        "\"addressbook.@lang\"",
        "\"@data-format\"",
        "'addressbook.last-name'",
        "'last-name'",
        "'addressbook.first-name'",
        "'first-name'",
        "'addressbook.middle-name'",
        "'middle-name'",
        "'addressbook.iid'",
        "'siren'",
        "'addressbook.address.address-1'",
        "'address-1'",
        "'addressbook.address.city'",
        "'city'",
        "'addressbook.address.postcode'",
        "'postcode'",
        "'addressbook.address.country'",
        "'country'",
        "'addressbook.orgname'",
        "'orgname'",
        "\"last-name\"",
        "\"middle-name\"",
        "\"first-name\"",
        "\"orgname\"",
        "\"last-name\"",
        "\"middle-name\"",
        "\"first-name\"",
        "\"orgname\"",
        "\"\"",
        "\"name_multi\"",
        "\"first-name\"",
        "\" \"",
        "\"middle-name\"",
        "\" \"",
        "\"last-name\"",
        "\"name_multi\"",
        "\"name_multi\"",
        "\"orgname\"",
        "\"orgname\"",
        "\"orgname\"",
        "\"orgname\"",
        "r\"\\s{2,}\"",
        "\"\"",
        "\"name_complete\"",
        "\"orgname\"",
        "\"name_multi\"",
        "\"siren\"",
        "\"country\"",
        "\"FR\"",
        "\"siren\"",
        "\"address-1\"",
        "\"city\"",
        "\"postcode\"",
        "\"name_complete\"",
        "\"publication_number_fr\"",
        "\"publication_number\"",
        "\"siren\"",
        "\"publication_number_fr\"",
        "\"publication_number\"",
        "\"inner\"",
        "\"name_source2\"",
        "\"name_source\"",
        "\"name_complete2\"",
        "\"name_complete\"",
        "\"distance\"",
        "\"name_source2\"",
        "\"name_complete2\"",
        "\"publication_number_fr\"",
        "\"publication_number_fr\"",
        "\"distance\"",
        "\"publication_number_fr\"",
        "\"distance\"",
        "\"siren\"",
        "\"siren\"",
        "\" \"",
        "\"\"",
        "\"distance\"",
        "\"@document-id-type\"",
        "\"publication_number_fr\"",
        "\"address-1\"",
        "\"city\"",
        "\"postcode\"",
        "\"name_complete\"",
        "\"distance\"",
        "\"address_2\"",
        "\"address_source\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"address_source\"",
        "\"address_source\"",
        "\"address\"",
        "\"inner\"",
        "\"city_source\"",
        "\"city_x\"",
        "\"city_ad\"",
        "\"city_y\"",
        "\"test_cp\"",
        "\"postcode_x\"",
        "\"postcode_y\"",
        "\"test_city\"",
        "\"city_source\"",
        "\"city_ad\"",
        "\"test_city\"",
        "\"test_cp\"",
        "\"index\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "f\"http://ops.epo.org/3.2/rest-services/family/publication/docdb/EP{pb}\"",
        "\"Authorization\"",
        "\"Success\"",
        "\"ops:world-patent-data\"",
        "\"ops:patent-family\"",
        "\"ops:family-member\"",
        "'publication-reference'",
        "\"document-id\"",
        "'publication-reference'",
        "\"document-id\"",
        "\"@document-id-type\"",
        "\"docdb\"",
        "\"country\"",
        "\"EP\"",
        "\"FR\"",
        "\"pn\"",
        "\"EP\"",
        "\"pn\"",
        "\"EP\"",
        "\"doc-number\"",
        "\"error\"",
        "\"country\"",
        "\"appln_auth\"",
        "\"doc-number\"",
        "\"publication-number\"",
        "\"start query bodacc\"",
        "'personne.typePersonne'",
        "'personne.adresseSiegeSocial.pays'",
        "'personne.formeJuridique'",
        "'personne.numeroImmatriculation.codeRCS'",
        "'personne.numeroImmatriculation.nomGreffeImmat'",
        "'personne.adresseSiegeSocial.complGeographique'",
        "'personne.sigle'",
        "'personne.administration'",
        "'personne.capital.devise'",
        "'personne.capital.montantCapital'",
        "'personne.activite'",
        "'personne.capital.capitalVariable'",
        "'personne.nomCommercial'",
        "'personne.adressePP.numeroVoie'",
        "'personne.adressePP.typeVoie'",
        "'personne.adressePP.nomVoie'",
        "'personne.adressePP.codePostal'",
        "'personne.adressePP.ville'",
        "'personne.adressePP.pays'",
        "'personne.nom'",
        "'personne.prenom'",
        "'personne.nationalite'",
        "'personne.adresseEtablissementPrincipal.ville'",
        "'personne.adresseEtablissementPrincipal.pays'",
        "'personne.adresseEtablissementPrincipal.typeVoie'",
        "'personne.adresseEtablissementPrincipal.codePostal'",
        "'personne.adresseEtablissementPrincipal.numeroVoie'",
        "'personne.adresseEtablissementPrincipal.nomVoie'",
        "\"personne.adresseSiegeSocial.ville\"",
        "\"personne.adresseSiegeSocial.typeVoie\"",
        "\"personne.adresseSiegeSocial.nomVoie\"",
        "\"name_source\"",
        "\"city\"",
        "\"dep\"",
        "\"cp\"",
        "\"city\"",
        "f\"q=commercant={cmc} numerodepartement={dpt} ville={ville} cp={cp}&rows=1000&facet=registre\"",
        "\"records\"",
        "\"fields\"",
        "\"listepersonnes\"",
        "\"name_source\"",
        "'personne.typePersonne'",
        "\"personne.typePersonne\"",
        "\"pm\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"index\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "r\"\\s{1,}\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"dep\"",
        "\"cp\"",
        "f\"q=commercant={cmc} numerodepartement={dpt} cp={cp}&rows=1000&facet=registre\"",
        "\"records\"",
        "\"fields\"",
        "\"listepersonnes\"",
        "\"name_source\"",
        "'personne.typePersonne'",
        "\"personne.typePersonne\"",
        "\"pm\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"personne.denomination\"",
        "\"index\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "r\"\\s{1,}\"",
        "\"\"",
        "\"end query bodacc\"",
        "\"https://scanr-api.enseignementsup-recherche.gouv.fr/elasticsearch/structures/_search\"",
        "\"HEADERS_API_SCANR\"",
        "\"person_id\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"externalIds\"",
        "\"label_default\"",
        "\"label_fr\"",
        "\"address_scanr\"",
        "\"start query scranr structures\"",
        "\"address_source\"",
        "\"address_source\"",
        "\"\"",
        "\"query\"",
        "\"bool\"",
        "\"must\"",
        "\"query_string\"",
        "\"query\"",
        "\"default_field\"",
        "\"label.default\"",
        "\"query_string\"",
        "\"query\"",
        "\"default_field\"",
        "\"label.fr\"",
        "\"status\"",
        "\"hits\"",
        "\"hits\"",
        "\"person_id\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"externalIds\"",
        "\"hits\"",
        "\"hits\"",
        "\"_source\"",
        "\"externalIds\"",
        "\"label_default\"",
        "\"hits\"",
        "\"hits\"",
        "\"_source\"",
        "\"label\"",
        "\"default\"",
        "\"label_fr\"",
        "\"hits\"",
        "\"hits\"",
        "\"_source\"",
        "\"label\"",
        "\"fr\"",
        "\"address_scanr\"",
        "\"hits\"",
        "\"hits\"",
        "\"_source\"",
        "\"address\"",
        "\"end query scranr structures\"",
        "\"part_entp_final.csv\"",
        "\"|\"",
        "\"utf-8\"",
        "\"part_init_p05.csv\"",
        "\"|\"",
        "\"utf-8\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"applt_seq_nr\"",
        "\"country_corrected\"",
        "\"FR\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"siren\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"left\"",
        "\"applt_seq_nr\"",
        "\"name_source\"",
        "\"appln_auth\"",
        "\"EP\"",
        "\"appln_auth\"",
        "\"FR\"",
        "\"appln_auth\"",
        "\"EP\"",
        "\"appln_auth\"",
        "\"FR\"",
        "\"fullpath\"",
        "\"publication_number\"",
        "'gra'",
        "\"AWS_ACCESS_KEY_ID\"",
        "\"AWS_SECRET_ACCESS_KEY\"",
        "\"s3\"",
        "\"AWS_ACCESS_KEY_ID\"",
        "\"AWS_SECRET_ACCESS_KEY\"",
        "\"ENDPOINT_URL\"",
        "'list_objects'",
        "'Bucket'",
        "'inpi-xmls'",
        "'Prefix'",
        "f'{i}'",
        "\"Start paginator AWS S3\"",
        "\"Contents\"",
        "\"Key\"",
        "\"/\"",
        "\".xml\"",
        "\"\"",
        "\"Key\"",
        "\"fullpath\"",
        "\"publication_number\"",
        "\"End paginator AWS S3\"",
        "\"publication_number\"",
        "\"inner\"",
        "\"applt_seq_nr\"",
        "\"End paths inpi-xlms\"",
        "\"Start parsing files inpi-xmls\"",
        "\"inpi-xmls\"",
        "\"Body\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"applicants\"",
        "\"applicant\"",
        "\"fr-owners\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"parties\"",
        "\"fr-owners\"",
        "\"fr-owner\"",
        "\"fr-owners\"",
        "\"fr-patent-document\"",
        "\"fr-bibliographic-data\"",
        "\"fr-owners\"",
        "\"fr-owner\"",
        "\"type\"",
        "\"applicant\"",
        "\"type\"",
        "\"owner\"",
        "\"publication_number\"",
        "\"End parsing files inpi-xmls\"",
        "\"@app-type\"",
        "\"@designation\"",
        "\"addressbook.@lang\"",
        "\"@data-format\"",
        "'addressbook.last-name'",
        "'last-name'",
        "'addressbook.first-name'",
        "'first-name'",
        "'addressbook.middle-name'",
        "'middle-name'",
        "'addressbook.iid'",
        "'siren'",
        "'addressbook.address.address-1'",
        "'address-1'",
        "'addressbook.address.city'",
        "'city'",
        "'addressbook.address.postcode'",
        "'postcode'",
        "'addressbook.address.country'",
        "'country'",
        "'addressbook.orgname'",
        "'orgname'",
        "\"@sequence\"",
        "\"sequence\"",
        "\"last-name\"",
        "\"middle-name\"",
        "\"first-name\"",
        "\"orgname\"",
        "\"last-name\"",
        "\"middle-name\"",
        "\"first-name\"",
        "\"orgname\"",
        "\"\"",
        "\"name_multi\"",
        "\"first-name\"",
        "\" \"",
        "\"middle-name\"",
        "\" \"",
        "\"last-name\"",
        "\"name_multi\"",
        "\"name_multi\"",
        "\"orgname\"",
        "\"orgname\"",
        "\"orgname\"",
        "\"orgname\"",
        "r\"\\s{2,}\"",
        "\"\"",
        "\"name_complete\"",
        "\"orgname\"",
        "\"name_multi\"",
        "\"siren\"",
        "\"country\"",
        "\"FR\"",
        "\"siren\"",
        "\"address-1\"",
        "\"city\"",
        "\"postcode\"",
        "\"name_complete\"",
        "\"publication_number\"",
        "\"type\"",
        "\"sequence\"",
        "'person_id'",
        "'docdb_family_id'",
        "'inpadoc_family_id'",
        "'doc_std_name'",
        "'doc_std_name_id'",
        "'earliest_filing_date'",
        "'name_source'",
        "'address_source'",
        "'country_source'",
        "'publication_number'",
        "'appln_auth'",
        "'key_appln_nr_person'",
        "'applt_seq_nr'",
        "\"publication_number\"",
        "\"inner\"",
        "\"name_source2\"",
        "\"name_source\"",
        "''",
        "\"name_complete2\"",
        "\"name_complete\"",
        "''",
        "\"distance\"",
        "\"name_source2\"",
        "\"name_complete2\"",
        "\"type\"",
        "\"applicant\"",
        "\"test_seq\"",
        "\"sequence\"",
        "\"applt_seq_nr\"",
        "\"distance\"",
        "\"test_seq\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"name_source\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"sequence\"",
        "\"applt_seq_nr\"",
        "\"distance\"",
        "\"test_seq\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"distance\"",
        "\"publication_number\"",
        "\"distance\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"name_source\"",
        "\"id\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"id\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"distance\"",
        "\"publication_number\"",
        "\"distance\"",
        "\"distance\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"name_source\"",
        "\"id\"",
        "\"siren\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"left\"",
        "\"siren\"",
        "\"siren\"",
        "r\"\\s\"",
        "\"\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"len_siren\"",
        "\"len_siren\"",
        "\"siret\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"len_siren\"",
        "\"siren\"",
        "\"siret\"",
        "\"siren\"",
        "\"siren\"",
        "\"siret\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"siret\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"siret\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"siret\"",
        "\"siren\"",
        "\"Attention, différence entre les publications françaises avant et après !\"",
        "\"Pas différence entre les publications françaises avant et après\"",
        "'https://ops.epo.org/3.2/auth/accesstoken'",
        "\"KEY_OPS_OEB\"",
        "'grant_type'",
        "'client_credentials'",
        "'Authorization'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "f\"Bearer {response.get('access_token')}\"",
        "'access_token'",
        "\"Start requests Register EPO part 1\"",
        "\"publication_number\"",
        "\"sequence\"",
        "\"sequence\"",
        "\"publication_number\"",
        "\"index\"",
        "\"siren\"",
        "\"pub_ep\"",
        "\"EP\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"@change-gazette-num\"",
        "\"applt_seq_nr\"",
        "\"sequence\"",
        "\"inner\"",
        "\"@change-gazette-num\"",
        "\"N/P\"",
        "\"@change-gazette-num\"",
        "\"N/P\"",
        "\"applt_seq_nr\"",
        "\"sequence\"",
        "\"inner\"",
        "\"name_source\"",
        "\"applt_seq_nr\"",
        "\"pub_ep\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"name_source\"",
        "\"sequence\"",
        "\"name\"",
        "\"inner\"",
        "\"name_source\"",
        "\"applt_seq_nr\"",
        "\"pub_ep\"",
        "\"applt_seq_nr\"",
        "\"sequence\"",
        "\"inner\"",
        "\"@change-date2\"",
        "\"@change-date\"",
        "\"@change-date\"",
        "\"@change-date2\"",
        "\"@change-gazette-num\"",
        "\"@change-date2\"",
        "\"applt_seq_nr\"",
        "\"sequence\"",
        "\"inner\"",
        "\"@change-date2\"",
        "\"End requests Register EPO part 1\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"Start requests Register EPO part 2\"",
        "\"clef\"",
        "\"publication_number\"",
        "\"index\"",
        "\"siren\"",
        "\"@change-gazette-num\"",
        "\"N/P\"",
        "\"sequence\"",
        "\"sequence\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"pub_ep\"",
        "\"EP\"",
        "\"pub_ep\"",
        "\"applt_seq_nr\"",
        "\"clef\"",
        "\"sequence\"",
        "\"inner\"",
        "\"clef\"",
        "\"End requests Register EPO part 2\"",
        "\"address_2\"",
        "\"address\"",
        "\",\"",
        "\"\"",
        "\"address_2\"",
        "\"address_2\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"address-\"",
        "\"_2\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"address-\"",
        "\"_2\"",
        "\"cp\"",
        "\"\"",
        "\"mtch\"",
        "\"cp\"",
        "\"\"",
        "r\"[C|c]edex\"",
        "\"cp\"",
        "\"\"",
        "\"mtch\"",
        "\"cp\"",
        "\"\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "r\"\\d{5}\"",
        "\"\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"mtch\"",
        "\"Start requests API adresse.gouv.fr EP\"",
        "\"address\"",
        "\"address\"",
        "\"left\"",
        "\"End requests API adresse.gouv.fr EP\"",
        "\"Start requests API BODACC EP\"",
        "\"End requests API BODACC EP\"",
        "\"name_source\"",
        "\"left\"",
        "\"housenumber2\"",
        "\"\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"housenumber\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"nbr_et\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"no_et\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"len_nr\"",
        "\"housenumber2\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"housenumber2\"",
        "\"person_id\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_et\"",
        "\"no_et\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep2\"",
        "\"ep\"",
        "\"ep2\"",
        "\"ep\"",
        "\"address-\"",
        "\"_2\"",
        "\"address_2\"",
        "\"name2\"",
        "\"name_source\"",
        "\"distance\"",
        "\"name2\"",
        "\"personne.denomination\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"distance\"",
        "\"distance\"",
        "\"distance\"",
        "\"name2\"",
        "\"person_id\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"siren\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"siren\"",
        "\"id\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"siren\"",
        "\"compte\"",
        "\"id\"",
        "\"left\"",
        "\"id\"",
        "\"siren\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"right\"",
        "\"compte\"",
        "\"siren\"",
        "\"compte\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"address_source\"",
        "\"address_source\"",
        "\"address\"",
        "\"siren\"",
        "\"address\"",
        "\"_2\"",
        "\"address\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"Start requests API adresse.gouv.fr NEPFR\"",
        "\"address\"",
        "\"End requests API adresse.gouv.fr NEPFR\"",
        "\"address\"",
        "\"left\"",
        "\"address_2\"",
        "\"address\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"address-\"",
        "\"_2\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"address-\"",
        "\"_2\"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"housenumber\"",
        "\"Start requests API BODACC NEPFR\"",
        "\"End requests API BODACC NEPFR\"",
        "\"name_source\"",
        "\"left\"",
        "\"housenumber2\"",
        "\"\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"housenumber\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"nbr_et\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"no_et\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"len_nr\"",
        "\"housenumber2\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"housenumber2\"",
        "\"person_id\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_et\"",
        "\"no_et\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep2\"",
        "\"ep\"",
        "\"ep2\"",
        "\"ep\"",
        "\"name2\"",
        "\"name_source\"",
        "\"distance\"",
        "\"name2\"",
        "\"personne.denomination\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"distance\"",
        "\"distance\"",
        "\"distance\"",
        "\"name2\"",
        "\"person_id\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"siren\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"siren\"",
        "\"id\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"siren\"",
        "\"compte\"",
        "\"id\"",
        "\"left\"",
        "\"id\"",
        "\"siren\"",
        "\"person_id\"",
        "\"docdb_family_id\"",
        "\"inpadoc_family_id\"",
        "\"name_source\"",
        "\"publication_number\"",
        "\"key_appln_nr_person\"",
        "\"applt_seq_nr\"",
        "\"right\"",
        "\"compte\"",
        "\"siren\"",
        "\"compte\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"appln_auth\"",
        "\"FR\"",
        "\"publication-number\"",
        "\"publication_number_fr\"",
        "\"publication_number\"",
        "\"pn\"",
        "\"EP\"",
        "\"\"",
        "\"kind\"",
        "\"date\"",
        "\"publication_number\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"distance\"",
        "\"distance\"",
        "\"appln_auth_y\"",
        "\"appln_auth_x\"",
        "\"appln_auth\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"publication_number\"",
        "\"pn\"",
        "\"EP\"",
        "\"\"",
        "\"appln_auth\"",
        "\"EP\"",
        "\"publication_number\"",
        "\"publication-number\"",
        "\"publication_number_ep\"",
        "\"publication_number\"",
        "\"inner\"",
        "\"appln_auth_y\"",
        "\"appln_auth_x\"",
        "\"appln_auth\"",
        "'https://ops.epo.org/3.2/auth/accesstoken'",
        "\"KEY_OPS_OEB\"",
        "'grant_type'",
        "'client_credentials'",
        "'Authorization'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "f\"Bearer {response.get('access_token')}\"",
        "'access_token'",
        "\"pub_ep\"",
        "\"publication_number_ep\"",
        "\"EP\"",
        "\"publication_number_ep\"",
        "\"sequence\"",
        "\"sequence\"",
        "\"pub_ep\"",
        "\"EP\"",
        "\"country\"",
        "\"FR\"",
        "\"publication_number_ep\"",
        "\"pub_ep\"",
        "\"left\"",
        "\"name_source2\"",
        "\"name_source\"",
        "\"name2\"",
        "\"name\"",
        "\"distance\"",
        "\"name_source2\"",
        "\"name2\"",
        "\"distance\"",
        "\"distance\"",
        "\"distance\"",
        "\"name2\"",
        "\"name_source2\"",
        "\"siren\"",
        "\"Start requests API adresse.gouv.fr OEB\"",
        "\"address\"",
        "\"address\"",
        "\"left\"",
        "\"End requests API adresse.gouv.fr OEB\"",
        "\"address\"",
        "\"_2\"",
        "\"address\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"name_source\"",
        "\"left\"",
        "\"housenumber2\"",
        "\"\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"housenumber\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"nbr_et\"",
        "\"housenumber2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"numeroVoie2\"",
        "\"no_et\"",
        "\"numeroVoie2\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"housenumber2\"",
        "\"len_nr\"",
        "\"housenumber2\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"personne.adresseSiegeSocial.numeroVoie\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"numeroVoie2\"",
        "\"housenumber2\"",
        "\"person_id\"",
        "\"housenumber2\"",
        "\"numeroVoie2\"",
        "\"nbr_min\"",
        "\"nbr_max\"",
        "\"no_min\"",
        "\"no_max\"",
        "\"nbr_et\"",
        "\"no_et\"",
        "\"len_nr\"",
        "\"len_no\"",
        "\"ep2\"",
        "\"ep\"",
        "\"ep2\"",
        "\"ep\"",
        "\"name2\"",
        "\"name_source\"",
        "\"distance\"",
        "\"name2\"",
        "\"personne.denomination\"",
        "\"distance\"",
        "\"distance\"",
        "\"distance\"",
        "\"name2\"",
        "\"person_id\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"siren\"",
        "\"applt_seq_nr\"",
        "\"applt_seq_nr\"",
        "\"address_2\"",
        "\"key_appln_nr_person\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"siren\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"siren\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"siren\"",
        "\"compte\"",
        "\"id\"",
        "\"compte\"",
        "\"id\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"inner\"",
        "\"id\"",
        "\"siren\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"address_source\"",
        "\"address\"",
        "\"siren\"",
        "\"address\"",
        "\"_2\"",
        "\"address\"",
        "\"\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"dep\"",
        "\"cp\"",
        "\"Start requests API BODACC reste2\"",
        "\"End requests API BODACC reste2\"",
        "\"personne.numeroImmatriculation.numeroIdentification\"",
        "\"siren\"",
        "\"siren\"",
        "\"personne.denomination\"",
        "\"name_source\"",
        "\"inner\"",
        "\"name2\"",
        "\"name_source\"",
        "\"distance\"",
        "\"name2\"",
        "\"personne.denomination\"",
        "\"distance\"",
        "'address_2'",
        "'personne.adresseSiegeSocial.codePostal'",
        "'personne.adresseSiegeSocial.numeroVoie'",
        "'personne.adresseEtablissementPrincipal.complGeographique'",
        "'personne.adresseSiegeSocial.localite'",
        "'personne.adresseEtablissementPrincipal.localite'",
        "'personne.nonInscrit'",
        "'personne.enseigne'",
        "'personne.inscriptionRM.numeroDepartement'",
        "'personne.inscriptionRM.codeRM'",
        "'personne.inscriptionRM.numeroIdentificationRM'",
        "'personne'",
        "'personne.adresseSiegeSocial.BP'",
        "'personne.nomUsage'",
        "'personne.adressePP.complGeographique'",
        "'personne.adressePP.localite'",
        "'personne.adressePP.BP'",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"siren\"",
        "\"address\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"id\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source3\"",
        "\"name_source\"",
        "\"ascii\"",
        "\"ignore\"",
        "\"country_corrected\"",
        "\"FR\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"siren\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"siren_psn\"",
        "\"siren\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"siren\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"siren\"",
        "\"compte\"",
        "\"id\"",
        "\"compte\"",
        "\"id\"",
        "\"siren\"",
        "\"siren\"",
        "\"siren\"",
        "\"id\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"name_source\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"id\"",
        "\"siren\"",
        "\"id\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"name_source3\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"siren\"",
        "\"name_source\"",
        "\"siren\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"key_appln_nr_person\"",
        "\"address_source\"",
        "\"name_source\"",
        "\"siren\"",
        "\"name_source\"",
        "\"inner\"",
        "\"name_source3\"",
        "\"\"",
        "\"name_propre\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"name_propre\"",
        "\"ï¿½\"",
        "\"\"",
        "\"name_propre\"",
        "\"name_propre\"",
        "\"\"",
        "\"latin-1\"",
        "\"name_propre\"",
        "\"name_propre\"",
        "\"futures_stru.csv\"",
        "\"|\"",
        "\"utf-8\"",
        "\"name_propre2\"",
        "\"name_propre\"",
        "\"label_default2\"",
        "\"label_default\"",
        "\"distance\"",
        "\"name_propre2\"",
        "\"label_default2\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"distance\"",
        "\"key_appln_nr_person\"",
        "\"distance\"",
        "\"key_appln_nr_person\"",
        "\"sirene\"",
        "\"grid\"",
        "\"idref\"",
        "\"siret\"",
        "\"key_appln_nr_person\"",
        "\"id\"",
        "\"type\"",
        "\"type\"",
        "\"sirene\"",
        "\"grid\"",
        "\"idref\"",
        "\"siret\"",
        "\"sirene\"",
        "\"grid\"",
        "\"idref\"",
        "\"siret\"",
        "\"type\"",
        "\"type\"",
        "\"type\"",
        "\"id\"",
        "\"\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"address\"",
        "\"postcode\"",
        "\"city\"",
        "\"externalIds\"",
        "\"address_scanr\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"distance\"",
        "\"address\"",
        "\"postcode\"",
        "\"city\"",
        "\"siren\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"key_appln_nr_person\"",
        "\"sirene\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"sirene\"",
        "\"siren\"",
        "\"name_source3\"",
        "\"person_id\"",
        "\"distance\"",
        "\"address_scanr\"",
        "\"address\"",
        "\" \"",
        "\"postcode\"",
        "\" \"",
        "\"city\"",
        "\"address_2\"",
        "\"address_source\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\"cp\"",
        "\"address_2\"",
        "r\"\\d{5}\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"cp\"",
        "\"\"",
        "\"\"",
        "\"cp\"",
        "\"\"",
        "\"cp\"",
        "\"postcode\"",
        "\"siren\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"key_appln_nr_person\"",
        "\"sirene\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"key_appln_nr_person\"",
        "\"inner\"",
        "\"sirene\"",
        "\"siren\"",
        "\"person_id\"",
        "\"name_propre\"",
        "\"name_source3\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"sirene\"",
        "\"grid\"",
        "\"idref\"",
        "\"siret\"",
        "\"siren\"",
        "\"grid\"",
        "\"idref\"",
        "\"siret\"",
        "\"name_source\"",
        "\"inner\"",
        "\"sirene\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"https://api.insee.fr/token\"",
        "\"grant_type=client_credentials\"",
        "\"SIRENE_API_KEY\"",
        "\"SIRENE_API_SECRET\"",
        "'access_token'",
        "'Authorization'",
        "'Bearer '",
        "f'https://api.insee.fr/entreprises/sirene/V3/siret?q=denominationUniteLegale:\"{r.name_propre}\"'",
        "\"etablissements\"",
        "\"siren\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"siren\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"siren\"",
        "\"compte\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"left\"",
        "\"compte\"",
        "\"siren\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"uniteLegale.denominationUniteLegale\"",
        "\"name_insee\"",
        "\"name_insee\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"name_insee\"",
        "\"compte\"",
        "\"name_source\"",
        "\"left\"",
        "\"name_source2\"",
        "\"name_source\"",
        "r\"\\s|-|'\"",
        "\"\"",
        "\"name_insee2\"",
        "\"name_insee\"",
        "r\"\\s|-|'\"",
        "\"\"",
        "\"distance\"",
        "\"name_source2\"",
        "\"name_insee2\"",
        "\"distance\"",
        "\"name_source\"",
        "\"siren\"",
        "\"name_source\"",
        "\"siren\"",
        "\"compte\"",
        "\"name_source\"",
        "\"compte\"",
        "\"name_source\"",
        "\"siren\"",
        "\"compte\"",
        "\"name_source2\"",
        "\"name_insee2\"",
        "\"distance\"",
        "\"name_insee\"",
        "\"name_source\"",
        "\"name_propre\"",
        "\"address_source\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"person_id\"",
        "\"key_appln_nr_person\"",
        "\"key_appln_nr_person\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"name_source\"",
        "\"siren\"",
        "\"siren\"",
        "\"name_source\"",
        "\"inner\"",
        "\"person_id\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"compte\"",
        "\"key_appln_nr_person\"",
        "\"name_source3\"",
        "\"name_propre\"",
        "\"applt_seq_nr\"",
        "\"key_appln_nr_person\"",
        "\"siren\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"siren\"",
        "\"siren2\"",
        "\"siret\"",
        "\"siret2\"",
        "\"grid\"",
        "\"grid2\"",
        "\"idref\"",
        "\"idref2\"",
        "\"key_appln_nr_person\"",
        "\"left\"",
        "\"siren\"",
        "\"siret\"",
        "\"grid\"",
        "\"idref\"",
        "\"2\"",
        "\"siren2\"",
        "\"siret2\"",
        "\"grid2\"",
        "\"idref2\"",
        "\"part_entp_final2.csv\"",
        "\"|\"",
        "\"utf-8\""
    ],
    "variables": [
        "DATA_PATH",
        "URL",
        "loggers",
        "logger",
        "fmt",
        "formatter",
        "ch",
        "loggers",
        "name",
        "res",
        "future_to_req",
        "req",
        "data",
        "jointure",
        "prct10",
        "dict_nb",
        "deb",
        "fin",
        "dict_nb",
        "deb",
        "dixieme",
        "reste",
        "fin_reste",
        "fin",
        "dict_nb",
        "dict_nb",
        "deb",
        "res",
        "status",
        "data",
        "djson",
        "djson2",
        "djson2",
        "jsn",
        "res_part1",
        "df1",
        "df1",
        "df1",
        "col_address",
        "df1",
        "df1",
        "df1",
        "name",
        "df1",
        "df1",
        "df1",
        "df1",
        "df1",
        "col_address",
        "df1",
        "df1",
        "df1",
        "name",
        "df1",
        "df1",
        "set_liste",
        "set_liste",
        "df1",
        "df1",
        "df1",
        "col_address",
        "df1",
        "df1",
        "df1",
        "name",
        "df1",
        "df1",
        "liste_part",
        "tmp",
        "tmp",
        "tmp",
        "col_address",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "col_address",
        "tmp",
        "tmp",
        "tmp",
        "name",
        "df1",
        "tmp",
        "df1",
        "df1",
        "df1",
        "df1",
        "col_address",
        "df1",
        "df1",
        "df1",
        "name",
        "df1",
        "df1",
        "token_url",
        "key",
        "data",
        "headers",
        "r",
        "rs",
        "response",
        "tken",
        "ret1",
        "status",
        "res_part1",
        "d_app",
        "a",
        "a2",
        "li",
        "sep",
        "sep",
        "sep",
        "a2",
        "a2",
        "a2",
        "a2",
        "a2",
        "a2",
        "type_insee",
        "liste_address",
        "res",
        "r",
        "df",
        "df",
        "smax",
        "df",
        "df",
        "renomme",
        "liste_cols",
        "nom",
        "renomme",
        "col",
        "renomme",
        "col",
        "renomme",
        "col",
        "agarder",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df_ad",
        "session",
        "conn",
        "logger",
        "liste",
        "data",
        "djson",
        "djson2",
        "clef_biblio",
        "clef_parties",
        "djson_app",
        "djson_own",
        "djson_own",
        "df_app",
        "df_own",
        "df",
        "df",
        "df",
        "df_inpi",
        "df_inpi",
        "pths_aws",
        "df_path_fr",
        "df_path_fr",
        "df_path_fr",
        "subpath_fr",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi2",
        "df_inpi3",
        "df_inpi3",
        "df_inpi3",
        "df_inpi3",
        "liste_inpi",
        "minimum",
        "tmp_inpi",
        "df_inpi4",
        "df_inpi4",
        "df_inpi4_0",
        "df_inpi4_sup",
        "df_inpi4_sup",
        "df_inpi4_sup",
        "df_inpi4_sup",
        "df_inpi4_sup",
        "df_inpi4_sup",
        "df_address_inpi",
        "df_inpi4_sup_address",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check",
        "df_inpi4_sup_address_check_true",
        "cols",
        "df_inpi4_sup_address_check_true",
        "df_inpi4_k",
        "dict3",
        "pub",
        "dict3",
        "pb",
        "dict4",
        "liste_famille",
        "token",
        "fam",
        "data",
        "djson",
        "djson2",
        "djson3",
        "liste",
        "tmp",
        "tmp",
        "df",
        "df2",
        "df2",
        "df2",
        "df2",
        "dict4",
        "pb",
        "df_fam",
        "df_fam",
        "logger",
        "col_drop",
        "lste_bodacc",
        "cmc",
        "dpt",
        "cp",
        "ville",
        "requete",
        "url",
        "response",
        "data",
        "rec",
        "fields",
        "personnes",
        "df",
        "df",
        "liste_col",
        "df",
        "df",
        "df",
        "df",
        "dpt",
        "cp",
        "requete",
        "url",
        "response",
        "data",
        "rec",
        "fields",
        "personnes",
        "df",
        "df",
        "liste_col",
        "df",
        "df",
        "df",
        "df",
        "df_bo",
        "df_bo",
        "url_structures",
        "headers",
        "dict_res",
        "logger",
        "df_stru_fuz",
        "query1",
        "res1",
        "df",
        "part_entp_final",
        "p05",
        "p05",
        "noms",
        "noms",
        "noms",
        "noms",
        "noms",
        "noms",
        "notepfr",
        "ep",
        "fr",
        "dirfile",
        "session",
        "conn",
        "paginator",
        "operation_parameters",
        "page_iterator",
        "file",
        "nf",
        "flpath",
        "paths_aws",
        "df_path_fr",
        "df_path_fr",
        "df_path_fr",
        "liste",
        "data",
        "djson",
        "djson2",
        "clef_biblio",
        "clef_parties",
        "djson_app",
        "djson_own",
        "djson_own",
        "df_app",
        "df_app",
        "df_own",
        "df_own",
        "df",
        "df",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi",
        "df_inpi2",
        "df_inpi3",
        "df_inpi3",
        "df_inpi3",
        "df_inpi3",
        "df_app_inpi",
        "df_app_inpi",
        "df_app_inpi",
        "df_app_inpi",
        "compte_app_inpi",
        "df_app_inpi_ok",
        "df_app_inpi_multi",
        "df_app_inpi_multi",
        "df_app_inpi_multi_ok",
        "fnok",
        "liste_fnok",
        "minimum",
        "tmp_inpi_fnok",
        "fnok2",
        "fnok2",
        "inpi_ok1",
        "inpi_ok1",
        "df_inpi3_reste",
        "df_inpi3_reste",
        "df_inpi3_reste",
        "liste_inpi",
        "minimum",
        "tmp_inpi",
        "df_inpi4",
        "df_inpi4_0",
        "inpi_ok2",
        "inpi_ok2",
        "fr2",
        "fr2",
        "fr2",
        "fr2",
        "fr2",
        "unique_siren",
        "multi",
        "unique_siret",
        "multi_siret",
        "trop_siret",
        "sir",
        "fr2",
        "reste_fr",
        "token_url",
        "key",
        "data",
        "headers",
        "r",
        "rs",
        "response",
        "token",
        "liste_appln",
        "liste_publn",
        "dpn",
        "dpn",
        "dd",
        "dd",
        "dd",
        "dpn3",
        "dpn2",
        "dpn3",
        "d1",
        "d1",
        "dpn2",
        "dpn2",
        "dpn3",
        "dpn2",
        "mdate",
        "dpn2",
        "dpn3",
        "dpn3",
        "appln",
        "publn",
        "diff",
        "dpn",
        "dpn",
        "dd",
        "dpn2",
        "dpn2",
        "dd",
        "dd",
        "dd2",
        "publn",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "col_address",
        "col_address2",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "df_ad_publn",
        "publn_bodacc",
        "sub_publn_bodacc",
        "df_bodacc",
        "publn_bodacc",
        "chaine",
        "ch",
        "i",
        "mini",
        "maxi",
        "i",
        "i",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "chaine2",
        "ch2",
        "i",
        "mini2",
        "maxi2",
        "i",
        "i",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "publn_bodacc",
        "liste_publn_bodacc",
        "df",
        "dmin",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "publn_bodacc2",
        "cmpte",
        "cmpte",
        "cmpte",
        "cmpte_cmp",
        "cmpte",
        "cmpte",
        "publn_bodacc3",
        "publn_bodacc3",
        "publn_bodacc3",
        "publn_bodacc3",
        "reste_ep",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "df_ad_nepfr",
        "nepfr_address",
        "col_address",
        "col_address2",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "sub_nepfr_address",
        "df_bodacc",
        "nepfr_address",
        "chaine",
        "ch",
        "i",
        "mini",
        "maxi",
        "i",
        "i",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "chaine2",
        "ch2",
        "i",
        "mini2",
        "maxi2",
        "i",
        "i",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "nepfr_address",
        "liste_publn_nepfr",
        "df",
        "dmin",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "nepfr_address2",
        "cmpte",
        "cmpte",
        "cmpte",
        "cmpte_cmp",
        "cmpte",
        "cmpte",
        "nepfr_address3",
        "nepfr_address3",
        "nepfr_address3",
        "com_cols",
        "nepfr_address3",
        "reste_notepfr",
        "reste_notepfr",
        "df_famille",
        "df_famille_fr",
        "df_famille_fr2",
        "df_famille_fr2",
        "df_famille_fr2",
        "df_famille_fr2",
        "df_famille_fr_ok",
        "liste_df_famille_fr_ok",
        "df",
        "dmin",
        "df",
        "df_famille_fr_ok2",
        "df_famille_fr_ok2",
        "com_col",
        "df_famille_fr_ok2",
        "reste_ep_fr",
        "notpn",
        "df_famille_ep",
        "df_famille_ep",
        "df_famille_ep",
        "df_famille_ep2",
        "df_famille_ep2",
        "df_famille_ep2",
        "token_url",
        "key",
        "data",
        "headers",
        "r",
        "rs",
        "response",
        "token",
        "liste_oeb",
        "df_famille_ep2",
        "token",
        "dpn",
        "dpn",
        "dpn",
        "dpn",
        "dpn2",
        "dpn2",
        "dpn2",
        "dpn2",
        "dmin",
        "dpn2",
        "dpn2",
        "df_oeb",
        "df_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "sub_address_oeb",
        "df_oeb_bodacc",
        "df_address_oeb",
        "chaine",
        "ch",
        "i",
        "mini",
        "maxi",
        "i",
        "i",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "chaine2",
        "ch2",
        "i",
        "mini2",
        "maxi2",
        "i",
        "i",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "dmin",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb",
        "df_address_oeb2",
        "nepfr_address3",
        "ok",
        "ok",
        "ok",
        "reste",
        "reste_name_ad",
        "reste_name_ad",
        "ok_ex",
        "ok_ex",
        "compte_ok_ex",
        "ok_ex",
        "ok_ex",
        "reste_ok",
        "reste_ok2",
        "reste_ok2",
        "reste_ok2",
        "ok",
        "ok",
        "reste2",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "sub_reste2_address",
        "df_bodacc_reste2",
        "df_bodacc_reste2",
        "df_bodacc_reste2",
        "df_bodacc_reste2",
        "reste2_address",
        "reste2_address",
        "reste2_address",
        "reste2_address_ok",
        "compte_reste2",
        "reste2_address_ok",
        "reste2_address_ok",
        "reste2_address_ok",
        "ok",
        "ok_compte",
        "ok",
        "reste2_reste",
        "ok_test",
        "ok_test",
        "reste2_reste_test",
        "reste2_reste_test",
        "test",
        "reste2_reste_ok",
        "reste2_reste_ok",
        "reste2_reste_ok",
        "ok",
        "ok_compte2",
        "ok",
        "reste3",
        "reste3",
        "noms_siren",
        "noms_siren",
        "noms_siren",
        "noms_siren2",
        "noms_siren2",
        "compte_siren2",
        "noms_siren2",
        "reste3_2",
        "reste3_2",
        "reste3_2",
        "reste3_2",
        "reste3_reste_ok",
        "reste3_reste_ok",
        "reste3_reste_ok",
        "reste3_reste_ok",
        "ok",
        "compte_ok",
        "ok",
        "reste4",
        "noms_siren3",
        "compte_siren3",
        "compte_siren3",
        "noms_siren3",
        "reste4_ok",
        "ok",
        "reste5",
        "reste5",
        "reste5",
        "reste5",
        "dico_l",
        "chaine",
        "cod",
        "dico_l",
        "chaine",
        "sub_structure",
        "futures_stru",
        "futures_stru",
        "futures_stru",
        "futures_stru",
        "liste_scanr",
        "liste_scanr_ad",
        "minimum",
        "tmp_scanr",
        "df_scanr",
        "dict_ids",
        "ids",
        "liste_keys",
        "lab_id",
        "lab_id2",
        "lab_id2",
        "item",
        "keys",
        "not_keys",
        "typ",
        "id",
        "ad",
        "tmp",
        "tmp",
        "df_ids",
        "df_ids",
        "df_scanr_ad",
        "df_scanr_ad",
        "df_scanr_ad",
        "df_scanr2",
        "df_scanr2",
        "df_scanr2_ad",
        "df_scanr2_ad",
        "liste",
        "df",
        "df_scanr_0",
        "df_scanr_0",
        "reste5_ok",
        "reste5_ok",
        "ok",
        "ok",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "df_scanr_sup",
        "cp",
        "cp",
        "reste5_cp_ok",
        "ok",
        "ok",
        "ok",
        "reste6",
        "ok5",
        "autres_noms_j",
        "autres_noms_j",
        "reste6_ok",
        "reste6_ok",
        "ok",
        "reste7",
        "name_address",
        "res",
        "liste_etab",
        "token",
        "api_call_headers",
        "url",
        "rinit",
        "rep",
        "rep",
        "rep",
        "rep",
        "rep",
        "etab",
        "compte_etab",
        "compte_etab",
        "etab",
        "etab_single",
        "etab_single_c",
        "etab_single",
        "etab_single",
        "etab_single",
        "etab_single",
        "etab_single_0",
        "etab_single_0_c",
        "etab_single_0",
        "reste7_ok",
        "compte",
        "reste7_ok",
        "ok",
        "ok",
        "reste8",
        "autres_noms_j",
        "autres_noms_j",
        "reste8_ok",
        "ok",
        "ok",
        "compte",
        "ok",
        "ok",
        "ok_merge",
        "ok_merge",
        "part_entp_final2",
        "col2",
        "col",
        "part_entp_final2"
    ],
    "comments": [
        "!/usr/bin/env python",
        "coding: utf-8",
        "directory where the files are",
        "Start the load operations and mark each future with its URL",
        "tmp = tmp.drop(",
        "columns=col_address)",
        "prod scanr",
        "Load files",
        "",
        "subset patents not published by neither EPO nor INPI",
        "subset patents published by EPO",
        "subset patents published by INPI",
        "",
        "Patents published by INPI",
        "print(\"Start paths inpi-xlms\", flush=True)",
        "",
        "Patents published by EPO",
        "",
        "Patents published neither by EPO nor INPI",
        "",
        "Patents EP not already found",
        "récupère numéros de publication de la famille pour retrouver adresse/siren",
        "Publications françaises dans les familles",
        "Publications EP dans les familles",
        "",
        "concatenate all the df with SIREN we already have",
        "cases where key_appln_nr_person appears twice (2 and because 2 different applt_seq_nr)",
        "check which SIREN are still missing",
        "find SIREN based on what the name_source and address_source with associated SIREN we already have",
        "when single SIREN associated with a pair of name_source and address_source",
        "new df with correct SIREN",
        "check which SIREN are still missing",
        "",
        "ScanR",
        "",
        "INSEE"
    ],
    "docstrings": [
        "\"\"\"\n    This function helps to follow the execution of the parallel computation.\n    \"\"\"",
        "\"\"\"\n    This function applies the query function on each subset of the original df in a parallel way\n    It takes a dictionary with 10-11 pairs key-value. Each key is the df subset name and each value is the df subset\n    It returns a df with the IdRef.\n    \"\"\"",
        "\"\"\"\n    This function divides the initial df into subsets which represent ca. 10 % of the original df.\n    The subsets are put into a dictionary with 10-11 pairs key-value.\n    Each key is the df subset name and each value is the df subset.\n    \"\"\"",
        "\"\"\"\n    fonction pour faire les requêtes GET sur l'API Patstat\n    function that produces a GET request and check if it's successful\n    url: string\n    tkn: token, get it with authentication function\n    strm: boolean, stream data from the API or not\n    \"\"\""
    ],
    "functions": [
        "get_logger",
        "res_futures",
        "subset_df",
        "get_url",
        "xml_json",
        "r_dict",
        "df_applicant",
        "get_token_oeb",
        "get_part",
        "split_hs",
        "address_api",
        "req_xml_aws",
        "siren_inpi_famille",
        "fam_oeb",
        "bodacc",
        "req_scanr_stru",
        "siren_oeb_bodacc"
    ],
    "classes": []
}