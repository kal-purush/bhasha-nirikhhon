{
    "identifiers": [
        "logging",
        "math",
        "random",
        "time",
        "requests",
        "os",
        "path",
        "join",
        "typing",
        "Optional",
        "Tuple",
        "http",
        "HTTPStatus",
        "devcycle_python_sdk",
        "dvc_options",
        "DevCycleLocalOptions",
        "devcycle_python_sdk",
        "exceptions",
        "APIClientError",
        "NotFoundError",
        "APIClientUnauthorizedError",
        "logging",
        "getLogger",
        "sdk_key",
        "options",
        "DevCycleLocalOptions",
        "sdk_key",
        "options",
        "requests",
        "Session",
        "session",
        "session",
        "join",
        "options",
        "config_CDN_URI",
        "sdk_key",
        "config_etag",
        "Optional",
        "Tuple",
        "Optional",
        "Optional",
        "max_config_retries",
        "options",
        "config_request_timeout_ms",
        "_config_file_url",
        "config_etag",
        "config_etag",
        "retries_remaining",
        "Optional",
        "requests",
        "Response",
        "session",
        "request",
        "url",
        "timeout",
        "timeout",
        "headers",
        "headers",
        "res",
        "status_code",
        "HTTPStatus",
        "UNAUTHORIZED",
        "res",
        "status_code",
        "HTTPStatus",
        "FORBIDDEN",
        "APIClientUnauthorizedError",
        "res",
        "status_code",
        "HTTPStatus",
        "NOT_MODIFIED",
        "config_etag",
        "res",
        "status_code",
        "HTTPStatus",
        "NOT_FOUND",
        "NotFoundError",
        "url",
        "HTTPStatus",
        "BAD_REQUEST",
        "res",
        "status_code",
        "HTTPStatus",
        "INTERNAL_SERVER_ERROR",
        "APIClientError",
        "res",
        "status_code",
        "res",
        "status_code",
        "HTTPStatus",
        "INTERNAL_SERVER_ERROR",
        "APIClientError",
        "res",
        "status_code",
        "requests",
        "exceptions",
        "RequestException",
        "e",
        "e",
        "request_error",
        "logger",
        "warning",
        "attempts",
        "request_error",
        "retries_remaining",
        "retries_remaining",
        "exponential_backoff",
        "attempts",
        "options",
        "config_retry_delay_ms",
        "time",
        "sleep",
        "retry_delay",
        "attempts",
        "APIClientError",
        "message",
        "cause",
        "request_error",
        "res",
        "headers",
        "get",
        "res",
        "json",
        "data",
        "new_etag",
        "attempt",
        "base_delay",
        "math",
        "pow",
        "attempt",
        "base_delay",
        "delay",
        "random",
        "random",
        "delay",
        "random_sum"
    ],
    "literals": [
        "\"Content-Type\"",
        "\"application/json\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"v1\"",
        "\"server\"",
        "\".json\"",
        "\"If-None-Match\"",
        "\"GET\"",
        "\"Invalid SDK Key\"",
        "f\"Bad request: HTTP {res.status_code}\"",
        "f\"Server error: HTTP {res.status_code}\"",
        "f\"DevCycle cloud bucketing request failed (attempt {attempts}): {request_error}\"",
        "\"Retries exceeded\"",
        "\"ETag\""
    ],
    "variables": [
        "logger",
        "sdk_key",
        "options",
        "session",
        "headers",
        "max_redirects",
        "max_config_retries",
        "retries_remaining",
        "timeout",
        "url",
        "headers",
        "headers",
        "attempts",
        "request_error",
        "res",
        "request_error",
        "request_error",
        "retry_delay",
        "new_etag",
        "data",
        "delay",
        "random_sum"
    ],
    "comments": [
        "Not a retryable error",
        "the config hasn't changed since the last request",
        "don't return anything",
        "Not a retryable error",
        "Not a retryable error",
        "Retryable error"
    ],
    "docstrings": [
        "\"\"\"\n        Get the config from the server. If the config_etag is provided, the server will only return the config if it\n        has changed since the last request. If the config hasn't changed, the server will return a 304 Not Modified\n        response.\n\n        :param config_etag: The etag of the last config request\n\n        :return: A tuple containing the config and the etag of the config. If the config hasn't changed since the last\n        request, the config will be None and the etag will be the same as the last request.\n        \"\"\"",
        "\"\"\"\n    Exponential backoff starting with 200ms +- 0...40ms jitter\n    \"\"\""
    ],
    "functions": [
        "_config_file_url",
        "get_config",
        "exponential_backoff"
    ],
    "classes": [
        "ConfigAPIClient"
    ]
}