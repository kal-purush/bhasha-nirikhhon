{
    "identifiers": [
        "unittest",
        "solution",
        "Solution",
        "unittest",
        "TestCase",
        "Solution",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "assertEqual",
        "solution",
        "longest_palindrome",
        "s",
        "expected_output",
        "unittest",
        "main"
    ],
    "literals": [
        "\"babad\"",
        "\"bab\"",
        "\"abcde\"",
        "\"a\"",
        "\"\"",
        "\"\"",
        "\"a\"",
        "\"a\"",
        "\"abb\"",
        "\"bb\"",
        "\"aba\"",
        "\"aba\"",
        "\"abccba\"",
        "\"abccba\"",
        "\"abcdcba\"",
        "\"abcdcba\"",
        "\"a\"",
        "\"a\"",
        "\"你好世界\"",
        "\"你好\"",
        "'__main__'"
    ],
    "variables": [
        "solution",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output",
        "s",
        "expected_output"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setUp",
        "test_positive_case",
        "test_negative_case",
        "test_empty_string",
        "test_single_char_string",
        "test_even_length_palindrome",
        "test_odd_length_palindrome",
        "test_palindrome_at_beginning",
        "test_palindrome_at_end",
        "test_long_string",
        "test_non_ascii_chars"
    ],
    "classes": [
        "TestLongestPalindrome"
    ]
}