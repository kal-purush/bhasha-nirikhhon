{
    "identifiers": [
        "React",
        "useState",
        "useCallback",
        "useRef",
        "Popup",
        "produce",
        "gif",
        "useState",
        "useState",
        "useState",
        "useState",
        "useState",
        "useState",
        "useState",
        "useState",
        "handleChange",
        "e",
        "e",
        "setRowCols",
        "rowCols",
        "e",
        "e",
        "setColumnHeight",
        "num",
        "rowNum",
        "btnClick",
        "e",
        "i",
        "num",
        "i",
        "newArray",
        "empty",
        "setRowWidth",
        "newArray",
        "rowNum",
        "btnClick",
        "setRowWidth",
        "arr",
        "num",
        "btnClick",
        "e",
        "btnClick",
        "index",
        "gridstate",
        "i",
        "num",
        "i",
        "arr",
        "index",
        "initialState",
        "index",
        "setgridState",
        "arr",
        "btnClick",
        "index",
        "gridstate",
        "i",
        "num",
        "i",
        "oneOrZero",
        "arr",
        "index",
        "i",
        "oneOrZero",
        "index",
        "gridstate",
        "index",
        "index",
        "setgridState",
        "arr",
        "handleSpeed",
        "e",
        "setSpeed",
        "speed",
        "e",
        "e",
        "handleColors",
        "e",
        "gridColors",
        "e",
        "e",
        "setGridColors",
        "newColor",
        "handleSubmit",
        "e",
        "e",
        "setColumnHeight",
        "parseInt",
        "rowCols",
        "parseInt",
        "rowCols",
        "btnClick",
        "handlePosition",
        "handleRandom",
        "e",
        "e",
        "setColumnHeight",
        "parseInt",
        "rowCols",
        "parseInt",
        "rowCols",
        "btnClick",
        "handlePosition",
        "resetGame",
        "e",
        "e",
        "setgridState",
        "setGenNum",
        "handlePosition",
        "handlePosition",
        "position",
        "setPosition",
        "setPosition",
        "useRef",
        "runningRef",
        "running",
        "useRef",
        "gridStateRef",
        "gridstate",
        "useRef",
        "genNum",
        "useRef",
        "speedRef",
        "speed",
        "useCallback",
        "runningRef",
        "setgridState",
        "g",
        "produce",
        "g",
        "gridCopy",
        "i",
        "rowCols",
        "i",
        "j",
        "rowCols",
        "j",
        "operations",
        "i",
        "x",
        "j",
        "y",
        "newI",
        "newI",
        "rowCols",
        "newJ",
        "newJ",
        "rowCols",
        "neighbors",
        "g",
        "newI",
        "newJ",
        "neighbors",
        "neighbors",
        "gridCopy",
        "i",
        "j",
        "g",
        "i",
        "j",
        "neighbors",
        "gridCopy",
        "i",
        "j",
        "genRef",
        "setTimeout",
        "runSimulation",
        "parseInt",
        "speedRef",
        "rowCols",
        "rowCols",
        "parseInt",
        "speed",
        "div",
        "h1",
        "h1",
        "section",
        "div",
        "h3",
        "h3",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "div",
        "div",
        "p",
        "p",
        "Popup",
        "button",
        "button",
        "section",
        "section",
        "h3",
        "h3",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "section",
        "section",
        "Popup",
        "div",
        "section",
        "runningRef",
        "p",
        "genRef",
        "p",
        "gridstate",
        "form",
        "handleSubmit",
        "section",
        "label",
        "input",
        "rowCols",
        "handleChange",
        "label",
        "label",
        "input",
        "rowCols",
        "handleChange",
        "label",
        "label",
        "select",
        "gridColors",
        "handleColors",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "select",
        "label",
        "label",
        "select",
        "gridColors",
        "handleColors",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "select",
        "label",
        "label",
        "select",
        "speed",
        "handleSpeed",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "option",
        "select",
        "label",
        "section",
        "form",
        "section",
        "gridstate",
        "button",
        "handleSubmit",
        "button",
        "running",
        "gridstate",
        "button",
        "resetGame",
        "button",
        "gridstate",
        "button",
        "setRunning",
        "running",
        "running",
        "runningRef",
        "runSimulation",
        "running",
        "button",
        "section",
        "position",
        "section",
        "gridColors",
        "gridstate",
        "y",
        "index",
        "div",
        "y",
        "x",
        "ind",
        "div",
        "index",
        "ind",
        "runningRef",
        "index",
        "ind",
        "gridstate",
        "index",
        "ind",
        "setgridState",
        "produce",
        "gridstate",
        "gridCopy",
        "gridstate",
        "index",
        "ind",
        "gridCopy",
        "index",
        "ind",
        "gridstate",
        "index",
        "ind",
        "gridCopy",
        "index",
        "ind",
        "gridstate",
        "index",
        "ind",
        "gridColors",
        "div",
        "section",
        "section",
        "gridstate",
        "p",
        "a",
        "a",
        "p",
        "img",
        "gif",
        "section",
        "footer",
        "p",
        "p",
        "footer",
        "div",
        "App"
    ],
    "literals": [
        "\"react\"",
        "\"reactjs-popup\"",
        "\"immer\"",
        "\"./App.css\"",
        "\"./assets/conway.gif\"",
        "\"absolute\"",
        "\"random\"",
        "\"generate\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"generate\"",
        "\"random\"",
        "\"incremented\"",
        "\"absolute\"",
        "\"relative\"",
        "\"absolute\"",
        "\"SPEED CHANGE:\"",
        "\"App\"",
        "\"setUp\"",
        "\"set\"",
        "\"rules\"",
        "\"btn\"",
        "\"modalText\"",
        "\" \"",
        "\"modalText\"",
        "\"modalText\"",
        "\"modalText\"",
        "\"generation\"",
        "\"form\"",
        "\"formInputs\"",
        "\"labels\"",
        "\"input\"",
        "\"text\"",
        "\"cols\"",
        "\"labels\"",
        "\"input\"",
        "\"text\"",
        "\"rows\"",
        "\"labels\"",
        "\"input\"",
        "\"text\"",
        "\"deadCell\"",
        "\"none\"",
        "\"black\"",
        "\"black\"",
        "\"purple\"",
        "\"purple\"",
        "\"#411f1f\"",
        "\"maroon\"",
        "\"#007dc1\"",
        "\"blue\"",
        "\"#222831\"",
        "\"midnight sky\"",
        "\"#ea907a\"",
        "\"salmon\"",
        "\"labels\"",
        "\"input\"",
        "\"text\"",
        "\"liveCell\"",
        "\"none\"",
        "\"yellow\"",
        "\"yellow\"",
        "\"white\"",
        "\"white\"",
        "\"green\"",
        "\"green\"",
        "\"orange\"",
        "\"orange\"",
        "\"gray\"",
        "\"gray\"",
        "\"red\"",
        "\"red\"",
        "\"labels\"",
        "\"input\"",
        "\"text\"",
        "\"speed\"",
        "\"none\"",
        "\"1000\"",
        "\"normal\"",
        "\"500\"",
        "\"2x\"",
        "\"250\"",
        "\"4x\"",
        "\"125\"",
        "\"8x\"",
        "\"100\"",
        "\"10x\"",
        "\"50\"",
        "\"20x\"",
        "\"btn-container\"",
        "\"btn\"",
        "\"btn\"",
        "\"btn\"",
        "\"Stop\"",
        "\"Start\"",
        "\"absolute\"",
        "\"gameContainer\"",
        "\"rowContainer\"",
        "${index}${ind}",
        "\"PASSED TO DIV:\"",
        "\"REPRESENTED IN STATE:\"",
        "\"grid\"",
        "\"white\"",
        "\"1px solid white\"",
        "\"moreInfo\"",
        "\"link\"",
        "\"https://www.youtube.com/watch?v=R9Plq-D1gEk\"",
        "\"_blank\"",
        "\" \"",
        "\"gif\"",
        "\"relative\""
    ],
    "variables": [
        "operations",
        "gridstate",
        "setgridState",
        "rowCols",
        "setRowCols",
        "running",
        "setRunning",
        "genNum",
        "setGenNum",
        "position",
        "setPosition",
        "btnClick",
        "setBtnClick",
        "gridColors",
        "setGridColors",
        "speed",
        "setSpeed",
        "handleChange",
        "setColumnHeight",
        "newArray",
        "empty",
        "i",
        "setRowWidth",
        "initialState",
        "index",
        "i",
        "i",
        "oneOrZero",
        "handleSpeed",
        "handleColors",
        "newColor",
        "handleSubmit",
        "handleRandom",
        "resetGame",
        "handlePosition",
        "runningRef",
        "gridStateRef",
        "genRef",
        "speedRef",
        "runSimulation",
        "i",
        "j",
        "neighbors",
        "x",
        "y",
        "newI",
        "newJ"
    ],
    "comments": [
        "represents the neighbors position relative to any grid.",
        "State:",
        "prevents reload of page on btn click",
        "set the row columns state to initialize the grid based on row length and width provided on the client",
        "console.log(\"ROW:\", rowCols);",
        "Set Coulumn height takes in num represents the column height, rowNums represents the number",
        "of items in the row. Btn click sets the footer depending on whether or not the grid is initialized",
        "or not.",
        "console.log(\"RAN\", num);",
        "setgridState([]);",
        "callback to set the number of items in the row",
        "console.log(\"RAN\", num);",
        "console.log(btnClick);",
        "console.log(",
        "`Added random int to position ${i}, into array at index ${index}`",
        ");",
        "console.log(index);",
        "console.log(`Set gridstate to ${arr}`);",
        "sets the speed according to choice provided by the client",
        "e.preventDefault();",
        "sets the color accoridn to choice provided by the client.",
        "allows enter click to manage client request",
        "prevents page reload on button click",
        "REFERENCES (set to be used inside of the runSimulation function since",
        "getting the value of the updates inside of a recursive call is not possible otherwise)",
        "run simulation is a recursive function which handles the animation of the",
        "simulation.",
        "Base case is the running state is set to false \"stop button click\" the simulation returns",
        "ending the simulation",
        "set grid takes parameter g which represents the current state.",
        "it returns the next version of state, drafts the following state according to",
        "the paramaters set in the algorithm, then turns that copy of state as the",
        "current state and then this continues as the recursive function continues",
        "to call it's self.",
        "for loop runs from 0 to the length of of the items in a row.",
        "for loop runs from the start of the initial nested array that represent a column",
        "to the last nested array aka column in the nested array.",
        "neighbors is instantiated to represent the number of neighbors surrounding a singular grid",
        "operations represents the position of each neighbor surrounding any grid. The operations",
        "represents the 8 corrosponding neighbors position relative to the current grid.",
        "The current grid can be represented by variables i and j above.",
        "gridstate[j][i] represents a value at a x,y axis point on the grid using a 2d array.",
        "newI & NewJ represent the position of each neighbor relative to the position of the current",
        "grid. taking x, y and adding it to NewI & NewJ allows you to get the position of each neighbor",
        "surrounding every grid. We store the values in a variable to use in our conditional reasoning.",
        "Sets the bounds of how to handle the edges of our 2d array. Checks if the values are with",
        "in range of the 2d array and if it is then read the next line...",
        "the value of neighbors is equal to the number of neighbors whose value is 1",
        "surrounding each grid. We achieve this by incrementing neighbors from 0",
        "to +1 or + 0 for every value surrounding each singular grid.",
        "sets the rules of the game.",
        "if neighbors is less than 2 or greater than 3 then those cells die by being",
        "set to 0.",
        "sets grids that meet criteria to 0",
        "else if the value is 0 and there are 3 surrounding neighbors this cell",
        "becomes alive by it's value being set to 1",
        "value that meet this criteria are set to a value of 1",
        "when the recursive call finishes each round the generation value increments by 1.",
        "console.log(\"IN ALGO:\", speedRef.current);",
        "setTimeout runs the simulation in intervals set by the client normal === 1000 which is equal to 1 time each second.",
        "can be set to 2, 4, 8, 10, or 20 times faster than a second.",
        "dependencies required.",
        "<p>or randomize the board for fast set up,</p>",
        "placeholder=\"Set Rows\"",
        "placeholder=\"Set Rows\"",
        "placeholder=\"Set Rows\"",
        "placeholder=\"Set Rows\"",
        "placeholder=\"Set Rows\"",
        "{gridstate.length > 0 ? (\n            <button className=\"btn\" onClick={handleRandom}>\n              Randomize\n            </button>\n          ) : null}",
        "console.log(\"CHECK:\", index, ind);"
    ],
    "docstrings": [],
    "functions": [
        "App"
    ],
    "classes": []
}