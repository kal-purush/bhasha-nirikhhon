{
    "identifiers": [
        "CRCPTrackWork",
        "oCResult",
        "oCResult",
        "oCResult",
        "oCResult",
        "oCResult",
        "oCResult",
        "oCResult",
        "oCResult",
        "miz",
        "o",
        "o",
        "listCRCPStep",
        "miz",
        "miz",
        "miz",
        "n",
        "n",
        "listNote",
        "n",
        "listCRCPStep",
        "n",
        "listCRCPStep",
        "n",
        "oCRCPStep",
        "miz",
        "oCRCPStep",
        "oCRCPStep",
        "nVelo",
        "listNote",
        "nNote",
        "miz",
        "oCRCPStep",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "oCMIDITrack",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "nStepCurr",
        "oCRCPStep",
        "listNote",
        "nNote",
        "listNote",
        "nNote",
        "listNote",
        "nNote",
        "miz",
        "oCRCPStep",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "oCMIDITrack",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "nStepCurr",
        "oCRCPStep",
        "listNote",
        "nNote",
        "miz",
        "oCRCPStep",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "oCMIDITrack",
        "oCMIDIData",
        "oCRCPStep",
        "nStepCurr",
        "nStepCurr",
        "oCRCPStep",
        "oCMIDITrack",
        "oCTWork",
        "eMMsg",
        "miz",
        "eMEvt",
        "miz",
        "numValue",
        "oCMIDIData",
        "miz",
        "oCMIDIData",
        "oCMIDIData",
        "eMMsg",
        "oCMIDIData",
        "eMEvt",
        "oCMIDIData",
        "numValue",
        "oCRCPStep",
        "CRCPStep",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCMIDIData",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "eMMsg",
        "miz",
        "eMEvt",
        "miz",
        "aryValue",
        "oCMIDIData",
        "miz",
        "oCMIDIData",
        "oCMIDIData",
        "eMMsg",
        "oCMIDIData",
        "eMEvt",
        "oCMIDIData",
        "aryValue",
        "oCRCPStep",
        "CRCPStep",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCMIDIData",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "nNote",
        "nGate",
        "nVelo",
        "miz",
        "nGate",
        "oCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nNote",
        "nVelo",
        "oCRCPStep",
        "oCTWork",
        "listCRCPStep",
        "oCRCPStep",
        "oCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nNote",
        "oCRCPStep",
        "oCTWork",
        "nGate",
        "listCRCPStep",
        "oCRCPStep",
        "listCRCPStep",
        "_oCTWork",
        "nMeasure",
        "nOffsetAddr",
        "_oCTWork",
        "oCTWork",
        "nOffsetAddr",
        "oCTWork",
        "oCTWork",
        "listCRCPStep",
        "oCTWork",
        "_oCTWork",
        "oCTWork",
        "_oCTWork",
        "oCTWork",
        "listCRCPStep",
        "oCTWork",
        "bCopyMeasure",
        "oCTWork",
        "n",
        "oCTWork",
        "n",
        "oCTWork",
        "nAddr",
        "nEv",
        "array_append",
        "listCRCPStep",
        "oCTWork",
        "nAddr",
        "nAddr",
        "nAddr",
        "nStep",
        "nAddr",
        "nEv",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "nStep",
        "nAddr",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "miz",
        "nTempo",
        "nStep",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "nStep",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "nAddr",
        "nStep",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "nStep",
        "nAddr",
        "listCRCPStep",
        "oCTWork",
        "miz",
        "oCTWork",
        "nAddr",
        "nAddr",
        "nStep",
        "nAddr",
        "oCMIDIData",
        "miz",
        "oCMIDIData",
        "oCMIDIData",
        "miz",
        "oCMIDIData",
        "oCTWork",
        "nAddr",
        "nAddr",
        "oCRCPStep",
        "CRCPStep",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCMIDIData",
        "oCTWork",
        "listCRCPStep",
        "oCRCPStep",
        "nStep",
        "nAddr",
        "nStep",
        "listLoopStack",
        "oCLoop",
        "nAddr",
        "nCount",
        "oCLoop",
        "oCLoop",
        "nAddr",
        "oCLoop",
        "oCLoop",
        "n",
        "oCLoop",
        "listLoopStack",
        "oCLoop",
        "nStep",
        "CRCPLoop",
        "oCLoop",
        "n",
        "oCLoop",
        "listLoopStack",
        "oCLoop",
        "nStep",
        "nMe",
        "nAddr",
        "nMe",
        "nAddr",
        "nOf",
        "nAddr",
        "nOf",
        "nAddr",
        "bCopyMeasure",
        "listCRCPStep",
        "array_append",
        "listCRCPStep",
        "oCTWork",
        "nMe",
        "nOf",
        "nStep",
        "bMeasureEnd",
        "nStep",
        "nStep",
        "nStep",
        "nAddr",
        "n",
        "oCTWork",
        "nStep",
        "bCopyMeasure",
        "bMeasureEnd",
        "listCRCPStep",
        "nCh",
        "nTrackSize",
        "miz",
        "CRCPTrackWork",
        "oCTWork",
        "nCh",
        "oCTWork",
        "nTrackSize",
        "oCTWork",
        "oCTWork",
        "oCTWork",
        "listCRCPStep",
        "oCTWork",
        "oCRCPStep",
        "oCTWork",
        "miz",
        "miz",
        "oCRCPStep",
        "oCRCPStep",
        "listCRCPStep",
        "oCRCPStep",
        "listCRCPStep",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "listCRCPStep",
        "strID",
        "bResult",
        "bResult",
        "Encoding",
        "bResult",
        "miz",
        "miz",
        "miz",
        "oCMIDIMusic",
        "miz",
        "nTrack",
        "nTrack",
        "E_EXTRACT_TYPE",
        "nDataSize",
        "nCh",
        "oCMIDIMusic",
        "nCh",
        "nDataSize",
        "nNextPos",
        "oCMIDIMusic",
        "oCMIDIMusic",
        "oCMIDIMusic",
        "aryA",
        "aryB",
        "n",
        "aryB",
        "n",
        "aryA",
        "aryB",
        "n",
        "aryA"
    ],
    "literals": [
        "string",
        "string",
        "\"RC\"",
        "\"UNICODE\"",
        "\"string\""
    ],
    "variables": [
        "oCResult",
        "oCMIDITrack",
        "nStepCurr",
        "listNote",
        "n",
        "n",
        "oCRCPStep",
        "nNote",
        "nVelo",
        "oCMIDIData",
        "oCMIDIData",
        "oCMIDIData",
        "oCRCPStep",
        "oCMIDIData",
        "oCRCPStep",
        "oCMIDIData",
        "listCRCPStep",
        "oCRCPStep",
        "oCMIDIData",
        "oCRCPStep",
        "listCRCPStep",
        "oCTWork",
        "listCRCPStep",
        "listLoopStack",
        "n",
        "bMeasureEnd",
        "nAddr",
        "nStep",
        "nEv",
        "oCMIDIData",
        "oCRCPStep",
        "nTempo",
        "oCMIDIData",
        "oCRCPStep",
        "oCLoop",
        "nCount",
        "oCLoop",
        "nMe",
        "nOf",
        "oCRCPStep",
        "listCRCPStep",
        "oCTWork",
        "bResult",
        "strID",
        "oCMIDIMusic",
        "oCMIDITrack",
        "nTrack",
        "nDataSize",
        "nTr",
        "nCh",
        "nStep",
        "nNextPos",
        "n"
    ],
    "comments": [
        "===========================================================================",
        "!\n * @brief MIDI Music\n * @author @MizunagiKB",
        "-------------------------------------------------------------- reference(s)",
        "<reference path=\"./miz_music.ts\" />",
        "<reference path=\"./miz_music_conv.ts\" />",
        "-------------------------------------------------------------- interface(s)",
        "---------------------------------------------------------------- declare(s)",
        "------------------------------------------------------------------- enum(s)",
        "----------------------------------------------------------------- global(s)",
        "------------------------------------------------------------------ class(s)",
        "---------------------------------------------------------------------------",
        "!",
        "---------------------------------------------------------------------------",
        "!",
        "---------------------------------------------------------------------------",
        "!",
        "KON",
        "KOF",
        "-----------------------------------------------------------------------",
        "!",
        "44Bytes = TrackHead",
        "-----------------------------------------------------------------------",
        "!",
        "TEMPO",
        "KON",
        "console.log(\n                                \"\"\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 0].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 1].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 2].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 3].toString()\n                                + \" \" + nOf.toString()\n                            );",
        "console.log(\n                                \"\"\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 0].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 1].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 2].toString()\n                                + \" \" + this.m_oCParser.m_aryData[nAddr + 3].toString()\n                            );",
        "-----------------------------------------------------------------------",
        "!",
        "テンポ情報を先頭に追加",
        "console.log(\"STEP \" + oCTWork.m_nStepTotal + \" \" + listCRCPStep.length);",
        "設定したいテンポ）÷（初期設定テンポ）×64",
        "console.log(\"parse Head\" + this.m_nTrk);",
        "console.log(\"-\");",
        "console.log(\"CH \" + nCh + \" : TR \" + nTrack, \" : ST \" + nStep);",
        "console.log(\"m_nTimeDiv: \" + oCMIDIMusic.m_nTimeDiv);",
        "console.log(\"m_strTitle: \" + oCMIDIMusic.m_strTitle);",
        "console.log(\"nSize: \" + nSize);",
        "console.log(\"nPos:  \" + this.m_nPos);",
        "--------------------------------------------------------------- function(s)",
        "--------------------------------------------------------------------- [EOF]"
    ],
    "docstrings": [],
    "functions": [
        "create_copy",
        "convert_track",
        "build_num",
        "build_array",
        "build_note",
        "copy_event",
        "make_event",
        "parse_track",
        "parse_head",
        "parse",
        "array_append"
    ],
    "classes": [
        "CRCPTrackWork",
        "CRCPStep",
        "CRCPLoop",
        "CMusicParserRCP"
    ]
}