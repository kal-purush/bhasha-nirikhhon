{
    "identifiers": [
        "org",
        "apache",
        "flink",
        "examples",
        "java",
        "bigpetstore",
        "java",
        "util",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "CustomerGenerator",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "DataLoader",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "StoreGenerator",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "datamodels",
        "Customer",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "datamodels",
        "Store",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "datamodels",
        "Transaction",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "datamodels",
        "inputs",
        "InputData",
        "org",
        "apache",
        "bigtop",
        "bigpetstore",
        "datagenerator",
        "framework",
        "SeedFactory",
        "org",
        "apache",
        "flink",
        "api",
        "common",
        "functions",
        "FlatMapFunction",
        "org",
        "apache",
        "flink",
        "api",
        "common",
        "functions",
        "MapFunction",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "DataSet",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "ExecutionEnvironment",
        "org",
        "apache",
        "flink",
        "api",
        "java",
        "Tuple2",
        "org",
        "apache",
        "flink",
        "examples",
        "java",
        "wordcount",
        "util",
        "WordCountData",
        "org",
        "apache",
        "flink",
        "shaded",
        "com",
        "google",
        "common",
        "collect",
        "Lists",
        "org",
        "apache",
        "flink",
        "types",
        "org",
        "apache",
        "flink",
        "util",
        "Collector",
        "SuppressWarnings",
        "env",
        "env",
        "args",
        "env",
        "ExecutionEnvironment",
        "getExecutionEnvironment",
        "nStores",
        "generator",
        "id",
        "loadData",
        "seedFactory",
        "sg",
        "id",
        "seedFactory",
        "stores",
        "Lists",
        "newArrayList",
        "i",
        "i",
        "nStores",
        "i",
        "stores",
        "add",
        "sg",
        "generate",
        "cg",
        "id",
        "stores",
        "seedFactory",
        "customers",
        "Lists",
        "newArrayList",
        "i",
        "i",
        "nStores",
        "i",
        "customers",
        "add",
        "cg",
        "generate",
        "data",
        "env",
        "fromCollection",
        "customers",
        "data",
        "Override",
        "value",
        "Override",
        "value",
        "tokens",
        "value",
        "toLowerCase",
        "split",
        "token",
        "tokens",
        "token",
        "length",
        "collect",
        "token",
        "fileOutput",
        "textPath",
        "outputPath",
        "args",
        "args",
        "length",
        "fileOutput",
        "args",
        "length",
        "textPath",
        "args",
        "outputPath",
        "args",
        "err",
        "env",
        "fileOutput",
        "env",
        "readTextFile",
        "textPath",
        "WordCountData",
        "getDefaultTextLineDataSet",
        "env"
    ],
    "literals": [
        "\"serial\"",
        "\"\\\\W+\"",
        "\"Usage: WordCount <text path> <result path>\"",
        "\"Executing WordCount example with built-in default data.\"",
        "\"  Provide parameters to read input data from a file.\"",
        "\"  Usage: WordCount <text path> <result path>\""
    ],
    "variables": [
        "textPath",
        "outputPath"
    ],
    "comments": [
        "now need to put customers into n partitions, and have each partition run a generator.",
        "todo... finish this part.",
        "USER FUNCTIONS",
        "normalize and split the line",
        "emit the pairs",
        "UTIL METHODS",
        "parse input arguments",
        "read the text file from given input path",
        "get default test text data"
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "*",
        "*************************************************************************",
        "*************************************************************************",
        "* Implements the string tokenizer that splits sentences into words as a user-defined\n\t * FlatMapFunction. The function takes a line (String) and splits it into \n\t * multiple pairs in the form of \"(word,1)\" (Tuple2<String, Integer>).",
        "*************************************************************************",
        "*************************************************************************"
    ],
    "functions": [
        "generateData",
        "writeData",
        "main",
        "Transaction",
        "flatMap",
        "parseParameters",
        "getTextDataSet"
    ],
    "classes": [
        "FlinkBPSGenerator",
        "Tokenizer"
    ]
}