{
    "identifiers": [
        "len",
        "items",
        "n",
        "k",
        "debug",
        "windows",
        "x",
        "getCountsRange",
        "items",
        "windows",
        "x",
        "items",
        "windows",
        "idx",
        "i",
        "windows",
        "vote",
        "non_decreasing_days",
        "items",
        "i",
        "items",
        "i",
        "i",
        "windows",
        "currentVote",
        "subList",
        "vote",
        "currentVote",
        "currentVote",
        "non_decreasing_days",
        "currentVote",
        "non_increasing_days",
        "subList",
        "debug",
        "format",
        "non_decreasing_days",
        "non_increasing_days",
        "non_decreasing_days",
        "non_increasing_days",
        "subList",
        "non_decreasing_days",
        "non_increasing_days",
        "items",
        "windows",
        "UpvoteIterable",
        "items",
        "windows",
        "upvoteRange",
        "next",
        "idx",
        "currentVote",
        "subRange",
        "idx",
        "vote",
        "currentVote",
        "currentVote",
        "non_decreasing_days",
        "currentVote",
        "non_increasing_days",
        "subRange",
        "beginning",
        "non_decreasing_days",
        "debug",
        "format",
        "non_decreasing_days",
        "non_increasing_days",
        "non_decreasing_days",
        "non_increasing_days",
        "subRange",
        "non_decreasing_days",
        "non_increasing_days",
        "StopIteration",
        "values",
        "windowDays",
        "values",
        "windowDays",
        "location",
        "windowDays",
        "StopIteration",
        "values",
        "location",
        "windowDays",
        "location",
        "location",
        "value",
        "main"
    ],
    "literals": [
        "\"Window days = \"",
        "\"{3} = non-decreasing ={0}, non-increasing= {1}, output ={2}\"",
        "\"{3} = non-decreasing ={0}, non-increasing= {1}, output ={2}\"",
        "\"done\"",
        "'__main__'"
    ],
    "variables": [
        "debug",
        "items",
        "n",
        "k",
        "windows",
        "vote",
        "non_decreasing_days",
        "non_increasing_days",
        "vote",
        "subList",
        "vote",
        "vote",
        "vote",
        "upvoteRange",
        "vote",
        "beginning",
        "subRange",
        "non_decreasing_days",
        "non_increasing_days",
        "vote",
        "vote",
        "vote",
        "beginning",
        "values",
        "location",
        "windowDays",
        "value"
    ],
    "comments": [
        "Upvotes -Quora Challene 1",
        "test variables",
        "Started off using an iterator to solve this problem, then decide that a generator would be better.",
        "getNonDecreasingSubRange(items,windows)",
        "Generator method",
        "set the vote to the beginning of the list",
        "Use Custom iterable to return sub ranges",
        "for upvoteRange in UpvoteIterable(items, windows):",
        "Get next Tuple",
        "Counter variables",
        "Creating our own iterable for this",
        "get list of values",
        "Require to run code"
    ],
    "docstrings": [
        "\"\"\"\nFor this problem, you are given N days of upvote count data, and a fixed window size K. For each window of K days, from left to right, find the number of non-decreasing subranges within the window minus the number of non-increasing subranges within the window.\n\"\"\""
    ],
    "functions": [
        "main",
        "getCountsRange",
        "getNonDecreasingSubRange",
        "next"
    ],
    "classes": [
        "UpvoteIterable"
    ]
}