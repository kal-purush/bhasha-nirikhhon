{
    "identifiers": [
        "eu",
        "horako",
        "stemmer",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "ruleSet",
        "dictionary",
        "processingDepth",
        "stickyExpanded",
        "noloop",
        "ruleSet",
        "dictionary",
        "ruleSet",
        "ruleSet",
        "dictionary",
        "dictionary",
        "word",
        "depth",
        "stickyExpanded",
        "expandStickyRules",
        "validWords",
        "invalidWords",
        "dictionary",
        "contains",
        "word",
        "validWords",
        "validWords",
        "add",
        "word",
        "allFlags",
        "dictionary",
        "getAllFlags",
        "word",
        "startingExpansions",
        "flags",
        "allFlags",
        "rules",
        "flag",
        "flags",
        "rulesByFlag",
        "ruleSet",
        "rulesByFlag",
        "get",
        "flag",
        "rulesByFlag",
        "rules",
        "addAll",
        "ruleSet",
        "rulesByFlag",
        "get",
        "flag",
        "startingExpansions",
        "add",
        "word",
        "rules",
        "currentExpansions",
        "startingExpansions",
        "recursionStep",
        "recursionStep",
        "depth",
        "recursionStep",
        "followingExpansions",
        "fe",
        "currentExpansions",
        "followingExpansions",
        "addAll",
        "expandOneStep",
        "fe",
        "word",
        "fe",
        "expRules",
        "fe",
        "invalidSfx",
        "fe",
        "invalidPfx",
        "validWords",
        "invalidWords",
        "currentExpansions",
        "followingExpansions",
        "validWords",
        "word",
        "isInvalid",
        "valid",
        "invalid",
        "isInvalid",
        "valid",
        "contains",
        "word",
        "invalid",
        "add",
        "word",
        "invalid",
        "remove",
        "word",
        "valid",
        "add",
        "word",
        "word",
        "rules",
        "invalidSfx",
        "invalidPfx",
        "validWords",
        "invalidWords",
        "newSfxWord",
        "newPfxWord",
        "newCrossWord",
        "followExpansions",
        "sfxRule",
        "rules",
        "sfxRule",
        "getType",
        "AffixRuleType",
        "SFX",
        "sfxRule",
        "isSticky",
        "newSfxWord",
        "sfxRule",
        "apply",
        "word",
        "newSfxWord",
        "addWord",
        "newSfxWord",
        "sfxRule",
        "isInvalid",
        "invalidPfx",
        "validWords",
        "invalidWords",
        "followSfxRules",
        "sfxRule",
        "getExpansionRules",
        "followSfxRules",
        "followSfxRules",
        "size",
        "followExpansions",
        "add",
        "newSfxWord",
        "followSfxRules",
        "getAll",
        "sfxRule",
        "isInvalid",
        "invalidPfx",
        "sfxRule",
        "isCrossProduct",
        "pfxRule",
        "rules",
        "pfxRule",
        "getType",
        "AffixRuleType",
        "PFX",
        "pfxRule",
        "isCrossProduct",
        "pfxRule",
        "isSticky",
        "newCrossWord",
        "pfxRule",
        "apply",
        "newSfxWord",
        "newCrossWord",
        "addWord",
        "newCrossWord",
        "pfxRule",
        "isInvalid",
        "sfxRule",
        "isInvalid",
        "validWords",
        "invalidWords",
        "expRules",
        "followSfxRules",
        "followSfxRules",
        "size",
        "expRules",
        "newCrossWord",
        "followSfxRules",
        "getAll",
        "sfxRule",
        "isInvalid",
        "pfxRule",
        "isInvalid",
        "followPfxRules",
        "pfxRule",
        "getExpansionRules",
        "followPfxRules",
        "followPfxRules",
        "size",
        "expRules",
        "expRules",
        "addRules",
        "followPfxRules",
        "getAll",
        "expRules",
        "newCrossWord",
        "followPfxRules",
        "getAll",
        "sfxRule",
        "isInvalid",
        "pfxRule",
        "isInvalid",
        "expRules",
        "followExpansions",
        "add",
        "expRules",
        "pfxRule",
        "rules",
        "pfxRule",
        "getType",
        "AffixRuleType",
        "PFX",
        "pfxRule",
        "isSticky",
        "newPfxWord",
        "pfxRule",
        "apply",
        "word",
        "newPfxWord",
        "addWord",
        "newPfxWord",
        "pfxRule",
        "isInvalid",
        "invalidSfx",
        "validWords",
        "invalidWords",
        "followPfxRules",
        "pfxRule",
        "getExpansionRules",
        "followPfxRules",
        "followPfxRules",
        "size",
        "followExpansions",
        "add",
        "newPfxWord",
        "followPfxRules",
        "getAll",
        "invalidSfx",
        "pfxRule",
        "isInvalid",
        "followExpansions",
        "Override",
        "word",
        "expand",
        "word",
        "processingDepth",
        "processingDepth",
        "processingDepth",
        "processingDepth",
        "noloop",
        "noloop",
        "noloop",
        "word",
        "flags",
        "outputDict",
        "s",
        "flags",
        "rules",
        "ruleSet",
        "getRulesByFlag",
        "s",
        "rule",
        "rules",
        "rule",
        "isSticky",
        "newWord",
        "rule",
        "apply",
        "word",
        "newWord",
        "otherFlags",
        "otherFlag",
        "flags",
        "ruleSet",
        "getRuleTypeByFlag",
        "otherFlag",
        "rule",
        "getType",
        "otherFlags",
        "add",
        "otherFlag",
        "expFlags",
        "rule",
        "getExpansionFlags",
        "expFlags",
        "expFlag",
        "expFlags",
        "expFlag",
        "equals",
        "rule",
        "getFlag",
        "otherFlags",
        "add",
        "expFlag",
        "outputDict",
        "add",
        "newWord",
        "otherFlags",
        "newDict",
        "w",
        "dictionary",
        "getWords",
        "flags",
        "dictionary",
        "getAllFlags",
        "w",
        "expandSticky1",
        "w",
        "flags",
        "newDict",
        "w",
        "newDict",
        "getWords",
        "flags",
        "newDict",
        "getAllFlags",
        "w",
        "dictionary",
        "add",
        "w",
        "flags",
        "stickyExpanded",
        "word",
        "expRules",
        "invalidPfx",
        "invalidSfx",
        "word",
        "expansionRules",
        "invalidSfx",
        "invalidPfx",
        "word",
        "word",
        "expRules",
        "expansionRules",
        "invalidSfx",
        "invalidSfx",
        "invalidPfx",
        "invalidPfx",
        "Override",
        "sb",
        "sb",
        "append",
        "append",
        "word",
        "append",
        "sb",
        "append",
        "append",
        "invalidSfx",
        "append",
        "sb",
        "append",
        "append",
        "invalidPfx",
        "append",
        "sb",
        "append",
        "r",
        "expRules",
        "sb",
        "append",
        "r",
        "getFlag",
        "append",
        "sb",
        "toString",
        "rules",
        "expRules",
        "addAll",
        "rules"
    ],
    "literals": [
        "\"    RULES FOR '\"",
        "\"'\"",
        "\" SFX \"",
        "\"in\"",
        "\"\"",
        "\"valid\"",
        "\" PFX \"",
        "\"in\"",
        "\"\"",
        "\"valid\"",
        "\": \"",
        "\" \""
    ],
    "variables": [
        "ruleSet",
        "dictionary",
        "newSfxWord",
        "newPfxWord",
        "newCrossWord",
        "word",
        "expRules"
    ],
    "comments": [
        "this.emptyRule = new AffixRule(AffixRuleType.SFX,\"\",\"\",\"\",null,\".\",true,null);",
        "input: word + expRules set",
        "input/output - valid + invalid words",
        "process word - add to valid / invalid",
        "process word - add to valid / invalid",
        "process word - add to valid / invalid",
        "one-level sticky expansion"
    ],
    "docstrings": [
        "* Class to find words derived from a stem. Because the expansion rules may be \n * recursive, it's required to explicitly set the depth for the rules application.\n * \n * Basic usage: \n * Create the AffixExpander with a Dictionary and AffixRuleSet and \n * call {@see expand(String,int)} on each word you want to expand.\n * \n * \n * @author Ondrej Horak &lt;ondrej.horak@centrum.cz&gt;",
        "* Create the expander from rule set and dictionary\n     * @param ruleSet\n     * @param dictionary",
        "* Use this method to find all derivations of the stem up to given depth;\n     * as for now, the depth is the limit of the sum of prefix and suffix \n     * expansions.\n     * \n     * @param word word to expand\n     * @param depth depth of expansion (total limit for the prefix and suffix)\n     * @return set of expanded words",
        "* Encapsulates word and expRules that can be applied to this word\n     * Represents one step in the expansion (with expRules leading to next steps)\n     *"
    ],
    "functions": [
        "AffixExpander",
        "expand",
        "addWord",
        "expandOneStep",
        "process",
        "setProcessingDepth",
        "setNoloop",
        "expandSticky1",
        "expandStickyRules",
        "ExpansionRules",
        "toString",
        "addRules"
    ],
    "classes": [
        "AffixExpander",
        "ExpansionRules"
    ]
}