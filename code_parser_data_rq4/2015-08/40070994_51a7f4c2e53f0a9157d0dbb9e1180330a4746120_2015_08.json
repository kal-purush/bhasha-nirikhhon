{
    "identifiers": [
        "what",
        "what",
        "ID",
        "COLOUR",
        "STATE",
        "IMAGE",
        "DIRECTION",
        "ID",
        "Game",
        "get",
        "Game",
        "Game",
        "IMAGE",
        "Image",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Image",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Image",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Image",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "IMAGE",
        "COLOUR",
        "Game",
        "StateManager",
        "Game",
        "Game",
        "Level",
        "context",
        "x",
        "y",
        "image",
        "dir",
        "size",
        "context",
        "context",
        "x",
        "y",
        "context",
        "dir",
        "context",
        "image",
        "size",
        "size",
        "e",
        "e",
        "context",
        "styles",
        "get",
        "get",
        "get",
        "styles",
        "get",
        "Game",
        "get",
        "get",
        "get",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Sound",
        "Sound",
        "Game",
        "Game",
        "i",
        "Game",
        "i",
        "Game",
        "i",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "id",
        "sm",
        "id",
        "sm",
        "down",
        "BasicState",
        "sm",
        "STATE",
        "sm",
        "get",
        "get",
        "BasicState",
        "sm",
        "STATE",
        "sm",
        "get",
        "get",
        "get",
        "BasicState",
        "sm",
        "STATE",
        "sm",
        "get",
        "Game",
        "get",
        "get",
        "BasicState",
        "sm",
        "STATE",
        "sm",
        "get",
        "x",
        "x",
        "x",
        "y",
        "y",
        "y",
        "index",
        "x",
        "y",
        "Game",
        "index",
        "enabled",
        "index",
        "enabled",
        "index",
        "index",
        "get",
        "get",
        "get",
        "get",
        "LevelSelectState",
        "dir",
        "dir",
        "i",
        "i",
        "Game",
        "i",
        "highest",
        "i",
        "highest",
        "highest",
        "get",
        "i",
        "Game",
        "i",
        "Game",
        "i",
        "get",
        "i",
        "Colour",
        "get",
        "i",
        "get",
        "get",
        "get",
        "get",
        "get",
        "get",
        "LevelSelectState",
        "get",
        "get",
        "BasicState",
        "sm",
        "levelNum",
        "STATE",
        "sm",
        "levelNum",
        "Level",
        "get",
        "get",
        "get",
        "Tile",
        "get",
        "Tile",
        "get",
        "Tile",
        "get",
        "Tile",
        "get",
        "Tile",
        "get",
        "get",
        "get",
        "down",
        "down",
        "Game",
        "MainMenuState",
        "state",
        "levelNum",
        "Sound",
        "Sound",
        "state",
        "state",
        "levelNum",
        "state",
        "state",
        "levelNum",
        "state",
        "MainMenuState",
        "AboutState",
        "LevelSelectState",
        "GameState",
        "levelNum",
        "OptionState",
        "Sound",
        "Sound",
        "entering",
        "exiting",
        "colour",
        "colour",
        "COLOUR",
        "context",
        "x",
        "y",
        "dir",
        "Game",
        "context",
        "x",
        "y",
        "Game",
        "IMAGE",
        "Direction",
        "dir",
        "Tile",
        "Game",
        "context",
        "x",
        "y",
        "Game",
        "IMAGE",
        "Direction",
        "dir",
        "Tile",
        "colour",
        "Receptor",
        "wasOn",
        "Sound",
        "Sound",
        "context",
        "x",
        "y",
        "dir",
        "Game",
        "context",
        "x",
        "y",
        "Game",
        "ID",
        "dir",
        "Tile",
        "laserColour",
        "receptorColour",
        "receptorColour",
        "COLOUR",
        "receptorColour",
        "laserColour",
        "x",
        "y",
        "id",
        "dir",
        "x",
        "y",
        "id",
        "dir",
        "dir",
        "DIRECTION",
        "ID",
        "ID",
        "ID",
        "ID",
        "down",
        "down",
        "into",
        "into",
        "board",
        "context",
        "x",
        "y",
        "i",
        "i",
        "i",
        "i",
        "context",
        "x",
        "y",
        "Game",
        "context",
        "x",
        "y",
        "Game",
        "Tile",
        "laser",
        "laser",
        "ID",
        "Tile",
        "x",
        "y",
        "x",
        "y",
        "ID",
        "laser",
        "laser",
        "Direction",
        "laser",
        "laser",
        "Tile",
        "x",
        "y",
        "dir",
        "x",
        "y",
        "ID",
        "dir",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "DIRECTION",
        "laser",
        "Tile",
        "x",
        "y",
        "dir",
        "on",
        "colour",
        "x",
        "y",
        "ID",
        "dir",
        "on",
        "colour",
        "Laser",
        "down",
        "down",
        "down",
        "level",
        "Laser",
        "level",
        "level",
        "level",
        "i",
        "level",
        "level",
        "i",
        "checkedTiles",
        "i",
        "xx",
        "nextTile",
        "Game",
        "nextDir",
        "yy",
        "nextTile",
        "Game",
        "nextDir",
        "xx",
        "xx",
        "level",
        "yy",
        "yy",
        "level",
        "checkedTiles",
        "xx",
        "yy",
        "level",
        "checkedTiles",
        "xx",
        "yy",
        "level",
        "nextTile",
        "level",
        "xx",
        "yy",
        "nextTile",
        "nextTile",
        "ID",
        "nextTile",
        "Laser",
        "Direction",
        "nextDir",
        "nextTile",
        "nextDir",
        "nextTile",
        "nextTile",
        "nextDir",
        "laser",
        "laser",
        "Tile",
        "x",
        "y",
        "dir",
        "receptors",
        "x",
        "y",
        "ID",
        "dir",
        "receptors",
        "i",
        "i",
        "receptors",
        "i",
        "i",
        "i",
        "Receptor",
        "getColourLonghand",
        "receptors",
        "i",
        "Receptor",
        "COLOUR",
        "Receptor",
        "COLOUR",
        "receptors",
        "i",
        "i",
        "i",
        "receptors",
        "i",
        "num",
        "num",
        "down",
        "down",
        "down",
        "board",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "Direction",
        "i",
        "Direction",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "r",
        "r",
        "r",
        "context",
        "x",
        "y",
        "context",
        "Colour",
        "context",
        "Colour",
        "context",
        "context",
        "context",
        "x",
        "Tile",
        "y",
        "Tile",
        "Tile",
        "Tile",
        "context",
        "x",
        "Tile",
        "y",
        "Tile",
        "Tile",
        "Tile",
        "i",
        "i",
        "i",
        "i",
        "context",
        "x",
        "y",
        "i",
        "i",
        "i",
        "i",
        "i",
        "context",
        "x",
        "y",
        "i",
        "laser",
        "i",
        "i",
        "i",
        "Direction",
        "i",
        "laser",
        "Direction",
        "i",
        "Direction",
        "laser",
        "solid",
        "solid",
        "laser",
        "Direction",
        "laser",
        "laser",
        "ID",
        "i",
        "i",
        "i",
        "i",
        "levelNum",
        "w",
        "h",
        "tiles",
        "levelNum",
        "tiles",
        "w",
        "h",
        "tiles",
        "Game",
        "Game",
        "lvl",
        "lvl",
        "Level",
        "lvl",
        "i",
        "i",
        "i",
        "BlankTile",
        "i",
        "i",
        "x",
        "y",
        "x",
        "x",
        "y",
        "y",
        "x",
        "y",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "ID",
        "i",
        "i",
        "i",
        "i",
        "i",
        "ID",
        "i",
        "get",
        "context",
        "Colour",
        "context",
        "Tile",
        "Tile",
        "i",
        "i",
        "i",
        "context",
        "i",
        "Tile",
        "Tile",
        "i",
        "Tile",
        "Tile",
        "down",
        "Tile",
        "Tile",
        "y",
        "x",
        "down",
        "i",
        "i",
        "i",
        "ID",
        "i",
        "on",
        "on",
        "Level",
        "Sound",
        "Sound",
        "Game",
        "Game",
        "Level",
        "on",
        "Game",
        "getMessage",
        "Game",
        "Game",
        "Storage",
        "alert",
        "storage",
        "Game",
        "storage",
        "data",
        "decodeURI",
        "storage",
        "n",
        "n",
        "data",
        "w",
        "parseInt",
        "data",
        "h",
        "parseInt",
        "data",
        "tiles",
        "w",
        "h",
        "i",
        "i",
        "w",
        "h",
        "i",
        "tiles",
        "i",
        "BlankTile",
        "i",
        "w",
        "i",
        "w",
        "i",
        "i",
        "data",
        "i",
        "data",
        "i",
        "info",
        "parseInt",
        "info",
        "parseInt",
        "info",
        "id",
        "tiles",
        "pos",
        "MirrorTile",
        "pos",
        "w",
        "pos",
        "w",
        "dir",
        "tiles",
        "pos",
        "PointerTile",
        "pos",
        "w",
        "pos",
        "w",
        "dir",
        "parseBool",
        "info",
        "parseInt",
        "info",
        "tiles",
        "pos",
        "ReceptorTile",
        "pos",
        "w",
        "pos",
        "w",
        "dir",
        "info",
        "id",
        "w",
        "h",
        "tiles",
        "i",
        "Game",
        "i",
        "Level",
        "i",
        "Game",
        "Game",
        "Level",
        "LevelSelectState",
        "Level",
        "levelNum",
        "Storage",
        "Game",
        "levelNum",
        "Game",
        "levelNum",
        "Storage",
        "Game",
        "Game",
        "i",
        "i",
        "i",
        "tile",
        "i",
        "tile",
        "ID",
        "ID",
        "i",
        "tile",
        "ID",
        "i",
        "tile",
        "getBoolShorthand",
        "tile",
        "tile",
        "ID",
        "receptors",
        "j",
        "j",
        "j",
        "tile",
        "j",
        "receptors",
        "receptors",
        "j",
        "getColourShorthand",
        "tile",
        "j",
        "receptors",
        "j",
        "i",
        "tile",
        "receptors",
        "Game",
        "encodeURI",
        "Storage",
        "i",
        "Game",
        "i",
        "Game",
        "i",
        "i",
        "Game",
        "Game",
        "Game",
        "Storage",
        "Game",
        "Game",
        "i",
        "Game",
        "i",
        "i",
        "Game",
        "i",
        "lvl",
        "lvl",
        "lvl",
        "i",
        "i",
        "i",
        "tile",
        "i",
        "tile",
        "ID",
        "lvl",
        "i",
        "ID",
        "ID",
        "tile",
        "DIRECTION",
        "lvl",
        "i",
        "ID",
        "lvl",
        "i",
        "ID",
        "tile",
        "ID",
        "tile",
        "DIRECTION",
        "tile",
        "tile",
        "COLOUR",
        "lvl",
        "i",
        "ID",
        "lvl",
        "i",
        "ID",
        "tile",
        "getBoolShorthand",
        "tile",
        "tile",
        "ID",
        "receptors",
        "j",
        "j",
        "j",
        "tile",
        "j",
        "receptors",
        "receptors",
        "j",
        "getColourShorthand",
        "tile",
        "j",
        "receptors",
        "j",
        "lvl",
        "i",
        "ID",
        "tile",
        "receptors",
        "lvl",
        "lvl",
        "i",
        "i",
        "lvl",
        "i",
        "lvl",
        "i",
        "lvl",
        "i",
        "lvl",
        "i",
        "w",
        "h",
        "arr",
        "arr",
        "i",
        "w",
        "h",
        "i",
        "tiles",
        "i",
        "Level",
        "arr",
        "i",
        "i",
        "w",
        "i",
        "w",
        "tiles",
        "i",
        "arr",
        "i",
        "ID",
        "i",
        "tiles",
        "i",
        "BlankTile",
        "i",
        "w",
        "i",
        "w",
        "ID",
        "tiles",
        "i",
        "MirrorTile",
        "i",
        "w",
        "i",
        "w",
        "arr",
        "i",
        "ID",
        "tiles",
        "i",
        "PointerTile",
        "i",
        "w",
        "i",
        "w",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "ID",
        "tiles",
        "i",
        "ReceptorTile",
        "i",
        "w",
        "i",
        "w",
        "arr",
        "i",
        "arr",
        "i",
        "arr",
        "i",
        "i",
        "tiles",
        "id",
        "x",
        "y",
        "id",
        "ID",
        "BlankTile",
        "x",
        "y",
        "ID",
        "MirrorTile",
        "x",
        "y",
        "DIRECTION",
        "ID",
        "PointerTile",
        "x",
        "y",
        "DIRECTION",
        "COLOUR",
        "ID",
        "ReceptorTile",
        "x",
        "y",
        "DIRECTION",
        "Level",
        "Sound",
        "Sound",
        "sound",
        "Sound",
        "get",
        "sound",
        "get",
        "sound",
        "num",
        "colour",
        "colour",
        "COLOUR",
        "COLOUR",
        "COLOUR",
        "COLOUR",
        "colour",
        "colour",
        "COLOUR",
        "COLOUR",
        "COLOUR",
        "COLOUR",
        "n",
        "n",
        "n",
        "n",
        "hex",
        "parseInt",
        "hex",
        "n",
        "n",
        "n",
        "n",
        "value",
        "value",
        "value",
        "value",
        "condition",
        "message",
        "condition",
        "message",
        "message",
        "message",
        "message",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir1",
        "dir2",
        "dir1",
        "dir2",
        "dir1",
        "dir2",
        "dir1",
        "dir2",
        "result",
        "dir1",
        "result",
        "dir1",
        "result",
        "dir1",
        "dir",
        "dir",
        "DIRECTION",
        "DIRECTION",
        "dir",
        "DIRECTION",
        "DIRECTION",
        "dir",
        "DIRECTION",
        "DIRECTION",
        "dir",
        "DIRECTION",
        "DIRECTION",
        "dir",
        "down",
        "Game",
        "Game",
        "keycode",
        "down",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "Game",
        "keyPressed",
        "keyPressed",
        "down",
        "Game",
        "STATE",
        "Game",
        "down",
        "Game",
        "Game"
    ],
    "literals": [
        "string",
        "string",
        "\"Mirrors\"",
        "'XXGX'",
        "'XXBX'",
        "'RXXX'",
        "'XXGX'",
        "'RXGX'",
        "'WWWX'",
        "'RXBX'",
        "'BXXR'",
        "'GRGX'",
        "'XXRX'",
        "'GXBX'",
        "'BXWX'",
        "'RXBG'",
        "'XXBX'",
        "'RXXX'",
        "'GXGX'",
        "'WXBX'",
        "'RGRG'",
        "'BRXG'",
        "'XGBR'",
        "'WXWX'",
        "'WXWX'",
        "'XXBX'",
        "'RXBX'",
        "'RXBX'",
        "'RXBX'",
        "'RXBX'",
        "'XXRX'",
        "'XXGX'",
        "'BXXX'",
        "\"Mirrors V\"",
        "\" Mobile\"",
        "'versionNumber'",
        "'<span style=\"color: inherit; text-decoration: none;\">'",
        "\"V.\"",
        "' <span style=\"font-size: 14px\">(beta)</span></span>'",
        "\"res/blank.png\"",
        "\"blank\"",
        "\"res/mirror.png\"",
        "\"mirror\"",
        "\"res/pointer.png\"",
        "\"pointer\"",
        "\"res/receptor_red.png\"",
        "\"receptor\"",
        "\"res/receptor_green.png\"",
        "\"receptor\"",
        "\"res/receptor_blue.png\"",
        "\"receptor\"",
        "\"res/receptor_white.png\"",
        "\"receptor\"",
        "\"res/laser_red.png\"",
        "\"red laser\"",
        "\"res/laser_green.png\"",
        "\"green laser\"",
        "\"res/laser_blue.png\"",
        "\"blue laser\"",
        "string",
        "string",
        "''",
        "'darken'",
        "\"\"",
        "'popup'",
        "\"\"",
        "'popup'",
        "'popup'",
        "'<a id=\"popupClose\" ontouchstart=\"Sound.play(Sound.select); Game.clearPopup(); return false;\">x</a>'",
        "'darken'",
        "\"hidden\"",
        "'popup'",
        "\"hidden\"",
        "'popup'",
        "\"\"",
        "'mainmenubtns'",
        "\"none\"",
        "'mainmenubtns'",
        "\"block\"",
        "\"Main Menu State is being destroyed!! D:\"",
        "'aboutstate'",
        "\"block\"",
        "'aboutstate'",
        "\"block\"",
        "'aboutstate'",
        "\"none\"",
        "'optionstate'",
        "\"initial\"",
        "'<h3>Clear level data</h3>'",
        "'<p>Are you sure? This will erase all of your saved data!<br />This can not be undone!</p>'",
        "'<div class=\"popupButton button\" id=\"yesButton\" ontouchstart=\"Sound.play(Sound.wizzle); Level.resetAll(); Game.clearPopup(); return false;\">Reset</div>'",
        "'<div class=\"popupButton button\" id=\"cancelButton\" ontouchstart=\"Sound.play(Sound.select); Game.clearPopup(); return false;\">Cancel</div>'",
        "'margin-left: -170px;'",
        "'optionstate'",
        "\"initial\"",
        "'optionstate'",
        "\"none\"",
        "'levelselectstate'",
        "\"block\"",
        "''",
        "'<div class=\"col\">'",
        "'<div class=\"button lvlselect'",
        "' enabled'",
        "''",
        "'\" id=\"'",
        "'lvlselectButton\" '",
        "'ontouchstart=\"Game.sm.enterState(\\'game\\', '",
        "'); return false;\"'",
        "''",
        "'>'",
        "'</div>'",
        "'</div>'",
        "'<div id=\"backarrow\" style=\"visibility: hidden\" ontouchstart=\"Game.sm.currentState().scroll(\\'L\\'); return false;\"><p>&#9664;</p></div>'",
        "'<div id=\"forwardarrow\" ontouchstart=\"Game.sm.currentState().scroll(\\'R\\'); return false;\"><p>&#9654;</p></div>'",
        "'<div class=\"button\" ontouchstart=\"Game.sm.enterPreviousState(); return false;\" style=\"margin-left: 0; margin-top: -480px;\">Back</div>'",
        "'levelselectstate'",
        "'px'",
        "'levelselectstate'",
        "'px'",
        "'levelselectstate'",
        "'80px'",
        "'levelselectstate'",
        "string",
        "'R'",
        "'levelselectstate'",
        "''",
        "'lvlselectButton'",
        "'lvlselectButton'",
        "'backarrow'",
        "\"hidden\"",
        "'forwardarrow'",
        "\"hidden\"",
        "'forwardarrow'",
        "\"visible\"",
        "'backarrow'",
        "\"visible\"",
        "'levelselectstate'",
        "'px'",
        "'levelselectstate'",
        "\"none\"",
        "'levelselectstate'",
        "\"block\"",
        "'levelselectstate'",
        "\"none\"",
        "'gameboard'",
        "\"initial\"",
        "'gameboard'",
        "\"50%\"",
        "'gameboard'",
        "\"px\"",
        "'gameboard'",
        "\"px\"",
        "'gameboard'",
        "\"px\"",
        "'gamecanvas'",
        "'gamecanvas'",
        "'levelNumHeading'",
        "'Level '",
        "'gameboard'",
        "\"initial\"",
        "'gameboard'",
        "\"none\"",
        "'<h3>Reset level</h3>'",
        "'<p>Are you sure you want to reset?</p>'",
        "'<div class=\"popupButton button\" id=\"yesButton\" ontouchstart=\"Sound.play(Sound.wizzle); Game.sm.currentState().level.reset(); Game.clearPopup(); return false;\">Reset</div>'",
        "'<div class=\"popupButton button\" id=\"cancelButton\" ontouchstart=\"Sound.play(Sound.select); Game.clearPopup(); return false;\">Cancel</div>'",
        "'margin-left: -140px;'",
        "string",
        "\"game\"",
        "string",
        "\"mainmenu\"",
        "\"about\"",
        "\"levelselect\"",
        "\"game\"",
        "\"option\"",
        "string",
        "\"XXXX\"",
        "'X'",
        "\"round\"",
        "'gamecanvas'",
        "'2d'",
        "'<div id=\"popupContent\">'",
        "'<h3>Level complete!</h3> <p>'",
        "'win'",
        "'!</p>'",
        "'<div class=\"popupButton button\" id=\"returnButton\" ontouchstart=\"Game.sm.enterPreviousState(); Game.clearPopup(); return false;\">Return</div>'",
        "'<div class=\"popupButton button\" id=\"nextButton\" ontouchstart=\"Game.sm.enterPreviousState(); Game.clearPopup(); if ('",
        "' < Game.defaultLevels.length) { Game.sm.enterState(\\'game\\', '",
        "'); } return false;\">Next Level!</div>'",
        "'</div>'",
        "\"undefined\"",
        "\"Failed to load data. You must update your browser if you want to play this game.\"",
        "' lvl: '",
        "'|'",
        "''",
        "','",
        "','",
        "','",
        "'M'",
        "'P'",
        "'R'",
        "\"unknown type saved in local storage: \"",
        "\"undefined\"",
        "' lvl: '",
        "' lvl: '",
        "''",
        "\"undefined\"",
        "\"Failed to save data. Please update your browser.\"",
        "'|'",
        "','",
        "'|'",
        "'M,'",
        "','",
        "'|'",
        "'P,'",
        "','",
        "','",
        "','",
        "'|'",
        "'XXXX'",
        "'R,'",
        "','",
        "','",
        "'|'",
        "' lvl: '",
        "\"undefined\"",
        "\"Failed to save data. Please update your browser.\"",
        "''",
        "','",
        "' cl: '",
        "' cl: '",
        "' cl: '",
        "\"undefined\"",
        "\"Failed to save data. Please update your browser.\"",
        "' cl: '",
        "' cl: '",
        "','",
        "string",
        "\"XXXX\"",
        "\"'\"",
        "\"'\"",
        "\"[\"",
        "\", \"",
        "\", [\"",
        "\"number\"",
        "\", \"",
        "\"[\"",
        "\"], \"",
        "\"]]\"",
        "\"Blank tiles shouldn't be saved using arrays (index: \"",
        "\")\"",
        "\"Invalid tile property: \"",
        "\" at index \"",
        "\"RXBX\"",
        "'blipSound'",
        "'winSound'",
        "'selectSound'",
        "'selectSound3'",
        "'wizzleSound'",
        "string",
        "'#3B154B'",
        "'#004500'",
        "'#0A0A0A'",
        "'#121212'",
        "'#555'",
        "string",
        "string",
        "'win'",
        "'Good Job'",
        "'Sweet'",
        "'Excellent'",
        "'Nice'",
        "'Awesome'",
        "'Congrats'",
        "'Good Job'",
        "\"1\"",
        "string",
        "'R'",
        "'G'",
        "'B'",
        "'W'",
        "'NULL'",
        "string",
        "'R'",
        "'G'",
        "'B'",
        "'W'",
        "string",
        "\"0\"",
        "string",
        "\"0\"",
        "\"1\"",
        "string",
        "\"Assertion failed\"",
        "\"undefined\"",
        "\"Invalid direction!! \""
    ],
    "variables": [
        "i",
        "x",
        "y",
        "index",
        "enabled",
        "highest",
        "i",
        "i",
        "wasOn",
        "i",
        "checkedTiles",
        "nextDir",
        "nextTile",
        "xx",
        "yy",
        "i",
        "i",
        "num",
        "i",
        "i",
        "i",
        "solid",
        "i",
        "i",
        "lvl",
        "i",
        "i",
        "context",
        "i",
        "x",
        "y",
        "on",
        "i",
        "data",
        "storage",
        "tiles",
        "i",
        "w",
        "h",
        "info",
        "id",
        "pos",
        "dir",
        "i",
        "i",
        "j",
        "tile",
        "receptors",
        "i",
        "i",
        "i",
        "j",
        "tile",
        "receptors",
        "lvl",
        "tiles",
        "i",
        "num",
        "n",
        "n",
        "result",
        "keycode"
    ],
    "comments": [
        "Copyright AJ Weeks 2015",
        "jshint browser: true",
        "jshint devel: true",
        "global Stats",
        "global Bugsnag",
        "The default game levels (these NEVER get mutated)",
        "0:",
        "8:",
        "TODO XXX Implement Level unlocking",
        "Stores which levels the player has completed",
        "tile offsets (N, E, S, W)",
        "the speed the level selection buttons are going",
        "@param styles: any css styles to be added to the popup container",
        "Main loop",
        "render if the window has focus, or at least every 5 ticks",
        "gets called when another state is placed on top of the stack and therefore covering this one",
        "should never be called, this state is always in memory",
        "for every column",
        "for every item in the column",
        "LATER set levels > 8 to locked to start with",
        "LATER make this better, but this works for now I guess",
        "The level select buttons haven't been generated yet",
        "this.offset += Game.lvlselectButtonSpeed * Game.lvlselectButtonDirection;",
        "centering code:",
        "this.level.update();",
        "levelNum only used when entering a game state",
        "if there is only one state, we can't go back any further",
        "@param colours: an array of size two [single laser, corner laser]\n @param dir: direction the tile is facing",
        "@param dir: the direction the tile is facing",
        "represents an actual receptor, in a receptor tile (receptor tiles can have 0-4 of these things)",
        "returns whether or not the specified colour turns the specified receptor on",
        "@param laser: a laser obj: { entering = the side of the tile it is entering (GLOBALLY), exiting = null }",
        "there's probably a better way to do this, this will work for now though. FUTURE - implement a cool algorithm which elegantly handles this",
        "0=not checked, 1=checked once, 2=checked twice (done)",
        "direction towards next tile",
        "The next direction is leading us into the wall",
        "we've already checked this tile twice (this line avoids infinite loops)",
        "get the tile to be updated",
        "we hit a wall",
        "!!!! Add all other opaque/solid tiles here",
        "Find the next direction *after* setting the new laser object",
        "they didn't add the laser, end the chain",
        "we already have a laser!! Don't add another one!",
        "there's a laser pointing into a receptor",
        "check if any of our lasers go straight through us",
        "receptors keep track of their own lasers, but leave the rendering to the receptor objects",
        "check if the laser can pass straight through us (if we have two or fewer receptors and they aren't in the way of the laser)",
        "there is a receptor in the way, just add the laser without an exiting dir",
        "if we reach this point, we can do what a blank tile does",
        "tiles can be an array of tile objects, or an array of numbers to be converted into tiles",
        "check if the player has started this level earlier, if so load that",
        "remove all lasers",
        "update all pointer tiles",
        "update all non-pointer tiles",
        "OPTIMIZATION: only render stuff when updates are made",
        "OPTIMIZATION: pass in context through entire rendering chain?",
        "Checks if all of this level's receptors have been activated and sets Game.completedLevels[levelNum] = true if so",
        "the player beat the level, no need storing their progress anymore",
        "This is the first time the level has been completed, completedLevels[lvlnum] gets set to true until the player manually resets all their data",
        "only checking if not true to be more efficient",
        "only show the popup when the player actually completed the level this tick, not if completedLevels[i] is true",
        "__DATA__\n     [0] :    version number\n     [1] :    width, height\n     [2..n] : non-blank tile data (type, pos, dir, [on], [col], [receptors])",
        "Attempts to load a level from the user's local storage\n     Returns a true if there was data found for levelNum, otherwise null",
        "there is no previous save of this level",
        "LATER check version number HERE if a new feature is implemented that doesn't work with older saves",
        "version = parseInt(data[0]);",
        "LATER USE COOKIES HERE INSTEAD ALSO?",
        "LATER USE COOKIES HERE INSTEAD?",
        "the player already beat this level, we don't need to save their data anymore",
        "store game board",
        "Don't store blank tiles, any tile position that isn't saved is assumed to be blank",
        "LATER add more encryption to prevent cheating!",
        "LATER USE COOKIES HERE INSTEAD?",
        "remove last comma",
        "LATER USE COOKIES HERE INSTEAD?",
        "Only used to generate the default levels, so I can make a level with the built-in editor, and export it with a click",
        "remove last comma",
        "its a more complex type (it contains a sub-array)",
        "static nextColor(colour: number, useWhite: boolean) {\n        switch (colour) {\n            case COLOUR.RED:\n                return COLOUR.GREEN;\n            case COLOUR.GREEN:\n                return COLOUR.BLUE;\n            case COLOUR.BLUE:\n                if (useWhite) return COLOUR.WHITE;\n                return COLOUR.RED;\n            case COLOUR.WHITE:\n                return COLOUR.RED;\n        }\n        return COLOUR.RED;\n    }",
        "Fallback",
        "This is actually just really annoying and useless, since we're saving on click anyway",
        "window.onbeforeunload = function(event: BeforeUnloadEvent) {",
        "if (Game.debug === false) {",
        "if (typeof event == 'undefined') event = window.event;",
        "if (event) event.returnValue = 'Are you sure you want to close Mirrors?';",
        "}",
        "};"
    ],
    "docstrings": [
        "*   Levels are stored as follows:\n     *   In the simplest form, just a 1D array of numbers   e.g. [0, 1, 2, 0, 2], with each number cooresponding to a tile type\n     *   However, if a tile has more information than just type (everything except blank types) then a sub-array will be\n     *   used to store that info     e.g. [0, [1, 1], 2, 0, [2, 1, 2], 1]    if this method is used, not every complex\n     *   element needs to be in an array, if the default direction, colour, etc. is wanted (FYI it's NORTH & RED)\n     *   If an element does use the sub-array method, it MUST have all fields filled out, even if they are the same as the defaults\n     *   Mirror: [ID, DIR]\n     *   Pointer: [ID, DIR, ON, COL]\n     *   Receptor: [ID, DIR, RECEPTORS STRING (NESW, 'R', 'G', 'B', 'W', 'X' <- blank)]\n     *\n     *   eg.\n     *   Mirror: [1, 1]\n     *   Pointer: [2, 3, 1, 2]\n     *   Receptor: [3, 1, \"RBXW\"]"
    ],
    "functions": [
        "get",
        "init",
        "renderImage",
        "setPopup",
        "clearPopup",
        "update",
        "render",
        "loop",
        "update",
        "render",
        "click",
        "hide",
        "restore",
        "destroy",
        "hide",
        "restore",
        "destroy",
        "restore",
        "destroy",
        "setResetAllLevelsPopup",
        "restore",
        "destroy",
        "scroll",
        "highestLevelUnlocked",
        "updateButtonBgs",
        "update",
        "hide",
        "restore",
        "destroy",
        "update",
        "render",
        "restore",
        "destroy",
        "click",
        "setResetLevelPopup",
        "update",
        "render",
        "enterState",
        "getState",
        "enterPreviousState",
        "currentState",
        "render",
        "update",
        "render",
        "colourTurnsMeOn",
        "maxdir",
        "click",
        "hover",
        "update",
        "render",
        "addLaser",
        "removeAllLasers",
        "getNextType",
        "addLaser",
        "addLaser",
        "click",
        "update",
        "addLaser",
        "numOfReceptors",
        "click",
        "update",
        "allReceptorsOn",
        "render",
        "addLaser",
        "removeAllLasers",
        "loadDefaultLevel",
        "clear",
        "getTile",
        "update",
        "render",
        "click",
        "checkCompleted",
        "loadLevelFromMemory",
        "resetAll",
        "reset",
        "removeFromMemory",
        "saveToMemory",
        "saveCompletedLevelsToMemory",
        "loadCompletedLevelsFromMemory",
        "getLevelString",
        "anyArrayToTileArray",
        "getNewDefaultTile",
        "copy",
        "toggleMute",
        "play",
        "getMessage",
        "getBoolShorthand",
        "getColourShorthand",
        "getColourLonghand",
        "decimalToHex",
        "hexToDecimal",
        "parseBool",
        "clockwise",
        "anticlockwise",
        "add",
        "sub",
        "opposite",
        "keyPressed",
        "boardClick"
    ],
    "classes": [
        "Game",
        "BasicState",
        "MainMenuState",
        "AboutState",
        "OptionState",
        "LevelSelectState",
        "GameState",
        "StateManager",
        "Laser",
        "Receptor",
        "Tile",
        "BlankTile",
        "MirrorTile",
        "PointerTile",
        "ReceptorTile",
        "Level",
        "Sound",
        "Colour",
        "Direction"
    ]
}