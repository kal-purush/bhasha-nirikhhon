{
    "identifiers": [
        "Listener",
        "ContainerHost",
        "Amqp",
        "Amqp",
        "Framing",
        "Amqp",
        "Listener",
        "Amqp",
        "Types",
        "Threading",
        "Tasks",
        "args",
        "args",
        "Length",
        "address",
        "args",
        "Uri",
        "address",
        "ContainerHost",
        "Uri",
        "addressUri",
        "addressUri",
        "UserInfo",
        "host",
        "Open",
        "WriteLine",
        "addressUri",
        "Host",
        "addressUri",
        "Port",
        "host",
        "RegisterLinkProcessor",
        "LinkProcessor",
        "WriteLine",
        "WriteLine",
        "ReadLine",
        "host",
        "Close",
        "ILinkProcessor",
        "AttachContext",
        "attachContext",
        "ProcessAsync",
        "attachContext",
        "AttachContext",
        "attachContext",
        "Delay",
        "attachContext",
        "Attach",
        "LinkName",
        "attachContext",
        "Complete",
        "Condition",
        "ErrorCode",
        "InvalidField",
        "Description",
        "attachContext",
        "Link",
        "Role",
        "attachContext",
        "Complete",
        "IncomingLinkEndpoint",
        "attachContext",
        "Complete",
        "OutgoingLinkEndpoint",
        "LinkEndpoint",
        "MessageContext",
        "messageContext",
        "messageContext",
        "Complete",
        "FlowContext",
        "flowContext",
        "DispositionContext",
        "dispositionContext",
        "LinkEndpoint",
        "FlowContext",
        "flowContext",
        "i",
        "flowContext",
        "Messages",
        "i",
        "Message",
        "message",
        "Properties",
        "Properties",
        "Subject",
        "flowContext",
        "Link",
        "SendMessage",
        "message",
        "DispositionContext",
        "dispositionContext",
        "dispositionContext",
        "Settled",
        "dispositionContext",
        "Link",
        "DisposeMessage",
        "dispositionContext",
        "Message",
        "Accepted"
    ],
    "literals": [
        "\"amqp://guest:guest@127.0.0.1:5672\"",
        "\"Container host is listening on {0}:{1}\"",
        "\"Link processor is registered\"",
        "\"Press enter key to exist...\"",
        "\"\"",
        "\"Empty link name not allowed.\"",
        "\"Hello!\"",
        "\"Welcome Message\""
    ],
    "variables": [
        "address",
        "Uri",
        "addressUri",
        "ContainerHost",
        "host",
        "task",
        "i",
        "message"
    ],
    "comments": [
        "------------------------------------------------------------------------------------",
        "Copyright (c) Microsoft Corporation",
        "All rights reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"\"License\"\"); you may not use this",
        "file except in compliance with the License. You may obtain a copy of the License at",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,",
        "EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED WARRANTIES OR",
        "CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR",
        "NON-INFRINGEMENT.",
        "",
        "See the Apache Version 2.0 License for specific language governing permissions and",
        "limitations under the License.",
        "------------------------------------------------------------------------------------",
        "uncomment the following to write frame traces",
        "Trace.TraceLevel = TraceLevel.Frame;",
        "Trace.TraceListener = (f, a) => Console.WriteLine(DateTime.Now.ToString(\"[hh:ss.fff]\") + \" \" + string.Format(f, a));",
        "start a task to process this request",
        "simulating an async operation required to complete the task",
        "how to fail the attach request",
        "this can also be done when an async operation, if required, is done"
    ],
    "docstrings": [],
    "functions": [
        "Main",
        "Process",
        "ProcessAsync",
        "OnMessage",
        "OnFlow",
        "OnDisposition",
        "OnFlow",
        "OnDisposition"
    ],
    "classes": [
        "Program",
        "LinkProcessor",
        "IncomingLinkEndpoint",
        "OutgoingLinkEndpoint"
    ]
}