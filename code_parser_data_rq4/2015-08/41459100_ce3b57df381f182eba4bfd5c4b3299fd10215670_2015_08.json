{
    "identifiers": [
        "abc",
        "json",
        "ImportError",
        "simplejson",
        "json",
        "logging",
        "os",
        "keystoneclient",
        "access",
        "keystoneclient",
        "auth",
        "identity",
        "BaseIdentityPlugin",
        "requests",
        "six",
        "neutronclient",
        "common",
        "exceptions",
        "neutronclient",
        "common",
        "utils",
        "neutronclient",
        "openstack",
        "common",
        "gettextutils",
        "_",
        "logging",
        "getLogger",
        "os",
        "environ",
        "get",
        "logging",
        "StreamHandler",
        "_logger",
        "setLevel",
        "logging",
        "DEBUG",
        "_logger",
        "addHandler",
        "ch",
        "logging",
        "DEBUG",
        "logging",
        "WARNING",
        "logging",
        "getLogger",
        "setLevel",
        "_requests_log_level",
        "six",
        "add_metaclass",
        "abc",
        "ABCMeta",
        "url",
        "method",
        "body",
        "content_type",
        "headers",
        "kwargs",
        "headers",
        "content_type",
        "CONTENT_TYPE",
        "headers",
        "setdefault",
        "content_type",
        "body",
        "headers",
        "setdefault",
        "content_type",
        "_request",
        "url",
        "method",
        "body",
        "body",
        "headers",
        "headers",
        "kwargs",
        "abc",
        "abstractmethod",
        "url",
        "method",
        "kwargs",
        "abc",
        "abstractmethod",
        "url",
        "method",
        "body",
        "headers",
        "kwargs",
        "AbstractHTTPClient",
        "username",
        "user_id",
        "tenant_name",
        "tenant_id",
        "password",
        "auth_url",
        "token",
        "region_name",
        "timeout",
        "endpoint_url",
        "insecure",
        "endpoint_type",
        "auth_strategy",
        "ca_cert",
        "log_credentials",
        "service_type",
        "kwargs",
        "username",
        "user_id",
        "tenant_name",
        "tenant_id",
        "password",
        "auth_url",
        "rstrip",
        "auth_url",
        "service_type",
        "endpoint_type",
        "region_name",
        "timeout",
        "token",
        "endpoint_url",
        "auth_strategy",
        "log_credentials",
        "insecure",
        "ca_cert",
        "ca_cert",
        "args",
        "kwargs",
        "kargs",
        "setdefault",
        "kwargs",
        "get",
        "kargs",
        "USER_AGENT",
        "kwargs",
        "kwargs",
        "utils",
        "safe_encode_list",
        "args",
        "utils",
        "safe_encode_dict",
        "kargs",
        "log_credentials",
        "kargs",
        "_strip_credentials",
        "kargs",
        "utils",
        "http_log_req",
        "_logger",
        "args",
        "log_kargs",
        "request",
        "args",
        "kargs",
        "requests",
        "exceptions",
        "SSLError",
        "e",
        "exceptions",
        "SslCertificateValidationError",
        "reason",
        "e",
        "e",
        "_logger",
        "debug",
        "e",
        "exceptions",
        "ConnectionFailed",
        "reason",
        "e",
        "utils",
        "http_log_resp",
        "_logger",
        "resp",
        "body",
        "resp",
        "status_code",
        "exceptions",
        "Unauthorized",
        "message",
        "body",
        "resp",
        "body",
        "kwargs",
        "kwargs",
        "get",
        "password",
        "kwargs",
        "copy",
        "kwargs",
        "replace",
        "password",
        "log_kwargs",
        "kwargs",
        "auth_token",
        "authenticate",
        "endpoint_url",
        "_get_endpoint_url",
        "url",
        "method",
        "body",
        "headers",
        "kwargs",
        "headers",
        "USER_AGENT",
        "requests",
        "request",
        "method",
        "url",
        "data",
        "body",
        "headers",
        "headers",
        "verify",
        "verify_cert",
        "timeout",
        "timeout",
        "kwargs",
        "resp",
        "resp",
        "text",
        "url",
        "method",
        "kwargs",
        "authenticate_and_fetch_endpoint_url",
        "kwargs",
        "setdefault",
        "auth_token",
        "kwargs",
        "auth_token",
        "_cs_request",
        "endpoint_url",
        "url",
        "method",
        "kwargs",
        "resp",
        "body",
        "exceptions",
        "Unauthorized",
        "authenticate",
        "kwargs",
        "setdefault",
        "kwargs",
        "auth_token",
        "_cs_request",
        "endpoint_url",
        "url",
        "method",
        "kwargs",
        "resp",
        "body",
        "body",
        "access",
        "AccessInfo",
        "factory",
        "body",
        "body",
        "auth_ref",
        "service_catalog",
        "auth_ref",
        "auth_token",
        "auth_ref",
        "tenant_id",
        "auth_ref",
        "user_id",
        "endpoint_url",
        "service_catalog",
        "url_for",
        "attr",
        "filter_value",
        "region_name",
        "service_type",
        "service_type",
        "endpoint_type",
        "endpoint_type",
        "user_id",
        "user_id",
        "password",
        "username",
        "password",
        "tenant_id",
        "creds",
        "tenant_id",
        "creds",
        "tenant_name",
        "auth_url",
        "exceptions",
        "NoAuthURLProvided",
        "auth_url",
        "_cs_request",
        "token_url",
        "body",
        "json",
        "dumps",
        "body",
        "content_type",
        "allow_redirects",
        "resp",
        "status_code",
        "exceptions",
        "Unauthorized",
        "message",
        "resp_body",
        "resp_body",
        "json",
        "loads",
        "resp_body",
        "ValueError",
        "_extract_service_catalog",
        "resp_body",
        "endpoint_url",
        "_",
        "exceptions",
        "Unauthorized",
        "message",
        "message",
        "auth_strategy",
        "_authenticate_keystone",
        "auth_strategy",
        "_authenticate_noauth",
        "_",
        "auth_strategy",
        "exceptions",
        "Unauthorized",
        "message",
        "err_msg",
        "auth_url",
        "exceptions",
        "NoAuthURLProvided",
        "auth_url",
        "auth_token",
        "_cs_request",
        "url",
        "exceptions",
        "Unauthorized",
        "authenticate",
        "endpoint_url",
        "json",
        "loads",
        "body",
        "endpoint",
        "body",
        "get",
        "endpoint",
        "endpoint",
        "get",
        "region_name",
        "endpoint_type",
        "endpoint",
        "exceptions",
        "EndpointTypeNotFound",
        "type_",
        "endpoint_type",
        "endpoint",
        "endpoint_type",
        "exceptions",
        "EndpointNotFound",
        "auth_token",
        "auth_tenant_id",
        "auth_user_id",
        "endpoint_url",
        "AbstractHTTPClient",
        "session",
        "auth",
        "service_type",
        "region_name",
        "session",
        "auth",
        "service_type",
        "region_name",
        "url",
        "method",
        "body",
        "headers",
        "kwargs",
        "kwargs",
        "setdefault",
        "USER_AGENT",
        "kwargs",
        "setdefault",
        "auth",
        "kwargs",
        "setdefault",
        "kwargs",
        "setdefault",
        "endpoint_filter",
        "setdefault",
        "endpoint_filter",
        "setdefault",
        "service_type",
        "endpoint_filter",
        "setdefault",
        "region_name",
        "utils",
        "safe_encode_dict",
        "kwargs",
        "session",
        "request",
        "url",
        "method",
        "data",
        "body",
        "headers",
        "headers",
        "kwargs",
        "resp",
        "resp",
        "text",
        "url",
        "method",
        "kwargs",
        "kwargs",
        "setdefault",
        "request",
        "url",
        "method",
        "kwargs",
        "session",
        "get_endpoint",
        "auth",
        "service_type",
        "service_type",
        "region_name",
        "region_name",
        "authenticate",
        "isinstance",
        "auth",
        "BaseIdentityPlugin",
        "exceptions",
        "NeutronClientException",
        "message",
        "msg",
        "auth",
        "get_access",
        "session",
        "auth",
        "get_endpoint",
        "session",
        "service_type",
        "service_type",
        "region_name",
        "region_name",
        "access_info",
        "auth_token",
        "access_info",
        "tenant_id",
        "access_info",
        "user_id",
        "endpoint_url",
        "username",
        "user_id",
        "tenant_name",
        "tenant_id",
        "password",
        "auth_url",
        "token",
        "region_name",
        "timeout",
        "endpoint_url",
        "insecure",
        "endpoint_type",
        "log_credentials",
        "auth_strategy",
        "ca_cert",
        "service_type",
        "session",
        "auth",
        "session",
        "SessionClient",
        "session",
        "session",
        "auth",
        "auth",
        "endpoint_type",
        "service_type",
        "service_type",
        "region_name",
        "region_name",
        "HTTPClient",
        "username",
        "username",
        "password",
        "password",
        "tenant_id",
        "tenant_id",
        "tenant_name",
        "tenant_name",
        "user_id",
        "user_id",
        "auth_url",
        "auth_url",
        "token",
        "token",
        "endpoint_url",
        "endpoint_url",
        "insecure",
        "insecure",
        "timeout",
        "timeout",
        "region_name",
        "region_name",
        "endpoint_type",
        "endpoint_type",
        "service_type",
        "service_type",
        "ca_cert",
        "ca_cert",
        "log_credentials",
        "log_credentials",
        "auth_strategy",
        "auth_strategy"
    ],
    "literals": [
        "'NEUTRONCLIENT_DEBUG'",
        "\"requests\"",
        "'python-neutronclient'",
        "'application/json'",
        "'Accept'",
        "'Content-Type'",
        "'publicURL'",
        "'keystone'",
        "'network'",
        "'/'",
        "'headers'",
        "'headers'",
        "'headers'",
        "'User-Agent'",
        "'body'",
        "'body'",
        "'body'",
        "\"throwing ConnectionFailed : %s\"",
        "'body'",
        "'body'",
        "'body'",
        "'REDACTED'",
        "'User-Agent'",
        "'headers'",
        "\"\"",
        "'headers'",
        "'X-Auth-Token'",
        "'headers'",
        "'headers'",
        "'X-Auth-Token'",
        "'region'",
        "'userId'",
        "'password'",
        "'username'",
        "'password'",
        "'auth'",
        "'passwordCredentials'",
        "'tenantId'",
        "'auth'",
        "'passwordCredentials'",
        "'tenantName'",
        "\"/tokens\"",
        "\"POST\"",
        "\"application/json\"",
        "'For \"noauth\" authentication strategy, the endpoint '",
        "'must be specified either in the constructor or '",
        "'using --os-url'",
        "'keystone'",
        "'noauth'",
        "'Unknown auth strategy: %s'",
        "'/tokens/%s/endpoints'",
        "\"GET\"",
        "'endpoints'",
        "'type'",
        "'network'",
        "'region'",
        "'auth_token'",
        "'auth_tenant_id'",
        "'auth_user_id'",
        "'endpoint_url'",
        "'user_agent'",
        "'auth'",
        "'authenticated'",
        "'endpoint_filter'",
        "'interface'",
        "'service_type'",
        "'region_name'",
        "'authenticated'",
        "'Auth info not available. Auth plugin is not an identity '",
        "'auth plugin.'",
        "'auth_token'",
        "'auth_tenant_id'",
        "'auth_user_id'",
        "'endpoint_url'",
        "'publicURL'",
        "'keystone'",
        "'network'"
    ],
    "variables": [
        "_logger",
        "ch",
        "_requests_log_level",
        "_requests_log_level",
        "USER_AGENT",
        "CONTENT_TYPE",
        "headers",
        "content_type",
        "username",
        "user_id",
        "tenant_name",
        "tenant_id",
        "password",
        "auth_url",
        "service_type",
        "endpoint_type",
        "region_name",
        "timeout",
        "auth_token",
        "auth_tenant_id",
        "auth_user_id",
        "endpoint_url",
        "auth_strategy",
        "log_credentials",
        "verify_cert",
        "verify_cert",
        "kargs",
        "kargs",
        "args",
        "kargs",
        "log_kargs",
        "log_kargs",
        "resp",
        "body",
        "log_kwargs",
        "log_kwargs",
        "endpoint_url",
        "headers",
        "headers",
        "resp",
        "auth_token",
        "resp",
        "body",
        "resp",
        "body",
        "auth_ref",
        "service_catalog",
        "auth_token",
        "auth_tenant_id",
        "auth_user_id",
        "endpoint_url",
        "creds",
        "creds",
        "body",
        "body",
        "token_url",
        "resp",
        "resp_body",
        "resp_body",
        "resp_body",
        "message",
        "err_msg",
        "url",
        "resp",
        "body",
        "body",
        "session",
        "auth",
        "service_type",
        "region_name",
        "auth_token",
        "endpoint_url",
        "endpoint_filter",
        "kwargs",
        "resp",
        "endpoint_url",
        "msg",
        "access_info",
        "endpoint_url"
    ],
    "comments": [
        "Copyright 2012 OpenStack Foundation.",
        "All Rights Reserved",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License.",
        "",
        "Wrap the low-level connection error (socket timeout, redirect",
        "limit, decompression error, etc) into our custom high-level",
        "connection exception (it is excepted in the upper layers of code)",
        "Perform the request once. If we get a 401 back then it",
        "might be because the auth token expired, so try to",
        "re-authenticate and try again. If it still fails, bail.",
        "rollback to authenticate() to handle case when neutron client",
        "is initialized just before the token is expired",
        "This method is provided for backward compatibility only.",
        "We only care about setting the service endpoint.",
        "This method is provided for backward compatibility only.",
        "We only care about setting the service endpoint.",
        "This method is provided for backward compatibility only.",
        "FIXME(bklei): Should refactor this to use kwargs and only",
        "explicitly list arguments that are not None.",
        "FIXME(bklei): username and password are now optional. Need",
        "to test that they were provided in this mode.  Should also",
        "refactor to use kwargs."
    ],
    "docstrings": [
        "\"\"\"Request without authentication.\"\"\"",
        "\"\"\"Request with authentication.\"\"\"",
        "\"\"\"Request without authentication nor headers population.\"\"\"",
        "\"\"\"Handles the REST calls and responses, include authentication.\"\"\"",
        "\"\"\"Set the client's service catalog from the response data.\"\"\""
    ],
    "functions": [
        "request",
        "do_request",
        "_request",
        "_cs_request",
        "_strip_credentials",
        "authenticate_and_fetch_endpoint_url",
        "_request",
        "do_request",
        "_extract_service_catalog",
        "_authenticate_keystone",
        "_authenticate_noauth",
        "authenticate",
        "_get_endpoint_url",
        "get_auth_info",
        "_request",
        "do_request",
        "authenticate",
        "authenticate_and_fetch_endpoint_url",
        "get_auth_info",
        "construct_http_client"
    ],
    "classes": [
        "AbstractHTTPClient",
        "HTTPClient",
        "SessionClient"
    ]
}