{
    "identifiers": [
        "ConfigParser",
        "hashlib",
        "fileinput",
        "glob",
        "os",
        "shutil",
        "subprocess",
        "sys",
        "yaml",
        "netaddr",
        "inv",
        "args",
        "gateway",
        "args",
        "hostname",
        "inv",
        "args",
        "loopback",
        "inv",
        "gateway",
        "netaddr",
        "IPNetwork",
        "args",
        "registered",
        "inv",
        "netaddr",
        "IPNetwork",
        "args",
        "unregistered",
        "inv",
        "netaddr",
        "IPNetwork",
        "args",
        "inv",
        "netaddr",
        "IPNetwork",
        "args",
        "external",
        "inv",
        "netaddr",
        "IPNetwork",
        "args",
        "lan",
        "inv",
        "netaddr",
        "IPNetwork",
        "args",
        "wireless",
        "inv",
        "table",
        "table1",
        "index1",
        "max",
        "len",
        "row",
        "index1",
        "row",
        "table1",
        "i",
        "len",
        "table",
        "col_paddings",
        "append",
        "get_max_width",
        "table",
        "i",
        "row",
        "table",
        "row",
        "ljust",
        "col_paddings",
        "i",
        "len",
        "row",
        "row",
        "i",
        "rjust",
        "col_paddings",
        "i",
        "col",
        "cmd",
        "subprocess",
        "Popen",
        "cmd",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "cmdline",
        "communicate",
        "cmdline",
        "returncode",
        "command",
        "inventory",
        "group",
        "hostname",
        "inventory",
        "cmd",
        "append",
        "group",
        "hostname",
        "cmd",
        "append",
        "hostname",
        "cmd",
        "append",
        "cmd",
        "append",
        "cmd",
        "append",
        "command",
        "shell",
        "cmd",
        "inventory",
        "playbook",
        "hostname",
        "tags",
        "inventory",
        "hostname",
        "cmd",
        "append",
        "hostname",
        "tags",
        "cmd",
        "append",
        "cmd",
        "append",
        "tags",
        "cmd",
        "append",
        "playbook",
        "shell",
        "cmd",
        "address",
        "shell",
        "address",
        "hostname",
        "easyvars",
        "ansible_tpl",
        "gateway",
        "source",
        "easyvars",
        "hostname",
        "hostname",
        "gateway",
        "hostname",
        "hostname",
        "subprocess",
        "Popen",
        "cmd",
        "cwd",
        "environement",
        "env",
        "environement",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "pkitool",
        "communicate",
        "os",
        "path",
        "getsize",
        "environement",
        "hostname",
        "key",
        "glob",
        "glob",
        "environement",
        "hostname",
        "shutil",
        "copy2",
        "key",
        "ansible_tpl",
        "hostname",
        "easyvars",
        "client_tpl",
        "gw_tpl",
        "gateway",
        "source",
        "easyvars",
        "hostname",
        "hostname",
        "os",
        "path",
        "isfile",
        "environement",
        "hostname",
        "hashlib",
        "sha256",
        "open",
        "environement",
        "crl",
        "crl",
        "read",
        "oldhash",
        "update",
        "buf",
        "subprocess",
        "Popen",
        "hostname",
        "cwd",
        "environement",
        "env",
        "environement",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "pkitool",
        "wait",
        "hashlib",
        "sha256",
        "open",
        "environement",
        "crl",
        "crl",
        "read",
        "newhash",
        "update",
        "buf",
        "oldhash",
        "newhash",
        "cert",
        "glob",
        "glob",
        "environement",
        "hostname",
        "os",
        "remove",
        "cert",
        "gateway",
        "cert",
        "glob",
        "glob",
        "client_tpl",
        "hostname",
        "os",
        "remove",
        "cert",
        "shutil",
        "copy2",
        "environement",
        "gw_tpl",
        "OSError",
        "hostname",
        "open",
        "hostsfile",
        "hostsfile",
        "readlines",
        "item",
        "hosts",
        "hostname",
        "item",
        "hostname",
        "known_hosts",
        "open",
        "known_hosts",
        "khfile",
        "khfile",
        "readlines",
        "item",
        "hosts",
        "hostname",
        "item",
        "hostname",
        "known_hosts",
        "open",
        "yaml",
        "load",
        "subprocess",
        "Popen",
        "group_vars",
        "hostname",
        "known_hosts",
        "shell",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "ssh",
        "wait",
        "ssh",
        "returncode",
        "hostname",
        "known_hosts",
        "line",
        "fileinput",
        "input",
        "known_hosts",
        "inplace",
        "line",
        "strip",
        "hostname",
        "line",
        "line",
        "found",
        "ipaddress",
        "hostname",
        "open",
        "hosts",
        "hosts",
        "writelines",
        "ipaddress",
        "hostname",
        "hostname",
        "open",
        "hostsfile",
        "hostsfile",
        "readlines",
        "open",
        "hostsfile",
        "line",
        "hosts",
        "hostname",
        "line",
        "hostsfile",
        "write",
        "line",
        "script",
        "subprocess",
        "Popen",
        "script",
        "stdout",
        "subprocess",
        "PIPE",
        "shell",
        "pipe",
        "communicate",
        "line",
        "split",
        "line",
        "data",
        "splitlines",
        "env",
        "os",
        "geteuid",
        "group",
        "inv_file",
        "hostvars_dir",
        "ConfigParser",
        "SafeConfigParser",
        "allow_no_value",
        "inventory",
        "read",
        "inv_file",
        "inventory",
        "has_section",
        "group",
        "hosts",
        "inventory",
        "items",
        "group",
        "host",
        "hosts",
        "os",
        "path",
        "isfile",
        "hostvars_dir",
        "host",
        "parse_config",
        "hostvars_dir",
        "host",
        "group",
        "full_inv",
        "append",
        "host",
        "variables",
        "variables",
        "variables",
        "variables",
        "variables",
        "group",
        "full_inv",
        "append",
        "host",
        "variables",
        "variables",
        "variables",
        "variables",
        "sys",
        "exit",
        "format",
        "group",
        "full_inv",
        "hostname",
        "group",
        "inv_file",
        "ConfigParser",
        "SafeConfigParser",
        "allow_no_value",
        "inventory",
        "read",
        "inv_file",
        "inventory",
        "has_section",
        "group",
        "inventory",
        "add_section",
        "group",
        "inventory",
        "has_option",
        "group",
        "hostname",
        "sys",
        "exit",
        "format",
        "hostname",
        "inventory",
        "group",
        "hostname",
        "inventory",
        "has_option",
        "group",
        "inventory",
        "group",
        "open",
        "inv_file",
        "inv",
        "inventory",
        "write",
        "inv",
        "hostname",
        "group",
        "inv_file",
        "ConfigParser",
        "SafeConfigParser",
        "allow_no_value",
        "inventory",
        "read",
        "inv_file",
        "inventory",
        "has_option",
        "group",
        "hostname",
        "inventory",
        "remove_option",
        "group",
        "hostname",
        "inventory",
        "options",
        "group",
        "inventory",
        "remove_section",
        "group",
        "inventory",
        "remove_option",
        "group",
        "open",
        "inv_file",
        "inv",
        "inventory",
        "write",
        "inv",
        "filename",
        "option_char",
        "comment_char",
        "open",
        "filename",
        "config",
        "line",
        "config",
        "comment_char",
        "line",
        "line",
        "split",
        "comment_char",
        "option_char",
        "line",
        "line",
        "split",
        "option_char",
        "option",
        "strip",
        "value",
        "strip",
        "value",
        "options"
    ],
    "literals": [
        "\"EINE module for all functions\"",
        "\"This check if some of the args members already exist in list inv\"",
        "\"Get the maximum width of the given column index\"",
        "\"This send a shell command and return exit code and output\"",
        "\"This send an Ansible command to group/hostname\"",
        "'ansible'",
        "'-i'",
        "'--limit='",
        "'--sudo'",
        "'-a'",
        "\"This execute ansible-playbook template\"",
        "'ansible-playbook'",
        "'-i'",
        "'--limit='",
        "'--tags'",
        "\"This test online status by a simple ping\"",
        "'ping'",
        "'-c 2'",
        "\"This generate certificate using pkitool\"",
        "'KEY_CN'",
        "'KEY_NAME'",
        "\"./pkitool\"",
        "\"--server\"",
        "\"./pkitool\"",
        "'EASY_RSA'",
        "'KEY_DIR'",
        "'/'",
        "'.crt'",
        "'KEY_DIR'",
        "'/'",
        "'.*'",
        "'/files/usr/local/etc/openvpn/'",
        "\"This delete host's certificate\"",
        "'KEY_CN'",
        "'KEY_NAME'",
        "'KEY_DIR'",
        "'/'",
        "'.key'",
        "'KEY_DIR'",
        "'/crl.pem'",
        "'rb'",
        "\"./revoke-full\"",
        "'EASY_RSA'",
        "'KEY_DIR'",
        "'/crl.pem'",
        "'rb'",
        "'KEY_DIR'",
        "'/'",
        "'.*'",
        "'/files/usr/local/etc/openvpn/'",
        "'.*'",
        "'KEY_DIR'",
        "'/crl.pem'",
        "'/files/usr/local/etc/openvpn'",
        "\"This check if parameter hostname is present in /etc/hosts\"",
        "'/etc/hosts'",
        "'r'",
        "\"This check if hostname is present in \"",
        "'r'",
        "\"This add host SSH key to known_hosts\"",
        "'/usr/local/etc/ansible/group_vars/freebsd'",
        "'r'",
        "'ssh-keyscan -t ed25519 -p '",
        "'ansible_ssh_port'",
        "' '",
        "' >> '",
        "\"This delete host SSH key from known_hosts\"",
        "\"This add entry to the /etc/hosts\"",
        "'/etc/hosts'",
        "'a'",
        "'\\t'",
        "'\\n'",
        "\"This delete lines containing hostname\"",
        "'/etc/hosts'",
        "'r'",
        "'/etc/hosts'",
        "'w'",
        "\" Source variables from a shell script \"",
        "\". %s 2>&1 >/dev/null; env\"",
        "\"=\"",
        "\" This check if root user\"",
        "\" This get all inventory item of group\"",
        "'/'",
        "'/'",
        "':'",
        "'-'",
        "'vpn_wifi_routers'",
        "'if_lo_inet4_addr'",
        "'if_lan_inet4_addr'",
        "'/'",
        "'if_lan_inet4_prefix'",
        "'if_wifi_inet4_addr'",
        "'/'",
        "'if_wifi_inet4_prefix'",
        "'gateways'",
        "'if_lo_inet4_addr'",
        "'if_int_inet4_addr'",
        "'registered_inet4_net'",
        "'unregistered_inet4_net'",
        "'ERROR: Unknown group {}'",
        "\" This add host to the ansible inventory file\"",
        "'There is already a client named {} in inventory'",
        "'freebsd:children'",
        "'freebsd:children'",
        "'w'",
        "\" This remove host from the ansible inventory file\"",
        "'freebsd:children'",
        "'w'",
        "\" This parse a configuration file and return a dict \""
    ],
    "variables": [
        "col_paddings",
        "col",
        "cmdline",
        "cmd",
        "cmd",
        "environement",
        "environement",
        "environement",
        "cmd",
        "cmd",
        "pkitool",
        "environement",
        "environement",
        "environement",
        "oldhash",
        "buf",
        "pkitool",
        "newhash",
        "buf",
        "hosts",
        "hosts",
        "group_vars",
        "ssh",
        "found",
        "line",
        "found",
        "hosts",
        "pipe",
        "data",
        "env",
        "inventory",
        "full_inv",
        "variables",
        "inventory",
        "inventory",
        "options",
        "line",
        "comment",
        "option",
        "value",
        "option",
        "value",
        "options",
        "option"
    ],
    "comments": [
        "!/usr/bin/env python2.7",
        "-*- coding: utf-8 -*-",
        "",
        "Copyright (c) 2014-2015, Orange",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions",
        "are met:",
        "1. Redistributions of source code must retain the above copyright",
        "notice, this list of conditions and the following disclaimer.",
        "2. Redistributions in binary form must reproduce the above copyright",
        "notice, this list of conditions and the following disclaimer in the",
        "documentation and/or other materials provided with the distribution.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND",
        "ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",
        "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",
        "ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE",
        "FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL",
        "DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS",
        "OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)",
        "HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT",
        "LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY",
        "OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF",
        "SUCH DAMAGE.",
        "",
        "Permit to parse INI file",
        "Used for hashing CRL",
        "Used for replacing line in file",
        "Permit to use wildecard",
        "Permit to call os.geteuid",
        "Permit to copy file",
        "Call external commands",
        "Permit to call sys.exit",
        "Permit to load ansible YAML file (just for the SSH port)",
        "Permit to convert IP address very easly",
        "left col",
        "rest of the cols",
        "pkitool need environnement variable defined in easy-rsa.vars",
        "We need to load and parse this file to a list for being by popen",
        "Because we can't use the pktitool returncode (allways failed)",
        "we need to check if crt size greater than 0",
        "we start by getting the hash fo the CRL because revoke-full script",
        "allways return failed",
        "out = pkitool.communicate()[0]",
        "We recalculate the has of the CRL:",
        "delete certificate files in KEY_DIR",
        "delete certificate files in client template",
        "Update the CRL on the gateways template",
        "shutil.copy fails because os.chmod return \"Operation not permitted\"",
        "shutil.copy2 fails because os.utime return \"Operation not permitted\"",
        "Can't push permission on crl.pem",
        "But for that we need to know the SSH port to used first",
        "out = ssh.communicate()[0]",
        "Can't use ssh-keygen -R: It's buggy",
        "Insipred from :",
        "http://pythonwise.blogspot.fr/2010/04/sourcing-shell-script.html",
        "Loading Parser",
        "Adding section and client",
        "Loading Parser",
        "Removing client, and section if empty after",
        "http://www.decalage.info/fr/python/configparser",
        "First, remove comments:",
        "split on comment char, keep only the part before",
        "Second, find lines with an option=value:",
        "split on option char:",
        "strip spaces:",
        "store in dictionary:"
    ],
    "docstrings": [
        "\"\"\"Prints out a table of data, padded for alignment\n    @param out: Output stream (file-like object)\n    @param table: The table to print. A list of lists.\n    Each row must have the same number of columns.\n    ginstrom.com/scribbles/2007/09/04/pretty-printing-a-table-in-python/\"\"\""
    ],
    "functions": [
        "check_duplicate",
        "pprint_table",
        "get_max_width",
        "shell",
        "ansible",
        "ansible_playbook",
        "is_online",
        "cert_add",
        "cert_del",
        "is_in_hosts",
        "is_in_sshkey",
        "sshkey_add",
        "sshkey_del",
        "hosts_add",
        "hosts_del",
        "source",
        "is_root",
        "inventory_list",
        "inventory_add",
        "inventory_del",
        "parse_config"
    ],
    "classes": []
}