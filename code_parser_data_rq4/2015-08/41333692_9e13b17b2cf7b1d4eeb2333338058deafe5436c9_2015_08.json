{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Web",
        "Web",
        "Http",
        "Net",
        "Http",
        "Microsoft",
        "AspNet",
        "Identity",
        "Microsoft",
        "AspNet",
        "Identity",
        "Owin",
        "Threading",
        "Tasks",
        "Security",
        "Claims",
        "SerPro",
        "API",
        "Models",
        "SerPro",
        "API",
        "Infrastructure",
        "Microsoft",
        "AspNet",
        "Identity",
        "EntityFramework",
        "SerPro",
        "API",
        "Controllers",
        "RoutePrefix",
        "BaseApiController",
        "Authorize",
        "Roles",
        "Route",
        "User",
        "Identity",
        "Security",
        "Claims",
        "ClaimsIdentity",
        "Ok",
        "AppUserManager",
        "Users",
        "ToList",
        "Select",
        "TheModelFactory",
        "Create",
        "u",
        "Authorize",
        "Roles",
        "Route",
        "Name",
        "IHttpActionResult",
        "Id",
        "AppUserManager",
        "FindByIdAsync",
        "Id",
        "user",
        "Ok",
        "TheModelFactory",
        "Create",
        "user",
        "NotFound",
        "Authorize",
        "Roles",
        "Route",
        "IHttpActionResult",
        "username",
        "AppUserManager",
        "FindByNameAsync",
        "username",
        "user",
        "Ok",
        "TheModelFactory",
        "Create",
        "user",
        "NotFound",
        "AllowAnonymous",
        "Route",
        "IHttpActionResult",
        "CreateUserBindingModel",
        "createUserModel",
        "ModelState",
        "IsValid",
        "BadRequest",
        "ModelState",
        "UserMaster",
        "user",
        "UserName",
        "createUserModel",
        "Username",
        "user",
        "Email",
        "createUserModel",
        "Email",
        "user",
        "FirstName",
        "createUserModel",
        "FirstName",
        "user",
        "LastName",
        "createUserModel",
        "LastName",
        "user",
        "JoinDate",
        "Now",
        "IdentityRole",
        "Name",
        "createUserModel",
        "RoleName",
        "AppRoleManager",
        "FindByNameAsync",
        "createUserModel",
        "RoleName",
        "AppRoleManager",
        "CreateAsync",
        "role",
        "roleResult",
        "Succeeded",
        "GetErrorResult",
        "roleResult",
        "AppUserManager",
        "CreateAsync",
        "user",
        "createUserModel",
        "Password",
        "addUserResult",
        "Succeeded",
        "GetErrorResult",
        "addUserResult",
        "AppUserManager",
        "AddToRoleAsync",
        "user",
        "Id",
        "role",
        "Name",
        "ToString",
        "addToRoleResult",
        "Succeeded",
        "GetErrorResult",
        "addToRoleResult",
        "Ok",
        "AllowAnonymous",
        "HttpGet",
        "Route",
        "Name",
        "IHttpActionResult",
        "userId",
        "code",
        "IsNullOrWhiteSpace",
        "userId",
        "IsNullOrWhiteSpace",
        "code",
        "ModelState",
        "AddModelError",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "ConfirmEmailAsync",
        "userId",
        "code",
        "result",
        "Succeeded",
        "Ok",
        "GetErrorResult",
        "result",
        "Authorize",
        "Route",
        "IHttpActionResult",
        "ChangePasswordBindingModel",
        "model",
        "ModelState",
        "IsValid",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "ChangePasswordAsync",
        "User",
        "Identity",
        "GetUserId",
        "model",
        "OldPassword",
        "model",
        "NewPassword",
        "result",
        "Succeeded",
        "GetErrorResult",
        "result",
        "Ok",
        "Authorize",
        "Roles",
        "Route",
        "IHttpActionResult",
        "id",
        "AppUserManager",
        "FindByIdAsync",
        "id",
        "appUser",
        "AppUserManager",
        "DeleteAsync",
        "appUser",
        "result",
        "Succeeded",
        "GetErrorResult",
        "result",
        "Ok",
        "NotFound",
        "Authorize",
        "Roles",
        "Route",
        "HttpPut",
        "IHttpActionResult",
        "FromUri",
        "id",
        "FromBody",
        "rolesToAssign",
        "AppUserManager",
        "FindByIdAsync",
        "id",
        "appUser",
        "NotFound",
        "AppUserManager",
        "GetRolesAsync",
        "appUser",
        "Id",
        "rolesToAssign",
        "Except",
        "AppRoleManager",
        "Roles",
        "Select",
        "x",
        "Name",
        "ToArray",
        "rolesNotExists",
        "Count",
        "ModelState",
        "AddModelError",
        "Format",
        "Join",
        "rolesNotExists",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "RemoveFromRolesAsync",
        "appUser",
        "Id",
        "currentRoles",
        "ToArray",
        "removeResult",
        "Succeeded",
        "ModelState",
        "AddModelError",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "AddToRolesAsync",
        "appUser",
        "Id",
        "rolesToAssign",
        "addResult",
        "Succeeded",
        "ModelState",
        "AddModelError",
        "BadRequest",
        "ModelState",
        "Ok",
        "Authorize",
        "Roles",
        "Route",
        "HttpPut",
        "IHttpActionResult",
        "FromUri",
        "id",
        "FromBody",
        "ClaimBindingModel",
        "claimsToAssign",
        "ModelState",
        "IsValid",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "FindByIdAsync",
        "id",
        "appUser",
        "NotFound",
        "ClaimBindingModel",
        "claimModel",
        "claimsToAssign",
        "appUser",
        "Claims",
        "Any",
        "c",
        "ClaimType",
        "claimModel",
        "Type",
        "AppUserManager",
        "RemoveClaimAsync",
        "id",
        "ExtendedClaimsProvider",
        "CreateClaim",
        "claimModel",
        "Type",
        "claimModel",
        "Value",
        "AppUserManager",
        "AddClaimAsync",
        "id",
        "ExtendedClaimsProvider",
        "CreateClaim",
        "claimModel",
        "Type",
        "claimModel",
        "Value",
        "Ok",
        "Authorize",
        "Roles",
        "Route",
        "HttpPut",
        "IHttpActionResult",
        "FromUri",
        "id",
        "FromBody",
        "ClaimBindingModel",
        "claimsToRemove",
        "ModelState",
        "IsValid",
        "BadRequest",
        "ModelState",
        "AppUserManager",
        "FindByIdAsync",
        "id",
        "appUser",
        "NotFound",
        "ClaimBindingModel",
        "claimModel",
        "claimsToRemove",
        "appUser",
        "Claims",
        "Any",
        "c",
        "ClaimType",
        "claimModel",
        "Type",
        "AppUserManager",
        "RemoveClaimAsync",
        "id",
        "ExtendedClaimsProvider",
        "CreateClaim",
        "claimModel",
        "Type",
        "claimModel",
        "Value",
        "Ok"
    ],
    "literals": [
        "\"api/accounts\"",
        "\"Admin\"",
        "\"users\"",
        "\"Admin\"",
        "\"user/{id:guid}\"",
        "\"GetUserById\"",
        "\"Admin\"",
        "\"user/{username}\"",
        "\"create\"",
        "\"ConfirmEmail\"",
        "\"ConfirmEmailRoute\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"User Id and Code are required\"",
        "\"ChangePassword\"",
        "\"Admin\"",
        "\"user/{id:guid}\"",
        "\"Admin\"",
        "\"user/{id:guid}/roles\"",
        "\"\"",
        "\"Roles '{0}' does not exixts in the system\"",
        "\",\"",
        "\"\"",
        "\"Failed to remove user roles\"",
        "\"\"",
        "\"Failed to add user roles\"",
        "\"Admin\"",
        "\"user/{id:guid}/assignclaims\"",
        "\"Admin\"",
        "\"user/{id:guid}/removeclaims\""
    ],
    "variables": [
        "identity",
        "user",
        "user",
        "user",
        "role",
        "roleResult",
        "IdentityResult",
        "addUserResult",
        "addToRoleResult",
        "IdentityResult",
        "result",
        "IdentityResult",
        "result",
        "appUser",
        "IdentityResult",
        "result",
        "appUser",
        "currentRoles",
        "rolesNotExists",
        "IdentityResult",
        "removeResult",
        "IdentityResult",
        "addResult",
        "appUser",
        "appUser"
    ],
    "comments": [
        "Only SuperAdmin or Admin can delete users (Later when implement roles)",
        "Only SuperAdmin or Admin can delete users (Later when implement roles)",
        "Only SuperAdmin or Admin can delete users (Later when implement roles)",
        "if (createUserModel.RoleName == \"provider\")",
        "{",
        "user.Level = 1;",
        "}",
        "else",
        "{",
        "user.Level = 2;",
        "}",
        "Assign Role to user Here",
        "Ends Here",
        "string code = await this.AppUserManager.GenerateEmailConfirmationTokenAsync(user.Id);",
        "var callbackUrl = new Uri(Url.Link(\"ConfirmEmailRoute\", new { userId = user.Id, code = code }));",
        "await this.AppUserManager.SendEmailAsync(user.Id,",
        "\"Confirm your account\",",
        "\"Please confirm your account by clicking <a href=\\\"\" + callbackUrl + \"\\\">here</a>\");",
        "Uri locationHeader = new Uri(Url.Link(\"GetUserById\", new { id = user.Id }));",
        "return Created(locationHeader, TheModelFactory.Create(user));",
        "Only SuperAdmin or Admin can delete users (Later when implement roles)"
    ],
    "docstrings": [],
    "functions": [
        "IHttpActionResult",
        "GetUsers",
        "GetUser",
        "GetUserByName",
        "CreateUser",
        "ConfirmEmail",
        "ChangePassword",
        "DeleteUser",
        "AssignRolesToUser",
        "AssignClaimsToUser",
        "RemoveClaimsFromUser"
    ],
    "classes": [
        "AccountsController"
    ]
}