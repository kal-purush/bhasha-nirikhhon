{
    "identifiers": [
        "UNITY_WEBPLAYER",
        "Collections",
        "Collections",
        "Generic",
        "Linq",
        "SimpleJSON",
        "JSONBinaryTag",
        "Class",
        "Value",
        "IntValue",
        "DoubleValue",
        "BoolValue",
        "FloatValue",
        "aKey",
        "JSONNode",
        "aItem",
        "JSONNode",
        "aIndex",
        "JSONNode",
        "aKey",
        "JSONNode",
        "aItem",
        "Add",
        "aItem",
        "aKey",
        "aIndex",
        "JSONNode",
        "aNode",
        "aNode",
        "JSONNode",
        "JSONNode",
        "C",
        "Childs",
        "D",
        "C",
        "DeepChilds",
        "D",
        "aPrefix",
        "TryParse",
        "Value",
        "v",
        "v",
        "Value",
        "value",
        "ToString",
        "TryParse",
        "Value",
        "v",
        "v",
        "Value",
        "value",
        "ToString",
        "TryParse",
        "Value",
        "v",
        "v",
        "Value",
        "value",
        "ToString",
        "TryParse",
        "Value",
        "v",
        "v",
        "IsNullOrEmpty",
        "Value",
        "Value",
        "value",
        "JSONArray",
        "JSONClass",
        "JSONNode",
        "s",
        "JSONData",
        "s",
        "JSONNode",
        "d",
        "d",
        "d",
        "Value",
        "JSONNode",
        "a",
        "b",
        "b",
        "a",
        "JSONLazyCreator",
        "ReferenceEquals",
        "a",
        "b",
        "JSONNode",
        "a",
        "b",
        "a",
        "b",
        "obj",
        "ReferenceEquals",
        "obj",
        "GetHashCode",
        "aText",
        "c",
        "aText",
        "c",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "c",
        "result",
        "aJSON",
        "JSONNode",
        "JSONNode",
        "i",
        "aJSON",
        "Length",
        "aJSON",
        "i",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "stack",
        "Push",
        "JSONClass",
        "ctx",
        "TokenName",
        "TokenName",
        "Trim",
        "ctx",
        "JSONArray",
        "ctx",
        "Add",
        "stack",
        "Peek",
        "TokenName",
        "ctx",
        "Add",
        "TokenName",
        "stack",
        "Peek",
        "TokenName",
        "Token",
        "ctx",
        "stack",
        "Peek",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "stack",
        "Push",
        "JSONArray",
        "ctx",
        "TokenName",
        "TokenName",
        "Trim",
        "ctx",
        "JSONArray",
        "ctx",
        "Add",
        "stack",
        "Peek",
        "TokenName",
        "ctx",
        "Add",
        "TokenName",
        "stack",
        "Peek",
        "TokenName",
        "Token",
        "ctx",
        "stack",
        "Peek",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "stack",
        "Count",
        "stack",
        "Pop",
        "Token",
        "TokenName",
        "TokenName",
        "Trim",
        "ctx",
        "JSONArray",
        "ctx",
        "Add",
        "Token",
        "TokenName",
        "ctx",
        "Add",
        "TokenName",
        "Token",
        "TokenName",
        "Token",
        "stack",
        "Count",
        "ctx",
        "stack",
        "Peek",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "TokenName",
        "Token",
        "Token",
        "QuoteMode",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "Token",
        "ctx",
        "JSONArray",
        "ctx",
        "Add",
        "Token",
        "TokenName",
        "ctx",
        "Add",
        "TokenName",
        "Token",
        "TokenName",
        "Token",
        "QuoteMode",
        "Token",
        "aJSON",
        "i",
        "i",
        "QuoteMode",
        "aJSON",
        "i",
        "C",
        "Token",
        "Token",
        "Token",
        "Token",
        "Token",
        "aJSON",
        "Substring",
        "i",
        "Token",
        "Parse",
        "s",
        "Globalization",
        "NumberStyles",
        "AllowHexSpecifier",
        "i",
        "Token",
        "C",
        "Token",
        "aJSON",
        "i",
        "i",
        "QuoteMode",
        "ctx",
        "IO",
        "BinaryWriter",
        "aWriter",
        "IO",
        "Stream",
        "aData",
        "IO",
        "BinaryWriter",
        "aData",
        "Serialize",
        "W",
        "USE_SharpZipLib",
        "IO",
        "Stream",
        "aData",
        "ICSharpCode",
        "SharpZipLib",
        "BZip2",
        "BZip2OutputStream",
        "aData",
        "gzipOut",
        "IsStreamOwner",
        "SaveToStream",
        "gzipOut",
        "gzipOut",
        "Close",
        "aFileName",
        "USE_FileIO",
        "IO",
        "Directory",
        "CreateDirectory",
        "IO",
        "FileInfo",
        "aFileName",
        "Directory",
        "FullName",
        "IO",
        "File",
        "OpenWrite",
        "aFileName",
        "SaveToCompressedStream",
        "F",
        "IO",
        "MemoryStream",
        "SaveToCompressedStream",
        "stream",
        "stream",
        "Position",
        "Convert",
        "ToBase64String",
        "stream",
        "ToArray",
        "IO",
        "Stream",
        "aData",
        "aFileName",
        "aFileName",
        "USE_FileIO",
        "IO",
        "Directory",
        "CreateDirectory",
        "IO",
        "FileInfo",
        "aFileName",
        "Directory",
        "FullName",
        "IO",
        "File",
        "OpenWrite",
        "aFileName",
        "SaveToStream",
        "F",
        "IO",
        "MemoryStream",
        "SaveToStream",
        "stream",
        "stream",
        "Position",
        "Convert",
        "ToBase64String",
        "stream",
        "ToArray",
        "IO",
        "BinaryReader",
        "aReader",
        "JSONBinaryTag",
        "aReader",
        "ReadByte",
        "JSONBinaryTag",
        "aReader",
        "ReadInt32",
        "JSONArray",
        "i",
        "count",
        "i",
        "tmp",
        "Add",
        "Deserialize",
        "aReader",
        "tmp",
        "JSONBinaryTag",
        "Class",
        "aReader",
        "ReadInt32",
        "JSONClass",
        "i",
        "count",
        "i",
        "aReader",
        "ReadString",
        "Deserialize",
        "aReader",
        "tmp",
        "Add",
        "key",
        "val",
        "tmp",
        "JSONBinaryTag",
        "Value",
        "JSONData",
        "aReader",
        "ReadString",
        "JSONBinaryTag",
        "IntValue",
        "JSONData",
        "aReader",
        "ReadInt32",
        "JSONBinaryTag",
        "DoubleValue",
        "JSONData",
        "aReader",
        "ReadDouble",
        "JSONBinaryTag",
        "BoolValue",
        "JSONData",
        "aReader",
        "ReadBoolean",
        "JSONBinaryTag",
        "FloatValue",
        "JSONData",
        "aReader",
        "ReadSingle",
        "USE_SharpZipLib",
        "IO",
        "Stream",
        "aData",
        "ICSharpCode",
        "SharpZipLib",
        "BZip2",
        "BZip2InputStream",
        "aData",
        "LoadFromStream",
        "zin",
        "aFileName",
        "USE_FileIO",
        "IO",
        "File",
        "OpenRead",
        "aFileName",
        "LoadFromCompressedStream",
        "F",
        "aBase64",
        "Convert",
        "FromBase64String",
        "aBase64",
        "IO",
        "MemoryStream",
        "tmp",
        "stream",
        "Position",
        "LoadFromCompressedStream",
        "stream",
        "aFileName",
        "IO",
        "Stream",
        "aData",
        "aBase64",
        "IO",
        "Stream",
        "aData",
        "IO",
        "BinaryReader",
        "aData",
        "Deserialize",
        "R",
        "aFileName",
        "USE_FileIO",
        "IO",
        "File",
        "OpenRead",
        "aFileName",
        "LoadFromStream",
        "F",
        "aBase64",
        "Convert",
        "FromBase64String",
        "aBase64",
        "IO",
        "MemoryStream",
        "tmp",
        "stream",
        "Position",
        "LoadFromStream",
        "stream",
        "JSONNode",
        "JSONNode",
        "JSONNode",
        "JSONNode",
        "aIndex",
        "aIndex",
        "aIndex",
        "m_List",
        "Count",
        "JSONLazyCreator",
        "m_List",
        "aIndex",
        "aIndex",
        "aIndex",
        "m_List",
        "Count",
        "m_List",
        "Add",
        "value",
        "m_List",
        "aIndex",
        "value",
        "JSONNode",
        "aKey",
        "JSONLazyCreator",
        "m_List",
        "Add",
        "value",
        "m_List",
        "Count",
        "aKey",
        "JSONNode",
        "aItem",
        "m_List",
        "Add",
        "aItem",
        "aIndex",
        "aIndex",
        "aIndex",
        "m_List",
        "Count",
        "m_List",
        "aIndex",
        "m_List",
        "RemoveAt",
        "aIndex",
        "tmp",
        "JSONNode",
        "aNode",
        "m_List",
        "Remove",
        "aNode",
        "aNode",
        "JSONNode",
        "JSONNode",
        "N",
        "m_List",
        "N",
        "JSONNode",
        "N",
        "m_List",
        "N",
        "JSONNode",
        "N",
        "m_List",
        "result",
        "Length",
        "result",
        "result",
        "N",
        "ToString",
        "result",
        "result",
        "aPrefix",
        "JSONNode",
        "N",
        "m_List",
        "result",
        "Length",
        "result",
        "result",
        "aPrefix",
        "result",
        "N",
        "ToString",
        "aPrefix",
        "result",
        "aPrefix",
        "result",
        "IO",
        "BinaryWriter",
        "aWriter",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "aWriter",
        "Write",
        "m_List",
        "Count",
        "i",
        "m_List",
        "Count",
        "i",
        "m_List",
        "i",
        "Serialize",
        "aWriter",
        "JSONNode",
        "JSONNode",
        "JSONNode",
        "JSONNode",
        "aKey",
        "m_Dict",
        "ContainsKey",
        "aKey",
        "m_Dict",
        "aKey",
        "JSONLazyCreator",
        "aKey",
        "m_Dict",
        "ContainsKey",
        "aKey",
        "m_Dict",
        "aKey",
        "value",
        "m_Dict",
        "Add",
        "aKey",
        "value",
        "JSONNode",
        "aIndex",
        "aIndex",
        "aIndex",
        "m_Dict",
        "Count",
        "m_Dict",
        "ElementAt",
        "aIndex",
        "Value",
        "aIndex",
        "aIndex",
        "m_Dict",
        "Count",
        "m_Dict",
        "ElementAt",
        "aIndex",
        "Key",
        "m_Dict",
        "key",
        "value",
        "m_Dict",
        "Count",
        "aKey",
        "JSONNode",
        "aItem",
        "IsNullOrEmpty",
        "aKey",
        "m_Dict",
        "ContainsKey",
        "aKey",
        "m_Dict",
        "aKey",
        "aItem",
        "m_Dict",
        "Add",
        "aKey",
        "aItem",
        "m_Dict",
        "Add",
        "Guid",
        "NewGuid",
        "ToString",
        "aItem",
        "aKey",
        "m_Dict",
        "ContainsKey",
        "aKey",
        "m_Dict",
        "aKey",
        "m_Dict",
        "Remove",
        "aKey",
        "tmp",
        "aIndex",
        "aIndex",
        "aIndex",
        "m_Dict",
        "Count",
        "m_Dict",
        "ElementAt",
        "aIndex",
        "m_Dict",
        "Remove",
        "item",
        "Key",
        "item",
        "Value",
        "JSONNode",
        "aNode",
        "m_Dict",
        "Where",
        "k",
        "Value",
        "aNode",
        "First",
        "m_Dict",
        "Remove",
        "item",
        "Key",
        "aNode",
        "JSONNode",
        "KeyValuePair",
        "JSONNode",
        "N",
        "m_Dict",
        "N",
        "Value",
        "KeyValuePair",
        "JSONNode",
        "N",
        "m_Dict",
        "N",
        "KeyValuePair",
        "JSONNode",
        "N",
        "m_Dict",
        "result",
        "Length",
        "result",
        "result",
        "Escape",
        "N",
        "Key",
        "N",
        "Value",
        "ToString",
        "result",
        "result",
        "aPrefix",
        "KeyValuePair",
        "JSONNode",
        "N",
        "m_Dict",
        "result",
        "Length",
        "result",
        "result",
        "aPrefix",
        "result",
        "Escape",
        "N",
        "Key",
        "N",
        "Value",
        "ToString",
        "aPrefix",
        "result",
        "aPrefix",
        "result",
        "IO",
        "BinaryWriter",
        "aWriter",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "Class",
        "aWriter",
        "Write",
        "m_Dict",
        "Count",
        "K",
        "m_Dict",
        "Keys",
        "aWriter",
        "Write",
        "K",
        "m_Dict",
        "K",
        "Serialize",
        "aWriter",
        "JSONNode",
        "m_Data",
        "m_Data",
        "value",
        "aData",
        "m_Data",
        "aData",
        "aData",
        "AsFloat",
        "aData",
        "aData",
        "AsDouble",
        "aData",
        "aData",
        "AsBool",
        "aData",
        "aData",
        "AsInt",
        "aData",
        "Escape",
        "m_Data",
        "aPrefix",
        "Escape",
        "m_Data",
        "IO",
        "BinaryWriter",
        "aWriter",
        "JSONData",
        "tmp",
        "AsInt",
        "AsInt",
        "tmp",
        "m_Data",
        "m_Data",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "IntValue",
        "aWriter",
        "Write",
        "AsInt",
        "tmp",
        "AsFloat",
        "AsFloat",
        "tmp",
        "m_Data",
        "m_Data",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "FloatValue",
        "aWriter",
        "Write",
        "AsFloat",
        "tmp",
        "AsDouble",
        "AsDouble",
        "tmp",
        "m_Data",
        "m_Data",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "DoubleValue",
        "aWriter",
        "Write",
        "AsDouble",
        "tmp",
        "AsBool",
        "AsBool",
        "tmp",
        "m_Data",
        "m_Data",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "BoolValue",
        "aWriter",
        "Write",
        "AsBool",
        "aWriter",
        "Write",
        "JSONBinaryTag",
        "Value",
        "aWriter",
        "Write",
        "m_Data",
        "JSONNode",
        "JSONNode",
        "aNode",
        "m_Node",
        "aNode",
        "m_Key",
        "JSONNode",
        "aNode",
        "aKey",
        "m_Node",
        "aNode",
        "m_Key",
        "aKey",
        "JSONNode",
        "aVal",
        "m_Key",
        "m_Node",
        "Add",
        "aVal",
        "m_Node",
        "Add",
        "m_Key",
        "aVal",
        "m_Node",
        "JSONNode",
        "aIndex",
        "JSONLazyCreator",
        "JSONArray",
        "tmp",
        "Add",
        "value",
        "tmp",
        "JSONNode",
        "aKey",
        "JSONLazyCreator",
        "aKey",
        "JSONClass",
        "tmp",
        "Add",
        "aKey",
        "value",
        "tmp",
        "JSONNode",
        "aItem",
        "JSONArray",
        "tmp",
        "Add",
        "aItem",
        "tmp",
        "aKey",
        "JSONNode",
        "aItem",
        "JSONClass",
        "tmp",
        "Add",
        "aKey",
        "aItem",
        "tmp",
        "JSONLazyCreator",
        "a",
        "b",
        "b",
        "ReferenceEquals",
        "a",
        "b",
        "JSONLazyCreator",
        "a",
        "b",
        "a",
        "b",
        "obj",
        "obj",
        "ReferenceEquals",
        "obj",
        "GetHashCode",
        "aPrefix",
        "JSONData",
        "tmp",
        "JSONData",
        "value",
        "tmp",
        "JSONData",
        "tmp",
        "JSONData",
        "value",
        "tmp",
        "JSONData",
        "tmp",
        "JSONData",
        "value",
        "tmp",
        "JSONData",
        "tmp",
        "JSONData",
        "value",
        "tmp",
        "JSONArray",
        "tmp",
        "tmp",
        "JSONClass",
        "tmp",
        "tmp",
        "aJSON",
        "JSONNode",
        "Parse",
        "aJSON"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"JSONNode\"",
        "\"JSONNode\"",
        "\"true\"",
        "\"false\"",
        "\"\"",
        "\"\\\\\\\\\"",
        "\"\\\\\\\"\"",
        "\"\\\\n\"",
        "\"\\\\r\"",
        "\"\\\\t\"",
        "\"\\\\b\"",
        "\"\\\\f\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"JSON Parse: Too many closing brackets\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"JSON Parse: Quotation marks seems to be messed up.\"",
        "\"Can't use File IO stuff in webplayer\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use File IO stuff in webplayer\"",
        "\"Error deserializing JSON. Unknown tag: \"",
        "\"Can't use File IO stuff in webplayer\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use compressed functions. You need include the SharpZipLib and uncomment the define at the top of SimpleJSON\"",
        "\"Can't use File IO stuff in webplayer\"",
        "\"[ \"",
        "\", \"",
        "\" ]\"",
        "\"[ \"",
        "\", \"",
        "\"\\n\"",
        "\"   \"",
        "\"   \"",
        "\"\\n\"",
        "\"]\"",
        "\"{\"",
        "\", \"",
        "\"\\\"\"",
        "\"\\\":\"",
        "\"}\"",
        "\"{ \"",
        "\", \"",
        "\"\\n\"",
        "\"   \"",
        "\"\\\"\"",
        "\"\\\" : \"",
        "\"   \"",
        "\"\\n\"",
        "\"}\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "Value",
        "Count",
        "Childs",
        "DeepChilds",
        "AsInt",
        "v",
        "AsFloat",
        "v",
        "AsDouble",
        "v",
        "AsBool",
        "v",
        "JSONArray",
        "AsArray",
        "JSONClass",
        "AsObject",
        "result",
        "stack",
        "JSONNode",
        "ctx",
        "i",
        "Token",
        "TokenName",
        "QuoteMode",
        "C",
        "s",
        "W",
        "gzipOut",
        "F",
        "stream",
        "F",
        "stream",
        "JSONBinaryTag",
        "count",
        "JSONArray",
        "tmp",
        "i",
        "count",
        "JSONClass",
        "tmp",
        "i",
        "key",
        "val",
        "zin",
        "F",
        "tmp",
        "stream",
        "R",
        "F",
        "tmp",
        "stream",
        "m_List",
        "Count",
        "JSONNode",
        "tmp",
        "Childs",
        "result",
        "result",
        "i",
        "m_Dict",
        "key",
        "Count",
        "JSONNode",
        "tmp",
        "item",
        "item",
        "Childs",
        "result",
        "result",
        "m_Data",
        "Value",
        "tmp",
        "JSONNode",
        "m_Node",
        "m_Key",
        "tmp",
        "tmp",
        "tmp",
        "tmp",
        "AsInt",
        "JSONData",
        "tmp",
        "JSONData",
        "tmp",
        "AsFloat",
        "JSONData",
        "tmp",
        "JSONData",
        "tmp",
        "AsDouble",
        "JSONData",
        "tmp",
        "JSONData",
        "tmp",
        "AsBool",
        "JSONData",
        "tmp",
        "JSONData",
        "tmp",
        "JSONArray",
        "AsArray",
        "JSONArray",
        "tmp",
        "JSONClass",
        "AsObject",
        "JSONClass",
        "tmp"
    ],
    "comments": [
        "#define USE_SharpZipLib",
        "End of JSONNode",
        "End of JSONArray",
        "End of JSONClass",
        "End of JSONData",
        "Be GC friendly.",
        "End of JSONLazyCreator"
    ],
    "docstrings": [
        "* * * *\n * A simple JSON Parser / builder\n * ------------------------------\n * \n * It mainly has been written as a simple JSON parser. It can build a JSON string\n * from the node-tree, or generate a node tree from any valid JSON string.\n * \n * If you want to use compression when saving to file / stream / B64 you have to include\n * SharpZipLib ( http://www.icsharpcode.net/opensource/sharpziplib/ ) in your project and\n * define \"USE_SharpZipLib\" at the top of the file\n * \n * Written by Bunny83 \n * 2012-06-09\n * \n * Features / attributes:\n * - provides strongly typed node classes and lists / dictionaries\n * - provides easy access to class members / array items / data values\n * - the parser ignores data types. Each value is a string.\n * - only double quotes (\") are used for quoting strings.\n * - values and names are not restricted to quoted strings. They simply add up and are trimmed.\n * - There are only 3 types: arrays(JSONArray), objects(JSONClass) and values(JSONData)\n * - provides \"casting\" properties to easily convert to / from those types:\n *   int / float / double / bool\n * - provides a common interface for each node so no explicit casting is required.\n * - the parser try to avoid errors, but if malformed JSON is parsed the result is undefined\n * \n * \n * 2012-12-17 Update:\n * - Added internal JSONLazyCreator class which simplifies the construction of a JSON tree\n *   Now you can simple reference any item that doesn't exist yet and it will return a JSONLazyCreator\n *   The class determines the required type by it's further use, creates the type and removes itself.\n * - Added binary serialization / deserialization.\n * - Added support for BZip2 zipped binary format. Requires the SharpZipLib ( http://www.icsharpcode.net/opensource/sharpziplib/ )\n *   The usage of the SharpZipLib library can be disabled by removing or commenting out the USE_SharpZipLib define at the top\n * - The serializer uses different types when it comes to store the values. Since my data values\n *   are all of type string, the serializer will \"try\" which format fits best. The order is: int, float, double, bool, string.\n *   It's not the most efficient way but for a moderate amount of data it should work on all platforms.\n * \n * * * *"
    ],
    "functions": [
        "Add",
        "Add",
        "JSONNode",
        "Remove",
        "JSONNode",
        "Remove",
        "JSONNode",
        "Remove",
        "ToString",
        "ToString",
        "Equals",
        "GetHashCode",
        "Escape",
        "JSONNode",
        "Parse",
        "Serialize",
        "SaveToStream",
        "SaveToCompressedStream",
        "SaveToCompressedFile",
        "SaveToCompressedBase64",
        "SaveToCompressedStream",
        "SaveToCompressedFile",
        "SaveToCompressedBase64",
        "SaveToFile",
        "SaveToBase64",
        "JSONNode",
        "Deserialize",
        "JSONNode",
        "LoadFromCompressedStream",
        "JSONNode",
        "LoadFromCompressedFile",
        "JSONNode",
        "LoadFromCompressedBase64",
        "JSONNode",
        "LoadFromCompressedFile",
        "JSONNode",
        "LoadFromCompressedStream",
        "JSONNode",
        "LoadFromCompressedBase64",
        "JSONNode",
        "LoadFromStream",
        "JSONNode",
        "LoadFromFile",
        "JSONNode",
        "LoadFromBase64",
        "Add",
        "JSONNode",
        "Remove",
        "JSONNode",
        "Remove",
        "IEnumerator",
        "GetEnumerator",
        "ToString",
        "ToString",
        "Serialize",
        "Add",
        "JSONNode",
        "Remove",
        "JSONNode",
        "Remove",
        "JSONNode",
        "Remove",
        "IEnumerator",
        "GetEnumerator",
        "ToString",
        "ToString",
        "Serialize",
        "JSONData",
        "JSONData",
        "JSONData",
        "JSONData",
        "JSONData",
        "ToString",
        "ToString",
        "Serialize",
        "JSONLazyCreator",
        "JSONLazyCreator",
        "Add",
        "Add",
        "Equals",
        "GetHashCode",
        "ToString",
        "ToString",
        "JSONNode",
        "Parse"
    ],
    "classes": [
        "JSONNode",
        "JSONArray",
        "JSONClass",
        "JSONData",
        "JSONLazyCreator"
    ]
}