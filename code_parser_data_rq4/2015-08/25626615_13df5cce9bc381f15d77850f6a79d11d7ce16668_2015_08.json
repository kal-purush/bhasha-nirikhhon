{
    "identifiers": [
        "com",
        "lesfrancschatons",
        "cordova",
        "plugins",
        "overappbrowser",
        "android",
        "annotation",
        "SuppressLint",
        "com",
        "lesfrancschatons",
        "cordova",
        "plugins",
        "overappbrowser",
        "OverAppBrowserDialog",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "provider",
        "Browser",
        "android",
        "content",
        "res",
        "Resources",
        "android",
        "graphics",
        "Bitmap",
        "android",
        "graphics",
        "Color",
        "android",
        "graphics",
        "drawable",
        "Drawable",
        "android",
        "net",
        "Uri",
        "android",
        "os",
        "Build",
        "android",
        "os",
        "Bundle",
        "android",
        "text",
        "InputType",
        "android",
        "util",
        "Log",
        "android",
        "util",
        "TypedValue",
        "android",
        "view",
        "Gravity",
        "android",
        "view",
        "KeyEvent",
        "android",
        "view",
        "View",
        "android",
        "view",
        "Window",
        "android",
        "view",
        "WindowManager",
        "android",
        "view",
        "WindowManager",
        "LayoutParams",
        "android",
        "view",
        "inputmethod",
        "EditorInfo",
        "android",
        "view",
        "inputmethod",
        "InputMethodManager",
        "android",
        "webkit",
        "CookieManager",
        "android",
        "webkit",
        "WebSettings",
        "android",
        "webkit",
        "WebView",
        "android",
        "webkit",
        "WebViewClient",
        "android",
        "widget",
        "Button",
        "android",
        "widget",
        "EditText",
        "android",
        "widget",
        "LinearLayout",
        "android",
        "widget",
        "RelativeLayout",
        "org",
        "apache",
        "cordova",
        "CallbackContext",
        "org",
        "apache",
        "cordova",
        "Config",
        "org",
        "apache",
        "cordova",
        "CordovaArgs",
        "org",
        "apache",
        "cordova",
        "CordovaPlugin",
        "org",
        "apache",
        "cordova",
        "CordovaWebView",
        "org",
        "apache",
        "cordova",
        "LOG",
        "org",
        "apache",
        "cordova",
        "PluginManager",
        "org",
        "apache",
        "cordova",
        "PluginResult",
        "org",
        "json",
        "JSONException",
        "org",
        "json",
        "JSONObject",
        "android",
        "animation",
        "ObjectAnimator",
        "android",
        "animation",
        "AnimatorSet",
        "java",
        "lang",
        "reflect",
        "InvocationTargetException",
        "java",
        "lang",
        "reflect",
        "Method",
        "java",
        "util",
        "java",
        "util",
        "StringTokenizer",
        "SuppressLint",
        "NULL",
        "LOG_TAG",
        "SELF",
        "SYSTEM",
        "EXIT_EVENT",
        "LOCATION",
        "ZOOM",
        "HIDDEN",
        "LOAD_START_EVENT",
        "LOAD_STOP_EVENT",
        "LOAD_ERROR_EVENT",
        "CLEAR_ALL_CACHE",
        "CLEAR_SESSION_CACHE",
        "HARDWARE_BACK_BUTTON",
        "dialog",
        "inAppWebView",
        "edittext",
        "callbackContext",
        "showLocationBar",
        "showZoomControls",
        "openWindowHidden",
        "clearAllCache",
        "clearSessionCache",
        "hadwareBackButton",
        "action",
        "args",
        "callbackContext",
        "action",
        "equals",
        "callbackContext",
        "callbackContext",
        "url",
        "args",
        "getString",
        "t",
        "args",
        "optString",
        "t",
        "t",
        "equals",
        "t",
        "equals",
        "NULL",
        "t",
        "SELF",
        "target",
        "t",
        "features",
        "parseFeature",
        "put",
        "args",
        "getInt",
        "put",
        "args",
        "getInt",
        "put",
        "args",
        "getInt",
        "put",
        "args",
        "getInt",
        "Log",
        "d",
        "LOG_TAG",
        "target",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "Override",
        "result",
        "SELF",
        "equals",
        "target",
        "Log",
        "d",
        "LOG_TAG",
        "shouldAllowNavigation",
        "url",
        "startsWith",
        "shouldAllowNavigation",
        "shouldAllowNavigation",
        "iuw",
        "getMethod",
        "shouldAllowNavigation",
        "iuw",
        "invoke",
        "url",
        "e",
        "e",
        "e",
        "shouldAllowNavigation",
        "gpm",
        "webView",
        "getClass",
        "getMethod",
        "pm",
        "gpm",
        "invoke",
        "webView",
        "san",
        "pm",
        "getClass",
        "getMethod",
        "shouldAllowNavigation",
        "san",
        "invoke",
        "pm",
        "url",
        "e",
        "e",
        "e",
        "TRUE",
        "equals",
        "shouldAllowNavigation",
        "Log",
        "d",
        "LOG_TAG",
        "webView",
        "loadUrl",
        "url",
        "url",
        "startsWith",
        "WebView",
        "SCHEME_TEL",
        "Log",
        "d",
        "LOG_TAG",
        "intent",
        "Intent",
        "ACTION_DIAL",
        "intent",
        "setData",
        "Uri",
        "parse",
        "url",
        "cordova",
        "getActivity",
        "startActivity",
        "intent",
        "e",
        "LOG",
        "e",
        "LOG_TAG",
        "url",
        "e",
        "toString",
        "Log",
        "d",
        "LOG_TAG",
        "result",
        "showWebPage",
        "url",
        "features",
        "SYSTEM",
        "equals",
        "target",
        "Log",
        "d",
        "LOG_TAG",
        "result",
        "openExternal",
        "url",
        "Log",
        "d",
        "LOG_TAG",
        "result",
        "showWebPage",
        "url",
        "features",
        "pluginResult",
        "PluginResult",
        "Status",
        "OK",
        "result",
        "pluginResult",
        "setKeepCallback",
        "callbackContext",
        "sendPluginResult",
        "pluginResult",
        "action",
        "equals",
        "closeDialog",
        "action",
        "equals",
        "jsWrapper",
        "args",
        "getBoolean",
        "jsWrapper",
        "format",
        "callbackContext",
        "getCallbackId",
        "injectDeferredObject",
        "args",
        "getString",
        "jsWrapper",
        "action",
        "equals",
        "jsWrapper",
        "args",
        "getBoolean",
        "jsWrapper",
        "format",
        "callbackContext",
        "getCallbackId",
        "jsWrapper",
        "injectDeferredObject",
        "args",
        "getString",
        "jsWrapper",
        "action",
        "equals",
        "jsWrapper",
        "args",
        "getBoolean",
        "jsWrapper",
        "format",
        "callbackContext",
        "getCallbackId",
        "jsWrapper",
        "injectDeferredObject",
        "args",
        "getString",
        "jsWrapper",
        "action",
        "equals",
        "jsWrapper",
        "args",
        "getBoolean",
        "jsWrapper",
        "format",
        "callbackContext",
        "getCallbackId",
        "jsWrapper",
        "injectDeferredObject",
        "args",
        "getString",
        "jsWrapper",
        "action",
        "equals",
        "show",
        "pluginResult",
        "PluginResult",
        "Status",
        "OK",
        "pluginResult",
        "setKeepCallback",
        "callbackContext",
        "sendPluginResult",
        "pluginResult",
        "action",
        "equals",
        "to",
        "args",
        "getDouble",
        "duration",
        "args",
        "getInt",
        "fadeTo",
        "to",
        "duration",
        "pluginResult",
        "PluginResult",
        "Status",
        "OK",
        "pluginResult",
        "setKeepCallback",
        "callbackContext",
        "sendPluginResult",
        "pluginResult",
        "Override",
        "closeDialog",
        "closeDialog",
        "source",
        "jsWrapper",
        "scriptToInject",
        "jsWrapper",
        "jsonEsc",
        "jsonEsc",
        "put",
        "source",
        "jsonRepr",
        "jsonEsc",
        "toString",
        "jsonSourceString",
        "jsonRepr",
        "substring",
        "jsonRepr",
        "length",
        "scriptToInject",
        "format",
        "jsWrapper",
        "jsonSourceString",
        "scriptToInject",
        "source",
        "finalScriptToInject",
        "scriptToInject",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "SuppressLint",
        "Override",
        "Build",
        "VERSION",
        "SDK_INT",
        "Build",
        "VERSION_CODES",
        "KITKAT",
        "inAppWebView",
        "loadUrl",
        "finalScriptToInject",
        "inAppWebView",
        "evaluateJavascript",
        "finalScriptToInject",
        "optString",
        "optString",
        "equals",
        "NULL",
        "features",
        "optString",
        "option",
        "features",
        "hasMoreElements",
        "option",
        "features",
        "nextToken",
        "option",
        "hasMoreElements",
        "key",
        "option",
        "nextToken",
        "value",
        "option",
        "nextToken",
        "equals",
        "FALSE",
        "TRUE",
        "put",
        "key",
        "value",
        "url",
        "intent",
        "intent",
        "Intent",
        "ACTION_VIEW",
        "uri",
        "Uri",
        "parse",
        "url",
        "equals",
        "uri",
        "getScheme",
        "intent",
        "setDataAndType",
        "uri",
        "webView",
        "getResourceApi",
        "getMimeType",
        "uri",
        "intent",
        "setData",
        "uri",
        "intent",
        "putExtra",
        "Browser",
        "EXTRA_APPLICATION_ID",
        "cordova",
        "getActivity",
        "getPackageName",
        "cordova",
        "getActivity",
        "startActivity",
        "intent",
        "e",
        "Log",
        "d",
        "LOG_TAG",
        "url",
        "e",
        "toString",
        "e",
        "toString",
        "childView",
        "inAppWebView",
        "childView",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "Override",
        "childView",
        "setWebViewClient",
        "view",
        "url",
        "dialog",
        "dialog",
        "dismiss",
        "childView",
        "loadUrl",
        "obj",
        "obj",
        "put",
        "EXIT_EVENT",
        "sendUpdate",
        "obj",
        "ex",
        "Log",
        "d",
        "LOG_TAG",
        "inAppWebView",
        "canGoBack",
        "inAppWebView",
        "goBack",
        "inAppWebView",
        "canGoBack",
        "hadwareBackButton",
        "inAppWebView",
        "canGoForward",
        "inAppWebView",
        "goForward",
        "url",
        "imm",
        "cordova",
        "getActivity",
        "getSystemService",
        "Context",
        "INPUT_METHOD_SERVICE",
        "imm",
        "hideSoftInputFromWindow",
        "edittext",
        "getWindowToken",
        "url",
        "startsWith",
        "url",
        "startsWith",
        "inAppWebView",
        "loadUrl",
        "url",
        "inAppWebView",
        "loadUrl",
        "url",
        "inAppWebView",
        "requestFocus",
        "showLocationBar",
        "url",
        "features",
        "showLocationBar",
        "showZoomControls",
        "openWindowHidden",
        "features",
        "show",
        "features",
        "get",
        "LOCATION",
        "show",
        "showLocationBar",
        "show",
        "booleanValue",
        "zoom",
        "features",
        "get",
        "ZOOM",
        "zoom",
        "showZoomControls",
        "zoom",
        "booleanValue",
        "hidden",
        "features",
        "get",
        "HIDDEN",
        "hidden",
        "openWindowHidden",
        "hidden",
        "booleanValue",
        "hardwareBack",
        "features",
        "get",
        "HARDWARE_BACK_BUTTON",
        "hardwareBack",
        "hadwareBackButton",
        "hardwareBack",
        "booleanValue",
        "cache",
        "features",
        "get",
        "CLEAR_ALL_CACHE",
        "cache",
        "clearAllCache",
        "cache",
        "booleanValue",
        "cache",
        "features",
        "get",
        "CLEAR_SESSION_CACHE",
        "cache",
        "clearSessionCache",
        "cache",
        "booleanValue",
        "thatWebView",
        "webView",
        "webViewParams",
        "runnable",
        "dipValue",
        "value",
        "TypedValue",
        "applyDimension",
        "TypedValue",
        "COMPLEX_UNIT_DIP",
        "dipValue",
        "cordova",
        "getActivity",
        "getResources",
        "getDisplayMetrics",
        "value",
        "SuppressLint",
        "dialog",
        "cordova",
        "getActivity",
        "android",
        "R",
        "style",
        "Theme_NoTitleBar",
        "dialog",
        "getWindow",
        "getAttributes",
        "windowAnimations",
        "android",
        "R",
        "style",
        "Animation_Dialog",
        "dialog",
        "requestWindowFeature",
        "Window",
        "FEATURE_NO_TITLE",
        "dialog",
        "setCancelable",
        "dialog",
        "setOverAppBroswer",
        "getOverAppBrowser",
        "dialog",
        "getWindow",
        "wlp",
        "getAttributes",
        "wlp",
        "gravity",
        "Gravity",
        "TOP",
        "Gravity",
        "LEFT",
        "wlp",
        "width",
        "dpToPixels",
        "webViewParams",
        "get",
        "wlp",
        "height",
        "dpToPixels",
        "webViewParams",
        "get",
        "wlp",
        "dimAmount",
        "setFlags",
        "WindowManager",
        "LayoutParams",
        "FLAG_NOT_TOUCH_MODAL",
        "WindowManager",
        "LayoutParams",
        "FLAG_NOT_TOUCH_MODAL",
        "clearFlags",
        "WindowManager",
        "LayoutParams",
        "FLAG_DIM_BEHIND",
        "setAttributes",
        "wlp",
        "inAppWebView",
        "cordova",
        "getActivity",
        "inAppWebView",
        "setLayoutParams",
        "LayoutParams",
        "MATCH_PARENT",
        "LayoutParams",
        "MATCH_PARENT",
        "inAppWebView",
        "setWebChromeClient",
        "thatWebView",
        "client",
        "thatWebView",
        "edittext",
        "inAppWebView",
        "setWebViewClient",
        "client",
        "settings",
        "inAppWebView",
        "getSettings",
        "settings",
        "setJavaScriptEnabled",
        "settings",
        "setJavaScriptCanOpenWindowsAutomatically",
        "settings",
        "setBuiltInZoomControls",
        "showZoomControls",
        "settings",
        "setPluginState",
        "android",
        "webkit",
        "WebSettings",
        "PluginState",
        "ON",
        "appSettings",
        "cordova",
        "getActivity",
        "getIntent",
        "getExtras",
        "enableDatabase",
        "appSettings",
        "appSettings",
        "getBoolean",
        "enableDatabase",
        "databasePath",
        "cordova",
        "getActivity",
        "getApplicationContext",
        "getDir",
        "Context",
        "MODE_PRIVATE",
        "getPath",
        "settings",
        "setDatabasePath",
        "databasePath",
        "settings",
        "setDatabaseEnabled",
        "settings",
        "setDomStorageEnabled",
        "clearAllCache",
        "CookieManager",
        "getInstance",
        "removeAllCookie",
        "clearSessionCache",
        "CookieManager",
        "getInstance",
        "removeSessionCookie",
        "inAppWebView",
        "loadUrl",
        "url",
        "inAppWebView",
        "setId",
        "inAppWebView",
        "getSettings",
        "setLoadWithOverviewMode",
        "inAppWebView",
        "getSettings",
        "setUseWideViewPort",
        "inAppWebView",
        "requestFocus",
        "inAppWebView",
        "requestFocusFromTouch",
        "lp",
        "lp",
        "copyFrom",
        "dialog",
        "getWindow",
        "getAttributes",
        "lp",
        "x",
        "dpToPixels",
        "webViewParams",
        "get",
        "lp",
        "y",
        "dpToPixels",
        "webViewParams",
        "get",
        "lp",
        "width",
        "dpToPixels",
        "webViewParams",
        "get",
        "lp",
        "height",
        "dpToPixels",
        "webViewParams",
        "get",
        "dialog",
        "setContentView",
        "inAppWebView",
        "dialog",
        "show",
        "dialog",
        "getWindow",
        "setAttributes",
        "lp",
        "openWindowHidden",
        "dialog",
        "hide",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "runnable",
        "obj",
        "keepCallback",
        "sendUpdate",
        "obj",
        "keepCallback",
        "PluginResult",
        "Status",
        "OK",
        "obj",
        "keepCallback",
        "status",
        "callbackContext",
        "result",
        "status",
        "obj",
        "result",
        "setKeepCallback",
        "keepCallback",
        "callbackContext",
        "sendPluginResult",
        "result",
        "keepCallback",
        "callbackContext",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "Override",
        "dialog",
        "show",
        "to",
        "duration",
        "childView",
        "inAppWebView",
        "childView",
        "toAlpha",
        "to",
        "animationDuration",
        "duration",
        "cordova",
        "getActivity",
        "runOnUiThread",
        "Override",
        "edittext",
        "webView",
        "webView",
        "mEditText",
        "webView",
        "webView",
        "edittext",
        "mEditText",
        "Override",
        "view",
        "url",
        "favicon",
        "onPageStarted",
        "view",
        "url",
        "favicon",
        "newloc",
        "url",
        "startsWith",
        "url",
        "startsWith",
        "url",
        "startsWith",
        "newloc",
        "url",
        "url",
        "startsWith",
        "WebView",
        "SCHEME_TEL",
        "intent",
        "Intent",
        "ACTION_DIAL",
        "intent",
        "setData",
        "Uri",
        "parse",
        "url",
        "cordova",
        "getActivity",
        "startActivity",
        "intent",
        "e",
        "LOG",
        "e",
        "LOG_TAG",
        "url",
        "e",
        "toString",
        "url",
        "startsWith",
        "url",
        "startsWith",
        "WebView",
        "SCHEME_MAILTO",
        "url",
        "startsWith",
        "intent",
        "Intent",
        "ACTION_VIEW",
        "intent",
        "setData",
        "Uri",
        "parse",
        "url",
        "cordova",
        "getActivity",
        "startActivity",
        "intent",
        "e",
        "LOG",
        "e",
        "LOG_TAG",
        "url",
        "e",
        "toString",
        "url",
        "startsWith",
        "intent",
        "Intent",
        "ACTION_VIEW",
        "address",
        "parmIndex",
        "url",
        "indexOf",
        "parmIndex",
        "address",
        "url",
        "substring",
        "address",
        "url",
        "substring",
        "parmIndex",
        "uri",
        "Uri",
        "parse",
        "url",
        "query",
        "uri",
        "getQuery",
        "query",
        "query",
        "startsWith",
        "intent",
        "putExtra",
        "query",
        "substring",
        "intent",
        "setData",
        "Uri",
        "parse",
        "address",
        "intent",
        "putExtra",
        "address",
        "intent",
        "setType",
        "cordova",
        "getActivity",
        "startActivity",
        "intent",
        "e",
        "LOG",
        "e",
        "LOG_TAG",
        "url",
        "e",
        "toString",
        "newloc",
        "url",
        "obj",
        "obj",
        "put",
        "LOAD_START_EVENT",
        "obj",
        "put",
        "newloc",
        "sendUpdate",
        "obj",
        "ex",
        "Log",
        "d",
        "LOG_TAG",
        "view",
        "url",
        "onPageFinished",
        "view",
        "url",
        "obj",
        "obj",
        "put",
        "LOAD_STOP_EVENT",
        "obj",
        "put",
        "url",
        "sendUpdate",
        "obj",
        "show",
        "ex",
        "Log",
        "d",
        "LOG_TAG",
        "view",
        "errorCode",
        "description",
        "failingUrl",
        "onReceivedError",
        "view",
        "errorCode",
        "description",
        "failingUrl",
        "obj",
        "obj",
        "put",
        "LOAD_ERROR_EVENT",
        "obj",
        "put",
        "failingUrl",
        "obj",
        "put",
        "errorCode",
        "obj",
        "put",
        "description",
        "sendUpdate",
        "obj",
        "PluginResult",
        "Status",
        "ERROR",
        "ex",
        "Log",
        "d",
        "LOG_TAG"
    ],
    "literals": [
        "\"SetJavaScriptEnabled\"",
        "\"null\"",
        "\"OverAppBrowser\"",
        "\"_self\"",
        "\"_system\"",
        "\"exit\"",
        "\"location\"",
        "\"zoom\"",
        "\"hidden\"",
        "\"loadstart\"",
        "\"loadstop\"",
        "\"loaderror\"",
        "\"clearcache\"",
        "\"clearsessioncache\"",
        "\"hardwareback\"",
        "\"open\"",
        "\"\"",
        "\"location=no,hidden=yes,zoom=no,hidden=yes\"",
        "\"x\"",
        "\"y\"",
        "\"width\"",
        "\"height\"",
        "\"target = \"",
        "\"\"",
        "\"in self\"",
        "\"javascript:\"",
        "\"isUrlWhiteListed\"",
        "\"getPluginManager\"",
        "\"shouldAllowNavigation\"",
        "\"loading in webview\"",
        "\"loading in dialer\"",
        "\"Error dialing \"",
        "\": \"",
        "\"loading in OverAppBrowser\"",
        "\"in system\"",
        "\"in blank\"",
        "\"close\"",
        "\"injectScriptCode\"",
        "\"prompt(JSON.stringify([eval(%%s)]), 'gap-iab://%s')\"",
        "\"injectScriptFile\"",
        "\"(function(d) { var c = d.createElement('script'); c.src = %%s; c.onload = function() { prompt('', 'gap-iab://%s'); }; d.body.appendChild(c); })(document)\"",
        "\"(function(d) { var c = d.createElement('script'); c.src = %s; d.body.appendChild(c); })(document)\"",
        "\"injectStyleCode\"",
        "\"(function(d) { var c = d.createElement('style'); c.innerHTML = %%s; d.body.appendChild(c); prompt('', 'gap-iab://%s');})(document)\"",
        "\"(function(d) { var c = d.createElement('style'); c.innerHTML = %s; d.body.appendChild(c); })(document)\"",
        "\"injectStyleFile\"",
        "\"(function(d) { var c = d.createElement('link'); c.rel='stylesheet'; c.type='text/css'; c.href = %%s; d.head.appendChild(c); prompt('', 'gap-iab://%s');})(document)\"",
        "\"(function(d) { var c = d.createElement('link'); c.rel='stylesheet'; c.type='text/css'; c.href = %s; d.head.appendChild(c); })(document)\"",
        "\"show\"",
        "\"fade\"",
        "\"NewApi\"",
        "\"javascript:\"",
        "\",\"",
        "\"=\"",
        "\"no\"",
        "\"file\"",
        "\"\"",
        "\"InAppBrowser: Error loading url \"",
        "\":\"",
        "\"about:blank\"",
        "\"type\"",
        "\"Should never happen\"",
        "\"http\"",
        "\"file:\"",
        "\"http://\"",
        "\"NewApi\"",
        "\"width\"",
        "\"height\"",
        "\"InAppBrowserStorageEnabled\"",
        "\"inAppBrowserDB\"",
        "\"x\"",
        "\"y\"",
        "\"width\"",
        "\"height\"",
        "\"\"",
        "\"\"",
        "\"http:\"",
        "\"https:\"",
        "\"file:\"",
        "\"Error dialing \"",
        "\": \"",
        "\"geo:\"",
        "\"market:\"",
        "\"Error with \"",
        "\": \"",
        "\"sms:\"",
        "\"body=\"",
        "\"sms_body\"",
        "\"sms:\"",
        "\"address\"",
        "\"vnd.android-dir/mms-sms\"",
        "\"Error sending sms \"",
        "\":\"",
        "\"http://\"",
        "\"type\"",
        "\"url\"",
        "\"Should never happen\"",
        "\"type\"",
        "\"url\"",
        "\"Should never happen\"",
        "\"type\"",
        "\"url\"",
        "\"code\"",
        "\"message\"",
        "\"Should never happen\""
    ],
    "variables": [
        "dialog",
        "inAppWebView",
        "edittext",
        "callbackContext",
        "jsWrapper",
        "jsWrapper",
        "jsWrapper",
        "scriptToInject",
        "option",
        "edittext",
        "webView"
    ],
    "comments": [
        "private static final String BLANK = \"_blank\";",
        "SELF",
        "load in webview",
        "Load the dialer",
        "load in OverAppBrowser",
        "SYSTEM",
        "BLANK - or anything else",
        "This action will have the side-effect of blurring the currently focused element",
        "Omitting the MIME type for file: URLs causes \"No Activity found to handle Intent\".",
        "Adding the MIME type to http: URLs causes them to not be handled by the downloader.",
        "The JS protects against multiple calls, so this should happen only when",
        "closeDialog() is called by other native code.",
        "NB: wait for about:blank before dismissing",
        "NB: From SDK 19: \"If you call methods on WebView from any thread",
        "other than your app's UI thread, it can cause unexpected results.\"",
        "http://developer.android.com/guide/webapps/migrating.html#Threads",
        "Determine if we should hide the location bar.",
        "Create dialog in new thread",
        "Let's create the main dialog",
        "WebView",
        "Toggle whether this is enabled or not!",
        "the goal of openhidden is to load the url and not display it",
        "Show() needs to be called to cause the URL to be loaded",
        "The JS protects against multiple calls, so this should happen only when",
        "closeDialog() is called by other native code.",
        "Window window = childView.getWindow();",
        "WindowManager.LayoutParams wlp = window.getAttributes();",
        "wlp.flags = WindowManager.LayoutParams.FLAG_DIM_BEHIND;",
        "wlp.dimAmount = toAlpha;",
        "window.setAttributes(wlp);",
        "ObjectAnimator fade = ObjectAnimator.ofFloat(dialog.getWindow(), \"alpha\",  0.0f, toAlpha);",
        "fade.setDuration(animationDuration);",
        "final AnimatorSet mAnimationSet = new AnimatorSet();",
        "mAnimationSet.play(fade);",
        "If dialing phone (tel:5551212)",
        "If sms:5551212?body=This is the message",
        "Get address",
        "If body, then set sms body",
        "if (!newloc.equals(edittext.getText().toString())) {",
        "edittext.setText(newloc);",
        "}"
    ],
    "docstrings": [
        "Licensed to the Apache Software Foundation (ASF) under one\n       or more contributor license agreements.  See the NOTICE file\n       distributed with this work for additional information\n       regarding copyright ownership.  The ASF licenses this file\n       to you under the Apache License, Version 2.0 (the\n       \"License\"); you may not use this file except in compliance\n       with the License.  You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n       Unless required by applicable law or agreed to in writing,\n       software distributed under the License is distributed on an\n       \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n       KIND, either express or implied.  See the License for the\n       specific language governing permissions and limitations\n       under the License.",
        "* Executes the request and returns PluginResult.\n     *\n     * @param action        The action to execute.\n     * @param args          JSONArry of arguments for the plugin.\n     * @param callbackId    The callback id used when calling back into JavaScript.\n     * @return              A PluginResult object with a status and message.",
        "This code exists for compatibility between 3.x and 4.x versions of Cordova.\n                         * Previously the Config class had a static method, isUrlWhitelisted(). That\n                         * responsibility has been moved to the plugins, with an aggregating method in\n                         * PluginManager.",
        "* Called when the view navigates.",
        "* Called by AccelBroker when listener is to be shut down.\n     * Stop listener.",
        "* Inject an object (script or style) into the OverAppBrowser WebView.\n     *\n     * This is a helper method for the inject{Script|Style}{Code|File} API calls, which\n     * provides a consistent method for injecting JavaScript code into the document.\n     *\n     * If a wrapper string is supplied, then the source string will be JSON-encoded (adding\n     * quotes) and wrapped using string formatting. (The wrapper string should have a single\n     * '%s' marker)\n     *\n     * @param source      The source object (filename or script/style text) to inject into\n     *                    the document.\n     * @param jsWrapper   A JavaScript string to wrap the source string in, so that the object\n     *                    is properly injected, or null if the source string is JavaScript text\n     *                    which should be executed directly.",
        "* Put the list of features into a hash map\n     *\n     * @param optString\n     * @return",
        "* Display a new browser with the specified URL.\n     *\n     * @param url           The url to load.\n     * @param usePhoneGap   Load url in PhoneGap webview\n     * @return              \"\" if ok, or error message.",
        "* Closes the dialog",
        "* Checks to see if it is possible to go back one page in history, then does so.",
        "* Can the web browser go back?\n     * @return boolean",
        "* Has the user set the hardware back button to go back\n     * @return boolean",
        "* Checks to see if it is possible to go forward one page in history, then does so.",
        "* Navigate to the new page\n     *\n     * @param url to load",
        "* Should we show the location bar?\n     *\n     * @return boolean",
        "* Display a new browser with the specified URL.\n     *\n     * @param url           The url to load.\n     * @param jsonObject",
        "* Convert our DIP units to Pixels\n             *\n             * @return int",
        "* Create a new plugin success result and send it back to JavaScript\n     *\n     * @param obj a JSONObject contain event payload information",
        "* Create a new plugin result and send it back to JavaScript\n     *\n     * @param obj a JSONObject contain event payload information\n     * @param status the status code to return to the JavaScript environment",
        "* The webview client receives notifications about appView",
        "* Constructor.\n         *\n         * @param mContext\n         * @param edittext",
        "* Notify the host application that a page has started loading.\n         *\n         * @param view          The webview initiating the callback.\n         * @param url           The url of the page."
    ],
    "functions": [
        "execute",
        "run",
        "onReset",
        "onDestroy",
        "injectDeferredObject",
        "run",
        "parseFeature",
        "openExternal",
        "closeDialog",
        "run",
        "onPageFinished",
        "goBack",
        "canGoBack",
        "hardwareBack",
        "goForward",
        "navigate",
        "getShowLocationBar",
        "OverAppBrowser",
        "getOverAppBrowser",
        "showWebPage",
        "dpToPixels",
        "run",
        "sendUpdate",
        "sendUpdate",
        "show",
        "run",
        "fadeTo",
        "run",
        "OverAppBrowserClient",
        "onPageStarted",
        "onPageFinished",
        "onReceivedError"
    ],
    "classes": [
        "OverAppBrowser",
        "OverAppBrowserClient"
    ]
}