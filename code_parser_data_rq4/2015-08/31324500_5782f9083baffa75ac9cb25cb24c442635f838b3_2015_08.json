{
    "identifiers": [
        "argparse",
        "socket",
        "time",
        "args",
        "vals",
        "nLS",
        "deliveredLumi",
        "recordedLumi",
        "vals",
        "fields",
        "index",
        "lstrip",
        "rstrip",
        "args",
        "beamMode",
        "args",
        "beamMode",
        "beamMode",
        "testInterval",
        "vals",
        "nLS",
        "vals",
        "fields",
        "index",
        "args",
        "source",
        "deliveredLumi",
        "LStime",
        "lumi",
        "recordedLumi",
        "LStime",
        "lumi",
        "vals",
        "fields",
        "index",
        "args",
        "lumibyls",
        "LStime",
        "lumi",
        "LStime",
        "lumi",
        "vals",
        "fields",
        "index",
        "format",
        "vals",
        "fields",
        "index",
        "strip",
        "vals",
        "fields",
        "index",
        "strip",
        "vals",
        "fields",
        "index",
        "strip",
        "vals",
        "fields",
        "index",
        "strip",
        "vals",
        "fields",
        "index",
        "strip",
        "delLumi",
        "recLumi",
        "getPU",
        "vals",
        "args",
        "printLevel",
        "outString",
        "resultOutput",
        "args",
        "outString",
        "nLS",
        "lumi",
        "deliveredLumi",
        "recordedLumi",
        "integratedLumi",
        "integratedLumi",
        "integratedLumi",
        "integratedLumi",
        "vals",
        "vals",
        "fields",
        "index",
        "vals",
        "fields",
        "index",
        "sigmaMB",
        "lumi",
        "nBX",
        "fLHC",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "socket",
        "gethostname",
        "parser",
        "add_argument",
        "defaultDataDir",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "started",
        "fOut",
        "started",
        "args",
        "outputFile",
        "open",
        "args",
        "outputFile",
        "fOut",
        "write",
        "args",
        "outputFile",
        "fOut",
        "write",
        "args",
        "firstFill",
        "lastFill",
        "firstRun",
        "lastRun",
        "startTime",
        "endTime",
        "time",
        "time",
        "args",
        "begin",
        "len",
        "args",
        "begin",
        "args",
        "begin",
        "isdigit",
        "args",
        "begin",
        "len",
        "args",
        "begin",
        "args",
        "begin",
        "isdigit",
        "args",
        "begin",
        "time",
        "strptime",
        "args",
        "begin",
        "time",
        "mktime",
        "sTime",
        "UTC",
        "args",
        "end",
        "len",
        "args",
        "end",
        "args",
        "end",
        "isdigit",
        "args",
        "end",
        "len",
        "args",
        "end",
        "args",
        "end",
        "isdigit",
        "args",
        "end",
        "time",
        "strptime",
        "args",
        "end",
        "time",
        "mktime",
        "sTime",
        "UTC",
        "vals",
        "firstFill",
        "lastFill",
        "vals",
        "fields",
        "index",
        "fill",
        "firstFill",
        "fill",
        "lastFill",
        "firstRun",
        "lastRun",
        "vals",
        "fields",
        "index",
        "run",
        "firstRun",
        "run",
        "lastRun",
        "startTime",
        "endTime",
        "time",
        "time",
        "time",
        "strptime",
        "vals",
        "fields",
        "index",
        "strip",
        "time",
        "mktime",
        "sTime",
        "utc",
        "startTime",
        "utc",
        "endTime",
        "getArgs",
        "setBeginAndEnd",
        "args",
        "args",
        "eval",
        "open",
        "args",
        "read",
        "run",
        "runList",
        "args",
        "printLevel",
        "format",
        "args",
        "dataDirectory",
        "run",
        "open",
        "format",
        "args",
        "dataDirectory",
        "run",
        "readlines",
        "line",
        "lines",
        "line",
        "split",
        "ls_interval",
        "runList",
        "run",
        "ls_interval",
        "vals",
        "fields",
        "index",
        "ls_interval",
        "getLSLumi",
        "args",
        "vals",
        "nLS",
        "deliveredLumi",
        "recordedLumi",
        "getUnit",
        "deliveredLumi",
        "format",
        "runList",
        "nLS",
        "factor",
        "deliveredLumi",
        "unit",
        "factor",
        "recordedLumi",
        "args",
        "run",
        "format",
        "args",
        "dataDirectory",
        "args",
        "run",
        "args",
        "printLevel",
        "format",
        "runFile",
        "open",
        "runFile",
        "readlines",
        "line",
        "lines",
        "line",
        "split",
        "getLSLumi",
        "args",
        "vals",
        "nLS",
        "deliveredLumi",
        "recordedLumi",
        "getUnit",
        "deliveredLumi",
        "format",
        "args",
        "run",
        "nLS",
        "factor",
        "deliveredLumi",
        "unit",
        "factor",
        "recordedLumi",
        "args",
        "fill",
        "args",
        "fill",
        "lower",
        "args",
        "fill",
        "glob",
        "glob",
        "glob",
        "args",
        "dataDirectory",
        "len",
        "runFileList",
        "runFile",
        "runFileList",
        "args",
        "printLevel",
        "format",
        "runFile",
        "open",
        "runFile",
        "readlines",
        "line",
        "lines",
        "line",
        "split",
        "targetFill",
        "targetFill",
        "vals",
        "fields",
        "index",
        "getLSLumi",
        "args",
        "vals",
        "nLS",
        "deliveredLumi",
        "recordedLumi",
        "nRun",
        "nextRun",
        "nRun",
        "getUnit",
        "deliveredLumi",
        "format",
        "args",
        "fill",
        "nRun",
        "nLS",
        "factor",
        "deliveredLumi",
        "unit",
        "factor",
        "recordedLumi",
        "format",
        "args",
        "fill",
        "args",
        "fill",
        "args",
        "run",
        "args"
    ],
    "literals": [
        "'Mode'",
        "'All'",
        "'deadtime'",
        "'deadtime'",
        "\"{0:s}:{1:s},{2:s}:{2:s},{3:s},{4:s},6500.,{5:.5f},{6:.5f},{7:.5f}\"",
        "'Run'",
        "'Fill'",
        "'LS'",
        "'time'",
        "'Mode'",
        "'/ub'",
        "'/nb'",
        "'/pb'",
        "'/fb'",
        "'lumi'",
        "'Ncol'",
        "\"-f\"",
        "\"--fill\"",
        "\"Fill number (or 'all')\"",
        "\"-r\"",
        "\"--run\"",
        "\"Run number.\"",
        "\"-i\"",
        "\"--JSON\"",
        "\"JSON file\"",
        "\"-o\"",
        "\"--outputFile\"",
        "\"Output file\"",
        "\"-l\"",
        "\"--lumibyls\"",
        "\"store_true\"",
        "\"Lumi by LS mode\"",
        "\"-b\"",
        "\"--beamMode\"",
        "\"STABLE BEAMS\"",
        "\"Beam mode (default 'STABLE BEAMS').\"",
        "\"-p\"",
        "\"--printLevel\"",
        "\"Print level\"",
        "\"./runcsv/\"",
        "'lxplus'",
        "\"/afs/cern.ch/user/m/marlow/public/lcr2/runcsv/\"",
        "\"-d\"",
        "\"--dataDirectory\"",
        "\"path to runcsv directory\"",
        "\"-s\"",
        "\"--source\"",
        "'lumi'",
        "\"Lumi source (default = best)\"",
        "\"--begin\"",
        "\"Begin fill, run, or time in mm/dd/yy hh:mm:ss format\"",
        "\"--end\"",
        "\"End fill, run, or time in mm/dd/yy hh:mm:ss format\"",
        "'w'",
        "\"Run:Fill,LS,UTCTime,Beam Status,E(GeV),Delivered(/ub),Recorded(/ub),avgPU\\r\\n\"",
        "\"  Run:Fill,   LS,         UTC,            Status,  E(GeV), Del(/ub), Rec(/ub), avgPU\"",
        "'\\n'",
        "\"%m/%d/%y %H:%M:%S\"",
        "\"%m/%d/%y %H:%M:%S\"",
        "'Fill'",
        "'Run'",
        "'time'",
        "\"%m/%d/%y %H:%M:%S\"",
        "'Fill'",
        "'Run'",
        "'LS'",
        "'Mode'",
        "'source'",
        "'time'",
        "'lumi'",
        "'deadtime'",
        "'Ncol'",
        "'HF'",
        "'PLT'",
        "'BCMF'",
        "'I'",
        "'L[I]'",
        "'r'",
        "\"Opening: {0:s}run{1:s}.csv\"",
        "\"{0:s}run{1:s}.csv\"",
        "'r'",
        "','",
        "'LS'",
        "\"JSON mode: \\n runList={0:s} \\nnLS={1:d} Integrated Lumi: delivered={2:8.3f} ({3:s}) recorded={4:8.3f} ({3:s})\"",
        "\"{0:s}run{1:d}.csv\"",
        "\"Opening: {0:s}\"",
        "'r'",
        "','",
        "\"Run mode: Run = {0:d}, nLS={1:d} Integrated Lumi: delivered={2:8.3f} ({3:s}) recorded={4:8.3f} ({3:s})\"",
        "'all'",
        "'*'",
        "\"Opening: {0:s}\"",
        "'r'",
        "','",
        "'Fill'",
        "\"Fill mode: Fill = {0:s}, #Runs={1:d} #LS={2:d} Integrated Lumi: delivered={3:8.3f} ({4:s}) recorded={5:8.3f} ({4:s})\"",
        "\"Fill mode: Fill = {0:s} no runs found.\"",
        "\"Must specify fill, run, or JSON file.  For help enter lcr2.py -h\""
    ],
    "variables": [
        "beamMode",
        "lumi",
        "lumi",
        "delLumi",
        "recLumi",
        "outString",
        "sigmaMB",
        "lumi",
        "nBX",
        "fLHC",
        "parser",
        "defaultDataDir",
        "defaultDataDir",
        "started",
        "fOut",
        "firstFill",
        "lastFill",
        "firstRun",
        "lastRun",
        "startTime",
        "endTime",
        "firstFill",
        "firstRun",
        "sTime",
        "UTC",
        "startTime",
        "lastFill",
        "lastRun",
        "sTime",
        "UTC",
        "endTime",
        "fill",
        "run",
        "sTime",
        "utc",
        "LStime",
        "fields",
        "nLS",
        "deliveredLumi",
        "recordedLumi",
        "args",
        "started",
        "runList",
        "lines",
        "vals",
        "nLS",
        "lumi",
        "deliveredLumi",
        "recordedLumi",
        "unit",
        "factor",
        "runFile",
        "lines",
        "vals",
        "nLS",
        "lumi",
        "deliveredLumi",
        "recordedLumi",
        "unit",
        "factor",
        "targetFill",
        "targetFill",
        "runFileList",
        "nRun",
        "lines",
        "nextRun",
        "vals",
        "nLS",
        "lumi",
        "deliveredLumi",
        "recordedLumi",
        "nextRun",
        "unit",
        "factor"
    ],
    "comments": [
        "! /usr/bin/env python",
        "V1.3",
        "Changes:",
        "o add --begin and --end functionality",
        "V1.2",
        "Changes:",
        "o remove spaces from lumibyls option",
        "Known problems/missing functionality:",
        "o minimal checking of input errors",
        "o no lumibyXing option",
        "Run:Fill,LS,UTCTime,Beam Status,E(GeV),Delivered(/ub),Recorded(/ub),avgPU",
        "149382:1455,150:150,12/30/15 03:33:59,STABLE BEAMS,6500.1,11.383,11.383,0.752",
        "execution starts here",
        "if the fill in this file isn't right, move on to the next file"
    ],
    "docstrings": [],
    "functions": [
        "getLSLumi",
        "getUnit",
        "getPU",
        "getArgs",
        "resultOutput",
        "setBeginAndEnd",
        "testInterval"
    ],
    "classes": []
}