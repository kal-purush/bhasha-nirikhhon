{
    "identifiers": [
        "mock",
        "patch",
        "datetime",
        "unittest2",
        "unittest",
        "ImportError",
        "unittest",
        "django",
        "test",
        "TestCase",
        "django",
        "utils",
        "timezone",
        "graphite",
        "render",
        "attime",
        "parseTimeReference",
        "parseATTime",
        "datetime",
        "datetime",
        "TestCase",
        "patch",
        "timezone",
        "return_value",
        "MOCK_DATE",
        "patcher",
        "start",
        "patcher",
        "stop",
        "parseTimeTest",
        "parseTimeReference",
        "assertEquals",
        "time_ref",
        "MOCK_DATE",
        "parseTimeReference",
        "assertEquals",
        "time_ref",
        "MOCK_DATE",
        "assertRaises",
        "parseTimeReference",
        "parseTimeReference",
        "assertEquals",
        "time_ref",
        "MOCK_DATE",
        "assertRaises",
        "ValueError",
        "parseTimeReference",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "assertRaises",
        "ValueError",
        "parseTimeReference",
        "assertRaises",
        "parseTimeReference",
        "parseTimeReference",
        "datetime",
        "datetime",
        "assertEquals",
        "time_ref",
        "expected",
        "parseTimeTest",
        "unittest",
        "expectedFailure",
        "parseATTime",
        "datetime",
        "datetime",
        "MOCK_DATE",
        "year",
        "MOCK_DATE",
        "month",
        "MOCK_DATE",
        "day",
        "assertEquals",
        "time_ref",
        "expected"
    ],
    "literals": [
        "'now'",
        "''",
        "\"random\"",
        "\"now\"",
        "\":\"",
        "\"8:50\"",
        "\"8:50am\"",
        "\"8:50pm\"",
        "\"noon\"",
        "\"midnight\"",
        "\"teatime\"",
        "\"yesterday\"",
        "\"tomorrow\"",
        "\"02/25/15\"",
        "\"02/25/2015\"",
        "\"20140606\"",
        "\"january8\"",
        "\"january10\"",
        "\"january800\"",
        "\"january\"",
        "\"monday\"",
        "\"noon+yesterday\""
    ],
    "variables": [
        "MOCK_DATE",
        "patcher",
        "mock_now",
        "time_ref",
        "time_ref",
        "time_ref",
        "time_ref",
        "time_ref",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "expected",
        "time_ref",
        "time_ref",
        "time_ref",
        "expected",
        "time_ref",
        "expected"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setUp",
        "tearDown",
        "test_parse_empty_return_now",
        "test_parse_None_return_now",
        "test_parse_random_string_raise_Exception",
        "test_parse_now_return_now",
        "test_parse_colon_raises_ValueError",
        "test_parse_hour_return_hour_of_today",
        "test_parse_hour_am",
        "test_parse_hour_pm",
        "test_parse_noon",
        "test_parse_midnight",
        "test_parse_teatime",
        "test_parse_yesterday",
        "test_parse_tomorrow",
        "test_parse_MM_slash_DD_slash_YY",
        "test_parse_MM_slash_DD_slash_YYYY",
        "test_parse_YYYYMMDD",
        "test_parse_MonthName_DayOfMonth_onedigits",
        "test_parse_MonthName_DayOfMonth_twodigits",
        "test_parse_MonthName_DayOfMonth_threedigits_raise_ValueError",
        "test_parse_MonthName_without_DayOfMonth_raise_Exception",
        "test_parse_monday_return_monday_before_now",
        "test_parse_noon_plus_yesterday"
    ],
    "classes": [
        "parseTimeTest",
        "parseTimeReferenceTest",
        "parseATTimeTest"
    ]
}