{
    "identifiers": [
        "k5test",
        "os",
        "path",
        "join",
        "buildtop",
        "testpreauth",
        "testpreauth",
        "K5Realm",
        "create_host",
        "get_creds",
        "krb5_conf",
        "conf",
        "realm",
        "run",
        "kadminl",
        "realm",
        "user_princ",
        "realm",
        "run",
        "kadminl",
        "realm",
        "user_princ",
        "realm",
        "run",
        "kadminl",
        "realm",
        "run",
        "kinit",
        "realm",
        "user_princ",
        "input",
        "password",
        "fail",
        "realm",
        "run",
        "kinit",
        "input",
        "password",
        "expected_code",
        "fail",
        "realm",
        "run",
        "kadminl",
        "realm",
        "user_princ",
        "realm",
        "run",
        "kinit",
        "realm",
        "user_princ",
        "input",
        "password",
        "fail"
    ],
    "literals": [
        "'plugins'",
        "'preauth'",
        "'test'",
        "'test.so'",
        "'plugins'",
        "'kdcpreauth'",
        "'module'",
        "'test:'",
        "'clpreauth'",
        "'module'",
        "'test:'",
        "'modprinc'",
        "'+requires_preauth'",
        "'setstr'",
        "'teststring'",
        "'testval'",
        "'addprinc'",
        "'-nokey'",
        "'+requires_preauth'",
        "'nokeyuser'",
        "'user'",
        "'\\n'",
        "'testval'",
        "'Decrypted string attribute not in kinit output'",
        "'nokeyuser'",
        "'user'",
        "'\\n'",
        "'no key'",
        "'Expected \"no key\" message not in kinit output'",
        "'setstr'",
        "'2rt'",
        "'secondtrip'",
        "'user'",
        "'\\n'",
        "'2rt: secondtrip'",
        "'multi round-trip cookie test'"
    ],
    "variables": [
        "testpreauth",
        "conf",
        "realm"
    ],
    "comments": [
        "!/usr/bin/python",
        "Test that the kdcpreauth client_keyblock() callback matches the key",
        "indicated by the etype info, and returns NULL if no key was selected.",
        "Exercise KDC_ERR_MORE_PREAUTH_DATA_REQUIRED and secure cookies."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}