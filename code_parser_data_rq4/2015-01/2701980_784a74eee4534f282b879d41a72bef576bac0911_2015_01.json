{
    "identifiers": [
        "Collections",
        "Generic",
        "WPFLocalizeExtension",
        "Engine",
        "XAMLMarkupExtensions",
        "Base",
        "ProviderExample",
        "Collections",
        "ObjectModel",
        "Globalization",
        "Windows",
        "Reflection",
        "IO",
        "Windows",
        "Media",
        "WPFLocalizeExtension",
        "Providers",
        "Runtime",
        "InteropServices",
        "Text",
        "FrameworkElement",
        "ILocalizationProvider",
        "fileName",
        "fileName",
        "value",
        "fileName",
        "value",
        "AvailableCultures",
        "Clear",
        "GetWorkingDirectory",
        "CultureInfo",
        "GetCultures",
        "CultureTypes",
        "AllCultures",
        "c",
        "cultures",
        "Path",
        "Combine",
        "appPath",
        "FileName",
        "c",
        "Name",
        "File",
        "Exists",
        "csv",
        "AvailableCultures",
        "Add",
        "c",
        "OnProviderChanged",
        "hasHeader",
        "hasHeader",
        "value",
        "OnProviderChanged",
        "ProviderChanged",
        "ProviderChanged",
        "ProviderChangedEventArgs",
        "DependencyObject",
        "target",
        "key",
        "message",
        "ProviderError",
        "ProviderError",
        "ProviderErrorEventArgs",
        "target",
        "key",
        "message",
        "ComponentModel",
        "DesignerProperties",
        "GetIsInDesignMode",
        "DependencyObject",
        "EnvDTE",
        "DTE",
        "Marshal",
        "GetActiveObject",
        "dte",
        "Solution",
        "SolutionBuild",
        "item",
        "sb",
        "StartupProjects",
        "msg",
        "item",
        "EnvDTE",
        "Project",
        "dte",
        "Solution",
        "Item",
        "msg",
        "Path",
        "GetDirectoryName",
        "startupProj",
        "FullName",
        "Path",
        "GetDirectoryName",
        "Assembly",
        "GetExecutingAssembly",
        "Location",
        "inKey",
        "outAssembly",
        "outDict",
        "outKey",
        "outAssembly",
        "outDict",
        "outKey",
        "IsNullOrEmpty",
        "inKey",
        "inKey",
        "Trim",
        "Split",
        "ToCharArray",
        "split",
        "Length",
        "outAssembly",
        "IsNullOrEmpty",
        "split",
        "split",
        "outDict",
        "IsNullOrEmpty",
        "split",
        "split",
        "outKey",
        "split",
        "split",
        "Length",
        "outDict",
        "IsNullOrEmpty",
        "split",
        "split",
        "outKey",
        "split",
        "split",
        "Length",
        "outKey",
        "split",
        "key",
        "DependencyObject",
        "target",
        "ParseKey",
        "key",
        "assembly",
        "dictionary",
        "key",
        "target",
        "FQAssemblyDictionaryKey",
        "key",
        "assembly",
        "dictionary",
        "IsNullOrEmpty",
        "assembly",
        "assembly",
        "GetAssembly",
        "target",
        "IsNullOrEmpty",
        "dictionary",
        "dictionary",
        "GetDictionary",
        "target",
        "FQAssemblyDictionaryKey",
        "key",
        "assembly",
        "dictionary",
        "DependencyObject",
        "ParentChangedNotifier",
        "DependencyObject",
        "ParentChangedNotifier",
        "DependencyObject",
        "obj",
        "OnProviderChanged",
        "obj",
        "DependencyObject",
        "target",
        "GetAssembly",
        "target",
        "GetDictionary",
        "target",
        "ProviderChanged",
        "ProviderChanged",
        "ProviderChangedEventArgs",
        "target",
        "DependencyObject",
        "target",
        "target",
        "target",
        "GetValueOrRegisterParentNotifier",
        "CSVEmbeddedLocalizationProvider",
        "DefaultAssemblyProperty",
        "ParentChangedAction",
        "parentNotifiers",
        "DependencyObject",
        "target",
        "target",
        "target",
        "GetValueOrRegisterParentNotifier",
        "CSVEmbeddedLocalizationProvider",
        "DefaultDictionaryProperty",
        "ParentChangedAction",
        "parentNotifiers",
        "key",
        "DependencyObject",
        "target",
        "CultureInfo",
        "culture",
        "GetWorkingDirectory",
        "culture",
        "CultureInfo",
        "InvariantCulture",
        "csvPath",
        "Path",
        "Combine",
        "appPath",
        "FileName",
        "IsNullOrEmpty",
        "culture",
        "Name",
        "culture",
        "Name",
        "File",
        "Exists",
        "csvPath",
        "culture",
        "culture",
        "Parent",
        "File",
        "Exists",
        "csvPath",
        "csvPath",
        "Path",
        "Combine",
        "appPath",
        "FileName",
        "File",
        "Exists",
        "csvPath",
        "OnProviderError",
        "target",
        "key",
        "culture",
        "EnglishName",
        "csvPath",
        "StreamReader",
        "csvPath",
        "Encoding",
        "UTF8",
        "HasHeader",
        "reader",
        "EndOfStream",
        "reader",
        "ReadLine",
        "reader",
        "EndOfStream",
        "reader",
        "ReadLine",
        "line",
        "Split",
        "ToCharArray",
        "parts",
        "Length",
        "parts",
        "key",
        "ret",
        "parts",
        "ret",
        "OnProviderError",
        "target",
        "key",
        "csvPath",
        "ret",
        "ObservableCollection",
        "CultureInfo",
        "ObservableCollection",
        "CultureInfo",
        "availableCultures",
        "availableCultures",
        "ObservableCollection",
        "CultureInfo",
        "availableCultures"
    ],
    "literals": [
        "\"\"",
        "\".\"",
        "\".csv\"",
        "\"VisualStudio.DTE.10.0\"",
        "\"\"",
        "\":\"",
        "\"\"",
        "\"\"",
        "\".\"",
        "\".csv\"",
        "\".csv\"",
        "\"A file for the provided culture \"",
        "\" does not exist at \"",
        "\".\"",
        "\";\"",
        "\"The key does not exist in \"",
        "\".\""
    ],
    "variables": [
        "fileName",
        "FileName",
        "appPath",
        "cultures",
        "csv",
        "hasHeader",
        "HasHeader",
        "dte",
        "sb",
        "msg",
        "startupProj",
        "split",
        "assembly",
        "dictionary",
        "parentNotifiers",
        "assembly",
        "dictionary",
        "ret",
        "appPath",
        "csvPath",
        "reader",
        "line",
        "parts",
        "availableCultures",
        "AvailableCultures",
        "ProviderChangedEventHandler",
        "ProviderChanged",
        "ProviderErrorEventHandler",
        "ProviderError",
        "ValueChangedEventHandler",
        "ValueChanged"
    ],
    "comments": [
        "<copyright file=\"CSVLocalizationProvider.cs\">",
        "Licensed under Microsoft Public License (Ms-PL)",
        "http://wpflocalizeextension.codeplex.com/license",
        "</copyright>",
        "<author>Uwe Mayer</author>",
        "A localization provider for comma separated files",
        "</summary>",
        "The name of the file without an extension.",
        "</summary>",
        "A flag indicating, if it has a header row.",
        "</summary>",
        "Raise a <see cref=\"ILocalizationProvider.ProviderChanged\"/> event.",
        "</summary>",
        "Calls the <see cref=\"ILocalizationProvider.ProviderError\"/> event.",
        "</summary>",
        "<param name=\"target\">The target object.</param>",
        "<param name=\"key\">The key.</param>",
        "<param name=\"message\">The error message.</param>",
        "Get the working directory, depending on the design mode or runtime.",
        "</summary>",
        "<returns>The working directory.</returns>",
        "Parses a key ([[Assembly:]Dict:]Key and return the parts of it.",
        "</summary>",
        "<param name=\"inKey\">The key to parse.</param>",
        "<param name=\"outAssembly\">The found or default assembly.</param>",
        "<param name=\"outDict\">The found or default dictionary.</param>",
        "<param name=\"outKey\">The found or default key.</param>",
        "Reset everything to null.",
        "assembly:dict:key",
        "dict:key",
        "key",
        "A dictionary for notification classes for changes of the individual target Parent changes.",
        "</summary>",
        "An action that will be called when a parent of one of the observed target objects changed.",
        "</summary>",
        "<param name=\"obj\">The target <see cref=\"DependencyObject\"/>.</param>",
        "Calls the <see cref=\"ILocalizationProvider.ProviderChanged\"/> event.",
        "</summary>",
        "<param name=\"target\">The target object.</param>",
        "if (!String.IsNullOrEmpty(assembly) && !String.IsNullOrEmpty(dictionary))",
        "GetResourceManager(assembly, dictionary);",
        "Get the assembly from the context, if possible.",
        "</summary>",
        "<param name=\"target\">The target object.</param>",
        "<returns>The assembly name, if available.</returns>",
        "Get the dictionary from the context, if possible.",
        "</summary>",
        "<param name=\"target\">The target object.</param>",
        "<returns>The dictionary name, if available.</returns>",
        "Get the localized object.",
        "</summary>",
        "<param name=\"key\">The key to the value.</param>",
        "<param name=\"target\">The target object.</param>",
        "<param name=\"culture\">The culture to use.</param>",
        "<returns>The value corresponding to the source/dictionary/key path for the given culture (otherwise NULL).</returns>",
        "Try to get the culture specific file.",
        "Take the invariant culture.",
        "Open the file.",
        "Skip the header if needed.",
        "Read each line and split it.",
        "Check the key (1st column).",
        "Get the value (2nd column).",
        "Nothing found -> Raise the error message.",
        "An observable list of available cultures.",
        "</summary>",
        "Gets fired when the provider changed.",
        "</summary>",
        "An event that is fired when an error occurred.",
        "</summary>",
        "An event that is fired when a value changed.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "OnProviderChanged",
        "OnProviderError",
        "GetWorkingDirectory",
        "ParseKey",
        "FullyQualifiedResourceKeyBase",
        "GetFullyQualifiedResourceKey",
        "ParentChangedAction",
        "OnProviderChanged",
        "GetAssembly",
        "GetDictionary",
        "GetLocalizedObject"
    ],
    "classes": [
        "CSVLocalizationProvider"
    ]
}