{
    "identifiers": [
        "egret",
        "EgretShader",
        "gl",
        "gl"
    ],
    "literals": [
        "\"precision mediump float;\"",
        "\"uniform vec2 dir;\"",
        "\"uniform sampler2D uSampler;\"",
        "\"varying vec2 vTextureCoord;\"",
        "\"void main()\"",
        "\"{\"",
        "\"gl_FragColor = vec4(0.0);\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.028*dir.x, -0.028 * dir.y))) * 0.0044299121055113265;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.024*dir.x, -0.024 * dir.y))) * 0.00895781211794;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.020*dir.x, -0.020 * dir.y))) * 0.0215963866053;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.016*dir.x, -0.016 * dir.y))) * 0.0443683338718;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.012*dir.x, -0.012 * dir.y))) * 0.0776744219933;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.008*dir.x, -0.008 * dir.y))) * 0.115876621105;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2(-0.004*dir.x, -0.004 * dir.y))) * 0.147308056121;\"",
        "\"gl_FragColor += texture2D(uSampler, vTextureCoord) * 0.159576912161;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.004*dir.x,  0.004 * dir.y))) * 0.147308056121;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.008*dir.x,  0.008 * dir.y))) * 0.115876621105;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.012*dir.x,  0.012 * dir.y))) * 0.0776744219933;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.016*dir.x,  0.016 * dir.y))) * 0.0443683338718;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.020*dir.x,  0.020 * dir.y))) * 0.0215963866053;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.024*dir.x,  0.024 * dir.y))) * 0.00895781211794;\"",
        "\"gl_FragColor += texture2D(uSampler, (vTextureCoord + vec2( 0.028*dir.x,  0.028 * dir.y))) * 0.0044299121055113265;\"",
        "\"}\"",
        "'2f'"
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2014,Egret-Labs.org\n * All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of the Egret-Labs.org nor the\n *       names of its contributors may be used to endorse or promote products\n *       derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY EGRET-LABS.ORG AND CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL EGRET-LABS.ORG AND CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
    ],
    "functions": [],
    "classes": [
        "BlurShader"
    ]
}