{
    "identifiers": [
        "simplejson",
        "json",
        "ImportError",
        "json",
        "urllib2",
        "argparse",
        "StringIO",
        "sys",
        "textwrap",
        "wrap",
        "fill",
        "wf_url",
        "label_unnamed_data",
        "nodes_are_analyses",
        "urllib2",
        "urlopen",
        "wf_url",
        "read",
        "contents",
        "replace",
        "json",
        "loads",
        "contents",
        "convert",
        "wf",
        "label_unnamed_data",
        "nodes_are_analyses",
        "results",
        "workflow",
        "label_unnamed_data",
        "nodes_are_analyses",
        "label_unnamed_data",
        "nodes_are_analyses",
        "sys",
        "stderr",
        "write",
        "workflow",
        "sys",
        "stderr",
        "write",
        "format",
        "workflow",
        "workflow",
        "step",
        "sorted",
        "steps",
        "key",
        "steps",
        "step",
        "steps",
        "step",
        "json",
        "loads",
        "ts_content",
        "tool_state",
        "input_count",
        "tool_state",
        "nodes_dict",
        "append",
        "node_data",
        "steps",
        "step",
        "steps",
        "step",
        "tool_version",
        "steps",
        "step",
        "json",
        "loads",
        "ts_content",
        "tool_state",
        "steps",
        "step",
        "tool_id",
        "steps",
        "step",
        "input_count",
        "name",
        "tool_version",
        "tool_state",
        "tool_id",
        "nodes_dict",
        "append",
        "node_tool",
        "input_count",
        "step",
        "sorted",
        "steps",
        "key",
        "steps",
        "step",
        "input_name",
        "steps",
        "step",
        "unicode",
        "steps",
        "step",
        "input_name",
        "input_count",
        "start_step_num",
        "step",
        "edges_dict",
        "append",
        "edge_data",
        "input_count",
        "nodes_dict",
        "edges_dict",
        "content",
        "json",
        "dumps",
        "elements_dict",
        "separators",
        "indent",
        "json_data",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "output",
        "args",
        "output_filename",
        "open",
        "args",
        "output_filename",
        "sys",
        "stdout",
        "json",
        "load",
        "args",
        "workflow_file",
        "convert",
        "wf",
        "args",
        "label_unnamed_data",
        "args",
        "nodes_are_analyses",
        "main"
    ],
    "literals": [
        "'\\\"'",
        "'\"'",
        "'Warning: --label_unnamed_data does nothing if graph nodes are datasets\\n'",
        "\"format-version\"",
        "\"0.1\"",
        "\"Unknown format version {0}, continuing anyway\\n\"",
        "'format-version'",
        "'steps'",
        "'name'",
        "'Input dataset'",
        "'tool_state'",
        "\"None\"",
        "'id'",
        "'n'",
        "\"name\"",
        "\"Input dataset\"",
        "\"color\"",
        "\"#FCF8E3\"",
        "\"tool_state\"",
        "\"data\"",
        "'name'",
        "'tool_version'",
        "\"None\"",
        "'tool_state'",
        "\"None\"",
        "'tool_id'",
        "\"None\"",
        "'type'",
        "\"None\"",
        "'id'",
        "'n'",
        "\"name\"",
        "\"color\"",
        "\"#D9EDF7\"",
        "\"tool_version\"",
        "\"tool_state\"",
        "\"tool_id\"",
        "\"type\"",
        "\"data\"",
        "'name'",
        "'Input dataset'",
        "'input_connections'",
        "'input_connections'",
        "'id'",
        "'id'",
        "'e'",
        "'weight'",
        "'1'",
        "'source'",
        "'n'",
        "'target'",
        "'n'",
        "\"data\"",
        "'nodes'",
        "'edges'",
        "\"elements\"",
        "','",
        "':'",
        "\"Convert Galaxy workflow JSON to cytoscape JSON\"",
        "\"workflow_file\"",
        "\"Galaxy workflow description (JSON format)\"",
        "'--label_unnamed_data'",
        "'store_true'",
        "\"Label datasets even if they have no explicit name (rename dataset action)\"",
        "'--nodes_are_analyses'",
        "'store_true'",
        "\"Graph nodes are analyses (by default they are datasets)\"",
        "'--no_graph_name'",
        "'store_true'",
        "\"Omit the name of the graph\"",
        "'--output_filename'",
        "\"Output filename (default is to print to stdout)\"",
        "'w'",
        "\"__main__\""
    ],
    "variables": [
        "contents",
        "contents",
        "wf",
        "results",
        "steps",
        "input_count",
        "nodes_dict",
        "ts_content",
        "tool_state",
        "tool_state",
        "node_data",
        "name",
        "tool_version",
        "tool_version",
        "ts_content",
        "tool_state",
        "tool_state",
        "tool_id",
        "tool_id",
        "node_tool",
        "input_count",
        "edges_dict",
        "start_step_num",
        "edge_data",
        "content",
        "elements_dict",
        "json_data",
        "parser",
        "args",
        "output",
        "output",
        "wf"
    ],
    "comments": [
        "!/usr/bin/python",
        "Convert workflow string into json object",
        "print contents",
        "Get step objects from galaxy workflow json",
        "Create data and tool nodes",
        "Input data node",
        "for key, value in tool_state.iteritems():",
        "print '\"' + key + '\":\"' + value + '\"'",
        "Create edges",
        "Positional argument",
        "Optional arguments",
        "Convert workflow file into json object",
        "Convert json to cytoscape format"
    ],
    "docstrings": [],
    "functions": [
        "run",
        "convert",
        "main"
    ],
    "classes": []
}