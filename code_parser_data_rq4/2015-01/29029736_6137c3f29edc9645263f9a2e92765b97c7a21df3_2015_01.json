{
    "identifiers": [
        "Core",
        "key",
        "typeName",
        "key",
        "value",
        "title",
        "key",
        "paths",
        "key",
        "value",
        "key",
        "value",
        "key",
        "value",
        "typeName",
        "key",
        "defaultValue",
        "recursive",
        "child",
        "child",
        "referenceFolder",
        "child",
        "referenceFolder",
        "Core",
        "Core"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "<reference path=\"../../includes.d.ts\" />"
    ],
    "docstrings": [
        "* @module Core",
        "* a NodeSelection interface so we can expose things like the objectName and the MBean's entries\n     *\n     * @class NodeSelection",
        "* @property title\n         * @type string",
        "* @property key\n         * @type string\n         * @optional",
        "* @property typeName\n         * @type string\n         * @optional",
        "* @property objectName\n         * @type string\n         * @optional",
        "* @property domain\n         * @type string\n         * @optional",
        "* @property entries\n         * @type any\n         * @optional",
        "* @property folderNames\n         * @type array\n         * @optional",
        "* @property children\n         * @type NodeSelection\n         * @optional",
        "* @property parent\n         * @type NodeSelection\n         * @optional",
        "* @method isFolder\n         * @return {boolean}",
        "* @property version\n         * @type string\n         * @optional",
        "* @method get\n         * @param {String} key\n         * @return {NodeSelection}",
        "* @method ancestorHasType\n         * @param {String} typeName\n         * @return {Boolean}",
        "* @method ancestorHasEntry\n         * @param key\n         * @param value\n         * @return {Boolean}",
        "* @method findDescendant\n         * @param {Function} filter\n         * @return {NodeSelection}",
        "* @method findAncestor\n         * @param {Function} filter\n         * @return {NodeSelection}",
        "* @class Folder\n     * @uses NodeSelection",
        "* Navigates the given paths and returns the value there or null if no value could be found\n         * @method navigate\n         * @for Folder\n         * @param {Array} paths\n         * @return {NodeSelection}",
        "* Removes this node from my parent if I have one\n         * @method detach\n         * @for Folder\n      \\",
        "* Searches this folder and all its descendants for the first folder to match the filter\n         * @method findDescendant\n         * @for Folder\n         * @param {Function} filter\n         * @return {Folder}",
        "* Searches this folder and all its ancestors for the first folder to match the filter\n         * @method findDescendant\n         * @for Folder\n         * @param {Function} filter\n         * @return {Folder}"
    ],
    "functions": [],
    "classes": [
        "Folder",
        "Folder"
    ]
}