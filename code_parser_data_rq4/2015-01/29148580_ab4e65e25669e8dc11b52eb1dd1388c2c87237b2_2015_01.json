{
    "identifiers": [
        "scipy",
        "sp",
        "numpy",
        "np",
        "scipy",
        "ndimage",
        "obspy",
        "signal",
        "array_analysis",
        "obspy",
        "core",
        "UTCDateTime",
        "read",
        "AttribDict",
        "mpl_toolkits",
        "basemap",
        "Basemap",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "mlab",
        "mpl_toolkits",
        "basemap",
        "pyproj",
        "pyproj",
        "time",
        "matplotlib",
        "matplotlib",
        "colors",
        "LinearSegmentedColormap",
        "ListedColormap",
        "matplotlib",
        "ticker",
        "MaxNLocator",
        "obspy",
        "signal",
        "util",
        "az2baz2az",
        "obspy",
        "signal",
        "util",
        "prevpow2",
        "obspy",
        "signal",
        "spectral_estimation",
        "fft_taper",
        "psd",
        "matplotlib",
        "rcParams",
        "update",
        "LinearSegmentedColormap",
        "CDICT",
        "stream",
        "coordFile",
        "open",
        "coordFile",
        "line",
        "coordinates",
        "line",
        "strip",
        "split",
        "tr",
        "stream",
        "tr",
        "id",
        "c",
        "tr",
        "stats",
        "AttribDict",
        "c",
        "c",
        "c",
        "stream",
        "stream",
        "win_len",
        "win_frac",
        "sll_x",
        "slm_x",
        "sll_y",
        "slm_y",
        "sl_s",
        "semb_thres",
        "vel_thres",
        "frqlow",
        "frqhigh",
        "stime",
        "etime",
        "prewhiten",
        "verbose",
        "coordsys",
        "timestamp",
        "method",
        "diag",
        "diag_fact",
        "store",
        "get_lims",
        "plot",
        "plotspec",
        "stream",
        "stats",
        "sampling_rate",
        "len",
        "stream",
        "len",
        "stream",
        "select",
        "sampling_rate",
        "fs",
        "ValueError",
        "msg",
        "slm_x",
        "sll_x",
        "sl_s",
        "slm_y",
        "sll_y",
        "sl_s",
        "get_geometry",
        "stream",
        "coordsys",
        "coordsys",
        "verbose",
        "verbose",
        "verbose",
        "geometry",
        "stream",
        "stime",
        "etime",
        "get_timeshift",
        "geometry",
        "sll_x",
        "sll_y",
        "sl_s",
        "grdpts_x",
        "grdpts_y",
        "get_spoint",
        "stream",
        "stime",
        "etime",
        "len",
        "stream",
        "stream",
        "stats",
        "sampling_rate",
        "win_len",
        "fs",
        "nsamp",
        "win_frac",
        "nextpow2",
        "nsamp",
        "fs",
        "nfft",
        "frqlow",
        "deltaf",
        "frqhigh",
        "deltaf",
        "max",
        "nlow",
        "min",
        "nfft",
        "nhigh",
        "nhigh",
        "nlow",
        "np",
        "empty",
        "nf",
        "grdpts_x",
        "grdpts_y",
        "nstat",
        "dtype",
        "clibsignal",
        "calcSteer",
        "nstat",
        "grdpts_x",
        "grdpts_y",
        "nf",
        "nlow",
        "deltaf",
        "time_shift_table",
        "steer",
        "np",
        "empty",
        "nf",
        "nstat",
        "nstat",
        "dtype",
        "np",
        "empty",
        "nstat",
        "nf",
        "dtype",
        "stime",
        "np",
        "hanning",
        "nsamp",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "eotr",
        "i",
        "tr",
        "stream",
        "tr",
        "data",
        "spoint",
        "i",
        "offset",
        "spoint",
        "i",
        "offset",
        "nsamp",
        "dat",
        "dat",
        "mean",
        "tap",
        "np",
        "fft",
        "rfft",
        "dat",
        "nfft",
        "nlow",
        "nlow",
        "nf",
        "IndexError",
        "np",
        "require",
        "ft",
        "relpow_map",
        "fill",
        "abspow_map",
        "fill",
        "RPOW",
        "fill",
        "i",
        "xrange",
        "nstat",
        "j",
        "xrange",
        "i",
        "nstat",
        "ft",
        "i",
        "ft",
        "j",
        "conj",
        "i",
        "j",
        "R",
        "i",
        "j",
        "conjugate",
        "dpow",
        "np",
        "abs",
        "R",
        "i",
        "j",
        "sum",
        "dpow",
        "nstat",
        "method",
        "diag",
        "np",
        "identity",
        "nstat",
        "n",
        "xrange",
        "nf",
        "I",
        "R",
        "n",
        "real",
        "trace",
        "nsamp",
        "diag_fact",
        "R",
        "n",
        "real",
        "weights",
        "np",
        "abs",
        "R",
        "n",
        "diagonal",
        "np",
        "sum",
        "w",
        "wmean",
        "nstat",
        "nhigh",
        "np",
        "outer",
        "w",
        "w",
        "T",
        "R",
        "n",
        "w_prod",
        "n",
        "xrange",
        "nf",
        "np",
        "linalg",
        "pinv",
        "R",
        "n",
        "rcond",
        "clibsignal",
        "generalizedBeamformer",
        "relpow_map",
        "abspow_map",
        "steer",
        "R",
        "nsamp",
        "nstat",
        "prewhiten",
        "grdpts_x",
        "grdpts_y",
        "nfft",
        "nf",
        "dpow",
        "method",
        "errcode",
        "msg",
        "errcode",
        "plot",
        "param_estimation",
        "relpow_map",
        "UTCDateTime",
        "newstart",
        "timestamp",
        "sll_x",
        "sll_y",
        "sl_s",
        "stream",
        "stats",
        "network",
        "frqhigh",
        "frqlow",
        "frqhigh",
        "cfreq",
        "plot",
        "relpow_map",
        "net",
        "UTCDateTime",
        "newstart",
        "timestamp",
        "cfreq",
        "flim",
        "sll_x",
        "sll_y",
        "slm_x",
        "slm_y",
        "sl_s",
        "RPOW",
        "relpow_map",
        "np",
        "unravel_index",
        "relpow_map",
        "argmax",
        "relpow_map",
        "shape",
        "relpow_map",
        "ix",
        "iy",
        "abspow_map",
        "ix",
        "iy",
        "store",
        "store",
        "relpow_map",
        "abspow_map",
        "offset",
        "sll_x",
        "ix",
        "sl_s",
        "sll_y",
        "iy",
        "sl_s",
        "np",
        "sqrt",
        "slow_x",
        "slow_y",
        "slow",
        "math",
        "atan2",
        "slow_x",
        "slow_y",
        "math",
        "pi",
        "azimut",
        "relpow",
        "semb_thres",
        "slow",
        "vel_thres",
        "res",
        "append",
        "np",
        "array",
        "newstart",
        "timestamp",
        "relpow",
        "abspow",
        "baz",
        "slow",
        "verbose",
        "newstart",
        "newstart",
        "nsamp",
        "fs",
        "res",
        "newstart",
        "nsamp",
        "nstep",
        "fs",
        "etime",
        "offset",
        "nstep",
        "newstart",
        "nstep",
        "fs",
        "np",
        "array",
        "res",
        "timestamp",
        "timestamp",
        "res",
        "ValueError",
        "msg",
        "np",
        "array",
        "res",
        "RPOW",
        "stream",
        "win_len",
        "win_frac",
        "sll_x",
        "slm_x",
        "sll_y",
        "slm_y",
        "sl_s",
        "semb_thres",
        "vel_thres",
        "frqlow",
        "frqhigh",
        "nfft",
        "stime",
        "etime",
        "prewhiten",
        "verbose",
        "coordsys",
        "timestamp",
        "method",
        "diag",
        "diag_fact",
        "store",
        "stream",
        "stats",
        "sampling_rate",
        "len",
        "stream",
        "len",
        "stream",
        "select",
        "sampling_rate",
        "fs",
        "ValueError",
        "msg",
        "slm_x",
        "sll_x",
        "sl_s",
        "slm_y",
        "sll_y",
        "sl_s",
        "get_geometry",
        "stream",
        "coordsys",
        "coordsys",
        "verbose",
        "verbose",
        "verbose",
        "geometry",
        "stream",
        "stime",
        "etime",
        "get_timeshift",
        "geometry",
        "sll_x",
        "sll_y",
        "sl_s",
        "grdpts_x",
        "grdpts_y",
        "get_spoint",
        "stream",
        "stime",
        "etime",
        "len",
        "stream",
        "stream",
        "stats",
        "sampling_rate",
        "win_len",
        "fs",
        "nsamp",
        "win_frac",
        "fs",
        "nfft",
        "frqlow",
        "deltaf",
        "frqhigh",
        "deltaf",
        "max",
        "nlow",
        "min",
        "nfft",
        "nhigh",
        "nhigh",
        "nlow",
        "np",
        "fft",
        "fftfreq",
        "nfft",
        "d",
        "nlow",
        "nlow",
        "nf",
        "np",
        "empty",
        "nf",
        "grdpts_x",
        "grdpts_y",
        "nstat",
        "dtype",
        "clibsignal",
        "calcSteer",
        "nstat",
        "grdpts_x",
        "grdpts_y",
        "nf",
        "nlow",
        "deltaf",
        "time_shift_table",
        "steer",
        "np",
        "empty",
        "nf",
        "nstat",
        "nstat",
        "dtype",
        "np",
        "empty",
        "nstat",
        "nf",
        "dtype",
        "stime",
        "cosTaper",
        "nsamp",
        "p",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "np",
        "empty",
        "grdpts_x",
        "grdpts_y",
        "dtype",
        "eotr",
        "l",
        "r",
        "f_octaves_left",
        "f_octaves_right",
        "i",
        "tr",
        "stream",
        "tr",
        "data",
        "spoint",
        "i",
        "offset",
        "spoint",
        "i",
        "offset",
        "nsamp",
        "dat",
        "dat",
        "mean",
        "tap",
        "np",
        "fft",
        "rfft",
        "dat",
        "nfft",
        "l",
        "r",
        "IndexError",
        "np",
        "require",
        "ft",
        "relpow_map",
        "fill",
        "abspow_map",
        "fill",
        "RPOW",
        "fill",
        "i",
        "xrange",
        "nstat",
        "j",
        "xrange",
        "i",
        "nstat",
        "ft",
        "i",
        "ft",
        "j",
        "conj",
        "i",
        "j",
        "R",
        "i",
        "j",
        "conjugate",
        "dpow",
        "np",
        "abs",
        "R",
        "i",
        "j",
        "sum",
        "dpow",
        "nstat",
        "diag",
        "np",
        "identity",
        "nstat",
        "n",
        "xrange",
        "nf",
        "I",
        "R",
        "n",
        "real",
        "trace",
        "nsamp",
        "diag_fact",
        "R",
        "n",
        "real",
        "weights",
        "np",
        "abs",
        "R",
        "n",
        "diagonal",
        "np",
        "sum",
        "w",
        "wmean",
        "nstat",
        "nhigh",
        "np",
        "outer",
        "w",
        "w",
        "T",
        "R",
        "n",
        "w_prod",
        "n",
        "xrange",
        "nf",
        "np",
        "linalg",
        "pinv",
        "R",
        "n",
        "rcond",
        "clibsignal",
        "generalizedBeamformer",
        "relpow_map",
        "abspow_map",
        "steer",
        "R",
        "nsamp",
        "nstat",
        "prewhiten",
        "grdpts_x",
        "grdpts_y",
        "nfft",
        "nf",
        "dpow",
        "method",
        "errcode",
        "msg",
        "errcode",
        "np",
        "unravel_index",
        "relpow_map",
        "argmax",
        "relpow_map",
        "shape",
        "relpow_map",
        "ix",
        "iy",
        "abspow_map",
        "ix",
        "iy",
        "store",
        "store",
        "relpow_map",
        "abspow_map",
        "offset",
        "sll_x",
        "ix",
        "sl_s",
        "sll_y",
        "iy",
        "sl_s",
        "np",
        "sqrt",
        "slow_x",
        "slow_y",
        "slow",
        "math",
        "atan2",
        "slow_x",
        "slow_y",
        "math",
        "pi",
        "azimut",
        "BAZ",
        "append",
        "baz",
        "SLOW",
        "append",
        "slow",
        "APOW",
        "append",
        "abspow",
        "RPOW",
        "append",
        "relpow",
        "np",
        "linspace",
        "np",
        "pi",
        "np",
        "linspace",
        "np",
        "linspace",
        "np",
        "asarray",
        "fbaz",
        "fbaz",
        "fbaz",
        "np",
        "histogram2d",
        "np",
        "radians",
        "np",
        "asarray",
        "fbaz",
        "f_octaves",
        "bins",
        "abins",
        "fbins",
        "f_hist_stack",
        "f_hist",
        "newstart",
        "nsamp",
        "nstep",
        "fs",
        "etime",
        "offset",
        "nstep",
        "newstart",
        "nstep",
        "fs",
        "np",
        "array",
        "res",
        "timestamp",
        "timestamp",
        "res",
        "ValueError",
        "msg",
        "newstart",
        "timestamp",
        "f_hist_stack",
        "xedges",
        "yedges",
        "scipy",
        "ndimage",
        "filters",
        "maximum_filter",
        "scipy",
        "ndimage",
        "morphology",
        "generate_binary_structure",
        "rpow",
        "thresh",
        "tstamp",
        "sll_x",
        "sll_y",
        "sl_s",
        "rpow",
        "max",
        "max_v",
        "thresh",
        "generate_binary_structure",
        "maximum_filter",
        "rpow",
        "footprint",
        "neighborhood",
        "rpow",
        "np",
        "where",
        "local_max",
        "rpow",
        "cutoff",
        "rpow",
        "inds",
        "np",
        "asarray",
        "inds",
        "sll_x",
        "ix",
        "sl_s",
        "sll_y",
        "iy",
        "sl_s",
        "np",
        "sqrt",
        "slow_x",
        "slow_y",
        "np",
        "arctan2",
        "slow_x",
        "slow_y",
        "np",
        "pi",
        "az",
        "baz",
        "baz",
        "tstamp",
        "i",
        "len",
        "relpow",
        "relpow",
        "i",
        "slow",
        "i",
        "baz",
        "i",
        "relpow",
        "slow",
        "baz",
        "rpow",
        "net",
        "tstamp",
        "cfreq",
        "flim",
        "sll_x",
        "sll_y",
        "slm_x",
        "slm_y",
        "sl_s",
        "plotbaz",
        "np",
        "log10",
        "rpow",
        "rpow",
        "max",
        "plt",
        "figure",
        "figsize",
        "facecolor",
        "edgecolor",
        "fig",
        "add_subplot",
        "aspect",
        "np",
        "arange",
        "sll_x",
        "sl_s",
        "slm_x",
        "sl_s",
        "np",
        "arange",
        "sll_y",
        "sl_s",
        "slm_y",
        "sl_s",
        "ax",
        "pcolormesh",
        "slx",
        "sly",
        "rpow",
        "cmap",
        "plt",
        "title",
        "net",
        "tstamp",
        "ax",
        "set_xlim",
        "sll_x",
        "slm_x",
        "ax",
        "set_ylim",
        "sll_y",
        "slm_y",
        "ax",
        "set_xlabel",
        "ax",
        "set_ylabel",
        "ax",
        "vlines",
        "sll_y",
        "slm_y",
        "color",
        "alpha",
        "ax",
        "hlines",
        "sll_x",
        "slm_x",
        "color",
        "alpha",
        "ax",
        "grid",
        "plt",
        "Circle",
        "sp",
        "sqrt",
        "color",
        "fill",
        "alpha",
        "plt",
        "gcf",
        "gca",
        "add_artist",
        "circle",
        "plt",
        "Circle",
        "sp",
        "sqrt",
        "color",
        "fill",
        "alpha",
        "plt",
        "gcf",
        "gca",
        "add_artist",
        "circle",
        "fig",
        "colorbar",
        "im",
        "shrink",
        "cbar",
        "set_label",
        "rotation",
        "labelpad",
        "plt",
        "figure",
        "figsize",
        "facecolor",
        "edgecolor",
        "i",
        "lab",
        "labels",
        "fig",
        "add_subplot",
        "i",
        "ax",
        "scatter",
        "i",
        "c",
        "alpha",
        "marker",
        "edgecolors",
        "cmap",
        "plt",
        "cm",
        "gnuplot",
        "s",
        "ax",
        "set_ylabel",
        "lab",
        "fontsize",
        "ax",
        "set_xlim",
        "i",
        "i",
        "ax",
        "set_xticklabels",
        "lab",
        "ax",
        "set_ylim",
        "lab",
        "ax",
        "set_ylim",
        "i",
        "min",
        "lab",
        "ax",
        "set_ylim",
        "i",
        "max",
        "ax",
        "yaxis",
        "set_major_locator",
        "MaxNLocator",
        "prune",
        "ax",
        "grid",
        "ax",
        "get_xticks",
        "UTCDateTime",
        "d",
        "d",
        "l",
        "ax",
        "set_xticklabels",
        "new_lab",
        "rotation",
        "fig",
        "subplots_adjust",
        "left",
        "top",
        "right",
        "bottom",
        "hspace",
        "plt",
        "show",
        "num",
        "T",
        "slow",
        "plt",
        "figure",
        "figsize",
        "facecolor",
        "edgecolor",
        "fig",
        "add_subplot",
        "polar",
        "ax",
        "set_theta_zero_location",
        "ax",
        "set_theta_direction",
        "np",
        "radians",
        "baz",
        "ax",
        "scatter",
        "theta",
        "slow",
        "c",
        "rel_power",
        "s",
        "siz",
        "cmap",
        "plt",
        "cm",
        "gnuplot",
        "c",
        "set_alpha",
        "ax",
        "yaxis",
        "set_major_locator",
        "MaxNLocator",
        "num",
        "plt",
        "show",
        "r_pts",
        "t_pts",
        "weight_by_rpower",
        "T",
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "plt",
        "figure",
        "figsize",
        "facecolor",
        "edgecolor",
        "fig",
        "add_subplot",
        "polar",
        "ax",
        "set_theta_zero_location",
        "ax",
        "set_theta_direction",
        "np",
        "linspace",
        "np",
        "pi",
        "t_pts",
        "np",
        "linspace",
        "r_pts",
        "weight_by_rpower",
        "np",
        "histogram2d",
        "np",
        "radians",
        "baz",
        "slow",
        "bins",
        "abins",
        "sbins",
        "weights",
        "rel_power",
        "np",
        "histogram2d",
        "np",
        "radians",
        "baz",
        "slow",
        "bins",
        "abins",
        "sbins",
        "np",
        "ma",
        "masked_where",
        "H",
        "H",
        "np",
        "mgrid",
        "np",
        "pi",
        "t_pts",
        "r_pts",
        "ax",
        "pcolormesh",
        "theta",
        "r",
        "mH",
        "cmap",
        "plt",
        "cm",
        "gist_stern_r",
        "ax",
        "grid",
        "plt",
        "colorbar",
        "im",
        "label",
        "shrink",
        "pad",
        "weight_by_rpower",
        "cbar",
        "ax",
        "invert_yaxis",
        "plt",
        "show"
    ],
    "literals": [
        "'font.size'",
        "'red'",
        "'green'",
        "'blue'",
        "'mcnamara'",
        "'r'",
        "'\\n'",
        "'\\t'",
        "'latitude'",
        "'elevation'",
        "'longitude'",
        "'lonlat'",
        "'mlabday'",
        "'in sonic sampling rates of traces in stream are not equal'",
        "\"geometry:\"",
        "\"stream contains following traces:\"",
        "\"stime = \"",
        "\", etime = \"",
        "'c16'",
        "'c16'",
        "'c16'",
        "'f8'",
        "'f8'",
        "'f8'",
        "'c16'",
        "'C_CONTIGUOUS'",
        "'generalizedBeamforming exited with error %d'",
        "'julsec'",
        "'mlabday'",
        "\"Option timestamp must be one of 'julsec', or 'mlabday'\"",
        "'lonlat'",
        "'mlabday'",
        "'in sonic sampling rates of traces in stream are not equal'",
        "\"geometry:\"",
        "\"stream contains following traces:\"",
        "\"stime = \"",
        "\", etime = \"",
        "'c16'",
        "'c16'",
        "'c16'",
        "'f8'",
        "'f8'",
        "'f8'",
        "'c16'",
        "'C_CONTIGUOUS'",
        "'generalizedBeamforming exited with error %d'",
        "'julsec'",
        "'mlabday'",
        "\"Option timestamp must be one of 'julsec', or 'mlabday'\"",
        "'\\n'",
        "'--------------------------------------------------------------'",
        "'------ Parameter Estimation: '",
        "'------'",
        "'--------------------------------------------------------------'",
        "'normalized power (dB)   '",
        "'velocity (km/s)   '",
        "'backazimuth (deg)'",
        "'%12.02f %19.02f %19.02f'",
        "'white'",
        "'lightsteelblue'",
        "'gist_stern_r'",
        "': '",
        "'East/West Slowness [s/km]'",
        "'North/South Slowness [s/km]'",
        "'w'",
        "'w'",
        "'w'",
        "'w'",
        "'relative power (dB)'",
        "'Normalised\\nPower\\n[dB]'",
        "'Back-Az\\n[$^\\circ$]'",
        "'Slowness\\n[s/km]'",
        "'white'",
        "'lightsteelblue'",
        "'H'",
        "'none'",
        "'Back-Az\\n[$^\\circ$]'",
        "'Normalised Power\\n[dB]'",
        "'Slowness\\n[s/km]'",
        "'lower'",
        "'white'",
        "'lightsteelblue'",
        "\"N\"",
        "'white'",
        "'lightsteelblue'",
        "\"N\"",
        "'Normalised Power [dB]'"
    ],
    "variables": [
        "CDICT",
        "colormap",
        "coordinates",
        "c",
        "coordinates",
        "res",
        "eotr",
        "fs",
        "msg",
        "grdpts_x",
        "grdpts_y",
        "geometry",
        "time_shift_table",
        "spoint",
        "_epoint",
        "nstat",
        "fs",
        "nsamp",
        "nstep",
        "nfft",
        "deltaf",
        "nlow",
        "nhigh",
        "nlow",
        "nhigh",
        "nf",
        "steer",
        "R",
        "ft",
        "newstart",
        "tap",
        "offset",
        "relpow_map",
        "abspow_map",
        "RPOW",
        "dat",
        "dat",
        "ft",
        "i",
        "ft",
        "dpow",
        "R",
        "i",
        "j",
        "R",
        "j",
        "i",
        "I",
        "weights",
        "w",
        "wmean",
        "w_prod",
        "R",
        "n",
        "errcode",
        "msg",
        "net",
        "cfreq",
        "flim",
        "ix",
        "iy",
        "relpow",
        "abspow",
        "slow_x",
        "slow_y",
        "slow",
        "slow",
        "azimut",
        "baz",
        "eotr",
        "res",
        "res",
        "msg",
        "res",
        "fbaz",
        "fslow",
        "eotr",
        "fs",
        "msg",
        "grdpts_x",
        "grdpts_y",
        "geometry",
        "time_shift_table",
        "spoint",
        "_epoint",
        "nstat",
        "fs",
        "nsamp",
        "nstep",
        "deltaf",
        "nlow",
        "nhigh",
        "nlow",
        "nhigh",
        "nf",
        "freq_bins",
        "steer",
        "R",
        "ft",
        "newstart",
        "tap",
        "offset",
        "relpow_map",
        "abspow_map",
        "RPOW",
        "BAZ",
        "SLOW",
        "RPOW",
        "APOW",
        "dat",
        "dat",
        "ft",
        "i",
        "ft",
        "dpow",
        "R",
        "i",
        "j",
        "R",
        "j",
        "i",
        "I",
        "weights",
        "w",
        "wmean",
        "w_prod",
        "R",
        "n",
        "errcode",
        "msg",
        "ix",
        "iy",
        "relpow",
        "abspow",
        "slow_x",
        "slow_y",
        "slow",
        "slow",
        "azimut",
        "baz",
        "weight_by_rpower",
        "abins",
        "sbins",
        "fbins",
        "fbaz",
        "f_hist",
        "xedges",
        "yedges",
        "eotr",
        "res",
        "res",
        "msg",
        "max_v",
        "cutoff",
        "neighborhood",
        "local_max",
        "inds",
        "relpow",
        "ix",
        "iy",
        "slow_x",
        "slow_y",
        "slow",
        "az",
        "baz",
        "rpow",
        "fig",
        "ax",
        "slx",
        "sly",
        "im",
        "circle",
        "circle",
        "cbar",
        "labels",
        "fig",
        "ax",
        "l",
        "new_lab",
        "t",
        "rel_power",
        "baz",
        "slow",
        "siz",
        "fig",
        "ax",
        "theta",
        "c",
        "t",
        "rel_power",
        "baz",
        "slow",
        "fig",
        "ax",
        "abins",
        "sbins",
        "H",
        "xedges",
        "yedges",
        "H",
        "xedges",
        "yedges",
        "mH",
        "theta",
        "r",
        "im",
        "cbar"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "build colormap as done in paper by mcnamara",
        "check that sampling rates do not vary",
        "offset of arrays",
        "",
        "loop with a sliding window over the dat trace array and apply bbfk",
        "",
        "generate plan for rfftr",
        "avoid using the offset",
        "avoid using nyquist",
        "include upper and lower frequency",
        "to spead up the routine a bit we estimate all steering vectors in advance",
        "cosTaper(nsamp, p=0.22)  # 0.22 matches 0.2 of historical C bbfk.c",
        "computing the covariances of the signal at different receivers",
        "if method == 1:",
        "R[:, i, j] /= np.abs(R[:, i, j].sum()**2)   # why?",
        "Equation for conv beamforming",
        "P(f) = e.H R(f) e",
        "P(f) = steer^H dot R dot steer",
        "where e is the covariance (steering) matrix and",
        "R is the cross-spectral matrix.",
        "Equation for Capons beamformer",
        "P(f) = 1/(e.H R(f)^-1 e)",
        "P(f) = 1 / (steer^H dot R dot steer)",
        "R(f)^-1 can be nonsingular (i.e. det=0) so diagonal loading is",
        "applied (Capon1969).",
        "translated from gal code",
        "calculate weights (capon1969)",
        "Vectorised version of nice DOA codes by M. Gal available",
        "at https://github.com/mgalcode",
        "plot rpow",
        "here we compute baz, slow",
        "719162 == hours between 1970 and 0001",
        "check that sampling rates do not vary",
        "offset of arrays",
        "",
        "loop with a sliding window over the dat trace array and apply bbfk",
        "",
        "generate plan for rfftr",
        "Loop over fbins from here",
        "nfft = prevpow2(nsamp)",
        "avoid using the offset",
        "avoid using nyquist",
        "include upper and lower frequency",
        "to spead up the routine a bit we estimate all steering vectors in advance",
        "cross-spectral matrix",
        "",
        "0.22 matches 0.2 of historical C bbfk.c",
        "computing the covariances of the signal at different receivers",
        "if method == 1:",
        "R[:, i, j] /= np.abs(R[:, i, j].sum()**2)   # why?",
        "Equation for conv beamforming",
        "P(f) = e.H R(f) e",
        "P(f) = steer^H dot R dot steer",
        "where e is the covariance (steering) matrix and",
        "R is the cross-spectral matrix.",
        "Equation for Capons beamformer",
        "P(f) = 1/(e.H R(f)^-1 e)",
        "P(f) = 1 / (steer^H dot R dot steer)",
        "R(f)^-1 can be nonsingular (i.e. det=0) so diagonal loading is",
        "applied (Capon1969).",
        "translated from gal code",
        "calculate weights (capon1969)",
        "Vectorised version of nice DOA codes by M. Gal available",
        "at https://github.com/mgalcode",
        "# loop over fbins",
        "for n in xrange(nf):",
        "# calculate capon spectrum - python version.",
        "freq_relpow_map = np.zeros(np.shape(relpow_map))",
        "for i in range(grdpts_x):",
        "for j in range(grdpts_y):",
        "nf_steer = steer[n,i,j]",
        "freq_relpow_map[i,j] = 1. / nf_steer.T.conj().dot(R[n,:,:]).dot(nf_steer)",
        "",
        "",
        "ix, iy = np.unravel_index(freq_relpow_map.argmax(), relpow_map.shape)",
        "relpow = freq_relpow_map[ix, iy]",
        "# here we compute baz, slow",
        "slow_x = sll_x + ix * sl_s",
        "slow_y = sll_y + iy * sl_s",
        "",
        "slow=np.sqrt(slow_x ** 2 + slow_y ** 2)",
        "if slow < 1e-8:",
        "slow = 1e-8",
        "fslow.append(slow)",
        "azimut = 180 * math.atan2(slow_x, slow_y) / math.pi",
        "fbaz.append(azimut % -360 + 180)",
        "here we compute baz, slow",
        "Histogram the data",
        "0 to 360 in steps of 360/N.",
        "s_hist, xedges, yedges = np.histogram2d(np.radians(fbaz), fslow,",
        "bins=(abins,sbins))",
        "",
        "",
        "s_hist, xedges, yedges = np.histogram2d(np.radians(fbaz), f_octaves,",
        "bins=(abins, fbins))",
        "",
        "if relpow > semb_thres and 1. / slow > vel_thres:",
        "res.append(np.array([newstart.timestamp, relpow, abspow, baz,",
        "slow]))",
        "if verbose:",
        "print(newstart, (newstart + (nsamp / fs)), res[-1][1:])",
        "719162 == hours between 1970 and 0001",
        "%%",
        "max value",
        "define an 8-connected neighborhood",
        "apply the local maximum filter; all pixel of maximal value",
        "in their neighborhood are set to 1",
        "get indices",
        "parameter estimation",
        "find power vals for maxs",
        "convert indices to slowness components",
        "convert components to slowness (magnitude)",
        "convert components to az/baz",
        "generating figure",
        "at %.03f +- %.03f[Hz]' %(cap_find/(nsamp*dt),cap_fave/(nsamp*dt)))",
        "if plotbaz == True:",
        "ax.invert_xaxis()",
        "ax.invert_yaxis()",
        "Plot",
        "else:",
        "ax.yaxis.set_major_locator(MaxNLocator(prune='lower'))",
        "",
        "scale markers by slowness (larger ourwards)",
        "Histogram the data",
        "0 to 360 in steps of 360/N.",
        "Grid to plot your data on using pcolormesh"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Thu Jan 15 07:40:04 2015\n\n@author: davcra\n\n\nFunctions for array analsis of microseism locations.\n\n\n\n\"\"\"",
        "\"\"\"\n    Helper function to write coordinate details into an ObsPy Stream object headers from a \n    text file for array analysis.\n\n    :type stream: obspy stream object.\n    :param stream: obspy stream object containing data for each array station.\n    :type coordFile: string.\n    :param coordFile: text file with headers trace.id, longitude, latitude and \n        elevation.\n    :return: Stream object, where each trace.stats contains an obspy.core.util.AttribDict \n        with 'latitude', 'longitude' (in degrees) and 'elevation' (in km), or 'x', 'y', \n        'elevation' (in km) items/attributes.\n    \"\"\"",
        "\"\"\"\n    Method for Seismic-Array-Beamforming/FK-Analysis/Capon\n\n    :param stream: Stream object, the trace.stats dict like class must\n        contain a obspy.core.util.AttribDict with 'latitude', 'longitude' (in\n        degrees) and 'elevation' (in km), or 'x', 'y', 'elevation' (in km)\n        items/attributes. See param coordsys\n    :type win_len: Float\n    :param win_len: Sliding window length in seconds\n    :type win_frac: Float\n    :param win_frac: Fraction of sliding window to use for step\n    :type sll_x: Float\n    :param sll_x: slowness x min (lower)\n    :type slm_x: Float\n    :param slm_x: slowness x max\n    :type sll_y: Float\n    :param sll_y: slowness y min (lower)\n    :type slm_y: Float\n    :param slm_y: slowness y max\n    :type sl_s: Float\n    :param sl_s: slowness step\n    :type semb_thres: Float\n    :param semb_thres: Threshold for semblance\n    :type vel_thres: Float\n    :param vel_thres: Threshold for velocity\n    :type frqlow: Float\n    :param frqlow: lower frequency for fk/capon\n    :type frqhigh: Float\n    :param frqhigh: higher frequency for fk/capon\n    :type stime: UTCDateTime\n    :param stime: Starttime of interest\n    :type etime: UTCDateTime\n    :param etime: Endtime of interest\n    :type prewhiten: int\n    :param prewhiten: Do prewhitening, values: 1 or 0\n    :param coordsys: valid values: 'lonlat' and 'xy', choose which stream\n        attributes to use for coordinates\n    :type timestamp: string\n    :param timestamp: valid values: 'julsec' and 'mlabday'; 'julsec' returns\n        the timestamp in secons since 1970-01-01T00:00:00, 'mlabday'\n        returns the timestamp in days (decimals represent hours, minutes\n        and seconds) since '0001-01-01T00:00:00' as needed for matplotlib\n        date plotting (see e.g. matplotlibs num2date)\n    :type method: int\n    :param method: the method to use 0 == bf, 1 == capon\n    :type diag: bool\n    :param diag: If True use diagonal loading for capon spectrum (recommended).\n    :type diag_fact: float\n    :param diag_fact: Gives some control on weights applied to diagonal element \n        of covariance matrix. Try between 0.01 and 0.1. Too high and peak in \n        slowness spectrum becomes broad, too low and effect of weights is lost.\n        Experiment using plot function.\n    :type store: function\n    :param store: A custom function which gets called on each iteration. It is\n        called with the relative power map and the time offset as first and\n        second arguments and the iteration number as third argument. Useful for\n        storing or plotting the map for each iteration. For this purpose the\n        dump function of this module can be used.\n    :type plot: function\n    :param plot: A custom function which gets called on each iteration. It is\n        called with the relative power map and the time offset as first and\n        second arguments and the iteration number as third argument. Useful for\n        storing or plotting the map for each iteration. For this purpose the\n        dump function of this module can be used.        \n    :type plotspec: bool    \n    :param plotspec: if true axis' for plot are revesed to show baz instead \n                    of az.\n        \n        \n        \n    :return: numpy.ndarray of timestamp, relative relpow, absolute relpow,\n        backazimut, slowness\n    \"\"\"",
        "\"\"\"\n   **** Not Working Yet ****    \n    \n    Method for Seismic-Array-Beamforming/FK-Analysis/Capon\n\n    :param stream: Stream object, the trace.stats dict like class must\n        contain a obspy.core.util.AttribDict with 'latitude', 'longitude' (in\n        degrees) and 'elevation' (in km), or 'x', 'y', 'elevation' (in km)\n        items/attributes. See param coordsys\n    :type win_len: Float\n    :param win_len: Sliding window length in seconds\n    :type win_frac: Float\n    :param win_frac: Fraction of sliding window to use for step\n    :type sll_x: Float\n    :param sll_x: slowness x min (lower)\n    :type slm_x: Float\n    :param slm_x: slowness x max\n    :type sll_y: Float\n    :param sll_y: slowness y min (lower)\n    :type slm_y: Float\n    :param slm_y: slowness y max\n    :type sl_s: Float\n    :param sl_s: slowness step\n    :type semb_thres: Float\n    :param semb_thres: Threshold for semblance\n    :type vel_thres: Float\n    :param vel_thres: Threshold for velocity\n    :type frqlow: Float\n    :param frqlow: lower frequency for fk/capon\n    :type frqhigh: Float\n    :param frqhigh: higher frequency for fk/capon\n    :type stime: UTCDateTime\n    :param stime: Starttime of interest\n    :type etime: UTCDateTime\n    :param etime: Endtime of interest\n    :type prewhiten: int\n    :param prewhiten: Do prewhitening, values: 1 or 0\n    :param coordsys: valid values: 'lonlat' and 'xy', choose which stream\n        attributes to use for coordinates\n    :type timestamp: string\n    :param timestamp: valid values: 'julsec' and 'mlabday'; 'julsec' returns\n        the timestamp in secons since 1970-01-01T00:00:00, 'mlabday'\n        returns the timestamp in days (decimals represent hours, minutes\n        and seconds) since '0001-01-01T00:00:00' as needed for matplotlib\n        date plotting (see e.g. matplotlibs num2date)\n    :type method: int\n    :param method: the method to use 0 == bf, 1 == capon\n    :type diag: bool\n    :param diag: If True use diagonal loading for capon spectrum (recommended).\n    :type diag_fact: float\n    :param diag_fact: Gives some control on weights applied to diagonal element \n        of covariance matrix. Try between 0.01 and 0.1. Too high and peak in \n        slowness spectrum becomes broad, too low and effect of weights is lost.\n        Experiment using plot function.\n    :type store: function\n    :param store: A custom function which gets called on each iteration. It is\n        called with the relative power map and the time offset as first and\n        second arguments and the iteration number as third argument. Useful for\n        storing or plotting the map for each iteration. For this purpose the\n        dump function of this module can be used.\n    :type plot: function\n    :param plot: A custom function which gets called on each iteration. It is\n        called with the relative power map and the time offset as first and\n        second arguments and the iteration number as third argument. Useful for\n        storing or plotting the map for each iteration. For this purpose the\n        dump function of this module can be used.        \n    :type plotbaz: bool    \n    :param plotbaz: if true axis' for plot are revesed to show baz instead \n                    of az.\n    \n    \n    \n    :return: numpy.ndarray of timestamp, relative relpow, absolute relpow,\n        backazimut, slowness\n    \"\"\"",
        "\"\"\"\n    Takes an array and detect the peaks using the local maximum filter.\n    Returns a boolean mask of the peaks (i.e. 1 when\n    the pixel's value is the neighborhood maximum, 0 otherwise)\n    \n    \n    :type rpow: numpy array\n    :param rpow: input array of slowness space from array_processing\n    :type thresh: float\n    :param thresh: fraction of array maximum to use as cutoff (0-1).\n    :type tstamp: UTCDateTime object\n    :param tstamp: timestamp for subwindow\n    :type sll_x: float\n    :param sll_x: min slowness in x direction\n    :type sll_y: float\n    :param sll_y: min slowness value in y direction\n    \"\"\"",
        "\"\"\"\n    plots output from obspy.signal.array_processing\n  \n    :type out: numpy array\n    :param out: output from obspy.signal.array_processing\n    \"\"\"",
        "\"\"\"\n    plots output from obspy.signal.array_processing\n  \n    :type out: numpy array.\n    :param out: output from obspy.signal.array_processing.\n    :type num: int.\n    :param num: number of ticks on radial axis.    \n    \n    \"\"\"",
        "\"\"\"\n    Plot a polar histogram plot, with 0 degrees at the North.\n     :type out: list\n     :param out: output from array_processing\n     :type r_pts: int or float\n     :param r_pts: number of bins in radial direction, default=30.\n     :type t_pts: int or float\n     :param t_pts: number of bins in theta direction, default=72 i.e. 5 degree bins.\n     \n     Notes:\n     params r_pts and t_pts can be made much small for large amount of data.\n    \"\"\""
    ],
    "functions": [
        "insert_coordinates",
        "array_processing",
        "dir_spec",
        "param_estimation",
        "plot_slow_space",
        "plotFK",
        "polarFK",
        "plot_polar_hist"
    ],
    "classes": []
}