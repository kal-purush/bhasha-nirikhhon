{
    "identifiers": [
        "copy",
        "os",
        "path",
        "numpy",
        "detectors",
        "blink_detection",
        "fixation_detection",
        "saccade_detection",
        "filename",
        "start",
        "stop",
        "missing",
        "debug",
        "debug",
        "msg",
        "msg",
        "msg",
        "os",
        "path",
        "isfile",
        "filename",
        "message",
        "filename",
        "open",
        "filename",
        "filename",
        "message",
        "filename",
        "f",
        "readlines",
        "message",
        "filename",
        "f",
        "close",
        "i",
        "len",
        "raw",
        "raw",
        "i",
        "replace",
        "replace",
        "split",
        "line",
        "line",
        "filestarted",
        "line",
        "index",
        "line",
        "index",
        "line",
        "line",
        "index",
        "line",
        "line",
        "index",
        "line",
        "line",
        "index",
        "line",
        "line",
        "index",
        "line",
        "line",
        "index",
        "line",
        "line",
        "index",
        "started",
        "stop",
        "line",
        "typei",
        "stop",
        "line",
        "msgi",
        "i",
        "len",
        "raw",
        "start",
        "line",
        "i",
        "len",
        "raw",
        "trialend",
        "message",
        "len",
        "data",
        "len",
        "x",
        "numpy",
        "array",
        "x",
        "numpy",
        "array",
        "y",
        "numpy",
        "array",
        "size",
        "numpy",
        "array",
        "time",
        "numpy",
        "array",
        "trackertime",
        "copy",
        "deepcopy",
        "events",
        "trial",
        "trial",
        "blink_detection",
        "trial",
        "trial",
        "trial",
        "missing",
        "missing",
        "trial",
        "trial",
        "fixation_detection",
        "trial",
        "trial",
        "trial",
        "missing",
        "missing",
        "trial",
        "trial",
        "saccade_detection",
        "trial",
        "trial",
        "trial",
        "missing",
        "missing",
        "data",
        "append",
        "trial",
        "line",
        "typei",
        "start",
        "line",
        "msgi",
        "start",
        "line",
        "msgi",
        "start",
        "line",
        "msgi",
        "message",
        "len",
        "data",
        "line",
        "timei",
        "started",
        "line",
        "typei",
        "line",
        "timei",
        "line",
        "msgi",
        "events",
        "append",
        "t",
        "m",
        "exec",
        "exec",
        "vi",
        "vi",
        "vi",
        "vi",
        "line",
        "vi",
        "vi",
        "vi",
        "line",
        "vi",
        "vi",
        "vi",
        "line",
        "vi",
        "line",
        "vi",
        "line",
        "vi",
        "line",
        "vi",
        "line",
        "vi",
        "line",
        "vi",
        "v",
        "append",
        "val",
        "time",
        "append",
        "line",
        "timei",
        "starttime",
        "trackertime",
        "append",
        "line",
        "timei",
        "message",
        "line",
        "data"
    ],
    "literals": [
        "\"Edwin Dalmaijer\"",
        "\"opening file '%s'\"",
        "'r'",
        "\"Error in read_eyetribe: file '%s' does not exist\"",
        "\"reading file '%s'\"",
        "\"closing file '%s'\"",
        "'Sfix'",
        "'Ssac'",
        "'Sblk'",
        "'Efix'",
        "'Esac'",
        "'Eblk'",
        "'msg'",
        "'\\n'",
        "''",
        "'\\r'",
        "''",
        "'\\t'",
        "'##'",
        "'##'",
        "\"Time\"",
        "\"Type\"",
        "'L'",
        "'R'",
        "'L'",
        "'R'",
        "'L'",
        "'R'",
        "\"L POR X [px]\"",
        "'L'",
        "\"L POR X [px]\"",
        "\"R POR X [px]\"",
        "'R'",
        "\"R POR X [px]\"",
        "\"L POR Y [px]\"",
        "'L'",
        "\"L POR Y [px]\"",
        "\"R POR Y [px]\"",
        "'R'",
        "\"R POR Y [px]\"",
        "\"L Dia X [px]\"",
        "'L'",
        "\"L Dia X [px]\"",
        "\"R Dia X [px]\"",
        "'R'",
        "\"R Dia X [px]\"",
        "'MSG'",
        "\"trialend %d; %d samples found\"",
        "'x'",
        "'y'",
        "'size'",
        "'time'",
        "'trackertime'",
        "'events'",
        "'events'",
        "'Sblk'",
        "'events'",
        "'Eblk'",
        "'x'",
        "'y'",
        "'trackertime'",
        "'events'",
        "'Sfix'",
        "'events'",
        "'Efix'",
        "'x'",
        "'y'",
        "'trackertime'",
        "'events'",
        "'Ssac'",
        "'events'",
        "'Esac'",
        "'x'",
        "'y'",
        "'trackertime'",
        "'Sfix'",
        "'Ssac'",
        "'Sblk'",
        "'Efix'",
        "'Esac'",
        "'Eblk'",
        "'msg'",
        "\"MSG\"",
        "\"trialstart %d\"",
        "\"MSG\"",
        "'msg'",
        "'x'",
        "'y'",
        "'size'",
        "\"vi = %si\"",
        "\"v = %s\"",
        "'L'",
        "'R'",
        "'not in IDF'",
        "'L'",
        "'R'",
        "'L'",
        "'L'",
        "'R'",
        "'R'",
        "'L'",
        "'R'",
        "'L'",
        "'R'",
        "'R'",
        "'L'",
        "'L'",
        "'R'",
        "\"line '%s' could not be parsed\""
    ],
    "variables": [
        "__author__",
        "f",
        "raw",
        "data",
        "x",
        "y",
        "size",
        "time",
        "trackertime",
        "events",
        "starttime",
        "started",
        "trialend",
        "filestarted",
        "line",
        "timei",
        "typei",
        "msgi",
        "xi",
        "yi",
        "sizei",
        "xi",
        "xi",
        "yi",
        "yi",
        "sizei",
        "sizei",
        "filestarted",
        "started",
        "trialend",
        "started",
        "trialend",
        "trial",
        "trial",
        "trial",
        "trial",
        "trial",
        "trial",
        "trial",
        "x",
        "y",
        "size",
        "time",
        "trackertime",
        "events",
        "trialend",
        "started",
        "starttime",
        "t",
        "m",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "",
        "This file is part of PyGaze - the open-source toolbox for eye tracking",
        "",
        "PyGazeAnalyser is a Python module for easily analysing eye-tracking data",
        "Copyright (C) 2014  Edwin S. Dalmaijer",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>",
        "IDF Reader",
        "",
        "Reads ASCII files as produced by SensoMotoric System's IDF converter,",
        "and performs a very crude fixation and blink detection: every sample that",
        "is invalid (usually coded '0.0') is considered to be part of a blink, and",
        "every sample in which the gaze movement velocity is below a threshold is",
        "considered to be part of a fixation. For optimal event detection, it would be",
        "better to use a different algorithm, e.g.:",
        "Nystrom, M., & Holmqvist, K. (2010). An adaptive algorithm for fixation,",
        "saccade, and glissade detection in eyetracking data. Behavior Research",
        "Methods, 42, 188-204. doi:10.3758/BRM.42.1.188",
        "",
        "(C) Edwin Dalmaijer, 2014-2015",
        "edwin.dalmaijer@psy.ox.ax.uk",
        "",
        "version 1 (10-Jan-2015)",
        "# # # #",
        "debug mode",
        "# # # #",
        "file handling",
        "check if the file exists",
        "open file",
        "raise exception if the file does not exist",
        "read file contents",
        "close file",
        "# # # #",
        "parse lines",
        "variables",
        "loop through all lines",
        "string to list",
        "check if the line starts with '##' (denoting header)",
        "skip processing",
        "check the indexes for several key things we want to extract",
        "(we need to do this, because ASCII outputs of the IDF reader",
        "are different, based on whatever the user wanted to extract)",
        "set filestarted to True, so we don't attempt to extract",
        "this info on all consecutive lines",
        "check if trial has already started",
        "only check for stop if there is one",
        "check for new start otherwise",
        "# # # #",
        "trial ending",
        "trial dict",
        "events",
        "add trial to data",
        "reset stuff",
        "check if the current line contains start message",
        "set started to True",
        "find starting time",
        "# # # #",
        "parse line",
        "message lines will usually start with a timestamp, followed",
        "by 'MSG', the trial number and the actual message, e.g.:",
        "\"7818328012\tMSG\t1\t# Message: 3\"",
        "time",
        "message",
        "regular lines will contain tab separated values, beginning with",
        "a timestamp, follwed by the values that were chosen to be",
        "extracted by the IDF converter",
        "see if current line contains relevant data",
        "extract data on POR and pupil size",
        "nothing",
        "only left eye",
        "only right eye",
        "average the two eyes, but only if they both",
        "contain valid data",
        "extract time data",
        "skip this line",
        "# # # #",
        "return"
    ],
    "docstrings": [
        "\"\"\"Returns a list with dicts for every trial. A trial dict contains the\n\tfollowing keys:\n\t\tx\t\t-\tnumpy array of x positions\n\t\ty\t\t-\tnumpy array of y positions\n\t\tsize\t\t-\tnumpy array of pupil size\n\t\ttime\t\t-\tnumpy array of timestamps, t=0 at trialstart\n\t\ttrackertime-\tnumpy array of timestamps, according to the tracker\n\t\tevents\t-\tdict with the following keys:\n\t\t\t\t\t\tSfix\t-\tlist of lists, each containing [starttime]\n\t\t\t\t\t\tSsac\t-\tEMPTY! list of lists, each containing [starttime]\n\t\t\t\t\t\tSblk\t-\tlist of lists, each containing [starttime]\n\t\t\t\t\t\tEfix\t-\tlist of lists, each containing [starttime, endtime, duration, endx, endy]\n\t\t\t\t\t\tEsac\t-\tEMPTY! list of lists, each containing [starttime, endtime, duration, startx, starty, endx, endy]\n\t\t\t\t\t\tEblk\t-\tlist of lists, each containing [starttime, endtime, duration]\n\t\t\t\t\t\tmsg\t-\tlist of lists, each containing [time, message]\n\t\t\t\t\t\tNOTE: timing is in EyeTribe time!\n\t\n\targuments\n\n\tfilename\t\t-\tpath to the file that has to be read\n\tstart\t\t-\ttrial start string\n\t\n\tkeyword arguments\n\n\tstop\t\t-\ttrial ending string (default = None)\n\tmissing\t-\tvalue to be used for missing data (default = 0.0)\n\tdebug\t-\tBoolean indicating if DEBUG mode should be on or off;\n\t\t\t\tif DEBUG mode is on, information on what the script\n\t\t\t\tcurrently is doing will be printed to the console\n\t\t\t\t(default = False)\n\t\n\treturns\n\n\tdata\t\t-\ta list with a dict for every trial (see above)\n\t\"\"\""
    ],
    "functions": [
        "read_idf",
        "message",
        "message"
    ],
    "classes": []
}