{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Drawing",
        "Runtime",
        "InteropServices",
        "Windows",
        "Forms",
        "Threading",
        "WGemCombiner",
        "Point",
        "Point",
        "m",
        "formula",
        "formula",
        "m",
        "ParseFormula",
        "m",
        "m",
        "m",
        "Replace",
        "m",
        "m",
        "Replace",
        "m",
        "ParseScheme",
        "m",
        "SetGems",
        "m",
        "CreateInstructions",
        "Replace",
        "Split",
        "strP",
        "Last",
        "Split",
        "strP",
        "Length",
        "i",
        "i",
        "strP",
        "i",
        "IndexOf",
        "strP",
        "i",
        "ind",
        "s",
        "s",
        "Substring",
        "ind",
        "s",
        "Split",
        "i",
        "i",
        "resStr",
        "resStr",
        "Replace",
        "strC",
        "strC",
        "resStr",
        "Contains",
        "resStr",
        "resStr",
        "Replace",
        "resStr",
        "resStr",
        "Replace",
        "resStr",
        "resStr",
        "Substring",
        "resStr",
        "Length",
        "resStr",
        "Gem",
        "baseGems",
        "Gem",
        "Contains",
        "IndexOf",
        "letterOrNumber",
        "letterOrNumber",
        "ieeePreParser",
        "Replace",
        "ieeePreParser",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_ORANGE",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_YELLOW",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_BLACK",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_RED",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_KILLGEM",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_MANAGEM",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "Contains",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_NULL",
        "Replace",
        "baseGems",
        "Count",
        "ToString",
        "baseGems",
        "Count",
        "baseGems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_NULL",
        "recipe",
        "i",
        "i",
        "i",
        "ToString",
        "recipe",
        "IndexOf",
        "grd_str",
        "place",
        "recipe",
        "place",
        "grd_str",
        "Length",
        "ToString",
        "i",
        "ToString",
        "color",
        "i",
        "weakerGem",
        "color",
        "recipe",
        "recipe",
        "Replace",
        "grd_str",
        "color",
        "weakerGem",
        "weakerGem",
        "place",
        "recipe",
        "IndexOf",
        "grd_str",
        "recipe",
        "Gem",
        "Gem",
        "Gem",
        "combined",
        "Clear",
        "useCount",
        "Clear",
        "combined",
        "Add",
        "useCount",
        "Add",
        "i",
        "baseGems",
        "Count",
        "i",
        "combined",
        "Add",
        "baseGems",
        "i",
        "combined",
        "i",
        "strID",
        "i",
        "ToString",
        "useCount",
        "Add",
        "IndexOf",
        "close",
        "LastIndexOf",
        "close",
        "Substring",
        "open",
        "close",
        "open",
        "thisCombine",
        "Split",
        "Convert",
        "ToInt32",
        "cGems",
        "Convert",
        "ToInt32",
        "cGems",
        "Replace",
        "gem1",
        "gem2",
        "combined",
        "Count",
        "ToString",
        "resultGem",
        "Gem",
        "Combine",
        "combined",
        "gem1",
        "combined",
        "gem2",
        "resultGem",
        "strID",
        "combined",
        "Count",
        "ToString",
        "combined",
        "Add",
        "resultGem",
        "useCount",
        "Add",
        "useCount",
        "gem1",
        "useCount",
        "gem2",
        "Contains",
        "Split",
        "Convert",
        "ToInt32",
        "lastGems",
        "Convert",
        "ToInt32",
        "lastGems",
        "resultGem",
        "Gem",
        "Combine",
        "combined",
        "fgem1",
        "combined",
        "fgem2",
        "resultGem",
        "strID",
        "combined",
        "Count",
        "ToString",
        "combined",
        "Add",
        "resultGem",
        "useCount",
        "Add",
        "useCount",
        "fgem1",
        "useCount",
        "fgem2",
        "orderedCombined",
        "Gem",
        "orderedCombined",
        "AddRange",
        "combined",
        "inst",
        "Clear",
        "Gem",
        "Gem",
        "combined",
        "Count",
        "i",
        "slots",
        "Length",
        "i",
        "slots",
        "i",
        "i",
        "baseGems",
        "Count",
        "i",
        "inventory",
        "i",
        "combined",
        "i",
        "slots",
        "i",
        "i",
        "Slots_Required",
        "baseGems",
        "Count",
        "i",
        "combined",
        "Count",
        "i",
        "combined",
        "i",
        "Convert",
        "ToInt32",
        "g",
        "Component1",
        "strID",
        "Convert",
        "ToInt32",
        "g",
        "Component2",
        "strID",
        "slots",
        "c1",
        "slots",
        "c2",
        "c1",
        "c2",
        "useCount",
        "c2",
        "useCount",
        "c2",
        "inst",
        "Add",
        "Point",
        "slot1",
        "INST_DUPE",
        "slots",
        "c1",
        "GetEmpty",
        "inventory",
        "inventory",
        "slots",
        "c1",
        "g",
        "Component1",
        "CheckSlotReq",
        "slots",
        "c1",
        "inst",
        "Add",
        "Point",
        "slot1",
        "INST_UPGR",
        "inventory",
        "slot1",
        "g",
        "slots",
        "Convert",
        "ToInt32",
        "g",
        "strID",
        "slot1",
        "useCount",
        "c1",
        "inst",
        "Add",
        "Point",
        "slot1",
        "INST_DUPE",
        "slots",
        "c1",
        "GetEmpty",
        "inventory",
        "inventory",
        "slots",
        "c1",
        "g",
        "Component1",
        "CheckSlotReq",
        "slots",
        "c1",
        "useCount",
        "c2",
        "inst",
        "Add",
        "Point",
        "slot2",
        "INST_DUPE",
        "slots",
        "c2",
        "GetEmpty",
        "inventory",
        "inventory",
        "slots",
        "c2",
        "g",
        "Component1",
        "CheckSlotReq",
        "slots",
        "c2",
        "useCount",
        "c1",
        "useCount",
        "c2",
        "useCount",
        "c1",
        "oneUse",
        "Add",
        "c1",
        "useCount",
        "c2",
        "oneUse",
        "Add",
        "c2",
        "inst",
        "Add",
        "Point",
        "slot1",
        "slot2",
        "inventory",
        "slot1",
        "inventory",
        "slot2",
        "g",
        "slots",
        "Convert",
        "ToInt32",
        "g",
        "strID",
        "slot2",
        "slots",
        "c1",
        "slot1",
        "slots",
        "c1",
        "slots",
        "c2",
        "slot2",
        "slots",
        "c2",
        "i",
        "iU",
        "combined",
        "Count",
        "iU",
        "combined",
        "iU",
        "Convert",
        "ToInt32",
        "gU",
        "Component1",
        "strID",
        "Convert",
        "ToInt32",
        "gU",
        "Component2",
        "strID",
        "slots",
        "c1U",
        "slots",
        "c2U",
        "oneUse",
        "IndexOf",
        "c1U",
        "oneUse",
        "IndexOf",
        "c2U",
        "oneID1",
        "oneID2",
        "combined",
        "Insert",
        "i",
        "combined",
        "iU",
        "combined",
        "RemoveAt",
        "iU",
        "oneUse",
        "RemoveAt",
        "oneID1",
        "oneUse",
        "Remove",
        "c2U",
        "iU",
        "GetEmpty",
        "inventory",
        "Slots_Required",
        "oneID1",
        "slot2U",
        "combined",
        "Insert",
        "i",
        "combined",
        "iU",
        "combined",
        "RemoveAt",
        "iU",
        "oneUse",
        "RemoveAt",
        "oneID1",
        "iU",
        "GetEmpty",
        "inventory",
        "Slots_Required",
        "oneID2",
        "slot1U",
        "combined",
        "Insert",
        "i",
        "combined",
        "iU",
        "combined",
        "RemoveAt",
        "iU",
        "oneUse",
        "RemoveAt",
        "oneID2",
        "iU",
        "limitSlots",
        "Slots_Required",
        "inst",
        "CondenseSlots",
        "resultGem",
        "inst",
        "inst",
        "Insert",
        "Point",
        "Point",
        "Gem",
        "g",
        "Point",
        "bigInst",
        "keepBase",
        "slotLimit",
        "g",
        "Component1",
        "g",
        "Component2",
        "CombinePerformer",
        "p1",
        "limitSlots",
        "p1",
        "SetMethod",
        "c1",
        "GetFullCombine",
        "p1",
        "resultGem",
        "strID",
        "c1",
        "strID",
        "CombinePerformer",
        "p2",
        "limitSlots",
        "p2",
        "SetMethod",
        "c2",
        "GetFullCombine",
        "p2",
        "resultGem",
        "strID",
        "c2",
        "strID",
        "p1",
        "Slots_Required",
        "slotLimit",
        "p1",
        "inst",
        "CondenseSlots",
        "c1",
        "p1",
        "inst",
        "slotLimit",
        "p1",
        "inst",
        "Add",
        "Point",
        "p1",
        "inst",
        "Last",
        "Y",
        "slotLimit",
        "p2",
        "Slots_Required",
        "slotLimit",
        "p2",
        "inst",
        "CondenseSlots",
        "c2",
        "p2",
        "inst",
        "slotLimit",
        "keepBase",
        "p2",
        "inst",
        "Add",
        "Point",
        "p2",
        "inst",
        "Last",
        "Y",
        "slotLimit",
        "p2",
        "inst",
        "Add",
        "Point",
        "p2",
        "inst",
        "Last",
        "Y",
        "Point",
        "Point",
        "p1",
        "inst",
        "X",
        "newInst",
        "Add",
        "Point",
        "INST_DUPE",
        "newInst",
        "AddRange",
        "p1",
        "inst",
        "keepBase",
        "p2",
        "Slots_Required",
        "slotLimit",
        "newInst",
        "Add",
        "Point",
        "INST_DUPE",
        "newInst",
        "Add",
        "Point",
        "newInst",
        "AddRange",
        "p2",
        "inst",
        "keepBase",
        "newInst",
        "Add",
        "Point",
        "slotLimit",
        "slotLimit",
        "newInst",
        "Add",
        "Point",
        "slotLimit",
        "newInst",
        "Gem",
        "a",
        "i",
        "a",
        "Length",
        "i",
        "a",
        "i",
        "i",
        "s",
        "s",
        "Slots_Required",
        "Slots_Required",
        "s",
        "DllImport",
        "dwFlags",
        "dx",
        "dy",
        "cButtons",
        "UIntPtr",
        "dwExtraInfo",
        "X",
        "Y",
        "Cursor",
        "Position",
        "Point",
        "X",
        "Y",
        "mouse_event",
        "UIntPtr",
        "Zero",
        "mouse_event",
        "UIntPtr",
        "Zero",
        "DllImport",
        "bvK",
        "bScan",
        "dwFlags",
        "UIntPtr",
        "dwExtraInfo",
        "K",
        "keybd_event",
        "K",
        "UIntPtr",
        "Zero",
        "Sleep",
        "keybd_event",
        "K",
        "UIntPtr",
        "Zero",
        "DEL_STEPC",
        "stepID",
        "mSteps",
        "cancel_Combine",
        "Cursor",
        "Position",
        "i",
        "inst",
        "Count",
        "i",
        "GetSlotPos",
        "inst",
        "i",
        "X",
        "MoveCursor",
        "sA1",
        "X",
        "sPos",
        "X",
        "SLOT_SIZE",
        "sA1",
        "Y",
        "sPos",
        "Y",
        "SLOT_SIZE",
        "inst",
        "i",
        "Y",
        "INST_DUPE",
        "PressKey",
        "Keys",
        "D",
        "inst",
        "i",
        "Y",
        "INST_UPGR",
        "PressKey",
        "Keys",
        "U",
        "inst",
        "i",
        "Y",
        "PressMouse",
        "Sleep",
        "sleep_time",
        "sPos",
        "GetSlotPos",
        "inst",
        "i",
        "Y",
        "MoveCursor",
        "sA1",
        "X",
        "sPos",
        "X",
        "SLOT_SIZE",
        "sA1",
        "Y",
        "sPos",
        "Y",
        "SLOT_SIZE",
        "ReleaseMouse",
        "MoveCursor",
        "sA1",
        "X",
        "SLOT_SIZE",
        "sA1",
        "Y",
        "SLOT_SIZE",
        "PressMouse",
        "ReleaseMouse",
        "MoveCursor",
        "sA1",
        "X",
        "sPos",
        "X",
        "SLOT_SIZE",
        "sA1",
        "Y",
        "sPos",
        "Y",
        "SLOT_SIZE",
        "PressMouse",
        "sPos",
        "GetSlotPos",
        "inst",
        "i",
        "Y",
        "MoveCursor",
        "sA1",
        "X",
        "sPos",
        "X",
        "SLOT_SIZE",
        "sA1",
        "Y",
        "sPos",
        "Y",
        "SLOT_SIZE",
        "ReleaseMouse",
        "StepComplete",
        "StepComplete",
        "Invoke",
        "i",
        "cancel_Combine",
        "Sleep",
        "sleep_time",
        "s",
        "s",
        "s",
        "Point",
        "column",
        "row",
        "Point",
        "Point",
        "i",
        "orderedCombined",
        "Count",
        "i",
        "orderedCombined",
        "i",
        "Component1",
        "gemCombines",
        "Add",
        "Point",
        "i",
        "gemCombines",
        "X",
        "i",
        "orderedCombined",
        "Count",
        "i",
        "gemCombines",
        "Add",
        "Point",
        "Convert",
        "ToInt32",
        "orderedCombined",
        "i",
        "Component1",
        "strID",
        "Convert",
        "ToInt32",
        "orderedCombined",
        "i",
        "Component2",
        "strID",
        "gemCombines",
        "Count",
        "i",
        "gemCombines",
        "Count",
        "i",
        "BitConverter",
        "GetBytes",
        "gemCombines",
        "i",
        "X",
        "CopyTo",
        "saveBytes",
        "i",
        "BitConverter",
        "GetBytes",
        "gemCombines",
        "i",
        "Y",
        "CopyTo",
        "saveBytes",
        "i",
        "saveBytes",
        "lBytes",
        "colors",
        "Point",
        "Point",
        "BitConverter",
        "ToInt32",
        "lBytes",
        "gemCombines",
        "Add",
        "Point",
        "baseGems",
        "i",
        "lBytes",
        "Length",
        "i",
        "gemCombines",
        "Add",
        "Point",
        "BitConverter",
        "ToInt32",
        "lBytes",
        "i",
        "BitConverter",
        "ToInt32",
        "lBytes",
        "i",
        "Gem",
        "Gem",
        "Gems",
        "Add",
        "i",
        "gemCombines",
        "X",
        "i",
        "colors",
        "Gems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "Clr",
        "colors",
        "i",
        "Gems",
        "Gems",
        "Count",
        "strID",
        "colors",
        "i",
        "ToString",
        "Gems",
        "Add",
        "Gem",
        "Base",
        "Gem",
        "COLOR_NULL",
        "i",
        "gemCombines",
        "Count",
        "i",
        "Gems",
        "gemCombines",
        "i",
        "X",
        "Gems",
        "gemCombines",
        "i",
        "Y",
        "Gems",
        "Add",
        "Gem",
        "Combine",
        "c1",
        "c2",
        "Gems",
        "Last"
    ],
    "literals": [
        "\" \"",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "\" \"",
        "\"\"",
        "\"(\"",
        "\")\"",
        "\"2\"",
        "\"(1+1)\"",
        "\"o\"",
        "\"y\"",
        "\"b\"",
        "\"r\"",
        "\"k\"",
        "\"m\"",
        "\"g\"",
        "\"(\"",
        "\"+\"",
        "\")\"",
        "\"(\"",
        "\"+\"",
        "\")\"",
        "\"user32.dll\"",
        "\"user32.dll\""
    ],
    "variables": [
        "inst",
        "INST_DUPE",
        "INST_UPGR",
        "Slots_Required",
        "limitSlots",
        "strP",
        "resStr",
        "i",
        "ind",
        "s",
        "strC",
        "baseGems",
        "letterOrNumber",
        "i",
        "grd_str",
        "place",
        "color",
        "weakerGem",
        "Gem",
        "resultGem",
        "combined",
        "orderedCombined",
        "useCount",
        "i",
        "close",
        "open",
        "thisCombine",
        "cGems",
        "gem1",
        "gem2",
        "lastGems",
        "fgem1",
        "fgem2",
        "inventory",
        "slots",
        "i",
        "i",
        "oneUse",
        "startAt",
        "i",
        "startAt",
        "Gem",
        "g",
        "c1",
        "c2",
        "slot1",
        "slot2",
        "iU",
        "Gem",
        "gU",
        "c1U",
        "c2U",
        "slot1U",
        "slot2U",
        "oneID1",
        "oneID2",
        "Gem",
        "c1",
        "Gem",
        "c2",
        "CombinePerformer",
        "p1",
        "CombinePerformer",
        "p2",
        "newInst",
        "i",
        "SLOT_SIZE",
        "DEL_STEPC",
        "StepComplete",
        "cancel_Combine",
        "sleep_time",
        "Point",
        "sA1",
        "i",
        "mSteps",
        "Point",
        "sPos",
        "row",
        "column",
        "gemCombines",
        "i",
        "i",
        "saveBytes",
        "i",
        "gemCombines",
        "baseGems",
        "i",
        "Gems",
        "i",
        "i",
        "Gem",
        "c1",
        "Gem",
        "c2"
    ],
    "comments": [
        "List of instructions:",
        "X is gem to U/D/C",
        "Y is gem to C with, or -1 = D, or -2 = U",
        "</summary>",
        "Parses equation/formulas to compressed scheme",
        "Remove spaces, whitespace is for human readers.",
        "Remove newlines or the parser crashes",
        "Parsing to base gems, and standardizing it to my ways.",
        "Performs the combine pattern internally, recording the useage of each gem.",
        "Uses the result gem from SetGems and the useage data to create the instructions.",
        "Parses equation/formulas to compressed scheme",
        "All parsing except ParseFormula",
        "Is it from gemforce? (Letters)",
        "Replaces 4b with 3b, 2o with o, etc.",
        "must be like \"8m\"",
        "Check which letters are used, and replace each one with a number indentifier for the internal combiner",
        "generic gem in all over the AG forum",
        "If no letters were found, it still needs one base gem.",
        "Add baseGems to combined, and add values for their useage count.",
        "Get the first set of parenthesis and replace with incrementing id.",
        "Internal combines",
        "Have to track times each gem is used.",
        "final combine",
        "if scheme was surrounded by parenthesis (e.g. ((1+1)+1)) this step is not required, was already done in loop.",
        "Instructions list",
        "Array of what is in each of your inventory slots (Over 36 because this is before slot compression.)",
        "Which slot each gem is in",
        "Place baseGems in inventory slots",
        "All oneUse stuff is for slot compression. (This part of slot compression works.)",
        "Don't try to give instructinos for placing the base gems.",
        "Upgrade gem",
        "DUPE",
        "DUPE",
        "DUPE (repetitive code :/)",
        "None remaining? (Did not dupe)",
        "useCount[c1] == 0 should work here?",
        "Check oneUse combines",
        "Combine, by shifting position in combined list.",
        "If only one of the two is a oneUse, combine it anyway, if doing so will not put it over the current Slots_Req",
        "REDUCE SLOT REQUIREMENT",
        "CondenseSlots seems to be messed up, I can't get the 262144-combine to work.",
        "Get the combine INST for both components. (Will not include duplicating base gem.)",
        "If the combine for a component exceeds the slotLimit, CondenseSlots to get new INST.",
        "",
        "Each component's combine INST must include placing the base gem in slot 0.",
        "If I add the duplicate step to p1.inst, then the new condensed one will already have it.",
        "To solve this, try: If the INST does not begin with duplicate step, add it.",
        "Move result gem to highest open slot",
        "Move to 1st open space.",
        "Is slot 36 used by baseGem?",
        "2nd open (now 1st) space.",
        "Both combines require placing a base gem in slot 0 first.",
        "Duplicate base_gem",
        "Move base_gem",
        "Combine the two resulting gems",
        "Combine to the higher slot (shouldn't matter, last gem is moved later anyway)",
        "Finally",
        "Bot code",
        "Thread.Sleep(sleep_time);",
        "Move gem (only used when slots are compressed)",
        "Try the button. Works wonders!",
        "Save a combine",
        "First, gem all gems. (combined already has them yay!!) Then sort by grade and cost.",
        "Then save using GemCombiner's save.",
        "Actually, I shouldn't need to sort combined since they are in an order with each combine only requiring previous ones.",
        "Base gems",
        "i = 0 is null, no ID 0 gem",
        "Number of base gems",
        "turn the array back in to a list of points",
        "Get the gem by performing these combines.",
        "TEMPORARY FIX"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "SetMethod",
        "ParseFormula",
        "ParseScheme",
        "ieeePreParser",
        "SetGems",
        "CreateInstructions",
        "CondenseSlots",
        "GetEmpty",
        "CheckSlotReq",
        "mouse_event",
        "MoveCursor",
        "PressMouse",
        "ReleaseMouse",
        "keybd_event",
        "PressKey",
        "PerformCombine",
        "Point",
        "GetSlotPos",
        "GetSave",
        "Gem",
        "LoadGem"
    ],
    "classes": [
        "CombinePerformer"
    ]
}