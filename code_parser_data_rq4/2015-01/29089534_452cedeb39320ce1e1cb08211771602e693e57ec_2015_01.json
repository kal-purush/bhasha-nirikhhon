{
    "identifiers": [
        "os",
        "serial",
        "sys",
        "argparse",
        "time",
        "script",
        "join",
        "line",
        "strip",
        "line",
        "script",
        "split",
        "msg",
        "sys",
        "stdout",
        "write",
        "msg",
        "sys",
        "stdout",
        "flush",
        "port",
        "baud",
        "BAUD",
        "serial",
        "Serial",
        "port",
        "baud",
        "timeout",
        "Uploader",
        "TIMEOUT",
        "timeout",
        "TIMEOUT",
        "_port",
        "timeout",
        "_port",
        "timeout",
        "timeout",
        "_port",
        "timeout",
        "_port",
        "read",
        "n",
        "data",
        "n",
        "_port",
        "read",
        "_port",
        "t",
        "data",
        "verbose",
        "log",
        "write_lines",
        "save_lua",
        "replace",
        "_port",
        "baudrate",
        "_port",
        "write",
        "verbose",
        "log",
        "dump",
        "d",
        "len",
        "d",
        "len",
        "save_lua",
        "d",
        "verbose",
        "path",
        "os",
        "path",
        "basename",
        "path",
        "verbose",
        "log",
        "filename",
        "dump",
        "_port",
        "write",
        "dump",
        "time",
        "sleep",
        "count",
        "count",
        "dump",
        "dump",
        "verbose",
        "log",
        "debug",
        "filename",
        "_port",
        "write",
        "filename",
        "got_ack",
        "dump",
        "verbose",
        "log",
        "open",
        "path",
        "f",
        "read",
        "f",
        "close",
        "debug",
        "len",
        "content",
        "filename",
        "pos",
        "len",
        "content",
        "content",
        "pos",
        "pos",
        "chunk_size",
        "write_chunk",
        "data",
        "dump",
        "d",
        "join",
        "x",
        "encode",
        "x",
        "d",
        "pos",
        "chunk_size",
        "pos",
        "chunk_size",
        "len",
        "content",
        "len",
        "content",
        "pos",
        "verbose",
        "log",
        "debug",
        "error",
        "write_chunk",
        "verbose",
        "debug",
        "_port",
        "read",
        "r",
        "data",
        "data",
        "replace",
        "split",
        "line",
        "lines",
        "_port",
        "write",
        "line",
        "dump",
        "debug",
        "log",
        "d",
        "chunk",
        "debug",
        "len",
        "chunk",
        "chr",
        "len",
        "chunk",
        "chunk",
        "len",
        "chunk",
        "len",
        "chunk",
        "debug",
        "padding",
        "data",
        "padding",
        "debug",
        "len",
        "data",
        "_port",
        "write",
        "data",
        "got_ack",
        "x",
        "x",
        "argparse",
        "ArgumentParser",
        "description",
        "prog",
        "parser",
        "add_argument",
        "help",
        "Uploader",
        "PORT",
        "parser",
        "add_argument",
        "help",
        "arg_auto_int",
        "Uploader",
        "BAUD",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "parse_args",
        "Uploader",
        "args",
        "port",
        "args",
        "baud",
        "args",
        "verbose",
        "uploader",
        "set_verbose",
        "args",
        "debug",
        "uploader",
        "set_debug",
        "uploader",
        "prepare",
        "f",
        "args",
        "filename",
        "uploader",
        "write",
        "f",
        "args",
        "verbose"
    ],
    "literals": [
        "' '",
        "'\\n'",
        "r\"\"\"\nfunction recv_block(d)\n  if string.byte(d, 1) == 1 then\n    size = string.byte(d, 2)\n    if size > 0 then\n      file.write(string.sub(d, 3, 3+size))\n      uart.write(0,'\\006')\n    else\n      uart.write(0,'\\006')\n      file.close()\n      uart.on('data')\n      uart.setup(0,9600,8,0,1,1)\n    end\n  else\n    uart.write(0, '\\021' .. d)\n    uart.setup(0,9600,8,0,1,1)\n    uart.on('data')\n  end\nend\nfunction recv_name(d)\n  d = string.gsub(d, '\\000', '')\n  file.remove(d)\n  file.open(d, 'w')\n  uart.on('data', 130, recv_block, 0)\n  uart.write(0, '\\006')\nend\nfunction recv()\n  uart.setup(0,9600,8,0,1,0)\n  uart.on('data', '\\000', recv_name, 0)\n  uart.write(0, 'C')\nend\n\"\"\"",
        "'\\v'",
        "'\\v'",
        "'/dev/ttyUSB0'",
        "''",
        "''",
        "'Preparing esp for transfer.'",
        "'9600'",
        "'%d'",
        "'\\r\\n'",
        "'.'",
        "'unexpected'",
        "'error in save_lua'",
        "'.done'",
        "'Transfering %s'",
        "r\"recv()\"",
        "'\\n'",
        "'C'",
        "'Error waiting for esp'",
        "'.'",
        "'sending filename'",
        "'\\x00'",
        "'did not ack filename'",
        "'.'",
        "'rt'",
        "'sending %d bytes in %s'",
        "'Bad send'",
        "':'",
        "'hex'",
        "'.'",
        "'sending zero block'",
        "''",
        "'done'",
        "'waiting for ack'",
        "'\\x06'",
        "'\\r'",
        "''",
        "'\\n'",
        "'\\r\\n'",
        "'writing %d bytes chunk'",
        "'\\x01'",
        "'pad with %d characters'",
        "' '",
        "\"packet size %d\"",
        "'__main__'",
        "'nodeMCU Lua uploader'",
        "'uploader'",
        "'--port'",
        "'-p'",
        "'Serial port device'",
        "'--baud'",
        "'-b'",
        "'Serial port baud rate'",
        "'--verbose'",
        "'-v'",
        "'verbouse output'",
        "'store_true'",
        "'--debug'",
        "'-d'",
        "'debug output'",
        "'store_true'",
        "'filename'",
        "'+'",
        "'Lua file to upload'",
        "'All done!'"
    ],
    "variables": [
        "save_lua",
        "CHUNK_END",
        "CHUNK_REPLY",
        "BAUD",
        "PORT",
        "TIMEOUT",
        "_port",
        "line_number",
        "verbose",
        "debug",
        "verbose",
        "verbose",
        "debug",
        "t",
        "timeout",
        "n",
        "data",
        "n",
        "timeout",
        "d",
        "filename",
        "count",
        "f",
        "content",
        "pos",
        "chunk_size",
        "error",
        "data",
        "error",
        "d",
        "chunk_size",
        "r",
        "lines",
        "d",
        "data",
        "padding",
        "data",
        "parser",
        "args",
        "uploader"
    ],
    "comments": [
        "For NodeMcu version 0.9.4 build 2014-12-30 and newer.",
        "save_lua = minify(save_lua)",
        "save_lua = ' '.join([line.strip().replace(', ', ',') for line in save_lua.split('\\n')])",
        "zero size block",
        "ACK"
    ],
    "docstrings": [],
    "functions": [
        "minify",
        "log",
        "set_verbose",
        "set_debug",
        "dump",
        "prepare",
        "write",
        "got_ack",
        "write_lines",
        "write_chunk",
        "arg_auto_int"
    ],
    "classes": [
        "Uploader"
    ]
}