{
    "identifiers": [
        "com",
        "podio",
        "sdk",
        "com",
        "podio",
        "sdk",
        "Utils",
        "java",
        "util",
        "url",
        "query_string",
        "method",
        "error_parameters",
        "error_detail",
        "error_propagate",
        "request",
        "error_description",
        "error",
        "errorBundle",
        "statusCode",
        "json",
        "statusCode",
        "json",
        "statusCode",
        "json",
        "statusCode",
        "cause",
        "json",
        "cause",
        "statusCode",
        "statusCode",
        "Utils",
        "notEmpty",
        "json",
        "errorBundle",
        "JsonParser",
        "fromJson",
        "json",
        "errorBundle",
        "Utils",
        "getNative",
        "errorBundle",
        "error_propagate",
        "errorBundle",
        "errorBundle",
        "error_description",
        "errorBundle",
        "errorBundle",
        "error",
        "errorBundle",
        "errorBundle",
        "error_detail",
        "key",
        "errorBundle",
        "errorBundle",
        "error_parameters",
        "errorBundle",
        "error_parameters",
        "get",
        "key",
        "key",
        "fallback",
        "value",
        "getErrorParameter",
        "key",
        "parseInt",
        "value",
        "e",
        "fallback",
        "e",
        "fallback",
        "errorBundle",
        "errorBundle",
        "request",
        "errorBundle",
        "request",
        "method",
        "errorBundle",
        "errorBundle",
        "request",
        "errorBundle",
        "request",
        "query_string",
        "statusCode",
        "statusCode",
        "errorBundle",
        "errorBundle",
        "request",
        "errorBundle",
        "request",
        "url",
        "key",
        "errorBundle",
        "errorBundle",
        "error_parameters",
        "errorBundle",
        "error_parameters",
        "containsKey",
        "key",
        "status",
        "getStatusCode",
        "error",
        "getError",
        "description",
        "getErrorDescription",
        "status",
        "equals",
        "error",
        "equals",
        "description",
        "status",
        "equals",
        "error",
        "equals",
        "error",
        "equals",
        "description"
    ],
    "literals": [
        "\"unauthorized\"",
        "\"expired_token\"",
        "\"invalid_grant\"",
        "\"invalid_client\"",
        "\"invalid_auth\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (C) 2015 Citrix Systems, Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* This class represents a server side error returned by the Podio API. These errors are fully\n * completed network responses and they model an unhandled state (not a crash) in the API, caused by\n * the client request. Examples of issues can be missing permissions, expired authentication or\n * invalid client requests (like asking for the eleventh item in a list of ten).\n *\n * @author László Urszuly",
        "* Sub object of the ErrorBundle class.\n     *\n     * @author László Urszuly",
        "* The very Podio error domain model as sent by the API. This class is used to isolate the\n     * object layout and not have the PodioError exception being directly dependent of it.\n     *\n     * @author László Urszuly",
        "* Creates a new ApiError runtime exception. The given json will serve as the exception message.\n     * This implementation will also parse the json for quick and easy runtime access to the\n     * contained data.\n     *\n     * @param json\n     *         The Podio API provided error body.\n     * @param statusCode\n     *         The associated HTTP status code.",
        "* Same as {@link com.podio.sdk.ApiError#ApiError(String, int)} but also with the possibility to\n     * provide an underlying cause.\n     *\n     * @param json\n     *         The Podio API provided error body.\n     * @param statusCode\n     *         The associated HTTP status code.\n     * @param cause\n     *         The logical exception cause that delivered this ApiError. This depends on the\n     *         underlying implementation.",
        "* Returns the API provided {@code error_propagate} state flag.\n     *\n     * @return Boolean. Defaults to false if not stated.",
        "* Returns the API provided {@code error_description}.\n     *\n     * @return String or null.",
        "* Returns the API provided {@code error} name.\n     *\n     * @return String or null",
        "* Returns the API provided {@code error_detail}.\n     *\n     * @return String or null.",
        "* Returns the {@code error_parameter} with the given name as a string.\n     *\n     * @param key\n     *         The name of the parameter.\n     *\n     * @return String or null.",
        "* Returns the {@code error_parameter} with the given name as an integer.\n     *\n     * @param key\n     *         The name of the parameter.\n     * @param fallback\n     *         The number to return if the sought parameter doesn't exist or can't be parsed as an\n     *         {@code int} value.\n     *\n     * @return Integer.",
        "* Returns the method of the request that caused this API error to be thrown.\n     *\n     * @return String or null.",
        "* Returns the query string of the request that caused this API error to be thrown.\n     *\n     * @return String or null.",
        "* Returns the HTTP status code of the request that caused this API error to be thrown.\n     *\n     * @return HTTP status as an integer or -1.",
        "* Returns the URL of the request that caused this API error to be thrown.\n     *\n     * @return String or null.",
        "* Returns boolean true if there is an error parameter with the given name in the {@code\n     * error_parameters} map.\n     *\n     * @param key\n     *         The name of the sought error parameter.\n     *\n     * @return Boolean.",
        "* Checks whether this API error was thrown due to a session having invalid grants.\n     *\n     * @return Boolean true if the session has invalid grands."
    ],
    "functions": [
        "ApiError",
        "ApiError",
        "doPropagate",
        "getErrorDescription",
        "getError",
        "getErrorDetail",
        "getErrorParameter",
        "getErrorParameterAsInt",
        "getMethod",
        "getQueryString",
        "getStatusCode",
        "getUrl",
        "hasErrorParameter",
        "isAuthError"
    ],
    "classes": [
        "ApiError",
        "ErrorRequest",
        "ErrorBundle"
    ]
}