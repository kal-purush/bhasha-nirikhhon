{
    "identifiers": [
        "scipy",
        "sp",
        "scipy",
        "linalg",
        "la",
        "A",
        "sp",
        "sum",
        "A",
        "axis",
        "sp",
        "diag",
        "d",
        "x",
        "x",
        "d",
        "sp",
        "diag",
        "sqrt_d",
        "sp",
        "dot",
        "sp",
        "dot",
        "sqrt_D",
        "D",
        "A",
        "sqrt_D",
        "A",
        "k",
        "len",
        "A",
        "la",
        "eigh",
        "A",
        "eigvals",
        "n",
        "k",
        "n",
        "w",
        "v",
        "k",
        "x",
        "k",
        "sp",
        "matrix",
        "sp",
        "identity",
        "k",
        "copy",
        "i",
        "k",
        "sp",
        "random",
        "multivariate_normal",
        "mean",
        "covariance",
        "g",
        "append",
        "tmp",
        "g",
        "v",
        "k",
        "generate_gaussians",
        "k",
        "i",
        "k",
        "j",
        "len",
        "v",
        "sp",
        "dot",
        "v",
        "j",
        "x",
        "x",
        "g",
        "inner_prd",
        "index",
        "max",
        "inner_prd",
        "i",
        "i_max",
        "tmp",
        "append",
        "inner_prd",
        "i",
        "tmp",
        "append",
        "h",
        "append",
        "tmp",
        "h",
        "A",
        "S",
        "sp",
        "sum",
        "A",
        "i",
        "len",
        "A",
        "i",
        "S",
        "j",
        "len",
        "A",
        "j",
        "S",
        "crossing",
        "A",
        "i",
        "j",
        "total_S",
        "A",
        "i",
        "j",
        "total_S",
        "A",
        "i",
        "j",
        "crossing",
        "total_S",
        "total_S",
        "total",
        "total_S",
        "total",
        "total_S",
        "sparsity",
        "A",
        "h",
        "i",
        "len",
        "h",
        "j",
        "j",
        "sorted",
        "h",
        "i",
        "key",
        "x",
        "x",
        "j",
        "j",
        "indices",
        "h",
        "i",
        "j",
        "i",
        "len",
        "nz_indices",
        "S",
        "add",
        "nz_indices",
        "i",
        "sparsity",
        "A",
        "S",
        "tmp",
        "min_sparsity",
        "tmp",
        "S",
        "sets",
        "append",
        "sparsest_set",
        "min_sparsity",
        "sets",
        "input",
        "input",
        "open",
        "f",
        "y",
        "strip",
        "rstrip",
        "y",
        "input_file",
        "z",
        "z",
        "y",
        "split",
        "y",
        "A",
        "A",
        "laplacian",
        "A",
        "L",
        "spectral_projection",
        "L",
        "k",
        "w",
        "v",
        "T",
        "randomized_rounding",
        "v",
        "k",
        "h",
        "cheeger_sweep",
        "A",
        "h"
    ],
    "literals": [
        "'__main__'",
        "'k = '",
        "'input file:'",
        "'r'",
        "'\\n'",
        "' '",
        "' '",
        "'Graph:'",
        "'Laplacian:'",
        "'Eigenvalues: '",
        "'Eigenvectors: '",
        "'h:'",
        "'Cheeger sweep sets:'"
    ],
    "variables": [
        "d",
        "D",
        "sqrt_d",
        "sqrt_D",
        "n",
        "w",
        "v",
        "mean",
        "covariance",
        "g",
        "tmp",
        "g",
        "h",
        "tmp",
        "inner_prd",
        "i_max",
        "total",
        "crossing",
        "total_S",
        "sparsity",
        "total_S",
        "sets",
        "S",
        "indices",
        "nz_indices",
        "min_sparsity",
        "sparsest_set",
        "tmp",
        "min_sparsity",
        "sparsest_set",
        "k",
        "f",
        "input_file",
        "A",
        "A",
        "L",
        "w",
        "v",
        "h"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "compute the max",
        "Take the minimum of w(S) and w(S_c), where S_c is the complement of S"
    ],
    "docstrings": [
        "\"\"\"Compute the normalized laplacian of an adjacency matrix\"\"\"",
        "\"\"\"Generate top k eigenvectors of A\"\"\"",
        "\"\"\"Generate k spherical k-dimensional Gaussians g_1, ..., g_k\"\"\"",
        "\"\"\"Compute the vectors h_1, ..., h_k as in LRTV\"\"\"",
        "\"\"\"Computes the sparsity of a cut S, where S is a set of vertex indices\"\"\""
    ],
    "functions": [
        "laplacian",
        "spectral_projection",
        "generate_gaussians",
        "randomized_rounding",
        "sparsity",
        "cheeger_sweep"
    ],
    "classes": []
}