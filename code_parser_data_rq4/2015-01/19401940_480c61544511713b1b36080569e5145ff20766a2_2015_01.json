{
    "identifiers": [
        "argparse",
        "os",
        "shutil",
        "taskbase",
        "TaskBase",
        "utils",
        "fail_msg",
        "run_sync",
        "imagefactory",
        "AbstractImageFactoryTask",
        "imagefactory",
        "ImgFacBuilder",
        "installer",
        "InstallerTask",
        "json",
        "AbstractImageFactoryTask",
        "args",
        "cmd",
        "profile",
        "AbstractImageFactoryTask",
        "args",
        "cmd",
        "profile",
        "args",
        "cmd",
        "profile",
        "getattr",
        "checkoz",
        "ImgFacBuilder",
        "_args",
        "kickstart",
        "formatKS",
        "ksfile",
        "ksdata",
        "json",
        "dumps",
        "ozoverrides",
        "_args",
        "diskimage",
        "_args",
        "diskimage",
        "format",
        "_args",
        "diskimage",
        "imgfacbuild",
        "build",
        "template",
        "open",
        "_tdl",
        "read",
        "parameters",
        "parameters",
        "image",
        "data",
        "format",
        "image",
        "data",
        "lmcContainer",
        "_inputdiskpath",
        "diskimage",
        "InstallerTask",
        "_args",
        "_cmd",
        "_profile",
        "getattr",
        "format",
        "getattr",
        "args",
        "skip_subtask",
        "inst",
        "dumpTempMeta",
        "os",
        "path",
        "join",
        "workdir",
        "lmc_shell",
        "getattr",
        "_args",
        "yum_baseurl",
        "_args",
        "yum_baseurl",
        "yb_url",
        "yb_url",
        "format",
        "yb_url",
        "inst",
        "dumpTempMeta",
        "os",
        "path",
        "join",
        "workdir",
        "yb_repo",
        "docker_os",
        "yb_docker",
        "subname",
        "subval",
        "docker_subs",
        "iteritems",
        "docker_file",
        "replace",
        "subname",
        "subval",
        "inst",
        "dumpTempMeta",
        "os",
        "path",
        "join",
        "workdir",
        "docker_file",
        "docker_image_name",
        "os",
        "path",
        "dirname",
        "tmp_docker_file",
        "run_sync",
        "db_cmd",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "_args",
        "outputdir",
        "diskimage",
        "os",
        "path",
        "join",
        "lmc_outputdir",
        "run_sync",
        "cp_cmd",
        "format",
        "lmc_outputdir",
        "docker_image_name",
        "run_sync",
        "dr_cmd",
        "os",
        "path",
        "join",
        "lmc_outputdir",
        "os",
        "chmod",
        "finaldir",
        "format",
        "finaldir",
        "cmd",
        "argparse",
        "ArgumentParser",
        "description",
        "parents",
        "TaskBase",
        "baseargs",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "parse_args",
        "os",
        "path",
        "join",
        "args",
        "outputdir",
        "os",
        "path",
        "exists",
        "lmc_outputdir",
        "args",
        "overwrite",
        "fail_msg",
        "format",
        "lmc_outputdir",
        "shutil",
        "rmtree",
        "lmc_outputdir",
        "os",
        "mkdir",
        "lmc_outputdir",
        "os",
        "mkdir",
        "lmc_outputdir",
        "CreateLiveTask",
        "args",
        "cmd",
        "profile",
        "args",
        "profile",
        "composer",
        "createLiveDisk",
        "composer",
        "cleanup"
    ],
    "literals": [
        "'tdl'",
        "\"raw\"",
        "\"install_script\"",
        "\"generate_icicle\"",
        "\"oz_overrides\"",
        "\"Starting build\"",
        "\"Using existing disk image: {0}\"",
        "\"Created input disk: {0}\"",
        "'docker_os_name'",
        "'{0}/rpmostree-toolbox-lmc'",
        "'docker_os_name'",
        "'docker-create'",
        "\"lmc_shell.sh\"",
        "'yum_baseurl'",
        "\"\"",
        "\"\"",
        "\"[yum_baseurl-repo]\\nname=yum_baseurl\\nbaseurl={0}\\nenabled=1\\ngpgcheck=0\\n\"",
        "'ADD yb_baseurl.repo /etc/yum/repos.d/'",
        "\"yb_baseurl.repo\"",
        "'DOCKER_OS'",
        "'YB_REPO'",
        "'@%s@'",
        "\"Dockerfile\"",
        "'docker'",
        "'build'",
        "'-t'",
        "\"lmc/\"",
        "'cp'",
        "'-v'",
        "'--sparse=auto'",
        "\"lmc_input_disk\"",
        "'docker'",
        "'run'",
        "'--workdir'",
        "'/out'",
        "'-it'",
        "'--net=host'",
        "'--privileged=true'",
        "'-v'",
        "'{0}:{1}'",
        "'/out'",
        "\"images\"",
        "\"Your images can be found at {0}\"",
        "'Create live images'",
        "'--overwrite'",
        "'store_true'",
        "'If true, replace any existing output'",
        "'-o'",
        "'--outputdir'",
        "'Path to image output directory'",
        "'-p'",
        "'--profile'",
        "'DEFAULT'",
        "'Profile to compose (references a stanza in the config file)'",
        "'-k'",
        "'--kickstart'",
        "'Path to kickstart'",
        "'--tdl'",
        "'TDL file'",
        "'--name'",
        "'Image name'",
        "'--diskimage'",
        "'Path to and including existing RAW disk image'",
        "'--skip-subtask'",
        "'append'",
        "'Skip a subtask (currently: docker-create)'",
        "'-b'",
        "'--yum_baseurl'",
        "'Full URL for the yum repository'",
        "\"lmc\"",
        "\"The output directory {0} already exists.\""
    ],
    "variables": [
        "_args",
        "_cmd",
        "_profile",
        "_tdl",
        "imgfacbuild",
        "ksfile",
        "ksdata",
        "parameters",
        "_inputdiskpath",
        "image",
        "_inputdiskpath",
        "inst",
        "docker_os",
        "docker_image_name",
        "lmc_shell",
        "yb_url",
        "yb_url",
        "yb_docker",
        "yb_repo",
        "yb_docker",
        "docker_subs",
        "docker_file",
        "docker_file",
        "tmp_docker_file",
        "db_cmd",
        "lmc_outputdir",
        "cp_cmd",
        "dr_cmd",
        "finaldir",
        "parser",
        "args",
        "lmc_outputdir",
        "composer"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Copyright (C) 2014 Colin Walters <walters@verbum.org>, Andy Grimm <agrimm@redhat.com>",
        "",
        "This library is free software; you can redistribute it and/or",
        "modify it under the terms of the GNU Lesser General Public",
        "License as published by the Free Software Foundation; either",
        "version 2 of the License, or (at your option) any later version.",
        "",
        "This library is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU",
        "Lesser General Public License for more details.",
        "",
        "You should have received a copy of the GNU Lesser General Public",
        "License along with this library; if not, write to the",
        "Free Software Foundation, Inc., 59 Temple Place - Suite 330,",
        "Boston, MA 02111-1307, USA.",
        "There is currently a bug for loop devices in containers,",
        "so we make at least one device to be sure.",
        "https://groups.google.com/forum/#!msg/docker-user/JmHko2nstWQ/5iuzVf67vfEJ",
        "Instead of the --disk-image being the real name, using",
        "lmc_input_disk so we don't have to pass docker env vars",
        "If the above loop issue is ever fixed, just make the",
        "lmc command the CMD in the Dockerfile below",
        "If a yum_baseurl is defined, add it to the yum repos",
        "in the container",
        "Docker build",
        "Docker run",
        "Make readable for users",
        "End liveimage"
    ],
    "docstrings": [
        "\"\"\"#!/bin/sh\\n\nfor x in $(seq 0 6); do\n  path=/dev/loop${x}\n  if ! test -b ${path}; then mknod -m660 ${path} b 7 ${x}; fi\ndone\n\n/sbin/livemedia-creator --make-ostree-live --disk-image=/out/lmc_input_disk --resultdir=/out/images --keep-image --live-rootfs-keep-size\n\"\"\"",
        "\"\"\"\nFROM @DOCKER_OS@\n@YB_REPO@\nRUN mkdir /out\nRUN yum -y update\nRUN yum -y swap fakesystemd systemd\nRUN yum -y install lorax\nRUN yum -y clean all\nADD lmc_shell.sh /root/\nRUN chmod u+x /root/lmc_shell.sh\nCMD [\"/bin/sh\", \"/root/lmc_shell.sh\"]\n            \"\"\""
    ],
    "functions": [
        "createLiveDisk",
        "lmcContainer",
        "main"
    ],
    "classes": [
        "CreateLiveTask"
    ]
}