{
    "identifiers": [
        "Collections",
        "Generic",
        "ELS_Server",
        "c",
        "c",
        "c",
        "c",
        "c",
        "i",
        "i",
        "Length",
        "IsSpace",
        "i",
        "i",
        "i",
        "Length",
        "i",
        "i",
        "i",
        "i",
        "i",
        "Length",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "endChar",
        "endChar2",
        "stopOnSpace",
        "stopOnSpace",
        "IsSpace",
        "i",
        "i",
        "endChar",
        "i",
        "endChar2",
        "i",
        "Substring",
        "start",
        "i",
        "start",
        "c",
        "c",
        "c",
        "i",
        "NanoXMLAttribute",
        "attributes",
        "endChar",
        "endChar2",
        "SkipSpaces",
        "i",
        "GetValue",
        "i",
        "endChar",
        "endChar2",
        "SkipSpaces",
        "i",
        "i",
        "endChar",
        "i",
        "endChar2",
        "GetValue",
        "i",
        "SkipSpaces",
        "i",
        "i",
        "SkipSpaces",
        "i",
        "i",
        "IsQuote",
        "quote",
        "XMLParsingException",
        "attrName",
        "i",
        "GetValue",
        "i",
        "quote",
        "i",
        "attributes",
        "Add",
        "NanoXMLAttribute",
        "attrName",
        "attrValue",
        "SkipSpaces",
        "i",
        "name",
        "NanoXMLBase",
        "NanoXMLAttribute",
        "NanoXMLAttribute",
        "xmlString",
        "SkipSpaces",
        "xmlString",
        "i",
        "xmlString",
        "i",
        "XMLParsingException",
        "i",
        "xmlString",
        "i",
        "i",
        "ParseAttributes",
        "xmlString",
        "i",
        "declarations",
        "i",
        "i",
        "xmlString",
        "i",
        "xmlString",
        "i",
        "i",
        "i",
        "rootNode",
        "NanoXMLNode",
        "xmlString",
        "i",
        "rootNode",
        "NanoXMLAttribute",
        "declarations",
        "NanoXMLBase",
        "NanoXMLNode",
        "NanoXMLNode",
        "NanoXMLAttribute",
        "NanoXMLAttribute",
        "i",
        "name",
        "ParseAttributes",
        "i",
        "attributes",
        "i",
        "i",
        "i",
        "i",
        "SkipSpaces",
        "tempI",
        "tempI",
        "i",
        "tempI",
        "i",
        "i",
        "subNodes",
        "Add",
        "NanoXMLNode",
        "i",
        "SkipSpaces",
        "i",
        "i",
        "Length",
        "i",
        "XMLParsingException",
        "i",
        "value",
        "GetValue",
        "i",
        "i",
        "i",
        "XMLParsingException",
        "name",
        "i",
        "SkipSpaces",
        "i",
        "GetValue",
        "i",
        "endName",
        "name",
        "XMLParsingException",
        "name",
        "endName",
        "SkipSpaces",
        "i",
        "i",
        "XMLParsingException",
        "name",
        "i",
        "value",
        "name",
        "NanoXMLNode",
        "subNodes",
        "NanoXMLAttribute",
        "attributes",
        "NanoXMLNode",
        "nodeName",
        "NanoXMLNode",
        "nanoXmlNode",
        "subNodes",
        "nanoXmlNode",
        "name",
        "nodeName",
        "nanoXmlNode",
        "attributeName",
        "NanoXMLAttribute",
        "nanoXmlAttribute",
        "attributes",
        "nanoXmlAttribute",
        "Name",
        "attributeName",
        "nanoXmlAttribute",
        "name",
        "value",
        "name",
        "value",
        "name",
        "name",
        "value",
        "value",
        "message",
        "message"
    ],
    "literals": [
        "\"Unexpected token after \"",
        "\"Unexpected token\"",
        "\"Unexpected token\"",
        "\"Invalid ending on tag \"",
        "\"Start/end tag name mismatch: \"",
        "\" and \"",
        "\"Invalid ending on tag \""
    ],
    "variables": [
        "start",
        "i",
        "name",
        "attrName",
        "quote",
        "attrValue",
        "NanoXMLNode",
        "rootNode",
        "declarations",
        "i",
        "NanoXMLNode",
        "RootNode",
        "Declarations",
        "value",
        "name",
        "subNodes",
        "attributes",
        "tempI",
        "i",
        "endName",
        "Value",
        "Name",
        "SubNodes",
        "Attributes",
        "name",
        "value",
        "Name",
        "Value"
    ],
    "comments": [
        "Base class containing usefull features for all XML classes",
        "</summary>",
        "skip <!--",
        "skip --",
        "returns name",
        "skip '='",
        "skip quote",
        "skip quote",
        "Class representing whole DOM XML document",
        "</summary>",
        "Public constructor. Loads xml document from raw string",
        "</summary>",
        "<param name=\"xmlString\">String with xml</param>",
        "skip <",
        "declaration",
        "skip ?",
        "skip ending ?",
        "skip ending >",
        "doctype",
        "skip doctype",
        "skip >",
        "Root document element",
        "</summary>",
        "List of XML Declarations as <see cref=\"NanoXMLAttribute\"/>",
        "</summary>",
        "Element node of document",
        "</summary>",
        "if this node has nothing inside",
        "skip /",
        "skip >",
        "skip >",
        "temporary. to include all whitespaces into value, if any",
        "parse subnodes",
        "skip <",
        "EOF",
        "skip <",
        "parse value",
        "skip <",
        "skip /",
        "skip >",
        "Element value",
        "</summary>",
        "Element name",
        "</summary>",
        "List of subelements",
        "</summary>",
        "List of attributes",
        "</summary>",
        "Returns subelement by given name",
        "</summary>",
        "<param name=\"nodeName\">Name of subelement to get</param>",
        "<returns>First subelement with given name or NULL if no such element</returns>",
        "Returns attribute by given name",
        "</summary>",
        "<param name=\"attributeName\">Attribute name to get</param>",
        "<returns><see cref=\"NanoXMLAttribute\"/> with given name or null if no such attribute</returns>",
        "XML element attribute",
        "</summary>",
        "Attribute name",
        "</summary>",
        "Attribtue value",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "IsSpace",
        "SkipSpaces",
        "GetValue",
        "IsQuote",
        "ParseAttributes",
        "NanoXMLDocument",
        "NanoXMLNode",
        "NanoXMLAttribute",
        "GetAttribute",
        "NanoXMLAttribute",
        "XMLParsingException"
    ],
    "classes": [
        "NanoXMLBase",
        "NanoXMLDocument",
        "NanoXMLNode",
        "NanoXMLAttribute",
        "XMLParsingException"
    ]
}