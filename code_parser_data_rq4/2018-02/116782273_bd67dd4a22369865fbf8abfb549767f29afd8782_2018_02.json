{
    "identifiers": [
        "print_function",
        "argparse",
        "os",
        "stat",
        "sys",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "sys",
        "path",
        "insert",
        "os",
        "path",
        "join",
        "catkin",
        "environment_cache",
        "generate_environment_script",
        "ImportError",
        "workspace",
        "split",
        "os",
        "path",
        "join",
        "workspace",
        "os",
        "path",
        "isdir",
        "os",
        "path",
        "join",
        "python_path",
        "sys",
        "path",
        "insert",
        "python_path",
        "catkin",
        "environment_cache",
        "generate_environment_script",
        "generate_environment_script",
        "open",
        "output_filename",
        "f",
        "f",
        "write",
        "join",
        "code",
        "os",
        "stat",
        "output_filename",
        "st_mode",
        "os",
        "chmod",
        "output_filename",
        "mode",
        "stat",
        "S_IXUSR"
    ],
    "literals": [
        "'/opt/ros/kinetic/share/catkin/cmake'",
        "'catkinConfig.cmake.in'",
        "'/opt/ros/kinetic/share/catkin/cmake'",
        "'..'",
        "'python'",
        "\"/home/marzooq/AUV_SOFTWARE/AUV_ROS/devel;/opt/ros/kinetic\"",
        "';'",
        "'lib/python2.7/dist-packages'",
        "'catkin'",
        "'/home/marzooq/AUV_SOFTWARE/AUV_ROS/devel/.private/firstnodelaunch/env.sh'",
        "'/home/marzooq/AUV_SOFTWARE/AUV_ROS/build/firstnodelaunch/catkin_generated/setup_cached.sh'",
        "'w'",
        "'\\n'"
    ],
    "variables": [
        "python_path",
        "code",
        "output_filename",
        "mode"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "find the import for catkin's python package - either from source space or from an installed underlay",
        "search for catkin package in all workspaces and prepend to path",
        "print('Generate script for cached setup \"%s\"' % output_filename)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}