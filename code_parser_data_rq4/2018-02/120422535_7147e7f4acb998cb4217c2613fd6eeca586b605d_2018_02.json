{
    "identifiers": [
        "time",
        "datetime",
        "datetime",
        "json",
        "os",
        "re",
        "hashlib",
        "subprocess",
        "urllib",
        "parse",
        "urlparse",
        "argparse",
        "text",
        "urlparse",
        "text",
        "r",
        "scheme",
        "r",
        "scheme",
        "text",
        "text",
        "lower",
        "re",
        "sub",
        "anchor_link",
        "flags",
        "re",
        "UNICODE",
        "re",
        "sub",
        "anchor_link",
        "flags",
        "re",
        "UNICODE",
        "re",
        "sub",
        "anchor_link",
        "flags",
        "re",
        "UNICODE",
        "anchor_link",
        "dl_base_url",
        "path_in_repo",
        "dl_base_url",
        "strip",
        "endswith",
        "format",
        "dl_base_url",
        "path_in_repo",
        "format",
        "dl_base_url",
        "path_in_repo",
        "lists_info_array",
        "downloadbaseurl",
        "verbosity",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "format",
        "datetime",
        "now",
        "split",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "filterlist",
        "lists_info_array",
        "verbosity",
        "format",
        "filterlist",
        "lists_details",
        "append",
        "format",
        "filterlist",
        "construct_github_anchor_link",
        "filterlist",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "filterlist",
        "lists_info_array",
        "lists_details",
        "append",
        "format",
        "filterlist",
        "lists_details",
        "append",
        "construct_download_link",
        "downloadbaseurl",
        "os",
        "path",
        "join",
        "filterlist",
        "lists_details",
        "append",
        "format",
        "filterlist",
        "raw_download_link",
        "lists_details",
        "append",
        "format",
        "filterlist",
        "raw_download_link",
        "lists_details",
        "append",
        "format",
        "filterlist",
        "filterlist",
        "key",
        "header_output_list",
        "key",
        "filterlist",
        "should_linkify",
        "filterlist",
        "key",
        "lists_details",
        "append",
        "format",
        "key",
        "filterlist",
        "key",
        "filterlist",
        "key",
        "lists_details",
        "append",
        "format",
        "key",
        "filterlist",
        "key",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "conversion_output_tuple",
        "filterlist",
        "len",
        "conversion_output_tuple",
        "verbosity",
        "format",
        "conversion_output_tuple",
        "lists_details",
        "append",
        "format",
        "conversion_output_tuple",
        "conversion_output_tuple",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "append",
        "lists_details",
        "lists_info_array",
        "verbosity",
        "lists_licenses",
        "append",
        "lists_licenses",
        "append",
        "filterlist",
        "lists_info_array",
        "filterlist",
        "lists_licenses",
        "append",
        "format",
        "filterlist",
        "lists_licenses",
        "append",
        "format",
        "filterlist",
        "verbosity",
        "format",
        "filterlist",
        "filterlist",
        "filterlist",
        "lists_licenses",
        "append",
        "format",
        "filterlist",
        "lists_licenses",
        "append",
        "format",
        "filterlist",
        "verbosity",
        "format",
        "filterlist",
        "filterlist",
        "verbosity",
        "format",
        "filterlist",
        "lists_licenses",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "action",
        "parser",
        "parse_args",
        "os",
        "path",
        "join",
        "args",
        "inputpath",
        "os",
        "makedirs",
        "os",
        "path",
        "dirname",
        "args",
        "outputpath",
        "exist_ok",
        "args",
        "verbosity",
        "format",
        "input_lists_path",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "input_lists_path",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "args",
        "verbosity",
        "format",
        "join",
        "rsync_call_array",
        "subprocess",
        "check_output",
        "rsync_call_array",
        "universal_newlines",
        "args",
        "verbosity",
        "line",
        "rsync_output",
        "split",
        "len",
        "line",
        "strip",
        "line",
        "open",
        "os",
        "path",
        "join",
        "args",
        "inputpath",
        "json_data",
        "json",
        "load",
        "json_data",
        "args",
        "verbosity",
        "format",
        "construct_readme_file",
        "json_object",
        "args",
        "downloadbaseurl",
        "args",
        "verbosity",
        "args",
        "verbosity",
        "format",
        "construct_license_file",
        "json_object",
        "args",
        "verbosity",
        "args",
        "verbosity",
        "format",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "open",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "f",
        "f",
        "write",
        "join",
        "readme_lines",
        "args",
        "verbosity",
        "format",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "open",
        "os",
        "path",
        "join",
        "args",
        "outputpath",
        "f",
        "f",
        "write",
        "join",
        "license_lines",
        "format",
        "args",
        "outputpath"
    ],
    "literals": [
        "\"http\"",
        "\"https\"",
        "r'[^\\s\\w\\-]+'",
        "''",
        "r'[_]+'",
        "''",
        "r'\\s'",
        "'-'",
        "\"/\"",
        "\"{}{}\"",
        "\"{}/{}\"",
        "\"# DOMAIN-ONLY Filter Lists\"",
        "\"**Last Updated:** {}\"",
        "'.'",
        "\"\"",
        "\"- [Details](#details)\"",
        "\"  - [Usage](#usage)\"",
        "\"    - [Using with Pi-Hole](#using-with-pi-hole)\"",
        "\"    - [Using with other tools](#using-with-other-tools)\"",
        "\"  - [Reporting Conversion Issues](#reporting-conversion-issues)\"",
        "\"  - [Disclaimer](#disclaimer)\"",
        "\"- [The Lists](#the-lists)\"",
        "\"\\tAdding List: \\\"{!s}\\\"\"",
        "'Title'",
        "\"  - [{}](#{}) (Domains-only)\"",
        "'Title'",
        "'Title'",
        "\" (Domains-only)\"",
        "\"\"",
        "\"# Details:\"",
        "\"These are \\\"DOMAIN-ONLY\\\" **converted** versions of various popular original filter / blocking lists.\"",
        "\"They have been modified from their original versions by scripts at: https://github.com/justdomains/ci\"",
        "\"\"",
        "\"The scripts output **only** the full-domain-blocking entries from the original lists, while attempting to filter any domains that conflict with an exception rule on the original list.\"",
        "\"\"",
        "\"## Usage:\"",
        "\"These converted files can be used with various DNS and domain-blocking tools:\"",
        "\"\"",
        "\"### Using with [Pi-Hole](https://pi-hole.net/):\"",
        "\"1. Copy the link to the Pi-Hole format for the desired list (from the appropriate table below).\"",
        "\"2. [Add the URL to your Pi-Hole's block lists (**Settings** > **Pi-Hole's Block Lists**).](https://github.com/pi-hole/pi-hole/wiki/Customising-Sources-for-Ad-Lists)\"",
        "\"\"",
        "\"### Using with other tools:\"",
        "\"The converted lists are provided in a \\\"Raw Domain List\\\" format that contains only domains, one per line. Many other tools / scripts can ingest this format to add them to your blocklist.\"",
        "\"\"",
        "\"> ## IMPORTANT:\"",
        "\"> **Because these are automated, converted _subsets_ of the original lists, please do not report omissions from these converted files to the list originator.**\"",
        "\"\"",
        "\"## Reporting Conversion Issues:\"",
        "\"If you find an issue in the output of the conversion process (i.e. comparing to the original upstream list), please report it over on: https://github.com/justdomains/ci/issues\"",
        "\"\"",
        "\"> #### **PLEASE NOTE:**\"",
        "\"> **We do not manage the upstream lists themselves, and will not be able to add any new blocks to the lists.**\"",
        "\"\"",
        "\"### Disclaimer:\"",
        "\"These files are provided \\\"AS IS\\\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and noninfringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, arising from, out of or in connection with the files or the use of the files.\"",
        "\"\"",
        "\"# The Lists:\"",
        "\"\"",
        "\"### {} (Domains-only)\"",
        "'Title'",
        "\"| Format | Raw Download Link |\"",
        "\"lists/\"",
        "'Output Formats'",
        "'Just Domains'",
        "\"| Raw Domain List | [{}]({}) |\"",
        "'Output Formats'",
        "'Just Domains'",
        "\"| Pi-Hole | [{}]({}) |\"",
        "'Output Formats'",
        "'Just Domains'",
        "\"Source: [{}]({})\"",
        "'Source'",
        "'Source'",
        "'Title'",
        "'Version'",
        "'Last Modified'",
        "'Homepage'",
        "'Header'",
        "'Header'",
        "\"   {}: [{}]({})\"",
        "'Header'",
        "'Header'",
        "\"   {}: {}\"",
        "'Header'",
        "\"Conversion Details:\"",
        "\"```\"",
        "'Conversion'",
        "\"\\tERROR: Failed to output Conversion tuple because it does not have 2 items: {!s}\"",
        "\"   {}: {}\"",
        "\"```\"",
        "\"\"",
        "\"<sup>Any and all trademarks are the property of their respective owners.</sup>\"",
        "\"\"",
        "\"All converted / modified list files are licensed under the same license as the original list.\"",
        "\"\"",
        "'License'",
        "'Header'",
        "\"[{}]\"",
        "'Base Output Filename'",
        "\"\\tLicense: {}\"",
        "'Header'",
        "'License'",
        "\"\\tAdding License for List \\\"{!s}\\\": \\\"{!s}\\\"; source='List Header'\"",
        "'Title'",
        "'Header'",
        "'License'",
        "'License'",
        "\"[{}]\"",
        "'Base Output Filename'",
        "\"\\tLicense: {}\"",
        "'License'",
        "\"\\tAdding License for List \\\"{!s}\\\": \\\"{!s}\\\"; source='Input'\"",
        "'Title'",
        "'License'",
        "\"\\tWARNING: No License Information Available for List: \\\"{!s}\\\"; skipping\"",
        "'Title'",
        "\"inputpath\"",
        "\"path to the output folder produced by convertlist.py\"",
        "\"outputpath\"",
        "\"path to a desired output folder in which the list hosting repo's files will be built\"",
        "\"-dlurl\"",
        "\"--downloadbaseurl\"",
        "\"the base public URL at which the contents of the repo/ folder will be accessible (once separately uploaded) - this is used for properly forming README list download links\"",
        "\"-v\"",
        "\"--verbosity\"",
        "\"count\"",
        "\"lists/\"",
        "\"Syncing: {!s} -> {!s}\"",
        "\"lists/\"",
        "\"rsync\"",
        "\"-avh\"",
        "\"lists/\"",
        "\"--delete\"",
        "\"\\t{!s}\"",
        "\" \"",
        "'\\n'",
        "\"\\t\"",
        "'details.json'",
        "\"Building: {!s}\"",
        "\"README.md\"",
        "\"Building: {!s}\"",
        "\"LICENSE\"",
        "\"Writing: {!s}\"",
        "\"README.md\"",
        "'README.md'",
        "'w'",
        "'\\n'",
        "\"Writing: {!s}\"",
        "\"LICENSE\"",
        "'LICENSES'",
        "'w'",
        "'\\n'",
        "\"Finished building repo in: {!s}\""
    ],
    "variables": [
        "r",
        "anchor_link",
        "anchor_link",
        "anchor_link",
        "anchor_link",
        "lists_details",
        "raw_download_link",
        "header_output_list",
        "lists_licenses",
        "parser",
        "args",
        "input_lists_path",
        "rsync_call_array",
        "rsync_output",
        "json_object",
        "readme_lines",
        "license_lines"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "",
        "Requires: Python 3",
        "",
        "This script takes as input the folder produced by `convertlist.py`",
        "and builds the \"list hosting\" repo in the specified output path.",
        "",
        "[Example usage of both scripts]:",
        "./convertlists.py lists.json converted/",
        "./buildrepo.py converted/ repo/ --downloadbaseurl https://raw.githubusercontent.com/justdomains/blocklists/master/",
        "",
        "Will output a list-hosting repo to `repo/` with proper links and content for pushing to the `master` branch of:",
        "https://github.com/justdomains/blocklists",
        "",
        "[License]:",
        "Copyright (c) 2018 justdomains contributors (https://github.com/justdomains)",
        "MIT License (https://github.com/justdomains/ci/LICENSE)",
        "",
        "Does a string appear to represent a URL?",
        "Lowercase the string",
        "Remove anything that is not a letter, number, space, or hyphen",
        "Remove underscores (since \\w includes underscores)",
        "Change any space to a hyphen",
        "NOTE: This does *not* handle non-unique anchors (i.e. by appending a \"-\" and a number)",
        "Construct the README.md file",
        "Output Formats Table",
        "Output Source List Information",
        "Output Conversion Details",
        "Skip, currently unsupported",
        "Construct the LICENSE file",
        "Use the License information extracted from the list file itself",
        "Use the License information provided to convertlists.py (via lists.json)",
        "",
        "Main",
        "Retrieve the input path and output path as arguments",
        "type: str",
        "Ensure that the output directory exists",
        "rsync the lists folder",
        "process the converted details.json into README and LICENSE files",
        "Output README.md file",
        "Output LICENSE file"
    ],
    "docstrings": [],
    "functions": [
        "should_linkify",
        "construct_github_anchor_link",
        "construct_download_link",
        "construct_readme_file",
        "construct_license_file"
    ],
    "classes": []
}