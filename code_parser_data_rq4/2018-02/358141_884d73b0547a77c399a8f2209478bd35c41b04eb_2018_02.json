{
    "identifiers": [
        "print_function",
        "absolute_import",
        "division",
        "gdb",
        "re",
        "utils",
        "typename",
        "typename",
        "rstrip",
        "next",
        "q",
        "q",
        "typename",
        "endswith",
        "q",
        "typename",
        "len",
        "qual",
        "qps",
        "append",
        "qual",
        "StopIteration",
        "typename",
        "lstrip",
        "next",
        "q",
        "q",
        "typename",
        "startswith",
        "q",
        "typename",
        "len",
        "qual",
        "qps",
        "append",
        "qual",
        "StopIteration",
        "typename",
        "qps",
        "t",
        "qs",
        "q",
        "qs",
        "q",
        "t",
        "pointer",
        "q",
        "t",
        "reference",
        "q",
        "t",
        "t",
        "typename",
        "len",
        "typename",
        "e",
        "length",
        "typename",
        "e",
        "c",
        "unmatched",
        "typename",
        "b",
        "e",
        "strip",
        "e",
        "c",
        "unmatched",
        "c",
        "unmatched",
        "e",
        "typename",
        "b",
        "e",
        "strip",
        "add_printer",
        "last_supported_boost_version",
        "re",
        "compile",
        "value",
        "value",
        "get_variant_type",
        "format",
        "stored_type_name",
        "get_variant_type",
        "reinterpret_cast",
        "value",
        "stored_type",
        "stored_type_name",
        "stored_value",
        "intptr",
        "value",
        "type_index",
        "BoostVariant",
        "regex",
        "search",
        "value",
        "type_name",
        "split_parameter_pack",
        "m",
        "group",
        "type_names",
        "type_index",
        "strip_qualifiers",
        "stored_type_name",
        "apply_qualifiers",
        "lookup_type",
        "base_type_name",
        "qualifiers",
        "stored_type_name"
    ],
    "literals": [
        "'&'",
        "'*'",
        "'const'",
        "'volatile'",
        "'const'",
        "'volatile'",
        "'*'",
        "'&'",
        "'const'",
        "','",
        "'<'",
        "'>'",
        "\"Pretty Printer for boost::variant (Boost.Variant)\"",
        "'boost::variant'",
        "'boost::variant'",
        "'^boost::variant<(.*)>$'",
        "'(boost::variant<...>) type = {}'",
        "'storage_'",
        "'data_'",
        "'buf'",
        "'which_'",
        "'Heap backup is not supported'"
    ],
    "variables": [
        "qps",
        "typename",
        "qual",
        "typename",
        "typename",
        "qual",
        "typename",
        "t",
        "t",
        "t",
        "unmatched",
        "length",
        "b",
        "e",
        "c",
        "b",
        "e",
        "printer_name",
        "min_supported_version",
        "max_supported_version",
        "template_name",
        "regex",
        "value",
        "stored_type",
        "stored_type_name",
        "stored_type",
        "stored_type_name",
        "stored_value",
        "type_index",
        "m",
        "type_names",
        "stored_type_name",
        "base_type_name",
        "qualifiers"
    ],
    "comments": [
        "encoding: utf-8",
        "",
        "Boost Variant",
        "",
        "This is a workaround for a GDB issue",
        "https://sourceware.org/bugzilla/show_bug.cgi?id=17311.",
        "gdb.Type.template_argument() method does not work unless variadic templates",
        "are disabled using BOOST_VARIANT_DO_NOT_USE_VARIADIC_TEMPLATES."
    ],
    "docstrings": [
        "\"\"\"Remove const/volatile qualifiers, references, and pointers of a type\"\"\"",
        "\"\"\"Apply the given sequence of references, and pointers to a gdb.Type.\n       const and volatile qualifiers are not applied cince they do not affect\n       printing. Also it is not possible to make a const+volatile qualified\n       type in gdb.\"\"\"",
        "\"\"\"Split a string represending a comma-separated c++ parameter pack into a list of stings of element types\"\"\"",
        "\"\"\"Get a gdb.Type of a template argument\"\"\""
    ],
    "functions": [
        "strip_qualifiers",
        "apply_qualifiers",
        "split_parameter_pack",
        "to_string",
        "children",
        "get_variant_type"
    ],
    "classes": [
        "BoostVariant"
    ]
}