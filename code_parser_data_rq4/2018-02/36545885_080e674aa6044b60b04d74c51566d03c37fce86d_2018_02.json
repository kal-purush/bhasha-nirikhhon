{
    "identifiers": [
        "Process",
        "Process",
        "re",
        "staticmethod",
        "capfile",
        "targets",
        "Process",
        "exists",
        "capfile",
        "Process",
        "command",
        "p",
        "wait",
        "p",
        "stdout",
        "line",
        "lines",
        "split",
        "line",
        "line",
        "split",
        "bssids",
        "add",
        "bssid",
        "upper",
        "t",
        "targets",
        "t",
        "bssid",
        "upper",
        "bssids",
        "Target",
        "Target",
        "Target",
        "fields",
        "t",
        "Tshark",
        "check_for_wps_and_update_targets",
        "test_file",
        "targets",
        "format",
        "targets",
        "bssid",
        "targets",
        "wps",
        "targets",
        "wps"
    ],
    "literals": [
        "'tshark'",
        "'tshark'",
        "'-r'",
        "'-n'",
        "'-Y'",
        "'wps.wifi_protected_setup_state && wlan.da == ff:ff:ff:ff:ff:ff'",
        "'-T'",
        "'fields'",
        "'-e'",
        "'wlan.ta'",
        "'-e'",
        "'wps.ap_setup_locked'",
        "'-E'",
        "'separator=,'",
        "'\\n'",
        "','",
        "','",
        "'__main__'",
        "'./tests/files/contains_wps_network.cap'",
        "'A4:2B:8C:16:6B:3A'",
        "'A4:2B:8C:16:6B:3A'",
        "'2015-05-27 19:28:44'",
        "'2015-05-27 19:28:46'",
        "'11'",
        "'54'",
        "'WPA2'",
        "'CCMP TKIP'",
        "'PSK'",
        "'-58'",
        "'2'",
        "'0'",
        "'0.0.0.0'",
        "'9'",
        "'Test Router Please Ignore'",
        "'Target(BSSID={}).wps = {} (Expected: True)'"
    ],
    "variables": [
        "command",
        "p",
        "lines",
        "bssids",
        "bssid",
        "locked",
        "t",
        "wps",
        "test_file",
        "target_bssid",
        "fields",
        "t",
        "targets"
    ],
    "comments": [
        "!/usr/bin/python2.7",
        "-*- coding: utf-8 -*-",
        "Tshark is required to detect WPS networks",
        "Path to cap file",
        "Don't resolve addresses",
        "Filter WPS broadcast packets",
        "Only output certain fields",
        "BSSID",
        "Locked status",
        "CSV",
        "Failure is acceptable",
        "TODO: Ignore if WPS is locked?",
        "BSSID",
        "Dates",
        "Channel",
        "throughput",
        "AUTH",
        "???",
        "SSID",
        "Should update 'wps' field of a target"
    ],
    "docstrings": [
        "''' Wrapper for Tshark program. '''",
        "'''\n            Given a cap file and list of targets, use TShark to\n            find which BSSIDs in the cap file use WPS.\n            Then update the 'wps' flag for those BSSIDs in the targets.\n\n            Args:\n                capfile - .cap file from airodump containing packets\n                targets - list of Targets from scan, to be updated\n        '''"
    ],
    "functions": [
        "check_for_wps_and_update_targets"
    ],
    "classes": [
        "Tshark"
    ]
}