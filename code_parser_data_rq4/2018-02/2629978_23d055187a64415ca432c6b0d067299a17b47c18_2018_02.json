{
    "identifiers": [
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "imp",
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "model",
        "AbstractGCEvent",
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "model",
        "GCEvent",
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "model",
        "GCModel",
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "model",
        "GCResource",
        "com",
        "tagtraum",
        "perf",
        "gcviewer",
        "util",
        "ParseInformation",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "io",
        "LineNumberReader",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "util",
        "logging",
        "Level",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "GCLINE",
        "Pattern",
        "compile",
        "gcResource",
        "gcResource",
        "getLogger",
        "isLoggable",
        "Level",
        "INFO",
        "getLogger",
        "info",
        "model",
        "model",
        "setFormat",
        "GCModel",
        "Format",
        "GO",
        "parsePosition",
        "matcher",
        "GCLINE",
        "matcher",
        "line",
        "line",
        "readLine",
        "shouldContinue",
        "parsePosition",
        "setIndex",
        "parsePosition",
        "setLineNumber",
        "getLineNumber",
        "matcher",
        "reset",
        "line",
        "matches",
        "gcEvent",
        "parseMatch",
        "matcher",
        "model",
        "add",
        "gcEvent",
        "pe",
        "getLogger",
        "isLoggable",
        "Level",
        "WARNING",
        "getLogger",
        "warning",
        "pe",
        "toString",
        "getLogger",
        "isLoggable",
        "Level",
        "FINE",
        "getLogger",
        "log",
        "Level",
        "FINE",
        "pe",
        "getMessage",
        "pe",
        "model",
        "getLogger",
        "isLoggable",
        "Level",
        "INFO",
        "getLogger",
        "info",
        "matcher",
        "relativeTime",
        "parseDouble",
        "matcher",
        "group",
        "stopTheWorld1Time",
        "parseDouble",
        "matcher",
        "group",
        "stopTheWorld2Time",
        "parseDouble",
        "matcher",
        "group",
        "preUsed",
        "parseInt",
        "matcher",
        "group",
        "alive",
        "parseInt",
        "matcher",
        "group",
        "postUsed",
        "parseInt",
        "matcher",
        "group",
        "pause",
        "stopTheWorld1Time",
        "stopTheWorld2Time",
        "relativeTime",
        "preUsed",
        "postUsed",
        "alive",
        "pause",
        "AbstractGCEvent",
        "Type",
        "GC"
    ],
    "literals": [
        "\"\"",
        "\"gc \"",
        "\"(\\\\d+) \"",
        "\"@(\\\\d+\\\\.\\\\d+)s \"",
        "\"(\\\\d+)%: \"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)\\\\+\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)\\\\+\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?) ms clock, \"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)\\\\+\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)/\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)/\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?)\\\\+\"",
        "\"(\\\\d+(?:\\\\.\\\\d+)?) ms cpu, \"",
        "\"(\\\\d+)->\"",
        "\"(\\\\d+)->\"",
        "\"(\\\\d+) MB, \"",
        "\"(\\\\d+) MB goal, \"",
        "\"(\\\\d+) P\"",
        "\"Reading Go format...\"",
        "\"\"",
        "\"Done reading.\""
    ],
    "variables": [
        "line"
    ],
    "comments": [],
    "docstrings": [
        "* Parses GC log output from Go 1.9.\n *\n * @author <a href=\"mailto:roland.illig@gmx.de\">Roland Illig</a>\n * @see <a href=\"https://golang.org/pkg/runtime/#hdr-Environment_Variables\">Go documentation</a>"
    ],
    "functions": [
        "DataReaderGo",
        "GCModel",
        "read",
        "parseMatch"
    ],
    "classes": [
        "DataReaderGo"
    ]
}