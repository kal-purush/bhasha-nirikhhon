{
    "identifiers": [
        "Linq",
        "Linq",
        "Expressions",
        "Reflection",
        "BenchmarkDotNet",
        "Attributes",
        "Linq",
        "Expressions",
        "Expression",
        "E",
        "FastExpressionCompiler",
        "ExpressionInfo",
        "FastExpressionCompiler",
        "Benchmarks",
        "Expression",
        "Func",
        "CreateExpr",
        "Expression",
        "Func",
        "Parameter",
        "Parameter",
        "Lambda",
        "Func",
        "TryCatch",
        "Call",
        "GetTypeInfo",
        "DeclaredMethods",
        "First",
        "m",
        "Name",
        "nameof",
        "Parse",
        "aParamExpr",
        "Catch",
        "exParamExpr",
        "Property",
        "Property",
        "exParamExpr",
        "GetTypeInfo",
        "DeclaredProperties",
        "First",
        "p",
        "Name",
        "nameof",
        "Message",
        "GetTypeInfo",
        "DeclaredProperties",
        "First",
        "p",
        "Name",
        "nameof",
        "Length",
        "aParamExpr",
        "MemoryDiagnoser",
        "Benchmark",
        "Expr",
        "Compile",
        "Benchmark",
        "Baseline",
        "Expr",
        "CompileFast",
        "MemoryDiagnoser",
        "DisassemblyDiagnoser",
        "printIL",
        "Func",
        "Expr",
        "Compile",
        "Func",
        "Expr",
        "CompileFast",
        "Benchmark",
        "_compiled",
        "Invoke",
        "Benchmark",
        "Baseline",
        "_compiledFast",
        "Invoke"
    ],
    "literals": [
        "\"a\"",
        "\"ex\"",
        "\"123\"",
        "\"123\""
    ],
    "variables": [
        "Expr",
        "aParamExpr",
        "exParamExpr",
        "_compiled",
        "_compiledFast"
    ],
    "comments": [
        "Test expression",
        "(string a) => {",
        "try { return int.Parse(a); }",
        "catch (Exception ex) { return ex.Message.Length; }",
        "}",
        "private static ExpressionInfo<Func<string, int>> CreateExprInfo()",
        "{",
        "var aParamExpr = E.Parameter(typeof(string), \"a\");",
        "var exParamExpr = E.Parameter(typeof(Exception), \"ex\");",
        "return E.Lambda<Func<string, int>>(",
        "E.TryCatch(",
        "E.Call(typeof(int).GetTypeInfo()",
        ".DeclaredMethods.First(m => m.Name == nameof(int.Parse)),",
        "aParamExpr),",
        "E.Catch(exParamExpr,",
        "E.Property(",
        "E.Property(exParamExpr, typeof(Exception).GetTypeInfo()",
        ".DeclaredProperties.First(p => p.Name == nameof(Exception.Message))),",
        "typeof(string).GetTypeInfo()",
        ".DeclaredProperties.First(p => p.Name == nameof(string.Length))",
        ")",
        ")",
        "),",
        "aParamExpr",
        ");",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "CreateExpr",
        "Expr_Compile",
        "Expr_CompileFast",
        "Invoke_Compiled",
        "Invoke_CompiledFast"
    ],
    "classes": [
        "ExprInfoVsExpr_TryCatchExpr",
        "Compile",
        "Invoke"
    ]
}