{
    "identifiers": [
        "datetime",
        "pandas",
        "pd",
        "pandas",
        "DataFrame",
        "QUANTAXIS",
        "QAData",
        "QA_data_make_hfq",
        "QA_data_make_qfq",
        "QA_DataStruct_Index_day",
        "QA_DataStruct_Index_min",
        "QA_DataStruct_Stock_block",
        "QA_DataStruct_Stock_day",
        "QA_DataStruct_Stock_min",
        "QA_DataStruct_Stock_transaction",
        "QUANTAXIS",
        "QAFetch",
        "QAQuery",
        "QA_fetch_indexlist_day",
        "QA_fetch_stocklist_day",
        "QA_fetch_stocklist_min",
        "QUANTAXIS",
        "QAUtil",
        "QA_Setting",
        "QA_util_date_stamp",
        "QA_util_date_valid",
        "QA_util_log_info",
        "QA_util_time_stamp",
        "QUANTAXIS",
        "QAUtil",
        "QA_util_sql_async_mongo_setting",
        "asyncio",
        "args",
        "kwargs",
        "asyncio",
        "coroutine",
        "work",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "code",
        "__start",
        "__end",
        "if_drop_index",
        "collections",
        "QA_util_sql_async_mongo_setting",
        "quantaxis",
        "stock_day",
        "__start",
        "__end",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "collections",
        "find",
        "code",
        "QA_util_date_stamp",
        "__end",
        "QA_util_date_stamp",
        "__start",
        "asyncio",
        "get_event_loop",
        "asyncio",
        "ensure_future",
        "QA_fetch_stock_day_adv",
        "loop",
        "run_until_complete",
        "asyncio",
        "wait",
        "data"
    ],
    "literals": [
        "'获取股票日线'",
        "'code'",
        "'open'",
        "'high'",
        "'low'",
        "'close'",
        "'vol'",
        "'date'",
        "'code'",
        "\"date_stamp\"",
        "\"$lte\"",
        "\"$gte\"",
        "'000001'",
        "'2017-01-01'",
        "'2017-07-31'"
    ],
    "variables": [
        "data",
        "job",
        "__start",
        "__end",
        "data",
        "loop"
    ],
    "comments": [
        "task=asyncio.ensure_future(QA_fetch_stock_day_adv(['000001','000002','000004','000007'],'2017-01-01','2017-07-31'))"
    ],
    "docstrings": [
        "\"\"\"\n获取数据的部分做原子化处理\n\n\nIO密集/网络密集型---- 异步并发\n计算密集型  ---- 批量集中处理 单线程\n\"\"\"",
        "\"\"\"\nevent = [asyncio.ensure_future(QA_fetch_stock_day_adv(\n    _code, '2017-01-01', '2017-07-31')) for _code in ['000001', '000002', '000004', '000007']]\nloop.run_until_complete(event)\nprint(data)\n\n\n    __data = DataFrame(__data, columns=[\n        'code', 'open', 'high', 'low', 'close', 'volume', 'date'])\n    __data['date'] = pd.to_datetime(__data['date'])\n    data.extend(QA_DataStruct_Stock_day(__data.query(\n        'volume>1').set_index(['date', 'code'], drop=if_drop_index)))\nloop.stop()\n\"\"\""
    ],
    "functions": [
        "worker",
        "QA_fetch_stock_day_adv"
    ],
    "classes": [
        "worker",
        "pipeline",
        "processor"
    ]
}