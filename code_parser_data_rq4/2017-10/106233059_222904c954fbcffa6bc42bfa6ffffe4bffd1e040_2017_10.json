{
    "identifiers": [
        "UnityEngine",
        "Collections",
        "RequireComponent",
        "CharacterController",
        "MonoBehaviour",
        "Vector3",
        "zero",
        "controller",
        "GetComponent",
        "CharacterController",
        "myTransform",
        "transform",
        "speed",
        "walkSpeed",
        "rayDistance",
        "controller",
        "height",
        "controller",
        "radius",
        "slideLimit",
        "controller",
        "slopeLimit",
        "jumpTimer",
        "antiBunnyHopFactor",
        "Input",
        "GetAxis",
        "Input",
        "GetAxis",
        "inputX",
        "inputY",
        "limitDiagonalSpeed",
        "grounded",
        "Physics",
        "Raycast",
        "myTransform",
        "position",
        "Vector3",
        "up",
        "hit",
        "rayDistance",
        "Vector3",
        "Angle",
        "hit",
        "normal",
        "Vector3",
        "up",
        "slideLimit",
        "sliding",
        "Physics",
        "Raycast",
        "contactPoint",
        "Vector3",
        "up",
        "Vector3",
        "up",
        "hit",
        "Vector3",
        "Angle",
        "hit",
        "normal",
        "Vector3",
        "up",
        "slideLimit",
        "sliding",
        "falling",
        "falling",
        "myTransform",
        "position",
        "y",
        "fallStartLevel",
        "fallingDamageThreshold",
        "FallingDamageAlert",
        "fallStartLevel",
        "myTransform",
        "position",
        "y",
        "toggleRun",
        "speed",
        "Input",
        "GetButton",
        "runSpeed",
        "walkSpeed",
        "sliding",
        "slideWhenOverSlopeLimit",
        "slideOnTaggedObjects",
        "hit",
        "collider",
        "tag",
        "hit",
        "normal",
        "moveDirection",
        "Vector3",
        "hitNormal",
        "x",
        "hitNormal",
        "y",
        "hitNormal",
        "z",
        "Vector3",
        "OrthoNormalize",
        "hitNormal",
        "moveDirection",
        "moveDirection",
        "slideSpeed",
        "playerControl",
        "moveDirection",
        "Vector3",
        "inputX",
        "inputModifyFactor",
        "antiBumpFactor",
        "inputY",
        "inputModifyFactor",
        "moveDirection",
        "myTransform",
        "TransformDirection",
        "moveDirection",
        "speed",
        "playerControl",
        "Input",
        "GetButton",
        "jumpTimer",
        "jumpTimer",
        "antiBunnyHopFactor",
        "moveDirection",
        "y",
        "jumpSpeed",
        "jumpTimer",
        "falling",
        "falling",
        "fallStartLevel",
        "myTransform",
        "position",
        "y",
        "airControl",
        "playerControl",
        "moveDirection",
        "x",
        "inputX",
        "speed",
        "inputModifyFactor",
        "moveDirection",
        "z",
        "inputY",
        "speed",
        "inputModifyFactor",
        "moveDirection",
        "myTransform",
        "TransformDirection",
        "moveDirection",
        "moveDirection",
        "y",
        "gravity",
        "Time",
        "deltaTime",
        "grounded",
        "controller",
        "Move",
        "moveDirection",
        "Time",
        "deltaTime",
        "CollisionFlags",
        "Below",
        "toggleRun",
        "grounded",
        "Input",
        "GetButtonDown",
        "speed",
        "speed",
        "walkSpeed",
        "runSpeed",
        "walkSpeed",
        "ControllerColliderHit",
        "hit",
        "contactPoint",
        "hit",
        "point",
        "fallDistance",
        "fallDistance"
    ],
    "literals": [
        "\"Horizontal\"",
        "\"Vertical\"",
        "\"Run\"",
        "\"Slide\"",
        "\"Jump\"",
        "\"Run\"",
        "\"Ouch! Fell \"",
        "\" units!\""
    ],
    "variables": [
        "walkSpeed",
        "runSpeed",
        "limitDiagonalSpeed",
        "toggleRun",
        "jumpSpeed",
        "gravity",
        "fallingDamageThreshold",
        "slideWhenOverSlopeLimit",
        "slideOnTaggedObjects",
        "slideSpeed",
        "airControl",
        "antiBumpFactor",
        "antiBunnyHopFactor",
        "Vector3",
        "moveDirection",
        "grounded",
        "CharacterController",
        "controller",
        "Transform",
        "myTransform",
        "speed",
        "RaycastHit",
        "hit",
        "fallStartLevel",
        "falling",
        "slideLimit",
        "rayDistance",
        "Vector3",
        "contactPoint",
        "playerControl",
        "jumpTimer",
        "inputX",
        "inputY",
        "inputModifyFactor",
        "sliding",
        "Vector3",
        "hitNormal"
    ],
    "comments": [
        "If true, diagonal speed (when strafing + moving forward or back) can't exceed normal move speed; otherwise it's about 1.4 times faster",
        "If checked, the run key toggles between running and walking. Otherwise player runs if the key is held down and walks otherwise",
        "There must be a button set up in the Input Manager called \"Run\"",
        "Units that player can fall before a falling damage function is run. To disable, type \"infinity\" in the inspector",
        "If the player ends up on a slope which is at least the Slope Limit as set on the character controller, then he will slide down",
        "If checked and the player is on an object tagged \"Slide\", he will slide down it regardless of the slope limit",
        "If checked, then the player can change direction while in the air",
        "Small amounts of this results in bumping when walking down slopes, but large amounts results in falling too fast",
        "Player must be grounded for at least this many physics frames before being able to jump again; set to 0 to allow bunny hopping",
        "If both horizontal and vertical are used simultaneously, limit speed (if allowed), so the total doesn't exceed normal move speed",
        "See if surface immediately below should be slid down. We use this normally rather than a ControllerColliderHit point,",
        "because that interferes with step climbing amongst other annoyances",
        "However, just raycasting straight down from the center can fail when on steep slopes",
        "So if the above raycast didn't catch anything, raycast down from the stored ControllerColliderHit point instead",
        "If we were falling, and we fell a vertical distance greater than the threshold, run a falling damage routine",
        "If running isn't on a toggle, then use the appropriate speed depending on whether the run button is down",
        "If sliding (and it's allowed), or if we're on an object tagged \"Slide\", get a vector pointing down the slope we're on",
        "Otherwise recalculate moveDirection directly from axes, adding a bit of -y to avoid bumping down inclines",
        "Jump! But only if the jump button has been released and player has been grounded for a given number of frames",
        "If we stepped over a cliff or something, set the height at which we started falling",
        "If air control is allowed, check movement but don't touch the y component",
        "Apply gravity",
        "Move the controller, and set grounded true or false depending on whether we're standing on something",
        "If the run button is set to toggle, then switch between walk/run speed. (We use Update for this...",
        "FixedUpdate is a poor place to use GetButtonDown, since it doesn't necessarily run every frame and can miss the event)",
        "Store point that we're in contact with for use in FixedUpdate if needed",
        "If falling damage occured, this is the place to do something about it. You can make the player",
        "have hitpoints and remove some of them based on the distance fallen, add sound effects, etc."
    ],
    "docstrings": [],
    "functions": [
        "Start",
        "FixedUpdate",
        "Update",
        "OnControllerColliderHit",
        "FallingDamageAlert"
    ],
    "classes": [
        "FPSWalkerEnhanced"
    ]
}