{
    "identifiers": [
        "dimension",
        "dimension",
        "dimension",
        "len",
        "coordinates",
        "i",
        "coordinates",
        "i",
        "i",
        "value",
        "coordinates",
        "value",
        "other",
        "len",
        "coordinates",
        "len",
        "other",
        "len",
        "coordinates",
        "j",
        "len",
        "other",
        "coordinates",
        "j",
        "other",
        "j",
        "new_vector",
        "ValueError",
        "other",
        "coordinates",
        "other",
        "other",
        "coordinates",
        "other",
        "coordinates"
    ],
    "literals": [
        "\"Dimension must match\"",
        "'< '",
        "'>'"
    ],
    "variables": [
        "coordinates",
        "i",
        "new_vector",
        "new_vector",
        "j"
    ],
    "comments": [
        "elif type(dimension) is list:",
        "# \tself.coordinates = dimension",
        "else:",
        "self.coordinates=list(dimension)"
    ],
    "docstrings": [
        "\"\"\" Multidimensional vector class \n AND POLYMORPHISM i.e many forms\nv = Vector(5)      \t\t\t# construction a vector of dimension 5\nv[1] = 3\t\t\t\t\t# <0,23,0,0,0> based on use of __setitem__\nprint(v[4])\t\t\t\t\t# through __getitem__\nu = v + v \t\t\t\t\t# through __add__\nTO Do :-> __mul__ method\n\"\"\"",
        "\"\"\"Represent a multidimensional vector in space\"\"\"",
        "\"\"\"Creates a specified dimension vetor space of 0 element\"\"\"",
        "\"\"\"Returns dimension of vector\"\"\"",
        "\"\"\"Return value of i(th) coordinate\"\"\"",
        "\"\"\"Set v[i] = value\"\"\"",
        "\"\"\" adding 2 vectors and returning a new vector\"\"\"",
        "\"\"\" Sythetic Sugar of ==\"\"\"",
        "\"\"\" Synthetic Sugar of != \"\"\"",
        "\"\"\" sTRING Representation of vector\"\"\""
    ],
    "functions": [
        "__len__",
        "__getitem__",
        "__setitem__",
        "__add__",
        "__eq__",
        "__ne__",
        "__str__"
    ],
    "classes": []
}