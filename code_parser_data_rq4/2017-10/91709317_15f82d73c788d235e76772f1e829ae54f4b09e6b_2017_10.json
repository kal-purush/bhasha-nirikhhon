{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "subprocess",
        "check_output",
        "check_output",
        "decode",
        "sys",
        "gc",
        "gc",
        "enable",
        "collections",
        "xgboost",
        "xgb",
        "pandas",
        "pd",
        "numpy",
        "np",
        "sklearn",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "feature",
        "feature",
        "transactions_features",
        "feature",
        "open",
        "fd",
        "fd",
        "readline",
        "line",
        "fd",
        "line",
        "find",
        "line",
        "pos",
        "line",
        "pos",
        "split",
        "value",
        "value",
        "splits",
        "value",
        "index",
        "value",
        "info",
        "transactions_features",
        "index",
        "msid",
        "infos",
        "value",
        "value",
        "info",
        "infos",
        "msid",
        "insert",
        "infos",
        "msid",
        "index",
        "infos",
        "msid",
        "index",
        "append",
        "info",
        "index",
        "count",
        "count",
        "count",
        "count",
        "pd",
        "DataFrame",
        "infos",
        "keys",
        "infos",
        "key",
        "key",
        "infos",
        "keys",
        "index",
        "feature",
        "trans_features",
        "collections",
        "Counter",
        "infos",
        "key",
        "index",
        "most_common",
        "key",
        "infos",
        "keys",
        "df_transactions",
        "open",
        "fd",
        "fd",
        "readline",
        "line",
        "fd",
        "line",
        "find",
        "line",
        "pos",
        "line",
        "pos",
        "split",
        "value",
        "value",
        "splits",
        "info",
        "append",
        "splits",
        "msid",
        "infos",
        "info",
        "infos",
        "msid",
        "index",
        "infos",
        "msid",
        "index",
        "info",
        "index",
        "count",
        "count",
        "count",
        "count",
        "pd",
        "DataFrame",
        "infos",
        "keys",
        "infos",
        "key",
        "key",
        "infos",
        "keys",
        "index",
        "feature",
        "userlog_features",
        "feature",
        "infos",
        "key",
        "index",
        "key",
        "infos",
        "keys",
        "infos",
        "key",
        "index",
        "key",
        "infos",
        "keys",
        "df_userlog",
        "make_transactions_features",
        "make_userlog_features",
        "pd",
        "merge",
        "train",
        "transactions",
        "how",
        "on",
        "pd",
        "merge",
        "test",
        "transactions",
        "how",
        "on",
        "pd",
        "merge",
        "train",
        "user_logs",
        "how",
        "on",
        "pd",
        "merge",
        "test",
        "user_logs",
        "how",
        "on",
        "pd",
        "read_csv",
        "pd",
        "merge",
        "train",
        "members",
        "how",
        "on",
        "pd",
        "merge",
        "test",
        "members",
        "how",
        "on",
        "train",
        "gender",
        "test",
        "gender",
        "train",
        "fillna",
        "test",
        "fillna",
        "c",
        "c",
        "train",
        "columns",
        "c",
        "train",
        "head",
        "preds",
        "dtrain",
        "dtrain",
        "get_label",
        "sklearn",
        "metrics",
        "log_loss",
        "labels",
        "preds",
        "i",
        "fold",
        "i",
        "sklearn",
        "model_selection",
        "train_test_split",
        "train",
        "cols",
        "train",
        "test_size",
        "random_state",
        "i",
        "xgb",
        "DMatrix",
        "x1",
        "y1",
        "xgb",
        "DMatrix",
        "x2",
        "y2",
        "xgb",
        "train",
        "xgb",
        "DMatrix",
        "x1",
        "y1",
        "watchlist",
        "feval",
        "xgb_score",
        "maximize",
        "verbose_eval",
        "early_stopping_rounds",
        "i",
        "pred",
        "model",
        "predict",
        "xgb",
        "DMatrix",
        "test",
        "cols",
        "ntree_limit",
        "model",
        "best_ntree_limit",
        "model",
        "predict",
        "xgb",
        "DMatrix",
        "test",
        "cols",
        "ntree_limit",
        "model",
        "best_ntree_limit",
        "pred",
        "fold",
        "pred",
        "clip",
        "test",
        "to_csv",
        "index"
    ],
    "literals": [
        "\"ls\"",
        "\"../input\"",
        "\"utf8\"",
        "'../input/train.csv'",
        "'../input/sample_submission_zero.csv'",
        "'msno'",
        "'payment_method_id'",
        "'payment_plan_days'",
        "'plan_list_price'",
        "'actual_amount_paid'",
        "'is_auto_renew'",
        "'_'",
        "'_'",
        "'is_cancel'",
        "'_'",
        "'loading...'",
        "'../input/transactions.csv'",
        "','",
        "','",
        "'_'",
        "'processed: %d'",
        "'done: %d'",
        "'msno'",
        "'trans_count'",
        "'msno'",
        "'num_25'",
        "'num_50'",
        "'num_75'",
        "'num_985'",
        "'num_100'",
        "'num_unq'",
        "'total_secs'",
        "'loading...'",
        "'../input/user_logs.csv'",
        "','",
        "','",
        "'processed: %d'",
        "'done: %d'",
        "'msno'",
        "'date_count'",
        "'total_secs'",
        "'left'",
        "'msno'",
        "'left'",
        "'msno'",
        "'left'",
        "'msno'",
        "'left'",
        "'msno'",
        "'../input/members.csv'",
        "'left'",
        "'msno'",
        "'left'",
        "'msno'",
        "'male'",
        "'female'",
        "'gender'",
        "'gender'",
        "'gender'",
        "'gender'",
        "'is_churn'",
        "'msno'",
        "'log_loss'",
        "'eta'",
        "'max_depth'",
        "'objective'",
        "'binary:logistic'",
        "'eval_metric'",
        "'logloss'",
        "'seed'",
        "'silent'",
        "'is_churn'",
        "'train'",
        "'valid'",
        "'is_churn'",
        "'msno'",
        "'is_churn'",
        "'submission3.csv'"
    ],
    "variables": [
        "train",
        "test",
        "transactions_features",
        "trans_features",
        "infos",
        "count",
        "pos",
        "msid",
        "splits",
        "info",
        "info",
        "infos",
        "msid",
        "df_transactions",
        "df_transactions",
        "df_transactions",
        "df_transactions",
        "feature",
        "userlog_features",
        "infos",
        "count",
        "pos",
        "msid",
        "splits",
        "info",
        "info",
        "infos",
        "msid",
        "df_userlog",
        "df_userlog",
        "df_userlog",
        "df_userlog",
        "feature",
        "df_userlog",
        "feature",
        "transactions",
        "user_logs",
        "train",
        "test",
        "train",
        "test",
        "members",
        "train",
        "test",
        "gender",
        "train",
        "test",
        "train",
        "test",
        "cols",
        "labels",
        "fold",
        "x1",
        "x2",
        "y1",
        "y2",
        "watchlist",
        "model",
        "pred",
        "test"
    ],
    "comments": [
        "Python 3 environment comes with many helpful analytics libraries installed",
        "It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python",
        "For example, here's several helpful packages to load in",
        "linear algebra",
        "data processing, CSV file I/O (e.g. pd.read_csv)",
        "Input data files are available in the \"../input/\" directory.",
        "For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory",
        "Any results you write to the current directory are saved as output.",
        "_, num_25, num_50, num_75, num_985, num_100, num_unq, total_secs = [int(float(value)) for value in line[pos + 1:-1].split(',')]",
        "if len(info) != 8:",
        "print('not expect line: %s'%line[:-1])",
        "continue",
        "use 0.002",
        "use 1500"
    ],
    "docstrings": [],
    "functions": [
        "make_transactions_features",
        "make_userlog_features",
        "xgb_score"
    ],
    "classes": []
}