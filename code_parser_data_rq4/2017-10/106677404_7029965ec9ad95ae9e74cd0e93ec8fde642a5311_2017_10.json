{
    "identifiers": [
        "IAudioTrack",
        "Injectable",
        "NgZone",
        "Injectable",
        "src",
        "NgZone",
        "Media",
        "err",
        "err",
        "status",
        "status",
        "Media",
        "Media",
        "Media",
        "Media",
        "setInterval",
        "duration",
        "position",
        "position",
        "position",
        "e",
        "e",
        "clearInterval",
        "v",
        "v",
        "time",
        "time"
    ],
    "literals": [
        "'./ionic-audio-interfaces'",
        "'@angular/core'",
        "string",
        "'cordova'",
        "'Media'",
        "'Cordova Media is not available'",
        "'Finished playback'",
        "Audio error => track ${this.src}",
        "Loaded track ${this.src}",
        "Playing track ${this.src}",
        "\"Error getting position\"",
        "Loading track ${this.src}",
        "Pausing track ${this.src}",
        "Released track ${this.src}",
        "'cordova media do not support change speed!!'"
    ],
    "variables": [
        "Media",
        "duration"
    ],
    "comments": [
        "TODO add parameter to control whether to release audio on stop or finished",
        "public members",
        "calls Media onSuccess callback",
        "Cordova Media reports duration and progress as seconds, so we need to multiply by 1000"
    ],
    "docstrings": [
        "* Cordova Media audio track\n * \n * @export\n * @class CordovaAudioTrack\n * @constructor\n * @implements {IAudioTrack}",
        "* Gets the track id\n * \n * @property id\n * @type {number}",
        "* Sets the track id\n * \n * @property id",
        "* Gets the track duration, or -1 if it cannot be determined\n * \n * @property duration\n * @readonly\n * @type {number}",
        "* Gets current track time (progress)\n * \n * @property progress\n * @readonly\n * @type {number}",
        "* Gets current track progress as a percentage\n * \n * @property completed\n * @readonly\n * @type {number}",
        "* Gets any errors logged by HTML5 audio\n *\n * @property error \n * @readonly\n * @type {MediaError}",
        "* Gets a boolean value indicating whether the current source can be played\n * \n * @property canPlay\n * @readonly\n * @type {boolean}",
        "* Gets a boolean value indicating whether the track is in loading state\n * \n * @property isLoading\n * @readonly\n * @type {boolean}",
        "* Gets a boolean value indicating whether the track has finished loading\n *\n * @property hadLoaded \n * @readonly\n * @type {boolean}",
        "* Gets current play rate (speed)\n   * \n   * @property speed\n   * @readonly\n   * @type {number}",
        "* Plays current track\n * \n * @method play",
        "* Pauses current track\n *\n * @method pause",
        "* Stops current track and releases audio\n *\n * @method stop",
        "* Seeks to a new position within the track\n *\n * @method seekTo \n * @param {number} time the new position (milliseconds) to seek to",
        "* Releases audio resources\n   * \n   * @method destroy",
        "* Releases audio resources\n   * \n   * @method destroy"
    ],
    "functions": [
        "createAudio",
        "startTimer",
        "stopTimer",
        "id",
        "id",
        "duration",
        "progress",
        "completed",
        "error",
        "canPlay",
        "isLoading",
        "hasLoaded",
        "speed",
        "play",
        "pause",
        "stop",
        "seekTo",
        "destroy",
        "changespeed"
    ],
    "classes": [
        "CordovaAudioTrack"
    ]
}