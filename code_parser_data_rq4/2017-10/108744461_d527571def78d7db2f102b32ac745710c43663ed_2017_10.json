{
    "identifiers": [
        "random",
        "sorts",
        "append",
        "bubble_sort",
        "sorts",
        "append",
        "merge_sort",
        "sorts",
        "append",
        "selection_sort",
        "sorts",
        "append",
        "shell_sort",
        "sorts",
        "append",
        "bogo_sort",
        "sorts",
        "append",
        "gnome_sort",
        "sorts",
        "append",
        "insertion_sort",
        "sorts",
        "append",
        "heap_sort",
        "sorts",
        "append",
        "quick_sort",
        "random",
        "choice",
        "sorts",
        "items",
        "i",
        "len",
        "items",
        "j",
        "len",
        "items",
        "i",
        "items",
        "j",
        "items",
        "j",
        "items",
        "j",
        "items",
        "j",
        "items",
        "j",
        "items",
        "j",
        "origin_list",
        "left_index",
        "right_index",
        "origin_list",
        "left_index",
        "right_index",
        "A",
        "start",
        "mid",
        "end",
        "get_partial_list",
        "A",
        "start",
        "mid",
        "get_partial_list",
        "A",
        "mid",
        "end",
        "start",
        "l",
        "k",
        "end",
        "j",
        "len",
        "R",
        "i",
        "len",
        "L",
        "L",
        "i",
        "R",
        "j",
        "L",
        "i",
        "i",
        "R",
        "j",
        "j",
        "A",
        "p",
        "r",
        "r",
        "len",
        "A",
        "r",
        "p",
        "p",
        "r",
        "merge_sort",
        "A",
        "p",
        "mid",
        "merge_sort",
        "A",
        "mid",
        "r",
        "MERGE",
        "A",
        "p",
        "mid",
        "r",
        "collection",
        "len",
        "collection",
        "i",
        "length",
        "i",
        "k",
        "i",
        "length",
        "collection",
        "k",
        "collection",
        "least",
        "k",
        "collection",
        "least",
        "collection",
        "i",
        "collection",
        "i",
        "collection",
        "least",
        "collection",
        "gap",
        "gaps",
        "gap",
        "i",
        "len",
        "collection",
        "collection",
        "i",
        "i",
        "j",
        "gap",
        "collection",
        "j",
        "gap",
        "temp",
        "collection",
        "j",
        "gap",
        "j",
        "gap",
        "temp",
        "i",
        "collection",
        "len",
        "collection",
        "i",
        "len",
        "collection",
        "collection",
        "i",
        "collection",
        "i",
        "collection",
        "is_sorted",
        "collection",
        "random",
        "shuffle",
        "collection",
        "collection",
        "collection",
        "len",
        "collection",
        "collection",
        "i",
        "len",
        "collection",
        "collection",
        "i",
        "collection",
        "i",
        "i",
        "collection",
        "i",
        "collection",
        "i",
        "collection",
        "i",
        "collection",
        "i",
        "i",
        "i",
        "collection",
        "index",
        "len",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "index",
        "index",
        "collection",
        "index",
        "heap_size",
        "index",
        "index",
        "index",
        "left_index",
        "heap_size",
        "collection",
        "left_index",
        "collection",
        "largest",
        "left_index",
        "right_index",
        "heap_size",
        "collection",
        "right_index",
        "collection",
        "largest",
        "right_index",
        "largest",
        "index",
        "collection",
        "largest",
        "collection",
        "index",
        "collection",
        "index",
        "collection",
        "largest",
        "heapify",
        "collection",
        "largest",
        "heap_size",
        "collection",
        "len",
        "collection",
        "i",
        "n",
        "heapify",
        "collection",
        "i",
        "n",
        "i",
        "n",
        "collection",
        "collection",
        "i",
        "collection",
        "i",
        "collection",
        "heapify",
        "collection",
        "i",
        "array",
        "start",
        "end",
        "idx_pivot",
        "start",
        "idx_pivot",
        "end",
        "ValueError",
        "array",
        "start",
        "array",
        "idx_pivot",
        "array",
        "idx_pivot",
        "array",
        "start",
        "array",
        "start",
        "start",
        "start",
        "j",
        "end",
        "array",
        "j",
        "pivot",
        "array",
        "j",
        "array",
        "i",
        "array",
        "i",
        "array",
        "j",
        "i",
        "j",
        "array",
        "start",
        "array",
        "i",
        "array",
        "i",
        "array",
        "start",
        "i",
        "array",
        "start",
        "end",
        "depth",
        "end",
        "len",
        "array",
        "end",
        "start",
        "random",
        "randint",
        "start",
        "end",
        "sub_partition",
        "array",
        "start",
        "end",
        "idx_pivot",
        "quick_sort",
        "array",
        "start",
        "i",
        "depth",
        "quick_sort",
        "array",
        "i",
        "end",
        "depth"
    ],
    "literals": [
        "'idx pivot must be between start and end'"
    ],
    "variables": [
        "sorts",
        "L",
        "R",
        "i",
        "j",
        "k",
        "A",
        "l",
        "i",
        "A",
        "l",
        "j",
        "r",
        "mid",
        "length",
        "least",
        "least",
        "gaps",
        "i",
        "temp",
        "j",
        "collection",
        "j",
        "collection",
        "j",
        "i",
        "i",
        "largest",
        "left_index",
        "right_index",
        "largest",
        "largest",
        "n",
        "pivot",
        "i",
        "j",
        "end",
        "idx_pivot",
        "i"
    ],
    "comments": [
        "/usr/bin/python3",
        "Swap!",
        "on every item write",
        "New indexing function that includes the right index.",
        "Added",
        "changed",
        "changed",
        "changed",
        "Marcin Ciura's gap sequence"
    ],
    "docstrings": [
        "\"\"\" Implementation of bubble sort \"\"\"",
        "\"\"\"\n    Pure implementation of the gnome sort algorithm in Python.\n    \"\"\"",
        "\"\"\"Pure implementation of the insertion sort algorithm in Python\n    :param collection: some mutable ordered collection with heterogeneous\n    comparable items inside\n    :return: the same collection ordered by ascending\n    Examples:\n    >>> insertion_sort([0, 5, 3, 2, 2])\n    [0, 2, 2, 3, 5]\n    >>> insertion_sort([])\n    []\n    >>> insertion_sort([-2, -5, -45])\n    [-45, -5, -2]\n    \"\"\""
    ],
    "functions": [
        "random_sort",
        "bubble_sort",
        "get_partial_list",
        "MERGE",
        "merge_sort",
        "selection_sort",
        "shell_sort",
        "is_sorted",
        "bogo_sort",
        "gnome_sort",
        "insertion_sort",
        "heapify",
        "heap_sort",
        "sub_partition",
        "quick_sort"
    ],
    "classes": []
}