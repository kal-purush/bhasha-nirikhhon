{
    "identifiers": [
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "org",
        "neo4j",
        "driver",
        "v1",
        "AuthToken",
        "org",
        "neo4j",
        "driver",
        "v1",
        "AuthTokens",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "java",
        "util",
        "Properties",
        "java",
        "util",
        "java",
        "util",
        "Predicate",
        "java",
        "util",
        "Supplier",
        "java",
        "util",
        "Arrays",
        "asList",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "AUTHENTICATION_TYPE",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "ENCODED_TICKET",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "PASSWORD",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "REALM",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "SCHEME",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "BoltProperties",
        "USERNAME",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "PropertiesReader",
        "readNonNullableProperty",
        "org",
        "liquigraph",
        "trinity",
        "bolt",
        "PropertiesReader",
        "readNullableProperty",
        "LOGGER",
        "LoggerFactory",
        "getLogger",
        "CUSTOM_AUTH_NON_EXTRA_PARAMETERS",
        "asList",
        "AUTHENTICATION_TYPE",
        "USERNAME",
        "PASSWORD",
        "REALM",
        "SCHEME",
        "configuration",
        "tokenCreators",
        "configuration",
        "configuration",
        "configuration",
        "tokenCreators",
        "initTokenCreators",
        "Override",
        "authenticationType",
        "readNullableProperty",
        "configuration",
        "AUTHENTICATION_TYPE",
        "authenticationType",
        "LOGGER",
        "trace",
        "AuthTokens",
        "none",
        "tokenCreators",
        "getOrDefault",
        "authenticationType",
        "toLowerCase",
        "Locale",
        "ENGLISH",
        "throwUnsupported",
        "authenticationType",
        "apply",
        "configuration",
        "authenticationType",
        "LOGGER",
        "error",
        "authenticationType",
        "ignored",
        "format",
        "authenticationType",
        "tokenCreators",
        "ceil",
        "tokenCreators",
        "put",
        "ignored",
        "AuthTokens",
        "none",
        "tokenCreators",
        "put",
        "basicAuthToken",
        "tokenCreators",
        "put",
        "kerberosAuthToken",
        "tokenCreators",
        "put",
        "customAuthToken",
        "tokenCreators",
        "properties",
        "username",
        "readNonNullableProperty",
        "properties",
        "USERNAME",
        "password",
        "readNonNullableProperty",
        "properties",
        "PASSWORD",
        "realm",
        "readNullableProperty",
        "properties",
        "REALM",
        "realm",
        "LOGGER",
        "debug",
        "AuthTokens",
        "basic",
        "username",
        "password",
        "LOGGER",
        "debug",
        "AuthTokens",
        "basic",
        "username",
        "password",
        "realm",
        "properties",
        "LOGGER",
        "debug",
        "AuthTokens",
        "kerberos",
        "readNonNullableProperty",
        "properties",
        "ENCODED_TICKET",
        "properties",
        "LOGGER",
        "debug",
        "username",
        "readNonNullableProperty",
        "properties",
        "USERNAME",
        "password",
        "readNonNullableProperty",
        "properties",
        "PASSWORD",
        "realm",
        "readNonNullableProperty",
        "properties",
        "REALM",
        "scheme",
        "readNonNullableProperty",
        "properties",
        "SCHEME",
        "extraParameters",
        "customExtraParameters",
        "properties",
        "extraParameters",
        "isEmpty",
        "AuthTokens",
        "custom",
        "username",
        "password",
        "realm",
        "scheme",
        "AuthTokens",
        "custom",
        "username",
        "password",
        "realm",
        "scheme",
        "extraParameters",
        "properties",
        "contains",
        "CUSTOM_AUTH_NON_EXTRA_PARAMETERS",
        "contains",
        "result",
        "properties",
        "stringPropertyNames",
        "stream",
        "contains",
        "negate",
        "forEach",
        "k",
        "result",
        "put",
        "k",
        "properties",
        "getProperty",
        "k",
        "result"
    ],
    "literals": [
        "\"Targetting Neo4j with disabled authentication\"",
        "\"Unsupported authentication type: {}\"",
        "\"Unsupported authentication type: %s. Only 'none','basic','kerberos','custom' are supported\"",
        "\"none\"",
        "\"basic\"",
        "\"kerberos\"",
        "\"custom\"",
        "\"Targetting Neo4j with basic authentication (without realm)\"",
        "\"Targetting Neo4j with basic authentication (with realm)\"",
        "\"Targetting Neo4j with Kerberos authentication\"",
        "\"Targetting Neo4j with custom authentication\""
    ],
    "variables": [
        "configuration",
        "tokenCreators"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "BoltAuthTokenSupplier",
        "AuthToken",
        "get",
        "throwUnsupported",
        "initTokenCreators",
        "AuthToken",
        "basicAuthToken",
        "AuthToken",
        "kerberosAuthToken",
        "AuthToken",
        "customAuthToken",
        "customExtraParameters"
    ],
    "classes": [
        "BoltAuthTokenSupplier"
    ]
}