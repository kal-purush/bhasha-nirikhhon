{
    "identifiers": [
        "require",
        "require",
        "Pool",
        "config",
        "require",
        "Pg",
        "pool",
        "require",
        "require",
        "require",
        "require",
        "Koa",
        "app",
        "bodyParser",
        "app",
        "errorMiddleware",
        "app",
        "router",
        "app",
        "router",
        "app",
        "err",
        "ctx",
        "err",
        "ctx",
        "process",
        "err",
        "err",
        "app",
        "config",
        "config"
    ],
    "literals": [
        "'./config'",
        "'pg-pool'",
        "'./innotrio/db/pg'",
        "'koa'",
        "'koa-bodyparser'",
        "'./app/routes'",
        "'./innotrio/koa/error_middleware'",
        "'error'",
        "'REQUEST_ERROR'",
        "'uncaughtException'",
        "'PROCESS_EXCEPTION'",
        "'Server listening on port '"
    ],
    "variables": [
        "config",
        "Pool",
        "pool",
        "Pg",
        "Koa",
        "bodyParser",
        "router",
        "errorMiddleware",
        "app"
    ],
    "comments": [
        "непереведенные старые части",
        "//CORS middleware\n var allowCrossDomain = function (req, res, next) {\n res.header('Access-Control-Allow-Origin', '*');\n res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n next();\n };\n\n app.use(express.compress());\n app.use(express.favicon());\n if (env === 'development') {\n app.use(express.logger('dev'));\n }\n app.use(allowCrossDomain);\n app.disable('etag');\n\n router(app, {\n root: configs.url,\n controllersPath: 'application/controllers',\n authMiddleware: require('./application/middlewares/authentication')\n }).route();\n\n\n // Задачи cron\n var cronTasks = new (require('./cron_tasks'))();\n if (env != 'development') {\n cronTasks.init();\n }\n\n //Бот\n var TelegramBot = require('node-telegram-bot-api'),\n BotRouter = require('./application/bot/bot_router').BotRouter;\n\n var botApi = new TelegramBot(configs.botToken, {polling: true});\n\n var bot = new BotRouter(configs, botApi);\n bot.init();\n\n GLOBAL.bot = bot;"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}