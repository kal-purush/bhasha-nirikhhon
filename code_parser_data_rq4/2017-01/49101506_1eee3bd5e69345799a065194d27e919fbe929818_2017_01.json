{
    "identifiers": [
        "_",
        "SyncTasks",
        "NoSqlProvider",
        "NoSqlProviderUtils",
        "SyncTasks",
        "_",
        "_",
        "schema",
        "NoSqlProvider",
        "_",
        "schema",
        "store",
        "store",
        "store",
        "storeNames",
        "exclusive",
        "SyncTasks",
        "SyncTasks",
        "pendingTrans",
        "pendingTrans",
        "storeNames",
        "exclusive",
        "exclusive",
        "_",
        "storeNames",
        "storeName",
        "storeName",
        "storeName",
        "storeName",
        "_",
        "storeNames",
        "storeName",
        "storeName",
        "storeName",
        "storeName",
        "SyncTasks",
        "i",
        "i",
        "_",
        "trans",
        "storeName",
        "storeName",
        "trans",
        "storeName",
        "i",
        "i",
        "trans",
        "_",
        "trans",
        "storeName",
        "storeName",
        "_",
        "trans",
        "storeName",
        "storeName",
        "toResolve",
        "trans",
        "_",
        "toResolve",
        "defer",
        "defer",
        "TransactionLockHelper"
    ],
    "literals": [
        "'assert'",
        "'lodash'",
        "'synctasks'",
        "'./NoSqlProvider'",
        "'./NoSqlProviderUtils'",
        "string",
        "string",
        "string",
        "'Missing expected exclusive lock for store: '",
        "'Missing expected readonly lock for store: '"
    ],
    "variables": [
        "pendingTrans",
        "toResolve",
        "i",
        "trans"
    ],
    "comments": [],
    "docstrings": [
        "* TransactionLockHelper.ts\n * Author: David de Regt\n * Copyright: Microsoft 2017\n *\n * Several of the different providers need various types of help enforcing exclusive/readonly transactions.  This helper keeps\n * store-specific lock info and releases transactions at the right time, when the underlying provider can't handle it."
    ],
    "functions": [
        "checkOpenTransaction",
        "transactionComplete",
        "_checkNextTransactions"
    ],
    "classes": [
        "TransactionLockHelper"
    ]
}