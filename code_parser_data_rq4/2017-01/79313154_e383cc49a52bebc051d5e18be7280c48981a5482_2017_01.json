{
    "identifiers": [
        "nltk",
        "random",
        "pyttsx",
        "nltk",
        "corpus",
        "movie_reviews",
        "sklearn",
        "naive_bayes",
        "MultinomialNB",
        "BernoulliNB",
        "nltk",
        "classify",
        "scikitlearn",
        "SklearnClassifier",
        "movie_reviews",
        "words",
        "fileid",
        "category",
        "category",
        "movie_reviews",
        "categories",
        "fileid",
        "movie_reviews",
        "fileids",
        "category",
        "random",
        "shuffle",
        "documents",
        "w",
        "movie_reviews",
        "words",
        "all_words",
        "append",
        "w",
        "lower",
        "nltk",
        "FreqDist",
        "all_words",
        "all_words",
        "keys",
        "w",
        "word_features",
        "w",
        "words",
        "features",
        "find_features",
        "rev",
        "category",
        "rev",
        "category",
        "documents",
        "featuresets",
        "featuresets",
        "nltk",
        "NaiveBayesClassifier",
        "train",
        "training_set",
        "SklearnClassifier",
        "MultinomialNB",
        "MNC",
        "train",
        "training_set",
        "nltk",
        "classify",
        "accuracy",
        "classifier",
        "test",
        "classifier",
        "show_most_informative_features",
        "nltk",
        "classify",
        "accuracy",
        "MNC",
        "test"
    ],
    "literals": [
        "\"Accc:\"",
        "\"Accc:\""
    ],
    "variables": [
        "documents",
        "all_words",
        "all_words",
        "word_features",
        "words",
        "features",
        "features",
        "w",
        "featuresets",
        "training_set",
        "test",
        "classifier",
        "MNC"
    ],
    "comments": [
        "print((find_features(movie_reviews.words('neg/cv000_29416.txt'))))",
        "featuresets=[]",
        "print featuresets[:300]"
    ],
    "docstrings": [
        "'''p=pyttsx.init()\nx=p.say(documents)\np.runAndWait()'''",
        "'''for sev,category in documents :\n   featuresets.append(find_features(sev),category)\n   print sev[:1]\n   #featuresets.append(category)\n '''"
    ],
    "functions": [
        "find_features"
    ],
    "classes": []
}