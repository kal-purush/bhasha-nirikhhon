{
    "identifiers": [
        "combate",
        "tropasenTorre",
        "plomosporTorre",
        "iterador",
        "reporte",
        "ataca",
        "guarnecido",
        "edificio",
        "p",
        "estado",
        "edificio",
        "getEstado",
        "ntropas",
        "reporte",
        "getnTropas",
        "torres",
        "poderA",
        "ntropas",
        "poderTorres",
        "ntropas",
        "defensaA",
        "ntropas",
        "defensaTorres",
        "ntropas",
        "poderG",
        "guarnecido",
        "getPoderGuarnicion",
        "estado",
        "p",
        "defensaG",
        "guarnecido",
        "getDefensaGuarnicion",
        "estado",
        "p",
        "ataca",
        "isTorres",
        "formacionTorres",
        "reporte",
        "ataca",
        "torres",
        "edificio",
        "getNplomos",
        "poderTorres",
        "torres",
        "getPoderGuarnicion",
        "estado",
        "p",
        "defensaTorres",
        "torres",
        "getDefensaGuarnicion",
        "estado",
        "p",
        "edificio",
        "getPortonAbierto",
        "edificio",
        "getAsaltable",
        "poderA",
        "ataca",
        "getPoderAsalto",
        "p",
        "defensaA",
        "ataca",
        "getDefensaAsalto",
        "p",
        "poderA",
        "ntropas",
        "poderA",
        "ntropas",
        "poderTorres",
        "ntropas",
        "auxA",
        "poderA",
        "ntropas",
        "poderA",
        "ntropas",
        "poderG",
        "ntropas",
        "auxD",
        "poderG",
        "ntropas",
        "poderA",
        "ntropas",
        "poderG",
        "ntropas",
        "poderA",
        "ntropas",
        "defensaG",
        "ntropas",
        "reporte",
        "setvictoriaatacante",
        "auxD",
        "reporte",
        "setdefensoraniquilado",
        "i",
        "i",
        "ntropas",
        "i",
        "poderA",
        "i",
        "reporte",
        "setbajasatacante",
        "redondea",
        "auxD",
        "poderA",
        "i",
        "defensaA",
        "i",
        "i",
        "poderTorres",
        "i",
        "reporte",
        "setbajasatacante",
        "redondea",
        "auxD",
        "poderTorres",
        "i",
        "defensaTorres",
        "i",
        "i",
        "reporte",
        "setbajasdefensor",
        "guarnecido",
        "get",
        "i",
        "getcantidad",
        "i",
        "reporte",
        "setvictoriadefensor",
        "auxA",
        "reporte",
        "setatacanteaniquilado",
        "i",
        "i",
        "ntropas",
        "i",
        "poderA",
        "i",
        "reporte",
        "setbajasatacante",
        "ataca",
        "get",
        "i",
        "getcantidad",
        "i",
        "poderTorres",
        "i",
        "reporte",
        "setbajasatacante",
        "ataca",
        "get",
        "i",
        "getcantidad",
        "i",
        "poderG",
        "i",
        "reporte",
        "setbajasdefensor",
        "redondea",
        "auxA",
        "poderG",
        "i",
        "defensaG",
        "i",
        "i",
        "auxA",
        "reporte",
        "sethuyeatacante",
        "auxA",
        "reporte",
        "setmoveratacante",
        "rba",
        "rbd",
        "poderA",
        "ntropas",
        "poderA",
        "ntropas",
        "rba",
        "rbd",
        "reporte",
        "isVictoriaatacante",
        "rba",
        "rbd",
        "rba",
        "rbd",
        "i",
        "i",
        "ntropas",
        "i",
        "poderA",
        "i",
        "reporte",
        "setbajasatacante",
        "redondea",
        "auxD",
        "rba",
        "poderA",
        "i",
        "defensaA",
        "i",
        "i",
        "poderTorres",
        "i",
        "reporte",
        "setbajasatacante",
        "redondea",
        "auxD",
        "rba",
        "poderTorres",
        "i",
        "defensaTorres",
        "i",
        "i",
        "poderG",
        "i",
        "reporte",
        "setbajasdefensor",
        "redondea",
        "auxA",
        "rbd",
        "poderG",
        "i",
        "defensaG",
        "i",
        "i",
        "reporte",
        "ataca",
        "torres",
        "nplomos",
        "pbajas",
        "nplomos",
        "nmax",
        "min",
        "nplomos",
        "plomosporTorre",
        "ataca",
        "getNtorres",
        "reporte",
        "setdanoTorres",
        "redondea",
        "random",
        "ataca",
        "getNtorres",
        "random",
        "nmax",
        "pbajas",
        "random",
        "nmax",
        "ataca",
        "getNtorres",
        "reporte",
        "setplomosGastados",
        "nmax",
        "nmax",
        "tropasenTorre",
        "ataca",
        "getNtorres",
        "i",
        "i",
        "iterador",
        "length",
        "i",
        "nmax",
        "aux",
        "min",
        "nmax",
        "ataca",
        "get",
        "iterador",
        "i",
        "getcantidad",
        "ataca",
        "get",
        "iterador",
        "i",
        "setbajas",
        "aux",
        "bajas",
        "redondea",
        "aux",
        "pbajas",
        "reporte",
        "setbajasatacante",
        "bajas",
        "iterador",
        "i",
        "nmax",
        "nmax",
        "aux",
        "aux",
        "aux",
        "bajas",
        "torres",
        "iterador",
        "i",
        "aux",
        "ataca",
        "get",
        "iterador",
        "i",
        "getmoral",
        "ataca",
        "get",
        "iterador",
        "i",
        "getpericia",
        "num",
        "sol",
        "num",
        "num",
        "sol",
        "sol",
        "sol",
        "catapultas",
        "edificio",
        "edificio",
        "hayCatapultas",
        "bajas",
        "redondea",
        "random",
        "edificio",
        "getNcatapultas",
        "catapultas",
        "setbajas",
        "bajas",
        "impacto",
        "catapultas",
        "getPoderUnidades",
        "edificio",
        "resistencia",
        "impacto",
        "edificio",
        "rompeEdificio",
        "edificio",
        "hayCatapultas",
        "edificio",
        "setBajasCatapultas",
        "aux",
        "redondea",
        "impacto",
        "edificio",
        "rompeEdificio",
        "aux",
        "edificio",
        "hayCatapultas",
        "edificio",
        "setBajasCatapultas",
        "aux",
        "edificio",
        "getEstado",
        "edificio",
        "setAsaltable",
        "arietes",
        "edificio",
        "edificio",
        "getTipoEdificio",
        "edificio",
        "setPortonAbierto",
        "arietes",
        "setbajas",
        "narietes",
        "min",
        "edificio",
        "nmaxArietes",
        "arietes",
        "getcantidad",
        "piedras",
        "edificio",
        "getNpiedras",
        "piedras",
        "narietes",
        "arietes",
        "setbajas",
        "narietes",
        "edificio",
        "setBajasPiedras",
        "narietes",
        "edificio",
        "setBajasPiedras",
        "narietes",
        "narietes",
        "narietes",
        "piedras",
        "piedras",
        "piedras",
        "piedras",
        "random",
        "random",
        "narietes",
        "narietes",
        "edificio",
        "arietesNecesarios",
        "edificio",
        "setPortonAbierto",
        "arietes",
        "setbajas",
        "edificio",
        "arietesNecesarios"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "La variable estado es del estado de conservación de la muralla, pues se supone",
        "que si hay asalto es porque el portón está roto o la muralla deteriorada.",
        "Para guardar el poder de las tropas asaltantes.",
        "Para guardar la defensa de las tropas asaltantes",
        "Obtenemos el poder y defensa de las unidades guarnecidas",
        "Comprobamos si el atacante posee torres de asedio",
        "Obtenemos la composición de las unidades que suben por las torres",
        "Obtenemos los poderes de ataque y defensa con las bonificaciones de las murallas",
        "Comprobamos si entran también tropas por la puerta o la muralla y calculamos sus poderes",
        "Obtenemos el poder y defensa de las tropas que entran por el portón o la murralla",
        "Juntamos los poderes de las tropas que van por las torres con las demás",
        "Obtenemos la condición de victoria",
        "Metemos las condiciones de victoria en el reporte",
        "Enfrentamos el poder de ataque de los atacantes con el poder defensivo de las unidades guarnecidas.",
        "Gana el atacante",
        "Como las tropas guarnecidas no pueden huir subimos la cota de aniquilación",
        "Aniquilación de D",
        "Calculamos las bajas",
        "Gana el grupo que defiende, en caso de empoate le damos la ventaja al defensor",
        "Aniquilación de A",
        "Calculamos las bajas",
        "Retirada al principal o al personaje",
        "Se mueve a posiciones mas seguras.",
        "Obtenemos la bonificaciones por victoria",
        "Reducción de bajas del atacante.",
        "Reducción de bajas del defensor.",
        "En caso de empate técnico repartimos las bajas",
        "Calculamos las bajas",
        "Función que dada un GrupoTropas y los plomos del enemigo devuelve el GrupoTropas con",
        "las unidades que suben por las torres en el asedio, descontando las bajas que producen los plomos",
        "En primer lugar obtenemos los parámetros del plomo fundido",
        "Obtenemos el número máximo de plomos que podemos usar.",
        "Obtenemos el porcentaje de daño causado a las torres.",
        "Obtenemos el porcentaje de daño causado a las tropas.",
        "Reportamos los plomos gastados",
        "Obtenemos la composición y cantidad de las unidades que van en las torres.",
        "Número máximo de unidades que suben por las torres.",
        "Obtenemos el número de unidades que suben a la torre.",
        "Quitamos del GrupoTropas las unidades que suben a la torre.",
        "Calculamos el número de bajas que se producen por los plomos",
        "Actualizamos las bajas en el reporte",
        "Actualizamos el contador",
        "Obtenemos las unidades que quedan",
        "Metemos en el GrupoTropas las unidades que entran definitivamente",
        "Dado un double lo redondea.",
        "Función que nos da el resultado de lanzar los arietes contra un edificio",
        "Función que nos da el resultado de disparar las catapultas contra un edificio",
        "Primero actúan las catapultas defensivas",
        "Obtenemos la cantidad de impactos sobre el edificio",
        "Actualizamos el estado del edificio.",
        "Actualizamos las bajas en las catapultas defensivas.",
        "Actualizamos las bajas en las catapultas defensivas.",
        "Comprobamos si el edificio es ahora asaltable.",
        "Eta función desarrolla el lanzamiento de los arietes a un edificio.",
        "El objeto TropasK se puede sustituir por un entero con el número de arietes.",
        "Mandamos una baja a los arietes",
        "Obtenemos el número de arietes que se lanzan",
        "Son repelidos todos los arietes.",
        "Liquidamos las piedras, pues se usan todas.",
        "Obtenemos los arietes destruidos por bloques de tres piedras.",
        "Obtenemos las piedras que quedan sueltas.",
        "comprobamos si las piedras restantes son capaces de romper otro ariete.",
        "Comprobamos si se habre el portón"
    ],
    "docstrings": [
        "* To change this template, choose Tools | Templates\n * and open the template in the editor.",
        "*\n * @author Rosita",
        "*  Para que se pueda producir un asalto tengo que tener el portón abierto,\n*  llevar torres de asalto, escalas o la muralla deteriorada.",
        "*********************** Combate con las torres **************************************************",
        "************************** Combate en muralla deteriorada y portón**********************************************",
        "********************* Continuamos con el desarrollo del combate *****************",
        "En esta función falta:\n     * Actualizar las bajas en las catapultas.\n     * Aumentar la pericia de las catapultas tras los disparos.\n     * Actualizar el estado del edificio.\n     * Hacerlo asaltable en su caso.\n     * Actualizar las bajas en las catapultas defensivas.\n     * Enviar respectivos mensajes de lo ocurrido.\n     * La función se podría modificar para que devolviese el entero del deterioro del edificio\n     * Y luego actualizar los demás parámetros de la clase tropas y edificio para actualizar lo demás.\n     * También se podría hacer una clase reporte si te es más cómodo, como tú veas."
    ],
    "functions": [
        "asaltar",
        "formacionTorres",
        "redondea",
        "disparaCatapultas",
        "lanzarArietes"
    ],
    "classes": [
        "Asalto"
    ]
}