{
    "identifiers": [
        "utilities",
        "timeit",
        "x",
        "x",
        "lstrip",
        "isdigit",
        "instructions",
        "a",
        "a",
        "_make_lines",
        "instructions",
        "counts",
        "counts",
        "instructions",
        "_cpy",
        "_dec",
        "_jnz",
        "_out",
        "_inc",
        "line",
        "instructions",
        "split",
        "line",
        "split",
        "len",
        "rest",
        "split",
        "rest",
        "split",
        "rest",
        "program",
        "append",
        "commands",
        "cmd",
        "a",
        "b",
        "x",
        "is_num",
        "x",
        "x",
        "registers",
        "x",
        "a",
        "b",
        "b",
        "registers",
        "registers",
        "_get_val",
        "a",
        "a",
        "args",
        "a",
        "registers",
        "registers",
        "a",
        "a",
        "b",
        "_get_val",
        "a",
        "_get_val",
        "b",
        "value",
        "index",
        "jump",
        "a",
        "args",
        "registers",
        "a",
        "a",
        "args",
        "index",
        "len",
        "program",
        "_increment",
        "a",
        "a",
        "registers",
        "registers",
        "a",
        "a",
        "program",
        "index",
        "_dec",
        "program",
        "index",
        "_jnz",
        "program",
        "index",
        "_dec",
        "program",
        "index",
        "_jnz",
        "program",
        "index",
        "_cpy",
        "program",
        "index",
        "program",
        "index",
        "program",
        "index",
        "program",
        "index",
        "program",
        "index",
        "copy_dest",
        "first_dec",
        "first_dec",
        "jump_cond_1",
        "second_dec",
        "jump_cond_2",
        "jump_dist_1",
        "jump_dist_2",
        "get_val",
        "copy_source",
        "get_val",
        "second_dec",
        "registers",
        "a",
        "update",
        "registers",
        "registers",
        "index",
        "a",
        "registers",
        "registers",
        "a",
        "index",
        "counts",
        "registers",
        "counts",
        "registers",
        "program",
        "index",
        "cmd",
        "a",
        "b",
        "index",
        "index",
        "len",
        "program",
        "iterations",
        "_run_line",
        "iterations",
        "o_line",
        "format",
        "iterations",
        "index",
        "registers",
        "timeit",
        "instructions",
        "part2",
        "Process",
        "instructions",
        "t_val",
        "t",
        "run",
        "open",
        "f",
        "f",
        "read",
        "strip",
        "get_results",
        "instructions",
        "part2"
    ],
    "literals": [
        "'-'",
        "'a'",
        "'b'",
        "'c'",
        "'d'",
        "'iteration: {}, index: {}, registers: {}'",
        "'c'",
        "'b'",
        "'cpy'",
        "'dec'",
        "'jnz'",
        "'out'",
        "'inc'",
        "'\\n'",
        "' '",
        "''",
        "'c'",
        "'c'",
        "'b'",
        "'b'",
        "'__main__'",
        "'instructions_day25.txt'",
        "'r'"
    ],
    "variables": [
        "registers",
        "index",
        "o_line",
        "counts",
        "prev",
        "commands",
        "program",
        "cmd",
        "rest",
        "a",
        "b",
        "a",
        "b",
        "b",
        "value",
        "jump",
        "copy_source",
        "copy_dest",
        "first_dec",
        "jump_cond_1",
        "jump_dist_1",
        "second_dec",
        "jump_cond_2",
        "jump_dist_2",
        "update",
        "first_dec",
        "second_dec",
        "cmd",
        "a",
        "b",
        "iterations",
        "t_val",
        "t",
        "instructions"
    ],
    "comments": [
        "if self.prev is None:",
        "self.prev = self.registers[a]",
        "else:",
        "if self.prev == self.registers[a]:",
        "self.index += 100",
        "# print 'BROKEN SEQUENCE, {}'.format(self.counts),",
        "self.prev = self.registers[a]",
        "convert series of add/decrement loops to a multiplication",
        "a = c * d",
        "c <- 0",
        "d <- 0",
        "skip loop",
        "print self.registers",
        "return 'good sequence: {}'.format(self.counts),",
        "for i in xrange(-2533, 300):",
        "t = Process(instructions, i)",
        "if t.run():",
        "print i + 2534",
        "program(3)",
        "print 2537/2",
        "print get_results(instructions, part2=True)"
    ],
    "docstrings": [],
    "functions": [
        "is_num",
        "_make_lines",
        "_get_val",
        "_cpy",
        "_dec",
        "_jnz",
        "_out",
        "_inc",
        "_increment",
        "_run_line",
        "run",
        "get_results"
    ],
    "classes": [
        "Process"
    ]
}