{
    "identifiers": [
        "cv2",
        "os",
        "sys",
        "camera_port",
        "DEFAULT_CAMERA_PORT",
        "camera_port",
        "camera",
        "camera",
        "read",
        "im",
        "image_name",
        "ramp_frames",
        "DEFAULT_RAMP_FRAMES",
        "cv2",
        "VideoCapture",
        "camera_port",
        "i",
        "xrange",
        "ramp_frames",
        "get_image",
        "camera",
        "get_image",
        "camera",
        "cv2",
        "imwrite",
        "image_name",
        "camera_capture",
        "camera",
        "format",
        "image_name",
        "argv",
        "CameraMan",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "app",
        "take_picture",
        "image_name",
        "myimage",
        "sys",
        "exit",
        "main",
        "sys",
        "argv"
    ],
    "literals": [
        "\"Taking image...\"",
        "\"test_image.png\"",
        "\"Image saved to {}\"",
        "'test_image.png'",
        "\"__main__\""
    ],
    "variables": [
        "DEFAULT_CAMERA_PORT",
        "DEFAULT_RAMP_FRAMES",
        "camera_port",
        "retval",
        "im",
        "camera",
        "temp",
        "camera_capture",
        "file",
        "app",
        "myimage"
    ],
    "comments": [
        "TODO Check if Camera 0 is the webcam on your machine",
        "Number of frames to throw away while the camera adjusts to light levels",
        "read is the easiest way to get a full image out of a VideoCapture object.",
        "Now we can initialize the camera capture object with the",
        "cv2.VideoCapture class. All it needs is the index to a camera port.",
        "Ramp the camera - these frames will be discarded and are only used to",
        "allow v4l2 to adjust light levels, if necessary",
        "Take the actual image we want to keep",
        "A nice feature of the imwrite method is that it will automatically",
        "choose the correct format based on the file extension you provide.",
        "You'll want to release the camera, otherwise you won't be able to",
        "create a new capture object until your script exits"
    ],
    "docstrings": [
        "\"\"\"\nReference: https://codeplasma.com/2012/12/03/getting-webcam-images-with-python-and-opencv-2-for-real-this-time/\n\"\"\"",
        "\"\"\"\n        :param camera_port: The camera port number of the webcam on your machine\n        \"\"\"",
        "\"\"\"\n        Captures a single image from the camera and returns it in PIL format\n        :return:\n        \"\"\"",
        "\"\"\"\n        :param ramp_frames: Number of frames to throw away while the camera adjusts to light levels\n        :return:\n        \"\"\""
    ],
    "functions": [
        "get_image",
        "take_picture",
        "main"
    ],
    "classes": [
        "CameraMan"
    ]
}