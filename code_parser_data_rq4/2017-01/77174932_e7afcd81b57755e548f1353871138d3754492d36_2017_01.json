{
    "identifiers": [
        "janvenstermans",
        "puzzlesolver",
        "permutationsquare",
        "janvenstermans",
        "puzzlesolver",
        "permutationsquare",
        "value",
        "IntegerPermutationSquareValue",
        "janvenstermans",
        "puzzlesolver",
        "permutationsquare",
        "value",
        "PermutationSquareValueFactory",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "java",
        "util",
        "java",
        "util",
        "Test",
        "dimension",
        "permutationSquare",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "changeInfoList",
        "changeInfoList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "solvedValueList",
        "changeInfoList",
        "unsolvedValueList",
        "column",
        "column",
        "dimension",
        "column",
        "row",
        "row",
        "dimension",
        "row",
        "column",
        "row",
        "column",
        "row",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForAllButIntegers",
        "dimension",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "permutationSquare",
        "changeValues",
        "changeInfoList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellInfoList",
        "permutationSquare",
        "solvedValueList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellListUnsolved",
        "permutationSquare",
        "unsolvedValueList",
        "Test",
        "dimension",
        "permutationSquare",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "changeInfoList",
        "changeInfoList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "changeInfoList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "solvedValueList",
        "changeInfoList",
        "solvedValueList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "unsolvedValueList",
        "column",
        "column",
        "dimension",
        "column",
        "row",
        "row",
        "dimension",
        "row",
        "column",
        "row",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForAllButIntegers",
        "dimension",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForAllButIntegers",
        "dimension",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForAllButIntegers",
        "dimension",
        "permutationSquare",
        "changeValues",
        "changeInfoList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellInfoList",
        "permutationSquare",
        "solvedValueList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellListUnsolved",
        "permutationSquare",
        "unsolvedValueList",
        "Test",
        "dimension",
        "permutationSquare",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "changeInfoList",
        "changeInfoList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "changeInfoList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "solvedValueList",
        "changeInfoList",
        "solvedValueList",
        "add",
        "PermutationSquareValueFactory",
        "createIntegerListForDimension",
        "dimension",
        "PermutationSquareValueFactory",
        "createIntegerPermutationSquareValue",
        "unsolvedValueList",
        "column",
        "column",
        "dimension",
        "column",
        "row",
        "row",
        "dimension",
        "row",
        "row",
        "column",
        "row",
        "column",
        "row",
        "column",
        "unsolvedValueList",
        "add",
        "column",
        "row",
        "PermutationSquareValueFactory",
        "createIntegerListForAllButIntegers",
        "dimension",
        "permutationSquare",
        "changeValues",
        "changeInfoList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellInfoList",
        "permutationSquare",
        "solvedValueList",
        "PermutationSquareLineInfoTestUtil",
        "assertCellListUnsolved",
        "permutationSquare",
        "unsolvedValueList"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "unsolved and all possible values",
        "unsolved and all possible values",
        "unsolved and all values possible",
        "all the other values should be filled in"
    ],
    "docstrings": [
        "* @author Jan Venstermans"
    ],
    "functions": [
        "test3DimOneValue",
        "test3DimTwoValuesSameColumn",
        "test3DimTwoSameValuesDifferentColumn"
    ],
    "classes": [
        "PermutationSquareImplDim3Test"
    ]
}