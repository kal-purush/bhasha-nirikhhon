{
    "identifiers": [
        "abc",
        "base64",
        "random",
        "collections",
        "namedtuple",
        "cryptography",
        "hazmat",
        "backends",
        "default_backend",
        "cryptography",
        "hazmat",
        "primitives",
        "hashes",
        "smartyparse",
        "SmartyParser",
        "smartyparse",
        "ListyParser",
        "smartyparse",
        "ParseHelper",
        "smartyparse",
        "parsers",
        "smartyparse",
        "references",
        "utils",
        "Ghid",
        "exceptions",
        "SecurityError",
        "metaclass",
        "abc",
        "ABCMeta",
        "classmethod",
        "cls",
        "data",
        "hashes",
        "Hash",
        "cls",
        "_HASH_ALGO",
        "backend",
        "default_backend",
        "h",
        "update",
        "data",
        "h",
        "finalize",
        "h",
        "digest",
        "classmethod",
        "cls",
        "address",
        "data",
        "cls",
        "create",
        "data",
        "test",
        "address",
        "SecurityError",
        "_AddressAlgoBase",
        "classmethod",
        "cls",
        "data",
        "_dummy_address",
        "classmethod",
        "cls",
        "address",
        "data",
        "_AddressAlgoBase",
        "hashes",
        "SHA512",
        "_HASH_ALGO",
        "digest_size",
        "AddressAlgo0",
        "AddressAlgo1",
        "num",
        "ADDRESS_ALGOS",
        "num",
        "KeyError",
        "exc",
        "ValueError",
        "num",
        "exc",
        "ParseHelper",
        "parsers",
        "Blob",
        "length",
        "len",
        "_dummy_address",
        "ParseHelper",
        "parsers",
        "Blob",
        "length",
        "header",
        "lookup",
        "key",
        "references",
        "header",
        "version",
        "key",
        "key",
        "lookup",
        "version",
        "KeyError",
        "parsers",
        "ParseError",
        "_dispatch_obj",
        "header",
        "lookup",
        "key",
        "references",
        "header",
        "parsed",
        "key",
        "key",
        "lookup",
        "parsed",
        "KeyError",
        "parsers",
        "ParseError",
        "_update_body",
        "funcs",
        "value",
        "f",
        "funcs",
        "f",
        "value",
        "generated_callback",
        "unpacked_spo",
        "Ghid",
        "algo",
        "unpacked_spo",
        "address",
        "unpacked_spo",
        "ghid",
        "SmartyParser",
        "ParseHelper",
        "parsers",
        "Int8",
        "signed",
        "references",
        "ghid_parser",
        "algo",
        "_hash_algo_lookup",
        "algo",
        "KeyError",
        "e",
        "algo",
        "ValueError",
        "e",
        "ghid_parser",
        "register_callback",
        "_ghid_format",
        "ghid_parser",
        "register_callback",
        "_ghid_format",
        "ghid_parser",
        "register_callback",
        "_ghid_transform",
        "modify",
        "ghid_parser",
        "ListyParser",
        "parsers",
        "generate_ghid_parser",
        "SmartyParser",
        "ParseHelper",
        "parsers",
        "Literal",
        "ParseHelper",
        "parsers",
        "Int16",
        "signed",
        "ParseHelper",
        "parsers",
        "Int8",
        "signed",
        "cipher",
        "cipher_length_lookup",
        "cipher",
        "cipher_length_lookup",
        "cipher",
        "ParseHelper",
        "parsers",
        "Blob",
        "length",
        "key_length",
        "ParseHelper",
        "parsers",
        "Blob",
        "length",
        "seed_length",
        "_secret_parser",
        "register_callback",
        "_secret_cipher_update",
        "_secret_parser",
        "register_callback",
        "_secret_cipher_update",
        "_secret_parser",
        "max",
        "_secret_parsers",
        "_secret_parsers",
        "_secret_parser",
        "parser",
        "value",
        "cipher",
        "key",
        "seed",
        "version",
        "seed",
        "version",
        "_secret_latest",
        "version",
        "_secret_versions",
        "ValueError",
        "cipher",
        "cipher_length_lookup",
        "ValueError",
        "len",
        "key",
        "cipher_length_lookup",
        "cipher",
        "ValueError",
        "len",
        "seed",
        "cipher_length_lookup",
        "cipher",
        "ValueError",
        "cipher",
        "version",
        "key",
        "seed",
        "property",
        "_key",
        "property",
        "_seed",
        "_parser",
        "pack",
        "_control",
        "classmethod",
        "cls",
        "data",
        "_secret_parser",
        "unpack",
        "data",
        "cls",
        "cipher",
        "obj",
        "key",
        "obj",
        "seed",
        "obj",
        "version",
        "obj",
        "property",
        "_version",
        "property",
        "_cipher",
        "property",
        "_secret_parsers",
        "version",
        "property",
        "MAGIC",
        "version",
        "cipher",
        "key",
        "seed",
        "c",
        "repr",
        "cipher",
        "repr",
        "key",
        "repr",
        "seed",
        "repr",
        "version",
        "hash",
        "cipher",
        "hash",
        "version",
        "hash",
        "key",
        "hash",
        "seed",
        "other",
        "cipher",
        "other",
        "cipher",
        "version",
        "other",
        "version",
        "key",
        "other",
        "key",
        "seed",
        "other",
        "seed",
        "AttributeError",
        "e",
        "e",
        "base64",
        "urlsafe_b64encode",
        "decode",
        "classmethod",
        "cls",
        "b64",
        "base64",
        "urlsafe_b64decode",
        "b64",
        "cls",
        "from_bytes",
        "raw",
        "namedtuple",
        "namedtuple",
        "namedtuple"
    ],
    "literals": [
        "'Failed to verify address integrity.'",
        "'Address algo \"'",
        "'\" is undefined.'",
        "b'[[ Start hash '",
        "b'-'",
        "b' End hash ]]'",
        "b'[[ Start signature '",
        "b'-'",
        "b' End signature ]]'",
        "b'[[ Start MAC '",
        "b'-'",
        "b' End MAC ]]'",
        "b'[[ Start asymmetric payload '",
        "b'-'",
        "b' End asymmetric payload ]]'",
        "b'[ '",
        "b'-'",
        "b' MOCK PUBLIC KEY '",
        "b'-'",
        "b' ]'",
        "b'[ '",
        "b'-'",
        "b' MOCK PUBLIC KEY '",
        "b'-'",
        "b' ]'",
        "'No matching version number available.'",
        "'body'",
        "'No matching object body key available.'",
        "'key'",
        "'sig'",
        "'mac'",
        "'asym'",
        "'seed'",
        "'key'",
        "'sig'",
        "'mac'",
        "'asym'",
        "'seed'",
        "'key'",
        "'sig'",
        "'mac'",
        "'asym'",
        "'seed'",
        "'algo'",
        "'address'",
        "'algo'",
        "'address'",
        "'address'",
        "'Improper hash algorithm declaration.'",
        "'algo'",
        "'prepack'",
        "'algo'",
        "'postunpack'",
        "'postunpack'",
        "'magic'",
        "b'SH'",
        "'version'",
        "'cipher'",
        "'key'",
        "'seed'",
        "'key'",
        "'seed'",
        "'key'",
        "'seed'",
        "'cipher'",
        "'prepack'",
        "'cipher'",
        "'postunpack'",
        "'_key'",
        "'_seed'",
        "'_version'",
        "'_cipher'",
        "'__weakref__'",
        "'magic'",
        "'latest'",
        "b''",
        "'latest'",
        "'Improper Secret version declaration.'",
        "'Unsupported cipher declaration.'",
        "'key'",
        "'Key must be of proper length for the declared '",
        "'ciphersuite.'",
        "'seed'",
        "'Seed must be of proper length for the declared '",
        "'ciphersuite.'",
        "'cipher'",
        "'key'",
        "'seed'",
        "'version'",
        "'magic'",
        "'version'",
        "'cipher'",
        "'key'",
        "'seed'",
        "'(cipher='",
        "', '",
        "'key='",
        "', '",
        "'seed='",
        "', '",
        "'version='",
        "')'",
        "'Cannot compare Secret objects to non-Secret-like objects.'",
        "'AsymHandshake'",
        "'author'",
        "'target'",
        "'secret'",
        "'AsymAck'",
        "'author'",
        "'target'",
        "'status'",
        "'AsymNak'",
        "'author'",
        "'target'",
        "'status'"
    ],
    "variables": [
        "h",
        "digest",
        "test",
        "_HASH_ALGO",
        "ADDRESS_LENGTH",
        "_HASH_ALGO",
        "ADDRESS_LENGTH",
        "ADDRESS_ALGOS",
        "_dummy_address",
        "_dummy_signature",
        "_dummy_mac",
        "_dummy_asym",
        "_dummy_pubkey",
        "_dummy_pubkey_exchange",
        "_hash_algo_lookup",
        "key",
        "key",
        "cipher_length_lookup",
        "ghid",
        "ghid_parser",
        "ghid_parser",
        "ghid_parser",
        "_secret_parser",
        "_secret_parser",
        "_secret_parser",
        "_secret_parser",
        "_secret_parser",
        "_secret_parser",
        "key_length",
        "seed_length",
        "_secret_parser",
        "_secret_parser",
        "_secret_parsers",
        "_secret_latest",
        "_secret_versions",
        "__slots__",
        "MAGIC",
        "seed",
        "version",
        "_cipher",
        "_version",
        "_key",
        "_seed",
        "obj",
        "c",
        "raw",
        "AsymHandshake",
        "AsymAck",
        "AsymNak"
    ],
    "comments": [
        "This is just used for ghids.",
        "----------------------------------------------------------------------",
        "Address algorithms",
        "So this isn't really making much of a difference, necessarily, but",
        "it's good insurance against (accidental or malicious) length",
        "extension problems.",
        "Zero should be rendered inop, IE ignore all input data and generate",
        "symbolic representations",
        "----------------------------------------------------------------------",
        "Mock objects for zeroth hash/ciphersuites",
        "----------------------------------------------------------------------",
        "Hash algo identifier / length block",
        "----------------------------------------------------------------------",
        "Generalized object dispatchers",
        "This should keep working even with the addition of new version numbers",
        "----------------------------------------------------------------------",
        "Cipher length lookup block",
        "----------------------------------------------------------------------",
        "Misc objects",
        "Don't forget to transform the object back to a utils.Ghid",
        "Hard code this in for now",
        "We expect to have a lot of secrets, so let's add slots. Also, there's",
        "a case to be made for discouraging people from using Secrets for",
        "anything other than, well, secrets.",
        "Most of these checks should probably be moved into property",
        "setters.",
        "Okay, this is hard-coding in version 2 as the unpacker. Oh well.",
        "----------------------------------------------------------------------",
        "Various response objects"
    ],
    "docstrings": [
        "'''\nCross-library utilities excluded from core.py or cipher.py to avoid\ncircular imports.\n\nLICENSING\n-------------------------------------------------\n\ngolix: A python library for Golix protocol object manipulation.\n    Copyright (C) 2016 Muterra, Inc.\n    \n    Contributors\n    ------------\n    Nick Badger\n        badg@muterra.io | badg@nickbadger.com | nickbadger.com\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the\n    Free Software Foundation, Inc.,\n    51 Franklin Street,\n    Fifth Floor,\n    Boston, MA  02110-1301 USA\n\n------------------------------------------------------\n\n'''",
        "''' Creates an address (note: not the whole ghid) from data.\n        '''",
        "''' Verifies an address (note: not the whole ghid) from data.\n        '''",
        "''' FOR TESTING PURPOSES ONLY.\n    \n    Entirely inoperative. Correct API, but ignores all input, creating\n    only a symbolic output.\n    '''",
        "''' SHA512\n    '''",
        "''' Transforms an unpacked SmartyParseObject into a .utils.Ghid.\n    If using algo zero, also eliminates the address and replaces with\n    None.\n    '''",
        "''' All secrets have a key. Some have a nonce or IV (seed). All must\n    be able to be condensed into __bytes__. All must also be retrievable\n    from a bytes object.\n    '''",
        "''' Encodes the ghid as a urlsafe-base64 string.\n        '''",
        "''' Returns a ghid built from the urlsafe-base64 string b64.\n        '''"
    ],
    "functions": [
        "create",
        "verify",
        "create",
        "verify",
        "hash_lookup",
        "_gen_dispatch",
        "_dispatch_obj",
        "_gen_body_update",
        "_update_body",
        "_callback_multi",
        "generated_callback",
        "_ghid_transform",
        "generate_ghid_parser",
        "_ghid_format",
        "generate_ghidlist_parser",
        "_secret_cipher_update",
        "key",
        "seed",
        "__bytes__",
        "from_bytes",
        "version",
        "cipher",
        "_parser",
        "_control",
        "__repr__",
        "__hash__",
        "__eq__",
        "as_str",
        "from_str"
    ],
    "classes": [
        "_AddressAlgoBase",
        "AddressAlgo0",
        "AddressAlgo1",
        "Secret"
    ]
}