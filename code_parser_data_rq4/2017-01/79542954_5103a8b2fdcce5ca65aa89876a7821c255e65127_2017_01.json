{
    "identifiers": [
        "log_",
        "log_",
        "Express",
        "Path",
        "ExpressSession",
        "Passport",
        "CookieParser",
        "bodyParser_",
        "RouteCollection",
        "util_",
        "Express",
        "app",
        "Path",
        "__dirname",
        "app",
        "logger",
        "app",
        "app",
        "logger",
        "app",
        "bodyParser_",
        "logger",
        "app",
        "bodyParser_",
        "logger",
        "app",
        "CookieParser",
        "logger",
        "Path",
        "__dirname",
        "app",
        "Express",
        "Path",
        "__dirname",
        "app",
        "ExpressSession",
        "app",
        "Passport",
        "app",
        "Passport",
        "RouteCollection",
        "app",
        "app",
        "Express",
        "req",
        "res",
        "next",
        "SatoriPortal",
        "err",
        "next",
        "err",
        "app",
        "Express",
        "err",
        "req",
        "res",
        "next",
        "res",
        "err",
        "res",
        "err",
        "err",
        "app"
    ],
    "literals": [
        "\"./common/logger/index\"",
        "'express'",
        "'path'",
        "\"express-session\"",
        "\"passport\"",
        "'cookie-parser'",
        "'body-parser'",
        "'./routes/main'",
        "\"./common/util\"",
        "'views'",
        "'views'",
        "'view engine'",
        "'ejs'",
        "\"setup view engine [%s], views [%s]\"",
        "\"view engine\"",
        "\"views\"",
        "\"use body parser json()\"",
        "\"use body parser urlencoded()\"",
        "\"use cookie parser urlencoded()\"",
        "\"use static folder [%s]\"",
        "'public'",
        "'public'",
        "'satori portal'",
        "'/'",
        "'Not Found'",
        "'error'"
    ],
    "variables": [
        "logger",
        "app",
        "err"
    ],
    "comments": [
        "<reference path=\"typings/main.d.ts\" />",
        "<reference path=\"routes/main.ts\" />",
        "<reference path=\"models/main.d.ts\" />",
        "<reference path=\"common/util.ts\" />",
        "import favicon = require('serve-favicon');",
        "import logger = require('morgan');",
        "uncomment after placing your favicon in /public",
        "app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));",
        "app.use(logger('dev'));",
        "catch 404 and forward to error handler",
        "error handlers",
        "development error handler",
        "will print stacktrace",
        "res.render('error', {",
        "message: err.message,",
        "error: util_.isProduction() ? {} : err",
        "});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}