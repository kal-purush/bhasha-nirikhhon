{
    "identifiers": [
        "com",
        "badlogic",
        "gdx",
        "vr",
        "com",
        "badlogic",
        "gdx",
        "graphics",
        "Camera",
        "com",
        "badlogic",
        "gdx",
        "math",
        "Matrix4",
        "com",
        "badlogic",
        "gdx",
        "math",
        "Vector3",
        "com",
        "badlogic",
        "gdx",
        "vr",
        "VRContext",
        "Eye",
        "vr",
        "HmdMatrix34_t",
        "vr",
        "HmdMatrix44_t",
        "vr",
        "HmdMatrix44_t",
        "ByValue",
        "vr",
        "VR",
        "context",
        "eye",
        "eyeSpace",
        "invEyeSpace",
        "offset",
        "context",
        "eye",
        "context",
        "context",
        "eye",
        "eye",
        "Override",
        "update",
        "Override",
        "updateFrustum",
        "projectionMat",
        "context",
        "system",
        "GetProjectionMatrix",
        "apply",
        "eye",
        "index",
        "near",
        "far",
        "VR",
        "EGraphicsAPIConvention",
        "API_OpenGL",
        "hmdMat4toMatrix4",
        "projectionMat",
        "projection",
        "eyeMat",
        "context",
        "system",
        "GetEyeToHeadTransform",
        "apply",
        "eye",
        "index",
        "hmdMat34ToMatrix4",
        "eyeMat",
        "eyeSpace",
        "invEyeSpace",
        "eyeSpace",
        "inv",
        "view",
        "context",
        "getDevicePose",
        "VRContext",
        "HMD_DEVICE_INDEX",
        "inv",
        "combined",
        "projection",
        "Matrix4",
        "mul",
        "combined",
        "val",
        "invEyeSpace",
        "val",
        "Matrix4",
        "mul",
        "combined",
        "val",
        "view",
        "val",
        "updateFrustum",
        "invProjectionView",
        "combined",
        "Matrix4",
        "inv",
        "invProjectionView",
        "val",
        "frustum",
        "update",
        "invProjectionView",
        "hdm",
        "mat",
        "val",
        "mat",
        "val",
        "m",
        "hdm",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "hmd",
        "mat",
        "val",
        "mat",
        "val",
        "m",
        "hmd",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val",
        "val",
        "m",
        "val",
        "m",
        "val",
        "m",
        "val"
    ],
    "literals": [],
    "variables": [
        "context",
        "eye"
    ],
    "comments": [
        "get the projection matrix from the HDM",
        "get the eye space matrix from the HDM",
        "get the pose matrix from the HDM",
        "FIXME set position, direction, up etc. based on eye + view matrix"
    ],
    "docstrings": [
        "* A {@link Camera} implementation for one {@link Eye}\n * of a {@link VRContext}. All properties except {@link Camera#near},\n * {@link Camera#far} and {@link #offset} will be overwritten\n * on every call to {@link #update()} based on the tracked values\n * from the head mounted display. The {@link #offset} \n * vector allows you to position the camera in world space.\n * @author badlogic\n *"
    ],
    "functions": [
        "VRCamera",
        "update",
        "update",
        "hmdMat4toMatrix4",
        "hmdMat34ToMatrix4"
    ],
    "classes": [
        "VRCamera"
    ]
}