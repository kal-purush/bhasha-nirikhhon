{
    "identifiers": [
        "com",
        "dokany",
        "java",
        "examples",
        "mirrorfs",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "AccessDeniedException",
        "java",
        "nio",
        "file",
        "FileSystems",
        "java",
        "nio",
        "file",
        "FileVisitResult",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "PathMatcher",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "nio",
        "file",
        "SimpleFileVisitor",
        "java",
        "nio",
        "file",
        "attribute",
        "BasicFileAttributeView",
        "java",
        "nio",
        "file",
        "attribute",
        "BasicFileAttributes",
        "java",
        "nio",
        "file",
        "attribute",
        "FileTime",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "com",
        "dokany",
        "java",
        "DokanyFileSystem",
        "com",
        "dokany",
        "java",
        "DokanyUtils",
        "com",
        "dokany",
        "java",
        "Win32FindStreamData",
        "com",
        "dokany",
        "java",
        "constants",
        "FileAttribute",
        "com",
        "dokany",
        "java",
        "structure",
        "DeviceOptions",
        "com",
        "dokany",
        "java",
        "structure",
        "DokanyFileInfo",
        "com",
        "dokany",
        "java",
        "structure",
        "EnumIntegerSet",
        "com",
        "dokany",
        "java",
        "structure",
        "FileData",
        "com",
        "dokany",
        "java",
        "structure",
        "FreeSpace",
        "com",
        "dokany",
        "java",
        "structure",
        "FullFileInfo",
        "com",
        "dokany",
        "java",
        "structure",
        "VolumeInformation",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "Kernel32",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "Kernel32Util",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "Win32Exception",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "WinBase",
        "FILETIME",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "WinBase",
        "WIN32_FIND_DATA",
        "com",
        "sun",
        "jna",
        "platform",
        "win32",
        "WinDef",
        "DWORD",
        "LOGGER",
        "LoggerFactory",
        "getLogger",
        "GLOB",
        "DEFAULT_FS",
        "FileSystems",
        "getDefault",
        "NotNull",
        "deviceOptions",
        "NotNull",
        "volumeInfo",
        "NotNull",
        "freeSpace",
        "NotNull",
        "rootCreationDate",
        "NotNull",
        "rootPath",
        "deviceOptions",
        "volumeInfo",
        "freeSpace",
        "rootCreationDate",
        "rootPath",
        "DokanyUtils",
        "getPath",
        "rootPath",
        "toFile",
        "exists",
        "rootPath",
        "Override",
        "Override",
        "Override",
        "path",
        "Paths",
        "get",
        "path",
        "toFile",
        "exists",
        "Override",
        "path",
        "pattern",
        "files",
        "patternToMatch",
        "Objects",
        "isNull",
        "pattern",
        "pattern",
        "pathMatcher",
        "DEFAULT_FS",
        "getPathMatcher",
        "GLOB",
        "root",
        "patternToMatch",
        "startingPath",
        "Paths",
        "get",
        "path",
        "toString",
        "LOGGER",
        "trace",
        "startingPath",
        "LOGGER",
        "trace",
        "root",
        "startingPath",
        "equals",
        "File",
        "separator",
        "LOGGER",
        "trace",
        "root",
        "startingPath",
        "root",
        "LOGGER",
        "trace",
        "startingPath",
        "LOGGER",
        "trace",
        "Paths",
        "get",
        "startingPath",
        "items",
        "Files",
        "Paths",
        "get",
        "startingPath",
        "items",
        "forEach",
        "item",
        "findData",
        "getFindData",
        "item",
        "pathMatcher",
        "Objects",
        "nonNull",
        "findData",
        "files",
        "add",
        "findData",
        "files",
        "path",
        "pathMatcher",
        "findData",
        "LOGGER",
        "trace",
        "path",
        "pathMatcher",
        "matches",
        "path",
        "LOGGER",
        "trace",
        "path",
        "info",
        "getInfo",
        "path",
        "Objects",
        "nonNull",
        "info",
        "findData",
        "info",
        "toWin32FindData",
        "e",
        "LOGGER",
        "warn",
        "path",
        "e",
        "findData",
        "Override",
        "path",
        "getInfo",
        "DokanyUtils",
        "getPath",
        "path",
        "path",
        "LOGGER",
        "trace",
        "path",
        "toString",
        "attributesAsInt",
        "Kernel32Util",
        "getFileAttributes",
        "DokanyUtils",
        "normalize",
        "path",
        "attributes",
        "FileAttribute",
        "fromInt",
        "attributesAsInt",
        "basicAttributes",
        "DokanyUtils",
        "getBasicAttributes",
        "path",
        "readAttributes",
        "fileIndex",
        "fileKey",
        "basicAttributes",
        "fileKey",
        "Objects",
        "nonNull",
        "fileKey",
        "fileIndex",
        "fileKey",
        "LOGGER",
        "trace",
        "root",
        "LOGGER",
        "trace",
        "File",
        "separator",
        "pathNameForInfo",
        "path",
        "toString",
        "LOGGER",
        "trace",
        "pathNameForInfo",
        "LOGGER",
        "trace",
        "pathNameForInfo",
        "equals",
        "File",
        "separator",
        "pathNameForInfo",
        "equals",
        "File",
        "separator",
        "pathNameForInfo",
        "Paths",
        "get",
        "root",
        "relativize",
        "path",
        "toString",
        "LOGGER",
        "trace",
        "pathNameForInfo",
        "pathNameForInfo",
        "fileIndex",
        "attributes",
        "volumeInfo",
        "getVolumeSerialNumber",
        "DokanyUtils",
        "toFILETIME",
        "basicAttributes",
        "creationTime",
        "DokanyUtils",
        "toFILETIME",
        "basicAttributes",
        "lastAccessTime",
        "DokanyUtils",
        "toFILETIME",
        "basicAttributes",
        "lastModifiedTime",
        "Override",
        "oldPath",
        "newPath",
        "replaceIfExisting",
        "Override",
        "path",
        "dokanyFileInfo",
        "file",
        "DokanyUtils",
        "getPath",
        "path",
        "toFile",
        "file",
        "isDirectory",
        "file",
        "file",
        "exists",
        "file",
        "DokanyUtils",
        "setDeleteStatus",
        "file",
        "dokanyFileInfo",
        "Override",
        "path",
        "dokanyFileInfo",
        "directory",
        "DokanyUtils",
        "getPath",
        "path",
        "toFile",
        "directory",
        "isFile",
        "directory",
        "DokanyUtils",
        "setDeleteStatus",
        "directory",
        "dokanyFileInfo",
        "Override",
        "path",
        "offset",
        "readLength",
        "LOGGER",
        "trace",
        "path",
        "file",
        "path",
        "LOGGER",
        "trace",
        "file",
        "numRead",
        "data",
        "readLength",
        "fis",
        "file",
        "numRead",
        "fis",
        "read",
        "data",
        "offset",
        "readLength",
        "data",
        "numRead",
        "Override",
        "path",
        "offset",
        "data",
        "writeLength",
        "file",
        "Paths",
        "get",
        "path",
        "toFile",
        "fis",
        "file",
        "fis",
        "write",
        "data",
        "offset",
        "writeLength",
        "writeLength",
        "offset",
        "Override",
        "path",
        "options",
        "attributes",
        "Override",
        "path",
        "options",
        "attributes",
        "Override",
        "path",
        "Override",
        "path",
        "dokanyFileInfo",
        "dokanyFileInfo",
        "deleteOnClose",
        "Files",
        "DokanyUtils",
        "getPath",
        "path",
        "Override",
        "path",
        "dokanyFileInfo",
        "dokanyFileInfo",
        "_context",
        "Override",
        "path",
        "kind",
        "Override",
        "path",
        "kind",
        "data",
        "Override",
        "path",
        "Override",
        "path",
        "length",
        "Override",
        "path",
        "offset",
        "Override",
        "path",
        "attributes",
        "Kernel32",
        "INSTANCE",
        "SetFileAttributes",
        "path",
        "attributes",
        "toInt",
        "Override",
        "path",
        "offset",
        "length",
        "Override",
        "path",
        "offset",
        "length",
        "Override",
        "path",
        "Override",
        "path",
        "creation",
        "lastAccess",
        "lastModification",
        "attributes",
        "DokanyUtils",
        "getBasicAttributes",
        "path",
        "create",
        "DokanyUtils",
        "toFileTime",
        "creation",
        "access",
        "DokanyUtils",
        "toFileTime",
        "lastAccess",
        "modified",
        "DokanyUtils",
        "toFileTime",
        "lastModification",
        "attributes",
        "setTimes",
        "modified",
        "access",
        "create",
        "files",
        "pathMatcher",
        "pattern",
        "LOGGER",
        "trace",
        "root",
        "LOGGER",
        "trace",
        "pattern",
        "patternToMatch",
        "Objects",
        "isNull",
        "pattern",
        "pattern",
        "pathMatcher",
        "DEFAULT_FS",
        "getPathMatcher",
        "GLOB",
        "root",
        "patternToMatch",
        "files",
        "Override",
        "path",
        "basicFileAttributes",
        "files",
        "add",
        "getFindData",
        "path",
        "pathMatcher",
        "FileVisitResult",
        "CONTINUE",
        "Override",
        "path",
        "e",
        "getFindData",
        "path",
        "pathMatcher",
        "FileVisitResult",
        "CONTINUE",
        "Override",
        "path",
        "e",
        "LOGGER",
        "warn",
        "path",
        "e",
        "FileVisitResult",
        "CONTINUE"
    ],
    "literals": [
        "\"glob:\"",
        "\"Cannot find directory: \"",
        "\"*\"",
        "\"startingPath 1: {}\"",
        "\"root: {}\"",
        "\"inside and root is: {}\"",
        "\"startingPath: {}\"",
        "\"startingPath as path: {}\"",
        "\"getFindData for path: {}\"",
        "\"Found match: {}\"",
        "\"Could not retrieve file info for {}\"",
        "\"relatvie in getinfo: {}\"",
        "\"rootPath: {}\"",
        "\"File.separator: {}\"",
        "\"pathNameForInfo: {}\"",
        "\"pathNameForInfo.equals(File.separator): {}\"",
        "\"relativizing: {}\"",
        "\"Path is a directory: \"",
        "\"Path does not exist: \"",
        "\"Path is a file: \"",
        "\"read: {}\"",
        "\"file: {}\"",
        "\"unlock: Not yet implemented\"",
        "\"lock: Not yet implemented\"",
        "\"findStreams: Not yet implemented\"",
        "\"rootPath: {}\"",
        "\"pattern: {}\"",
        "\"*\"",
        "\"Failed to visit file: {}\""
    ],
    "variables": [
        "pathMatcher"
    ],
    "comments": [
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "cannot use Files.find because of https://bugs.openjdk.java.net/browse/JDK-8039910",
        "try (final Stream<Path> paths = Files.find(Paths.get(path), Integer.MAX_VALUE, (filePath, fileAttr) -> true)) {}",
        "TODO Auto-generated method stub",
        "if (info.Context == null) // memory mapped read {",
        "final File file = Paths.get(path).toFile();",
        "TODO Auto-generated method stub",
        "@Override",
        "TODO Auto-generated method stub",
        "((FileStream) (info.Context)).Flush();",
        "File already closed by DokanyOperationsProxy",
        "does not matter file or directory",
        "TODO: May not be necessary as this can be completely done in DokanyOperationsProxy",
        "(dokanyFileInfo._context as FileStream)?.Dispose();",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub",
        "TODO Auto-generated method stub"
    ],
    "docstrings": [
        "* Path matcher glob",
        "final FindFilesVisitor visitor = new FindFilesVisitor(pattern);\n\t\tFiles.walkFileTree(rootPath, visitor);\n\n\t\tfinal Set<WIN32_FIND_DATA> files = visitor.getFiles();\n\t\tLOGGER.trace(\"foundFiles: {}\", files);",
        "* @param path",
        "*\n\t * @param path\n\t * @return\n\t * @throws IOException",
        "if (path.toString().equals(\"\\\\\")) {\n\t\t\tattribute = FileAttribute.DEVICE;\n\t\t} else if (path.toString().equals(\"\\\\$Recycle.Bin\")) {\n\t\t\tattribute = FileAttribute.READONLY;\n\t\t}",
        "* Check if file can be deleted. Actual deletion occurs in {@link #cleanup(String, DokanyFileInfo)}.\n\t *\n\t * @param path\n\t * @param dokanyFileInfo",
        "* Check if directory can be deleted. Actual deletion occurs in {@link #cleanup(String, DokanyFileInfo)}.\n\t *\n\t * @param path\n\t * @param dokanyFileInfo",
        "* else // normal read { var stream = info.Context as FileStream; lock (stream) //Protect from overlapped read { stream.Position = offset; bytesRead = stream.Read(buffer,\n\t\t * 0, buffer.Length); } }",
        "*\n\t * @param path\n\t * @param offset\n\t * @param data\n\t * @param writeLength",
        "* @param path\n\t * @param options\n\t * @param attributes",
        "* @param path\n\t * @param options\n\t * @param attributes",
        "* @param path",
        "* @param path\n\t * @param dokanyFileInfo",
        "* @param path\n\t * @param dokanyFileInfo",
        "* @param path\n\t * @param kind\n\t * @param out",
        "* @param path\n\t * @param kind\n\t * @param out",
        "* @param path\n\t * @param attributes",
        "* @param path\n\t * @param creation\n\t * @param lastAccess\n\t * @param lastModification"
    ],
    "functions": [
        "MirrorFS",
        "mounted",
        "unmounted",
        "doesPathExist",
        "findFilesWithPattern",
        "WIN32_FIND_DATA",
        "getFindData",
        "FullFileInfo",
        "getInfo",
        "FullFileInfo",
        "getInfo",
        "move",
        "deleteFile",
        "deleteDirectory",
        "FileData",
        "read",
        "write",
        "createEmptyFile",
        "createEmptyDirectory",
        "flushFileBuffers",
        "cleanup",
        "close",
        "getSecurity",
        "setSecurity",
        "truncate",
        "setAllocationSize",
        "setEndOfFile",
        "setAttributes",
        "unlock",
        "findStreams",
        "setTime",
        "FindFilesVisitor",
        "getFiles",
        "FileVisitResult",
        "visitFile",
        "FileVisitResult",
        "postVisitDirectory",
        "FileVisitResult",
        "visitFileFailed"
    ],
    "classes": [
        "MirrorFS",
        "FindFilesVisitor"
    ]
}