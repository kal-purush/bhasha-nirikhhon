{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "img",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2HSV",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "cv2",
        "inRange",
        "hsv",
        "lower_red1",
        "upper_red1",
        "cv2",
        "inRange",
        "hsv",
        "lower_red2",
        "upper_red2",
        "cv2",
        "bitwise_or",
        "mask1",
        "mask2",
        "cv2",
        "findContours",
        "mask",
        "cv2",
        "RETR_EXTERNAL",
        "cv2",
        "CHAIN_APPROX_SIMPLE",
        "cnt",
        "contours",
        "cv2",
        "boundingRect",
        "cnt",
        "cv2",
        "contourArea",
        "cnt",
        "area",
        "x",
        "mask",
        "shape",
        "abs",
        "w",
        "h",
        "cv2",
        "rectangle",
        "img",
        "x",
        "y",
        "x",
        "w",
        "y",
        "h",
        "distance",
        "w",
        "dist",
        "img",
        "width_in_pix",
        "get_focal_length",
        "known_distance",
        "known_width",
        "known_width",
        "focal_length",
        "width_in_pix",
        "known_distance",
        "known_width",
        "width_in_pixels",
        "width_in_pixels",
        "known_distance",
        "known_width"
    ],
    "literals": [],
    "variables": [
        "hsv",
        "lower_red1",
        "upper_red1",
        "lower_red2",
        "upper_red2",
        "mask1",
        "mask2",
        "mask",
        "dist",
        "img2",
        "contours",
        "hierarchy",
        "x",
        "y",
        "w",
        "h",
        "area",
        "dist",
        "known_distance",
        "known_width",
        "focal_length"
    ],
    "comments": [
        "Author Branislav Vezilic",
        "Description: Detecting traffic lights using colour",
        "Convert BGR to HSV",
        "Define range of red color in HSV",
        "Threshold the HSV image to get only blue colors",
        "Bitwise-OR of the masks",
        "Initialize distance",
        "Finding contours in mask image",
        "Conditions that have to be satisfied for valid 'STOP' sign",
        "Draw rectangle over 'STOP' sign",
        "Calculate distance to 'STOP' sign"
    ],
    "docstrings": [
        "'''\n    :param img: image in BGR color space\n    :return:\n        dist - distance to traffic light\n        img - image with detected traffic light\n    '''",
        "'''\n    :param width_in_pix: width of object in image\n    :return: distance to traffic light\n    '''"
    ],
    "functions": [
        "detect",
        "distance",
        "get_focal_length"
    ],
    "classes": []
}