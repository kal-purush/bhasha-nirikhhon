{
    "identifiers": [
        "preact",
        "_getWidgetScriptTag",
        "scripts",
        "scripts",
        "_getTagContent",
        "tag",
        "tag",
        "e",
        "render",
        "Widget",
        "_getWidgetScriptTag",
        "habitatNode",
        "widgetScriptTag",
        "preact",
        "preact",
        "Widget",
        "habitatNode",
        "root",
        "tag",
        "tag",
        "SCRIPT_ATTR",
        "_getTagContent",
        "tag",
        "config",
        "config",
        "config",
        "habitatNode",
        "preact",
        "preact",
        "Widget",
        "tag",
        "root",
        "_getWidgetScriptTag",
        "_getTagContent",
        "render"
    ],
    "literals": [
        "'preact'",
        "'widget/config'",
        "'script'",
        "\"interactive\"",
        "\"complete\"",
        "'script[type]'",
        "'type'"
    ],
    "variables": [
        "SCRIPT_ATTR",
        "_getWidgetScriptTag",
        "scripts",
        "_getTagContent",
        "render",
        "root",
        "habitatNode",
        "widgetScriptTag",
        "config"
    ],
    "comments": [
        "default <script> `type` attribute for cloned widgets",
        "DOM element where main widget going to be rendered",
        "this has to be outside ready state chage",
        "other than that we will not be able to know which script is getting executed",
        "render main widget",
        "check for clones"
    ],
    "docstrings": [
        "* [_getWidgetScriptTag internal widget to provide the currently executed script]\n * @param  {document} document [Browser document object]\n * @return {HTMLElement}     [script Element]",
        "* [_getTagContent internal function gets the content of script tag]\n * @param  {HTMLElement} tag [script tag]\n * @return {Object}     [Valid JavaScript Object]",
        "* [render the same Preact render function with some helpers]\n * @param  {[Function / Componenr]} Widget [Preact component]"
    ],
    "functions": [],
    "classes": []
}