{
    "identifiers": [
        "_",
        "async",
        "fs",
        "path",
        "chai",
        "chai",
        "Zenefits",
        "nock",
        "require",
        "client",
        "Zenefits",
        "require",
        "nockBack",
        "__dirname",
        "nockBack",
        "client",
        "require",
        "describe",
        "before",
        "hookBefore",
        "after",
        "hookAfter",
        "describe",
        "it",
        "done",
        "require",
        "require",
        "client",
        "payload",
        "headers",
        "err",
        "p",
        "expect",
        "err",
        "expect",
        "p",
        "payload",
        "done",
        "it",
        "done",
        "require",
        "client",
        "payload",
        "headers",
        "err",
        "p",
        "expect",
        "err",
        "expect",
        "p",
        "expect",
        "err",
        "payload",
        "done"
    ],
    "literals": [
        "\"lodash\"",
        "\"async\"",
        "\"fs\"",
        "\"path\"",
        "\"chai\"",
        "\"../index\"",
        "\"nock\"",
        "\"nock\"",
        "\"./testCreds.json\"",
        "\"/nockFixtures\"",
        "\"record\"",
        "'./sampleData/testEventCreds.json'",
        "\"Events\"",
        "\"authentication\"",
        "\"should authenticate an incoming Zenefits event\"",
        "'./sampleData/testEventPayload.json'",
        "'./sampleData/testEventHeaders.json'",
        "\"should reject an incoming Zenefits event with no signature\"",
        "'./sampleData/testEventPayload.json'",
        "\"UNAUTHORIZED EVENT\""
    ],
    "variables": [
        "expect",
        "client",
        "nockBack",
        "hookBefore",
        "hookAfter",
        "payload",
        "headers",
        "payload",
        "headers"
    ],
    "comments": [
        "<reference types=\"async\" />",
        "<reference types=\"nock\" />",
        "<reference types=\"chai\" />",
        "<reference types=\"mocha\" />",
        "<reference types=\"lodash\" />",
        "<reference path=\"../index.d.ts\" />",
        "if (process.env.CIRCLECI) {",
        "} else {",
        "client = new Zenefits(require(\"./testCreds.json\"));",
        "}"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}