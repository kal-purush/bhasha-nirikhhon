{
    "identifiers": [
        "sys",
        "time",
        "time",
        "arrayfire",
        "af",
        "numpy",
        "np",
        "scipy",
        "sparse",
        "sp",
        "scipy",
        "sparse",
        "linalg",
        "A",
        "np",
        "asarray",
        "A",
        "to_list",
        "dtype",
        "np",
        "float32",
        "A",
        "af",
        "sparse",
        "create_sparse_from_dense",
        "A",
        "spA",
        "fmt",
        "np",
        "asarray",
        "af",
        "sparse",
        "sparse_get_values",
        "spA",
        "to_list",
        "dtype",
        "np",
        "float32",
        "np",
        "asarray",
        "af",
        "sparse",
        "sparse_get_row_idx",
        "spA",
        "to_list",
        "dtype",
        "np",
        "np",
        "asarray",
        "af",
        "sparse",
        "sparse_get_col_idx",
        "spA",
        "to_list",
        "dtype",
        "np",
        "sp",
        "csr_matrix",
        "vals",
        "cols",
        "rows",
        "dtype",
        "np",
        "float32",
        "n",
        "sparsity",
        "af",
        "randu",
        "n",
        "n",
        "dtype",
        "af",
        "Dtype",
        "f32",
        "af",
        "floor",
        "T",
        "A",
        "A",
        "sparsity",
        "A",
        "T",
        "A",
        "n",
        "af",
        "identity",
        "n",
        "n",
        "dtype",
        "af",
        "Dtype",
        "f32",
        "af",
        "randu",
        "n",
        "dtype",
        "af",
        "Dtype",
        "f32",
        "af",
        "matmul",
        "A",
        "x0",
        "A",
        "b",
        "x0",
        "A",
        "Asp",
        "A",
        "dims",
        "af",
        "sum",
        "A",
        "m",
        "n",
        "nnz",
        "n",
        "A",
        "b",
        "x0",
        "maxiter",
        "af",
        "constant",
        "b",
        "dims",
        "dtype",
        "af",
        "Dtype",
        "f32",
        "b",
        "af",
        "matmul",
        "A",
        "x",
        "r",
        "i",
        "maxiter",
        "af",
        "matmul",
        "A",
        "p",
        "af",
        "dot",
        "r",
        "r",
        "af",
        "dot",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "r",
        "af",
        "tile",
        "alpha",
        "Ap",
        "dims",
        "Ap",
        "x",
        "af",
        "tile",
        "alpha",
        "Ap",
        "dims",
        "p",
        "af",
        "dot",
        "r",
        "r",
        "beta_num",
        "alpha_num",
        "r",
        "af",
        "tile",
        "beta",
        "p",
        "dims",
        "p",
        "x0",
        "x",
        "x",
        "af",
        "dot",
        "res",
        "res",
        "A",
        "b",
        "x0",
        "maxiter",
        "np",
        "zeros",
        "len",
        "b",
        "dtype",
        "np",
        "float32",
        "b",
        "np",
        "dot",
        "A",
        "x",
        "r",
        "copy",
        "i",
        "maxiter",
        "np",
        "dot",
        "A",
        "p",
        "np",
        "dot",
        "r",
        "r",
        "np",
        "dot",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "r",
        "alpha",
        "Ap",
        "x",
        "alpha",
        "p",
        "np",
        "dot",
        "r",
        "r",
        "beta_num",
        "alpha_num",
        "r",
        "beta",
        "p",
        "x0",
        "x",
        "x",
        "np",
        "dot",
        "res",
        "res",
        "A",
        "b",
        "x0",
        "maxiter",
        "np",
        "zeros",
        "len",
        "b",
        "dtype",
        "np",
        "float32",
        "b",
        "A",
        "x",
        "r",
        "copy",
        "i",
        "maxiter",
        "A",
        "p",
        "np",
        "dot",
        "r",
        "r",
        "np",
        "dot",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "r",
        "alpha",
        "Ap",
        "x",
        "alpha",
        "p",
        "np",
        "dot",
        "r",
        "r",
        "beta_num",
        "alpha_num",
        "r",
        "beta",
        "p",
        "x0",
        "x",
        "x",
        "np",
        "dot",
        "res",
        "res",
        "A",
        "b",
        "x0",
        "maxiter",
        "np",
        "zeros",
        "len",
        "b",
        "dtype",
        "np",
        "float32",
        "linalg",
        "cg",
        "A",
        "b",
        "x",
        "tol",
        "maxiter",
        "maxiter",
        "x0",
        "x",
        "x",
        "np",
        "dot",
        "res",
        "res",
        "calc",
        "iters",
        "args",
        "time",
        "i",
        "iters",
        "calc",
        "args",
        "time",
        "t0",
        "dt",
        "iters",
        "setup_input",
        "to_sparse",
        "A",
        "calc_arrayfire",
        "A",
        "b",
        "x0",
        "calc_arrayfire",
        "Asp",
        "b",
        "x0",
        "af",
        "sum",
        "af",
        "abs",
        "x1",
        "x2",
        "x2",
        "ValueError",
        "np",
        "to_numpy",
        "A",
        "to_numpy",
        "b",
        "to_numpy",
        "x0",
        "calc_numpy",
        "An",
        "bn",
        "x0n",
        "np",
        "allclose",
        "x3",
        "x1",
        "to_list",
        "ValueError",
        "sp",
        "to_scipy_sparse",
        "Asp",
        "calc_scipy_sparse",
        "Asc",
        "bn",
        "x0n",
        "np",
        "allclose",
        "x4",
        "x1",
        "to_list",
        "ValueError",
        "calc_scipy_sparse_linalg_cg",
        "Asc",
        "bn",
        "x0n",
        "np",
        "allclose",
        "x5",
        "x1",
        "to_list",
        "ValueError",
        "n",
        "sparsity",
        "maxiter",
        "iters",
        "n",
        "setup_input",
        "n",
        "sparsity",
        "to_sparse",
        "A",
        "input_info",
        "A",
        "Asp",
        "n",
        "timeit",
        "calc_arrayfire",
        "iters",
        "args",
        "A",
        "b",
        "x0",
        "maxiter",
        "t1",
        "timeit",
        "calc_arrayfire",
        "iters",
        "args",
        "Asp",
        "b",
        "x0",
        "maxiter",
        "t2",
        "np",
        "to_numpy",
        "A",
        "to_numpy",
        "b",
        "to_numpy",
        "x0",
        "timeit",
        "calc_numpy",
        "iters",
        "args",
        "An",
        "bn",
        "x0n",
        "maxiter",
        "t3",
        "sp",
        "to_scipy_sparse",
        "Asp",
        "timeit",
        "calc_scipy_sparse",
        "iters",
        "args",
        "Asc",
        "bn",
        "x0n",
        "maxiter",
        "t4",
        "timeit",
        "calc_scipy_sparse_linalg_cg",
        "iters",
        "args",
        "Asc",
        "bn",
        "x0n",
        "maxiter",
        "t5",
        "len",
        "sys",
        "argv",
        "af",
        "set_device",
        "sys",
        "argv",
        "af",
        "info",
        "test",
        "n",
        "bench",
        "n"
    ],
    "literals": [
        "'csr'",
        "\"    matrix size:                %i x %i\"",
        "\"    matrix sparsity:            %2.2f %%\"",
        "\"    dense matrix memory usage:  \"",
        "\"    sparse matrix memory usage: \"",
        "\"\\nTesting benchmark functions...\"",
        "\"arrayfire test failed\"",
        "\"numpy test failed\"",
        "\"scipy.sparse test failed\"",
        "\"scipy.sparse.linalg.cg test failed\"",
        "\"    all tests passed...\"",
        "\"\\nGenerating benchmark data for n = %i ...\"",
        "\"Benchmarking CG solver for n = %i ...\"",
        "\"    arrayfire - dense:            %f ms\"",
        "\"    arrayfire - sparse:           %f ms\"",
        "\"    numpy     - dense:            %f ms\"",
        "\"    scipy     - sparse:           %f ms\"",
        "\"    scipy     - sparse.linalg.cg: %f ms\"",
        "\"__main__\""
    ],
    "variables": [
        "np",
        "sp",
        "vals",
        "rows",
        "cols",
        "T",
        "A",
        "A",
        "A",
        "x0",
        "b",
        "m",
        "n",
        "nnz",
        "x",
        "r",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "alpha",
        "beta_num",
        "beta",
        "p",
        "res",
        "x",
        "r",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "alpha",
        "beta_num",
        "beta",
        "p",
        "res",
        "x",
        "r",
        "p",
        "Ap",
        "alpha_num",
        "alpha_den",
        "alpha",
        "beta_num",
        "beta",
        "p",
        "res",
        "x",
        "x",
        "_",
        "res",
        "t0",
        "dt",
        "A",
        "b",
        "x0",
        "Asp",
        "x1",
        "_",
        "x2",
        "_",
        "An",
        "bn",
        "x0n",
        "x3",
        "_",
        "Asc",
        "x4",
        "_",
        "x5",
        "_",
        "A",
        "b",
        "x0",
        "Asp",
        "t1",
        "t2",
        "An",
        "bn",
        "x0n",
        "t3",
        "Asc",
        "t4",
        "t5"
    ],
    "comments": [
        "!/usr/bin/python",
        "",
        "Copyright (c) 2015, ArrayFire",
        "All rights reserved.",
        "",
        "This file is distributed under 3-clause BSD license.",
        "The complete license agreement can be obtained at:",
        "http://arrayfire.com/licenses/BSD-3-Clause",
        "",
        "printing",
        "nnz = af.sum((A != 0))",
        "print \"Sparsity of A: %2.2f %%\" %(100*nnz/n**2,)",
        "ms",
        "dense A",
        "generate data",
        "dense A",
        "sparse A",
        "make benchmarks",
        "af.set_backend('cpu', unsafe=True)"
    ],
    "docstrings": [],
    "functions": [
        "to_numpy",
        "to_sparse",
        "to_scipy_sparse",
        "setup_input",
        "input_info",
        "calc_arrayfire",
        "calc_numpy",
        "calc_scipy_sparse",
        "calc_scipy_sparse_linalg_cg",
        "timeit",
        "test",
        "bench"
    ],
    "classes": []
}