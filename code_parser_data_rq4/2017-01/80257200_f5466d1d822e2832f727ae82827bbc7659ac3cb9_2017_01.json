{
    "identifiers": [
        "collections",
        "namedtuple",
        "collections",
        "OrderedDict",
        "pprint",
        "pprint",
        "os",
        "sys",
        "binascii",
        "argparse",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "file",
        "help",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "add_argument",
        "file",
        "help",
        "parser",
        "parse_args",
        "args",
        "mode",
        "ctypes",
        "c_ushort",
        "modbus_flag",
        "len",
        "crc16_tab",
        "init_crc16",
        "modbus_flag",
        "input_data",
        "isinstance",
        "input_data",
        "isinstance",
        "input_data",
        "is_string",
        "is_bytes",
        "mdflag",
        "c",
        "input_data",
        "ord",
        "c",
        "is_string",
        "c",
        "crc_value",
        "d",
        "crc_value",
        "rotated",
        "crc16_tab",
        "tmp",
        "crc_value",
        "e",
        "format",
        "e",
        "i",
        "c_ushort",
        "i",
        "value",
        "j",
        "crc",
        "c_ushort",
        "crc",
        "value",
        "crc16_constant",
        "c_ushort",
        "crc",
        "value",
        "crc16_tab",
        "append",
        "crc",
        "fileobject",
        "fileobject",
        "tell",
        "fileobject",
        "seek",
        "fileobject",
        "tell",
        "fileobject",
        "seek",
        "current",
        "size",
        "f_in",
        "f_out",
        "caddr",
        "taddr",
        "f_in",
        "read",
        "taddr",
        "caddr",
        "f_out",
        "write",
        "chunk",
        "f_out",
        "caddr",
        "taddr",
        "f_out",
        "write",
        "taddr",
        "caddr",
        "args",
        "file",
        "name",
        "args",
        "file",
        "close",
        "args",
        "read",
        "fname",
        "fname",
        "open",
        "fname",
        "getSize",
        "file",
        "file",
        "close",
        "open",
        "fname",
        "file",
        "read",
        "CRC16",
        "modbus_flag",
        "calculate",
        "hdr",
        "args",
        "verbose",
        "format",
        "hdrCrc",
        "file",
        "close",
        "args",
        "arm7",
        "args",
        "arm7",
        "name",
        "args",
        "arm7",
        "close",
        "open",
        "arm7Fname",
        "getSize",
        "arm7File",
        "arm7File",
        "read",
        "arm7FileSize",
        "arm7File",
        "close",
        "open",
        "fname",
        "filer",
        "read",
        "namedtuple",
        "SrlHeader",
        "_make",
        "unpack_from",
        "srlHeaderFormat",
        "data",
        "args",
        "verbose",
        "hex",
        "srlHeader",
        "headerCrc",
        "hex",
        "srlHeader",
        "secureAreaCrc",
        "open",
        "fname",
        "file",
        "read",
        "file",
        "read",
        "CRC16",
        "modbus_flag",
        "calculate",
        "sec",
        "args",
        "verbose",
        "format",
        "secCrc",
        "file",
        "close",
        "srlHeader",
        "arm7EntryAddress",
        "args",
        "read",
        "args",
        "arm7",
        "srlHeader",
        "_replace",
        "secureCardControlRegSettings",
        "normalCardControlRegSettings",
        "internalFlag",
        "arm9RomOffset",
        "srlHeader",
        "arm9RomOffset",
        "arm7RomOffset",
        "srlHeader",
        "arm7RomOffset",
        "fntOffset",
        "srlHeader",
        "fntOffset",
        "fatOffset",
        "srlHeader",
        "fatOffset",
        "icon_bannerOffset",
        "srlHeader",
        "icon_bannerOffset",
        "ntrRomSize",
        "srlHeader",
        "ntrRomSize",
        "headerSize",
        "nintendoLogo",
        "nintendoLogoCrc",
        "secureAreaCrc",
        "secCrc",
        "reserved1",
        "args",
        "arm7",
        "args",
        "arm7EntryAddress",
        "srlHeaderPatched",
        "_replace",
        "arm7RamAddress",
        "args",
        "arm7EntryAddress",
        "arm7EntryAddress",
        "args",
        "arm7EntryAddress",
        "arm7Size",
        "arm7FileSize",
        "ntrRomSize",
        "srlHeaderPatched",
        "ntrRomSize",
        "srlHeader",
        "arm7Size",
        "arm7FileSize",
        "fntOffset",
        "srlHeaderPatched",
        "fntOffset",
        "srlHeader",
        "arm7Size",
        "arm7FileSize",
        "fatOffset",
        "srlHeaderPatched",
        "fatOffset",
        "srlHeader",
        "arm7Size",
        "arm7FileSize",
        "icon_bannerOffset",
        "srlHeaderPatched",
        "icon_bannerOffset",
        "srlHeader",
        "arm7Size",
        "arm7FileSize",
        "deviceCapacity",
        "srlHeader",
        "deviceCapacity",
        "args",
        "mode",
        "srlHeaderPatched",
        "_replace",
        "deviceCapacity",
        "srlHeaderPatched",
        "deviceCapacity",
        "dsiflags",
        "unitCode",
        "args",
        "title",
        "srlHeaderPatched",
        "_replace",
        "gameTitle",
        "args",
        "title",
        "args",
        "code",
        "srlHeaderPatched",
        "_replace",
        "gameCode",
        "args",
        "code",
        "args",
        "maker",
        "srlHeaderPatched",
        "_replace",
        "makerCode",
        "args",
        "maker",
        "pack",
        "srlHeaderFormat",
        "srlHeaderPatched",
        "_asdict",
        "values",
        "CRC16",
        "modbus_flag",
        "calculate",
        "data1",
        "srlHeaderPatched",
        "_replace",
        "headerCrc",
        "newHdrCrc",
        "args",
        "verbose",
        "hex",
        "newHdrCrc",
        "args",
        "read",
        "args",
        "verbose",
        "pprint",
        "srlHeaderPatched",
        "_asdict",
        "pprint",
        "srlHeader",
        "_asdict",
        "pack",
        "srlHeaderFormat",
        "srlHeaderPatched",
        "_asdict",
        "values",
        "namedtuple",
        "srlHeader",
        "headerSize",
        "SrlTwlExtHeader",
        "_make",
        "unpack_from",
        "srlTwlExtHeaderFormat",
        "filer",
        "read",
        "SrlTwlExtHeader",
        "_make",
        "unpack_from",
        "srlTwlExtHeaderFormat",
        "data",
        "args",
        "read",
        "srlTwlExtHeader",
        "_replace",
        "title_id",
        "srlHeaderPatched",
        "gameCode",
        "regionFlags",
        "iconSize",
        "unknown1",
        "reserved_flags",
        "args",
        "mode",
        "srlHeaderPatched",
        "arm7RomOffset",
        "srlHeaderPatched",
        "arm9RomOffset",
        "srlHeaderPatched",
        "arm7Size",
        "srlHeaderPatched",
        "arm9Size",
        "args",
        "arm9i",
        "args",
        "arm9i",
        "name",
        "getSize",
        "args",
        "arm9i",
        "srlHeaderPatched",
        "ntrRomSize",
        "args",
        "verbose",
        "hex",
        "arm9isize",
        "hex",
        "srlHeaderPatched",
        "ntrRomSize",
        "args",
        "arm9i",
        "close",
        "arm9isize",
        "args",
        "arm7i",
        "args",
        "arm7i",
        "name",
        "getSize",
        "args",
        "arm7i",
        "srlHeaderPatched",
        "ntrRomSize",
        "arm9isize",
        "args",
        "verbose",
        "hex",
        "arm7isize",
        "hex",
        "srlHeaderPatched",
        "ntrRomSize",
        "arm9isize",
        "args",
        "arm7i",
        "close",
        "arm9isize",
        "arm7isize",
        "srlTwlExtHeader",
        "_replace",
        "MBK_1_5_Settings",
        "MBK_6_8_Settings_ARM7",
        "MBK_6_8_Settings_ARM9",
        "accessControl",
        "arm7ScfgExtMask",
        "reserved_flags",
        "arm7iLoadAddress",
        "arm7iRomOffset",
        "arm7iRomOffset",
        "arm7iSize",
        "arm7isize",
        "arm9iLoadAddress",
        "arm9iRomOffset",
        "arm9iRomOffset",
        "arm9iSize",
        "arm9isize",
        "global_MBK_9_Setting",
        "iconSize",
        "pubSaveDataSize",
        "regionFlags",
        "title_id",
        "srlHeaderPatched",
        "gameCode",
        "twlRomSize",
        "srlHeaderPatched",
        "ntrRomSize",
        "totaldsisize",
        "unknown1",
        "unknown2",
        "parentalControl",
        "args",
        "mode",
        "srlTwlExtHeader",
        "_replace",
        "arm7iLoadAddress",
        "srlHeaderPatched",
        "arm7EntryAddress",
        "arm9iLoadAddress",
        "srlHeaderPatched",
        "arm9EntryAddress",
        "args",
        "verbose",
        "args",
        "read",
        "pprint",
        "srlTwlExtHeader",
        "_asdict",
        "pack",
        "srlTwlExtHeaderFormat",
        "srlTwlExtHeader",
        "_asdict",
        "values",
        "namedtuple",
        "srlHeader",
        "headerSize",
        "SrlSignedHeader",
        "_make",
        "unpack_from",
        "srlSignedHeaderFormat",
        "filer",
        "read",
        "SrlSignedHeader",
        "_make",
        "unpack_from",
        "srlSignedHeaderFormat",
        "data",
        "args",
        "read",
        "srlSignedHeader",
        "_replace",
        "arm7Sha1Hmac",
        "arm9WithSecAreaSha1Hmac",
        "bannerSha1Hmac",
        "signature",
        "args",
        "mode",
        "srlSignedHeader",
        "_replace",
        "arm7Sha1Hmac",
        "arm7iSha1Hmac",
        "arm9Sha1Hmac",
        "arm9WithSecAreaSha1Hmac",
        "arm9iSha1Hmac",
        "bannerSha1Hmac",
        "digestMasterSha1Hmac",
        "signature",
        "args",
        "verbose",
        "args",
        "read",
        "pprint",
        "srlSignedHeader",
        "_asdict",
        "pack",
        "srlSignedHeaderFormat",
        "srlSignedHeader",
        "_asdict",
        "values",
        "namedtuple",
        "open",
        "fname",
        "srlHeader",
        "arm9RomOffset",
        "srlHeader",
        "arm9Size",
        "file",
        "read",
        "arm9FooterAddr",
        "file",
        "read",
        "ARM9Footer",
        "_make",
        "unpack_from",
        "ARM9FooterFormat",
        "data",
        "args",
        "verbose",
        "hex",
        "arm9FooterAddr",
        "arm9Footer",
        "nitrocode",
        "args",
        "verbose",
        "args",
        "read",
        "hex",
        "arm9Footer",
        "nitrocode",
        "hex",
        "arm9Footer",
        "versionInfo",
        "hex",
        "arm9Footer",
        "reserved",
        "args",
        "verbose",
        "args",
        "read",
        "arm9Footer",
        "_replace",
        "nitrocode",
        "versionInfo",
        "reserved",
        "pack",
        "ARM9FooterFormat",
        "arm9FooterPatched",
        "_asdict",
        "values",
        "file",
        "close",
        "args",
        "read",
        "args",
        "open",
        "args",
        "open",
        "fname",
        "filew",
        "write",
        "data1",
        "filew",
        "write",
        "data2",
        "filew",
        "write",
        "data3",
        "filew",
        "write",
        "writeBlankuntilAddress",
        "filew",
        "arm9Footer",
        "nitrocode",
        "skipUntilAddress",
        "filer",
        "filew",
        "caddr",
        "arm9FooterAddr",
        "filew",
        "write",
        "data4",
        "filer",
        "read",
        "arm9FooterAddr",
        "args",
        "arm7",
        "skipUntilAddress",
        "filer",
        "filew",
        "caddr",
        "srlHeader",
        "arm7RomOffset",
        "filew",
        "write",
        "dataArm7",
        "filer",
        "read",
        "srlHeader",
        "arm7Size",
        "srlHeader",
        "arm7RomOffset",
        "srlHeader",
        "arm7Size",
        "skipUntilAddress",
        "filer",
        "filew",
        "caddr",
        "srlHeader",
        "icon_bannerOffset",
        "filer",
        "read",
        "srlHeader",
        "icon_bannerOffset",
        "skipUntilAddress",
        "filer",
        "filew",
        "caddr",
        "srlHeader",
        "ntrRomSize",
        "args",
        "mode",
        "arm9iname",
        "open",
        "arm9iname",
        "skipUntilAddress",
        "arm9ifile",
        "filew",
        "arm9isize",
        "arm9ifile",
        "close",
        "arm7iname",
        "open",
        "arm7iname",
        "skipUntilAddress",
        "arm7ifile",
        "filew",
        "arm7isize",
        "arm7ifile",
        "close",
        "filew",
        "close",
        "filer",
        "close",
        "args",
        "os",
        "path",
        "exists",
        "fname",
        "os",
        "remove",
        "fname",
        "os",
        "rename",
        "fname",
        "fname",
        "os",
        "rename",
        "fname",
        "fname"
    ],
    "literals": [
        "'Patch an nds in order to be ready cia conversion via make_cia --srl=.'",
        "'file'",
        "'file.nds'",
        "'nds file to patch'",
        "'--verbose'",
        "'verbose mode'",
        "\"store_true\"",
        "'--out'",
        "'output file [optionnal]'",
        "'--read'",
        "'print only the header content, do not patch'",
        "\"store_true\"",
        "'--extract'",
        "'extract the content of the rom : header.bin,arm9.bin,arm7.bin,icon.bin,arm9i.bin,arm7i.bin, do not patch'",
        "\"store_true\"",
        "'--title'",
        "'Game title'",
        "'--code'",
        "'Game code'",
        "'--maker'",
        "'Maker code'",
        "'--mode'",
        "'target mode, default mode is ds [ds|dsi|dsinogba]'",
        "'--arm7'",
        "'swap the ds arm7 binary by the one provided'",
        "'--arm7EntryAddress'",
        "'arm7 ram address of the binary provided'",
        "'--arm9i'",
        "'add a dsi arm9i binary to the file, not needed for homebrew so far'",
        "'--arm7i'",
        "'add a dsi arm7i binary to the file, not needed for homebrew so far'",
        "'--digest-block'",
        "'dsi digest block table'",
        "'--digest-sector'",
        "'dsi digest sector table'",
        "\"ds\"",
        "\"Please provide a string or a byte sequence \"",
        "\"as argument for calculation.\"",
        "\"EXCEPTION(calculate): {}\"",
        "\"\\x00\"",
        "\"Patching file : \"",
        "\"Reading header of file : \"",
        "'rb'",
        "'rb'",
        "\"{:10s} {:20X}\"",
        "'HDR CRC-16 ModBus'",
        "'rb'",
        "'rb'",
        "'SrlHeader'",
        "\"gameTitle \"",
        "\"gameCode \"",
        "\"makerCode \"",
        "\"unitCode \"",
        "\"encryptionSeedSelect \"",
        "\"deviceCapacity \"",
        "\"reserved0 \"",
        "\"dsiflags \"",
        "\"romVersion \"",
        "\"internalFlag \"",
        "\"arm9RomOffset \"",
        "\"arm9EntryAddress \"",
        "\"arm9RamAddress \"",
        "\"arm9Size \"",
        "\"arm7RomOffset \"",
        "\"arm7EntryAddress \"",
        "\"arm7RamAddress \"",
        "\"arm7Size \"",
        "\"fntOffset \"",
        "\"fntSize \"",
        "\"fatOffset \"",
        "\"fatSize \"",
        "\"arm9OverlayOffset \"",
        "\"arm9OverlaySize \"",
        "\"arm7OverlayOffset \"",
        "\"arm7OverlaySize \"",
        "\"normalCardControlRegSettings \"",
        "\"secureCardControlRegSettings \"",
        "\"icon_bannerOffset \"",
        "\"secureAreaCrc \"",
        "\"secure_transfer_timeout \"",
        "\"arm9Autoload \"",
        "\"arm7Autoload \"",
        "\"secureDisable \"",
        "\"ntrRomSize \"",
        "\"headerSize \"",
        "\"reserved1 \"",
        "\"nintendoLogo \"",
        "\"nintendoLogoCrc \"",
        "\"headerCrc \"",
        "\"debugReserved \"",
        "'<12s4s2scbb7s2sbcIIIIIIIIIIIIIIIIIIIHHII8sII56s156s2sH32s'",
        "\"origin header crc \"",
        "\"origin secure crc \"",
        "'rb'",
        "\"{:10s} {:20X}\"",
        "'SEC CRC-16 ModBus'",
        "\"WARNING: .nds arm7EntryAddress greater than 0x2400000 will not boot as cia\"",
        "\"you need to recompile or swap the arm7 binary with a precompiled one with --arm7 and --arm7EntryAddress\"",
        "'\\x00'",
        "\"$\\xff\\xaeQi\\x9a\\xa2!=\\x84\\x82\\n\\x84\\xe4\\t\\xad\\x11$\\x8b\\x98\\xc0\\x81\\x7f!\\xa3R\\xbe\\x19\\x93\\t\\xce \\x10FJJ\\xf8'1\\xecX\\xc7\\xe83\\x82\\xe3\\xce\\xbf\\x85\\xf4\\xdf\\x94\\xceK\\t\\xc1\\x94V\\x8a\\xc0\\x13r\\xa7\\xfc\\x9f\\x84Ms\\xa3\\xca\\x9aaX\\x97\\xa3'\\xfc\\x03\\x98v#\\x1d\\xc7a\\x03\\x04\\xaeV\\xbf8\\x84\\x00@\\xa7\\x0e\\xfd\\xffR\\xfe\\x03o\\x950\\xf1\\x97\\xfb\\xc0\\x85`\\xd6\\x80%\\xa9c\\xbe\\x03\\x01N8\\xe2\\xf9\\xa24\\xff\\xbb>\\x03Dx\\x00\\x90\\xcb\\x88\\x11:\\x94e\\xc0|c\\x87\\xf0<\\xaf\\xd6%\\xe4\\x8b8\\n\\xacr!\\xd4\\xf8\\x07\"",
        "'V\\xcf'",
        "'\\x00'",
        "\"WARNING : you may need to provide the ARM7 binary entry address via --arm7EntryAddress, default value 0x2380000 used\"",
        "\"0x2380000\"",
        "\"dsi\"",
        "'\\x01\\x00'",
        "'\\x03'",
        "\"new header crc \"",
        "'SrlTwlExtHeader'",
        "\"MBK_1_5_Settings \"",
        "\"MBK_6_8_Settings_ARM9 \"",
        "\"MBK_6_8_Settings_ARM7 \"",
        "\"global_MBK_9_Setting \"",
        "\"regionFlags \"",
        "\"accessControl \"",
        "\"arm7ScfgExtMask \"",
        "\"reserved_flags \"",
        "\"arm9iRomOffset \"",
        "\"reserved2 \"",
        "\"arm9iLoadAddress \"",
        "\"arm9iSize \"",
        "\"arm7iRomOffset \"",
        "\"struct_param_baseAddress \"",
        "\"arm7iLoadAddress \"",
        "\"arm7iSize \"",
        "\"digest_ntrRegionOffset \"",
        "\"digest_ntrRegionSize \"",
        "\"digest_twlRegionOffset \"",
        "\"digest_twlRegionSize \"",
        "\"digestSectorHashtableOffset \"",
        "\"digestSectorHashtableSize \"",
        "\"digest_blockHashtableOffset \"",
        "\"digest_blockHashtableSize \"",
        "\"digestSectorSize \"",
        "\"digest_blockSectorcount \"",
        "\"iconSize \"",
        "\"unknown1 \"",
        "\"twlRomSize \"",
        "\"unknown2 \"",
        "\"modcryptArea1Offset \"",
        "\"modcryptArea1Size \"",
        "\"modcryptArea2Offset \"",
        "\"modcryptArea2Size \"",
        "\"title_id \"",
        "\"pubSaveDataSize \"",
        "\"privSaveDataSize \"",
        "\"reserved4 \"",
        "\"parentalControl \"",
        "\"<20s12s12s4s4sIIII4sIIIIIIIIIIIIIIIII4sI12sIIII8sII176s16s\"",
        "\"\\x00\"",
        "\"\\x04\\x00\\x03\\x00\"",
        "'\\xff\\xff\\xff\\xff'",
        "'\\x00\\x00\\x01\\x00'",
        "\"dsi\"",
        "\"arm9isize : \"",
        "\"arm9ioffset : \"",
        "\"arm7isize : \"",
        "\"arm9ioffset : \"",
        "'\\x81\\x85\\x89\\x8d\\x80\\x84\\x88\\x8c\\x90\\x94\\x98\\x9c\\x80\\x84\\x88\\x8c\\x90\\x94\\x98\\x9c'",
        "'\\xc07\\x00\\x08@7\\xc0\\x07\\x007@\\x07'",
        "'\\x00\\x00\\x00\\x00@7\\xc0\\x07\\x007@\\x07'",
        "'\\x0f\\x00\\x00\\x03'",
        "'\\xff\\xff\\xff\\xff'",
        "\"\\x04\\x00\\x03\\x00\"",
        "'\\x00\\x00\\x01\\x00'",
        "'\\x00\\x00\\x00\\x00|\\x0f\\x00\\x00 \\x05\\x00\\x00'",
        "'\\x80'",
        "\"dsinogba\"",
        "'SrlSignedHeader'",
        "\"arm9WithSecAreaSha1Hmac \"",
        "\"arm7Sha1Hmac \"",
        "\"digestMasterSha1Hmac \"",
        "\"bannerSha1Hmac \"",
        "\"arm9iSha1Hmac \"",
        "\"arm7iSha1Hmac \"",
        "\"reserved5 \"",
        "\"arm9Sha1Hmac \"",
        "\"reserved6 \"",
        "\"reserved7 \"",
        "\"signature \"",
        "\"<20s20s20s20s20s20s40s20s2636s384s128s\"",
        "\"\\x00\"",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "\"dsi\"",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'\\xff'",
        "'ARM9Footer'",
        "\"nitrocode \"",
        "\"versionInfo \"",
        "\"reserved \"",
        "\"<III\"",
        "'rb'",
        "\"footer addr \"",
        "\"ARM9 footer found.\"",
        "\"no patch needed\"",
        "\"nitrocode \"",
        "\"versionInfo \"",
        "\"reserved \"",
        "\"\\n\"",
        "\"ARM9 footer not found.\\n\"",
        "\"wb\"",
        "\".tmp\"",
        "\"wb\"",
        "'\\xff'",
        "\"dsi\"",
        "\"rb\"",
        "\"rb\"",
        "\".orig.nds\"",
        "\".orig.nds\"",
        "\".orig.nds\"",
        "\".tmp\"",
        "\"file patched\""
    ],
    "variables": [
        "parser",
        "args",
        "args",
        "mode",
        "crc16_tab",
        "crc16_constant",
        "mdflag",
        "is_string",
        "is_bytes",
        "crc_value",
        "d",
        "tmp",
        "rotated",
        "crc_value",
        "crc",
        "crc",
        "crc",
        "current",
        "size",
        "chunk",
        "fname",
        "file",
        "fsize",
        "file",
        "hdr",
        "hdrCrc",
        "arm7Fname",
        "arm7File",
        "arm7FileSize",
        "dataArm7",
        "filer",
        "data",
        "caddr",
        "SrlHeader",
        "srlHeaderFormat",
        "srlHeader",
        "file",
        "sec",
        "secCrc",
        "srlHeaderPatched",
        "args",
        "arm7EntryAddress",
        "srlHeaderPatched",
        "srlHeaderPatched",
        "srlHeaderPatched",
        "srlHeaderPatched",
        "srlHeaderPatched",
        "data1",
        "newHdrCrc",
        "srlHeaderPatched",
        "data1",
        "arm9isize",
        "arm7isize",
        "SrlTwlExtHeader",
        "srlTwlExtHeaderFormat",
        "srlTwlExtHeader",
        "data",
        "srlTwlExtHeader",
        "caddr",
        "srlTwlExtHeader",
        "arm7iRomOffset",
        "arm9iRomOffset",
        "arm7isize",
        "arm9isize",
        "totaldsisize",
        "arm7iname",
        "arm9iname",
        "arm9iname",
        "arm9isize",
        "arm9iRomOffset",
        "totaldsisize",
        "arm7iname",
        "arm7isize",
        "arm7iRomOffset",
        "totaldsisize",
        "srlTwlExtHeader",
        "srlTwlExtHeader",
        "data2",
        "SrlSignedHeader",
        "srlSignedHeaderFormat",
        "srlSignedHeader",
        "data",
        "srlSignedHeader",
        "caddr",
        "srlSignedHeader",
        "srlSignedHeader",
        "data3",
        "ARM9Footer",
        "ARM9FooterFormat",
        "file",
        "arm9FooterAddr",
        "data",
        "arm9Footer",
        "arm9FooterPatched",
        "data4",
        "filew",
        "filew",
        "caddr",
        "caddr",
        "caddr",
        "arm9ifile",
        "arm7ifile"
    ],
    "comments": [
        "-*- coding: utf8 -*-",
        "Patch an .nds (works with homebrew and ds demo only) to make it ready for make_cia",
        "",
        "2016-02-28, Ahezard",
        "",
        "inspired by",
        "Apache Thunder .nds edited files and comments",
        "https://github.com/Relys/Project_CTR/blob/master/makerom/srl.h",
        "https://dsibrew.org/wiki/DSi_Cartridge_Header",
        "if the header size of the input nds file is 0x200 (homebrew)",
        "the header size of the output nds file will be patched to 0x4000 (normal ds/dsi header), 0x3E00 offset",
        "Not yet implemented",
        "Not yet implemented",
        "Not yet implemented",
        "",
        "CRC16 MODULE",
        "",
        "includes CRC16 and CRC16 MODBUS",
        "",
        "from https://github.com/cristianav/PyCRC/blob/master/demo.py",
        "The CRC's are computed using polynomials. Here is the most used",
        "coefficient for CRC16",
        "40961",
        "initialize the precalculated tables",
        "move the cursor to the end of the file",
        "offset of 0x4600 created",
        "File size compute",
        "CRC header compute \"CRC-16 (Modbus)\"",
        "0x15E from https://github.com/devkitPro/ndstool/ ... source/header.cpp",
        "print \"origin header cr c\"+hdr[0x15E:0x15F]",
        "filew = open(fname+\".hdr\", \"wb\")",
        "filew.write(hdr);",
        "filew.close()",
        "DS Data 180 bytes",
        "SecureArea CRC compute \"CRC-16 (Modbus)\"",
        "0x15E from https://github.com/devkitPro/ndstool/ ... source/header.cpp",
        "Fix srlHeader",
        "better to recompile or swap the arm7 binary if this is needed",
        "arm7EntryAddress=\t\t\t\t0x2380000,",
        "arm7RamAddress=\t\t\t\t\t0x2380000,",
        "arm7Autoload=\t\t\t\t\t0x2380118,",
        "arm9EntryAddress=\t\t\t\t0x2000000,",
        "arm9RamAddress=\t\t\t\t\t0x2000000,",
        "arm9Autoload=\t\t\t\t\t0x2000A60,",
        "disable modcrypt but enable twl",
        "arm7Autoload=\t\t\t\t0,",
        "arm9Autoload=\t\t\t\t0,",
        "TWL Only Data 384 bytes",
        "usually 0x23C0 or 2112 in homebrew",
        "homebrew",
        "pprint(dict(srlTwlExtHeader._asdict()))",
        "Fix srlTwlExtHeader",
        "arm7ScfgExtMask= \t\t0x80044000,",
        "reserved_flags=\t\t0x01000000,",
        "Fix for no$gba 2.8d",
        "TWL and Signed NTR 3328 bytes",
        "homebrew",
        "pprint(dict(srlSignedHeader._asdict()))",
        "Fix srlSignedHeader",
        "ARM9 footer",
        "from https://github.com/devkitPro/ndstool/ ... source/header.cpp",
        "ARM9 footer size = 3*4",
        "0xDEC00621",
        "write the file",
        "patch ARM9 footer",
        "add dsi specific data",
        "dixit apache : Digest Table offset first, then sector table, then Arm9i, then arm7i.",
        "digest block/sector table are not needed for homebrew",
        "Not needed for homebrew so far"
    ],
    "docstrings": [
        "\"\"\"The algorithm uses tables with precalculated values\"\"\""
    ],
    "functions": [
        "calculate",
        "init_crc16",
        "getSize",
        "skipUntilAddress",
        "writeBlankuntilAddress"
    ],
    "classes": [
        "CRC16"
    ]
}