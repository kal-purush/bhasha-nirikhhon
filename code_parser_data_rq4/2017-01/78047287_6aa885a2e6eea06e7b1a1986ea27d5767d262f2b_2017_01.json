{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "os",
        "sys",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "IPython",
        "embed",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "sys",
        "path",
        "insert",
        "ROOT",
        "deuNet",
        "Dataset",
        "model",
        "tf",
        "reduce_mean",
        "tf",
        "nn",
        "sigmoid_cross_entropy_with_logits",
        "model",
        "outputs",
        "model",
        "tracables",
        "model",
        "tracables",
        "update",
        "loss",
        "model",
        "in_shape",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "in_shape",
        "deuNet",
        "BatchFlatten",
        "in_x",
        "tf",
        "variable_scope",
        "deuNet",
        "Dense",
        "encoding_dim1",
        "activation",
        "initializer",
        "name",
        "flat_x",
        "deuNet",
        "Dense",
        "encoding_dim2",
        "activation",
        "initializer",
        "name",
        "encoded",
        "deuNet",
        "Dense",
        "encoding_dim",
        "activation",
        "initializer",
        "name",
        "encoded",
        "tf",
        "variable_scope",
        "deuNet",
        "Dense",
        "encoding_dim2",
        "activation",
        "initializer",
        "name",
        "encoded",
        "deuNet",
        "Dense",
        "encoding_dim1",
        "activation",
        "initializer",
        "name",
        "decoded",
        "deuNet",
        "Dense",
        "activation",
        "initializer",
        "name",
        "decoded",
        "in_x",
        "decoded",
        "deuNet",
        "Model",
        "_inputs",
        "_outputs",
        "model",
        "tracables",
        "update",
        "flat_x",
        "make_loss",
        "model",
        "in_x",
        "encoded",
        "deuNet",
        "Model",
        "_inputs",
        "_outputs",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "encoding_dim",
        "name",
        "latent",
        "encoded",
        "deuNet",
        "Model",
        "_inputs",
        "_outputs",
        "model",
        "encoder_model",
        "decoder_model",
        "sess",
        "model",
        "data",
        "train_mode",
        "data",
        "num_examples",
        "model",
        "batch_size",
        "num_examples",
        "batch_size",
        "train_mode",
        "i",
        "total_batch",
        "train_mode",
        "data",
        "next_batch",
        "batch_size",
        "one_hot",
        "data",
        "next_batch",
        "batch_size",
        "one_hot",
        "full_batch",
        "model",
        "inputs",
        "batch_images",
        "model",
        "learning_rate",
        "model",
        "current_lr",
        "model",
        "tracables",
        "copy",
        "train_mode",
        "fetch_dict",
        "update",
        "model",
        "train_step",
        "deuNet",
        "tf_run_sess",
        "sess",
        "fetch_dict",
        "feed_dict",
        "avg_loss",
        "fetch_vals",
        "avg_loss",
        "total_batch",
        "avg_loss",
        "mnist",
        "model_builder",
        "input_dims",
        "model",
        "lr",
        "model",
        "trainable_variables",
        "values",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "shape",
        "tf",
        "train",
        "AdamOptimizer",
        "model",
        "learning_rate",
        "opt",
        "compute_gradients",
        "model",
        "tracables",
        "opt",
        "apply_gradients",
        "grads_and_vars",
        "tf",
        "global_variables_initializer",
        "tf",
        "Session",
        "sess",
        "run",
        "init",
        "epoch",
        "n_epochs",
        "process_epoch",
        "sess",
        "model",
        "mnist",
        "valid",
        "train_mode",
        "process_epoch",
        "sess",
        "model",
        "mnist",
        "train",
        "train_mode",
        "process_epoch",
        "sess",
        "model",
        "mnist",
        "test",
        "train_mode",
        "deuNet",
        "color_string",
        "format",
        "epoch",
        "eval_loss",
        "deuNet",
        "color_string",
        "format",
        "epoch",
        "train_loss",
        "deuNet",
        "color_string",
        "format",
        "epoch",
        "test_loss",
        "model",
        "current_lr",
        "model",
        "lr_decay",
        "HParams",
        "get_params",
        "Dataset",
        "read_data_sets",
        "train",
        "mnist"
    ],
    "literals": [
        "'..'",
        "\"decoded\"",
        "\"flat_x\"",
        "\"loss\"",
        "\"input_flatten\"",
        "\"Encodding\"",
        "\"relu\"",
        "\"he_normal\"",
        "\"dense1\"",
        "\"relu\"",
        "\"he_normal\"",
        "\"dense2\"",
        "\"relu\"",
        "\"he_normal\"",
        "\"dense3\"",
        "\"Decodding\"",
        "\"relu\"",
        "\"he_normal\"",
        "\"dense1\"",
        "\"relu\"",
        "\"he_normal\"",
        "\"dense2\"",
        "\"sigmoid\"",
        "\"he_normal\"",
        "\"dense3\"",
        "\"in_x\"",
        "\"decoded\"",
        "\"flat_x\"",
        "\"in_x\"",
        "\"encoded\"",
        "\"latent\"",
        "\"latent\"",
        "\"encoded\"",
        "\"in_x\"",
        "\"train_step\"",
        "\"loss\"",
        "\"loss\"",
        "\"Training Starts...\\n\"",
        "\"On epoch {}, validation loss = {}\"",
        "'OKBLUE'",
        "\"On epoch {}, training loss = {}\"",
        "'OKGREEN'",
        "\"On epoch {}, testing loss = {}\"",
        "'FAIL'",
        "\"\"",
        "'__main__'"
    ],
    "variables": [
        "ROOT",
        "loss",
        "encoding_dim1",
        "encoding_dim2",
        "encoding_dim",
        "in_x",
        "flat_x",
        "encoded",
        "encoded",
        "encoded",
        "decoded",
        "decoded",
        "decoded",
        "_inputs",
        "_outputs",
        "model",
        "model",
        "_inputs",
        "_outputs",
        "encoder_model",
        "latent",
        "_inputs",
        "_outputs",
        "decoder_model",
        "num_examples",
        "batch_size",
        "total_batch",
        "total_batch",
        "avg_loss",
        "batch_images",
        "batch_labels",
        "batch_images",
        "batch_labels",
        "feed_dict",
        "fetch_dict",
        "fetch_vals",
        "model",
        "encoder_model",
        "decoder_model",
        "model",
        "current_lr",
        "update_weights",
        "model",
        "learning_rate",
        "opt",
        "grads_and_vars",
        "model",
        "train_step",
        "init",
        "sess",
        "eval_loss",
        "train_loss",
        "test_loss",
        "lr",
        "lr_decay",
        "input_dims",
        "label_dims",
        "batch_size",
        "n_epochs",
        "eval_interval",
        "mnist"
    ],
    "comments": [
        "Encoding",
        "Decoding",
        "Make End-To-End Model",
        "Make Encoder Model",
        "Make Decoder Model",
        "evaluate the full batch once"
    ],
    "docstrings": [
        "\"\"\"deuNet Demo of AutoEncoder on MNIST\"\"\"",
        "\"\"\"Build a 3 Layer AutoEncoder Network\"\"\"",
        "\"\"\"Process training/testing process for each epoch through multiple batchs\"\"\""
    ],
    "functions": [
        "make_loss",
        "model_builder",
        "process_epoch",
        "train",
        "get_params"
    ],
    "classes": [
        "HParams"
    ]
}