{
    "identifiers": [
        "numpy",
        "np",
        "scipy",
        "interpolate",
        "interp1d",
        "scipy",
        "io",
        "readsav",
        "re",
        "astropy",
        "cosmology",
        "FlatLambdaCDM",
        "astropy",
        "units",
        "u",
        "astropy",
        "matplotlib",
        "pylab",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "ticker",
        "FuncFormatter",
        "matplotlib",
        "ticker",
        "NullFormatter",
        "sys",
        "sys",
        "path",
        "append",
        "loadfilt",
        "lf",
        "lymanAbs",
        "lyA",
        "itertools",
        "os",
        "subprocess",
        "glob",
        "gc",
        "linecache",
        "lf",
        "loadJWSTFilters",
        "suppress",
        "lf",
        "loadHubbleFilters",
        "suppress",
        "np",
        "logspace",
        "i",
        "i",
        "itertools",
        "chain",
        "jFilt",
        "jFilt",
        "jwstFilters",
        "hFilt",
        "hFilt",
        "hubbleFilters",
        "i",
        "Z",
        "schaererDir",
        "anArray",
        "Zs",
        "schaererDirs",
        "arrayNames",
        "schaererDir",
        "startswith",
        "schaererPath",
        "schaererDir",
        "schaererPopFilePattern",
        "schaererPath",
        "schaererDir",
        "schaererLowZFilePattern",
        "glob",
        "glob",
        "schaererFilePattern",
        "a",
        "a",
        "schaererFiles",
        "re",
        "search",
        "a",
        "np",
        "array",
        "linecache",
        "getline",
        "file",
        "file",
        "schaererFiles",
        "np",
        "array",
        "sa",
        "sa",
        "schaererAges",
        "dtype",
        "np",
        "array",
        "np",
        "loadtxt",
        "file",
        "skiprows",
        "file",
        "schaererFiles",
        "schaererAges",
        "argsort",
        "np",
        "array",
        "np",
        "insert",
        "sed",
        "age",
        "ii",
        "len",
        "sed",
        "axis",
        "age",
        "sed",
        "schaererAges",
        "ageSortIndxes",
        "schaererData",
        "ageSortIndxes",
        "allSchaererData",
        "reshape",
        "len",
        "allSchaererData",
        "len",
        "allSchaererData",
        "i",
        "allSchaererData",
        "i",
        "allSchaererData",
        "i",
        "allSchaererData",
        "i",
        "allSchaererData",
        "pop3TA",
        "pop3TE",
        "Zem7",
        "Zem5",
        "schaererData",
        "schaererList",
        "allSchaererData",
        "u",
        "Angstrom",
        "allSchaererData",
        "u",
        "erg",
        "u",
        "second",
        "u",
        "angstrom",
        "wavelns",
        "to",
        "u",
        "Hz",
        "equivalencies",
        "u",
        "spectral",
        "LperA",
        "wavelns",
        "astropy",
        "constants",
        "c",
        "to",
        "u",
        "erg",
        "u",
        "s",
        "u",
        "Hz",
        "z",
        "redshifts",
        "lyA",
        "lyTau",
        "z",
        "lyA",
        "rsSEDwavelen",
        "wavelns",
        "LperA",
        "z",
        "lyA",
        "rsSEDfreq",
        "freq",
        "LperHz",
        "z",
        "rsLperHz",
        "absorb",
        "rsWaveln",
        "rsLperA",
        "absorb",
        "rsWaveln",
        "aFilt",
        "jwstFilters",
        "np",
        "trapz",
        "jwstFilters",
        "aFilt",
        "rsWaveln",
        "lyForFluxHz",
        "rsFreq",
        "rsFreq",
        "format",
        "aFilt",
        "flux",
        "i",
        "Z",
        "SB99Dir",
        "anArray",
        "Zs",
        "SB99Dirs",
        "arrayNames",
        "SB99Path",
        "SB99Dir",
        "SB99FilePat",
        "glob",
        "glob",
        "SB99FilePattern",
        "len",
        "SB99Files",
        "SB99Path",
        "SB99Dir",
        "sys",
        "exit",
        "np",
        "loadtxt",
        "SB99Files",
        "skiprows",
        "i",
        "np",
        "dstack",
        "np",
        "log10",
        "SB99Data",
        "SB99Data",
        "SB99Data",
        "reshape",
        "len",
        "SB99Data",
        "i",
        "np",
        "dstack",
        "np",
        "log10",
        "SB99Data",
        "SB99Data",
        "SB99Data",
        "reshape",
        "len",
        "SB99Data",
        "i",
        "np",
        "dstack",
        "np",
        "log10",
        "SB99Data",
        "SB99Data",
        "SB99Data",
        "reshape",
        "len",
        "SB99Data",
        "i",
        "np",
        "dstack",
        "np",
        "log10",
        "SB99Data",
        "SB99Data",
        "SB99Data",
        "reshape",
        "len",
        "SB99Data",
        "pop3TA",
        "pop3TE",
        "Zem7",
        "Zem5",
        "SB990004",
        "SB99004",
        "SB99008",
        "SB9902"
    ],
    "literals": [
        "'figure.figsize'",
        "'font.size'",
        "'/Users/earnric/Google Drive/ASU/Codes/PythonCode/modules'",
        "'LogAge'",
        "'redshift'",
        "'/Users/earnric/Research/Research-Observability/Software-Models/Schaerer/'",
        "'pop3_TA/'",
        "'pop3_TE/'",
        "'e-70_mar08/'",
        "'e-50_mar08/'",
        "'pop3_ge0_log?_500_001_is5.[0-9]*'",
        "'e-?0_sal_100_001_is2.[0-9]*'",
        "'pop3'",
        "'\\.[1-2][0-9][b]*$'",
        "\"Flux in JWST {} = {:.3e}\"",
        "'Error: too many files in an SB99 dir! - '"
    ],
    "variables": [
        "rcParams",
        "rcParams",
        "jwstFilters",
        "hubbleFilters",
        "lamRange",
        "header",
        "redshifts",
        "schaererPath",
        "schaererDirs",
        "Zs",
        "schaererPopFilePattern",
        "schaererLowZFilePattern",
        "schaererFilePattern",
        "schaererFilePattern",
        "schaererFiles",
        "schaererFiles",
        "schaererAges",
        "schaererAges",
        "schaererData",
        "ageSortIndxes",
        "allSchaererData",
        "allSchaererData",
        "pop3TA",
        "pop3TE",
        "Zem7",
        "Zem5",
        "schaererList",
        "wavelns",
        "LperA",
        "freq",
        "LperHz",
        "absorb",
        "rsWaveln",
        "rsLperA",
        "rsFreq",
        "rsLperHz",
        "lyForFluxHz",
        "lyForFluxA",
        "flux",
        "SB99FilePattern",
        "SB99Files",
        "SB99Data",
        "SB990004",
        "SB99004",
        "SB99008",
        "SB9902"
    ],
    "comments": [
        "",
        "Read in Schaerer and SB99 luminosity files and generate flux in filter.",
        "These tables only consider Ly-forest absorption -- and redshift.",
        "User needs to apply reddening.",
        "",
        "Create a header for the output files describing the columns",
        "is5 files have ages in step of 1 Myr",
        "is2 files have ages in step of 0.05 dex",
        "Load the schaerer files...",
        "Pop III files, 1 Myr spacing",
        "Low Z files, 0.05 dex spacing",
        "All the files in the dir...",
        "remove .1? and .2? files",
        "Get the line with the (log) age...",
        "Log age starts at position 30",
        "Array of indices to sort things by age...",
        "The following builds an array of arrays (one for each age) with each array's entries:",
        "[log age, waveln, lum/A]",
        "may need a np.copy(...) here... ??",
        "Get the wavelength & Luminosity/s/Ang",
        "Convert to freq & Lumin/s/Hz",
        "Let astropy do units...",
        "Create a lyman forest absorption function for z...",
        "Redshift SED in wavelen",
        "Redshift SED in freq",
        "SB99 format:     TIME [YR]    WAVELENGTH [A]   LOG TOTAL  LOG STELLAR  LOG NEBULAR  [ERG/SEC/A]",
        "REMEMBER, SB99 data is for a population of 1e6 M_sun",
        "All the files in the dir... should be one!",
        "We now have:",
        "[[log age, waveln, flux], [], ...]",
        "SBPath  = '/Users/earnric/Research/Research-Observability/Software-Models/STARBURST99/STARBURST99-runs/'",
        "SBDirs = np.array(['padova0004','padova004','padova008','padova02'])",
        "#",
        "# Convert the extension number (31,...) to 'log age' of the sed",
        "# For the is2 files, we can map the extension to log age via: 0.05 ext + 2.45 = log age",
        "#",
        "sedAgeZ02 = np.multiply(sedFile02exts, 0.05) + 2.45 # just keep 2 decimal places...",
        "# sort by age -- the following generates an ordered list of INDICES that indexes the arrays in age-order",
        "Z02AgeSortIndx = sedAgeZ02.argsort()",
        "Z = 0.02 # This is the metallicity of the file we're working with",
        "#",
        "# BUILD A SORTED (in time) ARRAY",
        "# Prepend the age onto each sed array such that it has the form:",
        "# [[[log age,  lambda, total L/A], [log age,  lambda2, total L/A],...],",
        "#  [[log age2, lambda, total L/A], [log age2,  lambda2, total L/A], ...],",
        "# ... ]",
        "#",
        "Zm02 = [np.insert(sed[:,[0,2]],[0],[[age] for ii in range(0,len(sed))], axis=1)",
        "for age,sed in zip(sedAgeZ02[Z02AgeSortIndx], sedsZ02[Z02AgeSortIndx])]"
    ],
    "docstrings": [],
    "functions": [
        "buildFilterFluxFiles"
    ],
    "classes": []
}