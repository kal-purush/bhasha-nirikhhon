{
    "identifiers": [
        "os",
        "tempfile",
        "typing",
        "Optional",
        "TYPE_CHECKING",
        "Type",
        "turbinia",
        "TurbiniaException",
        "evidence",
        "turbinia",
        "config",
        "turbinia_config",
        "dftimewolf",
        "lib",
        "dftimewolf",
        "lib",
        "containers",
        "containers",
        "dftimewolf",
        "lib",
        "modules",
        "manager",
        "modules_manager",
        "dftimewolf",
        "lib",
        "processors",
        "turbinia_base_legacy",
        "TurbiniaProcessorBaseLegacy",
        "TYPE_CHECKING",
        "dftimewolf",
        "lib",
        "state",
        "TurbiniaProcessorBaseLegacy",
        "ThreadAwareModule",
        "state",
        "name",
        "Optional",
        "critical",
        "ThreadAwareModule",
        "state",
        "name",
        "name",
        "critical",
        "critical",
        "TurbiniaProcessorBaseLegacy",
        "logger",
        "turbinia_config_file",
        "Optional",
        "project",
        "turbinia_recipe",
        "Optional",
        "turbinia_zone",
        "output_directory",
        "sketch_id",
        "turbinia_config_file",
        "output_directory",
        "output_directory",
        "tempfile",
        "mkdtemp",
        "prefix",
        "PublishMessage",
        "output_directory",
        "TurbiniaSetUp",
        "project",
        "turbinia_recipe",
        "turbinia_zone",
        "sketch_id",
        "TurbiniaException",
        "exception",
        "ModuleError",
        "exception",
        "critical",
        "container",
        "containers",
        "RemoteFSPath",
        "os",
        "path",
        "join",
        "_output_path",
        "format",
        "container",
        "hostname",
        "container",
        "path",
        "replace",
        "logger",
        "info",
        "format",
        "log_file_path",
        "logger",
        "info",
        "format",
        "container",
        "path",
        "evidence",
        "CompressedDirectory",
        "compressed_directory",
        "container",
        "path",
        "source_path",
        "container",
        "path",
        "TurbiniaStart",
        "evidence_",
        "PublishMessage",
        "request_id",
        "TurbiniaWait",
        "request_id",
        "TurbiniaException",
        "exception",
        "ModuleError",
        "exception",
        "critical",
        "logger",
        "info",
        "task",
        "task_data",
        "path",
        "task",
        "get",
        "path",
        "startswith",
        "turbinia_config",
        "TMP_DIR",
        "path",
        "endswith",
        "logger",
        "info",
        "task",
        "path",
        "containers",
        "RemoteFSPath",
        "path",
        "path",
        "hostname",
        "container",
        "hostname",
        "StoreContainer",
        "container",
        "Type",
        "AttributeContainer",
        "containers",
        "RemoteFSPath",
        "parallel_count",
        "modules_manager",
        "ModulesManager",
        "RegisterModule",
        "TurbiniaArtifactProcessorLegacy"
    ],
    "literals": [
        "\"state.DFTimewolfState\"",
        "''",
        "'turbinia-results'",
        "f'Turbinia results will be dumped to {self.output_directory}'",
        "'{0:s}_{1:s}-turbinia.log'",
        "'/'",
        "'_'",
        "'Turbinia log file: {0:s}'",
        "'Processing remote FS path {0:s} from previous collector'",
        "f'Turbinia request identifier: {request_id}'",
        "'Files generated by Turbinia:'",
        "'saved_paths'",
        "'.plaso'",
        "f'  {task[\"name\"]}: {path}'",
        "\"name\""
    ],
    "variables": [
        "output_directory",
        "turbinia_config_file",
        "output_directory",
        "output_directory",
        "log_file_path",
        "evidence_",
        "request_id",
        "task_data",
        "_",
        "container"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "pylint: disable=import-error",
        "pytype: disable=import-error",
        "pylint: disable=line-too-long",
        "pylint: disable=no-member",
        "pylint: disable=arguments-differ",
        "pytype: disable=signature-mismatch",
        "Ignore temporary files generated by turbinia",
        "We're only interested in plaso files for the time being."
    ],
    "docstrings": [
        "\"\"\"[DEPRECATED] Processes a directory of artifacts with Turbinia.\"\"\"",
        "\"\"\"Processes Exported GRR Artifacts with Turbinia.\n\n  Attributes:\n    directory_path (str): Name of the directory to process.\n  \"\"\"",
        "\"\"\"Initializes a Turbinia Artifacts disks processor.\n\n    Args:\n      state (DFTimewolfState): recipe state.\n      name (Optional[str]): The module's runtime name.\n      critical (Optional[bool]): True if the module is critical, which causes\n          the entire recipe to fail if the module encounters an error.\n    \"\"\"",
        "\"\"\"Sets up the object attributes.\n\n    Args:\n      turbinia_config_file (str): Full path to the Turbinia config file to use.\n      project (str): name of the GCP project containing the disk to process.\n      turbinia_recipe (str): Turbinia recipe name.\n      turbinia_zone (str): GCP zone in which the Turbinia server is running.\n      output_directory (str): Name of the directory to process.\n      sketch_id (int): The Timesketch sketch ID.\n    \"\"\"",
        "\"\"\"Process files with Turbinia.\"\"\""
    ],
    "functions": [
        "SetUp",
        "Process",
        "GetThreadOnContainerType",
        "GetThreadPoolSize",
        "KeepThreadedContainersInState",
        "PreProcess",
        "PostProcess"
    ],
    "classes": [
        "TurbiniaArtifactProcessorLegacy"
    ]
}