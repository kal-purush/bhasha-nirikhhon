{
    "identifiers": [
        "io",
        "camunda",
        "zeebe",
        "process",
        "test",
        "inspections",
        "io",
        "camunda",
        "zeebe",
        "model",
        "bpmn",
        "Bpmn",
        "io",
        "camunda",
        "zeebe",
        "process",
        "test",
        "filters",
        "DeploymentRecordStreamFilter",
        "io",
        "camunda",
        "zeebe",
        "protocol",
        "record",
        "value",
        "deployment",
        "DeploymentResource",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "stream",
        "Stream",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "org",
        "camunda",
        "bpm",
        "model",
        "xml",
        "instance",
        "DomElement",
        "deploymentRecordStreamFilter",
        "deploymentRecordStreamFilter",
        "deploymentRecordStreamFilter",
        "deploymentRecordStreamFilter",
        "elementName",
        "findElementId",
        "deploymentRecordStreamFilter",
        "getBpmnDeploymentResources",
        "elementName",
        "bpmnProcessId",
        "elementName",
        "findElementId",
        "deploymentRecordStreamFilter",
        "withBpmnProcessId",
        "bpmnProcessId",
        "getBpmnDeploymentResources",
        "elementName",
        "stream",
        "elementName",
        "potentialElementIds",
        "stream",
        "deploymentResource",
        "Bpmn",
        "readModelFromStream",
        "deploymentResource",
        "getResource",
        "flatMap",
        "bpmnModelInstance",
        "getChildElements",
        "bpmnModelInstance",
        "getDocument",
        "getRootElement",
        "stream",
        "element",
        "Objects",
        "equals",
        "element",
        "getAttribute",
        "elementName",
        "element",
        "element",
        "getAttribute",
        "distinct",
        "collect",
        "Collectors",
        "toList",
        "Assertions",
        "assertThat",
        "potentialElementIds",
        "hasSize",
        "potentialElementIds",
        "get",
        "parent",
        "elements",
        "elements",
        "add",
        "parent",
        "parent",
        "getChildElements",
        "forEach",
        "child",
        "elements",
        "addAll",
        "getChildElements",
        "child",
        "elements"
    ],
    "literals": [
        "\"name\"",
        "\"id\""
    ],
    "variables": [
        "deploymentRecordStreamFilter"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright Â© 2021 camunda services GmbH (info@camunda.com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Inspections for deployment events. This is useful to find technical identifiers for\n * human-readable element names.",
        "* Finds the BPMN element id by its name.\n   *\n   * <p>Keeps the test human-readable when asserting on bpmn elements. Asserts that there is only\n   * one element for the given name to prevent mistakes.\n   *\n   * @param elementName the name of the BPMN element\n   * @return the id of the found BPMN element",
        "* Finds the BPMN element id by its name inside the referenced BPMN process.\n   *\n   * <p>Keeps the test human-readable when asserting on bpmn elements. Asserts that there is only\n   * one element for the given name to prevent mistakes.\n   *\n   * @param bpmnProcessId the id of the deployed process\n   * @param elementName the name of the BPMN element\n   * @return the id of the found BPMN in the given process"
    ],
    "functions": [
        "DeploymentInspections",
        "findBpmnElementId",
        "findBpmnElementId",
        "findElementId",
        "getChildElements"
    ],
    "classes": [
        "DeploymentInspections"
    ]
}