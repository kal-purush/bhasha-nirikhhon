{
    "identifiers": [
        "Runtime",
        "InteropServices",
        "Modern",
        "WindowKit",
        "Input",
        "Modern",
        "WindowKit",
        "Platform",
        "Modern",
        "WindowKit",
        "Win32",
        "Interop",
        "Modern",
        "WindowKit",
        "Win32",
        "WinRT",
        "Modern",
        "WindowKit",
        "Win32",
        "Interop",
        "UnmanagedMethods",
        "Modern",
        "WindowKit",
        "Win32",
        "DefaultPlatformSettings",
        "PointerType",
        "PointerType",
        "Touch",
        "GetSystemMetrics",
        "UnmanagedMethods",
        "SystemMetric",
        "SM_CXDRAG",
        "GetSystemMetrics",
        "UnmanagedMethods",
        "SystemMetric",
        "SM_CYDRAG",
        "PointerType",
        "PointerType",
        "Touch",
        "GetSystemMetrics",
        "UnmanagedMethods",
        "SystemMetric",
        "SM_CXDOUBLECLK",
        "GetSystemMetrics",
        "UnmanagedMethods",
        "SystemMetric",
        "SM_CYDOUBLECLK",
        "PointerType",
        "TimeSpan",
        "FromMilliseconds",
        "GetDoubleClickTime",
        "GetColorValues",
        "GetColorValues",
        "oldColorValues",
        "colorValues",
        "OnColorValuesChanged",
        "colorValues"
    ],
    "literals": [],
    "variables": [
        "PlatformColorValues",
        "_lastColorValues",
        "oldColorValues",
        "_lastColorValues",
        "colorValues"
    ],
    "comments": [
        "if (Win32Platform.WindowsVersion.Major < 10)",
        "{",
        "}",
        "var uiSettings = NativeWinRTMethods.CreateInstance<IUISettings3>(\"Windows.UI.ViewManagement.UISettings\");",
        "var accent = uiSettings.GetColorValue(UIColorType.Accent).ToAvalonia();",
        "var accessibilitySettings = NativeWinRTMethods.CreateInstance<IAccessibilitySettings>(\"Windows.UI.ViewManagement.AccessibilitySettings\");",
        "if (accessibilitySettings.HighContrast == 1)",
        "{",
        "// Windows 11 has 4 different high contrast schemes:",
        "// - Aquatic - High Contrast Black",
        "// - Desert - High Contrast White",
        "// - Dusk - High Contrast #1",
        "// - Night sky - High Contrast #2",
        "// Only \"Desert\" one can be considered a \"light\" preference.",
        "using var highContrastScheme = new HStringInterop(accessibilitySettings.HighContrastScheme);",
        "return _lastColorValues = new PlatformColorValues",
        "{",
        "ThemeVariant = highContrastScheme.Value?.Contains(\"White\") == true ?",
        "PlatformThemeVariant.Light :",
        "PlatformThemeVariant.Dark,",
        "ContrastPreference = ColorContrastPreference.High,",
        "// Windows provides more than one accent color for the HighContrast themes, but with no API for that (at least not in the WinRT)",
        "AccentColor1 = accent",
        "};",
        "}",
        "else",
        "{",
        "var background = uiSettings.GetColorValue(UIColorType.Background).ToAvalonia();",
        "return _lastColorValues = new PlatformColorValues",
        "{",
        "ThemeVariant = background.R + background.G + background.B < (255 * 3 - background.R - background.G - background.B) ?",
        "PlatformThemeVariant.Dark :",
        "PlatformThemeVariant.Light,",
        "ContrastPreference = ColorContrastPreference.NoPreference,",
        "AccentColor1 = accent",
        "};",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "Size",
        "GetTapSize",
        "Size",
        "GetDoubleTapSize",
        "TimeSpan",
        "GetDoubleTapTime",
        "PlatformColorValues",
        "GetColorValues",
        "OnColorValuesChanged"
    ],
    "classes": [
        "Win32PlatformSettings"
    ]
}