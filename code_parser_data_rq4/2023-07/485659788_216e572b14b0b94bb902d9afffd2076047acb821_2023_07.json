{
    "identifiers": [
        "VAdvantage",
        "Model",
        "VAdvantage",
        "DataBase",
        "VAdvantage",
        "Logging",
        "VAdvantage",
        "Utility",
        "VAdvantage",
        "ProcessEngine",
        "VAS",
        "Process",
        "SvrProcess",
        "recordId",
        "GetRecord_ID",
        "ProcessInfoParameter",
        "GetParameter",
        "i",
        "para",
        "Length",
        "i",
        "para",
        "i",
        "GetParameterName",
        "para",
        "i",
        "GetParameter",
        "name",
        "Equals",
        "_RunsMax",
        "Util",
        "GetValueOfInt",
        "para",
        "i",
        "GetParameter",
        "name",
        "Equals",
        "_Frequency",
        "Util",
        "GetValueOfInt",
        "para",
        "i",
        "GetParameter",
        "name",
        "Equals",
        "_DateNextRun",
        "para",
        "i",
        "GetParameter",
        "name",
        "Equals",
        "_FrequencyType",
        "para",
        "i",
        "GetParameter",
        "ToString",
        "log",
        "Log",
        "Level",
        "SEVERE",
        "name",
        "GetExistingRecurringRecord",
        "recordId",
        "existingRecurring",
        "existingRecurring",
        "Length",
        "Msg",
        "GetMsg",
        "GetCtx",
        "existingRecurring",
        "GetDynamicRecurringName",
        "recordId",
        "MRecurring",
        "GetCtx",
        "Get_TrxName",
        "mRecurring",
        "SetName",
        "recurringName",
        "mRecurring",
        "SetRunsMax",
        "_RunsMax",
        "mRecurring",
        "SetRecurringType",
        "MRecurring",
        "RECURRINGTYPE_GLJournal",
        "mRecurring",
        "SetDateNextRun",
        "_DateNextRun",
        "mRecurring",
        "SetFrequency",
        "_Frequency",
        "mRecurring",
        "SetFrequencyType",
        "_FrequencyType",
        "mRecurring",
        "SetGL_Journal_ID",
        "recordId",
        "mRecurring",
        "Save",
        "log",
        "Log",
        "Level",
        "SEVERE",
        "Msg",
        "GetMsg",
        "GetCtx",
        "Msg",
        "GetMsg",
        "GetCtx",
        "Msg",
        "GetMsg",
        "GetCtx",
        "mRecurring",
        "GetName",
        "recordId",
        "Util",
        "GetValueOfString",
        "DB",
        "ExecuteScalar",
        "recordId",
        "recurringName",
        "recordId",
        "recordId",
        "Util",
        "GetValueOfString",
        "DB",
        "ExecuteScalar",
        "sql",
        "recurringName"
    ],
    "literals": [
        "\"RunsMax\"",
        "\"Frequency\"",
        "\"DateNextRun\"",
        "\"FrequencyType\"",
        "\"prepare - Unknown Parameter: \"",
        "\"Recurring_AlreadyCreated\"",
        "\"Recurring_NotSaved\"",
        "\"Recurring_NotCreated\"",
        "\"Recurring_Created\"",
        "\"SELECT Name FROM C_Recurring WHERE GL_Journal_ID=\"",
        "\"SELECT dt.Name ||'/'|| glj.DocumentNo \"",
        "\" FROM GL_Journal glj \"",
        "\" INNER JOIN C_DocType dt on (glj.C_DocType_ID = dt.C_DocType_ID) WHERE glj.GL_Journal_ID =\""
    ],
    "variables": [
        "recordId",
        "_DateNextRun",
        "_FrequencyType",
        "_RunsMax",
        "_Frequency",
        "para",
        "i",
        "name",
        "existingRecurring",
        "recurringName",
        "MRecurring",
        "mRecurring",
        "recurringName",
        "sql",
        "recurringName"
    ],
    "comments": [
        "Prepare - e.g., get Parameters.",
        "</summary>",
        "",
        "Current record No",
        "Date Of Next run",
        "Frequency Type",
        "Maximum Run",
        "Frequency",
        "Get window Record ID",
        "Get listed parameters from UI",
        "1. RunsMax : Maximum run as Integer Type",
        "2. Frequency : Number of frequency as Integer type",
        "3. DateNextRun : Next running date",
        "4. FrequencyType : Frequency Type like Month, Date, weekly or Quarterly",
        "</summary>",
        ".intValue();",
        ".intValue();",
        "prepare",
        "This method use to create Recurring Window record from GL Journal window.",
        "Date           : 20230721",
        "Task ID        : 2260",
        "</summary>",
        "<returns>Name Number of Recurring Window</returns>",
        "doIt",
        "This Method check... Is already created recurring for particular transaction window? if it is then return Name of recurring record.",
        "</summary>",
        "<param name=\"recordId\">GL Journal Record ID</param>",
        "<returns>Name of existing Recurring Window</returns>",
        "else if (_RecurringType.Equals(MRecurring.RECURRINGTYPE_GLJournal))\n            {\n                recurringName = Util.GetValueOfString(DB.ExecuteScalar(\"SELECT Name FROM C_Recurring WHERE GL_Journal_ID=\" + recordId));\n            }\n            else if (_RecurringType.Equals(MRecurring.RECURRINGTYPE_GLJournalBatch))\n            {\n                recurringName = Util.GetValueOfString(DB.ExecuteScalar(\"SELECT Name FROM C_Recurring WHERE GL_JournalBatch_ID=\" + recordId));\n            }",
        "Creating the combination of Name of Document Type and DocumentNo of GL Journal Batch window.",
        "</summary>",
        "<param name=\"recordId\">>GL Journal Record ID</param>",
        "<returns>Combination of DocType Name and Document No</returns>",
        "else\n            if (recurringType.Equals(MRecurring.RECURRINGTYPE_GLJournal))\n            {\n                MJournal mJournal = new MJournal(GetCtx(), recordId, Get_TrxName());\n                MDocType mDocType = new MDocType(GetCtx(), mJournal.GetC_DocType_ID(), Get_TrxName());\n                recurringName = mDocType.GetName() + \"/\" + mJournal.GetDocumentNo();\n            }\n            else\n            if (recurringType.Equals(MRecurring.RECURRINGTYPE_GLJournalBatch))\n            {\n                MJournalBatch mJournalBatch = new MJournalBatch(GetCtx(), recordId, Get_TrxName());\n                MDocType mDocType = new MDocType(GetCtx(), mJournalBatch.GetC_DocType_ID(), Get_TrxName());\n                recurringName = mDocType.GetName() + \"/\" + mJournalBatch.GetDocumentNo();\n            }",
        "Recurring"
    ],
    "docstrings": [
        "******************************************************\n * Project Name   : VAdvantage\n * Class Name     : CreateRecurringFromGLJournal\n * Purpose        : Create Recurring process\n * Class Used     : ProcessEngine.SvrProcess\n * Chronological    Development\n * Task ID        : 2260\n * Date           : 21-July-2023\n  *****************************************************",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Prepare",
        "DoIt",
        "GetExistingRecurringRecord",
        "GetDynamicRecurringName"
    ],
    "classes": [
        "CreateRecurringFromGLJournal"
    ]
}