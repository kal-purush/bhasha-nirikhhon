{
    "identifiers": [
        "numpy",
        "np",
        "argparse",
        "imutils",
        "cv2",
        "pyzbar",
        "pyzbar",
        "json",
        "argparse",
        "ArgumentParser",
        "ap",
        "add_argument",
        "required",
        "help",
        "vars",
        "ap",
        "parse_args",
        "cv2",
        "imread",
        "args",
        "cv2",
        "cvtColor",
        "image",
        "cv2",
        "COLOR_BGR2GRAY",
        "cv2",
        "imshow",
        "image",
        "cv2",
        "waitKey",
        "cv2",
        "cv",
        "CV_32F",
        "imutils",
        "is_cv2",
        "cv2",
        "CV_32F",
        "cv2",
        "Sobel",
        "gray",
        "ddepth",
        "ddepth",
        "dx",
        "dy",
        "ksize",
        "cv2",
        "Sobel",
        "gray",
        "ddepth",
        "ddepth",
        "dx",
        "dy",
        "ksize",
        "cv2",
        "subtract",
        "gradX",
        "gradY",
        "cv2",
        "convertScaleAbs",
        "gradient",
        "cv2",
        "blur",
        "gradient",
        "cv2",
        "threshold",
        "blurred",
        "cv2",
        "THRESH_BINARY",
        "cv2",
        "imshow",
        "thresh",
        "cv2",
        "waitKey",
        "cv2",
        "getStructuringElement",
        "cv2",
        "MORPH_RECT",
        "cv2",
        "morphologyEx",
        "thresh",
        "cv2",
        "MORPH_CLOSE",
        "kernel",
        "cv2",
        "erode",
        "closed",
        "iterations",
        "cv2",
        "dilate",
        "closed",
        "iterations",
        "cv2",
        "imshow",
        "closed",
        "cv2",
        "waitKey",
        "cv2",
        "findContours",
        "closed",
        "copy",
        "cv2",
        "RETR_EXTERNAL",
        "cv2",
        "CHAIN_APPROX_SIMPLE",
        "imutils",
        "grab_contours",
        "cnts",
        "c",
        "cnts",
        "cv2",
        "minAreaRect",
        "c",
        "cv2",
        "boxPoints",
        "rect",
        "np",
        "int0",
        "box",
        "cv2",
        "boundingRect",
        "c",
        "image",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "pyzbar",
        "decode",
        "cropped_image",
        "detected_barcodes",
        "extend",
        "barcodes",
        "len",
        "detected_barcodes",
        "i",
        "barcode",
        "detected_barcodes",
        "barcode",
        "data",
        "i",
        "i",
        "i",
        "barcode_data",
        "i",
        "barcode_type",
        "image",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "cv2",
        "resize",
        "cropped_image",
        "fx",
        "fy",
        "cv2",
        "imshow",
        "i",
        "cropped_image",
        "cv2",
        "waitKey",
        "cv2",
        "destroyAllWindows",
        "json",
        "dumps",
        "barcode",
        "data",
        "decode",
        "barcode",
        "barcode",
        "detected_barcodes",
        "open",
        "json_file",
        "json_file",
        "write",
        "json_str"
    ],
    "literals": [
        "\"-i\"",
        "\"--image\"",
        "\"path to the image file\"",
        "\"image\"",
        "\"image\"",
        "\"image\"",
        "\"image\"",
        "'NumPatient'",
        "'NumDossier'",
        "f\"Barcode {i + 1} Data:\"",
        "f\"Barcode {i + 1} Type:\"",
        "f\"Cropped Barcode {i + 1}\"",
        "\"data\"",
        "\"type\"",
        "\"barcodes_data.json\"",
        "\"w\"",
        "\"Barcode data saved to 'barcodes_data.json'.\"",
        "\"No barcodes detected.\""
    ],
    "variables": [
        "ap",
        "args",
        "image",
        "gray",
        "ddepth",
        "gradX",
        "gradY",
        "gradient",
        "gradient",
        "blurred",
        "_",
        "thresh",
        "kernel",
        "closed",
        "closed",
        "closed",
        "cnts",
        "cnts",
        "detected_barcodes",
        "rect",
        "box",
        "box",
        "x",
        "y",
        "w",
        "h",
        "cropped_image",
        "barcodes",
        "barcode_data",
        "barcode_type",
        "barcode_type",
        "cropped_image",
        "cropped_image",
        "json_str"
    ],
    "comments": [
        "import the necessary packages",
        "construct the argument parse and parse the arguments",
        "load the image",
        "convert it to grayscale",
        "compute the Scharr gradient magnitude representation of the images",
        "in both the x and y direction using OpenCV 2.4",
        "subtract the y-gradient from the x-gradient",
        "blur and threshold the image",
        "construct a closing kernel and apply it to the thresholded image",
        "perform a series of erosions and dilations",
        "find the contours in the thresholded image",
        "initialize a list to store detected barcodes",
        "loop over the detected contours",
        "compute the rotated bounding box of the contour",
        "extract the coordinates of the bounding box vertices",
        "crop the region within the bounding box",
        "decode barcodes in the cropped image",
        "append the detected barcodes to the list",
        "check if any barcodes are detected",
        "handle the detected barcodes",
        "barcode_type = barcode.type",
        "print barcode data and type",
        "extract the cropped image from the original image",
        "display the cropped image in a separate window",
        "resize image",
        "wait for a key press and then close all open windows",
        "Convert the list of barcode data to a JSON string",
        "Write the JSON string to a file"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}