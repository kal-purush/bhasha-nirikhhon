{
    "identifiers": [
        "json",
        "requests",
        "json",
        "load",
        "open",
        "format",
        "x",
        "x",
        "c",
        "map_rando_manifest",
        "x",
        "c",
        "requests",
        "get",
        "text",
        "json",
        "loads",
        "upstream_json_str",
        "k",
        "k",
        "v",
        "upstream_json",
        "items",
        "v",
        "v",
        "v",
        "sorted",
        "map_rando_sprite_names",
        "difference",
        "upstream_sprite_names",
        "sorted",
        "upstream_sprite_names",
        "difference",
        "map_rando_sprite_names"
    ],
    "literals": [
        "f\"MapRandoSprites/samus_sprites/manifest.json\"",
        "\"r\"",
        "\"{}.{}\"",
        "'name'",
        "'version'",
        "'sprites'",
        "\"http://smalttpr.mymm1.com/sprites/\"",
        "'m3'",
        "'approved'",
        "'usage'",
        "'global'",
        "'usage'",
        "'maprando'",
        "'usage'"
    ],
    "variables": [
        "map_rando_manifest",
        "map_rando_sprite_names",
        "upstream_json_str",
        "upstream_json",
        "upstream_sprite_names"
    ],
    "comments": [
        "Show differences between sprites in Map Rando and those in upstream listing:",
        "# Initial extraction",
        "out = []",
        "output_dir = \"MapRandoSprites/samus_sprites/\"",
        "for k in sorted(upstream_json['m3']['approved'].keys()):",
        "print(k)",
        "v = upstream_json['m3']['approved'][k]",
        "if v['usage'] is None or not ('global' in v['usage'] or ('maprando' in v['usage'])):",
        "continue",
        "out.append({",
        "'name': v['short_slug'],",
        "'version': v['version'],",
        "'display_name': v['name'],",
        "'author': v['author'],",
        "})",
        "url = v['file']",
        "spritesheet = requests.get(url).content",
        "file = open(f\"{output_dir}/{v['short_slug']}.png\", 'wb')",
        "file.write(spritesheet)",
        "file.close()",
        "print(json.dumps(out))",
        "upstream_sprite_names = set(k for k, v in upstream_json['m3']['approved'].items() if 'usage' not in v)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}