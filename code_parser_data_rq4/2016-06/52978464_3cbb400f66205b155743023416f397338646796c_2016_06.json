{
    "identifiers": [
        "Tyr",
        "_",
        "Permission",
        "topologicalSort",
        "Node",
        "Graph",
        "binaryIndexOf",
        "baseCompare",
        "SchemaNode",
        "Subject",
        "Resource",
        "Repository",
        "PermissionsModel",
        "Hash",
        "permissionHierarchy",
        "permissionTypeList",
        "pluginOptions",
        "schemaGraclConfigObject",
        "TyrSchemaGraphObjects",
        "query",
        "mixInDocumentMethods",
        "buildLinkGraph",
        "createGraclHierarchy",
        "getObjectHierarchy",
        "constructPermissionHierarchy",
        "registerAllowedPermissionsForCollections",
        "parsePermissionString",
        "getAllPossiblePermissionTypes",
        "formatPermissionLabel",
        "getPermissionChildren",
        "getPermissionParents",
        "getAllowedPermissionsForCollection",
        "PermissionsModel",
        "PermissionsModel",
        "Tyr",
        "opts",
        "opts",
        "opts",
        "opts",
        "plugin",
        "opts",
        "plugin",
        "opts",
        "stage",
        "Tyr",
        "stage",
        "plugin",
        "mixInDocumentMethods",
        "plugin",
        "buildLinkGraph",
        "plugin",
        "createGraclHierarchy",
        "plugin",
        "constructPermissionHierarchy",
        "plugin",
        "registerAllowedPermissionsForCollections",
        "plugin",
        "plugin",
        "plugin",
        "PermissionsModel",
        "queriedCollection",
        "Tyr",
        "permissionType",
        "subjectDocument",
        "Tyr",
        "Tyr",
        "query",
        "queriedCollection",
        "permissionType",
        "subjectDocument",
        "message",
        "plugin",
        "message",
        "plugin",
        "getObjectHierarchy",
        "plugin",
        "message",
        "message",
        "perm",
        "parsePermissionString",
        "perm",
        "getAllPossiblePermissionTypes",
        "perm",
        "getPermissionParents",
        "perm",
        "perm",
        "getPermissionChildren",
        "perm",
        "perm",
        "getAllowedPermissionsForCollection",
        "perm",
        "perm",
        "formatPermissionLabel",
        "perm"
    ],
    "literals": [
        "'tyranid'",
        "'lodash'",
        "'gracl'",
        "'../models/PermissionsModel'",
        "'../interfaces'",
        "'../query/query'",
        "'../tyranid/mixInDocumentMethods'",
        "'../graph/buildLinkGraph'",
        "'../graph/createGraclHierarchy'",
        "'../graph/getObjectHierarchy'",
        "'../permission/constructPermissionHierarchy'",
        "'../permission/registerAllowedPermissionsForCollections'",
        "'../permission/parsePermissionString'",
        "'../permission/getAllPossiblePermissionTypes'",
        "'../permission/formatPermissionLabel'",
        "'../permission/getPermissionChildren'",
        "'../permission/getPermissionParents'",
        "'../permission/getAllowedPermissionsForCollection'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'TYRANID_GRACL_NO_COLLECTION_NAME_FOUND'",
        "'edit'",
        "'view'",
        "'edit'",
        "'delete'",
        "string",
        "string",
        "string",
        "'post-link'",
        "starting boot.",
        "string",
        "string",
        "tyranid-gracl: ${message}",
        "created gracl permissions hierarchy based on tyranid schemas:",
        "'  | \\n  | '",
        "''",
        "''",
        "'\\n'",
        "'\\n  | '",
        "''",
        "'---- resources ----'",
        "'---- subjects ----'",
        "'____'",
        "string",
        "tyranid-gracl: ${message}",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "plugin",
        "plugin",
        "plugin",
        "plugin"
    ],
    "comments": [
        "<reference path='../../typings/main.d.ts' />",
        "some collections may have specific permissions",
        "they are restricted to...",
        "plugin options",
        "Create Gracl class hierarchy from tyranid schemas,\n    needs to be called after all the tyranid collections are validated",
        "TODO: strictNullChecks hack"
    ],
    "docstrings": [
        "*  Security plugin for tyranid\n\n  Example:\n\n  ```js\n  import Tyr from 'tyranid';\n  import pmongo from 'promised-mongo';\n\n  // import plugin class\n  import { GraclPlugin } from 'tyranid-gracl';\n\n  // instantiate\n  const secure = new GraclPlugin();\n\n  const db = pmongo('mongodb://127.0.0.1:27017/tyranid_gracl_test');\n\n  Tyr.config({\n    db: db,\n    validate: [\n      { dir: root + '/test/models', fileMatch: '[a-z].js' }\n    ],\n    // add to tyranid config...\n    secure: secure\n  })\n  ```"
    ],
    "functions": [
        "boot",
        "createIndexes",
        "query",
        "log",
        "logHierarchy",
        "error",
        "parsePermissionString",
        "getAllPossiblePermissionTypes",
        "getPermissionParents",
        "getPermissionChildren",
        "getAllowedPermissionsForCollection",
        "formatPermissionLabel"
    ],
    "classes": [
        "GraclPlugin"
    ]
}