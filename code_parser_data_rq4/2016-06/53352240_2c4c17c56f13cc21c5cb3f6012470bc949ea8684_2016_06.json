{
    "identifiers": [
        "numpy",
        "np",
        "pytest",
        "ops_test_utils",
        "unittest_helper",
        "AA",
        "I",
        "precision",
        "PRECISION_TO_TYPE",
        "graph",
        "reader",
        "cntk",
        "C",
        "pytest",
        "mark",
        "parametrize",
        "REDUCE_TEST_CASES",
        "input_data",
        "axis",
        "device_id",
        "precision",
        "x",
        "axis",
        "keepdims",
        "AA",
        "x",
        "axis",
        "len",
        "x_aa",
        "shape",
        "AA",
        "np",
        "reshape",
        "np",
        "add",
        "reduce",
        "np",
        "ravel",
        "x_aa",
        "AA",
        "np",
        "add",
        "reduce",
        "x",
        "axis",
        "dtype",
        "PRECISION_TO_TYPE",
        "precision",
        "keepdims",
        "keepdims",
        "reduce_sum",
        "input_data",
        "axis",
        "I",
        "input_data",
        "C",
        "reduce_sum",
        "a",
        "axis",
        "unittest_helper",
        "result",
        "expected_result",
        "device_id",
        "device_id",
        "precision",
        "precision",
        "clean_up",
        "backward_pass",
        "x",
        "AA",
        "np",
        "ones_like",
        "x",
        "dtype",
        "PRECISION_TO_TYPE",
        "precision",
        "grad_reduce_sum",
        "input_data",
        "unittest_helper",
        "result",
        "expected_gradient",
        "device_id",
        "device_id",
        "precision",
        "precision",
        "clean_up",
        "backward_pass",
        "input_node",
        "a"
    ],
    "literals": [
        "\"input_data, axis\""
    ],
    "variables": [
        "REDUCE_TEST_CASES",
        "x_aa",
        "expected_result",
        "a",
        "result",
        "expected_gradient"
    ],
    "comments": [
        "Copyright (c) Microsoft. All rights reserved.",
        "Licensed under the MIT license. See LICENSE.md file in the project root",
        "for full license information.",
        "==============================================================================",
        "(input_data,  axis)",
        "Forward pass test",
        "==================",
        "We compute the expected output for the forward pass.",
        "We need two surrounding brackets:",
        "The first for sequences (length=1, since we have dynamic_axis='').",
        "The second for batch of one sample.",
        "keepdims = True as CNTK keep them as well",
        "splice using the operator",
        "Backward pass test",
        "==================",
        "The gradient of the reduce_sum operator is all ones in the shape of the input"
    ],
    "docstrings": [],
    "functions": [
        "test_op_reduce_sum",
        "reduce_sum",
        "grad_reduce_sum"
    ],
    "classes": []
}