{
    "identifiers": [
        "objtype",
        "objid",
        "decodedObjectCache",
        "inititializeDecodedObjectCache",
        "isObject",
        "objtype",
        "objid",
        "objtype",
        "objtype",
        "objtype",
        "objtype",
        "decodedObjectCache",
        "decodedObjectCache",
        "objtype",
        "decodedObjectCache",
        "objtype",
        "objtype",
        "objid",
        "decodedObjectCache",
        "objtype",
        "decodedObjectCache",
        "objtype",
        "objid",
        "decodedObjectCache",
        "objtype",
        "objid",
        "decodedObjectCache",
        "objtype",
        "objid",
        "decodedObjectCache",
        "decodedObjectCache",
        "$",
        "popDefObj",
        "encodedEls",
        "decodedObjectCache",
        "encodedEls",
        "$",
        "popDefObj",
        "$",
        "popDefObj",
        "$",
        "popDefObj",
        "$",
        "encoded",
        "decodedObjectCache",
        "objtype",
        "decodedObjectCache",
        "objtype",
        "decodedObjectCache",
        "objtype",
        "objid",
        "decoded",
        "decodedObjectCache",
        "objtype",
        "objid",
        "$",
        "objtype",
        "objid",
        "datael",
        "encoded",
        "$",
        "encoded",
        "decoded",
        "decoded",
        "$",
        "getDecodedData",
        "res",
        "$",
        "popDefObj",
        "$",
        "popDefObj",
        "src"
    ],
    "literals": [
        "\"The cache attribute [\"",
        "\"] was undefined\"",
        "'.'",
        "'.encoded-data-holder[data-encoded-data-objtype=\"'",
        "'\"][data-encoded-data-objid=\"'",
        "'\"]'",
        "'data-encoded-data-data'",
        "'encoded:'",
        "'decoded:'",
        "\"Trying to get data atts\"",
        "\"RES:\"",
        "'body'",
        "'hover'",
        "'['",
        "']'"
    ],
    "variables": [
        "decodedObjectCache",
        "encodedEls",
        "objtype",
        "objid",
        "encoded",
        "decoded",
        "datael",
        "encoded",
        "decoded",
        "res",
        "src"
    ],
    "comments": [
        "This section is for managing object details encoded into data attribute\n * values in the HTML generated by PHP.\n * First, we declare a global JS object \"var decodedObjectCache = {};\"\n * to hold/cache the decoded values so we don't have to decode them again every time.\n * \n * Function \"getDecodedData(objtype,objid)\" returns the data object details for\n * object of type=objtype and id=objid.\n * \n * First checks the global cache \"decodedObjectCache.type.id\" - if it exists, \n * returns it. If not, checks the page for element of class: 'encoded-data-holder',\n * with the elements \"data-encoded-data-objtype=type\" and 'data-encoded-data-objid=id'\n * \n *  If it finds that element, parses the value of 'data-encoded-data-data' into\n *  a JavaScript object, assigns the result to \"decodedObjectCache.objtype.objid\", and\n *  returns it.\n * \n * @returns object - the decoded data object.",
        "var decodedObjectCache = {};",
        "We get the decoded data for a particular object instance (objtype/objid)\n * getDecodedData(objtype,objid): returns the data for that object\n * OR for all instances of that type:\n * getDecodedData(objtype): data for all instances of that type, keyed by ID\n * OR all the encoded data we have on the page:\n * getDecodedData(): ALL the decoded data, keyed by type/id\n * \n * @param string objtype\n * @param string objid\n * @returns object data",
        "As defined in app.blade.php\n     var popDefObj = {\n       dataModelType:'data-model-type-name',\n        dataModelId:'data-model-id',\n        jsPopupTmpCallerDataAttr:'data-js_popup-template-calls',\n        jsPopupTmpCalledDataAttr:'data-js-popup-template-called',\n        encodedDataHolderClass:'encoded-data-holder',\n        encDatMdlDataAttr:'data-encoded-data-objtype',\n        encDatIdDataAttr:'data-encoded-data-objid',\n        encDatDatDataAttr:'data-encoded-data-data'\n     };",
        "var res = getDecodedData('borrower','1');",
        "var data_atts = $('div.data-atts-holder');\n  if (data_atts.length) {\n    var enc_data = data_atts.attr('data-atts');\n    console.log(\"The encoded data\", enc_data);\n    var dec_obj = $.parseJSON(enc_data);\n    console.log(\"The Decoded Obj:\", dec_obj);\n  }",
        "Special pop-up JS to show model/id details when hovering...\n * \n * @param {type} theVar\n * @param {type} subStr\n * @returns {Boolean}",
        "$('body').on('hover', '.'+popDefObj.popTemplateClass, function (event) {"
    ],
    "docstrings": [
        "* This library manages if you have encoded model/instance details encoded as \n * data-attributes in JS and you want to pop them into a dialog when the user\n * hovers or clicks on an element. Assumes pklib.js",
        "* Gets decoded object attribute data for the given model/id - or for all\n * instances of model if id not given, or for all known if neither given\n * @param string|object|nul objtype - if string, the object type. If object,\n *   should be of the form: {objtype:objtype, objid:objid}\n *   if null, all encoded data returned.\n * @param string|null objid\n * @returns {decodedObjectCache}"
    ],
    "functions": [
        "getDecodedData",
        "inititializeDecodedObjectCache",
        "objDataDecode"
    ],
    "classes": []
}