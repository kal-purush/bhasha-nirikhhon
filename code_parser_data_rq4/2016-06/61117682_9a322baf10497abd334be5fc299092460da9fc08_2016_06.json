{
    "identifiers": [
        "root",
        "factory",
        "exports",
        "factory",
        "factory",
        "root",
        "lib",
        "root",
        "lib",
        "selector",
        "selector",
        "selector",
        "den",
        "selector",
        "selector",
        "newNode",
        "newNode",
        "newNode",
        "newTag",
        "newTag",
        "den",
        "newNode",
        "newTag",
        "newNode",
        "newTag",
        "newNode",
        "attr",
        "newNode",
        "attr",
        "attr",
        "den",
        "newNode",
        "newNode",
        "referenceNode",
        "newNode",
        "referenceNode",
        "newNode",
        "den",
        "newNode",
        "newNode",
        "newNode",
        "newNode",
        "referenceNode",
        "newNode",
        "referenceNode",
        "newNode",
        "den",
        "newNode",
        "newNode",
        "newNode",
        "newNode",
        "index",
        "newNode",
        "index",
        "index",
        "index",
        "selector",
        "den",
        "node",
        "node",
        "selector",
        "node",
        "node",
        "den",
        "node",
        "node",
        "node",
        "ancestorNode",
        "options",
        "options",
        "options",
        "ancestorNode",
        "options",
        "node",
        "node",
        "ancestorNode",
        "node",
        "node",
        "other",
        "other",
        "den",
        "other",
        "other",
        "other",
        "den",
        "other",
        "selector",
        "Den",
        "selector",
        "den",
        "den",
        "obj",
        "obj",
        "obj",
        "den",
        "obj",
        "obj",
        "obj",
        "den",
        "obj",
        "obj",
        "obj",
        "den",
        "obj",
        "obj",
        "obj",
        "den",
        "obj",
        "obj",
        "obj",
        "den",
        "obj",
        "obj",
        "obj",
        "obj",
        "den",
        "maxVersion",
        "version",
        "version",
        "maxVersion",
        "version",
        "den",
        "navigator",
        "den",
        "navigator",
        "den",
        "html",
        "div",
        "html",
        "div",
        "den",
        "startNode",
        "endNode",
        "endNode",
        "endNode",
        "current",
        "endNode",
        "next",
        "current",
        "ret",
        "next",
        "current",
        "next",
        "ret",
        "den",
        "startNode",
        "endNode",
        "wrapper",
        "wrapper",
        "den",
        "wrapper",
        "wrapper",
        "wrapper",
        "den",
        "startNode",
        "wrapper",
        "wrapper",
        "den",
        "startNode",
        "endNode",
        "wrapper",
        "den",
        "node",
        "offset",
        "den",
        "node",
        "node",
        "offset",
        "node",
        "den",
        "node",
        "right",
        "node",
        "offset",
        "right",
        "den",
        "childRight",
        "node",
        "den",
        "node",
        "right",
        "den",
        "fragment",
        "div",
        "fragment",
        "div",
        "den",
        "arg",
        "arg",
        "v",
        "arg",
        "ret",
        "v",
        "arg",
        "div",
        "arg",
        "ret",
        "den",
        "div",
        "ret",
        "getSelection",
        "den",
        "den",
        "getSelection",
        "sel",
        "sel",
        "position",
        "sel",
        "sel",
        "position",
        "Node",
        "forward",
        "forward",
        "selector",
        "den",
        "selector",
        "element1",
        "element2",
        "den",
        "element1",
        "node1",
        "element1",
        "den",
        "element2",
        "node2",
        "element2",
        "den",
        "newNode3",
        "den",
        "node2",
        "offset2",
        "newNode2",
        "den",
        "node1",
        "offset1",
        "newNode3",
        "den",
        "node1",
        "offset1",
        "newNode2",
        "den",
        "node2",
        "offset2",
        "den",
        "newNode2",
        "newNode3",
        "densplit",
        "densplit",
        "startNode",
        "startOffset",
        "endNode",
        "endOffset",
        "startNode",
        "den",
        "startNode",
        "startNode",
        "arguments",
        "startNode",
        "arguments",
        "startNode",
        "startOffset",
        "endNode",
        "den",
        "endNode",
        "startNode",
        "startOffset",
        "endNode",
        "endOffset",
        "node",
        "offset",
        "node",
        "offset",
        "node",
        "node",
        "den",
        "node",
        "node",
        "node",
        "Dens",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "NodeList",
        "NamedNodeMap",
        "HTMLCollection",
        "den",
        "dens"
    ],
    "literals": [
        "\"object\"",
        "\"object\"",
        "\"den\"",
        "\"dens\"",
        "\"string\"",
        "\"\"",
        "\"B\"",
        "\"I\"",
        "\"U\"",
        "\"STRIKE\"",
        "\"A\"",
        "\"div\"",
        "\"\"",
        "\"div\"",
        "\"string\"",
        "\"div\"",
        "\"Caret\"",
        "\"Range\"",
        "\"None\"",
        "\"forward\"",
        "\"densplit\"",
        "\"string\""
    ],
    "variables": [
        "lib",
        "newNode",
        "node",
        "node",
        "den",
        "div",
        "ret",
        "current",
        "startNode",
        "next",
        "right",
        "childRight",
        "div",
        "ret",
        "div",
        "sel",
        "position",
        "forward",
        "node1",
        "node2",
        "element1",
        "element2",
        "offset1",
        "offset2",
        "newNode2",
        "newNode3",
        "densplit",
        "dens"
    ],
    "comments": [
        "{{{1",
        "seletor === null or undefined or other",
        "den(x).replaceTag(\"h1\") -> newNode",
        "den(x).replaceTag(\"\")   // replace text node",
        "den(parent).insertAfterElement(node, reference)",
        "den(node).insertNextElementSibling(newNode)",
        "den(parent).insertAfter(node, reference)",
        "den(node).insertNextSibling(newNode)",
        "insert child at",
        "-> removed node",
        "remove self",
        "-> removed node",
        "remove child at",
        "include current node",
        "<#document> does not have maches() function",
        "options: {inclusive: false}",
        "index of parentElement",
        "<a>hello</a><b>world</b>",
        "den(a).extend(b)  -> <a>helloworld</a>",
        "<a>hello</a><b>world</b>",
        "den(b).prepend(a)  -> <b>helloworld</b>",
        "createElement(`<div class=\"foo\">Hello</div>`) -> the div Element",
        "TODO den.collect(startNode, endNode=null)",
        "",
        "collectSiblings(startNode) -> document-fragement  // to the end",
        "collectSiblings(startNode, endNode)",
        "",
        "does not include endNode",
        "den.wrap(startNode, endNode, tagName|node)",
        "",
        "Example:",
        "",
        "den.wrap(startNode, endNode, \"p\") -> wrapper",
        "<div> 1 </div>              wrap(1, 1, \"b\")            -> <div> <b>1</b> </div>",
        "<div> 1 <a>2</a> 3 </div>   wrap(<a>2</a>, 3, \"b\")     -> <div> 1 <b><a>2</a> 3</b> </div>",
        "",
        "den.wrap(startNode, null, \"p\")     from startNode to end siblings",
        "split element or text node.",
        "split(text)",
        "\"hello\"        -> \"llo\"                it becomes \"he\" \"llo\"",
        "^",
        "split(element)",
        "<b>hello</b>   -> <b>llo</b>           it becomes <b>he</b><b>llo</b>",
        "split Text Node",
        "split Element Node",
        "",
        "<b>hello</b>",
        "^",
        "1. node is <b>hello</b>",
        "2. right is <b></b>         by cloneNode(false)",
        "3. <b>hello</b><b></b>      insert right to left's nextSibling",
        "4. <b>he</b><b>llo</b>      all right child siblings are moved into right.",
        "remove empty text node",
        "innerHTML(documentFragment)",
        "createDocumentFragment(nodes),(text)",
        "}}}1",
        "Den Selection Library",
        "{{{1",
        "return Element, not TextNode",
        "type: \"None\", Caret, Range",
        "CARE: right click don't depend on it",
        "first right click: false.",
        "second right click: true.",
        "is selection direction is forward",
        "position == 0 if nodes are the same",
        "dens.split() -> <densplit>",
        "<b>hello</b>  -> <b>he<densplit>ll</densplit>o</b>",
        "~~",
        "",
        "",
        "depends den.INLINE_TAGS",
        "hello <b>world</b> guten                    case 1: split text",
        "~~~                                       -> he<denslipt>llo</denslipt>",
        "~~~~~~~~~~~~~~~~~~~~~~                    -> he<denslipt>llo <b>world</b> guten</densplit>",
        "~~                               -> ..",
        "~~~~~                             -> hello <b><denslipt>world</denslipt></b> guten",
        "",
        "hello <b>world</b> <b>guten</b>             case 2: split element",
        "~~~~~~~~                                  -> he<densplit>llo <b>w</b><densplit><b>orld</b>",
        "~~~~~~~~~~~~~~                      -> ..",
        "copy current value",
        "var {node1, node2, element1, element2, offset1, offset2} = this",
        "node1 = node1 or element1",
        "remove empty text nodes",
        "select(node|selector)",
        "select(startNode, startOffset, endNode, endOffset)",
        "moveCursor(node, [offset=0])",
        "}}}1",
        "fix chrome for..of",
        "vim: fdm=marker commentstring=//%s"
    ],
    "docstrings": [],
    "functions": [
        "replace",
        "replaceTag",
        "insertAfterElement",
        "insertNextElementSibling",
        "insertPreviousElementSibling",
        "insertAfter",
        "insertNextSibling",
        "insertPreviousSibling",
        "insertAt",
        "remove",
        "removeAt",
        "closest",
        "isAncestor",
        "index",
        "extend",
        "prepend",
        "node1",
        "element1",
        "offset1",
        "node2",
        "element2",
        "offset2",
        "text",
        "hasCaret",
        "hasRange",
        "hasSelection",
        "isForward",
        "closest",
        "setRange",
        "split",
        "select",
        "moveCursor",
        "moveCursorAfter"
    ],
    "classes": [
        "Den",
        "Dens"
    ]
}