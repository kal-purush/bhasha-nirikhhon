{
    "identifiers": [
        "itertools",
        "re",
        "sys",
        "random",
        "pandas",
        "pd",
        "numpy",
        "np",
        "id",
        "fastaname",
        "id",
        "fastaname",
        "open",
        "_fastaname",
        "chr_fasta",
        "chr_fasta",
        "read",
        "splitlines",
        "join",
        "chr_list",
        "_sequence",
        "chromosome",
        "isinstance",
        "chromosome",
        "Chromosome",
        "sequence",
        "chromosome",
        "sequence",
        "revsequence",
        "chromosome",
        "revsequence",
        "property",
        "_id",
        "id",
        "setter",
        "value",
        "isinstance",
        "value",
        "value",
        "property",
        "_sequence",
        "sequence",
        "setter",
        "value",
        "isinstance",
        "value",
        "value",
        "property",
        "_revsequence",
        "revsequence",
        "setter",
        "value",
        "isinstance",
        "value",
        "value",
        "property",
        "_fastaname",
        "mid",
        "chr",
        "sequence",
        "count",
        "mid",
        "chr",
        "sequence",
        "len",
        "sequence",
        "property",
        "__mid",
        "property",
        "__chr",
        "property",
        "__sequence",
        "sequence",
        "setter",
        "value",
        "isinstance",
        "value",
        "value",
        "upper",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "Chromosome",
        "chr1",
        "chr2",
        "chr3",
        "chr4",
        "chr5",
        "chr6",
        "chr7",
        "chr8",
        "chr9",
        "chr10",
        "chr11",
        "chr12",
        "chr13",
        "chr14",
        "chr15",
        "chr16",
        "chrmito",
        "chr_list",
        "chr_list",
        "i",
        "len",
        "chr_list",
        "whole_genome",
        "whole_genome",
        "chr_list",
        "i",
        "sequence",
        "whole_genome",
        "open",
        "orf_fasta",
        "orf_fasta",
        "read",
        "replace",
        "replace",
        "replace",
        "split",
        "orf_list",
        "len",
        "orf_list",
        "i",
        "len",
        "orf_list",
        "orf_list",
        "i",
        "split",
        "i",
        "len",
        "orf_list",
        "orf_splitlist",
        "i",
        "orf_splitlist",
        "i",
        "replace",
        "x",
        "x",
        "orf_splitlist",
        "x",
        "x",
        "orf_splitlist",
        "len",
        "header_list",
        "i",
        "len",
        "header_list",
        "header_list",
        "i",
        "split",
        "x",
        "x",
        "header_split",
        "re",
        "findall",
        "join",
        "header_list",
        "x",
        "x",
        "which_chr_list",
        "i",
        "len",
        "which_chr",
        "converter_dictionary",
        "which_chr",
        "i",
        "len",
        "header_list",
        "i",
        "len",
        "header_list",
        "re",
        "findall",
        "header_list",
        "i",
        "i",
        "len",
        "gene_id",
        "gene_id",
        "i",
        "Gene",
        "gene_id",
        "i",
        "which_chr",
        "i",
        "gene_seq",
        "i",
        "gene"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"ID must be an Integer.\"",
        "\"Sequence must be a String.\"",
        "\"RevSequence must be a String.\"",
        "\"sequence must be a string\"",
        "\"fsa_sequences/S288C_Chromosome I.fsa\"",
        "\"fsa_sequences/S288C_Chromosome II.fsa\"",
        "\"fsa_sequences/S288C_Chromosome III.fsa\"",
        "\"fsa_sequences/S288C_Chromosome IV.fsa\"",
        "\"fsa_sequences/S288C_Chromosome V.fsa\"",
        "\"fsa_sequences/S288C_Chromosome VI.fsa\"",
        "\"fsa_sequences/S288C_Chromosome VII.fsa\"",
        "\"fsa_sequences/S288C_Chromosome VIII.fsa\"",
        "\"fsa_sequences/S288C_Chromosome IX.fsa\"",
        "\"fsa_sequences/S288C_Chromosome X.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XI.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XII.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XIII.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XIV.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XV.fsa\"",
        "\"fsa_sequences/S288C_Chromosome XVI.fsa\"",
        "\"fsa_sequences/S288C_Chromosome Mito.fsa\"",
        "\"\"",
        "\"fsa_sequences/orf_coding.fasta\"",
        "\"i>\"",
        "\"\"",
        "\"sub>\"",
        "\"\"",
        "\"->\"",
        "\"\"",
        "\">\"",
        "\"\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\",\\s(Chr\\s([IVX]+|Mito)|2-micron plasmid)\"",
        "\"\"",
        "\"Chr I\"",
        "\"Chr II\"",
        "\"Chr III\"",
        "\"Chr IV\"",
        "\"Chr V\"",
        "\"Chr VI\"",
        "\"Chr VII\"",
        "\"Chr VIII\"",
        "\"Chr IX\"",
        "\"Chr X\"",
        "\"Chr XI\"",
        "\"Chr XII\"",
        "\"Chr XIII\"",
        "\"Chr XIV\"",
        "\"Chr XV\"",
        "\"Chr XVI\"",
        "\"Chr Mito\"",
        "\"2-micron plasmid\"",
        "\"([^-][\\d]+?)-([\\d]+?),\""
    ],
    "variables": [
        "_id",
        "_fastaname",
        "chr_list",
        "chr_list",
        "_sequence",
        "_revsequence",
        "sequence",
        "revsequence",
        "_id",
        "_sequence",
        "_revsequence",
        "__mid",
        "__chr",
        "__sequence",
        "sequence_binding",
        "__sequence",
        "chr1",
        "chr2",
        "chr3",
        "chr4",
        "chr5",
        "chr6",
        "chr7",
        "chr8",
        "chr9",
        "chr10",
        "chr11",
        "chr12",
        "chr13",
        "chr14",
        "chr15",
        "chr16",
        "chrmito",
        "chr_list",
        "whole_genome",
        "orf_list",
        "orf_list",
        "orf_splitlist",
        "orf_splitlist",
        "i",
        "gene_seq",
        "header_list",
        "header_split",
        "header_split",
        "i",
        "gene_id",
        "which_chr_list",
        "which_chr",
        "converter_dictionary",
        "which_chr",
        "i",
        "loc_list",
        "loc_list",
        "i",
        "gene",
        "gene"
    ],
    "comments": [
        "read in the file, delete the headers, concatenate the single lines of the sequence and store them as a single string in sequence",
        "generate the reverse sequence",
        "add befehl",
        "getter fÃ¼r id, sequence & revsequence",
        "self.__location = location",
        "COMMENT for DATA GROUP #######",
        "feel free to replace 'sequence'-information by start-, end-positions and strand (+/-)",
        "COMMENT FOR REPLICATION_GROUP #######",
        "count: 1 for unreplicated gene, 2 for copied gene",
        "@property",
        "def location(self):",
        "return self.__location",
        "TODO: check for valid nucleotides here",
        "open the file, read it and create a list, where each element is a gene with header+sequence",
        "entfernen des ersten nicht vorhandenden elements",
        "initialise the new list[gen][header=0 or gen=1]",
        "Trennen von header und sequenz",
        "replace \"\\n\"",
        "find out which chr with regular expressions and put them in a nested list",
        "creates a list where loc_list[0] = all the tuples of locations for gene 0 in str form"
    ],
    "docstrings": [
        "\"\"\"\n    an object for the chromosome with the attributes:\n    id -> gives out the chromosome in integer form 1-16, 17 = mitochondrial chromosome\n    fastaname -> is only important for the initiation of the object and used by the function createchromosomes\n    sequence -> sequence of the whole chromosome\n    revsequence -> the reverse sequence of the whole chromosome\n\n    possible operations are:\n    gene.id -> gives the chromosome number 1-16, 17 = mitochondrial chromosome\n    gene.sequence -> gives the sequence of the chromosome\n    gene.revsequence -> gives out the reverse sequence of the chromosome\n    \"\"\"",
        "\"\"\"\n    an object for the gene sequence with the attributes:\n    id -> gene name\n    chr -> which chromosome the gene is on in integer form, 1-15 und 17 = mitochondrial chromosome and 18 = 2-micron plasmid\n    sequence -> sequence of the dna which is transcribed\n    count ->\n    sequence_binding -> records if the gene is bound (=1) or currently not bound (=0), important for transcription vs replikation (i think)\n\n    possible operations are:\n    gene.mid -> gives the gene name\n    gene.chr -> gives the chromosome on which the gene is on\n    gene.sequence -> gives the sequence of the gene\n    \"\"\"",
        "\"\"\"\n    Gen Sequenz\n    \"\"\"",
        "\"\"\"\n    Gen ID\n    \"\"\"",
        "\"\"\"\n    Which Chr\n    \"\"\"",
        "\"\"\"\n    Location\n    \"\"\""
    ],
    "functions": [
        "__add__",
        "id",
        "id",
        "sequence",
        "sequence",
        "revsequence",
        "revsequence",
        "fastaname",
        "mid",
        "chr",
        "sequence",
        "sequence",
        "createchromosomes",
        "createwholegenome",
        "creategenes"
    ],
    "classes": [
        "Chromosome",
        "Gene"
    ]
}