{
    "identifiers": [
        "unittest",
        "os",
        "difflib",
        "gramps",
        "test",
        "test_util",
        "Gramps",
        "gramps",
        "gen",
        "TEMP_DIR",
        "DATA_DIR",
        "gramps",
        "gen",
        "datehandler",
        "set_format",
        "gramps",
        "cli",
        "user",
        "User",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "DATA_DIR",
        "args",
        "args",
        "set_format",
        "Gramps",
        "user",
        "User",
        "auto_accept",
        "quiet",
        "gramps",
        "run",
        "args",
        "err",
        "err",
        "tstfile",
        "os",
        "path",
        "splitext",
        "os",
        "path",
        "basename",
        "tstfile",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "fname",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "tstfile",
        "os",
        "path",
        "join",
        "TEMP_DIR",
        "tstfile",
        "call",
        "TREE_NAME",
        "tst_file",
        "result_file",
        "err",
        "compare",
        "expect_file",
        "result_file",
        "msg",
        "os",
        "remove",
        "result_file",
        "OSError",
        "msg",
        "expect_file",
        "result_file",
        "open",
        "expect_file",
        "encoding",
        "exp_f",
        "open",
        "result_file",
        "encoding",
        "res_f",
        "difflib",
        "unified_diff",
        "exp_f",
        "readlines",
        "res_f",
        "readlines",
        "n",
        "lineterm",
        "line",
        "diff",
        "line",
        "line",
        "msg",
        "line",
        "msg",
        "unittest",
        "TestCase",
        "tearDown",
        "call",
        "TREE_NAME",
        "do_it",
        "tst_file",
        "msg",
        "fail",
        "tst_file",
        "msg",
        "unittest",
        "main"
    ],
    "literals": [
        "\"Test_exporttest\"",
        "\"tests\"",
        "\"call:\"",
        "\"out:\"",
        "\"err:\"",
        "\".gramps\"",
        "\"-C\"",
        "\"-q\"",
        "\"--import\"",
        "\"--export\"",
        "\"Cleaning up.\"",
        "\"Export failed, no 'Cleaning up.'\"",
        "'utf-8_sig'",
        "'utf-8_sig'",
        "'\\n'",
        "\"\"",
        "\"--- \\n\"",
        "\"+++ \\n\"",
        "\"-y -q\"",
        "\"--remove\"",
        "'exp_sample_csv.csv'",
        "': '",
        "\"__main__\""
    ],
    "variables": [
        "TREE_NAME",
        "TEST_DIR",
        "gramps",
        "err",
        "fname",
        "tst_file",
        "expect_file",
        "result_file",
        "err",
        "msg",
        "diff",
        "msg",
        "tst_file",
        "msg"
    ],
    "comments": [
        "! /usr/bin/env python3",
        "Use ISO date for test",
        "we will leave the result_file in place if there was an error.",
        "removes it if it existed",
        "out, err = self.call(\"-C\", TREE_NAME,",
        "\"--import\", example)"
    ],
    "docstrings": [
        "\"\"\"\nGramps - a GTK+/GNOME based genealogy program\n\nCopyright (c) 2016 Gramps Development Team\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA\n\"\"\"",
        "\"\"\" Call Gramps to perform the action with out and err captured \"\"\"",
        "\"\"\" based on tstfile, prepare an result export and compare with\n    expected.\n    \"\"\"",
        "\"\"\" This uses the diff library to compare two files\n    \"\"\"",
        "\"\"\" These tests compare various exported files with expected files,\n    based on the matching '.gramps' test file as a source.\n    As more types of exports are tested, we will need to provide some\n    filters for the differences; some types of exports have Gramps versions,\n    export dates, file names etc. that don't count as differences.\n    \"\"\"",
        "\"\"\" Run a csv export test \"\"\""
    ],
    "functions": [
        "call",
        "do_it",
        "compare",
        "setUp",
        "tearDown",
        "test_csv"
    ],
    "classes": [
        "ExportControl"
    ]
}