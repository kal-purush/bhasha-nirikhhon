{
    "identifiers": [
        "re",
        "charmhelpers",
        "core",
        "hookenv",
        "log",
        "relation_set",
        "charm_name",
        "config",
        "status_set",
        "DEBUG",
        "charmhelpers",
        "contrib",
        "openstack",
        "ip",
        "resolve_address",
        "resources",
        "resource_params",
        "relation_id",
        "crm_ocf",
        "setting",
        "settings",
        "config",
        "setting",
        "hostname",
        "log",
        "format",
        "setting",
        "DEBUG",
        "re",
        "search",
        "setting",
        "m",
        "m",
        "group",
        "format",
        "setting",
        "status_set",
        "msg",
        "DNSHAException",
        "msg",
        "format",
        "charm_name",
        "networkspace",
        "hostname_key",
        "hostname_group",
        "log",
        "format",
        "hostname_key",
        "hostname",
        "DEBUG",
        "hostname_group",
        "append",
        "hostname_key",
        "crm_ocf",
        "format",
        "hostname",
        "resolve_address",
        "endpoint_type",
        "networkspace",
        "len",
        "hostname_group",
        "log",
        "format",
        "join",
        "hostname_group",
        "DEBUG",
        "relation_set",
        "relation_id",
        "relation_id",
        "groups",
        "format",
        "charm_name",
        "join",
        "hostname_group",
        "status_set",
        "msg",
        "DNSHAException",
        "msg"
    ],
    "literals": [
        "'ocf:maas:dns'",
        "'os-admin-hostname'",
        "'os-internal-hostname'",
        "'os-public-hostname'",
        "'DNS HA: Hostname setting {} is None. Ignoring.'",
        "''",
        "'os-(.+?)-hostname'",
        "'Unexpected DNS hostname setting: {}. '",
        "'Cannot determine network space name'",
        "''",
        "'blocked'",
        "'res_{}_{}_hostname'",
        "'DNS HA: Resource {}: {} already exists in '",
        "'hostname group - skipping'",
        "'params fqdn=\"{}\" ip_address=\"{}\" '",
        "''",
        "'DNS HA: Hostname group is set with {} as members. '",
        "'Informing the ha relation'",
        "' '",
        "'grp_{}_hostnames'",
        "' '",
        "'DNS HA: Hostname group has no members.'",
        "'blocked'"
    ],
    "variables": [
        "settings",
        "hostname_group",
        "hostname",
        "m",
        "networkspace",
        "msg",
        "hostname_key",
        "resources",
        "hostname_key",
        "resource_params",
        "hostname_key",
        "msg"
    ],
    "comments": [
        "Copyright 2014-2016 Canonical Limited.",
        "",
        "This file is part of charm-helpers.",
        "",
        "charm-helpers is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU Lesser General Public License version 3 as",
        "published by the Free Software Foundation.",
        "",
        "charm-helpers is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU Lesser General Public License for more details.",
        "",
        "You should have received a copy of the GNU Lesser General Public License",
        "along with charm-helpers.  If not, see <http://www.gnu.org/licenses/>.",
        "",
        "Copyright 2016 Canonical Ltd.",
        "",
        "Authors:",
        "Openstack Charmers <",
        "",
        "Check which DNS settings are set and update dictionaries"
    ],
    "docstrings": [
        "\"\"\"\nHelpers for high availability.\n\"\"\"",
        "\"\"\"Raised when an error occurs setting up DNS HA\n    \"\"\"",
        "\"\"\" Check for os-*-hostname settings and update resource dictionaries for\n    the HA relation.\n\n    @param resources: Pointer to dictionary of resources.\n                      Usually instantiated in ha_joined().\n    @param resource_params: Pointer to dictionary of resource parameters.\n                            Usually instantiated in ha_joined()\n    @param relation_id: Relation ID of the ha relation\n    @param crm_ocf: Corosync Open Cluster Framework resource agent to use for\n                    DNS HA\n    \"\"\""
    ],
    "functions": [
        "update_dns_ha_resource_params"
    ],
    "classes": [
        "DNSHAException"
    ]
}