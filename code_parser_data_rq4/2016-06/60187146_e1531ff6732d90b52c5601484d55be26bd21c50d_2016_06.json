{
    "identifiers": [
        "server",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "ApplicationContext",
        "org",
        "springframework",
        "stereotype",
        "Component",
        "java",
        "util",
        "Component",
        "springContext",
        "Autowired",
        "springContext",
        "ServiceDispatcher",
        "springContext",
        "springContext",
        "logger",
        "LoggerFactory",
        "getLogger",
        "getClass",
        "requestMap",
        "serviceUri",
        "requestMap",
        "get",
        "beanName",
        "serviceUri",
        "beanName",
        "serviceUri",
        "startsWith",
        "httpMethod",
        "requestMap",
        "get",
        "httpMethod",
        "beanName",
        "beanName",
        "beanName",
        "beanName",
        "serviceUri",
        "startsWith",
        "beanName",
        "beanName",
        "service",
        "service",
        "springContext",
        "getBean",
        "beanName",
        "requestMap",
        "e",
        "e",
        "printStackTrace",
        "service",
        "springContext",
        "getBean",
        "requestMap",
        "service"
    ],
    "literals": [
        "\"REQUEST_URI\"",
        "\"notFound\"",
        "\"/tokens\"",
        "\"REQUEST_METHOD\"",
        "\"POST\"",
        "\"tokenIssue\"",
        "\"DELETE\"",
        "\"tokenExpier\"",
        "\"GET\"",
        "\"tokenVerify\"",
        "\"notFound\"",
        "\"/users\"",
        "\"users\"",
        "\"notFound\"",
        "\"notFound\""
    ],
    "variables": [
        "springContext",
        "service"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "init",
        "HandlersApi",
        "dispatch"
    ],
    "classes": [
        "ServiceDispatcher"
    ]
}