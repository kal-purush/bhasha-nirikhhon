{
    "identifiers": [
        "os",
        "copy",
        "copy",
        "StringIO",
        "StringIO",
        "fabric",
        "colors",
        "fabric",
        "api",
        "abort",
        "env",
        "get",
        "put",
        "require",
        "sudo",
        "require",
        "env",
        "service_daemon",
        "DAEMON_TYPES",
        "abort",
        "env",
        "service_daemon",
        "join",
        "DAEMON_TYPES",
        "copy",
        "DAEMON_TYPES",
        "env",
        "service_daemon",
        "isinstance",
        "daemon_conf",
        "getattr",
        "env",
        "daemon_conf",
        "daemon_conf",
        "env",
        "service_daemon",
        "daemon_conf",
        "services",
        "get_service_daemon",
        "target_name",
        "file_data",
        "services",
        "os",
        "path",
        "join",
        "daemon_conf",
        "target_name",
        "daemon_conf",
        "put",
        "local_path",
        "StringIO",
        "file_data",
        "remote_path",
        "target_path",
        "use_sudo",
        "daemon_type",
        "manage_service",
        "daemon_type",
        "manage_service",
        "manage_service",
        "x",
        "x",
        "services",
        "services",
        "get_service_daemon",
        "target_name",
        "remote_file_path",
        "services",
        "remote_file_path",
        "replace",
        "daemon_type",
        "remote_file_path",
        "replace",
        "daemon_conf",
        "StringIO",
        "get",
        "remote_file_path",
        "buf",
        "prepared_services",
        "append",
        "target_name",
        "buf",
        "getvalue",
        "install_services",
        "prepared_services",
        "names",
        "action",
        "isinstance",
        "names",
        "names",
        "get_service_daemon",
        "name",
        "names",
        "daemon_conf",
        "name",
        "action",
        "sudo",
        "full_cmd",
        "warn_only",
        "e",
        "colors",
        "red",
        "full_cmd",
        "e"
    ],
    "literals": [
        "'systemd'",
        "'daemon_cmd'",
        "'systemctl %(action)s %(name)s'",
        "'target_dir'",
        "'/etc/systemd/system'",
        "'file_extension'",
        "'service'",
        "'supervisor'",
        "'daemon_cmd'",
        "'supervisorctl %(action)s %(name)s'",
        "'target_dir'",
        "'supervisor_target_dir'",
        "'/etc/supervisord/conf.d/'",
        "'file_extension'",
        "'conf'",
        "'upstart'",
        "'daemon_cmd'",
        "'service %(name)s %(action)s'",
        "'target_dir'",
        "'/etc/init'",
        "'file_extension'",
        "'conf'",
        "'service_daemon'",
        "'Provided `service_daemon` %s is invalid. Supported daemon types are: %s'",
        "', '",
        "'target_dir'",
        "'target_dir'",
        "'target_dir'",
        "'target_dir'",
        "'target_dir'",
        "'%s.%s'",
        "'file_extension'",
        "'supervisor'",
        "'supervisorctl'",
        "'reread'",
        "'systemd'",
        "'systemctl'",
        "'daemon-reload'",
        "'enable'",
        "'${DAEMON_TYPE}'",
        "'${DAEMON_FILE_EXTENSION}'",
        "'file_extension'",
        "'daemon_cmd'",
        "'name'",
        "'action'",
        "'Failed: %s'",
        "''"
    ],
    "variables": [
        "DAEMON_TYPES",
        "daemon_conf",
        "daemon_conf",
        "daemon_type",
        "daemon_conf",
        "target_path",
        "prepared_services",
        "daemon_type",
        "daemon_conf",
        "remote_file_path",
        "remote_file_path",
        "buf",
        "names",
        "daemon_type",
        "daemon_conf",
        "full_cmd"
    ],
    "comments": [
        "Support loading target_dir from env",
        "Ensure configuration files are reloaded",
        "Ensure configuration files are reloaded",
        "Ensure services are started on startup",
        "Construct remote path",
        "Download the remote file",
        "store it in prepared services",
        "Use standard install_services to install them"
    ],
    "docstrings": [
        "\"\"\"Install provided services by uploading configuration files to the detected ``daemon_type`` specific directory\n\n    :param services: List of services to install where each item is a tuple with the signature: ``(target_name, file_data)``\n\n    **Warning:**\n        For supervisor the default include dir is `/etc/supervisord/conf.d/` and it can be overwritten via\n        `env.supervisor_target_dir`. One must ensure that directory is included in the global supervisor configuration\n    \"\"\"",
        "\"\"\"Install provided services by copying the remote file to the detected ``daemon_type`` specific directory\n\n    :param services: List of services to install where each item is a tuple with the signature: ``(target_name, remote_file_path)``\n\n    The remote_file_path supports the following keywords:\n\n    -  ``${DAEMON_TYPE}``: Replaced with the detected daemon type (see `DAEMON_TYPES`)\n    -  ``${DAEMON_FILE_EXTENSION}``: Replaced with the `file_extension` value for the detected daemon type (see `DAEMON_TYPES`)\n\n    **Warning:**\n        For supervisor the default include dir is `/etc/supervisord/conf.d/` and it can be overwritten via\n        `env.supervisor_target_dir`. One must ensure that directory is included in the global supervisor configuration\n    \"\"\"",
        "\"\"\"Perform `action` on services\n\n    :param names: Can be a list of services or a name of a single service to control\n    :param action: Action that should be executed for the given services\n    \"\"\""
    ],
    "functions": [
        "get_service_daemon",
        "install_services",
        "install_services_cp",
        "manage_service"
    ],
    "classes": []
}