{
    "identifiers": [
        "CLMSUI",
        "CLMSUI",
        "CLMSUI",
        "CLMSUI",
        "proteins",
        "protein",
        "protein",
        "protein",
        "d3",
        "protein",
        "clink",
        "clink",
        "clink",
        "clink",
        "edgeIds",
        "clink",
        "clink",
        "protein",
        "node",
        "clink",
        "isFromId",
        "clink",
        "clink",
        "isFromId",
        "clink",
        "clink",
        "isFromId",
        "clink",
        "clink",
        "edgeIds",
        "clink",
        "node",
        "a",
        "b",
        "b",
        "a",
        "node",
        "node",
        "node",
        "d3",
        "d",
        "d",
        "node",
        "node",
        "proteins",
        "proteins",
        "protein",
        "makeNodeEdgeList",
        "protein",
        "nodeLinkArr",
        "pMap",
        "nodeLinkArr",
        "nodeLink",
        "pMap",
        "nodeLink",
        "nodeLink",
        "pos",
        "pos",
        "edge",
        "pMap",
        "edge",
        "cur",
        "cur",
        "max",
        "max",
        "cur",
        "max",
        "nodeLink",
        "max",
        "nodeLinkArr",
        "pMap",
        "nodeLinkArr",
        "nodeLink",
        "pMap",
        "nodeLink",
        "nodeLink",
        "pos",
        "pos",
        "edge",
        "pMap",
        "edge",
        "cur",
        "cur",
        "min",
        "min",
        "cur",
        "min",
        "nodeLink",
        "min",
        "order",
        "node",
        "order",
        "order",
        "pos",
        "node",
        "order",
        "node",
        "order",
        "node",
        "order",
        "node",
        "interLinks",
        "interLinks",
        "tot",
        "node",
        "tot",
        "node",
        "order",
        "tot",
        "node",
        "tot",
        "node",
        "node",
        "order",
        "pnode",
        "pnode",
        "pos",
        "pos",
        "edge",
        "edge",
        "node",
        "thisNodeSize",
        "edge",
        "runDistance",
        "edge",
        "allDistance",
        "leftDist",
        "leftDist",
        "leftDistance",
        "circLeftDistance",
        "orderDistance",
        "edge",
        "runDistance",
        "edge",
        "allDistance",
        "rightDist",
        "rightDist",
        "rightDistance",
        "circRightDistance",
        "runDistance",
        "pnode",
        "leftDistance",
        "rightDistance",
        "order",
        "order",
        "pos",
        "node",
        "order",
        "crossings",
        "orders",
        "orders",
        "n",
        "crossings",
        "n",
        "crossings",
        "n",
        "min",
        "min",
        "crossings",
        "n",
        "order",
        "orders",
        "n",
        "order",
        "order",
        "node",
        "interLinks",
        "pMap",
        "node",
        "order",
        "order",
        "node",
        "lcrossTest",
        "rcrossTest",
        "orders",
        "run",
        "d3",
        "run",
        "pnode",
        "pnode",
        "pos",
        "pos",
        "edge",
        "edge",
        "enode",
        "node",
        "pMap",
        "enode",
        "isOpenEdge",
        "openCount",
        "activeSet",
        "edge",
        "activeSet",
        "edge",
        "active",
        "curActive",
        "activeSet",
        "edge",
        "active",
        "tot",
        "curActive",
        "openCount",
        "tot",
        "order",
        "returnMinOrder",
        "crossings",
        "orders",
        "order",
        "order",
        "node",
        "interLinks",
        "pMap",
        "variations",
        "run",
        "d3",
        "run",
        "pnode",
        "pnode",
        "pos",
        "activeArr",
        "pos",
        "edge",
        "activeSet",
        "edge",
        "active",
        "curActive",
        "removed",
        "activeArr",
        "edge",
        "removed",
        "remLen",
        "removed",
        "a",
        "b",
        "a",
        "b",
        "n",
        "removed",
        "n",
        "l",
        "rpos",
        "remLen",
        "n",
        "tot",
        "ropen",
        "activeArr",
        "rpos",
        "pos",
        "edge",
        "edge",
        "enode",
        "node",
        "pMap",
        "enode",
        "isOpenEdge",
        "openCount",
        "activeSet",
        "edge",
        "activeSet",
        "edge",
        "activeSet",
        "edge",
        "activeArr",
        "edge",
        "active",
        "tot",
        "curActive",
        "openCount",
        "tot",
        "order",
        "order",
        "order",
        "newOrder",
        "n",
        "newOrder",
        "n",
        "newOrder",
        "m",
        "newOrder",
        "m",
        "temp",
        "newOrder",
        "n",
        "variations",
        "min",
        "n",
        "countCrossing",
        "shuffledOrder",
        "crossings",
        "min",
        "min",
        "crossings",
        "order",
        "shuffledOrder",
        "shuffledOrder",
        "shuffle",
        "order",
        "crossings",
        "shuffledOrder",
        "min",
        "order",
        "order",
        "interLinks",
        "interLinks",
        "a",
        "b",
        "b",
        "a",
        "n",
        "interLinks",
        "n",
        "inwardConn",
        "interLinks",
        "pMap",
        "order",
        "leastCrossingsEnd",
        "order",
        "choice",
        "interLinks",
        "pMap",
        "pMap",
        "choice",
        "order",
        "leastCrossingsEnd2",
        "order",
        "interLinks",
        "pMap",
        "order",
        "proteins",
        "pArray",
        "pArray",
        "pArray",
        "makeNodeEdgeLists",
        "proteins",
        "sort",
        "interLinks",
        "node",
        "node"
    ],
    "literals": [
        "\"cur | min\""
    ],
    "variables": [
        "CLMSUI",
        "node",
        "edgeIds",
        "isFromId",
        "max",
        "cur",
        "min",
        "cur",
        "pos",
        "allDistance",
        "orderDistance",
        "thisNodeSize",
        "runDistance",
        "leftDistance",
        "rightDistance",
        "leftDist",
        "circLeftDistance",
        "rightDist",
        "circRightDistance",
        "pos",
        "order",
        "min",
        "n",
        "lcrossTest",
        "rcrossTest",
        "orders",
        "crossings",
        "tot",
        "active",
        "activeSet",
        "curActive",
        "active",
        "openCount",
        "enode",
        "isOpenEdge",
        "tot",
        "active",
        "activeSet",
        "activeArr",
        "curActive",
        "active",
        "openCount",
        "l",
        "removed",
        "remLen",
        "n",
        "remLen",
        "rpos",
        "ropen",
        "enode",
        "isOpenEdge",
        "newOrder",
        "n",
        "m",
        "temp",
        "min",
        "shuffledOrder",
        "order",
        "n",
        "crossings",
        "order",
        "pMap",
        "n",
        "choice",
        "pArray",
        "interLinks"
    ],
    "comments": [
        "must have active matches, no intra-protein links, no repeated edges",
        "console.log (\"flat edges\", node.edges);",
        "console.log (\"nested edges\", node.edges);",
        "pick node with most number of edges to nodes in pmap",
        "pick node with least number of edges to nodes not in pmap",
        "Baur end append routine 1",
        "Baur end append routine 2",
        "Baur end append routine 3",
        "console.log (\"val\", val);",
        "might be closer via circle 'gap'",
        "might be closer via circle 'gap'",
        "console.log (node, \"left\", leftDistance, \"right\", rightDistance);",
        "Baur end append routine 4A - added stuff by me",
        "check for open-edge crossings on individual level",
        "check for open-edge crossings in added protein too depending on direction added",
        "console.log (\"l\", lcrossTest, rcrossTest, node, order);",
        "is edge that has unlinked endpoint in current node set",
        "use curClosed so we don't include links opened at same pos as crossings",
        "console.log (\"pnode\", pnode, \"pos\", pos, \"curClosed\", curClosed, \"openCount\", openCount, \"tot\", tot);",
        "console.log (\"leastCross\", crossings);",
        "console.log (\"RUN\", run);",
        "console.log (\"NODE\", pnode.id, pnode);",
        "activeSet.remove (edge.edgeId);",
        "grr, default is to sort numbers alphabetically",
        "console.log (\"removed\", removed, activeArr);",
        "console.log (\"r\", l-rpos, l, rpos, ropen, activeArr, activeArr.length, tot);",
        "console.log (\"postremoved\", activeArr);",
        "is edge that has unlinked endpoint in current node set",
        "use curActive so we don't include links opened at same pos as crossings",
        "console.log (\"pnode\", pnode, \"pos\", pos, \"curActive\", curActive, \"activeArr\", activeArr, \"openCount\", openCount, \"tot\", tot);",
        "console.log (\"choice\", choice);",
        "fixedEnd (pOrder, choice.protein);",
        "leastLengthEnd (order, choice.node, interLinks);"
    ],
    "docstrings": [],
    "functions": [
        "makeNodeEdgeList",
        "makeNodeEdgeLists",
        "inwardConn",
        "outwardConn",
        "randomEnd",
        "fixedEnd",
        "leastLengthEnd",
        "returnMinOrder",
        "leastCrossingsEnd",
        "leastCrossingsEnd2",
        "countCrossing",
        "shuffle",
        "sort"
    ],
    "classes": []
}