{
    "identifiers": [
        "UnityEngine",
        "Collections",
        "Generic",
        "Random",
        "UnityEngine",
        "Random",
        "Completed",
        "MonoBehaviour",
        "Serializable",
        "min",
        "max",
        "minimum",
        "min",
        "maximum",
        "max",
        "Count",
        "Count",
        "GameObject",
        "GameObject",
        "GameObject",
        "GameObject",
        "GameObject",
        "Vector3",
        "Vector3",
        "gridPositions",
        "Clear",
        "x",
        "columns",
        "x",
        "y",
        "rows",
        "y",
        "gridPositions",
        "Add",
        "Vector3",
        "x",
        "y",
        "boardHolder",
        "GameObject",
        "transform",
        "x",
        "columns",
        "x",
        "y",
        "rows",
        "y",
        "floorTiles",
        "Random",
        "Range",
        "floorTiles",
        "Length",
        "x",
        "x",
        "columns",
        "y",
        "y",
        "rows",
        "toInstantiate",
        "outerWallTiles",
        "Random",
        "Range",
        "outerWallTiles",
        "Length",
        "Instantiate",
        "toInstantiate",
        "Vector3",
        "x",
        "y",
        "Quaternion",
        "identity",
        "GameObject",
        "instance",
        "transform",
        "SetParent",
        "boardHolder",
        "Random",
        "Range",
        "gridPositions",
        "Count",
        "gridPositions",
        "randomIndex",
        "gridPositions",
        "RemoveAt",
        "randomIndex",
        "randomPosition",
        "GameObject",
        "tileArray",
        "minimum",
        "maximum",
        "Random",
        "Range",
        "minimum",
        "maximum",
        "i",
        "objectCount",
        "i",
        "RandomPosition",
        "tileArray",
        "Random",
        "Range",
        "tileArray",
        "Length",
        "Instantiate",
        "tileChoice",
        "randomPosition",
        "Quaternion",
        "identity",
        "level",
        "BoardSetup",
        "InitialiseList",
        "LayoutObjectAtRandom",
        "wallTiles",
        "wallCount",
        "minimum",
        "wallCount",
        "maximum",
        "LayoutObjectAtRandom",
        "foodTiles",
        "foodCount",
        "minimum",
        "foodCount",
        "maximum",
        "Mathf",
        "Log",
        "level",
        "LayoutObjectAtRandom",
        "enemyTiles",
        "enemyCount",
        "enemyCount",
        "Instantiate",
        "exit",
        "Vector3",
        "columns",
        "rows",
        "Quaternion",
        "identity"
    ],
    "literals": [
        "\"Board\""
    ],
    "variables": [
        "minimum",
        "maximum",
        "columns",
        "rows",
        "Count",
        "wallCount",
        "Count",
        "foodCount",
        "GameObject",
        "exit",
        "floorTiles",
        "wallTiles",
        "foodTiles",
        "enemyTiles",
        "outerWallTiles",
        "Transform",
        "boardHolder",
        "gridPositions",
        "x",
        "y",
        "x",
        "y",
        "GameObject",
        "toInstantiate",
        "GameObject",
        "instance",
        "randomIndex",
        "Vector3",
        "randomPosition",
        "objectCount",
        "i",
        "Vector3",
        "randomPosition",
        "GameObject",
        "tileChoice",
        "enemyCount"
    ],
    "comments": [
        "Allows us to use Lists.",
        "Tells Random to use the Unity Engine random number generator.",
        "Using Serializable allows us to embed a class with sub properties in the inspector.",
        "Minimum value for our Count class.",
        "Maximum value for our Count class.",
        "Assignment constructor.",
        "Number of columns in our game board.",
        "Number of rows in our game board.",
        "Lower and upper limit for our random number of walls per level.",
        "Lower and upper limit for our random number of food items per level.",
        "Prefab to spawn for exit.",
        "Array of floor prefabs.",
        "Array of wall prefabs.",
        "Array of food prefabs.",
        "Array of enemy prefabs.",
        "Array of outer tile prefabs.",
        "A variable to store a reference to the transform of our Board object.",
        "A list of possible locations to place tiles.",
        "Clears our list gridPositions and prepares it to generate a new board.",
        "Clear our list gridPositions.",
        "Loop through x axis (columns).",
        "Within each column, loop through y axis (rows).",
        "At each index add a new Vector3 to our list with the x and y coordinates of that position.",
        "Sets up the outer walls and floor (background) of the game board.",
        "Instantiate Board and set boardHolder to its transform.",
        "Loop along x axis, starting from -1 (to fill corner) with floor or outerwall edge tiles.",
        "Loop along y axis, starting from -1 to place floor or outerwall tiles.",
        "Choose a random tile from our array of floor tile prefabs and prepare to instantiate it.",
        "Check if we current position is at board edge, if so choose a random outer wall prefab from our array of outer wall tiles.",
        "Instantiate the GameObject instance using the prefab chosen for toInstantiate at the Vector3 corresponding to current grid position in loop, cast it to GameObject.",
        "Set the parent of our newly instantiated object instance to boardHolder, this is just organizational to avoid cluttering hierarchy.",
        "RandomPosition returns a random position from our list gridPositions.",
        "Declare an integer randomIndex, set it's value to a random number between 0 and the count of items in our List gridPositions.",
        "Declare a variable of type Vector3 called randomPosition, set it's value to the entry at randomIndex from our List gridPositions.",
        "Remove the entry at randomIndex from the list so that it can't be re-used.",
        "Return the randomly selected Vector3 position.",
        "LayoutObjectAtRandom accepts an array of game objects to choose from along with a minimum and maximum range for the number of objects to create.",
        "Choose a random number of objects to instantiate within the minimum and maximum limits",
        "Instantiate objects until the randomly chosen limit objectCount is reached",
        "Choose a position for randomPosition by getting a random position from our list of available Vector3s stored in gridPosition",
        "Choose a random tile from tileArray and assign it to tileChoice",
        "Instantiate tileChoice at the position returned by RandomPosition with no change in rotation",
        "SetupScene initializes our level and calls the previous functions to lay out the game board",
        "Creates the outer walls and floor.",
        "Reset our list of gridpositions.",
        "Instantiate a random number of wall tiles based on minimum and maximum, at randomized positions.",
        "Instantiate a random number of food tiles based on minimum and maximum, at randomized positions.",
        "Determine number of enemies based on current level number, based on a logarithmic progression",
        "Instantiate a random number of enemies based on minimum and maximum, at randomized positions.",
        "Instantiate the exit tile in the upper right hand corner of our game board"
    ],
    "docstrings": [],
    "functions": [
        "Count",
        "InitialiseList",
        "BoardSetup",
        "Vector3",
        "RandomPosition",
        "LayoutObjectAtRandom",
        "SetupScene"
    ],
    "classes": [
        "BoardManager",
        "Count"
    ]
}