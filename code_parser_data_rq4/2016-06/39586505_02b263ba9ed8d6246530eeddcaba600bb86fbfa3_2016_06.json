{
    "identifiers": [
        "DisposableDelegate",
        "kernel",
        "DisposableDelegate",
        "kernel",
        "target",
        "id",
        "msgFunc",
        "payload",
        "Private",
        "disposeOnDone",
        "kernel",
        "disposeCb",
        "disposeCb",
        "target",
        "id",
        "msgFunc",
        "msg",
        "kernel",
        "cb",
        "msg",
        "kernel",
        "cb",
        "msg",
        "kernel",
        "cb",
        "msg",
        "kernel",
        "cb",
        "data",
        "metadata",
        "kernel",
        "data",
        "content",
        "metadata",
        "payload",
        "data",
        "metadata",
        "buffers",
        "disposeOnDone",
        "kernel",
        "data",
        "content",
        "metadata",
        "buffers",
        "payload",
        "disposeOnDone",
        "data",
        "metadata",
        "kernel",
        "data",
        "content",
        "metadata",
        "payload",
        "onClose",
        "onClose",
        "future",
        "future",
        "msg",
        "kernel",
        "msg",
        "kernel",
        "payload",
        "Private",
        "disposeOnDone",
        "kernel"
    ],
    "literals": [
        "'use strict'",
        "'phosphor-disposable'",
        "'./ikernel'",
        "string",
        "string",
        "string",
        "string",
        "'comm_open'",
        "'Comm is closed'",
        "'comm_msg'",
        "'comm_close'",
        "''",
        "''"
    ],
    "variables": [
        "content",
        "payload",
        "content",
        "payload",
        "content",
        "payload",
        "future",
        "onClose"
    ],
    "comments": [
        "Copyright (c) Jupyter Development Team.",
        "Distributed under the terms of the Modified BSD License."
    ],
    "docstrings": [
        "* Comm channel handler.",
        "* Construct a new comm channel.",
        "* The unique id for the comm channel.\n   *\n   * #### Notes\n   * This is a read-only property.",
        "* The target name for the comm channel.\n   *\n   * #### Notes\n   * This is a read-only property.",
        "* Get the callback for a comm close event.\n   *\n   * #### Notes\n   * This is called when the comm is closed from either the server or\n   * client.\n   *\n   * **See also:** [[ICommClose]], [[close]]",
        "* Set the callback for a comm close event.\n   *\n   * #### Notes\n   * This is called when the comm is closed from either the server or\n   * client.\n   *\n   * **See also:** [[ICommClose]], [[close]]",
        "* Get the callback for a comm message received event.\n   *\n   * **See also:** [[ICommMsg]]",
        "* Set the callback for a comm message received event.\n   *\n   * **See also:** [[ICommMsg]]",
        "* Test whether the comm has been disposed.\n   *\n   * #### Notes\n   * This is a read-only property which is always safe to access.",
        "* Open a comm with optional data and metadata.\n   *\n   * #### Notes\n   * This sends a `comm_open` message to the server.\n   *\n   * **See also:** [[ICommOpen]]",
        "* Send a `comm_msg` message to the kernel.\n   *\n   * #### Notes\n   * This is a no-op if the comm has been closed.\n   *\n   * **See also:** [[ICommMsg]]",
        "* Close the comm.\n   *\n   * #### Notes\n   * This will send a `comm_close` message to the kernel, and call the\n   * `onClose` callback if set.\n   *\n   * This is a no-op if the comm is already closed.\n   *\n   * **See also:** [[ICommClose]], [[onClose]]",
        "* Dispose of the resources held by the comm."
    ],
    "functions": [
        "commId",
        "targetName",
        "onClose",
        "onClose",
        "onMsg",
        "onMsg",
        "isDisposed",
        "open",
        "send",
        "close",
        "dispose"
    ],
    "classes": [
        "Comm"
    ]
}