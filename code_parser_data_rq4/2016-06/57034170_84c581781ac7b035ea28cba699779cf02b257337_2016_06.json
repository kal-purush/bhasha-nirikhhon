{
    "identifiers": [
        "os",
        "sys",
        "raw_input",
        "path",
        "path",
        "replace",
        "path",
        "decode",
        "path",
        "os",
        "path",
        "exists",
        "path",
        "path",
        "path",
        "dirs",
        "files",
        "os",
        "walk",
        "path",
        "path",
        "dirs",
        "len",
        "len",
        "files",
        "prefix_len",
        "filename",
        "files",
        "filename",
        "replace",
        "os",
        "rename",
        "path",
        "filename",
        "path",
        "filename_new",
        "filename",
        "filename_new"
    ],
    "literals": [
        "'Type the path: '",
        "'\\\\'",
        "'/'",
        "'utf8'",
        "\"I did not find the file at, \"",
        "'__'",
        "'_'",
        "'/'",
        "'/'",
        "'Old: %s --> New: %s'",
        "'Bingo!'"
    ],
    "variables": [
        "path",
        "path",
        "path",
        "prefix_len",
        "filename_new"
    ],
    "comments": [
        "_*_ coding: utf8 _*_",
        "path = u'D:\\\\(专辑)jQuery Tutorials Playlist\\\\'",
        "=======================================================================",
        "filename_frag = filename.split('_')",
        "try:",
        "prefix_one = int(filename_frag[0])",
        "except:",
        "prefix_one = filename_frag[0]",
        "try:",
        "prefix_two = int(filename_frag[1])",
        "except:",
        "prefix_two = filename_frag[1]",
        "",
        "if type(prefix_one) == type(prefix_two):",
        "filename_new = '_'.join(filename_frag[1:])",
        "=======================================================================",
        "=======================================================================",
        "print filename, len(filename_frag[1])",
        "if len(filename_frag[1]) < prefix_len:",
        "prefix_new = '%0*d' % (prefix_len, int(filename_frag[1]))",
        "filename_frag[1] = prefix_new",
        "filename_new = '_'.join(filename_frag[1:])",
        "os.rename(path + '/' + filename, path + '/' + filename_new)",
        "print 'Old: %s --> New: %s' % (filename, filename_new)",
        "",
        "======================================================================="
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}