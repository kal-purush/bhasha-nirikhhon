{
    "identifiers": [
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "controllerTest",
        "java",
        "util",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "SpringApplicationConfiguration",
        "org",
        "springframework",
        "boot",
        "test",
        "TestRestTemplate",
        "org",
        "springframework",
        "boot",
        "test",
        "WebIntegrationTest",
        "org",
        "springframework",
        "test",
        "context",
        "junit4",
        "SpringJUnit4ClassRunner",
        "org",
        "springframework",
        "web",
        "client",
        "RestTemplate",
        "com",
        "fasterxml",
        "jackson",
        "core",
        "JsonProcessingException",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "GestaoConstrucaoCivilApplication",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "entity",
        "Categoria",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "entity",
        "Fornecedor",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "entity",
        "Produto",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "entity",
        "UnidadeMedida",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "CargoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "CategoriaRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "DadoEmpresaRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "EmpreendimentoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "EnderecoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "FornecedorRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "FuncionarioRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "ImovelRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "PessoaRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "PrestadoraServicoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "ProdutoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "TipoEmpreendimentoRepository",
        "br",
        "com",
        "system",
        "gestaoConstrucaoCivil",
        "repository",
        "UnidadeMedidaRepository",
        "RunWith",
        "SpringApplicationConfiguration",
        "classes",
        "WebIntegrationTest",
        "Autowired",
        "cargoRepository",
        "Autowired",
        "categoriaRepository",
        "Autowired",
        "dadosEmpresaRepository",
        "Autowired",
        "enderecoRepository",
        "Autowired",
        "tipoEmpreendimentoRepository",
        "Autowired",
        "imovelRepository",
        "Autowired",
        "fornecedorRepository",
        "Autowired",
        "funcionarioRepository",
        "Autowired",
        "prestadoraServicoRepository",
        "Autowired",
        "empreendimentoRepository",
        "Autowired",
        "pessoaRepository",
        "Autowired",
        "protudoRepository",
        "Autowired",
        "unidadeRepository",
        "restTemplate"
    ],
    "literals": [],
    "variables": [
        "cargoRepository",
        "categoriaRepository",
        "dadosEmpresaRepository",
        "enderecoRepository",
        "tipoEmpreendimentoRepository",
        "imovelRepository",
        "fornecedorRepository",
        "funcionarioRepository",
        "prestadoraServicoRepository",
        "empreendimentoRepository",
        "pessoaRepository",
        "protudoRepository",
        "unidadeRepository"
    ],
    "comments": [],
    "docstrings": [
        "* @Test public void testCriarCargoApi() throws JsonProcessingException {\n\t * \n\t * Cargo cargo = new Cargo(); cargo.setDescricao(\"Teste OK\");\n\t * \n\t * cargoRepository.save(cargo); }",
        "* @Test public void testeCriarCategoriaAPI() throws JsonProcessingException\n\t * {\n\t * \n\t * Categoria categoria = new Categoria(); categoria.setDescricaoCategoria(\n\t * \"Descricao Categoria\"); categoriaRepository.save(categoria);\n\t * \n\t * }",
        "@Test\n\t  public void testeCriarEnderecoAPI() throws JsonProcessingException{\n\t\t  Endereco endereco = new Endereco(); endereco.setBairro(\"Santo Antonio\");\n\t\t  endereco.setCidade(\"Campinas\"); endereco.setCep(\"132000-022\");\n\t\t endereco.setNumero(1010); endereco.setEstado(\"SP\"); endereco.setRua(\n\t\t \"Av 11 de agosot\"); enderecoRepository.save(endereco); }",
        "@Test\n\tpublic void testeCriarDadosEmpresaAPI() throws JsonProcessingException {\n\n\t\tDadoEmpresa dadosEmpresa = new DadoEmpresa();\n\t\tdadosEmpresa.setNomeFantasia(\"Loja de Tinta Bandeira\");\n\t\tdadosEmpresa.setCnpj(\"67.712.922/1003-11\");\n\t\tdadosEmpresa.setInscricaoEstadual(\"9999.111.566.848\");\n\t\tdadosEmpresa.setRazaoSocial(\"Bandeira LTDA\");\n\t\tdadosEmpresa.setEmail(\"emailteste@terra.com\");\n\t\tdadosEmpresa.setTelefone(\"1938710006\");\n\n\n\t\t Endereco endereco = new Endereco(); endereco.setBairro(\"Santo Antonio\");\n\t\t  endereco.setCidade(\"Campinas\"); endereco.setCep(\"132000-022\");\n\t\t endereco.setNumero(1010); endereco.setEstado(\"SP\"); endereco.setRua(\n\t\t \"Av 11 de agosot\"); \n\t\t enderecoRepository.save(endereco); \n\t\t \n\t\t\n\t\tdadosEmpresa.setEndereco(endereco);\n\t\t\n\t\tdadosEmpresaRepository.save(dadosEmpresa);\n\t}",
        "* @Test public void testeCriarTipoEmpreendimento() throws\n\t * JsonProcessingException{\n\t * \n\t * TipoEmpreendimento tipoEmpreendimentoCasa = new TipoEmpreendimento();\n\t * \n\t * tipoEmpreendimentoCasa.setDescricaoTipoEmpreendimento(\n\t * \"Condominio de casas\");\n\t * \n\t * \n\t * tipoEmpreendimentoRepository.save(tipoEmpreendimentoCasa); }",
        "@Test\n\tpublic void testeCriarFornecedor() throws JsonProcessingException {\n\t\t\n\t\t\n\t\tFornecedor fornecedor = new Fornecedor();\n\t\tfornecedor.setAtivo(true);\n\t\tfornecedor.setContato(\"Lula da Silva\");\n\t\t\n\t\tDadoEmpresa dadosEmpresa = new DadoEmpresa();\n\t\tdadosEmpresa.setNomeFantasia(\"Loja de Materiais\");\n\t\tdadosEmpresa.setCnpj(\"87.712.933/8569-12\");\n\t\tdadosEmpresa.setInscricaoEstadual(\"1111.111.566.848\");\n\t\tdadosEmpresa.setRazaoSocial(\"Loja de Materiais LTDA\");\n\t\tdadosEmpresa.setEmail(\"lula@terra.com\");\n\t\tdadosEmpresa.setTelefone(\"89332320006\");\n\t\tEndereco endereco = new Endereco(); \n\t\tendereco.setRua(\"Rua Av do Sol\"); \n\t\tendereco.setBairro(\"Bairro Pele\");\n\t\tendereco.setCidade(\"Valinhos\"); \n\t\tendereco.setCep(\"132222-111\");\n\t\tendereco.setNumero(11); \n\t\tendereco.setEstado(\"SP\");\n\t\t\n\t\tenderecoRepository.save(endereco); \n        dadosEmpresa.setEndereco(endereco);\n        dadosEmpresaRepository.save(dadosEmpresa);\n\t\t\n        fornecedor.setDadosEmpresa(dadosEmpresa);\n\t\tfornecedor.setObservacao(\"Corinthians > Santos\");\n\t\tfornecedorRepository.save(fornecedor);\n\t}",
        "Test\n\tpublic void testeCriarProduto() throws JsonProcessingException {\n\t\t\n\t\tProduto produto = new Produto();\n\t\tproduto.setAtivo(true);\n\t\tCategoria categoria = categoriaRepository.findOne(4L);\n\t\t\n\t\tproduto.setCategoria(categoria);\n\t\tproduto.setCodigoBarra(\"1231231231321\");\n\t\tproduto.setDescricao(\"Tinta\");\n\t\t\n\t\tUnidadeMedida unidadeMedida =  unidadeRepository.findOne(109L);\n\t\tunidadeMedida.setDescricaoCategoria(\"KM\");\n\t\tproduto.setUnidadeMedida(unidadeMedida);\n\t\tproduto.setUnidadeMedida(unidadeMedida);\n\t\tproduto.setValorCompra(10000.0);\n\t\tList <Fornecedor> fornecedores = fornecedorRepository.findAll();\n\t\tproduto.setFornecedores(fornecedores);\n\t\tprotudoRepository.save(produto);\n\t\t\n\t}",
        "Test\n\tpublic void testeCriarFornecedor() throws JsonProcessingException {\n\t\t\n\t\tImovel imovel = new Imovel();\n\t\t\n\t\timovel.setAndar(10);\n\t\t\n\t\timovelRepository.save(imovel);\n\t}",
        "Test\n\tpublic void testeCriarFuncionario() throws JsonProcessingException {\n\t\n\t\tEmpreendimento empreendimento = empreendimentoRepository.findOne(83L);\n\t\t\n\t\tSystem.out.println(\"Descricao \" + empreendimento.getDescricao());\n\t\tSystem.out.println(\"Teste \" + empreendimento.getEnderecoEmpreendimento().getBairro());\n\t}",
        "Test\n\tpublic void testeCriarFuncionario() throws JsonProcessingException {\n\t\n\t\tFuncionario funcionario = new Funcionario();\n\t    funcionario.setNomeCompleto(\"Jose da Silva\");\n\t    funcionario.setCpf(\"12111111111\");\n\t    funcionario.setRg(\"231231231231\");\n\t    funcionario.setIdade(69);\n\t    funcionario.setAtivo(true);\n\t\t\n\t    Endereco endereco = new Endereco(); \n\t\tendereco.setRua(\"Rua Pau da Bandeira\"); \n\t\tendereco.setBairro(\"Bairro Toror√≥\");\n\t\tendereco.setCidade(\"Campinas\"); \n\t\tendereco.setCep(\"132000-999\");\n\t\tendereco.setNumero(1011); \n\t\tendereco.setEstado(\"SP\");\n\t\t\n\t\tenderecoRepository.save(endereco); \n\t    funcionario.setEndereco(endereco);\n\t    \n\t    funcionario.setDataNascimento(new Date());\n\t    funcionario.setTelefoneCelular(\"3888888\");\n\t    funcionario.setTelefoneFixo(\"8979878997\");\n\t    Cargo cargo = new Cargo();\n\t\tcargo.setDescricao(\"aux\");\n\t\tcargoRepository.save(cargo);\n\t\tfuncionario.setCargo(cargo);\n\t\tfuncionario.setCarteiraTrabalho(4545645);\n\t\tDate dataAdmissao = new Date();\n\t\tfuncionario.setDataAdmissao(dataAdmissao);\n\t\tfuncionario.setEmpreendimento(null);\n\t\tpessoaRepository.save(funcionario);\n\t\t\n\t}",
        "Test\n\tpublic void testeCriarPrestadoraServico() throws JsonProcessingException {\n\t\n\t\tPrestadoraServico prestadoraServico = new PrestadoraServico();\n\t\tDadoEmpresa dadosEmpresa = new DadoEmpresa();\n\t\tdadosEmpresa.setNomeFantasia(\"Empresa Eng\");\n\t\tdadosEmpresa.setCnpj(\"90.888.111/1003-21\");\n\t\tdadosEmpresa.setInscricaoEstadual(\"9988.122.567.748\");\n\t\tdadosEmpresa.setRazaoSocial(\"Empresa Eng LTDA\");\n\t\tdadosEmpresa.setEmail(\"eng@terra.com\");\n\t\tdadosEmpresa.setTelefone(\"1938710076\");\n\t\tEndereco endereco = new Endereco(); \n\t\tendereco.setRua(\"Rua 100\"); \n\t\tendereco.setBairro(\"Bairro da Lua\");\n\t\tendereco.setCidade(\"Campinas\"); \n\t\tendereco.setCep(\"132110-785\");\n\t\tendereco.setNumero(41); \n\t\tendereco.setEstado(\"SP\");\n\t\t\n\t\tenderecoRepository.save(endereco); \n        dadosEmpresa.setEndereco(endereco);\n        dadosEmpresaRepository.save(dadosEmpresa);\n\t    \n        prestadoraServico.setDadoEmpresa(dadosEmpresa);\n        prestadoraServicoRepository.save(prestadoraServico);\n        \n\t\t\n\t}",
        "Test\n\tpublic void testeCriarEmpreendimento() throws JsonProcessingException {\n\t\n\t\tEmpreendimento empreendimento = new Empreendimento();\n\t\tempreendimento.setDescricao(\"Construcao OK\");\n\t\tempreendimento.setAtivo(true);\n\t\tempreendimento.setCrea(\"45456456456\");\n\t\tempreendimento.setDataAbertura(new Date());\n\t\tempreendimento.setDatafechamento(null);\n\t\t\n\t\tEndereco endereco = enderecoRepository.findOne(73L); \n\t\t\n\t\tempreendimento.setEnderecoEmpreendimento(endereco);\n        //Colocar o id do banco\n        \n\t\tPrestadoraServico engenheiroResponsavelTerceiro = prestadoraServicoRepository.findOne(72L);\n        empreendimento.setEngenheiroResponsavelTerceiro(engenheiroResponsavelTerceiro);\n        Funcionario engenheiroResponsavelFuncionario = funcionarioRepository.findOne(68L);\n        empreendimento.setEngenheiroResponsavelFuncionario(engenheiroResponsavelFuncionario);\n        \n        \n        TipoEmpreendimento tipoEmpreendimento = tipoEmpreendimentoRepository.findOne(38L);\n        empreendimento.setTipoEmpreendimento(tipoEmpreendimento);\n        empreendimento.setValoresGastos(0.0);\n        empreendimento.setValorMaximoGastar(100000000.0);\n        empreendimentoRepository.save(empreendimento);\n        \n        \n        \n\t}"
    ],
    "functions": [],
    "classes": [
        "ControllerTest"
    ]
}