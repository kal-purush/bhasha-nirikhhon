{
    "identifiers": [
        "argparse",
        "os",
        "os",
        "path",
        "sys",
        "pack",
        "unpack",
        "BMC_CONTAINER",
        "BIN_CONTAINER",
        "decode",
        "verbose",
        "count",
        "old",
        "count",
        "old",
        "verbose",
        "count",
        "b_log",
        "sys",
        "stdout",
        "count",
        "old",
        "b_log",
        "sys",
        "stdout",
        "stream",
        "verbose",
        "ltype",
        "lmsg",
        "verbose",
        "verb",
        "stream",
        "write",
        "LOG_TYPES",
        "ltype",
        "lmsg",
        "os",
        "linesep",
        "fname",
        "len",
        "bdat",
        "b_log",
        "sys",
        "stderr",
        "open",
        "fname",
        "f",
        "f",
        "read",
        "len",
        "bdat",
        "b_log",
        "sys",
        "stderr",
        "fname",
        "BMC_CONTAINER",
        "bdat",
        "len",
        "BIN_FILE_HEADER",
        "BIN_FILE_HEADER",
        "bdat",
        "len",
        "BIN_FILE_HEADER",
        "BIN_CONTAINER",
        "b_log",
        "sys",
        "stdout",
        "fname",
        "btype",
        "len",
        "bdat",
        "b_log",
        "sys",
        "stderr",
        "len",
        "bdat",
        "bdat",
        "TILE_HEADER_SIZE",
        "btype",
        "unpack",
        "t_hdr",
        "btype",
        "BIN_CONTAINER",
        "t_width",
        "t_height",
        "b_parse_rgb32b",
        "bdat",
        "len",
        "t_hdr",
        "len",
        "t_hdr",
        "bl",
        "btype",
        "BMC_CONTAINER",
        "unpack",
        "t_hdr",
        "t_params",
        "b_log",
        "sys",
        "stdout",
        "t_width",
        "t_height",
        "t_len",
        "t_len",
        "t_width",
        "t_height",
        "cf",
        "b_log",
        "sys",
        "stderr",
        "cf",
        "cf",
        "b_parse_rgb32b",
        "bdat",
        "len",
        "t_hdr",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "t_height",
        "b_parse_rgb32b",
        "bdat",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "len",
        "t_hdr",
        "cf",
        "cf",
        "b_parse_rgb565",
        "bdat",
        "len",
        "t_hdr",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "t_height",
        "b_parse_rgb565",
        "bdat",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "len",
        "t_hdr",
        "cf",
        "cf",
        "PALETTE",
        "bdat",
        "len",
        "t_hdr",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "t_height",
        "PALETTE",
        "bdat",
        "len",
        "t_hdr",
        "cf",
        "t_width",
        "t_height",
        "len",
        "t_hdr",
        "cf",
        "cf",
        "len",
        "t_bmp",
        "bmps",
        "append",
        "t_bmp",
        "o_bmps",
        "append",
        "o_bmp",
        "len",
        "bmps",
        "b_log",
        "sys",
        "stdout",
        "len",
        "bmps",
        "off",
        "len",
        "t_hdr",
        "bl",
        "bdat",
        "len",
        "t_hdr",
        "bl",
        "cnt",
        "len",
        "bmps",
        "cnt",
        "b_log",
        "sys",
        "stdout",
        "len",
        "bmps",
        "data",
        "len",
        "data",
        "unpack",
        "data",
        "pxl",
        "pxl",
        "pxl",
        "pxl",
        "pxl",
        "pxl",
        "d_out",
        "chr",
        "re",
        "chr",
        "gr",
        "chr",
        "bl",
        "data",
        "d_out",
        "data",
        "len",
        "data",
        "btype",
        "BIN_CONTAINER",
        "d_buf",
        "data",
        "len",
        "d_buf",
        "d_buf",
        "d_out",
        "d_out",
        "data",
        "data",
        "d_out",
        "dname",
        "os",
        "path",
        "isdir",
        "dname",
        "b_log",
        "sys",
        "stderr",
        "os",
        "path",
        "isdir",
        "os",
        "path",
        "join",
        "dname",
        "fname",
        "rsplit",
        "os",
        "sep",
        "os",
        "makedirs",
        "os",
        "path",
        "join",
        "dname",
        "fname",
        "rsplit",
        "os",
        "sep",
        "i",
        "len",
        "bmps",
        "b_write",
        "os",
        "path",
        "join",
        "dname",
        "fname",
        "i",
        "b_export_bmp",
        "len",
        "bmps",
        "i",
        "bmps",
        "i",
        "oldsave",
        "len",
        "o_bmps",
        "i",
        "b_write",
        "os",
        "path",
        "join",
        "dname",
        "fname",
        "i",
        "b_export_bmp",
        "len",
        "o_bmps",
        "i",
        "o_bmps",
        "i",
        "b_log",
        "sys",
        "stdout",
        "len",
        "bmps",
        "width",
        "height",
        "data",
        "pal",
        "pack",
        "len",
        "data",
        "pack",
        "width",
        "pack",
        "height",
        "pack",
        "len",
        "data",
        "data",
        "pack",
        "len",
        "data",
        "pack",
        "width",
        "pack",
        "height",
        "pack",
        "len",
        "data",
        "data",
        "fname",
        "data",
        "open",
        "fname",
        "f",
        "f",
        "write",
        "data",
        "argparse",
        "ArgumentParser",
        "description",
        "prs",
        "add_argument",
        "help",
        "action",
        "prs",
        "add_argument",
        "help",
        "required",
        "prs",
        "add_argument",
        "help",
        "prs",
        "add_argument",
        "help",
        "required",
        "prs",
        "add_argument",
        "help",
        "action",
        "prs",
        "parse_args",
        "sys",
        "argv",
        "BMCContainer",
        "verbose",
        "args",
        "verbose",
        "count",
        "args",
        "count",
        "old",
        "args",
        "old",
        "os",
        "path",
        "isdir",
        "args",
        "src",
        "sys",
        "stdout",
        "write",
        "os",
        "linesep",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "args",
        "src",
        "f",
        "files",
        "f",
        "rsplit",
        "upper",
        "args",
        "verbose",
        "sys",
        "stdout",
        "write",
        "os",
        "path",
        "join",
        "root",
        "f",
        "os",
        "linesep",
        "src_files",
        "append",
        "os",
        "path",
        "join",
        "root",
        "f",
        "len",
        "src_files",
        "sys",
        "stderr",
        "write",
        "args",
        "src",
        "os",
        "linesep",
        "exit",
        "os",
        "path",
        "isfile",
        "args",
        "src",
        "sys",
        "stderr",
        "write",
        "os",
        "linesep",
        "exit",
        "sys",
        "stdout",
        "write",
        "args",
        "src",
        "os",
        "linesep",
        "args",
        "src",
        "src",
        "src_files",
        "bmcc",
        "b_import",
        "src",
        "bmcc",
        "b_process",
        "bmcc",
        "b_export",
        "args",
        "dest",
        "bmcc",
        "b_flush",
        "bmcc"
    ],
    "literals": [
        "\"RDP8bmp\\x00\\x03\\x00\\x00\\x00\"",
        "\".BIN\"",
        "\".BMC\"",
        "\"[===]\"",
        "\"[+++]\"",
        "\"[---]\"",
        "\"[!!!]\"",

        "\"hex\"",
        "\"\"",
        "\"At most %d tiles will be processed.\"",
        "\"Old data will also be saved in separate files.\"",
        "\"%s %s%s\"",
        "\"Data is already waiting to be processed; aborting.\"",
        "\"rb\"",
        "\"Unable to retrieve file contents; aborting.\"",
        "\"Successfully loaded '%s' as a %s container.\"",
        "\"Nothing to process.\"",
        "\"\"",
        "\"<LLHH\"",
        "\"\"",
        "\"<LL\"",
        "\"Tile data is compressed (%d bytes compressed in %d bytes); skipping.\"",
        "\"Unexpected bpp (%d) found during processing; aborting.\"",
        "\"%d tiles successfully extracted so far.\"",
        "\"%d tiles successfully extracted in the end.\"",
        "\"\"",
        "\"<H\"",
        "\"\\xFF\"",
        "\"\"",
        "\"\"",
        "\"\\xFF\"",
        "\"\"",
        "\"\\xFF\"",
        "\"Destination must be an already existing folder.\"",
        "\"%s_%04d.bmp\"",
        "\"%s_old_%04d.bmp\"",
        "\"Successfully exported %d files.\"",
        "\"BM\"",
        "\"<L\"",
        "\"\\x00\\x00\\x00\\x00\\x7A\\x00\\x00\\x00\\x6C\\x00\\x00\\x00\"",
        "\"<L\"",
        "\"<L\"",
        "\"\\x01\\x00\\x20\\x00\\x03\\x00\\x00\\x00\"",
        "\"<L\"",
        "\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\xFF\\x00\\x00\\x00\\x00\\x00\\x00\\xFF niW\"",
        "\"\\x00\"",
        "\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"",
        "\"BM\"",
        "\"<L\"",
        "\"\\x00\\x00\\x00\\x00\\x36\\x04\\x00\\x00\\x28\\x00\\x00\\x00\"",
        "\"<L\"",
        "\"<L\"",
        "\"\\x01\\x00\\x08\\x00\\x00\\x00\\x00\\x00\"",
        "\"<L\"",
        "\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"",
        "\"wb\"",
        "\"\"",
        "\"__main__\"",
        "\"RDP Bitmap Cache parser (v. 1.00, 27/06/2016)\"",
        "\"-o\"",
        "\"--old\"",
        "\"Extract the old bitmap data found in the BMCache file.\"",
        "\"store_true\"",
        "\"-d\"",
        "\"--dest\"",
        "\"Specify the directory where to store the extracted bitmaps.\"",
        "\"-c\"",
        "\"--count\"",
        "\"Only extract the given number of bitmaps.\"",
        "\"-s\"",
        "\"--src\"",
        "\"Specify the BMCache file or directory to process.\"",
        "\"-v\"",
        "\"--verbose\"",
        "\"Determine the amount of information displayed.\"",
        "\"store_true\"",
        "\"[+++] Processing a directory...%s\"",
        "\".\"",
        "\"BIN\"",
        "\"BMC\"",
        "\"[---] File '%s' has been found.%s\"",
        "\"No suitable files were found under '%s' directory.%s\"",
        "\"Invalid -s/--src parameter; use -h/--help for help.%s\"",
        "\"[+++] Processing a single file: '%s'.%s\""
    ],
    "variables": [
        "BIN_FILE_HEADER",
        "BIN_CONTAINER",
        "BMC_CONTAINER",
        "TILE_HEADER_SIZE",
        "LOG_TYPES",
        "PALETTE",
        "bdat",
        "o_bmps",
        "bmps",
        "btype",
        "cnt",
        "fname",
        "oldsave",
        "pal",
        "verb",
        "bdat",
        "fname",
        "btype",
        "bdat",
        "btype",
        "off",
        "old",
        "o_bmp",
        "t_hdr",
        "key1",
        "key2",
        "t_width",
        "t_height",
        "bl",
        "t_bmp",
        "t_bmp",
        "t_len",
        "t_params",
        "bl",
        "cf",
        "t_bmp",
        "old",
        "o_bmp",
        "t_bmp",
        "old",
        "o_bmp",
        "pal",
        "t_bmp",
        "old",
        "o_bmp",
        "bl",
        "bdat",
        "d_out",
        "pxl",
        "bl",
        "gr",
        "re",
        "data",
        "d_out",
        "d_buf",
        "d_out",
        "d_buf",
        "data",
        "bdat",
        "bmps",
        "o_bmps",
        "prs",
        "args",
        "bmcc",
        "src_files",
        "src_files"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "This bit is always ONE when relevant data is smaller than expected data, thus it is most likely the \"compression\" bit flag."
    ],
    "docstrings": [],
    "functions": [
        "b_log",
        "b_import",
        "b_process",
        "b_parse_rgb565",
        "b_parse_rgb32b",
        "b_export",
        "b_export_bmp",
        "b_write",
        "b_flush"
    ],
    "classes": [
        "BMCContainer"
    ]
}