{
    "identifiers": [
        "re",
        "os",
        "socket",
        "urllib2",
        "xml",
        "etree",
        "ElementTree",
        "ET",
        "logging",
        "time",
        "trak",
        "Trak",
        "config",
        "log_line",
        "logging",
        "getLogger",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "regex",
        "PLAYED_REGEX",
        "regex",
        "match",
        "log_line",
        "m",
        "logger",
        "info",
        "format",
        "l_id",
        "m",
        "group",
        "process_item",
        "config",
        "m",
        "group",
        "regex",
        "UNPLAYED_REGEX",
        "regex",
        "match",
        "log_line",
        "m",
        "logger",
        "info",
        "format",
        "l_id",
        "m",
        "group",
        "process_item",
        "config",
        "m",
        "group",
        "config",
        "item",
        "played",
        "last_played",
        "last_unplayed",
        "logging",
        "getLogger",
        "played",
        "item",
        "last_played",
        "played",
        "item",
        "last_unplayed",
        "logger",
        "warn",
        "format",
        "item",
        "fetch_metadata",
        "item",
        "config",
        "metadata",
        "Trak",
        "config",
        "tvst",
        "scrobble",
        "metadata",
        "metadata",
        "metadata",
        "played",
        "played",
        "item",
        "item",
        "l_id",
        "config",
        "logging",
        "getLogger",
        "format",
        "url",
        "config",
        "get",
        "l_id",
        "l_id",
        "plex_token",
        "config",
        "get",
        "logger",
        "info",
        "format",
        "url",
        "url",
        "urllib2",
        "urlopen",
        "url",
        "timeout",
        "urllib2",
        "URLError",
        "e",
        "logger",
        "error",
        "format",
        "url",
        "url",
        "error",
        "e",
        "socket",
        "timeout",
        "e",
        "logger",
        "error",
        "format",
        "url",
        "url",
        "error",
        "e",
        "ET",
        "fromstring",
        "metadata",
        "read",
        "tree",
        "find",
        "video",
        "video",
        "logger",
        "info",
        "format",
        "l_id",
        "l_id",
        "video",
        "get",
        "logger",
        "info",
        "format",
        "l_id",
        "l_id",
        "video",
        "get",
        "video",
        "get",
        "re",
        "compile",
        "regex",
        "match",
        "episode",
        "m",
        "format",
        "show_name",
        "m",
        "group",
        "zfill",
        "m",
        "group",
        "zfill",
        "logger",
        "info",
        "format",
        "episode_label",
        "m",
        "group",
        "m",
        "group",
        "m",
        "group",
        "config",
        "logging",
        "getLogger",
        "open",
        "config",
        "get",
        "IOError",
        "logger",
        "error",
        "format",
        "config",
        "get",
        "f",
        "seek",
        "time",
        "sleep",
        "time",
        "time",
        "os",
        "fstat",
        "f",
        "fileno",
        "st_mtime",
        "os",
        "fstat",
        "f",
        "fileno",
        "st_mtime",
        "st_mtime",
        "logger",
        "debug",
        "format",
        "mtime",
        "time",
        "ctime",
        "os",
        "fstat",
        "f",
        "fileno",
        "st_mtime",
        "f",
        "close",
        "open",
        "config",
        "get",
        "IOError",
        "logger",
        "error",
        "format",
        "config",
        "get",
        "f",
        "seek",
        "os",
        "fstat",
        "f",
        "fileno",
        "st_mtime",
        "f",
        "readline",
        "line",
        "parse_line",
        "config",
        "line"
    ],
    "literals": [
        "'.*Updated play state for /library/metadata/([0-9]+).*'",
        "'.*Library item ([0-9]+).* got played by account'",
        "'.*Library item ([0-9]+).* got unplayed by account'",
        "'Found played TV show and extracted library id \\'{l_id}\\' from plex log '",
        "'Found unplayed TV show and extracted library id \\'{l_id}\\' from plex log '",
        "'Dupe detection : {0}, not submitting'",
        "'show_id'",
        "'season_number'",
        "'number'",
        "'{url}/library/metadata/{l_id}?X-Plex-Token={plex_token}'",
        "'plex-trakt-scrobbler'",
        "'mediaserver_url'",
        "'plex-trakt-scrobbler'",
        "'plex_token'",
        "'Fetching library metadata from {url}'",
        "'urllib2 error reading from {url} \\'{error}\\''",
        "'Timeout reading from {url} \\'{error}\\''",
        "'Video'",
        "'Ignoring played item library-id={l_id}, could not determine video library information.'",
        "'type'",
        "'episode'",
        "'Ignoring played item library-id={l_id}, because it is not an episode.'",
        "'guid'",
        "'grandparentTitle'",
        "'com.plexapp.agents.thetvdb://([0-9]+)/([0-9]+)/([0-9]+)\\?.*'",
        "\"{0} S{1}E{2}\"",
        "\"Matched TV show {0}\"",
        "'show_id'",
        "'season_number'",
        "'number'",
        "'plex-trakt-scrobbler'",
        "'mediaserver_log_location'",
        "'Unable to read log-file {0}. Shutting down.'",
        "'plex-trakt-scrobbler'",
        "'mediaserver_log_location'",
        "'Possible log file rotation, resetting file handle (st_mtime={mtime})'",
        "'plex-trakt-scrobbler'",
        "'mediaserver_log_location'",
        "'Unable to read log-file {0}. Shutting down.'",
        "'plex-trakt-scrobbler'",
        "'mediaserver_log_location'"
    ],
    "variables": [
        "last_played",
        "last_unplayed",
        "logger",
        "PLAYED_REGEX",
        "UNPLAYED_REGEX",
        "m",
        "m",
        "logger",
        "metadata",
        "tvst",
        "a",
        "last_played",
        "last_unplayed",
        "logger",
        "url",
        "metadata",
        "tree",
        "video",
        "episode",
        "show_name",
        "regex",
        "m",
        "episode_label",
        "logger",
        "st_mtime",
        "f",
        "f",
        "st_mtime",
        "line"
    ],
    "comments": [
        "!/usr/bin/env python",
        "when playing via a client, log lines are duplicated (seen via iOS)",
        "this skips dupes. Note: will also miss songs that have been repeated",
        "submit to tvshowtime.com",
        "scrobble was not successful , FIXME: do something?",
        "if not a:",
        "fail if request is greater than 2 seconds.",
        "matching from the guid field, which should provide the agent TVDB result",
        "reset our file handle in the event the log file was not written to",
        "within the last 60 seconds. This is a very crude attempt to support",
        "the log file i/o rotation detection cross-platform.",
        "read all new lines starting at the end. We attempt to match",
        "based on a regex value. If we have a match, extract the media file",
        "id and send it off to tvshowtime.com for scrobble."
    ],
    "docstrings": [
        "''' Matches known TV shows metadata log entries entries against input (log_line)\n\n        :param log_line: plex media server log line\n        :type log_line: string\n        :returns: Nothing '''",
        "''' Processes played / unplayed item scrobbling TVShowTime\n\n        :param item: played / unplayed item id\n        :type item: integer \n        :param played: flag to know if item has been played or unplayed\n        :type played: boolean '''",
        "''' retrieves the metadata information from the Plex media Server api. '''"
    ],
    "functions": [
        "parse_line",
        "process_item",
        "fetch_metadata",
        "monitor_log"
    ],
    "classes": []
}