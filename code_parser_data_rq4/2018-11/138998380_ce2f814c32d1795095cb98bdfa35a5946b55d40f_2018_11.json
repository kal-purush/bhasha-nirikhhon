{
    "identifiers": [
        "Jering",
        "Javascript",
        "NodeJS",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Threading",
        "Threading",
        "Tasks",
        "Jering",
        "Web",
        "SyntaxHighlighters",
        "HighlightJS",
        "_HighlightJSService",
        "_services",
        "_HighlightJSService",
        "_serviceProvider",
        "Dispose",
        "_services",
        "_services",
        "ServiceCollection",
        "AddHighlightJS",
        "_serviceProvider",
        "_services",
        "BuildServiceProvider",
        "_services",
        "_HighlightJSService",
        "_serviceProvider",
        "GetRequiredService",
        "IHighlightJSService",
        "T",
        "Action",
        "T",
        "configureOptions",
        "T",
        "_services",
        "_services",
        "ServiceCollection",
        "Configure",
        "configureOptions",
        "code",
        "languageAlias",
        "classPrefix",
        "CancellationToken",
        "cancellationToken",
        "GetOrCreateHighlightJSService",
        "HighlightAsync",
        "code",
        "languageAlias",
        "classPrefix",
        "cancellationToken",
        "languageAlias",
        "CancellationToken",
        "cancellationToken",
        "GetOrCreateHighlightJSService",
        "IsValidLanguageAliasAsync",
        "languageAlias",
        "cancellationToken"
    ],
    "literals": [
        "\"hljs-\""
    ],
    "variables": [
        "IServiceCollection",
        "_services",
        "ServiceProvider",
        "_serviceProvider",
        "IHighlightJSService",
        "_HighlightJSService"
    ],
    "comments": [
        "A class that provides static access to an instance of the default <see cref=\"IHighlightJSService\"/> implementation's public methods.",
        "</summary>",
        "HighlightJSService already exists and no configuration pending",
        "Dispose of service provider",
        "Create new service provider",
        "Configures options.",
        "</summary>",
        "<typeparam name=\"T\">The type of options to configure.</typeparam>",
        "<param name=\"configureOptions\">The action that configures the options.</param>",
        "Highlights code of a specified language.",
        "</summary>",
        "<param name=\"code\">Code to highlight.</param>",
        "<param name=\"languageAlias\">A HighlightJS language alias. Visit http://highlightjs.readthedocs.io/en/latest/css-classes-reference.html#language-names-and-aliases",
        "for the list of valid language aliases.</param>",
        "<param name=\"classPrefix\">If not null or whitespace, this string will be appended to HighlightJS classes. Defaults to \"hljs-\".</param>",
        "<param name=\"cancellationToken\">The cancellation token for the asynchronous operation.</param>",
        "<returns>Highlighted code.</returns>",
        "<exception cref=\"ArgumentException\">Thrown if <paramref name=\"languageAlias\"/> is not a valid HighlightJS language alias.</exception>",
        "<exception cref=\"ArgumentNullException\">Thrown if <paramref name=\"code\"/> is null.</exception>",
        "<exception cref=\"InvocationException\">Thrown if a NodeJS error occurs.</exception>",
        "<exception cref=\"ObjectDisposedException\">Thrown if this instance has been disposed or if an attempt is made to use one of its dependencies that has been disposed.</exception>",
        "<exception cref=\"OperationCanceledException\">Thrown if <paramref name=\"cancellationToken\"/> is cancelled.</exception>",
        "Determines whether a language alias is valid.",
        "</summary>",
        "<param name=\"languageAlias\">Language alias to validate. Visit http://highlightjs.readthedocs.io/en/latest/css-classes-reference.html#language-names-and-aliases",
        "for the list of valid language aliases.</param>",
        "<param name=\"cancellationToken\">The cancellation token for the asynchronous operation.</param>",
        "<returns>true if the specified language alias is a valid HighlightJS language alias. Otherwise, false.</returns>",
        "<exception cref=\"InvocationException\">Thrown if a NodeJS error occurs.</exception>",
        "<exception cref=\"ObjectDisposedException\">Thrown if this instance has been disposed or if an attempt is made to use one of its dependencies that has been disposed.</exception>",
        "<exception cref=\"OperationCanceledException\">Thrown if <paramref name=\"cancellationToken\"/> is cancelled.</exception>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "IHighlightJSService",
        "GetOrCreateHighlightJSService",
        "Configure",
        "HighlightAsync",
        "IsValidLanguageAliasAsync"
    ],
    "classes": [
        "StaticHighlightJSService"
    ]
}