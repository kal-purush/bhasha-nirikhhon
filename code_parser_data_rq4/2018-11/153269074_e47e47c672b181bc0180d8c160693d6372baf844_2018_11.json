{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "matplotlib",
        "pyplot",
        "plt",
        "i",
        "e",
        "energies",
        "t",
        "thickness",
        "open",
        "templatef",
        "format",
        "rThickness",
        "round",
        "t",
        "bEnergy",
        "round",
        "e",
        "open",
        "os",
        "getcwd",
        "directory",
        "f",
        "open",
        "os",
        "getcwd",
        "directory",
        "g",
        "e",
        "f",
        "readlines",
        "lines",
        "i",
        "len",
        "data",
        "data",
        "i",
        "split",
        "i",
        "len",
        "data",
        "mergedata",
        "data",
        "i",
        "i",
        "len",
        "mergedata",
        "mergedata",
        "i",
        "np",
        "pi",
        "binwidth",
        "np",
        "linspace",
        "binwidth",
        "num",
        "binwidth",
        "plt",
        "bar",
        "x",
        "length",
        "height",
        "mergedata",
        "width",
        "binwidth",
        "color",
        "g",
        "readlines",
        "lines2",
        "i",
        "len",
        "data2",
        "data2",
        "i",
        "split",
        "i",
        "len",
        "data2",
        "mergedata2",
        "data2",
        "i",
        "i",
        "len",
        "mergedata2",
        "mergedata2",
        "i",
        "np",
        "pi",
        "binwidth",
        "np",
        "linspace",
        "binwidth",
        "num",
        "binwidth",
        "plt",
        "bar",
        "x",
        "length2",
        "height",
        "mergedata2",
        "width",
        "binwidth",
        "color",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "title",
        "e",
        "t",
        "np",
        "sum",
        "mergedata",
        "i",
        "length",
        "i",
        "i",
        "len",
        "mergedata",
        "np",
        "sum",
        "mergedata",
        "mean"
    ],
    "literals": [
        "\"template.txt\"",
        "'r'",
        "\"/{rThickness}-{bEnergy:03}/\"",
        "\"in001_fort.27\"",
        "'r'",
        "\"in001_fort.28\"",
        "'r'",
        "\"Energy (GeV)\"",
        "\"Ratio of number of protons leaving to number of protons entering\"",
        "\"E= %.3f MeV, x= %.3f cm\""
    ],
    "variables": [
        "hour",
        "energies",
        "spread",
        "thickness",
        "input_protons",
        "actual_protons",
        "beam_time",
        "rows",
        "directory",
        "binwidth",
        "lines",
        "mergedata",
        "data",
        "data",
        "data",
        "i",
        "mergedata",
        "mergedata",
        "i",
        "length",
        "lines2",
        "mergedata2",
        "data2",
        "data2",
        "data2",
        "i",
        "mergedata2",
        "mergedata2",
        "i",
        "length2",
        "mean"
    ],
    "comments": [
        "MeV",
        "cm",
        "1 min beam time",
        "Gev",
        "print(mergedata[i])",
        "print(sum(mergedata))",
        "print(len(mergedata))",
        "plt.xlabel(\"Energy (GeV)\")",
        "plt.ylabel(\"Ratio of number of protons leaving to number of protons entering\")",
        "plt.title(\"E= %.3f MeV, x= %.3f cm\" % (e, t))",
        "plt.show()",
        "print(\"E= %.3f MeV, x= %.3f cm\" % (e, t))",
        "print(mergedata2[i])",
        "print(sum(mergedata2)/sum(mergedata))",
        "plt.show()",
        "totalp = []"
    ],
    "docstrings": [
        "\"\"\"\n                    for i in range(len(mergedata)):\n                        totalp.append((mergedata[i])*(length[i]))\n                    print(sum(totalp)/(sum(mergedata)) - binwidth/2)\n                    \"\"\"",
        "\"\"\"\ndf = pd.DataFrame(mergedata)\n\nlength2 = np.linspace(2*e*1000/140,2*e*1000,num=140)\nplt.bar(x=length2,height=mergedata)\nplt.xlabel(\"Energy (GeV)\")\nplt.ylabel(\"Differential Fluence per Energy (cm^-2 sr^-1 GeV^-1)\")\nplt.title(\"E=70MeV, x=1cm\")\nplt.show()\n\ndf.to_csv(\"Test.csv\")\n\"\"\""
    ],
    "functions": [],
    "classes": []
}