{
    "identifiers": [
        "os",
        "sys",
        "random",
        "warnings",
        "numpy",
        "np",
        "pandas",
        "pd",
        "time",
        "matplotlib",
        "pyplot",
        "plt",
        "io",
        "pickle",
        "json",
        "tqdm",
        "tqdm",
        "itertools",
        "chain",
        "skimage",
        "io",
        "imread",
        "imshow",
        "imread_collection",
        "concatenate_images",
        "skimage",
        "transform",
        "resize",
        "skimage",
        "morphology",
        "label",
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "optim",
        "optim",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "torch",
        "utils",
        "data",
        "sampler",
        "torch",
        "nn",
        "functional",
        "F",
        "basic",
        "model",
        "x_train",
        "y_train",
        "optimizer",
        "epochs",
        "mini_batch_size",
        "noVal",
        "len",
        "x_train",
        "mini_batch_size",
        "len",
        "x_train",
        "num_batches",
        "mini_batch_size",
        "e",
        "epochs",
        "t",
        "num_batches",
        "np",
        "random",
        "choice",
        "len",
        "x_train",
        "mini_batch_size",
        "torch",
        "from_numpy",
        "x_train",
        "rand_indices",
        "torch",
        "from_numpy",
        "y_train",
        "rand_indices",
        "model",
        "train",
        "y",
        "torch",
        "LongTensor",
        "y",
        "shape",
        "model",
        "x",
        "torch",
        "max",
        "preds",
        "data",
        "correct",
        "predicted",
        "y",
        "sum",
        "item",
        "F",
        "cross_entropy",
        "preds",
        "y",
        "optimizer",
        "zero_grad",
        "loss",
        "backward",
        "optimizer",
        "step",
        "T",
        "print_every",
        "loss",
        "item",
        "loss_history",
        "append",
        "currLoss",
        "e",
        "t",
        "currLoss",
        "num_remaining",
        "t",
        "num_batches",
        "correct",
        "len",
        "x_train",
        "e",
        "perf",
        "noVal",
        "e",
        "perf",
        "T",
        "num_remaining",
        "np",
        "random",
        "choice",
        "len",
        "x_train",
        "num_remaining",
        "torch",
        "from_numpy",
        "x_train",
        "rand_indices",
        "torch",
        "from_numpy",
        "y_train",
        "rand_indices",
        "model",
        "train",
        "y",
        "torch",
        "LongTensor",
        "model",
        "x",
        "torch",
        "max",
        "preds",
        "data",
        "i",
        "len",
        "predicted",
        "predicted",
        "i",
        "y",
        "i",
        "correct",
        "F",
        "cross_entropy",
        "preds",
        "y",
        "optimizer",
        "zero_grad",
        "loss",
        "backward",
        "optimizer",
        "step",
        "T",
        "print_every",
        "loss",
        "item",
        "loss_history",
        "append",
        "currLoss",
        "e",
        "num_batches",
        "currLoss",
        "correct",
        "len",
        "x",
        "e",
        "perf",
        "noVal",
        "e",
        "perf",
        "T",
        "perf",
        "loss_history",
        "X",
        "y",
        "ex",
        "plt",
        "imshow",
        "np",
        "uint8",
        "np",
        "reshape",
        "X",
        "ex",
        "plt",
        "show",
        "Y_train",
        "ex",
        "torch",
        "float32",
        "USE_GPU",
        "torch",
        "cuda",
        "is_available",
        "torch",
        "device",
        "torch",
        "device",
        "torch",
        "float32",
        "device",
        "warnings",
        "filterwarnings",
        "category",
        "UserWarning",
        "seed",
        "np",
        "random",
        "seed",
        "pd",
        "read_csv",
        "trainCSV",
        "header",
        "trainDF",
        "values",
        "trainDF",
        "np",
        "zeros",
        "len",
        "X_t",
        "dtype",
        "np",
        "float32",
        "i",
        "row",
        "X_t",
        "np",
        "reshape",
        "X_t",
        "i",
        "trainDF",
        "np",
        "zeros",
        "Y_t",
        "shape",
        "i",
        "row",
        "Y_t",
        "np",
        "argmax",
        "row",
        "pd",
        "read_csv",
        "devCSV",
        "header",
        "devDF",
        "values",
        "devDF",
        "np",
        "zeros",
        "len",
        "X_d",
        "dtype",
        "np",
        "float32",
        "i",
        "row",
        "X_d",
        "np",
        "reshape",
        "X_d",
        "i",
        "devDF",
        "np",
        "zeros",
        "Y_d",
        "shape",
        "i",
        "row",
        "Y_d",
        "np",
        "argmax",
        "row",
        "X_train",
        "shape",
        "Y_train",
        "shape",
        "X_dev",
        "shape",
        "Y_dev",
        "shape",
        "X_train",
        "Y_train",
        "i",
        "lrs",
        "append",
        "np",
        "random",
        "rand",
        "lrs",
        "append",
        "lr",
        "lrs",
        "lr",
        "NNet",
        "optim",
        "Adam",
        "model",
        "parameters",
        "lr",
        "lr",
        "trainModel",
        "model",
        "x_train",
        "y_train",
        "optimizer",
        "epochs",
        "noVal",
        "lr",
        "modelPerf",
        "modelPerf",
        "len",
        "modelPerf",
        "bestLoss",
        "modelPerf",
        "len",
        "modelPerf",
        "modelPerf",
        "modelPerf",
        "model",
        "lr",
        "main"
    ],
    "literals": [
        "'y shape: '",
        "'Epoch %d, Iteration %d, loss = %.4f'",
        "'Train performance at epoch %d is %.4f'",
        "'Val performance at epoch %d is %.4f'",
        "'Epoch %d, Iteration %d, loss = %.4f'",
        "'Train performance at epoch %d is %.4f'",
        "'Val performance at epoch %d is %.4f'",
        "'cuda'",
        "'cpu'",
        "'using device:'",
        "'./'",
        "'ignore'",
        "'skimage'",
        "\"npy_data/train_npy.csv\"",
        "\"npy_data/dev_npy.csv\"",
        "\"X_train shape: \"",
        "\"Y_train shape: \"",
        "\"X_dev shape: \"",
        "\"Y_dev shape: \"",
        "'Trying out learning rate of '",
        "'__main__'"
    ],
    "variables": [
        "print_every",
        "T",
        "num_batches",
        "num_remaining",
        "loss_history",
        "rand_indices",
        "x",
        "y",
        "y",
        "preds",
        "_",
        "predicted",
        "loss",
        "currLoss",
        "perf",
        "rand_indices",
        "x",
        "y",
        "y",
        "preds",
        "_",
        "predicted",
        "correct",
        "loss",
        "currLoss",
        "perf",
        "preprocessData",
        "USE_GPU",
        "dtype",
        "device",
        "device",
        "dtype",
        "IMG_WIDTH",
        "IMG_HEIGHT",
        "IMG_CHANNELS",
        "PATH",
        "epsilon",
        "seed",
        "random",
        "seed",
        "seed",
        "trainCSV",
        "trainDF",
        "trainDF",
        "X_t",
        "X_train",
        "X_train",
        "i",
        "Y_t",
        "Y_train",
        "Y_train",
        "i",
        "devCSV",
        "devDF",
        "devDF",
        "X_d",
        "X_dev",
        "X_dev",
        "i",
        "Y_d",
        "Y_dev",
        "Y_train",
        "i",
        "bestPerf",
        "lossHistory",
        "lossHistories",
        "print_every",
        "bestModel",
        "bestLoss",
        "lrUsed",
        "x_train",
        "y_train",
        "lrs",
        "model",
        "optimizer",
        "modelPerf",
        "lossHistories",
        "bestLoss",
        "bestPerf",
        "lossHistory",
        "bestModel",
        "lrUsed"
    ],
    "comments": [
        "import torchvision.datasets as dset",
        "import torchvision.transforms as T",
        "Constant to control how frequently we print train loss",
        "model = model.to(device=device)  # move the model parameters to CPU/GPU",
        "loss = nn.CrossEntropyLoss()",
        "put model to training mode",
        "x = x.to(device=device, dtype=dtype)  # move to device, e.g. GPU",
        "y = y.to(device=device, dtype=dtype)",
        "Zero out all of the gradients for the variables which the optimizer",
        "will update.",
        "This is the backwards pass: compute the gradient of the loss with",
        "respect to each  parameter of the model.",
        "Actually update the parameters of the model using the gradients",
        "computed by the backwards pass.",
        "perf = calculatePerformance(x_train, y_train, model)",
        "perf = calculatePerformance(X_val, Y_val, model)",
        "put model to training mode",
        "x = x.to(device=device, dtype=dtype)  # move to device, e.g. GPU",
        "y = y.to(device=device, dtype=dtype)",
        "issue was with an incorrect performance function (i think)",
        "correct += (predicted == y).sum().item()",
        "print(predicted)",
        "print(y)",
        "values, indices = torch.max(preds, 1)",
        "loss(preds, y)",
        "Zero out all of the gradients for the variables which the optimizer",
        "will update.",
        "This is the backwards pass: compute the gradient of the loss with",
        "respect to each  parameter of the model.",
        "Actually update the parameters of the model using the gradients",
        "computed by the backwards pass.",
        "perf = (correct/(float(len(x_train))))",
        "For this cell used same code from PyTorch notebook in assignment 2 of Stanford's CS231n Spring 2018 offering",
        "To preprocess data set this to True",
        "Next two cells, code belongs to [1]. Minor changes made to accomodate to our use",
        "(Using PyTorch instead of Keras/tensorflow)",
        "For numerical stability",
        "Preproccessing data",
        "want shape [samples, 1, 28, 28]",
        "label x sample",
        "Pytorch needs indices",
        "label x sample",
        "train_file = 'npy_data/train_npy.csv'",
        "train = pd.read_csv(train_file)",
        "",
        "test_file = 'npy_data/test_npy.csv'",
        "test = pd.read_csv(test_file)",
        "",
        "dev_file = 'npy_data/dev_npy.csv'",
        "dev = pd.read_csv(dev_file)",
        "Overfitting data first",
        "lrs = [1e-7,1e-6,1e-5,1e-4,1e-3]",
        "Best result from last random searches"
    ],
    "docstrings": [],
    "functions": [
        "trainModel",
        "showVisualComparisons",
        "main"
    ],
    "classes": []
}