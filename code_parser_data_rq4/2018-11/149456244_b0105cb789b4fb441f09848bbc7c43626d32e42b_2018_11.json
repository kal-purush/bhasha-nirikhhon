{
    "identifiers": [
        "Diagnostics",
        "SharpNeat",
        "Core",
        "SharpNeat",
        "Phenomes",
        "SharpNeat",
        "Domains",
        "BinaryElevenMultiplexer",
        "IPhenomeEvaluator",
        "IBlackBox",
        "_evalCount",
        "_stopConditionSatisfied",
        "IBlackBox",
        "box",
        "box",
        "InputSignalArray",
        "box",
        "OutputSignalArray",
        "_evalCount",
        "i",
        "i",
        "j",
        "j",
        "inputArr",
        "j",
        "tmp",
        "tmp",
        "box",
        "Activate",
        "box",
        "IsStateValid",
        "FitnessInfo",
        "Zero",
        "output",
        "outputArr",
        "Debug",
        "Assert",
        "output",
        "i",
        "i",
        "fitness",
        "output",
        "output",
        "output",
        "success",
        "fitness",
        "output",
        "output",
        "output",
        "success",
        "box",
        "ResetState",
        "success",
        "fitness",
        "fitness",
        "StopFitness",
        "_stopConditionSatisfied",
        "FitnessInfo",
        "fitness",
        "fitness"
    ],
    "literals": [
        "\"Unexpected negative output.\""
    ],
    "variables": [
        "StopFitness",
        "_evalCount",
        "_stopConditionSatisfied",
        "EvaluationCount",
        "StopConditionSatisfied",
        "fitness",
        "success",
        "output",
        "ISignalArray",
        "inputArr",
        "ISignalArray",
        "outputArr",
        "i",
        "tmp",
        "i",
        "j"
    ],
    "comments": [
        "Binary 11-Multiplexer task.",
        "Three inputs supply a binary number between 0 and 7. This number selects one of the",
        "further 8 inputs (eleven inputs in total). The correct response is the selected input's",
        "input signal (0 or 1).",
        "</summary>",
        "Gets the total number of evaluations that have been performed.",
        "</summary>",
        "Gets a value indicating whether some goal fitness has been achieved and that",
        "the evolutionary algorithm/search should stop. This property's value can remain false",
        "to allow the algorithm to run indefinitely.",
        "</summary>",
        "Evaluate the provided IBlackBox against the Binary 6-Multiplexer problem domain and return",
        "its fitness score.",
        "</summary>",
        "2048 test cases.",
        "Apply bitmask to i and shift left to generate the input signals.",
        "In addition we scale 0->1 to be 0.1->1.0",
        "Note. We /could/ eliminate all the boolean logic by pre-building a table of test",
        "signals and correct responses.",
        "Activate the black box.",
        "Any black box that gets itself into an invalid state is unlikely to be",
        "any good, so let's just exit here.",
        "Read output signal.",
        "Determine the correct answer by using highly cryptic bit manipulation :)",
        "The condition is true if the correct answer is true (1.0).",
        "correct answer = true.",
        "Assign fitness on sliding scale between 0.0 and 1.0 based on squared error.",
        "In tests squared error drove evolution significantly more efficiently in this domain than absolute error.",
        "Note. To base fitness on absolute error use: fitness += output;",
        "correct answer = false.",
        "Assign fitness on sliding scale between 0.0 and 1.0 based on squared error.",
        "In tests squared error drove evolution significantly more efficiently in this domain than absolute error.",
        "Note. To base fitness on absolute error use: fitness += 1.0-output;",
        "Reset black box state ready for next test case.",
        "If the correct answer was given in each case then add a bonus value to the fitness.",
        "ENHANCEMENT: Adjust fitness scheme so that random agents are scored zero (currently they score 50% -> 1024).",
        "Reset the internal state of the evaluation scheme if any exists.",
        "Note. The Binary Multiplexer problem domain has no internal state. This method does nothing.",
        "</summary>"
    ],
    "docstrings": [
        "***************************************************************************\n * This file is part of SharpNEAT - Evolution of Neural Networks.\n * \n * Copyright 2004-2016 Colin Green (sharpneat@gmail.com)\n *\n * SharpNEAT is free software; you can redistribute it and/or modify\n * it under the terms of The MIT License (MIT).\n *\n * You should have received a copy of the MIT License\n * along with SharpNEAT; if not, see https://opensource.org/licenses/MIT.",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "FitnessInfo",
        "Evaluate",
        "Reset"
    ],
    "classes": [
        "BinaryElevenMultiplexerEvaluator"
    ]
}