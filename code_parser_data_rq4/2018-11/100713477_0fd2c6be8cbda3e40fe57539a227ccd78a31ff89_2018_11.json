{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "StringDecoder",
        "http",
        "req",
        "res",
        "multiparty",
        "form",
        "name",
        "file",
        "res",
        "res",
        "res",
        "form",
        "req",
        "server"
    ],
    "literals": [
        "'http'",
        "'url'",
        "'querystring'",
        "'string_decoder'",
        "'fs'",
        "'multiparty'",
        "'utf8'",
        "''",
        "'file'",
        "'Content-Type'",
        "'application/json'",
        "'8080'",
        "'Server ins running on 8080 port'"
    ],
    "variables": [
        "http",
        "querystring",
        "fs",
        "multiparty",
        "decoder",
        "server",
        "buffer",
        "form"
    ],
    "comments": [
        "req.on('data', (chunk) => {",
        "buffer += chunk;",
        "});",
        "req.on('end', () => {",
        "const parsedUrl = new URL(req.url, 'http://localhost:8080/');",
        "res.setHeader('Content-Type', 'application/json');",
        "res.write(JSON.stringify({",
        "href: parsedUrl.href,",
        "host: parsedUrl.host,",
        "origin: parsedUrl.origin,",
        "port: parsedUrl.port,",
        "protocol: parsedUrl.protocol,",
        "params: querystring.parse(parsedUrl.search),",
        "data: querystring.parse(buffer),",
        "}));",
        "res.end();",
        "});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}