{
    "identifiers": [
        "aiohttp",
        "aiofile",
        "json",
        "time",
        "asyncio",
        "websockets",
        "logging",
        "sys",
        "runsafe",
        "runSafe",
        "execCode",
        "logging",
        "basicConfig",
        "filename",
        "filemode",
        "level",
        "logging",
        "DEBUG",
        "format",
        "logging",
        "getLogger",
        "wslogger",
        "setLevel",
        "logging",
        "DEBUG",
        "wslogger",
        "addHandler",
        "logging",
        "StreamHandler",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "json",
        "method",
        "path",
        "body",
        "consumer",
        "fake",
        "session",
        "s",
        "path",
        "req",
        "s",
        "logger",
        "info",
        "method",
        "path",
        "session",
        "request",
        "method",
        "req",
        "json",
        "body",
        "res",
        "res",
        "json",
        "consumer",
        "res_json",
        "res_json",
        "consumer",
        "method",
        "path",
        "body",
        "consumer",
        "fake",
        "asyncio",
        "create_task",
        "makeAioRequest",
        "method",
        "path",
        "body",
        "body",
        "consumer",
        "consumer",
        "loop",
        "create_task",
        "makeAioRequest",
        "method",
        "path",
        "body",
        "body",
        "consumer",
        "consumer",
        "ch",
        "content",
        "sendMessage",
        "ch",
        "body",
        "content",
        "ch",
        "mes",
        "emoji",
        "sendMessage",
        "ch",
        "mes",
        "emoji",
        "guild",
        "consumer",
        "sendMessage",
        "guild",
        "consumer",
        "consumer",
        "opCode",
        "data",
        "opCode",
        "data",
        "ws",
        "heartbeatInterval",
        "receivedACK",
        "state",
        "asyncio",
        "sleep",
        "heartbeatInterval",
        "logger",
        "info",
        "state",
        "receivedACK",
        "logger",
        "warning",
        "ws",
        "send",
        "json",
        "dumps",
        "createPayload",
        "state",
        "aiofile",
        "AIOFile",
        "s",
        "time",
        "time",
        "s",
        "write",
        "json",
        "dumps",
        "state",
        "data",
        "guilds",
        "state",
        "data",
        "data",
        "logger",
        "info",
        "data",
        "data",
        "logger",
        "info",
        "data",
        "data",
        "guilds",
        "data",
        "data",
        "guilds",
        "pop",
        "data",
        "logger",
        "info",
        "data",
        "data",
        "startswith",
        "data",
        "strip",
        "con",
        "index",
        "logger",
        "info",
        "con",
        "i",
        "execCode",
        "con",
        "i",
        "con",
        "i",
        "c",
        "httpapi",
        "data",
        "con",
        "i",
        "c",
        "logger",
        "info",
        "logger",
        "info",
        "asyncio",
        "create_task",
        "writeState",
        "ws",
        "data",
        "secret",
        "data",
        "logger",
        "info",
        "heartbeatInv",
        "ws",
        "send",
        "json",
        "dumps",
        "createPayload",
        "secret",
        "asyncio",
        "create_task",
        "heartbeat",
        "ws",
        "heartbeatInv",
        "receivedACK",
        "state",
        "session",
        "secret",
        "aiofile",
        "AIOFile",
        "secret_json",
        "json",
        "loads",
        "secret_json",
        "read",
        "aiohttp",
        "ClientSession",
        "headers",
        "secret",
        "secret",
        "secret",
        "websockets",
        "connect",
        "makeAioRequest",
        "ws",
        "ws",
        "recv",
        "e",
        "logger",
        "warning",
        "e",
        "ws",
        "closed",
        "raw",
        "json",
        "loads",
        "raw",
        "data",
        "opCode",
        "data",
        "handleEvent",
        "data",
        "data",
        "opCode",
        "logger",
        "info",
        "opCode",
        "logger",
        "warning",
        "opCode",
        "logger",
        "warning",
        "opCode",
        "identify",
        "ws",
        "data",
        "opCode",
        "logger",
        "info",
        "logger",
        "warning",
        "opCode",
        "logger",
        "warning",
        "asyncio",
        "get_event_loop",
        "loop",
        "run_until_complete",
        "main"
    ],
    "literals": [
        "'pyBot.log'",
        "'w'",
        "'%(levelname)s:%(name)s:%(asctime)s:%(message)s'",
        "'websockets'",
        "'bot'",
        "'https://discordapp.com/api/v6'",
        "f'/{s}'",
        "'Sending https request %s %s'",
        "'message'",
        "'POST'",
        "'channels'",
        "'messages'",
        "'content'",
        "'react'",
        "'POST'",
        "'channels'",
        "'messages'",
        "'reactions'",
        "'@me'",
        "'emojis'",
        "'GET'",
        "'guilds'",
        "'emojis'",
        "'op'",
        "'d'",
        "'Heartbeat seq: %s'",
        "'seq'",
        "'Connection Lost: No ACK'",
        "'seq'",
        "'time'",
        "''",
        "'sessionId'",
        "''",
        "'seq'",
        "'state.json'",
        "'w'",
        "'time'",
        "'GUILD_CREATE'",
        "'id'",
        "'Added Guild: %s'",
        "'name'",
        "'READY'",
        "'sessionId'",
        "'session_id'",
        "'Ready, Version: %s'",
        "'v'",
        "'GUILD_UPDATE'",
        "'id'",
        "'id'",
        "'GUILD_DELETE'",
        "'id'",
        "'MESSAGE_CREATE'",
        "'Message Recieved: %s'",
        "'content'",
        "'content'",
        "'```'",
        "'content'",
        "'`\\n'",
        "'\\n'",
        "f'Running code \"{con[i+1:]}\"'",
        "'message'",
        "'channel_id'",
        "f'{con[:i]}\\n```\\n{c}\\n```'",
        "'Error when running'",
        "'Unknown type: %s'",
        "'heartbeat_interval'",
        "'Heartbeat Interval: %d'",
        "'identity'",
        "'secret.json'",
        "'Authorization'",
        "'Bot '",
        "'token'",
        "'User-Agent'",
        "'DiscordBot ('",
        "'url'",
        "', '",
        "'version'",
        "')'",
        "'Content-Type'",
        "'application/json'",
        "'GET'",
        "'gateway'",
        "'url'",
        "'?v=6&encoding=json'",
        "'Exception while reading: %s'",
        "''",
        "''",
        "'op'",
        "'seq'",
        "'s'",
        "'t'",
        "'d'",
        "'Pinged'",
        "'Reconnect'",
        "'Invalid Session'",
        "'d'",
        "'Recieved ACK'",
        "'unknown opCode: %s'",
        "'No Packets'"
    ],
    "variables": [
        "wslogger",
        "logger",
        "session",
        "req",
        "res_json",
        "httpapi",
        "receivedACK",
        "receivedACK",
        "state",
        "state",
        "guilds",
        "guilds",
        "state",
        "guilds",
        "con",
        "i",
        "heartbeatInv",
        "secret",
        "session",
        "raw",
        "raw",
        "data",
        "opCode",
        "state",
        "receivedACK",
        "receivedACK",
        "loop"
    ],
    "comments": [
        "Configure Logging Utility",
        "session data",
        "make http request using method, path, params, body, and pass result to consumer",
        "method = '', path = [], params = {}, body = {}, consumer = function({})",
        "convience function to synchronously start an asynchronous makeAioRequest",
        "convience methods for common http requests",
        "check to see if discord responded to heartbeat message",
        "stored for potential resume",
        "list of guilds connected to (populated by GUILD_CREATE events)",
        "global send",
        "send identity payload (op 2, payload is in secret.json)",
        "TODO add resume option",
        "start heartbeat task AFTER identifing",
        "Read secret.json for secret data. secret.json is gitignored to hide the token and other sensitive info",
        "create http client, and set global headers",
        "convert raw json to data, and grab opCode to handle event",
        "update sequence number",
        "to avoid connection lost b/c we haven't recieved an ACK before sending a heartbeat"
    ],
    "docstrings": [],
    "functions": [
        "fake",
        "makeAioRequest",
        "sendMessage",
        "createPayload",
        "heartbeat",
        "writeState",
        "handleEvent",
        "identify",
        "main"
    ],
    "classes": []
}