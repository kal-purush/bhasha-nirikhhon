{
    "identifiers": [
        "io",
        "managed",
        "services",
        "test",
        "devexp",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "CloudServiceAccountRequest",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "CloudServiceAccountRequestSpec",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "CloudServicesRequest",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "CloudServicesRequestSpec",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "Credentials",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "ServiceRegistryConnection",
        "com",
        "openshift",
        "cloud",
        "v1alpha",
        "models",
        "ServiceRegistryConnectionSpec",
        "io",
        "fabric8",
        "kubernetes",
        "api",
        "model",
        "Secret",
        "io",
        "fabric8",
        "kubernetes",
        "client",
        "ConfigBuilder",
        "io",
        "fabric8",
        "openshift",
        "client",
        "DefaultOpenShiftClient",
        "io",
        "fabric8",
        "openshift",
        "client",
        "OpenShiftClient",
        "io",
        "managed",
        "services",
        "test",
        "Environment",
        "io",
        "managed",
        "services",
        "test",
        "TestBase",
        "io",
        "managed",
        "services",
        "test",
        "TestUtils",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "oauth",
        "KeycloakLoginSession",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "oauth",
        "KeycloakUser",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "registrymgmt",
        "RegistryMgmtApi",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "registrymgmt",
        "RegistryMgmtApiUtils",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "securitymgmt",
        "SecurityMgmtAPIUtils",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "securitymgmt",
        "SecurityMgmtApi",
        "io",
        "managed",
        "services",
        "test",
        "framework",
        "LogCollector",
        "io",
        "managed",
        "services",
        "test",
        "OperatorUtils",
        "io",
        "managed",
        "services",
        "test",
        "wait",
        "ReadyFunction",
        "io",
        "vertx",
        "core",
        "json",
        "Json",
        "lombok",
        "SneakyThrows",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "testng",
        "ITestContext",
        "org",
        "testng",
        "TestException",
        "org",
        "testng",
        "annotations",
        "AfterClass",
        "org",
        "testng",
        "annotations",
        "BeforeClass",
        "org",
        "testng",
        "annotations",
        "Test",
        "java",
        "io",
        "java",
        "util",
        "Base64",
        "java",
        "util",
        "io",
        "managed",
        "services",
        "test",
        "TestUtils",
        "assumeTeardown",
        "io",
        "managed",
        "services",
        "test",
        "TestUtils",
        "bwait",
        "io",
        "managed",
        "services",
        "test",
        "TestUtils",
        "message",
        "io",
        "managed",
        "services",
        "test",
        "TestUtils",
        "waitFor",
        "io",
        "managed",
        "services",
        "test",
        "client",
        "registrymgmt",
        "RegistryMgmtApiUtils",
        "cleanRegistry",
        "java",
        "time",
        "Duration",
        "ofMinutes",
        "java",
        "time",
        "Duration",
        "ofSeconds",
        "org",
        "testng",
        "Assert",
        "assertNotNull",
        "LOGGER",
        "LogManager",
        "getLogger",
        "user",
        "securityMgmtApi",
        "oc",
        "cloudServicesRequest",
        "ACCESS_TOKEN_SECRET_NAME",
        "CLOUD_SERVICE_ACCOUNT_REQUEST_NAME",
        "SERVICE_ACCOUNT_NAME",
        "Environment",
        "LAUNCH_KEY",
        "SERVICE_ACCOUNT_SECRET_NAME",
        "CLOUD_SERVICES_REQUEST_NAME",
        "SERVICE_REGISTRY_CONNECTION_NAME",
        "SERVICE_REGISTRY_NAME",
        "Environment",
        "LAUNCH_KEY",
        "registryMgmtApi",
        "BeforeClass",
        "SneakyThrows",
        "assertNotNull",
        "Environment",
        "PRIMARY_USERNAME",
        "assertNotNull",
        "Environment",
        "PRIMARY_PASSWORD",
        "assertNotNull",
        "Environment",
        "DEV_CLUSTER_SERVER",
        "assertNotNull",
        "Environment",
        "DEV_CLUSTER_TOKEN",
        "auth",
        "Environment",
        "PRIMARY_USERNAME",
        "Environment",
        "PRIMARY_PASSWORD",
        "LOGGER",
        "info",
        "auth",
        "getUsername",
        "user",
        "bwait",
        "auth",
        "loginToRedHatSSO",
        "LOGGER",
        "info",
        "securityMgmtApi",
        "SecurityMgmtAPIUtils",
        "securityMgmtApi",
        "Environment",
        "OPENSHIFT_API_URI",
        "user",
        "registryMgmtApi",
        "RegistryMgmtApiUtils",
        "registryMgmtApi",
        "Environment",
        "OPENSHIFT_API_URI",
        "user",
        "LOGGER",
        "info",
        "config",
        "withMasterUrl",
        "Environment",
        "DEV_CLUSTER_SERVER",
        "withOauthToken",
        "Environment",
        "DEV_CLUSTER_TOKEN",
        "withNamespace",
        "Environment",
        "DEV_CLUSTER_NAMESPACE",
        "build",
        "oc",
        "config",
        "LOGGER",
        "info",
        "SERVICE_REGISTRY_NAME",
        "RegistryMgmtApiUtils",
        "applyRegistry",
        "registryMgmtApi",
        "SERVICE_REGISTRY_NAME",
        "OperatorUtils",
        "patchTheOperatorCloudServiceAPIEnv",
        "oc",
        "t",
        "LOGGER",
        "error",
        "t",
        "s",
        "oc",
        "secrets",
        "withName",
        "ACCESS_TOKEN_SECRET_NAME",
        "get",
        "s",
        "LOGGER",
        "info",
        "s",
        "getMetadata",
        "getName",
        "oc",
        "secrets",
        "s",
        "a",
        "OperatorUtils",
        "cloudServiceAccountRequest",
        "oc",
        "withName",
        "CLOUD_SERVICE_ACCOUNT_REQUEST_NAME",
        "get",
        "a",
        "LOGGER",
        "info",
        "a",
        "getMetadata",
        "getName",
        "OperatorUtils",
        "cloudServiceAccountRequest",
        "oc",
        "a",
        "k",
        "OperatorUtils",
        "cloudServicesRequest",
        "oc",
        "withName",
        "CLOUD_SERVICES_REQUEST_NAME",
        "get",
        "k",
        "LOGGER",
        "info",
        "k",
        "getMetadata",
        "getName",
        "OperatorUtils",
        "cloudServicesRequest",
        "oc",
        "k",
        "c",
        "OperatorUtils",
        "serviceRegistryConnection",
        "oc",
        "withName",
        "SERVICE_REGISTRY_CONNECTION_NAME",
        "get",
        "c",
        "LOGGER",
        "info",
        "c",
        "getMetadata",
        "getName",
        "OperatorUtils",
        "serviceRegistryConnection",
        "oc",
        "c",
        "context",
        "LogCollector",
        "saveDeploymentLog",
        "TestUtils",
        "getLogPath",
        "Environment",
        "LOG_DIR",
        "resolve",
        "toString",
        "context",
        "oc",
        "AfterClass",
        "alwaysRun",
        "context",
        "assumeTeardown",
        "cleanServiceRegistryConnection",
        "e",
        "LOGGER",
        "error",
        "e",
        "cleanCloudServicesRequest",
        "e",
        "LOGGER",
        "error",
        "e",
        "cleanCloudServiceAccountRequest",
        "e",
        "LOGGER",
        "error",
        "e",
        "cleanAccessTokenSecret",
        "e",
        "LOGGER",
        "error",
        "e",
        "collectOperatorLogs",
        "context",
        "e",
        "LOGGER",
        "error",
        "e",
        "SecurityMgmtAPIUtils",
        "cleanServiceAccount",
        "securityMgmtApi",
        "SERVICE_ACCOUNT_NAME",
        "t",
        "LOGGER",
        "error",
        "t",
        "cleanRegistry",
        "registryMgmtApi",
        "SERVICE_REGISTRY_NAME",
        "t",
        "LOGGER",
        "error",
        "t",
        "Test",
        "data",
        "data",
        "put",
        "Base64",
        "getEncoder",
        "encodeToString",
        "user",
        "getRefreshToken",
        "getBytes",
        "LOGGER",
        "info",
        "ACCESS_TOKEN_SECRET_NAME",
        "oc",
        "secrets",
        "create",
        "OperatorUtils",
        "buildSecret",
        "ACCESS_TOKEN_SECRET_NAME",
        "data",
        "Test",
        "dependsOnMethods",
        "a",
        "a",
        "getMetadata",
        "setName",
        "CLOUD_SERVICE_ACCOUNT_REQUEST_NAME",
        "a",
        "setSpec",
        "a",
        "getSpec",
        "setServiceAccountName",
        "SERVICE_ACCOUNT_NAME",
        "a",
        "getSpec",
        "setServiceAccountDescription",
        "a",
        "getSpec",
        "setServiceAccountSecretName",
        "SERVICE_ACCOUNT_SECRET_NAME",
        "a",
        "getSpec",
        "setAccessTokenSecretName",
        "ACCESS_TOKEN_SECRET_NAME",
        "LOGGER",
        "info",
        "CLOUD_SERVICE_ACCOUNT_REQUEST_NAME",
        "a",
        "OperatorUtils",
        "cloudServiceAccountRequest",
        "oc",
        "create",
        "a",
        "LOGGER",
        "info",
        "Json",
        "encode",
        "a",
        "ready",
        "__",
        "___",
        "r",
        "OperatorUtils",
        "cloudServiceAccountRequest",
        "oc",
        "withName",
        "CLOUD_SERVICE_ACCOUNT_REQUEST_NAME",
        "get",
        "LOGGER",
        "debug",
        "r",
        "r",
        "getStatus",
        "r",
        "getStatus",
        "getMessage",
        "equals",
        "waitFor",
        "ofSeconds",
        "ofMinutes",
        "ready",
        "LOGGER",
        "info",
        "Test",
        "dependsOnMethods",
        "k",
        "k",
        "getMetadata",
        "setName",
        "CLOUD_SERVICES_REQUEST_NAME",
        "k",
        "setSpec",
        "k",
        "getSpec",
        "setAccessTokenSecretName",
        "ACCESS_TOKEN_SECRET_NAME",
        "LOGGER",
        "info",
        "CLOUD_SERVICES_REQUEST_NAME",
        "k",
        "OperatorUtils",
        "cloudServicesRequest",
        "oc",
        "create",
        "k",
        "LOGGER",
        "info",
        "Json",
        "encode",
        "k",
        "ready",
        "__",
        "atom",
        "r",
        "OperatorUtils",
        "cloudServicesRequest",
        "oc",
        "withName",
        "CLOUD_SERVICES_REQUEST_NAME",
        "get",
        "LOGGER",
        "debug",
        "r",
        "r",
        "getStatus",
        "r",
        "getStatus",
        "getServiceRegistries",
        "r",
        "getStatus",
        "getServiceRegistries",
        "isEmpty",
        "atom",
        "r",
        "cloudServicesRequest",
        "waitFor",
        "ofSeconds",
        "ofMinutes",
        "ready",
        "LOGGER",
        "info",
        "Test",
        "dependsOnMethods",
        "serviceRegistry",
        "cloudServicesRequest",
        "getStatus",
        "getServiceRegistries",
        "stream",
        "r",
        "r",
        "getName",
        "equals",
        "SERVICE_REGISTRY_NAME",
        "findFirst",
        "serviceRegistry",
        "isEmpty",
        "LOGGER",
        "info",
        "Json",
        "encode",
        "cloudServicesRequest",
        "message",
        "SERVICE_REGISTRY_NAME",
        "CLOUD_SERVICES_REQUEST_NAME",
        "c",
        "c",
        "getMetadata",
        "setName",
        "SERVICE_REGISTRY_CONNECTION_NAME",
        "c",
        "setSpec",
        "c",
        "getSpec",
        "setAccessTokenSecretName",
        "ACCESS_TOKEN_SECRET_NAME",
        "c",
        "getSpec",
        "setServiceRegistryId",
        "serviceRegistry",
        "orElseThrow",
        "getId",
        "c",
        "getSpec",
        "setCredentials",
        "SERVICE_ACCOUNT_SECRET_NAME",
        "LOGGER",
        "info",
        "SERVICE_REGISTRY_CONNECTION_NAME",
        "c",
        "OperatorUtils",
        "serviceRegistryConnection",
        "oc",
        "create",
        "c",
        "LOGGER",
        "info",
        "Json",
        "encode",
        "c",
        "ready",
        "__",
        "___",
        "r",
        "OperatorUtils",
        "serviceRegistryConnection",
        "oc",
        "withName",
        "SERVICE_REGISTRY_CONNECTION_NAME",
        "get",
        "LOGGER",
        "debug",
        "r",
        "r",
        "getStatus",
        "r",
        "getStatus",
        "getMessage",
        "r",
        "getStatus",
        "getMessage",
        "equals",
        "waitFor",
        "ofSeconds",
        "ofMinutes",
        "ready",
        "LOGGER",
        "info"
    ],
    "literals": [
        "\"mk-e2e-api-accesstoken\"",
        "\"mk-e2e-service-account-request\"",
        "\"mk-e2e-bo-sa-\"",
        "\"mk-e2e-service-account-secret\"",
        "\"mk-e2e-kafka-request\"",
        "\"mk-e2e-registry-connection\"",
        "\"mk-e2e-operator-sr-\"",
        "\"the PRIMARY_USERNAME env is null\"",
        "\"the PRIMARY_PASSWORD env is null\"",
        "\"the DEV_CLUSTER_SERVER env is null\"",
        "\"the DEV_CLUSTER_TOKEN env is null\"",
        "\"authenticate user '{}' against RH SSO\"",
        "\"initialize security and register apis\"",
        "\"initialize openshift client\"",
        "\"apply service registry '{}'\"",
        "\"failed to patch the CLOUD_SERVICES_API env:\"",
        "\"clean secret: {}\"",
        "\"clean CloudServiceAccountRequest: {}\"",
        "\"clean CloudServicesRequest: {}\"",
        "\"clean ServiceRegistryConnection: {}\"",
        "\"test-logs\"",
        "\"openshift-operators\"",
        "\"service-binding-operator\"",
        "\"clean kafka connection error: \"",
        "\"clean cloud services request error: \"",
        "\"clean cloud service account request error: \"",
        "\"clean access token secret error: \"",
        "\"collect operator logs error: \"",
        "\"cleanServiceAccount error: \"",
        "\"clean service registry error: \"",
        "\"value\"",
        "\"create access token secret with name: {}\"",
        "\"testCreateAccessTokenSecret\"",
        "\"\"",
        "\"create CloudServiceAccountRequest with name: {}\"",
        "\"created CloudServiceAccountRequest: {}\"",
        "\"Created\"",
        "\"CloudServiceAccountRequest to be created\"",
        "\"CloudServiceAccountRequest is created\"",
        "\"testCreateAccessTokenSecret\"",
        "\"create CloudServicesRequest with name: {}\"",
        "\"created CloudServicesRequest: {}\"",
        "\"CloudServicesRequest to complete\"",
        "\"CloudServicesRequest is completed\"",
        "\"testCreateCloudServiceAccountRequest\"",
        "\"testCreateCloudServicesRequest\"",
        "\"CloudServicesRequest: {}\"",
        "\"failed to find the user service registry {} in the CloudServicesRequest {}\"",
        "\"create ManagedServiceRegistryConnection with name: {}\"",
        "\"created ManagedServiceRegistryConnection: {}\"",
        "\"Created\"",
        "\"ManagedServiceRegistryConnection to be created\"",
        "\"ManagedServiceRegistryConnection is created\""
    ],
    "variables": [
        "user",
        "securityMgmtApi",
        "oc",
        "cloudServicesRequest",
        "registryMgmtApi"
    ],
    "comments": [
        "force clean the service account if it hasn't done it yet",
        "Create Secret"
    ],
    "docstrings": [
        "* <p>\n * The tests expect the operator to be already installed on the dev cluster, the dev cluster is given by\n * the DEV_CLUSTER_SERVER env. The tested CRs will be created in the DEV_CLUSTER_NAMESPACE set namespace.\n * <p>\n * The DEV_CLUSTER_NAMESPACE can and the DEV_CLUSTER_TOKEN should be created using\n * the ./hack/bootstrap-mk-e2e-tests-namespace.sh script.\n * <p>\n * 1. https://github.com/redhat-developer/app-services-operator\n * <p>\n * <b>Requires:</b>\n * <ul>\n *     <li> PRIMARY_USERNAME\n *     <li> PRIMARY_PASSWORD\n *     <li> DEV_CLUSTER_SERVER\n *     <li> DEV_CLUSTER_TOKEN\n * </ul>"
    ],
    "functions": [
        "bootstrap",
        "cleanAccessTokenSecret",
        "cleanCloudServiceAccountRequest",
        "cleanCloudServicesRequest",
        "cleanServiceRegistryConnection",
        "collectOperatorLogs",
        "teardown",
        "testCreateAccessTokenSecret",
        "testCreateCloudServiceAccountRequest",
        "testCreateCloudServicesRequest",
        "testCreateServiceRegistryConnection"
    ],
    "classes": [
        "ServiceRegistryOperatorTest"
    ]
}