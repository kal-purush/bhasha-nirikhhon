{
    "identifiers": [
        "express",
        "http",
        "playwrite",
        "ConsoleMessage",
        "fs",
        "path",
        "Browser",
        "Response",
        "Request",
        "bodyParser",
        "ms",
        "resolve",
        "reject",
        "setTimeout",
        "resolve",
        "ms",
        "app",
        "port",
        "resolve",
        "reject",
        "http",
        "app",
        "server",
        "port",
        "server",
        "port",
        "resolve",
        "server",
        "express",
        "bodyParser",
        "bodyParser",
        "createServer",
        "port",
        "shutdown",
        "__dirname",
        "fs",
        "libJs",
        "libJs",
        "express",
        "libJs",
        "req",
        "res",
        "next",
        "__dirname",
        "req",
        "fs",
        "path",
        "res",
        "html",
        "next",
        "eventHandler",
        "req",
        "res",
        "next",
        "req",
        "req",
        "req",
        "bodyJson",
        "bodyJson",
        "eventHandler",
        "eventHandler",
        "port",
        "port",
        "url",
        "url",
        "url",
        "url",
        "url",
        "browser",
        "url",
        "browser",
        "page",
        "request",
        "request",
        "allRequests",
        "request",
        "page",
        "msg",
        "msg",
        "consoleErrors",
        "msg",
        "msg",
        "msg",
        "__dirname",
        "artifactsDir",
        "url",
        "page",
        "url",
        "url",
        "screenshotPath",
        "page",
        "screenshotPath",
        "expect",
        "result",
        "sleep",
        "page",
        "result"
    ],
    "literals": [
        "'express'",
        "'http'",
        "'playwright'",
        "'fs'",
        "'path'",
        "'playwright/index'",
        "'body-parser'",
        "Server has been started at http://localhost:${port}",
        "\"Closing server\"",
        "'/../../dist/web/lib.js'",
        "File ${libJs} does not exists. Please, run the build first!",
        "\"/s/lib.js\"",
        "'/test-case/:name'",
        "${__dirname}/../html/${req.params.name}",
        "'%%SERVER%%'",
        "http://localhost:${this.port}",
        "'object'",
        "\"Received payload from JS SDK\"",
        "'/api/v1/event'",
        "'/api.*'",
        "string",
        "'/'",
        "http://localhost:${this.port}/${url ?? ''}",
        "''",
        "string",
        "string",
        "string",
        "'request'",
        "\"Page requested \"",
        "'console'",
        "'error'",
        "Browser console message: [${msg.type()}] ${msg.text()}",
        "'/../artifacts/'",
        "\"http://\"",
        "\"\"",
        "\"https://\"",
        "\"\"",
        "\"/\"",
        "\"_\"",
        "\".png\"",
        "Saving screenshot of ${url} to ${screenshotPath}",
        "\"Waiting\""
    ],
    "variables": [
        "server",
        "port",
        "libJs",
        "path",
        "html",
        "eventHandler",
        "bodyJson",
        "allRequests",
        "consoleErrors",
        "page",
        "artifactsDir",
        "screenshotPath",
        "result"
    ],
    "comments": [
        "istanbul ignore file",
        "@ts-ignore"
    ],
    "docstrings": [
        "* Opens an url with given browser:\n * - throws an exception (fails the test) if result is not successful\n * - takes a screenshot and saves it to `artifacts`\n * @param browser\n * @param url"
    ],
    "functions": [
        "sleep",
        "createServer",
        "init",
        "stop",
        "getUrl",
        "clearRequestLog",
        "requestLog",
        "runUrl"
    ],
    "classes": [
        "TestServer"
    ]
}