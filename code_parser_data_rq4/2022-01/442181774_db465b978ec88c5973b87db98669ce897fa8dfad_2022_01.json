{
    "identifiers": [
        "logging",
        "homeassistant",
        "components",
        "binary_sensor",
        "BinarySensorEntity",
        "DEVICE_CLASS_PROBLEM",
        "homeassistant",
        "helpers",
        "update_coordinator",
        "CoordinatorEntity",
        "DOMAIN",
        "AlthermaAPI",
        "logging",
        "getLogger",
        "hass",
        "entry",
        "async_add_entities",
        "hass",
        "data",
        "DOMAIN",
        "get",
        "entry",
        "entry_id",
        "hass",
        "data",
        "DOMAIN",
        "async_add_entities",
        "AlthermaUnitProblemSensor",
        "coordinator",
        "api",
        "api",
        "space_heating_device_info",
        "AlthermaUnitProblemSensor",
        "coordinator",
        "api",
        "api",
        "HWT_device_info",
        "update_before_add",
        "BinarySensorEntity",
        "CoordinatorEntity",
        "DEVICE_CLASS_PROBLEM",
        "coordinator",
        "api",
        "AlthermaAPI",
        "name",
        "device_info",
        "unit_ref",
        "coordinator",
        "api",
        "name",
        "device_info",
        "_api",
        "info",
        "unit_ref",
        "unit_ref",
        "property",
        "_attr_device_info",
        "_api",
        "async_update",
        "property",
        "_is_problem_state",
        "_api",
        "status",
        "_unit_ref",
        "unit_status",
        "copy",
        "states",
        "states",
        "states",
        "values",
        "sum",
        "values",
        "property",
        "_api",
        "status",
        "_unit_ref"
    ],
    "literals": [
        "'coordinator'",
        "'Space Heating Unit State'",
        "'SpaceHeating'",
        "'Hot Water Tank State'",
        "'DomesticHotWaterTank'",
        "f\"{self._api.info['serial_number']}-{unit_ref}-problem_sensor\"",
        "'serial_number'",
        "f'function/{self._unit_ref}'",
        "'states'",
        "'WeatherDependentState'",
        "'WeatherDependentState'",
        "f\"function/{self._unit_ref}\"",
        "'states'"
    ],
    "variables": [
        "_LOGGER",
        "api",
        "coordinator",
        "_attr_device_class",
        "_api",
        "_attr_name",
        "_attr_device_info",
        "_attr_unique_id",
        "_state",
        "_unit_ref",
        "unit_status",
        "states",
        "values"
    ],
    "comments": [
        "Not a problem if we are in weather dependent state"
    ],
    "docstrings": [
        "\"\"\"Set up Daikin climate based on config_entry.\"\"\""
    ],
    "functions": [
        "async_setup_entry",
        "device_info",
        "async_update",
        "is_on",
        "_is_problem_state",
        "extra_state_attributes"
    ],
    "classes": [
        "AlthermaUnitProblemSensor"
    ]
}