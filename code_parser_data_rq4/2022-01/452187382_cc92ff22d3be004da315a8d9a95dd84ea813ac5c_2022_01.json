{
    "identifiers": [
        "FileAPI",
        "MFT",
        "Utils",
        "Collections",
        "Generic",
        "IO",
        "Linq",
        "Threading",
        "Threading",
        "Tasks",
        "Xunit",
        "Xunit",
        "Abstractions",
        "FileInfo",
        "Ftaas",
        "Sdk",
        "Base",
        "FileInfo",
        "FileAPI",
        "MFT",
        "FileSystem",
        "NetCore22",
        "Examples",
        "Startup",
        "ITestOutputHelper",
        "output",
        "_output",
        "output",
        "Fact",
        "_output",
        "WriteTittle",
        "GetRandomUploadedFile",
        "tenantId",
        "FileId",
        "ToString",
        "Path",
        "Combine",
        "FilesBaseDirectory",
        "CancellationTokenSource",
        "tokenSource",
        "CancelAfter",
        "FileSystem",
        "DownloadFileAsync",
        "fileId",
        "downloadPath",
        "tenantId",
        "tenantId",
        "tokenSource",
        "Token",
        "Assert",
        "File",
        "Exists",
        "downloadPath",
        "downloadPath",
        "_output",
        "WriteLine",
        "downloadPath",
        "Fact",
        "_output",
        "WriteTittle",
        "GetRandomUploadedFile",
        "tenantId",
        "FileId",
        "ToString",
        "GetRandomUploadedFile",
        "tenantId",
        "FileId",
        "ToString",
        "Path",
        "Combine",
        "FilesBaseDirectory",
        "Path",
        "Combine",
        "FilesBaseDirectory",
        "FileSystem",
        "DownloadFileAsync",
        "fileIdFirst",
        "downloadPathFirst",
        "tenantId",
        "tenantId",
        "FileSystem",
        "DownloadFileAsync",
        "fileIdSecond",
        "downloadPathSecond",
        "tenantId",
        "tenantId",
        "WhenAny",
        "downloadTasks",
        "downloadTasks",
        "Remove",
        "firstDownloadedFile",
        "Assert",
        "File",
        "Exists",
        "downloadPathFirst",
        "File",
        "Exists",
        "downloadPathSecond",
        "FilesBaseDirectory",
        "_output",
        "WriteLine",
        "downloadPathFirst",
        "WhenAny",
        "downloadTasks",
        "Assert",
        "File",
        "Exists",
        "downloadPathFirst",
        "File",
        "Exists",
        "downloadPathSecond",
        "FilesBaseDirectory",
        "_output",
        "WriteLine",
        "downloadPathSecond",
        "Random",
        "tenantId",
        "FileSystem",
        "GetAvailableFilesAsync",
        "tenantId",
        "tenantId",
        "Result",
        "Data",
        "randomUploadedFile",
        "Any",
        "ArgumentOutOfRangeException",
        "tenantId",
        "randomUploadedFile",
        "ElementAt",
        "_random",
        "Next",
        "randomUploadedFile",
        "Count"
    ],
    "literals": [
        "\"MyTenantId\"",
        "\"Executing FileSystem.SDK example: Download one file\"",
        "\"downloadedFile.txt\"",
        "\"MyTenantId\"",
        "\"Executing FileSystem.SDK example: Download two files in parallel\"",
        "\"downloadedInParallelFile_First.txt\"",
        "\"downloadedInParallelFile_Second.txt\"",
        "\"Status eq 'All'\""
    ],
    "variables": [
        "ITestOutputHelper",
        "_output",
        "tenantId",
        "fileId",
        "downloadPath",
        "tokenSource",
        "tenantId",
        "fileIdFirst",
        "fileIdSecond",
        "downloadPathFirst",
        "downloadPathSecond",
        "downloadTasks",
        "firstDownloadedFile",
        "Random",
        "_random",
        "randomUploadedFile"
    ],
    "comments": [
        "Only necessary for multi-tenant token.",
        "First you need a valid file ID so you can download it.",
        "If you already know the ID of an uploaded file, you can use, instead, that ID.",
        "optional token source to cancel operations after some milliseconds:",
        "As the call is asynchronous, it is possible to do several calls in parallel.",
        "Only necessary for multi-tenant token.",
        "First you need a valid file ID so you can download it.",
        "If you already know the ID of an uploaded file, you can use, instead, that ID.",
        "Wait for the files to be downloaded and print the results.",
        "If you only care about all files being downloaded and not the order, you can use Task.WhenAll instead."
    ],
    "docstrings": [],
    "functions": [
        "Download",
        "DownloadOneFile",
        "DownloadTwoFilesInParallel",
        "FileInfo",
        "GetRandomUploadedFile"
    ],
    "classes": [
        "Download"
    ]
}