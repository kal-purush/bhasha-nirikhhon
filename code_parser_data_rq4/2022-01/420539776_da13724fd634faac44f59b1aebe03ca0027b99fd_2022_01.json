{
    "identifiers": [
        "typing",
        "Sequence",
        "Optional",
        "Union",
        "icecream",
        "ic",
        "mido",
        "MidiTrack",
        "MidiFile",
        "MidiCompose",
        "logic",
        "harmony",
        "chord",
        "Chord",
        "MidiCompose",
        "logic",
        "melody",
        "melody",
        "Melody",
        "MidiCompose",
        "logic",
        "rhythm",
        "beat",
        "Beat",
        "MidiCompose",
        "logic",
        "rhythm",
        "measure",
        "Measure",
        "MidiCompose",
        "logic",
        "rhythm",
        "part",
        "Part",
        "MidiCompose",
        "translation",
        "track_builder",
        "TrackBuilder",
        "chords",
        "Optional",
        "Sequence",
        "Chord",
        "chords",
        "property",
        "_chords",
        "chords",
        "setter",
        "value",
        "Sequence",
        "Chord",
        "value",
        "all",
        "isinstance",
        "v",
        "Chord",
        "v",
        "value",
        "all_chords",
        "e",
        "value",
        "_chords",
        "property",
        "max",
        "len",
        "c",
        "c",
        "chords",
        "property",
        "min",
        "len",
        "c",
        "c",
        "chords",
        "chord",
        "Chord",
        "chords",
        "append",
        "chord",
        "idx",
        "chord",
        "Chord",
        "idx",
        "len",
        "idx",
        "len",
        "IndexError",
        "e",
        "chords",
        "insert",
        "idx",
        "chord",
        "chords",
        "Sequence",
        "Chord",
        "idx",
        "Optional",
        "all",
        "isinstance",
        "c",
        "Chord",
        "c",
        "chords",
        "join",
        "c",
        "c",
        "chords",
        "e",
        "idx",
        "c",
        "chords",
        "insert_chord",
        "idx",
        "c",
        "idx",
        "chords",
        "extend",
        "chords",
        "bpm",
        "beats_per_chord",
        "velocities",
        "Union",
        "Sequence",
        "return_type",
        "Union",
        "MidiFile",
        "MidiTrack",
        "len",
        "max_notes",
        "isinstance",
        "velocities",
        "velocities",
        "velocities",
        "ValueError",
        "e",
        "velocities",
        "_",
        "n_parts",
        "isinstance",
        "velocities",
        "Sequence",
        "len",
        "velocities",
        "n_parts",
        "ValueError",
        "e",
        "all",
        "v",
        "v",
        "velocities",
        "ValueError",
        "e",
        "Beat",
        "beats_per_chord",
        "Measure",
        "_beats",
        "n_measures",
        "Part",
        "_measures",
        "n_parts",
        "Melody",
        "n_parts",
        "i_chord",
        "c",
        "len",
        "c",
        "i_part",
        "p",
        "parts",
        "len_chord",
        "i_part",
        "p",
        "i_chord",
        "activate",
        "melodies",
        "i_part",
        "append_note",
        "c",
        "i_part",
        "p",
        "i_chord",
        "deactivate",
        "m",
        "v",
        "melodies",
        "velocities",
        "v",
        "TrackBuilder",
        "parts",
        "parts",
        "melodies",
        "melodies",
        "bpm",
        "bpm",
        "tb",
        "get_track",
        "return_type",
        "track",
        "MidiFile",
        "mid",
        "tracks",
        "append",
        "track",
        "mid",
        "item",
        "chords",
        "item",
        "len",
        "chords",
        "i",
        "c",
        "i",
        "len",
        "s",
        "repr",
        "c",
        "s",
        "repr",
        "c",
        "s",
        "s"
    ],
    "literals": [
        "\"Parameter `chords` must be a sequence of Chord instances.\"",
        "f\"idx `{idx}` out of range for ChordSet with length {len(self)}\"",
        "\" \"",
        "\"All elements in `chords` must be Chord instances.\"",
        "\"MidiFile\"",
        "f\"Given velocity {velocities} out of range.\"",
        "\"When passing a sequence of velocities, must give one velocity per 'chord voice'\"",
        "\"All velocities must be between 0 and 127.\"",
        "\"MidiTrack\"",
        "\"ChordSequence(\\n\"",
        "\"    [\\n\"",
        "\"    \"",
        "\"\\n\"",
        "\"    \"",
        "\",\\n\"",
        "\"     ])\""
    ],
    "variables": [
        "chords",
        "_chords",
        "all_chords",
        "e",
        "_chords",
        "_chords",
        "e",
        "e",
        "n_measures",
        "n_parts",
        "e",
        "velocities",
        "e",
        "e",
        "_beats",
        "_measures",
        "parts",
        "melodies",
        "len_chord",
        "m",
        "velocity",
        "tb",
        "track",
        "mid",
        "s"
    ],
    "comments": [
        "calls setter",
        "UTILITY METHODS ####",
        "MIDI METHODS ####",
        "one measure per chord",
        "one part per chord voice",
        "handle velocities",
        "all melodies same volume",
        "initialize empty parts/melodies",
        "populate parts and melodies",
        "activate first subdivision of first beat of current measure",
        "set velocities",
        "build track",
        "get midifile"
    ],
    "docstrings": [
        "\"\"\"\n        Returns integer representing the number of notes in the chord with the most notes.\n        \"\"\"",
        "\"\"\"\n        :param bpm: Tempo of output track (beats per minute)\n        :param beats_per_chord: Number of beats per chord (one chord per measure)\n        :param velocities: If single integer, all voices same volume, if sequence of integers, must be same length as \\\n        `self.max_notes`.\n        :param return_type: Either \"MidiFile\" or \"MidiTrack\"\n        \"\"\""
    ],
    "functions": [
        "chords",
        "chords",
        "max_notes",
        "min_notes",
        "append_chord",
        "insert_chord",
        "extend",
        "quick_midi",
        "__getitem__",
        "__len__",
        "__repr__"
    ],
    "classes": [
        "ChordSequence"
    ]
}