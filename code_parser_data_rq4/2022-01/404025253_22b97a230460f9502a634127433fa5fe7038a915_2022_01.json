{
    "identifiers": [
        "NRLN",
        "MerkleProof",
        "FullProof",
        "genSignalHash",
        "generateMerkleProof",
        "ZkIdentity",
        "SecretType",
        "bigintToHex",
        "hexToBigint",
        "axios",
        "AxiosResponse",
        "ISafeProof",
        "IRLNProofRequest",
        "deserializeMerkleProof",
        "MerkleProofArtifacts",
        "identity",
        "request",
        "spamThreshold",
        "identity",
        "spamThreshold",
        "genSignalHash",
        "signal",
        "identity",
        "SecretType",
        "SPAM_TRESHOLD",
        "merkleStorageAddress",
        "axios",
        "merkleStorageAddress",
        "bigintToHex",
        "identityCommitment",
        "SPAM_TRESHOLD",
        "merkleProof",
        "deserializeMerkleProof",
        "response",
        "merkleProofArtifacts",
        "proofArtifacts",
        "leaf",
        "hexToBigint",
        "leaf",
        "merkleProof",
        "generateMerkleProof",
        "proofArtifacts",
        "proofArtifacts",
        "leaves",
        "identityCommitment",
        "NRLN",
        "identitySecret",
        "merkleProof",
        "externalNullifier",
        "signal",
        "hexToBigint",
        "rlnIdentifier",
        "NRLN",
        "witness",
        "circuitFilePath",
        "zkeyFilePath",
        "NRLN",
        "fullProof",
        "NRLN",
        "identitySecret",
        "externalNullifier",
        "signalHash",
        "SPAM_TRESHOLD",
        "hexToBigint",
        "rlnIdentifier",
        "bigintToHex",
        "y",
        "bigintToHex",
        "merkleProof",
        "bigintToHex",
        "nullifier",
        "bigintToHex",
        "signalHash",
        "externalNullifier",
        "rlnIdentifier",
        "e",
        "e"
    ],
    "literals": [
        "'@zk-kit/protocols'",
        "'@zk-kit/identity'",
        "'bigint-conversion'",
        "'axios'",
        "'./interfaces'",
        "'./utils'",
        "'@src/types'",
        "string",
        "Error while generating RLN proof: ${e}"
    ],
    "variables": [
        "request",
        "merkleProof",
        "SPAM_TRESHOLD",
        "identitySecret",
        "signalHash",
        "identityCommitment",
        "response",
        "proofArtifacts",
        "leaves",
        "witness",
        "fullProof",
        "solidityProof",
        "y",
        "nullifier",
        "publicSignals"
    ],
    "comments": [
        "eslint-disable-next-line class-methods-use-this"
    ],
    "docstrings": [],
    "functions": [
        "genProof"
    ],
    "classes": [
        "NRLNService"
    ]
}