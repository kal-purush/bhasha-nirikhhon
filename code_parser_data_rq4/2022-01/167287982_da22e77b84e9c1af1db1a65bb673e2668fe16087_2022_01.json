{
    "identifiers": [
        "Expect",
        "Test",
        "TestFixture",
        "Contains",
        "TestFixture",
        "Test",
        "Contains",
        "Expect",
        "result",
        "Test",
        "Contains",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result",
        "Test",
        "Contains",
        "x",
        "y",
        "Expect",
        "result"
    ],
    "literals": [
        "\"use strict\"",
        "\"alsatian\"",
        "\"../src/Contains\"",
        "\"Contains Function\"",
        "\"should match strings\"",
        "\"Hello there world.\"",
        "\"there\"",
        "\"should fail strings does not match\"",
        "\"hello world\"",
        "\"fox\"",
        "\"should fail if types do not match\"",
        "\"should pass if array elements are found\"",
        "\"should pass if object properties are found\"",
        "\"should pass with large embedded object types\"",
        "\"hello world\"",
        "\"hello\"",
        "\"it should fail if complex doesn't match\"",
        "\"hello world\"",
        "\"it should pass if two values are null\"",
        "\"hello world\"",
        "\"it should fail quickly if more elements are in compare array\"",
        "\"it should fail quickly if a property is not found in object\""
    ],
    "variables": [
        "result",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result",
        "x",
        "y",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "* @namespace NoDash\n * @author Shawn Rapp\n * @license MIT"
    ],
    "functions": [
        "testPassMatchStrings",
        "testFailStringsDontMatch",
        "testFailDifferentTypes",
        "testPassArrayFound",
        "testPassObjectFound",
        "testPassComplexFound",
        "testFailComplexNotFound",
        "testPassNull",
        "testFailQuickArray",
        "testFailQuickObject"
    ],
    "classes": [
        "FixtureContains"
    ]
}