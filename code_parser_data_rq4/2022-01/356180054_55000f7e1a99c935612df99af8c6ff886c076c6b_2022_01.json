{
    "identifiers": [
        "context",
        "nightlyURL",
        "artifact",
        "context",
        "context",
        "artifact",
        "github",
        "github",
        "context",
        "context",
        "context",
        "artifacts",
        "a",
        "a",
        "artifacts",
        "a",
        "a",
        "artifacts",
        "a",
        "a",
        "github",
        "github",
        "context",
        "context",
        "pr_number",
        "gh_comments",
        "gh_comments",
        "c",
        "c",
        "gh_comment",
        "gh_comment",
        "gh_comment",
        "ct_body",
        "gh_comment",
        "gh_comment",
        "state",
        "ct_body",
        "state",
        "ct_body",
        "context",
        "ct_body",
        "ct_body",
        "context",
        "ct_body",
        "ct_body",
        "context",
        "context",
        "context",
        "context",
        "pr_number",
        "context",
        "context",
        "context",
        "context",
        "ct_logs",
        "pr_number",
        "nightlyURL",
        "ct_logs",
        "html_docs",
        "pr_number",
        "nightlyURL",
        "html_docs",
        "win_exe",
        "nightlyURL",
        "win_exe",
        "gh_comment",
        "gh_comment",
        "body",
        "gh_comment",
        "github",
        "context",
        "context",
        "gh_comment",
        "body",
        "github",
        "context",
        "context",
        "context",
        "body"
    ],
    "literals": [
        "Workflow: ${JSON.stringify(context.payload.workflow_run,null,2)}",
        "https://nightly.link/${context.repo.owner}/${context.repo.repo}/actions/artifacts/${artifact.id}.zip",
        "'test_results'",
        "'otp_doc_html'",
        "\"github-actions[bot]\"",
        "Comment to update: ${JSON.stringify(gh_comment,null,2)}",
        "\"<!-- marker -->\"",
        "'starting'",
        "\"## CT Test Results\\n\\n\"",
        "'starting'",
        "Tests are running... ${context.payload.workflow_run.html_url}\\n\\n",
        "\"No tests were run for this PR. This is either because the build failed, or the PR is based on a branch without GH actions tests configured.\\n\\n\"",
        "Results for commit ${context.payload.workflow_run.head_sha}",
        "ct_body: ${ct_body}",
        "${ct_body}\n\n<!-- marker -->\n\nTo speed up review, make sure that you have read [Contributing to Erlang/OTP](/${context.repo.owner}/${context.repo.repo}/blob/master/CONTRIBUTING.md) and that all [checks](/${context.repo.owner}/${context.repo.repo}/pull/${pr_number}/checks) pass.\n\nSee the [TESTING](/${context.repo.owner}/${context.repo.repo}/blob/master/HOWTO/TESTING.md) and [DEVELOPMENT](/${context.repo.owner}/${context.repo.repo}/blob/master/HOWTO/DEVELOPMENT.md) HowTo guides for details about how to run test locally.\n\n## Artifacts\n*",
        "[Complete CT logs](https://erlang.github.io/prs/${pr_number}/ct_logs/index.html) ([Download Logs](${nightlyURL(ct_logs)}))",
        "\"No CT logs found\"",
        "*",
        "[HTML Documentation](https://erlang.github.io/prs/${pr_number}/doc/index.html) ([Download HTML Docs](${nightlyURL(html_docs)}))",
        "\"No HTML docs found\"",
        "*",
        "[Windows Installer](${nightlyURL(win_exe)})",
        "\"No Windows Installer found\"",
        "// Erlang/OTP Github Action Bot",
        "\"Update comment: \""
    ],
    "variables": [
        "nightlyURL",
        "artifacts",
        "ct_logs",
        "html_docs",
        "win_exe",
        "gh_comments",
        "gh_comment",
        "ct_body",
        "body"
    ],
    "comments": [
        "We use this link service as github does not (yet) expose an API where\n       you can download an artifact.\n       https://github.com/actions/upload-artifact/issues/50",
        "We find the newest comment by \"github-actions[bot]\". There really should\n       only be one, but the PR scripts may be buggy and if so we want to updated\n       the latest post.",
        "The EnricoMi/publish-unit-test-result-action@v1 action creates/updates a comment\n       to always start with \"## CT Test Results\". Below we append some data to that\n       comment to further help the user.",
        "If the comment does not have a marker, it has been touched by\n           EnricoMi/publish-unit-test-result-action@v1 and then we need\n           to update the comment",
        "If the comment exists and we are just starting the workflow we do nothing",
        "if the comment does not exist we use a place holder comment. This\n           needs to start with \"## CT Test Results\" and\n           contain \"Results for commit\" as otherwise\n           EnricoMi/publish-unit-test-result-action@v1 will create a new comment."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}