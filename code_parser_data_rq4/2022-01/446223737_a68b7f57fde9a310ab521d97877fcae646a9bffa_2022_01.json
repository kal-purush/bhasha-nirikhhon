{
    "identifiers": [
        "IO",
        "Net",
        "Linq",
        "Configuration",
        "Reflection",
        "Diagnostics",
        "Collections",
        "Generic",
        "Newtonsoft",
        "Json",
        "RatesDAL",
        "RatesDAL",
        "Classes",
        "Rates",
        "IDictionary",
        "ConfigurationManager",
        "AppSettings",
        "ToString",
        "IsNullOrWhiteSpace",
        "Empty",
        "ConfigurationManager",
        "AppSettings",
        "ToString",
        "IsNullOrWhiteSpace",
        "Empty",
        "ConfigurationManager",
        "AppSettings",
        "ToString",
        "IsNullOrWhiteSpace",
        "Empty",
        "AppDomain",
        "CurrentDomain",
        "SetupInformation",
        "ConfigurationFile",
        "sConfig",
        "Path",
        "GetDirectoryName",
        "pConfigFile",
        "Path",
        "GetFileNameWithoutExtension",
        "pConfigFile",
        "sLog",
        "Path",
        "GetFileNameWithoutExtension",
        "sLog",
        "Path",
        "Combine",
        "sPath",
        "sLog",
        "Assembly",
        "GetEntryAssembly",
        "GetName",
        "Name",
        "ToString",
        "Assembly",
        "GetEntryAssembly",
        "GetName",
        "Version",
        "ToString",
        "sName",
        "sVersion",
        "msg",
        "pAppName",
        "msg",
        "EventLog",
        "WriteEntry",
        "message",
        "EventLogEntryType",
        "Information",
        "msg",
        "pAppName",
        "msg",
        "EventLog",
        "WriteEntry",
        "message",
        "EventLogEntryType",
        "Warning",
        "msg",
        "pAppName",
        "msg",
        "EventLog",
        "WriteEntry",
        "message",
        "EventLogEntryType",
        "file",
        "msg",
        "Path",
        "GetDirectoryName",
        "file",
        "Directory",
        "Exists",
        "path",
        "Directory",
        "CreateDirectory",
        "path",
        "FileStream",
        "file",
        "FileMode",
        "Append",
        "FileAccess",
        "Write",
        "FileShare",
        "ReadWrite",
        "StreamWriter",
        "fs",
        "Now",
        "Format",
        "dt",
        "Hour",
        "dt",
        "Minute",
        "dt",
        "Second",
        "dt",
        "Millisecond",
        "dt",
        "ToString",
        "dtTime",
        "msg",
        "sw",
        "WriteLine",
        "sLogEntry",
        "sw",
        "Flush",
        "sw",
        "Close",
        "msg",
        "WinEventLogInfo",
        "msg",
        "WriteToLogFile",
        "pLogFile",
        "msg",
        "DataAccessLayer",
        "db",
        "data",
        "JsonConvert",
        "DeserializeObject",
        "RatesModel",
        "data",
        "db",
        "_RatesLookupRepo",
        "GetAll",
        "RatesBase",
        "Currency",
        "rates",
        "Base",
        "Trade",
        "Country",
        "lookup",
        "Where",
        "l",
        "Code",
        "rates",
        "Base",
        "FirstOrDefault",
        "Id",
        "Created",
        "Now",
        "CUser",
        "db",
        "_RatesBaseRepo",
        "CreateAuto",
        "rb",
        "rb",
        "db",
        "_RatesBaseRepo",
        "GetTop",
        "FirstOrDefault",
        "r",
        "rates",
        "Rates",
        "r",
        "Key",
        "rb",
        "Currency",
        "db",
        "_RatesCurrencyRepo",
        "BulkCreate",
        "RatesCurrency",
        "BaseId",
        "rb",
        "Id",
        "Currency",
        "r",
        "Key",
        "Value",
        "Round",
        "r",
        "Value",
        "Country",
        "lookup",
        "Where",
        "l",
        "Code",
        "r",
        "Key",
        "FirstOrDefault",
        "Id",
        "Created",
        "rb",
        "Created",
        "CUser",
        "rb",
        "CUser",
        "added",
        "WriteLog",
        "db",
        "_RatesCurrencyRepo",
        "BulkCommit",
        "WriteLog",
        "added",
        "args",
        "WriteLog",
        "pAppName",
        "RatesDB",
        "Empty",
        "Currency",
        "Empty",
        "RatesUrl",
        "Empty",
        "DataAccessLayer",
        "RatesDB",
        "Currency",
        "Split",
        "c",
        "currencies",
        "WriteLog",
        "c",
        "RatesUrl",
        "c",
        "WriteLog",
        "url",
        "WebClient",
        "client",
        "DownloadString",
        "url",
        "ProcessCurrency",
        "database",
        "response",
        "WriteLog",
        "WriteLog",
        "ex",
        "WriteLog",
        "ex",
        "Message",
        "ex",
        "InnerException",
        "Message"
    ],
    "literals": [
        "\"RatesDB\"",
        "\"Currency\"",
        "\"RatesUrl\"",
        "\".log\"",
        "\" v\"",
        "\" -> \"",
        "\".NET Runtime\"",
        "\" -> \"",
        "\".NET Runtime\"",
        "\" -> \"",
        "\".NET Runtime\"",
        "\"{0:00}:{1:00}:{2:00}.{3:000}\"",
        "\"dd/MM/yyyy \"",
        "\" -> \"",
        "\"SYSTEM\"",
        "\"created\"",
        "\"Error in the app.config file, not enough parameters to run task.\"",
        "\"Processing completed.\""
    ],
    "variables": [
        "Rates",
        "Base",
        "RatesDB",
        "Currency",
        "RatesUrl",
        "pConfigFile",
        "sConfig",
        "pLogFile",
        "sPath",
        "sLog",
        "pAppName",
        "sName",
        "sVersion",
        "message",
        "message",
        "message",
        "path",
        "FileStream",
        "fs",
        "StreamWriter",
        "sw",
        "dt",
        "dtTime",
        "sLogEntry",
        "rates",
        "lookup",
        "rb",
        "added",
        "database",
        "currencies",
        "url",
        "client",
        "response"
    ],
    "comments": [
        "Main data model class to consume rates url and deserialize JSON to a C# class representation",
        "Writes an entry to the passed log file, will create any path as needed for the log file.",
        "</summary>",
        "Ensure the path for the log file exists before writing to the log file",
        "Combined logging routine, wrties to the standard windows event log AND a local log file.",
        "</summary>",
        "Sometimes servers have permission problems for local log files depending on the service account they",
        "are attached too for a windows task, force log entry to standard windows event log as well.",
        "The class definitions defined in DAL project attached follows WPF standard (MVVM design pattern)",
        "and easily allows the classes to be reused from this DAL in any WPF client application.",
        "Not ideal this, grab the auto-increment ID for the newly created RatesBase record",
        "When validating the data only include in the rates records currencies that differ from the",
        "base currency, the same currency pair is pointless.",
        "For large amounts of records for integration or back office data processing this is an",
        "example of a cached SQL transaction in this repository design pattern. Once a record is",
        "cached a bulk commit then sends all the cached SQL statements, insert/update, in a single",
        "database operation rather than looping through all records and having a single database",
        "operation for each record. StackOverflow's Dapper ORM library is used, it is significantly",
        "faster than Entity Framwework, speed is important for integration/back office data tasks.",
        "transform to 4 decimal places",
        "Bulk commit of SQL insert statements wrapped in a transaction, on error condition rollback occurs,",
        "profiling has shown this implementation does around 20000 SQL insert/updates in approx 4 seconds.",
        "Loop through all currencies in the CSV list from the config file"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "WinEventLogInfo",
        "WinEventLogWarning",
        "WinEventLogError",
        "WriteToLogFile",
        "WriteLog",
        "ProcessCurrency",
        "Main"
    ],
    "classes": [
        "Program",
        "RatesModel"
    ]
}