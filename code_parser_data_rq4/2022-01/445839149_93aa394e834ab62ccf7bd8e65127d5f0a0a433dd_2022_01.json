{
    "identifiers": [
        "SharpDX",
        "IO",
        "MemoryMappedFiles",
        "IO",
        "Turbo",
        "Plugins",
        "Default",
        "Collections",
        "Collections",
        "Generic",
        "Linq",
        "Runtime",
        "InteropServices",
        "Text",
        "RegularExpressions",
        "SharpDX",
        "Text",
        "Windows",
        "Forms",
        "BasePlugin",
        "IBeforeRenderHandler",
        "IInGameTopPainter",
        "Enabled",
        "_mmf",
        "MemoryMappedFile",
        "CreateNew",
        "SHARED_FILE",
        "IController",
        "hud",
        "Load",
        "hud",
        "IMonster",
        "monster",
        "monster",
        "FloorCoordinate",
        "ToScreenCoordinate",
        "GetMonsterPriority",
        "monster",
        "monster",
        "Attackable",
        "monster",
        "CentralXyDistanceToMe",
        "monster",
        "SnoMonster",
        "NameEnglish",
        "screenCoord",
        "X",
        "screenCoord",
        "Y",
        "ClipState",
        "clipState",
        "Hud",
        "Game",
        "Me",
        "Powers",
        "GetBuff",
        "Hud",
        "Game",
        "Me",
        "Powers",
        "GetBuff",
        "Active",
        "Hud",
        "Game",
        "SpecialArea",
        "SpecialArea",
        "Rift",
        "Hud",
        "Game",
        "SpecialArea",
        "SpecialArea",
        "GreaterRift",
        "Hud",
        "Game",
        "Me",
        "Stats",
        "ResourceCurEssence",
        "Hud",
        "Game",
        "Me",
        "Stats",
        "ResourceMaxEssence",
        "ActorSnoEnum",
        "ActorSnoEnum",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_a",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_b",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_e",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_f_archer",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_c",
        "ActorSnoEnum",
        "_p6_necro_skeletonmage_d",
        "Hud",
        "Game",
        "Actors",
        "Where",
        "skeletonMageSNOs",
        "Contains",
        "actor",
        "SnoActor",
        "Sno",
        "actor",
        "SummonerAcdDynamicId",
        "Hud",
        "Game",
        "Me",
        "SummonerId",
        "skeletonMageActors",
        "Count",
        "Hud",
        "Game",
        "AliveMonsters",
        "Count",
        "Hud",
        "Game",
        "Me",
        "Powers",
        "UsedNecromancerPowers",
        "SkeletalMage",
        "skeletonMageSkill",
        "skeletonMageBuff",
        "skeletonMageSkill",
        "Buff",
        "skeletonMageBuff",
        "skeletonMageTimeLeft",
        "skeletonMageBuff",
        "TimeLeftSeconds",
        "monsterToTarget",
        "monster",
        "Hud",
        "Game",
        "AliveMonsters",
        "monster",
        "Attackable",
        "monster",
        "CentralXyDistanceToMe",
        "monsterToTarget",
        "monsterToTarget",
        "monster",
        "GetMonsterPriority",
        "monster",
        "GetMonsterPriority",
        "monsterToTarget",
        "monster",
        "CurHealth",
        "monsterToTarget",
        "CurHealth",
        "monsterToTarget",
        "monster",
        "monsterToTarget",
        "hasTarget",
        "monsterToTarget",
        "FloorCoordinate",
        "ToScreenCoordinate",
        "targetX",
        "screenCoord",
        "X",
        "targetY",
        "screenCoord",
        "Y",
        "monsterPriority",
        "GetMonsterPriority",
        "monsterToTarget",
        "_mmf",
        "CreateViewStream",
        "BinaryWriter",
        "stream",
        "writer",
        "Write",
        "isHexingPantsEquipped",
        "writer",
        "Write",
        "isInRift",
        "writer",
        "Write",
        "hasMaxEssence",
        "writer",
        "Write",
        "hasTarget",
        "writer",
        "Write",
        "monsterPriority",
        "writer",
        "Write",
        "targetX",
        "writer",
        "Write",
        "targetY",
        "writer",
        "Write",
        "skeletonMageTimeLeft",
        "writer",
        "Write",
        "secondsLeftToRecastMage",
        "writer",
        "Write",
        "secondsMageDuration",
        "writer",
        "Write",
        "numberOfSkeleMages",
        "numberOfSkeleMages",
        "writer",
        "Write",
        "numMonsters",
        "numMonsters",
        "IMonster",
        "monster",
        "monster",
        "SnoMonster",
        "Priority",
        "MonsterPriority",
        "boss",
        "monster",
        "Rarity",
        "ActorRarity",
        "Champion",
        "monster",
        "Rarity",
        "ActorRarity",
        "Rare",
        "monster",
        "Rarity",
        "ActorRarity",
        "RareMinion"
    ],
    "literals": [
        "\"SNTS_TOOL_SHARED_FILE\"",
        "\": \"",
        "\" \"",
        "\" \"",
        "\"(\"",
        "\", \"",
        "\")\""
    ],
    "variables": [
        "MemoryMappedFile",
        "_mmf",
        "IFont",
        "watermark",
        "IMonster",
        "monsterToTarget",
        "SHARED_FILE",
        "IScreenCoordinate",
        "screenCoord",
        "isHexingPantsEquipped",
        "isInRift",
        "hasMaxEssence",
        "skeletonMageSNOs",
        "skeletonMageActors",
        "numberOfSkeleMages",
        "numMonsters",
        "IPlayerSkill",
        "skeletonMageSkill",
        "IBuff",
        "skeletonMageBuff",
        "skeletonMageTimeLeft",
        "targetX",
        "targetY",
        "hasTarget",
        "monsterPriority",
        "IScreenCoordinate",
        "screenCoord",
        "MemoryMappedViewStream",
        "stream",
        "BinaryWriter",
        "writer",
        "secondsLeftToRecastMage",
        "secondsMageDuration"
    ],
    "comments": [
        "var isInRift = Convert.ToString(Hud.Game.SpecialArea == SpecialArea.Rift || Hud.Game.SpecialArea == SpecialArea.GreaterRift);\n            var numMonstens = Convert.ToString(Hud.Game.AliveMonsters.Count()).PadLeft(4).Replace(' ', '0');\n\n            watermark = Hud.Render.CreateFont(\"tahoma\", 10, 155, 200, 0, 0, true, false, false);\n            watermark.DrawText(watermark.GetTextLayout(numMonstens), Hud.Window.Size.Width * 0.2f, Hud.Window.Size.Height * 0.5f);\n            watermark.DrawText(\n                monsterToTarget == null ? \"\" : GetMonsterInfo(monsterToTarget), \n                Hud.Window.Size.Width * 0.2f, Hud.Window.Size.Height * 0.53f);\n            var offset = 0.44f;\n            foreach (var elite in Hud.Game.AliveMonsters.Where(x => x.IsElite)) \n            {\n                watermark.DrawText(\n                    watermark.GetTextLayout(GetMonsterInfo(elite)), \n                    Hud.Window.Size.Width * 0.65f, Hud.Window.Size.Height * (offset));\n                offset += 0.02f;\n            }",
        "unused, only shows duration of last mage casted",
        "TODO: shielding etc.",
        "&& !monster.Invulnerable"
    ],
    "docstrings": [],
    "functions": [
        "SntsToolAdapter",
        "Load",
        "GetMonsterInfo",
        "PaintTopInGame",
        "BeforeRender",
        "GetMonsterPriority"
    ],
    "classes": [
        "SntsToolAdapter"
    ]
}