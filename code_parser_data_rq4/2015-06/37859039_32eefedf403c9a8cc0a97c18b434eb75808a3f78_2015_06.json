{
    "identifiers": [
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "java",
        "nio",
        "MappedByteBuffer",
        "java",
        "nio",
        "channels",
        "FileChannel",
        "args",
        "citMinerMain",
        "filePath",
        "File",
        "separator",
        "allNodes",
        "citMinerMain",
        "getNodes",
        "filePath",
        "citMinerMain",
        "getNodeListWithHeadAndTailNodes",
        "citMinerMain",
        "getNodesListFromText",
        "allNodes",
        "getNodeHead",
        "getNodenumber",
        "filePath",
        "filePath",
        "chan",
        "getChannel",
        "buf",
        "chan",
        "FileChannel",
        "MapMode",
        "READ_ONLY",
        "filePath",
        "length",
        "b",
        "filePath",
        "length",
        "len",
        "buf",
        "hasRemaining",
        "b",
        "len",
        "buf",
        "get",
        "len",
        "chan",
        "close",
        "close",
        "b",
        "len",
        "nodesFronText",
        "lineNumbersOfArray",
        "nodesFronText",
        "split",
        "arrayListnumbers",
        "lineNumbersOfArray",
        "length",
        "nodesList",
        "arrayListnumbers",
        "i",
        "i",
        "arrayListnumbers",
        "i",
        "numbersList",
        "lineNumbersOfArray",
        "i",
        "split",
        "nodesList",
        "i",
        "numbersList",
        "length",
        "j",
        "j",
        "numbersList",
        "length",
        "j",
        "nodesList",
        "i",
        "j",
        "valueOf",
        "numbersList",
        "j",
        "nodesList",
        "nodesFronText",
        "lineNumbersOfArray",
        "nodesFronText",
        "split",
        "arrayListnumbers",
        "lineNumbersOfArray",
        "length",
        "nodesList",
        "arrayListnumbers",
        "i",
        "i",
        "arrayListnumbers",
        "i",
        "numbersList",
        "lineNumbersOfArray",
        "i",
        "split",
        "nodesList",
        "i",
        "numbersList",
        "length",
        "j",
        "j",
        "numbersList",
        "length",
        "j",
        "nodesList",
        "i",
        "j",
        "valueOf",
        "numbersList",
        "j",
        "nodesList",
        "nodes",
        "nodesList",
        "nodes",
        "length",
        "defaultHeadNode",
        "firstNodeHeadNode",
        "i",
        "i",
        "nodes",
        "length",
        "i",
        "nodesList",
        "i",
        "nodes",
        "i",
        "length",
        "j",
        "j",
        "nodes",
        "i",
        "length",
        "j",
        "nodesList",
        "i",
        "j",
        "nodes",
        "i",
        "j",
        "nodesList",
        "i",
        "j",
        "setNodeHead",
        "defaultHeadNode",
        "aNodesList",
        "nodesList",
        "j",
        "j",
        "aNodesList",
        "length",
        "j",
        "j",
        "aNodesList",
        "length",
        "j",
        "aNodesList",
        "j",
        "setNodeHead",
        "firstNodeHeadNode",
        "aNodesList",
        "j",
        "getNodenumber",
        "aNodesList",
        "j",
        "setNodeHead",
        "aNodesList",
        "j",
        "aNodesList",
        "j",
        "getNodenumber",
        "numberOfLayer",
        "k",
        "j",
        "k",
        "aNodesList",
        "length",
        "k",
        "aNodesList",
        "k",
        "getNodenumber",
        "numberOfLayer",
        "j",
        "numberOfLayer",
        "aNodesList",
        "length",
        "node",
        "aNodesList",
        "j",
        "getNodeHead",
        "num",
        "num",
        "numberOfLayer",
        "num",
        "node",
        "node",
        "getNodeHead",
        "aNodesList",
        "j",
        "numberOfLayer",
        "setNodeHead",
        "node",
        "j",
        "numberOfLayer",
        "nodesList"
    ],
    "literals": [
        "\"D:\"",
        "\"test.txt\"",
        "\"GBK\"",
        "\"\\n\"",
        "\" |\\r\"",
        "\"\\n\"",
        "\" |\\r\""
    ],
    "variables": [],
    "comments": [
        "每一个Node不仅仅是一个数值而是一个对象",
        "nodesList[i][j].setNodenumber(Integer.valueOf(numbersList[j]));  //这里单单赋值 会空指针异常",
        "初始化Node,完成两个工作，第一：去掉前三个节点；第二：每个节点添加默认的头节点",
        "头结点添加firstNodeHeadNode",
        "如果后面的数不是-1,直接连接",
        "如果是-1,根据-1的次数来判定位置",
        "这里numberOfLayer表示-1出现了几次 出现几次就找几次nodesList[i][j - 1].getNodeHead()",
        "如果是最后一个位置，即-1时候，默认头结点",
        "这个循环是为了循环找getNodeHead"
    ],
    "docstrings": [
        "* Created by Administrator on 2015/6/21 0021.\n * CITMiner算法 童小托",
        "* 文件读取（内存映射方式）\n     *\n     * @param filePath 文件的路径\n     * @return 返回一个String类型的字符串\n     * @throws IOException 抛出异常",
        "* 把文件里面的数字组成一个二维Integer链表\n     *\n     * @param nodesFronText 表示从文件里面读取的数值\n     * @return 一个二维Integer链表",
        "* 把文件里面的数字组成一个二维Node链表\n     *\n     * @param nodesFronText 表示从文件里面读取的数值\n     * @return 一个二维Node链表",
        "* 将获得的二维Node链表转换成一个带头结点和尾节点的二维Node链表\n     *\n     * @param nodes 获得的二维Node链表\n     * @return 一个带头结点和尾节点的二维Node链表"
    ],
    "functions": [
        "main",
        "getNodes",
        "getIntegerListFromText",
        "getNodesListFromText",
        "getNodeListWithHeadAndTailNodes"
    ],
    "classes": [
        "CITMinerMain"
    ]
}