{
    "identifiers": [
        "Blend",
        "t",
        "me",
        "me",
        "name",
        "fn",
        "t",
        "me",
        "name",
        "fn",
        "actual",
        "message",
        "actual",
        "me",
        "message",
        "e",
        "me",
        "message",
        "fn",
        "amount",
        "amount",
        "amount",
        "me",
        "amount",
        "me",
        "setTimeout",
        "fn",
        "curTitle",
        "amount",
        "actuall",
        "message",
        "actuall",
        "me",
        "message",
        "me",
        "me",
        "actuall",
        "message",
        "actuall",
        "message",
        "actuall",
        "me",
        "message",
        "me",
        "me",
        "actuall",
        "message",
        "actuall",
        "message",
        "actuall",
        "actuall",
        "me",
        "message",
        "me",
        "me",
        "actuall",
        "message",
        "actuall",
        "message",
        "actuall",
        "actuall",
        "me",
        "message",
        "me",
        "me",
        "actuall",
        "message",
        "me",
        "me",
        "me",
        "me",
        "me",
        "actual",
        "expected",
        "message",
        "me",
        "actual",
        "expected",
        "message",
        "me",
        "message",
        "me",
        "me",
        "actual",
        "expected",
        "message",
        "actual",
        "expected",
        "message",
        "me",
        "actual",
        "expected",
        "message",
        "me",
        "message",
        "me",
        "me",
        "actual",
        "expected",
        "message",
        "actual",
        "expected",
        "message",
        "a",
        "b",
        "me",
        "a",
        "me",
        "b",
        "me",
        "a",
        "a",
        "b",
        "i",
        "a",
        "i",
        "check",
        "a",
        "i",
        "b",
        "i",
        "me",
        "a",
        "a",
        "b",
        "akeys",
        "bkeys",
        "k",
        "a",
        "check",
        "a",
        "k",
        "b",
        "k",
        "me",
        "a",
        "a",
        "b",
        "me",
        "a",
        "a",
        "b",
        "check",
        "actual",
        "expected",
        "test",
        "message",
        "me",
        "me",
        "me",
        "me",
        "test",
        "actual",
        "expected",
        "message",
        "me",
        "me",
        "me",
        "test",
        "actual",
        "expected",
        "message",
        "me",
        "me",
        "me",
        "cls",
        "content",
        "cls",
        "content",
        "cls",
        "content",
        "cls",
        "content",
        "testtype",
        "actual",
        "expected",
        "message",
        "me",
        "me",
        "me",
        "testtype",
        "me",
        "message",
        "me",
        "actual",
        "me",
        "expected",
        "message",
        "me",
        "me",
        "message",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "me",
        "value",
        "me",
        "value",
        "me",
        "value",
        "me",
        "value",
        "value",
        "value",
        "parseFloat",
        "value",
        "value",
        "value",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "obj",
        "me",
        "me",
        "doCallback",
        "me",
        "doCallback",
        "me",
        "me",
        "me",
        "me",
        "setTimeout",
        "doCallback",
        "me",
        "doCallback",
        "me",
        "doCallback",
        "result",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "result",
        "result",
        "me",
        "result",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "el",
        "eventName",
        "eventHandler",
        "el",
        "eventName",
        "eventHandler",
        "el",
        "eventName",
        "eventHandler",
        "el",
        "eventName",
        "eventHandler",
        "Blend"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "\"Throws an exception\"",
        "'exception'",
        "'no exception'",
        "${amount} delay for ${me.currentTest.name}",
        "string",
        "'Is True'",
        "string",
        "'Is False'",
        "string",
        "'IS NOT OK?'",
        "'null/undefined'",
        "string",
        "'Is Okay'",
        "'not null/undefined'",
        "'Nothing was tested!!!'",
        "string",
        "'Equal'",
        "string",
        "'Not Equal'",
        "string",
        "\"Don't know how to compare RegExps!\"",
        "string",
        "string",
        "string",
        "string",
        "'Test #'",
        "string",
        "<span class=\"${cls}\">${content}</span>",
        "string",
        "<div class=\"row ${cls}\">${content.join('') }</div>",
        "''",
        "string",
        "string",
        "'fail'",
        "'type pct10'",
        "'message pct10'",
        "'got pct40'",
        "got: [${JSON.stringify(actual) }]",
        "'expected pct40'",
        "expected: [${JSON.stringify(expected) }]",
        "string",
        "'warn'",
        "'[object Array]'",
        "'function'",
        "'string'",
        "\"object\"",
        "string",
        "'string'",
        "'array'",
        "'number'",
        "'object'",
        "'function'",
        "'null'",
        "'regexp'",
        "'DOMContentLoaded'",
        "'load'",
        "\"No tests not run!\"",
        "\"complete\"",
        "'DOMContentLoaded'",
        "'load'",
        "string",
        "totals ${me.totalFail === 0 ? 'allpass' : 'somefailed' }",
        "'allpass'",
        "'somefailed'",
        "'numtest pct33'",
        "Total: ${me.totalTests}",
        "'failed pct33'",
        "Failed: ${me.totalFail}",
        "'passed pct33'",
        "Passed: ${me.totalPass}",
        "<div class='log'>${result.join(' ') }</div>",
        "' '",
        "string",
        "string"
    ],
    "variables": [
        "me",
        "me",
        "me",
        "me",
        "curTitle",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "check",
        "i",
        "akeys",
        "bkeys",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "doCallback",
        "me",
        "result",
        "me",
        "TestRunner"
    ],
    "comments": [
        "Original source: JQuery"
    ],
    "docstrings": [
        "* Defines a test case",
        "* Execute a function and expects an exception be to thrown",
        "* Executes the given function with delay",
        "* Check if the value is true",
        "* Check if the value is false;",
        "* Check if the value is null or undefined",
        "* Check if the value is not null or undefined",
        "* Should be called after a test is done to let the test runner to continue",
        "* Compares to objects to for equality",
        "* Compares to objects to for equality"
    ],
    "functions": [
        "defineTest",
        "throws_exception",
        "delay",
        "isTrue",
        "isFalse",
        "isNotOk",
        "isOk",
        "done",
        "equal",
        "notEqual",
        "_equal",
        "fail",
        "span",
        "row",
        "logFail",
        "logWarn",
        "is_array",
        "is_function",
        "is_string",
        "is_null",
        "is_object",
        "is_number",
        "is_regexp",
        "get_obj_type",
        "run",
        "showResults",
        "runNextTest",
        "addEventListener",
        "removeEventListener"
    ],
    "classes": [
        "TestRunner"
    ]
}