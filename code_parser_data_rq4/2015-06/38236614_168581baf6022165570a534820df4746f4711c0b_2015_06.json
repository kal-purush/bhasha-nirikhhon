{
    "identifiers": [
        "Globalization",
        "IO",
        "Linq",
        "Text",
        "Serilog",
        "Core",
        "Serilog",
        "Parameters",
        "Serilog",
        "Parsing",
        "Xunit",
        "Serilog",
        "Tests",
        "Core",
        "Fact",
        "Render",
        "Chair",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "CultureInfo",
        "GetCultureInfo",
        "Receipt",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Back",
        "Legs",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "CultureInfo",
        "GetCultureInfo",
        "Sum",
        "When",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Chair",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Chair",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "CultureInfo",
        "GetCultureInfo",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Assert",
        "Equal",
        "m",
        "Theory",
        "InlineData",
        "InlineData",
        "InlineData",
        "InlineData",
        "InlineData",
        "InlineData",
        "value",
        "expected",
        "Assert",
        "Equal",
        "expected",
        "Render",
        "value",
        "Fact",
        "Render",
        "CultureInfo",
        "GetCultureInfo",
        "Assert",
        "Equal",
        "m",
        "messageTemplate",
        "properties",
        "Render",
        "messageTemplate",
        "properties",
        "IFormatProvider",
        "formatProvider",
        "messageTemplate",
        "properties",
        "MessageTemplateParser",
        "Parse",
        "messageTemplate",
        "PropertyBinder",
        "PropertyValueConverter",
        "Empty",
        "Type",
        "Empty",
        "IDestructuringPolicy",
        "binder",
        "ConstructProperties",
        "mt",
        "properties",
        "StringBuilder",
        "StringWriter",
        "output",
        "Collections",
        "Generic",
        "Net40ReadOnlyDictionaryExtensions",
        "ToDictionary40",
        "props",
        "p",
        "Name",
        "p",
        "Value",
        "mt",
        "Render",
        "writer",
        "formatProvider",
        "writer",
        "Flush",
        "output",
        "ToString",
        "Fact",
        "Render",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "CultureInfo",
        "GetCultureInfo",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Assert",
        "Equal",
        "m",
        "Fact",
        "Render",
        "Assert",
        "Equal",
        "m"
    ],
    "literals": [
        "\"straight\"",
        "\"a chair\"",
        "\"a receipt\"",
        "\"I sat at {@Chair}\"",
        "\"I sat at Chair { Back: \\\"straight\\\", Legs: [1, 2, 3, 4] }\"",
        "\"fr-FR\"",
        "\"I received {@Receipt}\"",
        "\"I received Receipt { Sum: 12,345, When: 20/05/2013 16:39:00 }\"",
        "\"I sat at {@Chair}\"",
        "\"straight\"",
        "\"I sat at { Back: \\\"straight\\\", Legs: [1, 2, 3, 4] }\"",
        "\"fr-FR\"",
        "\"I received {@Receipt}\"",
        "\"I received { Sum: 12,345, When: 20/05/2013 16:39:00 }\"",
        "\"I sat at {Chair}\"",
        "\"I sat at \\\"a chair\\\"\"",
        "\"I sat at {$Chair}\"",
        "\"I sat at \\\"a chair\\\"\"",
        "\"Just biting {Fruit} number {Count}\"",
        "\"Apple\"",
        "\"Just biting \\\"Apple\\\" number 12\"",
        "\"fr-FR\"",
        "\"Income was {Income} at {Date:d}\"",
        "\"Income was 1234,567 at 20/05/2013\"",
        "\"Welcome, customer {CustomerId:0000}\"",
        "\"Welcome, customer 0012\"",
        "\"Welcome, customer #{CustomerId,-10}, pleasure to see you\"",
        "\"Welcome, customer #1234      , pleasure to see you\"",
        "\"Welcome, customer #{CustomerId,-10:000000}, pleasure to see you\"",
        "\"Welcome, customer #001234    , pleasure to see you\"",
        "\"Welcome, customer #{CustomerId,10}, pleasure to see you\"",
        "\"Welcome, customer #      1234, pleasure to see you\"",
        "\"Welcome, customer #{CustomerId,10:000000}, pleasure to see you\"",
        "\"Welcome, customer #    001234, pleasure to see you\"",
        "\"Welcome, customer #{CustomerId,10:0,0}, pleasure to see you\"",
        "\"Welcome, customer #     1,234, pleasure to see you\"",
        "\"Welcome, customer #{CustomerId:0,0}, pleasure to see you\"",
        "\"Welcome, customer #1,234, pleasure to see you\"",
        "\"fr-FR\"",
        "\"Please pay {Sum}\"",
        "\"Please pay 12,345\"",
        "\"{1}, {0}\"",
        "\"world\"",
        "\"Hello\"",
        "\"\\\"Hello\\\", \\\"world\\\"\"",
        "\"fr-FR\"",
        "\"{1}, {0}\"",
        "\"Hello\"",
        "\"\\\"Hello\\\", 12,345\"",
        "\"{1}, {Place}\"",
        "\"world\"",
        "\"Hello\"",
        "\"\\\"world\\\", \\\"Hello\\\"\"",
        "\"{1}, {0}\"",
        "\"world\"",
        "\"{1}, \\\"world\\\"\""
    ],
    "variables": [
        "Back",
        "Legs",
        "Sum",
        "When",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "m",
        "mt",
        "binder",
        "props",
        "output",
        "writer",
        "m",
        "m",
        "m",
        "m"
    ],
    "comments": [
        "ReSharper disable UnusedMember.Local",
        "ReSharper restore UnusedMember.Local",
        "ReSharper disable UnusedMember.Local",
        "ReSharper restore UnusedMember.Local",
        "Debatable what the behavior should be, here."
    ],
    "docstrings": [],
    "functions": [
        "ToString",
        "ToString",
        "AnObjectIsRenderedInSimpleNotation",
        "AnObjectIsRenderedInSimpleNotationUsingFormatProvider",
        "AnAnonymousObjectIsRenderedInSimpleNotationWithoutType",
        "AnAnonymousObjectIsRenderedInSimpleNotationWithoutTypeUsingFormatProvider",
        "AnObjectWithDefaultDestructuringIsRenderedAsAStringLiteral",
        "AnObjectWithStringifyDestructuringIsRenderedAsAString",
        "MultiplePropertiesAreRenderedInOrder",
        "MultiplePropertiesUseFormatProvider",
        "FormatStringsArePropagated",
        "AlignmentStringsArePropagated",
        "FormatProviderIsUsed",
        "Render",
        "Render",
        "ATemplateWithOnlyPositionalPropertiesIsAnalyzedAndRenderedPositionally",
        "ATemplateWithOnlyPositionalPropertiesUsesFormatProvider",
        "ATemplateWithNamesAndPositionalsUsesNamesForAllValues",
        "MissingPositionalParametersRenderAsTextLikeStandardFormats"
    ],
    "classes": [
        "MessageTemplateTests",
        "Chair",
        "Receipt"
    ]
}