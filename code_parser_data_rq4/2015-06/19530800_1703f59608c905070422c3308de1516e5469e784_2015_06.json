{
    "identifiers": [
        "org",
        "apache",
        "jackrabbit",
        "core",
        "security",
        "authorization",
        "acl",
        "org",
        "apache",
        "jackrabbit",
        "api",
        "JackrabbitWorkspace",
        "org",
        "apache",
        "jackrabbit",
        "api",
        "security",
        "principal",
        "PrincipalManager",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "NodeImpl",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "SessionImpl",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "id",
        "NodeId",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "security",
        "authorization",
        "AccessControlConstants",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "security",
        "authorization",
        "GlobPattern",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "security",
        "authorization",
        "PrivilegeBits",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "security",
        "authorization",
        "PrivilegeManagerImpl",
        "org",
        "apache",
        "jackrabbit",
        "core",
        "value",
        "InternalValue",
        "org",
        "apache",
        "jackrabbit",
        "spi",
        "Name",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "javax",
        "jcr",
        "NodeIterator",
        "javax",
        "jcr",
        "RepositoryException",
        "javax",
        "jcr",
        "Value",
        "java",
        "security",
        "Principal",
        "java",
        "security",
        "acl",
        "Group",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "log",
        "LoggerFactory",
        "getLogger",
        "principalName",
        "isGroupEntry",
        "privilegeBits",
        "isAllow",
        "id",
        "pattern",
        "hasRestrictions",
        "path",
        "restriction",
        "hashCode",
        "id",
        "principalName",
        "isGroupEntry",
        "privilegeBits",
        "allow",
        "path",
        "globValue",
        "principalName",
        "principalName",
        "isGroupEntry",
        "isGroupEntry",
        "privilegeBits",
        "privilegeBits",
        "isAllow",
        "allow",
        "id",
        "id",
        "pattern",
        "calculatePattern",
        "path",
        "globValue",
        "hasRestrictions",
        "globValue",
        "path",
        "path",
        "restriction",
        "globValue",
        "globValue",
        "getString",
        "id",
        "principalName",
        "isGroupEntry",
        "privilegeBits",
        "allow",
        "path",
        "restrictions",
        "principalName",
        "principalName",
        "isGroupEntry",
        "isGroupEntry",
        "privilegeBits",
        "privilegeBits",
        "isAllow",
        "allow",
        "id",
        "id",
        "pattern",
        "calculatePattern",
        "path",
        "restrictions",
        "restrictions",
        "get",
        "P_GLOB",
        "hasRestrictions",
        "restrictions",
        "restrictions",
        "get",
        "P_GLOB",
        "path",
        "path",
        "restriction",
        "restrictions",
        "restrictions",
        "get",
        "P_GLOB",
        "restrictions",
        "get",
        "P_GLOB",
        "getString",
        "aclNode",
        "path",
        "aclNode",
        "NT_REP_ACL",
        "equals",
        "aclNode",
        "getPrimaryNodeTypeName",
        "sImpl",
        "aclNode",
        "getSession",
        "principalMgr",
        "sImpl",
        "getPrincipalManager",
        "privilegeMgr",
        "sImpl",
        "getWorkspace",
        "getPrivilegeManager",
        "nodeId",
        "aclNode",
        "getParentId",
        "entries",
        "itr",
        "aclNode",
        "getNodes",
        "itr",
        "hasNext",
        "aceNode",
        "itr",
        "nextNode",
        "principalName",
        "aceNode",
        "getProperty",
        "P_PRINCIPAL_NAME",
        "getString",
        "isGroupEntry",
        "princ",
        "principalMgr",
        "getPrincipal",
        "principalName",
        "princ",
        "isGroupEntry",
        "princ",
        "privValues",
        "aceNode",
        "getProperty",
        "P_PRIVILEGES",
        "internalGetValues",
        "privNames",
        "privValues",
        "length",
        "i",
        "i",
        "privValues",
        "length",
        "i",
        "privNames",
        "i",
        "privValues",
        "i",
        "getName",
        "globValue",
        "aceNode",
        "hasProperty",
        "P_GLOB",
        "globValue",
        "aceNode",
        "getProperty",
        "P_GLOB",
        "getValue",
        "isAllow",
        "NT_REP_GRANT_ACE",
        "equals",
        "aceNode",
        "getPrimaryNodeTypeName",
        "ace",
        "nodeId",
        "principalName",
        "isGroupEntry",
        "privilegeMgr",
        "getBits",
        "privNames",
        "isAllow",
        "path",
        "globValue",
        "entries",
        "add",
        "ace",
        "e",
        "log",
        "debug",
        "e",
        "getMessage",
        "entries",
        "path",
        "globValue",
        "path",
        "globValue",
        "GlobPattern",
        "create",
        "path",
        "GlobPattern",
        "create",
        "path",
        "globValue",
        "getString",
        "nodeId",
        "id",
        "id",
        "equals",
        "nodeId",
        "jcrPath",
        "pattern",
        "pattern",
        "matches",
        "jcrPath",
        "privilegeBits",
        "isAllow",
        "principalName",
        "isGroupEntry",
        "hasRestrictions",
        "Override",
        "hashCode",
        "h",
        "h",
        "h",
        "principalName",
        "hashCode",
        "h",
        "h",
        "privilegeBits",
        "hashCode",
        "h",
        "h",
        "valueOf",
        "isAllow",
        "hashCode",
        "h",
        "h",
        "pattern",
        "hashCode",
        "hashCode",
        "h",
        "hashCode",
        "Override",
        "obj",
        "obj",
        "obj",
        "other",
        "obj",
        "principalName",
        "equals",
        "other",
        "principalName",
        "privilegeBits",
        "equals",
        "other",
        "privilegeBits",
        "isAllow",
        "other",
        "isAllow",
        "path",
        "equals",
        "other",
        "path",
        "restriction",
        "other",
        "restriction",
        "restriction",
        "equals",
        "other",
        "restriction"
    ],
    "literals": [
        "\"Node must be of type 'rep:ACL'\"",
        "\"Failed to build ACE from content. {}\""
    ],
    "variables": [
        "principalName",
        "isGroupEntry",
        "privilegeBits",
        "isAllow",
        "id",
        "pattern",
        "hasRestrictions",
        "path",
        "restriction",
        "hashCode"
    ],
    "comments": [
        "load the entries:",
        "-------------------------------------------------------------< Object >---"
    ],
    "docstrings": [
        "* Copyright 2010 - 2015 Pentaho Corporation.  All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *",
        "* Copy-and-paste of {@code org.apache.jackrabbit.core.security.authorization.acl.Entry} in Jackrabbit 2.10.0.\n * This class is in {@code org.apache.jackrabbit.core.security.authorization.acl} package due to the scope of\n * collaborating classes.\n *\n * <p/>\n * <p/>\n * <p> Changes to original: </p> <ul> <li>{@code Entry} has a single private constructor, we changed the\n * scope to public {@code null} {@code nextId}.</li>\n * <p/>\n * </ul>",
        "* https://issues.apache.org/jira/browse/JCR-3882\n   *\n   * We can't use 'pattern.equals( other.pattern )' for the time being, this is a\n   * workaround while the above issue does not get pushed into a stable jackrabbit release",
        "* end workaround",
        "* https://issues.apache.org/jira/browse/JCR-3882\n     *\n     * We can't use 'pattern.equals( other.pattern )' for the time being, this is a\n     * workaround while the above issue does not get pushed into a stable jackrabbit release",
        "* end workaround",
        "* https://issues.apache.org/jira/browse/JCR-3882\n     *\n     * We can't use 'pattern.equals( other.pattern )' for the time being, this is a\n     * workaround while the above issue does not get pushed into a stable jackrabbit release",
        "* end workaround",
        "* @param nodeId\n   * @return <code>true</code> if this entry is defined on the node\n   * at <code>nodeId</code>",
        "*\n   * @param jcrPath\n   * @return",
        "* @see Object#hashCode()",
        "* @see Object#equals(Object)",
        "pattern.equals( other.pattern )",
        "* https://issues.apache.org/jira/browse/JCR-3882\n           *\n           * We can't use 'pattern.equals( other.pattern )' for the time being, this is a\n           * workaround while the above issue does not get pushed into a stable jackrabbit release",
        "* end workaround"
    ],
    "functions": [
        "PentahoEntry",
        "PentahoEntry",
        "readEntries",
        "GlobPattern",
        "calculatePattern",
        "isLocal",
        "matches",
        "PrivilegeBits",
        "getPrivilegeBits",
        "isAllow",
        "getPrincipalName",
        "isGroupEntry",
        "hasRestrictions",
        "hashCode",
        "equals"
    ],
    "classes": [
        "PentahoEntry"
    ]
}