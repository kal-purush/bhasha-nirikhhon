{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Net",
        "Net",
        "Sockets",
        "Text",
        "XmlRpc",
        "XmlRpcServerConnection",
        "XmlRpcSource",
        "ServerConnectionState",
        "READ_HEADER",
        "READ_REQUEST",
        "WRITE_RESPONSE",
        "Socket",
        "fd",
        "XmlRpcServer",
        "server",
        "deleteOnClose",
        "XmlRpcUtil",
        "log",
        "fd",
        "server",
        "server",
        "_connectionState",
        "ServerConnectionState",
        "READ_HEADER",
        "KeepOpen",
        "_keepAlive",
        "XmlRpcServerConnection",
        "XmlRpcUtil",
        "log",
        "server",
        "removeConnection",
        "XmlRpcDispatch",
        "EventType",
        "XmlRpcDispatch",
        "EventType",
        "eventType",
        "_connectionState",
        "ServerConnectionState",
        "READ_HEADER",
        "readHeader",
        "_connectionState",
        "ServerConnectionState",
        "READ_REQUEST",
        "readRequest",
        "_connectionState",
        "ServerConnectionState",
        "WRITE_RESPONSE",
        "writeResponse",
        "_connectionState",
        "ServerConnectionState",
        "WRITE_RESPONSE",
        "XmlRpcDispatch",
        "EventType",
        "WritableEvent",
        "XmlRpcDispatch",
        "EventType",
        "ReadableEvent",
        "XmlRpcSocket",
        "nbRead",
        "getfd",
        "_header",
        "eof",
        "_header",
        "Length",
        "XmlRpcUtil",
        "error",
        "XmlRpcSocket",
        "getErrorMsg",
        "c_str",
        "XmlRpcUtil",
        "log",
        "_header",
        "Length",
        "_header",
        "c_str",
        "hp",
        "_header",
        "Length",
        "bp",
        "cp",
        "ep",
        "cp",
        "ep",
        "cp",
        "strncasecmp",
        "cp",
        "lp",
        "cp",
        "ep",
        "cp",
        "strncasecmp",
        "cp",
        "kp",
        "cp",
        "ep",
        "cp",
        "strncmp",
        "cp",
        "bp",
        "cp",
        "ep",
        "cp",
        "strncmp",
        "cp",
        "bp",
        "cp",
        "bp",
        "eof",
        "XmlRpcUtil",
        "log",
        "_header",
        "Length",
        "XmlRpcUtil",
        "error",
        "lp",
        "XmlRpcUtil",
        "error",
        "_contentLength",
        "atoi",
        "lp",
        "_contentLength",
        "XmlRpcUtil",
        "error",
        "_contentLength",
        "XmlRpcUtil",
        "log",
        "_contentLength",
        "_request",
        "bp",
        "_keepAlive",
        "_header",
        "find",
        "std",
        "npos",
        "kp",
        "strncasecmp",
        "kp",
        "_keepAlive",
        "kp",
        "strncasecmp",
        "kp",
        "_keepAlive",
        "XmlRpcUtil",
        "log",
        "_keepAlive",
        "_header",
        "_connectionState",
        "ServerConnectionState",
        "READ_REQUEST",
        "readRequest",
        "_request",
        "Length",
        "_contentLength",
        "XmlRpcSocket",
        "nbRead",
        "getfd",
        "_request",
        "eof",
        "c_str",
        "_request",
        "Length",
        "_contentLength",
        "eof",
        "XmlRpcUtil",
        "error",
        "XmlRpcUtil",
        "log",
        "_request",
        "Length",
        "_connectionState",
        "ServerConnectionState",
        "WRITE_RESPONSE",
        "writeResponse",
        "_response",
        "Length",
        "executeRequest",
        "_bytesWritten",
        "_response",
        "Length",
        "XmlRpcUtil",
        "error",
        "XmlRpcSocket",
        "nbWrite",
        "socket",
        "_response",
        "_bytesWritten",
        "XmlRpcUtil",
        "error",
        "XmlRpcSocket",
        "getErrorMsg",
        "XmlRpcUtil",
        "log",
        "_bytesWritten",
        "_response",
        "Length",
        "_bytesWritten",
        "_response",
        "Length",
        "_header",
        "_request",
        "_response",
        "_connectionState",
        "ServerConnectionState",
        "READ_HEADER",
        "_keepAlive",
        "executeRequest",
        "XmlRpcValue",
        "parms",
        "XmlRpcValue",
        "resultValue",
        "XmlRpcValue",
        "methodName",
        "parms",
        "XmlRpcUtil",
        "log",
        "methodName",
        "executeMethod",
        "methodName",
        "parms",
        "resultValue",
        "executeMulticall",
        "methodName",
        "parms",
        "resultValue",
        "methodName",
        "resultValue",
        "toXml",
        "XmlRpcException",
        "fault",
        "log",
        "fault",
        "Message",
        "fault",
        "Message",
        "fault",
        "getCode",
        "XmlRpcValue",
        "parms",
        "parseTag",
        "METHODNAME_TAG",
        "_request",
        "offset",
        "methodName",
        "Length",
        "XmlRpcUtil",
        "findTag",
        "PARAMS_TAG",
        "_request",
        "offset",
        "XmlRpcUtil",
        "nextTagIs",
        "PARAM_TAG",
        "_request",
        "offset",
        "nArgs",
        "XmlRpcValue",
        "_request",
        "offset",
        "nextTagIs",
        "PARAM_ETAG",
        "_request",
        "offset",
        "nextTagIs",
        "PARAMS_ETAG",
        "_request",
        "offset",
        "methodName",
        "XmlRpcValue",
        "parms",
        "XmlRpcValue",
        "result",
        "FindMethod",
        "methodName",
        "method",
        "Execute",
        "parms",
        "result",
        "result",
        "Valid",
        "methodNameRoot",
        "XmlRpcValue",
        "parms",
        "XmlRpcValue",
        "result",
        "methodNameRoot",
        "SYSTEM_MULTICALL",
        "parms",
        "Length",
        "parms",
        "Type",
        "XmlRpcValue",
        "ValueType",
        "TypeArray",
        "SYSTEM_MULTICALL",
        "Length",
        "SetArray",
        "nc",
        "i",
        "nc",
        "parms",
        "i",
        "METHODNAME",
        "GetString",
        "parms",
        "i",
        "PARAMS",
        "XmlRpcValue",
        "resultValue",
        "SetArray",
        "executeMethod",
        "methodName",
        "methodParams",
        "resultValue",
        "executeMulticall",
        "methodName",
        "parms",
        "resultValue",
        "result",
        "i",
        "FAULTCODE",
        "result",
        "i",
        "FAULTSTRING",
        "methodName",
        "result",
        "i",
        "resultValue",
        "XmlRpcException",
        "fault",
        "result",
        "i",
        "FAULTCODE",
        "result",
        "i",
        "FAULTSTRING",
        "fault",
        "Message",
        "generateResponse",
        "resultXml",
        "RESPONSE_1",
        "resultXml",
        "RESPONSE_2",
        "generateHeader",
        "body",
        "_response",
        "header",
        "body",
        "XmlRpcUtil",
        "log",
        "_response",
        "generateHeader",
        "body",
        "header",
        "XmlRpcUtil",
        "XMLRPC_VERSION",
        "header",
        "Format",
        "body",
        "Length",
        "header",
        "buffLen",
        "generateFaultResponse",
        "errorMsg",
        "errorCode",
        "XmlRpcValue",
        "faultStruct",
        "FAULTCODE",
        "errorCode",
        "faultStruct",
        "FAULTSTRING",
        "errorMsg",
        "RESPONSE_1",
        "faultStruct",
        "toXml",
        "RESPONSE_2",
        "generateHeader",
        "body",
        "_response",
        "header",
        "body"
    ],
    "literals": [
        "\"<methodName>\"",
        "\"<params>\"",
        "\"</params>\"",
        "\"<param>\"",
        "\"</param>\"",
        "\"system.multicall\"",
        "\"methodName\"",
        "\"params\"",
        "\"faultCode\"",
        "\"faultString\"",
        "\"XmlRpcServerConnection: new socket %d.\"",
        "\"XmlRpcServerConnection dtor.\"",
        "\"XmlRpcServerConnection::readHeader: error while reading header (%s).\"",
        "\"XmlRpcServerConnection::readHeader: read %d bytes.\"",
        "\"Content-length: \"",
        "\"Connection: \"",
        "\"\\r\\n\\r\\n\"",
        "\"\\n\\n\"",
        "\"XmlRpcServerConnection::readHeader: EOF\"",
        "\"XmlRpcServerConnection::readHeader: EOF while reading header\"",
        "\"XmlRpcServerConnection::readHeader: No Content-length specified\"",
        "\"XmlRpcServerConnection::readHeader: Invalid Content-length specified (%d).\"",
        "\"XmlRpcServerConnection::readHeader: specified content length is %d.\"",
        "\"HTTP/1.0\"",
        "\"keep-alive\"",
        "\"close\"",
        "\"KeepAlive: %d\"",
        "\"\"",
        "\"XmlRpcServerConnection::readRequest: read error (%s).\"",
        "\"XmlRpcServerConnection::readRequest: EOF while reading request\"",
        "\"XmlRpcServerConnection::readRequest read %d bytes.\"",
        "\"XmlRpcServerConnection::writeResponse: empty response.\"",
        "\"XmlRpcServerConnection::writeResponse: write error (%s).\"",
        "\"XmlRpcServerConnection::writeResponse: wrote %d of %d bytes.\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"XmlRpcServerConnection::executeRequest: server calling method '{0}'\"",
        "\": unknown method name\"",
        "\"XmlRpcServerConnection::executeRequest: fault {0}.\"",
        "\"\"",
        "\": Invalid argument (expected an array)\"",
        "\": unknown method name\"",
        "\"<?xml version=\\\"1.0\\\"?>\\r\\n<methodResponse><params><param>\\r\\n\\t\"",
        "\"\\r\\n</param></params></methodResponse>\\r\\n\"",
        "\"XmlRpcServerConnection::generateResponse:\\n{0}\\n\"",
        "\"HTTP/1.1 200 OK\\r\\nServer: \"",
        "\"\\r\\nContent-Type: text/xml\\r\\nContent-length: \"",
        "\"{0}\\r\\n\\r\\n\"",
        "\"<?xml version=\\\"1.0\\\"?>\\r\\n<methodResponse><fault>\\r\\n\\t\"",
        "\"\\r\\n</fault></methodResponse>\\r\\n\""
    ],
    "variables": [
        "METHODNAME_TAG",
        "PARAMS_TAG",
        "PARAMS_ETAG",
        "PARAM_TAG",
        "PARAM_ETAG",
        "SYSTEM_MULTICALL",
        "METHODNAME",
        "PARAMS",
        "FAULTCODE",
        "FAULTSTRING",
        "XmlRpcServer",
        "server",
        "HttpListener",
        "httpListener",
        "ServerConnectionState",
        "_connectionState",
        "_header",
        "_contentLength",
        "_request",
        "_response",
        "_bytesWritten",
        "_keepAlive",
        "eof",
        "hp",
        "ep",
        "bp",
        "lp",
        "kp",
        "cp",
        "hp",
        "eof",
        "methodName",
        "XmlRpcValue",
        "methodParams",
        "XmlRpcValue",
        "resultValue",
        "RESPONSE_1",
        "RESPONSE_2",
        "body",
        "header",
        "header",
        "buffLen",
        "RESPONSE_1",
        "RESPONSE_2",
        "XmlRpcValue",
        "faultStruct",
        "body",
        "header"
    ],
    "comments": [
        "Static data",
        "The XmlRpc server that accepted this connection",
        "Possible IO states for the connection",
        "Request headers",
        "Number of bytes expected in the request body (parsed from header)",
        "Request body",
        "Response",
        "Number of bytes of the response written so far",
        "Whether to keep the current client connection open for further requests",
        "The server delegates handling client requests to a serverConnection object.",
        "= false",
        ": base(fd, deleteOnClose)",
        "Handle input on the server socket by accepting the connection",
        "and reading the rpc request. Return true to continue to monitor",
        "the socket for events, false to remove it from the dispatcher.",
        "unsigned handleEvent(unsigned /*eventType*/)",
        "Read available data",
        "Its only an error if we already have read some data",
        "Start of header",
        "End of string",
        "Start of body",
        "Start of content-length value",
        "Start of connection value",
        "If we haven't gotten the entire header yet, return (keep reading)",
        "EOF in the middle of a request is an error, otherwise its ok",
        "Either way we close the connection",
        "Keep reading",
        "Decode content length",
        "We could try to figure it out by parsing as we read, but for now...",
        "Otherwise copy non-header data to request buffer and set state to read request.",
        "Parse out any interesting bits from the header (HTTP version, connection)",
        "Default for HTTP 1.0 is to close the connection",
        "Continue monitoring this source",
        "If we dont have the entire request yet, read available data",
        "If we haven't gotten the entire request yet, return (keep reading)",
        "Either way we close the connection",
        "Otherwise, parse and dispatch the request",
        "XmlRpcUtil.log(5, \"XmlRpcServerConnection::readRequest:\\n%s\\n\", _request.c_str());",
        "Continue monitoring this source",
        "Try to write the response",
        "Prepare to read the next request",
        "Continue monitoring this source if true",
        "Run the method, generate _response string",
        "Parse the method name and the argument values from the request.",
        "Number of chars parsed from the request",
        "Execute a named method with the specified params.",
        "Ensure a valid result value",
        "Execute multiple calls and return the results in an array.",
        "There ought to be 1 parameter, an array of structs",
        "Create a response from results xml",
        "Prepend http headers",
        "char buffLen[40];",
        "sprintf(buffLen,\"%d\\r\\n\\r\\n\", (int)body.size());"
    ],
    "docstrings": [],
    "functions": [
        "XmlRpcServerConnection",
        "HandleEvent",
        "readHeader"
    ],
    "classes": []
}