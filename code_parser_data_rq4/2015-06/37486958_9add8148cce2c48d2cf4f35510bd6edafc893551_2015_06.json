{
    "identifiers": [
        "GI",
        "GenericInterfaces",
        "MT",
        "monthsDetails",
        "GI",
        "userISO8601",
        "maxDays",
        "day",
        "day",
        "maxDays",
        "upperCaseISO8601",
        "upperCaseISO8601",
        "matchStrings",
        "matchStrings",
        "val",
        "parseInt",
        "val",
        "year",
        "MT",
        "month",
        "leapYear",
        "month",
        "daysInMonth",
        "daysInMonth",
        "day",
        "month",
        "MT",
        "month",
        "MT",
        "month",
        "leapYear",
        "month",
        "previousMonthDIM",
        "fullMatch",
        "hour",
        "hour",
        "offsetHours",
        "newHour",
        "newHour",
        "hour",
        "newHour",
        "day",
        "day",
        "addDays",
        "newDay",
        "daysInMonth",
        "day",
        "newDay",
        "daysInMonth",
        "month",
        "month",
        "newMonth",
        "month",
        "year",
        "year",
        "hour",
        "hour",
        "offsetHours",
        "newHour",
        "newHour",
        "newHour",
        "newHour",
        "hour",
        "newHour",
        "newHour",
        "decreaseDays",
        "remainingHours",
        "hour",
        "day",
        "day",
        "decreaseDays",
        "newDay",
        "day",
        "previousMonthDIM",
        "newDay",
        "month",
        "month",
        "newMonth",
        "month",
        "year",
        "year",
        "ISO8601",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "second",
        "k",
        "ISO8601",
        "ISO8601",
        "k",
        "stringedISO8601",
        "toStringISO8601",
        "toStringISO8601",
        "toStringISO8601",
        "stringedISO8601",
        "stringedISO8601",
        "stringedISO8601",
        "stringedISO8601",
        "stringedISO8601",
        "stringedISO8601",
        "offset",
        "offset",
        "offset",
        "date",
        "date",
        "maybeValid",
        "maybeValid",
        "year",
        "year",
        "year",
        "year",
        "year",
        "year"
    ],
    "literals": [
        "string",
        "string",
        "'Invalid ISO8601, try something like(case insensitive, T may be t): 2005-06-03T13:04:32'",
        "string",
        "'Non logical date, please check that there are X days in month Y.'",
        "'='",
        "'+'",
        "'-'",
        "string",
        "\"0\"",
        "'-'",
        "'-'",
        "'T'",
        "':'",
        "':'",
        "'+'",
        "'-'",
        "'='",
        "string"
    ],
    "variables": [
        "upperCaseISO8601",
        "matchStrings",
        "fullMatch",
        "matchNumbers",
        "year",
        "month",
        "day",
        "hour",
        "minute",
        "second",
        "matchNumbers",
        "leapYear",
        "daysInMonth",
        "previousMonthDIM",
        "newHour",
        "addDays",
        "remainingHours",
        "newDay",
        "newerDay",
        "newMonth",
        "newerMonth",
        "newYear",
        "newHour",
        "decreaseDays",
        "remainingHours",
        "newDay",
        "newerDay",
        "newMonth",
        "newerMonth",
        "newYear",
        "stringedISO8601",
        "toStringISO8601",
        "offset"
    ],
    "comments": [
        "<reference path=\"typings/tsd.d.ts\" />",
        "<reference path=\"lib/interfaces/generic.ts\" />",
        "<reference path=\"lib/arrays/monthsDetails.ts\" />",
        "Stricted(example): 2013-01-05T04:13:00",
        "-1 is because monthsDays have 0 index.",
        "2 === Feb, On Feb while leap year, there are 29 days and not 28",
        "daysInMonth = 29 instead of daysInMonth++ is used for expressivity.",
        "DIM stands for days in month, its use is explained inside the operator === '-' if statement.",
        "The -2 used because -1 due to monthsDays have 0 index and -1 because we need the previous month.",
        "3 === Feb, previous month is Feb, On Feb while leap year, there are 29 days and not 28",
        "daysInMonth = 29 instead of daysInMonth++ is used for expressivity.",
        "---------- Final(maybe)",
        "---------- Final",
        "---------- Final(maybe)",
        "---------- Final",
        "---------- Final(maybe)",
        "---------- Final",
        "---------- Final",
        "---------- Final(maybe)",
        "I use + 24 so decreaseDays and remainingHours will calculate the currect value,\n                notice that this block statement is entered only when I need to decrease a day, so\n                the + 24 is used to artificially \"show\" the calculations that a day was passed(in our case\n                the previous day wasn't pass).\n\n                 - decreaseDays divide the newHour by 24 then floor the result to get the number\n                   of days.\n\n                 - remainingHours will modulus the newHour to get the number of remaining hours to set\n                   after it decreased a day or more.\n\n                There is a special case where newHour equals to 0, for that case the decreaseDays\n                calculation fails, and as result also newDay calculation fails, so before I calculate\n                newDay I check to see if the newHour equals 0, if so I manually set decreaseDays to 1.",
        "---------- Final(maybe)",
        "When newHour % 24 equals 0, 24 - 0 is 24, so when newHour equals 0, I set the hour\n                    to 0, for now there is no need to set remainingHours, but I want both variables to have\n                    the same values, maybe it will help later.",
        "---------- Final",
        "---------- Final(maybe)",
        "This if statement is very special, if newDay is smaller than 1, then it set the\n                newerDay and the day to be..... previousMonthDIM + newDay and not newDay - daysInMonth.\n                The + and not - is because newDay may be negative, previousMonthDIM and not daysInMonth\n                because we decrease days but from the maximum number of days of the previous month, remember\n                when operator equals '-' we going backwards.\n\n                When newDay equals 0, no days will be decreased from the previous month max days.",
        "---------- Final",
        "---------- Final(maybe)",
        "---------- Final",
        "---------- Final",
        "Mathisfun(https://www.mathsisfun.com/leap-years.html):\n\n            \"\n            Leap Years are any year that can be evenly divided by 4 (such as 2012, 2016, etc),\n            except if it can can be evenly divided by 100, then it isn't (such as 2100, 2200, etc),\n            except if it can be evenly divided by 400, then it is (such as 2000, 2400).\n            \""
    ],
    "docstrings": [],
    "functions": [
        "isLogical",
        "get",
        "getOffset",
        "setOffset",
        "isValid",
        "isLeapYear"
    ],
    "classes": [
        "ISO8601"
    ]
}