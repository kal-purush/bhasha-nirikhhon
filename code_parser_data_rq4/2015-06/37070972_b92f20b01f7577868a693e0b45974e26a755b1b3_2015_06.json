{
    "identifiers": [
        "dian",
        "org",
        "monitor",
        "gps",
        "android",
        "content",
        "Context",
        "android",
        "util",
        "Log",
        "java",
        "text",
        "ParseException",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "java",
        "util",
        "LOG_TAG",
        "db",
        "date",
        "ONE_DAY_TIME",
        "isDateSet",
        "context",
        "db",
        "LocationDB",
        "getInstance",
        "context",
        "today",
        "date",
        "date",
        "getStartTime",
        "date",
        "isDateSet",
        "isDateSet",
        "date",
        "ONE_DAY_TIME",
        "sdf",
        "msg",
        "sdf",
        "format",
        "date",
        "Log",
        "e",
        "LOG_TAG",
        "msg",
        "date",
        "currentTimeMillis",
        "db",
        "isHaveDataInADay",
        "date",
        "msg",
        "sdf",
        "format",
        "date",
        "Log",
        "e",
        "LOG_TAG",
        "msg",
        "date",
        "ONE_DAY_TIME",
        "date",
        "ONE_DAY_TIME",
        "isDateSet",
        "date",
        "ONE_DAY_TIME",
        "sdf",
        "msg",
        "sdf",
        "format",
        "date",
        "Log",
        "e",
        "LOG_TAG",
        "msg",
        "firstTime",
        "getStartTime",
        "getTimeOfFirstPoint",
        "date",
        "firstTime",
        "db",
        "isHaveDataInADay",
        "date",
        "msg",
        "sdf",
        "format",
        "date",
        "Log",
        "e",
        "LOG_TAG",
        "msg",
        "date",
        "ONE_DAY_TIME",
        "date",
        "ONE_DAY_TIME",
        "setDate",
        "currentTimeMillis",
        "db",
        "isHaveDataInADay",
        "date",
        "db",
        "getLocationsInADay",
        "date",
        "db",
        "getTimeOfFirstPoint",
        "time",
        "sdf",
        "date",
        "sdf",
        "format",
        "time",
        "sdf2",
        "date",
        "date",
        "startTime",
        "startTime",
        "sdf2",
        "parse",
        "date",
        "getTime",
        "e",
        "Log",
        "e",
        "LOG_TAG",
        "e",
        "printStackTrace",
        "startTime",
        "listener",
        "db",
        "addOnDataChangedListener",
        "listener",
        "OnDataChangedListener"
    ],
    "literals": [
        "\"HistoryLocationScanner\"",
        "\"MM-dd\"",
        "\"MM-dd\"",
        "\"yyyy-MM-dd\"",
        "\"yyyy-MM-dd HH:mm:ss\"",
        "\" 00:00:00\"",
        "\"日期格式有问题\""
    ],
    "variables": [
        "db",
        "date"
    ],
    "comments": [
        "代表数据库里第一个时间，所在的那天的开始时间"
    ],
    "docstrings": [
        "* 这个类可以用来浏览地理位置数据，也就是{@link LocationDB}里面的数据。",
        "* 一个数据库",
        "*",
        "* 将当前数\n     * 如果没有调用这个函数就获取数据，则发生错误\n     *\n     * @param date 将当前数",
        "* 前一天\n     *\n     * @return 没有调用{@link #setDate}就返回false",
        "* 前一天\n     *\n     * @return 没有调用{@link #setDate}就返回false",
        "* 今天\n     *\n     * @return",
        "* 返回当前日期的数据\n     *\n     * @return",
        "* 获取数据库第一个点的时\n     *\n     * @return",
        "* 获取某一天的开始时间\n     *\n     * @param time 时间戳\n     * @return",
        "* 这个监听器负责监听{@link LocationDB}里面的数据是否发生了变化。\n     * 数据变化的接口",
        "* 如果数据变化，则执行此回调"
    ],
    "functions": [
        "HistoryLocationScanner",
        "setDate",
        "nextDay",
        "previousDay",
        "today",
        "getLocationRecordData",
        "getTimeOfFirstPoint",
        "getStartTime",
        "setOnDataChangedListener",
        "onDataChanged"
    ],
    "classes": [
        "HistoryLocationScanner"
    ]
}