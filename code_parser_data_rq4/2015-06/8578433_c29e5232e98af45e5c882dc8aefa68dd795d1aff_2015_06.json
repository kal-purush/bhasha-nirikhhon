{
    "identifiers": [
        "info",
        "chenli",
        "litway",
        "bionlp13",
        "ge",
        "info",
        "chenli",
        "classifier",
        "Instance",
        "info",
        "chenli",
        "classifier",
        "InstanceDictionary",
        "info",
        "chenli",
        "litway",
        "corpora",
        "Event",
        "info",
        "chenli",
        "litway",
        "corpora",
        "POS",
        "info",
        "chenli",
        "litway",
        "corpora",
        "Protein",
        "info",
        "chenli",
        "litway",
        "corpora",
        "Sentence",
        "info",
        "chenli",
        "litway",
        "corpora",
        "Token",
        "info",
        "chenli",
        "litway",
        "corpora",
        "Trigger",
        "info",
        "chenli",
        "litway",
        "searn",
        "StructuredInstance",
        "info",
        "chenli",
        "litway",
        "util",
        "DependencyExtractor",
        "info",
        "chenli",
        "litway",
        "util",
        "FileUtil",
        "info",
        "chenli",
        "litway",
        "util",
        "StanfordDependencyReader",
        "info",
        "chenli",
        "litway",
        "util",
        "StanfordDependencyReader",
        "Pair",
        "info",
        "chenli",
        "litway",
        "util",
        "UimaUtil",
        "java",
        "io",
        "File",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "TreeMap",
        "java",
        "util",
        "logging",
        "Logger",
        "org",
        "apache",
        "uima",
        "cas",
        "FSIterator",
        "org",
        "apache",
        "uima",
        "cas",
        "text",
        "AnnotationIndex",
        "org",
        "apache",
        "uima",
        "jcas",
        "JCas",
        "org",
        "apache",
        "uima",
        "jcas",
        "tcas",
        "Annotation",
        "org",
        "uimafit",
        "util",
        "JCasUtil",
        "logger",
        "Logger",
        "getLogger",
        "getName",
        "Protein",
        "Event",
        "Override",
        "argumentTypes",
        "argumentTypes",
        "add",
        "argumentTypes",
        "add",
        "argumentTypes",
        "add",
        "argumentTypes",
        "Override",
        "jcas",
        "tokenIter",
        "results",
        "sentenceIndex",
        "jcas",
        "getAnnotationIndex",
        "Sentence",
        "sentenceIter",
        "sentenceIndex",
        "iterator",
        "pairsOfArticle",
        "FileUtil",
        "removeFileNameExtension",
        "UimaUtil",
        "getJCasFilePath",
        "jcas",
        "concat",
        "exists",
        "pairsOfArticle",
        "StanfordDependencyReader",
        "getPairs",
        "FileUtil",
        "removeFileNameExtension",
        "UimaUtil",
        "getJCasFilePath",
        "jcas",
        "concat",
        "pairsOfArticle",
        "StanfordDependencyReader",
        "getPairs",
        "FileUtil",
        "removeFileNameExtension",
        "UimaUtil",
        "getJCasFilePath",
        "jcas",
        "concat",
        "sentenceIter",
        "hasNext",
        "si",
        "argumentCandidates",
        "si",
        "setNodes",
        "argumentCandidates",
        "sentence",
        "sentenceIter",
        "next",
        "pairsOfSentence",
        "pairsOfArticle",
        "get",
        "sentence",
        "getId",
        "dependencyExtractor",
        "JCasUtil",
        "selectCovered",
        "jcas",
        "sentence",
        "pairsOfSentence",
        "events",
        "JCasUtil",
        "selectCovered",
        "jcas",
        "sentence",
        "triggers",
        "JCasUtil",
        "selectCovered",
        "jcas",
        "sentence",
        "proteins",
        "JCasUtil",
        "selectCovered",
        "jcas",
        "sentence",
        "proteins",
        "size",
        "triggers",
        "size",
        "triggerEvevts",
        "trigger",
        "triggers",
        "events",
        "getTrigger",
        "getBegin",
        "trigger",
        "getBegin",
        "themeToken",
        "getThemeToken",
        "jcas",
        "sentence",
        "themeToken",
        "triggerEvevt",
        "triggerEvevts",
        "containsKey",
        "trigger",
        "getId",
        "triggerEvevt",
        "triggerEvevts",
        "get",
        "trigger",
        "getId",
        "triggerEvevt",
        "add",
        "triggerEvevts",
        "put",
        "trigger",
        "getId",
        "triggerEvevt",
        "trigger",
        "triggers",
        "protein",
        "proteins",
        "isTheme",
        "isCause",
        "triggerEvevts",
        "containsKey",
        "trigger",
        "getId",
        "loop",
        "triggerEvevts",
        "get",
        "trigger",
        "getId",
        "i",
        "i",
        "getThemes",
        "size",
        "i",
        "isTheme",
        "getThemes",
        "i",
        "equals",
        "protein",
        "getId",
        "isTheme",
        "loop",
        "isTheme",
        "EventType",
        "isComplexEvent",
        "trigger",
        "getEventType",
        "triggerEvevts",
        "get",
        "trigger",
        "getId",
        "getCause",
        "isCause",
        "getCause",
        "equals",
        "protein",
        "getId",
        "isCause",
        "instance",
        "argumentToInstance",
        "jcas",
        "sentence",
        "protein",
        "trigger",
        "pairsOfSentence",
        "dependencyExtractor",
        "isTheme",
        "isCause",
        "Stage",
        "THEME",
        "instance",
        "argumentCandidates",
        "add",
        "instance",
        "EventType",
        "isComplexEvent",
        "trigger",
        "getEventType",
        "argumentTrigger",
        "triggers",
        "argumentTrigger",
        "getBegin",
        "trigger",
        "getBegin",
        "isTheme",
        "isCause",
        "triggerEvevts",
        "containsKey",
        "trigger",
        "getId",
        "triggerEvevts",
        "containsKey",
        "argumentTrigger",
        "getId",
        "EventType",
        "isRegulatoryEvent",
        "trigger",
        "getEventType",
        "loop",
        "triggerEvevts",
        "get",
        "trigger",
        "getId",
        "themeEvent",
        "triggerEvevts",
        "get",
        "argumentTrigger",
        "getId",
        "getThemes",
        "equalsIgnoreCase",
        "themeEvent",
        "getId",
        "isTheme",
        "loop",
        "isTheme",
        "loop",
        "triggerEvevts",
        "get",
        "trigger",
        "getId",
        "themeEvent",
        "triggerEvevts",
        "get",
        "argumentTrigger",
        "getId",
        "getCause",
        "getCause",
        "equalsIgnoreCase",
        "themeEvent",
        "getId",
        "isCause",
        "loop",
        "argumentCandidates",
        "add",
        "argumentToInstance",
        "jcas",
        "sentence",
        "argumentTrigger",
        "trigger",
        "pairsOfSentence",
        "dependencyExtractor",
        "isTheme",
        "isCause",
        "Stage",
        "THEME",
        "results",
        "add",
        "si",
        "results",
        "args",
        "ti",
        "ti",
        "setTaeDescriptor",
        "instances",
        "ti",
        "getInstances",
        "args",
        "creatNumericDictionary",
        "instances",
        "classifierName",
        "saveDictionary",
        "concat",
        "classifierName",
        "concat",
        "ti",
        "saveInstances",
        "ti",
        "saveSvmLightInstances",
        "args",
        "length",
        "args",
        "equals",
        "testInstances",
        "testInstances",
        "setTaeDescriptor",
        "tInstances",
        "testInstances",
        "getInstances",
        "tInstances",
        "instancesToNumeric",
        "tInstances",
        "testInstances",
        "saveInstances",
        "testInstances",
        "saveSvmLightInstances"
    ],
    "literals": [
        "\"Theme\"",
        "\"Cause\"",
        "\"Non_Argument\"",
        "\".sdepcc\"",
        "\".sdepcc\"",
        "\".sd\"",
        "\"/desc/GeTrainingSetAnnotator.xml\"",
        "\"liblinear\"",
        "\"./model/arguments.\"",
        "\".dict\"",
        "\"./model/instances.arguments.txt\"",
        "\"./model/instances.arguments.svm.txt\"",
        "\"dev\"",
        "\"/desc/GeTrainingSetAnnotator.xml\"",
        "\"./data/development/\"",
        "\"./model/instances.arguments.dev.txt\"",
        "\"./model/instances.arguments.svm.dev.txt\""
    ],
    "variables": [],
    "comments": [
        "Currently, one sentence is considered as one structured instance.",
        "There are cross sentence themes, which are not considered",
        "at the moment.",
        "logger.warning(fileName.concat(\": An event must have a theme. It may be caused by cross-sentence event.\"));",
        "check protein arguments",
        "check event arguments"
    ],
    "docstrings": [
        "tring s = FileUtil.removeFileNameExtension(\n\t\t\t\tUimaUtil.getJCasFilePath(jcas));",
        "f (!EventType.isBindingEvent(trigger.getEventType())) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}",
        "Token triggerToken = getToken(jcas, trigger);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tToken token = getToken(jcas, protein);\t\t\t\t\n\t\t\t\t\tint pathLength = dependencyExtractor.getDijkstraShortestPathLength(\n\t\t\t\t\t\t\ttriggerToken, token);\n\t\t\t\t\tint distance = token.getId() > triggerToken.getId() ? token.getId() - triggerToken.getId()\n\t\t\t\t\t\t\t: triggerToken.getId() - token.getId();\n\t\t\t\t\tif (pathLength > 6) {\n\t\t\t\t\t\tif (isTheme || isCause) {\n\t\t\t\t\t\t\tSystem.out.println(\"error\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//continue;\n\t\t\t\t\t}\n\t\t\t\t\tif (distance > 10) {\n\t\t\t\t\t\t//notTheme.add(protein.getId());\n\t\t\t\t\t}",
        "oken triggerToken = getToken(jcas, trigger);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tToken token = getToken(jcas, argumentTrigger);\t\t\t\t\n\t\t\t\t\t\tint pathLength = dependencyExtractor.getDijkstraShortestPathLength(\n\t\t\t\t\t\t\t\ttriggerToken, token);\n\t\t\t\t\t\tint distance = token.getId() > triggerToken.getId() ? token.getId() - triggerToken.getId()\n\t\t\t\t\t\t\t\t: triggerToken.getId() - token.getId();\n\t\t\t\t\t\tif (pathLength > 6) {\n\t\t\t\t\t\t\tif (isTheme || isCause) {\n\t\t\t\t\t\t\t\tSystem.out.println(\"error\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//continue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance > 10) {\n\t\t\t\t\t\t\t//notTheme.add(protein.getId());\n\t\t\t\t\t\t}"
    ],
    "functions": [
        "ArgumentInstances",
        "getLabelsString",
        "getStructuredInstances",
        "main"
    ],
    "classes": [
        "ArgumentInstances"
    ]
}