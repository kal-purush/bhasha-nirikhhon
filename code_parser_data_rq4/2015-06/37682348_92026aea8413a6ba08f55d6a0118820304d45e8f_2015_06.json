{
    "identifiers": [
        "p",
        "p",
        "p",
        "boo",
        "path",
        "emissary",
        "emissary",
        "rect",
        "require",
        "text",
        "editorView",
        "editorView",
        "editor",
        "path",
        "filePath",
        "path",
        "filename",
        "ext",
        "lestat",
        "filePath",
        "editorView",
        "Subscriber",
        "subscriber",
        "scroll",
        "e",
        "clearExprTypeTimeout",
        "exprTypeTimeout",
        "setTimeout",
        "showExpressionType",
        "e",
        "subscriber",
        "scroll",
        "e",
        "clearExprTypeTimeout",
        "subscriber",
        "editorView",
        "deactivate",
        "e",
        "exprTypeTooltip",
        "pixelPositionFromMouseEvent",
        "editorView",
        "e",
        "editor",
        "pixelPt",
        "editor",
        "screenPt",
        "editor",
        "bufferPt",
        "bufferPt",
        "editor",
        "bufferPt",
        "bufferPt",
        "curCharPixelPt",
        "nextCharPixelPt",
        "editorView",
        "e",
        "e",
        "e",
        "offset",
        "e",
        "offset",
        "exprTypeTooltip",
        "TooltipView",
        "tooltipRect",
        "filePath",
        "bufferPt",
        "bufferPt",
        "getInfo",
        "pos",
        "info",
        "hideExpressionType",
        "info",
        "exprTypeTooltip",
        "message",
        "subscriber",
        "clearExprTypeTimeout",
        "exprTypeTimeout",
        "clearTimeout",
        "exprTypeTimeout",
        "exprTypeTimeout",
        "hideExpressionType",
        "exprTypeTooltip",
        "exprTypeTooltip",
        "exprTypeTooltip",
        "editorView",
        "editorView",
        "clientY",
        "linesClientRect",
        "clientX",
        "linesClientRect",
        "top",
        "left",
        "editorView",
        "editorView",
        "pixelPositionFromMouseEvent",
        "editorView",
        "editorWatch",
        "atom",
        "editor",
        "$",
        "atom",
        "editor",
        "attach",
        "editorView",
        "editorWatch",
        "editorWatch"
    ],
    "literals": [
        "string",
        "\"I am at line: \"",
        "\" column: \"",
        "'atom-space-pen-views'",
        "'path'",
        "'emissary'",
        "'../views/tooltip-view'",
        "string",
        "string",
        "'.ts'",
        "'.scroll-view'",
        "'mousemove'",
        "'mouseout'",
        "'editor:will-be-removed'",
        "\"<b>\"",
        "\"</b>\"",
        "'.lines'"
    ],
    "variables": [
        "$",
        "Subscriber",
        "TooltipView",
        "editor",
        "filePath",
        "filename",
        "ext",
        "program",
        "scroll",
        "subscriber",
        "exprTypeTimeout",
        "exprTypeTooltip",
        "pixelPt",
        "screenPt",
        "bufferPt",
        "curCharPixelPt",
        "nextCharPixelPt",
        "offset",
        "tooltipRect",
        "pos",
        "info",
        "message",
        "clientX",
        "clientY",
        "linesClientRect",
        "top",
        "left",
        "atom",
        "editorWatch",
        "editorView"
    ],
    "comments": [
        "<reference path=\"../typings/globals.d.ts\" />",
        "This needs to be filled in",
        "import {$} from \"atom-space-pen-views\";",
        "Methods from base View",
        "Only on \".ts\" files",
        "Setup for clearing",
        "If we are already showing we should wait for that to clear",
        "find out show position",
        "Actually make the program manager query",
        "ORIG var position = program.languageServiceHost.getIndexFromPosition(filePath, { line: bufferPt.row, ch: bufferPt.column });",
        "ORIG var info = program.languageService.getQuickInfoAtPosition(filePath, position);",
        "ORIG if (!info) {",
        "ORIG hideExpressionType();",
        "ORIG } else {",
        "ORIG var displayName = ts.displayPartsToString(info.displayParts || []);",
        "ORIG var documentation = ts.displayPartsToString(info.documentation || []);",
        "ORIG var message = `<b>${displayName}</b>`;",
        "ORIG if(documentation) message = message + `<br/><i>${documentation}</i>`;",
        "ORIG exprTypeTooltip.updateText(message);",
        "ORIG }",
        "Top-level hook into ATOM",
        "AtomCore.Disposable;",
        "AtomCore.IEditor",
        "subscribe for tooltips",
        "inspiration : https://github.com/chaika2013/ide-haskell"
    ],
    "docstrings": [
        "**********************************************************************",
        "**********************************************************************"
    ],
    "functions": [
        "getInfo",
        "attach",
        "showExpressionType",
        "deactivate",
        "clearExprTypeTimeout",
        "hideExpressionType",
        "pixelPositionFromMouseEvent",
        "screenPositionFromMouseEvent",
        "activate",
        "deactivate"
    ],
    "classes": []
}