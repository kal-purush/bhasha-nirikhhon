{
    "identifiers": [
        "dictionary",
        "items",
        "dictionary",
        "keys",
        "dictionary",
        "values",
        "key",
        "dictionary",
        "key",
        "dictionary",
        "key",
        "i",
        "i",
        "i",
        "evens_to_50",
        "x",
        "x",
        "x",
        "even_squares",
        "x",
        "x",
        "x",
        "cubes_by_four",
        "i",
        "i",
        "l",
        "l",
        "l",
        "l",
        "l",
        "to_one_hundred",
        "backwards_by_tens",
        "to_21",
        "to_21",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "my_list",
        "x",
        "x",
        "languages",
        "languages",
        "x",
        "x",
        "x",
        "x",
        "squares",
        "x",
        "x",
        "squares",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "garbled",
        "message"
    ],
    "literals": [
        "\"Key1\"",
        "\"Key2\"",
        "\"Key3\"",
        "\"A\"",
        "\"HTML\"",
        "\"JavaScript\"",
        "\"Python\"",
        "\"Ruby\"",
        "\"IXXX aXXmX aXXXnXoXXXXXtXhXeXXXXrX sXXXXeXcXXXrXeXt mXXeXsXXXsXaXXXXXXgXeX!XX\"",
        "\"X\""
    ],
    "variables": [
        "dictionary",
        "list1",
        "evens_to_50",
        "even_squares",
        "cubes_by_four",
        "l",
        "to_one_hundred",
        "backwards_by_tens",
        "to_21",
        "odds",
        "middle_third",
        "my_list",
        "languages",
        "squares",
        "threes_and_fives",
        "garbled",
        "message"
    ],
    "comments": [
        "!/bin/python2.7",
        "codecademy - Python 2.7",
        "Advanced Topics",
        "Dictionary review",
        "prints pairs [ (\"key\", \"value\"), (\"key\", \"value\"), (\"key\", \"value\") ]",
        "prints only keys",
        "prints only values",
        "Print each followed by a space, then its value",
        "Range of numbers from 0 - 50 inclusive",
        "Range of even numbers from 0 - 51 inclusive",
        "List Comprehension -> what just happened above in evens_to_50's definition",
        "print even squares between 1 and 11",
        "cubes of numbers 1 through 10 if cube is evenly divisible by 4",
        "List Slicing",
        "[start:end:stride]",
        "start = inclusive; default = 0",
        "end = exclusive; default = end of list",
        "stride = space between items; 2 = every other; default = 1",
        "Example",
        "you can also omit certain indices",
        "starts at 4th entry and goes to end in intervals of 1",
        "prints only the first two entries; index of 0 and 1",
        "starts at beginning, goes to finish, intervals of 2",
        "prints list backwards in intervals of 1; pos = L -> R, neg = R -> L",
        "exactly what it says, backwards by 10",
        "numbers from 1 - 21 inclusive",
        "odd numbers from 1 - 21, via slicing",
        "middle third, 8 - 14 inclusive",
        "lambda creates an anonymous function",
        "don't need to give it a name have a value returned",
        "is the same as",
        "filter(lambda ... my_list)",
        "<filter> uses <lambda> to determine what to filter",
        "Filter only \"Python\" from the list",
        "Print squares rom 1-11 in 30-70",
        "or",
        "list numbers divisible by 3 or 5 between 1 and 15",
        "Filter out all Xs from the garbled message"
    ],
    "docstrings": [],
    "functions": [
        "by_three"
    ],
    "classes": []
}