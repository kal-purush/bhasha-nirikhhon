{
    "identifiers": [
        "leetcode",
        "p0931",
        "backtracking",
        "functional",
        "matrix",
        "n",
        "matrix",
        "length",
        "minSumSoFar",
        "i",
        "i",
        "n",
        "i",
        "minSumSoFar",
        "min",
        "minSumSoFar",
        "verticalVisit",
        "matrix",
        "i",
        "minSumSoFar",
        "matrix",
        "x",
        "y",
        "x",
        "matrix",
        "length",
        "matrix",
        "x",
        "y",
        "y",
        "bottom",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "bottomRight",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "min",
        "bottom",
        "bottomRight",
        "matrix",
        "x",
        "y",
        "y",
        "matrix",
        "length",
        "bottom",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "bottomLeft",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "min",
        "bottom",
        "bottomLeft",
        "matrix",
        "x",
        "y",
        "bottom",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "bottomRight",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "bottomLeft",
        "verticalVisit",
        "matrix",
        "x",
        "y",
        "min",
        "bottom",
        "min",
        "bottomLeft",
        "bottomRight",
        "matrix",
        "x",
        "y"
    ],
    "literals": [],
    "variables": [],
    "comments": [
        "n == matrix.length == matrix[i].length",
        "1 <= n <= 100",
        "-100 <= matrix[i][j] <= 100",
        "horizontal scanning",
        "vertical scanning",
        "backtracking from current matrix[x][y]",
        "go deeper, and make another choice after return to the current",
        "base case",
        "the top row is a starting point of vertical accumulation",
        "cannot go to the left",
        "cannot go to the right",
        "can go anywhere"
    ],
    "docstrings": [],
    "functions": [
        "minFallingPathSum",
        "verticalVisit"
    ],
    "classes": [
        "Solution"
    ]
}