{
    "identifiers": [
        "org",
        "gbif",
        "metadata",
        "eml",
        "org",
        "gbif",
        "api",
        "model",
        "registry",
        "Citation",
        "org",
        "gbif",
        "api",
        "model",
        "registry",
        "CitationContact",
        "org",
        "gbif",
        "api",
        "model",
        "registry",
        "Contact",
        "org",
        "gbif",
        "api",
        "model",
        "registry",
        "Dataset",
        "org",
        "gbif",
        "api",
        "model",
        "registry",
        "Organization",
        "org",
        "gbif",
        "api",
        "vocabulary",
        "ContactType",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "net",
        "URLDecoder",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "time",
        "LocalDate",
        "java",
        "time",
        "ZoneId",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "EnumSet",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "StringJoiner",
        "java",
        "util",
        "Predicate",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "apache",
        "commons",
        "lang3",
        "StringUtils",
        "lombok",
        "Builder",
        "lombok",
        "Data",
        "Data",
        "Builder",
        "citation",
        "contacts",
        "UTC",
        "ZoneId",
        "of",
        "MANDATORY_CONTACT_TYPE",
        "ContactType",
        "ORIGINATOR",
        "AUTHOR_CONTACT_TYPE",
        "EnumSet",
        "of",
        "ContactType",
        "ORIGINATOR",
        "ContactType",
        "METADATA_AUTHOR",
        "IS_NAME_PROVIDED_FCT",
        "ctc",
        "StringUtils",
        "isNotBlank",
        "ctc",
        "getLastName",
        "IS_CONTACT_NAME_PROVIDED",
        "ctc",
        "StringUtils",
        "isNotBlank",
        "ctc",
        "getLastName",
        "IS_ELIGIBLE_CONTACT_TYPE",
        "ctc",
        "AUTHOR_CONTACT_TYPE",
        "contains",
        "ctc",
        "getType",
        "dataset",
        "org",
        "Objects",
        "requireNonNull",
        "org",
        "generateCitation",
        "dataset",
        "org",
        "getTitle",
        "dataset",
        "Objects",
        "requireNonNull",
        "dataset",
        "originalCitationText",
        "dataset",
        "getCitation",
        "getText",
        "Objects",
        "requireNonNull",
        "originalCitationText",
        "joiner",
        "joiner",
        "add",
        "originalCitationText",
        "originalCitationText",
        "toLowerCase",
        "contains",
        "originalCitationText",
        "toLowerCase",
        "contains",
        "joiner",
        "add",
        "URLDecoder",
        "decode",
        "dataset",
        "getDoi",
        "getUrl",
        "toString",
        "e",
        "e",
        "joiner",
        "add",
        "LocalDate",
        "now",
        "UTC",
        "joiner",
        "toString",
        "dataset",
        "organizationTitle",
        "Objects",
        "requireNonNull",
        "dataset",
        "Objects",
        "requireNonNull",
        "organizationTitle",
        "citation",
        "contacts",
        "getAuthors",
        "dataset",
        "getContacts",
        "joiner",
        "authorsName",
        "generateAuthorsName",
        "contacts",
        "authors",
        "join",
        "authorsName",
        "authorsNameAvailable",
        "StringUtils",
        "isNotBlank",
        "authors",
        "authors",
        "authorsNameAvailable",
        "authors",
        "organizationTitle",
        "authors",
        "dataset",
        "getPubDate",
        "joiner",
        "add",
        "authors",
        "dataset",
        "getPubDate",
        "joiner",
        "add",
        "dataset",
        "getPubDate",
        "toInstant",
        "atZone",
        "UTC",
        "getYear",
        "joiner",
        "add",
        "StringUtils",
        "trim",
        "dataset",
        "getTitle",
        "dataset",
        "getVersion",
        "joiner",
        "add",
        "dataset",
        "getVersion",
        "authorsNameAvailable",
        "joiner",
        "add",
        "StringUtils",
        "trim",
        "organizationTitle",
        "dataset",
        "getType",
        "joiner",
        "add",
        "StringUtils",
        "capitalize",
        "dataset",
        "getType",
        "name",
        "replace",
        "toLowerCase",
        "joiner",
        "add",
        "dataset",
        "getDoi",
        "joiner",
        "add",
        "URLDecoder",
        "decode",
        "dataset",
        "getDoi",
        "getUrl",
        "toString",
        "StandardCharsets",
        "UTF_8",
        "name",
        "e",
        "e",
        "joiner",
        "add",
        "LocalDate",
        "now",
        "UTC",
        "citation",
        "setText",
        "joiner",
        "toString",
        "citation",
        "setCitationProvidedBySource",
        "CitationData",
        "builder",
        "citation",
        "citation",
        "contacts",
        "contacts",
        "build",
        "contacts",
        "contacts",
        "contacts",
        "isEmpty",
        "Collections",
        "emptyList",
        "uniqueContacts",
        "getUniqueAuthors",
        "contacts",
        "ctc",
        "IS_NAME_PROVIDED_FCT",
        "IS_ELIGIBLE_CONTACT_TYPE",
        "test",
        "ctc",
        "firstOriginator",
        "uniqueContacts",
        "stream",
        "ctc",
        "ctc",
        "getRoles",
        "contains",
        "MANDATORY_CONTACT_TYPE",
        "findFirst",
        "firstOriginator",
        "isPresent",
        "uniqueContacts",
        "Collections",
        "emptyList",
        "authors",
        "authors",
        "authors",
        "isEmpty",
        "Collections",
        "emptyList",
        "authors",
        "stream",
        "IS_CONTACT_NAME_PROVIDED",
        "CitationContact",
        "getAbbreviatedName",
        "collect",
        "Collectors",
        "toList",
        "authors",
        "uniqueContact",
        "authors",
        "authors",
        "forEach",
        "ctc",
        "test",
        "ctc",
        "author",
        "findInAuthorList",
        "ctc",
        "uniqueContact",
        "author",
        "isPresent",
        "contactTypes",
        "ctc",
        "getType",
        "contactTypes",
        "add",
        "ctc",
        "getType",
        "userIds",
        "ctc",
        "getUserId",
        "ctc",
        "getUserId",
        "isEmpty",
        "userIds",
        "addAll",
        "ctc",
        "getUserId",
        "uniqueContact",
        "add",
        "ctc",
        "getKey",
        "getAuthorName",
        "ctc",
        "ctc",
        "getFirstName",
        "ctc",
        "getLastName",
        "contactTypes",
        "userIds",
        "author",
        "ifPresent",
        "a",
        "a",
        "getRoles",
        "add",
        "ctc",
        "getType",
        "ctc",
        "getUserId",
        "a",
        "getUserId",
        "addAll",
        "ctc",
        "getUserId",
        "uniqueContact",
        "ctc",
        "uniqueContacts",
        "uniqueContacts",
        "stream",
        "author",
        "StringUtils",
        "equalsIgnoreCase",
        "ctc",
        "getLastName",
        "author",
        "getLastName",
        "StringUtils",
        "equalsIgnoreCase",
        "ctc",
        "getFirstName",
        "author",
        "getFirstName",
        "findFirst",
        "creator",
        "sb",
        "lastName",
        "StringUtils",
        "trimToNull",
        "creator",
        "getLastName",
        "firstNames",
        "StringUtils",
        "trimToNull",
        "creator",
        "getFirstName",
        "organization",
        "StringUtils",
        "trimToNull",
        "creator",
        "getOrganization",
        "lastName",
        "firstNames",
        "sb",
        "append",
        "lastName",
        "sb",
        "append",
        "names",
        "firstNames",
        "split",
        "sb",
        "append",
        "Arrays",
        "stream",
        "names",
        "StringUtils",
        "isBlank",
        "StringUtils",
        "upperCase",
        "valueOf",
        "charAt",
        "collect",
        "Collectors",
        "joining",
        "lastName",
        "sb",
        "append",
        "lastName",
        "organization",
        "sb",
        "append",
        "organization",
        "sb",
        "toString"
    ],
    "literals": [
        "\"UTC\"",
        "\"Organization shall be provided\"",
        "\"Dataset shall be provided\"",
        "\"Dataset.citation.text shall be provided\"",
        "\" \"",
        "\"doi.org\"",
        "\"doi:\"",
        "\"UTF-8\"",
        "\"Couldn't decode DOI URL\"",
        "\"accessed via GBIF.org on \"",
        "\".\"",
        "\"Dataset shall be provided\"",
        "\"Organization title shall be provided\"",
        "\" \"",
        "\", \"",
        "\".\"",
        "\"\"",
        "\"(\"",
        "\").\"",
        "\".\"",
        "\"Version \"",
        "\".\"",
        "\".\"",
        "\"dataset\"",
        "\"Couldn't decode DOI URL\"",
        "\"accessed via GBIF.org on \"",
        "\".\"",
        "\" \"",
        "\"\\\\s+\"",
        "\" \""
    ],
    "variables": [
        "citation",
        "contacts"
    ],
    "comments": [
        "Check DOI exists, and append it if it doesn't.",
        "only add a dot if we are not gonna add it with the year",
        "add title",
        "add version",
        "add publisher except if it was used instead of the authors",
        "add DOI as the identifier.",
        "make sure we have at least one instance of {@link #MANDATORY_CONTACT_TYPE}",
        "add first initial of each first name, capitalized"
    ],
    "docstrings": [
        "* Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Helper class tha generates a Citation String from {@link Dataset} and {@link Organization}\n * objects. Documentation : /docs/citations.md",
        "Utility class",
        "* Generate a citation for a {@link Dataset} using the publisher's provided citation.\n   * @param dataset\n   * @return generated citation as {@link String}",
        "* Generate a citation for a {@link Dataset} and its {@link Organization}. TODO add support for\n   * i18n\n   * @return generated citation as {@link String}",
        "* Extracts an ordered list of unique authors from a list of contacts. A {@link Contact} is\n   * identified as an author when his {@link ContactType} is contained in {@link\n   * #AUTHOR_CONTACT_TYPE}. But, we shall at least have one contact of type MANDATORY_CONTACT_TYPE.\n   *\n   * @param contacts list of contacts available\n   * @return ordered list of authors or empty list, never null",
        "* Given a list of authors, generates a {@link List} of {@link String} representing the authors\n   * name. If a contact doesn't have a first AND last name it will not be included.\n   *\n   * @param authors ordered list of authors\n   * @return list of author names (if it can be generated) or empty list, never null",
        "* This method is used to get the list of \"unique\" authors. Currently, uniqueness is based on\n   * lastName + firstNames. The order of the provided list will be preserved which also means the\n   * first {@link ContactType} found for a contact is the one that will be used for this contact\n   * (after applying the filter).\n   *\n   * @param authors a list of contacts representing possible authors\n   * @param filter {@link Predicate} used to pre-filter contacts\n   * @return",
        "* Check if a specific {@link Contact} is NOT already in the list of \"unique\" contact. Currently,\n   * uniqueness is based on the comparisons of lastName and firstNames.\n   *\n   * @param ctc\n   * @param uniqueContact\n   * @return",
        "* Given a {@link Contact}, generates a a String for that contact for citation purpose. The\n   * organization will be used (if present) in case we don't have both lastName and firstNames of\n   * the contact.\n   *\n   * @param creator\n   * @return"
    ],
    "functions": [
        "CitationGenerator",
        "CitationData",
        "generateCitation",
        "generatePublisherProvidedCitation",
        "CitationData",
        "generateCitation",
        "getAuthors",
        "generateAuthorsName",
        "getUniqueAuthors",
        "findInAuthorList",
        "getAuthorName"
    ],
    "classes": [
        "CitationGenerator",
        "CitationData"
    ]
}