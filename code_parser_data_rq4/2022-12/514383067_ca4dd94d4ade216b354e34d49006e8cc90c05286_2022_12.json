{
    "identifiers": [
        "BigNumber",
        "TokenId",
        "ContractExecuteTransaction",
        "ContractFunctionParameters",
        "AccountBalanceQuery",
        "TokenCreateTransaction",
        "TokenType",
        "TokenSupplyType",
        "Hbar",
        "PrivateKey",
        "Client",
        "AccountId",
        "tokenName",
        "treasureKey",
        "treasureId",
        "treasurerClient",
        "client",
        "TokenCreateTransaction",
        "tokenName",
        "tokenName",
        "TokenType",
        "TokenSupplyType",
        "treasureKey",
        "treasureId",
        "treasurerClient",
        "createTokenTx",
        "client",
        "tokenCreateTx",
        "tokenId",
        "tokenId",
        "tokenId",
        "lpTokenContractId",
        "client",
        "htsServiceAddress",
        "lpTokenContractId",
        "ContractFunctionParameters",
        "htsServiceAddress",
        "ContractExecuteTransaction",
        "lpTokenContractId",
        "contractFunctionParameters",
        "Hbar",
        "Hbar",
        "client",
        "initializeContractTx",
        "client",
        "contId",
        "lpTokenProxyAdd",
        "htsServiceAddress",
        "tokenA",
        "tokenB",
        "treasureId",
        "client",
        "key",
        "ContractExecuteTransaction",
        "contId",
        "ContractFunctionParameters",
        "htsServiceAddress",
        "lpTokenProxyAdd",
        "tokenA",
        "tokenB",
        "treasureId",
        "BigNumber",
        "client",
        "key",
        "initialize",
        "client",
        "initializeTx",
        "client",
        "initializeTxRx",
        "contId",
        "client",
        "ContractExecuteTransaction",
        "contId",
        "client",
        "getPairQty",
        "client",
        "getPairQtyTx",
        "client",
        "response",
        "response",
        "tokenAQty",
        "tokenBQty",
        "tokenAQty",
        "tokenBQty",
        "value",
        "precision",
        "BigNumber",
        "value",
        "precision",
        "contId",
        "tokenAQty",
        "tokenBQty",
        "treasureId",
        "tokenA",
        "tokenB",
        "client",
        "treasureKey",
        "tokenAQty",
        "tokenBQty",
        "ContractExecuteTransaction",
        "contId",
        "ContractFunctionParameters",
        "treasureId",
        "tokenA",
        "tokenB",
        "tokenAQty",
        "tokenBQty",
        "client",
        "treasureKey",
        "addLiquidityTx",
        "client",
        "addLiquidityTxRes",
        "client",
        "addLiquidityRx",
        "contId",
        "client",
        "ContractExecuteTransaction",
        "contId",
        "ContractFunctionParameters",
        "client",
        "getPrecisionValueTx",
        "client",
        "getPrecisionValueTxRes",
        "client",
        "response",
        "precisionLocal",
        "precision",
        "precision"
    ],
    "literals": [
        "\"bignumber.js\"",
        "\"@hashgraph/sdk\"",
        "string",
        "\"Token\"",
        "\"Token Symbol\"",
        "Token created ${tokenId}, Token Address ${tokenId?.toSolidityAddress()}",
        "string",
        "string",
        "Initialize LP contract with lp contract ${lpTokenContractId}",
        "\"initialize\"",
        "Initialize LP contract with token done.",
        "string",
        "string",
        "string",
        "\"initialize\"",
        "Initialized status : ${initializeTxRx.status}",
        "string",
        "\"getPairQty\"",
        "${tokenAQty} units of token A and ${tokenBQty} units of token B are present in the pool. \\n",
        "string",
        "Adding ${tokenAQty} units of token A and ${tokenBQty} units of token B to the pool.",
        "\"addLiquidity\"",
        "Liquidity added status: ${addLiquidityRx.status}",
        "string",
        "\"getPrecisionValue\"",
        "Get Precision Value ${precision}"
    ],
    "variables": [
        "createTokenTx",
        "tokenCreateTx",
        "tokenId",
        "contractFunctionParameters",
        "initializeContractTx",
        "initialize",
        "initializeTx",
        "initializeTxRx",
        "getPairQty",
        "getPairQtyTx",
        "response",
        "tokenAQty",
        "tokenBQty",
        "addLiquidityTx",
        "addLiquidityTxRes",
        "addLiquidityRx",
        "getPrecisionValueTx",
        "getPrecisionValueTxRes",
        "response",
        "precisionLocal",
        "precision"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": [
        "Pair"
    ]
}