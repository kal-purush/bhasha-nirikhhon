{
    "identifiers": [
        "EndpointParameterInstructions",
        "getEndpointPlugin",
        "getSerdePlugin",
        "HttpRequest",
        "__HttpRequest",
        "HttpResponse",
        "__HttpResponse",
        "Command",
        "$Command",
        "FinalizeHandlerArguments",
        "Handler",
        "HandlerExecutionContext",
        "HttpHandlerOptions",
        "__HttpHandlerOptions",
        "MetadataBearer",
        "__MetadataBearer",
        "MiddlewareStack",
        "SerdeContext",
        "__SerdeContext",
        "CloudFrontClientResolvedConfig",
        "ServiceInputTypes",
        "ServiceOutputTypes",
        "UpdateDistributionWithStagingConfigRequest",
        "UpdateDistributionWithStagingConfigRequestFilterSensitiveLog",
        "UpdateDistributionWithStagingConfigResult",
        "UpdateDistributionWithStagingConfigResultFilterSensitiveLog",
        "deserializeAws_restXmlUpdateDistributionWithStagingConfigCommand",
        "serializeAws_restXmlUpdateDistributionWithStagingConfigCommand",
        "$Command",
        "input",
        "clientStack",
        "configuration",
        "options",
        "getSerdePlugin",
        "configuration",
        "getEndpointPlugin",
        "configuration",
        "UpdateDistributionWithStagingConfigCommand",
        "clientStack",
        "UpdateDistributionWithStagingConfigRequestFilterSensitiveLog",
        "UpdateDistributionWithStagingConfigResultFilterSensitiveLog",
        "stack",
        "request",
        "requestHandler",
        "request",
        "options",
        "handlerExecutionContext",
        "input",
        "context",
        "serializeAws_restXmlUpdateDistributionWithStagingConfigCommand",
        "input",
        "context",
        "output",
        "context",
        "deserializeAws_restXmlUpdateDistributionWithStagingConfigCommand",
        "output",
        "context"
    ],
    "literals": [
        "\"@aws-sdk/middleware-endpoint\"",
        "\"@aws-sdk/middleware-serde\"",
        "\"@aws-sdk/protocol-http\"",
        "\"@aws-sdk/smithy-client\"",
        "\"@aws-sdk/types\"",
        "\"../CloudFrontClient\"",
        "\"../models/models_1\"",
        "\"../protocols/Aws_restXml\"",
        "\"builtInParams\"",
        "\"useFipsEndpoint\"",
        "\"builtInParams\"",
        "\"endpoint\"",
        "\"builtInParams\"",
        "\"region\"",
        "\"builtInParams\"",
        "\"useDualstackEndpoint\"",
        "\"CloudFrontClient\"",
        "\"UpdateDistributionWithStagingConfigCommand\""
    ],
    "variables": [
        "stack",
        "configuration",
        "clientName",
        "commandName",
        "handlerExecutionContext",
        "configuration"
    ],
    "comments": [
        "smithy-typescript generated code",
        "Start section: command_properties",
        "End section: command_properties",
        "Start section: command_constructor",
        "End section: command_constructor",
        "Start section: command_body_extra",
        "End section: command_body_extra"
    ],
    "docstrings": [
        "* <p>Copies the staging distribution's configuration to its corresponding primary\n * \t\t\tdistribution. The primary distribution retains its <code>Aliases</code> (also known as\n * \t\t\talternate domain names or CNAMEs) and <code>ContinuousDeploymentPolicyId</code> value,\n * \t\t\tbut otherwise its configuration is overwritten to match the staging distribution.</p>\n * \t\t       <p>You can use this operation in a continuous deployment workflow after you have tested\n * \t\t\tconfiguration changes on the staging distribution. After using a continuous deployment\n * \t\t\tpolicy to move a portion of your domain name’s traffic to the staging distribution and\n * \t\t\tverifying that it works as intended, you can use this operation to copy the staging\n * \t\t\tdistribution’s configuration to the primary distribution. This action will disable the\n * \t\t\tcontinuous deployment policy and move your domain’s traffic back to the primary distribution.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { CloudFrontClient, UpdateDistributionWithStagingConfigCommand } from \"@aws-sdk/client-cloudfront\"; // ES Modules import\n * // const { CloudFrontClient, UpdateDistributionWithStagingConfigCommand } = require(\"@aws-sdk/client-cloudfront\"); // CommonJS import\n * const client = new CloudFrontClient(config);\n * const command = new UpdateDistributionWithStagingConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateDistributionWithStagingConfigCommandInput} for command's `input` shape.\n * @see {@link UpdateDistributionWithStagingConfigCommandOutput} for command's `response` shape.\n * @see {@link CloudFrontClientResolvedConfig | config} for CloudFrontClient's `config` shape.\n *",
        "* @internal"
    ],
    "functions": [
        "getEndpointParameterInstructions",
        "resolveMiddleware",
        "serialize",
        "deserialize"
    ],
    "classes": [
        "UpdateDistributionWithStagingConfigCommand"
    ]
}