{
    "identifiers": [
        "_",
        "validatePassword",
        "password",
        "key",
        "_",
        "password",
        "password",
        "password",
        "_",
        "validationParams",
        "value",
        "key",
        "value",
        "_",
        "invalid",
        "validateName",
        "name",
        "key",
        "_",
        "name",
        "_",
        "name",
        "name",
        "_",
        "validationParams",
        "value",
        "key",
        "value",
        "_",
        "invalid",
        "validateUsername",
        "username",
        "_",
        "username",
        "_",
        "username",
        "validateSalary",
        "salary",
        "key",
        "_",
        "salary",
        "_",
        "parseInt",
        "salary",
        "_",
        "validationParams",
        "value",
        "key",
        "value",
        "_",
        "invalid",
        "e",
        "validatePlayerNumber",
        "playerNumber",
        "key",
        "_",
        "playerNumber",
        "parseInt",
        "playerNumber",
        "parseInt",
        "playerNumber",
        "_",
        "validationParams",
        "value",
        "key",
        "value",
        "_",
        "invalid",
        "e",
        "validateName",
        "validatePassword",
        "validatePlayerNumber",
        "validateSalary",
        "validateUsername"
    ],
    "literals": [
        "'lodash'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "validatePassword",
        "validationParams",
        "invalid",
        "validateName",
        "validationParams",
        "invalid",
        "validateUsername",
        "validateSalary",
        "validationParams",
        "invalid",
        "validatePlayerNumber",
        "validationParams",
        "invalid"
    ],
    "comments": [
        "Check for invalid values",
        "If the invalid is an empty array, no validation errors.",
        "Check for invalid values",
        "If the invalid is an empty array, no validation errors.",
        "If valid, returns true, else false",
        "Try/catch for casting errors.",
        "Check for invalid values",
        "If the invalid is an empty array, no validation errors.",
        "Try/catch for casting errors.",
        "Check for invalid values",
        "If the invalid is an empty array, no validation errors."
    ],
    "docstrings": [
        "* Validates a password for length of 12 or greater, one number and one special character.\n * @param {string} password the password to be validated.\n * @returns {boolean} if no validation errors detected, returns true, else returns false.",
        "* Validates a name for length between 2 and 20, and for letters only.\n * @param {string} name the name to be validated.\n * @returns {boolean} if no validation errors detected, returns true, else returns false.",
        "* Validates a username for length between 6 and 20.\n * @param {string} username the username to be validated.\n * @returns {boolean} if no validation errors detected, returns true, else returns false.",
        "* Validates a salary for numeric.\n * @param {string} salary the salary to be validated.\n * @returns {boolean} if no validation errors detected, returns true, else returns false.",
        "* Validates a player number for numeric and if it is greater than 0 and less than.\n * @param {string} playerNumber the player number to be validated.\n * @returns {boolean} if no validation errors detected, returns true, else returns false."
    ],
    "functions": [],
    "classes": []
}