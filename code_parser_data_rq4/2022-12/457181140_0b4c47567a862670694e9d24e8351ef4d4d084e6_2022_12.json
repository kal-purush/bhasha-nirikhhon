{
    "identifiers": [
        "net",
        "william278",
        "profanitycheckerapi",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "java",
        "util",
        "java",
        "util",
        "Normalizer",
        "NFKD_NORMALIZER",
        "text",
        "java",
        "text",
        "Normalizer",
        "normalize",
        "text",
        "java",
        "text",
        "Normalizer",
        "Form",
        "NFKD",
        "replaceAll",
        "toLowerCase",
        "replaceAll",
        "trim",
        "LEET_CONVERTER",
        "text",
        "text",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "replaceAll",
        "NotNull",
        "normalize",
        "NotNull",
        "normalizationFunction",
        "normalize",
        "normalizationFunction",
        "NotNull",
        "NotNull",
        "input",
        "normalize",
        "apply",
        "input",
        "NotNull",
        "of",
        "values"
    ],
    "literals": [
        "\"[^\\\\p{ASCII}]\"",
        "\"\"",
        "\"\\\\s{2,}\"",
        "\" \"",
        "\"1\"",
        "\"i\"",
        "\"3\"",
        "\"e\"",
        "\"4\"",
        "\"a\"",
        "\"5\"",
        "\"s\"",
        "\"7\"",
        "\"t\"",
        "\"0\"",
        "\"o\"",
        "\"9\"",
        "\"g\"",
        "\"8\"",
        "\"b\"",
        "\"6\"",
        "\"g\""
    ],
    "variables": [
        "normalize"
    ],
    "comments": [],
    "docstrings": [
        "* Options for normalizing text, providing a normalization function for a string",
        "* {@link java.text.Normalizer#normalize(CharSequence, java.text.Normalizer.Form) Normalize} using the {@link java.text.Normalizer.Form#NFKD NFKD} method",
        "* Normalize by converting leet speak number patterns to their corresponding letters",
        "* Normalize a string using this method\n     *\n     * @param input The string to normalize\n     * @return The normalized string",
        "* Get the normalizers from a list of normalization options\n     *\n     * @return The normalizers"
    ],
    "functions": [
        "Normalizer",
        "normalize",
        "all"
    ],
    "classes": []
}