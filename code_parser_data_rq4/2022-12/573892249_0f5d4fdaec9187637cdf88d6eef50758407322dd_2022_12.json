{
    "identifiers": [
        "de",
        "uniluebeck",
        "itm",
        "schiffeversenken",
        "game",
        "de",
        "uniluebeck",
        "itm",
        "schiffeversenken",
        "game",
        "model",
        "GameField",
        "de",
        "uniluebeck",
        "itm",
        "schiffeversenken",
        "engine",
        "de",
        "uniluebeck",
        "itm",
        "schiffeversenken",
        "game",
        "model",
        "field",
        "field",
        "Override",
        "x",
        "y",
        "waterTile",
        "waterHitTile",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getTilestate",
        "AssetRegistry",
        "getTile",
        "STATE_SHIP",
        "STATE_WATER",
        "waterTile",
        "STATE_MISSED",
        "waterHitTile",
        "STATE_SHIP_HIT",
        "lookupShipTile",
        "x",
        "y",
        "x",
        "y",
        "alreadyHit",
        "ship",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getCorrespondingShip",
        "top",
        "bottom",
        "right",
        "left",
        "y",
        "ship",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getCorrespondingShip",
        "top",
        "y",
        "getField",
        "getSize",
        "getY",
        "ship",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getCorrespondingShip",
        "bottom",
        "x",
        "getField",
        "getSize",
        "getX",
        "ship",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getCorrespondingShip",
        "right",
        "x",
        "ship",
        "getField",
        "getTileAt",
        "x",
        "y",
        "getCorrespondingShip",
        "left",
        "alreadyHit",
        "top",
        "bottom",
        "AssetRegistry",
        "getTile",
        "top",
        "AssetRegistry",
        "getTile",
        "bottom",
        "AssetRegistry",
        "getTile",
        "right",
        "left",
        "AssetRegistry",
        "getTile",
        "right",
        "AssetRegistry",
        "getTile",
        "left",
        "AssetRegistry",
        "getTile",
        "ship",
        "isVertical",
        "AssetRegistry",
        "getTile",
        "AssetRegistry",
        "getTile",
        "top",
        "bottom",
        "AssetRegistry",
        "getTile",
        "top",
        "AssetRegistry",
        "getTile",
        "bottom",
        "AssetRegistry",
        "getTile",
        "right",
        "left",
        "AssetRegistry",
        "getTile",
        "right",
        "AssetRegistry",
        "getTile",
        "left",
        "AssetRegistry",
        "getTile",
        "ship",
        "isVertical",
        "AssetRegistry",
        "getTile",
        "AssetRegistry",
        "getTile"
    ],
    "literals": [
        "\"unknown\"",
        "\"up.ship.middle\"",
        "\"up.ship.aft\"",
        "\"up.ship.bug\"",
        "\"right.ship.middle\"",
        "\"right.ship.aft\"",
        "\"right.ship.bug\"",
        "\"up.ship.single\"",
        "\"right.ship.single\"",
        "\"up.ship.middle.hit\"",
        "\"up.ship.aft.hit\"",
        "\"up.ship.bug.hit\"",
        "\"right.ship.middle.hit\"",
        "\"right.ship.aft.hit\"",
        "\"right.ship.bug.hit\"",
        "\"up.ship.single.hit\"",
        "\"right.ship.single.hit\""
    ],
    "variables": [],
    "comments": [
        "initializes a new variable ship with the ship we are currently looking at",
        "initializes 4 variables we use to check wether another ship is positioned around the current one",
        "1. if-clause checks for OUT_OF_BOUNDS exceptions, 2. if-clause checks for parts of the same ship",
        "1. if-clause checks wether the ship has already been hit or not, 2. if-clause checks which asset to return"
    ],
    "docstrings": [
        "* This class renders the opponents GameField\n * \n * @author Bendix Voss, Fabio Junghans\n * \n * Gruppe 169",
        "* This is the renderer for the opponents field\n     * \n     * @param field",
        "* This method gets called by the rendering method in order to look up the correct tile at a given position.\n     * @param x The x coordinate of the tile to look up\n     * @param y The y coordinate of the tile to look up\n     * @param waterTile A cached version for a water tile (will be the most returned one)\n     * @param waterHitTile A cached version of the water_missed tile (Will be the second most returned one)\n     * @return The correct tile to render",
        "* This method looks up the correct tile if the position happens to be a ship.\n     * @param x The x coordinate of the ships tile\n     * @param y The y coordinate of the ships tile\n     * @param alreadyHit A Flag that indicates whether nor not the tile has been hit yet.\n     * @return The composed ships tile"
    ],
    "functions": [
        "HitMissRenderer",
        "Tile",
        "getTileAt",
        "Tile",
        "lookupShipTile"
    ],
    "classes": [
        "HitMissRenderer"
    ]
}