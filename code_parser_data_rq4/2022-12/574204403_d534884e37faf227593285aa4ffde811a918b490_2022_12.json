{
    "identifiers": [
        "Confitec",
        "RaphaelCampos",
        "Api",
        "Controllers",
        "Shared",
        "Confitec",
        "RaphaelCampos",
        "Api",
        "Domain",
        "Shared",
        "Confitec",
        "RaphaelCampos",
        "Api",
        "Service",
        "DTO",
        "Confitec",
        "RaphaelCampos",
        "Api",
        "Service",
        "Interfaces",
        "Services",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Collections",
        "Generic",
        "Threading",
        "Tasks",
        "Confitec",
        "RaphaelCampos",
        "Api",
        "Controllers",
        "ApiControllerBase",
        "IUserService",
        "userService",
        "_userService",
        "userService",
        "HttpGet",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "IActionResult",
        "_userService",
        "GetAllUsersAsync",
        "Ok",
        "users",
        "HttpGet",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "ProducesResponseType",
        "NotFoundResult",
        "StatusCodes",
        "Status404NotFound",
        "IActionResult",
        "userId",
        "_userService",
        "GetUserByIdAsync",
        "userId",
        "user",
        "NotFound",
        "Message",
        "Constants",
        "PROBLEM_GET_ID",
        "Ok",
        "user",
        "HttpGet",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "ProducesResponseType",
        "NotFoundResult",
        "StatusCodes",
        "Status404NotFound",
        "IActionResult",
        "FromHeader",
        "email",
        "_userService",
        "GetUserByEmailAsync",
        "email",
        "user",
        "NotFound",
        "Message",
        "Constants",
        "PROBLEM_GET_EMAIL",
        "Ok",
        "user",
        "HttpPost",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status201Created",
        "ProducesResponseType",
        "BadRequestResult",
        "StatusCodes",
        "Status400BadRequest",
        "IActionResult",
        "FromBody",
        "UserDto",
        "userDto",
        "_userService",
        "AddUserAsync",
        "userDto",
        "user",
        "BadRequest",
        "Message",
        "Constants",
        "PROBLEM_CREATING",
        "Created",
        "User",
        "user",
        "HttpPut",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "ProducesResponseType",
        "BadRequestResult",
        "StatusCodes",
        "Status400BadRequest",
        "IActionResult",
        "FromBody",
        "UserDto",
        "userDto",
        "_userService",
        "UpdateUserAsync",
        "userDto",
        "user",
        "BadRequest",
        "Message",
        "Constants",
        "PROBLEM_UPDATING",
        "Ok",
        "userDto",
        "HttpDelete",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "ProducesResponseType",
        "BadRequestResult",
        "StatusCodes",
        "Status400BadRequest",
        "IActionResult",
        "userId",
        "_userService",
        "RemoveUserByIdAsync",
        "userId",
        "status",
        "BadRequest",
        "Message",
        "Constants",
        "PROBLEM_REMOVING",
        "Ok",
        "Message",
        "Constants",
        "SUCCESSFULLY_REMOVED",
        "HttpDelete",
        "ProducesResponseType",
        "UserDto",
        "StatusCodes",
        "Status200OK",
        "ProducesResponseType",
        "BadRequestResult",
        "StatusCodes",
        "Status400BadRequest",
        "IActionResult",
        "FromBody",
        "UserDto",
        "userDto",
        "_userService",
        "RemoveUserAsync",
        "userDto",
        "status",
        "BadRequest",
        "Message",
        "Constants",
        "PROBLEM_REMOVING",
        "Ok",
        "Message",
        "Constants",
        "SUCCESSFULLY_REMOVED"
    ],
    "literals": [
        "\"{userId}\"",
        "\"email\"",
        "\"create\"",
        "\"Created\"",
        "\"update\"",
        "\"delete/{userId}\"",
        "\"delete\""
    ],
    "variables": [
        "IUserService",
        "_userService",
        "users",
        "user",
        "user",
        "user",
        "user",
        "status",
        "status"
    ],
    "comments": [
        "User Controller",
        "</summary>",
        "Searches all registered users.",
        "</summary>",
        "<returns>Returns a list of all users</returns>",
        "Searches for the user by ID.",
        "</summary>",
        "<param name=\"userId\">The ID that represents the user to be searched.</param>",
        "<returns>Returns the user corresponding to the entered ID.</returns>",
        "Searches for the user by E-mail.",
        "</summary>",
        "<param name=\"email\">The E-mail that represents the user to be searched.</param>",
        "<returns>Returns the user corresponding to the entered ID.</returns>",
        "Adds a new user record.",
        "</summary>",
        "<param name=\"userDto\">The user entity that will be added.</param>",
        "<returns>Returns the user that was created and its information.</returns>",
        "Updates a user's record.",
        "</summary>",
        "<param name=\"userDto\">The user entity that will be updated.</param>",
        "<returns>Returns the user that was updated and its information.</returns>",
        "Removes a user according to his ID.",
        "</summary>",
        "<param name=\"userId\">The ID that represents the user to be removed.</param>",
        "<returns>A boolean indicating the status of the operation..</returns>",
        "Removes user from his object.",
        "</summary>",
        "<param name=\"userDto\">The user entity that will be removed.</param>",
        "<returns>A boolean indicating the status of the operation.</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "UserController",
        "GetAll",
        "GetByIdAsync",
        "GetByEmailAsync",
        "AddUserAsync",
        "UpdateUserAsync",
        "RemoveUserByIdAsync",
        "RemoveUserAsync"
    ],
    "classes": [
        "UserController"
    ]
}