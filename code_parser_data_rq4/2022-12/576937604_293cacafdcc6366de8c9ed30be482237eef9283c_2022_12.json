{
    "identifiers": [
        "flask",
        "Flask",
        "jsonify",
        "render_template",
        "request",
        "numpy",
        "np",
        "geopy",
        "distance",
        "ps",
        "linebot",
        "models",
        "MessageEvent",
        "TextMessage",
        "TextSendMessage",
        "TemplateSendMessage",
        "ImageSendMessage",
        "StickerSendMessage",
        "AudioSendMessage",
        "FlexSendMessage",
        "linebot",
        "models",
        "template",
        "linebot",
        "LineBotApi",
        "WebhookHandler",
        "pandas",
        "pd",
        "plotly",
        "graph_objs",
        "go",
        "pythainlp",
        "corpus",
        "thai_stopwords",
        "sklearn",
        "naive_bayes",
        "MultinomialNB",
        "requests",
        "warnings",
        "warnings",
        "filterwarnings",
        "pythainlp",
        "sent_tokenize",
        "word_tokenize",
        "nltk",
        "sentiment",
        "util",
        "nltk",
        "download",
        "nltk",
        "download",
        "nltk",
        "corpus",
        "stopwords",
        "sklearn",
        "feature_extraction",
        "text",
        "CountVectorizer",
        "sklearn",
        "feature_extraction",
        "text",
        "TfidfVectorizer",
        "pythainlp",
        "util",
        "normalize",
        "pd",
        "read_csv",
        "pd",
        "read_excel",
        "pd",
        "read_excel",
        "s",
        "re",
        "sub",
        "s",
        "s",
        "test_menu",
        "test_menu",
        "menu_test2",
        "apply",
        "regex_nodigits_new",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "text",
        "i",
        "replace",
        "i",
        "text",
        "replace_text",
        "menu_test2_ingr",
        "menu_test2_ingr",
        "apply",
        "normalize",
        "thai_stopwords",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "word_tokenize",
        "text",
        "i",
        "keep_whitespace",
        "i",
        "i",
        "list_word",
        "i",
        "stopwords",
        "i",
        "text",
        "remove_stopword",
        "menu_test2_ingr",
        "pythainlp",
        "tokenize",
        "sent_tokenize",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "sent_tokenize",
        "text",
        "i",
        "engine",
        "keep_whitespace",
        "i",
        "i",
        "list_word",
        "i",
        "stopwords",
        "i",
        "text",
        "menu_test2",
        "apply",
        "regex_nodigits_new",
        "menu_test4_ingr",
        "apply",
        "normalize",
        "remove_stopword2",
        "menu_test5_ingr",
        "menu_test66_ingr",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "text",
        "i",
        "i",
        "text",
        "remove_list",
        "menu_test_name",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "word_tokenize",
        "text",
        "i",
        "keep_whitespace",
        "i",
        "i",
        "list_word",
        "i",
        "stopwords",
        "i",
        "text",
        "menu_test2",
        "apply",
        "regex_nodigits_new",
        "menu_test44_ingr",
        "apply",
        "normalize",
        "remove_stopword3",
        "menu_test55_ingr",
        "menu_test2",
        "apply",
        "regex_nodigits_new",
        "menu_test7_ingr",
        "apply",
        "normalize",
        "remove_stopword",
        "menu_test8_ingr",
        "menu_test2",
        "apply",
        "regex_nodigits_new",
        "menu_test9_ingr22",
        "apply",
        "normalize",
        "remove_stopword",
        "menu_test9_ingr22",
        "text",
        "len",
        "text",
        "i",
        "lenx",
        "text",
        "i",
        "text",
        "i",
        "i",
        "text",
        "remove_list2",
        "menu_test9_ingr22",
        "menu_test_name2",
        "apply",
        "join",
        "menu_test77_ingr",
        "apply",
        "join",
        "menu_test3_ingr",
        "apply",
        "join",
        "menu_test9_ingr",
        "apply",
        "join",
        "menu_test9_ingr22",
        "apply",
        "join",
        "menu_test99_ingr22",
        "pd",
        "DataFrame",
        "menu_test77_ingr",
        "menu_test3_ingr",
        "menu_test9_ingr",
        "menu_test9_ingr22",
        "menu_test_name2",
        "columns",
        "pd",
        "DataFrame",
        "menu_test777_ingr",
        "menu_test33_ingr",
        "menu_test99_ingr",
        "menu_test99_ingr22",
        "menu_test_name22",
        "columns",
        "pd",
        "DataFrame",
        "menu_test99_ingr2222",
        "menu_test777_ingr",
        "menu_test33_ingr",
        "menu_test_name22",
        "columns",
        "menu_df3",
        "drop_duplicates",
        "subset",
        "keep",
        "menu_df3",
        "reset_index",
        "drop",
        "pd",
        "DataFrame",
        "menu_test_name22",
        "menu_test777_ingr",
        "menu_test33_ingr",
        "menu_test99_ingr",
        "menu_test99_ingr22",
        "columns",
        "menu_df4",
        "menu_df4",
        "drop_duplicates",
        "subset",
        "keep",
        "menu_df4",
        "reset_index",
        "drop",
        "menu_df4",
        "train",
        "isnull",
        "sum",
        "sort_values",
        "ascending",
        "train",
        "isnull",
        "sum",
        "train",
        "isnull",
        "count",
        "sort_values",
        "ascending",
        "pd",
        "concat",
        "total",
        "percent",
        "axis",
        "keys",
        "color",
        "train",
        "value_counts",
        "go",
        "Bar",
        "y",
        "temp",
        "index",
        "x",
        "temp",
        "orientation",
        "marker",
        "color_theme",
        "go",
        "Layout",
        "title",
        "xaxis",
        "title",
        "tickfont",
        "size",
        "yaxis",
        "title",
        "titlefont",
        "size",
        "tickfont",
        "size",
        "margin",
        "l",
        "trace",
        "go",
        "Figure",
        "data",
        "data",
        "layout",
        "layout",
        "menu_df3",
        "describe",
        "menu_df3",
        "len",
        "train",
        "train",
        "shape",
        "train",
        "train",
        "CountVectorizer",
        "analyzer",
        "token_pattern",
        "count_vect",
        "fit",
        "train",
        "count_vect",
        "transform",
        "data_train",
        "TfidfVectorizer",
        "analyzer",
        "token_pattern",
        "max_features",
        "tfidf_vect",
        "fit",
        "train",
        "tfidf_vect",
        "transform",
        "data_train",
        "TfidfVectorizer",
        "analyzer",
        "token_pattern",
        "ngram_range",
        "max_features",
        "tfidf_vect_ngram",
        "fit",
        "train",
        "tfidf_vect_ngram",
        "transform",
        "data_train",
        "MultinomialNB",
        "nb_classifier",
        "fit",
        "xtrain_tfidf_ngram",
        "target_train",
        "Flask",
        "LineBotApi",
        "lineaccesstoken",
        "pd",
        "read_excel",
        "app",
        "route",
        "app",
        "route",
        "conv",
        "conv",
        "inpmessage",
        "len",
        "res",
        "flexmessage",
        "inpmessage",
        "res",
        "values",
        "flex",
        "lst",
        "append",
        "flex",
        "count_vect",
        "transform",
        "lst",
        "tfidf_vect",
        "transform",
        "lst",
        "tfidf_vect_ngram",
        "transform",
        "lst",
        "nb_classifier",
        "predict",
        "xtest_tfidf_ngram",
        "len",
        "nb_preds",
        "nb_preds",
        "nb_preds",
        "flex",
        "replyObj",
        "app",
        "route",
        "methods",
        "request",
        "get_json",
        "force",
        "cache",
        "json",
        "dumps",
        "json_line",
        "json",
        "loads",
        "json_line",
        "len",
        "decoded",
        "i",
        "no_event",
        "decoded",
        "i",
        "event_handle",
        "keys",
        "np",
        "random",
        "randint",
        "StickerSendMessage",
        "package_id",
        "sticker_id",
        "sk_id",
        "line_bot_api",
        "reply_message",
        "rtoken",
        "replyObj",
        "keys",
        "msgType",
        "handle_text",
        "msg",
        "line_bot_api",
        "reply_message",
        "rtoken",
        "replyObj",
        "msgType",
        "handle_postback",
        "msg",
        "line_bot_api",
        "reply_message",
        "rtoken",
        "replyObj",
        "msgType",
        "getcaseflex",
        "lat",
        "lng",
        "FlexSendMessage",
        "alt_text",
        "contents",
        "result",
        "line_bot_api",
        "reply_message",
        "rtoken",
        "replyObj",
        "np",
        "random",
        "randint",
        "StickerSendMessage",
        "package_id",
        "sticker_id",
        "sk_id",
        "line_bot_api",
        "reply_message",
        "rtoken",
        "replyObj",
        "query",
        "dat",
        "dat",
        "query",
        "len",
        "res",
        "res",
        "values",
        "res",
        "values",
        "res",
        "values",
        "res",
        "values",
        "productName",
        "imgUrl",
        "desc",
        "cont",
        "query",
        "getdata",
        "query",
        "res",
        "res",
        "imgUrl",
        "productName",
        "desc",
        "cont",
        "flex",
        "linebot",
        "models",
        "TextSendMessage",
        "FlexSendMessage",
        "json",
        "inpmessage",
        "conv",
        "conv",
        "inpmessage",
        "len",
        "res",
        "flexmessage",
        "inpmessage",
        "res",
        "values",
        "flex",
        "lst",
        "append",
        "inpmessage",
        "count_vect",
        "transform",
        "lst",
        "tfidf_vect",
        "transform",
        "lst",
        "tfidf_vect_ngram",
        "transform",
        "lst",
        "nb_classifier",
        "predict",
        "xtest_tfidf_ngram",
        "len",
        "nb_preds",
        "nb_preds",
        "TextSendMessage",
        "text",
        "nb_preds",
        "TextSendMessage",
        "text",
        "flex",
        "replyObj",
        "inpmessage",
        "TextSendMessage",
        "text",
        "inpmessage",
        "replyObj",
        "lat",
        "lng",
        "cdat",
        "topK",
        "getdistace",
        "lat",
        "lng",
        "cdat",
        "result",
        "sort_values",
        "by",
        "result",
        "iloc",
        "topK",
        "i",
        "len",
        "result",
        "result",
        "iloc",
        "i",
        "result",
        "iloc",
        "i",
        "txtResult",
        "kmdistance",
        "newssource",
        "txtResult",
        "lat",
        "lng",
        "lat",
        "lng",
        "requests",
        "get",
        "url",
        "json",
        "res",
        "latitude",
        "longitude",
        "cdat",
        "latitude",
        "longitude",
        "cdat",
        "values",
        "latlng",
        "latlngList",
        "latlng",
        "latlng",
        "kmsumList",
        "append",
        "ps",
        "vincenty",
        "coords_1",
        "coords_2",
        "km",
        "kmsumList",
        "cdat",
        "app",
        "run",
        "debug"
    ],
    "literals": [
        "'ignore'",
        "'punkt'",
        "'stopwords'",
        "\"./thai_menu.csv\"",
        "'addb.xlsx'",
        "'conversation.xlsx'",
        "r'[\\d]'",
        "''",
        "'สูตรอาหาร'",
        "\"\\n\"",
        "\"\"",
        "\"whitespace+newline\"",
        "'ชื่ออาหาร'",
        "'ชื่ออาหาร'",
        "'ประเภทอาหาร'",
        "'ประเภทอาหาร'",
        "', '",
        "', '",
        "', '",
        "', '",
        "', '",
        "','",
        "'รายละเอียดอาหาร'",
        "'สูตรอาหาร'",
        "'ประเภทอาหาร'",
        "'สัญชาติอาหาร'",
        "'ชื่ออาหาร'",
        "'รายละเอียดอาหาร'",
        "'สูตรอาหาร'",
        "'ประเภทอาหาร'",
        "'สัญชาติอาหาร'",
        "'ชื่ออาหาร'",
        "'รายละเอียดอาหาร'",
        "'ชื่ออาหาร'",
        "'ชื่ออาหาร'",
        "'last'",
        "'ชื่ออาหาร'",
        "'รายละเอียดอาหาร'",
        "'สัญชาติอาหาร'",
        "'ชื่ออาหาร'",
        "'last'",
        "'Total missing'",
        "'Percent missing'",
        "'rgba(221,160,221,1)'",
        "'rgba(169,169,169,1)'",
        "'rgba(255,160,122,1)'",
        "'rgba(176,224,230,1)'",
        "'rgba(169,169,169,1)'",
        "'rgba(255,160,122,1)'",
        "'rgba(176,224,230,1)'",
        "'rgba(188,143,143,1)'",
        "'rgba(221,160,221,1)'",
        "'rgba(169,169,169,1)'",
        "'rgba(255,160,122,1)'",
        "'rgba(176,224,230,1)'",
        "'rgba(189,183,107,1)'",
        "'rgba(188,143,143,1)'",
        "'rgba(221,160,221,1)'",
        "'rgba(169,169,169,1)'",
        "'rgba(255,160,122,1)'",
        "'rgba(176,224,230,1)'",
        "'rgba(169,169,169,1)'",
        "'rgba(255,160,122,1)'",
        "'สัญชาติอาหาร'",
        "'h'",
        "\"เมนูแต่ละสัญชาติอาหาร\"",
        "'จำนวนเมนูอาหาร'",
        "'สัญชาติอาหาร'",
        "'รายละเอียดอาหาร'",
        "'ชื่ออาหาร'",
        "'word'",
        "r'\\w{1,}'",
        "'รายละเอียดอาหาร'",
        "'word'",
        "r'\\w{1,}'",
        "'รายละเอียดอาหาร'",
        "'word'",
        "r'\\w{1,}'",
        "'รายละเอียดอาหาร'",
        "'7kGi30bHhAA2h2RdzoswZfDv7BSliIgudIJcClSNbQtgk/2kHbf4PdI2p7fL2FFUyoZhDdeKq8q8OIKqaxNf+ZA0ywGA3xJ6K96Bo6eEWKSgRGHS3rTWPLP2y+AELX+sQ53a+ONDC7e2k6Z620EssQdB04t89/1O/w1cDnyilFU='",
        "''",
        "'casedata.xlsx'",
        "'/'",
        "\"Hello World!\"",
        "'/aek'",
        "\"ชื่อ\"",
        "'intent'",
        "'callback'",
        "'nodata'",
        "'Tompei'",
        "\"ลองอธิบายเจาะจงกว่านี้ได้มั๊ยอะ\"",
        "'/webhook'",
        "'POST'",
        "'events'",
        "'events'",
        "''",
        "'source'",
        "'userId'",
        "'error cannot get userId'",
        "''",
        "'replyToken'",
        "'error cannot get rtoken'",
        "''",
        "'message'",
        "\"message\"",
        "\"type\"",
        "\"message\"",
        "\"id\"",
        "'error cannot get msgID, and msgType'",
        "''",
        "'postback'",
        "'postback'",
        "\"text\"",
        "\"message\"",
        "\"text\"",
        "\"postback\"",
        "\"postback\"",
        "\"data\"",
        "\"location\"",
        "\"message\"",
        "\"latitude\"",
        "\"message\"",
        "\"longitude\"",
        "'Flex Message alt text'",
        "''",
        "'QueryWord'",
        "'nodata'",
        "'ProductName'",
        "'ImgUrl'",
        "'Description'",
        "'Contact'",
        "'nodata'",
        "'nodata'",
        "'intent'",
        "'callback'",
        "'nodata'",
        "'Tompei'",
        "\"ลองอธิบายเจาะจงกว่านี้ได้มั๊ยอะ\"",
        "'km'",
        "''",
        "'%.1f'",
        "'km'",
        "'News_Soruce'",
        "'ห่าง %s กิโลเมตร\\n%s\\n\\n'",
        "'http://botnoiflexapi.herokuapp.com/getnearcase?lat=%s&long=%s'",
        "'Latitude'",
        "'Longitude'",
        "'km'",
        "'__main__'"
    ],
    "variables": [
        "test_menu",
        "dat",
        "conv",
        "s",
        "menu_test",
        "menu_test2",
        "menu_test2_ingr",
        "lenx",
        "i",
        "text",
        "i",
        "menu_test2_ingr",
        "menu_test2_ingr",
        "stopwords",
        "lenx",
        "i",
        "list_word",
        "text",
        "i",
        "menu_test3_ingr",
        "lenx",
        "i",
        "list_word",
        "text",
        "i",
        "menu_test4_ingr",
        "menu_test5_ingr",
        "menu_test66_ingr",
        "menu_test_name",
        "lenx",
        "i",
        "menu_test_name2",
        "lenx",
        "i",
        "list_word",
        "text",
        "i",
        "menu_test44_ingr",
        "menu_test55_ingr",
        "menu_test77_ingr",
        "menu_test7_ingr",
        "menu_test8_ingr",
        "menu_test9_ingr",
        "menu_test9_ingr22",
        "menu_test9_ingr22",
        "menu_test9_ingr22",
        "lenx",
        "i",
        "menu_test9_ingr22",
        "menu_test_name22",
        "menu_test777_ingr",
        "menu_test33_ingr",
        "menu_test99_ingr",
        "menu_test99_ingr22",
        "menu_test99_ingr2222",
        "menu_df",
        "menu_df2",
        "menu_df3",
        "menu_df3",
        "menu_df3",
        "menu_df4",
        "menu_df4",
        "menu_df4",
        "train",
        "total",
        "percent",
        "missing_train_data",
        "color_theme",
        "temp",
        "trace",
        "layout",
        "data",
        "fig",
        "train",
        "data_train",
        "target_train",
        "count_vect",
        "xtrain_count",
        "tfidf_vect",
        "xtrain_tfidf",
        "tfidf_vect_ngram",
        "xtrain_tfidf_ngram",
        "nb_classifier",
        "app",
        "lineaccesstoken",
        "line_bot_api",
        "flex",
        "casedata",
        "lst",
        "inpmessage",
        "res",
        "flex",
        "flex",
        "xtest_count",
        "xtest_tfidf",
        "xtest_tfidf_ngram",
        "nb_preds",
        "replyObj",
        "replyObj",
        "replyObj",
        "json_line",
        "json_line",
        "decoded",
        "no_event",
        "userId",
        "rtoken",
        "msgType",
        "msgId",
        "sk_id",
        "replyObj",
        "msgType",
        "msg",
        "replyObj",
        "msg",
        "replyObj",
        "lat",
        "lng",
        "result",
        "replyObj",
        "sk_id",
        "replyObj",
        "res",
        "productName",
        "imgUrl",
        "desc",
        "cont",
        "res",
        "productName",
        "imgUrl",
        "desc",
        "cont",
        "flex",
        "lst",
        "res",
        "flex",
        "flex",
        "xtest_count",
        "xtest_tfidf",
        "xtest_tfidf_ngram",
        "nb_preds",
        "replyObj",
        "replyObj",
        "replyObj",
        "replyObj",
        "result",
        "result",
        "result",
        "txtResult",
        "kmdistance",
        "newssource",
        "txtResult",
        "url",
        "res",
        "coords_1",
        "latlngList",
        "kmsumList",
        "coords_2",
        "cdat"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*-coding: utf-8 -*-",
        "from __future__ import absolute_import",
        "",
        "TF-IDF",
        "replace digits with empty str",
        "only returning ingredients of first recipe?",
        "print(menu_test2_ingr)",
        "print(\"             # of Rows, Columns:\",train.shape)",
        "print(missing_train_data.head())",
        "iplot(fig,filename='basic-bar')",
        "print(data_train.shape)",
        "print(target_train.shape)",
        "create a count vectorizer object",
        "transform the training and validation data using count vectorizer object",
        "word level tf-idf",
        "ngram level tf-idf",
        "creating an empty list",
        "import main",
        "new ########################",
        "adding the element",
        "txtresult = handle_location(lat,lng,casedata,3)",
        "adding the element",
        "create list of all reference locations from a pandas DataFrame",
        "loop and calculate distance in KM using geopy.distance library and append to distance list"
    ],
    "docstrings": [
        "'''use regex to clean string:\n    get rid of punctuations, capitalized letters and numbers'''",
        "'''\n    {\n        \"type\": \"bubble\",\n        \"hero\": {\n          \"type\": \"image\",\n          \"url\": \"%s\",\n          \"margin\": \"none\",\n          \"size\": \"full\",\n          \"aspectRatio\": \"1:1\",\n          \"aspectMode\": \"cover\",\n          \"action\": {\n            \"type\": \"uri\",\n            \"label\": \"Action\",\n            \"uri\": \"https://linecorp.com\"\n          }\n        },\n        \"body\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"spacing\": \"md\",\n          \"action\": {\n            \"type\": \"uri\",\n            \"label\": \"Action\",\n            \"uri\": \"https://linecorp.com\"\n          },\n          \"contents\": [\n            {\n              \"type\": \"text\",\n              \"text\": \"%s\",\n              \"size\": \"xl\",\n              \"weight\": \"bold\"\n            },\n            {\n              \"type\": \"text\",\n              \"text\": \"%s\",\n              \"wrap\": true\n            }\n          ]\n        },\n        \"footer\": {\n          \"type\": \"box\",\n          \"layout\": \"vertical\",\n          \"contents\": [\n            {\n              \"type\": \"button\",\n              \"action\": {\n                \"type\": \"postback\",\n                \"label\": \"ติดต่อคนขาย\",\n                \"data\": \"%s\"\n              },\n              \"color\": \"#F67878\",\n              \"style\": \"primary\"\n            }\n          ]\n        }\n      }'''"
    ],
    "functions": [
        "regex_nodigits_new",
        "replace_text",
        "remove_stopword",
        "remove_stopword2",
        "remove_list",
        "remove_stopword3",
        "remove_list2",
        "index",
        "aek",
        "callback",
        "event_handle",
        "getdata",
        "flexmessage",
        "handle_text",
        "handle_postback",
        "handle_location",
        "getcaseflex",
        "getdistace"
    ],
    "classes": []
}