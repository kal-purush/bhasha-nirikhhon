{
    "identifiers": [
        "json",
        "discord",
        "random",
        "randint",
        "discord",
        "ext",
        "commands",
        "utilities",
        "utilities",
        "discord",
        "ext",
        "commands",
        "errors",
        "MissingPermissions",
        "RoleNotFound",
        "Config",
        "commands",
        "Cog",
        "command_attrs",
        "hidden",
        "bot",
        "commands",
        "Bot",
        "bot",
        "utilities",
        "database",
        "bot",
        "loop",
        "commands",
        "CooldownMapping",
        "from_cooldown",
        "commands",
        "BucketType",
        "member",
        "open",
        "f",
        "Config",
        "json",
        "loads",
        "f",
        "read",
        "commands",
        "Cog",
        "listener",
        "message",
        "message",
        "author",
        "bot",
        "message",
        "author",
        "id",
        "bot",
        "user",
        "id",
        "cd_mapping",
        "get_bucket",
        "message",
        "bucket",
        "update_rate_limit",
        "message",
        "author",
        "id",
        "db",
        "fetch",
        "aId",
        "user_infos",
        "db",
        "execute",
        "aId",
        "message",
        "author",
        "name",
        "db",
        "execute",
        "aId",
        "user_infos",
        "bot",
        "get_channel",
        "randint",
        "cfg",
        "coinsmin",
        "cfg",
        "coinsmax",
        "randint",
        "bot",
        "cfg",
        "min_message_xp",
        "bot",
        "cfg",
        "max_message_xp",
        "user_infos",
        "expectedXP",
        "current_xp",
        "utilities",
        "rankcard",
        "neededxp",
        "user_infos",
        "db",
        "fetch",
        "user_infos",
        "expectedXP",
        "spark",
        "aId",
        "up",
        "lvUpChannel",
        "send",
        "message",
        "author",
        "mention",
        "rank",
        "spark",
        "expectedXP",
        "delete_after",
        "db",
        "fetch",
        "rank",
        "discord",
        "utils",
        "find",
        "r",
        "r",
        "name",
        "rankNames",
        "message",
        "guild",
        "roles",
        "rankNames",
        "x",
        "x",
        "rankNames",
        "x",
        "cfg",
        "ranks",
        "x",
        "rankNames",
        "rankNames",
        "nextRank",
        "message",
        "author",
        "roles",
        "message",
        "author",
        "add_roles",
        "nextRank",
        "len",
        "prevRank",
        "discord",
        "utils",
        "find",
        "r",
        "r",
        "name",
        "i",
        "message",
        "guild",
        "roles",
        "i",
        "prevRank",
        "r",
        "prevRank",
        "r",
        "message",
        "author",
        "roles",
        "message",
        "author",
        "remove_roles",
        "r",
        "i",
        "isinstance",
        "i",
        "MissingPermissions",
        "lvUpChannel",
        "send",
        "message",
        "author",
        "mention",
        "isinstance",
        "i",
        "RoleNotFound",
        "lvUpChannel",
        "send",
        "message",
        "author",
        "mention",
        "i",
        "e",
        "e",
        "db",
        "fetch",
        "current_xp",
        "current_xp",
        "expectedXP",
        "spark",
        "aId",
        "bot",
        "commands",
        "Bot",
        "bot",
        "add_cog",
        "Levelup",
        "bot"
    ],
    "literals": [
        "'config.json'",
        "'r'",
        "f\"SELECT rank, xp, xptotal, id, iventory_id FROM users WHERE id=('{aId}')\"",
        "f\"\"\"\n                    INSERT INTO users (id, rank, xp, xptotal, user_name) \n                    VALUES (\\'{aId}\\', \\'0\\', \\'0\\', \\'0\\', \\'{message.author.name}\\')\n                \"\"\"",
        "'{\"Carro\": {\"ids\": []}, \"Badge\": {\"rank\": [], \"equipe\": [], \"moldura\": [], \"apoiador\": []}, \"Banner\": {\"ids\": []}, \"Titulo\": {\"ids\": []}, \"Moldura\": {\"ids\": []}, \"Utilizavel\": {\"ids\": []}}'",
        "\"> %s__, você subiu para o nível %s!__ \\n> `+%s sparks +%s pontos de experiência.`\"",
        "\"Novato\"",
        "\"qualquercoisa\"",
        "\"> %s `Eu não tenho permissão para adicionar/remover cargos, reporte à um ADM.`\"",
        "\"> %s `Não consegui encontrar o cargo, favor, reporte à um ADM.`\""
    ],
    "variables": [
        "bot",
        "db",
        "cd_mapping",
        "cfg",
        "bucket",
        "aId",
        "user_infos",
        "current_xp",
        "lvUpChannel",
        "spark",
        "expectedXP",
        "current_xp",
        "up",
        "rank",
        "rankNames",
        "nextRank",
        "prevRank",
        "prevRank"
    ],
    "comments": [
        "CLASS LEVELING",
        "self.brake = []",
        "result = await self.db.fetch(f\"SELECT rank, xp, xptotal FROM users WHERE id=('{aId}')\")",
        "print([x[0] for x in rankNames])",
        "print(prevRank)",
        "await self.lvUpChannel.send(\"> `%s, você tem um cargo que não deveria ter... (≖_≖ ) `\" % (message.author.mention, ), delete_after=10)",
        "await self.lvUpChannel.send(\"+\"*10+prevRole +\"+\"*10)",
        "else:",
        "print(\"Cargos adicionados/removidos com sucesso.\")",
        "rank2 = await self.db.fetch(f'SELECT lv, name, r, g, b FROM ranks WHERE lv <={",
        "user_infos[0][0]} ORDER BY lv DESC')",
        "self.brake.append(message.author.id)",
        "await asyncsleep(randint(0, 5))  #",
        "self.brake.remove(message.author.id)",
        ", guilds=[ discord.Object(id=943170102759686174), discord.Object(id=1010183521907789977)]"
    ],
    "docstrings": [
        "\"\"\"\n                    UPDATE iventory set itens = \\'%s\\' WHERE iventory_id = (\n                        SELECT iventory_id FROM users WHERE id = '%s'\n                    )\n                    \"\"\"",
        "\"\"\"\n                        UPDATE users SET \n                        rank = %s, \n                        xptotal = ( xptotal + %s ), \n                        spark = ( spark + %s ) WHERE id = ( \\'%s\\' ) RETURNING rank\n                    \"\"\"",
        "\"\"\"\n                        SELECT name FROM ranks WHERE lvmin <= %s ORDER BY lv DESC\n                    \"\"\"",
        "\"\"\"\n                    UPDATE users SET xp=(%s), xptotal=(xptotal + %s), spark=(spark + %s) WHERE id=\\'%s\\'\n                \"\"\""
    ],
    "functions": [
        "on_message",
        "setup"
    ],
    "classes": [
        "Levelup"
    ]
}