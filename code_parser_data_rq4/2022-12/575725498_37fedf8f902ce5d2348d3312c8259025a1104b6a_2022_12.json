{
    "identifiers": [
        "selenium",
        "webdriver",
        "re",
        "selenium",
        "webdriver",
        "common",
        "by",
        "By",
        "time",
        "selenium",
        "webdriver",
        "support",
        "ui",
        "WebDriverWait",
        "pandas",
        "pd",
        "sqlite3",
        "pd",
        "read_excel",
        "df",
        "to_list",
        "webdriver",
        "Firefox",
        "driver",
        "get",
        "movie_name",
        "movie_names",
        "driver",
        "find_element",
        "By",
        "CLASS_NAME",
        "searchBox",
        "clear",
        "searchBox",
        "send_keys",
        "movie_name",
        "time",
        "sleep",
        "driver",
        "find_element",
        "By",
        "CLASS_NAME",
        "submitButton",
        "click",
        "driver",
        "find_elements",
        "By",
        "XPATH",
        "releaseyear",
        "search_result",
        "releaseyear",
        "find_element",
        "By",
        "XPATH",
        "text",
        "title",
        "movie_name",
        "releaseyear",
        "get_attribute",
        "years",
        "append",
        "year",
        "years",
        "max",
        "years",
        "result",
        "search_result",
        "result",
        "find_element",
        "By",
        "XPATH",
        "text",
        "result",
        "find_element",
        "By",
        "XPATH",
        "title",
        "movie_name",
        "result",
        "get_attribute",
        "most_recent_year",
        "movie_url",
        "get_attribute",
        "driver",
        "get",
        "url",
        "driver",
        "find_element",
        "By",
        "XPATH",
        "text",
        "driver",
        "find_element",
        "By",
        "XPATH",
        "text",
        "driver",
        "find_element",
        "By",
        "XPATH",
        "get_attribute",
        "driver",
        "find_element",
        "By",
        "XPATH",
        "get_attribute",
        "driver",
        "find_element",
        "By",
        "XPATH",
        "text",
        "driver",
        "find_elements",
        "By",
        "XPATH",
        "movie_name",
        "most_recent_year",
        "idx",
        "review",
        "all_reviews",
        "review",
        "get_attribute",
        "idx",
        "review",
        "idx",
        "review",
        "idx",
        "review",
        "idx",
        "review",
        "idx",
        "review",
        "idx",
        "review",
        "movie_name",
        "audiencescore",
        "tomatometerscore",
        "genre",
        "rating",
        "storyline",
        "review_1",
        "review_2",
        "review_3",
        "review_4",
        "review_5",
        "status",
        "insert_data",
        "data",
        "movie_match",
        "movie_name",
        "movie_name",
        "audiencescore",
        "tomatometerscore",
        "genre",
        "rating",
        "storyline",
        "review_1",
        "review_2",
        "review_3",
        "review_4",
        "review_5",
        "status",
        "insert_data",
        "data",
        "driver",
        "close",
        "driver",
        "quit",
        "data",
        "c",
        "executemany",
        "data",
        "sqlite3",
        "connect",
        "conn",
        "cursor",
        "c",
        "execute",
        "get_movie_details",
        "conn",
        "commit",
        "conn",
        "close",
        "exit"
    ],
    "literals": [
        "'movies.xlsx'",
        "\"Movie\"",
        "'https://www.rottentomatoes.com/'",
        "'search-text'",
        "'search-submit'",
        "'//search-page-result[@type=\"movie\"]/ul/search-page-media-row'",
        "'.//a[@slot=\"title\"]'",
        "'releaseyear'",
        "'.//a[@slot=\"title\"]'",
        "'.//a[@slot=\"title\"]'",
        "'releaseyear'",
        "'href'",
        "'//div[@class=\"meta-value genre\"]'",
        "'//div[@id=\"movieSynopsis\"]'",
        "'//score-board[@ class=\"scoreboard\"]'",
        "'audiencescore'",
        "'//score-board[@ class=\"scoreboard\"]'",
        "'tomatometerscore'",
        "'//score-board[@class=\"scoreboard\"]/a[@class=\"scoreboard__link scoreboard__link--audience\"]'",
        "'//review-speech-balloon'",
        "\"(\"",
        "\")\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'reviewquote'",
        "'success'",
        "'No exact match found'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'INSERT INTO movies VALUES (?,?,?,?,?,?,?,?,?,?,?,?)'",
        "\"data inserted !!!\"",
        "\"__main__\"",
        "'automation.db'"
    ],
    "variables": [
        "df",
        "movie_names",
        "driver",
        "searchBox",
        "submitButton",
        "search_result",
        "years",
        "title",
        "year",
        "most_recent_year",
        "movie_match",
        "title",
        "movie_url",
        "movie_match",
        "url",
        "genre",
        "storyline",
        "audiencescore",
        "tomatometerscore",
        "rating",
        "all_reviews",
        "movie_name",
        "review_1",
        "review_2",
        "review_3",
        "review_4",
        "review_5",
        "review",
        "review_1",
        "review_2",
        "review_2",
        "review_3",
        "review_4",
        "review_5",
        "status",
        "data",
        "status",
        "movie_name",
        "audiencescore",
        "tomatometerscore",
        "genre",
        "rating",
        "storyline",
        "review_1",
        "review_2",
        "review_3",
        "review_4",
        "review_5",
        "data",
        "conn",
        "c"
    ],
    "comments": [
        "read movie name",
        "load firefox driver",
        "get rottentomatoes url",
        "Let the user actually see something!",
        "search-result movie only",
        "to get most recent year from movie list",
        "to check same movie name",
        "most recent release movie",
        "insert the extract data into sqllite3 db",
        "if movies does not found.",
        "insert the extract data into sqllite3 db",
        "data = [(genre,rating,storyline)]",
        "creating database"
    ],
    "docstrings": [
        "'''CREATE TABLE  IF NOT EXISTS movies\n                (movie_name text, audiencescore text,tomatometerscore text, genre text, rating text, storyline text,\n                review_1 text, review_2 text, review_3 text, review_4 text, review_5 text, status text)'''"
    ],
    "functions": [
        "get_movie_details",
        "insert_data"
    ],
    "classes": []
}