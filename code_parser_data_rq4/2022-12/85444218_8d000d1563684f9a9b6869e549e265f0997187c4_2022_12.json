{
    "identifiers": [
        "Rule",
        "SchematicsException",
        "chain",
        "AngularBuilder",
        "TargetDefinition",
        "updateWorkspace",
        "posix",
        "path",
        "Schema",
        "EnvironmentOptions",
        "options",
        "updateWorkspace",
        "workspace",
        "workspace",
        "options",
        "project",
        "SchematicsException",
        "options",
        "project",
        "log",
        "options",
        "options",
        "project",
        "buildTarget",
        "log",
        "options",
        "project",
        "project",
        "path",
        "project",
        "chain",
        "generateConfigurationEnvironments",
        "buildTarget",
        "serverTarget",
        "sourceRoot",
        "options",
        "path",
        "tree",
        "context",
        "tree",
        "path",
        "context",
        "path",
        "tree",
        "path",
        "ENVIRONMENT_FILE_CONTENT",
        "text",
        "_",
        "context",
        "context",
        "text",
        "generateConfigurationEnvironments",
        "buildTarget",
        "serverTarget",
        "sourceRoot",
        "projectName",
        "buildTarget",
        "AngularBuilder",
        "log",
        "projectName",
        "buildTarget",
        "serverTarget",
        "serverTarget",
        "AngularBuilder",
        "log",
        "projectName",
        "buildTarget",
        "path",
        "sourceRoot",
        "ENVIRONMENTS_DIRECTORY",
        "createIfMissing",
        "defaultFilePath",
        "buildTarget",
        "serverTarget",
        "configurationEntries",
        "configurationOptions",
        "name",
        "buildTarget",
        "path",
        "sourceRoot",
        "ENVIRONMENTS_DIRECTORY",
        "name",
        "configurationOptions",
        "replacements",
        "value",
        "value",
        "defaultFilePath",
        "existing",
        "existing",
        "configurationFilePath",
        "log",
        "defaultFilePath",
        "configurationFilePath",
        "log",
        "name",
        "defaultFilePath",
        "configurationFilePath",
        "existing",
        "replacements",
        "defaultFilePath",
        "configurationFilePath",
        "addedFiles",
        "configurationFilePath",
        "addedFiles",
        "configurationFilePath",
        "createIfMissing",
        "configurationFilePath"
    ],
    "literals": [
        "'@angular-devkit/schematics'",
        "'@schematics/angular/utility'",
        "'path'",
        "'./schema'",
        "'environments'",
        "'export const environment = {};\\n'",
        "Project name \"${options.project}\" doesn't not exist.",
        "'projectType'",
        "'application'",
        "'error'",
        "'Only application project types are support by this schematic.'",
        "Project \"${options.project}\" has a \"projectType\" of \"${type}\".",
        "Project \"${options.project}\" has no \"projectType\" defined.",
        "'build'",
        "'error'",
        "No \"build\" target found for project \"${options.project}\".",
        "' A \"build\" target is required to generate environment files.'",
        "'server'",
        "'src'",
        "string",
        "Skipping creation of already existing environment file \"${path}\".",
        "'info'",
        "'warn'",
        "'error'",
        "string",
        "string",
        "string",
        "'warn'",
        "\"build\" target found for project \"${projectName}\" has a third-party builder \"${buildTarget.builder}\".",
        "' The generated project options may not be compatible with this builder.'",
        "'warn'",
        "\"server\" target found for project \"${projectName}\" has a third-party builder \"${buildTarget.builder}\".",
        "' The generated project options may not be compatible with this builder.'",
        "'environment.ts'",
        "string",
        "environment.${name}.ts",
        "'fileReplacements'",
        "string",
        "string",
        "'info'",
        "Skipping addition of already existing file replacements option for \"${defaultFilePath}\" to \"${configurationFilePath}\".",
        "'warn'",
        "Configuration \"${name}\" has a file replacements option for \"${defaultFilePath}\" but with a different replacement.",
        "Expected \"${configurationFilePath}\" but found \"${existing.with}\". This may result in unexpected build behavior."
    ],
    "variables": [
        "ENVIRONMENTS_DIRECTORY",
        "ENVIRONMENT_FILE_CONTENT",
        "project",
        "buildTarget",
        "serverTarget",
        "sourceRoot",
        "defaultFilePath",
        "configurationEntries",
        "addedFiles",
        "name",
        "configurationOptions",
        "configurationFilePath",
        "replacements",
        "existing"
    ],
    "comments": [
        "The generator needs to be iterated prior to returning to ensure all workspace changes that occur",
        "within the generator are present for `updateWorkspace` when it writes the workspace file.",
        "Create default environment file",
        "Invalid configuration",
        "Default configuration will use the default environment file",
        "Add file replacement option entry for the configuration environment file",
        "Create configuration specific environment file if not already added"
    ],
    "docstrings": [
        "* @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license"
    ],
    "functions": [
        "createIfMissing",
        "log"
    ],
    "classes": []
}