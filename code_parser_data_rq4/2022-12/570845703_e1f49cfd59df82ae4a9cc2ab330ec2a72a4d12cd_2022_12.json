{
    "identifiers": [
        "fetch",
        "Command",
        "XMLParser",
        "util",
        "chalk",
        "updatePackageScripts",
        "addDockerOverrides",
        "updateGradleDependencies",
        "updateOldCypressConfig",
        "util",
        "require",
        "XMLParser",
        "program",
        "program",
        "planKey",
        "latestSuccess",
        "analyzedRun",
        "chalk",
        "analyzedRun",
        "planKey",
        "fetch",
        "planKey",
        "latestSuccess",
        "token",
        "successfulBuildResponse",
        "xmlParser",
        "successfulBuildXml",
        "successfulBuildData",
        "fetch",
        "planKey",
        "analyzedRun",
        "token",
        "analyzedBuildResponse",
        "xmlParser",
        "analyzedBuildXml",
        "analyzedBuildData",
        "chalk",
        "analyzedCommit",
        "exec",
        "analyzedRun",
        "analyzedCommit",
        "branchStderr",
        "chalk",
        "branchStderr",
        "chalk",
        "exec",
        "installStderr",
        "chalk",
        "installStderr",
        "chalk",
        "updatePackageScripts",
        "lastSuccessfulCommit",
        "chalk",
        "chalk",
        "addDockerOverrides",
        "chalk",
        "chalk",
        "updateGradleDependencies",
        "chalk",
        "chalk",
        "updateOldCypressConfig",
        "chalk",
        "chalk",
        "exec",
        "commitStderr",
        "chalk",
        "commitStderr",
        "chalk",
        "chalk",
        "exec",
        "analyzedRun",
        "pushStderr",
        "chalk",
        "pushStderr",
        "chalk",
        "chalk",
        "chalk",
        "exec",
        "checkoutStderr",
        "chalk",
        "checkoutStderr",
        "chalk"
    ],
    "literals": [
        "'@whatwg-node/fetch'",
        "'commander'",
        "'fast-xml-parser'",
        "'util'",
        "'chalk'",
        "'../file-updates/package-scripts.js'",
        "'../file-updates/docker-overrides.js'",
        "'../file-updates/gradle-dependencies.js'",
        "'../file-updates/cypress-config.js'",
        "'child_process'",
        "'branch'",
        "'<planKey>'",
        "'Bamboo plan key to work on'",
        "'<latestSuccess>'",
        "'Latest successful run before analyzed run'",
        "'<analyzedRun>'",
        "'Analyzed run'",
        "'-t, --token <token>'",
        "'Bamboo access token'",
        "'-n, --new-cypress'",
        "'If the new cypress setup should be used'",
        "Setting up analysis for Build ${analyzedRun} of Plan ${planKey}",
        "https://bamboobruegge.in.tum.de/rest/api/latest/result/${planKey}-${latestSuccess}",
        "Bearer ${token}",
        "https://bamboobruegge.in.tum.de/rest/api/latest/result/${planKey}-${analyzedRun}",
        "Bearer ${token}",
        "Creating branch for ${analyzedCommit}",
        "git checkout -b flaky-history/build-${analyzedRun} ${analyzedCommit}",
        "Installing flaky test detection dependencies",
        "cd src/test/cypress && npm i -D @heddendorp/coverage-git-compare @heddendorp/cypress-plugin-multilanguage-coverage",
        "Adding flaky test detection script to package.json",
        "Done!",
        "Adding Docker override files",
        "Done!",
        "Adding gradle dependencies",
        "Done!",
        "Adding cypress plugin",
        "Done!",
        "Committing changes",
        "git add . && git commit -m \"Add flaky test detection\"",
        "Done!",
        "Pushing changes",
        "git push --set-upstream origin flaky-history/build-${analyzedRun}",
        "Done!",
        "Branch created!",
        "Switching back to main branch",
        "git checkout develop",
        "Done!"
    ],
    "variables": [
        "exec",
        "xmlParser",
        "successfulBuildResponse",
        "successfulBuildXml",
        "successfulBuildData",
        "lastSuccessfulCommit",
        "analyzedBuildResponse",
        "analyzedBuildXml",
        "analyzedBuildData",
        "analyzedCommit",
        "branchStdout",
        "branchStderr",
        "installStdout",
        "installStderr",
        "commitStdout",
        "commitStderr",
        "pushStdout",
        "pushStderr",
        "checkoutStdout",
        "checkoutStderr"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "registerCreateBranchCommand"
    ],
    "classes": []
}