{
    "identifiers": [
        "os",
        "sys",
        "argparse",
        "re",
        "json",
        "logging",
        "gen_doc",
        "extract_code_blocks_from_docstr",
        "logging",
        "getLogger",
        "logger",
        "handlers",
        "logger",
        "handlers",
        "logging",
        "StreamHandler",
        "logger",
        "addHandler",
        "setFormatter",
        "logging",
        "Formatter",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "api_info_json_filename",
        "api_info_dict",
        "open",
        "api_info_json_filename",
        "f",
        "json",
        "load",
        "f",
        "k",
        "api_info",
        "api_info_dict",
        "items",
        "n",
        "api_info",
        "get",
        "k",
        "logger",
        "info",
        "len",
        "api_info_dict",
        "api_info_json_filename",
        "logger",
        "info",
        "len",
        "api_name_2_id_map",
        "cnrstfilename",
        "re",
        "compile",
        "flags",
        "re",
        "IGNORECASE",
        "open",
        "cnrstfilename",
        "rstf",
        "rstf",
        "readlines",
        "lineno",
        "line",
        "rst_lines",
        "pat",
        "match",
        "line",
        "mo",
        "len",
        "mo",
        "group",
        "mo",
        "group",
        "src",
        "src",
        "split",
        "src",
        "copy_from_info",
        "append",
        "lineno",
        "indent",
        "src_api",
        "strip",
        "cb_name",
        "strip",
        "cb_name",
        "rst_lines",
        "copy_from_info",
        "cb_name",
        "codeblocks",
        "cb",
        "codeblocks",
        "cb_name",
        "cb",
        "get",
        "cb",
        "cb_name",
        "isnumeric",
        "cb_name",
        "cb",
        "codeblocks",
        "cb_ind",
        "cb",
        "get",
        "cb",
        "cf_info",
        "api_name_2_id_map",
        "api_info_dict",
        "cf_info",
        "api_name_2_id_map",
        "api_info_dict",
        "api_name_2_id_map",
        "cf_info",
        "api_info",
        "extract_code_blocks_from_docstr",
        "api_info",
        "codeblocks",
        "logger",
        "warning",
        "cf_info",
        "logger",
        "warning",
        "api_info",
        "cf_info",
        "codeblocks",
        "cb_name",
        "find_codeblock_needed_by_name",
        "cb_name",
        "codeblocks",
        "logger",
        "warning",
        "cf_info",
        "cnrstfilename",
        "read_rst_lines_and_copy_info",
        "cnrstfilename",
        "copy_from_info",
        "logger",
        "info",
        "cnrstfilename",
        "copy_from_info",
        "cf_info",
        "copy_from_info",
        "logger",
        "debug",
        "cf_info",
        "find_codeblock_needed",
        "cf_info",
        "cb_need",
        "logger",
        "warning",
        "cnrstfilename",
        "cf_info",
        "cf_info",
        "cb_new",
        "append",
        "cb_new",
        "append",
        "indent",
        "cf_info",
        "cb_new",
        "append",
        "indent",
        "cf_info",
        "cb_new",
        "append",
        "indent",
        "line",
        "cb_need",
        "splitlines",
        "cb_new",
        "append",
        "indent",
        "line",
        "cf_info",
        "join",
        "cb_new",
        "update_needed",
        "logger",
        "info",
        "cnrstfilename",
        "open",
        "cnrstfilename",
        "f",
        "f",
        "writelines",
        "rst_lines",
        "copy_from_info",
        "logger",
        "warning",
        "cnrstfilename",
        "copy_from_info",
        "rootdir",
        "ext",
        "action",
        "instert_codes_into_cn_rst_if_need",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "rootdir",
        "f",
        "files",
        "f",
        "endswith",
        "ext",
        "action",
        "os",
        "path",
        "join",
        "root",
        "f",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "dest",
        "action",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "help",
        "len",
        "sys",
        "argv",
        "parser",
        "print_help",
        "sys",
        "exit",
        "parser",
        "parse_args",
        "args",
        "parse_args",
        "args",
        "debug",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "load_api_info",
        "args",
        "api_info",
        "filter_all_files",
        "args",
        "dir"
    ],
    "literals": [
        "\"%(asctime)s - %(funcName)s:%(lineno)d - %(levelname)s - %(message)s\"",
        "'r'",
        "'all_names'",
        "'load %d api_infos from %s'",
        "'api_name_2_id_map has %d items'",
        "r\"^(\\s*)COPY-FROM\\s*:\\s*(.*)$\"",
        "'r'",
        "':'",
        "':'",
        "'lineno'",
        "'indent'",
        "'src_api'",
        "'cb_name'",
        "'name'",
        "'id'",
        "'src_api'",
        "'src_api'",
        "'docstring'",
        "'docstring'",
        "'found none codeblocks for %s'",
        "'and the docstring is: %s'",
        "'docstring'",
        "'cb_name'",
        "'%s not in api_name_2_id_map'",
        "'src_api'",
        "\"found copy-from for %s: %s\"",
        "'processing %s'",
        "'not found code-block for %s: %s'",
        "'indent'",
        "''",
        "' '",
        "'.. code-block:: python'",
        "'cb_name'",
        "' '",
        "':name: '",
        "'cb_name'",
        "''",
        "'codes'",
        "' '",
        "'lineno'",
        "\"\\n\"",
        "'update '",
        "'w'",
        "'not found any code-blocks for %s: %s'",
        "'_cn.rst'",
        "'copy code-blocks from en api doc-strings.'",
        "'--debug'",
        "'debug'",
        "\"store_true\"",
        "'--api-info'",
        "'api_info'",
        "'the api info json file.'",
        "'api_info_all.json'",
        "'dir'",
        "'the file directory'",
        "'.'",
        "\"__main__\""
    ],
    "variables": [
        "api_info_dict",
        "api_name_2_id_map",
        "logger",
        "api_info_dict",
        "api_name_2_id_map",
        "n",
        "copy_from_info",
        "rst_lines",
        "pat",
        "rst_lines",
        "mo",
        "indent",
        "src",
        "src_api",
        "cb_name",
        "src_api",
        "cb_name",
        "cb_ind",
        "api_info",
        "codeblocks",
        "cb_name",
        "rst_lines",
        "copy_from_info",
        "update_needed",
        "cb_need",
        "cb_new",
        "indent",
        "rst_lines",
        "update_needed",
        "parser",
        "args",
        "args"
    ],
    "comments": [
        "! /bin/env python",
        "we assume the first handler is the one we want to configure",
        "update",
        "readonly",
        "insert a empty line in the frontend"
    ],
    "docstrings": [
        "'''\ncopy code-blocks from en api doc-strings.\n'''",
        "\"\"\"\n    Analyse the cn rst file, if need, extract code-blocks from en docstring.\n    \"\"\"",
        "\"\"\"\n    find all the _en.html file, and do the action.\n    \"\"\"",
        "\"\"\"\n    Parse input arguments\n    \"\"\""
    ],
    "functions": [
        "load_api_info",
        "read_rst_lines_and_copy_info",
        "find_codeblock_needed_by_name",
        "find_codeblock_needed",
        "instert_codes_into_cn_rst_if_need",
        "filter_all_files",
        "parse_args"
    ],
    "classes": []
}