{
    "identifiers": [
        "SwaggerUI",
        "SwaggerUI",
        "opts",
        "SwaggerUI",
        "SwaggerUI",
        "propName",
        "genName",
        "a",
        "a",
        "propName",
        "operation",
        "parameter",
        "name1",
        "name2",
        "prop",
        "prop",
        "system",
        "stateKey",
        "system",
        "index",
        "options",
        "authDefinitionKey",
        "username",
        "password",
        "authDefinitionKey",
        "apiKeyValue"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"example\"",
        "\"model\"",
        "\"list\"",
        "\"full\"",
        "\"none\"",
        "string",
        "\"agate\"",
        "\"arta\"",
        "\"monokai\"",
        "\"nord\"",
        "\"obsidian\"",
        "\"tomorrow-night\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"get\"",
        "\"put\"",
        "\"post\"",
        "\"delete\"",
        "\"options\"",
        "\"head\"",
        "\"patch\"",
        "\"trace\"",
        "\"alpha\"",
        "\"method\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "Type definitions for swagger-ui 3.47",
        "Project: https://github.com/swagger-api/swagger-ui",
        "Definitions by: Julian Pfeil <https://github.com/juarrow>",
        "Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped",
        "Core",
        "Plugin system",
        "Display",
        "Network",
        "Macros",
        "Authorization"
    ],
    "docstrings": [
        "* URL to fetch external configuration document from.",
        "* REQUIRED if domNode is not provided. The ID of a DOM element inside which SwaggerUI will put its user interface.",
        "*  REQUIRED if dom_id is not provided. The HTML DOM element inside which SwaggerUI will put its user interface. Overrides dom_id.",
        "* A JavaScript object describing the OpenAPI definition. When used, the url parameter will not be parsed. This is useful for testing manually-generated definitions without hosting them",
        "* The URL pointing to API definition (normally swagger.json or swagger.yaml). Will be ignored if urls or spec is used.",
        "* An array of API definition objects ([{url: \"<url1>\", name: \"<name1>\"},{url: \"<url2>\", name: \"<name2>\"}])\n         * used by Topbar plugin. When used and Topbar plugin is enabled, the url parameter will not be parsed.\n         * Names and URLs must be unique among all items in this array, since they're used as identifiers.",
        "* The name of a component available via the plugin system to use as the top-level layout\n         * for Swagger UI.",
        "* An array of plugin functions to use in Swagger UI.",
        "* An array of presets to use in Swagger UI.\n         * Usually, you'll want to include ApisPreset if you use this option.",
        "* If set to true, enables deep linking for tags and operations.\n         * See the Deep Linking documentation for more information.",
        "* Controls the display of operationId in operations list. The default is false.",
        "* The default expansion depth for models (set to -1 completely hide the models).",
        "* The default expansion depth for the model on the model-example section.",
        "* Controls how the model is shown when the API is first rendered.\n         * (The user can always switch the rendering for a given model by clicking the\n         * 'Model' and 'Example Value' links.)",
        "* Controls the display of the request duration (in milliseconds) for \"Try it out\" requests.",
        "* Controls the default expansion setting for the operations and tags.\n         * It can be 'list' (expands only the tags), 'full' (expands the tags and operations)\n         * or 'none' (expands nothing).",
        "* If set, enables filtering.\n         * The top bar will show an edit box that you can use to filter the tagged operations that are shown.\n         * Can be Boolean to enable or disable, or a string, in which case filtering will be enabled\n         * using that string as the filter expression.\n         * Filtering is case sensitive matching the filter expression anywhere inside the tag.",
        "* If set, limits the number of tagged operations displayed to at most this many.\n         * The default is to show all operations.",
        "* Apply a sort to the operation list of each API.\n         * It can be 'alpha' (sort by paths alphanumerically),\n         * 'method' (sort by HTTP method) or a function (see Array.prototype.sort() to know how sort function works).\n         * Default is the order returned by the server unchanged.",
        "* Controls the display of vendor extension (x-) fields and values for Operations,\n         * Parameters, Responses, and Schema.",
        "* Controls the display of extensions (pattern, maxLength, minLength, maximum, minimum) fields\n         * and values for Parameters.",
        "* Apply a sort to the tag list of each API.\n         * It can be 'alpha' (sort by paths alphanumerically)\n         * or a function (see Array.prototype.sort() to learn how to write a sort function).\n         * Two tag name strings are passed to the sorter for each pass.\n         * Default is the order determined by Swagger UI.",
        "* When enabled, sanitizer will leave style, class and data-* attributes untouched\n         * on all HTML Elements declared inside markdown strings.\n         * This parameter is Deprecated and will be removed in 4.0.0.\n         * @deprecated",
        "* Provides a mechanism to be notified when Swagger UI has finished rendering a newly provided definition.",
        "* Set to false to deactivate syntax highlighting of payloads and cURL command,\n         * can be otherwise an object with the activate and theme properties.",
        "* Whether syntax highlighting should be activated or not.",
        "* Highlight.js syntax coloring theme to use. (Only these 6 styles are available.)",
        "* Controls whether the \"Try it out\" section should be enabled by default.",
        "* This is the default configuration section for the the requestSnippets plugin.",
        "* e.g. only show curl bash = [\"curl_bash\"]",
        "* OAuth redirect URL.",
        "* MUST be a function. Function to intercept remote definition,\n         * \"Try it out\", and OAuth 2.0 requests.\n         * Accepts one argument requestInterceptor(request) and must return the modified request,\n         * or a Promise that resolves to the modified request.",
        "* MUST be a function. Function to intercept remote definition,\n         * \"Try it out\", and OAuth 2.0 responses.\n         * Accepts one argument responseInterceptor(response) and must return the modified response,\n         * or a Promise that resolves to the modified response.",
        "* If set to true, uses the mutated request returned from a requestInterceptor\n         * to produce the curl command in the UI, otherwise the request\n         * beforethe requestInterceptor was applied is used.",
        "* List of HTTP methods that have the \"Try it out\" feature enabled.\n         * An empty array disables \"Try it out\" for all operations.\n         * This does not filter the operations from the display.",
        "* By default, Swagger UI attempts to validate specs against swagger.io's online validator.\n         * You can use this parameter to set a different validator URL,\n         * for example for locally deployed validators (Validator Badge).\n         * Setting it to either none, 127.0.0.1 or localhost will disable validation.",
        "* If set to true, enables passing credentials, as defined in the Fetch standard,\n         * in CORS requests that are sent by the browser.\n         * Note that Swagger UI cannot currently set cookies cross-domain (see swagger-js#1163)\n         * - as a result, you will have to rely on browser-supplied\n         * cookies (which this setting enables sending) that Swagger UI cannot control.",
        "* Function to set default values to each property in model.\n         * Accepts one argument modelPropertyMacro(property), property is immutable",
        "* Function to set default value to parameters.\n         * Accepts two arguments parameterMacro(operation, parameter).\n         * Operation and parameter are objects passed for context, both remain immutable",
        "* If set to true, it persists authorization data and it would not be lost on browser close/refresh",
        "* See https://swagger.io/docs/open-source-tools/swagger-ui/customization/plugin-api/",
        "* Provide Swagger UI with information about your OAuth server - see the\n     * OAuth 2.0 documentation for more information.\n     *\n     * @param options",
        "* Programmatically set values for a Basic authorization scheme.\n     *\n     * @param authDefinitionKey\n     * @param username\n     * @param password",
        "* Programmatically set values for an API key or Bearer authorization scheme.\n     * In case of OpenAPI 3.0 Bearer scheme, apiKeyValue must contain just the token\n     * itself without the Bearer prefix.\n     *\n     * @param authDefinitionKey\n     * @param apiKeyValue"
    ],
    "functions": [],
    "classes": []
}