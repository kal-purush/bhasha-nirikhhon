{
    "identifiers": [
        "re",
        "gdb",
        "time",
        "math",
        "logging",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "logging",
        "getLogger",
        "name",
        "gdb",
        "Breakpoint",
        "avr",
        "kw",
        "SyncCatch",
        "temporary",
        "kw",
        "avr",
        "avr",
        "gdb",
        "newest_frame",
        "read_var",
        "gdbLogger",
        "info",
        "avr",
        "period",
        "gdb",
        "Breakpoint",
        "addr",
        "mask",
        "kw",
        "PortWatch",
        "hex",
        "addr",
        "gdb",
        "BP_WATCHPOINT",
        "kw",
        "mask",
        "pins",
        "ddrs",
        "ports",
        "inf",
        "while1",
        "period",
        "inf",
        "period",
        "gdb",
        "Breakpoint",
        "source",
        "line",
        "while1",
        "bp",
        "inferior",
        "architecture",
        "name",
        "inferior",
        "is_valid",
        "n",
        "bp",
        "n",
        "gdb",
        "execute",
        "bp",
        "n",
        "period",
        "runForNIterations",
        "math",
        "ceil",
        "n",
        "period",
        "gdbLogger",
        "warning",
        "n",
        "runForNIterations",
        "port",
        "mask",
        "port",
        "pinMapping",
        "pinMapping",
        "port",
        "pinMapping",
        "port",
        "PortWatch",
        "port",
        "mask",
        "temporary",
        "gdb",
        "execute",
        "bp",
        "offset",
        "format",
        "from_bytes",
        "inferior",
        "read_memory",
        "offset",
        "byteorder",
        "endian",
        "bits",
        "memoryToBits",
        "pins",
        "memoryToBits",
        "ports",
        "memoryToBits",
        "pins",
        "memoryToBits",
        "ports",
        "memoryToBits",
        "pins",
        "memoryToBits",
        "ports",
        "memoryToBits",
        "pins",
        "memoryToBits",
        "ports",
        "pina",
        "i",
        "d",
        "porta",
        "i",
        "i",
        "d",
        "memoryToBits",
        "ddrs",
        "pinb",
        "i",
        "d",
        "portb",
        "i",
        "i",
        "d",
        "memoryToBits",
        "ddrs",
        "pinc",
        "i",
        "d",
        "portc",
        "i",
        "i",
        "d",
        "memoryToBits",
        "ddrs",
        "pind",
        "i",
        "d",
        "portd",
        "i",
        "i",
        "d",
        "memoryToBits",
        "ddrs",
        "join",
        "v",
        "v",
        "_",
        "D",
        "join",
        "v",
        "v",
        "_",
        "B",
        "join",
        "d",
        "_",
        "d",
        "D",
        "join",
        "d",
        "_",
        "d",
        "B",
        "D",
        "join",
        "d",
        "_",
        "d",
        "C",
        "join",
        "d",
        "_",
        "d",
        "A",
        "D",
        "join",
        "v",
        "v",
        "_",
        "C",
        "join",
        "v",
        "v",
        "_",
        "A",
        "watch",
        "gdb",
        "execute",
        "watch",
        "watchList",
        "append",
        "watch",
        "pinMapping",
        "alias",
        "pinMapping",
        "pinMapping",
        "alias",
        "pinMapping",
        "alias",
        "pinMapping",
        "alias",
        "pinMapping",
        "alias",
        "avr",
        "mapPin",
        "alias",
        "port",
        "mask",
        "alias",
        "port",
        "mask",
        "port",
        "mask",
        "alias",
        "pinMapping",
        "alias",
        "pinMapping",
        "alias",
        "pinMapping",
        "port",
        "mask",
        "mask",
        "val",
        "ports",
        "ddrs",
        "writeDDR",
        "val",
        "pins",
        "writePort",
        "val",
        "port",
        "value",
        "mapPin",
        "port",
        "port",
        "pins",
        "value",
        "inferior",
        "write_memory",
        "pins",
        "port",
        "buff",
        "port",
        "f",
        "hex",
        "signed",
        "port",
        "pinMapping",
        "pinMapping",
        "port",
        "pinMapping",
        "port",
        "from_bytes",
        "inferior",
        "read_memory",
        "ports",
        "port",
        "byteorder",
        "endian",
        "signed",
        "signed",
        "f",
        "hex",
        "hex",
        "value",
        "mask",
        "value",
        "mask",
        "gdb",
        "Command",
        "avr",
        "displayChip",
        "gdb",
        "COMMAND_USER",
        "avr",
        "arg",
        "tty",
        "avr",
        "display",
        "gdb",
        "Command",
        "tests",
        "runTests",
        "gdb",
        "COMMAND_USER",
        "i",
        "passed",
        "skipped",
        "i",
        "test",
        "tests",
        "tests",
        "append",
        "Test",
        "avr",
        "test",
        "te",
        "skipped",
        "passed",
        "i",
        "skipped",
        "i",
        "len",
        "tests",
        "tests",
        "i",
        "skip",
        "gdbLogger",
        "info",
        "i",
        "i",
        "skipped",
        "i",
        "len",
        "tests",
        "i",
        "tests",
        "i",
        "description",
        "end",
        "tests",
        "i",
        "run",
        "message",
        "passed",
        "passed",
        "i",
        "arg",
        "tty",
        "gdb",
        "string_to_argv",
        "arg",
        "args",
        "args",
        "len",
        "tests",
        "i",
        "testsToRun",
        "_runOne",
        "testsToRun",
        "i",
        "len",
        "tests",
        "_report",
        "program",
        "description",
        "steps",
        "expected",
        "preconditions",
        "skip",
        "description",
        "preconditions",
        "program",
        "steps",
        "expected",
        "skip",
        "preconditions",
        "val",
        "preconditions",
        "program",
        "write",
        "val",
        "step",
        "steps",
        "step",
        "pin",
        "value",
        "step",
        "program",
        "writePort",
        "pin",
        "value",
        "value",
        "pin",
        "step",
        "program",
        "runForNms",
        "step",
        "step",
        "program",
        "runForNIterations",
        "step",
        "program",
        "runForNIterations",
        "step",
        "port",
        "value",
        "step",
        "program",
        "readPort",
        "port",
        "actual",
        "hex",
        "value",
        "port",
        "hex",
        "value",
        "actual",
        "port",
        "value",
        "expected",
        "program",
        "readPort",
        "port",
        "actual",
        "hex",
        "value",
        "port",
        "hex",
        "value",
        "actual",
        "gdb",
        "execute",
        "re",
        "compile",
        "re",
        "compile",
        "gdb",
        "execute",
        "line",
        "gdb",
        "execute",
        "to_string",
        "split",
        "whileRE",
        "search",
        "line",
        "timerRE",
        "search",
        "line",
        "whileMatch",
        "whileMatch",
        "group",
        "timerMatch",
        "gdb",
        "execute",
        "gdb",
        "selected_inferior",
        "AVR",
        "inf",
        "while1",
        "sync",
        "SyncCatch",
        "avr",
        "gdb",
        "execute",
        "gdb",
        "execute",
        "globals",
        "avr",
        "mapPins",
        "pinMapping",
        "globals",
        "watchVariable",
        "watch",
        "avr",
        "addWatch",
        "watchVariable",
        "runTests",
        "tests",
        "displayChip",
        "avr"
    ],
    "literals": [
        "'GDB Logger'",
        "'TimerSet'",
        "'silent'",
        "\"M\"",
        "f'Running with user set period of {self.avr.period}'",
        "f'*(char *) {hex(addr)}'",
        "f'Stop?'",
        "'PINA'",
        "'PINB'",
        "'PINC'",
        "'PIND'",
        "'DDRA'",
        "'DDRB'",
        "'DDRC'",
        "'DDRD'",
        "'PORTA'",
        "'PORTB'",
        "'PORTC'",
        "'PORTD'",
        "'big'",
        "'main.c'",
        "f'continue'",
        "f'No known period, running for 1 iterations instead of {n} ms'",
        "f'continue'",
        "f'0{bits}b'",
        "'PINA'",
        "'PORTA'",
        "'PINB'",
        "'PORTB'",
        "'PINC'",
        "'PORTC'",
        "'PIND'",
        "'PORTD'",
        "'i'",
        "'0'",
        "'o'",
        "'DDRA'",
        "'i'",
        "'0'",
        "'o'",
        "'DDRB'",
        "'i'",
        "'0'",
        "'o'",
        "'DDRC'",
        "'i'",
        "'0'",
        "'o'",
        "'DDRD'",
        "f' {\"\".join([v for v,_ in D[1:]])}     {\"\".join([v for v,_ in B])}'",
        "\"\"",
        "\"\"",
        "f' {\"\".join([d for _,d in D[1:]])}     {\"\".join([d for _,d in B])}'",
        "\"\"",
        "\"\"",
        "' --------------------'",
        "'|6543210     76543210|'",
        "'|                   c|'",
        "'|701234567   76543210|'",
        "' --------------------'",
        "f' {D[0][1]}{\"\".join([d for _,d in C])}   {\"\".join([d for _,d in A])}'",
        "\"\"",
        "\"\"",
        "f' {D[0][0]}{\"\".join([v for v,_ in C])}   {\"\".join([v for v,_ in A])}'",
        "\"\"",
        "\"\"",
        "f'display {watch}'",
        "'mask'",
        "'port'",
        "'mask'",
        "'displayChip'",
        "'runTests'",
        "'='",
        "f'Passed {self.passed} / {self.i} tests. Skipped {self.skipped} tests.'",
        "'='",
        "f'Skipping test {self.i+1}.'",
        "'='",
        "f'Running test {self.i+1}: {self.tests[self.i].description}'",
        "''",
        "'inputs'",
        "'inputs'",
        "f'failed. Failed to write {value} to {pin}'",
        "'time'",
        "'time'",
        "'iterations'",
        "'iterations'",
        "'expected'",
        "'expected'",
        "f'failed.\\n\\tExpected {port} := {hex(value)} but got {actual}'",
        "f'failed.\\n\\tExpected {port} := {hex(value)} but got {actual}'",
        "'passed'",
        "'target remote :1234'",
        "'(?P<line>\\d+)\\s*TimerSet\\s*\\('",
        "'(?P<line>\\d+)\\s*while\\s*\\(\\s*1\\s*\\)'",
        "'set listsize unlimited'",
        "'list main,'",
        "'\\n'",
        "'line'",
        "'set listsize 10'",
        "'continue'",
        "'continue'",
        "'pinMapping'",
        "'watch'"
    ],
    "variables": [
        "gdbLogger",
        "avr",
        "commands",
        "period",
        "mask",
        "pins",
        "ddrs",
        "ports",
        "registers",
        "endian",
        "inferior",
        "period",
        "pinMapping",
        "bp",
        "enabled",
        "watchList",
        "ignore_count",
        "ignore_count",
        "mask",
        "port",
        "bp",
        "bits",
        "pina",
        "porta",
        "pinb",
        "portb",
        "pinc",
        "portc",
        "pind",
        "portd",
        "A",
        "B",
        "C",
        "D",
        "port",
        "mask",
        "port",
        "mask",
        "alias",
        "port",
        "mask",
        "buff",
        "mask",
        "mask",
        "port",
        "value",
        "avr",
        "tests",
        "passed",
        "message",
        "args",
        "testsToRun",
        "description",
        "preconditions",
        "program",
        "steps",
        "expected",
        "skip",
        "actual",
        "actual",
        "sync",
        "while1",
        "timerRE",
        "whileRE",
        "whileMatch",
        "timerMatch",
        "while1",
        "sync",
        "inf",
        "avr",
        "capturePeriod"
    ],
    "comments": [
        "?",
        "self.bp.commands = '\\n'.join(['silent']) #TODO: Verbosity?",
        "TODO: Analog? PWM output? Can we tell if a pin is configured specially",
        "Variable by bitwidth",
        "Exception",
        "Can't write to ports",
        "Tests shouldn't write to DDR",
        "Find the variable and write to it.",
        "TODO Is formatting handled correctly?",
        "Throw exception",
        "Need to mask out value",
        "Setup preconditions for test",
        "Set inputs",
        "Run for specified amount of time/iterations",
        "If not specified, run once",
        "Check any step level expectations",
        "connect to SimAVR",
        "avr.bp.commands = 'displayChip\\n' #Uncomment if you'd like to see the chip displayed at every break"
    ],
    "docstrings": [
        "'''Display the AVR device\n    Only works on Atmega1284 devices\n    '''",
        "'''Run user defined tests\n    Usage: runTests [N]\n    The number N may be used as an argument, which will run the next N tests. \n    Default is to run all tests.\n    '''"
    ],
    "functions": [
        "stop",
        "stop",
        "__str__",
        "is_valid",
        "runForNIterations",
        "runForNms",
        "runUntilPinChange",
        "memoryToBits",
        "display",
        "addWatch",
        "mapPins",
        "mapPin",
        "write",
        "writePort",
        "readPort",
        "invoke",
        "_report",
        "_runOne",
        "invoke",
        "run"
    ],
    "classes": [
        "SyncCatch",
        "PortWatch",
        "AVR",
        "displayChip",
        "runTests",
        "Test"
    ]
}