{
    "identifiers": [
        "CourseLibrara",
        "API",
        "Services",
        "Collections",
        "Generic",
        "Linq",
        "Linq",
        "Dynamic",
        "Core",
        "Threading",
        "Tasks",
        "CourseLibrara",
        "API",
        "Helpers",
        "IQueryable",
        "T",
        "T",
        "IQueryable",
        "T",
        "source",
        "orderBy",
        "PropertyMappingValue",
        "mappingDictionary",
        "source",
        "ArgumentNullException",
        "nameof",
        "source",
        "mappingDictionary",
        "ArgumentNullException",
        "nameof",
        "mappingDictionary",
        "IsNullOrWhiteSpace",
        "orderBy",
        "source",
        "Empty",
        "orderBy",
        "Split",
        "orderByClause",
        "orderByAfterSplit",
        "orderByClause",
        "Trim",
        "trimOrderByClause",
        "EndsWith",
        "trimOrderByClause",
        "IndexOf",
        "indexOfFirstSpace",
        "trimOrderByClause",
        "trimOrderByClause",
        "Remove",
        "indexOfFirstSpace",
        "mappingDictionary",
        "ContainsKey",
        "propertyName",
        "ArgumentNullException",
        "propertyName",
        "mappingDictionary",
        "propertyName",
        "propertyMappingValue",
        "ArgumentNullException",
        "destinationProperty",
        "propertyMappingValue",
        "DestinationProperties",
        "propertyMappingValue",
        "Revert",
        "orderDescending",
        "orderDescending",
        "orderByString",
        "orderByString",
        "IsNullOrWhiteSpace",
        "orderByString",
        "Empty",
        "destinationProperty",
        "orderDescending",
        "source",
        "OrderBy",
        "orderByString"
    ],
    "literals": [
        "\" desc\"",
        "\" \"",
        "\"propertyMappingValue\"",
        "\", \"",
        "\" descending\"",
        "\" ascending\""
    ],
    "variables": [
        "orderByString",
        "orderByAfterSplit",
        "trimOrderByClause",
        "orderDescending",
        "indexOfFirstSpace",
        "propertyName",
        "propertyMappingValue"
    ],
    "comments": [
        "thew orderBy string is separated by \",\", so we split it",
        "apply each orderby clause in reverse order - otherwise, the",
        "IQueryable will be ordering in the wrong order",
        "foreach(var orderByClause in orderByAfterSplit.Reverse())",
        "trim the orderBy clause, as it might contain leading",
        "or trailing spaces. Can't trim the var in foreach,",
        "so use another var",
        "if the sort option ends with with \" desc\", we order",
        "descendin, otherwise ascending",
        "remove \" asc\" or \" desc\" from the orderByClause, so we",
        "get the property name to look for in the mapping dictionary",
        "find the matching property",
        "get the PropertyMappingValue",
        "Run trhough the property names",
        "so the orderby clauses are applied in the correct order",
        "revert sor order if necessary"
    ],
    "docstrings": [],
    "functions": [
        "ApplySort"
    ],
    "classes": [
        "IQueryableExtensions"
    ]
}