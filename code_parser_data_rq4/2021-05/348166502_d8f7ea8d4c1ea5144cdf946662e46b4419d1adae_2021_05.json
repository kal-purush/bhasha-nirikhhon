{
    "identifiers": [
        "Shufl",
        "API",
        "Infrastructure",
        "Enums",
        "Shufl",
        "API",
        "Infrastructure",
        "Exceptions",
        "Shufl",
        "API",
        "UploadModels",
        "Group",
        "Shufl",
        "Domain",
        "Entities",
        "Shufl",
        "Domain",
        "Repositories",
        "Interfaces",
        "Linq",
        "Threading",
        "Tasks",
        "Shufl",
        "API",
        "Models",
        "Group",
        "GroupAlbumRating",
        "groupIdentifier",
        "groupAlbumIdentifier",
        "GroupAlbumRating",
        "groupAlbumRating",
        "Guid",
        "userId",
        "IRepositoryManager",
        "repositoryManager",
        "groupIdentifier",
        "groupIdentifier",
        "ToUpperInvariant",
        "groupAlbumIdentifier",
        "groupAlbumIdentifier",
        "ToUpperInvariant",
        "repositoryManager",
        "GroupRepository",
        "GetByIdentifierAsync",
        "groupIdentifier",
        "group",
        "GroupMemberModel",
        "CheckGroupMemberExistsAsync",
        "groupIdentifier",
        "userId",
        "repositoryManager",
        "isUserMemberOfGroup",
        "repositoryManager",
        "GroupAlbumRepository",
        "GetByIdentifierAndGroupIdAsync",
        "groupAlbumIdentifier",
        "group",
        "Id",
        "groupAlbum",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "FindAsync",
        "gsr",
        "GroupAlbumId",
        "groupAlbum",
        "Id",
        "gsr",
        "CreatedBy",
        "userId",
        "FirstOrDefault",
        "existingGroupAlbumRating",
        "existingGroupAlbumRating",
        "OverallRating",
        "groupAlbumRating",
        "OverallRating",
        "existingGroupAlbumRating",
        "LyricsRating",
        "groupAlbumRating",
        "LyricsRating",
        "existingGroupAlbumRating",
        "VocalsRating",
        "groupAlbumRating",
        "VocalsRating",
        "existingGroupAlbumRating",
        "InstrumentalsRating",
        "groupAlbumRating",
        "InstrumentalsRating",
        "existingGroupAlbumRating",
        "StructureRating",
        "groupAlbumRating",
        "StructureRating",
        "existingGroupAlbumRating",
        "Comment",
        "groupAlbumRating",
        "Comment",
        "existingGroupAlbumRating",
        "LastUpdatedOn",
        "Now",
        "existingGroupAlbumRating",
        "LastUpdatedBy",
        "userId",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "UpdateAsync",
        "existingGroupAlbumRating",
        "groupAlbumRating",
        "GroupAlbumId",
        "groupAlbum",
        "Id",
        "groupAlbumRating",
        "CreatedOn",
        "Now",
        "groupAlbumRating",
        "CreatedBy",
        "userId",
        "groupAlbumRating",
        "LastUpdatedOn",
        "Now",
        "groupAlbumRating",
        "LastUpdatedBy",
        "userId",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "AddAsync",
        "groupAlbumRating",
        "InvalidTokenException",
        "InvalidTokenType",
        "TokenNotFound",
        "UserNotGroupMemberException",
        "InvalidTokenException",
        "InvalidTokenType",
        "TokenNotFound",
        "GroupAlbumRating",
        "Guid",
        "groupAlbumRatingId",
        "GroupAlbumRatingUploadModel",
        "groupAlbumRatingUploadModel",
        "Guid",
        "userId",
        "IRepositoryManager",
        "repositoryManager",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "GetByIdAsync",
        "groupAlbumRatingId",
        "groupAlbumRating",
        "groupAlbumRating",
        "CreatedBy",
        "userId",
        "groupAlbumRating",
        "OverallRating",
        "groupAlbumRatingUploadModel",
        "OverallRating",
        "groupAlbumRating",
        "LyricsRating",
        "groupAlbumRatingUploadModel",
        "LyricsRating",
        "groupAlbumRating",
        "VocalsRating",
        "groupAlbumRatingUploadModel",
        "VocalsRating",
        "groupAlbumRating",
        "InstrumentalsRating",
        "groupAlbumRatingUploadModel",
        "InstrumentalsRating",
        "groupAlbumRating",
        "StructureRating",
        "groupAlbumRatingUploadModel",
        "StructureRating",
        "groupAlbumRating",
        "Comment",
        "groupAlbumRatingUploadModel",
        "Comment",
        "groupAlbumRating",
        "LastUpdatedOn",
        "Now",
        "groupAlbumRating",
        "LastUpdatedBy",
        "userId",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "UpdateAsync",
        "groupAlbumRating",
        "groupAlbumRating",
        "UserForbiddenException",
        "InvalidTokenException",
        "InvalidTokenType",
        "TokenNotFound",
        "Guid",
        "groupAlbumRatingId",
        "Guid",
        "userId",
        "IRepositoryManager",
        "repositoryManager",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "GetByIdAsync",
        "groupAlbumRatingId",
        "groupAlbumRating",
        "groupAlbumRating",
        "CreatedBy",
        "userId",
        "repositoryManager",
        "GroupAlbumRatingRepository",
        "RemoveAsync",
        "groupAlbumRating",
        "UserForbiddenException",
        "InvalidTokenException",
        "InvalidTokenType",
        "TokenNotFound"
    ],
    "literals": [
        "\"The requested Group Album was not found\"",
        "\"You are not able to perform this action\"",
        "\"You are not able to perform this action\"",
        "\"The requested Group was not found\"",
        "\"You are not allowed to perform this action\"",
        "\"You are not allowed to perform this action\"",
        "\"The requested Group Album Rating was not found\"",
        "\"You are not allowed to perform this action\"",
        "\"You are not allowed to perform this action\"",
        "\"The requested Group Album Rating was not found\""
    ],
    "variables": [
        "group",
        "isUserMemberOfGroup",
        "groupAlbum",
        "existingGroupAlbumRating",
        "groupAlbumRating",
        "groupAlbumRating"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "CreateNewGroupAlbumRatingAsync",
        "EditGroupAlbumRatingAsync",
        "DeleteGroupAlbumRatingAsync"
    ],
    "classes": [
        "GroupAlbumRatingModel"
    ]
}