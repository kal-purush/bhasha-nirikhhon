{
    "identifiers": [
        "Collections",
        "Generic",
        "KSP",
        "UI",
        "KSP",
        "UI",
        "Screens",
        "Smooth",
        "Pools",
        "Smooth",
        "Slinq",
        "UnityEngine",
        "UnityToolbag",
        "MuMech",
        "EngineInfo",
        "ModuleEngines",
        "engineModule",
        "engineModule",
        "engineModule",
        "thrustVector",
        "Vector3d",
        "zero",
        "i",
        "engineModule",
        "thrustTransforms",
        "Count",
        "i",
        "thrustVector",
        "engineModule",
        "thrustTransforms",
        "i",
        "forward",
        "engineModule",
        "thrustTransformMultipliers",
        "i",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "KeyableDictionary",
        "KeyableDictionary",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "KeyableDictionary",
        "ResourceFlowMode",
        "KeyableDictionary",
        "ResourceFlowMode",
        "FuelNode",
        "FuelNode",
        "EngineInfo",
        "EngineInfo",
        "Pool",
        "FuelNode",
        "Pool",
        "FuelNode",
        "Create",
        "Reset",
        "CrewMass",
        "ProtoCrewMember",
        "crew",
        "Versioning",
        "version_major",
        "Versioning",
        "version_minor",
        "CrewMassDelegate",
        "CrewMassOld",
        "CrewMassDelegate",
        "CrewMassNew",
        "ProtoCrewMember",
        "crew",
        "PhysicsGlobals",
        "KerbalCrewMass",
        "ProtoCrewMember",
        "crew",
        "PhysicsGlobals",
        "KerbalCrewMass",
        "crew",
        "ResourceMass",
        "crew",
        "InventoryMass",
        "pool",
        "Size",
        "FuelNode",
        "pool",
        "Release",
        "FuelNode",
        "obj",
        "Part",
        "part",
        "dVLinearThrust",
        "pool",
        "Borrow",
        "node",
        "Init",
        "part",
        "dVLinearThrust",
        "node",
        "Part",
        "part",
        "dVLinearThrust",
        "part",
        "part",
        "dVLinearThrust",
        "dVLinearThrust",
        "resources",
        "Clear",
        "resourceConsumptions",
        "Clear",
        "resourceDrains",
        "Clear",
        "freeResources",
        "Clear",
        "crossfeedSources",
        "Clear",
        "isEngine",
        "isthrottleLocked",
        "activatesEvenIfDisconnected",
        "part",
        "ActivatesEvenIfDisconnected",
        "isLaunchClamp",
        "part",
        "IsLaunchClamp",
        "dryMass",
        "crewMass",
        "modulesStagedMass",
        "decoupledInStage",
        "MinValue",
        "vesselOrientation",
        "HighLogic",
        "LoadedScene",
        "GameScenes",
        "EDITOR",
        "EditorLogic",
        "VesselRotation",
        "Vector3d",
        "up",
        "part",
        "vessel",
        "GetTransform",
        "up",
        "modulesUnstagedMass",
        "isLaunchClamp",
        "dryMass",
        "part",
        "prefabMass",
        "HighLogic",
        "LoadedSceneIsFlight",
        "part",
        "protoModuleCrew",
        "i",
        "part",
        "protoModuleCrew",
        "Count",
        "i",
        "part",
        "protoModuleCrew",
        "i",
        "crewMass",
        "CrewMassDelegate",
        "crewMember",
        "HighLogic",
        "LoadedSceneIsEditor",
        "CrewAssignmentDialog",
        "Instance",
        "CrewAssignmentDialog",
        "Instance",
        "CurrentManifestUnsafe",
        "CrewAssignmentDialog",
        "Instance",
        "CurrentManifestUnsafe",
        "GetPartCrewManifest",
        "part",
        "craftID",
        "partCrewManifest",
        "ProtoCrewMember",
        "partCrewManifest",
        "GetPartCrew",
        "partCrew",
        "i",
        "partCrew",
        "Length",
        "i",
        "partCrew",
        "i",
        "crewMember",
        "crewMass",
        "CrewMassDelegate",
        "crewMember",
        "modulesUnstagedMass",
        "part",
        "GetModuleMassNoAlloc",
        "dryMass",
        "ModifierStagingSituation",
        "UNSTAGED",
        "modulesStagedMass",
        "part",
        "GetModuleMassNoAlloc",
        "dryMass",
        "ModifierStagingSituation",
        "STAGED",
        "part",
        "GetModuleMassNoAlloc",
        "dryMass",
        "ModifierStagingSituation",
        "CURRENT",
        "currentModulesMass",
        "modulesStagedMass",
        "modulesUnstagedMass",
        "modulesStagedMass",
        "inverseStage",
        "part",
        "inverseStage",
        "partName",
        "part",
        "partInfo",
        "name",
        "resourceRequestRemainingThreshold",
        "Max",
        "part",
        "resourceRequestRemainingThreshold",
        "DRAINED",
        "resourcePriority",
        "part",
        "GetResourcePriority",
        "i",
        "part",
        "Resources",
        "Count",
        "i",
        "part",
        "Resources",
        "i",
        "r",
        "info",
        "density",
        "r",
        "flowState",
        "resources",
        "r",
        "info",
        "id",
        "r",
        "amount",
        "dryMass",
        "r",
        "amount",
        "r",
        "info",
        "density",
        "freeResources",
        "r",
        "info",
        "id",
        "r",
        "info",
        "name",
        "r",
        "info",
        "name",
        "r",
        "info",
        "name",
        "freeResources",
        "r",
        "info",
        "id",
        "engineInfos",
        "Clear",
        "i",
        "part",
        "Modules",
        "Count",
        "i",
        "part",
        "Modules",
        "i",
        "ModuleEngines",
        "e",
        "e",
        "isEnabled",
        "isEngine",
        "HighLogic",
        "LoadedSceneIsEditor",
        "inverseStage",
        "StageManager",
        "CurrentStage",
        "e",
        "getIgnitionState",
        "e",
        "thrustPercentage",
        "e",
        "minThrust",
        "e",
        "getIgnitionState",
        "inverseStage",
        "StageManager",
        "CurrentStage",
        "inverseStage",
        "StageManager",
        "CurrentStage",
        "isEngine",
        "isthrottleLocked",
        "e",
        "throttleLocked",
        "engineInfos",
        "Add",
        "EngineInfo",
        "e",
        "Part",
        "p",
        "Part",
        "traversalParent",
        "Part",
        "FuelNode",
        "nodeLookup",
        "parentDecoupledInStage",
        "i",
        "p",
        "children",
        "Count",
        "i",
        "p",
        "children",
        "i",
        "child",
        "child",
        "traversalParent",
        "nodeLookup",
        "child",
        "AssignDecoupledInStage",
        "child",
        "p",
        "nodeLookup",
        "parentDecoupledInStage",
        "p",
        "parent",
        "p",
        "parent",
        "traversalParent",
        "nodeLookup",
        "p",
        "parent",
        "AssignDecoupledInStage",
        "p",
        "parent",
        "p",
        "nodeLookup",
        "parentDecoupledInStage",
        "Part",
        "p",
        "Part",
        "traversalParent",
        "Part",
        "FuelNode",
        "nodeLookup",
        "parentDecoupledInStage",
        "decoupledInStage",
        "MinValue",
        "decoupledInStage",
        "parentDecoupledInStage",
        "i",
        "p",
        "Modules",
        "Count",
        "i",
        "p",
        "Modules",
        "i",
        "m",
        "ModuleDecouple",
        "mDecouple",
        "mDecouple",
        "isDecoupled",
        "mDecouple",
        "stagingEnabled",
        "p",
        "stagingOn",
        "mDecouple",
        "isOmniDecoupler",
        "isDecoupler",
        "decoupledInStage",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "HighLogic",
        "LoadedSceneIsEditor",
        "mDecouple",
        "explosiveNodeID",
        "attach",
        "p",
        "FindAttachNode",
        "mDecouple",
        "explosiveNodeID",
        "attach",
        "p",
        "srfAttachNode",
        "attach",
        "mDecouple",
        "ExplosiveNode",
        "attach",
        "attach",
        "attachedPart",
        "attach",
        "attachedPart",
        "traversalParent",
        "mDecouple",
        "staged",
        "isDecoupler",
        "decoupledInStage",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "isDecoupler",
        "decoupledInStage",
        "parentDecoupledInStage",
        "nodeLookup",
        "attach",
        "attachedPart",
        "AssignDecoupledInStage",
        "attach",
        "attachedPart",
        "p",
        "nodeLookup",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "m",
        "ModuleAnchoredDecoupler",
        "mAnchoredDecoupler",
        "mAnchoredDecoupler",
        "isDecoupled",
        "mAnchoredDecoupler",
        "stagingEnabled",
        "p",
        "stagingOn",
        "HighLogic",
        "LoadedSceneIsEditor",
        "mAnchoredDecoupler",
        "explosiveNodeID",
        "attach",
        "p",
        "FindAttachNode",
        "mAnchoredDecoupler",
        "explosiveNodeID",
        "attach",
        "p",
        "srfAttachNode",
        "attach",
        "mAnchoredDecoupler",
        "ExplosiveNode",
        "attach",
        "attach",
        "attachedPart",
        "attach",
        "attachedPart",
        "traversalParent",
        "mAnchoredDecoupler",
        "staged",
        "isDecoupler",
        "decoupledInStage",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "isDecoupler",
        "decoupledInStage",
        "parentDecoupledInStage",
        "nodeLookup",
        "attach",
        "attachedPart",
        "AssignDecoupledInStage",
        "attach",
        "attachedPart",
        "p",
        "nodeLookup",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "m",
        "ModuleDockingNode",
        "mDockingNode",
        "mDockingNode",
        "staged",
        "mDockingNode",
        "stagingEnabled",
        "p",
        "stagingOn",
        "mDockingNode",
        "referenceNode",
        "attachedPart",
        "attachedPart",
        "attachedPart",
        "traversalParent",
        "isDecoupler",
        "decoupledInStage",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "isDecoupler",
        "isDecoupler",
        "decoupledInStage",
        "parentDecoupledInStage",
        "nodeLookup",
        "attachedPart",
        "AssignDecoupledInStage",
        "attachedPart",
        "p",
        "nodeLookup",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "m",
        "moduleName",
        "m",
        "Fields",
        "GetValue",
        "m",
        "m",
        "stagingEnabled",
        "p",
        "stagingOn",
        "isDecoupler",
        "decoupledInStage",
        "p",
        "inverseStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "isDecoupler",
        "isLaunchClamp",
        "decoupledInStage",
        "p",
        "inverseStage",
        "parentDecoupledInStage",
        "p",
        "inverseStage",
        "parentDecoupledInStage",
        "isDecoupler",
        "decoupledInStage",
        "parentDecoupledInStage",
        "isSepratron",
        "isEngine",
        "isthrottleLocked",
        "activatesEvenIfDisconnected",
        "inverseStage",
        "decoupledInStage",
        "AssignChildrenDecoupledInStage",
        "p",
        "traversalParent",
        "nodeLookup",
        "decoupledInStage",
        "message",
        "Dispatcher",
        "InvokeAsync",
        "MonoBehaviour",
        "message",
        "throttle",
        "atmospheres",
        "atmDensity",
        "machNumber",
        "isEngine",
        "resourceConsumptions",
        "Clear",
        "propellantFlows",
        "Clear",
        "partThrust",
        "isDrawingResources",
        "EngineInfo",
        "engineInfo",
        "engineInfos",
        "engineInfo",
        "engineModule",
        "EngineValuesAtConditions",
        "engineInfo",
        "throttle",
        "atmospheres",
        "atmDensity",
        "machNumber",
        "thrust",
        "isp",
        "massFlowRate",
        "cosLoss",
        "dVLinearThrust",
        "partThrust",
        "thrust",
        "magnitude",
        "massFlowRate",
        "isDrawingResources",
        "j",
        "e",
        "propellants",
        "Count",
        "j",
        "e",
        "propellants",
        "j",
        "MuUtils",
        "ResourceDensity",
        "p",
        "id",
        "density",
        "propellantFlows",
        "ContainsKey",
        "p",
        "id",
        "propellantFlows",
        "Add",
        "p",
        "id",
        "p",
        "GetFlowMode",
        "p",
        "ignoreForIsp",
        "totalDensity",
        "p",
        "ratio",
        "density",
        "massFlowRate",
        "totalDensity",
        "j",
        "e",
        "propellants",
        "Count",
        "j",
        "e",
        "propellants",
        "j",
        "MuUtils",
        "ResourceDensity",
        "p",
        "id",
        "p",
        "ratio",
        "volumeFlowRate",
        "density",
        "resourceConsumptions",
        "ContainsKey",
        "p",
        "id",
        "resourceConsumptions",
        "p",
        "id",
        "propVolumeRate",
        "resourceConsumptions",
        "Add",
        "p",
        "id",
        "propVolumeRate",
        "Part",
        "parts",
        "Part",
        "FuelNode",
        "nodeLookup",
        "parts",
        "GetEnumerator",
        "it",
        "MoveNext",
        "nodeLookup",
        "TryGetValue",
        "it",
        "Current",
        "fuelnode",
        "crossfeedSources",
        "Add",
        "fuelnode",
        "FuelNode",
        "n",
        "crossfeedSources",
        "Remove",
        "n",
        "simStage",
        "resources",
        "KeysList",
        "Slinq",
        "Select",
        "r",
        "rs",
        "rs",
        "r",
        "MuUtils",
        "ResourceDensity",
        "r",
        "resources",
        "Sum",
        "dryMass",
        "crewMass",
        "resMass",
        "inverseStage",
        "simStage",
        "modulesUnstagedMass",
        "modulesStagedMass",
        "resourceDrains",
        "Clear",
        "dt",
        "resourceDrains",
        "KeysList",
        "freeResources",
        "resources",
        "dt",
        "resourceDrains",
        "KeyValuePair",
        "resources",
        "partName",
        "PartResourceLibrary",
        "Instance",
        "GetDefinition",
        "Key",
        "name",
        "Value",
        "resourceDrains",
        "Keys",
        "partName",
        "PartResourceLibrary",
        "Instance",
        "GetDefinition",
        "name",
        "resourceDrains",
        "freeResources",
        "Smooth",
        "Algebraics",
        "Tuple",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "DefaultableDictionary",
        "resources",
        "resourceRequestRemainingThreshold",
        "resourceDrains",
        "freeResources",
        "resourceDrains",
        "KeysList",
        "Slinq",
        "Any",
        "id",
        "p",
        "p",
        "Item4",
        "id",
        "p",
        "Item1",
        "id",
        "p",
        "Item2",
        "param",
        "MaxValue",
        "resourceDrains",
        "KeysList",
        "Slinq",
        "Where",
        "id",
        "p",
        "p",
        "Item4",
        "id",
        "p",
        "Item1",
        "id",
        "p",
        "Item2",
        "param",
        "Select",
        "id",
        "p",
        "p",
        "Item1",
        "id",
        "p",
        "Item3",
        "id",
        "param",
        "Min",
        "resourceConsumptions",
        "KeysList",
        "whichResources",
        "Smooth",
        "Algebraics",
        "Tuple",
        "DefaultableDictionary",
        "resources",
        "resourceRequestRemainingThreshold",
        "whichResources",
        "Slinq",
        "Any",
        "id",
        "r",
        "r",
        "Item1",
        "id",
        "r",
        "Item2",
        "param",
        "FuelNode",
        "vessel",
        "part",
        "Modules",
        "ModuleEngines",
        "flameout",
        "statusL2",
        "resourceConsumptions",
        "KeysList",
        "propellantFlows",
        "resourceFlowMode",
        "ResourceFlowMode",
        "NO_FLOW",
        "resources",
        "resourceRequestRemainingThreshold",
        "ResourceFlowMode",
        "ALL_VESSEL",
        "ResourceFlowMode",
        "ALL_VESSEL_BALANCE",
        "ResourceFlowMode",
        "STAGE_PRIORITY_FLOW",
        "ResourceFlowMode",
        "STAGE_PRIORITY_FLOW_BALANCE",
        "vessel",
        "Slinq",
        "Any",
        "n",
        "t",
        "n",
        "resources",
        "t",
        "n",
        "resourceRequestRemainingThreshold",
        "ResourceFlowMode",
        "STAGE_STACK_FLOW",
        "ResourceFlowMode",
        "STAGE_STACK_FLOW_BALANCE",
        "ResourceFlowMode",
        "STACK_PRIORITY_SEARCH",
        "crossfeedSources",
        "Slinq",
        "Any",
        "n",
        "t",
        "n",
        "resources",
        "t",
        "n",
        "resourceRequestRemainingThreshold",
        "FuelNode",
        "node",
        "crossfeedSources",
        "Contains",
        "node",
        "FuelNode",
        "vessel",
        "resourceConsumptions",
        "KeysList",
        "freeResources",
        "resourceConsumptions",
        "propellantFlows",
        "resourceFlowMode",
        "ResourceFlowMode",
        "NO_FLOW",
        "resourceDrains",
        "amount",
        "ResourceFlowMode",
        "ALL_VESSEL",
        "ResourceFlowMode",
        "ALL_VESSEL_BALANCE",
        "AssignFuelDrainRateStagePriorityFlow",
        "amount",
        "vessel",
        "ResourceFlowMode",
        "STAGE_PRIORITY_FLOW",
        "ResourceFlowMode",
        "STAGE_PRIORITY_FLOW_BALANCE",
        "AssignFuelDrainRateStagePriorityFlow",
        "amount",
        "vessel",
        "ResourceFlowMode",
        "STAGE_STACK_FLOW",
        "ResourceFlowMode",
        "STAGE_STACK_FLOW_BALANCE",
        "ResourceFlowMode",
        "STACK_PRIORITY_SEARCH",
        "AssignFuelDrainRateStagePriorityFlow",
        "amount",
        "crossfeedSources",
        "amount",
        "usePrio",
        "FuelNode",
        "vessel",
        "MinValue",
        "ListPool",
        "FuelNode",
        "Instance",
        "BorrowDisposable",
        "dispoSources",
        "value",
        "i",
        "vessel",
        "Count",
        "i",
        "vessel",
        "i",
        "n",
        "resources",
        "n",
        "resourceRequestRemainingThreshold",
        "usePrio",
        "n",
        "resourcePriority",
        "maxPrio",
        "maxPrio",
        "n",
        "resourcePriority",
        "sources",
        "Clear",
        "sources",
        "Add",
        "n",
        "n",
        "resourcePriority",
        "maxPrio",
        "sources",
        "Add",
        "n",
        "sources",
        "Add",
        "n",
        "i",
        "sources",
        "Count",
        "i",
        "freeResources",
        "sources",
        "i",
        "resourceDrains",
        "amount",
        "sources",
        "Count",
        "EngineInfo",
        "engineInfo",
        "throttle",
        "atmPressure",
        "atmDensity",
        "machNumber",
        "Vector3d",
        "thrust",
        "isp",
        "massFlowRate",
        "cosLoss",
        "isp",
        "engineInfo",
        "engineModule",
        "ISPAtConditions",
        "throttle",
        "atmPressure",
        "atmDensity",
        "machNumber",
        "engineInfo",
        "engineModule",
        "FlowMultiplierAtConditions",
        "atmDensity",
        "machNumber",
        "massFlowRate",
        "engineInfo",
        "engineModule",
        "FlowRateAtConditions",
        "throttle",
        "flowMultiplier",
        "thrust",
        "ThrustAtConditions",
        "engineInfo",
        "massFlowRate",
        "isp",
        "cosLoss",
        "EngineInfo",
        "engineInfo",
        "massFlowRate",
        "isp",
        "cosLoss",
        "massFlowRate",
        "Vector3d",
        "zero",
        "engineInfo",
        "thrustVector",
        "cosLoss",
        "thrustVector",
        "Vector3",
        "Dot",
        "vesselOrientation",
        "thrustVector",
        "thrustVector",
        "normalized",
        "thrustVector",
        "massFlowRate",
        "engineInfo",
        "engineModule",
        "g",
        "engineInfo",
        "engineModule",
        "multIsp",
        "isp"
    ],
    "literals": [
        "\"IntakeAir\"",
        "\"IntakeLqd\"",
        "\"IntakeAtm\"",
        "\"srf\"",
        "\"srf\"",
        "\"ProceduralFairingDecoupler\"",
        "\"decoupled\"",
        "\"[MechJeb2] \"",
        "\" \"",
        "\" is \"",
        "\"'s drain rate of \"",
        "\"(\"",
        "\") is \"",
        "\" free=\"",
        "\"No propellants\""
    ],
    "variables": [
        "ModuleEngines",
        "engineModule",
        "Vector3d",
        "thrustVector",
        "i",
        "resources",
        "resourceConsumptions",
        "resourceDrains",
        "freeResources",
        "DRAINED",
        "propellantFlows",
        "crossfeedSources",
        "decoupledInStage",
        "inverseStage",
        "isLaunchClamp",
        "isSepratron",
        "isEngine",
        "isthrottleLocked",
        "activatesEvenIfDisconnected",
        "isDrawingResources",
        "resourceRequestRemainingThreshold",
        "resourcePriority",
        "dryMass",
        "crewMass",
        "modulesUnstagedMass",
        "modulesStagedMass",
        "partName",
        "Part",
        "part",
        "dVLinearThrust",
        "Vector3d",
        "vesselOrientation",
        "engineInfos",
        "pool",
        "CrewMass",
        "CrewMassDelegate",
        "PoolSize",
        "FuelNode",
        "node",
        "i",
        "ProtoCrewMember",
        "crewMember",
        "PartCrewManifest",
        "partCrewManifest",
        "partCrew",
        "i",
        "ProtoCrewMember",
        "crewMember",
        "currentModulesMass",
        "i",
        "PartResource",
        "r",
        "i",
        "i",
        "Part",
        "child",
        "isDecoupler",
        "i",
        "PartModule",
        "m",
        "ModuleDecouple",
        "mDecouple",
        "AttachNode",
        "attach",
        "ModuleAnchoredDecoupler",
        "mAnchoredDecoupler",
        "AttachNode",
        "attach",
        "ModuleDockingNode",
        "mDockingNode",
        "Part",
        "attachedPart",
        "partThrust",
        "ModuleEngines",
        "e",
        "Vector3d",
        "thrust",
        "isp",
        "massFlowRate",
        "totalDensity",
        "j",
        "p",
        "density",
        "volumeFlowRate",
        "j",
        "p",
        "density",
        "propVolumeRate",
        "it",
        "FuelNode",
        "fuelnode",
        "resMass",
        "param",
        "param",
        "resourceFlowMode",
        "amount",
        "resourceFlowMode",
        "maxPrio",
        "dispoSources",
        "sources",
        "i",
        "FuelNode",
        "n",
        "i",
        "flowMultiplier",
        "Vector3d",
        "thrustVector"
    ],
    "comments": [
        "A FuelNode is a compact summary of a Part, containing only the information needed to run the fuel flow simulation.",
        "the resources contained in the part",
        "the resources this part consumes per unit time when active at full throttle",
        "the resources being drained from this part per unit time at the current simulation time",
        "the resources that are \"free\" and assumed to be infinite like IntakeAir",
        "if a resource amount falls below this amount we say that the resource has been drained",
        "set to the smallest amount that the user can see is non-zero in the resource tab or by",
        "right-clicking.",
        "flow modes of propellants since the engine can override them",
        "the stage in which this part will be decoupled from the rocket",
        "stage in which this part is activated",
        "whether this part is a launch clamp",
        "whether this part is a sepratron",
        "whether this part is an engine",
        "Is the engine actually using any resources",
        "the mass of this part, not counting resource mass",
        "the mass of this part crew",
        "the mass of the modules of this part before staging",
        "the mass of the modules of this part after staging",
        "for debugging",
        "Intentionally ignore the physic flag.",
        "if it was manually staged",
        "print(part.partInfo.name.PadRight(25) + \" \" + part.mass.ToString(\"F4\") + \" \" + part.GetPhysicslessChildMass().ToString(\"F4\") + \" \" + modulesUnstagedMass.ToString(\"F4\") + \" \" + modulesStagedMass.ToString(\"F4\"));",
        "note which resources this part has stored",
        "disabled resources are just dead weight",
        "Including the ressource in the CRP.",
        "determine if we've got at least one useful ModuleEngine",
        "we only do these test for the first ModuleEngines in the Part, could any other ones actually differ?",
        "Only count engines that either are ignited or will ignite in the future:",
        "if an engine has been activated early, pretend it is in the current stage:",
        "We are not necessarily traversing from the root part but from any interior part, so that p.parent is just another potential child node",
        "in our traversal.  This is a helper to loop over all the children (including the \"p.parent\") in our traversal.",
        "Determine when this part will be decoupled given when its traversal-order parent will be decoupled.",
        "Then recurse to all of this part's \"children\" (including the p.parent if the traversalParent is coming from a child).",
        "Already processed (this gets used where we assign the attached part, then loop over all the children and expect the",
        "one we already hit to be skipped by this)",
        "We are decoupling our traversalParent. The part and its children are not part of the ship when we decouple",
        "We are decoupling our traversalParent. The part and its children are not part of the ship when we decouple",
        "We are still attached to our traversalParent.  The part we decouple is dropped when we decouple.  The part and other children are dropped with the traversalParent.",
        "Hopefully no one made part with multiple decoupler modules ?",
        "We are decoupling our traversalParent. The part and its children are not part of the ship when we decouple",
        "We are still attached to our traversalParent.  The part we decouple is dropped when we decouple.  The part and other children are dropped with the traversalParent.",
        "We are decoupling our traversalParent. The part and its children are not part of the ship when we decouple",
        "We are still attached to our traversalParent.  The part we decouple is dropped when we decouple.  The part and other children are dropped with the traversalParent.",
        "We are decoupling our traversalParent. The part and its children are not part of the ship when we decouple",
        "double sumThrustOverIsp = 0;",
        "thrust is correct.",
        "note that isp and massFlowRate do not include ignoreForIsp fuels like HTP and so need to be fixed for effective isp and the",
        "actual mdot of the rocket needs to be fixed to include HTP.",
        "",
        "IMHO: using ignoreForIsp is just wrong.  full stop.  engines should never set this and should set the correct effective isp in",
        "the config for the engine.  makes everything simpler and fixes the UI to show the correct ISP.  going this direction we are going",
        "to get bug reports that e.g. mechjeb is reporting 299s for an RD-108 when RF and KSP are displaying 308s everywhere.  which is not",
        "going to be a bug at all.  as long as the thrust is correct, the effective isp is correct, and the fuel fractions are correct then",
        "the rocket equation just works and HTP should not be \"ignored\".   keeping it out of the atmosphereCurve just makes this annoying",
        "here and screws up the KSP API display of ISP.",
        "",
        "zero density draws (eC, air intakes, etc) are skipped, we have to assume you open your solar panels or",
        "air intakes or whatever it is you need for them to function.  they don't affect the mass of the vehicle",
        "so they do not affect the rocket equation.  they are assumed to be \"renewable\" or effectively infinite.",
        "(we keep them out of the propellantFlows dict here so they're just ignored by the sim later).",
        "",
        "hopefully different EngineModules in the same part don't have different flow modes for the same propellant",
        "have to ignore ignoreForIsp fuels here since we're dealing with the massflowrate of the other fuels",
        "this is also the volume flow rate of the non-ignoreForIsp fuels.  although this is a bit janky since the p.ratios in most",
        "stock engines sum up to 2, not 1 (1.1 + 0.9), so this is not per-liter but per-summed-ratios (the massflowrate you get out",
        "of the atmosphere curves (above) are also similarly adjusted by these ratios -- it is a bit of a horror show).",
        "this is the individual propellant volume rate.  we are including the ignoreForIsp fuels in this loop and this will",
        "correctly calculate the volume rates of all the propellants, in L/sec.  if you sum these it'll be larger than the",
        "volumeFlowRate by including both the ignoreForIsp fuels and if the ratios sum up to more than one.",
        "same density check here as above to keep massless propellants out of the ResourceConsumptions dict as well",
        "call this when a node no longer exists, so that this node knows that it's no longer a valid source",
        "return the mass of the simulated FuelNode. This is not the same as the mass of the Part,",
        "because the simulated node may have lost resources, and thus mass, during the simulation.",
        "print(\"\\n(\" + simStage + \") \" + partName.PadRight(25) + \" dryMass \" + dryMass.ToString(\"F3\")",
        "+ \" ResMass \" + (resources.Keys.Sum(id => resources[id] * MuUtils.ResourceDensity(id))).ToString(\"F3\")",
        "+ \" Fairing Mass \" + (inverseStage < simStage ? fairingMass : 0).ToString(\"F3\")",
        "+ \" (\" + fairingMass.ToString(\"F3\") + \")\"",
        "+ \" ModuleMass \" + moduleMass.ToString(\"F3\")",
        ");",
        "return dryMass + resources.Keys.Sum(id => resources[id] * MuUtils.ResourceDensity(id)) +",
        "DebugDrainRates();",
        "Returns an enumeration of the resources this part burns",
        "returns whether this part contains any of the given resources",
        "return whichResources.Any(id => resources[id] > DRAINED);",
        "XXX: this fix is intended to fix SRBs which have burned out but which",
        "still have an amount of fuel over the resourceRequestRemainingThreshold, which",
        "can happen in RealismOverhaul.  this targets specifically \"No propellants\" because",
        "we do not want flamed out jet engines to trigger this code if they just don't have",
        "enough intake air, and any other causes.",
        "BIG FIXME: we're doing this in the thread and touching the KSP part object.",
        "check if we contain the needed resource:",
        "check if any part contains the needed resource:",
        "check if we can get any of the needed resources",
        "and NULL",
        "we didn't find ourselves lacking for any resource",
        "AssignFuelDrainRateStackPriority(type, true, amount);",
        "do nothing.",
        "print(\"AssignFuelDrainRateStagePriorityFlow for \" + partName + \" searching for \" + amount + \" of \" + PartResourceLibrary.Instance.GetDefinition(type).name + \" in \" + vessel.Count + \" parts \");",
        "print(partName + \" drains resource from \" + sources.Count + \" parts \");",
        "for a single EngineModule, get thrust + isp + massFlowRate",
        "Debug.Log(\"thrust = \" + thrust + \" isp = \" + isp + \" massFlowRate = \" + massFlowRate);",
        "for a single EngineModule, get its thrust vector (use EngineModuleFlowMultiplier and EngineModuleISP below)"
    ],
    "docstrings": [],
    "functions": [
        "EngineInfo",
        "FuelNode",
        "CrewMassOld",
        "CrewMassNew",
        "FuelNode",
        "Create",
        "Release",
        "Reset",
        "FuelNode",
        "Borrow",
        "Init",
        "AssignChildrenDecoupledInStage",
        "AssignDecoupledInStage",
        "SetConsumptionRates",
        "AddCrossfeedSouces",
        "RemoveSourceNode",
        "Mass",
        "ResetDrainRates",
        "DrainResources",
        "DebugResources",
        "DebugDrainRates",
        "MaxTimeStep",
        "BurnedResources",
        "ContainsResources",
        "CanDrawNeededResources",
        "CanDrawFrom",
        "AssignResourceDrainRates",
        "AssignFuelDrainRateStagePriorityFlow",
        "EngineValuesAtConditions",
        "Vector3d",
        "ThrustAtConditions"
    ],
    "classes": [
        "FuelFlowSimulation",
        "FuelNode"
    ]
}