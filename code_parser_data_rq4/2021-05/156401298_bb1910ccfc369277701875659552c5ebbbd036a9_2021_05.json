{
    "identifiers": [
        "absolute_import",
        "os",
        "tempfile",
        "unittest",
        "os",
        "path",
        "join",
        "mock",
        "testfixtures",
        "popen",
        "testfixtures",
        "popen",
        "MockPopen",
        "PopenBehaviour",
        "uberpoet",
        "genproj",
        "GenProjCommandLine",
        "uberpoet",
        "multisuite",
        "CommandLineMultisuite",
        "utils",
        "integration_test",
        "read_file",
        "unittest",
        "TestCase",
        "lib_name",
        "mod_count",
        "app_path",
        "join",
        "app_path",
        "join",
        "app_path",
        "lib_name",
        "os",
        "listdir",
        "app_path",
        "assertGreater",
        "len",
        "contents",
        "assertEqual",
        "len",
        "contents",
        "mod_count",
        "assertIn",
        "contents",
        "os",
        "listdir",
        "main_path",
        "assertGreater",
        "len",
        "app_contents",
        "file_name",
        "assertIn",
        "file_name",
        "app_contents",
        "open",
        "join",
        "main_path",
        "file_name",
        "f",
        "assertGreater",
        "len",
        "f",
        "read",
        "assertIn",
        "lib_name",
        "contents",
        "os",
        "listdir",
        "lib_path",
        "assertGreater",
        "len",
        "lib_contents",
        "assertIn",
        "lib_contents",
        "open",
        "join",
        "lib_path",
        "f",
        "assertGreater",
        "len",
        "f",
        "read",
        "integration_test",
        "join",
        "tempfile",
        "gettempdir",
        "app_path",
        "GenProjCommandLine",
        "command",
        "main",
        "args",
        "verify_genproj",
        "app_path",
        "integration_test",
        "join",
        "tempfile",
        "gettempdir",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "app_path",
        "test_fixture_path",
        "GenProjCommandLine",
        "command",
        "main",
        "args",
        "verify_genproj",
        "app_path",
        "integration_test",
        "join",
        "tempfile",
        "gettempdir",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "app_path",
        "test_fixture_path",
        "loc_test_fixture_path",
        "GenProjCommandLine",
        "command",
        "main",
        "args",
        "verify_genproj",
        "app_path",
        "integration_test",
        "join",
        "tempfile",
        "gettempdir",
        "join",
        "root_path",
        "join",
        "root_path",
        "log_path",
        "root_path",
        "CommandLineMultisuite",
        "command",
        "main",
        "args",
        "assertGreater",
        "os",
        "listdir",
        "app_path",
        "verify_genproj",
        "app_path",
        "integration_test",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "read_file",
        "test_cloc_out_path",
        "join",
        "tempfile",
        "gettempdir",
        "join",
        "root_path",
        "join",
        "root_path",
        "log_path",
        "root_path",
        "command",
        "stdin",
        "command",
        "PopenBehaviour",
        "stdout",
        "cloc_out",
        "command",
        "PopenBehaviour",
        "stdout",
        "PopenBehaviour",
        "stdout",
        "stderr",
        "testfixtures",
        "Replacer",
        "rep",
        "MockPopen",
        "rep",
        "replace",
        "mock_popen",
        "mock_popen",
        "set_default",
        "behaviour",
        "command_callable",
        "mock",
        "patch",
        "mock_find",
        "CommandLineMultisuite",
        "main",
        "args",
        "assertGreater",
        "os",
        "listdir",
        "app_path",
        "verify_genproj",
        "app_path",
        "integration_test",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "join",
        "tempfile",
        "gettempdir",
        "join",
        "root_path",
        "join",
        "root_path",
        "log_path",
        "root_path",
        "test_fixture_path",
        "CommandLineMultisuite",
        "command",
        "main",
        "args",
        "assertGreater",
        "os",
        "listdir",
        "app_path",
        "verify_genproj",
        "app_path",
        "integration_test",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "join",
        "tempfile",
        "gettempdir",
        "join",
        "root_path",
        "join",
        "root_path",
        "log_path",
        "root_path",
        "test_fixture_path",
        "CommandLineMultisuite",
        "command",
        "main",
        "args",
        "assertGreater",
        "os",
        "listdir",
        "app_path",
        "verify_genproj",
        "app_path"
    ],
    "literals": [
        "'App'",
        "'Sources'",
        "'App'",
        "'BUILD'",
        "'main.swift'",
        "'Info.plist'",
        "'r'",
        "'File0.swift'",
        "'File0.swift'",
        "'r'",
        "'apps'",
        "'mockapp'",
        "\"--output_directory\"",
        "\"--blaze_module_path\"",
        "\"/apps/mockapp\"",
        "\"--gen_type\"",
        "\"flat\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "\"--lines_of_code\"",
        "\"150000\"",
        "'MockLib53'",
        "'apps'",
        "'mockapp'",
        "'fixtures'",
        "'test_dot.gv'",
        "\"--output_directory\"",
        "\"--blaze_module_path\"",
        "\"/apps/mockapp\"",
        "\"--gen_type\"",
        "\"dot\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "\"--lines_of_code\"",
        "\"150000\"",
        "\"--dot_file\"",
        "\"--dot_root\"",
        "\"DotReaderMainModule\"",
        "'DotReaderLib17'",
        "'apps'",
        "'mockapp'",
        "'fixtures'",
        "'test_dot.gv'",
        "'fixtures'",
        "'loc_mappings.json'",
        "\"--output_directory\"",
        "\"--blaze_module_path\"",
        "\"/apps/mockapp\"",
        "\"--gen_type\"",
        "\"dot\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "\"--dot_file\"",
        "\"--dot_root\"",
        "\"DotReaderMainModule\"",
        "\"--loc_json_file_path\"",
        "'DotReaderLib17'",
        "'multisuite_test'",
        "'apps'",
        "'mockapp'",
        "'logs'",
        "\"--log_dir\"",
        "\"--app_gen_output_dir\"",
        "\"--test_build_only\"",
        "\"--skip_xcode_build\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "'MockLib53'",
        "'fixtures'",
        "'cloc_out.json'",
        "'multisuite_test'",
        "'apps'",
        "'mockapp'",
        "'logs'",
        "\"--log_dir\"",
        "\"--app_gen_output_dir\"",
        "\"--test_build_only\"",
        "\"--switch_xcode_versions\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "\"--full_clean\"",
        "'cloc'",
        "'xcodebuild -version'",
        "b'Xcode 10.0\\nBuild version 10A255\\n'",
        "b'test_out'",
        "b'test_error'",
        "'subprocess.Popen'",
        "'distutils.spawn.find_executable'",
        "'/bin/ls'",
        "'MockLib53'",
        "'fixtures'",
        "'test_dot.gv'",
        "'multisuite_test'",
        "'apps'",
        "'mockapp'",
        "'logs'",
        "\"--log_dir\"",
        "\"--app_gen_output_dir\"",
        "\"--dot_file\"",
        "\"--dot_root\"",
        "\"DotReaderMainModule\"",
        "\"--skip_xcode_build\"",
        "\"--test_build_only\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "'DotReaderLib17'",
        "'fixtures'",
        "'test_dot.gv'",
        "'multisuite_test'",
        "'apps'",
        "'mockapp'",
        "'logs'",
        "\"--log_dir\"",
        "\"--app_gen_output_dir\"",
        "\"--dot_file\"",
        "\"--dot_root\"",
        "\"DotReaderMainModule\"",
        "\"--skip_xcode_build\"",
        "\"--lines_of_code\"",
        "\"150000\"",
        "\"--project_generator_type\"",
        "\"bazel\"",
        "'DotReaderLib17'"
    ],
    "variables": [
        "main_path",
        "lib_path",
        "contents",
        "app_contents",
        "lib_contents",
        "app_path",
        "args",
        "command",
        "app_path",
        "test_fixture_path",
        "args",
        "command",
        "app_path",
        "test_fixture_path",
        "loc_test_fixture_path",
        "args",
        "command",
        "root_path",
        "app_path",
        "log_path",
        "args",
        "command",
        "test_cloc_out_path",
        "cloc_out",
        "root_path",
        "app_path",
        "log_path",
        "args",
        "mock_popen",
        "mock_find",
        "return_value",
        "test_fixture_path",
        "root_path",
        "app_path",
        "log_path",
        "args",
        "command",
        "test_fixture_path",
        "root_path",
        "app_path",
        "log_path",
        "args",
        "command"
    ],
    "comments": [
        "Copyright (c) 2021 Uber Technologies, Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Top level dir",
        "App dir",
        "TODO actually verify generated code?",
        "Lib dir",
        "TODO actually verify generated code?",
        "we need the unused named variable for mocking purposes",
        "noinspection PyUnusedLocal",
        "A non empty return value basically means \"I found that executable\"",
        "Note we are assuming that the last project to be generated is the dot project.",
        "If you change the order of project generation, make this match whatever is the new 'last project'",
        "It's a bit fragile, but it's better than not verifying anything currently"
    ],
    "docstrings": [],
    "functions": [
        "verify_genproj",
        "test_flat_genproj",
        "test_dot_genproj",
        "test_dot_genproj_with_loc_mappings",
        "test_flat_multisuite",
        "test_flat_multisuite_mocking_calls",
        "command_callable",
        "test_dot_multisuite",
        "test_all_multisuite"
    ],
    "classes": [
        "TestBazelIntegration"
    ]
}