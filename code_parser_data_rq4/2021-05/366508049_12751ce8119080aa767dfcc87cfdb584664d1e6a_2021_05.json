{
    "identifiers": [
        "asyncio",
        "cProfile",
        "logging",
        "pathlib",
        "chia",
        "util",
        "path",
        "mkdir",
        "path_from_root",
        "root_path",
        "pathlib",
        "Path",
        "log",
        "logging",
        "Logger",
        "path_from_root",
        "root_path",
        "log",
        "info",
        "profile_dir",
        "mkdir",
        "profile_dir",
        "cProfile",
        "Profile",
        "pr",
        "enable",
        "asyncio",
        "sleep",
        "pr",
        "create_stats",
        "pr",
        "dump_stats",
        "profile_dir",
        "counter",
        "log",
        "debug",
        "counter",
        "counter",
        "sys",
        "pstats",
        "io",
        "colorama",
        "init",
        "Fore",
        "Back",
        "Style",
        "subprocess",
        "check_call",
        "pathlib",
        "Path",
        "sys",
        "argv",
        "init",
        "strip",
        "profile_dir",
        "pathlib",
        "Path",
        "io",
        "StringIO",
        "pstats",
        "Stats",
        "profile_dir",
        "counter",
        "stream",
        "f",
        "st",
        "strip_dirs",
        "st",
        "sort_stats",
        "pstats",
        "SortKey",
        "CUMULATIVE",
        "st",
        "print_stats",
        "f",
        "seek",
        "line",
        "f",
        "line",
        "line",
        "total",
        "line",
        "split",
        "line",
        "split",
        "len",
        "columns",
        "columns",
        "columns",
        "sleep",
        "columns",
        "sleep",
        "total",
        "sleep",
        "total",
        "percent",
        "Fore",
        "RED",
        "Style",
        "BRIGHT",
        "percent",
        "Fore",
        "MAGENTA",
        "Style",
        "BRIGHT",
        "percent",
        "Fore",
        "YELLOW",
        "Style",
        "BRIGHT",
        "percent",
        "Style",
        "BRIGHT",
        "percent",
        "Fore",
        "GREEN",
        "percent",
        "color",
        "Back",
        "WHITE",
        "Style",
        "RESET_ALL",
        "counter",
        "percent",
        "quantized",
        "quantized",
        "counter",
        "e",
        "e",
        "profile_dir",
        "pathlib",
        "Path",
        "first",
        "last",
        "last",
        "first",
        "i",
        "first",
        "last",
        "files",
        "append",
        "profile_dir",
        "i",
        "first",
        "first",
        "last",
        "output_file",
        "last",
        "first",
        "last",
        "check_call",
        "output_file",
        "files",
        "open",
        "output_file",
        "f",
        "check_call",
        "output_file",
        "stdout",
        "f",
        "output_file",
        "len",
        "sys",
        "argv",
        "analyze_cpu_usage",
        "profile_dir",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "first",
        "analyze_slot_range",
        "profile_dir",
        "first",
        "last"
    ],
    "literals": [
        "\"profile\"",
        "\"Starting profiler. saving to %s\"",
        "\"slot-%05d.profile\"",
        "\"saving profile %05d\"",
        "\"__main__\"",
        "\"slot-%05d.profile\"",
        "\" function calls \"",
        "\" in \"",
        "\" seconds\"",
        "\"ncalls\"",
        "\"{method 'poll' of 'select.epoll' objects}\"",
        "\"\"",
        "\"%05d: \"",
        "\"%3.0f%% CPU \"",
        "\"%s\"",
        "\"%s|\"",
        "\" \"",
        "\" \"",
        "\"ERROR: first must be <= last when specifying slot range\"",
        "\"slot-%05d.profile\"",
        "\"chia-hotspot-%d\"",
        "\"-%d\"",
        "\"generating call tree for slot(s) [%d, %d]\"",
        "\"gprof2dot\"",
        "\"-f\"",
        "\"pstats\"",
        "\"-o\"",
        "\".dot\"",
        "\".png\"",
        "\"w+\"",
        "\"dot\"",
        "\"-T\"",
        "\"png\"",
        "\".dot\"",
        "\"output written to: %s.png\""
    ],
    "variables": [
        "profile_dir",
        "counter",
        "pr",
        "profile_dir",
        "counter",
        "f",
        "st",
        "total",
        "sleep",
        "total",
        "columns",
        "percent",
        "percent",
        "color",
        "color",
        "color",
        "color",
        "color",
        "color",
        "quantized",
        "files",
        "output_file",
        "first",
        "last"
    ],
    "comments": [
        "to use the profiler, enable it config file, \"enable_profiler\"",
        "the output will be printed to your chia root path, e.g. ~/.chia/mainnet/profile/",
        "to analyze the profile, run:",
        "python chia/utils/profiler.py ~/.chia/mainnet/profile | less -r",
        "this will print CPU usage of the chia full node main thread at 1 second increments.",
        "find a time window of interest and analyze the profile file (which are in pstats format).",
        "for example:",
        "python chia/utils/profiler.py ~/.chia/mainnet/profile 10 20",
        "this will throw CancelledError when we're exiting",
        "output looks like this:",
        "ncalls  tottime  percall  cumtime  percall filename:lineno(function)",
        "1    0.000    0.000    0.000    0.000 <function>",
        "304307 function calls (291692 primitive calls) in 1.031 seconds",
        "TODO: to support windows and MacOS, extend this to a list of function known to sleep the process",
        "e.g. WaitForMultipleObjects or kqueue",
        "cumulative time",
        "this analyzes the CPU usage at all slots saved to the profiler directory",
        "the additional arguments are interpreted as either one slot, or a",
        "slot range (first and last) to analyze"
    ],
    "docstrings": [
        "\"\"\"USAGE:\nprofiler.py <profile-directory>\n    Analyze CPU usage at each 1 second interval from the profiles in the specified\n    directory. Print colored timeline to stdout\nprofiler.py <profile-directory> <slot>\nprofiler.py <profile-directory> <first-slot> <last-slot>\n    Analyze a single slot, or a range of time slots, from the profile directory\n\"\"\""
    ],
    "functions": [
        "profile_task",
        "analyze_cpu_usage",
        "analyze_slot_range"
    ],
    "classes": []
}