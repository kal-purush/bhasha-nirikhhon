{
    "identifiers": [
        "pybloomfilter",
        "time",
        "sys",
        "reads",
        "k",
        "bf",
        "read",
        "reads",
        "make_kmers",
        "read",
        "k",
        "kmers",
        "kmer",
        "kmers",
        "kmer",
        "bf",
        "kmer",
        "T",
        "bf",
        "add",
        "kmer",
        "read",
        "reads",
        "K",
        "read",
        "kmer",
        "kmers",
        "kmer",
        "T",
        "T",
        "kmer",
        "kmer",
        "T",
        "keys",
        "T",
        "kmer",
        "T",
        "kmer",
        "T",
        "reads",
        "k",
        "bf",
        "read",
        "reads",
        "make_kmers",
        "read",
        "k",
        "kmer",
        "kmers",
        "kmer",
        "bf",
        "kmer",
        "T",
        "T",
        "kmer",
        "bf",
        "add",
        "kmer",
        "T",
        "filename",
        "open",
        "filename",
        "fh",
        "fh",
        "readline",
        "fh",
        "readline",
        "rstrip",
        "fh",
        "readline",
        "fh",
        "readline",
        "rstrip",
        "len",
        "seq",
        "sequences",
        "append",
        "seq",
        "qualities",
        "append",
        "qual",
        "sequences",
        "qualities",
        "read",
        "k",
        "i",
        "len",
        "read",
        "k",
        "read",
        "i",
        "i",
        "k",
        "kmers",
        "append",
        "kmer",
        "kmers",
        "bf",
        "T",
        "kmer",
        "kmer",
        "T",
        "T",
        "kmer",
        "kmer",
        "bf",
        "seq",
        "capacity",
        "k",
        "pybloomfilter",
        "BloomFilter",
        "capacity",
        "time",
        "time",
        "create_count_table",
        "seq",
        "k",
        "bf",
        "time",
        "time",
        "end",
        "start",
        "sys",
        "getsizeof",
        "counts",
        "this_time",
        "size",
        "counts",
        "seq",
        "capacity",
        "k",
        "pybloomfilter",
        "BloomFilter",
        "capacity",
        "time",
        "time",
        "second_count_table",
        "seq",
        "k",
        "bf",
        "time",
        "time",
        "end",
        "start",
        "sys",
        "getsizeof",
        "counts",
        "this_time",
        "size",
        "counts",
        "capacity",
        "seq",
        "k",
        "pybloomfilter",
        "BloomFilter",
        "capacity",
        "pybloomfilter",
        "BloomFilter",
        "capacity",
        "create_count_table",
        "seq",
        "k",
        "bf",
        "second_count_table",
        "seq",
        "k",
        "bf2",
        "read",
        "seq",
        "make_kmers",
        "read",
        "k",
        "kmer",
        "kmers",
        "kmer",
        "kmer_set",
        "kmer_set",
        "add",
        "kmer",
        "kmerCount",
        "get_count",
        "bf",
        "counts_one",
        "kmer",
        "get_count",
        "bf2",
        "counts_two",
        "kmer",
        "first",
        "second",
        "diffCount",
        "kmerCount",
        "diffCount",
        "seq",
        "i",
        "sys",
        "stdout",
        "write",
        "i",
        "k",
        "kmerLengths",
        "first_implementation_results",
        "seq",
        "len",
        "seq",
        "k",
        "second_implementation_results",
        "seq",
        "len",
        "seq",
        "k",
        "sys",
        "stdout",
        "write",
        "k",
        "first",
        "first",
        "sys",
        "stdout",
        "write",
        "k",
        "second",
        "second",
        "seq",
        "i",
        "sys",
        "stdout",
        "write",
        "i",
        "k",
        "kmer_lengths",
        "check_differences",
        "i",
        "len",
        "seq",
        "seq",
        "k",
        "sys",
        "stdout",
        "write",
        "k",
        "diff",
        "diff",
        "readFastq",
        "print_timing_size",
        "seq",
        "print_differences",
        "seq"
    ],
    "literals": [
        "\"For factor \"",
        "'\\n'",
        "\"first implementation,  k length = \"",
        "\": \"",
        "\" \"",
        "'\\n'",
        "\"second implementation, k length = \"",
        "\": \"",
        "\" \"",
        "'\\n'",
        "\"For factor \"",
        "'\\n'",
        "\"for kmer length \"",
        "\": \"",
        "\" \"",
        "'\\n'",
        "'small_sample.fastq'"
    ],
    "variables": [
        "T",
        "K",
        "kmers",
        "K",
        "read",
        "T",
        "kmer",
        "kmers",
        "T",
        "kmer",
        "T",
        "kmers",
        "T",
        "kmer",
        "T",
        "kmer",
        "sequences",
        "qualities",
        "seq",
        "qual",
        "kmers",
        "kmer",
        "bf",
        "start",
        "counts",
        "end",
        "this_time",
        "size",
        "bf",
        "start",
        "counts",
        "end",
        "this_time",
        "size",
        "bf",
        "bf2",
        "counts_one",
        "counts_two",
        "kmerCount",
        "diffCount",
        "kmer_set",
        "kmers",
        "kmerCount",
        "first",
        "second",
        "diffCount",
        "kmerLengths",
        "first",
        "second",
        "kmer_lengths",
        "diff",
        "seq",
        "q"
    ],
    "comments": [
        "skip name line",
        "read base sequence",
        "skip placeholder line",
        "base quality line"
    ],
    "docstrings": [
        "\"\"\" this is based on the algorithm from the Melsted and Pritchard paper\"\"\""
    ],
    "functions": [
        "create_count_table",
        "second_count_table",
        "readFastq",
        "make_kmers",
        "get_count",
        "first_implementation_results",
        "second_implementation_results",
        "check_differences",
        "print_timing_size",
        "print_differences"
    ],
    "classes": []
}