{
    "identifiers": [
        "HttpStatus",
        "push",
        "Action",
        "Dispatch",
        "IAuthState",
        "dispatch",
        "response",
        "reason",
        "ModelApi",
        "dispatch",
        "response",
        "response",
        "HttpStatus",
        "HttpStatus",
        "response",
        "HttpStatus",
        "dispatch",
        "push",
        "HttpStatus",
        "HttpStatus",
        "HttpStatus",
        "response",
        "modelName",
        "modelName",
        "modelName",
        "modelName",
        "modelName",
        "ModelApi",
        "modelName",
        "accessTokenGetter",
        "accessTokenGetter",
        "dispatch",
        "response",
        "dispatch",
        "response",
        "id",
        "id",
        "dispatch",
        "response",
        "dispatch",
        "response",
        "payload",
        "payload",
        "dispatch",
        "response",
        "dispatch",
        "payload",
        "original",
        "updated",
        "updated",
        "updated",
        "dispatch",
        "response",
        "dispatch",
        "original",
        "response",
        "payload",
        "payload",
        "payload",
        "original",
        "updated",
        "pathname",
        "onSuccess",
        "pathname",
        "onSuccess",
        "pathname",
        "payload",
        "onSuccess",
        "pathname",
        "payload",
        "onSuccess",
        "pathname",
        "payload",
        "onSuccess",
        "pathname",
        "payload",
        "onSuccess",
        "pathname",
        "payload",
        "method",
        "onSuccess",
        "pathname",
        "onSuccess",
        "payload",
        "pathname",
        "onSuccess",
        "requestOptions",
        "dispatch",
        "fetch",
        "pathname",
        "requestOptions",
        "ModelApi",
        "dispatch",
        "onSuccess",
        "dispatch",
        "reason",
        "dispatch",
        "ModelApi",
        "reason",
        "Headers",
        "headers",
        "headers",
        "headers"
    ],
    "literals": [
        "\"http-status-codes\"",
        "\"react-router-redux\"",
        "\"redux\"",
        "\"../../auth/model/AuthenticationState\"",
        "string",
        "\"UNSUCCESSFUL_API_REQUEST\"",
        "string",
        "\"/api\"",
        "\"/auth/logout\"",
        "\"You are not logged in.\"",
        "\"An unexpected error has occurred. Please try again later.\"",
        "Received unexpected status code ${response.status}",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "SUCCESSFUL_GET_ALL_${modelName.toUpperCase()}S",
        "SUCCESSFUL_GET_${modelName.toUpperCase()}",
        "SUCCESSFUL_CREATE_${modelName.toUpperCase()}",
        "SUCCESSFUL_UPDATE_${modelName.toUpperCase()}",
        "${ModelApi.API_PATH}/${modelName.toLowerCase()}s/",
        "string",
        "${this.endpoint}${id}/",
        "${this.endpoint}${updated.id}",
        "string",
        "string",
        "\"POST\"",
        "string",
        "\"PUT\"",
        "string",
        "\"POST\"",
        "\"PUT\"",
        "string",
        "\"Authorization\"",
        "JWT ${this.getAccessToken()}",
        "\"Content-Type\"",
        "\"application/json\""
    ],
    "variables": [
        "headers"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "unsuccessfulApiRequest",
        "handleApiResponse",
        "initialize",
        "getAll",
        "get",
        "create",
        "update",
        "successfulGetAllAction",
        "successfulGetAction",
        "successfulCreateAction",
        "successfulUpdateAction",
        "getRequest",
        "postRequest",
        "putRequest",
        "apiRequestWithPayload",
        "apiRequest",
        "apiHeaders"
    ],
    "classes": [
        "ModelApi"
    ]
}