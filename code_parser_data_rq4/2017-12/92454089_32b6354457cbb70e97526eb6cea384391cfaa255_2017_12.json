{
    "identifiers": [
        "torch",
        "nn",
        "nn",
        "torch",
        "math",
        "collections",
        "numpy",
        "np",
        "torch",
        "utils",
        "model_zoo",
        "model_zoo",
        "in_planes",
        "out_planes",
        "stride",
        "nn",
        "Conv2d",
        "in_planes",
        "out_planes",
        "kernel_size",
        "stride",
        "stride",
        "padding",
        "bias",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "BasicBlock",
        "conv3x3",
        "inplanes",
        "planes",
        "stride",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "conv3x3",
        "planes",
        "planes",
        "nn",
        "BatchNorm2d",
        "planes",
        "downsample",
        "stride",
        "x",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "downsample",
        "downsample",
        "x",
        "residual",
        "relu",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "Bottleneck",
        "nn",
        "Conv2d",
        "inplanes",
        "planes",
        "kernel_size",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "Conv2d",
        "planes",
        "planes",
        "kernel_size",
        "stride",
        "stride",
        "padding",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "Conv2d",
        "planes",
        "planes",
        "kernel_size",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "downsample",
        "stride",
        "x",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "relu",
        "conv3",
        "bn3",
        "downsample",
        "downsample",
        "x",
        "residual",
        "relu",
        "nn",
        "Module",
        "block",
        "layers",
        "num_classes",
        "ResNet",
        "nn",
        "Conv2d",
        "kernel_size",
        "stride",
        "padding",
        "bias",
        "nn",
        "BatchNorm2d",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "MaxPool2d",
        "kernel_size",
        "stride",
        "padding",
        "_make_layer",
        "block",
        "layers",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "nn",
        "AvgPool2d",
        "nn",
        "Dropout",
        "p",
        "nn",
        "Linear",
        "block",
        "expansion",
        "num_classes",
        "m",
        "modules",
        "isinstance",
        "m",
        "nn",
        "Conv2d",
        "m",
        "kernel_size",
        "m",
        "kernel_size",
        "m",
        "out_channels",
        "m",
        "weight",
        "data",
        "normal_",
        "math",
        "sqrt",
        "n",
        "isinstance",
        "m",
        "nn",
        "BatchNorm2d",
        "m",
        "weight",
        "data",
        "fill_",
        "m",
        "bias",
        "data",
        "zero_",
        "block",
        "planes",
        "blocks",
        "stride",
        "stride",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "kernel_size",
        "stride",
        "stride",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "block",
        "expansion",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "planes",
        "block",
        "expansion",
        "i",
        "blocks",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "nn",
        "Sequential",
        "layers",
        "x",
        "conv1",
        "x",
        "bn1",
        "x",
        "relu",
        "x",
        "maxpool",
        "x",
        "layer1",
        "x",
        "layer2",
        "x",
        "layer3",
        "x",
        "layer4",
        "x",
        "avgpool",
        "x",
        "x",
        "view",
        "x",
        "size",
        "dp",
        "x",
        "fc_action",
        "x",
        "x",
        "old_params",
        "in_channels",
        "collections",
        "OrderedDict",
        "old_params",
        "keys",
        "layer_key",
        "allKeyList",
        "layer_count",
        "len",
        "allKeyList",
        "layer_count",
        "old_params",
        "layer_key",
        "torch",
        "mean",
        "rgb_weight",
        "dim",
        "rgb_weight_mean",
        "unsqueeze",
        "repeat",
        "in_channels",
        "flow_weight",
        "layer_count",
        "old_params",
        "layer_key",
        "layer_count",
        "new_params",
        "pretrained",
        "kwargs",
        "ResNet",
        "BasicBlock",
        "kwargs",
        "pretrained",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "state_dict",
        "change_key_names",
        "pretrained_dict",
        "in_channels",
        "k",
        "v",
        "k",
        "v",
        "new_pretrained_dict",
        "items",
        "k",
        "model_dict",
        "model_dict",
        "update",
        "new_pretrained_dict",
        "model",
        "load_state_dict",
        "model_dict",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "BasicBlock",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "state_dict",
        "k",
        "v",
        "k",
        "v",
        "pretrained_dict",
        "items",
        "k",
        "model_dict",
        "model_dict",
        "update",
        "pretrained_dict",
        "model",
        "load_state_dict",
        "model_dict",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "state_dict",
        "pretrained_dict",
        "data",
        "numpy",
        "pretrained_dict",
        "data",
        "numpy",
        "k",
        "v",
        "k",
        "v",
        "pretrained_dict",
        "items",
        "k",
        "model_dict",
        "model_dict",
        "update",
        "pretrained_dict",
        "model_dict",
        "numpy",
        "model_dict",
        "numpy",
        "fc_origin_weight",
        "fc_origin_bias",
        "torch",
        "from_numpy",
        "fc_new_weight",
        "torch",
        "from_numpy",
        "fc_new_bias",
        "model",
        "load_state_dict",
        "model_dict",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "state_dict",
        "change_key_names",
        "pretrained_dict",
        "in_channels",
        "k",
        "v",
        "k",
        "v",
        "new_pretrained_dict",
        "items",
        "k",
        "model_dict",
        "model_dict",
        "update",
        "new_pretrained_dict",
        "model",
        "load_state_dict",
        "model_dict",
        "model"
    ],
    "literals": [
        "'ResNet'",
        "'flow_resnet18'",
        "'flow_resnet34'",
        "'flow_resnet50'",
        "'flow_resnet50_aux'",
        "'flow_resnet101'",
        "'flow_resnet152'",
        "'resnet18'",
        "'https://download.pytorch.org/models/resnet18-5c106cde.pth'",
        "'resnet34'",
        "'https://download.pytorch.org/models/resnet34-333f7ec4.pth'",
        "'resnet50'",
        "'https://download.pytorch.org/models/resnet50-19c8e357.pth'",
        "'resnet101'",
        "'https://download.pytorch.org/models/resnet101-5d3b4d8f.pth'",
        "'resnet152'",
        "'https://download.pytorch.org/models/resnet152-b121ed2d.pth'",
        "\"3x3 convolution with padding\"",
        "'resnet18'",
        "'resnet34'",
        "'resnet50'",
        "'resnet50'",
        "\"fc.weight\"",
        "\"fc.bias\"",
        "\"fc_aux.weight\"",
        "\"fc_aux.bias\"",
        "\"fc_aux.weight\"",
        "\"fc_aux.bias\"",
        "'resnet101'",
        "'resnet152'"
    ],
    "variables": [
        "__all__",
        "model_urls",
        "expansion",
        "conv1",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "downsample",
        "stride",
        "residual",
        "residual",
        "expansion",
        "conv1",
        "bn1",
        "conv2",
        "bn2",
        "conv3",
        "bn3",
        "relu",
        "downsample",
        "stride",
        "residual",
        "residual",
        "inplanes",
        "conv1",
        "bn1",
        "relu",
        "maxpool",
        "layer1",
        "layer2",
        "layer3",
        "layer4",
        "avgpool",
        "dp",
        "fc_action",
        "n",
        "downsample",
        "downsample",
        "layers",
        "inplanes",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "new_params",
        "layer_count",
        "allKeyList",
        "rgb_weight",
        "rgb_weight_mean",
        "flow_weight",
        "new_params",
        "layer_key",
        "new_params",
        "layer_key",
        "model",
        "in_channels",
        "pretrained_dict",
        "model_dict",
        "new_pretrained_dict",
        "new_pretrained_dict",
        "model",
        "model",
        "pretrained_dict",
        "model_dict",
        "pretrained_dict",
        "model",
        "pretrained_dict",
        "model_dict",
        "fc_origin_weight",
        "fc_origin_bias",
        "pretrained_dict",
        "fc_new_weight",
        "fc_new_bias",
        "fc_new_weight",
        "fc_new_bias",
        "model_dict",
        "model_dict",
        "model",
        "model",
        "in_channels",
        "pretrained_dict",
        "model_dict",
        "new_pretrained_dict",
        "new_pretrained_dict"
    ],
    "comments": [
        "self.fc_aux = nn.Linear(512 * block.expansion, 101)",
        "self.bn_final = nn.BatchNorm1d(num_classes)",
        "self.fc2 = nn.Linear(num_classes, num_classes)",
        "self.fc_final = nn.Linear(num_classes, 101)",
        "x = self.bn_final(x)",
        "x = self.fc2(x)",
        "x = self.fc_final(x)",
        "exclude fc layers",
        "print(type(rgb_weight))",
        "TODO: ugly fix here, why torch.mean() turn tensor to Variable",
        "print(type(rgb_weight_mean))",
        "print(layer_key, new_params[layer_key].size(), type(new_params[layer_key]))",
        "print(layer_key, new_params[layer_key].size(), type(new_params[layer_key]))",
        "model.load_state_dict(model_zoo.load_url(model_urls['resnet18']))",
        "1. filter out unnecessary keys",
        "2. overwrite entries in the existing state dict",
        "3. load the new state dict",
        "model.load_state_dict(model_zoo.load_url(model_urls['resnet50']))",
        "1. filter out unnecessary keys",
        "2. overwrite entries in the existing state dict",
        "3. load the new state dict",
        "model.load_state_dict(model_zoo.load_url(model_urls['resnet50']))",
        "1. filter out unnecessary keys",
        "2. overwrite entries in the existing state dict",
        "print(model_dict)",
        "3. load the new state dict",
        "model.load_state_dict(model_zoo.load_url(model_urls['resnet152']))",
        "1. filter out unnecessary keys",
        "2. overwrite entries in the existing state dict",
        "3. load the new state dict"
    ],
    "docstrings": [
        "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\""
    ],
    "functions": [
        "conv3x3",
        "forward",
        "forward",
        "_make_layer",
        "forward",
        "change_key_names",
        "flow_resnet18",
        "flow_resnet34",
        "flow_resnet50",
        "flow_resnet50_aux",
        "flow_resnet101",
        "flow_resnet152"
    ],
    "classes": [
        "BasicBlock",
        "Bottleneck",
        "ResNet"
    ]
}