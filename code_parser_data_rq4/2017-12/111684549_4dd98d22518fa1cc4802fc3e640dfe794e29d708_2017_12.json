{
    "identifiers": [
        "cv2",
        "numpy",
        "np",
        "argparse",
        "ntpath",
        "iteration",
        "total",
        "prefix",
        "suffix",
        "decimals",
        "length",
        "fill",
        "header",
        "decimals",
        "format",
        "iteration",
        "total",
        "length",
        "iteration",
        "total",
        "fill",
        "filledLength",
        "length",
        "filledLength",
        "prefix",
        "bar",
        "percent",
        "suffix",
        "iteration",
        "total",
        "input_image_file_name",
        "argparse",
        "ArgumentParser",
        "add_help",
        "ap",
        "add_argument",
        "required",
        "help",
        "ap",
        "add_argument",
        "required",
        "help",
        "vars",
        "ap",
        "parse_args",
        "ntpath",
        "dirname",
        "args",
        "ntpath",
        "basename",
        "args",
        "args",
        "input_image_file_name",
        "split",
        "input_image_file_name",
        "split",
        "cv2",
        "imread",
        "args",
        "img",
        "shape",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length",
        "img",
        "min",
        "height",
        "width",
        "min",
        "height",
        "width",
        "cv2",
        "cvtColor",
        "cornerSample",
        "cv2",
        "COLOR_BGR2HSV",
        "hsv_corner",
        "max",
        "hsv_corner",
        "min",
        "np",
        "array",
        "hueMin",
        "np",
        "uint8",
        "np",
        "array",
        "hueMax",
        "np",
        "uint8",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_BGR2HSV",
        "cv2",
        "inRange",
        "hsv_img",
        "lowerBound",
        "upperBound",
        "cv2",
        "bitwise_not",
        "mask",
        "mask",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length",
        "np",
        "ones",
        "np",
        "uint8",
        "cv2",
        "morphologyEx",
        "mask",
        "cv2",
        "MORPH_CLOSE",
        "kernel",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length",
        "cv2",
        "findContours",
        "mask",
        "cv2",
        "RETR_EXTERNAL",
        "cv2",
        "CHAIN_APPROX_SIMPLE",
        "cv2",
        "contourArea",
        "c",
        "c",
        "contours",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length",
        "i",
        "len",
        "areas",
        "areas",
        "i",
        "objectN",
        "contours",
        "i",
        "np",
        "ones",
        "height",
        "width",
        "np",
        "uint8",
        "cv2",
        "drawContours",
        "approxMask",
        "cnt",
        "lineType",
        "cv2",
        "LINE_AA",
        "cv2",
        "bitwise_and",
        "approxMask",
        "mask",
        "cv2",
        "boundingRect",
        "cnt",
        "cv2",
        "merge",
        "img",
        "img",
        "img",
        "approxMask",
        "cv2",
        "imwrite",
        "output_image_dir",
        "objectN",
        "input_image_file_name",
        "res",
        "y",
        "y",
        "h",
        "x",
        "x",
        "w",
        "step",
        "printProgressBar",
        "step",
        "total_steps",
        "prefix",
        "suffix",
        "length"
    ],
    "literals": [
        "''",
        "''",
        "u'\\u2588'",
        "''",
        "\"{0:.\"",
        "\"f}\"",
        "u'-'",
        "'%s |%s| %s%% %s'",
        "\"Your \"",
        "' has been separeted with success !!!'",
        "\"-i\"",
        "\"--image\"",
        "\"Path to the image\"",
        "\"-o\"",
        "\"--output\"",
        "\"./resultObjects/\"",
        "\"Output folder for objects images\"",
        "\"image\"",
        "\"image\"",
        "\"output\"",
        "\".\"",
        "\".\"",
        "\"You are using GetMeThoseObjects 1.0 by Joao Estrela @ DCC.FC.UP.PT\"",
        "\"image\"",
        "'Progress:'",
        "'Complete'",
        "'Progress:'",
        "'Complete'",
        "'Progress:'",
        "'Complete'",
        "'Progress:'",
        "'Complete'",
        "'Progress:'",
        "'Complete'",
        "\"object\"",
        "\"_\"",
        "\".png\"",
        "'Progress:'",
        "'Complete'"
    ],
    "variables": [
        "percent",
        "filledLength",
        "bar",
        "ap",
        "args",
        "total_steps",
        "step",
        "input_image_dir",
        "input_image_file_name",
        "output_image_dir",
        "imageFormat",
        "input_image_file_name",
        "img",
        "height",
        "width",
        "channels",
        "cornerSample",
        "hsv_corner",
        "hueMax",
        "hueMin",
        "lowerBound",
        "upperBound",
        "hsv_img",
        "mask",
        "mask",
        "kernel",
        "mask",
        "im2",
        "contours",
        "hierarchy",
        "areas",
        "objectN",
        "cnt",
        "approxMask",
        "approxMask",
        "x",
        "y",
        "w",
        "h",
        "res"
    ],
    "comments": [
        "Print iterations progress",
        "Clear the current line and print the header",
        "Generate and print the bar",
        "Print New Lines on Complete",
        "construct the argument parser and parse the arguments",
        "Getting top left corner for sampleing background",
        "Making a mask thresholding based on the corner sample",
        "Using some morphological transformations to get a cleaner mask with less noise",
        "Finding contours on mask to get diferent objetcs",
        "Making each object its own image",
        "Only using good contours that have a good area, sorry small objects you will be missed :("
    ],
    "docstrings": [
        "\"\"\"\n    Call in a loop to create terminal progress bar\n    @params:\n        iteration   - Required  : current iteration (Int)\n        total       - Required  : total iterations (Int)\n        prefix      - Optional  : prefix string (Str)\n        suffix      - Optional  : suffix string (Str)\n        decimals    - Optional  : positive number of decimals in percent complete (Int)\n        length      - Optional  : character length of bar (Int)\n        fill        - Optional  : bar fill character (Str)\n        header      - Optional  : header string (Str)\n    \"\"\""
    ],
    "functions": [
        "printProgressBar"
    ],
    "classes": []
}