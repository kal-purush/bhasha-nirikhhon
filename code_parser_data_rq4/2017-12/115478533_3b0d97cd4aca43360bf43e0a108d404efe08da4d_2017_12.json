{
    "identifiers": [
        "h",
        "i",
        "i",
        "h",
        "i",
        "c",
        "parseInt",
        "h",
        "i",
        "i",
        "ret",
        "b64map",
        "c",
        "b64map",
        "c",
        "i",
        "h",
        "c",
        "parseInt",
        "h",
        "i",
        "i",
        "ret",
        "b64map",
        "c",
        "i",
        "h",
        "c",
        "parseInt",
        "h",
        "i",
        "i",
        "ret",
        "b64map",
        "c",
        "b64map",
        "c",
        "ret",
        "ret",
        "b64pad",
        "ret",
        "s",
        "i",
        "i",
        "s",
        "i",
        "s",
        "i",
        "b64pad",
        "v",
        "b64map",
        "s",
        "i",
        "v",
        "k",
        "ret",
        "int2char",
        "v",
        "slop",
        "v",
        "k",
        "k",
        "ret",
        "int2char",
        "slop",
        "v",
        "slop",
        "v",
        "k",
        "k",
        "ret",
        "int2char",
        "slop",
        "ret",
        "int2char",
        "v",
        "slop",
        "v",
        "k",
        "ret",
        "int2char",
        "slop",
        "v",
        "ret",
        "int2char",
        "v",
        "k",
        "k",
        "ret",
        "int2char",
        "slop",
        "ret",
        "s",
        "b64tohex",
        "s",
        "i",
        "i",
        "h",
        "i",
        "a",
        "i",
        "parseInt",
        "h",
        "i",
        "i",
        "a"
    ],
    "literals": [
        "\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"",
        "\"=\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "b64map",
        "b64pad",
        "i",
        "c",
        "ret",
        "ret",
        "i",
        "k",
        "slop",
        "h",
        "i",
        "a"
    ],
    "comments": [
        "convert a base64 string to hex",
        "b64 state, 0-3",
        "convert a base64 string to a byte/number array",
        "piggyback on b64tohex for now, optimize later"
    ],
    "docstrings": [],
    "functions": [
        "hex2b64",
        "b64tohex",
        "b64toBA"
    ],
    "classes": []
}