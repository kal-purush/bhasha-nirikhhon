{
    "identifiers": [
        "os",
        "sys",
        "importlib",
        "scipy",
        "io",
        "scipy",
        "misc",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "pyplot",
        "imshow",
        "PIL",
        "Image",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "time",
        "nst_utils",
        "nst_functions",
        "importlib",
        "reload",
        "nst_utils",
        "importlib",
        "reload",
        "nst_functions",
        "nst_utils",
        "nst_functions",
        "os",
        "chdir",
        "CONFIG",
        "WORKING_DIR",
        "get_images",
        "tf",
        "reset_default_graph",
        "tf",
        "InteractiveSession",
        "load_vgg_model",
        "sess",
        "run",
        "model",
        "assign",
        "content_image",
        "model",
        "sess",
        "run",
        "compute_content_cost",
        "a_C",
        "a_G",
        "sess",
        "run",
        "model",
        "assign",
        "style_image",
        "compute_style_cost",
        "sess",
        "model",
        "CONFIG",
        "STYLE_LAYERS",
        "total_cost",
        "J_content",
        "J_style",
        "alpha",
        "CONFIG",
        "ALPHA",
        "beta",
        "CONFIG",
        "BETA",
        "time",
        "time",
        "model_nn",
        "sess",
        "model",
        "J",
        "J_content",
        "J_style",
        "generated_image",
        "num_iterations",
        "CONFIG",
        "NBR_ITERATIONS",
        "time",
        "time",
        "start_time",
        "elapsed_time",
        "sess",
        "close"
    ],
    "literals": [
        "\"pretrained-model/imagenet-vgg-verydeep-19.mat\"",
        "'input'",
        "'conv4_2'",
        "'input'",
        "\"training time =  \""
    ],
    "variables": [
        "content_image",
        "style_image",
        "generated_image",
        "sess",
        "model",
        "a_C",
        "a_G",
        "J_content",
        "J_style",
        "J",
        "start_time",
        "elapsed_time"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "set your working directory",
        "load content and style image from ./images directory",
        "Reset the graph",
        "Start interactive session",
        "load vgg19 model from disk in ./pretrained-model directory",
        "Assign the content image to be the input of the VGG model.",
        "Select the output tensor of layer conv4_2",
        "Set a_C to be the hidden layer activation from the layer we have selected",
        "Set a_G to be the hidden layer activation from same layer. Here, a_G references model['conv4_2']",
        "and isn't evaluated yet. Later in the code, we'll assign the image G as the model input, so that",
        "when we run the session, this will be the activations drawn from the appropriate layer, with G as input.",
        "Compute the content cost",
        "Assign the input of the model to be the \"style\" image",
        "Compute the style cost",
        "compute the total cost",
        "optimize and train, produce output images to be saved in ./output diretory",
        "measure training time",
        "close the session"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Fri Dec  1 12:50:19 2017\n\n@author: Stephane\ncode inspired by Deeplearning.ai - Coursera course from Andrew Ng\nhttps://www.coursera.org/learn/convolutional-neural-networks\n\n\"\"\""
    ],
    "functions": [],
    "classes": []
}