{
    "identifiers": [
        "Crossword",
        "Fields",
        "Gurobi",
        "Collections",
        "Generic",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Crossword",
        "Crossword",
        "crossword",
        "crossword",
        "Grid",
        "GetLength",
        "crossword",
        "Grid",
        "GetLength",
        "wordLengthHistogram",
        "Sum",
        "wl",
        "Key",
        "wl",
        "Value",
        "sizeX",
        "sizeY",
        "y",
        "sizeY",
        "y",
        "x",
        "sizeX",
        "x",
        "totalFields",
        "crossword",
        "Grid",
        "y",
        "x",
        "Blocked",
        "Round",
        "totalFields",
        "requiredAmountOfLetters",
        "totalFields",
        "amountQuestions",
        "GRBEnv",
        "GRBModel",
        "env",
        "GRBVar",
        "GRBVar",
        "sizeY",
        "sizeX",
        "GRBVar",
        "GRBVar",
        "sizeY",
        "sizeX",
        "y",
        "sizeY",
        "y",
        "x",
        "sizeX",
        "x",
        "crossword",
        "Grid",
        "y",
        "x",
        "Blocked",
        "fields",
        "y",
        "x",
        "m",
        "AddVar",
        "GRB",
        "BINARY",
        "x",
        "y",
        "questionType",
        "y",
        "x",
        "m",
        "AddVar",
        "GRB",
        "BINARY",
        "x",
        "y",
        "GRBLinExpr",
        "y",
        "sizeY",
        "y",
        "x",
        "sizeX",
        "x",
        "allFieldsSum",
        "fields",
        "y",
        "x",
        "x",
        "sizeX",
        "fields",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "noQuestionToTheRightAllowed",
        "y",
        "sizeY",
        "fields",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "noQuestionTowardsDownAllowed",
        "noQuestionToTheRightAllowed",
        "noQuestionTowardsDownAllowed",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "noQuestionToTheRightAllowed",
        "m",
        "AddConstr",
        "questionType",
        "y",
        "x",
        "y",
        "x",
        "noQuestionTowardsDownAllowed",
        "m",
        "AddConstr",
        "questionType",
        "y",
        "x",
        "y",
        "x",
        "x",
        "maxWordLength",
        "sizeX",
        "GRBLinExpr",
        "xi",
        "maxWordLength",
        "xi",
        "allHorizontalFields",
        "fields",
        "y",
        "x",
        "xi",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "allHorizontalFields",
        "y",
        "x",
        "y",
        "maxWordLength",
        "sizeY",
        "GRBLinExpr",
        "yi",
        "maxWordLength",
        "yi",
        "allVerticalFields",
        "fields",
        "y",
        "yi",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "questionType",
        "y",
        "x",
        "allVerticalFields",
        "y",
        "x",
        "GRBLinExpr",
        "sizeY",
        "sizeX",
        "y",
        "sizeY",
        "y",
        "x",
        "sizeX",
        "x",
        "x",
        "y",
        "m",
        "AddVar",
        "GRB",
        "BINARY",
        "y",
        "x",
        "len",
        "maxWordLength",
        "len",
        "x",
        "len",
        "fields",
        "y",
        "x",
        "len",
        "questionType",
        "y",
        "x",
        "len",
        "GRBLinExpr",
        "xi",
        "len",
        "xi",
        "questionsInbetween",
        "fields",
        "y",
        "x",
        "xi",
        "m",
        "AddConstr",
        "attachedToHorizontalQuestion",
        "isQuestionAndPointsRight",
        "questionsInbetween",
        "m",
        "AddConstr",
        "attachedToHorizontalQuestion",
        "questionsInbetween",
        "fields",
        "y",
        "x",
        "len",
        "questionType",
        "y",
        "x",
        "len",
        "GRBLinExpr",
        "len",
        "maxWordLength",
        "len",
        "x",
        "len",
        "crossword",
        "Grid",
        "y",
        "x",
        "len",
        "Blocked",
        "questionsToTheLeft",
        "fields",
        "y",
        "x",
        "len",
        "m",
        "AddConstr",
        "attachedToHorizontalQuestion",
        "questionsToTheLeft",
        "m",
        "AddVar",
        "GRB",
        "BINARY",
        "y",
        "x",
        "len",
        "maxWordLength",
        "len",
        "y",
        "len",
        "fields",
        "y",
        "len",
        "x",
        "questionType",
        "y",
        "len",
        "x",
        "GRBLinExpr",
        "yi",
        "len",
        "yi",
        "questionsInbetween",
        "fields",
        "y",
        "yi",
        "x",
        "m",
        "AddConstr",
        "attachedToVerticalQuestion",
        "isQuestionAndPointsDown",
        "questionsInbetween",
        "m",
        "AddConstr",
        "attachedToVerticalQuestion",
        "questionsInbetween",
        "fields",
        "y",
        "len",
        "x",
        "questionType",
        "y",
        "len",
        "x",
        "GRBLinExpr",
        "len",
        "maxWordLength",
        "len",
        "y",
        "len",
        "crossword",
        "Grid",
        "y",
        "len",
        "x",
        "Blocked",
        "questionsTowardsDown",
        "fields",
        "y",
        "len",
        "x",
        "m",
        "AddConstr",
        "attachedToVerticalQuestion",
        "questionsTowardsDown",
        "m",
        "AddConstr",
        "attachedToHorizontalQuestion",
        "attachedToVerticalQuestion",
        "fields",
        "y",
        "x",
        "y",
        "x",
        "partOfAWord",
        "y",
        "x",
        "attachedToHorizontalQuestion",
        "partOfAWord",
        "y",
        "x",
        "attachedToVerticalQuestion",
        "m",
        "AddConstr",
        "fields",
        "sizeY",
        "y",
        "sizeY",
        "y",
        "sizeX",
        "x",
        "sizeX",
        "x",
        "m",
        "AddConstr",
        "fields",
        "y",
        "x",
        "amountQuestions",
        "m",
        "AddConstr",
        "allFieldsSum",
        "amountQuestions",
        "tolerance",
        "m",
        "AddConstr",
        "allFieldsSum",
        "amountQuestions",
        "tolerance",
        "wl",
        "wordLengthHistogram",
        "Keys",
        "Max",
        "wordLengthHistogram",
        "wl",
        "wordLengthRatio",
        "GRBLinExpr",
        "y",
        "sizeY",
        "area",
        "y",
        "x",
        "sizeX",
        "area",
        "x",
        "GRBLinExpr",
        "i",
        "area",
        "i",
        "j",
        "area",
        "j",
        "clusterTotal",
        "fields",
        "y",
        "i",
        "x",
        "j",
        "m",
        "AddVar",
        "GRB",
        "BINARY",
        "y",
        "x",
        "m",
        "AddConstr",
        "varClusterTotalPenalty",
        "clusterTotal",
        "y",
        "x",
        "m",
        "AddConstr",
        "varClusterTotalPenalty",
        "clusterTotal",
        "y",
        "x",
        "clusterPenalty",
        "varClusterTotalPenalty",
        "m",
        "SetObjective",
        "clusterPenalty",
        "GRB",
        "MINIMIZE",
        "m",
        "SetCallback",
        "GRBMipSolCallback",
        "fields",
        "questionType",
        "m",
        "Optimize",
        "m",
        "ComputeIIS",
        "m",
        "Write",
        "m",
        "Dispose",
        "env",
        "Dispose"
    ],
    "literals": [
        "\"Field\"",
        "\"_\"",
        "\"QType\"",
        "\"_\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_right1\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_right2\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_right3\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_down1\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_down2\"",
        "\"MinWordLength3\"",
        "\"_\"",
        "\"_down3\"",
        "\"NoQuestionAllowed\"",
        "\"_\"",
        "\"QuestionCantPointRight\"",
        "\"_\"",
        "\"QuestionCantPointDown\"",
        "\"_\"",
        "\"MaxLengthHorizontal\"",
        "\"_\"",
        "\"MaxLengthVertical\"",
        "\"_\"",
        "\"attachedToHorizontalQuestion\"",
        "\"_\"",
        "\"attachedToVerticalQuestion\"",
        "\"_\"",
        "\"AttachedToQuestionConstraint_\"",
        "\"_\"",
        "\"amountOfQuestionsTolerance_1\"",
        "\"amountOfQuestionsTolerance_2\"",
        "\"varClusterTotalPenalty\"",
        "\"_\"",
        "\"clusterPenaltyConstr1_\"",
        "\"_\"",
        "\"clusterPenaltyConstr2_\"",
        "\"_\"",
        "\"model.ilp\""
    ],
    "variables": [
        "wordLengthHistogram",
        "maxWordLength",
        "sizeY",
        "sizeX",
        "requiredAmountOfLetters",
        "totalFields",
        "y",
        "x",
        "amountQuestions",
        "wordLengthRatio",
        "GRBEnv",
        "env",
        "GRBModel",
        "m",
        "fields",
        "questionType",
        "y",
        "x",
        "GRBLinExpr",
        "allFieldsSum",
        "y",
        "x",
        "noQuestionToTheRightAllowed",
        "noQuestionTowardsDownAllowed",
        "totalQuestionsHorizontal",
        "totalQuestionsVertical",
        "allHorizontalFields",
        "xi",
        "allVerticalFields",
        "yi",
        "partOfAWord",
        "y",
        "x",
        "attachedToHorizontalQuestion",
        "len",
        "isQuestionAndPointsRight",
        "questionsInbetween",
        "xi",
        "questionsToTheLeft",
        "len",
        "attachedToVerticalQuestion",
        "len",
        "isQuestionAndPointsDown",
        "questionsInbetween",
        "yi",
        "questionsTowardsDown",
        "len",
        "c",
        "y",
        "x",
        "tolerance",
        "histogramTolerance",
        "clusterPenalty",
        "area",
        "y",
        "x",
        "clusterTotal",
        "i",
        "j",
        "varClusterTotalPenalty"
    ],
    "comments": [
        "Rewrite word lengths",
        "</summary>",
        "0 = letter, 1 = question",
        "0 = right, 1 = down",
        "create a var for every non-blocked field",
        "All non-question fields have to belong to a word",
        "E.g. if a question points right, only lengths 3 to 9 are allowed",
        "for right: if [0,0] is question, [0,1..3] must not be question",
        "for down:",
        "max word length constraints",
        "for right: if [0,0] is question, [0,1..maxLength+1] must have at least another question field",
        "for down:",
        "Does a field belong to zero, one or two questions?",
        "this constraint doesn't work for [0,0]",
        "does this field have a question to the left?",
        "var attachedToHorizontalQuestion = new GRBLinExpr();\n                    for (int l = 0; l < maxWordLength; l++)\n                    {\n                        if (x - l - 1 < 0) continue;\n                        var attachedToHorizontalQuestionSpecificLength = m.AddVar(0, 1, 0, GRB.BINARY, \"varAttachedToHorizontalQuestionLength\" + l + \"_\" + y + \"_\" + x);\n                        // If the first field is a question and points to the right, and no letters inbetween are questions\n                        var isQuestionAndPointsRight = fields[y, x - l - 1] + (1 - questionType[y, x - l - 1]);\n                        var allHorizontalFields = new GRBLinExpr();\n                        for (int xi = 0; xi <= l; xi++)\n                            allHorizontalFields += fields[y, x - xi];\n                        m.AddConstr(attachedToHorizontalQuestionSpecificLength >= isQuestionAndPointsRight - 1 - allHorizontalFields);\n                        for (int xi = 0; xi <= l; xi++) m.AddConstr(attachedToHorizontalQuestionSpecificLength <= 1 - fields[y, x - xi]);\n                        m.AddConstr(attachedToHorizontalQuestionSpecificLength <= fields[y, x - l - 1]);\n                        m.AddConstr(attachedToHorizontalQuestionSpecificLength <= 1 - questionType[y, x - l - 1]);\n                        //m.AddConstr(attachedToHorizontalQuestionSpecificLength <= isQuestionAndPointsRight * 0.5);\n                        //m.AddConstr(attachedToHorizontalQuestionSpecificLength <= 1 - allHorizontalFields * (1d / (l + 1)));\n                        attachedToHorizontalQuestion += attachedToHorizontalQuestionSpecificLength;\n                    }",
        "RETRY",
        "0 IF first question is not pointing right OR there is no question to the left",
        "firstQuestion ==> total fields < 2",
        "the first question but DOESNT look right",
        "does this field have a question towards down?",
        "var attachedToVerticalQuestion = new GRBLinExpr();\n                    for (int l = 0; l < maxWordLength; l++)\n                    {\n                        if (y - l - 1 < 0) continue;\n                        var attachedToVerticalQuestionSpecificLength = m.AddVar(0, 1, 0, GRB.BINARY, \"varAttachedToVerticalQuestionLength\" + l + \"_\" + y + \"_\" + x);\n                        // If the first field is a question and points to the right, and no letters inbetween are questions\n                        var isQuestionAndPointsDown = fields[y - l - 1, x] + questionType[y - l - 1, x];\n                        var allVerticalFields = new GRBLinExpr();\n                        for (int yi = 0; yi <= l; yi++)\n                            allVerticalFields += fields[y - yi, x];\n                        m.AddConstr(attachedToVerticalQuestionSpecificLength >= isQuestionAndPointsDown - 1 - allVerticalFields);\n                        for (int yi = 0; yi <= l; yi++) m.AddConstr(attachedToVerticalQuestionSpecificLength <= 1 - fields[y - yi, x]);\n                        m.AddConstr(attachedToVerticalQuestionSpecificLength <= fields[y - l - 1, x]);\n                        m.AddConstr(attachedToVerticalQuestionSpecificLength <= questionType[y - l - 1, x]);\n                        //m.AddConstr(attachedToVerticalQuestionSpecificLength <= isQuestionAndPointsDown * 0.5);\n                        //m.AddConstr(attachedToVerticalQuestionSpecificLength <= 1 - allVerticalFields * (1d / (l + 1)));\n                        attachedToVerticalQuestion += attachedToVerticalQuestionSpecificLength;\n                    }",
        "the first question but DOESNT look down",
        "c.Lazy = 1;",
        "right now, [0,0] can only be a question",
        "and similarly the bottom 3x3 can only be letters",
        "Objective:",
        "questions should be around ~22% (allFieldsSum ~= amountQuestions)",
        "dead fields",
        "var uncrossedLetters = new GRBVar[sizeY, sizeX];\n            var uncrossedLettersPenalty = new GRBLinExpr();\n            for (int y = 0; y < sizeY; y++)\n            {\n                for (int x = 0; x < sizeX; x++)\n                {\n                    if (x >= 1 || y >= 1)\n                    {\n                        uncrossedLetters[y, x] = m.AddVar(0, 1, 0, GRB.BINARY, \"isUncrossedLetter\" + y + \"_\" + x);\n                        m.AddConstr(uncrossedLetters[y, x] <= partOfAWord[y, x, 0] + partOfAWord[y, x, 1]); // if 0 ==> 0 NECESSARY?\n                        m.AddConstr(uncrossedLetters[y, x] <= 2 - partOfAWord[y, x, 0] - partOfAWord[y, x, 1]); // if 2 ==> 0\n                        m.AddConstr(uncrossedLetters[y, x] <= 1 - fields[y, x]); // if it's a question it can't be a dead field\n\n                        m.AddConstr(uncrossedLetters[y, x] >= partOfAWord[y, x, 0] - partOfAWord[y, x, 1] - fields[y, x]); // horizontal XOR vertical\n                        m.AddConstr(uncrossedLetters[y, x] >= partOfAWord[y, x, 1] - partOfAWord[y, x, 0] - fields[y, x]);\n                        uncrossedLettersPenalty += uncrossedLetters[y, x];\n                    }\n                }\n            }\n            // penalty for nearby uncrossed letters\n            var deadFieldPenalty = new GRBLinExpr();\n            for (int y = 0; y < sizeY; y++)\n            {\n                for (int x = 0; x < sizeX; x++)\n                {\n                    if (x >= 1 && y >= 1)\n                    {\n                        var isDeadArea = m.AddVar(0, 1, 0, GRB.BINARY, \"isDeadArea\" + y + \"_\" + x);\n                        m.AddConstr(isDeadArea >= uncrossedLetters[y, x] + uncrossedLetters[y - 1, x] - 1);\n                        m.AddConstr(isDeadArea >= uncrossedLetters[y, x] + uncrossedLetters[y, x - 1] - 1);\n                        m.AddConstr(isDeadArea <= uncrossedLetters[y, x]);\n                        m.AddConstr(isDeadArea <= uncrossedLetters[y - 1, x] + uncrossedLetters[y, x - 1]);\n                        deadFieldPenalty += isDeadArea;\n                    }\n                }\n            }",
        "as many partOfAWord == 2 as possible",
        "var manyCrossedWords = new GRBLinExpr();\n            for (int y = 0; y < sizeY; y++)\n                for (int x = 0; x < sizeX; x++)\n                    manyCrossedWords += partOfAWord[y, x];",
        "ideal histogram comparison",
        "var wordHistogramDifferences = new GRBLinExpr();",
        "var varDiffInput = m.AddVar(-sizeX * sizeY / 3, sizeX * sizeY / 3, 0, GRB.INTEGER, \"varDiffInput\" + wl);\n                m.AddConstr(varDiffInput == (wordLengthHistogram[wl] - lengths[wl]));\n                var varDiffRes = m.AddVar(0, sizeX * sizeY / 3, 0, GRB.INTEGER, \"varDiff\" + wl);\n                m.AddGenConstrAbs(varDiffRes, varDiffInput, \"diffGenConstr\" + wl);\n                wordHistogramDifferences += varDiffRes;",
        "m.AddConstr(wordLengthHistogram[wl] - lengths[wl] >= -histogramTolerance);",
        "m.AddConstr(wordLengthHistogram[wl] - lengths[wl] <= histogramTolerance);",
        "question field clusters",
        "in a field of 2x2, minimize the nr of fields where there are 2-4 questions resp. maximize 0-1 questions",
        "0-1 = good, 2-4 = bad",
        "m.AddConstr(deadFieldPenalty <= 30);",
        "amountOfQuestionsRating * (100d / sizeX / sizeY) + manyCrossedWords +  + wordHistogramDifferences",
        "clusterPenalty * 100"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "GurobiSolver3"
    ],
    "classes": [
        "GurobiSolver3"
    ]
}