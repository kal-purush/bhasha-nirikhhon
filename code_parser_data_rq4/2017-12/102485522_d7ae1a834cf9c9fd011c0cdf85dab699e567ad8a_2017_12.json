{
    "identifiers": [
        "nodePackage",
        "java",
        "time",
        "LocalDate",
        "java",
        "time",
        "format",
        "DateTimeFormatter",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "regex",
        "Matcher",
        "java",
        "util",
        "regex",
        "Pattern",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "stream",
        "IntStream",
        "javax",
        "script",
        "ScriptEngine",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "JsonNode",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "factValuePackage",
        "ruleParser",
        "inferencePackage",
        "givenList",
        "outcomeList",
        "givenList",
        "size",
        "numberOfTarget",
        "iterateWorkingMemory",
        "iterativeNodeMap",
        "iterativeNodeIdMap",
        "iterativeTopoSortedList",
        "iterativeInclusiveList",
        "iterativeDependencyList",
        "iterativeDependencyMatrix",
        "summaryList",
        "childText",
        "tokens",
        "childText",
        "tokens",
        "numberOfTarget",
        "iterateWorkingMemory",
        "iterativeTopoSortedList",
        "iterativeDependencyList",
        "iterativeInclusiveList",
        "summaryList",
        "iterativeNodeMap",
        "iterativeNodeMap",
        "iterativeNodeMap",
        "iterativeNodeMap",
        "iterativeNodeIdMap",
        "iterateWorkingMemory",
        "dependencyMatrix",
        "iterativeDependencyMatrix",
        "dependencyMatrix",
        "iterativeDependencyMatrix",
        "givenList",
        "givenList",
        "givenList",
        "givenList",
        "outcomeList",
        "parentText",
        "childText",
        "lineNumber",
        "childText",
        "childText",
        "replaceAll",
        "tokens",
        "Tokenizer",
        "getTokens",
        "childText",
        "dependencyType",
        "firstTokens",
        "tokens",
        "tokensList",
        "get",
        "trim",
        "firstTokens",
        "equals",
        "dependencyType",
        "DependencyType",
        "getOr",
        "firstTokens",
        "equals",
        "dependencyType",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getAnd",
        "nodeNameToLookFor",
        "childText",
        "replaceFirst",
        "trim",
        "data",
        "iterativeNodeMap",
        "get",
        "nodeNameToLookFor",
        "data",
        "tokens",
        "Tokenizer",
        "getTokens",
        "childText",
        "data",
        "nodeNameToLookFor",
        "tokens",
        "data",
        "getFactValue",
        "getValue",
        "equals",
        "handleWarning",
        "parentText",
        "variableName",
        "data",
        "getVariableName",
        "tempNode",
        "data",
        "possibleChildNodeKeyList",
        "iterativeNodeMap",
        "keySet",
        "stream",
        "key",
        "key",
        "matches",
        "variableName",
        "collect",
        "Collectors",
        "toList",
        "possibleChildNodeKeyList",
        "isEmpty",
        "possibleChildNodeKeyList",
        "stream",
        "forEachOrdered",
        "item",
        "iterativeDependencyList",
        "add",
        "tempNode",
        "iterativeNodeMap",
        "get",
        "item",
        "DependencyType",
        "getOr",
        "possibleParentNodeKeyList",
        "iterativeNodeMap",
        "keySet",
        "stream",
        "key",
        "key",
        "matches",
        "variableName",
        "collect",
        "Collectors",
        "toList",
        "possibleParentNodeKeyList",
        "isEmpty",
        "possibleParentNodeKeyList",
        "stream",
        "forEachOrdered",
        "item",
        "iterativeDependencyList",
        "add",
        "iterativeNodeMap",
        "get",
        "item",
        "tempNode",
        "DependencyType",
        "getOr",
        "data",
        "setNodeLine",
        "lineNumber",
        "iterativeNodeMap",
        "put",
        "data",
        "getNodeName",
        "data",
        "iterativeNodeIdMap",
        "put",
        "data",
        "getNodeId",
        "data",
        "getNodeName",
        "iterativeDependencyList",
        "add",
        "data",
        "data",
        "dependencyType",
        "iterativeDependencyList",
        "add",
        "iterativeNodeMap",
        "get",
        "parentText",
        "replace",
        "trim",
        "data",
        "dependencyType",
        "iterateParent",
        "parentText",
        "checkText",
        "lineNumber",
        "dt",
        "checkText",
        "contains",
        "DependencyType",
        "getOr",
        "DependencyType",
        "getAnd",
        "tokens",
        "Tokenizer",
        "getTokens",
        "checkText",
        "valueConclusionMatcher",
        "Pattern",
        "compile",
        "comparisonMatcher",
        "Pattern",
        "compile",
        "exprConclusionMatcher",
        "Pattern",
        "compile",
        "warningMatcher",
        "Pattern",
        "compile",
        "matchPatterns",
        "warningMatcher",
        "valueConclusionMatcher",
        "comparisonMatcher",
        "exprConclusionMatcher",
        "checkText",
        "checkText",
        "replaceAll",
        "trim",
        "data",
        "iterativeNodeMap",
        "get",
        "checkText",
        "trim",
        "data",
        "p",
        "matcher",
        "i",
        "i",
        "matchPatterns",
        "length",
        "i",
        "p",
        "matchPatterns",
        "i",
        "matcher",
        "p",
        "matcher",
        "tokens",
        "tokensString",
        "matcher",
        "find",
        "i",
        "handleWarning",
        "checkText",
        "data",
        "checkText",
        "tokens",
        "data",
        "checkText",
        "tokens",
        "nodeValueType",
        "data",
        "getFactValue",
        "getType",
        "valueString",
        "data",
        "getFactValue",
        "getValue",
        "toString",
        "variableName",
        "data",
        "getVariableName",
        "tempNode",
        "data",
        "possibleChildNodeKeyList",
        "nodeValueType",
        "equals",
        "FactValueType",
        "STRING",
        "iterativeNodeMap",
        "keySet",
        "stream",
        "key",
        "key",
        "matches",
        "variableName",
        "key",
        "matches",
        "valueString",
        "collect",
        "Collectors",
        "toList",
        "iterativeNodeMap",
        "keySet",
        "stream",
        "key",
        "key",
        "matches",
        "variableName",
        "collect",
        "Collectors",
        "toList",
        "possibleChildNodeKeyList",
        "isEmpty",
        "possibleChildNodeKeyList",
        "stream",
        "forEachOrdered",
        "item",
        "iterativeDependencyList",
        "add",
        "tempNode",
        "iterativeNodeMap",
        "get",
        "item",
        "DependencyType",
        "getOr",
        "data",
        "getFactValue",
        "getValue",
        "equals",
        "handleWarning",
        "parentText",
        "data",
        "checkText",
        "tokens",
        "exVariableName",
        "data",
        "getVariableName",
        "exTempNode",
        "data",
        "exKeyList",
        "iterativeNodeMap",
        "keySet",
        "stream",
        "key",
        "key",
        "matches",
        "exVariableName",
        "collect",
        "Collectors",
        "toList",
        "exKeyList",
        "isEmpty",
        "exKeyList",
        "stream",
        "forEachOrdered",
        "item",
        "iterativeDependencyList",
        "add",
        "iterativeNodeMap",
        "get",
        "item",
        "exTempNode",
        "DependencyType",
        "getOr",
        "data",
        "getFactValue",
        "getValue",
        "equals",
        "handleWarning",
        "parentText",
        "data",
        "setNodeLine",
        "lineNumber",
        "iterativeNodeMap",
        "put",
        "data",
        "getNodeName",
        "data",
        "iterativeNodeIdMap",
        "put",
        "data",
        "getNodeId",
        "data",
        "getNodeName",
        "nodeOption",
        "firstTokenString",
        "tokens",
        "tokensList",
        "get",
        "firstTokenString",
        "contains",
        "firstTokenString",
        "contains",
        "firstTokenString",
        "contains",
        "nodeOption",
        "DependencyType",
        "getNot",
        "firstTokenString",
        "contains",
        "nodeOption",
        "DependencyType",
        "getKnown",
        "iterativeDependencyList",
        "add",
        "data",
        "data",
        "nodeOption",
        "dependency",
        "iterateParent",
        "equals",
        "parentText",
        "dependency",
        "data",
        "dt",
        "parentText",
        "parentText",
        "replace",
        "trim",
        "parentCheckNode",
        "iterativeNodeMap",
        "get",
        "parentText",
        "dependency",
        "parentCheckNode",
        "data",
        "dt",
        "iterativeDependencyList",
        "add",
        "dependency",
        "Override",
        "childText",
        "tokens",
        "iterativeNodeIdMap",
        "iterativeNodeMap",
        "tokens",
        "tokensStringList",
        "get",
        "contains",
        "numberOfTarget",
        "tokens",
        "tokensList",
        "get",
        "tokens",
        "tokensList",
        "get",
        "numberOfTarget",
        "numberOfTarget",
        "numberOfTarget",
        "variableName",
        "childText",
        "replaceAll",
        "trim",
        "nodeName",
        "childText",
        "trim",
        "tokensStringListSize",
        "tokens",
        "tokensStringList",
        "size",
        "lastToken",
        "tokens",
        "tokensList",
        "get",
        "tokensStringListSize",
        "lastTokenString",
        "tokens",
        "tokensStringList",
        "get",
        "tokensStringListSize",
        "setValue",
        "lastTokenString",
        "lastToken",
        "iterativeNodeMap",
        "put",
        "nodeName",
        "iterativeNodeIdMap",
        "put",
        "nodeId",
        "nodeName",
        "Override",
        "LineType",
        "ITERATE",
        "setIterativeNodeMap",
        "handlingVirtualNode",
        "iterativeDependencyList",
        "numberOfRules",
        "Node",
        "getStaticNodeId",
        "dependencyMatrix",
        "numberOfRules",
        "numberOfRules",
        "iterativeDependencyList",
        "forEach",
        "dp",
        "parentId",
        "dp",
        "getParentNode",
        "getNodeId",
        "childId",
        "dp",
        "getChildNode",
        "getNodeId",
        "dpType",
        "dp",
        "getDependencyType",
        "dependencyMatrix",
        "parentId",
        "childId",
        "dpType",
        "dependencyMatrix",
        "dependencyList",
        "virtualNodeMap",
        "iterativeNodeMap",
        "values",
        "stream",
        "forEachOrdered",
        "node",
        "virtualNodeMap",
        "put",
        "node",
        "getNodeName",
        "node",
        "dpList",
        "dependencyList",
        "stream",
        "dp",
        "node",
        "getNodeName",
        "equals",
        "dp",
        "getParentNode",
        "getNodeName",
        "collect",
        "Collectors",
        "toList",
        "dpList",
        "isEmpty",
        "dp",
        "dpList",
        "dp",
        "getDependencyType",
        "DependencyType",
        "getAnd",
        "DependencyType",
        "getAnd",
        "dp",
        "getDependencyType",
        "DependencyType",
        "getOr",
        "DependencyType",
        "getOr",
        "hasAndOr",
        "hasAndOr",
        "parentNodeOfVirtualNodeName",
        "node",
        "getNodeName",
        "virtualNode",
        "parentNodeOfVirtualNodeName",
        "Tokenizer",
        "getTokens",
        "parentNodeOfVirtualNodeName",
        "iterativeNodeIdMap",
        "put",
        "virtualNode",
        "getNodeId",
        "parentNodeOfVirtualNodeName",
        "virtualNodeMap",
        "put",
        "parentNodeOfVirtualNodeName",
        "virtualNode",
        "dependencyList",
        "add",
        "node",
        "virtualNode",
        "DependencyType",
        "getOr",
        "dpList",
        "stream",
        "dp",
        "dp",
        "getDependencyType",
        "DependencyType",
        "getAnd",
        "DependencyType",
        "getAnd",
        "forEachOrdered",
        "dp",
        "dp",
        "setParentNode",
        "virtualNode",
        "virtualNodeMap",
        "Override",
        "workingMemory",
        "nashorn",
        "nodeOption",
        "givenList",
        "workingMemory",
        "get",
        "getFactValue",
        "getValue",
        "toString",
        "givenListSize",
        "givenList",
        "size",
        "createIterativeDependencyMatrix",
        "iterativeTopoSortedList",
        "TopoSort",
        "bfsTopoSort",
        "iterativeNodeMap",
        "iterativeNodeIdMap",
        "iterativeDependencyMatrix",
        "getDependencyMatrixArray",
        "i",
        "i",
        "givenListSize",
        "i",
        "inferenceIterate",
        "nashorn",
        "givenList",
        "get",
        "i",
        "nodeOption",
        "iterateWorkingMemory",
        "get",
        "getNodeName",
        "nashorn",
        "data",
        "dependency",
        "mapper",
        "dataJsonNode",
        "mapper",
        "valueToTree",
        "data",
        "iterateWorkingMemory",
        "containsKey",
        "getNodeName",
        "iterativeTopoSortedList",
        "stream",
        "forEachOrdered",
        "node",
        "iterativeInclusiveList",
        "add",
        "node",
        "getNodeName",
        "hasChildren",
        "node",
        "canEvaluate",
        "node",
        "nashorn",
        "fv",
        "convertFactValue",
        "Tokenizer",
        "getTokens",
        "dataJsonNode",
        "path",
        "node",
        "getNodeName",
        "asText",
        "setFact",
        "node",
        "getVariableName",
        "fv",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "dependency",
        "forwardChaining",
        "findNodeIndex",
        "node",
        "getNodeName",
        "nashorn",
        "hasChildren",
        "node",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getVariableName",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getNodeName",
        "iterativeInclusiveList",
        "contains",
        "node",
        "getNodeName",
        "addChildRuleIntoInclusiveList",
        "node",
        "outcomeList",
        "add",
        "iterateWorkingMemory",
        "get",
        "nodeName",
        "getValue",
        "nodeIndex",
        "nashorn",
        "IntStream",
        "nodeIndex",
        "forEach",
        "i",
        "node",
        "iterativeTopoSortedList",
        "get",
        "nodeIndex",
        "i",
        "iterativeInclusiveList",
        "contains",
        "node",
        "getNodeName",
        "backPropagation",
        "nodeIndex",
        "i",
        "nashorn",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getVariableName",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getNodeName",
        "addParentIntoInclusiveList",
        "node",
        "i",
        "nashorn",
        "currentNode",
        "iterativeTopoSortedList",
        "get",
        "i",
        "currentLineType",
        "currentNode",
        "getLineType",
        "iterateWorkingMemory",
        "containsKey",
        "currentNode",
        "getVariableName",
        "hasChildren",
        "currentNode",
        "canDetermine",
        "currentNode",
        "currentLineType",
        "nashorn",
        "summaryList",
        "add",
        "currentNode",
        "node",
        "lineType",
        "nashorn",
        "nodeOrOutDependencies",
        "iterativeDependencyMatrix",
        "getOROutDependencyList",
        "node",
        "getNodeId",
        "nodeAndOutDependencies",
        "iterativeDependencyMatrix",
        "getAndOutDependencyList",
        "node",
        "getNodeId",
        "nodeOption",
        "iterativeDependencyMatrix",
        "getDependencyType",
        "node",
        "getNodeId",
        "node",
        "getNodeId",
        "canDetermine",
        "LineType",
        "VALUE_CONCLUSION",
        "equals",
        "lineType",
        "isPlainStatementFormat",
        "node",
        "getIsPlainStatementFormat",
        "nodeAndOutDependencies",
        "isEmpty",
        "nodeOrOutDependencies",
        "isEmpty",
        "isAnyOrDependencyTrue",
        "node",
        "nodeOrOutDependencies",
        "canDetermine",
        "isPlainStatementFormat",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "setFact",
        "node",
        "getVariableName",
        "node",
        "getFactValue",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "isAllOrDependencyDetermined",
        "nodeOrOutDependencies",
        "isAnyOrDependencyTrue",
        "node",
        "nodeOrOutDependencies",
        "canDetermine",
        "isPlainStatementFormat",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "node",
        "getVariableName",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "nodeAndOutDependencies",
        "isEmpty",
        "nodeOrOutDependencies",
        "isEmpty",
        "isAllAndDependencyDetermined",
        "nodeAndOutDependencies",
        "isAllAndDependencyTrue",
        "node",
        "nodeAndOutDependencies",
        "canDetermine",
        "isPlainStatementFormat",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "node",
        "getVariableName",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "isAllAndDependencyDetermined",
        "nodeAndOutDependencies",
        "isAnyAndDependencyFalse",
        "nodeAndOutDependencies",
        "canDetermine",
        "isPlainStatementFormat",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "setFact",
        "node",
        "getVariableName",
        "FactValue",
        "parse",
        "node",
        "getVariableName",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "LineType",
        "EXPR_CONCLUSION",
        "equals",
        "lineType",
        "nodeAndOutDependencies",
        "isEmpty",
        "nodeOrOutDependencies",
        "isEmpty",
        "i",
        "i",
        "nodeOrOutDependencies",
        "size",
        "i",
        "iterativeDependencyMatrix",
        "getDependencyMatrixArray",
        "node",
        "getNodeId",
        "nodeOrOutDependencies",
        "get",
        "i",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getOr",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getOr",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "nodeOrOutDependencies",
        "get",
        "i",
        "getVariableName",
        "canDetermine",
        "setFact",
        "node",
        "getVariableName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "iterativeInclusiveList",
        "remove",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getNodeName",
        "nodeAndOutDependencies",
        "isEmpty",
        "nodeOrOutDependencies",
        "isEmpty",
        "allNeedsChildDetermined",
        "node",
        "nodeAndOutDependencies",
        "canDetermine",
        "setFact",
        "node",
        "getVariableName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "LineType",
        "COMPARISON",
        "equals",
        "lineType",
        "iterateWorkingMemory",
        "get",
        "node",
        "getVariableName",
        "canDetermine",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "nodeOption",
        "canDetermine",
        "parentNode",
        "outDependency",
        "allNeedsChildDetermined",
        "determinedList",
        "outDependency",
        "stream",
        "i",
        "iterativeDependencyMatrix",
        "getDependencyMatrixArray",
        "parentNode",
        "getNodeId",
        "i",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getAnd",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getAnd",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getVariableName",
        "collect",
        "Collectors",
        "toList",
        "outDependency",
        "size",
        "determinedList",
        "size",
        "allNeedsChildDetermined",
        "allNeedsChildDetermined",
        "andOutDependencies",
        "isAnyAndDependencyFalse",
        "falseAndList",
        "andOutDependencies",
        "stream",
        "i",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getValue",
        "toString",
        "equals",
        "collect",
        "Collectors",
        "toList",
        "falseAndList",
        "size",
        "isAnyAndDependencyFalse",
        "andOutDependencies",
        "stream",
        "forEachOrdered",
        "i",
        "falseAndList",
        "stream",
        "forEachOrdered",
        "f",
        "i",
        "f",
        "iterativeInclusiveList",
        "remove",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getNodeName",
        "andOutDependencies",
        "size",
        "isAnyAndDependencyFalse",
        "isAnyAndDependencyFalse",
        "node",
        "andOutDependencies",
        "isAllAndTrue",
        "determinedTrueAndOutDependencies",
        "andOutDependencies",
        "stream",
        "i",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getValue",
        "toString",
        "equals",
        "collect",
        "Collectors",
        "toList",
        "andOutDependencies",
        "determinedTrueAndOutDependencies",
        "size",
        "andOutDependencies",
        "size",
        "isAllAndTrue",
        "isAllAndTrue",
        "andOutDependencies",
        "isAllAndDependencyDetermined",
        "determinedAndOutDependencies",
        "andOutDependencies",
        "stream",
        "i",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "collect",
        "Collectors",
        "toList",
        "andOutDependencies",
        "determinedAndOutDependencies",
        "size",
        "andOutDependencies",
        "size",
        "isAllAndDependencyDetermined",
        "isAllAndDependencyDetermined",
        "orOutDependencies",
        "isAllOrDependencyDetermined",
        "determinedOrOutDependencies",
        "orOutDependencies",
        "stream",
        "i",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "collect",
        "Collectors",
        "toList",
        "orOutDependencies",
        "determinedOrOutDependencies",
        "size",
        "orOutDependencies",
        "size",
        "isAllOrDependencyDetermined",
        "isAllOrDependencyDetermined",
        "node",
        "orOutDependencies",
        "isAnyOrDependencyTrue",
        "orOutDependencies",
        "isEmpty",
        "trueOrOutNodesList",
        "orOutDependencies",
        "stream",
        "i",
        "iterateWorkingMemory",
        "get",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "getValue",
        "equals",
        "collect",
        "Collectors",
        "toList",
        "trueOrOutNodesList",
        "isEmpty",
        "isAnyOrDependencyTrue",
        "orOutDependencies",
        "stream",
        "forEachOrdered",
        "i",
        "trueOrOutNodesList",
        "stream",
        "forEachOrdered",
        "n",
        "i",
        "n",
        "trimDependency",
        "node",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "isAnyOrDependencyTrue",
        "parentNode",
        "childNode",
        "dpType",
        "iterativeDependencyMatrix",
        "getDependencyMatrixArray",
        "parentNode",
        "getNodeId",
        "childNode",
        "getNodeId",
        "dpType",
        "DependencyType",
        "getMandatory",
        "DependencyType",
        "getMandatory",
        "iterativeInclusiveList",
        "remove",
        "childNode",
        "getNodeName",
        "node",
        "nodeInDependencyList",
        "iterativeDependencyMatrix",
        "getInDependencyList",
        "node",
        "getNodeId",
        "nodeInDependencyList",
        "isEmpty",
        "nodeInDependencyList",
        "stream",
        "forEachOrdered",
        "i",
        "parentNode",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "i",
        "iterativeInclusiveList",
        "contains",
        "parentNode",
        "getNodeName",
        "iterativeInclusiveList",
        "add",
        "parentNode",
        "getNodeName",
        "tokens",
        "fv",
        "tokens",
        "tokensString",
        "fv",
        "FactValue",
        "parse",
        "tokens",
        "tokensList",
        "get",
        "fv",
        "FactValue",
        "parse",
        "tokens",
        "tokensList",
        "get",
        "formatter",
        "DateTimeFormatter",
        "ofPattern",
        "factValueInDate",
        "LocalDate",
        "parse",
        "tokens",
        "tokensList",
        "get",
        "formatter",
        "fv",
        "FactValue",
        "parse",
        "factValueInDate",
        "fv",
        "FactValue",
        "parseURL",
        "tokens",
        "tokensList",
        "get",
        "fv",
        "FactValue",
        "parseUUID",
        "tokens",
        "tokensList",
        "get",
        "fv",
        "FactValue",
        "parseHash",
        "tokens",
        "tokensList",
        "get",
        "fv",
        "node",
        "childrenListOfNode",
        "iterativeDependencyMatrix",
        "getOutDependencyList",
        "node",
        "getNodeId",
        "childrenListOfNode",
        "stream",
        "forEachOrdered",
        "item",
        "childNodeName",
        "iterativeNodeMap",
        "get",
        "iterativeNodeIdMap",
        "get",
        "item",
        "getNodeName",
        "iterativeInclusiveList",
        "contains",
        "childNodeName",
        "iterativeInclusiveList",
        "add",
        "childNodeName",
        "node",
        "hasChildren",
        "iterativeDependencyMatrix",
        "getOutDependencyList",
        "node",
        "getNodeId",
        "isEmpty",
        "hasChildren",
        "hasChildren",
        "node",
        "nashorn",
        "canEvaluate",
        "lineType",
        "node",
        "getLineType",
        "lineType",
        "equals",
        "LineType",
        "VALUE_CONCLUSION",
        "lineType",
        "equals",
        "LineType",
        "COMPARISON",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getVariableName",
        "lineType",
        "equals",
        "LineType",
        "ITERATE",
        "iterateWorkingMemory",
        "containsKey",
        "node",
        "getNodeName",
        "canEvaluate",
        "setFact",
        "node",
        "getNodeName",
        "node",
        "selfEvaluate",
        "iterateWorkingMemory",
        "nashorn",
        "iterativeDependencyMatrix",
        "getDependencyType",
        "node",
        "getNodeId",
        "node",
        "getNodeId",
        "canEvaluate",
        "nodeName",
        "nodeIndex",
        "IntStream",
        "iterativeTopoSortedList",
        "size",
        "i",
        "iterativeTopoSortedList",
        "get",
        "i",
        "getNodeName",
        "equals",
        "nodeName",
        "toArray",
        "nodeIndex",
        "nodeName",
        "selfEvaluate",
        "iterateWorkingMemory",
        "put",
        "nodeName",
        "selfEvaluate",
        "parentText",
        "parentText"
    ],
    "literals": [
        "\"\"",
        "\"CHECK \"",
        "\"\"",
        "\"OR WANTS\"",
        "\"AND MANDATORY NEEDS\"",
        "\"OR(?=\\\\s)|AND MANDATORY\"",
        "\"\"",
        "\"WARNING\"",
        "\"(\"",
        "\")(\\\\sIS)*(.[^<>=]+)*\"",
        "\"(\"",
        "\")(\\\\s[<>=]*)(.+)\"",
        "\"CHECK\"",
        "\"\"",
        "\"OR\"",
        "\"(^U)([LMU]+$)\"",
        "\"(^U)([MLUDa]+)(O)([MLUNoDaDeHaUrlId]*$)\"",
        "\"(^U)([LMDa]+)(U)(C)\"",
        "\"WARNING\"",
        "\"OR|AND|CHECK\"",
        "\"\"",
        "\"(^\"",
        "\"\\\\s*)(\\\\sIS(.(?!IN LIST))*)*\"",
        "\"(^\"",
        "\"\\\\s*)(\\\\sIS(.(?!IN LIST))*)*\"",
        "\"(^\"",
        "\"\\\\s*)(\\\\sIS(.(?!IN LIST))*)*\"",
        "\"WARNING\"",
        "\"(.+)?(\\\\\\\\s[<>=]+\\\\\\\\s?)?(WANTS |NEEDS )*(\"",
        "\")(\\\\s*[<>=]*)(\\\\s+.[^(IS)]*)*\"",
        "\"WARNING\"",
        "\"NOT\"",
        "\"KNOWN\"",
        "\"NOT\"",
        "\"KNOWN\"",
        "\"CHECK\"",
        "\"\"",
        "\"No\"",
        "\"ALL\"",
        "\"ALL\"",
        "\"NONE\"",
        "\"0\"",
        "\"SOME\"",
        "\"SOME\"",
        "\"NOT|KNOWN\"",
        "\"\"",
        "\"VirtualNode-\"",
        "\"VirtualNode-\"",
        "\"VirtualNode-\"",
        "\"VirtualNode-\"",
        "\"false\"",
        "\"true\"",
        "\"De\"",
        "\"No\"",
        "\"Da\"",
        "\"d/M/yyyy\"",
        "\"Url\"",
        "\"Id\"",
        "\"Ha\"",
        "\": rule format is not matched. Please check the format again\""
    ],
    "variables": [
        "numberOfTarget",
        "iterateWorkingMemory",
        "iterativeNodeMap",
        "iterativeNodeIdMap",
        "iterativeInclusiveList",
        "iterativeDependencyList",
        "iterativeDependencyMatrix",
        "summaryList",
        "p",
        "matcher",
        "dependency"
    ],
    "comments": [
        "MANDATORY_AND;",
        "replace dependencyType keywords like 'AND', 'OR', 'AND MANDATORY', and/or 'OR MANDATORY'",
        "child statement for ValueConclusionLine starts with AND(OR), AND MANDATORY(OPTIONALLY, POSSIBLY) or AND (MANDATORY) (NOT) KNOWN",
        "comparison can only be child in rule format so the pattern needs re-thinking",
        "ExprCheck is not required to be implemented just yet, but it will be needed later on.",
        "warningMatcher case",
        "valueConclusionMatcher case",
        "comparisonMatcher case",
        "Dependency Type :OR",
        "exprConclusionMatcher case",
        "checkText is a direct child of iterate parent",
        "checkText is not a direct child of iterate parent",
        "target number is set with numeric",
        "target number is set with keyword of only either 'ALL', 'SOME' or 'NONE'",
        "this is a givenListName.",
        "this object(IterateLine Object) in 'iterateNodeMap' will be a root node(Goal Node), and CHECK item will be children node",
        "dp.getDependencyType is any kinds of 'AND'",
        "dp.getDependencyType is any kinds of 'OR'",
        "adding all parents rules into the 'inclusiveList' if there is any",
        "add currentRule into SummeryList as the rule determined",
        "rule has only 'OR' child rules",
        "TRUE case",
        "FALSE case",
        "rule has only 'AND' child rules",
        "TRUE case",
        "FALSE case",
        "rule has 'MANDATORY_OR' and 'OR' child rules",
        "add currentRule into the workingMemory",
        "rule has only 'MANDATORY_AND' child rules",
        "TRUE case",
        "add currentRule into the workingMemory",
        "add currentRule into the workingMemory",
        "if rule has parents"
    ],
    "docstrings": [
        "* following lines are to look for any nodes having a its nodeName with 'needs ' word or any operators but not having a word of 'IS' keyword due to the reason that\n\t\t\t\t\t\t\t * the node could be used to define a node previously used as a child node for other nodes.\n\t\t\t\t\t\t\t * However, it is excluding nodes having 'IS' keyword because if it has the keyword then it should have child nodes to define the node otherwise the entire rule set has NOT been written in correct way",
        "* This line can be only 'child' line hence\n\t\t * the pattern only could be (^U)([MLNo]+)(I)([MLU]+$)",
        "* variableName represents name of item in a givenList\n\t\t * value represents a name of a givenList",
        "* number of rule is not always matched with the last ruleId in Node",
        "* need to handle Mandatory, optionally, possibly NodeOptions",
        "*following 'if' statement is to double check if the rule has any children or not.\n         *it will be already determined by asking a question to a user if it doesn't have any children .",
        "* 'isAnyAndDependencyFalse()' contains a trimming off dependency method \n    \t\t\t * due to the fact that all undetermined 'AND' rules need to be trimmed off when any 'AND' rule is evaluated as 'NO'\n               \t * , which does not influence on determining a parent rule's evaluation.\n               \t *",
        "`* The reason why ast.setFact() is used here rather than this.addFactToRule() is that ruleType is already known, and target rule object is already found.",
        "* The reason why ast.setFact() is used here rather than this.addFactToRule() is that ruleType is already known, and target rule object is already found.",
        "* the reason for checking only VALUE_CONCLUSION, COMPARISON and ITERATE type of node is that they are the only ones can be the most child nodes in rule structure.\n\t    \t * other type of node must be a parent of other types of node.\n\t    \t * In addition, the reason being to check only if there is a value for a variableName of the node in the workingMemory is that\n\t    \t * only a value for variableName of the node is needed to evaluate the node. even if the node is ValueConclusionLine, it wouldn't be matter because\n\t    \t * variableName and nodeName will have a same value if the node is the most child node, which means that the statement for the node does NOT contain\n\t    \t * 'IS' keyword.",
        "* the reason why ast.setFact() is used here rather than this.feedAndwerToNode() is that LineType is already known, and target node object is already found. \n\t    \t\t * node.selfEvaluation() returns a value of the node's self-evaluation hence, node.getNodeName() is used to store a value for the node itself into a workingMemory"
    ],
    "functions": [
        "IterateLine_1",
        "getIterativeNodeMap",
        "setIterativeNodeMap",
        "getIterativeNodeIdMap",
        "getIterateWorkingMemory",
        "setDependencyMatrix",
        "DependencyMatrix",
        "getIterativeDependencyMatrix",
        "setGivenList",
        "getGivenList",
        "getOutcomeList",
        "handleNeedWant",
        "addChild",
        "initialisation",
        "LineType",
        "getLineType",
        "createIterativeDependencyMatrix",
        "handlingVirtualNode",
        "FactValue",
        "selfEvaluate",
        "inferenceIterate",
        "forwardChaining",
        "backPropagation",
        "canDetermine",
        "allNeedsChildDetermined",
        "isAnyAndDependencyFalse",
        "isAllAndDependencyTrue",
        "isAllAndDependencyDetermined",
        "isAllOrDependencyDetermined",
        "isAnyOrDependencyTrue",
        "trimDependency",
        "addParentIntoInclusiveList",
        "FactValue",
        "convertFactValue",
        "addChildRuleIntoInclusiveList",
        "hasChildren",
        "canEvaluate",
        "findNodeIndex",
        "setFact",
        "handleWarning"
    ],
    "classes": [
        "IterateLine_1"
    ]
}