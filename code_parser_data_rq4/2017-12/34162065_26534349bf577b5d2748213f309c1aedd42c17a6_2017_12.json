{
    "identifiers": [
        "MemberSelector",
        "MemberPrecondition",
        "expect",
        "describe",
        "describe",
        "it",
        "v",
        "MemberPrecondition",
        "selector",
        "expect",
        "p",
        "Foo",
        "expect",
        "p",
        "Foo",
        "it",
        "v",
        "Foo",
        "Foo",
        "MemberPrecondition",
        "selector",
        "expect",
        "p",
        "Foo",
        "it",
        "v",
        "Foo",
        "Foo",
        "MemberPrecondition",
        "selector",
        "expect",
        "p",
        "Foo",
        "it",
        "v",
        "MemberPrecondition",
        "Foo",
        "expect",
        "p1",
        "Foo",
        "expect",
        "p1",
        "Foo",
        "MemberPrecondition",
        "Foo",
        "expect",
        "p2",
        "Foo",
        "expect",
        "p2",
        "Foo",
        "expect",
        "p2",
        "Foo"
    ],
    "literals": [
        "'./../../lib/src/joint_points/selectors'",
        "'./../../lib/src/joint_points/preconditions'",
        "'chai'",
        "'Preconditions'",
        "'MemberPrecondition'",
        "'should match by regex'",
        "'bar'",
        "'baz'",
        "'should match by value'",
        "'baz'",
        "'bar'",
        "'should throw with invalid selector'",
        "'baz'",
        "'should match by value & regex'",
        "'baz'",
        "'bar'",
        "'baz'",
        "'bar'",
        "'foobar'",
        "'baz'"
    ],
    "variables": [
        "selector",
        "p",
        "selector",
        "p",
        "selector",
        "p",
        "p1",
        "p2"
    ],
    "comments": [
        "empty",
        "empty",
        "expect(p.assert({ classDefinition: Foo, fieldName: 'baz' })).equal(true);",
        "empty",
        "empty"
    ],
    "docstrings": [],
    "functions": [
        "bar",
        "baz",
        "foobar",
        "bar",
        "baz",
        "foobar",
        "bar",
        "baz",
        "foobar",
        "bar",
        "baz",
        "foobar"
    ],
    "classes": [
        "Foo",
        "Foo",
        "Foo",
        "Foo"
    ]
}