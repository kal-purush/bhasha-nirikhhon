{
    "identifiers": [
        "str1",
        "str2",
        "parent",
        "str1",
        "str2",
        "parent",
        "str1",
        "str1",
        "str2",
        "str2",
        "parent",
        "parent",
        "rules",
        "stack",
        "alreadySeen",
        "stack",
        "push",
        "curStr",
        "stack",
        "pop",
        "contains",
        "curStr",
        "str1",
        "recurse",
        "curStr",
        "alreadySeen",
        "alreadySeen",
        "add",
        "curStr",
        "str1",
        "curStr",
        "i",
        "i",
        "curStr",
        "size",
        "i",
        "rule",
        "rules",
        "ruleSatisfies",
        "curStr",
        "str1",
        "rule",
        "i",
        "split",
        "splitWord",
        "curStr",
        "str1",
        "rule",
        "i",
        "contains",
        "split",
        "alreadySeen",
        "containsKey",
        "split",
        "newNode",
        "split",
        "split",
        "curStr",
        "str1",
        "stack",
        "push",
        "newNode",
        "node",
        "alreadySeen",
        "result",
        "result",
        "add",
        "node",
        "str1",
        "parent",
        "parentNode",
        "alreadySeen",
        "get",
        "node",
        "parent",
        "parent",
        "parentNode",
        "parent",
        "parent",
        "isEmpty",
        "result",
        "rule",
        "index",
        "rule",
        "index"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "str1",
        "str2",
        "parent"
    ],
    "comments": [
        "Finds out whether String can be split at given point using given rule",
        "Splits String at given point using given rule and returns both resulting words"
    ],
    "docstrings": [],
    "functions": [
        "Node",
        "visandhi",
        "recurse",
        "ruleSatisfies",
        "splitWord"
    ],
    "classes": [
        "SplitAlgo",
        "Node"
    ]
}