{
    "identifiers": [
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "ftc11587",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "LinearOpMode",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "TeleOp",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "Disabled",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "hardware",
        "DcMotor",
        "com",
        "qualcomm",
        "robotcore",
        "util",
        "Range",
        "TeleOp",
        "name",
        "group",
        "Disabled",
        "lfMotor",
        "rfMotor",
        "lrMotor",
        "rrMotor",
        "Override",
        "telemetry",
        "addData",
        "telemetry",
        "update",
        "lfMotor",
        "hardwareMap",
        "dcMotor",
        "get",
        "rfMotor",
        "hardwareMap",
        "dcMotor",
        "get",
        "lrMotor",
        "hardwareMap",
        "dcMotor",
        "get",
        "rrMotor",
        "hardwareMap",
        "dcMotor",
        "get",
        "lfMotor",
        "setDirection",
        "DcMotor",
        "Direction",
        "FORWARD",
        "rfMotor",
        "setDirection",
        "DcMotor",
        "Direction",
        "FORWARD",
        "lrMotor",
        "setDirection",
        "DcMotor",
        "Direction",
        "FORWARD",
        "rrMotor",
        "setDirection",
        "DcMotor",
        "Direction",
        "FORWARD",
        "waitForStart",
        "opModeIsActive",
        "moveRobot",
        "gp1_ljoy_y",
        "gamepad1",
        "left_stick_y",
        "gp1_ljoy_x",
        "gamepad1",
        "left_stick_x",
        "gp1_rjoy_x",
        "gamepad1",
        "right_stick_x",
        "lfPwr",
        "gp1_ljoy_y",
        "gp1_ljoy_x",
        "gp1_rjoy_x",
        "rfPwr",
        "gp1_ljoy_y",
        "gp1_ljoy_x",
        "gp1_rjoy_x",
        "lrPwr",
        "gp1_ljoy_y",
        "gp1_ljoy_x",
        "gp1_rjoy_x",
        "rrPwr",
        "gp1_ljoy_y",
        "gp1_ljoy_x",
        "gp1_rjoy_x",
        "lfPwr_clip",
        "Range",
        "clip",
        "lfPwr",
        "rfPwr_clip",
        "Range",
        "clip",
        "rfPwr",
        "lrPwr_clip",
        "Range",
        "clip",
        "lrPwr",
        "rrPwr_clip",
        "Range",
        "clip",
        "rrPwr",
        "lfMotor",
        "setPower",
        "lfPwr_clip",
        "rfPwr_clip",
        "lrMotor",
        "setPower",
        "lrPwr_clip",
        "rrMotor",
        "setPower",
        "rrPwr_clip",
        "telemetry",
        "addData",
        "lfPwr_clip",
        "rfPwr_clip",
        "lrPwr_clip",
        "rrPwr_clip",
        "telemetry",
        "update"
    ],
    "literals": [
        "\"Relic Recovery: Basic Holonomic Drive\"",
        "\"Relic Recovery\"",
        "\"Status\"",
        "\"Holonomic Drive Initialized\"",
        "\"lfmotor\"",
        "\"rfmotor\"",
        "\"lrmotor\"",
        "\"rrmotor\"",
        "\"Motors\"",
        "\"LF (%.2f) | RF (%.2f) | LR (%.2f) | RR (%.2f)\""
    ],
    "variables": [
        "lfMotor",
        "rfMotor",
        "lrMotor",
        "rrMotor",
        "moveRobot",
        "rfPwr_clip"
    ],
    "comments": [
        "comment out this line to add this OpMode to the Driver Station select list",
        "Forward Y normally yields negative value - reverse to make more sense",
        "TO-DO...until we work this out, use the clipping method//",
        "lfPwr_scale = Range.scale(lfPwr, -2, 2, -1, 1);",
        "rfPwr_scale = Range.scale(rfPwr, -2, 2, -1, 1);",
        "lrPwr_scale = Range.scale(lrPwr, -2, 2, -1, 1);",
        "rrPwr_scale = Range.scale(rrPwr, -2, 2, -1, 1);",
        "Can it really be this easy?"
    ],
    "docstrings": [
        "eclarations",
        "elemetry data for driver feedback",
        "ardware mapping pulls the motor/servo names from the configuration on the robot-side controller phone",
        "uickly change motor polarity, if needed, by changing FORWARD to REVERSE",
        "ait until the driver presses PLAY",
        "Robot Drivetrain Configuration\n\t\t\t *\n\t\t\t *           _______\n\t\t\t * lfMotor \\\\       // rfMotor\n\t\t\t * \t\t\t|\t\t|\n\t\t\t * \t\t\t|\t\t|\n\t\t\t * lrMotor //_______\\\\ rrMotor\n\t\t\t *\n\t\t\t *",
        "Gamepad Controller Configuration\n\t\t\t *\n\t\t\t *              LEFT JOYSTICK       \t\t\t\t\t\tRIGHT JOYSTICK\n\t\t\t *\n\t\t\t *              Move Forward\t\t\t\t\t\t\t\t    Null\n\t\t\t *       \t\t      ^\t\t\t\t\t\t\t\t\t\t     ^\n\t\t\t *       \t\t\t  |\t\t\t\t\t\t\t\t\t\t     |\n\t\t\t * Strafe Left <-----   -----> Strafe Right   Rotate Left <-----   -----> Rotate Right\n\t\t\t *       \t\t\t  |\t\t\t\t\t\t\t\t\t\t\t |\n\t\t\t *       \t\t\t  v\t\t\t\t\t\t\t\t\t\t\t v\n\t\t\t *              Move Backward\t\t\t\t\t\t\t\t\tNull\n\t\t\t *",
        "ssign gamepad inputs",
        "asic holonomic drive formulas based on motor output matrix",
        "he above matrix could return values outside [-1,1]...if so, scale values",
        "lipping method -- UGLY!",
        "et motor power - replace clipped values w/ scaled once scaling algorithm complete",
        "end telemetry to driver station for feedback"
    ],
    "functions": [
        "runOpMode"
    ],
    "classes": [
        "BasicHolonomicDrive"
    ]
}