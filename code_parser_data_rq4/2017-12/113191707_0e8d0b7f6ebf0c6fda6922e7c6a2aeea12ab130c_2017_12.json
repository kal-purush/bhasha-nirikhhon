{
    "identifiers": [
        "absolute_import",
        "unicode_literals",
        "os",
        "json",
        "unittest",
        "httmock",
        "urlmatch",
        "HTTMock",
        "response",
        "wechatpy",
        "WeChatPay",
        "wechatpy",
        "pay",
        "dict_to_xml",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "join",
        "_TESTS_PATH",
        "urlmatch",
        "netloc",
        "url",
        "request",
        "url",
        "path",
        "url",
        "path",
        "startswith",
        "url",
        "path",
        "replace",
        "os",
        "path",
        "join",
        "_FIXTURE_PATH",
        "path",
        "res_file",
        "open",
        "res_file",
        "f",
        "json",
        "loads",
        "f",
        "read",
        "decode",
        "IOError",
        "ValueError",
        "content",
        "pop",
        "dict_to_xml",
        "content",
        "content_sign",
        "response",
        "content_xml",
        "headers",
        "request",
        "request",
        "unittest",
        "TestCase",
        "WeChatPay",
        "appid",
        "api_key",
        "mch_id",
        "mch_cert",
        "mch_key",
        "HTTMock",
        "wechat_api_mock",
        "client",
        "withhold",
        "apply_signing",
        "plan_id",
        "contract_code",
        "contract_display_account",
        "notify_url",
        "assertEqual",
        "response",
        "HTTMock",
        "wechat_api_mock",
        "client",
        "withhold",
        "query_signing",
        "contract_id",
        "assertEqual",
        "response",
        "HTTMock",
        "wechat_api_mock",
        "client",
        "withhold",
        "apply_deduct",
        "body",
        "total_fee",
        "contract_id",
        "notify_url",
        "assertEqual",
        "response",
        "HTTMock",
        "wechat_api_mock",
        "client",
        "withhold",
        "query_order",
        "out_trade_no",
        "assertEqual",
        "response"
    ],
    "literals": [
        "'fixtures'",
        "'payment'",
        "r'(.*\\.)?api\\.mch\\.weixin\\.qq\\.com$'",
        "\"/\"",
        "'/'",
        "'_'",
        "'%s.json'",
        "'errcode'",
        "'errmsg'",
        "'can not find fixture %s'",
        "'Content-Type'",
        "'application/json'",
        "'rb'",
        "'utf-8'",
        "\"sign\"",
        "\"\"",
        "'abc1234'",
        "'test123'",
        "'1192221'",
        "''",
        "''",
        "'t1234'",
        "'w1111'",
        "'测试'",
        "''",
        "\"result_code\"",
        "\"SUCCESS\"",
        "'test1234'",
        "\"result_code\"",
        "\"SUCCESS\"",
        "\"测试商品\"",
        "'203'",
        "''",
        "\"result_code\"",
        "\"SUCCESS\"",
        "'217752501201407033233368018'",
        "\"result_code\"",
        "\"SUCCESS\""
    ],
    "variables": [
        "_TESTS_PATH",
        "_FIXTURE_PATH",
        "path",
        "res_file",
        "content",
        "headers",
        "content",
        "content_sign",
        "content_xml",
        "client",
        "response",
        "response",
        "response",
        "response"
    ],
    "comments": [
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [],
    "functions": [
        "wechat_api_mock",
        "setUp",
        "test_apply_signing",
        "test_query_signing",
        "test_apply_deduct",
        "test_query_order"
    ],
    "classes": [
        "WeChatPayTestCase"
    ]
}