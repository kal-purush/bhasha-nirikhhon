{
    "identifiers": [
        "requests",
        "urllib3",
        "util",
        "retry",
        "Retry",
        "requests",
        "adapters",
        "HTTPAdapter",
        "base64",
        "datetime",
        "errno",
        "json",
        "os",
        "random",
        "six",
        "stat",
        "hashlib",
        "sha1",
        "descarteslabs",
        "exceptions",
        "AuthError",
        "OauthError",
        "os",
        "path",
        "join",
        "os",
        "path",
        "expanduser",
        "input",
        "len",
        "input",
        "rem",
        "input",
        "rem",
        "base64",
        "urlsafe_b64decode",
        "input",
        "path",
        "os",
        "path",
        "exists",
        "path",
        "os",
        "makedirs",
        "path",
        "OSError",
        "ex",
        "ex",
        "errno",
        "errno",
        "EEXIST",
        "domain",
        "scope",
        "leeway",
        "token_info_path",
        "DEFAULT_TOKEN_INFO_PATH",
        "client_id",
        "client_secret",
        "jwt_token",
        "token_info_path",
        "open",
        "token_info_path",
        "fp",
        "json",
        "load",
        "fp",
        "IOError",
        "ValueError",
        "client_id",
        "client_id",
        "os",
        "environ",
        "get",
        "token_info",
        "get",
        "client_secret",
        "client_secret",
        "os",
        "environ",
        "get",
        "token_info",
        "get",
        "jwt_token",
        "jwt_token",
        "os",
        "environ",
        "get",
        "token_info",
        "get",
        "domain",
        "scope",
        "leeway",
        "scope",
        "classmethod",
        "cls",
        "kwargs",
        "Auth",
        "kwargs",
        "property",
        "_token",
        "_get_token",
        "payload",
        "get",
        "exp",
        "datetime",
        "datetime",
        "utcnow",
        "datetime",
        "datetime",
        "total_seconds",
        "now",
        "leeway",
        "exp",
        "_get_token",
        "AuthError",
        "e",
        "now",
        "exp",
        "e",
        "_token",
        "property",
        "_token",
        "_get_token",
        "isinstance",
        "_token",
        "six",
        "text_type",
        "_token",
        "encode",
        "_token",
        "token",
        "split",
        "json",
        "loads",
        "base64url_decode",
        "claims",
        "decode",
        "timeout",
        "client_id",
        "AuthError",
        "client_secret",
        "AuthError",
        "requests",
        "Session",
        "Retry",
        "total",
        "backoff_factor",
        "random",
        "uniform",
        "method_whitelist",
        "status_forcelist",
        "s",
        "mount",
        "HTTPAdapter",
        "max_retries",
        "retries",
        "join",
        "scope",
        "client_id",
        "client_id",
        "client_secret",
        "s",
        "post",
        "domain",
        "headers",
        "headers",
        "data",
        "json",
        "dumps",
        "timeout",
        "timeout",
        "r",
        "status_code",
        "OauthError",
        "r",
        "status_code",
        "r",
        "text",
        "r",
        "json",
        "data",
        "open",
        "token_info_path",
        "fp",
        "json",
        "load",
        "fp",
        "IOError",
        "ValueError",
        "_token",
        "os",
        "path",
        "dirname",
        "token_info_path",
        "makedirs_if_not_exists",
        "token_info_directory",
        "os",
        "chmod",
        "token_info_directory",
        "stat",
        "S_IRUSR",
        "stat",
        "S_IWUSR",
        "stat",
        "S_IXUSR",
        "open",
        "token_info_path",
        "fp",
        "json",
        "dump",
        "token_info",
        "fp",
        "os",
        "chmod",
        "token_info_path",
        "stat",
        "S_IRUSR",
        "stat",
        "S_IWUSR",
        "property",
        "_namespace",
        "sha1",
        "payload",
        "encode",
        "hexdigest",
        "_namespace",
        "Auth",
        "auth",
        "token"
    ],
    "literals": [
        "\"~\"",
        "'.descarteslabs'",
        "'token_info.json'",
        "b'='",
        "\"https://iam.descarteslabs.com\"",
        "'CLIENT_ID'",
        "'client_id'",
        "'CLIENT_SECRET'",
        "'client_secret'",
        "'JWT_TOKEN'",
        "'jwt_token'",
        "'openid'",
        "'name'",
        "'groups'",
        "'exp'",
        "'utf-8'",
        "b'.'",
        "'utf-8'",
        "\"Could not find CLIENT_ID\"",
        "\"Could not find CLIENT_SECRET\"",
        "'GET'",
        "'POST'",
        "'https://'",
        "\"content-type\"",
        "\"application/json\"",
        "\"scope\"",
        "\" \"",
        "\"client_id\"",
        "\"grant_type\"",
        "\"urn:ietf:params:oauth:grant-type:jwt-bearer\"",
        "\"target\"",
        "\"api_type\"",
        "\"app\"",
        "\"refresh_token\"",
        "\"/auth/delegation\"",
        "\"%s: %s\"",
        "'id_token'",
        "'jwt_token'",
        "'w+'",
        "'sub'",
        "'utf-8'",
        "'__main__'"
    ],
    "variables": [
        "DEFAULT_TOKEN_INFO_PATH",
        "rem",
        "token_info_path",
        "token_info",
        "token_info",
        "client_id",
        "client_secret",
        "_token",
        "_namespace",
        "domain",
        "scope",
        "leeway",
        "scope",
        "exp",
        "now",
        "token",
        "token",
        "claims",
        "s",
        "retries",
        "headers",
        "r",
        "data",
        "_token",
        "token_info",
        "token_info",
        "token_info",
        "token_info_directory",
        "_namespace",
        "auth"
    ],
    "comments": [
        "Copyright 2017 Descartes Labs.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Unable to refresh, raise if now > exp"
    ],
    "docstrings": [
        "\"\"\"Helper method to base64url_decode a string.\n    Args:\n        input (str): A base64url_encoded string to decode.\n    \"\"\"",
        "\"\"\"\n        Helps retrieve JWT from a client id and refresh token for cli usage.\n        :param domain: endpoint for auth0\n        :param scope: the JWT fields to be included\n        :param leeway: JWT expiration leeway\n        :param token_info_path: path to a JSON file optionally holding auth information\n        :param client_id: JWT client id\n        :param client_secret: JWT client secret\n        :param jwt_token: the JWT token, if we already have one\n        \"\"\"",
        "\"\"\"\n        Creates an Auth object from environment variables CLIENT_ID, CLIENT_SECRET,\n        JWT_TOKEN if they are set, or else from a JSON file at the given path.\n        :param domain: endpoint for auth0\n        :param scope: the JWT fields to be included\n        :param leeway: JWT expiration leeway\n        :param token_info_path: path to a JSON file optionally holding auth information\n        \"\"\""
    ],
    "functions": [
        "base64url_decode",
        "makedirs_if_not_exists",
        "from_environment_or_token_json",
        "token",
        "payload",
        "_get_token"
    ],
    "classes": [
        "Auth"
    ]
}