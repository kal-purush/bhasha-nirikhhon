{
    "identifiers": [
        "master",
        "subseq",
        "LCSLength",
        "master",
        "subseq",
        "join",
        "LCSBackTrack",
        "subseq",
        "memoized",
        "master",
        "subseq",
        "len",
        "subseq",
        "len",
        "master",
        "min",
        "len",
        "master",
        "len",
        "subseq",
        "i",
        "max",
        "len",
        "master",
        "len",
        "subseq",
        "masterIndex",
        "len",
        "master",
        "subseqIndex",
        "len",
        "subseq",
        "master",
        "masterIndex",
        "subseq",
        "subseqIndex",
        "memoized",
        "masterIndex",
        "subseqIndex",
        "memoized",
        "masterIndex",
        "subseqIndex",
        "memoized",
        "masterIndex",
        "subseqIndex",
        "max",
        "memoized",
        "masterIndex",
        "subseqIndex",
        "memoized",
        "masterIndex",
        "subseqIndex",
        "memoized",
        "subseq",
        "memoized",
        "len",
        "memoized",
        "len",
        "memoized",
        "height",
        "height",
        "width",
        "memoized",
        "height",
        "width",
        "memoized",
        "height",
        "width",
        "memoized",
        "height",
        "width",
        "memoized",
        "height",
        "width",
        "memoized",
        "height",
        "width",
        "lcs",
        "append",
        "subseq",
        "width",
        "height",
        "width",
        "lcs",
        "reverse",
        "lcs",
        "computeLCS",
        "master",
        "subseq",
        "filename",
        "open",
        "filename",
        "file",
        "file",
        "read",
        "split",
        "filename",
        "seq",
        "partition",
        "seq",
        "read_FASTA_strings",
        "filename",
        "filename",
        "seq",
        "seq",
        "replace",
        "seq",
        "read_FASTA_entries",
        "filename",
        "seq",
        "seq",
        "read_FASTA_sequences",
        "filename",
        "aa_sequence",
        "sort",
        "key",
        "len",
        "reverse",
        "seq",
        "sorted",
        "aa_sequence",
        "aa_sequence",
        "index",
        "seq",
        "seq",
        "value",
        "sequence_dictionary",
        "value",
        "len",
        "sequence_dictionary",
        "value",
        "len",
        "sequence_dictionary",
        "value",
        "value",
        "computeLCS",
        "sequence_dictionary",
        "value",
        "sequence_dictionary",
        "value",
        "value",
        "value",
        "computeLCS",
        "sequence_dictionary",
        "value",
        "sequence_dictionary",
        "value"
    ],
    "literals": [
        "\"\"",
        "\"The length of the subsequence must be less than or equal to the length of the master string being tested\"",
        "\"__main__\"",
        "\"BANANANT\"",
        "\"ANTO\"",
        "'aa010.fasta'",
        "'>'",
        "'\\n'",
        "'\\n'",
        "''",
        "'Longest Common Subsequence between sequences:'",
        "'\\n'",
        "'Longest Common Subsequence between sequences:'",
        "'\\n'"
    ],
    "variables": [
        "memoized",
        "memoized",
        "lcs",
        "height",
        "width",
        "master",
        "subseq",
        "filename",
        "aa_sequence",
        "sequence_dictionary",
        "sequence_dictionary"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "Build a multi-dimensional list filled with 0s based on the inputed parameters",
        "Populate the multi-dimensional list with the length of the longest common subsequence",
        "Get the value in the bottom right hand corner of the inputed multi-dimensional list"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Sun Dec 10 16:24:35 2017\n\n@author: jenkinsc11\n\"\"\"",
        "\"\"\"\n\tWrapper method to compute the Longest Common Subsequence in an inputed master string given an inputed proposed subsequence string.\n\tNote that the length of the 'subseq' string parameter must be less than or equal to the length of the 'master' string parameter.\n\t\n\tThis dynamic programming algorithm runs in O(n^2) time where n is the length of the 'master' string parameter.\n\tThe total space required is O(n^2) due to the memoization step.\n    \"\"\"",
        "\"\"\"\n\tReturns a multi-dimensional list that contains the length of the Longest Common Subsequence (LCS).\n\tNote that the length of the 'subseq' string parameter must be less than or equal to the length of the 'master' string parameter.\n    \"\"\"",
        "\"\"\"\n\tUses the multi-dimensional list containing the memoized LCS length values to construct a list containing the characters that make up \n\tthe LCS.\t\n    \"\"\""
    ],
    "functions": [
        "computeLCS",
        "LCSLength",
        "LCSBackTrack",
        "read_FASTA_strings",
        "read_FASTA_entries",
        "read_FASTA_sequences"
    ],
    "classes": []
}