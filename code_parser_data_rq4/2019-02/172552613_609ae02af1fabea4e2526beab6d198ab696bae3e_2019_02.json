{
    "identifiers": [
        "_createTipoPaginador",
        "_createTipoPaginador",
        "p_array",
        "elem",
        "p_array",
        "arrayResul",
        "elem",
        "arrayResul",
        "p_nodoPadrePaginador",
        "p_nodoPadreElementosPaginados",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_border",
        "p_textColor",
        "p_tamanyoFuente",
        "p_posicionPaginadorEnNodoPadre",
        "p_posicionElementosPaginados",
        "p_border",
        "p_textColor",
        "p_tamanyoFuente",
        "p_nodoPadrePaginador",
        "p_posicionPaginadorEnNodoPadre",
        "p_nodoPadreElementosPaginados",
        "p_posicionElementosPaginados",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_numElementosXPag",
        "p_arrayTotal",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_border",
        "_validaNoNullNoUndefined",
        "p_border",
        "_validaCadenaNoVacia",
        "p_border",
        "p_border",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "p_textColor",
        "_validaNoNullNoUndefined",
        "p_textColor",
        "_validaCadenaNoVacia",
        "p_textColor",
        "p_textColor",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "p_tamanyoFuente",
        "_validaNoNullNoUndefined",
        "p_tamanyoFuente",
        "_validaCadenaNoVacia",
        "p_tamanyoFuente",
        "p_tamanyoFuente",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "p_nodoPadre",
        "_validaNoNullNoUndefined",
        "p_nodoPadre",
        "p_nodoPadre",
        "p_posicionEnNodoPadrePaginador",
        "_validaNoNullNoUndefined",
        "p_posicionEnNodoPadrePaginador",
        "_validaCadenaNoVacia",
        "p_posicionEnNodoPadrePaginador",
        "_validaPosicionInsertAdjacentHTML",
        "p_posicionEnNodoPadrePaginador",
        "p_posicionEnNodoPadrePaginador",
        "p_nodoPadreElementosPaginados",
        "_validaNoNullNoUndefined",
        "p_nodoPadreElementosPaginados",
        "p_nodoPadreElementosPaginados",
        "p_posicionEnNodoPadreElementosPaginados",
        "_validaNoNullNoUndefined",
        "p_posicionEnNodoPadreElementosPaginados",
        "_validaCadenaNoVacia",
        "p_posicionEnNodoPadreElementosPaginados",
        "_validaPosicionInsertAdjacentHTML",
        "p_posicionEnNodoPadreElementosPaginados",
        "p_posicionEnNodoPadreElementosPaginados",
        "p_paginaActual",
        "_validaNoNullNoUndefined",
        "p_paginaActual",
        "_validaNumero",
        "p_paginaActual",
        "p_paginaActual",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "p_paginaActual",
        "p_numTotalPag",
        "_validaNoNullNoUndefined",
        "p_numTotalPag",
        "_validaNumero",
        "p_numTotalPag",
        "p_numTotalPag",
        "_validaNoNullNoUndefined",
        "p_numTotalPag",
        "p_numElementosXPag",
        "_validaNoNullNoUndefined",
        "p_numElementosXPag",
        "_validaNumero",
        "p_numElementosXPag",
        "_validaNumeroMayorQueCero",
        "p_numElementosXPag",
        "p_numElementosXPag",
        "_validaNoNullNoUndefined",
        "p_arrayTotal",
        "_validaNoNullNoUndefined",
        "p_arrayTotal",
        "p_arrayTotal",
        "_validaNoNullNoUndefined",
        "p_arrayTotal",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_numPagSolicitada",
        "_validaNoNullNoUndefined",
        "p_arrayTotal",
        "_validaNoNullNoUndefined",
        "p_numElementosXPag",
        "_validaNoNullNoUndefined",
        "p_numPagSolicitada",
        "_validaNoNullNoUndefined",
        "_validaNumeroMayorQueCero",
        "p_numPagSolicitada",
        "_validaNumeroMayorQue",
        "p_numPagSolicitada",
        "_validaNumeroMayorQueCero",
        "p_numElementosXPag",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_numPagSolicitada",
        "p_numPagActual",
        "p_numPagTotal",
        "_validaNoNullNoUndefined",
        "p_numPagActual",
        "_validaNoNullNoUndefined",
        "p_numPagTotal",
        "_validaNumero",
        "p_numPagActual",
        "_validaNumero",
        "p_numPagTotal",
        "p_numPagActual",
        "p_numPagTotal",
        "l_numPagActualAux",
        "l_numPagTotalesAux",
        "p_numPagActual",
        "p_numPagTotal",
        "i",
        "p_numPagTotal",
        "i",
        "i",
        "p_numPagActual",
        "l_plantillaPagina",
        "i",
        "i",
        "l_plantillaPagina",
        "i",
        "i",
        "l_plantillaPagina",
        "l_plantillaPagina",
        "p_evento",
        "p_evento",
        "l_numPulsadoChar",
        "p_evento",
        "_validaNumero",
        "l_numPulsado",
        "l_numPulsado",
        "p_evento",
        "l_numPulsadoChar",
        "p_evento",
        "l_numPulsadoChar",
        "l_numPulsadoChar",
        "p_arrayTotal",
        "p_numElementosXPag",
        "p_numPagSolicitada",
        "_validaNoNullNoUndefined",
        "p_arrayTotal",
        "_validaNoNullNoUndefined",
        "p_numElementosXPag",
        "_validaNoNullNoUndefined",
        "p_numPagSolicitada",
        "_validaArray",
        "p_arrayTotal",
        "_validaNumeroMayorQueCero",
        "p_numElementosXPag",
        "_validaNumeroMayorQueCero",
        "p_numPagSolicitada",
        "p_numElementosXPag",
        "p_numPagSolicitada",
        "l_numPagTotalesAux",
        "p_arrayTotal",
        "l_numElementosXPagAux",
        "l_numPagSolicitadaAux",
        "l_indiceInicio",
        "l_indiceFin",
        "l_numElementosXPagAux",
        "l_numPagSolicitadaAux",
        "l_numPagTotalesAux",
        "l_indiceInicio",
        "l_numPagTotalesAux",
        "l_numElementosXPagAux",
        "l_numElementosXPagAux",
        "l_indiceFin",
        "p_arrayTotal",
        "l_indiceInicio",
        "l_numPagSolicitadaAux",
        "l_numElementosXPagAux",
        "l_numElementosXPagAux",
        "l_indiceFin",
        "l_numPagSolicitadaAux",
        "l_numElementosXPagAux",
        "l_arrayAuxTramo",
        "p_arrayTotal",
        "l_indiceInicio",
        "l_indiceFin",
        "l_arrayAuxTramo",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_validaNoNullNoUndefined",
        "_removeChildElementsInDom",
        "_removeChildElementsInDom",
        "l_item",
        "l_item",
        "_addElementInDom",
        "_plantillaElementProdConsulta",
        "l_item",
        "_addElementInDom"
    ],
    "literals": [
        "\"border-1px-azulPrimary\"",
        "\"text-azulPrimary\"",
        "\"font-size-15\"",
        "\"border-1px-azulDeepKoamaru\"",
        "\"text-azulDeepKoamaru\"",
        "\"font-size-12\"",
        "\"border-1px-azulPrimary\"",
        "\"text-azulPrimary\"",
        "\"font-size-15\"",
        "\"beforeend\"",
        "\"beforeend\"",
        "\"activeNumPage\"",
        "<!-- grupo paginas -->\n        <div datos=\"caja-paginas\" class=\"mw-20rem d-flex justify-content-center align-items-center bg-grisSecondaryExtraSoft ${this.getBorder()} roundedRem-5 text-truncate p-2\">\n\n            <!-- pag Anterior -->\n            <a href='javascript:void(0)' pagina='pagina-anterior' class='${this.getTextColor()} ${this.getTamanyoFuente()} mr-1'>\n              <i class='fas fa-arrow-alt-circle-left'></i>\n            </a>",
        "<a href='javascript:void(0)' pagina='${i}' class='mx-1 ${this.getTamanyoFuente()} ${this.getTextColor()} ${this.getCssClassActiveNumPag()}'>\n                        ${i}\n                    </a>",
        "<a href='javascript:void(0)' pagina='${i}' class='mx-1 ${this.getTamanyoFuente()} ${this.getTextColor()} '>\n                        ${i}\n                    </a>",
        "<!-- pag Siguiente -->\n            <a href='javascript:void(0)' pagina='pagina-siguiente' class='${this.getTextColor()} ${this.getTamanyoFuente()} ml-1'>\n              <i class='fas fa-arrow-alt-circle-right'></i>\n            </a>\n        </div>",
        "'click'",
        "\"pagina\"",
        "\"A\"",
        "\"I\"",
        "\"pagina\"",
        "'pagina-anterior'",
        "'pagina-siguiente'"
    ],
    "variables": [
        "g_paginadorTipo1",
        "g_paginadorTipo2",
        "arrayResul",
        "l_numPagActualAux",
        "l_numPagTotalesAux",
        "l_plantillaPagina",
        "i",
        "l_numPulsadoChar",
        "l_numPulsado",
        "l_arrayAuxTramo",
        "l_indiceInicio",
        "l_indiceFin",
        "l_numElementosXPagAux",
        "l_numPagSolicitadaAux",
        "l_numPagTotalesAux"
    ],
    "comments": [
        "VARIABLES RELACIONADAS CON PAGINADOR",
        "let g_numPagActual = 1;",
        "let g_numPagTotal = 1;",
        "Funcion que crea tipo de paginadores en materia de color, y tamanyo de fuente",
        "-- PROPIEDADES --",
        "this.l_border;",
        "this.l_textColor;",
        "this.l_tamanyoFuente;",
        "this.l_nodoPadre;",
        "this.l_posicionEnNodoPadrePaginador;",
        "this.l_nodoPadreElementosPaginados;",
        "this.l_posicionEnNodoPadreElementosPaginados;",
        "this.l_paginaActual;",
        "this.l_numPagTotales;",
        "this.l_numElementosXPag;",
        "this.l_arrayTotal;",
        "this.l_arrayTramo;",
        "this.l_plantillaPaginadorHTML;",
        "----- CONSTRUCTOR -----",
        "ESTILO",
        "NODO PADRE DE PAGINADOR",
        "NODO PADRE ELEMENTOS PAGINADOS",
        "PAGINAS",
        "-- paginas totales --",
        "-- pagina actual --",
        "NUMERO DE ELEMENTOS POR PAGINA",
        "ARRAY",
        "EVENTO 'CLICK' PIE PAGINA",
        "------------------ GETTERS AND SETTERS ------------------",
        "GET CLASE CSS PARA PAGINA ACTUAL",
        "GET y SET  BORDE",
        "actualiza valor de su propiedad",
        "actualiza la plantilla HTML del paginador",
        "dibuja los elementos y el paginador",
        "GET y SET  TEXT COLOR",
        "actualiza valor de su propiedad",
        "actualiza la plantilla HTML del paginador",
        "dibuja los elementos y el paginador",
        "GET y SET TAMANYO DE FUENTE",
        "actualiza valor de su propiedad",
        "actualiza la plantilla HTML del paginador",
        "dibuja los elementos y el paginador",
        "GET y SET NODO PADRE DE PAGINADOR",
        "actualiza valor de su propiedad",
        "dibuja los elementos y el paginador",
        "GET y SET  POSICION EN EL NODO PADRE PAGINADOR",
        "actualiza valor de su propiedad",
        "dibuja los elementos y el paginador",
        "GET y SET NODO PADRE DE ELEMENTOS PAGINADOS",
        "actualiza valor de su propiedad",
        "dibuja los elementos y el paginador",
        "GET y SET  POSICION EN EL NODO PADRE DE ELEMENTOS PAGINADOS",
        "actualiza valor de su propiedad",
        "dibuja los elementos y el paginador",
        "GET y SET NUMERO DE PAGINA ACTUAL",
        "actualiza valor de su propiedad",
        "actualiza la plantilla del paginador",
        "actualiza el array tramo",
        "dibuja los elementos y el paginador",
        "GET y SET  NUMERO DE PAGINAS TOTALES",
        "actualiza valor de su propiedad",
        "actualiza la plantilla HTML del paginador",
        "dibuja los elementos y el paginador",
        "GET y SET NUMERO DE ELEMENTOS POR PAGINA",
        "actualiza valor de su propiedad",
        "actualiza pagina actual",
        "comprueba array no nullo ni undefined",
        "actualizamos el numero de paginas totales que depende de la longitud del array y del numero de elementos por pagina",
        "actualiza array tramo",
        "dibuja los elementos y el paginador",
        "GET y SET ARRAY TOTAL",
        "actualiza valor de su propiedad",
        "comprueba metodo get",
        "actualizamos el numero de paginas totales que depende de la longitud del array y del numero de elementos por pagina",
        "dibuja los elementos y el paginador",
        "GET y SET ARRAY TOTAL",
        "actualiza valor de su propiedad",
        "dibuja los elementos y el paginador",
        "GET PLANTILLA HTML DEL PAGINADOR",
        "------------------ METODOS UTILES ------------------",
        "METODO PRIVADO: ACTUALIZA la propiedad \"l_plantillaPaginadorHTML\" con el numero de paginas totales y numero de pagina actual pasadas por parametro",
        "variable auxiliar que guarda el numero de pagina actual convertida a entero",
        "variable auxiliar que guarda el numero de paginas totales convertida a entero",
        "crea la plantilla del paginador HTML",
        "METODO PRIVADO: Funcion que obtiene la plantilla HTML con varias paginas y el contenedor de la pagina",
        "console.log(l_plantillaPaginador);",
        "EVENTO 'CLICK' EN EL NUMERO DE PAGINA",
        "click en paginas 1..2..3..",
        "variable guarda el numero de pagina pulsado en formato caracter",
        "variable guarda el numero de pagina convertido a numero",
        "si se pulsa pagina concreta",
        "actualizamos el valor de pagina actual con el valor de la pagina pulsada",
        "dibuja los elementos y el paginador",
        "si se pulsa el icono de 'previous' o 'next' pagina",
        "Si nos encontramos en una pagina mayor a la 1",
        "actualizamos el valor de pagina actual a una pagina menos a la actual",
        "dibuja los elementos y el paginador",
        "actualizamos el valor de pagina actual a una pagina mas a la actual",
        "dibuja los elementos y el paginador",
        "METODO PRIVADO: Funcion que calcula y devuelve el tramo de array seleccionado",
        "variables para el problema",
        "variables auxiliares",
        "numero paginas totales",
        "Trozo de array que cumple el tramo",
        "this.setArrayElemTotales(l_arrayAuxTramo);",
        "Dibuja los elementos y el paginador",
        "vacia el espacio donde van los productos",
        "vacia el espacio donde se encuentra el paginador",
        "anyade los elementos a la pagina de elementos",
        "anyade los numeros de paginas al paginador",
        "funcion toSTRING",
        "console.log('TCL: Paginador -> toString -> l_paginaActual', this.getNumPagActual());",
        "console.log('TCL: Paginador -> toString -> l_numPagTotales', this.getNumTotalPag());",
        "console.log('TCL: Paginador -> toString -> l_border', this.getBorder());",
        "console.log('TCL: Paginador -> toString -> l_textColor', this.getTextColor());",
        "console.log('TCL: Paginador -> toString -> l_tamanyoFuente', this.getTamanyoFuente());",
        "//GET y SET l_arrayElemTotales",
        "getArrayElemTotales(){",
        "return this.l_arrayElemTotales;",
        "}",
        "setArrayElemTotales(p_arrayIn){",
        "try {",
        "if(p_arrayIn.length == 0){",
        "throw ('Error, La variable pasada por parámetro, p_arrayIn, no puede ser vacía');",
        "}else{",
        "// this.l_arrayElemTotales = p_arrayIn.slice();",
        "this.l_arrayElemTotales = p_arrayIn;",
        "// Actualiza numero total de paginas",
        "this.setNumPagTotal(Math.ceil(l_arrayElemTotales.length/this.getElementosXPagina()));",
        "}",
        "} catch (error) {",
        "console.log('TCL: setIndiceInicioPag -> }catch -> error:', error)",
        "}",
        "}",
        "//GET y SET l_elementosXPagina",
        "getElementosXPagina(){",
        "return this.l_elementosXPagina;",
        "}",
        "setElementosXPagina(p_numElementosXPagina){",
        "try {",
        "let l_numEle = Number.parseInt(p_numElementosXPagina);",
        "if(Number.isNaN(l_numEle)){",
        "throw ('Error, La variable pasada por parámetro, p_numElementosXPagina, no es un número');",
        "}else{",
        "this.l_elementosXPagina = l_numEle;",
        "}",
        "} catch (error) {",
        "console.log('TCL: setElementosXPagina -> }catch -> error:', error)",
        "}",
        "}",
        "//GET y SET l_indiceInicioPag",
        "getIndiceInicioPag(){",
        "return this.l_indiceInicioPag;",
        "}",
        "setIndiceInicioPag(p_indiceInicio){",
        "try {",
        "let l_indiceNum = Number.parseInt(p_indiceInicio);",
        "if(Number.isNaN(l_indiceNum)){",
        "throw ('Error, La variable pasada por parámetro, p_indiceInicio, no es un número');",
        "}else{",
        "this.l_indiceInicioPag = l_indiceNum;",
        "}",
        "} catch (error) {",
        "console.log('TCL: setIndiceInicioPag -> }catch -> error:', error)",
        "}",
        "}",
        "//GET y SET l_indiceFinPag",
        "getIndiceFinPag(){",
        "return this.l_indiceFinPag;",
        "}",
        "setIndiceFinPag(p_indiceFin){",
        "try {",
        "let l_indiceNum = Number.parseInt(p_indiceFin);",
        "if(Number.isNaN(l_indiceNum)){",
        "throw ('Error, La variable pasada por parámetro, p_indiceFin, no es un número');",
        "}else{",
        "this.l_indiceFinPag = l_indiceNum;",
        "}",
        "} catch (error) {",
        "console.log('TCL: setIndiceFinPag -> }catch -> error:', error)",
        "}",
        "}",
        "// Funcion ACTUALIZA paginador",
        "redibujaPaginador(p_numPagTotal=1,p_numPagActual=1){",
        "_removeChildElementsInDom(this.getNodoPadre());",
        "this.updatePlantillaPaginadorHTML(p_numPagTotal,p_numPagActual);",
        "_addElementInDom(this.getNodoPadre(),this.getPlantillaPaginadorHTML(),this.getPosicionEnNodoPadre());",
        "// Actualiza pagina actual y colorea el numero de pagina",
        "// this.setNumPagActual(p_numPagActual);",
        "}",
        "// Funcion ACTUALIZA paginador",
        "redibujaPaginador(){",
        "_removeChildElementsInDom(this.getNodoPadrePaginador());",
        "// this.updatePlantillaPaginadorHTML(p_numPagTotal,p_numPagActual);",
        "_addElementInDom(this.getNodoPadrePaginador(),this.getPlantillaPaginadorHTML(),this.getPosicionEnNodoPadrePaginador());",
        "// Actualiza pagina actual y colorea el numero de pagina",
        "// this.setNumPagActual(p_numPagActual);",
        "}",
        "// FUNCION ANYADE PRODUCTOS A UNA PAGINA CONCRETA",
        "privateAnyadeElementosAPagina(p_arrayTramoADibujar){",
        "// calcula numero de paginas total segun el array de busqueda filtrado y el numero de productos mostrados por pagina",
        "// let l_numPagTotal = Math.ceil(p_arrayProdFiltrados.length/p_selectNumProdMostradosXPaginaValue);",
        "// calcula y devuelve el array con el tramo a mostrar en la pagina",
        "// let l_arrayProdXPag = this.calculaArrayTramo(p_arrayParaPaginaDeterminada,p_numPagSeleccionada,this.getNumTotalPag(),p_selectNumProdMostradosXPaginaValue);",
        "for(let l_item of p_arrayTramoADibujar){",
        "if(l_item != null){",
        "// _addElementInDom(p_nodoPadre,_plantillaElementProdConsulta(l_p),c_BEFOREEND);",
        "_addElementInDom(this.getNodoPadreElementosPaginados(),_plantillaElementProdConsulta(l_item),this.getPosicionEnNodoPadreElementosPaginados());",
        "}",
        "}",
        "//PIE PAGINA",
        "// recalcula numero total paginas para redibujarPaginador",
        "// this.redibujaPaginador();",
        "// EVENTO 'CLICK' EN EL NUMERO DE PAGINA",
        "// this.clickNumPagina(p_arrayParaPaginaDeterminada,p_nodoPadre,p_selectNumProdMostradosXPaginaValue);",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "_createTipoPaginador",
        "getCssClassActiveNumPag",
        "getBorder",
        "setBorder",
        "getTextColor",
        "setTextColor",
        "getTamanyoFuente",
        "setTamanyoFuente",
        "getNodoPadrePaginador",
        "setNodoPadrePaginador",
        "getPosicionEnNodoPadrePaginador",
        "setPosicionEnNodoPadrePaginador",
        "getNodoPadreElementosPaginados",
        "setNodoPadreElementosPaginados",
        "getPosicionEnNodoPadreElementosPaginados",
        "setPosicionEnNodoPadreElementosPaginados",
        "getNumPagActual",
        "setNumPagActual",
        "getNumPagTotales",
        "setNumPagTotales",
        "getNumElementosXPagina",
        "setNumElementosXPagina",
        "getArrayTotal",
        "setArrayTotal",
        "getArrayTramo",
        "setArrayTramo",
        "getPlantillaPaginadorHTML",
        "privateUpdatePlantillaPaginadorHTML",
        "privateCreatePlantillaPaginadorHTML",
        "clickNumPagina",
        "privateCalculaArrayTramo",
        "dibuja",
        "toString"
    ],
    "classes": [
        "Paginador"
    ]
}