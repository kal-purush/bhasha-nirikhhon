{
    "identifiers": [
        "flow",
        "fromPairs",
        "minimatch",
        "splitIntoLines",
        "splitIntoWords",
        "isNonEmptyString",
        "flow",
        "isNonEmptyString",
        "flow",
        "splitIntoLines",
        "withoutEmptyLines",
        "splitIntoWords",
        "fromPairs",
        "rest",
        "parseInt",
        "size",
        "oid",
        "rest",
        "createPointerFile",
        "sha",
        "size",
        "removeGitAttributesCommentsFromLine",
        "line",
        "line",
        "parseGitPatternAttribute",
        "attributeString",
        "attributeString",
        "attributeString",
        "attributeString",
        "attributeString",
        "attributeString",
        "flow",
        "parseGitPatternAttribute",
        "fromPairs",
        "flow",
        "splitIntoWords",
        "attributes",
        "pattern",
        "parseGitPatternAttributes",
        "attributes",
        "flow",
        "splitIntoLines",
        "removeGitAttributesCommentsFromLine",
        "withoutEmptyLines",
        "parseGitAttributesPatternLine",
        "flow",
        "parseGitAttributesFileToPatternAttributePairs",
        "attributes",
        "attributes",
        "attributes",
        "pattern",
        "matchPath",
        "path",
        "patterns",
        "pattern",
        "minimatch",
        "path",
        "pattern",
        "resourceExists",
        "makeAuthorizedRequest",
        "rootURL",
        "defaultContentHeaders",
        "sha",
        "response",
        "response",
        "getDownloadURLThunkFromSha",
        "sha",
        "makeAuthorizedRequest",
        "rootURL",
        "sha",
        "t",
        "t",
        "t",
        "t",
        "t",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "blob",
        "URL",
        "blob",
        "err",
        "err",
        "getResourceDownloadURLThunks",
        "clientConfig",
        "objects",
        "objects",
        "sha",
        "getDownloadURLThunkFromSha",
        "clientConfig",
        "sha",
        "getResourceDownloadURLs",
        "clientConfig",
        "objects",
        "getResourceDownloadURLThunks",
        "clientConfig",
        "objects",
        "sha",
        "thunk",
        "uploadOperation",
        "objects",
        "objects",
        "rest",
        "rest",
        "sha",
        "getResourceUploadURLs",
        "objects",
        "makeAuthorizedRequest",
        "rootURL",
        "defaultContentHeaders",
        "uploadOperation",
        "objects",
        "response",
        "uploadBlob",
        "clientConfig",
        "uploadURL",
        "blob",
        "fetch",
        "uploadURL",
        "blob",
        "uploadResource",
        "clientConfig",
        "resource",
        "resourceExists",
        "clientConfig",
        "existingFile",
        "sha",
        "getResourceUploadURLs",
        "clientConfig",
        "uploadBlob",
        "clientConfig",
        "uploadURL",
        "resource",
        "sha",
        "configureFn",
        "config",
        "fn",
        "args",
        "fn",
        "config",
        "args",
        "getClient",
        "clientConfig",
        "flow",
        "key",
        "key",
        "configureFn",
        "clientConfig",
        "clientFns",
        "key",
        "fromPairs",
        "configuredFns",
        "configuredFns",
        "clientConfig",
        "clientConfig",
        "clientFns"
    ],
    "literals": [
        "'lodash/fp'",
        "'minimatch'",
        "'\\n'",
        "''",
        "':'",
        "\\\nversion https://git-lfs.github.com/spec/v1\noid sha256:${sha}\nsize ${size}",
        "'#'",
        "'='",
        "'='",
        "'-'",
        "'lfs'",
        "'lfs'",
        "'lfs'",
        "'application/vnd.git-lfs+json'",
        "'Content-Type'",
        "'application/vnd.git-lfs+json'",
        "${rootURL}/verify",
        "'POST'",
        "${rootURL}/origin/${sha}${\n      t && Object.keys(t).length > 0 ? `?nf_resize=${t.nf_resize}&w=${t.w}&h=${t.h}` : ''\n    }",
        "?nf_resize=${t.nf_resize}&w=${t.w}&h=${t.h}",
        "''",
        "''",
        "'upload'",
        "'basic'",
        "${rootURL}/objects/batch",
        "'POST'",
        "'PUT'"
    ],
    "variables": [
        "splitIntoLines",
        "splitIntoWords",
        "isNonEmptyString",
        "withoutEmptyLines",
        "parsePointerFile",
        "createPointerFile",
        "removeGitAttributesCommentsFromLine",
        "parseGitPatternAttribute",
        "parseGitPatternAttributes",
        "parseGitAttributesPatternLine",
        "pattern",
        "parseGitAttributesFileToPatternAttributePairs",
        "getLargeMediaPatternsFromGitAttributesFile",
        "pattern",
        "attributes",
        "pattern",
        "matchPath",
        "defaultContentHeaders",
        "resourceExists",
        "response",
        "getDownloadURLThunkFromSha",
        "t",
        "getResourceDownloadURLThunks",
        "getResourceDownloadURLs",
        "sha",
        "thunk",
        "uploadOperation",
        "getResourceUploadURLs",
        "response",
        "uploadBlob",
        "uploadResource",
        "existingFile",
        "uploadURL",
        "configureFn",
        "clientFns",
        "getClient"
    ],
    "comments": [
        "",
        "Pointer file parsing",
        "",
        ".gitattributes file parsing",
        "There are three kinds of attribute settings:",
        "- a key=val pair sets an attribute to a specific value",
        "- a key without a value and a leading hyphen sets an attribute to false",
        "- a key without a value and no leading hyphen sets an attribute",
        "to true",
        "eslint-disable-next-line no-unused-vars",
        "",
        "API interactions",
        "TODO: what kind of error to throw here? APIError doesn't seem",
        "to fit",
        "We allow users to get thunks which load the blobs instead of fully",
        "resolved blob URLs so that media clients can download the blobs",
        "lazily.  This behaves more similarly to the behavior of string",
        "URLs, which only trigger an image download when the DOM element for",
        "that image is created.",
        "",
        "Create Large Media client"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}