{
    "identifiers": [
        "org",
        "wso2",
        "testgrid",
        "infrastructure",
        "providers",
        "aws",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "CloseableHttpResponse",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "HttpPost",
        "org",
        "apache",
        "http",
        "entity",
        "StringEntity",
        "org",
        "apache",
        "http",
        "impl",
        "client",
        "CloseableHttpClient",
        "org",
        "apache",
        "http",
        "impl",
        "client",
        "HttpClientBuilder",
        "org",
        "apache",
        "http",
        "util",
        "EntityUtils",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "wso2",
        "testgrid",
        "common",
        "config",
        "ConfigurationContext",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "StringJoiner",
        "logger",
        "LoggerFactory",
        "getLogger",
        "kibanaEndpoint",
        "dashboardCtxFormat",
        "instanceLogFilterFormat",
        "allLogsFilter",
        "allLogsFilterEncodedSection",
        "allLogsFilterJsonSection",
        "allInstances",
        "kibanaDashboardBuilder",
        "logger",
        "info",
        "kibanaEndpoint",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "KIBANA_ENDPOINT_URL",
        "dashboardCtxFormat",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "KIBANA_DASHBOARD_STR",
        "instanceLogFilterFormat",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "KIBANA_FILTER_STR",
        "allLogsFilter",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "KIBANA_ALL_LOGS_FILTER",
        "allLogsFilterEncodedSection",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "REPEATABLE_ALL_LOGS_FILTER_STRING",
        "allLogsFilterJsonSection",
        "ConfigurationContext",
        "getProperty",
        "ConfigurationContext",
        "ConfigurationProperties",
        "REPEATABLE_ALL_LOGS_JSON",
        "allInstances",
        "kibanaDashboardBuilder",
        "kibanaDashboardBuilder",
        "kibanaDashboardBuilder",
        "currentInstancesMap",
        "currentStackName",
        "shortenURL",
        "kibanaEndpoint",
        "dashboardCtxFormat",
        "instanceLogFilterFormat",
        "logger",
        "warn",
        "kibanaEndpoint",
        "dashboardCtxFormat",
        "instanceLogFilterFormat",
        "Optional",
        "empty",
        "allInstances",
        "put",
        "currentStackName",
        "currentInstancesMap",
        "instanceLogFilter",
        "filtersStr",
        "allInstancesEntry",
        "allInstances",
        "entrySet",
        "instanceMap",
        "allInstancesEntry",
        "getValue",
        "entry",
        "instanceMap",
        "entrySet",
        "instanceLogFilter",
        "instanceLogFilterFormat",
        "replaceAll",
        "entry",
        "getKey",
        "replaceAll",
        "entry",
        "getValue",
        "replaceAll",
        "allInstancesEntry",
        "getKey",
        "filtersStr",
        "add",
        "instanceLogFilter",
        "allLogsStr",
        "allLogsJson",
        "stackName",
        "allInstances",
        "keySet",
        "allLogsStr",
        "add",
        "allLogsFilterEncodedSection",
        "replaceAll",
        "stackName",
        "allLogsJson",
        "add",
        "allLogsFilterJsonSection",
        "replaceAll",
        "stackName",
        "allLogsFilter",
        "allLogsFilter",
        "replaceAll",
        "allLogsStr",
        "toString",
        "replaceAll",
        "allLogsJson",
        "toString",
        "filtersStr",
        "add",
        "allLogsFilter",
        "logDownloadCtx",
        "dashboardCtxFormat",
        "replace",
        "filtersStr",
        "toString",
        "replaceAll",
        "currentStackName",
        "shortenURL",
        "shortenKibanaURL",
        "logDownloadCtx",
        "Optional",
        "of",
        "kibanaEndpoint",
        "logDownloadCtx",
        "dashboardURL",
        "shortenUrl",
        "httpClient",
        "HttpClientBuilder",
        "create",
        "build",
        "request",
        "kibanaEndpoint",
        "entity",
        "dashboardURL",
        "request",
        "addHeader",
        "request",
        "addHeader",
        "request",
        "setEntity",
        "entity",
        "httpResponse",
        "httpClient",
        "execute",
        "request",
        "httpResponse",
        "getStatusLine",
        "getStatusCode",
        "shortUrlId",
        "EntityUtils",
        "toString",
        "httpResponse",
        "getEntity",
        "shortenUrl",
        "kibanaEndpoint",
        "shortUrlId",
        "Optional",
        "of",
        "shortenUrl",
        "logger",
        "warn",
        "httpResponse",
        "getStatusLine",
        "getStatusCode",
        "kibanaEndpoint",
        "dashboardURL",
        "Optional",
        "empty",
        "e",
        "logger",
        "error",
        "kibanaEndpoint",
        "kibanaEndpoint",
        "dashboardURL",
        "Optional",
        "empty"
    ],
    "literals": [
        "\"Initializing KibanaDashboardBuilder..\"",
        "\"Kibana endpoint configuration not found in testgrid config. Server log view may not work!\"",
        "\"Kibana Endpoint : \"",
        "\"\\nDashbboardCtxFormat : \"",
        "\"\\ninstanceLogFilterFormat : \"",
        "\",\"",
        "\"#_INSTANCE_ID_#\"",
        "\"#_LABEL_#\"",
        "\"#_STACK_NAME_#\"",
        "\",\"",
        "\",\"",
        "\"#_STACK_NAME_#\"",
        "\"#_STACK_NAME_#\"",
        "\"#_ALL_LOGS_FILTER_SECTION_#\"",
        "\"#_REPEATABLE_ALL_LOGS_JSON_SECTION_#\"",
        "\"#_NODE_FILTERS_#\"",
        "\"#_STACK_NAME_#\"",
        "\"/shorten\"",
        "\"{\\\"url\\\" : \\\"\"",
        "\"\\\"}\"",
        "\"Content-Type\"",
        "\"application/json;charset=utf-8\"",
        "\"kbn-xsrf\"",
        "\"true\"",
        "\"/goto/\"",
        "\"Request to Kibana to retrieve shortened URL for dashboard returned status code:\"",
        "\"\\n. View logs at: \"",
        "\"Exception occurred while calling for URL shortening API at \"",
        "\"Kibana Endpoint : \"",
        "\"\\n\"",
        "\"View logs at \""
    ],
    "variables": [
        "kibanaEndpoint",
        "dashboardCtxFormat",
        "instanceLogFilterFormat",
        "allLogsFilter",
        "allLogsFilterEncodedSection",
        "allLogsFilterJsonSection",
        "allInstances",
        "kibanaDashboardBuilder",
        "instanceLogFilter",
        "shortenUrl"
    ],
    "comments": [
        "TODO implement filtering unwanted nodes with no log input i.e BastianNode , PuppetMaster"
    ],
    "docstrings": [
        "* Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* This class is responsible for building the Kibana dashboard URL used to display the log content\n * of a AWS cloudformation stack.This class is a singleton implementation to make sure the log URL\n * is built for all the consecutive stacks created\n * during a TestPlan\n *\n * @since 1.0.0\n *",
        "* private constructor to populate all the fields from reading the config.properties file\n     *",
        "* This method returns the current instance of {@link KibanaDashboardBuilder}. it is the only\n     * method capable of creating an instance and is responsible for the singleton behavior of\n     * the class.\n     *\n     * @return the available {@link KibanaDashboardBuilder} instance",
        "* This method is responsible for building the Kibana dashboard for the available stacks.\n     *\n     * @param currentInstancesMap Map of instanceName and instance-id\n     * @param currentStackName Cloudformation stack name\n     * @param shortenURL weather to shorten URL or not, primaryliy used for unit testing purposes\n     * @return Optional of dashboard link shortened to make it compatible with database column\n     * restrictions",
        "* This method is responsible for shortening the final Kibana dashboard URL string by calling the\n     * Kibana URL endpoint.\n     *\n     * If the operation is not successful it will return an {@link Optional} empty because having the original\n     * URL saved in the database will throw an Exception for exceeding character count. instead the original URL\n     * is being printed out to the logs so the developer can troubleshoot later.\n     *\n     * @param dashboardURL original URL string\n     * @return {@link Optional<String>} with the shortened URL"
    ],
    "functions": [
        "KibanaDashboardBuilder",
        "KibanaDashboardBuilder",
        "getKibanaDashboardBuilder",
        "buildDashBoard",
        "shortenKibanaURL"
    ],
    "classes": [
        "KibanaDashboardBuilder"
    ]
}