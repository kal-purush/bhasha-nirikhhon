{
    "identifiers": [
        "os",
        "ipywidgets",
        "Layout",
        "Label",
        "Text",
        "Checkbox",
        "Button",
        "HBox",
        "VBox",
        "FloatText",
        "BoundedIntText",
        "BoundedFloatText",
        "HTMLMath",
        "Dropdown",
        "Label",
        "Label",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "FloatText",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "BoundedFloatText",
        "min",
        "max",
        "step",
        "stepsize",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "BoundedFloatText",
        "min",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "BoundedFloatText",
        "min",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "BoundedFloatText",
        "min",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "HBox",
        "xmin",
        "xmax",
        "xdelta",
        "HBox",
        "ymin",
        "ymax",
        "ydelta",
        "HBox",
        "zmin",
        "zmax",
        "zdelta",
        "BoundedIntText",
        "min",
        "description",
        "layout",
        "Layout",
        "width",
        "constWidth",
        "Checkbox",
        "description",
        "layout",
        "Layout",
        "width",
        "BoundedIntText",
        "min",
        "max",
        "description",
        "layout",
        "Layout",
        "width",
        "b",
        "toggle_svg",
        "value",
        "svg_interval",
        "svg_interval",
        "toggle_svg",
        "observe",
        "toggle_svg_cb",
        "Checkbox",
        "description",
        "layout",
        "Layout",
        "width",
        "BoundedIntText",
        "min",
        "max",
        "description",
        "layout",
        "Layout",
        "width",
        "b",
        "toggle_mcds",
        "value",
        "mcds_interval",
        "mcds_interval",
        "toggle_mcds",
        "observe",
        "toggle_mcds_cb",
        "HBox",
        "Label",
        "toggle_svg",
        "HBox",
        "svg_interval",
        "Label",
        "toggle_mcds",
        "HBox",
        "mcds_interval",
        "Label",
        "Label",
        "Layout",
        "border",
        "VBox",
        "label_domain",
        "x_row",
        "y_row",
        "layout",
        "box_layout",
        "VBox",
        "domain_box",
        "HBox",
        "tmax",
        "Label",
        "omp_threads",
        "svg_mat_output_row",
        "xml_root",
        "xmin",
        "xml_root",
        "find",
        "text",
        "xmax",
        "xml_root",
        "find",
        "text",
        "xdelta",
        "xml_root",
        "find",
        "text",
        "ymin",
        "xml_root",
        "find",
        "text",
        "ymax",
        "xml_root",
        "find",
        "text",
        "ydelta",
        "xml_root",
        "find",
        "text",
        "zmin",
        "xml_root",
        "find",
        "text",
        "zmax",
        "xml_root",
        "find",
        "text",
        "zdelta",
        "xml_root",
        "find",
        "text",
        "tmax",
        "xml_root",
        "find",
        "text",
        "omp_threads",
        "xml_root",
        "find",
        "text",
        "toggle_svg",
        "xml_root",
        "find",
        "find",
        "text",
        "svg_interval",
        "xml_root",
        "find",
        "find",
        "text",
        "toggle_mcds",
        "xml_root",
        "find",
        "find",
        "text",
        "mcds_interval",
        "xml_root",
        "find",
        "find",
        "text",
        "xml_root",
        "xml_root",
        "find",
        "xmin",
        "value",
        "xml_root",
        "find",
        "xmax",
        "value",
        "xml_root",
        "find",
        "xdelta",
        "value",
        "xml_root",
        "find",
        "ymin",
        "value",
        "xml_root",
        "find",
        "ymax",
        "value",
        "xml_root",
        "find",
        "ydelta",
        "value",
        "xml_root",
        "find",
        "zmin",
        "value",
        "xml_root",
        "find",
        "zmax",
        "value",
        "xml_root",
        "find",
        "zdelta",
        "value",
        "xml_root",
        "find",
        "tmax",
        "value",
        "xml_root",
        "find",
        "omp_threads",
        "value",
        "xml_root",
        "find",
        "find",
        "toggle_svg",
        "value",
        "xml_root",
        "find",
        "find",
        "svg_interval",
        "value",
        "xml_root",
        "find",
        "find",
        "toggle_mcds",
        "value",
        "xml_root",
        "find",
        "find",
        "mcds_interval",
        "value",
        "toggle_svg",
        "value",
        "tmax",
        "value",
        "svg_interval",
        "value",
        "toggle_mcds",
        "value",
        "tmax",
        "value",
        "mcds_interval",
        "value"
    ],
    "literals": [
        "'micron'",
        "'180px'",
        "'500px'",
        "'Domain (micron):'",
        "'Xmin'",
        "'Ymin'",
        "'Zmin'",
        "'Xmax'",
        "'Ymax'",
        "'Zmax'",
        "'Max Time'",
        "'dx'",
        "'dy'",
        "'dz'",
        "'# threads'",
        "'Cells'",
        "'150px'",
        "'every'",
        "'160px'",
        "'Subtrates'",
        "'180px'",
        "'every'",
        "'160px'",
        "'Plots:'",
        "'min'",
        "'min'",
        "''",
        "'1px solid'",
        "'min'",
        "\".//x_min\"",
        "\".//x_max\"",
        "\".//dx\"",
        "\".//y_min\"",
        "\".//y_max\"",
        "\".//dy\"",
        "\".//z_min\"",
        "\".//z_max\"",
        "\".//dz\"",
        "\".//max_time\"",
        "\".//omp_num_threads\"",
        "\".//SVG\"",
        "\".//enable\"",
        "\".//SVG\"",
        "\".//interval\"",
        "\".//full_data\"",
        "\".//enable\"",
        "\".//full_data\"",
        "\".//interval\"",
        "\".//x_min\"",
        "\".//x_max\"",
        "\".//dx\"",
        "\".//y_min\"",
        "\".//y_max\"",
        "\".//dy\"",
        "\".//z_min\"",
        "\".//z_max\"",
        "\".//dz\"",
        "\".//max_time\"",
        "\".//omp_num_threads\"",
        "\".//SVG\"",
        "\".//enable\"",
        "\".//SVG\"",
        "\".//interval\"",
        "\".//full_data\"",
        "\".//enable\"",
        "\".//full_data\"",
        "\".//interval\""
    ],
    "variables": [
        "micron_units",
        "constWidth",
        "tab_height",
        "label_domain",
        "stepsize",
        "xmin",
        "ymin",
        "zmin",
        "xmax",
        "ymax",
        "zmax",
        "tmax",
        "xdelta",
        "ydelta",
        "zdelta",
        "x_row",
        "y_row",
        "z_row",
        "omp_threads",
        "toggle_svg",
        "svg_interval",
        "disabled",
        "disabled",
        "toggle_mcds",
        "mcds_interval",
        "disabled",
        "disabled",
        "svg_mat_output_row",
        "label_blankline",
        "box_layout",
        "domain_box",
        "tab",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text",
        "text"
    ],
    "comments": [
        "Config Tab",
        "micron_units = HTMLMath(value=r\"$\\mu M$\")",
        "use \"option m\" (Mac, for micro symbol)",
        "micron_units = Label('microns')   # use \"option m\" (Mac, for micro symbol)",
        "tab_height = '400px'",
        "tab_layout = Layout(width='900px',   # border='2px solid black',",
        "tab_layout = Layout(width='850px',   # border='2px solid black',",
        "height=tab_height, overflow_y='scroll',)",
        "np_tab_layout = Layout(width='800px',  # border='2px solid black',",
        "height='350px', overflow_y='scroll',)",
        "my_domain = [0,0,-10, 2000,2000,10, 20,20,20]  # [x,y,zmin,  x,y,zmax, x,y,zdelta]",
        "label_domain = Label('Domain ($\\mu M$):')",
        "description='$X_{min}$',",
        "description='$Time_{max}$',",
        "'âˆ†x',  # Mac: opt-j for delta",
        "self.toggle_prng = Checkbox(",
        "description='Seed PRNG', style={'description_width': 'initial'},  # e.g. 'initial'  '120px'",
        "layout=Layout(width=constWidth),",
        ")",
        "self.prng_seed = BoundedIntText(",
        "min = 1,",
        "description='Seed',",
        "disabled=True,",
        "layout=Layout(width=constWidth),",
        ")",
        "def toggle_prng_cb(b):",
        "if (toggle_prng.value):",
        "self.prng_seed.disabled = False",
        "else:",
        "self.prng_seed.disabled = True",
        "self.toggle_prng.observe(toggle_prng_cb)",
        "prng_row = HBox([toggle_prng, prng_seed])",
        "SVG",
        "constWidth = '180px'",
        "self.svg_t0 = BoundedFloatText (",
        "min=0,",
        "description='$T_0$',",
        "layout=Layout(width=constWidth),",
        ")",
        "TODO: set max on all Bounded to avoid unwanted default",
        "self.svg_t0.disabled = False",
        "self.svg_t0.disabled = True",
        "value=False,",
        "Full",
        "self.mcds_t0 = FloatText(",
        "description='$T_0$',",
        "disabled=True,",
        "layout=Layout(width=constWidth),",
        ")",
        "disabled=True,",
        "self.mcds_t0.disabled = False #False",
        "self.mcds_t0.disabled = True",
        "svg_output_row = HBox([toggle_svg, svg_t0, svg_interval])",
        "mat_output_row = HBox([toggle_mcds, mcds_t0, mcds_interval])",
        "svg_mat_output_row = HBox([self.toggle_svg, self.svg_interval, self.toggle_mcds, self.mcds_interval])",
        "write_config_row = HBox([write_config_button, write_config_file])",
        "run_sim_row = HBox([run_button, run_command_str, kill_button])",
        "run_sim_row = HBox([run_button, run_command_str])",
        "run_sim_row = HBox([run_button.w])  # need \".w\" for the custom RunCommand widget",
        "toggle_2D_seed_row = HBox([toggle_prng, prng_seed])  # toggle2D",
        "domain_box = VBox([label_domain,x_row,y_row,z_row], layout=box_layout)",
        "label_blankline,",
        "HBox([self.substrate[3], self.diffusion_coef[3], self.decay_rate[3] ]),",
        "output_dir, toggle_2D_seed_",
        "], layout=tab_layout)  # output_dir, toggle_2D_seed_",
        "Populate the GUI widgets with values from the XML",
        "Read values from the GUI widgets and generate/write a new XML",
        "TODO: verify template .xml file exists!",
        "TODO: verify valid type (numeric) and range?",
        "user_details = ET.SubElement(root, \"user_details\")",
        "ET.SubElement(user_details, \"PhysiCell_settings\", name=\"version\").text = \"devel-version\"",
        "ET.SubElement(user_details, \"domain\")",
        "ET.SubElement(user_details, \"xmin\").text = \"-100\"",
        "tree = ET.ElementTree(root)",
        "tree.write(write_config_file.value)",
        "tree.write(\"test.xml\")",
        "TODO: verify can write to this filename",
        "tree.write(write_config_file.value)"
    ],
    "docstrings": [
        "\"\"\"\n        self.tdelta = BoundedFloatText(\n            min=0.01,\n            description='$Time_{delta}$',\n            layout=Layout(width=constWidth),\n        )\n        \"\"\"",
        "\"\"\"\n        self.toggle2D = Checkbox(\n            description='2-D',\n            layout=Layout(width=constWidth),\n        )\n        def toggle2D_cb(b):\n            if (self.toggle2D.value):\n                #zmin.disabled = zmax.disabled = zdelta.disabled = True\n                zmin.disabled = True\n                zmax.disabled = True\n                zdelta.disabled = True\n            else:\n                zmin.disabled = False\n                zmax.disabled = False\n                zdelta.disabled = False\n            \n        self.toggle2D.observe(toggle2D_cb)\n        \"\"\""
    ],
    "functions": [
        "toggle_svg_cb",
        "toggle_mcds_cb",
        "fill_gui",
        "fill_xml",
        "get_num_svg_frames",
        "get_num_substrate_frames"
    ],
    "classes": [
        "ConfigTab"
    ]
}