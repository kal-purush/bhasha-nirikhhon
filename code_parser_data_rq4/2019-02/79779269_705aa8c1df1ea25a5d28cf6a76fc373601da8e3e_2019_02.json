{
    "identifiers": [
        "value",
        "color",
        "length",
        "length",
        "length",
        "length",
        "length",
        "length",
        "deg",
        "deg",
        "deg",
        "deg",
        "x",
        "y",
        "z",
        "deg",
        "sx",
        "sy",
        "sx",
        "sy",
        "sz",
        "sx",
        "sy",
        "sz",
        "tx",
        "ty",
        "tx",
        "tx",
        "tx",
        "tx",
        "ty",
        "tz",
        "ax",
        "ay",
        "ax",
        "ay",
        "a",
        "b",
        "c",
        "d",
        "tx",
        "ty",
        "callback",
        "res",
        "callback",
        "res",
        "callback",
        "res",
        "component",
        "Weapp",
        "selector",
        "selector",
        "callback",
        "selector",
        "selector",
        "callback",
        "res",
        "component",
        "Weapp",
        "options"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'linear'",
        "'ease'",
        "'ease-in'",
        "'ease-in-out'",
        "'ease-out'",
        "'step-start'",
        "'step-end'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "wx"
    ],
    "comments": [],
    "docstrings": [
        "* 设备品牌",
        "* 设备型号",
        "* 设备像素比",
        "* 屏幕宽度，单位px",
        "* 屏幕高度，单位px",
        "* 可使用窗口宽度，单位px",
        "* 可使用窗口高度，单位px",
        "* 状态栏的高度，单位px",
        "* 微信设置的语言",
        "* 微信版本号",
        "* 操作系统及版本",
        "* 客户端平台",
        "* 用户字体大小（单位px）。以微信客户端「我-设置-通用-字体大小」中的设置为准",
        "* 客户端基础库版本",
        "* 设备性能等级（仅Android小游戏）。取值为：-2 或 0（该设备无法运行小游戏），-1（性能未知），>=1（设备性能值，该值越高，设备性能越好，目前最高不到50）",
        "* 动画持续时间，单位ms",
        "* 定义动画的效果",
        "* 动画延迟时间，单位 ms",
        "* 设置transform-origin",
        "* 导出动画队列。export 方法每次调用后会清掉之前的动画操作。",
        "* 表示一组动画完成。可以在一组动画中调用任意多个动画方法，一组动画中的所有动画会同时开始，一组动画完成后才会进行下一组动画。",
        "* 透明度，参数范围 0~1",
        "* 颜色值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* 长度值，如果传入 Number 则默认使用 px，可传入其他自定义单位的长度值",
        "* deg的范围-180~180，从原点顺时针旋转一个deg角度",
        "* deg的范围-180~180，在X轴旋转一个deg角度",
        "* deg的范围-180~180，在Y轴旋转一个deg角度",
        "* deg的范围-180~180，在Z轴旋转一个deg角度",
        "* 同transform-function rotate3d",
        "* 一个参数时，表示在X轴、Y轴同时缩放sx倍数；两个参数时表示在X轴缩放sx倍数，在Y轴缩放sy倍数",
        "* 在X轴缩放sx倍数",
        "* 在Y轴缩放sy倍数",
        "* 在Z轴缩放sy倍数",
        "* 在X轴缩放sx倍数，在Y轴缩放sy倍数，在Z轴缩放sz倍数",
        "* 一个参数时，表示在X轴偏移tx，单位px；两个参数时，表示在X轴偏移tx，在Y轴偏移ty，单位px。",
        "* 在X轴偏移tx，单位px",
        "* 在Y轴偏移tx，单位px",
        "* 在Z轴偏移tx，单位px",
        "* 在X轴偏移tx，在Y轴偏移ty，在Z轴偏移tz，单位px",
        "* 参数范围-180~180；一个参数时，Y轴坐标不变，X轴坐标延顺时针倾斜ax度；两个参数时，分别在X轴倾斜ax度，在Y轴倾斜ay度",
        "* 参数范围-180~180；Y轴坐标不变，X轴坐标延顺时针倾斜ax度",
        "* 参数范围-180~180；X轴坐标不变，Y轴坐标延顺时针倾斜ay度",
        "* 同transform-function matrix",
        "* 同transform-function matrix3d",
        "* 是否返回节点 id",
        "* 是否返回节点 dataset",
        "* \t左边界",
        "* 右边界",
        "* 上边界",
        "* 下边界",
        "* 节点的 ID",
        "* 节点的 dataset",
        "* 节点的水平滚动位置",
        "* 节点的竖直滚动位置",
        "* 获取节点的相关信息。需要获取的字段在fields中指定。返回值是 nodesRef 对应的 selectorQuery",
        "* 添加节点的布局位置的查询请求。相对于显示区域，以像素为单位。其功能类似于 DOM 的 getBoundingClientRect。返回 NodesRef 对应的 SelectorQuery。",
        "* 添加节点的滚动位置查询请求。以像素为单位。节点必须是 scroll-view 或者 viewport，返回 NodesRef 对应的 SelectorQuery。",
        "* 添加节点的 Context 对象查询请求。目前支持 VideoContext、CanvasContext、LivePlayerContext 和 MapContext 的获取。",
        "* 将选择器的选取范围更改为自定义组件 component 内。（初始时，选择器仅选取页面范围的节点，不会选取任何自定义组件中的节点）。\n   * @param component [description]",
        "* 在当前页面下选择第一个匹配选择器 selector 的节点。返回一个 NodesRef 对象实例，可以用于获取节点信息。",
        "* 在当前页面下选择匹配选择器 selector 的所有节点。",
        "* 选择显示区域。可用于获取显示区域的尺寸、滚动位置等信息。",
        "* 执行所有的请求。请求结果按请求次序构成数组，在callback的第一个参数中返回。",
        "* 一个数值数组，包含所有阈值。",
        "* 初始的相交比例，如果调用时检测到的相交比例与这个值不相等且达到阈值，则会触发一次监听器的回调函数。",
        "* 是否同时观测多个目标节点（而非一个），如果设为 true ，observe 的 targetSelector 将选中多个节点（注意：同时选中过多节点将影响渲染性能）",
        "* 节点布局区域的左边界",
        "* 节点布局区域的右边界",
        "* 节点布局区域的上边界",
        "* 节点布局区域的下边界",
        "* 停止监听。回调函数将不再触发",
        "* 使用选择器指定一个节点，作为参照区域之一。",
        "* 指定页面显示区域作为参照区域之一",
        "* 指定目标节点并开始监听相交状态变化情况",
        "* 相交比例",
        "* 相交区域的边界",
        "* 目标边界",
        "* 参照区域的边界",
        "* 相交检测时的时间戳",
        "* 获取系统信息",
        "* 获取系统信息",
        "* 创建一个动画实例 animation。调用实例的方法来描述动画。最后通过动画实例的 export 方法导出动画数据传递给组件的 animation 属性。",
        "* 返回一个 SelectorQuery 对象实例。在自定义组件或包含自定义组件的页面中，应使用 this.createSelectorQuery() 来代替。"
    ],
    "functions": [],
    "classes": []
}