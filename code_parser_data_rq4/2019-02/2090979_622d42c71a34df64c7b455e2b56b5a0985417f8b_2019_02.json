{
    "identifiers": [
        "org",
        "springframework",
        "integration",
        "test",
        "predicate",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Predicate",
        "org",
        "springframework",
        "messaging",
        "Message",
        "org",
        "springframework",
        "messaging",
        "MessageHeaders",
        "payload",
        "headers",
        "ignoredHeaders",
        "Arrays",
        "asList",
        "MessageHeaders",
        "ID",
        "MessageHeaders",
        "TIMESTAMP",
        "operand",
        "ignoredHeaders",
        "payload",
        "operand",
        "getPayload",
        "ignoredHeaders",
        "ignoredHeaders",
        "addAll",
        "Arrays",
        "asList",
        "ignoredHeaders",
        "headers",
        "getHeaders",
        "operand",
        "Override",
        "input",
        "inputHeaders",
        "getHeaders",
        "input",
        "input",
        "getPayload",
        "equals",
        "payload",
        "inputHeaders",
        "equals",
        "headers",
        "operand",
        "headers",
        "operand",
        "getHeaders",
        "ignoredHeaders",
        "forEach",
        "headers",
        "remove",
        "headers"
    ],
    "literals": [],
    "variables": [
        "payload",
        "headers",
        "ignoredHeaders"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2019 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Predicate to make assertions about message equality easier.  Usage:\n *\n * <pre class=\"code\">\n * {@code\n * &#064;Test\n * public void testSomething() {\n *   Message<String> expected = ...;\n *   Message<String> result = ...;\n *   assertThat(result).matches(new MessagePredicate(expected));\n * }\n * }\n * </pre>\n *\n * @author Artem Bilan\n *\n * @since 5.2"
    ],
    "functions": [
        "MessagePredicate",
        "test",
        "getHeaders"
    ],
    "classes": [
        "MessagePredicate"
    ]
}