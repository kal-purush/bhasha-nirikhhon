{
    "identifiers": [
        "com",
        "google",
        "cloud",
        "tools",
        "opensource",
        "classpath",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableSet",
        "toImmutableSet",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableSet",
        "com",
        "google",
        "common",
        "graph",
        "GraphBuilder",
        "com",
        "google",
        "common",
        "graph",
        "MutableGraph",
        "com",
        "google",
        "common",
        "graph",
        "Traverser",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "org",
        "apache",
        "bcel",
        "classfile",
        "JavaClass",
        "reachableClasses",
        "symbolReferenceSets",
        "entryPointJars",
        "classSymbolReferences",
        "symbolReferenceSets",
        "stream",
        "flatMap",
        "symbolReferenceSet",
        "symbolReferenceSet",
        "getClassReferences",
        "stream",
        "collect",
        "toImmutableSet",
        "entryPointClassBuilder",
        "ImmutableSet",
        "builder",
        "jarPath",
        "entryPointJars",
        "javaClass",
        "ClassDumper",
        "listClassesInJar",
        "jarPath",
        "entryPointClassBuilder",
        "add",
        "javaClass",
        "getClassName",
        "classSymbolReferences",
        "entryPointClassBuilder",
        "build",
        "classSymbolReferences",
        "entryPointClasses",
        "graph",
        "GraphBuilder",
        "directed",
        "allowsSelfLoops",
        "build",
        "reference",
        "classSymbolReferences",
        "sourceClassName",
        "reference",
        "getSourceClassName",
        "targetClassName",
        "reference",
        "getTargetClassName",
        "sourceClassName",
        "equals",
        "targetClassName",
        "graph",
        "putEdge",
        "sourceClassName",
        "targetClassName",
        "entryPointClasses",
        "forEach",
        "graph",
        "addNode",
        "reachableClasses",
        "ImmutableSet",
        "copyOf",
        "Traverser",
        "forGraph",
        "graph",
        "breadthFirst",
        "entryPointClasses",
        "className",
        "reachableClasses",
        "contains",
        "className"
    ],
    "literals": [],
    "variables": [
        "reachableClasses"
    ],
    "comments": [
        "Collects all class symbol reference in symbolReferences",
        "no self-loop",
        "to avoid IllegalArgumentError in breadthFirst"
    ],
    "docstrings": [
        "* Copyright 2019 Google LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Directed graph of class references. Given classes in a set of entry points, it provides {@link\n * #isReachable(String)} for a class to check whether the class is reachable from the entry point\n * classes (reachability). The graph's nodes and edges are defined as follows:\n *\n * <p>Nodes are fully-qualified class names, returned from {@link\n * SymbolReference#getSourceClassName()} and {@link SymbolReference#getTargetClassName()} in {@code\n * symbolReferenceSets}.\n *\n * <p>Edges are references between two classes. When {@code ClassA} has a reference to {@code\n * ClassB}, a directed edge from {@code ClassA} to {@code ClassB} exists in the graph. Edges in the\n * graph are anonymous with no attribute. Because self-loops and parallel edges are unnecessary for\n * reachability checks, they are not constructed.\n *\n * @see <a\n *     href=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/blob/master/library-best-practices/glossary.md#class-reference-graph\">\n *     Java Dependency Glossary: Class Reference Graph</a>",
        "* Returns true if {@code className} is reachable from one of classes in {@code entryPointJars}\n   * in the graph."
    ],
    "functions": [
        "ClassReferenceGraph",
        "create",
        "ClassReferenceGraph",
        "isReachable"
    ],
    "classes": [
        "ClassReferenceGraph"
    ]
}