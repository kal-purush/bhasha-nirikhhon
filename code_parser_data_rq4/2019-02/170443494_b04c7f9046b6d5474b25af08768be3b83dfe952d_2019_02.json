{
    "identifiers": [
        "kings",
        "cs",
        "game",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "pages",
        "introText",
        "theName",
        "theDescription",
        "thePointValue",
        "theWeight",
        "theIntro",
        "theName",
        "theDescription",
        "thePointValue",
        "theWeight",
        "pages",
        "introText",
        "theIntro",
        "page",
        "information",
        "pages",
        "put",
        "page",
        "information",
        "result",
        "result",
        "introText",
        "iter",
        "pages",
        "keySet",
        "iterator",
        "iter",
        "hasNext",
        "current",
        "iter",
        "next",
        "result",
        "current",
        "result",
        "page",
        "iter",
        "pages",
        "keySet",
        "iterator",
        "result",
        "found",
        "iter",
        "hasNext",
        "found",
        "current",
        "iter",
        "next",
        "current",
        "equals",
        "page",
        "result",
        "pages",
        "get",
        "page",
        "found",
        "result"
    ],
    "literals": [
        "\"You look at the first page.\\n\\n\"",
        "\"     \"",
        "\"\\n\"",
        "\"That page doesn't exist.\"",
        "\"You read the page.\\n\\n\""
    ],
    "variables": [
        "pages",
        "introText"
    ],
    "comments": [],
    "docstrings": [
        "* Represents a book. \n * \n * @author Courtney Rikoskie\n * @version Spring 2017",
        "The pages and the information contained of each page.",
        "The intro text of the book.",
        "* Constructs a new Book.\n     * \n     * @param theName The name of the book.\n     * @param theDescription The description of the book.\n     * @param thePointValue The point value of the book.\n     * @param theWeight The weight (in ounces) of the book.\n     * @param theIntro The intro text of the book.",
        "* Adds the specified page to the book.\n     * \n     * @param page The specified page.\n     * @param information The information of the specified page.",
        "* Gets the first page of the book and the content within it.\n     * \n     * @return The first page of the book and the content within it.",
        "* Gets the content of the specified page.\n     * \n     * @param page The specified page.\n     * @return The content of the specified page"
    ],
    "functions": [
        "Book",
        "addPage",
        "read",
        "goTo"
    ],
    "classes": [
        "Book"
    ]
}