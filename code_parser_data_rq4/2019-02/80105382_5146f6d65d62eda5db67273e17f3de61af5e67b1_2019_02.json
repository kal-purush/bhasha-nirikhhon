{
    "identifiers": [
        "org",
        "apache",
        "dubbo",
        "rpc",
        "support",
        "org",
        "apache",
        "dubbo",
        "common",
        "utils",
        "StringUtils",
        "org",
        "apache",
        "dubbo",
        "rpc",
        "RpcContext",
        "com",
        "alibaba",
        "fastjson",
        "java",
        "text",
        "DateFormat",
        "java",
        "text",
        "SimpleDateFormat",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "MESSAGE_DATE_FORMAT",
        "MESSAGE_DATE_FORMATTER",
        "MESSAGE_DATE_FORMAT",
        "VERSION",
        "GROUP",
        "SERVICE",
        "METHOD_NAME",
        "INVOCATION_TIME",
        "TYPES",
        "ARGUMENTS",
        "REMOTE_HOST",
        "REMOTE_PORT",
        "LOCAL_HOST",
        "LOCAL_PORT",
        "data",
        "context",
        "RpcContext",
        "getContext",
        "data",
        "setLocalHost",
        "context",
        "getLocalHost",
        "setLocalPort",
        "context",
        "getLocalPort",
        "setRemoteHost",
        "context",
        "getRemoteHost",
        "setRemotePort",
        "context",
        "getRemotePort",
        "version",
        "VERSION",
        "version",
        "serviceName",
        "SERVICE",
        "serviceName",
        "group",
        "GROUP",
        "group",
        "invocationTime",
        "INVOCATION_TIME",
        "invocationTime",
        "remoteHost",
        "REMOTE_HOST",
        "remoteHost",
        "remotePort",
        "REMOTE_PORT",
        "remotePort",
        "localHost",
        "LOCAL_HOST",
        "localHost",
        "localPort",
        "LOCAL_PORT",
        "localPort",
        "methodName",
        "METHOD_NAME",
        "methodName",
        "types",
        "TYPES",
        "types",
        "Arrays",
        "copyOf",
        "types",
        "types",
        "length",
        "arguments",
        "ARGUMENTS",
        "arguments",
        "Arrays",
        "copyOf",
        "arguments",
        "arguments",
        "length",
        "get",
        "SERVICE",
        "toString",
        "sn",
        "sn",
        "append",
        "append",
        "MESSAGE_DATE_FORMATTER",
        "format",
        "getInvocationTime",
        "append",
        "append",
        "get",
        "REMOTE_HOST",
        "append",
        "append",
        "get",
        "REMOTE_PORT",
        "append",
        "append",
        "get",
        "LOCAL_HOST",
        "append",
        "append",
        "get",
        "LOCAL_PORT",
        "append",
        "group",
        "get",
        "GROUP",
        "get",
        "GROUP",
        "toString",
        "StringUtils",
        "isNotEmpty",
        "group",
        "toString",
        "sn",
        "append",
        "group",
        "append",
        "sn",
        "append",
        "get",
        "SERVICE",
        "version",
        "get",
        "VERSION",
        "get",
        "VERSION",
        "toString",
        "StringUtils",
        "isNotEmpty",
        "version",
        "toString",
        "sn",
        "append",
        "append",
        "version",
        "sn",
        "append",
        "sn",
        "append",
        "get",
        "METHOD_NAME",
        "sn",
        "append",
        "types",
        "get",
        "TYPES",
        "get",
        "TYPES",
        "first",
        "types",
        "first",
        "first",
        "sn",
        "append",
        "sn",
        "append",
        "getName",
        "sn",
        "append",
        "args",
        "get",
        "ARGUMENTS",
        "get",
        "ARGUMENTS",
        "args",
        "args",
        "length",
        "sn",
        "append",
        "toJSONString",
        "args",
        "sn",
        "toString",
        "get",
        "INVOCATION_TIME",
        "key",
        "data",
        "get",
        "key",
        "key",
        "value",
        "data",
        "put",
        "key",
        "value"
    ],
    "literals": [
        "\"yyyy-MM-dd HH:mm:ss\"",
        "\"version\"",
        "\"group\"",
        "\"service\"",
        "\"method-name\"",
        "\"invocation-time\"",
        "\"types\"",
        "\"arguments\"",
        "\"remote-host\"",
        "\"remote-port\"",
        "\"localhost\"",
        "\"local-port\"",
        "\"[\"",
        "\"] \"",
        "\":\"",
        "\" -> \"",
        "\":\"",
        "\" - \"",
        "\"\"",
        "\"/\"",
        "\"\"",
        "\":\"",
        "\" \"",
        "\"(\"",
        "\",\"",
        "\") \""
    ],
    "variables": [
        "data"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* AccessLogData is a container for log event data. In internally uses map and store each filed of log as value. It\n * does not generate any dynamic value e.g. time stamp, local jmv machine host address etc. It does not allow any null\n * or empty key.\n *\n * Note: since its date formatter is a singleton, make sure to run it in single thread only.",
        "* This is used to store log data in key val format.",
        "* Default constructor.",
        "* Get new instance of log data.\n     *\n     * @return instance of AccessLogData",
        "* Add version information.\n     *\n     * @param version",
        "* Add service name.\n     *\n     * @param serviceName",
        "* Add group name\n     *\n     * @param group",
        "* Set the invocation date. As an argument it accept date string.\n     *\n     * @param invocationTime",
        "* Set caller remote host\n     *\n     * @param remoteHost",
        "* Set caller remote port.\n     *\n     * @param remotePort",
        "* Set local host\n     *\n     * @param localHost",
        "* Set local port of exported service\n     *\n     * @param localPort",
        "* Set target method name.\n     *\n     * @param methodName",
        "* Set invocation's method's input parameter's types\n     *\n     * @param types",
        "* Sets invocation arguments\n     *\n     * @param arguments",
        "* Return gthe service of access log entry\n     *\n     * @return",
        "* Return value of key\n     *\n     * @param key\n     * @return",
        "* Add log key along with his value.\n     *\n     * @param key   Any not null or non empty string\n     * @param value Any object including null."
    ],
    "functions": [
        "AccessLogData",
        "AccessLogData",
        "newLogData",
        "setVersion",
        "setServiceName",
        "setGroup",
        "setInvocationTime",
        "setRemoteHost",
        "setRemotePort",
        "setLocalHost",
        "setLocalPort",
        "setMethodName",
        "setTypes",
        "setArguments",
        "getServiceName",
        "getLogMessage",
        "getInvocationTime",
        "get"
    ],
    "classes": [
        "AccessLogData"
    ]
}