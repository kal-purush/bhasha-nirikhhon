{
    "identifiers": [
        "edad",
        "edad",
        "nombre",
        "alto",
        "edadStr",
        "edadNumber",
        "edadStr",
        "edadmas",
        "parseInt",
        "edadStr",
        "edadParseInt",
        "apellido",
        "apellido",
        "apellido",
        "apellido",
        "nombreVariable",
        "persona",
        "persona",
        "persona",
        "persona",
        "vx",
        "vx",
        "nulo",
        "nulo",
        "username",
        "password",
        "valido",
        "valido",
        "username",
        "password",
        "ovalido",
        "ovalido",
        "alert",
        "saludarConReturn",
        "retornoDeLaFuncion",
        "param1",
        "param2",
        "op",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "op",
        "calcular",
        "resultado",
        "calcular",
        "resultado2",
        "param1",
        "param2",
        "op",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "op",
        "param1",
        "param2",
        "op",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "op",
        "param1",
        "param2",
        "op",
        "op",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "param1",
        "parseInt",
        "param2",
        "res",
        "op",
        "res",
        "url",
        "var1",
        "url",
        "var1",
        "hija",
        "padre",
        "fHija",
        "padre",
        "fx",
        "fx",
        "param1",
        "param2",
        "param1",
        "param2",
        "fx",
        "algo",
        "x",
        "fy",
        "px",
        "fy",
        "px",
        "f",
        "px",
        "x",
        "f",
        "edades",
        "edades",
        "edades",
        "i",
        "edades",
        "i",
        "edades",
        "i",
        "i",
        "aux",
        "edades",
        "aux",
        "aux",
        "apellidos",
        "apellidos",
        "apellidos",
        "aux",
        "aux",
        "listaGomez",
        "apellidos",
        "x",
        "x",
        "x",
        "ids",
        "apellidos",
        "x",
        "x",
        "todosZamora",
        "apellidos",
        "x",
        "x",
        "todos0",
        "apellidos",
        "x",
        "x",
        "existeZamora"
    ],
    "literals": [
        "\"Carlos\"",
        "\"10\"",
        "\"lopez\"",
        "\"hola\"",
        "\"op\"",
        "\"oopp\"",
        "\"12345\"",
        "\"Carlos\"",
        "\"54321\"",
        "\"Tipo undefined - \"",
        "\"Tipo null - \"",
        "\"1 < 1\"",
        "\"1 === 1\"",
        "\"1 <= 1\"",
        "\"2 != 3\"",
        "\"2\"",
        "\"2\"",
        "'user000'",
        "'1234'",
        "'user000'",
        "'1234'",
        "\"valido\"",
        "\"!valido\"",
        "'user000'",
        "'0000'",
        "\"ovalido\"",
        "\"!ovalido\"",
        "\"Hola, dentro de saludar\"",
        "\"Hola, dentro de saludar con return\"",
        "'+'",
        "'-'",
        "'/'",
        "'*'",
        "${op} - Operación Inválida;",
        "'/'",
        "'88'",
        "'+'",
        "'-'",
        "'/'",
        "'*'",
        "${op} - Operación Inválida;",
        "'+'",
        "'-'",
        "'/'",
        "'*'",
        "${op} - Operación Inválida;",
        "'+'",
        "'-'",
        "'/'",
        "'*'",
        "${op} operación inválida",
        "${url}/${var1}",
        "'http://api/client'",
        "'http://otraapi/client'",
        "'a'",
        "'b'",
        "'ejecutando x(fy,px)'",
        "\"No hace nada\"",
        "'curso angular loyal'",
        "${i}",
        "'CAMPS'",
        "'calle 13'",
        "'REYES'",
        "'calle 13'",
        "'GOMEZ'",
        "'calle 13'",
        "'ZAMORA'",
        "'calle 13'",
        "'ZAMORA'",
        "'apellidos'",
        "'GOMEZ'",
        "'ZAMORA'",
        "'x.id > 0 -> ¿Todos mayor que 0?'",
        "'ZAMORA'",
        "'Existe Zamora?'"
    ],
    "variables": [
        "edad",
        "edad2",
        "edad3",
        "alto",
        "nombre",
        "edadStr",
        "edadNumber",
        "edadmas",
        "edadParseInt",
        "apellido",
        "persona",
        "vx",
        "nulo",
        "username",
        "password",
        "valido",
        "ovalido",
        "retornoDeLaFuncion",
        "res",
        "resultado",
        "resultado2",
        "res",
        "res",
        "res",
        "fHija",
        "algo",
        "x",
        "f",
        "edades",
        "i",
        "aux",
        "apellidos",
        "listaGomez",
        "ids",
        "todosZamora",
        "todos0",
        "existeZamora"
    ],
    "comments": [
        "Codigo Javascript",
        "Variable : var, let y const\n- Var: Global\n- Let: Local\n- Const: Constante",
        "alert(edad2);",
        "VARIABLES BOOLEANAS",
        "edad = nombre;",
        "console.log(edad);",
        "Saber tipo de una variable",
        "CONVERTIR STRING A NUMERO -----------------------------------",
        "Number",
        "+",
        "parseInt",
        "Diferencias entre Number y parseInt. ParseInt pierde los decimales y Number no",
        "MODIFICAR TEXTO -----------------------------------",
        "Si no defines el tipo, se trata como global por defecto",
        "CREACION DE OBJETOS -----------------------------------",
        "Cambiar sus atributos siendo constante el objeto",
        "UNDEFINED -----------------------------------",
        "que valor tiene? Ninguno. Es Undefined",
        "NULL -----------------------------------",
        "OPERADORES ARITMETICOS (+ - / *) -----------------------------------",
        "OPERADORES RELACIONAL (< > >= <=) -----------------------------------",
        "=== ???",
        "true",
        "false // Compara valor y tipo",
        "OPERADORES LOGICOS (?? && || ! xor > boolean | true o false) -----------------------------------",
        "FUNCIONES ----------------------------------",
        "Definición función",
        "Invocar función",
        "saludar();",
        "Función con devolución",
        "FUNCIONES CON PARÁMETROS ----------------------------------",
        "-------- IF",
        "Si op == + -> Sumar",
        "Si op == - -> Restar",
        "Si op == / -> Dividir",
        "Si op == * -> Multiplicar",
        "alt+96",
        "return res || 0; -> Si res es undefined, devolver 0",
        "-------- IF ELSE",
        "-------- ELSE IF",
        "-------- SWITCH",
        "FUNCIONES ANIDADAS ----------------------------------",
        "api/client/6",
        "http://api/client/1",
        "http://otraapi/client/1",
        "FUNCIONES LAMBA - PASAR FUNCIONES COMO PARAMETROS ----------------------------------",
        "nueva!!",
        "Invocar",
        "Funcion que recibe funcion",
        "callback",
        "Invocar x",
        "Se pueden pasar funciones como parametros al invocar funciones!!!",
        "ARRAY, ARREGLOS, VECTORES ----------------------------------",
        "Tamaño es tres. Las posiciones son 0, 1 y 2",
        "Agregar elementos",
        "RECORRER ARRAYS ----------------------------------",
        "While - No conoces el tamaño, pero si la condicion de corte.",
        "Do While - Evalua antes de iniciar el ciclo y evalua después del ciclo. Garantiza al menos una vez",
        "For - Conoces el tamaño",
        "For each - No conoces el tamaño",
        "FILTRAR ARRAYS - Filter/map/recuce/every/some---------------------------------",
        "Forma clásica: Recorrer array y comparar cada valor hasta encontrar los deseados",
        "FILTER",
        "MAP - convertir o mappear algo en otra cosa",
        "EVERY",
        "Son todos los apellidos Zamora??",
        "Devuelve boolean",
        "false",
        "Son todos los id mayor a 0??",
        "Devuelve boolean",
        "SOME",
        "Devuelve boolean",
        "true"
    ],
    "docstrings": [],
    "functions": [
        "saludar",
        "saludarConReturn",
        "calcular",
        "calcularv2",
        "calcularv3",
        "calcularv4",
        "padre",
        "hija",
        "fx"
    ],
    "classes": []
}