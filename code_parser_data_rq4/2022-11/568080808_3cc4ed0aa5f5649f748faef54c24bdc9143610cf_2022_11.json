{
    "identifiers": [
        "os",
        "typer",
        "importlib",
        "inspect",
        "prettytable",
        "PrettyTable",
        "typer",
        "Typer",
        "app",
        "command",
        "loadModules",
        "PrettyTable",
        "module_list",
        "x",
        "x",
        "__dict__",
        "values",
        "inspect",
        "isfunction",
        "x",
        "len",
        "method_list",
        "module_prettytable",
        "add_row",
        "replace",
        "modules_directory",
        "method_list",
        "module_prettytable",
        "app",
        "command",
        "module_name",
        "module_method",
        "loadModules",
        "module_list",
        "modules_directory",
        "module_name",
        "module_method",
        "x",
        "x",
        "__dict__",
        "values",
        "inspect",
        "isfunction",
        "x",
        "getattr",
        "module_method",
        "method",
        "e",
        "e",
        "fileName",
        "os",
        "listdir",
        "modules_directory",
        "os",
        "path",
        "join",
        "modules_directory",
        "fileName",
        "os",
        "path",
        "isfile",
        "file",
        "fileName",
        "endswith",
        "fileName",
        "replace",
        "importlib",
        "import_module",
        "modules_directory",
        "fileName",
        "modules_list",
        "append",
        "iteration",
        "ImportError",
        "file",
        "iteration",
        "modules_list",
        "app"
    ],
    "literals": [
        "\"modules\"",
        "\"MODULE(S)\"",
        "\"METHOD(S)\"",
        "\"FILE\"",
        "'-'",
        "\".\"",
        "\"\"",
        "\".\"",
        "\"[x] \"",
        "\" method error: \"",
        "\"[x] no such method exists in \"",
        "\"[x] no such module exists\"",
        "\"[*] loading modules\"",
        "'.py'",
        "'.py'",
        "''",
        "\".\"",
        "\"[+] \"",
        "\"[x] error trying to import module:\"",
        "\"[#] total loaded \"",
        "\" module(s)\"",
        "'__main__'"
    ],
    "variables": [
        "app",
        "modules_directory",
        "module_list",
        "module_prettytable",
        "module_prettytable",
        "field_names",
        "method_list",
        "method_list",
        "module_list",
        "method",
        "modules_list",
        "iteration",
        "file",
        "fileName"
    ],
    "comments": [
        "initiate cli application library",
        "hard-coded modules directory //TODO move it to a yaml config",
        "list all the modules present and print their methods and path",
        "print(\"listing loaded modules\")",
        "fetch and load modules",
        "initiate pretty table",
        "print out methods available",
        "predicate is meant to pick out just the method name from the list of tuple",
        "fill in text with dash if no methods available",
        "add module name and methods into table",
        "call a specific method from a module",
        "fetch and load modules",
        "find for module thru module name",
        "check if method exists within module",
        "try calling method",
        "module list variable",
        "iteration for module loaded count",
        "invalidates any cache storage of module",
        "importlib.invalidate_caches()",
        "check for modules in module directory and try to load them",
        "debug text, prints out file path",
        "print(\"file found:\" + file)",
        "checks if file is a python script",
        "removes file extension",
        "import module thru relative path",
        "add imported module into list",
        "debug text, list out methods within module",
        "print(dir(module))"
    ],
    "docstrings": [],
    "functions": [
        "sudo",
        "loadModules"
    ],
    "classes": []
}