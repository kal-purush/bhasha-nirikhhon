{
    "identifiers": [
        "org",
        "springframework",
        "samples",
        "petclinic",
        "player",
        "org",
        "hamcrest",
        "Matchers",
        "hasProperty",
        "org",
        "hamcrest",
        "Matchers",
        "org",
        "mockito",
        "BDDMockito",
        "given",
        "org",
        "springframework",
        "security",
        "test",
        "web",
        "servlet",
        "request",
        "SecurityMockMvcRequestPostProcessors",
        "csrf",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "post",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "model",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "status",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "view",
        "org",
        "assertj",
        "core",
        "util",
        "Lists",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcTest",
        "org",
        "springframework",
        "boot",
        "test",
        "mock",
        "mockito",
        "MockBean",
        "org",
        "springframework",
        "context",
        "annotation",
        "ComponentScan",
        "org",
        "springframework",
        "context",
        "annotation",
        "FilterType",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "configuration",
        "SecurityConfiguration",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "player",
        "Player",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "player",
        "PlayerController",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "player",
        "PlayerService",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "user",
        "AuthoritiesService",
        "org",
        "springframework",
        "samples",
        "petclinic",
        "user",
        "UserService",
        "org",
        "springframework",
        "security",
        "config",
        "annotation",
        "web",
        "WebSecurityConfigurer",
        "org",
        "springframework",
        "security",
        "test",
        "context",
        "support",
        "WithMockUser",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "WebMvcTest",
        "controllers",
        "excludeFilters",
        "ComponentScan",
        "Filter",
        "FilterType",
        "ASSIGNABLE_TYPE",
        "classes",
        "excludeAutoConfiguration",
        "TEST_OWNER_ID",
        "Autowired",
        "playerController",
        "MockBean",
        "clinicService",
        "MockBean",
        "userService",
        "MockBean",
        "authoritiesService",
        "Autowired",
        "mockMvc",
        "george",
        "BeforeEach",
        "george",
        "george",
        "setId",
        "TEST_OWNER_ID",
        "george",
        "setFirstName",
        "george",
        "setLastName",
        "george",
        "setAddress",
        "george",
        "setCity",
        "george",
        "setTelephone",
        "given",
        "clinicService",
        "findPlayerById",
        "TEST_OWNER_ID",
        "willReturn",
        "george",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "get",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeExists",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "post",
        "param",
        "param",
        "csrf",
        "param",
        "param",
        "param",
        "andExpect",
        "status",
        "is3xxRedirection",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "post",
        "csrf",
        "param",
        "param",
        "param",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeHasErrors",
        "andExpect",
        "model",
        "attributeHasFieldErrors",
        "andExpect",
        "model",
        "attributeHasFieldErrors",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "get",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeExists",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "given",
        "clinicService",
        "findPlayerByLastName",
        "willReturn",
        "Lists",
        "newArrayList",
        "george",
        "mockMvc",
        "perform",
        "get",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "given",
        "clinicService",
        "findPlayerByLastName",
        "george",
        "getLastName",
        "willReturn",
        "Lists",
        "newArrayList",
        "george",
        "mockMvc",
        "perform",
        "get",
        "param",
        "andExpect",
        "status",
        "is3xxRedirection",
        "andExpect",
        "view",
        "name",
        "TEST_OWNER_ID",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "get",
        "param",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeHasFieldErrors",
        "andExpect",
        "model",
        "attributeHasFieldErrorCode",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "get",
        "TEST_OWNER_ID",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeExists",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "post",
        "TEST_OWNER_ID",
        "csrf",
        "param",
        "param",
        "param",
        "param",
        "param",
        "andExpect",
        "status",
        "is3xxRedirection",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "post",
        "TEST_OWNER_ID",
        "csrf",
        "param",
        "param",
        "param",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attributeHasErrors",
        "andExpect",
        "model",
        "attributeHasFieldErrors",
        "andExpect",
        "model",
        "attributeHasFieldErrors",
        "andExpect",
        "view",
        "name",
        "WithMockUser",
        "value",
        "Test",
        "mockMvc",
        "perform",
        "get",
        "TEST_OWNER_ID",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "model",
        "attribute",
        "hasProperty",
        "andExpect",
        "view",
        "name"
    ],
    "literals": [
        "\"George\"",
        "\"Franklin\"",
        "\"110 W. Liberty St.\"",
        "\"Madison\"",
        "\"6085551023\"",
        "\"spring\"",
        "\"/players/new\"",
        "\"player\"",
        "\"players/createOrUpdatePlayerForm\"",
        "\"spring\"",
        "\"/players/new\"",
        "\"firstName\"",
        "\"Joe\"",
        "\"lastName\"",
        "\"Bloggs\"",
        "\"address\"",
        "\"123 Caramel Street\"",
        "\"city\"",
        "\"London\"",
        "\"telephone\"",
        "\"01316761638\"",
        "\"spring\"",
        "\"/players/new\"",
        "\"firstName\"",
        "\"Joe\"",
        "\"lastName\"",
        "\"Bloggs\"",
        "\"city\"",
        "\"London\"",
        "\"player\"",
        "\"player\"",
        "\"address\"",
        "\"player\"",
        "\"telephone\"",
        "\"players/createOrUpdatePlayerForm\"",
        "\"spring\"",
        "\"/players/find\"",
        "\"player\"",
        "\"players/findPlayers\"",
        "\"spring\"",
        "\"\"",
        "\"/players\"",
        "\"players/playersList\"",
        "\"spring\"",
        "\"/players\"",
        "\"lastName\"",
        "\"Franklin\"",
        "\"redirect:/players/\"",
        "\"spring\"",
        "\"/players\"",
        "\"lastName\"",
        "\"Unknown Surname\"",
        "\"player\"",
        "\"lastName\"",
        "\"player\"",
        "\"lastName\"",
        "\"notFound\"",
        "\"players/findPlayers\"",
        "\"spring\"",
        "\"/players/{playerId}/edit\"",
        "\"player\"",
        "\"player\"",
        "\"lastName\"",
        "\"Franklin\"",
        "\"player\"",
        "\"firstName\"",
        "\"George\"",
        "\"player\"",
        "\"address\"",
        "\"110 W. Liberty St.\"",
        "\"player\"",
        "\"city\"",
        "\"Madison\"",
        "\"player\"",
        "\"telephone\"",
        "\"6085551023\"",
        "\"players/createOrUpdatePlayerForm\"",
        "\"spring\"",
        "\"/players/{playerId}/edit\"",
        "\"firstName\"",
        "\"Joe\"",
        "\"lastName\"",
        "\"Bloggs\"",
        "\"address\"",
        "\"123 Caramel Street\"",
        "\"city\"",
        "\"London\"",
        "\"telephone\"",
        "\"01616291589\"",
        "\"redirect:/players/{playerId}\"",
        "\"spring\"",
        "\"/players/{playerId}/edit\"",
        "\"firstName\"",
        "\"Joe\"",
        "\"lastName\"",
        "\"Bloggs\"",
        "\"city\"",
        "\"London\"",
        "\"player\"",
        "\"player\"",
        "\"address\"",
        "\"player\"",
        "\"telephone\"",
        "\"players/createOrUpdatePlayerForm\"",
        "\"spring\"",
        "\"/players/{playerId}\"",
        "\"player\"",
        "\"lastName\"",
        "\"Franklin\"",
        "\"player\"",
        "\"firstName\"",
        "\"George\"",
        "\"player\"",
        "\"address\"",
        "\"110 W. Liberty St.\"",
        "\"player\"",
        "\"city\"",
        "\"Madison\"",
        "\"player\"",
        "\"telephone\"",
        "\"6085551023\"",
        "\"players/playerDetails\""
    ],
    "variables": [
        "playerController",
        "clinicService",
        "userService",
        "authoritiesService",
        "mockMvc",
        "george"
    ],
    "comments": [],
    "docstrings": [
        "* Test class for {@link PlayerController}\n *\n * @author Colin But"
    ],
    "functions": [
        "setup",
        "testInitCreationForm",
        "testProcessCreationFormSuccess",
        "testProcessCreationFormHasErrors",
        "testInitFindForm",
        "testProcessFindFormSuccess",
        "testProcessFindFormByLastName",
        "testProcessFindFormNoPlayersFound",
        "testInitUpdatePlayerForm",
        "testProcessUpdatePlayerFormSuccess",
        "testProcessUpdatePlayerFormHasErrors",
        "testShowPlayer"
    ],
    "classes": [
        "PlayerControllerTests"
    ]
}