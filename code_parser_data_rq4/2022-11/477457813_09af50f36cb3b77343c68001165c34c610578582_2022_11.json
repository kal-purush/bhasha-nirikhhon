{
    "identifiers": [
        "itertools",
        "product",
        "scipy",
        "optimize",
        "linprog",
        "maxentropy",
        "pandas",
        "pd",
        "numpy",
        "np",
        "math",
        "utils",
        "external_date",
        "vec_all_incomes",
        "grouped_pop",
        "modalities",
        "create_constraints",
        "modalities",
        "external_date",
        "vec_all_incomes",
        "grouped_pop",
        "create_samplespace_and_features",
        "modalities",
        "grouped_pop",
        "create_model",
        "f",
        "samplespace_reducted",
        "function_prior_prob",
        "pd",
        "DataFrame",
        "i",
        "incomes",
        "i",
        "run_model_on_income",
        "model_with_apriori",
        "i",
        "modalities",
        "constraint",
        "res",
        "loc",
        "model_with_apriori",
        "probdist",
        "model_with_apriori",
        "resetparams",
        "res",
        "synthetic_pop",
        "synthetic_pop",
        "groupby",
        "as_index",
        "sum",
        "group",
        "sort_values",
        "by",
        "ascending",
        "group",
        "sum",
        "group",
        "group",
        "group",
        "variables_modalities",
        "external_data",
        "vec_all_incomes",
        "grouped_pop",
        "variables_modalities",
        "keys",
        "variable",
        "variables",
        "external_data",
        "external_data",
        "isin",
        "variables_modalities",
        "variable",
        "modality",
        "variables_modalities",
        "variable",
        "decile",
        "decile",
        "isin",
        "modality",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "decile_tmp",
        "DECILE_10",
        "pd",
        "DataFrame",
        "vec_all_incomes",
        "p_R_tmp",
        "apply",
        "x",
        "utils",
        "interpolate_income",
        "x",
        "total_population_decile_tmp",
        "axis",
        "ech",
        "variable",
        "p_R_tmp",
        "grouped_pop",
        "groupby",
        "variable",
        "as_index",
        "sum",
        "modality",
        "ech",
        "variable",
        "prob_1",
        "prob_1",
        "variable",
        "isin",
        "modality",
        "ech",
        "variable",
        "modality",
        "df",
        "value",
        "modality",
        "ech",
        "variable",
        "ech_list",
        "append",
        "ech",
        "variable",
        "modality",
        "pd",
        "concat",
        "ech_list",
        "axis",
        "C",
        "iloc",
        "len",
        "ech",
        "variable",
        "C",
        "sum",
        "axis",
        "C",
        "modality",
        "ech",
        "variable",
        "constraint",
        "variable",
        "ech",
        "variable",
        "modality",
        "p",
        "constraint",
        "variables_modalities",
        "group",
        "variables_modalities",
        "keys",
        "product",
        "variables_modalities",
        "values",
        "variables",
        "i",
        "x",
        "i",
        "i",
        "len",
        "x",
        "x",
        "samplespace",
        "x",
        "x",
        "samplespace",
        "features",
        "append",
        "f0",
        "variable",
        "variables_modalities",
        "keys",
        "modality",
        "variables_modalities",
        "variable",
        "features",
        "append",
        "modality_feature",
        "variable",
        "modality",
        "pd",
        "DataFrame",
        "from_dict",
        "samplespace",
        "prior_df",
        "merge",
        "group",
        "how",
        "on",
        "variables",
        "prior_df_perc",
        "apply",
        "x",
        "x",
        "x",
        "x",
        "axis",
        "prior_df_perc",
        "query",
        "prior_df_perc_reducted",
        "variables",
        "to_dict",
        "orient",
        "x_array",
        "prior_df_perc_reducted",
        "apply",
        "math",
        "log",
        "samplespace_reducted",
        "features",
        "function_prior_prob",
        "variable",
        "modality",
        "x",
        "x",
        "variable",
        "modality",
        "feature",
        "features",
        "samplespace",
        "prior_log_pdf",
        "maxentropy",
        "MinDivergenceModel",
        "features",
        "samplespace",
        "vectorized",
        "verbose",
        "prior_log_pdf",
        "prior_log_pdf",
        "model",
        "model_with_apriori",
        "i",
        "modalities",
        "constraint",
        "variable",
        "modalities",
        "modality",
        "modalities",
        "variable",
        "K",
        "append",
        "constraint",
        "variable",
        "modality",
        "i",
        "np",
        "array",
        "K",
        "reshape",
        "len",
        "K",
        "compute_rq",
        "model_with_apriori",
        "np",
        "shape",
        "K",
        "K",
        "model_with_apriori",
        "fit",
        "K",
        "i",
        "res",
        "fun",
        "maxentropy",
        "utils",
        "DivergenceError",
        "e",
        "i",
        "res",
        "fun",
        "model",
        "nb_modalities",
        "K",
        "np",
        "identity",
        "nb_modalities",
        "model",
        "F",
        "A",
        "np",
        "concatenate",
        "A",
        "I",
        "axis",
        "np",
        "concatenate",
        "np",
        "zeros",
        "np",
        "shape",
        "A",
        "np",
        "ones",
        "nb_modalities",
        "axis",
        "linprog",
        "c",
        "A_eq",
        "A_eq",
        "b_eq",
        "K",
        "method",
        "res"
    ],
    "literals": [
        "\"Running model for income \"",
        "\"count\"",
        "\"age\"",
        "\"size\"",
        "\"ownership\"",
        "\"family_comp\"",
        "\"count\"",
        "\"family_comp\"",
        "\"size\"",
        "\"age\"",
        "\"ownership\"",
        "\"probability\"",
        "\"count\"",
        "\"count\"",
        "\"ownership\"",
        "\"age\"",
        "\"size\"",
        "\"family_comp\"",
        "\"probability\"",
        "\"modality\"",
        "\"modality\"",
        "\"D1\"",
        "\"D2\"",
        "\"D3\"",
        "\"D4\"",
        "\"D5\"",
        "\"D6\"",
        "\"D7\"",
        "\"D8\"",
        "\"D9\"",
        "\"D9\"",
        "\"income\"",
        "\"proba1\"",
        "\"income\"",
        "\"probability\"",
        "\"proba1\"",
        "\"proba1\"",
        "\"probability\"",
        "\"Proba\"",
        "\"Proba\"",
        "\"proba1\"",
        "\"Proba\"",
        "\"left\"",
        "\"probability\"",
        "\"probability\"",
        "\"probability\"",
        "\"probability\"",
        "\"probability > 0\"",
        "\"records\"",
        "\"probability\"",
        "\"SUCCESS on income \"",
        "\" with fun=\"",
        "\"ERROR on income \"",
        "\" with fun=\"",
        "\"simplex\""
    ],
    "variables": [
        "DECILE_0",
        "DECILE_10",
        "constraint",
        "samplespace_reducted",
        "f",
        "function_prior_prob",
        "model_with_apriori",
        "incomes",
        "res",
        "i",
        "synthetic_pop",
        "group",
        "group",
        "group",
        "group",
        "variables",
        "ech",
        "constraint",
        "ech",
        "variable",
        "decile",
        "decile_tmp",
        "total_population_decile_tmp",
        "p_R_tmp",
        "p_R_tmp",
        "modality",
        "prob_1",
        "value",
        "df",
        "df",
        "ech_list",
        "C",
        "C",
        "C",
        "columns",
        "C",
        "p",
        "constraint",
        "variable",
        "modality",
        "variables",
        "samplespace",
        "samplespace",
        "features",
        "prior_df",
        "prior_df_perc",
        "prior_df_perc",
        "prior_df_perc_reducted",
        "samplespace_reducted",
        "model",
        "res",
        "K",
        "K",
        "res",
        "I",
        "A",
        "A_eq",
        "c",
        "res"
    ],
    "comments": [
        "is this global ?",
        "run assignment",
        "create dictionary of constraints (element of eta_total in R code)",
        "optimisation (maxentropy)",
        "build K",
        "loop on incomes",
        "we do build the model again because it seemed to break after a failed fit",
        "need to reset dual for next iterations !",
        "prepare data",
        "TODO : group on dynamic list of variables",
        "p",
        "get statistics (frequency)",
        "multiply frequencies by each element of ech_compo",
        "prob(income | modality) * frequency // ech is modified inplace here",
        "constraint",
        "functions for creating and running model",
        "samplespace is the set of all possible combinations",
        "base feature is x in samplespace",
        "add a feature for all modalities except one for all variables",
        "create prior df",
        "get non zero entries",
        "get reducted samplespace",
        "check functions"
    ],
    "docstrings": [
        "\"\"\"\n    Create model samplespace and features from variables and their modalities.\n\n    :param variables_modalities: {variable: [variable modalities]}\n\n    :return: samplespace, features\n    \"\"\"",
        "\"\"\"\n    Create a MinDivergenceModel instance on the given parameters.\n\n    :param features: list of feature functions\n    :param samplespace: model samplespace\n    :param prior_log_pdf: prior function\n\n    :return: MinDivergenceModel instance\n\n    \"\"\""
    ],
    "functions": [
        "run_assignment",
        "group_synthetic_population",
        "create_constraints",
        "create_samplespace_and_features",
        "f0",
        "function_prior_prob",
        "modality_feature",
        "feature",
        "create_model",
        "run_model_on_income",
        "compute_rq"
    ],
    "classes": []
}