{
    "identifiers": [
        "Drupal",
        "Drupal",
        "context",
        "settings",
        "element",
        "element",
        "id",
        "toggler",
        "toggler",
        "element",
        "element",
        "element",
        "element",
        "toggler",
        "collapse",
        "toggler",
        "element",
        "collapse",
        "toggler",
        "toggler",
        "expanded",
        "element",
        "expanded",
        "toggler",
        "labelWrapper",
        "labelWrapper",
        "labelWrapper",
        "labelWrapper",
        "labelWrapper",
        "label",
        "element",
        "expanded",
        "element",
        "target",
        "target",
        "exceptions",
        "exceptions",
        "exceptions",
        "elements",
        "element",
        "element",
        "exceptions",
        "element",
        "cdDropdown",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "elements",
        "element",
        "element",
        "element",
        "elements",
        "target",
        "target",
        "target",
        "key",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "selector",
        "elements",
        "i",
        "l",
        "i",
        "elements",
        "i",
        "name",
        "component",
        "useElem",
        "name",
        "svgElem",
        "svgElem",
        "svgElem",
        "svgElem",
        "name",
        "component",
        "classes",
        "component",
        "svgElem",
        "classes",
        "svgElem",
        "useElem",
        "svgElem",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "button",
        "button",
        "id",
        "logo",
        "button",
        "logo",
        "component",
        "labelWrapper",
        "label",
        "button",
        "labelWrapper",
        "logo",
        "logoOnly",
        "labelWrapper",
        "icon",
        "button",
        "icon",
        "component",
        "component",
        "button",
        "component",
        "labelWrapper",
        "component",
        "element",
        "button",
        "element",
        "labelWrapper",
        "element",
        "button",
        "element",
        "element",
        "element",
        "toggler",
        "toggler",
        "element",
        "toggler",
        "toggler",
        "element",
        "toggler",
        "element",
        "element",
        "toggler",
        "toggler",
        "expand",
        "toggler",
        "toggler",
        "element",
        "toggler",
        "toggler",
        "element",
        "element",
        "element",
        "element",
        "expand",
        "element",
        "element",
        "fallback",
        "fallback",
        "fallback",
        "element",
        "element",
        "element",
        "toggler",
        "element",
        "toggler",
        "element",
        "element",
        "toggler",
        "element",
        "toggler",
        "element",
        "element",
        "element",
        "toggler",
        "toggler",
        "toggler",
        "toggler",
        "element",
        "toggler",
        "toggler",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "toggables",
        "i",
        "l",
        "i",
        "toggables",
        "i",
        "toggable",
        "toggable",
        "parseInt",
        "toggable",
        "id",
        "id",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "elements",
        "i",
        "l",
        "i",
        "elements",
        "i",
        "Drupal"
    ],
    "literals": [
        "'use strict'",
        "'cd-dropdown-toggable-'",
        "'no-js'",
        "'[data-cd-toggler][aria-controls=\"'",
        "'\"]'",
        "'aria-controls'",
        "'id'",
        "'aria-expanded'",
        "'true'",
        "'aria-expanded'",
        "'data-cd-hidden'",
        "'[data-cd-label-switch]'",
        "'data-cd-label-switch'",
        "'data-cd-label-switch'",
        "'data-cd-focus-target'",
        "'data-cd-focus-target'",
        "'[data-cd-toggler][aria-expanded=\"true\"]'",
        "'data-cd-toggable-keep'",
        "'data-cd-toggable'",
        "'data-cd-insert-after'",
        "'data-cd-toggler'",
        "'data-cd-toggler'",
        "'data-cd-toggler'",
        "'A'",
        "'data-cd-toggler'",
        "'data-cd-toggler'",
        "'data-cd-toggable'",
        "'[data-cd-toggable]'",
        "'http://www.w3.org/2000/svg'",
        "'svg'",
        "'http://www.w3.org/2000/svg'",
        "'use'",
        "'http://www.w3.org/1999/xlink'",
        "'xlink:href'",
        "'#cd-icon--'",
        "'width'",
        "'16'",
        "'height'",
        "'16'",
        "'aria-hidden'",
        "'true'",
        "'focusable'",
        "'false'",
        "'cd-icon'",
        "'cd-icon--'",
        "'__'",
        "'class'",
        "' '",
        "'data-cd-toggable'",
        "'data-cd-logo'",
        "'data-cd-logo-only'",
        "'data-cd-icon'",
        "'data-cd-component'",
        "'button'",
        "'type'",
        "'button'",
        "'id'",
        "'-toggler'",
        "'logo'",
        "'span'",
        "'visually-hidden'",
        "'icon'",
        "'__btn'",
        "'__btn-label'",
        "'data-cd-toggable-keep'",
        "'data-cd-toggable-keep'",
        "''",
        "'data-cd-toggable-expanded'",
        "'data-cd-label-switch'",
        "'data-cd-toggable-expanded'",
        "'BUTTON'",
        "'data-cd-replace'",
        "'data-cd-toggler'",
        "'data-cd-replace'",
        "'data-cd-toggable-expand'",
        "'data-cd-toggler'",
        "''",
        "'aria-expanded'",
        "'aria-haspopup'",
        "'aria-controls'",
        "'click'",
        "'keydown'",
        "'keydown'",
        "'data-cd-toggable'",
        "'data-cd-toggable'",
        "''",
        "'data-cd-hidden'",
        "'data-cd-replace'",
        "'data-cd-replace'",
        "'data-cd-replace'",
        "'data-cd-insert-after'",
        "'data-cd-toggler'",
        "'click'",
        "'keydown'",
        "'keydown'",
        "'keydown'",
        "'data-cd-hidden'",
        "'--dropdown'",
        "'false'",
        "'data-cd-processed'",
        "'data-cd-processed'",
        "'[data-cd-toggable]'",
        "'id'",
        "'click'",
        "'resize'",
        "'undefined'",
        "'.cd-nav .menu a + .menu'"
    ],
    "variables": [
        "id",
        "element",
        "expanded",
        "labelWrapper",
        "label",
        "target",
        "elements",
        "cdDropdown",
        "elements",
        "target",
        "key",
        "target",
        "target",
        "elements",
        "i",
        "l",
        "svgElem",
        "useElem",
        "classes",
        "id",
        "label",
        "logo",
        "logoOnly",
        "icon",
        "component",
        "button",
        "labelWrapper",
        "toggler",
        "expand",
        "fallback",
        "toggler",
        "toggables",
        "i",
        "l",
        "toggable",
        "id",
        "elements",
        "i",
        "l"
    ],
    "comments": [
        "Bind the event handlers so that `this` corresponds to the current",
        "object and can be used inside the event handling functions.",
        "Store context where all our private functions can access it.",
        "Leaving this here for posterity sake.",
        "this.context = context;",
        "Initialize toggable dropdown.",
        "Update nested Drupal menus in the header.",
        "Switch the expanded/collapsed states.",
        "Switch the labels.",
        "Change the focus when expanded if a target is specified.",
        "Elements can be directed to stay open in two ways:",
        "",
        "If neither apply, then close the element.",
        "Skip if the there was no sibling as that means there is no toggler",
        "for the toggable element.",
        "Store the toggling button of the togglable parent so that it can",
        "be ignored when collapsing the opened toggables.",
        "Escape.",
        "Toggable element, get the toggling button.",
        "Focus the button and hide the content.",
        "Loop until we find a parent which is a toggable or toggler element",
        "or we reach the \"context\" element.",
        "Skip if the clicked element belong to a toggler or a toggable",
        "element.",
        "Note: IE 11 doesn't support classList on SVG elements.",
        "Create the button.",
        "ID.",
        "@todo rename logo/icon to be more inclusive if needed.",
        "Eg. prefix/suffix or pre/post",
        "Pre-label SVG icon.",
        "Button label.",
        "Only show the logo icon if requested but keep the title visible",
        "to assistive technologies.",
        "Post-label SVG icon.",
        "@todo This could default to dropdown arrow icon.",
        "BEM for class selectors.",
        "Do not collapse the dropdown when clicking outside.",
        "Alternate label for when the button is expanded.",
        "Skip if the toggler is not a button or has already been processed.",
        "Togglers should be buttons to avoid mis-processing elements",
        "appearing before the toggable element. There is still a risk of",
        "mis-processing if, for whatever reason, there is a button which is",
        "not the toggler before the toggable element.",
        "For some dropdown elements, we want to replace a fallback element",
        "(like a link) with the toggler button.",
        "We assume that if a button has the \"data-cd-toggler\" attribute then",
        "it has been processed by the \"setToggable\" function. That means",
        "this attribute should not be used directly in the markup otherwise",
        "the toggable element will not be processed by this script and event",
        "handlers will not be attached.",
        "Create a button to toggle the element.",
        "Flag to indicate that the toggable element is initially expanded.",
        "Set the toggling attributes of the toggler.",
        "For better conformance with the aria specs though it doesn't do",
        "much in most screen reader right now (2020/01), we had the",
        "`aria-controls` attribute.",
        "Add toggling function.",
        "Collapse when pressing scape.",
        "Mark the element as toggable so that it can be handled properly",
        "by the global click handler.",
        "Hide the element.",
        "Remove the button fallback element if any.",
        "Insert the toggler after the toggable element. For example for",
        "\"Show more/Show less\" togglers.",
        "Add the toggler before the toggable element if not already.",
        "Remove event handler to avoid leaking.",
        "Delete toggling button.",
        "Reset attributes on the toggable element.",
        "Mark the element as processed. This is notably used to remove the",
        "initial hidden state that is used to prevent flash of content.",
        "Retrieve the max ID for generated toggable IDs so we can generate new",
        "unique ones.",
        "Collapse dropdowns when clicking outside of the toggable target.",
        "Loop through the toggable elements and set/unset the toggling button",
        "depending on the screen size.",
        "Initial setup.",
        "If selector wasn't supplied, set the default.",
        "Nested drupal menus are always toggable."
    ],
    "docstrings": [
        "* Get the toggler element form the togglable element.",
        "* Get the togglable element form the toggler element.",
        "* Get the toggable ID, generate it if doesn't have one.",
        "* Toggle the visibility of a toggable element.",
        "* Collapse all toggable elements.",
        "* We can apply an attribute directly in DOM",
        "* We can mark it as an exception when calling this function",
        "* Get the togglable parents of the toggler element.",
        "* Handle toggling of toggable elements.",
        "* Handle togglable element visibility when pressing escape.\n     *\n     * Hide a toggable element when escape is pressed and the focus is on it\n     * or on its toggler.\n     *\n     * This is to meet the WCAG 2.1 1.4.13: Content on Hover or Focus\n     * criterion.\n     *\n     * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html",
        "* Handle global clicks outside of toggable elements, close them in this\n     * case.",
        "* Update the toggable elements when the window is resized.",
        "* Create a svg icon.",
        "* Create a button to toggle a dropdown.",
        "* Transform the element into a dropdown menu.",
        "* Remove the element's toggler.",
        "* Update a toggable element, setting or removing the toggling button and\n     * attributes depending on the `dropdown` css property. When set to false\n     * we remove the toggler and reset the toggable attributes so that the HTML\n     * markup reflects the current behavior of the element.",
        "* Initialize the toggable menus, adding a toggle button and event\n     * handling.",
        "* Update Drupal toggable nested menus."
    ],
    "functions": [],
    "classes": []
}