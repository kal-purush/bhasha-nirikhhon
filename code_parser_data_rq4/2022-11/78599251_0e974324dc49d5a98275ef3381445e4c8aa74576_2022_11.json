{
    "identifiers": [
        "require",
        "require",
        "require",
        "exceljs",
        "getExcelFiles",
        "args",
        "args",
        "last",
        "isError",
        "args",
        "last",
        "args",
        "isError",
        "args",
        "fs",
        "files",
        "fname",
        "fname",
        "excelFiles",
        "excelName",
        "excelFiles",
        "fname",
        "fname",
        "files",
        "fname",
        "fname",
        "xlsFiles",
        "xlsFiles",
        "log",
        "xlsName",
        "xlsName",
        "log",
        "path",
        "__dirname",
        "excelName",
        "path",
        "__dirname",
        "excelName",
        "dataSheet",
        "workbook",
        "dataSheet",
        "dataSheet",
        "row",
        "rowIndex",
        "rowIndex",
        "dataRowStartIndex",
        "data",
        "row",
        "workbook",
        "excelFile",
        "start",
        "workbook",
        "outExcelFile",
        "log",
        "outExcelFile",
        "err",
        "log",
        "outExcelFile",
        "err",
        "workbook",
        "excelFile",
        "workbook",
        "sheet",
        "ttlRow",
        "workbook",
        "outExcelFile",
        "log",
        "main"
    ],
    "literals": [
        "\"exceljs\"",
        "\"path\"",
        "'fs'",
        "\"throwError\"",
        "\"\\n[excel-stat] :\"",
        "'\\n'",
        "'.'",
        "''",
        "''",
        "不支持 *.xls 文件格式，请打开 ${xlsName} 文件，另存为 ${xlsName.replace(/\\.xls$/, '.xlsx')}",
        "'.xlsx'",
        "'throwError'",
        "在当前文件夹未找到excel文件，请复制花名册excel文件到当前文件夹",
        "'throwError'",
        "'_OK.xlsx'",
        "'lastRow'",
        "\"SUCCESS: \"",
        "FAIL: 输出excel文件失败, 请检查文件 ${outExcelFile} 是否已打开",
        "\"pattern\"",
        "\"solid\"",
        "\"test finish~~~~~~~\""
    ],
    "variables": [
        "exceljs",
        "path",
        "fs",
        "workbook",
        "dataRowStartIndex",
        "dataRowEndIndex",
        "last",
        "isError",
        "files",
        "excelFiles",
        "excelName",
        "xlsFiles",
        "xlsName",
        "excelFile",
        "outExcelFile",
        "carLisenceList",
        "matchedRows",
        "missRows",
        "res",
        "sheet",
        "ttlRow"
    ],
    "comments": [
        "const outExcelFile = excelFile;",
        "const sheet = workbook.addWorksheet('my-new-sheet')",
        "数据从哪行开始",
        "row.values is array start from 1",
        "workbook.eachSheet(sheet => {",
        "const cell = sheet.getCell('R10')",
        "if (cell.value) {",
        "cell.value = { formula: 'A10 + Q10', result: 25 }",
        "}",
        "})",
        "const sheet = workbook.getWorksheet('Sheet1')",
        "sheet.columns.forEach((col, i) => {",
        "col.alignment = { horizontal: 'center', vertical: 'middle'}",
        "col.numFmt = '0.00%'",
        "col.width = 25",
        "if (i === 1) {",
        "col.key = col.name = 'fulltimeTeacher'",
        "}",
        "})",
        "ttlRow.style = {",
        "border: {top: {style: 'thin'},bottom: {style: 'thin'}, left: {style: 'thin'}, right: {style: 'thin'}},",
        "fill: { type: \"pattern\", pattern: \"solid\", bgColor: { indexed: 64 }, fgColor: { theme: 0, tint: -0.05 } },",
        "font: { size: 13, bold: true },",
        "}",
        "ttlRow.eachCell(async (cell, i) => {",
        "console.log(",
        "\"🚀 ~ file: excelhandle.js ~ line 282 ~ ttlRow.eachCell ~ i\",",
        "i",
        ");",
        "cell.style = {",
        "border: {top: {style: 'thin'},bottom: {style: 'thin'}, left: {style: 'thin'}, right: {style: 'thin'}},",
        "fill: { type: \"pattern\", pattern: \"solid\", bgColor: { indexed: 64 }, fgColor: { theme: 0, tint: -0.05 } },",
        "font: { size: 13, bold: true },",
        "};",
        "});",
        "mytest();"
    ],
    "docstrings": [],
    "functions": [
        "log",
        "getExcelFiles",
        "start",
        "main",
        "mytest"
    ],
    "classes": []
}