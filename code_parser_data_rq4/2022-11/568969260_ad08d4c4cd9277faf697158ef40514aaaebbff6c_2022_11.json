{
    "identifiers": [
        "java",
        "sql",
        "DriverManager",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "Statement",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "ResultSetMetaData",
        "java",
        "sql",
        "SQLException",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "util",
        "java",
        "util",
        "java",
        "lang",
        "_connection",
        "dbname",
        "dbport",
        "user",
        "passwd",
        "url",
        "dbport",
        "dbname",
        "url",
        "_connection",
        "DriverManager",
        "getConnection",
        "url",
        "user",
        "passwd",
        "e",
        "err",
        "e",
        "getMessage",
        "exit",
        "lat1",
        "long1",
        "lat2",
        "long2",
        "t1",
        "lat1",
        "lat2",
        "lat1",
        "lat2",
        "t2",
        "long1",
        "long2",
        "long1",
        "long2",
        "sqrt",
        "t1",
        "t2",
        "sql",
        "stmt",
        "_connection",
        "createStatement",
        "stmt",
        "executeUpdate",
        "sql",
        "stmt",
        "close",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rsmd",
        "rs",
        "getMetaData",
        "numCol",
        "rsmd",
        "getColumnCount",
        "rowCount",
        "outputHeader",
        "rs",
        "next",
        "outputHeader",
        "i",
        "i",
        "numCol",
        "i",
        "rsmd",
        "getColumnName",
        "i",
        "outputHeader",
        "i",
        "i",
        "numCol",
        "i",
        "rs",
        "getString",
        "i",
        "rowCount",
        "stmt",
        "close",
        "rowCount",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rsmd",
        "rs",
        "getMetaData",
        "numCol",
        "rsmd",
        "getColumnCount",
        "rowCount",
        "outputHeader",
        "result",
        "rs",
        "next",
        "record",
        "i",
        "i",
        "numCol",
        "i",
        "record",
        "add",
        "rs",
        "getString",
        "i",
        "result",
        "add",
        "record",
        "stmt",
        "close",
        "result",
        "query",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "query",
        "rowCount",
        "rs",
        "next",
        "rowCount",
        "stmt",
        "close",
        "rowCount",
        "sequence",
        "stmt",
        "_connection",
        "createStatement",
        "rs",
        "stmt",
        "executeQuery",
        "format",
        "sequence",
        "rs",
        "next",
        "rs",
        "getInt",
        "_connection",
        "_connection",
        "close",
        "e",
        "args",
        "args",
        "length",
        "err",
        "getName",
        "Greeting",
        "esql",
        "Class",
        "forName",
        "newInstance",
        "dbname",
        "args",
        "dbport",
        "args",
        "user",
        "args",
        "esql",
        "dbname",
        "dbport",
        "user",
        "keepon",
        "keepon",
        "authorisedUser",
        "readChoice",
        "CreateUser",
        "esql",
        "authorisedUser",
        "LogIn",
        "esql",
        "keepon",
        "authorisedUser",
        "usermenu",
        "usermenu",
        "readChoice",
        "viewStores",
        "esql",
        "viewProducts",
        "esql",
        "placeOrder",
        "esql",
        "viewRecentOrders",
        "esql",
        "updateProduct",
        "esql",
        "viewRecentUpdates",
        "esql",
        "viewPopularProducts",
        "esql",
        "viewPopularCustomers",
        "esql",
        "placeProductSupplyRequests",
        "esql",
        "usermenu",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "esql",
        "cleanup",
        "e",
        "input",
        "input",
        "parseInt",
        "readLine",
        "e",
        "input",
        "esql",
        "name",
        "readLine",
        "password",
        "readLine",
        "latitude",
        "readLine",
        "longitude",
        "readLine",
        "query",
        "format",
        "name",
        "password",
        "latitude",
        "longitude",
        "esql",
        "executeUpdate",
        "query",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "name",
        "readLine",
        "password",
        "readLine",
        "query",
        "format",
        "name",
        "password",
        "userNum",
        "esql",
        "executeQuery",
        "query",
        "userNum",
        "name",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "storeID",
        "read",
        "query",
        "format",
        "query",
        "storeID",
        "rowCount",
        "esql",
        "executeQuery",
        "query",
        "rowCount",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage",
        "esql",
        "e",
        "err",
        "e",
        "getMessage"
    ],
    "literals": [
        "\"Connecting to database...\"",
        "\"jdbc:postgresql://localhost:\"",
        "\"/\"",
        "\"Connection URL: \"",
        "\"\\n\"",
        "\"Done\"",
        "\"Error - Unable to Connect to Database: \"",
        "\"Make sure you started postgres on this machine\"",
        "\"\\t\"",
        "\"\\t\"",
        "\"Select currval('%s')\"",
        "\"Usage: \"",
        "\"java [-classpath <classpath>] \"",
        "\" <dbname> <port> <user>\"",
        "\"org.postgresql.Driver\"",
        "\"\"",
        "\"MAIN MENU\"",
        "\"---------\"",
        "\"1. Create user\"",
        "\"2. Log in\"",
        "\"9. < EXIT\"",
        "\"Unrecognized choice!\"",
        "\"MAIN MENU\"",
        "\"---------\"",
        "\"1. View Stores within 30 miles\"",
        "\"2. View Product List\"",
        "\"3. Place a Order\"",
        "\"4. View 5 recent orders\"",
        "\"5. Update Product\"",
        "\"6. View 5 recent Product Updates Info\"",
        "\"7. View 5 Popular Items\"",
        "\"8. View 5 Popular Customers\"",
        "\"9. Place Product Supply Request to Warehouse\"",
        "\".........................\"",
        "\"20. Log out\"",
        "\"Unrecognized choice!\"",
        "\"Disconnecting from database...\"",
        "\"Done\\n\\nBye !\"",
        "\"\\n\\n*******************************************************\\n\"",
        "\"              User Interface      \t               \\n\"",
        "\"*******************************************************\\n\"",
        "\"Please make your choice: \"",
        "\"Your input is invalid!\"",
        "\"\\tEnter name: \"",
        "\"\\tEnter password: \"",
        "\"\\tEnter latitude: \"",
        "\"\\tEnter longitude: \"",
        "\"Customer\"",
        "\"INSERT INTO USERS (name, password, latitude, longitude, type) VALUES ('%s','%s', %s, %s,'%s')\"",
        "\"User successfully created!\"",
        "\"\\tEnter name: \"",
        "\"\\tEnter password: \"",
        "\"SELECT * FROM USERS WHERE name = '%s' AND password = '%s'\"",
        "\"\\tEnter storeID: \"",
        "\"SELECT * FROM PRODUCT WHERE storeID = \"",
        "\"total row(s): \""
    ],
    "variables": [
        "input"
    ],
    "comments": [
        "reference to physical database connection.",
        "handling the keyboard inputs through a BufferedReader",
        "This variable can be global for convenience.",
        "constructs the connection URL",
        "obtain a physical connection",
        "end catch",
        "end Retail",
        "Method to calculate euclidean distance between two latitude, longitude pairs.",
        "creates a statement object",
        "issues the update instruction",
        "close the instruction",
        "end executeUpdate",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and output them to standard out.",
        "end while",
        "end executeQuery",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and saves the data returned by the query.",
        "end while",
        "end executeQueryAndReturnResult",
        "creates a statement object",
        "issues the query instruction",
        "iterates through the result set and count nuber of results.",
        "end while",
        "end if",
        "ignored.",
        "end try",
        "end cleanup",
        "end if",
        "use postgres JDBC driver.",
        "instantiate the Retail object and creates a physical",
        "connection.",
        "These are sample SQL statements",
        "end switch",
        "the following functionalities basically used by managers",
        "end while",
        "make sure to cleanup the created table and close the connection.",
        "end if",
        "ignored.",
        "end try",
        "end try",
        "end main",
        "end Greeting",
        "returns only if a correct value is given.",
        "read the integer, parse it and break.",
        "end try",
        "end readChoice",
        "enter lat value between [0.0, 100.0]",
        "enter long value between [0.0, 100.0]",
        "end CreateUser",
        "end",
        "Rest of the functions definition go in here",
        "end Retail"
    ],
    "docstrings": [
        "* Template JAVA User Interface\n * =============================\n *\n * Database Management Systems\n * Department of Computer Science &amp; Engineering\n * University of California - Riverside\n *\n * Target DBMS: 'Postgres'\n *",
        "* This class defines a simple embedded SQL utility class that is designed to\n * work with PostgreSQL JDBC drivers.\n *",
        "* Creates a new instance of Retail shop\n    *\n    * @param hostname the MySQL or PostgreSQL server hostname\n    * @param database the name of the database\n    * @param username the user name used to login to the database\n    * @param password the user login password\n    * @throws java.sql.SQLException when failed to make a connection.",
        "* Method to execute an update SQL statement.  Update SQL instructions\n    * includes CREATE, INSERT, UPDATE, DELETE, and DROP.\n    *\n    * @param sql the input SQL string\n    * @throws java.sql.SQLException when update failed",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and outputs the results to\n    * standard out.\n    *\n    * @param query the input query string\n    * @return the number of rows returned\n    * @throws java.sql.SQLException when failed to execute the query",
        "** obtains the metadata object for the returned result set.  The metadata\n       ** contains row and column info.",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and returns the results as\n    * a list of records. Each record in turn is a list of attribute values\n    *\n    * @param query the input query string\n    * @return the query result as a list of records\n    * @throws java.sql.SQLException when failed to execute the query",
        "** obtains the metadata object for the returned result set.  The metadata\n       ** contains row and column info.",
        "* Method to execute an input query SQL instruction (i.e. SELECT).  This\n    * method issues the query to the DBMS and returns the number of results\n    *\n    * @param query the input query string\n    * @return the number of rows returned\n    * @throws java.sql.SQLException when failed to execute the query",
        "* Method to fetch the last value from sequence. This\n    * method issues the query to the DBMS and returns the current\n    * value of sequence used for autogenerated keys\n    *\n    * @param sequence name of the DB sequence\n    * @return current value of a sequence\n    * @throws java.sql.SQLException when failed to execute the query",
        "* Method to close the physical connection if it is open.",
        "* The main execution method\n    *\n    * @param args the command line arguments this inclues the <mysql|pgsql> <login file>",
        "* Reads the users choice given from the keyboard\n    * @int\n    *",
        "* Creates a new user\n    *",
        "* Check log in credentials for an existing user\n    * @return User login or null is the user does not exist\n    *"
    ],
    "functions": [
        "Retail",
        "calculateDistance",
        "executeUpdate",
        "executeQueryAndPrintResult",
        "executeQueryAndReturnResult",
        "executeQuery",
        "getCurrSeqVal",
        "cleanup",
        "main",
        "Greeting",
        "readChoice",
        "CreateUser",
        "LogIn",
        "viewStores",
        "viewProducts",
        "placeOrder",
        "viewRecentOrders",
        "updateProduct",
        "viewRecentUpdates",
        "viewPopularProducts",
        "viewPopularCustomers",
        "placeProductSupplyRequests"
    ],
    "classes": [
        "Retail"
    ]
}