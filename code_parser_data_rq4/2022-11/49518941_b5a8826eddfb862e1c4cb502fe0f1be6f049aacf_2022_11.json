{
    "identifiers": [
        "org",
        "commcare",
        "formplayer",
        "junit",
        "org",
        "hamcrest",
        "Condition",
        "matched",
        "org",
        "hamcrest",
        "Condition",
        "notMatched",
        "javax",
        "xml",
        "xpath",
        "XPathConstants",
        "STRING",
        "org",
        "hamcrest",
        "Condition",
        "org",
        "hamcrest",
        "Description",
        "org",
        "hamcrest",
        "Matcher",
        "org",
        "hamcrest",
        "TypeSafeDiagnosingMatcher",
        "org",
        "w3c",
        "dom",
        "Document",
        "org",
        "xml",
        "sax",
        "InputSource",
        "java",
        "io",
        "ByteArrayInputStream",
        "javax",
        "xml",
        "NamespaceContext",
        "javax",
        "xml",
        "parsers",
        "DocumentBuilder",
        "javax",
        "xml",
        "parsers",
        "DocumentBuilderFactory",
        "javax",
        "xml",
        "xpath",
        "XPath",
        "javax",
        "xml",
        "xpath",
        "XPathExpression",
        "javax",
        "xml",
        "xpath",
        "XPathExpressionException",
        "javax",
        "xml",
        "xpath",
        "XPathFactory",
        "valueMatcher",
        "xpathString",
        "compiledXPath",
        "NODE_EXISTS",
        "nodeExists",
        "xPathExpression",
        "valueMatcher",
        "compiledXPath",
        "compiledXPath",
        "xPathExpression",
        "xpathString",
        "xPathExpression",
        "valueMatcher",
        "valueMatcher",
        "Override",
        "item",
        "mismatch",
        "evaluated",
        "item",
        "mismatch",
        "NODE_EXISTS",
        "matching",
        "valueMatcher",
        "Override",
        "description",
        "description",
        "appendText",
        "appendText",
        "xpathString",
        "valueMatcher",
        "description",
        "appendText",
        "appendDescriptionOf",
        "valueMatcher",
        "xPath",
        "valueMatcher",
        "xPath",
        "valueMatcher",
        "item",
        "mismatch",
        "parseXml",
        "item",
        "e",
        "mismatch",
        "appendText",
        "e",
        "getMessage",
        "notMatched",
        "matched",
        "compiledXPath",
        "evaluate",
        "STRING",
        "mismatch",
        "e",
        "mismatch",
        "appendText",
        "e",
        "getMessage",
        "notMatched",
        "xPathExpression",
        "namespaceContext",
        "xPath",
        "XPathFactory",
        "newInstance",
        "newXPath",
        "namespaceContext",
        "xPath",
        "setNamespaceContext",
        "namespaceContext",
        "xPath",
        "compile",
        "xPathExpression",
        "e",
        "xPathExpression",
        "e",
        "value",
        "mismatch",
        "value",
        "mismatch",
        "appendText",
        "notMatched",
        "matched",
        "valueOf",
        "value",
        "mismatch",
        "xml",
        "factory",
        "DocumentBuilderFactory",
        "newInstance",
        "documentBuilder",
        "factory",
        "newDocumentBuilder",
        "inputSource",
        "xml",
        "getBytes",
        "documentBuilder",
        "parse",
        "inputSource"
    ],
    "literals": [
        "\"an XML document string with XPath \"",
        "\" \"",
        "\"Invalid XPath : \"",
        "\"xpath returned no results.\""
    ],
    "variables": [
        "valueMatcher",
        "xpathString",
        "compiledXPath",
        "document"
    ],
    "comments": [],
    "docstrings": [
        "* Applies a Matcher to a given XML String, specified by an XPath expression.",
        "* Creates a matcher of {@link java.lang.String}s that matches when the examined string has a value at the\n     * specified <code>xPath</code> that satisfies the specified <code>valueMatcher</code>.\n     * For example:\n     * <pre>assertThat(xmlString, hasXPath(\"/root/something[2]/cheese\", equalTo(\"Cheddar\")))</pre>\n     *\n     * @param xPath\n     *     the target xpath\n     * @param valueMatcher\n     *     matcher for the value at the specified xpath"
    ],
    "functions": [
        "HasXPath",
        "matchesSafely",
        "describeTo",
        "hasXPath",
        "evaluated",
        "XPathExpression",
        "compiledXPath",
        "nodeExists",
        "Document",
        "parseXml"
    ],
    "classes": [
        "HasXPath"
    ]
}