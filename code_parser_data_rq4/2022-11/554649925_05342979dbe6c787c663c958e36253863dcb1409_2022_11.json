{
    "identifiers": [
        "argparse",
        "kubernetes",
        "client",
        "config",
        "logger",
        "logger",
        "util",
        "wait_job_complete",
        "get_env",
        "name",
        "config",
        "load_kube_config",
        "client",
        "CustomObjectsApi",
        "name",
        "chain",
        "node",
        "block_height",
        "deploy_method",
        "image",
        "pull_policy",
        "ttl",
        "pod_affinity_flag",
        "name",
        "chain",
        "node",
        "block_height",
        "deploy_method",
        "pull_policy",
        "image",
        "ttl",
        "pod_affinity_flag",
        "api",
        "create_namespaced_custom_object",
        "group",
        "version",
        "plural",
        "body",
        "resource_body",
        "wait_job_complete",
        "name",
        "api",
        "delete_namespaced_custom_object",
        "group",
        "version",
        "name",
        "name",
        "plural",
        "body",
        "client",
        "V1DeleteOptions",
        "get_env",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "choices",
        "parser",
        "parse_args",
        "BlockHeightFallback",
        "name",
        "format",
        "chain_name",
        "format",
        "chain_name",
        "args",
        "node_domain",
        "logger",
        "info",
        "format",
        "chain_name",
        "node",
        "args",
        "block_height",
        "bhf",
        "create",
        "chain",
        "chain_name",
        "node",
        "node",
        "block_height",
        "args",
        "block_height",
        "image",
        "format",
        "docker_registry",
        "docker_repo",
        "args",
        "tag",
        "pull_policy",
        "args",
        "pull_policy",
        "bhf",
        "wait_job_complete",
        "status",
        "logger",
        "info",
        "e",
        "logger",
        "exception",
        "e",
        "exit"
    ],
    "literals": [
        "\"cloud-config\"",
        "\"registry.devops.rivtower.com/cita-cloud/cita-node-job:latest\"",
        "\"IfNotPresent\"",
        "\"apiVersion\"",
        "\"citacloud.rivtower.com/v1\"",
        "\"kind\"",
        "\"BlockHeightFallback\"",
        "\"metadata\"",
        "\"name\"",
        "\"spec\"",
        "\"chain\"",
        "\"node\"",
        "\"blockHeight\"",
        "\"deployMethod\"",
        "\"pullPolicy\"",
        "\"image\"",
        "\"ttlSecondsAfterFinished\"",
        "\"podAffinityFlag\"",
        "\"citacloud.rivtower.com\"",
        "\"v1\"",
        "\"blockheightfallbacks\"",
        "\"blockheightfallbacks\"",
        "\"citacloud.rivtower.com\"",
        "\"v1\"",
        "\"blockheightfallbacks\"",
        "'__main__'",
        "'Perform block height fallback for chain node'",
        "'--block_height'",
        "'-b'",
        "'block height number'",
        "'--node_domain'",
        "'-n'",
        "\"the node's domain name\"",
        "'--tag'",
        "'-t'",
        "\"cita node job image tag\"",
        "\"v0.0.3\"",
        "'--pull_policy'",
        "'-p'",
        "\"image pull policy\"",
        "\"Always\"",
        "'Always'",
        "'IfNotPresent'",
        "\"{}-bhf\"",
        "\"{}-{}\"",
        "\"create fallback job for [chain: {}, node: {}, expected block height: {}]...\"",
        "\"{}/{}/cita-node-job:{}\"",
        "\"Failed\"",
        "\"block height fallback exec failed\"",
        "\"the fallback job has been completed\""
    ],
    "variables": [
        "api",
        "name",
        "created",
        "resource_body",
        "created",
        "chain_name",
        "_",
        "docker_registry",
        "docker_repo",
        "parser",
        "args",
        "bhf",
        "node",
        "status"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "create a cluster scoped resource"
    ],
    "docstrings": [],
    "functions": [
        "create",
        "wait_job_complete"
    ],
    "classes": [
        "BlockHeightFallback"
    ]
}