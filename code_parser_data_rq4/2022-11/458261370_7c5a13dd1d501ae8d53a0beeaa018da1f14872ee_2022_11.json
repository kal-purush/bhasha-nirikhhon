{
    "identifiers": [
        "os",
        "numpy",
        "np",
        "pandas",
        "pd",
        "astropy",
        "units",
        "q",
        "scipy",
        "io",
        "readsav",
        "astropy",
        "constants",
        "ac",
        "os",
        "path",
        "join",
        "ld_data_path_original",
        "os",
        "path",
        "join",
        "stellar_data_path",
        "os",
        "path",
        "join",
        "ld_data_path_new",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "_M_H_idx",
        "_M_H",
        "_Teff_idx",
        "_Teff",
        "_logg_idx",
        "_logg",
        "readsav",
        "stellar_data_index",
        "decode",
        "idl_sf_list",
        "M_H_grid_load",
        "_M_H_idx",
        "Teff_logg_grid_load",
        "_logg_idx",
        "_Teff_idx",
        "load_number",
        "n_header_rows",
        "load_number",
        "n_freq_intervals",
        "pd",
        "read_fwf",
        "os",
        "path",
        "join",
        "stellar_data_path",
        "stellar_model_name",
        "widths",
        "header",
        "skiprows",
        "line_skip_data",
        "nrows",
        "n_freq_intervals",
        "FileNotFoundError",
        "err",
        "FileNotFoundError",
        "format",
        "stellar_model_name",
        "_Teff",
        "_logg",
        "_M_H",
        "stellar_data",
        "values",
        "q",
        "nm",
        "to",
        "q",
        "AA",
        "np",
        "array",
        "stellar_data",
        "values",
        "intensities",
        "intensities",
        "np",
        "newaxis",
        "intensities",
        "intensities",
        "q",
        "erg",
        "q",
        "s",
        "q",
        "cm",
        "q",
        "Hz",
        "q",
        "steradian",
        "specific_intensity_hz",
        "ac",
        "c",
        "wavelengths",
        "np",
        "newaxis",
        "specific_intensity_wv",
        "ac",
        "h",
        "ac",
        "c",
        "wavelengths",
        "np",
        "newaxis",
        "n_photon_intensity",
        "np",
        "pi",
        "q",
        "steradian",
        "n_photon_intensity",
        "to",
        "q",
        "s",
        "q",
        "cm",
        "q",
        "AA",
        "wavelengths",
        "mu",
        "n_photon_intensity",
        "Teff_idx",
        "Teff",
        "Teff_grid",
        "logg_idx",
        "logg",
        "logg_grid",
        "M_H_idx",
        "M_H",
        "M_H_grid",
        "os",
        "path",
        "join",
        "new_data_path",
        "format",
        "M_H",
        "format",
        "Teff",
        "format",
        "logg",
        "os",
        "path",
        "join",
        "uld_dir",
        "overwrite",
        "os",
        "path",
        "exists",
        "uld_path",
        "Teff",
        "logg",
        "M_H",
        "os",
        "makedirs",
        "uld_dir",
        "exist_ok",
        "read_kurucz_model",
        "M_H_idx",
        "M_H",
        "Teff_idx",
        "Teff",
        "logg_idx",
        "logg",
        "pd",
        "DataFrame",
        "I_lambda_nu",
        "index",
        "wv",
        "columns",
        "nu",
        "uld",
        "to_csv",
        "uld_path",
        "index",
        "header",
        "sep",
        "open",
        "uld_path",
        "f",
        "f",
        "read",
        "f",
        "seek",
        "f",
        "write",
        "format",
        "M_H",
        "Teff",
        "logg",
        "f",
        "write",
        "content",
        "Teff",
        "logg",
        "M_H"
    ],
    "literals": [
        "'../data_original'",
        "'Kurucz'",
        "'kuruczlist.sav'",
        "'../data'",
        "'kurucz'",
        "'li'",
        "'File {}, corresponding to Teff={}, logg={}, and M_H={} '",
        "'does not exist in the stellar models.'",
        "\"MH{}\"",
        "\"teff{}\"",
        "\"logg{}\"",
        "\"kurucz_spectra.dat\"",
        "'Already exists.'",
        "\" \"",
        "\"r+\"",
        "\"kurucz MH = {}  Teff = {} K  logg = {}\\n\"",
        "'Created.'"
    ],
    "variables": [
        "overwrite",
        "ld_data_path_original",
        "stellar_data_path",
        "stellar_data_index",
        "ld_data_path_new",
        "new_data_path",
        "M_H_grid",
        "Teff_grid",
        "logg_grid",
        "M_H_grid_load",
        "Teff_logg_grid_load",
        "idl_sf_list",
        "stellar_model_name",
        "load_number",
        "n_header_rows",
        "n_freq_intervals",
        "line_skip_data",
        "stellar_data",
        "wavelengths",
        "mu",
        "intensities",
        "specific_intensity_hz",
        "specific_intensity_wv",
        "n_photon_intensity",
        "n_photon_intensity",
        "n_photon_intensity",
        "uld_dir",
        "uld_path",
        "wv",
        "nu",
        "I_lambda_nu",
        "uld",
        "content"
    ],
    "comments": [
        "Define original data paths.",
        "Define parameter grids available.",
        "Define corresponding model load positions.",
        "Read in the stellar model data.",
        "Unpack the data and assign units.",
        "NB. rescale values by mu=1 values as per...",
        "Convert intensity from per frequency to per wavelength.",
        "Convert intensity from energy to number of photons.",
        "Remove steradian dependence.",
        "Update units [n_photons / s / cm^2 / Angstroms].",
        "Iterate models.",
        "Create new dir.",
        "Read in stellar model.",
        "Write stellar model to uniform format."
    ],
    "docstrings": [
        "\"\"\"\n    Read in a Kuruxz model for a given M_H, Teff, and logg.\n\n    Inputs\n    ======\n        wavelength [nm]\n        specific intensity [erg / s / cm^2 / Hz / steradian]\n    Return\n    ======\n        wavelength [angstroms].\n        nu  [].\n        photon_intensity  [n_photons / s / cm^2 / Angstroms].\n\n    \"\"\""
    ],
    "functions": [
        "read_kurucz_model"
    ],
    "classes": []
}