{
    "identifiers": [
        "operation",
        "com",
        "taskadapter",
        "redmineapi",
        "RedmineManager",
        "com",
        "taskadapter",
        "redmineapi",
        "RedmineManagerFactory",
        "com",
        "taskadapter",
        "redmineapi",
        "bean",
        "Issue",
        "com",
        "taskadapter",
        "redmineapi",
        "bean",
        "Version",
        "utilities",
        "Properties",
        "PARAMETER_VERSION_ID",
        "PARAMETER_REDMINE_TOKEN",
        "PARAMETER_REDMINE_URL",
        "PARAMETER_DEPLOY_CMD",
        "PARAMETER_SUCCESS_EMAIL",
        "PARAMETER_FAILURE_EMAIL",
        "PARAMETER_SMTP_USERNAME",
        "PARAMETER_SMTP_PASSWORD",
        "PARAMETER_SMTP_HOST",
        "PARAMETER_SMTP_PORT",
        "PARAMETER_SMTP_TLS_ENABLED",
        "PARAMETER_SUCCESS_HOOK",
        "PARAMETER_FAILURE_HOOK",
        "redmineManager",
        "PARAMETER_REDMINE_TOKEN",
        "PARAMETER_REDMINE_URL",
        "PARAMETER_VERSION_ID",
        "Override",
        "prop",
        "areMandatoryParametersNotEmpty",
        "prop",
        "redmineAccessToken",
        "getParameterString",
        "prop",
        "PARAMETER_REDMINE_TOKEN",
        "redmineUrl",
        "getParameterString",
        "prop",
        "PARAMETER_REDMINE_URL",
        "versionId",
        "getParameterInt",
        "prop",
        "PARAMETER_VERSION_ID",
        "redmineManager",
        "RedmineManagerFactory",
        "createWithApiKey",
        "redmineUrl",
        "redmineAccessToken",
        "versionId",
        "version",
        "getVersion",
        "redmineManager",
        "versionId",
        "version",
        "release",
        "version",
        "version",
        "version",
        "getName",
        "issues",
        "getVersionIssues",
        "redmineManager",
        "version",
        "isVersionDeployed",
        "version",
        "deployVersion",
        "version",
        "issues",
        "changeLog",
        "getChangeLog",
        "version",
        "issues",
        "notifyEmail",
        "version",
        "changeLog",
        "notifySlack",
        "version",
        "changeLog",
        "version",
        "version",
        "getStatus",
        "equals",
        "version",
        "issues",
        "runDeployCommands",
        "version",
        "updateAsDeployed",
        "issues",
        "updateAsDeployed",
        "version",
        "version",
        "issues",
        "issue",
        "issues",
        "issue",
        "toString",
        "issues",
        "length",
        "version",
        "version",
        "issues",
        "version",
        "changeLog",
        "version",
        "changeLog"
    ],
    "literals": [
        "\"VERSION_ID\"",
        "\"REDMINE_TOKEN\"",
        "\"REDMINE_URL\"",
        "\"DEPLOY_CMD\"",
        "\"SUCCESS_EMAIL\"",
        "\"FAILURE_EMAIL\"",
        "\"SMTP_USERNAME\"",
        "\"SMTP_PASSWORD\"",
        "\"SMTP_HOST\"",
        "\"SMTP_PORT\"",
        "\"SMTP_TLS_ENABLED\"",
        "\"SUCCESS_HOOK\"",
        "\"FAILURE_HOOK\"",
        "\"* Getting version from redmine: \"",
        "\"  [\"",
        "\"]\"",
        "\"- [info] Version is already deployed!\"",
        "\"closed\"",
        "\"* Running deployment commands ... \"",
        "\"* Updating related issues ... \"",
        "\"  Total \"",
        "\" issue(s) are updated as #todo .\"",
        "\"* Updating related version ... \"",
        "\"* Generating changelog ... \"",
        "\"* Sending slack notification ... \"",
        "\"* Sending email notification ... \""
    ],
    "variables": [
        "redmineManager"
    ],
    "comments": [
        "<editor-fold defaultstate=\"collapsed\" desc=\"parameters\">",
        "mandatory",
        "optional",
        "</editor-fold>",
        "inside managed exception on any error",
        "todo",
        "todo"
    ],
    "docstrings": [
        "*\n * @author onur"
    ],
    "functions": [
        "Release",
        "execute",
        "release",
        "isVersionDeployed",
        "deployVersion",
        "runDeployCommands",
        "updateAsDeployed",
        "updateAsDeployed",
        "getChangeLog",
        "notifySlack",
        "notifyEmail"
    ],
    "classes": [
        "Release"
    ]
}