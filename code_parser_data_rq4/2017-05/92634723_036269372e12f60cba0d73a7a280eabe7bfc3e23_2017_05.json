{
    "identifiers": [
        "name",
        "gender",
        "year",
        "month",
        "adv1",
        "adv2",
        "numadv",
        "n",
        "g",
        "y",
        "m",
        "n",
        "n",
        "length",
        "m",
        "m",
        "g",
        "g",
        "name",
        "n",
        "gender",
        "g",
        "year",
        "y",
        "month",
        "m",
        "adv1",
        "adv2",
        "numadv",
        "name",
        "year",
        "month",
        "gender",
        "adv1",
        "adv2",
        "numadv",
        "p",
        "adv1",
        "p",
        "adv1",
        "p",
        "p",
        "numadv",
        "p",
        "numadv",
        "p",
        "adv1",
        "adv2",
        "p",
        "p",
        "adv1",
        "adv2",
        "p",
        "p",
        "numadv",
        "p",
        "numadv",
        "n",
        "g",
        "y",
        "m",
        "adv",
        "n",
        "n",
        "length",
        "g",
        "g",
        "m",
        "m",
        "adv",
        "name",
        "n",
        "gender",
        "g",
        "year",
        "y",
        "month",
        "m",
        "adv1",
        "adv",
        "adv2",
        "numadv",
        "adv",
        "numadv",
        "adv",
        "numadv",
        "n",
        "g",
        "y",
        "m",
        "adv1",
        "adv2",
        "n",
        "n",
        "length",
        "g",
        "g",
        "m",
        "m",
        "adv1",
        "adv2",
        "adv1",
        "adv2",
        "name",
        "n",
        "gender",
        "g",
        "year",
        "y",
        "month",
        "m",
        "adv1",
        "adv1",
        "adv2",
        "adv2",
        "numadv",
        "adv1",
        "numadv",
        "adv1",
        "numadv",
        "adv2",
        "numadv",
        "adv2",
        "numadv",
        "p",
        "p",
        "year",
        "p",
        "year",
        "year",
        "p",
        "year",
        "month",
        "p",
        "month",
        "p",
        "p",
        "p",
        "adv1",
        "adv2",
        "p",
        "adv1",
        "adv1",
        "p",
        "adv2",
        "adv2",
        "p",
        "adv1",
        "adv2",
        "p",
        "adv2",
        "adv1"
    ],
    "literals": [],
    "variables": [
        "name",
        "gender",
        "year",
        "month",
        "adv1",
        "adv2",
        "numadv"
    ],
    "comments": [
        "name of person with PHD, its length > 0",
        "gender of PHD person, 'f' for female,",
        "year PHD awarded",
        "month PHD awarded.In range 1..12 with 1 being",
        "first PHD advisor of person - null if unknown",
        "second PHD advisor of person - null if unknown or",
        "number of PHD advisees of this person"
    ],
    "docstrings": [
        "NetId: jl3263. Time spent: 7 hours, 15 minutes.\n An instance maintains info about the PHD of a person.",
        "Checked Javadoc output and was OK.",
        "m' for male",
        "anuary, etc.",
        "nly have one advisor. If first advisor null, second \n\t\t\t\t\t/*advisor must be null",
        "GROUP A",
        "Constructor: an instance for a person with name n, gender g, \n\t * PHD year y, and PHD month m. Its advisors are unknown, and it has \n\t * no advisees.\n\t * Precondition: n has at least 1 char. m is in 1..12. g is 'f' for \n\t * female or 'm' for male",
        "GETTER METHODS",
        "Return the name of this person.",
        "Return the year this person got their PHD.",
        "Return the month this person got their PHD.",
        "Return the value of the sentence \"This person is male.\"",
        "Return the first advisor of this PHD (null if unknown).",
        "Return the second advisor of this PHD (null if unknown or \n\t * non-existent).",
        "Return the number of PHD advisees of this person.",
        "GROUP B",
        "SETTER METHODS",
        "Add p as the first advisor of this person.\n\t * Precondition: the first advisor is unknown and p is not null.",
        "Add p as the second advisor of this person.\n\t * Precondition: The first advisor (of this person) is known, \n\t * the second advisor is unknown, p is not null, and p is different \n\t * from the first advisor.",
        "GROUP C",
        "Constructor: a PHD with name n, gender g, PHD year y, PHD month m,\n\t * first advisor adv, and no second advisor.\n\t * Precondition: n has at least 1 char, g is 'f' for female or 'm' \n\t * for male, m is in 1..12, and adv is not null.",
        "Constructor: a PHD with name n, gender g, PHD year y, PHD month m,\n\t * first advisor adv1, and second advisor adv2.\n\t * Precondition: n has at least 1 char. g is 'f' for female or 'm' \n\t * for male. m is in 1..12. adv1 and adv2 are not null. \n\t * adv1 and adv2 are different.",
        "GROUP D",
        "Return value of \"this person got their PHD before p did.\"\n\t * Precondition: p is not null.",
        "Return value of â€œp is not null and this person and p are\n\t * intellectual siblings.\""
    ],
    "functions": [
        "PHD",
        "getName",
        "getYear",
        "getMonth",
        "isMale",
        "PHD",
        "advisor1",
        "PHD",
        "advisor2",
        "numAdvises",
        "setAdvisor1",
        "setAdvisor2",
        "PHD",
        "PHD",
        "gotBefore",
        "arePHDSiblings"
    ],
    "classes": [
        "PHD"
    ]
}