{
    "identifiers": [
        "logging",
        "winston",
        "os",
        "winston",
        "options",
        "options",
        "options",
        "options",
        "options",
        "LEVEL_NAME_TO_STACKDRIVER_CODE",
        "NPM_LEVEL_NAME_TO_CODE",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "os",
        "options",
        "options",
        "labels",
        "options",
        "labels",
        "options",
        "labels",
        "options",
        "logging",
        "options",
        "logName",
        "levelName",
        "msg",
        "metadata",
        "callback",
        "metadata",
        "callback",
        "metadata",
        "metadata",
        "levelName",
        "levelName",
        "levelName",
        "STACKDRIVER_LOGGING_LEVEL_CODE_TO_NAME",
        "levelCode",
        "labels",
        "metadata",
        "labels",
        "metadata",
        "metadata",
        "msg",
        "msg",
        "metadata",
        "metadata",
        "msg",
        "entryMetadata",
        "data",
        "stackdriverLevel",
        "entry",
        "callback",
        "winston",
        "WinstonStackdriver",
        "WinstonStackdriver"
    ],
    "literals": [
        "'is'",
        "'@google-cloud/logging'",
        "'winston'",
        "'os'",
        "'emergency'",
        "'alert'",
        "'critical'",
        "'error'",
        "'warning'",
        "'notice'",
        "'info'",
        "'debug'",
        "string",
        "'https://www.googleapis.com/auth/logging.write'",
        "'global'",
        "'winston_log'",
        "'Unknown log level: '",
        "' '",
        "''"
    ],
    "variables": [
        "NPM_LEVEL_NAME_TO_CODE",
        "LEVEL_NAME_TO_STACKDRIVER_CODE",
        "STACKDRIVER_LOGGING_LEVEL_CODE_TO_NAME",
        "labels",
        "logName",
        "levelCode",
        "stackdriverLevel",
        "labels",
        "entryMetadata",
        "data",
        "entry"
    ],
    "comments": [
        "Levels",
        "Resource",
        "Labels",
        "Actually initialize logger",
        "if (is.object(metadata)) {",
        "// We attach properties as labels on the log entry. Logging proto requires",
        "// that the label values be strings, so we convert using util.inspect.",
        "for (var key in metadata) {",
        "if (typeof metadata[key] === 'string') {",
        "labels[key] = metadata[key];",
        "} else {",
        "labels[key] = util.inspect(metadata[key]);",
        "}",
        "}",
        "}",
        "Stackdriver Logs Viewer picks up the summary line from the `message`",
        "property of the jsonPayload.",
        "https://cloud.google.com/logging/docs/view/logs_viewer_v2#expanding.",
        "",
        "For error messages at severity 'error' and higher, Stackdriver",
        "Error Reporting will pick up error messages if the full stack trace is",
        "included in the textPayload or the message property of the jsonPayload.",
        "https://cloud.google.com/error-reporting/docs/formatting-error-messages",
        "We prefer to format messages as jsonPayload (by putting it as a message",
        "property on an object) as that works is accepted by Error Reporting in",
        "for more resource types.",
        "",
        "TODO(ofrobots): when resource.type is 'global' we need to additionally",
        "provide serviceContext.service as part of the entry for Error Reporting to",
        "automatically pick up the error."
    ],
    "docstrings": [
        "* Map of npm output levels to Stackdriver Logging levels.\n *\n * @type {object}\n * @private",
        "* Map of Stackdriver Logging levels.\n *\n * @type {object}\n * @private",
        "* This module provides support for streaming your winston logs to\n * [Stackdriver Logging]{@link https://cloud.google.com/logging}.\n *\n * If your app is running on Google Cloud Platform, all configuration and\n * authentication is handled for you. We also auto-detect the appropriate\n * resource descriptor to report the log entries against.\n *\n * If you are running your application in another environment, such as locally,\n * on-premise, or on another cloud provider, you will need to provide additional\n * configuration.\n *\n * @constructor\n * @alias module:logging-winston\n *\n * @param {object} options - [Configuration object](#/docs). Refer to this link\n *     for authentication information.\n * @param {object=} options.level - The default log level. Winston will filter\n *     messages with a severity lower than this.\n * @param {object=} options.levels - Custom logging levels as supported by\n *     winston. This list is used to translate your log level to the Stackdriver\n *     Logging level. Each property should have an integer value between 0 (most\n *     severe) and 7 (least severe). If you are passing a list of levels to your\n *     winston logger, you should provide the same list here.\n * @param {string=} options.logName - The name of the log that will receive\n *     messages written to this transport. Default: `winston_log`\n * @param {object=} options.resource - The monitored resource that the transport\n *     corresponds to. On Google Cloud Platform, this is detected automatically,\n *     but you may optionally specify a specific monitored resource. For more\n *     information see the\n *     [official documentation]{@link https://cloud.google.com/logging/docs/api/reference/rest/v2/MonitoredResource}.\n *\n * @example\n *\n * winston.add(transport, {\n *   projectId: 'grape-spaceship-123',\n *   keyFilename: '/path/to/keyfile.json',\n *   level: 'warning', // log at 'warning' and above\n *   resource: {\n *     type: 'global'\n *   }\n * });\n *\n * winston.emerg('antimatter containment field collapse imminent');"
    ],
    "functions": [
        "log"
    ],
    "classes": [
        "WinstonStackdriver"
    ]
}