{
    "identifiers": [
        "uno",
        "meng",
        "java",
        "io",
        "File",
        "java",
        "sql",
        "SQLException",
        "java",
        "util",
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "org",
        "dom4j",
        "Attribute",
        "org",
        "dom4j",
        "Document",
        "org",
        "dom4j",
        "Element",
        "org",
        "dom4j",
        "io",
        "SAXReader",
        "uno",
        "meng",
        "db",
        "CUID",
        "filelist",
        "cuid",
        "args",
        "reader",
        "getFileList",
        "i",
        "i",
        "size",
        "i",
        "flag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "flag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "flag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "flag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "flag",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "get",
        "i",
        "getAbsolutePath",
        "contains",
        "tag",
        "reader",
        "read",
        "get",
        "i",
        "node",
        "getRootElement",
        "node",
        "getName",
        "equals",
        "node",
        "getName",
        "equals",
        "ReadXML",
        "node",
        "flag",
        "tag",
        "strPath",
        "dir",
        "strPath",
        "files",
        "dir",
        "listFiles",
        "files",
        "i",
        "i",
        "files",
        "length",
        "i",
        "fileName",
        "files",
        "i",
        "getName",
        "files",
        "i",
        "isDirectory",
        "getFileList",
        "files",
        "i",
        "getAbsolutePath",
        "fileName",
        "endsWith",
        "filelist",
        "add",
        "files",
        "i",
        "filelist",
        "node",
        "flag",
        "tag",
        "it",
        "node",
        "elementIterator",
        "it",
        "hasNext",
        "n",
        "it",
        "next",
        "n",
        "getName",
        "equals",
        "n",
        "attributes",
        "attr",
        "attr",
        "getName",
        "equals",
        "attr",
        "getName",
        "attr",
        "getValue",
        "con",
        "n",
        "elementIterator",
        "con",
        "hasNext",
        "e",
        "con",
        "next",
        "e",
        "getName",
        "equals",
        "tmp",
        "e",
        "elementIterator",
        "tmp",
        "hasNext",
        "t",
        "tmp",
        "next",
        "t",
        "getName",
        "t",
        "getText"
    ],
    "literals": [
        "\"data\"",
        "\"CDT\"",
        "\"JDT\"",
        "\"PDE\"",
        "\"Platform\"",
        "\"assigned_to\"",
        "\"bug_status\"",
        "\"component\"",
        "\"op_sys\"",
        "\"priority\"",
        "\"product\"",
        "\"resolution\"",
        "\"severity\"",
        "\"short_desc\"",
        "\"version\"",
        "\"reports\"",
        "\"cc\"",
        "\"xml\"",
        "\"report\"",
        "\"id\"",
        "\"report\\'s \"",
        "\"为：\"",
        "\"update\"",
        "\"内容：\""
    ],
    "variables": [],
    "comments": [
        "创建saxReader对象",
        "通过read方法读取一个文件 转换成Document对象",
        "获取根节点元素对象",
        "ReadReportsXML(node,flag);",
        "遍历所有的元素节点",
        "该文件目录下文件全部放入数组",
        "判断是文件还是文件夹",
        "获取文件绝对路径",
        "判断文件名是否以.avi结尾",
        "当前节点下面子节点迭代器",
        "获取当前节点的所有属性节点",
        "遍历属性节点",
        "",
        "/**",
        "public static void ReadReportsXML(Element node,int flag) throws SQLException{",
        "int bug_id = 0;",
        "int time = 0;",
        "String reporter = null;",
        "// 当前节点下面子节点迭代器",
        "Iterator<Element> it = node.elementIterator();",
        "// 获取当前节点的所有属性节点",
        "while(it.hasNext()){",
        "Element n = it.next();",
        "if(n.getName().equals(\"report\")){",
        "List<Attribute> list = n.attributes();",
        "// 遍历属性节点",
        "for (Attribute attr : list){",
        "if(attr.getName().equals(\"id\")){",
        "System.out.println(\"report\\'s \"+attr.getName() + \"为：\" + attr.getValue());",
        "bug_id = Integer.parseInt(attr.getValue());",
        "}",
        "}",
        "Iterator<Element> con = n.elementIterator();",
        "while(con.hasNext()){",
        "Element e = con.next();",
        "System.out.println(e.getName()+\"内容为：\"+e.getText());",
        "if(e.getName().equals(\"opening_time\")){",
        "time = Integer.parseInt(e.getText());",
        "}else if(e.getName().equals(\"reporter\")){",
        "reporter = e.getText();",
        "}",
        "}",
        "cuid.Insert(bug_id,time,flag,reporter);",
        "}",
        "}",
        "}"
    ],
    "docstrings": [
        "* 读取某个文件夹下的所有文件",
        "* 遍历当前节点元素下面的所有(元素的)子节点 \n     *  \n     * @param node",
        "* 遍历reports.xml当前节点元素下面的所有(元素的)子节点",
        "*",
        "* @param node",
        "* @throws SQLException",
        "*/"
    ],
    "functions": [
        "main",
        "getFileList",
        "ReadXML"
    ],
    "classes": [
        "Eclipse_Bug_Report"
    ]
}