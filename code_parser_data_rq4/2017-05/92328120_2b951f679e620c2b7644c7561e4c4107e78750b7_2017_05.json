{
    "identifiers": [
        "Collections",
        "Generic",
        "Data",
        "Entity",
        "Data",
        "Entity",
        "ModelConfiguration",
        "Conventions",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "Data",
        "Entity",
        "Validation",
        "Models",
        "Data",
        "Common",
        "Threading",
        "Runtime",
        "Remoting",
        "Contexts",
        "DataContext",
        "DbContext",
        "Configuration",
        "LazyLoadingEnabled",
        "SetDefaultConfiguration",
        "DbConnection",
        "existingConnection",
        "existingConnection",
        "SetDefaultConfiguration",
        "Database",
        "SetInitializer",
        "CreateSequenceInitializer",
        "DropCreateDatabaseIfModelChanges",
        "SimpleLibraryDbContext",
        "SimpleLibraryDbContext",
        "context",
        "context",
        "Database",
        "ExecuteSqlCommand",
        "Now",
        "Year",
        "Seed",
        "context",
        "Database",
        "SqlQuery",
        "rawQuery",
        "SingleAsync",
        "task",
        "Result",
        "nextVal",
        "DbSet",
        "Student",
        "DbSet",
        "Book",
        "DbSet",
        "BookIssueMain",
        "DbSet",
        "BookIssueDetail",
        "DbModelBuilder",
        "modelBuilder",
        "modelBuilder",
        "Entity",
        "BookIssueDetail",
        "HasRequired",
        "BookIssueMain",
        "s",
        "BookIssueMain",
        "WithMany",
        "s",
        "BookIssueDetails"
    ],
    "literals": [
        "\"DefaultConnection\"",
        "\"CREATE SEQUENCE StudentSequence AS INT START WITH \"",
        "\"000001 \"",
        "\"NO CACHE;\"",
        "\"SELECT NEXT VALUE FOR StudentSequence;\""
    ],
    "variables": [
        "rawQuery",
        "task",
        "nextVal",
        "Students",
        "Books",
        "BookIssueMains",
        "BookIssueDetails"
    ],
    "comments": [
        "public override int SaveChanges()",
        "{",
        "SetStudentId();",
        "return base.SaveChanges();",
        "}",
        "public override Task<int> SaveChangesAsync()",
        "{",
        "SetStudentId();",
        "return base.SaveChangesAsync();",
        "}",
        "public override Task<int> SaveChangesAsync(CancellationToken cancellationToken)",
        "{",
        "SetStudentId();",
        "return base.SaveChangesAsync(cancellationToken);",
        "}",
        "private void SetStudentId()",
        "{",
        "var studentsToSave = ChangeTracker.Entries().Select(e => e.Entity).OfType<Student>();",
        "foreach (var c in studentsToSave)",
        "{",
        "c.StudentId = GetNextSequenceValue();",
        "}",
        "}",
        "public DbSet<UnuseableSequence> UnuseableSequences { get; set; }",
        "public DbSet<Logs> Logs { get; set; }",
        "public DbSet<LogType> LogTypes { get; set; }"
    ],
    "docstrings": [],
    "functions": [
        "SimpleLibraryDbContext",
        "SimpleLibraryDbContext",
        "SetDefaultConfiguration",
        "Seed",
        "GetNextSequenceValue",
        "OnModelCreating"
    ],
    "classes": [
        "SimpleLibraryDbContext",
        "CreateSequenceInitializer"
    ]
}