{
    "identifiers": [
        "django",
        "core",
        "management",
        "BaseCommand",
        "data_refinery_models",
        "models",
        "SurveyJob",
        "Batch",
        "BatchStatuses",
        "DownloaderJob",
        "data_refinery_workers",
        "downloaders",
        "array_express",
        "download_array_express",
        "logging",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "logging",
        "getLogger",
        "BaseCommand",
        "args",
        "options",
        "SurveyJob",
        "source_type",
        "survey_job",
        "save",
        "Batch",
        "survey_job",
        "survey_job",
        "source_type",
        "size_in_bytes",
        "download_url",
        "raw_format",
        "processed_format",
        "pipeline_required",
        "accession_code",
        "internal_location",
        "organism",
        "status",
        "BatchStatuses",
        "NEW",
        "value",
        "batch",
        "save",
        "DownloaderJob",
        "batch",
        "batch",
        "downloader_job",
        "save",
        "logger",
        "info",
        "download_array_express",
        "delay",
        "downloader_job",
        "id"
    ],
    "literals": [
        "\"ARRAY_EXPRESS\"",
        "\"ARRAY_EXPRESS\"",
        "\"http://www.ebi.ac.uk/arrayexpress/files/E-MTAB-3050/E-MTAB-3050.raw.1.zip\"",
        "\"MICRO_ARRAY\"",
        "\"PCL\"",
        "\"MICRO_ARRAY_TO_PCL\"",
        "\"A-AFFY-1\"",
        "\"expression_data/array_express/A-AFFY-1/\"",
        "\"Queuing a task.\""
    ],
    "variables": [
        "logger",
        "survey_job",
        "batch",
        "downloader_job"
    ],
    "comments": [
        "Import and set logger",
        "Just a temporary way to queue a celery task",
        "without running the surveyor.",
        "Create all the dummy data that would have been created",
        "before a downloader job could have been generated.",
        "noqa"
    ],
    "docstrings": [],
    "functions": [
        "handle"
    ],
    "classes": [
        "Command"
    ]
}