{
    "identifiers": [
        "argparse",
        "base64",
        "datetime",
        "datetime",
        "os",
        "shutil",
        "numpy",
        "np",
        "socketio",
        "eventlet",
        "eventlet",
        "wsgi",
        "PIL",
        "Image",
        "flask",
        "Flask",
        "io",
        "BytesIO",
        "cv2",
        "math",
        "h5py",
        "keras",
        "models",
        "load_model",
        "keras",
        "models",
        "model_from_json",
        "keras",
        "models",
        "Sequential",
        "Model",
        "keras",
        "initializers",
        "VarianceScaling",
        "Zeros",
        "keras",
        "layers",
        "Convolution2D",
        "Flatten",
        "MaxPooling2D",
        "Lambda",
        "ELU",
        "Conv2D",
        "keras",
        "layers",
        "core",
        "Dense",
        "Dropout",
        "Activation",
        "keras",
        "optimizers",
        "Adam",
        "keras",
        "callbacks",
        "Callback",
        "keras",
        "layers",
        "normalization",
        "BatchNormalization",
        "keras",
        "regularizers",
        "l2",
        "model",
        "socketio",
        "Server",
        "Flask",
        "img",
        "img",
        "shape",
        "img",
        "math",
        "floor",
        "shape",
        "shape",
        "shape",
        "cv2",
        "resize",
        "img",
        "PROCESSED_IMG_COLS",
        "PROCESSED_IMG_ROWS",
        "interpolation",
        "cv2",
        "INTER_AREA",
        "cv2",
        "cvtColor",
        "img",
        "cv2",
        "COLOR_RGB2HSV",
        "img",
        "sio",
        "on",
        "sid",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "Image",
        "open",
        "BytesIO",
        "base64",
        "b64decode",
        "imgString",
        "np",
        "asarray",
        "image",
        "crop_and_resize_image",
        "image_array",
        "image_array",
        "nmodel",
        "predict",
        "transformed_image_array",
        "batch_size",
        "speed",
        "min_speed",
        "speed",
        "max_speed",
        "steering_angle",
        "speed",
        "throttle",
        "send_control",
        "steering_angle",
        "throttle",
        "args",
        "image_folder",
        "datetime",
        "utcnow",
        "strftime",
        "os",
        "path",
        "join",
        "args",
        "image_folder",
        "timestamp",
        "image",
        "save",
        "format",
        "image_filename",
        "sio",
        "emit",
        "data",
        "skip_sid",
        "sio",
        "on",
        "sid",
        "environ",
        "sid",
        "send_control",
        "steering_angle",
        "throttle",
        "sio",
        "emit",
        "data",
        "steering_angle",
        "__str__",
        "throttle",
        "__str__",
        "skip_sid",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "parse_args",
        "model",
        "build_model",
        "PROCESSED_IMG_ROWS",
        "PROCESSED_IMG_COLS",
        "PROCESSED_IMG_CHANNELS",
        "nmodel",
        "load_weights",
        "args",
        "model",
        "args",
        "image_folder",
        "format",
        "args",
        "image_folder",
        "os",
        "path",
        "exists",
        "args",
        "image_folder",
        "os",
        "makedirs",
        "args",
        "image_folder",
        "shutil",
        "rmtree",
        "args",
        "image_folder",
        "os",
        "makedirs",
        "args",
        "image_folder",
        "socketio",
        "Middleware",
        "sio",
        "app",
        "eventlet",
        "wsgi",
        "server",
        "eventlet",
        "listen",
        "app"
    ],
    "literals": [
        "'telemetry'",
        "\"steering_angle\"",
        "\"throttle\"",
        "\"speed\"",
        "\"image\"",
        "''",
        "'%Y_%m_%d_%H_%M_%S_%f'",
        "'{}.jpg'",
        "'manual'",
        "'connect'",
        "\"connect \"",
        "\"steer\"",
        "'steering_angle'",
        "'throttle'",
        "'__main__'",
        "'Remote Driving'",
        "'model'",
        "'Path to model h5 file. Model should be on the same path.'",
        "'image_folder'",
        "'?'",
        "''",
        "'Path to image folder. This is where the images from the run will be saved.'",
        "\".h5\"",
        "\"Loaded model from disk\"",
        "''",
        "\"Creating image folder at {}\"",
        "\"RECORDING THIS RUN ...\"",
        "\"NOT RECORDING THIS RUN ...\"",
        "''"
    ],
    "variables": [
        "sio",
        "app",
        "nmodel",
        "prev_image_array",
        "shape",
        "img",
        "img",
        "img",
        "steering_angle",
        "throttle",
        "speed",
        "imgString",
        "image",
        "image_array",
        "image_array",
        "transformed_image_array",
        "steering_angle",
        "min_speed",
        "max_speed",
        "throttle",
        "throttle",
        "throttle",
        "timestamp",
        "image_filename",
        "parser",
        "args",
        "PROCESSED_IMG_ROWS",
        "PROCESSED_IMG_COLS",
        "PROCESSED_IMG_CHANNELS",
        "nmodel",
        "app"
    ],
    "comments": [
        "new_size_col,new_size_row = 64, 64",
        "The current steering angle of the car",
        "The current throttle of the car",
        "The current speed of the car",
        "The current image from the center camera of the car",
        "steering_angle = float(nmodel.predict(image_array[None, :, :, :], batch_size=1))",
        "This model currently assumes that the features of the model are just the images. Feel free to change this.",
        "save frame",
        "NOTE: DON'T EDIT THIS.",
        "There was problem in loading model after upgrading to Keras 2.0. Using the weights from the saved model and loading the definition separately",
        "model = load_model(args.model)",
        "load json and create model",
        "json_file = open(args.model +\".json\", 'r')",
        "loaded_model_json = json_file.read()",
        "json_file.close()",
        "model = model_from_json(loaded_model_json)",
        "model.compile('adam', 'mse')",
        "processed image variables",
        "160 #64",
        "320 #64",
        "load weights into new model",
        "nmodel.load_weights(os.path.join(os.path.dirname(modelFile), 'model.h5'))",
        "args.image_folder = './run1'",
        "wrap Flask application with engineio's middleware",
        "deploy as an eventlet WSGI server"
    ],
    "docstrings": [],
    "functions": [
        "crop_and_resize_image",
        "telemetry",
        "connect",
        "send_control"
    ],
    "classes": []
}