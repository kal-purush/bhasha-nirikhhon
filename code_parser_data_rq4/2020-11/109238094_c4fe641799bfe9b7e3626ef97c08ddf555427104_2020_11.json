{
    "identifiers": [
        "logging",
        "logging",
        "handlers",
        "cx_Oracle",
        "os",
        "json",
        "sys",
        "time",
        "datetime",
        "collections",
        "OrderedDict",
        "classmethod",
        "cls",
        "json_kpi",
        "len",
        "json_kpi",
        "stat",
        "append",
        "json_kpi",
        "time",
        "strptime",
        "json_kpi",
        "t1",
        "stat",
        "append",
        "datetime",
        "datetime",
        "y",
        "m",
        "d",
        "h",
        "mm",
        "ss",
        "kpi_item",
        "json_kpi",
        "kpi_arr",
        "append",
        "kpi_item",
        "kpi_arr",
        "sort",
        "key",
        "k",
        "k",
        "get",
        "kpi_item",
        "kpi_arr",
        "kpi_item",
        "kpi_item",
        "len",
        "value",
        "value",
        "split",
        "stat",
        "append",
        "arr",
        "stat",
        "append",
        "arr",
        "stat",
        "append",
        "arr",
        "stat",
        "append",
        "arr",
        "stat",
        "append",
        "arr",
        "stat",
        "len",
        "stat",
        "classmethod",
        "cls",
        "filename",
        "biz_ids",
        "biz_queue",
        "os",
        "path",
        "isfile",
        "filename",
        "stat_arr",
        "os",
        "path",
        "splitext",
        "filename",
        "suffix",
        "filename",
        "filename",
        "open",
        "filename",
        "file",
        "readlines",
        "file",
        "close",
        "kpi",
        "all_lines",
        "json",
        "loads",
        "kpi",
        "object_pairs_hook",
        "OrderedDict",
        "json_kpi",
        "biz_id",
        "biz_ids",
        "cls",
        "parseone",
        "json_kpi",
        "biz_queue",
        "biz_id",
        "put",
        "stat",
        "biz_queue",
        "len",
        "biz_queue",
        "user",
        "pwd",
        "dsn",
        "enconding",
        "cx_Oracle",
        "connect",
        "user",
        "user",
        "password",
        "pwd",
        "dsn",
        "dsn",
        "encoding",
        "enconding",
        "db_conn",
        "close",
        "sql",
        "db_conn",
        "cursor",
        "cursor",
        "prepare",
        "sql",
        "cursor",
        "execute",
        "cursor",
        "execute",
        "cursor",
        "fetchall",
        "cursor",
        "rowcount",
        "cursor",
        "close",
        "rows",
        "rowcount",
        "sql",
        "db_conn",
        "cursor",
        "cursor",
        "prepare",
        "sql",
        "cursor",
        "execute",
        "cursor",
        "execute",
        "cursor",
        "rowcount",
        "cursor",
        "close",
        "_ou_rowcount",
        "db_conn",
        "commit",
        "db_conn",
        "rollback",
        "os",
        "path",
        "join",
        "logpath",
        "sys",
        "argv",
        "split",
        "split",
        "logging",
        "getLogger",
        "logging",
        "Formatter",
        "logging",
        "handlers",
        "RotatingFileHandler",
        "logname",
        "maxBytes",
        "logsize",
        "backupCount",
        "lognum",
        "handle1",
        "setFormatter",
        "fmt",
        "logging",
        "StreamHandler",
        "stream",
        "sys",
        "stdout",
        "handle2",
        "setFormatter",
        "fmt",
        "log",
        "addHandler",
        "handle1",
        "log",
        "addHandler",
        "handle2",
        "log",
        "setLevel",
        "loglevel",
        "classmethod",
        "cls",
        "msg",
        "cls",
        "log",
        "info",
        "msg",
        "classmethod",
        "cls",
        "msg",
        "cls",
        "log",
        "warning",
        "msg",
        "classmethod",
        "cls",
        "msg",
        "cls",
        "log",
        "error",
        "msg",
        "classmethod",
        "cls",
        "msg",
        "cls",
        "log",
        "debug",
        "msg"
    ],
    "literals": [
        "'header'",
        "'serv_id'",
        "'header'",
        "'timestamp'",
        "\"%Y-%m-%d %H:%M:%S\"",
        "'content'",
        "'kpi_id'",
        "'stat_type'",
        "'value'",
        "\"TIME\"",
        "','",
        "\"COUNT\"",
        "'.kpi'",
        "'kpi_stat'",
        "'PS'",
        "'r'",
        "'header'",
        "'biz_id'",
        "'utf-8'",
        "\"./\"",
        "'/'",
        "'.'",
        "'%(asctime)s %(filename)s %(lineno)d [%(levelname)s] [%(thread)d] %(message)s'",
        "'%Y-%m-%d %H:%M:%S'",
        "'.log'"
    ],
    "variables": [
        "stat",
        "kpi_arr",
        "t1",
        "y",
        "m",
        "d",
        "h",
        "mm",
        "ss",
        "value",
        "arr",
        "stat_arr",
        "suffix",
        "file",
        "all_lines",
        "json_kpi",
        "biz_id",
        "stat",
        "_",
        "db_conn",
        "db_conn",
        "rows",
        "cursor",
        "rows",
        "rowcount",
        "cursor",
        "_ou_rowcount",
        "logpath",
        "logsize",
        "lognum",
        "loglevel",
        "logname",
        "log",
        "fmt",
        "handle1",
        "handle2"
    ],
    "comments": [
        "!/app/billapp/scripts/tools/python2.7/bin/python",
        "coding: UTF-8",
        "from lxml import etree",
        "print(kpi_arr)",
        "计时型：starttime,endtime,count,average,time_total,time_max,time_min,data_total,fail_total,dist0,dist1,dist2,dist3",
        "计数型：count,starttime,endtime",
        "待确认",
        "插入顺序根据sql定",
        "stat.append(arr[2])",
        "根据后缀和其他条件过滤下，防止有一些临时文件跟非kpi stat文件",
        "json.load ?",
        "处理biz_id符合要求的",
        "print(size)",
        "每个业务对应一个queue",
        "调用prepare()方法，发送sql，并对sql进行预编译",
        "调用execute()，不要传递sql语句，否则预编译sql无效，执行的还是execute()方法的sql",
        "不要处理异常",
        "except Exception as e:",
        "print(e)",
        "调用prepare()方法，发送sql，并对sql进行预编译",
        "先读取XML文件中的配置数据",
        "由于config.xml放置在与当前文件相同的目录下，因此通过 __file__ 来获取XML文件的目录，然后再拼接成绝对路径",
        "这里利用了lxml库来解析XML",
        "root = etree.parse(os.path.join(os.path.dirname(__file__), 'config.xml')).getroot()",
        "读取日志文件保存路径",
        "logpath = root.find('logpath').text",
        "读取日志文件容量，转换为字节",
        "logsize = 1024*1024*int(root.find('logsize').text)",
        "读取日志文件保存个数",
        "lognum = int(root.find('lognum').text)",
        "FATAL = 50 ERROR = 40 WARNING = 30 INFO = 20 DEBUG = 10",
        "loglevel = int(root.find('loglevel').text)",
        "日志文件名：由用例脚本的名称，结合日志保存路径，得到日志文件的绝对路径",
        "初始化logger",
        "日志格式，可以根据需要设置",
        "日志输出到文件，这里用到了上面获取的日志名称，大小，保存个数",
        "同时输出到屏幕，便于实施观察",
        "设置日志基本，这里设置为INFO，表示只有INFO级别及以上的会打印",
        "日志接口，用户只需调用这里的接口即可，这里只定位了INFO, WARNING, ERROR, DEBUG四个级别的日志，可根据需要定义更多接口",
        "classmethod 修饰符对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等。"
    ],
    "docstrings": [
        "''' kpi文件解析\n    '''",
        "'''解析单个kpi内容\n\n        对于content按照kpi_id排序，保证不会因为kpi内容顺序不一致，\n        导致入库时映射错误\n        '''",
        "'''解析单个文件的kpi内容, 只处理biz_id符合要求的\n        '''",
        "''' 提供oracle处理功能\n    '''",
        "''' 连接数据库 \n        '''",
        "'''关闭连接\n        '''",
        "''' 执行查询语句\n            sql: select语句\n            params: sql语句的参数\n            return: 查询结果集和记录数\n        '''",
        "'''执行insert、update、delete语句\n        \n        sql：insert、update、delete语句\n        params：sql语句的参数\n        return: 影响的记录数\n        '''",
        "'''\n        事务提交\n        '''",
        "'''\n        事务回滚\n        '''",
        "''' 提供日志功能\n    '''"
    ],
    "functions": [
        "parseone",
        "parsefile",
        "connect",
        "close",
        "query",
        "update",
        "commit",
        "rollback",
        "info",
        "warning",
        "error",
        "debug"
    ],
    "classes": [
        "kpi_process",
        "conn_oracle",
        "logger"
    ]
}