{
    "identifiers": [
        "multiprocessing",
        "ThreadPool",
        "Pool",
        "Pool",
        "Files",
        "FileManager",
        "Files",
        "FileObject",
        "Streams",
        "StreamBuilder",
        "Plugins",
        "PluginManager",
        "pcapfile",
        "outputdir",
        "entropy",
        "kwargs",
        "kwargs",
        "pcapfile",
        "FileManager",
        "outputdir",
        "PluginManager",
        "outputdir",
        "entropy",
        "stream",
        "result",
        "filemanager",
        "addFile",
        "result",
        "StreamBuilder",
        "pcapfile",
        "kwargs",
        "streambuilder",
        "tcpStreams",
        "streambuilder",
        "udpStreams",
        "DEBUG",
        "s",
        "_finishedSearch",
        "_findFiles",
        "s",
        "allstreams",
        "Pool",
        "multiprocessing",
        "cpu_count",
        "workers",
        "map_async",
        "_findFiles",
        "allstreams",
        "_finishedSearch",
        "workers",
        "join",
        "filemanager",
        "exit",
        "filemanager",
        "stream",
        "stream",
        "getAllBytes",
        "stream",
        "ipSrc",
        "stream",
        "ipDst",
        "protocol",
        "pm",
        "getProtocolsByHeuristics",
        "streamPorts",
        "pm",
        "protocolDissectors",
        "protocol",
        "parseData",
        "streamdata",
        "payloads",
        "pm",
        "protocolDissectors",
        "protocol",
        "protocolName",
        "encPayload",
        "payloads",
        "decoder",
        "pm",
        "decoders",
        "pm",
        "decoders",
        "decoder",
        "decodeData",
        "encPayload",
        "payload",
        "datarecognizer",
        "pm",
        "dataRecognizers",
        "occ",
        "pm",
        "dataRecognizers",
        "datarecognizer",
        "findAllOccurences",
        "payload",
        "FileObject",
        "payload",
        "occ",
        "occ",
        "stream",
        "ipSrc",
        "stream",
        "ipDst",
        "pm",
        "dataRecognizers",
        "datarecognizer",
        "fileEnding",
        "pm",
        "dataRecognizers",
        "datarecognizer",
        "dataCategory",
        "stream",
        "tsFirstPacket",
        "stream",
        "tsFirstPacket",
        "files",
        "append",
        "file",
        "useEntropy",
        "pm",
        "entropyClassifier",
        "classify",
        "payload",
        "FileObject",
        "payload",
        "stream",
        "ipSrc",
        "stream",
        "ipDst",
        "stream",
        "tsFirstPacket",
        "stream",
        "tsFirstPacket",
        "files",
        "append",
        "file",
        "stream",
        "files",
        "Dispatcher",
        "os",
        "path",
        "dirname",
        "d",
        "run"
    ],
    "literals": [
        "'Viktor Winkelmann'",
        "'output'",
        "'__main__'",
        "'/../tests/webextract/web_light.pcap'"
    ],
    "variables": [
        "__author__",
        "DEBUG",
        "kwargs",
        "pcapfile",
        "filemanager",
        "pm",
        "outputdir",
        "useEntropy",
        "streambuilder",
        "allstreams",
        "workers",
        "files",
        "payloads",
        "streamdata",
        "streamPorts",
        "payloads",
        "stream",
        "protocol",
        "payload",
        "file",
        "file",
        "source",
        "file",
        "destination",
        "file",
        "fileEnding",
        "file",
        "file",
        "timestamp",
        "file",
        "file",
        "source",
        "file",
        "destination",
        "file",
        "file",
        "timestamp",
        "d"
    ],
    "comments": [
        "-*- coding: utf8 -*-",
        "Utils.printl(\"Found %d files in %s stream %s\" % (len(result), stream.protocol, stream.infos))",
        "if os.path.exists(self.outputdir):",
        "print \"Output folder \\'%s\\' already exists! Exiting...\" % (self.outputdir,)",
        "self.filemanager.exit()",
        "return",
        "print \"Reassembling streams...\"",
        "print \"\\nStream Reassembly finished.\\n\\tFile %s has a total of %d single-direction streams.\" % (self.pcapfile,len(allstreams))",
        "print \"Searching streams for forensic evidence...\\n\"",
        "Single threaded search for easier debugging",
        "Multi threaded search as standard",
        "print \"Evidence search has finished.\\n\""
    ],
    "docstrings": [],
    "functions": [
        "_finishedSearch",
        "run",
        "_findFiles"
    ],
    "classes": [
        "Dispatcher"
    ]
}