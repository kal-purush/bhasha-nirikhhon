{
    "identifiers": [
        "CompactInt",
        "BytesReader",
        "Codec",
        "data",
        "data",
        "key",
        "key",
        "key",
        "key",
        "key",
        "value",
        "key",
        "value",
        "key",
        "key",
        "CompactInt",
        "keys",
        "result",
        "result",
        "lenData",
        "i",
        "keys",
        "i",
        "result",
        "result",
        "keys",
        "i",
        "keys",
        "i",
        "result",
        "index",
        "BytesReader",
        "index",
        "bytesReader",
        "i",
        "lenComp",
        "i",
        "bytesReader",
        "bytesReader",
        "key",
        "value",
        "other",
        "other",
        "aKeys",
        "bKeys",
        "i",
        "aKeys",
        "i",
        "aKeys",
        "i",
        "bKeys",
        "i",
        "areEqual",
        "areEqual",
        "other",
        "other",
        "input",
        "index",
        "BytesReader",
        "input",
        "bytesReader",
        "i",
        "lenComp",
        "i",
        "bytesReader",
        "bytesReader",
        "data",
        "key",
        "value",
        "ScaleMap",
        "data"
    ],
    "literals": [
        "\".\"",
        "\"./BytesReader\"",
        "\"./interfaces/Codec\""
    ],
    "variables": [
        "result",
        "keys",
        "lenData",
        "i",
        "bytesReader",
        "lenComp",
        "i",
        "key",
        "value",
        "areEqual",
        "aKeys",
        "bKeys",
        "i",
        "data",
        "bytesReader",
        "lenComp",
        "i",
        "key",
        "value"
    ],
    "comments": [],
    "docstrings": [
        "* Map value of ScaleMap",
        "* Check if ScaleMap has given key\n     * @param key",
        "* Get the value of given key\n     * @param key",
        "* Set this value to the given key\n     * @param key \n     * @param value",
        "* Delete the given key with its value from the ScaleMap\n     * @param key",
        "* Get array of keys of the ScaleMap",
        "* Get array of values of the ScaleMap",
        "* The number of bytes this Map has",
        "* Convert ScaleMap to u8[]\n     * Length is encoded first, followed by all key and value encodings concatenated",
        "* @description Non-static constructor\n     * @param bytes \n     * @param index",
        "* @description Overloaded == operator\n     * @param a instance of ExtrinsicData\n     * @param b Instance of ExtrinsicData",
        "* @description Overloaded != operator\n     * @param a instance of ExtrinsicData\n     * @param b Instance of ExtrinsicData"
    ],
    "functions": [
        "has",
        "get",
        "keys",
        "values",
        "encodedLength",
        "toU8a",
        "populateFromBytes",
        "eq",
        "notEq",
        "fromU8a"
    ],
    "classes": [
        "ScaleMap"
    ]
}