{
    "identifiers": [
        "com",
        "google",
        "firebase",
        "ml",
        "modeldownloader",
        "androidx",
        "annotation",
        "NonNull",
        "com",
        "google",
        "android",
        "gms",
        "tasks",
        "OnCompleteListener",
        "com",
        "google",
        "android",
        "gms",
        "tasks",
        "java",
        "io",
        "java",
        "util",
        "concurrent",
        "CountDownLatch",
        "java",
        "util",
        "concurrent",
        "ExecutionException",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "TIMEOUT_MS",
        "latch",
        "task",
        "result",
        "exception",
        "successful",
        "Override",
        "NonNull",
        "task",
        "task",
        "task",
        "successful",
        "task",
        "isSuccessful",
        "successful",
        "result",
        "task",
        "getResult",
        "exception",
        "task",
        "getException",
        "latch",
        "countDown",
        "latch",
        "await",
        "TIMEOUT_MS",
        "TimeUnit",
        "MILLISECONDS",
        "successful",
        "result",
        "exception",
        "exception",
        "exception",
        "exception",
        "exception"
    ],
    "literals": [
        "\"timed out waiting for result\"",
        "\"got an unexpected exception type\""
    ],
    "variables": [
        "task",
        "result",
        "exception",
        "successful"
    ],
    "comments": [
        "Copyright 2020 Google LLC",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "todo(annz) add firebase ml exception handling here."
    ],
    "docstrings": [
        "* Helper listener that works around a limitation of the Tasks API where await() cannot be called on\n * the main thread. This listener works around it by running itself on a different thread, thus\n * allowing the main thread to be woken up when the Tasks complete.",
        "Blocks until the {@link #onComplete} is called."
    ],
    "functions": [
        "onComplete",
        "TResult",
        "await"
    ],
    "classes": [
        "TestOnCompleteListener"
    ]
}