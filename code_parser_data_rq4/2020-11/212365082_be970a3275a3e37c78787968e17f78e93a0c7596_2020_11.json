{
    "identifiers": [
        "org",
        "graalvm",
        "polybench",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "time",
        "Duration",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "jdk",
        "jfr",
        "FlightRecorder",
        "jdk",
        "jfr",
        "Recording",
        "jdk",
        "jfr",
        "consumer",
        "RecordedEvent",
        "jdk",
        "jfr",
        "consumer",
        "RecordingFile",
        "FlightRecorder",
        "isAvailable",
        "enabledEvent",
        "recording",
        "recording",
        "enable",
        "enabledEvent",
        "recording",
        "setDumpOnExit",
        "recording",
        "start",
        "recording",
        "recording",
        "recording",
        "copy",
        "recording",
        "stop",
        "recording",
        "r",
        "recording",
        "stop",
        "r",
        "stop",
        "r",
        "close",
        "recording",
        "eventName",
        "fieldName",
        "file",
        "Files",
        "createTempFile",
        "recording",
        "dump",
        "file",
        "processRecordings",
        "file",
        "eventName",
        "fieldName",
        "Files",
        "file",
        "jfrFile",
        "eventName",
        "fieldName",
        "mapper",
        "fieldName",
        "getDuration",
        "Duration",
        "ofMillis",
        "getLong",
        "fieldName",
        "RecordingFile",
        "readAllEvents",
        "jfrFile",
        "stream",
        "eventName",
        "equals",
        "getEventType",
        "getName",
        "mapper",
        "collect",
        "Collectors",
        "reducing",
        "Duration",
        "ofNanos",
        "a",
        "b",
        "a",
        "plus",
        "b",
        "toMillis"
    ],
    "literals": [
        "\"recording\"",
        "\".jfr\""
    ],
    "variables": [],
    "comments": [
        "Copy a JFR events snapshot into a temp file.",
        "Calculate a cumulative Truffle compilation time from all events in the snapshot."
    ],
    "docstrings": [
        "* Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions."
    ],
    "functions": [
        "JFRSupport",
        "isAvailable",
        "startRecording",
        "snapshotRecording",
        "disposeRecording",
        "computeCumulativeTime",
        "processRecordings"
    ],
    "classes": [
        "JFRSupport"
    ]
}