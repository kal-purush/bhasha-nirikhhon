{
    "identifiers": [
        "Collections",
        "Generic",
        "Text",
        "BinarySearchTree",
        "T",
        "T",
        "IComparable",
        "Node",
        "T",
        "Node",
        "T",
        "T",
        "data",
        "Root",
        "Root",
        "Node",
        "T",
        "data",
        "Current",
        "Root",
        "Current",
        "data",
        "CompareTo",
        "data",
        "Current",
        "leftNode",
        "Current",
        "leftNode",
        "Node",
        "T",
        "data",
        "Current",
        "Root",
        "Current",
        "Current",
        "leftNode",
        "InsertData",
        "data",
        "Current",
        "rightNode",
        "Current",
        "rightNode",
        "Node",
        "T",
        "data",
        "Current",
        "Root",
        "Current",
        "Current",
        "rightNode",
        "InsertData",
        "data",
        "Node",
        "T",
        "Root",
        "Node",
        "T",
        "node",
        "node",
        "Display",
        "node",
        "leftNode",
        "WriteLine",
        "node",
        "data",
        "Display",
        "node",
        "rightNode"
    ],
    "literals": [
        "\"Element in binary search tree is: \""
    ],
    "variables": [
        "Root",
        "Current"
    ],
    "comments": [
        "Inserts the data in Binary search tree.",
        "</summary>",
        "<param name=\"data\">The data.</param>",
        "Checks the root node is null or not.",
        "If data is less than data in root then current position node will point to left.",
        "Checks if left node is null.",
        "Checks if right node is null.",
        "Gets the root node.",
        "</summary>",
        "<returns></returns>",
        "Displays the node elements from BST.",
        "</summary>",
        "<param name=\"node\">The node.</param>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "InsertData",
        "GetRoot",
        "Display"
    ],
    "classes": [
        "BinarySearchTree"
    ]
}