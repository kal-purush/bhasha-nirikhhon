{
    "identifiers": [
        "coverage",
        "coverage",
        "$",
        "i",
        "e",
        "$",
        "$",
        "e",
        "i",
        "c",
        "c",
        "$",
        "c",
        "$",
        "e",
        "coverage",
        "$",
        "$",
        "$",
        "$",
        "$",
        "koff",
        "poff",
        "koff",
        "poff",
        "$",
        "$",
        "coverage",
        "$",
        "table",
        "table_rows",
        "$",
        "$",
        "table_footer",
        "table_dynamic_footer",
        "table_footer",
        "table_dynamic_footer",
        "$",
        "$",
        "$",
        "filter_value",
        "table_rows",
        "table_footer",
        "table_dynamic_footer",
        "no_rows",
        "no_rows",
        "table",
        "$",
        "table_row_names",
        "$",
        "$",
        "filter_value",
        "element",
        "hidden",
        "element",
        "shown",
        "no_rows",
        "shown",
        "no_rows",
        "table",
        "no_rows",
        "table",
        "hidden",
        "column",
        "column",
        "table_rows",
        "column",
        "cells",
        "$",
        "cells",
        "$",
        "ratio",
        "ratio",
        "numer",
        "parseInt",
        "splitted",
        "denom",
        "parseInt",
        "splitted",
        "sum",
        "parseInt",
        "table_dynamic_footer",
        "column",
        "cells",
        "cells",
        "match",
        "places",
        "match",
        "numer",
        "denom",
        "footer_cell",
        "pct",
        "places",
        "footer_cell",
        "sum",
        "table_footer",
        "table_dynamic_footer",
        "table_footer",
        "table_dynamic_footer",
        "$",
        "coverage",
        "$",
        "stored_list",
        "localStorage",
        "storage_name",
        "err",
        "stored_list",
        "sort_list",
        "stored_list",
        "$",
        "table",
        "table",
        "sort_list",
        "$",
        "table",
        "sort_list",
        "sort_list",
        "table",
        "$",
        "headers",
        "i",
        "i",
        "col_count",
        "i",
        "headers",
        "i",
        "headers",
        "col_count",
        "$",
        "headers",
        "coverage",
        "coverage",
        "coverage",
        "$",
        "localStorage",
        "storage_name",
        "sort_list",
        "err",
        "coverage",
        "$",
        "location",
        "frag",
        "frag",
        "$",
        "frag",
        "coverage",
        "parseInt",
        "frag",
        "coverage",
        "$",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "$",
        "evt",
        "coverage",
        "evt",
        "$",
        "evt",
        "coverage",
        "evt",
        "$",
        "evt",
        "coverage",
        "evt",
        "$",
        "evt",
        "coverage",
        "evt",
        "coverage",
        "coverage",
        "coverage",
        "$",
        "coverage",
        "coverage",
        "btn",
        "cls",
        "btn",
        "$",
        "btn",
        "cls",
        "btn",
        "show",
        "$",
        "cls",
        "show",
        "btn",
        "show",
        "$",
        "cls",
        "show",
        "btn",
        "show",
        "coverage",
        "coverage",
        "n",
        "$",
        "n",
        "coverage",
        "n",
        "$",
        "n",
        "coverage",
        "b",
        "e",
        "coverage",
        "b",
        "coverage",
        "e",
        "b",
        "e",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "line_elt",
        "line_elt",
        "klass",
        "klass",
        "m",
        "m",
        "coverage",
        "c",
        "probe_line",
        "c",
        "probe",
        "probe_line",
        "chunk_indicator",
        "c",
        "probe_line",
        "chunk_indicator",
        "probe",
        "next_indicator",
        "chunk_indicator",
        "probe",
        "probe_line",
        "c",
        "probe",
        "next_indicator",
        "c",
        "probe_line",
        "c",
        "begin",
        "probe",
        "c",
        "coverage",
        "c",
        "c",
        "probe",
        "probe_line",
        "c",
        "probe_line",
        "probe",
        "chunk_indicator",
        "probe",
        "probe_line",
        "c",
        "probe",
        "probe_line",
        "chunk_indicator",
        "c",
        "probe_line",
        "probe",
        "prev_indicator",
        "chunk_indicator",
        "probe",
        "probe_line",
        "c",
        "probe",
        "prev_indicator",
        "c",
        "probe_line",
        "c",
        "probe",
        "end",
        "c",
        "coverage",
        "pos",
        "coverage",
        "coverage",
        "l1",
        "l2",
        "l1",
        "l2",
        "l1_top",
        "pos",
        "l1_top",
        "line_height",
        "nlines",
        "result",
        "result",
        "nlines",
        "result",
        "result",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "top",
        "next",
        "coverage",
        "coverage",
        "coverage",
        "$",
        "coverage",
        "coverage",
        "win",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "$",
        "coverage",
        "coverage",
        "win",
        "win",
        "coverage",
        "coverage",
        "lineno",
        "c",
        "lineno",
        "probe_line",
        "c",
        "probe_line",
        "the_indicator",
        "probe",
        "indicator",
        "the_indicator",
        "probe",
        "probe_line",
        "c",
        "probe",
        "probe_line",
        "indicator",
        "c",
        "probe_line",
        "probe",
        "probe",
        "lineno",
        "indicator",
        "the_indicator",
        "indicator",
        "the_indicator",
        "probe",
        "probe_line",
        "c",
        "probe",
        "indicator",
        "c",
        "probe_line",
        "coverage",
        "begin",
        "probe",
        "coverage",
        "lineno",
        "coverage",
        "$",
        "c",
        "probe",
        "probe",
        "c",
        "probe",
        "c",
        "probe",
        "c",
        "coverage",
        "coverage",
        "coverage",
        "coverage",
        "parseInt",
        "top",
        "coverage",
        "top_pos",
        "coverage",
        "to_pos",
        "$",
        "to_pos",
        "coverage",
        "$",
        "coverage",
        "c",
        "$",
        "c",
        "$",
        "c",
        "$",
        "c",
        "coverage",
        "$",
        "c",
        "$",
        "$",
        "c",
        "visible_window_h",
        "$",
        "$",
        "scroll_marker",
        "c",
        "scroll_marker",
        "c",
        "line_height",
        "min_line_height",
        "line_height",
        "max_line_height",
        "line_height",
        "max_line_height",
        "line_height",
        "min_line_height",
        "c",
        "offsets",
        "$",
        "c",
        "$",
        "offsets",
        "id_name",
        "marker_scale",
        "parseInt",
        "id_name",
        "id_name",
        "line_number",
        "previous_line",
        "last_mark",
        "line_top",
        "line_height",
        "last_top",
        "scroll_marker",
        "line_number",
        "last_mark",
        "$",
        "line_number",
        "last_mark",
        "line_height",
        "line_top",
        "last_top",
        "line_top",
        "previous_line",
        "line_number"
    ],
    "literals": [
        "\"*[class*='shortkey_']\"",
        "\"class\"",
        "\" \"",
        "'keydown'",
        "\"#keyboard_icon\"",
        "\".help_panel\"",
        "\"#keyboard_icon\"",
        "\"#panel_icon\"",
        "\".help_panel\"",
        "\"#panel_icon\"",
        "\".help_panel\"",
        "\"table.index\"",
        "\"tbody tr\"",
        "\"td.name a\"",
        "\"#no_rows\"",
        "\"table.index tfoot tr\"",
        "'class'",
        "'total_dynamic hidden'",
        "\"#filter\"",
        "\"keyup change\"",
        "\"\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"tr\"",
        "\"hidden\"",
        "\"hidden\"",
        "'td:nth-child('",
        "')'",
        "':visible'",
        "\"ratio\"",
        "\" \"",
        "'td:nth-child('",
        "')'",
        "'%'",
        "'%'",
        "\"hidden\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"#filter\"",
        "\"change\"",
        "\"COVERAGE_INDEX_SORT\"",
        "'[['",
        "']]'",
        "\"persistentSort\"",
        "'sorton'",
        "\"table.index > thead > tr > th\"",
        "'text'",
        "'digit'",
        "'percent'",
        "\"table.index\"",
        "'persistentSort'",
        "'t'",
        "'highlight'",
        "'keydown'",
        "'j'",
        "'keydown'",
        "'k'",
        "'keydown'",
        "'0'",
        "'keydown'",
        "'1'",
        "\".button_toggle_run\"",
        "\"run\"",
        "\".button_toggle_exc\"",
        "\"exc\"",
        "\".button_toggle_mis\"",
        "\"mis\"",
        "\".button_toggle_par\"",
        "\"par\"",
        "\"show_\"",
        "\"#source .\"",
        "\"#source .\"",
        "\"#t\"",
        "\"#n\"",
        "'class'",
        "\".linenos .highlight\"",
        "\"highlight\"",
        "\"highlight\"",
        "\"html,body\"",
        "\"html,body\"",
        "'#source p'",
        "'body'",
        "'div#header'",
        "'#source'",
        "'p.show_run, p.show_mis, p.show_exc, p.show_exc, p.show_par'",
        "'#scroll_marker'",
        "\"body\"",
        "\"<div id='scroll_marker'>&nbsp;</div>\"",
        "'#scroll_marker'",
        "'id'",
        "'height'",
        "'<div id=\"m'",
        "'\" class=\"marker\"></div>'",
        "'#m'",
        "'height'",
        "'top'"
    ],
    "variables": [
        "koff",
        "poff",
        "table",
        "table_rows",
        "table_row_names",
        "no_rows",
        "table_footer",
        "table_dynamic_footer",
        "filter_value",
        "hidden",
        "shown",
        "element",
        "column",
        "cells",
        "sum",
        "numer",
        "denom",
        "ratio",
        "splitted",
        "footer_cell",
        "match",
        "places",
        "pct",
        "sort_list",
        "storage_name",
        "stored_list",
        "headers",
        "col_count",
        "frag",
        "show",
        "klass",
        "m",
        "c",
        "coverage",
        "probe",
        "chunk_indicator",
        "probe_line",
        "begin",
        "probe",
        "next_indicator",
        "chunk_indicator",
        "c",
        "coverage",
        "probe",
        "probe_line",
        "chunk_indicator",
        "end",
        "prev_indicator",
        "chunk_indicator",
        "l1",
        "l2",
        "result",
        "l1_top",
        "line_height",
        "nlines",
        "top",
        "next",
        "win",
        "win",
        "c",
        "coverage",
        "probe_line",
        "the_indicator",
        "probe",
        "lineno",
        "indicator",
        "the_indicator",
        "begin",
        "c",
        "coverage",
        "probe",
        "top",
        "top_pos",
        "c",
        "coverage",
        "c",
        "coverage",
        "min_line_height",
        "max_line_height",
        "visible_window_h",
        "scroll_marker",
        "marker_scale",
        "line_height",
        "previous_line",
        "last_mark",
        "last_top",
        "offsets",
        "id_name",
        "line_top",
        "line_number"
    ],
    "comments": [
        "Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0",
        "For details: https://github.com/nedbat/coveragepy/blob/master/NOTICE.txt",
        "Coverage.py HTML report browser code.",
        "jslint browser: true, sloppy: true, vars: true, plusplus: true, maxerr: 50, indent: 4",
        "global coverage: true, document, window, $",
        "Find all the elements with shortkey_* class, and use them to assign a shortcut key.",
        "Create the events for the help panel.",
        "Show the help panel, and position it so the keyboard icon in the",
        "panel is in the same place as the keyboard icon in the header.",
        "Create the events for the filter box.",
        "Cache elements.",
        "Create a duplicate table footer that we can modify with dynamic summed values.",
        "Observe filter keyevents.",
        "Filter box is empty, remove all filtering.",
        "Show standard footer, hide dynamic footer.",
        "Hide placeholder, show table.",
        "Filter table items by value.",
        "Hide / show elements.",
        "hide",
        "show",
        "Show placeholder if no rows will be displayed.",
        "Show placeholder, hide table.",
        "Hide placeholder, show table.",
        "Manage dynamic header:",
        "Calculate new dynamic sum values based on visible rows.",
        "Calculate summed value.",
        "No more columns...!",
        "Get footer cell element.",
        "Set value into dynamic footer cell element.",
        "Percentage columns use the numerator and denominator,",
        "and adapt to the number of decimal places.",
        "Hide standard footer, show dynamic footer.",
        "Show standard footer, hide dynamic footer.",
        "Trigger change event on setup, to force filter on page refresh",
        "(filter value may still be present).",
        "Loaded on index.html",
        "Look for a localStorage item containing previous sort settings:",
        "Create a new widget which exists only to save and restore",
        "the sort order:",
        "Format is called by the widget before displaying:",
        "This table hasn't been sorted before - we'll use",
        "our stored settings:",
        "This is not the first load - something has",
        "already defined sorting so we'll just update",
        "our stored value to match:",
        "Configure our tablesorter to handle the variable number of",
        "columns produced depending on report options:",
        "Enable the table sorter:",
        "Watch for page unload events so we can save the final sort settings:",
        "-- pyfile stuff --",
        "If we're directed to a particular line number, highlight the line.",
        "Rebuild scroll markers when the window height changes.",
        "Return the nth line div.",
        "Return the nth line number div.",
        "Set the selection.  b and e are line numbers.",
        "The first line selected.",
        "The next line not selected.",
        "Return a string indicating what kind of chunk this line belongs to,",
        "or null if not a chunk.",
        "Find the start of the next colored chunk.",
        "There's a next chunk, `probe` points to it.",
        "Find the end of this chunk.",
        "Find the end of the prev colored chunk.",
        "There's a prev chunk, `probe` points to its last line.",
        "Find the beginning of this chunk.",
        "Return the line number of the line nearest pixel position pos",
        "Returns 0, 1, or 2: how many of the two ends of the selection are on",
        "the screen right now?",
        "The selection is entirely off the screen: select the top line on",
        "the screen.",
        "Select line number lineno, or if it is in a colored chunk, select the",
        "entire chunk",
        "The line is in a highlighted chunk.",
        "Search backward for the first line.",
        "Search forward for the last line.",
        "Highlight the lines in the chunk",
        "Scroll the page if the chunk isn't fully visible.",
        "Need to move the page. The html,body trick makes it scroll in all",
        "browsers, got it from http://stackoverflow.com/questions/3042651",
        "Init some variables",
        "Build html",
        "Don't build markers if the window has no scroll bar.",
        "Line height must be between the extremes.",
        "Calculate line offsets outside loop to prevent relayouts",
        "If this solid missed block just make previous mark higher.",
        "Add colored line in scroll_marker block."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}