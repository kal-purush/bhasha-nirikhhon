{
    "identifiers": [
        "os",
        "listdir",
        "os",
        "path",
        "isfile",
        "join",
        "re",
        "urllib",
        "request",
        "urllib",
        "parse",
        "time",
        "json",
        "os",
        "environ",
        "md",
        "md",
        "replace",
        "replace",
        "replace",
        "re",
        "findall",
        "md",
        "links",
        "f",
        "f",
        "listdir",
        "isfile",
        "join",
        "f",
        "file",
        "onlyfiles",
        "open",
        "file",
        "encoding",
        "f",
        "read",
        "find_md_links",
        "md",
        "file",
        "links",
        "keys",
        "links",
        "file",
        "md_links",
        "md_links",
        "key",
        "links",
        "link",
        "links",
        "key",
        "time",
        "sleep",
        "urllib",
        "parse",
        "quote",
        "link",
        "safe",
        "urllib",
        "request",
        "urlopen",
        "encodedUrl",
        "webUrl",
        "read",
        "decode",
        "data",
        "key",
        "broken_links",
        "keys",
        "broken_links",
        "key",
        "append",
        "link",
        "link",
        "key",
        "broken_links",
        "keys",
        "broken_links",
        "key",
        "append",
        "link",
        "link",
        "broken_links",
        "run",
        "len",
        "broken_links",
        "json",
        "dumps",
        "broken_links",
        "doc",
        "broken_links",
        "broken_link",
        "broken_links",
        "doc",
        "doc",
        "broken_link",
        "exit",
        "exit"
    ],
    "literals": [
        "'\"'",
        "\" \"",
        "')'",
        "\" \"",
        "'('",
        "\" \"",
        "r'(https?://github.com[^\\s]+)'",
        "\".\"",
        "\".\"",
        "\"Testing links...\"",
        "\"r\"",
        "\"utf8\"",
        "':/'",
        "\"utf-8\"",
        "\"Create New Page\"",
        "'RESPONSE'",
        "\"Error: Some links are not working: \"",
        "\"!!! Some links in Nova's wiki are not working.\"",
        "\"There is a broken link in document: \"",
        "\"\\t The broken link is: \"",
        "\"All links in Nova's wiki are working! Thank you for the quality of your work!\"",
        "'RESPONSE'",
        "\"Success: All links are working\""
    ],
    "variables": [
        "md",
        "links",
        "onlyfiles",
        "links",
        "broken_links",
        "f",
        "md",
        "md_links",
        "links",
        "file",
        "encodedUrl",
        "webUrl",
        "data",
        "broken_links",
        "key",
        "broken_links",
        "key",
        "broken_links",
        "environ",
        "environ"
    ],
    "comments": [
        "Save the links found in each file",
        "Save the links that are not valid in each of the files",
        "Avoid GitHub detecting us a robot"
    ],
    "docstrings": [
        "\"\"\"\n    Copyright 2020 - NOVA\n    Script that veryfies that all links in the wiki are working\n    Process Improvement Proposal by: Daniel Elias\n    Author: Daniel Elias\n\"\"\"",
        "\"\"\"\n    Returns list of links found inside the file data\n    \"\"\"",
        "\"\"\"\n        1. Gets all files in the current directory\n        2. Finds all links in the file \n        3. Saves links to links dictionary (key = filename)\n        4. For each link in each file:\n            5. Try to open the file, if it fails it is an invalid link,\n               save invalid link in wrong_links dictionary\n            6. If file is opened and page is a \"Create New Page\" page,\n               it is an invalid link and it is saved in the wrong_links dictionary\n        7. Return wrong_links dictionary\n    \"\"\""
    ],
    "functions": [
        "find_md_links",
        "run"
    ],
    "classes": []
}