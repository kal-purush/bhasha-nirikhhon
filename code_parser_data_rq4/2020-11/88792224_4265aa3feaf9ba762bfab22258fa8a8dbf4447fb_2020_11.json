{
    "identifiers": [
        "logging",
        "os",
        "subprocess",
        "typing",
        "Optional",
        "numpy",
        "np",
        "parmed",
        "pmd",
        "logging",
        "getLogger",
        "np",
        "pi",
        "mol2_file",
        "residue_name",
        "output_name",
        "Optional",
        "need_gaff_atom_types",
        "Optional",
        "generate_frcmod",
        "Optional",
        "directory_path",
        "Optional",
        "gaff_version",
        "Optional",
        "output_name",
        "mol2_file",
        "stem",
        "need_gaff_atom_types",
        "_generate_gaff_atom_types",
        "mol2_file",
        "mol2_file",
        "residue_name",
        "residue_name",
        "output_name",
        "output_name",
        "gaff_version",
        "gaff_version",
        "directory_path",
        "directory_path",
        "logging",
        "debug",
        "pmd",
        "load_file",
        "os",
        "path",
        "join",
        "directory_path",
        "output_name",
        "gaff_version",
        "structure",
        "len",
        "structure",
        "residues",
        "structure",
        "save",
        "os",
        "path",
        "exists",
        "os",
        "rename",
        "os",
        "path",
        "join",
        "directory_path",
        "output_name",
        "gaff_version",
        "logging",
        "debug",
        "RuntimeError",
        "generate_frcmod",
        "_generate_frcmod",
        "mol2_file",
        "output_name",
        "gaff_version",
        "gaff_version",
        "gaff_version",
        "output_name",
        "output_name",
        "directory_path",
        "directory_path",
        "NotImplementedError",
        "NotImplementedError",
        "mol2_file",
        "residue_name",
        "output_name",
        "gaff_version",
        "Optional",
        "directory_path",
        "Optional",
        "gaff_version",
        "lower",
        "KeyError",
        "gaff_version",
        "subprocess",
        "Popen",
        "mol2_file",
        "output_name",
        "gaff_version",
        "residue_name",
        "upper",
        "gaff_version",
        "cwd",
        "directory_path",
        "p",
        "communicate",
        "p",
        "os",
        "path",
        "join",
        "directory_path",
        "file",
        "file",
        "remove_files",
        "file",
        "files",
        "os",
        "path",
        "isfile",
        "file",
        "logger",
        "debug",
        "file",
        "file",
        "unlink",
        "os",
        "path",
        "exists",
        "output_name",
        "gaff_version",
        "subprocess",
        "Popen",
        "mol2_file",
        "output_name",
        "gaff_version",
        "residue_name",
        "upper",
        "gaff_version",
        "cwd",
        "directory_path",
        "p",
        "communicate",
        "os",
        "path",
        "join",
        "directory_path",
        "file",
        "file",
        "remove_files",
        "file",
        "files",
        "os",
        "path",
        "isfile",
        "file",
        "logger",
        "debug",
        "file",
        "file",
        "unlink",
        "mol2_file",
        "gaff_version",
        "output_name",
        "directory_path",
        "Optional",
        "gaff_version",
        "lower",
        "KeyError",
        "gaff_version",
        "subprocess",
        "Popen",
        "mol2_file",
        "output_name",
        "gaff_version",
        "gaff_version",
        "cwd",
        "directory_path"
    ],
    "literals": [
        "\"benchmarks\"",
        "\"gaff2\"",
        "\"Checking to see if we have a multi-residue MOL2 file that should be converted \"",
        "\"to single-residue...\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\":1\"",
        "\"tmp.mol2\"",
        "\"tmp.mol2\"",
        "\"tmp.mol2\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\"Saved single-residue MOL2 file for `tleap`.\"",
        "\"Unable to convert multi-residue MOL2 file to single-residue for `tleap`.\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\"gaff2\"",
        "\"benchmarks\"",
        "\"gaff\"",
        "\"gaff2\"",
        "f\"Parameter set {gaff_version} not supported. Only [gaff, gaff2] are allowed.\"",
        "\"antechamber\"",
        "\"-i\"",
        "\"-fi\"",
        "\"mol2\"",
        "\"-o\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\"-fo\"",
        "\"mol2\"",
        "\"-rn\"",
        "f\"{residue_name.upper()}\"",
        "\"-at\"",
        "f\"{gaff_version}\"",
        "\"-an\"",
        "\"no\"",
        "\"-dr\"",
        "\"no\"",
        "\"-pf\"",
        "\"yes\"",
        "\"ANTECHAMBER_AC.AC\"",
        "\"ANTECHAMBER_AC.AC0\"",
        "\"ANTECHAMBER_BOND_TYPE.AC\"",
        "\"ANTECHAMBER_BOND_TYPE.AC0\"",
        "\"ATOMTYPE.INF\"",
        "f\"Removing temporary file: {file}\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\"antechamber\"",
        "\"-i\"",
        "\"-fi\"",
        "\"mol2\"",
        "\"-o\"",
        "f\"{output_name}.{gaff_version}.mol2\"",
        "\"-fo\"",
        "\"mol2\"",
        "\"-rn\"",
        "f\"{residue_name.upper()}\"",
        "\"-at\"",
        "f\"{gaff_version}\"",
        "\"-an\"",
        "\"no\"",
        "\"-pf\"",
        "\"yes\"",
        "\"ANTECHAMBER_AC.AC\"",
        "\"ANTECHAMBER_AC.AC0\"",
        "\"ANTECHAMBER_BOND_TYPE.AC\"",
        "\"ANTECHAMBER_BOND_TYPE.AC0\"",
        "\"ATOMTYPE.INF\"",
        "f\"Removing temporary file: {file}\"",
        "\"benchmarks\"",
        "\"gaff\"",
        "\"gaff2\"",
        "f\"Parameter set {gaff_version} not supported. Only [gaff, gaff2] are allowed.\"",
        "\"parmchk2\"",
        "\"-i\"",
        "\"-f\"",
        "\"mol2\"",
        "\"-o\"",
        "f\"{output_name}.{gaff_version}.frcmod\"",
        "\"-s\"",
        "f\"{gaff_version}\""
    ],
    "variables": [
        "logger",
        "_PI_",
        "output_name",
        "structure",
        "p",
        "remove_files",
        "files",
        "p",
        "remove_files",
        "files"
    ],
    "comments": [
        "Try with the newer (AmberTools 19) version of `antechamber` which doesn't have the `-dr` flag"
    ],
    "docstrings": [
        "\"\"\"\nFunctions for generate GAFF files and parameters.\n\"\"\"",
        "\"\"\"\n    Module to generate GAFF files given a mol2 file.\n\n    Parameters\n    ----------\n    mol2_file\n        The name of the mol2 structure file.\n    residue_name\n        The residue name of the molecule.\n    output_name\n        The name for the output file.\n    need_gaff_atom_types\n        Whether to generate GAFF atoms or not. Currently, this is the only choice.\n    gaff_version\n        The GAFF version to use (\"gaff1\", \"gaff2\")\n    generate_frcmod\n        Option to generate a GAFF frcmod file.\n    directory_path\n        The working directory where the files will be stored.\n    \"\"\"",
        "\"\"\"Generate a mol2 file with GAFF atom types.\"\"\"",
        "\"\"\"Generate an AMBER .frcmod file given a mol2 file.\"\"\""
    ],
    "functions": [
        "generate_gaff",
        "_generate_gaff_atom_types",
        "_generate_frcmod"
    ],
    "classes": []
}