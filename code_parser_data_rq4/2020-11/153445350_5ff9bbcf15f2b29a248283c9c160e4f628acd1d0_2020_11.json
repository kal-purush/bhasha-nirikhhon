{
    "identifiers": [
        "os",
        "re",
        "warnings",
        "os",
        "getenv",
        "lstrip",
        "re",
        "sub",
        "xla_flags",
        "split",
        "os",
        "environ",
        "join",
        "format",
        "arviz",
        "az",
        "jax",
        "numpy",
        "np",
        "pandas",
        "pd",
        "theano",
        "theano",
        "sandbox",
        "jax_linker",
        "theano",
        "sandbox",
        "jaxify",
        "pymc3",
        "pm",
        "pymc3",
        "modelcontext",
        "warnings",
        "warn",
        "draws",
        "tune",
        "chains",
        "target_accept",
        "random_seed",
        "model",
        "num_tuning_epoch",
        "num_compute_step_size",
        "tensorflow_probability",
        "substrates",
        "jax",
        "tfp",
        "modelcontext",
        "model",
        "jax",
        "random",
        "PRNGKey",
        "random_seed",
        "theano",
        "gof",
        "FunctionGraph",
        "model",
        "free_RVs",
        "model",
        "logpt",
        "theano",
        "sandbox",
        "jaxify",
        "jax_funcify",
        "fgraph",
        "fns",
        "rv",
        "name",
        "rv",
        "model",
        "free_RVs",
        "model",
        "test_point",
        "rv_name",
        "rv_name",
        "rv_names",
        "jax",
        "tree_map",
        "x",
        "np",
        "repeat",
        "x",
        "chains",
        "axis",
        "init_state",
        "jax",
        "pmap",
        "init_state",
        "seed",
        "step_size",
        "tfp",
        "mcmc",
        "NoUTurnSampler",
        "target_log_prob_fn",
        "logp_fn_jax",
        "step_size",
        "step_size",
        "tfp",
        "mcmc",
        "DualAveragingStepSizeAdaptation",
        "hmc",
        "tune",
        "num_tuning_epoch",
        "target_accept_prob",
        "target_accept",
        "_",
        "pkr",
        "pkr",
        "new_step_size",
        "samples",
        "step_size",
        "step_size",
        "jax",
        "numpy",
        "std",
        "samples",
        "num_compute_step_size",
        "jax",
        "tree_map",
        "jax",
        "numpy",
        "ones_like",
        "init_state",
        "i",
        "num_tuning_epoch",
        "gen_kernel",
        "step_size",
        "tfp",
        "mcmc",
        "sample_chain",
        "num_results",
        "tune",
        "num_tuning_epoch",
        "current_state",
        "init_state",
        "kernel",
        "tuning_hmc",
        "trace_fn",
        "trace_fn",
        "return_final_kernel_results",
        "seed",
        "seed",
        "jax",
        "tree_multimap",
        "get_tuned_stepsize",
        "init_samples",
        "tuning_result",
        "x",
        "x",
        "init_samples",
        "gen_kernel",
        "step_size",
        "tfp",
        "mcmc",
        "sample_chain",
        "num_results",
        "draws",
        "num_burnin_steps",
        "tune",
        "num_tuning_epoch",
        "current_state",
        "init_state",
        "kernel",
        "sample_kernel",
        "trace_fn",
        "_",
        "pkr",
        "pkr",
        "inner_results",
        "leapfrogs_taken",
        "seed",
        "seed",
        "mcmc_samples",
        "leapfrog_num",
        "pd",
        "Timestamp",
        "now",
        "jax",
        "random",
        "split",
        "seed",
        "chains",
        "_sample",
        "init_state_batched",
        "map_seed",
        "pd",
        "Timestamp",
        "now",
        "tic3",
        "tic2",
        "k",
        "v",
        "k",
        "v",
        "rv_names",
        "mcmc_samples",
        "az",
        "from_dict",
        "posterior",
        "posterior",
        "az_trace",
        "jax",
        "draws",
        "tune",
        "chains",
        "target_accept",
        "random_seed",
        "model",
        "progress_bar",
        "numpyro",
        "MCMC",
        "NUTS",
        "pymc3",
        "modelcontext",
        "modelcontext",
        "model",
        "jax",
        "random",
        "PRNGKey",
        "random_seed",
        "theano",
        "gof",
        "FunctionGraph",
        "model",
        "free_RVs",
        "model",
        "logpt",
        "theano",
        "sandbox",
        "jaxify",
        "jax_funcify",
        "fgraph",
        "fns",
        "rv",
        "name",
        "rv",
        "model",
        "free_RVs",
        "model",
        "test_point",
        "rv_name",
        "rv_name",
        "rv_names",
        "jax",
        "tree_map",
        "x",
        "np",
        "repeat",
        "x",
        "chains",
        "axis",
        "init_state",
        "jax",
        "jit",
        "current_state",
        "seed",
        "jax",
        "tree_map",
        "jax",
        "numpy",
        "ones_like",
        "init_state",
        "NUTS",
        "potential_fn",
        "x",
        "logp_fn_jax",
        "x",
        "target_accept_prob",
        "target_accept",
        "adapt_step_size",
        "adapt_mass_matrix",
        "dense_mass",
        "MCMC",
        "nuts_kernel",
        "num_warmup",
        "tune",
        "num_samples",
        "draws",
        "num_chains",
        "chains",
        "postprocess_fn",
        "chain_method",
        "progress_bar",
        "progress_bar",
        "pmap_numpyro",
        "run",
        "seed",
        "init_params",
        "current_state",
        "extra_fields",
        "pmap_numpyro",
        "get_samples",
        "group_by_chain",
        "pmap_numpyro",
        "get_extra_fields",
        "group_by_chain",
        "samples",
        "leapfrogs_taken",
        "pd",
        "Timestamp",
        "now",
        "jax",
        "random",
        "split",
        "seed",
        "chains",
        "_sample",
        "init_state_batched",
        "map_seed",
        "pd",
        "Timestamp",
        "now",
        "tic3",
        "tic2",
        "k",
        "v",
        "k",
        "v",
        "rv_names",
        "mcmc_samples",
        "az",
        "from_dict",
        "posterior",
        "posterior",
        "az_trace"
    ],
    "literals": [
        "\"XLA_FLAGS\"",
        "\"\"",
        "\"--\"",
        "r\"xla_force_host_platform_device_count=.+\\s\"",
        "\"\"",
        "\"XLA_FLAGS\"",
        "\" \"",
        "\"--xla_force_host_platform_device_count={}\"",
        "\"This module is experimental.\"",
        "\"Compiling...\"",
        "\"Compilation + sampling time = \"",
        "\"parallel\"",
        "\"num_steps\"",
        "\"num_steps\"",
        "\"Compiling...\"",
        "\"Compilation + sampling time = \""
    ],
    "variables": [
        "xla_flags",
        "xla_flags",
        "model",
        "seed",
        "fgraph",
        "fns",
        "logp_fn_jax",
        "rv_names",
        "init_state",
        "init_state_batched",
        "hmc",
        "step_size",
        "tuning_hmc",
        "init_samples",
        "tuning_result",
        "kernel_results",
        "step_size",
        "init_state",
        "sample_kernel",
        "mcmc_samples",
        "leapfrog_num",
        "tic2",
        "map_seed",
        "mcmc_samples",
        "leapfrog_num",
        "tic3",
        "posterior",
        "az_trace",
        "model",
        "seed",
        "fgraph",
        "fns",
        "logp_fn_jax",
        "rv_names",
        "init_state",
        "init_state_batched",
        "step_size",
        "nuts_kernel",
        "pmap_numpyro",
        "samples",
        "leapfrogs_taken",
        "tic2",
        "map_seed",
        "mcmc_samples",
        "leapfrogs_taken",
        "tic3",
        "posterior",
        "az_trace"
    ],
    "comments": [
        "pylint: skip-file",
        "Disable C compilation by default",
        "theano.config.cxx = \"\"",
        "This will make the JAX Linker the default",
        "theano.config.mode = \"JAX\"",
        "Run inference",
        "map_seed = jax.random.split(seed, chains)",
        "mcmc_samples = _sample(init_state_batched, map_seed)",
        "tic4 = pd.Timestamp.now()",
        "print(\"Sampling time = \", tic4 - tic3)",
        ", leapfrog_num, tic3 - tic2",
        "model=model,",
        "map_seed = jax.random.split(seed, chains)",
        "mcmc_samples = _sample(init_state_batched, map_seed)",
        "tic4 = pd.Timestamp.now()",
        "print(\"Sampling time = \", tic4 - tic3)",
        ", leapfrogs_taken, tic3 - tic2"
    ],
    "docstrings": [],
    "functions": [
        "sample_tfp_nuts",
        "_sample",
        "gen_kernel",
        "trace_fn",
        "get_tuned_stepsize",
        "sample_numpyro_nuts",
        "_sample"
    ],
    "classes": []
}