{
    "identifiers": [
        "argparse",
        "functools",
        "logging",
        "pathlib",
        "sys",
        "jinja2",
        "parser",
        "pragmas",
        "stcmd",
        "summary",
        "util",
        "__doc__",
        "logging",
        "getLogger",
        "argparser",
        "argparser",
        "argparse",
        "ArgumentParser",
        "DESCRIPTION",
        "argparse",
        "RawTextHelpFormatter",
        "argparser",
        "add_argument",
        "help",
        "nargs",
        "argparser",
        "add_argument",
        "dest",
        "argparse",
        "FileType",
        "mode",
        "help",
        "action",
        "argparser",
        "add_argument",
        "action",
        "help",
        "argparser",
        "path",
        "pathlib",
        "Path",
        "path",
        "path",
        "suffix",
        "lower",
        "suffix",
        "suffix",
        "parser",
        "projects_from_solution",
        "path",
        "path",
        "path",
        "fn",
        "parser",
        "parse",
        "fn",
        "fn",
        "project_files",
        "solution",
        "projects",
        "solution",
        "solutions",
        "projects",
        "path",
        "parser",
        "parse",
        "path",
        "paths",
        "path",
        "paths",
        "key",
        "value",
        "project_to_dict",
        "path",
        "items",
        "result",
        "key",
        "update",
        "value",
        "result",
        "user_config",
        "user_config",
        "user_config",
        "jinja2",
        "evalcontextfilter",
        "eval_ctx",
        "obj",
        "stcmd",
        "get_name",
        "obj",
        "user_config",
        "jinja2",
        "evalcontextfilter",
        "eval_ctx",
        "obj",
        "stcmd",
        "get_name",
        "obj",
        "user_config",
        "jinja2",
        "evalcontextfilter",
        "eval_ctx",
        "obj",
        "key",
        "pragmas",
        "expand_configurations_from_chain",
        "obj",
        "item_and_config",
        "item_and_config",
        "pragmas",
        "squash_configs",
        "item_to_config",
        "values",
        "config",
        "get",
        "key",
        "key",
        "value",
        "key",
        "value",
        "locals",
        "items",
        "key",
        "startswith",
        "functools",
        "lru_cache",
        "plc",
        "parser",
        "separate_by_classname",
        "plc",
        "find",
        "parser",
        "functools",
        "lru_cache",
        "plc",
        "get_symbols",
        "plc",
        "mot",
        "mot",
        "symbols",
        "mot",
        "is_pointer",
        "functools",
        "lru_cache",
        "project",
        "parser",
        "NC",
        "project",
        "find",
        "parser",
        "NC",
        "recurse",
        "nc",
        "functools",
        "lru_cache",
        "project",
        "getattr",
        "project",
        "data_types",
        "summary",
        "enumerate_types",
        "data_types",
        "functools",
        "lru_cache",
        "project",
        "sorted",
        "project",
        "find",
        "parser",
        "Box",
        "key",
        "box",
        "box",
        "attributes",
        "functools",
        "lru_cache",
        "project",
        "project",
        "find",
        "parser",
        "Link",
        "template",
        "context",
        "trim_blocks",
        "lstrip_blocks",
        "env_kwargs",
        "jinja2",
        "Environment",
        "loader",
        "jinja2",
        "DictLoader",
        "template",
        "trim_blocks",
        "trim_blocks",
        "lstrip_blocks",
        "lstrip_blocks",
        "env_kwargs",
        "env",
        "filters",
        "update",
        "get_jinja_filters",
        "env",
        "get_template",
        "render",
        "context",
        "get_symbols",
        "get_motors",
        "get_nc",
        "get_data_types",
        "get_boxes",
        "get_links",
        "parser",
        "get_data_type_by_reference",
        "parser",
        "get_pou_call_blocks",
        "parser",
        "separate_by_classname",
        "parser",
        "element_to_class_name",
        "parser",
        "determine_block_type",
        "summary",
        "data_type_to_record_info",
        "summary",
        "enumerate_types",
        "summary",
        "list_types",
        "min",
        "max",
        "func",
        "func",
        "func",
        "helpers",
        "parser",
        "TWINCAT_TYPES",
        "context",
        "projects",
        "templates",
        "debug",
        "templates",
        "logger",
        "warning",
        "sys",
        "stdin",
        "read",
        "logger",
        "warning",
        "len",
        "templates",
        "template",
        "read",
        "template",
        "templates",
        "get_render_context",
        "template_args",
        "update",
        "projects_to_dict",
        "projects",
        "template",
        "templates",
        "rendered",
        "append",
        "render_template",
        "template",
        "template_args",
        "ex",
        "ex",
        "debug",
        "stashed_exception",
        "stashed_exception",
        "join",
        "rendered",
        "stashed_exception",
        "message",
        "append",
        "stashed_exception",
        "stashed_exception",
        "util",
        "python_debug_session",
        "locals",
        "message",
        "join",
        "message",
        "projects"
    ],
    "literals": [
        "'projects'",
        "'Path to project or solution (.tsproj, .sln)'",
        "'+'",
        "'-t'",
        "'--template'",
        "'templates'",
        "'r'",
        "'Template filename (default: standard input)'",
        "'append'",
        "'--debug'",
        "'-d'",
        "'store_true'",
        "'Post template generation, open an interactive Python session'",
        "'.tsproj'",
        "'.sln'",
        "'.sln'",
        "'solutions'",
        "'projects'",
        "'others'",
        "'solutions'",
        "'projects'",
        "'others'",
        "'delim'",
        "'delim'",
        "':'",
        "'prefix'",
        "'prefix'",
        "'PREFIX'",
        "''",
        "'_'",
        "'Symbol_DUT_MotionStage'",
        "'DataTypes'",
        "'Id'",
        "'template'",
        "'template'",
        "'types'",
        "'Reading template from standard input...'",
        "'Read template from standard input (len=%d)'",
        "'\\n'",
        "'Variables: projects, templates, template_args. '",
        "f'Exception: {type(stashed_exception)} '",
        "f'{stashed_exception}'",
        "'\\n'"
    ],
    "variables": [
        "DESCRIPTION",
        "logger",
        "argparser",
        "argparser",
        "description",
        "argparser",
        "formatter_class",
        "path",
        "suffix",
        "project_files",
        "solution",
        "project_files",
        "solution",
        "projects",
        "solutions",
        "result",
        "user_config",
        "user_config",
        "item_and_config",
        "item_to_config",
        "config",
        "symbols",
        "nc",
        "data_types",
        "env",
        "helpers",
        "context",
        "context",
        "templates",
        "templates",
        "template_args",
        "stashed_exception",
        "rendered",
        "stashed_exception",
        "rendered",
        "message"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n\"pytmc template\" is a command line utility to expand a template based on a\nTwinCAT3 project (or XML-format file such as .TMC).\n\"\"\"",
        "\"\"\"\n    \"\"\"",
        "\"\"\"\n    \"\"\"",
        "\"\"\"All jinja filters.\"\"\"",
        "\"\"\"Get symbols for the PLC.\"\"\"",
        "\"\"\"Get motor symbols for the PLC (DUT_MotionStage).\"\"\"",
        "\"\"\"Get the top-level NC settings for the project.\"\"\"",
        "\"\"\"Get the data types container for the project.\"\"\"",
        "\"\"\"Get boxes contained in the project.\"\"\"",
        "\"\"\"Get links contained in the project or PLC.\"\"\"",
        "\"\"\"\n    One-time-use jinja environment + template rendering helper.\n    \"\"\"",
        "\"\"\"Jinja template context dictionary - helper functions.\"\"\"",
        "\"\"\"\n    \"\"\""
    ],
    "functions": [
        "build_arg_parser",
        "project_to_dict",
        "projects_to_dict",
        "get_jinja_filters",
        "epics_prefix",
        "epics_suffix",
        "pragma",
        "get_symbols",
        "get_motors",
        "get_nc",
        "get_data_types",
        "get_boxes",
        "get_links",
        "render_template",
        "get_render_context",
        "main"
    ],
    "classes": []
}