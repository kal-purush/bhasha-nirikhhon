{
    "identifiers": [
        "at",
        "dcv",
        "w12",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "DriverManager",
        "java",
        "sql",
        "PreparedStatement",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "SQLException",
        "java",
        "sql",
        "Statement",
        "java",
        "util",
        "Scanner",
        "connect",
        "statement",
        "preparedStatement",
        "resultSet",
        "sc",
        "args",
        "psq",
        "psq",
        "readDataBase",
        "c",
        "select",
        "preparedStatement",
        "connect",
        "prepareStatement",
        "select",
        "preparedStatement",
        "setString",
        "c",
        "getCityName",
        "preparedStatement",
        "setString",
        "c",
        "getCityCountry",
        "preparedStatement",
        "setString",
        "c",
        "getCityProvince",
        "preparedStatement",
        "setInt",
        "parseInt",
        "c",
        "getCityPopulation",
        "preparedStatement",
        "executeUpdate",
        "cityName",
        "cityCountry",
        "cityProvince",
        "cityPopulation",
        "cityName",
        "cityCountry",
        "cityProvince",
        "cityPopulation",
        "cityName",
        "cityName",
        "cityCountry",
        "cityCountry",
        "cityProvince",
        "cityProvince",
        "cityPopulation",
        "cityPopulation",
        "cityCountry",
        "cityName",
        "cityProvince",
        "cityPopulation",
        "c",
        "eingabeOK",
        "city",
        "sc",
        "nextLine",
        "country",
        "sc",
        "nextLine",
        "province",
        "sc",
        "nextLine",
        "population",
        "sc",
        "nextLine",
        "c",
        "city",
        "country",
        "province",
        "population",
        "eingabeOK",
        "nfe",
        "eingabeOK",
        "c",
        "connect",
        "DriverManager",
        "getConnection",
        "insertCity",
        "getCity",
        "sqle",
        "sqle",
        "printStackTrace",
        "close",
        "resultSet",
        "resultSet",
        "getMetaData",
        "getTableName",
        "i",
        "i",
        "resultSet",
        "getMetaData",
        "getColumnCount",
        "i",
        "i",
        "resultSet",
        "getMetaData",
        "getColumnName",
        "i",
        "resultSet",
        "counter",
        "resultSet",
        "next",
        "counter",
        "printf",
        "counter",
        "printf",
        "resultSet",
        "getString",
        "population",
        "resultSet",
        "getInt",
        "population",
        "printf",
        "population",
        "printf",
        "population",
        "resultSet",
        "getString",
        "resultSet",
        "getString",
        "resultSet",
        "getString",
        "counter",
        "resultSet",
        "resultSet",
        "close",
        "statement",
        "statement",
        "close",
        "connect",
        "connect",
        "close",
        "e"
    ],
    "literals": [
        "\"INSERT INTO mondial.city VALUES (?, ?, ? ,?,null,null);\"",
        "\"Bitte Stadt eingeben\"",
        "\"Bitte land eingeben\"",
        "\"Bitte Provinz eingeben\"",
        "\"Bitte Population eingeben\"",
        "\"Daten sind zugefügt\"",
        "\"fehlerhafte Eingabe\"",
        "\"jdbc:mysql://localhost/mondial?\"",
        "\"serverTimezone=UTC\"",
        "\"root\"",
        "\"Omemotuwe2020#\"",
        "\"The columns in the table are: \"",
        "\"Table: \"",
        "\"Column \"",
        "\" \"",
        "\"\\nStädte Abfrage nach Population und ob es eine Hauptstadt ist\\n\"",
        "\"%3d. \"",
        "\"%-40s hat eine Population von \"",
        "\"%8d \\n\"",
        "\"%7.2fM \\n\"",
        "\"     \"",
        "\" ist die Hauptstadt von \"",
        "\"\\n     Es wurden mit Ihrer Eingabe  \"",
        "\" Städte gefunden.\""
    ],
    "variables": [
        "cityName",
        "cityCountry",
        "cityProvince",
        "cityPopulation"
    ],
    "comments": [
        "einfache Query",
        "Query mit ?",
        "dbTest.readDataBase(\"select * from mondial.country\");",
        "Statements allow to issue SQL queries to the database",
        "Result set get the result of the SQL query",
        "Setup the connection with the DB",
        "queryCity(getCity(sc));",
        "Now get some metadata from the database",
        "Result set get the result of the SQL query",
        "ResultSet is initially before the first data set",
        "It is possible to get the columns via name",
        "also possible to get the columns via the column number",
        "which starts at 1",
        "e.g. resultSet.getSTring(2);",
        "Date date = resultSet.getDate(\"datum\");",
        "String comment = resultSet.getString(\"comments\");",
        "Schreibt SpaltenNamen automatisch",
        "for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {",
        "System.out.println(resultSet.getMetaData().getColumnName(i) + \": \" + resultSet.getString(i));",
        "}",
        "You need to close the resultSet"
    ],
    "docstrings": [
        "// PreparedStatements can use variables and are more efficient\n            preparedStatement = connect\n                    .prepareStatement(\"insert into  feedback.comments values (default, ?, ?, ?, ? , ?, ?)\");\n            // \"myuser, webpage, datum, summary, COMMENTS from feedback.comments\");\n            // Parameters start with 1\n            preparedStatement.setString(1, \"Test\");\n            preparedStatement.setString(2, \"TestEmail\");\n            preparedStatement.setString(3, \"TestWebpage\");\n            preparedStatement.setDate(4, new java.sql.Date(2009, 12, 11));\n            preparedStatement.setString(5, \"TestSummary\");\n            preparedStatement.setString(6, \"TestComment\");\n            preparedStatement.executeUpdate();\n\n            preparedStatement = connect\n                    .prepareStatement(\"SELECT myuser, webpage, datum, summary, COMMENTS from feedback.comments\");\n            resultSet = preparedStatement.executeQuery();\n            writeResultSet(resultSet);\n\n            // Remove again the insert comment\n            preparedStatement = connect\n                    .prepareStatement(\"delete from feedback.comments where myuser= ? ; \");\n            preparedStatement.setString(1, \"Test\");\n            preparedStatement.executeUpdate();\n\n            resultSet = statement\n                    .executeQuery(\"select * from feedback.comments\");\n            writeMetaData(resultSet);"
    ],
    "functions": [
        "main",
        "insertCity",
        "City",
        "getCityCountry",
        "getCityName",
        "getCityProvince",
        "getCityPopulation",
        "City",
        "getCity",
        "readDataBase",
        "writeMetaData",
        "writeResultSet",
        "close"
    ],
    "classes": [
        "SQLImportNewCitymitObjekt",
        "City"
    ]
}