{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "cv",
        "os",
        "tests_common",
        "NewOpenCVTests",
        "NewOpenCVTests",
        "cv",
        "dnn",
        "getAvailableTargets",
        "cv",
        "dnn",
        "DNN_BACKEND_OPENCV",
        "assertTrue",
        "cv",
        "dnn",
        "DNN_TARGET_CPU",
        "targets",
        "cv",
        "dnn",
        "DNN_TARGET_CPU",
        "cv",
        "dnn",
        "getAvailableTargets",
        "cv",
        "dnn",
        "DNN_BACKEND_INFERENCE_ENGINE",
        "find_file",
        "root_path",
        "os",
        "environ",
        "get",
        "find_file",
        "root_path",
        "os",
        "environ",
        "get",
        "find_file",
        "os",
        "environ",
        "get",
        "cv",
        "resize",
        "cv",
        "imread",
        "img_path",
        "cv",
        "dnn",
        "readNetFromModelOptimizer",
        "model_path",
        "weights_path",
        "net",
        "setPreferableBackend",
        "cv",
        "dnn",
        "DNN_BACKEND_INFERENCE_ENGINE",
        "net",
        "setPreferableTarget",
        "cv",
        "dnn",
        "DNN_TARGET_CPU",
        "cv",
        "dnn",
        "blobFromImage",
        "img",
        "net",
        "setInput",
        "blob",
        "net",
        "forward",
        "net",
        "getUnconnectedOutLayersNames",
        "cv",
        "GMat",
        "cv",
        "GInferInputs",
        "inputs",
        "setInput",
        "g_in",
        "cv",
        "gapi",
        "inputs",
        "outputs",
        "at",
        "outputs",
        "at",
        "cv",
        "GComputation",
        "cv",
        "GIn",
        "g_in",
        "cv",
        "GOut",
        "age_g",
        "gender_g",
        "cv",
        "gapi",
        "ie",
        "model_path",
        "weights_path",
        "device_id",
        "cv",
        "gapi",
        "networks",
        "pp",
        "cv",
        "compile_args",
        "nets",
        "comp",
        "apply",
        "cv",
        "gin",
        "img",
        "args",
        "cv",
        "compile_args",
        "cv",
        "gapi",
        "networks",
        "pp",
        "assertEqual",
        "cv",
        "norm",
        "dnn_gender",
        "gapi_gender",
        "cv",
        "NORM_INF",
        "assertEqual",
        "cv",
        "norm",
        "dnn_age",
        "gapi_age",
        "cv",
        "NORM_INF",
        "NewOpenCVTests",
        "bootstrap"
    ],
    "literals": [
        "'/omz_intel_models/intel/age-gender-recognition-retail-0013/FP32/age-gender-recognition-retail-0013'",
        "'.xml'",
        "'OPENCV_DNN_TEST_DATA_PATH'",
        "'.bin'",
        "'OPENCV_DNN_TEST_DATA_PATH'",
        "'cv/face/david2.jpg'",
        "'OPENCV_TEST_DATA_PATH'",
        "'CPU'",
        "'data'",
        "\"net\"",
        "\"age_conv3\"",
        "\"prob\"",
        "\"net\"",
        "'__main__'"
    ],
    "variables": [
        "targets",
        "root_path",
        "model_path",
        "weights_path",
        "img_path",
        "device_id",
        "img",
        "net",
        "blob",
        "dnn_age",
        "dnn_gender",
        "g_in",
        "inputs",
        "outputs",
        "age_g",
        "gender_g",
        "comp",
        "pp",
        "nets",
        "args",
        "gapi_age",
        "gapi_gender"
    ],
    "comments": [
        "!/usr/bin/env python",
        "NB: Check IE",
        "OpenCV DNN",
        "OpenCV G-API",
        "Check"
    ],
    "docstrings": [],
    "functions": [
        "test_getAvailableTargets",
        "test_age_gender_infer"
    ],
    "classes": [
        "test_gapi_infer"
    ]
}