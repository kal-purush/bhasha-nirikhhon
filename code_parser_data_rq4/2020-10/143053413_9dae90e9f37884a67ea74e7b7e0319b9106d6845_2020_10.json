{
    "identifiers": [
        "htmlToText",
        "error",
        "error",
        "error",
        "error",
        "errorType",
        "error",
        "stack",
        "getCallstack",
        "error",
        "errorType",
        "getCode",
        "error",
        "errorType",
        "error",
        "unpackErrorFromField",
        "error",
        "error",
        "unpackErrorFromField",
        "error",
        "error",
        "unpackErrorFromField",
        "error",
        "error",
        "unpackErrorFromField",
        "error",
        "error",
        "error",
        "error",
        "error",
        "errorType",
        "getCode",
        "error",
        "errorType",
        "message",
        "getMessage",
        "error",
        "message",
        "errorType",
        "message",
        "message",
        "error",
        "unpackErrorFromField",
        "error",
        "error",
        "unpackErrorFromField",
        "error",
        "errorType",
        "getCode",
        "error",
        "errorType",
        "message",
        "getMessage",
        "error",
        "message",
        "parseIfJson",
        "error",
        "parsedMessage",
        "parseIfJson",
        "parsedMessage",
        "parsedMessage",
        "parsedMessage",
        "parsedMessage",
        "parsedMessage",
        "errorType",
        "getCode",
        "parsedMessage",
        "errorType",
        "message",
        "getMessage",
        "parsedMessage",
        "message",
        "message",
        "message",
        "convertCodeToError",
        "errorType",
        "error",
        "error",
        "error",
        "error",
        "error",
        "errorType",
        "error",
        "message",
        "error",
        "message",
        "unpackErrorsInMessage",
        "message",
        "parseIfFileSystemError",
        "message",
        "errorType",
        "errorType",
        "errorType",
        "error",
        "message",
        "message",
        "message",
        "parseIfHtml",
        "message",
        "message",
        "parseIfXml",
        "message",
        "errorType",
        "message",
        "stack",
        "errorType",
        "errorType",
        "errorType",
        "parseInt",
        "errorType",
        "isNaN",
        "code",
        "code",
        "o",
        "o",
        "o",
        "o",
        "err",
        "o",
        "message",
        "message",
        "htmlToText",
        "message",
        "err",
        "message",
        "message",
        "message",
        "matches",
        "matches",
        "message",
        "o",
        "defaultMessage",
        "o",
        "o",
        "o",
        "o",
        "parseIfJson",
        "o",
        "o",
        "defaultMessage",
        "o",
        "defaultCode",
        "o",
        "o",
        "o",
        "o",
        "o",
        "code",
        "code",
        "defaultCode",
        "message",
        "message",
        "message",
        "errorsInMessage",
        "firstError",
        "message",
        "error",
        "prop",
        "error",
        "error",
        "prop",
        "field",
        "field",
        "field",
        "field",
        "field",
        "err",
        "field",
        "field",
        "error",
        "error",
        "error",
        "stack",
        "l",
        "l",
        "fileMatch",
        "l",
        "functionMatch",
        "result",
        "functionMatch",
        "moduleMatch",
        "moduleRegExp",
        "l",
        "moduleMatch",
        "parts",
        "moduleMatch",
        "moduleMatch",
        "parts",
        "fileMatch",
        "result",
        "parts",
        "result",
        "l",
        "l",
        "minifiedLines",
        "minifiedLines",
        "message",
        "errorType",
        "message",
        "match",
        "message",
        "match",
        "errorType",
        "match",
        "message",
        "errorType"
    ],
    "literals": [
        "'html-to-text'",
        "string",
        "string",
        "string",
        "string",
        "''",
        "string",
        "''",
        "string",
        "'object'",
        "'value'",
        "'_value'",
        "'error'",
        "'error'",
        "'response'",
        "'body'",
        "''",
        "'Unknown Error'",
        "'UserCancelledError'",
        "string",
        "string",
        "Failed with code \"${code}\".",
        "'string'",
        "'{'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'string'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'string'",
        "'{'",
        "'object'",
        "string",
        "string",
        "string",
        "''",
        "string",
        "string",
        "''",
        "string",
        "'/'",
        "'\\n'",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "errorType",
        "message",
        "stack",
        "parsedMessage",
        "message",
        "errorType",
        "code",
        "matches",
        "code",
        "errorsInMessage",
        "firstError",
        "errorsInMessage",
        "field",
        "stack",
        "minifiedLines",
        "result",
        "fileMatch",
        "functionMatch",
        "parts",
        "moduleRegExp",
        "moduleMatch",
        "match"
    ],
    "comments": [
        "Copied from https://github.com/microsoft/vscode-azuretools/blob/5999c2ad4423e86f22d2c648027242d8816a50e4/ui/src/parseError.ts",
        "with inline IParsedError interface and no localization",
        "---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------",
        "tslint:disable:no-unsafe-any",
        "tslint:disable:no-any",
        "See https://github.com/Microsoft/vscode-azureappservice/issues/419 for an example error that requires these 'unpack's",
        "Azure errors have a JSON object in the message",
        "For some reason, the message is sometimes serialized twice and we need to parse it again",
        "Extract out the \"internal\" error if it exists",
        "tslint:disable-next-line:strict-boolean-expressions",
        "Azure storage SDK errors are presented in XML",
        "https://github.com/Azure/azure-sdk-for-js/issues/6927",
        "NOTE: Intentionally not using 'error instanceof UserCancelledError' because that doesn't work if multiple versions of the UI package are used in one extension",
        "See https://github.com/Microsoft/vscode-azuretools/issues/51 for more info",
        "ignore",
        "ignore",
        "Handle messages like this from Azure (just handle first error for now)",
        "[\"Errors\":[\"The offer should have valid throughput]]\",",
        "Handle objects from Azure SDK that contain the error information in a \"body\" field (serialized or not)",
        "Ignore",
        "tslint:disable-next-line: strict-boolean-expressions",
        "split by line ending",
        "Get just the file name, line number and column number",
        "From above example: storageserviceclient.js:751:50",
        "Ignore any lines without a file match (e.g. \"at Generator.next (<anonymous>)\")",
        "Get the function name",
        "From above example: FileService.StorageServiceClient._processResponse",
        "Get the name of the node module (and any sub modules) containing the file",
        "From above example: azure-storage"
    ],
    "docstrings": [
        "* Example line in the stack:\n * at FileService.StorageServiceClient._processResponse (/path/ms-azuretools.vscode-azurestorage-0.6.0/node_modules/azure-storage/lib/common/services/storageserviceclient.js:751:50)\n *\n * Final minified line:\n * FileService.StorageServiceClient._processResponse azure-storage/storageserviceclient.js:751:50",
        "* See https://github.com/microsoft/vscode-cosmosdb/issues/1580 for an example error"
    ],
    "functions": [
        "parseError",
        "convertCodeToError",
        "parseIfJson",
        "parseIfHtml",
        "parseIfXml",
        "getMessage",
        "getCode",
        "unpackErrorsInMessage",
        "unpackErrorFromField",
        "getCallstack",
        "parseIfFileSystemError"
    ],
    "classes": []
}