{
    "identifiers": [
        "Message",
        "createMock",
        "ServiceNameEnum",
        "CoreEventService",
        "ILoggerLog",
        "LoggerService",
        "DiscordMessageScheduleNoonCountService",
        "jest",
        "describe",
        "beforeEach",
        "coreEventService",
        "CoreEventService",
        "loggerService",
        "LoggerService",
        "describe",
        "it",
        "expect",
        "service",
        "DiscordMessageScheduleNoonCountService",
        "expect",
        "service",
        "expect",
        "DiscordMessageScheduleNoonCountService",
        "it",
        "expect",
        "DiscordMessageScheduleNoonCountService",
        "expect",
        "result",
        "service",
        "describe",
        "jest",
        "beforeEach",
        "coreEventServiceNotifyServiceCreatedSpy",
        "jest",
        "coreEventService",
        "it",
        "expect",
        "service",
        "DiscordMessageScheduleNoonCountService",
        "expect",
        "coreEventServiceNotifyServiceCreatedSpy",
        "expect",
        "coreEventServiceNotifyServiceCreatedSpy",
        "ServiceNameEnum",
        "describe",
        "jest",
        "beforeEach",
        "service",
        "DiscordMessageScheduleNoonCountService",
        "loggerServiceDebugSpy",
        "jest",
        "loggerService",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "createMock",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "createMock",
        "createMock",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy",
        "describe",
        "beforeEach",
        "guildMessages",
        "createMock",
        "createMock",
        "createMock",
        "createMock",
        "it",
        "expect",
        "service",
        "guildMessages",
        "expect",
        "loggerServiceDebugSpy",
        "expect",
        "loggerServiceDebugSpy"
    ],
    "literals": [
        "\"discord.js\"",
        "\"ts-auto-mock\"",
        "\"../../../../../enums/service-name.enum\"",
        "\"../../../../core/services/core-event.service\"",
        "\"../../../../logger/interfaces/logger-log\"",
        "\"../../../../logger/services/logger.service\"",
        "\"./discord-message-schedule-noon-count.service\"",
        "../../../../logger/services/chalk/chalk.service",
        "DiscordMessageScheduleNoonCountService",
        "getInstance()",
        "should create a DiscordMessageScheduleNoonCount service",
        "should return the created DiscordMessageScheduleNoonCount service",
        "constructor()",
        "notifyServiceCreated",
        "should notify the DiscordMessageScheduleNoonCount service creation",
        "countChannelsAndGuilds()",
        "debug",
        "when the given guild messages is undefined",
        "should log that no noon message was sent",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent",
        "when the given guild messages is an empty array",
        "should log that no noon message was sent",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent",
        "when the given guild messages is an array with one undefined value",
        "should log that no noon message was sent for the one guild",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-1 guild",
        "when the given guild messages is an array with two undefined values",
        "should log that no noon message was sent for the two guilds",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-2 guilds",
        "when the given guild messages is an array with one empty array",
        "should log that no noon message was sent for the one guild",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-1 guild",
        "when the given guild messages is an array with two empty arrays",
        "should log that no noon message was sent for the two guilds",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-2 guilds",
        "when the given guild messages is an array with one array of one undefined value",
        "should log that no noon message was sent for the one guild",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-1 guild",
        "when the given guild messages is an array with two arrays of one undefined value",
        "should log that no noon message was sent for the two guilds",
        "DiscordMessageScheduleNoonCountService",
        "text-no noon message sent for the value-2 guilds",
        "when the given guild messages is an array with one array of one message",
        "should log that one noon message was sent for one guild of one",
        "DiscordMessageScheduleNoonCountService",
        "text-value-1 noon message sent over value-1 guild of value-1",
        "when the given guild messages is an array with two arrays of one message",
        "should log that two noon messages were sent for two guilds of two",
        "DiscordMessageScheduleNoonCountService",
        "text-value-2 noon messages sent over value-2 guilds of value-2",
        "when it is a mix of guilds with and without messages",
        "should log that four noon messages were sent for three guilds of six",
        "DiscordMessageScheduleNoonCountService",
        "text-value-4 noon messages sent over value-3 guilds of value-6"
    ],
    "variables": [
        "service",
        "coreEventService",
        "loggerService",
        "result",
        "coreEventServiceNotifyServiceCreatedSpy",
        "guildMessages",
        "loggerServiceDebugSpy"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}