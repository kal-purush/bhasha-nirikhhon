{
    "identifiers": [
        "CheBranding",
        "cheBranding",
        "keycloakSettings",
        "angular",
        "e",
        "e",
        "errorMessage",
        "errorMessage",
        "keycloakSettings",
        "hasSSO",
        "keycloakAuth",
        "buildKeycloakConfig",
        "keycloakSettings",
        "loadKeycloakAdapter",
        "keycloakSettings",
        "cheBranding",
        "keycloak",
        "initKeycloak",
        "keycloakAuth",
        "keycloakSettings",
        "keycloakAuth",
        "keycloakAuth",
        "keycloak",
        "keycloak",
        "e",
        "hasSSO",
        "e",
        "getApis",
        "keycloak",
        "e",
        "hasSSO",
        "e",
        "e",
        "keycloakAuth",
        "keycloakSettings",
        "keycloakSettings",
        "theOidcProvider",
        "keycloakSettings",
        "keycloakSettings",
        "keycloakSettings",
        "theOidcProvider",
        "keycloakSettings",
        "keycloakSettings",
        "cheBranding",
        "resolve",
        "reject",
        "script",
        "script",
        "keycloakSettings",
        "script",
        "resolve",
        "script",
        "cheBranding",
        "reject",
        "cheBranding",
        "cheBranding",
        "script",
        "errorMessage",
        "reject",
        "errorMessage",
        "script",
        "keycloakConfig",
        "keycloakSettings",
        "keycloakSettings",
        "theUseNonce",
        "keycloakSettings",
        "theUseNonce",
        "keycloakSettings",
        "resolve",
        "reject",
        "Keycloak",
        "keycloakConfig",
        "location",
        "keycloak",
        "initOptions",
        "initOptions",
        "resolve",
        "keycloak",
        "e",
        "e",
        "e",
        "e",
        "e",
        "error",
        "reject",
        "error",
        "error",
        "error",
        "xhr",
        "keycloak",
        "resolve",
        "reject",
        "keycloak",
        "keycloak",
        "keycloak",
        "xhr",
        "keycloak",
        "resolve",
        "xhr",
        "location",
        "keycloak",
        "reject",
        "resolve",
        "xhr",
        "keycloak",
        "XMLHttpRequest",
        "request",
        "setAuthorizationHeader",
        "request",
        "keycloak",
        "xhr",
        "resolve",
        "reject",
        "xhr",
        "xhr",
        "xhr",
        "resolve",
        "xhr",
        "xhr",
        "reject",
        "xhr",
        "xhr",
        "xhr"
    ],
    "literals": [
        "'use strict'",
        "'../components/branding/che-branding'",
        "'/api/keycloak/settings'",
        "Can't get Keycloak settings:",
        "'che.keycloak.js_adapter_url'",
        "'_keycloak'",
        "${e}<div>Click <a href=\"/\">here</a> to reload page.</div>",
        "'che.keycloak.oidc_provider'",
        "'che.keycloak.auth_server_url'",
        "'che.keycloak.realm'",
        "'che.keycloak.client_id'",
        "'che.keycloak.client_id'",
        "'script'",
        "'che.keycloak.js_adapter_url'",
        "'load'",
        "'error'",
        "'Keycloak adapter loading error.'",
        "<div class=\"header\"><i class=\"fa fa-warning\"></i><p>Certificate Error</p></div>\n          <div class=\"body\">\n            <p>Your ${cheBranding.getProductName()} server may be using a self-signed certificate. To resolve this issue, try to import the servers CA certificate into your browser, as described <a href=\"${cheBranding.getDocs().certificate}\" target=\"_blank\">here</a>.</p>\n            <p>After importing the certificate, refresh your browser.</p>\n            <p><a href=\"/\">Refresh Now</a></p>\n          </div>",
        "'abort'",
        "'Keycloak adapter loading aborted.'",
        "'che.keycloak.use_nonce'",
        "'string'",
        "'che.keycloak.use_nonce'",
        "'true'",
        "'che.keycloak.redirect_url.dashboard'",
        "'oidcDashboardRedirectUrl'",
        "'login-required'",
        "'useNonce'",
        "'email profile'",
        "'redirectUrl'",
        "string",
        "string",
        "${e.error}: ${e.error_description}",
        "''",
        "'Keycloak initialization failed. '",
        "<div class=\"header\">\n          <i class=\"fa fa-warning\"></i>\n          <p>SSO Error</p>\n        </div>\n        <div class=\"body\">\n          <p>We are experiencing some technical difficulties from our SSO${error ? ':' : '.'}</p>\n          ${error ? `<p><code>${error}</code></p>` : ''}\n          <p>Please try <kbd>Shift</kbd>+<kbd>Refresh</kbd></p>\n        </div>",
        "':'",
        "'.'",
        "<p><code>${error}</code></p>",
        "''",
        "'Authorization'",
        "'Bearer '",
        "'Failed to refresh token'",
        "'oidcDashboardRedirectUrl'",
        "'Authorization is needed.'",
        "'GET'",
        "'/api/'",
        "Can't get \"/api/\"",
        "': '",
        "'.'",
        "'<div class=\"header\"><span>Unknown error</span></div>'"
    ],
    "variables": [
        "Keycloak",
        "keycloakAuth",
        "hasSSO",
        "keycloakSettings",
        "errorMessage",
        "keycloak",
        "theOidcProvider",
        "script",
        "errorMessage",
        "theUseNonce",
        "initOptions",
        "keycloak",
        "error",
        "request"
    ],
    "comments": [
        "load keycloak settings",
        "load keycloak adapter",
        "initialize keycloak",
        "tslint:disable",
        "tslint:enable",
        "test if API is reachable"
    ],
    "docstrings": [
        "* Copyright (c) 2015-2018 Red Hat, Inc.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *   Red Hat, Inc. - initial API and implementation"
    ],
    "functions": [
        "keycloakSetup",
        "buildKeycloakConfig",
        "loadKeycloakAdapter",
        "initKeycloak",
        "setAuthorizationHeader",
        "getApis"
    ],
    "classes": []
}