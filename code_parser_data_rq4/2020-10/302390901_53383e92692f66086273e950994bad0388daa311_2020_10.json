{
    "identifiers": [
        "java",
        "io",
        "java",
        "util",
        "Scanner",
        "client",
        "common",
        "ocsf",
        "server",
        "ConnectionToClient",
        "DEFAULT_PORT",
        "server",
        "fromConsole",
        "port",
        "server",
        "port",
        "fromConsole",
        "exception",
        "display",
        "exit",
        "message",
        "message",
        "fromConsole",
        "nextLine",
        "message",
        "toString",
        "charAt",
        "message",
        "contains",
        "command",
        "message",
        "substring",
        "command",
        "display",
        "server",
        "close",
        "server",
        "stopListening",
        "server",
        "stopListening",
        "clientThreadList",
        "server",
        "getClientConnections",
        "i",
        "i",
        "clientThreadList",
        "length",
        "i",
        "clientThreadList",
        "i",
        "close",
        "e",
        "display",
        "toString",
        "server",
        "getPort",
        "server",
        "isListening",
        "server",
        "listen",
        "server",
        "isListening",
        "display",
        "display",
        "message",
        "contains",
        "command",
        "message",
        "split",
        "para",
        "message",
        "split",
        "command",
        "server",
        "isListening",
        "server",
        "setPort",
        "parseInt",
        "para",
        "display",
        "server",
        "getPort",
        "server",
        "isListening",
        "display",
        "display",
        "display",
        "message",
        "server",
        "sendToAllClients",
        "message",
        "ex",
        "message",
        "message",
        "args",
        "port",
        "DEFAULT_PORT",
        "port",
        "parseInt",
        "args",
        "t",
        "serverChat",
        "port",
        "serverChat",
        "accept"
    ],
    "literals": [
        "\"ERROR - Could not listen for clients!\"",
        "\" \"",
        "\"quit\"",
        "\"Closing program.\"",
        "\"stop\"",
        "\"close\"",
        "\"getport\"",
        "\"start\"",
        "\"Error: server is already listening for connections.\"",
        "\"Not a command.\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"#setport\"",
        "\"new port: \"",
        "\"Error: server is already running.\"",
        "\"Not a valid command.\"",
        "\"SERVER MSG> \"",
        "\"SERVER MSG> \"",
        "\"Unexpected error while reading from console!\"",
        "\"> \"",
        "\"Wrong input. Using default port.\""
    ],
    "variables": [
        "server",
        "fromConsole",
        "message"
    ],
    "comments": [
        "Class variables *************************************************",
        "Instance variables **********************************************",
        "Constructors ****************************************************",
        "Create scanner object to read from console",
        "Instance methods ************************************************",
        "if the first character of the input is a #",
        "only one word input",
        "command is the second part of the input (after #)",
        "kills server",
        "stop listening for new clients",
        "array of all clients",
        "Close the client sockets of the already connected clients",
        "if used # but not a valid command",
        "two word input",
        "if the input isn't a command",
        "Class methods ***************************************************",
        "initialize port number to default",
        "get port from command line",
        "Wait for console data",
        "End of ServerConsole class"
    ],
    "docstrings": [
        "* The default port to connect on.",
        "* The instance of the server that created this ServerConsole.",
        "* Scanner to read from the console",
        "* Constructs an instance of the ClientConsole UI.\n   *\n   * @param port The port to connect on.",
        "* This method waits for input from the console.  Once it is \n   * received, it sends it to the client's message handler.",
        "* This method overrides the method in the ChatIF interface.  It\n   * displays a message onto the screen.\n   *\n   * @param message The string to be displayed.",
        "* This method is responsible for the creation of the Client UI.\n   *\n   * @param args[0] The host to connect to."
    ],
    "functions": [
        "ServerConsole",
        "accept",
        "display",
        "main"
    ],
    "classes": [
        "ServerConsole"
    ]
}