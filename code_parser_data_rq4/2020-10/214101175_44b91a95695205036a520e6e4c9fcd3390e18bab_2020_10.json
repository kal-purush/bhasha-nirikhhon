{
    "identifiers": [
        "DSA",
        "Algorithms",
        "Sorting",
        "DSA",
        "DataStructures",
        "Interfaces",
        "Collections",
        "Generic",
        "Linq",
        "DSA",
        "DataStructures",
        "Graphs",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "IComparable",
        "TVertex",
        "TVertex",
        "TVertex",
        "TVertex",
        "TVertex",
        "TVertex",
        "VerticesCount",
        "vertex",
        "adjacencyList",
        "Keys",
        "vertices",
        "Add",
        "vertex",
        "vertices",
        "TVertex",
        "TVertex",
        "TVertex",
        "VerticesCount",
        "vertex",
        "adjacencyList",
        "Keys",
        "vertices",
        "Add",
        "vertex",
        "vertices",
        "Count",
        "vertices",
        "QuickSort",
        "vertices",
        "UnweightedEdge",
        "TVertex",
        "kvp",
        "adjacencyList",
        "adjacent",
        "kvp",
        "Value",
        "UnweightedEdge",
        "TVertex",
        "kvp",
        "Key",
        "adjacent",
        "adjacencyList",
        "TVertex",
        "TVertex",
        "EdgesCount",
        "VerticesCount",
        "TVertex",
        "firstVertex",
        "TVertex",
        "secondVertex",
        "Equals",
        "firstVertex",
        "secondVertex",
        "AddVertex",
        "firstVertex",
        "adjacencyList",
        "firstVertex",
        "Contains",
        "secondVertex",
        "adjacencyList",
        "firstVertex",
        "Add",
        "secondVertex",
        "AddVertex",
        "secondVertex",
        "adjacencyList",
        "secondVertex",
        "Add",
        "firstVertex",
        "EdgesCount",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "adjacencyList",
        "Add",
        "vertex",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "vertices",
        "vertex",
        "vertices",
        "AddVertex",
        "vertex",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "adjacencyList",
        "vertex",
        "ToList",
        "adjacent",
        "Count",
        "i",
        "adjacent",
        "Count",
        "i",
        "UnweightedEdge",
        "TVertex",
        "adjacent",
        "i",
        "vertex",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "adjacencyList",
        "vertex",
        "ToList",
        "adjacent",
        "Count",
        "i",
        "adjacent",
        "Count",
        "i",
        "UnweightedEdge",
        "TVertex",
        "vertex",
        "adjacent",
        "i",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "adjacencyList",
        "vertex",
        "ToList",
        "adjacent",
        "Count",
        "adjacent",
        "QuickSort",
        "i",
        "adjacent",
        "Count",
        "i",
        "UnweightedEdge",
        "TVertex",
        "adjacent",
        "i",
        "vertex",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "adjacencyList",
        "vertex",
        "ToList",
        "adjacent",
        "Count",
        "adjacent",
        "QuickSort",
        "i",
        "adjacent",
        "Count",
        "i",
        "UnweightedEdge",
        "TVertex",
        "vertex",
        "adjacent",
        "i",
        "TVertex",
        "firstVertex",
        "TVertex",
        "secondVertex",
        "adjacencyList",
        "ContainsKey",
        "firstVertex",
        "adjacencyList",
        "firstVertex",
        "Contains",
        "secondVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "TVertex",
        "firstVertex",
        "TVertex",
        "secondVertex",
        "adjacencyList",
        "ContainsKey",
        "firstVertex",
        "adjacencyList",
        "firstVertex",
        "Contains",
        "secondVertex",
        "adjacencyList",
        "firstVertex",
        "Remove",
        "secondVertex",
        "adjacencyList",
        "secondVertex",
        "Remove",
        "firstVertex",
        "EdgesCount",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "destinationVertex",
        "adjacencyList",
        "vertex",
        "adjacencyList",
        "destinationVertex",
        "Remove",
        "vertex",
        "EdgesCount",
        "adjacencyList",
        "Remove",
        "vertex",
        "VerticesCount",
        "TVertex",
        "vertex",
        "ContainsVertex",
        "vertex",
        "KeyNotFoundException",
        "adjacencyList",
        "vertex",
        "Count",
        "adjacencyList",
        "Clear",
        "EdgesCount",
        "VerticesCount",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "TVertex",
        "TVertex",
        "adjacencyList",
        "Values",
        "Max",
        "x",
        "Count",
        "queue",
        "Enqueue",
        "vertex",
        "visited",
        "Add",
        "vertex",
        "queue",
        "Count",
        "queue",
        "Dequeue",
        "curVertex",
        "adjacentVertex",
        "adjacencyList",
        "curVertex",
        "visited",
        "Contains",
        "adjacentVertex",
        "sortedLevel",
        "sCount",
        "adjacentVertex",
        "sCount",
        "sortedLevel",
        "QuickSort",
        "sCount",
        "i",
        "sCount",
        "i",
        "queue",
        "Enqueue",
        "sortedLevel",
        "i",
        "visited",
        "Add",
        "sortedLevel",
        "i",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "TVertex",
        "TVertex",
        "adjacencyList",
        "Values",
        "Max",
        "x",
        "Count",
        "queue",
        "Enqueue",
        "vertex",
        "visited",
        "Add",
        "vertex",
        "queue",
        "Count",
        "queue",
        "Dequeue",
        "adjacentVertex",
        "adjacencyList",
        "curVertex",
        "visited",
        "Contains",
        "adjacentVertex",
        "sortedLevel",
        "sCount",
        "adjacentVertex",
        "sCount",
        "sortedLevel",
        "QuickSort",
        "sCount",
        "i",
        "sCount",
        "i",
        "queue",
        "Enqueue",
        "sortedLevel",
        "i",
        "visited",
        "Add",
        "sortedLevel",
        "i",
        "UnweightedEdge",
        "TVertex",
        "curVertex",
        "sortedLevel",
        "i",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "TVertex",
        "TVertex",
        "adjacencyList",
        "Values",
        "Max",
        "x",
        "Count",
        "stack",
        "Push",
        "vertex",
        "stack",
        "Count",
        "stack",
        "Pop",
        "visited",
        "Contains",
        "curVertex",
        "curVertex",
        "visited",
        "Add",
        "curVertex",
        "adjacentVertex",
        "adjacencyList",
        "curVertex",
        "visited",
        "Contains",
        "adjacentVertex",
        "sortedLevel",
        "sCount",
        "adjacentVertex",
        "sCount",
        "sortedLevel",
        "QuickSortDescending",
        "sCount",
        "i",
        "sCount",
        "i",
        "stack",
        "Push",
        "sortedLevel",
        "i",
        "UnweightedEdge",
        "TVertex",
        "TVertex",
        "vertex",
        "adjacencyList",
        "ContainsKey",
        "vertex",
        "KeyNotFoundException",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "VerticesCount",
        "TVertex",
        "TVertex",
        "TVertex",
        "adjacencyList",
        "Values",
        "Max",
        "x",
        "Count",
        "adjacentVertex",
        "adjacencyList",
        "vertex",
        "sortedLevel",
        "sCount",
        "adjacentVertex",
        "sCount",
        "sortedLevel",
        "QuickSortDescending",
        "sCount",
        "i",
        "sCount",
        "i",
        "stackSource",
        "Push",
        "vertex",
        "stackDestination",
        "Push",
        "sortedLevel",
        "i",
        "visited",
        "Add",
        "vertex",
        "stackDestination",
        "Count",
        "stackSource",
        "Pop",
        "stackDestination",
        "Pop",
        "visited",
        "Contains",
        "curDestinationVertex",
        "UnweightedEdge",
        "TVertex",
        "curSourceVertex",
        "curDestinationVertex",
        "visited",
        "Add",
        "curDestinationVertex",
        "sCount",
        "adjacentVertex",
        "adjacencyList",
        "curDestinationVertex",
        "visited",
        "Contains",
        "adjacentVertex",
        "sortedLevel",
        "sCount",
        "adjacentVertex",
        "sCount",
        "sortedLevel",
        "QuickSortDescending",
        "sCount",
        "i",
        "sCount",
        "i",
        "stackSource",
        "Push",
        "curDestinationVertex",
        "stackDestination",
        "Push",
        "sortedLevel",
        "i",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "Edges",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "IncomingEdges",
        "vertex",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "OutgoingEdges",
        "vertex",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "IncomingEdgesSorted",
        "vertex",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "OutgoingEdgesSorted",
        "vertex",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "BreadthFirstSearchEdges",
        "vertex",
        "IEdge",
        "TVertex",
        "IGraph",
        "TVertex",
        "TVertex",
        "vertex",
        "DepthFirstSearchEdges",
        "vertex"
    ],
    "literals": [
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\"",
        "\"Vertex does not belong to the graph!\""
    ],
    "variables": [
        "adjacencyList",
        "IsDirected",
        "IsWeighted",
        "EdgesCount",
        "VerticesCount",
        "Vertices",
        "vertices",
        "VerticesSorted",
        "vertices",
        "Edges",
        "adjacent",
        "i",
        "adjacent",
        "i",
        "adjacent",
        "i",
        "adjacent",
        "i",
        "queue",
        "visited",
        "sortedLevel",
        "TVertex",
        "curVertex",
        "sCount",
        "i",
        "queue",
        "visited",
        "sortedLevel",
        "TVertex",
        "curVertex",
        "sCount",
        "i",
        "stack",
        "visited",
        "sortedLevel",
        "TVertex",
        "curVertex",
        "sCount",
        "i",
        "stackSource",
        "stackDestination",
        "visited",
        "sortedLevel",
        "sCount",
        "i",
        "TVertex",
        "curSourceVertex",
        "TVertex",
        "curDestinationVertex",
        "i",
        "Edges"
    ],
    "comments": [
        "Represents an undirected and unweighted adjacency list graph with optimized amortized O(1) edge lookup and removal.",
        "</summary>",
        "<typeparam name=\"TVertex\">The data type of the vertices. TVertex implements <see cref=\"IComparable{T}\"/>.</typeparam>",
        "Represents the connections between each vertex and its neighbours.",
        "</summary>",
        "Determines whether the <see cref=\"ALGraph{TVertex}\"/> is directed.",
        "</summary>",
        "Deteremines whether the <see cref=\"ALGraph{TVertex}\"/> is weighted.",
        "</summary>",
        "Gets the number of edges in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "Gets the number of vertices in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "Gets the vertices in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "Gets the vertices in the <see cref=\"ALGraph{TVertex}\"/> in sorted ascending order.",
        "</summary>",
        "Gets the edges in the <see cref=\"ALGraph{TVertex}\"/>. For each edge in the graph returns two <see cref=\"UnweightedEdge{TVertex}\"/> objects with swapped source and destination vertices.",
        "</summary>",
        "Creates a new instance of the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "Adds an edge defined by the given vertices to the <see cref=\"ALGraph{TVertex}\"/>. If the vertices are not present in the graph they will be added.",
        "</summary>",
        "<param name=\"firstVertex\">The first vertex.</param>",
        "<param name=\"secondVertex\">The second vertex.</param>",
        "<returns>Returns true if the edge was added successfully; otherwise false. Also returns false if edge already exists.</returns>",
        "Add first vertex if it is not in the graph",
        "if the vertices are connected",
        "we return false",
        "Here the firstVertex is in the graph, so we connect it with the second",
        "Add the other way around. Graph is not directed.",
        "Counted as one edge because graph is undirected",
        "Adds a vertex to the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"vertex\">The vertex to add.</param>",
        "<returns>Returns true if the edge was added successfully; otherwise false. Also returns false if the vertex already exists.</returns>",
        "Adds the specified collection of vertices to the <see cref=\"ALGraph{TVertex}\"/>. If some of the vertices are already in the graph exception is not thrown.",
        "</summary>",
        "<param name=\"vertices\">Adds the <see cref=\"IEnumerable{T}\"/> of vertices to the graph.</param>",
        "Returns the incoming edges of the given vertex.",
        "</summary>",
        "<param name=\"vertex\">The vertex whose incoming edges are returned.</param>",
        "<returns>Returns a <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> of all incoming edges of the given vertex.</returns>",
        "Returns the outgoing edges of the given vertex sorted.",
        "</summary>",
        "<param name=\"vertex\">The vertex whose outgoing edges are returned.</param>",
        "<returns>Returns a <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> of all outgoing edges of the given vertex.</returns>",
        "Returns the incoming edges of the given vertex sorted by their source vertex.",
        "</summary>",
        "<param name=\"vertex\">The vertex whose incoming edges are returned.</param>",
        "<returns>Returns a <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> of all incoming edges of the given vertex.</returns>",
        "Returns the outgoing edges of the given vertex sorted by their destination vertex.",
        "</summary>",
        "<param name=\"vertex\">The vertex whose outgoing edges are returned.</param>",
        "<returns>Returns a <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> of all outgoing edges of the given vertex.</returns>",
        "Determines whether the edge is presented in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"firstVertex\">The first vertex of the edge.</param>",
        "<param name=\"secondVertex\">The second vertex of the edge.</param>",
        "<returns>Returns true if the edge is presented in the <see cref=\"ALGraph{TVertex}\"/>; false otherwise.</returns>",
        "Determines whether the vertex is presented in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"vertex\">The vertex to see if presented in the <see cref=\"ALGraph{TVertex}\"/>.</param>",
        "<returns>Returns true if the vertex is presented in the <see cref=\"ALGraph{TVertex}\"/>; false otherwise.</returns>",
        "Removes the edge defined by the given vertices from the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"firstVertex\">The first vertex.</param>",
        "<param name=\"secondVertex\">The second vertex.</param>",
        "<returns>Returns true if the edge was removed successfully; otherwise false. Also returns false if the vertices are not present in this graph or the edge does not exist.</returns>",
        "Counted as one edge because graph is undirected",
        "Removes the given vertex from the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"vertex\">The vertex to remove.</param>",
        "<returns>Returns true if the vertex was removed successfully; otherwise false. Also returns false if the vertex does not exist.</returns>",
        "Remove incoming edges",
        "Remove vertex",
        "Returns the degree of the given vertex presented in the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "<param name=\"vertex\">The vertex to calculate its degeree.</param>",
        "<returns>Returns the degree of the given vertex.</returns>",
        "Removes all edges and vertices from the <see cref=\"ALGraph{TVertex}\"/>.",
        "</summary>",
        "Breadth-first search of the <see cref=\"ALGraph{TVertex}\"/> with sorted levels. Returns <see cref=\"IEnumerable{T}\"/> of the vertices.",
        "</summary>",
        "<param name=\"vertex\">The vertex from which the breadth-first search starts.</param>",
        "<returns>Returns <see cref=\"IEnumerable{T}\"/> of the vertices.</returns>",
        "Breadth-first search of the <see cref=\"ALGraph{TVertex}\"/> with sorted levels. Returns <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> representing the edges of the graph.",
        "</summary>",
        "<param name=\"vertex\">The vertex from which the breadth-first search starts.</param>",
        "<returns>.Returns <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> representing the edges of the graph.</returns>",
        "Depth-first search of the <see cref=\"ALGraph{TVertex}\"/> with sorted levels. Returns <see cref=\"IEnumerable{T}\"/> of the vertices.",
        "</summary>",
        "<param name=\"vertex\">The vertex from which the depth-first search starts.</param>",
        "<returns>Returns <see cref=\"IEnumerable{T}\"/> of the vertices.</returns>",
        "descending sort because we add them in stack",
        "Depth-first search of the <see cref=\"ALGraph{TVertex}\"/> with sorted levels. Returns <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> representing the edges of the graph.",
        "</summary>",
        "<param name=\"vertex\">The vertex from which the depth-first search starts.</param>",
        "<returns>.Returns <see cref=\"IEnumerable{T}\"/> of <see cref=\"UnweightedEdge{TVertex}\"/> representing the edges of the graph.</returns>",
        "Add vertex neighbours to stack",
        "descending sort beacause we add them in stack",
        "visited.Add(curVertex);",
        "descending sort beacause we add them in stack"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ALGraph",
        "AddEdge",
        "AddVertex",
        "AddVertices",
        "IncomingEdges",
        "OutgoingEdges",
        "IncomingEdgesSorted",
        "OutgoingEdgesSorted",
        "ContainsEdge",
        "ContainsVertex",
        "RemoveEdge",
        "RemoveVertex",
        "Degree",
        "Clear",
        "BreadthFirstSearch",
        "BreadthFirstSearchEdges",
        "DepthFirstSearch",
        "DepthFirstSearchEdges",
        "IncomingEdges",
        "OutgoingEdges",
        "IncomingEdgesSorted",
        "OutgoingEdgesSorted",
        "BreadthFirstSearchEdges",
        "DepthFirstSearchEdges"
    ],
    "classes": [
        "ALGraph"
    ]
}