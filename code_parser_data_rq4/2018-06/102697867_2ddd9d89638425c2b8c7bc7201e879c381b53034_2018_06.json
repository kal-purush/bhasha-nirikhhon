{
    "identifiers": [
        "os",
        "pytest",
        "orion",
        "core",
        "io",
        "convert",
        "GenericConverter",
        "infer_converter_from_file_type",
        "JSONConverter",
        "YAMLConverter",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "yaml_sample_path",
        "infer_converter_from_file_type",
        "yaml_sample_path",
        "isinstance",
        "yaml",
        "YAMLConverter",
        "json_sample_path",
        "infer_converter_from_file_type",
        "json_sample_path",
        "isinstance",
        "json",
        "JSONConverter",
        "unknown_type_sample_path",
        "infer_converter_from_file_type",
        "unknown_type_sample_path",
        "isinstance",
        "converter",
        "GenericConverter",
        "pytest",
        "fixture",
        "GenericConverter",
        "expression_prefix",
        "unknown_type_sample_path",
        "generic_converter",
        "generic_converter",
        "parse",
        "unknown_type_sample_path",
        "ret",
        "generic_converter",
        "template",
        "generic_converter",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "generic_converter",
        "parse",
        "BAD_UNKNOWN_SAMPLE_1",
        "exc",
        "generic_converter",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "generic_converter",
        "parse",
        "BAD_UNKNOWN_SAMPLE_2",
        "exc",
        "generic_converter",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "generic_converter",
        "parse",
        "BAD_UNKNOWN_SAMPLE_3",
        "exc",
        "generic_converter",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "pytest",
        "raises",
        "ValueError",
        "exc",
        "generic_converter",
        "parse",
        "BAD_UNKNOWN_SAMPLE_4",
        "exc",
        "tmpdir",
        "generic_converter",
        "unknown_type_sample_path",
        "generic_converter",
        "parse",
        "unknown_type_sample_path",
        "tmpdir",
        "join",
        "generic_converter",
        "generate",
        "output_file",
        "data",
        "open",
        "output_file",
        "f",
        "f",
        "read"
    ],
    "literals": [
        "'o~'",
        "'lalala'",
        "'o~uniform(1, 3, shape=(100, 3))'",
        "'lala'",
        "'la'",
        "'o~uniform(1, 3, shape=(100, 3))'",
        "'l2a'",
        "'o~+gaussian(0, 0.1, shape=(100, 3))'",
        "''",
        "'lala'",
        "'iela'",
        "'o~uniform(1, 3, shape=(100, 3))'",
        "''",
        "'iela'",
        "'o~uniform(1, 3, shape=(100, 3))'",
        "'aaalispera'",
        "'o~normal(3, 1)'",
        "'a'",
        "'o~normal(5, 3)'",
        "'b'",
        "'o~>a_serious_name'",
        "'a_serious_name'",
        "'o~-'",
        "'another_serious_name'",
        "'o~loguniform(0.001, 0.5)'",
        "'..'",
        "'bad_config1.unknown_type'",
        "'/lala/la'",
        "'..'",
        "'bad_config2.unknown_type'",
        "'lala/la'",
        "'..'",
        "'bad_config3.unknown_type'",
        "'lala'",
        "'..'",
        "'bad_config4.unknown_type'",
        "'lala'",
        "\"output.lalal\"",
        "'lalala'",
        "'ispi'",
        "'lala'",
        "'la'",
        "'l2a'",
        "'+gaussian(0, 0.1, shape=(100, 3))'",
        "''",
        "'lala'",
        "'iela'",
        "''",
        "'iela'",
        "'aaalispera'",
        "'a'",
        "'b'",
        "'o~>a_serious_name'",
        "'a_serious_name'",
        "'o~-'",
        "'another_serious_name'"
    ],
    "variables": [
        "TEST_DIR",
        "yaml",
        "json",
        "converter",
        "ret",
        "BAD_UNKNOWN_SAMPLE_1",
        "BAD_UNKNOWN_SAMPLE_2",
        "BAD_UNKNOWN_SAMPLE_3",
        "BAD_UNKNOWN_SAMPLE_4",
        "output_file",
        "data"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"Example usage and tests for :mod:`orion.core.io.converter`.\"\"\"",
        "\"\"\"Infer a YAMLConverter from file path string.\"\"\"",
        "\"\"\"Infer a JSONConverter from file path string.\"\"\"",
        "\"\"\"Check what happens if an unknown config type is given.\"\"\"",
        "\"\"\"Return a generic converter.\"\"\"",
        "\"\"\"Test functionality of generic converter of unknown configuration file type.\"\"\"",
        "\"\"\"Test parsing method.\"\"\"",
        "\"\"\"{lalala!s}\n\n{/lala/la!s}\n{//lala/iela!s}\n{//lala//iela!s}\n\na:\n   b:\n    [asdfa~/Iamapath/dont_capture_me,\n      ~/Iamapath/dont_capture_me]\n\nyo:\n           {aaalispera!s}\n\n[naedw]\na_var={a!s}\n\n~\n\n[naekei:naedw]\nother_var = ~\n# Rename it who_names_their_variables_a_seriously\na_var = {b!s}\n\n{{'oups':\n# remove it\n'{a_serious_name!s}',\n'iela':'{another_serious_name!s}'\n}}\n\n{lala/l2a!s}\n\"\"\"",
        "\"\"\"Check that conflict is reported when duplicates are present.\"\"\"",
        "\"\"\"Check that conflict is reported even when more sneaky duplicate happens.\"\"\"",
        "\"\"\"Check that conflict is reported if a namespace points is both and not final.\"\"\"",
        "\"\"\"Check that conflict is reported if a namespace points is both and not final.\"\"\"",
        "\"\"\"Check generation of a particular instance of configuration.\"\"\"",
        "\"\"\"ispi\n\n5\n1\n2\n\na:\n   b:\n    [asdfa~/Iamapath/dont_capture_me,\n      ~/Iamapath/dont_capture_me]\n\nyo:\n           3\n\n[naedw]\na_var=4\n\n~\n\n[naekei:naedw]\nother_var = ~\n# Rename it who_names_their_variables_a_seriously\na_var = o~>a_serious_name\n\n{'oups':\n# remove it\n'o~-',\n'iela':'[1, 3]'\n}\n\n+gaussian(0, 0.1, shape=(100, 3))\n\"\"\""
    ],
    "functions": [
        "test_infer_a_yaml_converter",
        "test_infer_a_json_converter",
        "test_unknown_file_ext",
        "generic_converter",
        "test_parse",
        "test_bad_parse_1",
        "test_bad_parse_2",
        "test_bad_parse_3",
        "test_bad_parse_4",
        "test_generate"
    ],
    "classes": [
        "TestGenericConverter"
    ]
}