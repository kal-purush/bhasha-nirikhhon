{
    "identifiers": [
        "Collections",
        "Concurrent",
        "Collections",
        "Generic",
        "Threading",
        "Threading",
        "Tasks",
        "Microsoft",
        "Extensions",
        "Logging",
        "Orleans",
        "CodeGeneration",
        "Orleans",
        "Runtime",
        "Orleans",
        "Serialization",
        "Orleans",
        "CancellationTokenSource",
        "ConcurrentDictionary",
        "GuidId",
        "LocalObjectData",
        "ConcurrentDictionary",
        "GuidId",
        "LocalObjectData",
        "Func",
        "IRuntimeClient",
        "runtimeClient",
        "SerializationManager",
        "serializationManager",
        "ILogger",
        "InvokableObjectManager",
        "logger",
        "runtimeClient",
        "runtimeClient",
        "serializationManager",
        "serializationManager",
        "logger",
        "logger",
        "dispatchFunc",
        "LocalObjectMessagePumpAsync",
        "LocalObjectData",
        "o",
        "IAddressable",
        "obj",
        "GuidId",
        "objectId",
        "IGrainMethodInvoker",
        "invoker",
        "localObjects",
        "TryAdd",
        "objectId",
        "LocalObjectData",
        "obj",
        "objectId",
        "invoker",
        "GuidId",
        "objectId",
        "localObjects",
        "TryRemove",
        "objectId",
        "LocalObjectData",
        "ignored",
        "Message",
        "message",
        "message",
        "TargetObserverId",
        "observerId",
        "logger",
        "ErrorCode",
        "ProxyClient_OGC_TargetNotFound_2",
        "Format",
        "message",
        "localObjects",
        "TryGetValue",
        "observerId",
        "objectData",
        "Invoke",
        "objectData",
        "message",
        "logger",
        "ErrorCode",
        "ProxyClient_OGC_TargetNotFound",
        "Format",
        "message",
        "TargetGrain",
        "message",
        "LocalObjectData",
        "objectData",
        "Message",
        "message",
        "IAddressable",
        "objectData",
        "LocalObject",
        "Target",
        "obj",
        "logger",
        "Warn",
        "ErrorCode",
        "Runtime_Error_100162",
        "Format",
        "objectData",
        "ObserverId",
        "message",
        "TryDeregister",
        "objectData",
        "ObserverId",
        "objectData",
        "Messages",
        "objectData",
        "Messages",
        "Enqueue",
        "message",
        "start",
        "objectData",
        "Running",
        "objectData",
        "Running",
        "logger",
        "IsEnabled",
        "LogLevel",
        "Trace",
        "logger",
        "Trace",
        "message",
        "start",
        "start",
        "Factory",
        "StartNew",
        "dispatchFunc",
        "objectData",
        "CancellationToken",
        "TaskCreationOptions",
        "DenyChildAttach",
        "TaskScheduler",
        "Default",
        "Ignore",
        "LocalObjectData",
        "objectData",
        "objectData",
        "Messages",
        "objectData",
        "Messages",
        "Count",
        "objectData",
        "Running",
        "message",
        "objectData",
        "Messages",
        "Dequeue",
        "ExpireMessageIfExpired",
        "message",
        "MessagingStatisticsGroup",
        "Phase",
        "Invoke",
        "RequestContextExtensions",
        "Import",
        "message",
        "RequestContextData",
        "InvokeMethodRequest",
        "message",
        "GetDeserializedBody",
        "serializationManager",
        "IAddressable",
        "objectData",
        "LocalObject",
        "Target",
        "objectData",
        "Invoker",
        "Invoke",
        "targetOb",
        "request",
        "resultPromise",
        "resultObject",
        "resultPromise",
        "exc",
        "caught",
        "exc",
        "caught",
        "ReportException",
        "message",
        "caught",
        "message",
        "Direction",
        "Message",
        "Directions",
        "OneWay",
        "SendResponseAsync",
        "message",
        "resultObject",
        "Message",
        "message",
        "MessagingStatisticsGroup",
        "Phase",
        "phase",
        "message",
        "IsExpired",
        "message",
        "DropExpiredMessage",
        "phase",
        "Diagnostics",
        "CodeAnalysis",
        "SuppressMessage",
        "Message",
        "message",
        "resultObject",
        "ExpireMessageIfExpired",
        "message",
        "MessagingStatisticsGroup",
        "Phase",
        "Respond",
        "deepCopy",
        "serializationManager",
        "DeepCopy",
        "resultObject",
        "exc2",
        "runtimeClient",
        "SendResponse",
        "message",
        "Response",
        "ExceptionResponse",
        "exc2",
        "logger",
        "Warn",
        "ErrorCode",
        "ProxyClient_OGC_SendResponseFailed",
        "exc2",
        "runtimeClient",
        "SendResponse",
        "message",
        "Response",
        "deepCopy",
        "Diagnostics",
        "CodeAnalysis",
        "SuppressMessage",
        "Message",
        "message",
        "exception",
        "InvokeMethodRequest",
        "message",
        "GetDeserializedBody",
        "serializationManager",
        "message",
        "Direction",
        "Message",
        "Directions",
        "OneWay",
        "logger",
        "ErrorCode",
        "ProxyClient_OGC_UnhandledExceptionInOneWayInvoke",
        "Format",
        "request",
        "MethodId",
        "request",
        "InterfaceId",
        "exception",
        "Message",
        "Directions",
        "Request",
        "deepCopy",
        "serializationManager",
        "DeepCopy",
        "exception",
        "ex2",
        "runtimeClient",
        "SendResponse",
        "message",
        "Response",
        "ExceptionResponse",
        "ex2",
        "logger",
        "Warn",
        "ErrorCode",
        "ProxyClient_OGC_SendExceptionResponseFailed",
        "ex2",
        "Response",
        "ExceptionResponse",
        "deepCopy",
        "runtimeClient",
        "SendResponse",
        "message",
        "response",
        "InvalidOperationException",
        "message",
        "request",
        "exception",
        "Message",
        "IAddressable",
        "obj",
        "GuidId",
        "observerId",
        "IGrainMethodInvoker",
        "invoker",
        "LocalObject",
        "WeakReference",
        "obj",
        "ObserverId",
        "observerId",
        "Invoker",
        "invoker",
        "Messages",
        "Message",
        "Running",
        "disposed",
        "Utils",
        "SafeExecute",
        "tokenSource",
        "Cancel",
        "Utils",
        "SafeExecute",
        "tokenSource",
        "Dispose"
    ],
    "literals": [
        "\"Did not find TargetObserverId header in the message = {0}. A request message to a client is expected to have an observerId.\"",
        "\"Unexpected target grain in request: {0}. Message={1}\"",
        "\"Object associated with Observer ID {0} has been garbage collected. Deleting object reference and unregistering it. Message = {1}\"",
        "\"Microsoft.Design\"",
        "\"CA1031:DoNotCatchGeneralExceptionTypes\"",
        "\"Exception trying to send a response.\"",
        "\"Microsoft.Design\"",
        "\"CA1031:DoNotCatchGeneralExceptionTypes\"",
        "\"Exception during invocation of notification method {0}, interface {1}. Ignoring exception because this is a one way request.\"",
        "\"Exception trying to send an exception response\""
    ],
    "variables": [
        "CancellationTokenSource",
        "disposed",
        "localObjects",
        "IRuntimeClient",
        "runtimeClient",
        "ILogger",
        "logger",
        "SerializationManager",
        "serializationManager",
        "dispatchFunc",
        "GuidId",
        "observerId",
        "obj",
        "start",
        "Message",
        "message",
        "request",
        "targetOb",
        "resultObject",
        "caught",
        "resultPromise",
        "deepCopy",
        "request",
        "deepCopy",
        "response",
        "WeakReference",
        "LocalObject",
        "IGrainMethodInvoker",
        "Invoker",
        "GuidId",
        "ObserverId",
        "Messages",
        "Running",
        "tokenSource"
    ],
    "comments": [
        "Remove from the dictionary record for the garbage collected object? But now we won't be able to detect invalid dispatch IDs anymore.",
        "Try to remove. If it's not there, we don't care.",
        "we want to ensure that the message pump operates asynchronously",
        "with respect to the current thread. see",
        "http://channel9.msdn.com/Events/TechEd/Europe/2013/DEV-B317#fbid=aIWUq0ssW74",
        "at position 54:45.",
        "",
        "according to the information posted at:",
        "http://stackoverflow.com/questions/12245935/is-task-factory-startnew-guaranteed-to-use-another-thread-than-the-calling-thr",
        "this idiom is dependent upon the a TaskScheduler not implementing the",
        "override QueueTask as task inlining (as opposed to queueing). this seems",
        "implausible to the author, since none of the .NET schedulers do this and",
        "it is considered bad form (the OrleansTaskScheduler does not do this).",
        "",
        "if, for some reason this doesn't hold true, we can guarantee what we",
        "want by passing a placeholder continuation token into Task.StartNew()",
        "instead. i.e.:",
        "",
        "return Task.StartNew(() => ..., new CancellationToken());",
        "We pass these options to Task.Factory.StartNew as they make the call identical",
        "to Task.Run. See: https://blogs.msdn.microsoft.com/pfxteam/2011/10/24/task-run-vs-task-factory-startnew/",
        "exceptions thrown within this scope are not considered to be thrown from user code",
        "and not from runtime code.",
        "it will be null for one way messages",
        "the exception needs to be reported in the log or propagated back to the caller.",
        "ignore, keep looping.",
        "we're expected to notify the caller if the deep copy failed.",
        "the deep-copy succeeded.",
        "we're expected to notify the caller if the deep copy failed.",
        "the deep-copy succeeded."
    ],
    "docstrings": [],
    "functions": [
        "InvokableObjectManager",
        "TryRegister",
        "TryDeregister",
        "Dispatch",
        "Invoke",
        "LocalObjectMessagePumpAsync",
        "ExpireMessageIfExpired",
        "SendResponseAsync",
        "ReportException",
        "LocalObjectData",
        "Dispose"
    ],
    "classes": [
        "InvokableObjectManager",
        "LocalObjectData"
    ]
}