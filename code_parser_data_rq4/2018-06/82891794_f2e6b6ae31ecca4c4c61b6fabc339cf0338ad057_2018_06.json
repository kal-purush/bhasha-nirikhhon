{
    "identifiers": [
        "sys",
        "ast",
        "warnings",
        "pathlib",
        "click",
        "numpy",
        "np",
        "_dedup",
        "_fileio",
        "_pairsam_format",
        "_headerops",
        "cli",
        "common_io_options",
        "pairsam_markasdup",
        "mark_split_pair_as_dup",
        "pairsam_stats",
        "PairCounter",
        "cli",
        "command",
        "click",
        "argument",
        "required",
        "click",
        "option",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "click",
        "Choice",
        "help",
        "show_default",
        "click",
        "option",
        "_pairsam_format",
        "PAIRSAM_SEP_ESCAPE",
        "help",
        "click",
        "option",
        "help",
        "click",
        "option",
        "click",
        "Choice",
        "help",
        "click",
        "option",
        "_pairsam_format",
        "COL_C1",
        "help",
        "format",
        "_pairsam_format",
        "COL_C1",
        "click",
        "option",
        "_pairsam_format",
        "COL_C2",
        "help",
        "format",
        "_pairsam_format",
        "COL_C2",
        "click",
        "option",
        "_pairsam_format",
        "COL_P1",
        "help",
        "format",
        "_pairsam_format",
        "COL_P1",
        "click",
        "option",
        "_pairsam_format",
        "COL_P2",
        "help",
        "format",
        "_pairsam_format",
        "COL_P2",
        "click",
        "option",
        "_pairsam_format",
        "COL_S1",
        "help",
        "format",
        "_pairsam_format",
        "COL_S1",
        "click",
        "option",
        "_pairsam_format",
        "COL_S2",
        "help",
        "format",
        "_pairsam_format",
        "COL_S2",
        "click",
        "option",
        "_pairsam_format",
        "UNMAPPED_CHROM",
        "help",
        "format",
        "_pairsam_format",
        "UNMAPPED_CHROM",
        "click",
        "option",
        "is_flag",
        "help",
        "common_io_options",
        "pairsam_path",
        "output",
        "output_high_frequency_interactors",
        "output_unmapped",
        "output_stats",
        "max_mismatch",
        "max_interactions",
        "method",
        "sep",
        "comment_char",
        "send_header_to",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "unmapped_chrom",
        "mark_multi",
        "kwargs",
        "multifilter_py",
        "pairsam_path",
        "output",
        "output_high_frequency_interactors",
        "output_unmapped",
        "output_stats",
        "max_mismatch",
        "max_interactions",
        "method",
        "sep",
        "comment_char",
        "send_header_to",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "unmapped_chrom",
        "mark_multi",
        "kwargs",
        "pairsam_path",
        "output",
        "output_high_frequency_interactors",
        "output_unmapped",
        "output_stats",
        "max_mismatch",
        "max_interactions",
        "method",
        "sep",
        "comment_char",
        "send_header_to",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "unmapped_chrom",
        "mark_multi",
        "kwargs",
        "ast",
        "literal_eval",
        "sep",
        "send_header_to",
        "send_header_to",
        "_fileio",
        "auto_open",
        "pairsam_path",
        "mode",
        "nproc",
        "kwargs",
        "get",
        "command",
        "kwargs",
        "get",
        "pairsam_path",
        "sys",
        "stdin",
        "_fileio",
        "auto_open",
        "output",
        "mode",
        "nproc",
        "kwargs",
        "get",
        "command",
        "kwargs",
        "get",
        "output",
        "sys",
        "stdout",
        "_fileio",
        "auto_open",
        "output_stats",
        "mode",
        "nproc",
        "kwargs",
        "get",
        "command",
        "kwargs",
        "get",
        "output_stats",
        "PairCounter",
        "output_stats",
        "output_high_frequency_interactors",
        "output_high_frequency_interactors",
        "pathlib",
        "Path",
        "output_high_frequency_interactors",
        "absolute",
        "pathlib",
        "Path",
        "output",
        "absolute",
        "outstream",
        "_fileio",
        "auto_open",
        "output_high_frequency_interactors",
        "mode",
        "nproc",
        "kwargs",
        "get",
        "command",
        "kwargs",
        "get",
        "output_unmapped",
        "output_unmapped",
        "pathlib",
        "Path",
        "output_unmapped",
        "absolute",
        "pathlib",
        "Path",
        "output",
        "absolute",
        "outstream",
        "pathlib",
        "Path",
        "output_unmapped",
        "absolute",
        "pathlib",
        "Path",
        "output_high_frequency_interactors",
        "absolute",
        "outstream_high",
        "_fileio",
        "auto_open",
        "output_unmapped",
        "mode",
        "nproc",
        "kwargs",
        "get",
        "command",
        "kwargs",
        "get",
        "_headerops",
        "get_header",
        "instream",
        "_headerops",
        "append_new_pg",
        "header",
        "ID",
        "UTIL_NAME",
        "PN",
        "UTIL_NAME",
        "send_header_to_lowinteractors",
        "outstream",
        "writelines",
        "l",
        "l",
        "header",
        "send_header_to_highinteractors",
        "outstream_high",
        "outstream_high",
        "outstream",
        "outstream_high",
        "writelines",
        "l",
        "l",
        "header",
        "outstream_unmapped",
        "outstream_unmapped",
        "outstream",
        "outstream_unmapped",
        "outstream_high",
        "outstream_unmapped",
        "writelines",
        "l",
        "l",
        "header",
        "streaming_multifilter",
        "method",
        "max_mismatch",
        "max_interactions",
        "sep",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "unmapped_chrom",
        "body_stream",
        "outstream",
        "outstream_high",
        "outstream_unmapped",
        "out_stat",
        "mark_multi",
        "out_stat",
        "out_stat",
        "save",
        "out_stats_stream",
        "instream",
        "sys",
        "stdin",
        "instream",
        "close",
        "outstream",
        "sys",
        "stdout",
        "outstream",
        "close",
        "outstream_high",
        "outstream_high",
        "outstream",
        "outstream_high",
        "close",
        "outstream_unmapped",
        "outstream_unmapped",
        "outstream",
        "outstream_unmapped",
        "outstream_high",
        "outstream_unmapped",
        "close",
        "out_stats_stream",
        "out_stats_stream",
        "close",
        "key",
        "mydict",
        "key",
        "strip",
        "key",
        "mydict",
        "len",
        "mydict",
        "mydict",
        "key",
        "mylist",
        "val",
        "np",
        "array",
        "mylist",
        "dtype",
        "np",
        "int8",
        "np",
        "int16",
        "np",
        "int32",
        "val",
        "c1_in",
        "p1_in",
        "c2_in",
        "p2_in",
        "np",
        "asarray",
        "c1_in",
        "dtype",
        "np",
        "asarray",
        "p2_in",
        "dtype",
        "np",
        "asarray",
        "c2_in",
        "dtype",
        "np",
        "asarray",
        "p2_in",
        "dtype",
        "np",
        "r_",
        "np",
        "c_",
        "c1",
        "p1",
        "np",
        "c_",
        "c2",
        "p2",
        "c1",
        "shape",
        "c2",
        "shape",
        "c1",
        "shape",
        "np",
        "lexsort",
        "M",
        "M",
        "M",
        "M",
        "ind_sorted",
        "methodType",
        "np",
        "ones",
        "N",
        "low",
        "N",
        "high",
        "N",
        "low",
        "low",
        "M",
        "ind_sorted",
        "low",
        "M",
        "ind_sorted",
        "high",
        "low",
        "low",
        "np",
        "abs",
        "M",
        "ind_sorted",
        "high",
        "M",
        "ind_sorted",
        "low",
        "min_dist",
        "low",
        "low",
        "proximity_count",
        "low",
        "proximity_count",
        "high",
        "high",
        "methodType",
        "proximity_count",
        "N",
        "proximity_count",
        "N",
        "pcounts",
        "method",
        "max_mismatch",
        "max_interactions",
        "sep",
        "c1ind",
        "c2ind",
        "p1ind",
        "p2ind",
        "s1ind",
        "s2ind",
        "unmapped_chrom",
        "instream",
        "outstream",
        "outstream_high",
        "outstream_unmapped",
        "out_stat",
        "mark_multi",
        "max",
        "c1ind",
        "c2ind",
        "p1ind",
        "p2ind",
        "s1ind",
        "s2ind",
        "out_stat",
        "_pairsam_format",
        "COL_PTYPE",
        "max",
        "maxind",
        "ptind",
        "iter",
        "instream",
        "next",
        "instream",
        "rawline",
        "strip",
        "rawline",
        "rawline",
        "stripline",
        "warnings",
        "warn",
        "stripline",
        "stripline",
        "split",
        "sep",
        "len",
        "cols",
        "maxind",
        "ValueError",
        "format",
        "stripline",
        "format",
        "maxind",
        "len",
        "cols",
        "cols",
        "c1ind",
        "unmapped_chrom",
        "cols",
        "c2ind",
        "unmapped_chrom",
        "outstream_unmapped",
        "outstream_unmapped",
        "write",
        "stripline",
        "outstream_unmapped",
        "write",
        "out_stat",
        "out_stat",
        "add_pair",
        "cols",
        "c1ind",
        "cols",
        "p1ind",
        "cols",
        "s1ind",
        "cols",
        "c2ind",
        "cols",
        "p2ind",
        "cols",
        "s2ind",
        "cols",
        "ptind",
        "line_buffer",
        "append",
        "stripline",
        "cols_buffer",
        "append",
        "cols",
        "c1",
        "append",
        "fetchadd",
        "cols",
        "c1ind",
        "chromDict",
        "c2",
        "append",
        "fetchadd",
        "cols",
        "c2ind",
        "chromDict",
        "p1",
        "append",
        "cols",
        "p1ind",
        "p2",
        "append",
        "cols",
        "p2ind",
        "s1",
        "append",
        "fetchadd",
        "cols",
        "s1ind",
        "strandDict",
        "s2",
        "append",
        "fetchadd",
        "cols",
        "s2ind",
        "strandDict",
        "_multifilter",
        "c1",
        "p1",
        "c2",
        "p2",
        "i",
        "len",
        "res",
        "res",
        "i",
        "max_interactions",
        "outstream",
        "write",
        "line_buffer",
        "i",
        "outstream",
        "write",
        "out_stat",
        "out_stat",
        "add_pair",
        "cols_buffer",
        "i",
        "c1ind",
        "cols_buffer",
        "i",
        "p1ind",
        "cols_buffer",
        "i",
        "s1ind",
        "cols_buffer",
        "i",
        "c2ind",
        "cols_buffer",
        "i",
        "p2ind",
        "cols_buffer",
        "i",
        "s2ind",
        "cols_buffer",
        "i",
        "ptind",
        "out_stat",
        "out_stat",
        "add_pair",
        "cols_buffer",
        "i",
        "c1ind",
        "cols_buffer",
        "i",
        "p1ind",
        "cols_buffer",
        "i",
        "s1ind",
        "cols_buffer",
        "i",
        "c2ind",
        "cols_buffer",
        "i",
        "p2ind",
        "cols_buffer",
        "i",
        "s2ind",
        "outstream_high",
        "outstream_high",
        "write",
        "sep",
        "join",
        "mark_split_pair_as_dup",
        "cols_buffer",
        "i",
        "mark_multi",
        "line_buffer",
        "i",
        "outstream_high",
        "write",
        "line_buffer",
        "len",
        "res",
        "cols_buffer",
        "len",
        "res",
        "stripline",
        "len",
        "line_buffer",
        "ValueError",
        "format",
        "len",
        "line_buffer",
        "multifilter"
    ],
    "literals": [
        "'pairsam_multifilter'",
        "'pairsam_path'",
        "\"-o\"",
        "\"--output\"",
        "\"\"",
        "'output file for filtered pairs after multiple interactors removal.'",
        "' If the path ends with .gz or .lz4, the output is pbgzip-/lz4c-compressed.'",
        "' By default, the output is printed into stdout.'",
        "\"--output-high-frequency-interactors\"",
        "\"\"",
        "'output file for removed multiple interactor pairs. '",
        "' If the path ends with .gz or .lz4, the output is pbgzip-/lz4c-compressed.'",
        "' If the path is the same as in --output or -, output duplicates together '",
        "' with deduped pairs. By default, duplicates are dropped.'",
        "\"--output-unmapped\"",
        "\"\"",
        "'output file for unmapped pairs. '",
        "'If the path ends with .gz or .lz4, the output is pbgzip-/lz4c-compressed. '",
        "'If the path is the same as in --output or -, output unmapped pairs together '",
        "'with deduped pairs. If the path is the same as --output-high-frequency-interactors, '",
        "'output unmapped reads together. By default, unmapped pairs are dropped.'",
        "\"--output-stats\"",
        "\"\"",
        "'output file for statistics of multiple interactors. '",
        "' If file exists, it will be open in the append mode.'",
        "' If the path ends with .gz or .lz4, the output is pbgzip-/lz4c-compressed.'",
        "' By default, statistics are not printed.'",
        "\"--max-mismatch\"",
        "'This distance in (bp) from either end of a pair is used to count interacting pairs.'",
        "\"--max-interactions\"",
        "'Number of maximum number of allowable interacting pairs. Interactions are counted when either position of a pair maps to \"max-mismatch\" distance from another pair position. '",
        "'--method'",
        "'max'",
        "\"max\"",
        "'define the mismatch as either the max or the sum of the mismatches of'",
        "'the genomic locations of the both sides of the two compared molecules'",
        "\"--sep\"",
        "r\"Separator (\\t, \\v, etc. characters are \"",
        "\"supported, pass them in quotes) \"",
        "\"--comment-char\"",
        "\"#\"",
        "\"The first character of comment lines\"",
        "\"--send-header-to\"",
        "'low-frequency-interactors'",
        "'high-frequency-interactors'",
        "'both'",
        "'none'",
        "\"both\"",
        "\"Which of the outputs should receive header and comment lines\"",
        "\"--c1\"",
        "'Chrom 1 column; default {}'",
        "\"--c2\"",
        "'Chrom 2 column; default {}'",
        "\"--p1\"",
        "'Position 1 column; default {}'",
        "\"--p2\"",
        "'Position 2 column; default {}'",
        "\"--s1\"",
        "'Strand 1 column; default {}'",
        "\"--s2\"",
        "'Strand 2 column; default {}'",
        "\"--unmapped-chrom\"",
        "'Placeholder for a chromosome on an unmapped side; default {}'",
        "\"--mark-multi\"",
        "'If specified, duplicate pairs are marked as FF in \"pair_type\" and '",
        "'as a duplicate in the sam entries.'",
        "'\"\"\"'",
        "'\"\"\"'",
        "'both'",
        "'low-frequency-interactors'",
        "'both'",
        "'high-frequency-interactors'",
        "'r'",
        "'nproc_in'",
        "'cmd_in'",
        "'w'",
        "'nproc_out'",
        "'cmd_out'",
        "'w'",
        "'nproc_out'",
        "'cmd_out'",
        "'-'",
        "'w'",
        "'nproc_out'",
        "'cmd_out'",
        "'-'",
        "'w'",
        "'nproc_out'",
        "'cmd_out'",
        "'\\n'",
        "'\\n'",
        "'\\n'",
        "\"Empty line detected not at the end of the file\"",
        "\"Error parsing line {}: \"",
        "\" expected {} columns, got {}\"",
        "\"\\n\"",
        "\"\\n\"",
        "'FF'",
        "'\\n'",
        "\"{} lines left in the buffer, \"",
        "\"should be none;\"",
        "\"something went terribly wrong\"",
        "'__main__'"
    ],
    "variables": [
        "UTIL_NAME",
        "MAX_LEN",
        "sep",
        "send_header_to_lowinteractors",
        "send_header_to_highinteractors",
        "instream",
        "outstream",
        "out_stats_stream",
        "out_stat",
        "outstream_high",
        "outstream_high",
        "outstream_high",
        "outstream_unmapped",
        "outstream_unmapped",
        "outstream_unmapped",
        "outstream_unmapped",
        "header",
        "body_stream",
        "header",
        "key",
        "mydict",
        "key",
        "c1",
        "p1",
        "c2",
        "p2",
        "methodType",
        "M",
        "N",
        "ind_sorted",
        "proximity_count",
        "low",
        "high",
        "min_dist",
        "high",
        "high",
        "high",
        "pcounts",
        "maxind",
        "ptind",
        "maxind",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "line_buffer",
        "cols_buffer",
        "chromDict",
        "strandDict",
        "n_unmapped",
        "n_high",
        "n_low",
        "instream",
        "rawline",
        "stripline",
        "cols",
        "res",
        "c1",
        "c2",
        "p1",
        "p2",
        "s1",
        "s2",
        "line_buffer",
        "cols_buffer"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8  -*-",
        "",
        "TODO: - output stats after filtering",
        "edit/update mark as dup to mark as multi",
        "",
        "you don't need to load more than 10k lines at a time b/c you get out of the",
        "CPU cache, so this parameter is not adjustable",
        "Prepare input, output streams based on selected outputs",
        "Default ouput stream is low-frequency interactors",
        "generate empty PairCounter if stats output is requested:",
        "output the high-frequency interacting pairs",
        "output unmapped pairs",
        "prepare file headers",
        "header for low-frequency interactors",
        "header for high-frequency interactors",
        "header for unmapped pairs",
        "perform filtering of pairs based on low/high-frequency of interaction",
        "FINISHED!",
        "save statistics to a file if it was requested: TO BE TESTED",
        "M has shape (chrom, pos)",
        "sort by chromosomes, then positions",
        "M[ind_sorted]",
        "ind_sorted",
        "keeps track of how many molecules each framgent end is close to",
        "boundary case finish",
        "boundary case  - CHECK",
        "check if \"high\" is proximal enough to \"low\"",
        "first, if chromosomes not equal, we have gone too far, and the positions are not proximal",
        "restart high",
        "next, if positions are not proximal, increase low, and continue",
        "restart high",
        "if on the same chromosome, and the distance is \"proximal enough\", add to count of both \"low\" and \"high\" positions",
        "unsort proximity count",
        "proximity_count = proximity_count[ind_sorted]",
        "if method is sum of pairs",
        "doing everything in memory",
        "if we do stats in the dedup, we need PAIR_TYPE",
        "i do not see way around this:",
        "curMaxLen = max(MAX_LEN, dd.getLen())",
        "take care of empty lines not at the end of the file separately",
        "don't forget terminal newline",
        "add a pair to PairCounter if stats output is requested:",
        "when everything is loaded in memory...",
        "not high-frequency interactor pairs:",
        "don't forget terminal newline",
        "high-frequency interactor pairs:",
        "FF-marked pair:",
        "pair as is:",
        "don't forget terminal newline",
        "flush buffers and perform necessary checks here:"
    ],
    "docstrings": [
        "'''filter promiscuously interacting pairs.\n\n    Find and remove pairs that have more than MAX_INTERACTIONS interactions.\n    Find pairs in an upper-triangular flipped sorted pairs/pairsam file. \n    Allow for a +/-N bp mismatch at each side of duplicated molecules.\n\n    PAIRSAM_PATH : input triu-flipped sorted .pairs or .pairsam file.  If the\n    path ends with .gz/.lz4, the input is decompressed by pbgzip/lz4c. \n    By default, the input is read from stdin.\n    '''",
        "\"\"\"\n    This is a slow version of the filtering code used for testing purposes only\n    Use cythonized version in the future!!\n    \"\"\""
    ],
    "functions": [
        "multifilter",
        "multifilter_py",
        "fetchadd",
        "ar",
        "_multifilter",
        "streaming_multifilter"
    ],
    "classes": []
}