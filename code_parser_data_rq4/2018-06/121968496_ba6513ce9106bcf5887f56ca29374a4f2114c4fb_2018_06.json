{
    "identifiers": [
        "$",
        "$",
        "check_lock",
        "index",
        "selectors",
        "index",
        "$",
        "selectors",
        "index",
        "$",
        "$appeared",
        "$appeared",
        "$prior_appeared",
        "$prior_appeared",
        "$appeared",
        "$disappeared",
        "$disappeared",
        "$prior_appeared",
        "$appeared",
        "$",
        "element",
        "$",
        "element",
        "$element",
        "$window",
        "$window",
        "$element",
        "offset",
        "offset",
        "top",
        "$element",
        "window_top",
        "top",
        "$element",
        "window_top",
        "$window",
        "left",
        "$element",
        "window_left",
        "left",
        "$element",
        "window_left",
        "$window",
        "$",
        "options",
        "$",
        "defaults",
        "options",
        "check_binded",
        "check_lock",
        "check_lock",
        "setTimeout",
        "process",
        "opts",
        "$",
        "on_check",
        "on_check",
        "check_binded",
        "opts",
        "setTimeout",
        "process",
        "opts",
        "selectors",
        "selector",
        "$",
        "selector",
        "$",
        "check_binded",
        "process",
        "jQuery",
        "$",
        "$",
        "doTimeout",
        "p_doTimeout",
        "aps",
        "arguments",
        "$",
        "doTimeout",
        "aps",
        "arguments",
        "p_doTimeout",
        "doTimeout",
        "args",
        "args",
        "args",
        "args",
        "result",
        "jquery_data_key",
        "jquery_data_key",
        "$",
        "$",
        "args",
        "args",
        "args",
        "id",
        "slice_args",
        "id",
        "jquery_data_key",
        "delay",
        "args",
        "callback",
        "args",
        "jquery_data_key",
        "elem",
        "that",
        "elem",
        "jquery_data_key",
        "data",
        "elem",
        "jquery_data_key",
        "id",
        "data",
        "cache",
        "id",
        "cache",
        "id",
        "data",
        "clearTimeout",
        "data",
        "data",
        "jquery_data_key",
        "elem",
        "jquery_data_key",
        "id",
        "cache",
        "id",
        "data",
        "setTimeout",
        "data",
        "delay",
        "callback",
        "data",
        "no_polling_loop",
        "callback",
        "callback",
        "method_base",
        "callback",
        "callback",
        "that",
        "aps",
        "args",
        "slice_args",
        "no_polling_loop",
        "actually_setTimeout",
        "cleanup",
        "actually_setTimeout",
        "data",
        "delay",
        "cleanup",
        "data",
        "delay",
        "cleanup",
        "jQuery",
        "$",
        "$",
        "$",
        "$",
        "$",
        "target",
        "$",
        "target",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "number",
        "delay",
        "$",
        "$",
        "delay",
        "lastId",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "$",
        "target",
        "number",
        "number",
        "number",
        "lastId",
        "$",
        "target",
        "$",
        "target",
        "$",
        "target",
        "$",
        "target",
        "$",
        "target",
        "$",
        "e",
        "$affected",
        "$",
        "$",
        "parent",
        "$",
        "$",
        "$",
        "parent",
        "number",
        "number",
        "delay",
        "parent",
        "$",
        "delay",
        "$",
        "parent",
        "number",
        "number",
        "number",
        "lastId",
        "ele",
        "$",
        "e",
        "$affected",
        "$",
        "$",
        "$",
        "$"
    ],
    "literals": [
        "':appeared'",
        "'appear'",
        "'disappear'",
        "':'",
        "'appeared'",
        "':visible'",
        "'appear-top-offset'",
        "'appear-left-offset'",
        "'$:nomunge'",
        "'doTimeout'",
        "'number'",
        "'number'",
        "'string'",
        "'string'",
        "'.animatedParent'",
        "'.animatedClick'",
        "'data-target'",
        "'data-sequence'",
        "\".\"",
        "\":first\"",
        "'data-id'",
        "\".\"",
        "\":last\"",
        "'data-id'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'goAway'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'goAway'",
        "'data-sequence'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'goAway'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'go'",
        "\".\"",
        "\"[data-id=\"",
        "\"]\"",
        "'goAway'",
        "'.'",
        "'go'",
        "'.'",
        "'goAway'",
        "'.'",
        "'go'",
        "'.'",
        "'go'",
        "'.'",
        "'goAway'",
        "'appear'",
        "'.animatedParent'",
        "'.animated'",
        "'data-sequence'",
        "'.animated:first'",
        "'data-id'",
        "'.animated:last'",
        "'data-id'",
        "\".animated[data-id=\"",
        "\"]\"",
        "'go'",
        "'data-sequence'",
        "\".animated[data-id=\"",
        "\"]\"",
        "'go'",
        "'go'",
        "'disappear'",
        "'.animatedParent'",
        "'animateOnce'",
        "'.animated'",
        "'go'",
        "'load'"
    ],
    "variables": [
        "selectors",
        "check_binded",
        "check_lock",
        "defaults",
        "$window",
        "$prior_appeared",
        "index",
        "$appeared",
        "$disappeared",
        "$element",
        "window_left",
        "window_top",
        "offset",
        "left",
        "top",
        "opts",
        "selector",
        "on_check",
        "cache",
        "doTimeout",
        "aps",
        "args",
        "result",
        "that",
        "elem",
        "data",
        "method_base",
        "args",
        "arguments",
        "slice_args",
        "id",
        "delay",
        "callback",
        "target",
        "firstId",
        "lastId",
        "number",
        "firstId",
        "ele",
        "parent",
        "firstId",
        "number",
        "firstId",
        "lastId"
    ],
    "comments": [
        "\"appeared\" custom filter",
        "watching for element's appearance in browser viewport",
        "force elements's appearance check",
        "!\n * jQuery doTimeout: Like setTimeout, but better! - v1.0 - 3/3/2010\n * http://benalman.com/projects/jquery-dotimeout-plugin/\n * \n * Copyright (c) 2010 \"Cowboy\" Ben Alman\n * Dual licensed under the MIT and GPL licenses.\n * http://benalman.com/about/license/",
        "Script: jQuery doTimeout: Like setTimeout, but better!",
        "",
        "",
        "Project Home - http://benalman.com/projects/jquery-dotimeout-plugin/",
        "GitHub       - http://github.com/cowboy/jquery-dotimeout/",
        "Source       - http://github.com/cowboy/jquery-dotimeout/raw/master/jquery.ba-dotimeout.js",
        "(Minified)   - http://github.com/cowboy/jquery-dotimeout/raw/master/jquery.ba-dotimeout.min.js (1.0kb)",
        "",
        "About: License",
        "",
        "Copyright (c) 2010 \"Cowboy\" Ben Alman,",
        "Dual licensed under the MIT and GPL licenses.",
        "http://benalman.com/about/license/",
        "",
        "About: Examples",
        "",
        "These working examples, complete with fully commented code, illustrate a few",
        "ways in which this plugin can be used.",
        "",
        "Debouncing      - http://benalman.com/code/projects/jquery-dotimeout/examples/debouncing/",
        "Delays, Polling - http://benalman.com/code/projects/jquery-dotimeout/examples/delay-poll/",
        "Hover Intent    - http://benalman.com/code/projects/jquery-dotimeout/examples/hoverintent/",
        "",
        "About: Support and Testing",
        "",
        "Information about what version or versions of jQuery this plugin has been",
        "tested with, what browsers it has been tested in, and where the unit tests",
        "reside (so you can test it yourself).",
        "",
        "jQuery Versions - 1.3.2, 1.4.2",
        "Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome 4-5, Opera 9.6-10.1.",
        "Unit Tests      - http://benalman.com/code/projects/jquery-dotimeout/unit/",
        "",
        "About: Release History",
        "",
        "1.0 - (3/3/2010) Callback can now be a string, in which case it will call",
        "the appropriate $.method or $.fn.method, depending on where .doTimeout",
        "was called. Callback must now return `true` (not just a truthy value)",
        "to poll.",
        "0.4 - (7/15/2009) Made the \"id\" argument optional, some other minor tweaks",
        "0.3 - (6/25/2009) Initial release",
        "Used by YUI compressor.",
        "Reused internal string.",
        "A convenient shortcut.",
        "Method: jQuery.doTimeout",
        "",
        "Initialize, cancel, or force execution of a callback after a delay.",
        "",
        "If delay and callback are specified, a doTimeout is initialized. The",
        "callback will execute, asynchronously, after the delay. If an id is",
        "specified, this doTimeout will override and cancel any existing doTimeout",
        "with the same id. Any additional arguments will be passed into callback",
        "when it is executed.",
        "",
        "If the callback returns true, the doTimeout loop will execute again, after",
        "the delay, creating a polling loop until the callback returns a non-true",
        "value.",
        "",
        "Note that if an id is not passed as the first argument, this doTimeout will",
        "NOT be able to be manually canceled or forced. (for debouncing, be sure to",
        "specify an id).",
        "",
        "If id is specified, but delay and callback are not, the doTimeout will be",
        "canceled without executing the callback. If force_mode is specified, the",
        "callback will be executed, synchronously, but will only be allowed to",
        "continue a polling loop if force_mode is true (provided the callback",
        "returns true, of course). If force_mode is false, no polling loop will",
        "continue, even if the callback returns true.",
        "",
        "Usage:",
        "",
        "> jQuery.doTimeout( [ id, ] delay, callback [, arg ... ] );",
        "> jQuery.doTimeout( id [, force_mode ] );",
        "",
        "Arguments:",
        "",
        "id - (String) An optional unique identifier for this doTimeout. If id is",
        "not specified, the doTimeout will NOT be able to be manually canceled or",
        "forced.",
        "delay - (Number) A zero-or-greater delay in milliseconds after which",
        "callback will be executed.",
        "callback - (Function) A function to be executed after delay milliseconds.",
        "callback - (String) A jQuery method to be executed after delay",
        "milliseconds. This method will only poll if it explicitly returns",
        "true.",
        "force_mode - (Boolean) If true, execute that id's doTimeout callback",
        "immediately and synchronously, continuing any callback return-true",
        "polling loop. If false, execute the callback immediately and",
        "synchronously but do NOT continue a callback return-true polling loop.",
        "If omitted, cancel that id's doTimeout.",
        "",
        "Returns:",
        "",
        "If force_mode is true, false or undefined and there is a",
        "yet-to-be-executed callback to cancel, true is returned, but if no",
        "callback remains to be executed, undefined is returned.",
        "Method: jQuery.fn.doTimeout",
        "",
        "Initialize, cancel, or force execution of a callback after a delay.",
        "Operates like <jQuery.doTimeout>, but the passed callback executes in the",
        "context of the jQuery collection of elements, and the id is stored as data",
        "on the first element in that collection.",
        "",
        "If delay and callback are specified, a doTimeout is initialized. The",
        "callback will execute, asynchronously, after the delay. If an id is",
        "specified, this doTimeout will override and cancel any existing doTimeout",
        "with the same id. Any additional arguments will be passed into callback",
        "when it is executed.",
        "",
        "If the callback returns true, the doTimeout loop will execute again, after",
        "the delay, creating a polling loop until the callback returns a non-true",
        "value.",
        "",
        "Note that if an id is not passed as the first argument, this doTimeout will",
        "NOT be able to be manually canceled or forced (for debouncing, be sure to",
        "specify an id).",
        "",
        "If id is specified, but delay and callback are not, the doTimeout will be",
        "canceled without executing the callback. If force_mode is specified, the",
        "callback will be executed, synchronously, but will only be allowed to",
        "continue a polling loop if force_mode is true (provided the callback",
        "returns true, of course). If force_mode is false, no polling loop will",
        "continue, even if the callback returns true.",
        "",
        "Usage:",
        "",
        "> jQuery('selector').doTimeout( [ id, ] delay, callback [, arg ... ] );",
        "> jQuery('selector').doTimeout( id [, force_mode ] );",
        "",
        "Arguments:",
        "",
        "id - (String) An optional unique identifier for this doTimeout, stored as",
        "jQuery data on the element. If id is not specified, the doTimeout will",
        "NOT be able to be manually canceled or forced.",
        "delay - (Number) A zero-or-greater delay in milliseconds after which",
        "callback will be executed.",
        "callback - (Function) A function to be executed after delay milliseconds.",
        "callback - (String) A jQuery.fn method to be executed after delay",
        "milliseconds. This method will only poll if it explicitly returns",
        "true (most jQuery.fn methods return a jQuery object, and not `true`,",
        "which allows them to be chained and prevents polling).",
        "force_mode - (Boolean) If true, execute that id's doTimeout callback",
        "immediately and synchronously, continuing any callback return-true",
        "polling loop. If false, execute the callback immediately and",
        "synchronously but do NOT continue a callback return-true polling loop.",
        "If omitted, cancel that id's doTimeout.",
        "",
        "Returns:",
        "",
        "When creating a <jQuery.fn.doTimeout>, the initial jQuery collection of",
        "elements is returned. Otherwise, if force_mode is true, false or undefined",
        "and there is a yet-to-be-executed callback to cancel, true is returned,",
        "but if no callback remains to be executed, undefined is returned.",
        "Allows the plugin to call a string callback method.",
        "Any additional arguments will be passed to the callback.",
        "If id is passed, store a data reference either as .data on the first",
        "element in a jQuery collection, or in the internal cache.",
        "Note: key is 'doTimeout' + id",
        "Get id-object from the first element's data, otherwise initialize it to {}.",
        "Get id-object from the cache, otherwise initialize it to {}.",
        "Clear any existing timeout for this id.",
        "Clean up when necessary.",
        "Yes, there actually is a setTimeout call in here!",
        "A callback (and delay) were specified. Store the callback reference for",
        "possible later use, and then setTimeout.",
        "If the callback value is a string, it is assumed to be the name of a",
        "method on $ or $.fn depending on where doTimeout was executed.",
        "Since the callback returned true, and we're not specifically",
        "canceling a polling loop, do it again!",
        "Otherwise, clean up and quit.",
        "Set that timeout!",
        "No callback passed. If force_mode (delay) is true, execute the data.fn",
        "callback immediately, continuing any callback return-true polling loop.",
        "If force_mode is false, execute the data.fn callback immediately but do",
        "NOT continue a callback return-true polling loop. If force_mode is",
        "undefined, simply clean up. Since data.fn was still defined, whatever",
        "was supposed to happen hadn't yet, so return true.",
        "Since no callback was passed, and data.fn isn't defined, it looks like",
        "whatever was supposed to happen already did. Clean up and quit!",
        "CSS3 Animate-it",
        "Add or remove the class",
        "Add or remove the class",
        "increment",
        "continute looping till reached last ID"
    ],
    "docstrings": [
        "* CSS3 Animate it\n * Copyright (c) 2014 Jack McCourt\n * https://github.com/kriegar/css3-animate-it\n * Version: 0.1.0\n * \n * I utilise the jQuery.appear plugin within this javascript file so here is a link to that too\n * https://github.com/morr/jquery.appear\n *\n * I also utilise the jQuery.doTimeout plugin for the data-sequence functionality so here is a link back to them.\n * http://benalman.com/projects/jquery-dotimeout-plugin/",
        "*Version: 1.0, Last updated: 3/3/2010*"
    ],
    "functions": [
        "process",
        "p_doTimeout",
        "cleanup",
        "actually_setTimeout"
    ],
    "classes": []
}