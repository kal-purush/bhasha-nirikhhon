{
    "identifiers": [
        "LoopCallback",
        "BinaryTree",
        "TreeNode",
        "AVLBalance",
        "v1",
        "v2",
        "TreeNode",
        "AVLBalance",
        "BinaryTree",
        "root",
        "compare",
        "root",
        "root",
        "root",
        "compare",
        "compare",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "node",
        "node",
        "node",
        "AVLBalance",
        "node",
        "node",
        "node",
        "left",
        "node",
        "node",
        "node",
        "node",
        "_node",
        "parent",
        "_node",
        "AVLNode",
        "node",
        "_node",
        "node",
        "AVLNode",
        "_node",
        "node",
        "parent",
        "parent",
        "node",
        "parent",
        "cmpval",
        "parent",
        "node",
        "AVLBalance",
        "node",
        "parent",
        "parent",
        "node",
        "cmpval",
        "parent",
        "node",
        "parent",
        "parent",
        "node",
        "parent",
        "parent",
        "AVLBalance",
        "parent",
        "AVLBalance",
        "parent",
        "AVLBalance",
        "AVLBalance",
        "parent",
        "AVLBalance",
        "AVLNode",
        "AVLTree",
        "root",
        "tree",
        "tree"
    ],
    "literals": [
        "'../binaryTree/BinaryTree'",
        "'../binaryTree/TreeNode'",
        "'无效的比较'",
        "'number'",
        "'number'",
        "'不支持的比较类型，需要用户自定义compare函数'"
    ],
    "variables": [
        "left",
        "grandChild",
        "node",
        "cmpval",
        "root",
        "tree"
    ],
    "comments": [
        "ll",
        "lr",
        "move to left",
        "move to right",
        "Handle finding a copy of the data",
        "banlance"
    ],
    "docstrings": [],
    "functions": [
        "rotate_left",
        "insert"
    ],
    "classes": [
        "AVLNode",
        "AVLTree"
    ]
}