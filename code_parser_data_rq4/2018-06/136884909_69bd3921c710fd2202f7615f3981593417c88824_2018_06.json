{
    "identifiers": [
        "Collections",
        "Generic",
        "Text",
        "Lab04_Tic_Tac_Toe",
        "Classes",
        "Lab04_Tic_Tac_Toe",
        "Classes",
        "board",
        "row",
        "board",
        "element",
        "row",
        "Write",
        "element",
        "WriteLine",
        "Player",
        "player1",
        "Player",
        "player2",
        "GameBoard",
        "Board",
        "WriteLine",
        "player1",
        "Name",
        "player1",
        "Icon",
        "player2",
        "Name",
        "player2",
        "Icon",
        "win",
        "Clear",
        "PrintGame",
        "board",
        "SwitchPlayer",
        "player1",
        "player2",
        "player1",
        "Turn",
        "TileChosen",
        "player1",
        "board",
        "board",
        "GameMechanics",
        "player1",
        "board",
        "userTile",
        "TileChosen",
        "player2",
        "board",
        "board",
        "GameMechanics",
        "player2",
        "board",
        "userTile",
        "CheckForWinner",
        "player1",
        "player2",
        "board",
        "Winner",
        "Clear",
        "PrintGame",
        "board",
        "WriteLine",
        "Winner",
        "Name",
        "win",
        "Winner",
        "Name",
        "Player",
        "OctoCat",
        "counter",
        "Clear",
        "PrintGame",
        "board",
        "WriteLine",
        "win",
        "counter",
        "Player",
        "player",
        "board",
        "userTile",
        "GameBoard",
        "Positions",
        "userTile",
        "board",
        "position",
        "position",
        "player",
        "Icon",
        "board",
        "Player",
        "player",
        "board",
        "position",
        "position",
        "Int32",
        "TryParse",
        "ReadLine",
        "userInput",
        "position",
        "GameBoard",
        "Positions",
        "userInput",
        "position",
        "WriteLine",
        "board",
        "position",
        "position",
        "board",
        "position",
        "position",
        "WriteLine",
        "position",
        "position",
        "userInput",
        "Player",
        "player1",
        "Player",
        "player2",
        "player1",
        "Turn",
        "player1",
        "Turn",
        "player2",
        "Turn",
        "WriteLine",
        "player2",
        "Name",
        "player1",
        "Turn",
        "player2",
        "Turn",
        "WriteLine",
        "player1",
        "Name",
        "Player",
        "player1",
        "Player",
        "player2",
        "board",
        "GameBoard",
        "Winners",
        "i",
        "winners",
        "Length",
        "i",
        "GameBoard",
        "Positions",
        "winners",
        "i",
        "GameBoard",
        "Positions",
        "winners",
        "i",
        "GameBoard",
        "Positions",
        "winners",
        "i",
        "board",
        "p1",
        "p1",
        "board",
        "p2",
        "p2",
        "board",
        "p3",
        "p3",
        "a",
        "b",
        "b",
        "c",
        "Winner",
        "a",
        "player1",
        "player2",
        "Winner",
        "Winner"
    ],
    "literals": [
        "\"OctoCat\"",
        "\"It's a draw!\"",
        "\"Invalid input, please pick a tile\"",
        "\"X\"",
        "\"O\"",
        "\"That tile is already taken, please pick another tile\"",
        "\"X\""
    ],
    "variables": [
        "board",
        "win",
        "counter",
        "userTile",
        "userTile",
        "Player",
        "Winner",
        "position",
        "userInput",
        "position",
        "Player",
        "Winner",
        "winners",
        "i",
        "p1",
        "p2",
        "p3",
        "a",
        "b",
        "c"
    ],
    "comments": [
        "This takes in a board at any state in the game and prints it",
        "</summary>",
        "<param name=\"board\">An array of arrays representing the state of the game</param>",
        "<returns>True for unit testing to see if this method works</returns>",
        "This method holds the foundation for the game",
        "</summary>",
        "<param name=\"player1\">Player 1 who is \"X\"</param>",
        "<param name=\"player2\">Player 2 who is \"O\"</param>",
        "Since both player1 and player2 start out with Turn = false,",
        "This makes it so that it is player1's turn and I can keep it in the while loop.",
        "This counter is needed to make sure that the game ends when all 9 tiles have been played",
        "This is how the game gets updated",
        "</summary>",
        "<param name=\"player\">The player whose turn it is</param>",
        "<param name=\"board\">The current state of the game</param>",
        "<param name=\"userTile\">The tile that the user wants to mark</param>",
        "<returns>The updated state of the game</returns>",
        "This identifies the exact location of where the player would place their icon.",
        "This makes sure that the user picks a valid tile.",
        "</summary>",
        "<param name=\"player\">The player whose turn it is</param>",
        "<param name=\"board\">The current state of the board</param>",
        "<returns>A valid tile that the player picks</returns>",
        "I used a double while loop because it was what I thought of at the time;",
        "It is probably not the best idea but I would find time to refactor it if I remember in the future",
        "This while loop just makes sure that the user input is a value between 1 and 9.",
        "This if statement checks to see if the tile that the player chose is occupied or not",
        "This is the method for switching players",
        "</summary>",
        "<param name=\"player1\">Player 1</param>",
        "<param name=\"player2\">Player 2</param>",
        "This method checks for a winner after every round based off of the markers on the board",
        "</summary>",
        "<param name=\"player1\">Player 1</param>",
        "<param name=\"player2\">Player 2</param>",
        "<param name=\"board\">The current state of the board</param>",
        "<returns>The player that has won (or null if there is no winner yet)</returns>",
        "This for loop makes it so that every winning combination is tried",
        "These 3 arrays hold the x/y coordinates for a winning sequence.",
        "These 3 strings find the matching icon for this winning sequence",
        "This if statement checks to see if all 3 of the icons are the same",
        "This tertiary statement returns the correct winner based off of whether the 3 correct icons are \"X\" or not.",
        "If there is no winning combination, set the Winner player to be null."
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "PrintGame",
        "GameStart",
        "GameMechanics",
        "TileChosen",
        "SwitchPlayer",
        "Player",
        "CheckForWinner"
    ],
    "classes": [
        "Game"
    ]
}