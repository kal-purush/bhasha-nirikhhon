{
    "identifiers": [
        "CSS",
        "$",
        "nest",
        "percent",
        "CSS",
        "CSS",
        "CSS",
        "CSS",
        "selector",
        "key",
        "CSS"
    ],
    "literals": [
        "'@barlus/csstype'",
        "\"./index\"",
        "string",
        "'*'",
        "string",
        "'screen'",
        "'print'",
        "'all'",
        "'landscape'",
        "'portrait'",
        "string",
        "string",
        "string",
        "string",
        "'&:active'",
        "'&:any'",
        "'&:checked'",
        "'&:default'",
        "'&:disabled'",
        "'&:empty'",
        "'&:enabled'",
        "'&:first'",
        "'&:first-child'",
        "'&:first-of-type'",
        "'&:fullscreen'",
        "'&:focus'",
        "'&:hover'",
        "'&:indeterminate'",
        "'&:in-range'",
        "'&:invalid'",
        "'&:last-child'",
        "'&:last-of-type'",
        "'&:left'",
        "'&:link'",
        "'&:only-child'",
        "'&:only-of-type'",
        "'&:optional'",
        "'&:out-of-range'",
        "'&:read-only'",
        "'&:read-write'",
        "'&:required'",
        "'&:right'",
        "'&:root'",
        "'&:scope'",
        "'&:target'",
        "'&:valid'",
        "'&:visited'",
        "'&::after'",
        "'&::before'",
        "'&::first-letter'",
        "'&::first-line'",
        "'&::selection'",
        "'&::backdrop'",
        "'&::placeholder'",
        "'&::marker'",
        "'&::spelling-error'",
        "'&::grammar-error'",
        "'&>*'",
        "'@media screen and (min-width: 700px)'",
        "'@media screen and (max-width: 700px)'",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "State selector",
        "Children",
        "stuff like `from`, `to` or `10%` etc"
    ],
    "docstrings": [
        "* Typestyle configuration options\n   *",
        "* The generated CSS selector gets its own unique location in the generated CSS (disables deduping).\n   * So instead of `.classA,.classB{same properties}`\n   * you get `.classA {same properties} .classB {same properties}`\n   * This is needed for certain browser edge cases like placeholder styling\n   *",
        "* A debug only (stripped in process.env.NODE_ENV !== 'production') name\n   * Helps you figure out where the class is coming from if you care\n   *",
        "* Pseudo-elements\n   * https://developer.mozilla.org/en/docs/Web/CSS/Pseudo-elements",
        "* Mobile first media query example\n   *",
        "* Desktop first media query example\n   *",
        "* Also cater for any other nested query you want",
        "* For animation keyframe definition"
    ],
    "functions": [],
    "classes": []
}