{
    "identifiers": [
        "dotenv",
        "load_dotenv",
        "json",
        "os",
        "shutil",
        "requests",
        "IPython",
        "embed",
        "csv",
        "datetime",
        "load_dotenv",
        "os",
        "environ",
        "get",
        "api_key",
        "api_key",
        "exit",
        "the_file",
        "os",
        "listdir",
        "folder",
        "os",
        "path",
        "join",
        "folder",
        "the_file",
        "os",
        "path",
        "isfile",
        "file_path",
        "os",
        "unlink",
        "file_path",
        "e",
        "e",
        "input",
        "upper",
        "symbol",
        "s",
        "symbol",
        "i",
        "s",
        "good",
        "good",
        "good",
        "i",
        "i",
        "symbol",
        "api_key",
        "requests",
        "get",
        "request_url",
        "response",
        "text",
        "good",
        "symbols",
        "append",
        "symbol",
        "symbol",
        "filename",
        "info",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "filename",
        "open",
        "filepath",
        "csv_file",
        "csv",
        "DictWriter",
        "csv_file",
        "fieldnames",
        "lineterminator",
        "writer",
        "writerow",
        "info",
        "filename",
        "info",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "filename",
        "open",
        "filepath",
        "csv_file",
        "csv",
        "DictWriter",
        "csv_file",
        "fieldnames",
        "lineterminator",
        "writer",
        "writeheader",
        "filename",
        "symbol",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "filename",
        "open",
        "filepath",
        "csv_file",
        "csv",
        "writer",
        "csv_file",
        "delimiter",
        "quotechar",
        "quoting",
        "csv",
        "QUOTE_MINIMAL",
        "lineterminator",
        "writer",
        "writerow",
        "symbol",
        "datetime",
        "datetime",
        "now",
        "run_time",
        "strftime",
        "symbol",
        "symbols",
        "symbol",
        "api_key",
        "requests",
        "get",
        "request_url",
        "json",
        "loads",
        "response",
        "text",
        "response_body",
        "response_body",
        "data",
        "keys",
        "keys",
        "i",
        "dates",
        "append",
        "all_dates",
        "i",
        "i",
        "dates",
        "symbol",
        "upper",
        "data",
        "today",
        "symbol2",
        "last_refreshed",
        "today",
        "symbol2",
        "format",
        "latest_price_usd",
        "d",
        "dates",
        "high_prices",
        "append",
        "data",
        "d",
        "max",
        "high_prices",
        "symbol2",
        "format",
        "average_high_price",
        "d",
        "dates",
        "low_prices",
        "append",
        "data",
        "d",
        "min",
        "low_prices",
        "symbol2",
        "format",
        "average_low_price",
        "latest_price_usd",
        "average_high_price",
        "average_low_price",
        "symbol",
        "symbol",
        "write_header_to_file",
        "symbol2",
        "fieldnames2",
        "d",
        "dates",
        "d",
        "f",
        "fieldnames",
        "data",
        "d",
        "f",
        "write_data_to_file",
        "symbol2",
        "values"
    ],
    "literals": [
        "\"ALPHAVANTAGE_API_KEY\"",
        "\"OOPS. Please set an environment variable named 'ALPHAVANTAGE_API_KEY'.\"",
        "\"OOPS. Please set an environment variable named 'ALPHAVANTAGE_API_KEY'.\"",
        "\"data\"",
        "\"Please enter the ticker of the stock you would like to analyze!, to type 'finish' to stop. \"",
        "\"FINISH\"",
        "\"Please do not use numbers\"",
        "\"Please enter a ticker with 1-5 characters\"",
        "\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\"",
        "\"&apikey=\"",
        "\"Error Message\"",
        "\"Sorry. There is no information in this database on this ticker.\"",
        "f\"{symbol} has been added to your list of stocks!\"",
        "\"-----------------------------------------------------------\"",
        "\"data\"",
        "\"a\"",
        "\"timestamp\"",
        "\"1. open\"",
        "\"2. high\"",
        "\"3. low\"",
        "\"4. close\"",
        "\"5. volume\"",
        "'\\n'",
        "\"data\"",
        "\"a\"",
        "\"timestamp\"",
        "\"open\"",
        "\"high\"",
        "\"low\"",
        "\"close\"",
        "\"volume\"",
        "'\\n'",
        "\"data\"",
        "\"a\"",
        "' '",
        "'|'",
        "'\\n'",
        "\"Information request ran at: \"",
        "\"%A, %B %d, %Y at %I:%M%p\"",
        "\"-----------------------------------\"",
        "\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\"",
        "\"&outputsize=full&apikey=\"",
        "\"Meta Data\"",
        "\"3. Last Refreshed\"",
        "\"1. open\"",
        "\"2. high\"",
        "\"3. low\"",
        "\"4. close\"",
        "\"5. volume\"",
        "\"open\"",
        "\"high\"",
        "\"low\"",
        "\"close\"",
        "\"volume\"",
        "\"Time Series (Daily)\"",
        "\"4. close\"",
        "\"Last refreshed on \"",
        "\"-----------------------------------\"",
        "\"Closing price on \"",
        "\"for \"",
        "\" is: \"",
        "\"(${0:.2f})\"",
        "\"2. high\"",
        "\"The 52 week high price for \"",
        "\" is: \"",
        "\"(${0:.2f})\"",
        "\"3. low\"",
        "\"The 52 week low price for \"",
        "\" is: \"",
        "\"(${0:.2f})\"",
        "\"The current price is less than the midpoint of the 52 week high and low. This is a cheap stock and you should buy \"",
        "\"The current price is more than the midpoint of the 52 week high and low.  This stock is pretty expensive, so you should not buy \"",
        "\"-----------------------------------\"",
        "f\"prices-{symbol2}.csv\"",
        "\"timestamp\"",
        "f\"prices-{symbol2}.csv\""
    ],
    "variables": [
        "api_key",
        "symbols",
        "folder",
        "file_path",
        "symbol",
        "good",
        "i",
        "i",
        "x",
        "good",
        "good",
        "request_url",
        "response",
        "good",
        "filepath",
        "writer",
        "filepath",
        "writer",
        "filepath",
        "writer",
        "run_time",
        "request_url",
        "response",
        "response_body",
        "last_refreshed",
        "fieldnames",
        "fieldnames2",
        "data",
        "keys",
        "all_dates",
        "dates",
        "i",
        "i",
        "today",
        "symbol2",
        "latest_price_usd",
        "high_prices",
        "average_high_price",
        "low_prices",
        "average_low_price",
        "info",
        "values",
        "values",
        "values",
        "f"
    ],
    "comments": [
        "what is this for",
        "loads environment variables set in a \".env\" file, including the value of the ALPHAVANTAGE_API_KEY variable",
        "TODO: Allow it to choose multiple symbols",
        "found on internet: https://stackoverflow.com/questions/185936/how-to-delete-the-contents-of-a-folder-in-python",
        "elif os.path.isdir(file_path): shutil.rmtree(file_path)",
        "fIX THIS SOMETIMES IT\"SACCEPTING BAD ONES right now",
        "print(str(s.isalpha()))",
        "see: https://www.alphavantage.co/documentation/#daily",
        "TODO: assemble the request url to get daily data for the given stock symbol",
        "use time-series daily. find url on the wbsite. use your API code.",
        "print(request_url)",
        "TODO: issue a \"GET\" request to the specified url, and store the response in a variable",
        "data will be a dictionary of dictionaries. Date, then the four datapoints.",
        "data will be a dictionary of dictionaries. Date, then the four datapoints.",
        "data will be a dictionary of dictionaries. Date, then the four datapoints.",
        "this is a json",
        "this is a list of dictionaries",
        "print(response_body[\"Meta Data\"]) # this is a dictionary",
        "rint()",
        "still a dictionary",
        "a list of the keys",
        "for loop to make a list of values such as prices and stuff",
        "take the values from the dictionary which is response_body",
        "TODO: traverse the nested response data structure to find the latest closing price",
        "fill in the variables. print to find, or just look at websiste",
        "fill in the variables. print to find, or just look at websiste"
    ],
    "docstrings": [],
    "functions": [
        "write_data_to_file",
        "write_header_to_file",
        "write_symbol_to_file"
    ],
    "classes": []
}