{
    "identifiers": [
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Threading",
        "Tasks",
        "Microsoft",
        "EntityFrameworkCore",
        "AspNetCoreIntro",
        "Models",
        "AspNetCoreIntro",
        "Controllers",
        "Controller",
        "ApiProxier",
        "proxy",
        "Context",
        "context",
        "Proxy",
        "proxy",
        "Db",
        "context",
        "HttpPost",
        "Route",
        "JsonResult",
        "searchText",
        "searchText",
        "Proxy",
        "Configure",
        "Url",
        "Proxy",
        "Get",
        "Client",
        "Json",
        "Data",
        "Route",
        "JsonResult",
        "artistId",
        "artistId",
        "Proxy",
        "Configure",
        "Url",
        "Proxy",
        "Get",
        "Client",
        "Json",
        "Data",
        "Route",
        "JsonResult",
        "artistId",
        "artistId",
        "Proxy",
        "Configure",
        "Url",
        "Proxy",
        "Get",
        "Client",
        "Json",
        "Data"
    ],
    "literals": [
        "\"/api/search\"",
        "\"Genius\"",
        "\"api/artists/{artistId}\"",
        "\"Genius\"",
        "\"api/artists/{artistId}/songs&sort=popularity\"",
        "\"Genius\""
    ],
    "variables": [
        "Context",
        "Db",
        "ApiProxier",
        "Proxy",
        "Url",
        "Client",
        "Data",
        "Url",
        "Client",
        "Data",
        "Url",
        "Client",
        "Data"
    ],
    "comments": [
        "form-data",
        "public IActionResult SearchForSong(string song) {",
        "Genius: Search for songs",
        "1. Make async call to API",
        "2. Filter through data with any Db info",
        "e.g. Your likes, other user's likes",
        "3. Send data to other route via TempData",
        "4. Render data on other route into ViewBag",
        "return RedirectToAction(\"ShowSongResults\", \"Artist\");",
        "async public Task<IActionResult> GetArtistInfo(string artistId) {",
        "Genius: Get artist info (i.e. their songs)",
        "Filter through data with any Db info (e.g. likes)",
        "return RedirectToAction(\"ShowArtistPage\", \"Artist\");",
        "async public Task<IActionResult> GetArtistInfo(string artistId) {",
        "Genius: Get artist info (i.e. their songs)",
        "Filter through data with any Db info (e.g. likes)",
        "return RedirectToAction(\"ShowArtistPage\", \"Artist\");",
        "Like: Check DB for artist; if not, write to DB",
        "Like: Check DB for song; if not, write to DB",
        "Create associations with users",
        "- Many-to-many users & artists",
        "- Many-to-many users & songs",
        "- Many-to-many users as friends (self-join)"
    ],
    "docstrings": [],
    "functions": [
        "ApiController",
        "Search",
        "GetArtistBio",
        "GetArtistSongs"
    ],
    "classes": [
        "ApiController"
    ]
}