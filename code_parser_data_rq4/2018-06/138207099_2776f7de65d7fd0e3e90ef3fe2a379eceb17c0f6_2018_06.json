{
    "identifiers": [
        "FWCore",
        "ParameterSet",
        "Config",
        "cms",
        "cms",
        "Process",
        "cms",
        "untracked",
        "PSet",
        "input",
        "cms",
        "untracked",
        "int32",
        "cms",
        "Service",
        "fileName",
        "cms",
        "cms",
        "Source",
        "fileNames",
        "cms",
        "untracked",
        "vstring",
        "cms",
        "EDAnalyzer",
        "Timing",
        "cms",
        "untracked",
        "IncludeErrors",
        "cms",
        "untracked",
        "InputLabel",
        "cms",
        "untracked",
        "CheckPixelOrder",
        "cms",
        "untracked",
        "Verbosity",
        "cms",
        "untracked",
        "int32",
        "PrintThreshold",
        "cms",
        "untracked",
        "cms",
        "Path",
        "process",
        "an"
    ],
    "literals": [
        "\"GLIBGenerator\"",
        "\"TFileService\"",
        "'decodedData.root'",
        "\"NewEventStreamFileReader\"",
        "\"file:/home/hkt2/data.dat\"",
        "\"GLIBDataGenerator\"",
        "'rawDataCollector'"
    ],
    "variables": [
        "process",
        "process",
        "maxEvents",
        "process",
        "TFileService",
        "process",
        "source",
        "process",
        "an",
        "process",
        "p"
    ],
    "comments": [
        "Creating a process named Mote-Carlos-Analyzer",
        "Do not change the name of the process variable",
        "It is an 'unlablelable' variable",
        "Configuring the output stream for the Analyzer",
        "process.MessageLogger = cms.Service(\"MessageLogger\",",
        "debugModules = cms.untracked.vstring('dumper'),",
        "destinations = cms.untracked.vstring('cout'),",
        "cout = cms.untracked.PSet(",
        "threshold = cms.untracked.string('WARNING')",
        ")",
        ")",
        "-1 means processing all events",
        "Setting up a service to write out the root file containing histograms",
        "Setting up the input files",
        "Do not change the name of the attribute .source",
        "It is another 'unlableable' variable",
        "Setting up the analyzer",
        "SiPixelRawDump is the name of the class we need to use",
        "Check out the file SipixelRawDump",
        "SiPixelRawDump is the name of the class we need to use",
        "Check out the file SipixelRawDump.cc to see how the analyzer works",
        "Name of the EDAnlyzer class",
        "CablingMapLabel = cms.string(''),",
        "the name of the module creating the object holding the FED raw data. This is to filter out the object we need from the events",
        "Setting up the path that the cmsRun will iterate through for each event"
    ],
    "docstrings": [
        "\"\"\"\n\t@Author\t:\tHuan Kim Tran\n\t@Date\t:\t05/31/2018\n\t@Source\t:\trunRawDumperPilot_stream.py\n\"\"\"",
        "\"\"\"\nprocess.load(\"EventFilter.SiPixelRawToDigi.SiPixelRawToDigi_cfi\")\nprocess.siPixelDigis.InputLabel = 'rawDataCollector'\n\nprocess.si= cms.EDProducer(\"SiPixelRawToDigi\",\n     CablingMapLabel = cms.string(''),\n     ErrorList = cms.vint32(29),\n     IncludeErrors = cms.bool(True),\n     InputLabel = cms.InputTag(\"rawDataCollector\"),\n     Regions = cms.PSet(\n \n     ),\n     Timing = cms.untracked.bool(False),\n     UsePhase1 = cms.bool(False),\n     UsePilotBlade = cms.bool(False),\n     UseQualityInfo = cms.bool(False),\n     UserErrorList = cms.vint32(40)\n)\n\"\"\""
    ],
    "functions": [],
    "classes": []
}