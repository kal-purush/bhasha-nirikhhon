{
    "identifiers": [
        "org",
        "apache",
        "sqoop",
        "manager",
        "mainframe",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileInputStream",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "commons",
        "codec",
        "digest",
        "DigestUtils",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "apache",
        "hadoop",
        "fs",
        "Path",
        "org",
        "apache",
        "sqoop",
        "mapreduce",
        "mainframe",
        "MainframeConfiguration",
        "org",
        "apache",
        "sqoop",
        "testutil",
        "CommonArgs",
        "org",
        "apache",
        "sqoop",
        "testutil",
        "ImportJobTestCase",
        "org",
        "apache",
        "sqoop",
        "tool",
        "MainframeImportTool",
        "org",
        "apache",
        "sqoop",
        "util",
        "FileListing",
        "org",
        "apache",
        "commons",
        "lang3",
        "StringUtils",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "LOG",
        "LogFactory",
        "getLog",
        "getName",
        "Override",
        "datasetName",
        "datasetType",
        "fileHashes",
        "extraArgs",
        "tablePath",
        "datasetName",
        "tableFile",
        "tablePath",
        "toString",
        "tableFile",
        "exists",
        "tableFile",
        "isDirectory",
        "LOG",
        "info",
        "format",
        "tableFile",
        "FileListing",
        "recursiveDeleteDir",
        "tableFile",
        "argv",
        "getArgv",
        "datasetName",
        "datasetType",
        "extraArgs",
        "tool",
        "runImport",
        "tool",
        "argv",
        "ioe",
        "LOG",
        "error",
        "ioe",
        "ioe",
        "keys",
        "fileHashes",
        "keySet",
        "i",
        "keys",
        "filePath",
        "tablePath",
        "format",
        "i",
        "LOG",
        "info",
        "format",
        "filePath",
        "fileHashes",
        "get",
        "i",
        "f",
        "filePath",
        "toString",
        "assertTrue",
        "f",
        "exists",
        "fis",
        "f",
        "md5",
        "DigestUtils",
        "md5Hex",
        "fis",
        "fis",
        "close",
        "assertTrue",
        "format",
        "filePath",
        "md5",
        "fileHashes",
        "get",
        "i",
        "StringUtils",
        "equalsIgnoreCase",
        "md5",
        "fileHashes",
        "get",
        "i",
        "Test",
        "files",
        "files",
        "put",
        "MainframeTestUtil",
        "GDG_DATASET_FILENAME",
        "MainframeTestUtil",
        "EXPECTED_GDG_DATASET_MD5",
        "doImportAndVerify",
        "MainframeTestUtil",
        "GDG_DATASET_NAME",
        "MainframeConfiguration",
        "MAINFRAME_INPUT_DATASET_TYPE_GDG",
        "files",
        "datasetName",
        "datasetType",
        "extraArgs",
        "args",
        "CommonArgs",
        "addHadoopFlags",
        "args",
        "args",
        "add",
        "args",
        "add",
        "format",
        "MainframeTestUtil",
        "HOST",
        "MainframeTestUtil",
        "PORT",
        "args",
        "add",
        "args",
        "add",
        "MainframeTestUtil",
        "USERNAME",
        "args",
        "add",
        "args",
        "add",
        "MainframeTestUtil",
        "PASSWORD",
        "args",
        "add",
        "args",
        "add",
        "datasetName",
        "args",
        "add",
        "args",
        "add",
        "datasetType",
        "extraArgs",
        "length",
        "args",
        "add",
        "arg",
        "extraArgs",
        "args",
        "add",
        "arg",
        "args",
        "toArray"
    ],
    "literals": [
        "\"Removing folder: %s\"",
        "\"Got IOException during import: \"",
        "\"%s%s\"",
        "\"-m-00000\"",
        "\"Checking for presence of file: %s with MD5 hash %s\"",
        "\"Could not find imported data file\"",
        "\"MD5 sums do not match for file: %s. Got MD5 of %s and expected %s\"",
        "\"--connect\"",
        "\"%s:%s\"",
        "\"--username\"",
        "\"--password\"",
        "\"--dataset\"",
        "\"--datasettype\"",
        "\"--\""
    ],
    "variables": [
        "extraArgs",
        "extraArgs"
    ],
    "comments": [
        "remove the directory before running the import."
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Mainframe integration tests\n * Can be run using -Dtestcase=MainframeManagerImportTest or -Dthirdparty=true.\n * To run tests:-\n * Start docker containers by running start-thirdpartytest-db-containers.sh\n * Run test using ant test -Dtestcase=MainframeManagerImportTest or -Dthirdparty=true\n * Clean up containers by running stop-thirdpartytest-db-containers.sh\n * The following properties can be overridden from command line\n * by setting -D<property.name>=<value>:-\n * <property name=\"sqoop.test.mainframe.ftp.host\" value=\"localhost\" />\n * <property name=\"sqoop.test.mainframe.ftp.port\" value=\"2121\" />\n * <property name=\"sqoop.test.mainframe.ftp.username\" value=\"test\" />\n * <property name=\"sqoop.test.mainframe.ftp.password\" value=\"test\" />\n * <property name=\"sqoop.test.mainframe.ftp.dataset.gdg\" value=\"TSODIQ1.FOLDER\" />\n * <property name=\"sqoop.test.mainframe.ftp.dataset.gdg.filename\" value=\"G0001V43\" />\n * <property name=\"sqoop.test.mainframe.ftp.dataset.gdg.md5\" value=\"43eefbe34e466dd3f65a3e867a60809a\" />",
        "Does the import and verify\n   * @param datasetName the mainframe dataset name\n   * @param datasetType the mainframe dataset type from MainframeConfiguration (s/g/p)\n   * @param fileHashes  each HashMap entry is filename, expected md5sum\n   * @param extraArgs   extra arguments to the tool if required\n   * @throws IOException if it fails to delete the directory or read the file\n   * @throws RuntimeException if it fails to run the mainframe import"
    ],
    "functions": [
        "useHsqldbTestServer",
        "doImportAndVerify",
        "testImportGdgText",
        "getArgv"
    ],
    "classes": [
        "MainframeManagerImportTest"
    ]
}