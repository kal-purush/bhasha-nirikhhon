{
    "identifiers": [
        "argparse",
        "concurrent",
        "futures",
        "ThreadPoolExecutor",
        "os",
        "sys",
        "tarfile",
        "time",
        "traceback",
        "zipfile",
        "ThreadPoolExecutor",
        "ThreadPoolExecutor",
        "directory",
        "recursive",
        "os",
        "path",
        "abspath",
        "directory",
        "extract_archives",
        "directory_path",
        "recursive",
        "file_processes",
        "file_processes",
        "process",
        "process",
        "file_processes",
        "process",
        "done",
        "time",
        "sleep",
        "file_executor",
        "shutdown",
        "archive_executor",
        "shutdown",
        "e",
        "traceback",
        "print_exc",
        "sys",
        "exit",
        "directory",
        "recursive",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "directory",
        "file",
        "files",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "root",
        "file",
        "zipfile",
        "is_zipfile",
        "file_path",
        "archive_processes",
        "append",
        "archive_executor",
        "submit",
        "extract_archive",
        "file_path",
        "recursive",
        "tarfile",
        "is_tarfile",
        "file_path",
        "archive_processes",
        "append",
        "archive_executor",
        "submit",
        "extract_archive",
        "file_path",
        "recursive",
        "archive",
        "archive_type",
        "recursive",
        "format",
        "archive",
        "os",
        "mkdir",
        "extract_folder",
        "archive_type",
        "zipfile",
        "ZipFile",
        "archive",
        "archive_file",
        "namelist",
        "archive_type",
        "tarfile",
        "TarFile",
        "archive",
        "archive_file",
        "getmembers",
        "file",
        "archive_files",
        "file_processes",
        "append",
        "file_executor",
        "submit",
        "extract_archive_file",
        "archive_file",
        "file",
        "extract_folder",
        "archive_type",
        "recursive",
        "archive_file",
        "file_to_extract",
        "extract_folder",
        "archive_type",
        "recursive",
        "archive_type",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "extract_folder",
        "file_to_extract",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "extract_folder",
        "file_to_extract",
        "path",
        "os",
        "path",
        "dirname",
        "extracted_file_path",
        "os",
        "makedirs",
        "extracted_file_folder",
        "exist_ok",
        "archive_file",
        "extract",
        "file_to_extract",
        "extract_folder",
        "format",
        "extracted_file_path",
        "recursive",
        "os",
        "path",
        "isdir",
        "extracted_file_path",
        "zipfile",
        "is_zipfile",
        "extracted_file_path",
        "format",
        "extracted_file_path",
        "archive_processes",
        "append",
        "archive_executor",
        "submit",
        "extract_archive",
        "extracted_file_path",
        "recursive",
        "tarfile",
        "is_tarfile",
        "extracted_file_path",
        "format",
        "extracted_file_path",
        "archive_processes",
        "append",
        "archive_executor",
        "submit",
        "extract_archive",
        "extracted_file_path",
        "recursive",
        "FileNotFoundError",
        "e",
        "format",
        "extracted_file_path",
        "e",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "required",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "main",
        "args",
        "directory",
        "args",
        "recursive"
    ],
    "literals": [
        "'zip'",
        "'tar'",
        "'{}-extracted'",
        "'zip'",
        "'tar'",
        "'zip'",
        "'Extracted File: {}'",
        "'Found Nested Zip File: {}'",
        "'zip'",
        "'Found Nested Tar File: {}'",
        "'tar'",
        "'File({}): Failed to extract due to {}'",
        "'__main__'",
        "'-dir'",
        "'--directory'",
        "'Directory to extract archives from.'",
        "'-r'",
        "'--recursive'",
        "'store_true'",
        "'To enable recursive archive extraction used for nested archives'"
    ],
    "variables": [
        "archive_processes",
        "archive_executor",
        "file_processes",
        "file_executor",
        "directory_path",
        "file_processes",
        "file_path",
        "extract_folder",
        "archive_file",
        "archive_files",
        "archive_file",
        "archive_files",
        "extracted_file_path",
        "extracted_file_path",
        "extracted_file_folder",
        "parser",
        "args"
    ],
    "comments": [
        "standard python libraries",
        "list to store the all the future objects of processing individual archives",
        "list to store the all the future objects of processing individual file extraction from the archives",
        "get the absolute path to the directory to extract archives from",
        "extract all the archives in the path",
        "shutdown the thread pools",
        "TODO: add in preamble in case directory already exists",
        "make the directory for the extracted files",
        "create the directory structure before extracting otherwise exception will be thrown during extraction due to race case on other threads",
        "if the recursive flag is set check for nested archives"
    ],
    "docstrings": [
        "'''\n        While there is still a file process that isn't done yet continue.\n        Note: This must be done with the file processes rather than the archive\n        processes because file processes can be recursive and add another archive\n        process so if all file processes have finished we know the program has finished\n        '''"
    ],
    "functions": [
        "main",
        "extract_archives",
        "extract_archive",
        "extract_archive_file"
    ],
    "classes": []
}