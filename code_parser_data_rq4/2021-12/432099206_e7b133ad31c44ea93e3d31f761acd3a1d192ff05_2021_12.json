{
    "identifiers": [
        "math",
        "random",
        "time",
        "typing",
        "ClassVar",
        "typing",
        "Optional",
        "typing",
        "cast",
        "redis",
        "WatchError",
        "Base",
        "JSONTypes",
        "exceptions",
        "QueueEmptyError",
        "timer",
        "ContextTimer",
        "Base",
        "ClassVar",
        "redis",
        "xlen",
        "key",
        "qsize",
        "__qsize",
        "item",
        "JSONTypes",
        "block",
        "timeout",
        "Optional",
        "_encode",
        "item",
        "redis",
        "xadd",
        "key",
        "encoded_value",
        "id",
        "put",
        "item",
        "JSONTypes",
        "__put",
        "item",
        "block",
        "timeout",
        "Optional",
        "JSONTypes",
        "timeout",
        "block",
        "math",
        "floor",
        "redis_block",
        "ContextTimer",
        "timer",
        "__remove_and_return",
        "redis_block",
        "item",
        "WatchError",
        "IndexError",
        "block",
        "timer",
        "elapsed",
        "timeout",
        "QueueEmptyError",
        "redis",
        "redis",
        "key",
        "key",
        "random",
        "uniform",
        "RETRY_DELAY",
        "time",
        "sleep",
        "delay",
        "get",
        "redis_block",
        "JSONTypes",
        "_watch",
        "pipeline",
        "pipeline",
        "xread",
        "key",
        "count",
        "block",
        "redis_block",
        "cast",
        "returned_value",
        "cast",
        "returned_value",
        "pipeline",
        "multi",
        "pipeline",
        "xdel",
        "key",
        "id_",
        "dict_",
        "_decode",
        "encoded_value",
        "item",
        "JSONTypes",
        "__get"
    ],
    "literals": [
        "'Return the approximate size of the queue (not reliable!).  O(1)'",
        "'Return True if the queue is empty, False otherwise (not reliable!).  O(1)'",
        "'item'",
        "'*'",
        "b'item'"
    ],
    "variables": [
        "RETRY_DELAY",
        "__qsize",
        "encoded_value",
        "__put",
        "redis_block",
        "redis_block",
        "item",
        "delay",
        "__get",
        "returned_value",
        "id_",
        "dict_",
        "encoded_value",
        "item"
    ],
    "comments": [
        "--------------------------------------------------------------------------- #",
        "queue.py                                                                  #",
        "#",
        "Copyright Â© 2015-2021, Rajiv Bakulesh Shah, original author.              #",
        "#",
        "Licensed under the Apache License, Version 2.0 (the \"License\");           #",
        "you may not use this file except in compliance with the License.          #",
        "You may obtain a copy of the License at:                                  #",
        "http://www.apache.org/licenses/LICENSE-2.0                            #",
        "#",
        "Unless required by applicable law or agreed to in writing, software       #",
        "distributed under the License is distributed on an \"AS IS\" BASIS,         #",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #",
        "See the License for the specific language governing permissions and       #",
        "limitations under the License.                                            #",
        "--------------------------------------------------------------------------- #",
        "Preserve the Open-Closed Principle with name mangling.",
        "https://youtu.be/miGolgp9xq8?t=2086",
        "https://stackoverflow.com/a/38534939",
        "XXX: The following line raises WatchError after the socket timeout",
        "if the RedisQueue is empty and we're not blocking.  This feels",
        "like a bug in redis-py?",
        "The following line raises IndexError if the RedisQueue is empty",
        "and we're blocking."
    ],
    "docstrings": [
        "'''Put the item on the queue.  O(1)\n\n        The optional 'block' and 'timeout' arguments are ignored, as this method\n        never blocks.  They are provided for compatibility with the queue.Queue\n        class.\n        '''",
        "'''Put an item into the queue without blocking.  O(1)\n\n        This is exactly equivalent to `.put(item)` and is only provided for\n        compatibility with the queue.Queue class.\n        '''",
        "'''Remove and return an item from the queue.  O(1)\n\n        If optional args 'block' is true and 'timeout' is None (the default),\n        block if necessary until an item is available.  If 'timeout' is\n        a non-negative number, it blocks at most 'timeout' seconds and raises\n        the Empty exception if no item was available within that time.\n        Otherwise ('block' is false), return an item if one is immediately\n        available, else raise the QueueEmptyError exception ('timeout' is\n        ignored in that case).\n        '''",
        "'''Remove and return an item from the queue without blocking.  O(1)\n\n        Only get an item if one is immediately available.  Otherwise\n        raise the Empty exception.\n        '''"
    ],
    "functions": [
        "qsize",
        "empty",
        "put",
        "put_nowait",
        "get",
        "__remove_and_return",
        "get_nowait"
    ],
    "classes": [
        "RedisSimpleQueue"
    ]
}