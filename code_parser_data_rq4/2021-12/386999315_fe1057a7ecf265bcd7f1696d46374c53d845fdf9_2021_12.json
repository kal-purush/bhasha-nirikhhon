{
    "identifiers": [
        "semver",
        "getDotComAPIEndpoint",
        "assertNonNullable",
        "semver",
        "semver",
        "semver",
        "endpointVersionKey",
        "ep",
        "ep",
        "isDotCom",
        "ep",
        "ep",
        "getDotComAPIEndpoint",
        "isGHAE",
        "ep",
        "ep",
        "isGHES",
        "ep",
        "isDotCom",
        "ep",
        "isGHAE",
        "ep",
        "endpoint",
        "versionCache",
        "endpoint",
        "cached",
        "cached",
        "endpointVersionKey",
        "endpoint",
        "localStorage",
        "key",
        "semver",
        "raw",
        "parsed",
        "rawVersionCache",
        "endpoint",
        "raw",
        "versionCache",
        "endpoint",
        "parsed",
        "parsed",
        "assumedGHESVersion",
        "endpoint",
        "version",
        "rawVersionCache",
        "endpointVersionKey",
        "endpoint",
        "version",
        "semver",
        "version",
        "parsed",
        "endpointVersionKey",
        "endpoint",
        "localStorage",
        "key",
        "version",
        "rawVersionCache",
        "key",
        "version",
        "versionCache",
        "key",
        "parsed",
        "epConstraint",
        "epMatchesType",
        "epVersion",
        "semver",
        "epConstraint",
        "epMatchesType",
        "epConstraint",
        "epMatchesType",
        "assertNonNullable",
        "epVersion",
        "epMatchesType",
        "semver",
        "epVersion",
        "epConstraint",
        "endpointSatisfies",
        "endpointVersion",
        "semver",
        "ep",
        "checkConstraint",
        "dotcom",
        "isDotCom",
        "ep",
        "checkConstraint",
        "ae",
        "isGHAE",
        "ep",
        "assumedGHAEVersion",
        "checkConstraint",
        "es",
        "isGHES",
        "ep",
        "endpointVersion",
        "getEndpointVersion",
        "ep",
        "endpointSatisfies",
        "endpointSatisfies"
    ],
    "literals": [
        "'semver'",
        "'./api'",
        "'./fatal-error'",
        "string",
        "string",
        "'3.1.0'",
        "'3.3.0'",
        "string",
        "string",
        "string",
        "string",
        "endpoint-version/${ep}",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "Need to provide a version to compare against",
        "string",
        "'>= 3.0.0'",
        "'>= 3.0.0'",
        "'>= 3.4.0'",
        "'>= 3.4.0'"
    ],
    "variables": [
        "assumedGHESVersion",
        "assumedGHAEVersion",
        "rawVersionCache",
        "versionCache",
        "endpointVersionKey",
        "isDotCom",
        "isGHAE",
        "isGHES",
        "cached",
        "key",
        "raw",
        "parsed",
        "parsed",
        "key",
        "endpointSatisfies",
        "supportsAvatarsAPI",
        "supportsRerunningChecks"
    ],
    "comments": [
        "Approval of endpoint type regardless of version",
        "Denial of endpoint type regardless of version",
        "Version number constraint"
    ],
    "docstrings": [
        "* Whether or not the given endpoint URI matches GitHub.com's\n *\n * I.e. https://api.github.com/\n *\n * Most often used to check if an endpoint _isn't_ GitHub.com meaning it's\n * either GitHub Enterprise Server or GitHub AE",
        "* Whether or not the given endpoint URI appears to point to a GitHub AE\n * instance",
        "* Whether or not the given endpoint URI appears to point to a GitHub Enterprise\n * servicer instance",
        "* Returns a predicate which verifies whether a given endpoint matches the\n * provided constraints.\n *\n * Note: NOT ment for direct consumption, only exported for testability reasons.\n *       Consumers should use the various `supports*` methods instead.",
        "* Whether or not the endpoint supports the internal GitHub Enterprise Server\n * avatars API"
    ],
    "functions": [
        "getEndpointVersion",
        "updateEndpointVersion",
        "checkConstraint"
    ],
    "classes": []
}