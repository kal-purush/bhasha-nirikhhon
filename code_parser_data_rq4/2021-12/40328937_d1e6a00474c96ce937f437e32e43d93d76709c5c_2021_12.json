{
    "identifiers": [
        "xades4j",
        "production",
        "org",
        "apache",
        "xml",
        "security",
        "algorithms",
        "MessageDigestAlgorithm",
        "org",
        "apache",
        "xml",
        "security",
        "signature",
        "XMLSignature",
        "xades4j",
        "UnsupportedAlgorithmException",
        "xades4j",
        "algorithms",
        "Algorithm",
        "xades4j",
        "algorithms",
        "CanonicalXMLWithoutComments",
        "xades4j",
        "algorithms",
        "GenericAlgorithm",
        "java",
        "util",
        "java",
        "util",
        "keyAlgToSignatureAlg",
        "canonicalizationAlgorithmForSignature",
        "canonicalizationAlgorithmForTimeStampProperties",
        "digestAlgorithmForDataObjectReferences",
        "MessageDigestAlgorithm",
        "ALGO_ID_DIGEST_SHA256",
        "digestAlgorithmForReferenceProperties",
        "MessageDigestAlgorithm",
        "ALGO_ID_DIGEST_SHA256",
        "digestAlgorithmForTimeStampProperties",
        "MessageDigestAlgorithm",
        "ALGO_ID_DIGEST_SHA1",
        "keyAlgToSignatureAlg",
        "put",
        "XMLSignature",
        "ALGO_ID_SIGNATURE_DSA",
        "keyAlgToSignatureAlg",
        "put",
        "XMLSignature",
        "ALGO_ID_SIGNATURE_RSA_SHA256",
        "keyAlgToSignatureAlg",
        "put",
        "XMLSignature",
        "ALGO_ID_SIGNATURE_ECDSA_SHA256",
        "keyAlgorithmName",
        "signatureAlgorithm",
        "keyAlgToSignatureAlg",
        "put",
        "keyAlgorithmName",
        "signatureAlgorithm",
        "keyAlgorithmName",
        "algorithm",
        "keyAlgToSignatureAlg",
        "get",
        "keyAlgorithmName",
        "algorithm",
        "keyAlgorithmName",
        "algorithm",
        "algorithm",
        "canonicalizationAlgorithmForSignature",
        "algorithm",
        "canonicalizationAlgorithmForSignature",
        "algorithm",
        "canonicalizationAlgorithmForTimeStampProperties",
        "algorithm",
        "canonicalizationAlgorithmForTimeStampProperties",
        "algorithm",
        "digestAlgorithmForDataObjectReferences",
        "algorithm",
        "digestAlgorithmForDataObjectReferences",
        "algorithm",
        "digestAlgorithmForReferenceProperties",
        "algorithm",
        "digestAlgorithmForReferenceProperties",
        "algorithm",
        "digestAlgorithmForTimeStampProperties",
        "algorithm",
        "digestAlgorithmForTimeStampProperties"
    ],
    "literals": [
        "\"DSA\"",
        "\"RSA\"",
        "\"EC\"",
        "\"Unsupported signature algorithm\""
    ],
    "variables": [],
    "comments": [
        "TODO can this be the same as above? update javadocs"
    ],
    "docstrings": [
        "* XAdES4j - A Java library for generation and verification of XAdES signatures.\n * Copyright (C) 2021 Luis Goncalves.\n *\n * XAdES4j is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Lesser General Public License as published by the Free\n * Software Foundation; either version 3 of the License, or any later version.\n *\n * XAdES4j is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Lesser General Public License along\n * with XAdES4j. If not, see <http://www.gnu.org/licenses/>.",
        "* Configuration of the algorithms used for signature production.\n * <p>\n * The defaults are:\n * <ul>\n *     <li>Signature: RSA(RSA_SHA256), DSA(DSA_SHA1), EC(ECDSA_SHA256)</li>\n *     <li>Canonicalization: Canonical XML 1.0 without comments</li>\n *     <li>Digest: SHA256 (data objs and refs properties); SHA1 (time-stamps)</li>\n * </ul>\n *\n * @see XadesSigningProfile#withSignatureAlgorithms(SignatureAlgorithms)",
        "* Set the signature algorithm to be used when the signing key has the given key algorithm.\n     *\n     * @param keyAlgorithmName   the key's algorithm name as defined in JCA standard algorithm names\n     * @param signatureAlgorithm the signature algorithm\n     * @return the current instance",
        "* Sets the canonicalization algorithm to be used in the {@code Signature}.\n     *\n     * @param algorithm the algorithm\n     * @return the current instance",
        "* Sets the canonicalization algorithm to be used in the qualifying properties that contain time-stamp tokens.\n     *\n     * @param algorithm the algorithm\n     * @return the current instance",
        "* Sets the digest algorithm to be used in the data object {@code Reference}s.\n     *\n     * @param algorithm the algorithm\n     * @return the current instance",
        "* Sets the digest algorithm to be used in the qualifying properties that contain references to certificates,\n     * CRLs and so on.\n     *\n     * @param algorithm the algorithm\n     * @return the current instance",
        "* Sets the digest algorithm to be used in the qualifying properties that contain time-stamp tokens.\n     *\n     * @param algorithm the algorithm\n     * @return the current instance"
    ],
    "functions": [
        "SignatureAlgorithms",
        "SignatureAlgorithms",
        "withSignatureAlgorithm",
        "Algorithm",
        "getSignatureAlgorithm",
        "SignatureAlgorithms",
        "withCanonicalizationAlgorithmForSignature",
        "Algorithm",
        "getCanonicalizationAlgorithmForSignature",
        "SignatureAlgorithms",
        "withCanonicalizationAlgorithmForTimeStampProperties",
        "Algorithm",
        "getCanonicalizationAlgorithmForTimeStampProperties",
        "SignatureAlgorithms",
        "withDigestAlgorithmForDataObjectReferences",
        "getDigestAlgorithmForDataObjectReferences",
        "SignatureAlgorithms",
        "withDigestAlgorithmForReferenceProperties",
        "getDigestAlgorithmForReferenceProperties",
        "SignatureAlgorithms",
        "withDigestAlgorithmForTimeStampProperties",
        "getDigestAlgorithmForTimeStampProperties"
    ],
    "classes": [
        "SignatureAlgorithms"
    ]
}