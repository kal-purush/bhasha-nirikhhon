{
    "identifiers": [
        "datetime",
        "numpy",
        "np",
        "qiskit",
        "circuit",
        "parameter",
        "Parameter",
        "qiskit",
        "circuit",
        "measure",
        "Measure",
        "qiskit",
        "circuit",
        "library",
        "standard_gates",
        "CXGate",
        "UGate",
        "ECRGate",
        "RXGate",
        "qiskit",
        "providers",
        "backend",
        "BackendV2",
        "QubitProperties",
        "qiskit",
        "providers",
        "options",
        "Options",
        "qiskit",
        "transpiler",
        "Target",
        "InstructionProperties",
        "BackendV2",
        "name",
        "description",
        "online_date",
        "datetime",
        "datetime",
        "utcnow",
        "backend_version",
        "Target",
        "Parameter",
        "Parameter",
        "Parameter",
        "InstructionProperties",
        "duration",
        "error",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "RXGate",
        "_theta",
        "rx_props",
        "InstructionProperties",
        "duration",
        "error",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "RXGate",
        "np",
        "pi",
        "rx_30_props",
        "name",
        "InstructionProperties",
        "duration",
        "error",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "UGate",
        "_theta",
        "_phi",
        "_lam",
        "u_props",
        "InstructionProperties",
        "duration",
        "error",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "CXGate",
        "cx_props",
        "InstructionProperties",
        "duration",
        "error",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "Measure",
        "measure_props",
        "InstructionProperties",
        "duration",
        "error",
        "_target",
        "add_instruction",
        "ECRGate",
        "ecr_props",
        "options",
        "set_validator",
        "QubitProperties",
        "t1",
        "t2",
        "frequency",
        "QubitProperties",
        "t1",
        "t2",
        "frequency",
        "property",
        "_target",
        "property",
        "classmethod",
        "cls",
        "Options",
        "shots",
        "run_input",
        "options",
        "NotImplementedError",
        "qubit",
        "isinstance",
        "qubit",
        "_qubit_properties",
        "qubit",
        "_qubit_properties",
        "i",
        "i",
        "qubit"
    ],
    "literals": [
        "\"FakeV2\"",
        "\"A fake BackendV2 example\"",
        "\"0.0.1\"",
        "\"theta\"",
        "\"phi\"",
        "\"lambda\"",
        "\"rx_30\"",
        "\"shots\""
    ],
    "variables": [
        "_target",
        "_theta",
        "_phi",
        "_lam",
        "rx_props",
        "rx_30_props",
        "u_props",
        "cx_props",
        "measure_props",
        "ecr_props",
        "_qubit_properties"
    ],
    "comments": [
        "This code is part of Qiskit.",
        "",
        "(C) Copyright IBM 2021.",
        "",
        "This code is licensed under the Apache License, Version 2.0. You may",
        "obtain a copy of this license in the LICENSE.txt file in the root directory",
        "of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.",
        "",
        "Any modifications or derivative works of this code must retain this",
        "copyright notice, and modified files need to carry a notice indicating",
        "that they have been altered from the originals.",
        "pylint: disable=no-name-in-module,import-error"
    ],
    "docstrings": [
        "\"\"\"Mock BackendV2 object without run implemented for testing backwards compat\"\"\"",
        "\"\"\"A mock backend that doesn't implement run() to test compatibility with Terra internals.\"\"\""
    ],
    "functions": [
        "target",
        "max_circuits",
        "_default_options",
        "run",
        "qubit_properties"
    ],
    "classes": [
        "FakeBackendV2"
    ]
}