{
    "identifiers": [
        "sumOfInputs",
        "sumOfInputs",
        "row",
        "weights",
        "row",
        "value",
        "index",
        "sumOfEntries",
        "value",
        "weights",
        "index",
        "sumOfEntries",
        "outputs",
        "indexOne",
        "calculatedOutput",
        "weights",
        "learningRate",
        "inputs",
        "outputs",
        "indexOne",
        "calculatedOutput",
        "weights",
        "weight",
        "indexTwo",
        "newWeights",
        "weight",
        "learningRate",
        "inputs",
        "indexOne",
        "indexTwo",
        "error",
        "totalError",
        "totalError",
        "_inputs",
        "row",
        "indexOne",
        "updateWeights",
        "_outputs",
        "indexOne",
        "stepFunction",
        "calculateOutput",
        "row",
        "_weights",
        "_weights",
        "_learningRate",
        "_inputs",
        "_weights",
        "result",
        "totalError",
        "result",
        "trainRNA",
        "stepFunction",
        "calculateOutput",
        "_inputs",
        "_weights",
        "stepFunction",
        "calculateOutput",
        "_inputs",
        "_weights",
        "stepFunction",
        "calculateOutput",
        "_inputs",
        "_weights",
        "stepFunction",
        "calculateOutput",
        "_inputs",
        "_weights"
    ],
    "literals": [],
    "variables": [
        "_inputs",
        "_outputs",
        "_weights",
        "_learningRate",
        "sumOfEntries",
        "error",
        "newWeights",
        "totalError",
        "result"
    ],
    "comments": [
        "Verirfica se o neurônio vai ativar",
        "Faz a multiplicação das entrasdas (linhas) pelos pesos e depois soma [x, y]",
        "Atualiza os pesos com base no erro",
        "Caucula o erro"
    ],
    "docstrings": [],
    "functions": [
        "stepFunction",
        "calculateOutput",
        "updateWeights",
        "trainRNA"
    ],
    "classes": []
}