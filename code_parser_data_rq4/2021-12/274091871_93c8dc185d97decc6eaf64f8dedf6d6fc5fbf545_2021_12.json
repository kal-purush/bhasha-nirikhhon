{
    "identifiers": [
        "fr",
        "cg44",
        "plugin",
        "archives",
        "importation",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "TreeMap",
        "org",
        "apache",
        "commons",
        "fileupload",
        "FileItem",
        "org",
        "apache",
        "log4j",
        "Logger",
        "com",
        "csvreader",
        "CsvReader",
        "com",
        "jalios",
        "jcms",
        "Category",
        "com",
        "jalios",
        "jcms",
        "Channel",
        "com",
        "jalios",
        "jcms",
        "ControllerStatus",
        "com",
        "jalios",
        "jcms",
        "FileDocument",
        "com",
        "jalios",
        "jcms",
        "Publication",
        "com",
        "jalios",
        "jcms",
        "context",
        "JcmsMessage",
        "com",
        "jalios",
        "util",
        "Util",
        "fr",
        "cg44",
        "plugin",
        "socle",
        "SocleUtils",
        "generated",
        "City",
        "generated",
        "Periodique",
        "csvReader",
        "SEPARATOR",
        "doubleHashtag",
        "LOGGER",
        "Logger",
        "getLogger",
        "encoding",
        "channel",
        "Channel",
        "getChannel",
        "fileItem",
        "returnedLog",
        "fileIsNotCorrectCsv",
        "fileItem",
        "csvReader",
        "fileItem",
        "getInputStream",
        "encoding",
        "SEPARATOR",
        "values",
        "cpt",
        "lineLog",
        "skippedFirst",
        "csvReader",
        "readRecord",
        "lineLog",
        "values",
        "csvReader",
        "getValues",
        "values",
        "length",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "values",
        "length",
        "skippedFirst",
        "skippedFirst",
        "Util",
        "isEmpty",
        "values",
        "lineLog",
        "append",
        "Util",
        "isEmpty",
        "values",
        "lineLog",
        "append",
        "Util",
        "isEmpty",
        "values",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "contentCheck",
        "values",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "categoryCheck",
        "values",
        "channel",
        "getCategory",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "contentCheck",
        "values",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "contentCheck",
        "values",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "contentCheck",
        "values",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "categoryCheck",
        "values",
        "channel",
        "getCategory",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "categoryCheck",
        "values",
        "channel",
        "getCategory",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "categoryCheck",
        "values",
        "channel",
        "getCategory",
        "lineLog",
        "append",
        "Util",
        "notEmpty",
        "values",
        "contentCheck",
        "values",
        "lineLog",
        "append",
        "itPeriodique",
        "generatePeriodiqueFromCsvValues",
        "values",
        "status",
        "itPeriodique",
        "checkCreate",
        "channel",
        "getCurrentLoggedMember",
        "status",
        "isOK",
        "lineLog",
        "append",
        "status",
        "getMessage",
        "channel",
        "getCurrentUserLang",
        "Util",
        "notEmpty",
        "lineLog",
        "toString",
        "returnedLog",
        "put",
        "cpt",
        "lineLog",
        "toString",
        "cpt",
        "e",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "e",
        "getMessage",
        "returnedLog",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "SUCCESS",
        "idsStr",
        "itClass",
        "Util",
        "isEmpty",
        "idsStr",
        "ids",
        "idsStr",
        "split",
        "doubleHashtag",
        "counter",
        "counter",
        "ids",
        "length",
        "counter",
        "itPub",
        "channel",
        "getPublication",
        "ids",
        "counter",
        "Util",
        "isEmpty",
        "itPub",
        "itClass",
        "isInstance",
        "itPub",
        "cidsStr",
        "ancestorCat",
        "Util",
        "isEmpty",
        "cidsStr",
        "cids",
        "cidsStr",
        "split",
        "doubleHashtag",
        "counter",
        "counter",
        "cids",
        "length",
        "counter",
        "itCat",
        "channel",
        "getCategory",
        "cids",
        "counter",
        "Util",
        "isEmpty",
        "itCat",
        "SocleUtils",
        "catHasAncestor",
        "itCat",
        "ancestorCat",
        "fileItem",
        "result",
        "message",
        "trace",
        "csvReader",
        "fileItem",
        "getInputStream",
        "encoding",
        "SEPARATOR",
        "values",
        "cpt",
        "csvReader",
        "readRecord",
        "values",
        "csvReader",
        "getValues",
        "values",
        "length",
        "trace",
        "cpt",
        "csvReader",
        "getRawRecord",
        "result",
        "cpt",
        "csvReader",
        "close",
        "result",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "message",
        "result",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "INFO",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "getRequest",
        "setAttribute",
        "trace",
        "e",
        "result",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "message",
        "e",
        "result",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "message",
        "channel",
        "getCurrentJcmsContext",
        "getRequest",
        "setAttribute",
        "e",
        "result",
        "values",
        "itPeriodique",
        "itPeriodique",
        "setTitle",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setImageBandeau",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setCopyright",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setLegende",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setTexteAlternatif",
        "values",
        "itPeriodique",
        "setCoteDePeriodique",
        "values",
        "itPeriodique",
        "setDatesExtremesDeLaCollection",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setTexteAlternatif",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setInventaireDeLaCollection",
        "channel",
        "getData",
        "values",
        "itPeriodique",
        "addCategory",
        "channel",
        "getCategory",
        "values",
        "Util",
        "notEmpty",
        "values",
        "periodiques",
        "itId",
        "values",
        "split",
        "doubleHashtag",
        "periodiques",
        "add",
        "channel",
        "getData",
        "itId",
        "itPeriodique",
        "setAncienTitre",
        "periodiques",
        "toArray",
        "periodiques",
        "size",
        "Util",
        "notEmpty",
        "values",
        "periodiques",
        "itId",
        "values",
        "split",
        "doubleHashtag",
        "periodiques",
        "add",
        "channel",
        "getData",
        "itId",
        "itPeriodique",
        "setTitreDevenu",
        "periodiques",
        "toArray",
        "periodiques",
        "size",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setNotes",
        "values",
        "Util",
        "notEmpty",
        "values",
        "itPeriodique",
        "setSiegeDuJournal",
        "channel",
        "getData",
        "values",
        "itPeriodique",
        "setNumerise",
        "equalsIgnoreCase",
        "values",
        "itCid",
        "values",
        "split",
        "doubleHashtag",
        "itPeriodique",
        "addCategory",
        "channel",
        "getCategory",
        "itCid",
        "Util",
        "notEmpty",
        "values",
        "itCid",
        "values",
        "split",
        "doubleHashtag",
        "itPeriodique",
        "addCategory",
        "channel",
        "getCategory",
        "itCid",
        "itCid",
        "values",
        "split",
        "doubleHashtag",
        "itPeriodique",
        "addCategory",
        "channel",
        "getCategory",
        "itCid",
        "Util",
        "notEmpty",
        "values",
        "communes",
        "itId",
        "values",
        "split",
        "doubleHashtag",
        "communes",
        "add",
        "channel",
        "getData",
        "itId",
        "itPeriodique",
        "setCommunesConcernees",
        "communes",
        "toArray",
        "communes",
        "size",
        "itPeriodique",
        "setToutesLesCommunesDuDepartement",
        "equalsIgnoreCase",
        "values",
        "itPeriodique",
        "setAuthor",
        "channel",
        "getCurrentLoggedMember",
        "itPeriodique",
        "fileItem",
        "periodiquesToCreate",
        "csvReader",
        "fileItem",
        "getInputStream",
        "encoding",
        "SEPARATOR",
        "values",
        "skippedFirst",
        "csvReader",
        "readRecord",
        "skippedFirst",
        "skippedFirst",
        "values",
        "csvReader",
        "getValues",
        "periodiquesToCreate",
        "add",
        "generatePeriodiqueFromCsvValues",
        "values",
        "e",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "ERROR",
        "e",
        "getMessage",
        "LOGGER",
        "error",
        "e",
        "getMessage",
        "counterImported",
        "itPeriodique",
        "periodiquesToCreate",
        "importStatus",
        "itPeriodique",
        "checkAndPerformCreate",
        "channel",
        "getCurrentLoggedMember",
        "importStatus",
        "isOK",
        "LOGGER",
        "warn",
        "itPeriodique",
        "getTitle",
        "importStatus",
        "getMessage",
        "channel",
        "getCurrentUserLang",
        "counterImported",
        "counterImported",
        "periodiquesToCreate",
        "size",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "SUCCESS",
        "periodiquesToCreate",
        "size",
        "channel",
        "getCurrentJcmsContext",
        "addMsgSession",
        "JcmsMessage",
        "Level",
        "WARN",
        "counterImported",
        "periodiquesToCreate",
        "size"
    ],
    "literals": [
        "\"##\"",
        "\"UTF-8\"",
        "\"Le fichier CSV doit avoir 20 colonnes, et il n'en a que \"",
        "\"Le titre (champ obligatoire) est vide. # \"",
        "\"La cote de périodique (champ obligatoire) est vide. # \"",
        "\"Les dates extrêmes de la collection (champ obligatoire) sont vides. # \"",
        "\"Le champ Inventaire de la collection présente un contenu incorrect (il n'existe pas ou ne pointe pas sur un document) # \"",
        "\"$jcmsplugin.archives.category.periodique.frequenceparution\"",
        "\"Le champ Fréquence parution présente une catégorie incorrecte (mauvaise branche ou ID n'existant pas) # \"",
        "\"Le champ Ancien titre présente des contenus incorrects (un ou plusieurs contenus n'existent pas / ne sont pas des Périodiques) # \"",
        "\"Le champ Titre devenu présente des contenus incorrects (un ou plusieurs contenus n'existent pas / ne sont pas des Périodiques) # \"",
        "\"Le champ Siège du journal présente un contenu incorrect (il n'existe pas ou ne pointe pas sur une commune) # \"",
        "\"$jcmsplugin.archives.category.periodique.theme\"",
        "\"Le champ Thème présente une ou des catégories incorrectes (mauvaise branche ou IDs n'existant pas) # \"",
        "\"$jcmsplugin.archives.category.periodique.tendancespolitiques\"",
        "\"Le champ Tendances politiques présente une ou des catégories incorrectes (mauvaise branche ou IDs n'existant pas) # \"",
        "\"$jcmsplugin.archives.category.periodique.periode\"",
        "\"Le champ Période présente une ou des catégories incorrectes (mauvaise branche ou IDs n'existant pas) # \"",
        "\"Le champ Communes concernées présente des contenus incorrects (un ou plusieurs contenus n'existent pas / ne sont pas des Communes) # \"",
        "\"Ligne \"",
        "\"Erreur lors de la lecture du CSV : \"",
        "\"Le fichier CSV est correct !\"",
        "\"\"",
        "\"\"",
        "\"Le fichier contient une ligne incorrecte [ligne \"",
        "\"], nombre de colonnes différent de 26 \\r\\n\"",
        "\"\\r\\n\"",
        "\"Le fichier contient des lignes en erreur.\"",
        "\"La syntaxe du fichier est correcte.\"",
        "\"traceImport\"",
        "\"Impossible de trouver le fichier\"",
        "\"Erreur lors de la lecture du fichier\"",
        "\"traceImport\"",
        "\"oui\"",
        "\"oui\"",
        "\"Erreur lors de la lecture du CSV : \"",
        "\"Erreur sur importFichesLieuCsv : \"",
        "\"Anomalie lors de l'import du lieu \"",
        "\" : \"",
        "\"Un total de \"",
        "\" fiches lieux ont été créées.\"",
        "\"Un total de \"",
        "\" fiches lieux ont été créées sur les \"",
        "\" possibles. Veuillez inspecter les logs.\""
    ],
    "variables": [
        "csvReader",
        "values",
        "lineLog",
        "values",
        "values"
    ],
    "comments": [
        "ne pas lire la ligne des headers",
        "titre",
        "cote de périodique",
        "dates extrêmes de la collection",
        "Inventaire de la collection",
        "Fréquence parution",
        "Ancien titre",
        "Titre devenu",
        "Siège du journal",
        "Thème",
        "Tendances politiques",
        "Période",
        "Communes concernées",
        "On vérifie le nombre de colonnes",
        "Titre",
        "Image bandeau",
        "Copyright",
        "Légende",
        "Texte alternatif",
        "Cote de périodique",
        "Dates extrêmes de la collection",
        "Dates extrêmes de la collection numérisée",
        "Inventaire de la collection",
        "Fréquence parution",
        "Ancien titre",
        "Titre devenu",
        "Notes",
        "Siège",
        "Numérisé",
        "Thème",
        "Tendances politiques",
        "Période",
        "Communes concernées",
        "Toutes les communes",
        "ne pas lire la ligne des headers"
    ],
    "docstrings": [
        "* Liste des valeurs attendues dans le CSV\n     * 0 Titre - String - obligatoire\n     * 1 Image bandeau - String\n     * 2 Copyright - String\n     * 3 Légende - String\n     * 4 Texte alternatif - String\n     * 5 Cote de périodique - String - obligatoire\n     * 6 Dates extrêmes de la collection - String - Obligatoire\n     * 7 Dates extrêmes de la collection numérisée - String\n     * 8 Inventaire de la collection - FileDocument\n     * 9 Fréquence parution - Category - Obligatoire\n     * 10 Ancien titre - Periodique[]\n     * 11 Titre devenu - Periodique[]\n     * 12 Notes - String\n     * 13 Siège du journal - City\n     * 14 Numérisé - boolean oui/non\n     * 15 Thème - Category[] - Obligatoire\n     * 16 Tendances politiques - Category[]\n     * 17 Période - Category[] - Obligatoire\n     * 18 Communes concernées - City[]\n     * 19 Toutes les communes du département - boolean oui/non",
        "* Va renvoyer différents logs informatifs pour informer l'utilisateur\n     * de l'état du CSV et des lignes en erreur\n     * sans effectuer d'import de données",
        "* Champs à surveiller :\n                     * \n                     * 0 Titre - String - obligatoire\n                     * 5 Cote de périodique - String - obligatoire\n                     * 6 Dates extrêmes de la collection - String - Obligatoire\n                     * 8 Inventaire de la collection - FileDocument\n                     * 9 Fréquence parution - Category - Obligatoire\n                     * 10 Ancien titre - Periodique[]\n                     * 11 Titre devenu - Periodique[]\n                     * 13 Siège du journal - City\n                     * 15 Thème - Category[] - Obligatoire\n                     * 16 Tendances politiques - Category[]\n                     * 17 Période - Category[] - Obligatoire\n                     * 18 Communes concernées - City[]",
        "* Vérifie si une liste d'IDs de contenus représente une liste correcte de contenus\n     * Incorrect si un contenu n'existe pas ou n'est pas du type indiqué\n     * @param string\n     * @param type\n     * @return",
        "* Vérifie si une liste d'IDs de catégorie représente une liste correcte de catégories\n     * Incorrect si une catégorie n'existe pas ou si la branche d'une catégorie est incorrecte\n     * @param string\n     * @return",
        "* Générer une fiche lieu à partir des valeurs d'une ligne CSV\n     * @param values",
        "* 18 Communes concernées - City[]\n        * 19 Toutes les communes du département - boolean oui/non",
        "* Procéder à l'import de fiches lieu via CSV\n     * Assume que le fichier a été vérifié au préalable\n     * @param fileItem"
    ],
    "functions": [
        "checkCsvImport",
        "contentCheck",
        "categoryCheck",
        "fileIsNotCorrectCsv",
        "Periodique",
        "generatePeriodiqueFromCsvValues",
        "importPeriodiquesCsv"
    ],
    "classes": [
        "ImportPeriodiqueFromCsv"
    ]
}