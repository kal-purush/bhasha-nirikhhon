{
    "identifiers": [
        "pathlib",
        "Path",
        "typing",
        "Tuple",
        "exasol_integration_test_docker_environment",
        "cli",
        "cli",
        "cli",
        "exasol_integration_test_docker_environment",
        "cli",
        "common",
        "add_options",
        "import_build_steps",
        "set_build_config",
        "set_docker_repository_config",
        "generate_root_task",
        "run_task",
        "exasol_integration_test_docker_environment",
        "cli",
        "options",
        "build_options",
        "build_options",
        "exasol_integration_test_docker_environment",
        "cli",
        "options",
        "docker_repository_options",
        "docker_repository_options",
        "exasol_integration_test_docker_environment",
        "cli",
        "options",
        "system_options",
        "system_options",
        "exasol_script_languages_container_tool",
        "cli",
        "options",
        "flavor_options",
        "flavor_options",
        "exasol_script_languages_container_tool",
        "lib",
        "tasks",
        "security_scan",
        "security_scan",
        "SecurityScan",
        "exasol_script_languages_container_tool",
        "lib",
        "utils",
        "logging_redirection",
        "log_redirector_task_creator_wrapper",
        "cli",
        "command",
        "add_options",
        "flavor_options",
        "add_options",
        "build_options",
        "add_options",
        "docker_repository_options",
        "add_options",
        "system_options",
        "flavor_path",
        "Tuple",
        "force_rebuild",
        "force_rebuild_from",
        "Tuple",
        "force_pull",
        "output_directory",
        "temporary_base_directory",
        "log_build_context_content",
        "cache_directory",
        "build_name",
        "source_docker_repository_name",
        "source_docker_tag_prefix",
        "source_docker_username",
        "source_docker_password",
        "target_docker_repository_name",
        "target_docker_tag_prefix",
        "target_docker_username",
        "target_docker_password",
        "workers",
        "task_dependencies_dot_file",
        "import_build_steps",
        "flavor_path",
        "set_build_config",
        "force_rebuild",
        "force_rebuild_from",
        "force_pull",
        "log_build_context_content",
        "output_directory",
        "temporary_base_directory",
        "cache_directory",
        "build_name",
        "set_docker_repository_config",
        "source_docker_password",
        "source_docker_repository_name",
        "source_docker_username",
        "source_docker_tag_prefix",
        "set_docker_repository_config",
        "target_docker_password",
        "target_docker_repository_name",
        "target_docker_username",
        "target_docker_tag_prefix",
        "Path",
        "output_directory",
        "joinpath",
        "log_redirector_task_creator_wrapper",
        "generate_root_task",
        "task_class",
        "SecurityScan",
        "flavor_paths",
        "flavor_path",
        "report_path",
        "report_path",
        "run_task",
        "task_creator",
        "workers",
        "task_dependencies_dot_file",
        "success",
        "task",
        "security_report_target",
        "open",
        "f",
        "f",
        "read",
        "report_path",
        "success",
        "exit"
    ],
    "literals": [
        "\"source\"",
        "\"target\"",
        "\"security_scan\"",
        "\"r\"",
        "f'Full security scan report can be found at:{report_path}'"
    ],
    "variables": [
        "report_path",
        "task_creator",
        "success",
        "task"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    This command executes the security scan, which must be defined as separate step in the build steps declaration.\n    The scan runs the docker container of the respective step, passing a folder of the output-dir as argument.\n    If the stages do not exists locally, the system will build or pull them before running the scan.\n    \"\"\""
    ],
    "functions": [
        "security_scan"
    ],
    "classes": []
}