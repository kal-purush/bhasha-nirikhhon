{
    "identifiers": [
        "Collection",
        "Entity",
        "LoadStrategy",
        "ManyToOne",
        "MikroORM",
        "OneToMany",
        "PrimaryKey",
        "Property",
        "SqliteDriver",
        "mockLogger",
        "Entity",
        "PrimaryKey",
        "Property",
        "OneToMany",
        "Collection",
        "Entity",
        "PrimaryKey",
        "Property",
        "ManyToOne",
        "Author",
        "OneToMany",
        "Collection",
        "title",
        "title",
        "Entity",
        "PrimaryKey",
        "ManyToOne",
        "Book",
        "Property",
        "text",
        "text",
        "orm",
        "Author",
        "author",
        "Page",
        "Book",
        "book",
        "page",
        "author",
        "book",
        "orm",
        "author",
        "orm",
        "describe",
        "beforeAll",
        "orm",
        "MikroORM",
        "Author",
        "Book",
        "Page",
        "LoadStrategy",
        "afterAll",
        "orm",
        "beforeEach",
        "orm",
        "orm",
        "test",
        "createEntities",
        "orm",
        "mockLogger",
        "orm",
        "orm",
        "Author",
        "Book",
        "author",
        "book",
        "oldPages",
        "author",
        "book",
        "orm",
        "orm",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "orm",
        "Author",
        "expect",
        "author",
        "test",
        "createEntities",
        "orm",
        "mockLogger",
        "orm",
        "orm",
        "Author",
        "Book",
        "Page",
        "book",
        "page2",
        "author",
        "author",
        "book",
        "orm",
        "orm",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "orm",
        "Author",
        "expect",
        "author",
        "test",
        "createEntities",
        "orm",
        "mockLogger",
        "orm",
        "orm",
        "Author",
        "Book",
        "Page",
        "book",
        "page2",
        "author",
        "book",
        "orm",
        "orm",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "expect",
        "mock",
        "orm",
        "Author",
        "expect",
        "author"
    ],
    "literals": [
        "'@mikro-orm/core'",
        "'@mikro-orm/sqlite'",
        "'../helpers'",
        "string",
        "'Book'",
        "'author'",
        "string",
        "'Page'",
        "'book'",
        "string",
        "string",
        "string",
        "'John'",
        "'p1'",
        "'b1'",
        "'GH issue 1126'",
        "'sqlite'",
        "':memory:'",
        "1/3",
        "'query'",
        "'b2'",
        "'select `a0`.`id`, `a0`.`name`, `b1`.`id` as `b1__id`, `b1`.`title` as `b1__title`, `b1`.`author_id` as `b1__author_id`, `p2`.`id` as `p2__id`, `p2`.`book_id` as `p2__book_id`, `p2`.`text` as `p2__text` from `author` as `a0` left join `book` as `b1` on `a0`.`id` = `b1`.`author_id` left join `page` as `p2` on `b1`.`id` = `p2`.`book_id` where `a0`.`id` = ?'",
        "'begin'",
        "'insert into `book` (`author_id`, `title`) values (?, ?)'",
        "'update `page` set `book_id` = ? where `id` = ?'",
        "'delete from `book` where `id` in (?)'",
        "'commit'",
        "2/3",
        "'query'",
        "'b2'",
        "'p2'",
        "'select `a0`.`id`, `a0`.`name`, `b1`.`id` as `b1__id`, `b1`.`title` as `b1__title`, `b1`.`author_id` as `b1__author_id`, `p2`.`id` as `p2__id`, `p2`.`book_id` as `p2__book_id`, `p2`.`text` as `p2__text` from `author` as `a0` left join `book` as `b1` on `a0`.`id` = `b1`.`author_id` left join `page` as `p2` on `b1`.`id` = `p2`.`book_id` where `a0`.`id` = ?'",
        "'begin'",
        "'insert into `book` (`author_id`, `title`) values (?, ?)'",
        "'insert into `page` (`book_id`, `text`) values (?, ?)'",
        "'delete from `page` where `id` in (?)'",
        "'delete from `book` where `id` in (?)'",
        "'commit'",
        "3/3",
        "'query'",
        "'b2'",
        "'p2'",
        "'select `a0`.`id`, `a0`.`name`, `b1`.`id` as `b1__id`, `b1`.`title` as `b1__title`, `b1`.`author_id` as `b1__author_id`, `p2`.`id` as `p2__id`, `p2`.`book_id` as `p2__book_id`, `p2`.`text` as `p2__text` from `author` as `a0` left join `book` as `b1` on `a0`.`id` = `b1`.`author_id` left join `page` as `p2` on `b1`.`id` = `p2`.`book_id` where `a0`.`id` = ?'",
        "'begin'",
        "'insert into `book` (`author_id`, `title`) values (?, ?)'",
        "'insert into `page` (`book_id`, `text`) values (?, ?)'",
        "'delete from `page` where `id` in (?)'",
        "'delete from `book` where `id` in (?)'",
        "'commit'"
    ],
    "variables": [
        "author",
        "page",
        "book",
        "orm",
        "mock",
        "author",
        "book",
        "oldPages",
        "author",
        "mock",
        "author",
        "book",
        "page2",
        "author",
        "mock",
        "author",
        "book",
        "page2",
        "author"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "createEntities"
    ],
    "classes": [
        "Author",
        "Book",
        "Page"
    ]
}