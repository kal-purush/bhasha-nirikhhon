{
    "identifiers": [
        "data_init",
        "normalize_for_cnn",
        "tensorflow",
        "keras",
        "random",
        "numpy",
        "np",
        "sklearn",
        "metrics",
        "classification_report",
        "normalize_for_cnn",
        "random",
        "shuffle",
        "normalized_dataSet",
        "normalized_dataSet",
        "len",
        "normalized_dataSet",
        "normalized_dataSet",
        "len",
        "train_data",
        "len",
        "normalized_dataSet",
        "normalized_dataSet",
        "len",
        "test_data",
        "len",
        "train_data",
        "i",
        "len",
        "train_data",
        "xTrain",
        "append",
        "train_data",
        "i",
        "yTrain",
        "append",
        "train_data",
        "i",
        "i",
        "len",
        "test_data",
        "xTest",
        "append",
        "test_data",
        "i",
        "yTest",
        "append",
        "test_data",
        "i",
        "i",
        "len",
        "validate_data",
        "xVali",
        "append",
        "validate_data",
        "i",
        "yVali",
        "append",
        "validate_data",
        "i",
        "xTrain",
        "yTrain",
        "xTest",
        "yTest",
        "xVali",
        "yVali",
        "keras",
        "Sequential",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "keras",
        "Sequential",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "keras",
        "Sequential",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "keras",
        "Sequential",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "models",
        "append",
        "model_arch_1",
        "models",
        "append",
        "model_arch_2",
        "models",
        "append",
        "model_arch_3",
        "models",
        "append",
        "model_arch_4",
        "j",
        "len",
        "models",
        "i",
        "cnn_parser",
        "models",
        "j",
        "model",
        "add",
        "keras",
        "layers",
        "Flatten",
        "model",
        "add",
        "keras",
        "layers",
        "Dense",
        "activation",
        "model",
        "add",
        "keras",
        "layers",
        "Dense",
        "activation",
        "model",
        "compile",
        "loss",
        "optimizer",
        "metrics",
        "model",
        "fit",
        "np",
        "array",
        "xTrain",
        "np",
        "array",
        "yTrain",
        "epochs",
        "validation_data",
        "np",
        "array",
        "xVali",
        "np",
        "array",
        "yVali",
        "batch_size",
        "model",
        "evaluate",
        "np",
        "array",
        "xTest",
        "np",
        "array",
        "yTest",
        "local_acc",
        "append",
        "acc",
        "accuracy_list",
        "append",
        "local_acc",
        "model",
        "predict",
        "np",
        "array",
        "xTest",
        "i",
        "len",
        "Y_pred",
        "y_labels_predicted",
        "append",
        "np",
        "argmax",
        "Y_pred",
        "i",
        "y_labels_actual",
        "append",
        "np",
        "argmax",
        "yTest",
        "i",
        "classification_report",
        "y_labels_actual",
        "y_labels_predicted",
        "local_acc",
        "accuracy_list",
        "i",
        "len",
        "models",
        "open",
        "models",
        "i",
        "summary",
        "print_fn",
        "x",
        "write",
        "x",
        "write",
        "write",
        "accuracy_list",
        "i",
        "models",
        "i",
        "summary",
        "run_archituctures"
    ],
    "literals": [
        "'relu'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'relu'",
        "'softmax'",
        "'categorical_crossentropy'",
        "'adam'",
        "'accuracy'",
        "'reports/cnn.txt'",
        "'a'",
        "'\\n'",
        "\"Train Accuracy : \"",
        "\"%\""
    ],
    "variables": [
        "accuracy_list",
        "normalized_dataSet",
        "train_data",
        "test_data",
        "validate_data",
        "xTrain",
        "yTrain",
        "xTest",
        "yTest",
        "xVali",
        "yVali",
        "model",
        "model",
        "model",
        "model",
        "models",
        "local_acc",
        "xTrain",
        "yTrain",
        "xTest",
        "yTest",
        "xVali",
        "yVali",
        "model",
        "loss",
        "acc",
        "Y_pred",
        "y_labels_predicted",
        "y_labels_actual"
    ],
    "comments": [
        "Input Layers",
        "Input Layers",
        "Input Layers",
        "Input Layers",
        "Shuffle Data",
        "Get Architucture",
        "Output Layers",
        "Test Part",
        "Pass the file handle in as a lambda function to make it callable"
    ],
    "docstrings": [],
    "functions": [
        "cnn_parser",
        "model_arch_1",
        "model_arch_2",
        "model_arch_3",
        "model_arch_4",
        "run_archituctures"
    ],
    "classes": []
}